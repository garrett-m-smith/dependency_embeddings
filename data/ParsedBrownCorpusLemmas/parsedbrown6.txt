case(division, in)
det(division, the)
amod(Products, Industrial)
compound(division, Products)
obl(line, division)
punct(line, ,)
det(manufacture, the)
compound(manufacture, company)
nsubj(line, manufacture)
cc(market, and)
conj(manufacture, market)
det(line, a)
amod(line, wide)
root(ROOT, line)
case(equipment, of)
compound(gage, precision)
compound(equipment, gage)
cc(inspection, and)
conj(gage, inspection)
nmod(line, equipment)
punct(equipment, ,)
nmod:poss(tool, machinist)
case(machinist, 's)
appos(equipment, tool)
punct(tool, --)
case(micrometer, include)
nmod(tool, micrometer)
punct(caliper, ,)
compound(caliper, Vernier)
conj(micrometer, caliper)
punct(accessory, ,)
cc(accessory, and)
conj(micrometer, accessory)
punct(line, .)
case(division, in)
det(division, the)
compound(tool, cut)
compound(division, tool)
obl(include, division)
punct(include, ,)
det(product, the)
amod(product, principal)
nsubj(include, product)
root(ROOT, include)
det(variety, a)
amod(variety, wide)
obj(include, variety)
case(cutter, of)
amod(speed, high)
compound(cutter, speed)
compound(cutter, steel)
compound(cutter, milling)
nmod(variety, cutter)
punct(mill, ,)
compound(mill, end)
conj(cutter, mill)
cc(saw, and)
conj(cutter, saw)
punct(sale, .)
compound(income, sale)
cc(income, and)
amod(income, net)
nsubj(end, income)
case(year, for)
det(year, the)
nmod(income, year)
parataxis(include, end)
obl:tmod(end, December)
nummod(December, 31)
punct(December, ,)
nummod(December, 1960)
parataxis(end, show)
det(improvement, a)
obj(show, improvement)
case(1959, over)
nmod(improvement, 1959)
punct($, .)
amod(income, net)
nsubj($, income)
cop($, be)
parataxis(show, $)
nummod($, 2,557,111)
punct($, ,)
cc($, or)
conj($, $)
nummod($, 3.11)
case(share, per)
nmod($, share)
case(share, on)
nummod(share, 821,220)
amod(share, common)
nmod(share, share)
advmod(outstanding, currently)
amod(share, outstanding)
punct(share, ,)
case($, as)
case($, compare)
case($, to)
nmod(share, $)
nummod($, 2,323,867)
cc($, or)
conj($, $)
nummod($, 2.82)
case(share, per)
nmod($, share)
case(1959, in)
nmod($, 1959)
punct(adjust, ,)
acl($, adjust)
case(number, to)
det(number, the)
amod(number, same)
obl(adjust, number)
case(share, of)
nmod(number, share)
punct(sale, .)
nmod(number, sale)
cc(income, and)
amod(income, other)
compound(income, operating)
conj(sale, income)
acl(income, increase)
nummod(%, 25.1)
obj(increase, %)
case($, from)
obl(increase, $)
nummod($, 24,926,615)
case(1959, in)
nmod($, 1959)
case($, to)
nmod($, $)
nummod($, 31,179,816)
case(1960, in)
nmod($, 1960)
punct(sufficient, .)
det(increase, this)
nsubj(sufficient, increase)
cop(sufficient, be)
parataxis(increase, sufficient)
mark(overcome, to)
xcomp(sufficient, overcome)
det(effect, the)
obj(overcome, effect)
case(income, on)
amod(income, net)
nmod(effect, income)
case(cost, of)
amod(cost, higher)
nmod(income, cost)
case(manufacture, of)
nmod(cost, manufacture)
cc(expenditure, and)
amod(expenditure, increase)
conj(manufacture, expenditure)
case(research, on)
nmod(expenditure, research)
cc(development, and)
conj(research, development)
punct(include, .)
case(spite, in)
obl(able, spite)
case(fact, of)
det(fact, the)
nmod(spite, fact)
mark(affect, that)
nmod:poss(market, we)
amod(market, largest)
nsubj:pass(affect, market)
punct(market, ,)
det(industry, the)
compound(industry, textile)
appos(market, industry)
punct(affect, ,)
aux:pass(affect, be)
acl(fact, affect)
advmod(affect, substantially)
case(decline, by)
det(decline, the)
amod(decline, current)
obl(affect, decline)
case(activity, in)
compound(activity, business)
nmod(decline, activity)
punct(able, ,)
nsubj(able, we)
aux(able, have)
cop(able, be)
root(ROOT, able)
mark(produce, to)
xcomp(able, produce)
cc(deliver, and)
conj(produce, deliver)
nmod:poss(machine, we)
obj(deliver, machine)
case(year, throughout)
det(year, the)
obl(deliver, year)
nummod(year, 1960)
case(rate, at)
det(rate, a)
obl(higher, rate)
advmod(higher, materially)
advmod(produce, higher)
case(1959, than)
case(1959, during)
obl(higher, 1959)
punct(able, .)
nsubj(contract, Outlook)
case(year, for)
amod(year, current)
nmod(Outlook, year)
nmod:poss(rate, we)
amod(rate, current)
nsubj(contract, rate)
case(order, of)
amod(order, income)
nmod(rate, order)
aux(contract, have)
advmod(contract, now)
root(ROOT, contract)
cc(lower, and)
mark(reverse, unless)
det(trend, this)
nsubj:pass(reverse, trend)
aux(reverse, can)
aux:pass(reverse, be)
advcl(lower, reverse)
punct(lower, ,)
nmod:poss(production, we)
nsubj(lower, production)
case(1961, for)
nmod(production, 1961)
aux(lower, will)
cop(lower, be)
conj(contract, lower)
case(1960, than)
case(1960, for)
obl(lower, 1960)
punct(contract, .)
advmod(lend, however)
punct(lend, ,)
det(position, the)
amod(position, healthy)
compound(position, inventory)
nsubj(lend, position)
case(industry, of)
det(industry, the)
compound(industry, textile)
nmod(position, industry)
root(ROOT, lend)
obj(lend, support)
case(belief, to)
det(belief, the)
advmod(express, broadly)
amod(belief, express)
nmod(support, belief)
mark(expect, that)
nsubj:pass(expect, improvement)
case(industry, in)
det(industry, that)
nmod(improvement, industry)
aux(expect, can)
aux:pass(expect, be)
acl(belief, expect)
case(half, by)
det(half, the)
amod(half, second)
obl(expect, half)
case(1961, of)
nmod(half, 1961)
punct(need, .)
conj(expect, need)
case(policy, for)
compound(policy, sound)
compound(policy, tax)
obl(need, policy)
case(connection, in)
obl(need, connection)
case(development, with)
nmod:poss(development, we)
amod(development, continue)
nmod(connection, development)
case(machinery, of)
amod(machinery, new)
cc(efficient, and)
advmod(efficient, more)
conj(new, efficient)
compound(machinery, mill)
nmod(development, machinery)
punct(machinery, ,)
det(policy, a)
amod(policy, sounder)
compound(income, U.)
compound(income, S.)
compound(policy, income)
compound(policy, tax)
appos(machinery, policy)
case(depreciation, on)
nmod(policy, depreciation)
case(equipment, of)
compound(equipment, production)
nmod(depreciation, equipment)
punct(charge, ,)
acl(policy, enable)
det(mill, the)
obj(enable, mill)
mark(charge, to)
xcomp(enable, charge)
compound:prt(charge, off)
det(cost, the)
obj(charge, cost)
case(machine, of)
amod(machine, new)
nmod(cost, machine)
case(basis, on)
det(basis, a)
advmod(realistic, more)
amod(basis, realistic)
nmod(cost, basis)
punct(could, ,)
aux(have, could)
punct(have, ,)
mark(adopt, if)
advcl(have, adopt)
punct(have, ,)
advcl(charge, have)
amod(effect, favorable)
obj(have, effect)
case(business, on)
nmod:poss(business, Leesona)
case(Leesona, 's)
nmod(effect, business)
case(year, in)
det(year, the)
amod(year, next)
amod(year, few)
obl(have, year)
punct(lend, .)
det:predet(policy, such)
det(policy, a)
compound(policy, depreciation)
nsubj(prove, policy)
aux(prove, would)
advmod(prove, also)
punct(prove, ,)
nsubj(believe, we)
parataxis(prove, believe)
punct(prove, ,)
root(ROOT, prove)
det(factor, a)
advmod(important, very)
amod(factor, important)
obj(prove, factor)
mark(strengthen, in)
acl(factor, strengthen)
det(position, the)
amod(position, competitive)
obj(strengthen, position)
case(industry, of)
det(industry, the)
compound(textile, U.)
compound(textile, S.)
compound(industry, textile)
cc(industry, and)
amod(industry, other)
nmod(position, industry)
punct(strengthen, ,)
advmod(help, thus)
conj(strengthen, help)
mark(strengthen, to)
xcomp(help, strengthen)
det(position, the)
obj(strengthen, position)
case(dollar, of)
det(dollar, the)
nmod(position, dollar)
case(exchange, in)
amod(exchange, foreign)
nmod(dollar, exchange)
punct(prove, .)
nsubj(continue, Research)
cc(development, and)
conj(Research, development)
nmod:poss(program, we)
compound(program, research)
cc(development, and)
conj(research, development)
appos(Research, program)
punct(program, ,)
acl(program, serve)
mark(do, as)
nsubj(do, it)
advcl(serve, do)
det(industry, a)
obj(do, industry)
nsubj(compete, which)
aux(compete, must)
acl:relcl(industry, compete)
case(production, against)
amod(cost, low)
punct(cost, -)
compound(production, cost)
obl(compete, production)
case(world, throughout)
det(world, the)
nmod(production, world)
punct(continue, ,)
root(ROOT, continue)
mark(have, to)
xcomp(continue, have)
amod(emphasis, primary)
obj(have, emphasis)
case(Leesona, at)
nmod(emphasis, Leesona)
punct(base, .)
det(program, this)
nsubj:pass(base, program)
aux:pass(base, be)
acl:relcl(emphasis, base)
case(policy, on)
det(policy, the)
obl(base, policy)
mark(design, of)
acl(policy, design)
cc(efficient, and)
obl:npmod(efficient, building)
amod(machine, efficient)
obj(design, machine)
nsubj(help, which)
aux(help, will)
acl:relcl(machine, help)
xcomp(help, produce)
amod(value, better)
compound(value, textile)
obj(produce, value)
punct(value, --)
appos(value, fabric)
nmod:poss(cost, whose)
nsubj(provide, cost)
case(relation, in)
nmod(cost, relation)
case(quality, to)
nmod(relation, quality)
punct(fashion, ,)
conj(quality, fashion)
cc(utility, and)
conj(quality, utility)
acl:relcl(fabric, provide)
det(consumer, the)
obj(provide, consumer)
case(product, with)
amod(product, better)
compound(product, textile)
nmod(consumer, product)
case(money, for)
det(money, the)
nmod(product, money)
punct(involve, .)
amod(policy, such)
nsubj(involve, policy)
acl:relcl(product, involve)
amod(effort, continue)
obj(involve, effort)
mark(improve, to)
acl(effort, improve)
mark(exist, on)
amod(equipment, exist)
compound(equipment, mill)
obl(improve, equipment)
punct(improve, ,)
case(term, in)
obl(improve, term)
case(efficiency, of)
nmod(term, efficiency)
cc(versatility, and)
conj(efficiency, versatility)
punct(involve, .)
cc(concentrate, but)
advmod(important, more)
advmod(concentrate, important)
punct(believe, ,)
nsubj(believe, we)
parataxis(important, believe)
punct(concentrate, ,)
nsubj(concentrate, it)
aux(concentrate, must)
root(ROOT, concentrate)
case(development, on)
det(development, the)
obl(concentrate, development)
case(concept, of)
advmod(new, entirely)
amod(concept, new)
nmod(development, concept)
case(processing, in)
compound(processing, textile)
nmod(concept, processing)
mark(do, as)
advcl(concentrate, do)
det(winder, the)
compound(winder, Unifil)
compound(winder, loom)
obj(do, winder)
cc(machine, and)
nmod:poss(machine, we)
advmod(recent, more)
amod(machine, recent)
compound(machine, Uniconer)
amod(machine, automatic)
compound(machine, cone)
conj(winder, machine)
punct(concentrate, .)
nsubj:pass(increase, budget)
acl(budget, increase)
case(basis, on)
det(basis, this)
obl(increase, basis)
punct(increase, ,)
nmod:poss(budget, we)
advmod(substantial, already)
amod(budget, substantial)
nsubj:pass(increase, budget)
case(research, for)
nmod(budget, research)
cc(development, and)
conj(research, development)
aux(increase, have)
aux:pass(increase, be)
advmod(increase, further)
root(ROOT, increase)
case(year, in)
amod(year, recent)
obl(increase, year)
mark(finance, in)
fixed(in, order)
mark(finance, to)
advcl(increase, finance)
det(engineering, the)
amod(engineering, continue)
obj(finance, engineering)
cc(work, and)
compound(work, design)
conj(engineering, work)
amod(work, essential)
case(growth, to)
nmod:poss(growth, Leesona)
case(Leesona, 's)
amod(growth, future)
obl(essential, growth)
case(sale, in)
nmod(growth, sale)
cc(earning, and)
conj(sale, earning)
punct(sale, .)
amod(growth, much)
case(increase, of)
det(increase, this)
amod(increase, necessary)
obl(much, increase)
case(research, in)
nmod(increase, research)
cc(development, and)
conj(research, development)
punct(chargeable, ,)
mark(chargeable, though)
advmod(chargeable, properly)
acl(increase, chargeable)
case(expense, to)
amod(expense, current)
obl(chargeable, expense)
punct(reflect, ,)
aux:pass(reflect, be)
advmod(reflect, not)
conj(chargeable, reflect)
case(earning, in)
obl(reflect, earning)
mark(complete, until)
nsubj:pass(complete, project)
aux:pass(complete, be)
advcl(reflect, complete)
cc(machine, and)
det(machine, the)
amod(machine, new)
conj(complete, machine)
acl(machine, sell)
case(quantity, in)
obl(sell, quantity)
punct(sell, ,)
advmod(period, usually)
case(period, over)
det(period, a)
obl(sell, period)
case(year, of)
amod(year, several)
nmod(period, year)
punct(increase, .)
root(ROOT, stretch)
compound(machine, yarn)
obj(stretch, machine)
case(December, in)
obl(stretch, December)
nsubj(begin, we)
parataxis(stretch, begin)
mark(ship, to)
xcomp(begin, ship)
nmod:poss(machine, we)
amod(speed, ultra-high)
punct(speed, -)
compound(machine, speed)
compound(yarn, stretch)
compound(machine, yarn)
obj(ship, machine)
punct(stretch, .)
det(machine, these)
nsubj(produce, machine)
root(ROOT, produce)
det(yarn, the)
amod(yarn, higher)
compound(yarn, quality)
compound(yarn, stretch)
obj(produce, yarn)
acl(yarn, require)
case(stretch, in)
compound(stretch, weav)
obl(require, stretch)
cc(fabric, and)
amod(fabric, texture)
conj(stretch, fabric)
punct(produce, .)
case(year, during)
det(year, the)
amod(year, past)
obl(make, year)
punct(make, ,)
amod(progress, great)
nsubj:pass(make, progress)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
case(mill, by)
det(mill, the)
compound(mill, weav)
obl(make, mill)
mark(create, in)
acl(mill, create)
amod(fabric, new)
compound(fabric, stretch)
cc(texture, and)
conj(stretch, texture)
obj(create, fabric)
punct(make, . )
compound(center, Fashion)
nsubj(predict, center)
aux(predict, be)
advmod(predict, now)
root(ROOT, predict)
amod(acceptance, broad)
obj(predict, acceptance)
case(apparel, of)
compound(apparel, sport)
nmod(acceptance, apparel)
cc(improve, and)
conj(predict, improve)
punct(wash, ``)
xcomp(improve, wash)
cc(wear, and)
conj(wash, wear)
punct(wash, '')
obj(wash, dress)
cc(blous, and)
conj(dress, blous)
acl(dress, make)
case(fabric, from)
det(fabric, these)
obl(make, fabric)
punct(predict, .)
det(machine, this)
nsubj:pass(believe, machine)
punct(machine, ,)
acl(machine, operate)
case(speed, at)
obl(operate, speed)
case(revolution, up)
fixed(up, to)
nummod(revolution, 350,000)
obl(operate, revolution)
case(minute, per)
nmod(revolution, minute)
punct(believe, ,)
aux:pass(believe, be)
root(ROOT, believe)
mark(provide, to)
xcomp(believe, provide)
obj(provide, one)
case(operation, of)
det(operation, the)
amod(operation, fastest)
amod(operation, mechanical)
nmod(one, operation)
case(industry, in)
nmod(operation, industry)
obl:tmod(provide, today)
punct(believe, .)
nsubj(transfer, it)
root(ROOT, transfer)
obj(transfer, yarn)
advmod(transfer, directly)
case(package, from)
det(producer, the)
nmod:poss(package, producer)
case(producer, 's)
amod(package, largest)
obl(transfer, package)
case(package, into)
amod(package, ideal)
compound(package, supply)
nmod(package, package)
case(use, for)
obl(transfer, use)
case(winder, on)
compound(winder, Unifil)
compound(winder, loom)
nmod(use, winder)
case(fabric, in)
compound(stretch, weav)
compound(fabric, stretch)
compound(fabric, yarn)
nmod(winder, fabric)
punct(transfer, .)
amod(package, large)
punct(package, -)
compound(twister, package)
nsubj(perform, twister)
nmod:poss(twister, we)
amod(twister, new)
amod(package, large)
punct(package, -)
compound(twister, package)
compound(twister, ring)
appos(twister, twister)
case(yarn, for)
compound(fiber, glass)
compound(yarn, fiber)
nmod(twister, yarn)
aux(perform, be)
root(ROOT, perform)
advmod(perform, well)
case(mill, in)
nmod:poss(customer, we)
nmod:poss(mill, customer)
case(customer, 's)
obl(perform, mill)
punct(perform, .)
advmod(make, later)
case(year, in)
det(year, the)
obl(make, year)
punct(make, ,)
amod(type, additional)
nsubj:pass(make, type)
case(twister, of)
det(twister, this)
compound(twister, Leesona)
nmod(type, twister)
aux(make, will)
aux:pass(make, be)
root(ROOT, make)
xcomp(make, available)
case(mill, to)
obl(available, mill)
case(fiber, for)
amod(fiber, other)
amod(fiber, man-made)
obl(available, fiber)
cc(yarn, and)
amod(yarn, natural)
conj(fiber, yarn)
punct(make, .)
det(machine, these)
nsubj:pass(design, machine)
aux:pass(design, be)
root(ROOT, design)
mark(provide, to)
advcl(design, provide)
amod(speed, higher)
compound(speed, operating)
obj(provide, speed)
punct(package, ,)
amod(package, larger)
compound(package, yarn)
conj(speed, package)
punct(flexibility, ,)
cc(flexibility, and)
amod(flexibility, greater)
conj(speed, flexibility)
case(application, of)
nmod(flexibility, application)
case(type, to)
amod(type, different)
nmod(flexibility, type)
case(yarn, of)
nmod(type, yarn)
punct(design, .)
nsubj(broaden, this)
nsubj(believe, we)
parataxis(broaden, believe)
aux(broaden, will)
advmod(broaden, substantially)
root(ROOT, broaden)
det(market, the)
amod(market, potential)
obj(broaden, market)
case(equipment, for)
det(equipment, the)
nmod(market, equipment)
punct(broaden, .)
compound(activity, Uniconer)
amod(activity, major)
nsubj(involve, activity)
case(Providence, at)
nmod(activity, Providence)
case(1961, in)
nmod(activity, 1961)
aux(involve, will)
root(ROOT, involve)
det(completion, the)
amod(completion, schedule)
obj(involve, completion)
case(tooling, of)
nmod(completion, tooling)
case(production, for)
nmod(completion, production)
case(machine, of)
det(machine, the)
compound(machine, Uniconer)
amod(machine, automatic)
compound(machine, cone)
nmod(production, machine)
punct(involve, .)
det(work, this)
nsubj(progressing, work)
aux(progressing, be)
root(ROOT, progressing)
case(schedule, on)
obl(progressing, schedule)
cc(expect, and)
nsubj(expect, we)
conj(progressing, expect)
mark(make, to)
xcomp(expect, make)
amod(shipment, initial)
obj(make, shipment)
case(quarter, in)
det(quarter, the)
amod(quarter, fourth)
obl(make, quarter)
case(year, of)
det(year, this)
nmod(quarter, year)
punct(progressing, .)
det(machine, this)
nsubj:pass(demonstrate, machine)
aux:pass(demonstrate, be)
parataxis(progressing, demonstrate)
case(exhibition, in)
nummod(exhibition, two)
compound(machinery, textile)
compound(exhibition, machinery)
obl(demonstrate, exhibition)
amod(year, last)
obl:tmod(demonstrate, year)
cc(receive, and)
aux:pass(receive, be)
advmod(receive, well)
conj(demonstrate, receive)
case(industry, by)
det(industry, the)
obl(receive, industry)
punct(progressing, .)
det(market, the)
amod(market, potential)
nsubj(comparable, market)
case(machine, for)
det(machine, the)
nmod(market, machine)
aux(comparable, should)
cop(comparable, be)
root(ROOT, comparable)
case(that, to)
obl(comparable, that)
case(winder, of)
det(winder, the)
compound(loom, Unifil)
compound(winder, loom)
nmod(that, winder)
punct(comparable, .)
det(Uniconer, the)
nsubj(have, Uniconer)
root(ROOT, have)
amod(feature, several)
amod(feature, outstanding)
obj(have, feature)
punct(have, --)
nsubj(operate, it)
parataxis(have, operate)
case(efficiency, with)
advmod(greater, much)
amod(efficiency, greater)
obl(operate, efficiency)
case(equipment, than)
amod(equipment, exist)
nmod(efficiency, equipment)
punct(have, ;)
punct(have, ;)
nsubj(incorporate, it)
parataxis(have, incorporate)
det(device, a)
amod(device, automatic)
compound(ty, knot)
punct(ty, -)
compound(device, ty)
obj(incorporate, device)
case(spindle, on)
det(spindle, each)
nmod(device, spindle)
punct(knot, ,)
cc(knot, and)
nsubj(knot, it)
aux(knot, will)
conj(incorporate, knot)
det(break, a)
obj(knot, break)
case(yarn, in)
det(yarn, the)
nmod(break, yarn)
case(seconds, in)
nummod(seconds, 10)
obl(knot, seconds)
cc(tie, as)
fixed(as, well)
fixed(as, as)
obl(knot, tie)
case(bobbin, in)
amod(bobbin, new)
nmod(tie, bobbin)
mark(exhaust, as)
det(end, the)
compound(end, running)
nsubj:pass(exhaust, end)
aux:pass(exhaust, be)
acl(tie, exhaust)
punct(have, .)
mark(operation, because)
det(process, the)
compound(process, bobbin)
punct(bobbin, -)
case(cone, to)
punct(cone, -)
compound(process, cone)
compound(process, wind)
nsubj(operation, process)
cop(operation, be)
det(operation, a)
advmod(cost, relatively)
amod(cost, high)
punct(cost, -)
compound(operation, cost)
advcl(mean, operation)
case(mill, for)
det(mill, the)
nmod(operation, mill)
punct(mean, ,)
det(automation, the)
advmod(complete, almost)
amod(automation, complete)
nsubj(mean, automation)
acl(automation, provide)
case(Uniconer, by)
det(Uniconer, the)
obl(provide, Uniconer)
aux(mean, can)
root(ROOT, mean)
amod(economy, important)
obj(mean, economy)
case(production, in)
compound(production, textile)
nmod(economy, production)
punct(mean, ,)
case(time, at)
det(time, the)
amod(time, same)
obl(mean, time)
acl(time, upgrade)
obj(upgrade, quality)
punct(mean, .)
amod(mill, many)
nsubj(place, mill)
aux(place, have)
advmod(place, already)
root(ROOT, place)
amod(order, firm)
obj(place, order)
case(machine, for)
det(machine, this)
nmod(order, machine)
punct(place, .)
compound(Unifil, New)
compound(application, Unifil)
obj(place, application)
det(application, a)
amod(application, new)
appos(application, application)
case(winder, for)
det(winder, the)
compound(winder, Unifil)
compound(winder, loom)
nmod(application, winder)
punct(winder, ,)
acl(winder, run)
amod(fill, single)
obj(run, fill)
case(loom, for)
compound(loom, box)
nmod(fill, loom)
punct(broaden, ,)
aux(broaden, will)
parataxis(place, broaden)
compound(use, mill)
obj(broaden, use)
case(equipment, of)
det(equipment, this)
nmod(use, equipment)
punct(broaden, .)
root(ROOT, take)
punct(take, -)
compound:prt(take, up)
obj(take, machine)
det(machine, a)
amod(machine, new)
compound(up, spin)
compound(up, take)
punct(up, -)
compound(machine, up)
nsubj:pass(develop, machine)
aux(develop, have)
aux:pass(develop, be)
parataxis(take, develop)
mark(facilitate, to)
advcl(develop, facilitate)
det(use, the)
obj(facilitate, use)
case(machine, of)
nmod:poss(machine, we)
compound(up, take)
punct(up, -)
compound(machine, up)
nmod(use, machine)
case(production, in)
det(production, the)
obl(facilitate, production)
case(yarn, of)
amod(yarn, thermoplastic)
nmod(production, yarn)
punct(take, .)
nsubj:pass(equip, it)
aux:pass(equip, be)
root(ROOT, equip)
case(controls, with)
amod(controls, electronic)
obl(equip, controls)
nsubj(set, that)
aux(set, can)
cop(set, be)
acl:relcl(controls, set)
mark(hold, to)
xcomp(set, hold)
amod(tension, precise)
obj(hold, tension)
cc(speed, and)
conj(tension, speed)
punct(equip, .)
det(machine, this)
amod(machine, new)
nsubj(take, machine)
root(ROOT, take)
compound:prt(take, up)
compound(yarn, filament)
obj(take, yarn)
case(spinneret, from)
obl(take, spinneret)
cc(extruder, or)
conj(spinneret, extruder)
cc(wind, and)
conj(take, wind)
amod(package, large)
obj(wind, package)
case(speed, at)
obl(wind, speed)
case(foot, up)
fixed(up, to)
nummod(foot, 6,000)
obl(wind, foot)
case(minute, per)
nmod(foot, minute)
punct(take, .)
nsubj:pass(equip, it)
aux:pass(equip, be)
root(ROOT, equip)
case(device, with)
det(device, a)
amod(device, automatic)
compound(device, thread)
obl(equip, device)
mark(reduce, to)
advcl(equip, reduce)
obj(reduce, waste)
cc(time, and)
compound(time, handling)
conj(waste, time)
punct(equip, .)
nmod:poss(machine, we)
compound(machine, take)
punct(take, -)
compound:prt(take, up)
nsubj(undergo, machine)
cc(coner, and)
nmod:poss(coner, we)
compound(coner, twister)
punct(coner, -)
conj(machine, coner)
aux(undergo, be)
root(ROOT, undergo)
amod(testing, important)
compound(testing, pilot)
compound(testing, plant)
obj(undergo, testing)
case(application, for)
nmod(testing, application)
case(yarn, with)
amod(yarn, new)
amod(polymer, high)
compound(yarn, polymer)
nmod(application, yarn)
punct(undergo, ,)
case(plant, in)
amod(plant, several)
compound(plant, fiber)
compound(plant, produce)
obl(undergo, plant)
punct(undergo, .)
nsubj(look, we)
root(ROOT, look)
advmod(look, forward)
case(position, to)
det(position, a)
amod(position, stronger)
obl(look, position)
case(field, in)
det(field, this)
amod(field, expand)
obl(look, field)
punct(look, .)
nsubj(plan, diversification)
root(ROOT, plan)
nsubj(interested, we)
cop(interested, be)
ccomp(plan, interested)
case(diversification, in)
amod(diversification, further)
obl(interested, diversification)
case(field, into)
amod(field, other)
obl(interested, field)
case(goods, of)
amod(goods, capital)
nmod(field, goods)
punct(component, ,)
cc(component, or)
conj(field, component)
case(product, for)
amod(product, industrial)
nmod(component, product)
punct(intensify, ,)
cc(intensify, and)
aux(intensify, have)
advmod(intensify, recently)
conj(interested, intensify)
nmod:poss(effort, we)
obj(intensify, effort)
case(direction, in)
det(direction, that)
obl(intensify, direction)
punct(plan, .)
parataxis(plan, Patterson)
nsubj(research, Moos)
root(ROOT, research)
nmod:poss(Patterson, we)
compound(division, Patterson)
flat(Patterson, Moos)
compound(division, Research)
nsubj(make, division)
aux(make, have)
ccomp(research, make)
advmod(encourage, further)
advmod(encourage, very)
xcomp(make, encourage)
obj(encourage, progress)
case(development, in)
nmod(progress, development)
case(cell, of)
compound(cell, fuel)
nmod(development, cell)
punct(research, .)
det(cooperation, the)
nsubj(important, cooperation)
case(licensee, of)
nmod:poss(licensee, we)
amod(licensee, exclusive)
amod(licensee, american)
nmod(cooperation, licensee)
punct(licensee, ,)
appos(licensee, Pratt)
cc(Whitney, &)
conj(Pratt, Whitney)
compound(division, aircraft)
appos(licensee, division)
case(Corporation, of)
compound(Corporation, United)
compound(Corporation, aircraft)
nmod(division, Corporation)
punct(important, ,)
aux(important, have)
cop(important, be)
root(ROOT, important)
case(work, in)
det(work, this)
obl(important, work)
punct(important, .)
case(addition, in)
obl(continue, addition)
case(effort, to)
nmod:poss(effort, its)
amod(effort, major)
nmod(addition, effort)
case(cell, on)
compound(cell, fuel)
nmod(effort, cell)
punct(continue, ,)
nmod:poss(division, Patterson)
flat(Patterson, Moos)
compound(division, Research)
nsubj(continue, division)
aux(continue, be)
root(ROOT, continue)
mark(carry, to)
xcomp(continue, carry)
compound:prt(carry, on)
obj(carry, research)
case(field, in)
amod(field, other)
nmod(research, field)
punct(research, ,)
cc:preconj(contract, both)
case(contract, under)
obl(carry, contract)
case(Department, for)
det(Department, the)
compound(Department, Defense)
nmod(contract, Department)
punct(agency, ,)
amod(agency, other)
compound(agency, government)
conj(Department, agency)
cc(account, and)
case(account, for)
nmod:poss(account, we)
amod(account, own)
conj(agency, account)
punct(supply, .)
nsubj(supply, pmr)
aux(supply, be)
advmod(supply, currently)
conj(continue, supply)
obj(supply, component)
amod(component, vital)
case(program, to)
det(program, the)
compound(program, Titan)
cc(Minuteman, and)
conj(Titan, Minuteman)
obl(vital, program)
punct(continue, .)
nsubj(enter, we)
aux(enter, have)
advmod(enter, recently)
root(ROOT, enter)
case(agreement, into)
det(agreement, a)
obl(enter, agreement)
case(fil, with)
compound(Generale, compagnie)
compound(fil, Generale)
compound(fil, De)
compound(fil, Telegraphie)
compound(fil, Sans)
nmod(agreement, fil)
punct(CSF, ()
appos(fil, CSF)
punct(CSF, ))
case(France, of)
nmod(fil, France)
case(exchange, for)
det(exchange, the)
amod(exchange, exclusive)
nmod(agreement, exchange)
case(information, of)
amod(information, technical)
nmod(exchange, information)
case(material, on)
amod(material, thermoelectric)
nmod(information, material)
punct(enter, .)
det(agreement, the)
nsubj(give, agreement)
root(ROOT, give)
iobj(give, we)
obj(give, rights)
case(manufacturing, for)
nmod(rights, manufacturing)
cc(marketing, and)
conj(manufacturing, marketing)
case(material, of)
amod(material, such)
nmod(manufacturing, material)
case(States, in)
det(States, the)
compound(States, United)
nmod(material, States)
punct(give, .)
advmod(import, initially)
nsubj(import, we)
aux(import, will)
root(ROOT, import)
det(material, the)
amod(material, thermoelectric)
obj(import, material)
cc(module, and)
conj(material, module)
case(France, from)
obl(import, France)
cc(manufacture, but)
advmod(manufacture, later)
nsubj(manufacture, we)
aux(manufacture, will)
conj(import, manufacture)
case(country, in)
det(country, this)
obl(manufacture, country)
punct(import, .)
expl(be, there)
root(ROOT, be)
det(demand, a)
advmod(grow, rapidly)
amod(demand, grow)
nsubj(be, demand)
case(material, for)
det(material, this)
nmod(demand, material)
punct(be, ,)
advmod(military, primarily)
case(military, from)
det(military, the)
obl(be, military)
punct(be, . )
amod(research, further)
nsubj(develop, research)
punct(research, ,)
nsubj(believe, we)
parataxis(research, believe)
punct(develop, ,)
aux(develop, will)
root(ROOT, develop)
amod(application, important)
amod(application, commercial)
obj(develop, application)
punct(develop, . )
det(project, a)
nsubj:pass(complete, project)
case(Force, for)
det(Force, the)
compound(Force, Air)
nmod(project, Force)
aux(complete, have)
aux:pass(complete, be)
root(ROOT, complete)
case(which, in)
obl(complete, which)
det(device, the)
compound(device, NAIR)
amod(detect, infrare)
compound(device, detect)
nsubj:pass(develop, device)
aux:pass(develop, be)
acl:relcl(which, develop)
case(monitor, for)
compound(monitor, area)
obl(develop, monitor)
case(gas, of)
amod(gas, noxious)
cc(dangerous, or)
conj(noxious, dangerous)
nmod(monitor, gas)
punct(complete, .)
nsubj(initiate, we)
aux(initiate, be)
root(ROOT, initiate)
obj(initiate, research)
case(use, on)
det(use, the)
nmod(research, use)
case(material, of)
amod(material, solid)
compound(material, state)
nmod(use, material)
case(detection, for)
amod(detection, infrare)
nmod(material, detection)
advcl(initiate, use)
det(method, a)
obj(use, method)
nsubj(require, which)
aux(require, will)
advmod(require, not)
acl:relcl(method, require)
obj(require, cool)
case(material, of)
nmod(cool, material)
mark(attain, to)
advcl(require, attain)
amod(sensitivity, high)
obj(attain, sensitivity)
punct(initiate, .)
det(advance, the)
amod(advance, rapid)
nsubj(suggest, advance)
case(science, in)
nmod(advance, science)
obl:tmod(suggest, today)
root(ROOT, suggest)
amod(avenue, many)
amod(avenue, other)
obj(suggest, avenue)
case(investigation, of)
nmod(avenue, investigation)
punct(suggest, .)
nmod:poss(plan, we)
nsubj(be, plan)
root(ROOT, be)
mark(keep, to)
ccomp(be, keep)
advmod(keep, abreast)
case(advance, of)
det(advance, these)
obl(abreast, advance)
punct(select, ,)
cc(select, and)
conj(keep, select)
case(development, for)
obl(select, development)
det(field, those)
obj(select, field)
nsubj(seem, which)
acl:relcl(field, seem)
advmod(promise, most)
xcomp(seem, promise)
case(capability, for)
nmod:poss(capability, we)
amod(capability, special)
obl(promise, capability)
punct(be, .)
amod(facility, new)
compound(facility, plant)
nsubj(break, facility)
advmod(August, early)
case(August, in)
nmod(facility, August)
nsubj(break, we)
root(ROOT, break)
obj(break, ground)
case(plant, for)
det(plant, a)
amod(plant, new)
compound(plant, $)
nummod($, 3,500,000)
obl(break, plant)
case(Warwick, in)
nmod(plant, Warwick)
punct(Warwick, ,)
compound(Island, Rhode)
appos(Warwick, Island)
punct(Island, ,)
nsubj(house, which)
aux(house, will)
acl:relcl(plant, house)
nmod:poss(operation, we)
compound(operation, textile)
cc(coil, and)
conj(textile, coil)
compound(operation, wind)
compound(operation, machinery)
obj(house, operation)
punct(break, .)
nsubj(along, construction)
cop(along, be)
advmod(along, well)
root(ROOT, along)
punct(schedule, ,)
cc(schedule, and)
det(plant, the)
nsubj:pass(schedule, plant)
aux:pass(schedule, be)
conj(along, schedule)
case(completion, for)
obl(schedule, completion)
case(November, in)
obl(schedule, November)
case(year, of)
det(year, this)
nmod(November, year)
punct(along, .)
det(operation, all)
nsubj:pass(transfer, operation)
advmod(carry, now)
acl(operation, carry)
compound:prt(carry, on)
case(plant, at)
nmod:poss(plant, we)
obl(carry, plant)
case(Cranston, at)
nmod(plant, Cranston)
aux(transfer, will)
aux:pass(transfer, be)
root(ROOT, transfer)
case(Warwick, to)
obl(transfer, Warwick)
punct(transfer, .)
nsubj(produce, Operations)
case(plant, in)
det(plant, the)
amod(plant, new)
nmod(Operations, plant)
aux(produce, should)
aux(produce, be)
root(ROOT, produce)
advmod(produce, efficiently)
advmod(produce, early)
case(1962, in)
obl(produce, 1962)
punct(produce, .)
det(architect, a)
nmod:poss(sketch, architect)
case(architect, 's)
nsubj:pass(show, sketch)
case(plant, of)
det(plant, the)
amod(plant, new)
nmod(sketch, plant)
aux:pass(show, be)
root(ROOT, show)
case(cover, on)
det(cover, the)
amod(cover, front)
obl(show, cover)
punct(show, .)
det(building, the)
nsubj(contain, building)
aux(contain, will)
root(ROOT, contain)
nummod(foot, 430,000)
compound(foot, square)
obj(contain, foot)
punct(foot, ,)
advmod(same, approximately)
det(same, the)
appos(foot, same)
case(plant, as)
nmod:poss(plant, we)
amod(plant, present)
obl(same, plant)
punct(contain, .)
advmod(design, however)
punct(design, ,)
nmod:poss(layout, its)
amod(layout, modern)
nummod(story, one)
punct(story, -)
compound(layout, story)
nsubj:pass(design, layout)
aux:pass(design, be)
root(ROOT, design)
mark(increase, to)
advcl(design, increase)
nmod:poss(capacity, we)
compound(capacity, production)
obj(increase, capacity)
punct(permit, ,)
conj(increase, permit)
advmod(efficient, more)
amod(manufacturing, efficient)
obj(permit, manufacturing)
punct(reduce, ,)
cc(reduce, and)
advmod(reduce, substantially)
conj(increase, reduce)
amod(repair, current)
obj(reduce, repair)
cc(maintenance, and)
conj(repair, maintenance)
obj(reduce, cost)
punct(design, . )
det(consideration, a)
amod(consideration, major)
nsubj(fact, consideration)
case(choice, in)
det(choice, the)
nmod(consideration, choice)
case(site, of)
det(site, the)
compound(site, Warwick)
nmod(choice, site)
punct(mile, ,)
nummod(mile, four)
appos(consideration, mile)
case(Cranston, from)
nmod(mile, Cranston)
punct(fact, ,)
cop(fact, be)
det(fact, the)
root(ROOT, fact)
mark(permit, that)
nsubj(permit, it)
acl(fact, permit)
obj(permit, retention)
case(force, of)
nmod:poss(force, we)
amod(force, present)
amod(force, train)
cc(skilled, and)
advmod(skilled, highly)
conj(train, skilled)
compound(force, work)
nmod(retention, force)
punct(fact, .)
nsubj(enter, we)
aux(enter, have)
root(ROOT, enter)
case(agreement, into)
det(agreement, a)
obl(enter, agreement)
case(sale, for)
det(sale, the)
nmod(agreement, sale)
case(property, of)
det(property, the)
amod(property, present)
compound(property, Cranston)
nmod(sale, property)
punct(effective, ,)
advmod(soon, effective)
advmod(soon, as)
advmod(expand, soon)
mark(complete, as)
nsubj(complete, we)
aux(complete, have)
advcl(soon, complete)
obj(complete, removal)
case(plant, to)
nmod:poss(plant, we)
amod(plant, new)
nmod(removal, plant)
punct(subsidiary, .)
amod(subsidiary, british)
appos(subsidiary, subsidiary)
case(year, during)
det(year, the)
nmod(subsidiary, year)
nmod:poss(subsidiary, we)
amod(subsidiary, british)
nsubj(expand, subsidiary)
punct(subsidiary, ,)
appos(subsidiary, Leesona)
punct(Leesona, -)
appos(subsidiary, Holt)
punct(Limited, ,)
appos(subsidiary, Limited)
punct(expand, ,)
conj(enter, expand)
nmod:poss(plant, its)
obj(expand, plant)
case(Darwen, in)
obl(expand, Darwen)
punct(England, ,)
conj(Darwen, England)
punct(add, ,)
cc(add, and)
conj(expand, add)
compound(capacity, machine)
compound(capacity, tool)
obj(add, capacity)
punct(enter, .)
det(operation, the)
nsubj:pass(transfer, operation)
case(plant, of)
nmod:poss(plant, its)
amod(plant, other)
nmod(operation, plant)
case(Rochdale, in)
nmod(plant, Rochdale)
cc(operation, and)
nmod:poss(operation, Leesona)
case(Leesona, 's)
amod(operation, former)
conj(operation, operation)
case(Manchester, in)
nmod(operation, Manchester)
aux:pass(transfer, be)
root(ROOT, transfer)
case(plant, to)
det(plant, a)
advmod(acquire, recently)
amod(plant, acquire)
obl(transfer, plant)
case(town, in)
det(town, the)
amod(town, adjoin)
nmod(plant, town)
case(Heywood, of)
nmod(town, Heywood)
punct(town, .)
nsubj:pass(modernize, Layout)
cc(equipment, and)
conj(Layout, equipment)
aux:pass(modernize, be)
conj(transfer, modernize)
cc(improve, and)
conj(modernize, improve)
mark(obtain, to)
xcomp(improve, obtain)
amod(production, increase)
obj(obtain, production)
case(basis, on)
det(basis, a)
amod(basis, efficient)
obl(obtain, basis)
punct(transfer, .)
det(area, the)
nsubj(size, area)
amod(area, available)
case(Heywood, at)
obl(available, Heywood)
cop(size, be)
advmod(three, approximately)
nummod(time, three)
nmod:npmod(size, time)
det(size, the)
root(ROOT, size)
case(location, of)
det(location, the)
amod(Rochdale, former)
compound(location, Rochdale)
cc(Manchester, and)
conj(Rochdale, Manchester)
nmod(size, location)
punct(size, .)
case(addition, in)
obl(purchase, addition)
punct(purchase, ,)
nsubj:pass(purchase, land)
aux(purchase, have)
aux:pass(purchase, be)
root(ROOT, purchase)
mark(permit, to)
advcl(purchase, permit)
xcomp(permit, double)
det(size, the)
obj(double, size)
case(plant, of)
det(plant, the)
nmod(size, plant)
case(future, in)
det(future, the)
obl(double, future)
punct(purchase, . )
amod(development, Financial)
nsubj:pass(build, development)
det(plant, the)
amod(plant, new)
compound(plant, Warwick)
nsubj:pass(build, plant)
aux(build, be)
aux:pass(build, be)
root(ROOT, build)
case(expense, at)
nmod:poss(expense, we)
obl(build, expense)
cc(direction, and)
case(direction, under)
nmod:poss(direction, we)
conj(expense, direction)
punct(build, .)
nsubj:pass(transfer, it)
aux(transfer, will)
aux:pass(transfer, be)
root(ROOT, transfer)
case(completion, on)
obl(transfer, completion)
case(foundation, to)
det(foundation, the)
compound(foundation, Industrial)
nmod(completion, foundation)
case(Island, of)
compound(Island, Rhode)
nmod(foundation, Island)
punct(foundation, ,)
det(organization, a)
amod(organization, non-profit)
appos(foundation, organization)
punct(organization, ,)
nsubj(reimburse, which)
aux(reimburse, will)
acl:relcl(organization, reimburse)
obj(reimburse, we)
case(cost, for)
det(cost, the)
obl(reimburse, cost)
case(construction, of)
nmod(cost, construction)
punct(transfer, .)
nsubj(occupy, we)
aux(occupy, will)
advmod(occupy, then)
root(ROOT, occupy)
det(plant, the)
amod(plant, new)
obj(occupy, plant)
case(lease, under)
obl(occupy, lease)
punct(occupy, ,)
case(option, with)
det(option, a)
obl(occupy, option)
mark(purchase, to)
acl(option, purchase)
punct(occupy, .)
det(arrangement, these)
nsubj(favorable, arrangement)
cop(favorable, be)
punct(favorable, ,)
case(opinion, in)
nmod:poss(opinion, we)
obl(favorable, opinion)
punct(favorable, ,)
advmod(favorable, very)
root(ROOT, favorable)
case(Leesona, to)
obl(favorable, Leesona)
punct(favorable, .)
amod(financing, Interim)
nsubj:pass(provide, financing)
case(cost, of)
compound(cost, construction)
nmod(financing, cost)
aux:pass(provide, be)
root(ROOT, provide)
case(loan, by)
det(loan, a)
amod(term, short)
compound(loan, term)
obl(provide, loan)
case(Bank, from)
det(Bank, the)
compound(Bank, chase)
compound(Bank, Manhattan)
nmod(loan, Bank)
punct(provide, .)
case(addition, in)
obl(invest, addition)
case(expenditure, to)
nmod(addition, expenditure)
case(plant, on)
det(plant, the)
compound(plant, Warwick)
nmod(expenditure, plant)
punct(invest, ,)
nsubj(invest, we)
aux(invest, have)
root(ROOT, invest)
advmod($, approximately)
obj(invest, $)
nummod($, 1,961,000)
case(machinery, for)
obl(invest, machinery)
cc(equipment, and)
conj(machinery, equipment)
case(Cranston, at)
obl(invest, Cranston)
punct(machinery, ,)
cc(machinery, and)
case(machinery, for)
amod(machinery, new)
obl(invest, machinery)
punct(plant, ,)
conj(machinery, plant)
cc(equipment, and)
conj(machinery, equipment)
case(Leesona, at)
nmod(machinery, Leesona)
punct(Leesona, -)
appos(Leesona, Holt)
punct(Holt, ,)
appos(Holt, Limited)
punct(invest, .)
nsubj(believe, we)
root(ROOT, believe)
mark(contribute, that)
det(facility, these)
amod(facility, improve)
nsubj(contribute, facility)
aux(contribute, will)
ccomp(believe, contribute)
obj(contribute, income)
cc(savings, and)
compound(savings, effect)
conj(income, savings)
nsubj(justify, which)
aux(justify, will)
advmod(justify, fully)
acl:relcl(income, justify)
det(investment, the)
obj(justify, investment)
punct(believe, .)
amod(term, long)
compound(loan, term)
nsubj:pass(reduce, loan)
aux(reduce, have)
aux:pass(reduce, be)
root(ROOT, reduce)
case($, by)
obl(reduce, $)
nummod($, 395,000)
case($, to)
nmod($, $)
nummod($, 2,461,000)
punct(reduce, .)
nsubj(increase, inventory)
root(ROOT, increase)
obj(increase, $)
nummod($, 625,561)
case($, to)
obl(increase, $)
nummod($, 8,313,514)
case(year, during)
det(year, the)
obl(increase, year)
cc(decline, and)
aux(decline, should)
conj(increase, decline)
case(month, in)
amod(month, come)
obl(decline, month)
punct(increase, .)
advmod(enter, thus)
nsubj(enter, we)
root(ROOT, enter)
obj(enter, 1961)
case(position, in)
det(position, a)
amod(position, strong)
amod(position, financial)
obl(enter, position)
punct(enter, .)
compound(contract, employee)
nsubj:pass(increase, contract)
case(accordance, in)
nmod(contract, accordance)
case(contract, with)
det(contract, the)
nummod(year, two)
punct(year, -)
compound(contract, year)
nmod(accordance, contract)
acl(contract, sign)
case(May, in)
obl(sign, May)
punct(May, ,)
nummod(May, 1959)
punct(Association, ,)
case(Association, with)
det(Association, the)
compound(Association, International)
nmod(contract, Association)
case(Machinists, of)
nmod(Association, Machinists)
punct(cio, ,)
compound(cio, afl)
punct(cio, -)
conj(Machinists, cio)
punct(wage, ,)
conj(Machinists, wage)
case(employee, of)
amod(employee, hourly)
nmod(wage, employee)
aux:pass(increase, be)
root(ROOT, increase)
case(%, by)
nummod(%, 4)
obl(increase, %)
case(May, in)
nmod(%, May)
punct(May, ,)
nummod(May, 1960)
punct(pay, ,)
cc(pay, and)
conj(increase, pay)
obj(pay, level)
case(employee, for)
amod(employee, non-exempt)
amod(employee, salary)
nmod(level, employee)
aux:pass(increase, be)
advcl(pay, increase)
advmod(increase, proportionately)
punct(increase, .)
case(addition, in)
obl(extend, addition)
punct(extend, ,)
compound(Cross, Blue)
compound(coverage, Cross)
nsubj:pass(extend, coverage)
case(employee, for)
det(employee, all)
nmod(coverage, employee)
cc(dependent, and)
nmod:poss(dependent, they)
conj(employee, dependent)
aux:pass(extend, be)
root(ROOT, extend)
mark(provide, to)
advcl(extend, provide)
det(cost, the)
amod(cost, full)
obj(provide, cost)
case(accommodation, of)
amod(accommodation, semi-private)
compound(accommodation, hospital)
nmod(cost, accommodation)
punct(extend, .)
compound(benefit, Personnel)
nsubj(pay, benefit)
case(addition, in)
nmod(benefit, addition)
case(salary, to)
amod(salary, direct)
nmod(addition, salary)
cc(wage, and)
conj(salary, wage)
punct(pay, ,)
det(Company, the)
nsubj(pay, Company)
root(ROOT, pay)
cc(accrue, or)
conj(pay, accrue)
case(year, during)
det(year, the)
obl(accrue, year)
det(amount, the)
amod(amount, follow)
obj(pay, amount)
case(benefit, for)
det(benefit, the)
nmod(amount, benefit)
case(employee, of)
nmod(benefit, employee)
punct(end, :)
case(year, during)
det(year, the)
compound(year, pension)
obl(end, year)
acl:relcl(amount, end)
obl:tmod(end, December)
nummod(December, 31)
punct(December, ,)
nummod(December, 1960)
punct(retire, ,)
nummod(employee, 23)
nsubj(retire, employee)
parataxis(end, retire)
punct(retire, ,)
advcl(retire, make)
det(total, a)
obj(make, total)
case(171, of)
nmod(total, 171)
advmod(retire, currently)
acl(total, retire)
case(plan, under)
det(Company, the)
nmod:poss(plan, Company)
case(Company, 's)
compound(plan, pension)
obl(retire, plan)
punct(retire, .)
case(December, at)
obl(total, December)
nummod(December, 13)
punct(December, ,)
nummod(December, 1960)
det(fund, the)
nsubj(total, fund)
acl(fund, hold)
case(Bank, by)
det(Bank, the)
compound(Bank, Industrial)
compound(Bank, National)
obl(hold, Bank)
case(Providence, of)
nmod(Bank, Providence)
punct(fund, ,)
case(trustee, as)
nmod(fund, trustee)
case(payment, for)
nmod(trustee, payment)
case(pension, of)
amod(pension, past)
cc(future, and)
conj(past, future)
compound(pension, service)
nmod(payment, pension)
case(member, to)
amod(member, qualify)
nmod(pension, member)
case(plan, of)
det(plan, the)
nmod(member, plan)
punct(total, ,)
root(ROOT, total)
obj(total, $)
nummod($, 2,412,616)
punct(total, .)
det(market, the)
amod(market, basic)
nsubj(grow, market)
case(textile, for)
nmod(market, textile)
aux(grow, be)
root(ROOT, grow)
case(expansion, with)
det(expansion, the)
obl(grow, expansion)
case(population, of)
det(population, the)
nmod(expansion, population)
nsubj(begin, that)
acl:relcl(population, begin)
nummod(year, 20)
obl:npmod(ago, year)
advmod(begin, ago)
punct(grow, .)
det(factor, another)
compound(factor, growth)
nsubj:pass(increase, factor)
aux:pass(increase, be)
parataxis(grow, increase)
compound(demand, consumer)
obj(increase, demand)
case(quality, for)
amod(quality, better)
nmod(demand, quality)
cc(quantity, and)
amod(quantity, larger)
conj(quality, quantity)
case(fabric, of)
nmod(quantity, fabric)
nsubj(go, that)
acl:relcl(quantity, go)
case(standard, with)
det(standard, a)
amod(standard, rise)
obl(go, standard)
case(living, of)
nmod(standard, living)
punct(grow, .)
case(industry, as)
case(industry, in)
amod(industry, many)
amod(industry, other)
obl(exert, industry)
punct(exert, ,)
amod(cost, rise)
nsubj(exert, cost)
cc(competition, and)
amod(competition, intense)
conj(cost, competition)
punct(cost, ,)
cc:preconj(domestic, both)
amod(cost, domestic)
cc(foreign, and)
conj(domestic, foreign)
punct(exert, ,)
aux(exert, have)
root(ROOT, exert)
amod(pressure, increase)
obj(exert, pressure)
case(earning, on)
nmod(pressure, earning)
case(industry, of)
det(industry, the)
compound(industry, textile)
nmod(earning, industry)
case(year, in)
amod(year, recent)
obl(increase, year)
punct(exert, .)
amod(efficiency, increase)
nsubj(lie, efficiency)
case(textile, in)
nmod(efficiency, textile)
punct(efficiency, ,)
advmod(elsewhere, as)
advmod(efficiency, elsewhere)
punct(lie, ,)
det(part, a)
amod(part, major)
conj(efficiency, part)
case(solution, of)
det(solution, the)
nmod(part, solution)
root(ROOT, lie)
case(efficiency, in)
amod(efficiency, greater)
obl(lie, efficiency)
cc(productivity, and)
amod(productivity, higher)
conj(efficiency, productivity)
punct(lie, .)
case(designer, as)
det(designer, a)
obl(seek, designer)
cc(manufacturer, and)
conj(designer, manufacturer)
case(machinery, of)
compound(production, textile)
compound(machinery, production)
nmod(designer, machinery)
punct(company, ,)
conj(machinery, Leesona)
cc(company, and)
amod(company, other)
conj(machinery, company)
case(industry, in)
nmod:poss(industry, its)
nmod(company, industry)
aux(seek, have)
root(ROOT, seek)
mark(meet, to)
xcomp(seek, meet)
det(challenge, this)
obj(meet, challenge)
case(equipment, with)
amod(equipment, new)
cc(improve, or)
conj(new, improve)
obl(meet, equipment)
cc(method, and)
conj(equipment, method)
nsubj(increase, that)
aux(increase, would)
acl:relcl(equipment, increase)
obj(increase, production)
punct(maintain, ,)
cc(maintain, yet)
conj(increase, maintain)
cc:preconj(quality, both)
obj(maintain, quality)
cc(flexibility, and)
conj(quality, flexibility)
punct(seek, .)
nsubj(complicated, problem)
case(style, of)
amod(style, shift)
nmod(problem, style)
det(problem, the)
nsubj(complicated, problem)
case(production, of)
amod(production, efficient)
nmod(problem, production)
case(textile, in)
nmod(production, textile)
cop(complicated, be)
root(ROOT, complicated)
case(fact, by)
det(fact, the)
obl(complicated, fact)
mark(serve, that)
det(industry, the)
nsubj(serve, industry)
acl(fact, serve)
amod(market, large)
obj(serve, market)
nsubj(shift, which)
acl:relcl(market, shift)
advmod(shift, quickly)
case(change, with)
obl(shift, change)
case(fashion, of)
nmod(change, fashion)
case(apparel, in)
nmod(change, apparel)
cc(decoration, or)
compound(decoration, home)
conj(apparel, decoration)
punct(complicated, .)
nsubj:pass(adjust, production)
aux(adjust, must)
aux:pass(adjust, be)
root(ROOT, adjust)
advmod(adjust, accordingly)
punct(adjust, ,)
case(cost, at)
amod(cost, minimum)
obl(adjust, cost)
cc(quickly, and)
conj(cost, quickly)
punct(adjust, .)
case(addition, in)
obl(design, addition)
punct(design, ,)
compound(machinery, production)
nsubj:pass(design, machinery)
aux(design, must)
case(case, in)
amod(case, many)
obl(design, case)
aux:pass(design, be)
root(ROOT, design)
mark(handle, to)
advcl(design, handle)
case(efficiency, with)
amod(efficiency, equal)
obl(handle, efficiency)
cc:preconj(fiber, both)
amod(fiber, natural)
appos(efficiency, fiber)
cc(number, and)
det(number, the)
amod(number, increase)
conj(fiber, number)
case(synthetics, of)
nmod(number, synthetics)
punct(blend, ,)
cc(blend, as)
fixed(as, well)
fixed(as, as)
conj(synthetics, blend)
punct(design, . )
case(term, follow)
det(term, the)
obl(return, term)
case(service, of)
nmod(term, service)
case(Japan, in)
nmod(service, Japan)
punct(return, ,)
det(emissary, each)
nsubj(return, emissary)
root(ROOT, return)
case(visit, for)
det(visit, a)
amod(visit, brief)
obl(return, visit)
case(campus, to)
det(campus, the)
nmod(visit, campus)
mark(interpret, to)
advcl(return, interpret)
nmod:poss(experience, he)
obj(interpret, experience)
case(community, to)
det(community, the)
compound(community, college)
nmod(experience, community)
punct(return, .)
det(Fund, the)
compound(Service, Carleton)
compound(Fund, Service)
nsubj(provide, Fund)
root(ROOT, provide)
det(support, the)
amod(support, financial)
obj(provide, support)
case(program, for)
det(program, this)
nmod(support, program)
punct(provide, .)
amod(activity, Musical)
nsubj(one, activity)
det(college, the)
nsubj(one, college)
cop(one, be)
parataxis(provide, one)
case(first, of)
det(first, the)
nmod(one, first)
mark(recognize, to)
advcl(one, recognize)
det(importance, the)
obj(recognize, importance)
case(music, of)
nmod(importance, music)
advmod(only, not)
advmod(part, only)
case(part, as)
det(part, a)
amod(part, definite)
nmod(importance, part)
case(curriculum, of)
det(curriculum, the)
nmod(part, curriculum)
cc(adjunct, but)
case(adjunct, as)
det(adjunct, a)
amod(adjunct, vital)
conj(part, adjunct)
case(life, to)
compound(life, campus)
nmod(adjunct, life)
punct(provide, .)
amod(facility, extensive)
nsubj:pass(provide, facility)
case(performance, for)
compound(performance, group)
nmod(facility, performance)
aux:pass(provide, be)
root(ROOT, provide)
mark(maintain, by)
advcl(provide, maintain)
punct(maintain, ,)
case(direction, under)
amod(direction, skilled)
obl(maintain, direction)
punct(choir, ,)
det(choir, the)
conj(direction, choir)
punct(Orchestra, ,)
det(Orchestra, the)
conj(choir, Orchestra)
punct(Band, ,)
det(Band, the)
conj(choir, Band)
punct(Club, ,)
det(Club, the)
compound(Club, Glee)
conj(choir, Club)
punct(ensemble, ,)
cc(ensemble, and)
amod(ensemble, smaller)
conj(choir, ensemble)
case(player, of)
compound(player, wind)
cc(string, and)
conj(wind, string)
nmod(ensemble, player)
punct(provide, .)
det(student, all)
nsubj:pass(invite, student)
aux:pass(invite, be)
root(ROOT, invite)
mark(participate, to)
xcomp(invite, participate)
case(any, in)
obl(participate, any)
case(organization, of)
det(organization, the)
amod(organization, musical)
nmod(any, organization)
case(which, for)
obl(qualify, which)
nsubj(qualify, they)
acl:relcl(organization, qualify)
punct(invite, .)
nsubj(have, Orchestra)
punct(Band, ,)
conj(Orchestra, Band)
punct(choir, ,)
cc(choir, and)
conj(Orchestra, choir)
root(ROOT, have)
obj(have, audition)
case(week, during)
det(week, the)
obl(have, week)
advcl(have, precede)
det(day, the)
amod(day, first)
obl:tmod(precede, day)
case(class, of)
nmod(day, class)
punct(have, .)
det(Club, the)
compound(Club, Glee)
nsubj(open, Club)
cop(open, be)
root(ROOT, open)
case(student, to)
det(student, all)
obl(open, student)
cc(faculty, and)
conj(student, faculty)
case(audition, with)
det(audition, no)
obl(open, audition)
amod(audition, necessary)
case(membership, for)
obl(necessary, membership)
punct(open, .)
case(addition, in)
obl(be, addition)
case(appearance, to)
det(appearance, the)
amod(appearance, many)
nmod(addition, appearance)
case(organization, of)
det(organization, these)
nmod(appearance, organization)
case(year, throughout)
det(year, the)
compound(year, college)
nmod(appearance, year)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, concert)
case(student, by)
nmod(concert, student)
case(department, of)
det(department, the)
compound(department, music)
nmod(student, department)
punct(department, ,)
case(member, by)
nmod(concert, member)
case(faculty, of)
det(faculty, the)
compound(faculty, music)
nmod(member, faculty)
punct(visit, ,)
cc(visit, and)
mark(visit, by)
conj(be, visit)
obj(visit, artist)
punct(be, .)
compound(organization, Student)
amod(organization, musical)
nsubj(Knights, organization)
cop(Knights, be)
det(Knights, the)
root(ROOT, Knights)
case(Carleton, of)
nmod(Knights, Carleton)
cc(Overtones, and)
det(Overtones, the)
conj(Carleton, Overtones)
punct(group, ()
nmod:poss(group, man)
case(man, 's)
amod(group, vocal)
appos(Overtones, group)
punct(group, ))
punct(Keynotes, ,)
cc(Keynotes, and)
det(Keynotes, the)
conj(Knights, Keynotes)
punct(group, ()
det(woman, a)
nmod:poss(group, woman)
case(woman, 's)
compound(group, sing)
appos(Keynotes, group)
punct(group, ))
punct(Knights, .)
det(organization, these)
obl:npmod(direct, student)
punct(direct, -)
amod(organization, direct)
nsubj(include, organization)
root(ROOT, include)
nummod(member, eight)
case(ten, to)
nmod(eight, ten)
obj(include, member)
nmod:npmod(member, each)
punct(include, ;)
punct(include, ;)
nsubj(perform, they)
parataxis(include, perform)
case(event, at)
amod(event, many)
compound(event, campus)
amod(event, social)
obl(perform, event)
punct(include, .)
amod(activity, religious)
nsubj(plan, activity)
case(found, from)
det(found, the)
nmod(activity, found)
case(those, of)
det(those, the)
nmod(found, College)
nmod(found, those)
amod(those, responsible)
case(management, for)
nmod:poss(management, its)
obl(responsible, management)
aux(plan, have)
root(ROOT, plan)
mark(provide, to)
xcomp(plan, provide)
nmod:poss(student, its)
nmod:poss(condition, student)
amod(condition, favorable)
obj(provide, condition)
case(development, for)
amod(development, personal)
amod(development, religious)
nmod(condition, development)
cc(offer, and)
mark(offer, to)
conj(provide, offer)
obj(offer, opportunity)
case(curriculum, through)
det(curriculum, the)
nmod(opportunity, curriculum)
cc(meaning, and)
advmod(understanding, otherwise)
case(understanding, for)
nmod(meaning, understanding)
det(meaning, the)
conj(curriculum, meaning)
cc(importance, and)
conj(meaning, importance)
case(religion, of)
nmod(meaning, religion)
punct(plan, .)
nsubj:pass(offer, course)
aux:pass(offer, be)
root(ROOT, offer)
case(ethic, in)
obl(offer, ethic)
punct(philosophy, ,)
det(philosophy, the)
conj(ethic, philosophy)
cc(history, and)
conj(philosophy, history)
case(religion, of)
nmod(history, religion)
punct(think, ,)
nsubj(think, Christian)
conj(offer, think)
cc(history, and)
conj(think, history)
punct(Bible, ,)
cc(Bible, and)
det(Bible, the)
conj(ethic, Bible)
punct(offer, .)
nsubj(aim, Carleton)
root(ROOT, aim)
case(program, throughout)
nmod:poss(program, its)
amod(program, entire)
compound(program, teaching)
obl(aim, program)
mark(represent, to)
advcl(aim, represent)
det(point, a)
obj(represent, point)
case(view, of)
nmod(point, view)
cc(spirit, and)
det(spirit, a)
conj(view, spirit)
nsubj(contribute, which)
aux(contribute, will)
acl:relcl(spirit, contribute)
case(development, to)
det(development, the)
amod(development, moral)
cc(religious, and)
conj(moral, religious)
obl(contribute, development)
case(student, of)
nmod:poss(student, its)
nmod(development, student)
punct(aim, . )
det(service, a)
compound(service, college)
nsubj:pass(hold, service)
case(worship, of)
nmod(service, worship)
aux:pass(hold, be)
root(ROOT, hold)
det(morning, each)
compound(morning, Sunday)
obl:tmod(hold, morning)
case(o'clock, at)
nummod(o'clock, eleven)
obl(hold, o'clock)
case(Chapel, in)
det(Chapel, the)
nmod(o'clock, Chapel)
punct(hold, .)
det(sermon, the)
nsubj:pass(give, sermon)
aux:pass(give, be)
root(ROOT, give)
case(Chaplain, by)
det(Chaplain, the)
compound(Chaplain, College)
obl(give, Chaplain)
punct(Chaplain, ,)
case(member, by)
nmod(Chaplain, member)
case(faculty, of)
det(faculty, the)
nmod(member, faculty)
punct(preacher, ,)
cc(preacher, or)
case(preacher, by)
compound(preacher, guest)
conj(Chaplain, preacher)
punct(furnish, .)
nsubj:pass(furnish, music)
aux:pass(furnish, be)
conj(give, furnish)
case(choir, by)
det(choir, the)
compound(choir, Carleton)
compound(choir, College)
obl(furnish, choir)
punct(hold, .)
compound(service, Chapel)
nsubj:pass(hold, service)
aux:pass(hold, be)
conj(furnish, hold)
xcomp(hold, weekly)
punct(give, .)
det(service, these)
nsubj:pass(lead, service)
case(attendance, at)
det(attendance, which)
nmod(service, attendance)
cop(voluntary, be)
root(ROOT, voluntary)
aux:pass(lead, be)
ccomp(voluntary, lead)
case(Chaplain, by)
det(Chaplain, the)
obl(lead, Chaplain)
punct(Chaplain, ,)
case(President, by)
det(President, the)
obl(lead, President)
case(College, of)
det(College, the)
nmod(President, College)
punct(lead, ,)
case(member, by)
amod(member, select)
compound(member, faculty)
obl(lead, member)
punct(student, ,)
conj(member, student)
punct(visitor, ,)
cc(visitor, and)
conj(member, visitor)
punct(lead, .)
det(service, the)
nsubj(brief, service)
cop(brief, be)
root(ROOT, brief)
cc(practice, and)
nsubj:pass(practice, variety)
case(form, in)
nmod(variety, form)
case(worship, of)
nmod(form, worship)
aux:pass(practice, be)
conj(brief, practice)
punct(brief, . )
det(program, a)
compound(evening, Sunday)
compound(program, evening)
nsubj(provide, program)
root(ROOT, provide)
amod(lecture, theological)
obj(provide, lecture)
punct(music, ,)
conj(lecture, music)
punct(drama, ,)
conj(lecture, drama)
punct(film, ,)
cc(film, and)
conj(lecture, film)
amod(lecture, related)
case(issue, to)
det(issue, the)
obl(related, issue)
case(tradition, of)
det(tradition, the)
compound(christian, Judeo)
punct(christian, -)
amod(tradition, christian)
nmod(issue, tradition)
punct(provide, .)
nsubj:pass(require, attendance)
aux:pass(require, be)
root(ROOT, require)
case(Service, at)
det(Service, the)
compound(Service, College)
obl(require, Service)
case(Worship, of)
nmod(Service, Worship)
cc(Program, or)
case(Program, at)
det(Program, the)
compound(Evening, Sunday)
compound(Program, Evening)
conj(Service, Program)
cc(service, or)
case(service, at)
det(service, any)
advmod(organized, regularly)
amod(service, organized)
conj(Service, service)
case(worship, of)
amod(worship, public)
nmod(service, worship)
punct(require, .)
det(semester, each)
obl:tmod(attend, semester)
det(student, every)
nsubj(attend, student)
aux(attend, must)
root(ROOT, attend)
obj(attend, ten)
case(service, of)
det(service, the)
nmod(ten, service)
cc(meeting, or)
amod(meeting, religious)
conj(service, meeting)
punct(attend, .)
nsubj(voluntary, attendance)
case(Service, at)
det(Service, the)
compound(Service, Chapel)
nmod(attendance, Service)
cop(voluntary, be)
root(ROOT, voluntary)
punct(voluntary, .)
amod(organization, religious)
nsubj(include, organization)
root(ROOT, include)
det(group, the)
obj(include, group)
acl(group, describe)
advmod(describe, below)
punct(include, .)
det(Y.M.C.A., the)
nsubj:pass(connect, Y.M.C.A.)
cc(Y.W.C.A., and)
conj(Y.M.C.A., Y.W.C.A.)
case(Carleton, at)
nmod(Y.M.C.A., Carleton)
aux:pass(connect, be)
root(ROOT, connect)
case(organization, with)
det(organization, the)
amod(organization, corresponding)
amod(organization, national)
obl(connect, organization)
cc(carry, and)
conj(connect, carry)
compound:prt(carry, out)
nmod:poss(purpose, they)
amod(purpose, general)
obj(carry, purpose)
punct(hold, .)
amod(meeting, occasional)
nsubj:pass(hold, meeting)
aux:pass(hold, be)
parataxis(connect, hold)
case(membership, for)
det(membership, the)
amod(membership, whole)
obl(hold, membership)
punct(membership, ,)
advmod(speaker, usually)
case(speaker, with)
det(speaker, a)
compound(speaker, guest)
nmod(membership, speaker)
punct(hold, ,)
mark(meet, while)
amod(group, smaller)
compound(group, discussion)
nsubj(meet, group)
advcl(hold, meet)
advmod(frequently, more)
advmod(meet, frequently)
punct(connect, .)
det(association, the)
nsubj(sponsor, association)
root(ROOT, sponsor)
amod(event, many)
amod(event, traditional)
compound(event, campus)
obj(sponsor, event)
cc(provide, and)
conj(sponsor, provide)
obj(provide, student)
case(opportunity, with)
obl(provide, opportunity)
mark(form, to)
acl(opportunity, form)
amod(friendship, new)
obj(form, friendship)
punct(broaden, ,)
mark(broaden, to)
advcl(form, broaden)
nmod:poss(interest, they)
obj(broaden, interest)
punct(engage, ,)
cc(engage, and)
mark(engage, to)
conj(broaden, engage)
case(project, in)
amod(project, worthwhile)
compound(project, service)
obl(engage, project)
punct(sponsor, .)
expl(be, there)
root(ROOT, be)
amod(organization, other)
nsubj(be, organization)
acl(organization, represent)
obj(represent, several)
case(group, of)
det(group, the)
amod(group, denominational)
obl(several, group)
punct(be, .)
root(ROOT, include)
aux:pass(include, be)
det(Movement, the)
amod(Movement, follow)
punct(Movement, :)
compound(Movement, baptist)
compound(Movement, Student)
nsubj:pass(include, Movement)
punct(Club, ,)
compound(Club, Canterbury)
conj(Movement, Club)
punct(episcopal, ()
appos(Club, episcopal)
punct(episcopal, ))
punct(Organization, ,)
compound(Organization, Christian)
compound(Organization, Science)
conj(Movement, Organization)
punct(meeting, ,)
nmod:poss(meeting, Friends)
case(Friends, 's)
conj(Movement, meeting)
case(Worship, for)
nmod(meeting, Worship)
punct(Hillel, ,)
conj(Worship, Hillel)
punct(jewish, ()
appos(Worship, jewish)
punct(jewish, ))
punct(fellowship, ,)
compound(fellowship, Liberal)
compound(fellowship, Religious)
conj(Movement, fellowship)
punct(Association, ,)
compound(Association, Lutheran)
compound(Association, Student)
conj(Movement, Association)
punct(Club, ,)
compound(Club, Newman)
conj(Movement, Club)
punct(Catholic, ()
compound(Catholic, Roman)
appos(Club, Catholic)
punct(Catholic, ))
punct(fellowship, ,)
compound(fellowship, presbyterian)
compound(fellowship, Student)
conj(Movement, fellowship)
punct(fellowship, ,)
compound(fellowship, United)
compound(fellowship, Student)
conj(Movement, fellowship)
punct(baptist, ()
compound(baptist, congregational)
punct(baptist, -)
appos(fellowship, baptist)
punct(baptist, ))
punct(fellowship, ,)
cc(fellowship, and)
compound(fellowship, Wesley)
conj(Movement, fellowship)
punct(Methodist, ()
appos(fellowship, Methodist)
punct(Methodist, ))
punct(include, .)
compound(organization, Student)
amod(organization, religious)
nsubj:pass(co-ordinate, organization)
aux:pass(co-ordinate, be)
root(ROOT, co-ordinate)
case(Committee, under)
det(Committee, the)
compound(activity, Religious)
compound(Committee, activity)
obl(co-ordinate, Committee)
punct(Committee, ,)
det(committee, a)
compound(committee, standing)
appos(Committee, committee)
case(Association, of)
det(Association, the)
compound(Association, Carleton)
compound(Association, Student)
nmod(committee, Association)
punct(Committee, .)
det(church, the)
compound(church, Northfield)
nsubj(include, church)
parataxis(co-ordinate, include)
obj(include, the)
amod(the, follow)
punct(co-ordinate, :)
root(ROOT, Alliance)
punct(Alliance, ,)
compound(Alliance, congregational)
punct(Alliance, -)
appos(Alliance, baptist)
punct(episcopal, ,)
conj(baptist, episcopal)
punct(Lutheran, ,)
conj(baptist, Lutheran)
punct(norwegian, ()
conj(baptist, norwegian)
punct(danish, ,)
conj(norwegian, danish)
punct(Synod, ,)
compound(Synod, Missouri)
conj(norwegian, Synod)
punct(bethel, ,)
cc(bethel, and)
conj(norwegian, bethel)
punct(bethel, ))
punct(Methodist, ,)
conj(Alliance, Methodist)
punct(moravian, ,)
conj(Alliance, moravian)
punct(Pentecostal, ,)
conj(norwegian, Pentecostal)
punct(Catholic, ,)
cc(Catholic, and)
compound(Catholic, Roman)
conj(norwegian, Catholic)
punct(theater, .)
compound(Catholic, theater)
det(purpose, the)
appos(theater, purpose)
mark(produce, of)
acl(purpose, produce)
obj(produce, play)
case(College, at)
det(College, the)
obl(produce, College)
cop(fold, be)
nummod(fold, three)
punct(fold, -)
advcl(produce, fold)
punct(fold, :)
mark(provide, to)
acl(fold, provide)
det(student, the)
compound(student, Carleton)
obj(provide, student)
case(opportunity, with)
det(opportunity, the)
amod(opportunity, best)
amod(opportunity, possible)
obl(provide, opportunity)
case(theater, for)
nmod(opportunity, theater)
punct(opportunity, -)
acl(opportunity, go)
case(limit, within)
det(limit, the)
obl(go, limit)
acl(limit, set)
case(maturity, by)
det(maturity, the)
obl(set, maturity)
cc(experience, and)
conj(maturity, experience)
case(performer, of)
det(performer, the)
nmod(maturity, performer)
cc(facility, and)
det(facility, the)
amod(facility, theatrical)
conj(performer, facility)
amod(facility, available)
punct(facility, ;)
punct(performer, ;)
mark(encourage, to)
conj(provide, encourage)
det(practice, the)
obj(encourage, practice)
mark(attend, of)
acl(practice, attend)
det(theater, the)
obj(attend, theater)
punct(practice, ;)
punct(encourage, ;)
cc(develop, and)
mark(develop, to)
conj(attend, develop)
det(audience, a)
amod(audience, discriminating)
obj(develop, audience)
case(drama, for)
amod(drama, good)
nmod(audience, drama)
cc(performance, and)
amod(performance, sensitive)
conj(drama, performance)
punct(activity, .)
amod(activity, Dramatic)
nsubj:pass(organize, activity)
case(College, at)
det(College, the)
nmod(activity, College)
aux:pass(organize, be)
acl:relcl(audience, organize)
cc(carry, and)
conj(organize, carry)
compound:prt(carry, on)
case(player, by)
det(player, the)
compound(player, Carleton)
obl(carry, player)
punct(player, ,)
nsubj(be, which)
acl:relcl(player, be)
mark(say, to)
ccomp(be, say)
case(student, by)
det(student, all)
obl(say, student)
nsubj(inclined, who)
cop(inclined, be)
advmod(inclined, so)
acl:relcl(student, inclined)
mark(advance, to)
xcomp(inclined, advance)
det(aim, these)
obj(advance, aim)
punct(inclined, .)
case(season, for)
det(season, the)
compound(1961, 1960)
punct(1961, -)
nummod(season, 1961)
obl(announce, season)
punct(announce, ,)
det(player, the)
compound(player, Carleton)
nsubj(announce, player)
aux(announce, have)
parataxis(Alliance, announce)
compound(Wedding, Blood)
obj(announce, Wedding)
case(Federico, by)
obl(announce, Federico)
flat(Federico, Garcia)
flat(Federico, Lorca)
punct(Federico, ,)
det(Knight, the)
appos(Federico, Knight)
case(Pestle, of)
det(Pestle, the)
compound(Pestle, burning)
nmod(Knight, Pestle)
case(Beaumont, by)
nmod(Pestle, Beaumont)
cc(Fletcher, and)
conj(Beaumont, Fletcher)
cc(Moon, and)
det(Moon, a)
conj(Beaumont, Moon)
case(Misbegotten, for)
det(Misbegotten, the)
nmod(Moon, Misbegotten)
case(Eugene, by)
nmod(Misbegotten, Eugene)
flat(Eugene, O'Neill)
punct(Eugene, ,)
case(production, with)
det(production, a)
amod(production, pre-season)
nmod(Eugene, production)
case(Menagerie, of)
det(Menagerie, the)
compound(Menagerie, Glass)
nmod(production, Menagerie)
case(Williams, by)
compound(Williams, Tennessee)
nmod(Menagerie, Williams)
punct(Alliance, .)
compound(workshop, Student)
root(ROOT, workshop)
det(workshop, this)
appos(workshop, workshop)
punct(workshop, ,)
acl(workshop, locate)
case(Hall, in)
compound(Hall, Boliou)
obl(locate, Hall)
punct(provide, ,)
parataxis(workshop, provide)
obj(provide, facility)
case(student, for)
nmod(facility, student)
mark(work, to)
acl(facility, work)
case(ceramics, in)
obl(work, ceramics)
punct(weav, ,)
conj(ceramics, weav)
punct(enamel, ,)
conj(ceramics, enamel)
punct(weld, ,)
conj(ceramics, weld)
punct(woodwork, ,)
conj(ceramics, woodwork)
punct(printing, ,)
compound(printing, textile)
conj(ceramics, printing)
punct(printmaking, ,)
conj(ceramics, printmaking)
punct(lapidary, ,)
cc(lapidary, and)
conj(ceramics, lapidary)
punct(workshop, .)
det(activity, these)
amod(activity, extra-curricular)
nsubj:pass(conduct, activity)
aux:pass(conduct, be)
root(ROOT, conduct)
case(supervision, under)
obl(conduct, supervision)
case(director, of)
det(director, the)
nmod(supervision, director)
case(Workshop, of)
det(Workshop, the)
compound(Workshop, Student)
nmod(director, Workshop)
punct(conduct, .)
det(workshop, the)
nsubj(open, workshop)
cop(open, be)
root(ROOT, open)
nummod(afternoon, five)
obl:tmod(open, afternoon)
cc(evening, and)
nummod(evening, two)
conj(open, evening)
det(week, each)
nmod:npmod(evening, week)
punct(open, . )
det(organization, a)
compound(organization, student)
nsubj(open, organization)
punct(organization, ,)
appos(organization, Bottega)
punct(open, ,)
cop(open, be)
root(ROOT, open)
case(student, to)
det(student, any)
obl(open, student)
xcomp(open, interested)
mark(increase, in)
advcl(interested, increase)
nmod:poss(understanding, he)
obj(increase, understanding)
cc(appreciation, and)
conj(understanding, appreciation)
case(art, of)
det(art, the)
amod(art, graphic)
cc(ceramic, and)
conj(graphic, ceramic)
nmod(understanding, art)
case(context, in)
nmod:poss(context, they)
amod(context, historical)
punct(technical, ,)
conj(historical, technical)
punct(productive, ,)
cc(productive, and)
conj(historical, productive)
obl(increase, context)
punct(open, .)
det(group, the)
nsubj(meet, group)
root(ROOT, meet)
advmod(meet, once)
det(week, a)
obl:tmod(meet, week)
case(Workshop, in)
det(Workshop, the)
compound(Workshop, Boliou)
compound(Workshop, Student)
obl(meet, Workshop)
punct(meet, .)
nsubj:pass(assist, they)
aux:pass(assist, be)
root(ROOT, assist)
cc(advise, and)
conj(assist, advise)
case(member, by)
obl(advise, member)
case(Department, of)
det(Department, the)
compound(Department, Art)
nmod(member, Department)
punct(assist, .)
nsubj:pass(consider, Athletics)
det(program, the)
compound(program, Athletic)
nsubj:pass(consider, program)
case(Carleton, at)
nmod(program, Carleton)
aux:pass(consider, be)
root(ROOT, consider)
det(part, a)
amod(part, integral)
xcomp(consider, part)
case(activity, of)
det(activity, the)
nmod(part, activity)
case(College, of)
det(College, the)
nmod(activity, College)
cc(operate, and)
conj(consider, operate)
case(procedure, under)
det(procedure, the)
amod(procedure, same)
amod(procedure, budgetary)
obl(operate, procedure)
cc(controls, and)
conj(procedure, controls)
case(work, as)
det(work, the)
amod(work, academic)
nmod(procedure, work)
punct(consider, .)
det(program, the)
amod(education, physical)
compound(program, education)
nsubj(recognize, program)
case(man, for)
nmod(program, man)
root(ROOT, recognize)
det(value, the)
obj(recognize, value)
case(participation, of)
nmod(value, participation)
case(sport, in)
amod(sport, competitive)
nmod(value, sport)
case(development, in)
det(development, the)
obl(recognize, development)
case(student, of)
det(student, the)
amod(student, individual)
nmod(development, student)
cc(aim, and)
conj(recognize, aim)
mark(give, to)
xcomp(aim, give)
det(man, every)
iobj(give, man)
det(opportunity, a)
obj(give, opportunity)
mark(enter, to)
acl(opportunity, enter)
det(form, some)
obj(enter, form)
case(competition, of)
amod(competition, athletic)
nmod(form, competition)
punct(competition, ,)
cc:preconj(intercollegiate, either)
conj(competition, intercollegiate)
cc(intramural, or)
conj(intercollegiate, intramural)
punct(recognize, .)
det(standard, the)
amod(standard, same)
root(ROOT, standard)
case(admission, for)
nmod(standard, admission)
punct(standard, ,)
case(eligibility, for)
nmod(standard, eligibility)
mark(receive, to)
acl(eligibility, receive)
obj(receive, scholarship)
cc(grant, or)
conj(scholarship, grant)
punct(grant, -)
case(aid, in)
punct(aid, -)
nmod(scholarship, aid)
punct(apply, ,)
cc(apply, and)
case(performance, for)
amod(performance, scholastic)
obl(apply, performance)
case(college, at)
nmod(performance, college)
conj(standard, apply)
case(student, to)
det(student, all)
obl(apply, student)
punct(standard, . )
det(committee, a)
compound(committee, faculty)
root(ROOT, committee)
case(athletics, on)
nmod(committee, athletics)
punct(committee, ,)
amod(committee, responsible)
case(faculty, to)
det(faculty, the)
obl(responsible, faculty)
case(control, as)
det(control, a)
amod(control, whole)
punct(control, ,)
compound(control, exercise)
obl(responsible, control)
case(program, over)
det(program, the)
amod(program, athletic)
nmod(control, program)
case(College, of)
det(College, the)
nmod(program, College)
punct(control, .)
nsubj(concern, it)
root(ROOT, concern)
obj(concern, itself)
advmod(concern, with)
punct(1, :)
nummod(policy, 1)
punct(concern, .)
det(policy, the)
obl(concern, policy)
nsubj(govern, which)
acl:relcl(policy, govern)
det(program, the)
obj(govern, program)
nummod(govern, 2)
punct(preservation, .)
det(preservation, the)
acl:relcl(policy, preservation)
case(balance, of)
amod(balance, desirable)
nmod(preservation, balance)
case(program, between)
det(program, the)
amod(program, athletic)
cc(academic, and)
conj(athletic, academic)
nmod(balance, program)
case(college, of)
det(3, the)
compound(3, college)
nummod(approval, 3)
punct(3, .)
det(approval, the)
appos(program, approval)
case(schedule, of)
amod(schedule, athletic)
nmod(approval, schedule)
nummod(maintenance, 4)
punct(4, .)
det(maintenance, the)
appos(approval, maintenance)
case(standard, of)
compound(Conference, Midwest)
compound(standard, Conference)
compound(standard, eligibility)
nmod(maintenance, standard)
nsubj(member, Carleton)
cop(member, be)
det(member, a)
acl:relcl(maintenance, member)
case(Conference, of)
det(Conference, the)
compound(Conference, Midwest)
compound(Conference, Collegiate)
compound(Conference, Athletic)
nmod(member, Conference)
cc(abide, and)
conj(member, abide)
case(rule, by)
nmod:poss(rule, its)
compound(rule, eligibility)
obl(abide, rule)
punct(concern, .)
case(addition, in)
obl(add, addition)
case(rule, to)
det(rule, these)
nmod(addition, rule)
punct(add, ,)
nsubj(add, Carleton)
aux(add, have)
root(ROOT, add)
det(follow, the)
obj(add, follow)
punct(1, :)
appos(follow, 1)
punct(add, . )
det(student, a)
nsubj(ineligible, student)
nsubj(participate, who)
mark(attendance, while)
case(attendance, in)
nsubj(participate, attendance)
case(College, at)
compound(College, Carleton)
nmod(attendance, College)
acl:relcl(student, participate)
case(contest, in)
det(contest, a)
amod(contest, athletic)
obl(participate, contest)
case(year, during)
det(year, the)
compound(year, school)
obl(participate, year)
punct(participate, ,)
amod(year, other)
case(that, than)
obl(other, that)
acl(that, sponsor)
case(College, by)
det(College, the)
obl(sponsor, College)
punct(ineligible, ,)
aux(ineligible, shall)
cop(ineligible, be)
advmod(ineligible, permanently)
root(ROOT, ineligible)
mark(participate, to)
xcomp(ineligible, participate)
case(athletics, in)
amod(athletics, intercollegiate)
obl(participate, athletics)
case(College, at)
compound(College, Carleton)
obl(participate, College)
cc(face, and)
aux(face, will)
advmod(face, also)
conj(ineligible, face)
amod(suspension, permanent)
obj(face, suspension)
case(institution, from)
det(institution, the)
obl(face, institution)
punct(ineligible, .)
det(year, the)
compound(year, school)
nsubj(end, year)
aux(end, do)
advmod(end, not)
root(ROOT, end)
case(student, for)
det(student, any)
obl(end, student)
mark(complete, until)
nsubj(complete, he)
aux(complete, have)
advcl(end, complete)
nmod:poss(examination, he)
amod(examination, last)
obj(complete, examination)
case(semester, of)
det(semester, the)
nmod(examination, semester)
punct(end, . )
root(ROOT, 2)
punct(2, . )
det(student, a)
nsubj(have, student)
mark(eligible, to)
cop(eligible, be)
acl(student, eligible)
case(captaincy, for)
det(captaincy, the)
obl(eligible, captaincy)
case(team, of)
det(team, any)
compound(team, Carleton)
nmod(captaincy, team)
aux(have, must)
root(ROOT, have)
det(record, a)
amod(record, scholastic)
obj(have, record)
case(1.00, of)
case(least, at)
nmod(1.00, least)
nmod(record, 1.00)
punct(have, .)
root(ROOT, the)
punct(the, ``)
nsubj:pass(compose, C)
punct(C, '')
nsubj:pass(compose, club)
aux:pass(compose, be)
root(ROOT, compose)
case(man, of)
det(man, the)
obl(compose, man)
case(College, of)
det(College, the)
nmod(man, College)
nsubj(win, who)
aux(win, have)
acl:relcl(College, win)
det(letter, a)
amod(letter, official)
obj(win, letter)
case(athletics, in)
compound(athletics, Carleton)
nmod(letter, athletics)
punct(compose, .)
det(purpose, the)
nsubj(be, purpose)
case(Club, of)
det(Club, the)
nmod(purpose, Club)
root(ROOT, be)
mark(promote, to)
ccomp(be, promote)
amod(team, better)
amod(team, athletic)
obj(promote, team)
case(Carleton, at)
obl(promote, Carleton)
cc(increase, and)
mark(increase, to)
conj(promote, increase)
obj(increase, interest)
case(they, in)
nmod(interest, they)
case(body, among)
det(body, the)
compound(body, student)
obl(increase, body)
punct(be, .)
nsubj:pass(do, this)
aux:pass(do, be)
root(ROOT, do)
mark(encourage, by)
advcl(do, encourage)
det(body, the)
amod(body, entire)
amod(body, male)
compound(body, student)
obj(encourage, body)
mark(participate, to)
xcomp(encourage, participate)
case(program, in)
cc:preconj(program, either)
det(program, the)
amod(program, intercollegiate)
cc(intramural, or)
conj(intercollegiate, intramural)
compound(program, sport)
obl(participate, program)
cc(sponsor, and)
mark(sponsor, by)
conj(participate, sponsor)
det(cheerleader, the)
compound(cheerleader, Carleton)
obj(sponsor, cheerleader)
punct(do, .)
compound(Club, Soccer)
root(ROOT, Club)
punct(Club, .)
det(Club, the)
compound(Club, Soccer)
nsubj:pass(organize, Club)
aux:pass(organize, be)
root(ROOT, organize)
case(man, by)
amod(man, undergraduate)
obl(organize, man)
amod(man, interested)
mark(play, in)
advcl(interested, play)
obj(play, soccer)
cc(promote, and)
conj(play, promote)
det(sport, the)
obj(promote, sport)
punct(consist, .)
nsubj(consist, Membership)
conj(organize, consist)
case(beginner, of)
cc:preconj(beginner, both)
obl(consist, beginner)
cc(player, and)
amod(player, experience)
conj(beginner, player)
punct(organize, .)
nsubj:pass(hold, practice)
aux:pass(hold, be)
root(ROOT, hold)
advmod(hold, regularly)
cc(prepare, and)
det(schedule, the)
nsubj:pass(prepare, schedule)
case(game, of)
nmod(schedule, game)
aux:pass(prepare, be)
conj(hold, prepare)
case(coach, by)
det(coach, the)
compound(coach, student)
obl(prepare, coach)
cc(officer, and)
det(officer, the)
conj(coach, officer)
case(club, of)
det(club, the)
nmod(officer, club)
punct(hold, .)
nmod:poss(Association, Women)
case(Women, 's)
compound(Association, recreation)
nsubj:pass(affiliate, Association)
punct(Association, .)
det(Association, this)
nsubj:pass(affiliate, Association)
punct(Association, ,)
acl(Association, organize)
case(1920, in)
obl(organize, 1920)
punct(affiliate, ,)
aux:pass(affiliate, be)
root(ROOT, affiliate)
case(Federation, with)
det(Federation, the)
compound(Federation, Athletic)
obl(affiliate, Federation)
case(Women, of)
compound(Women, College)
nmod(Federation, Women)
punct(affiliate, .)
det(purpose, the)
nsubj(be, purpose)
case(organization, of)
det(organization, the)
nmod(purpose, organization)
root(ROOT, be)
mark(further, to)
ccomp(be, further)
det(interest, the)
obj(further, interest)
case(woman, of)
compound(student, woman)
nmod(interest, student)
case(activity, in)
amod(activity, recreational)
nmod(interest, activity)
case(means, as)
det(means, a)
obl(further, means)
mark(promote, of)
acl(means, promote)
amod(efficiency, physical)
obj(promote, efficiency)
punct(sportsmanship, ,)
conj(efficiency, sportsmanship)
punct(play, ,)
cc(play, and)
punct(play, ``)
conj(efficiency, play)
case(sake, for)
nmod:poss(sake, play)
case(play, 's)
nmod(play, sake)
punct(play, '')
punct(govern, .)
det(Association, the)
nsubj:pass(govern, Association)
aux:pass(govern, be)
ccomp(be, govern)
case(board, by)
det(board, a)
obl(govern, board)
acl(board, make)
case(representative, up)
case(representative, of)
obl(make, representative)
case(each, from)
obl(make, each)
case(class, of)
det(class, the)
nummod(class, four)
nmod(each, class)
punct(be, .)
nsubj(open, Membership)
cop(open, be)
root(ROOT, open)
case(student, to)
det(student, any)
compound(student, woman)
obl(open, student)
case(College, in)
det(College, the)
obl(open, College)
punct(open, .)
amod(group, active)
nsubj(include, group)
acl(group, sponsor)
case(organization, by)
det(organization, the)
obl(sponsor, organization)
root(ROOT, include)
det(Club, the)
compound(Club, Saddle)
obj(include, Club)
punct(Orchesis, ,)
conj(Club, Orchesis)
punct(Club, ,)
compound(Club, golf)
conj(Club, Club)
punct(Club, ,)
compound(Club, Tennis)
conj(Club, Club)
punct(dolphin, ,)
cc(dolphin, and)
conj(Club, dolphin)
punct(include, .)
det(Club, the)
compound(Club, Saddle)
nsubj(present, Club)
punct(Club, ,)
amod(Club, open)
case(student, to)
obl(open, student)
advcl(open, proficient)
case(horsemanship, in)
obl(proficient, horsemanship)
punct(present, ,)
root(ROOT, present)
det(exhibition, the)
compound(exhibition, annual)
compound(exhibition, Spring)
compound(exhibition, Riding)
obj(present, exhibition)
punct(offer, ,)
cc(offer, and)
case(year, during)
det(year, the)
obl(offer, year)
nsubj(offer, it)
conj(present, offer)
obj(offer, speaker)
punct(movie, ,)
conj(speaker, movie)
punct(ride, ,)
compound(ride, breakfast)
conj(speaker, ride)
punct(trip, ,)
cc(trip, and)
conj(speaker, trip)
mark(broaden, to)
acl(trip, broaden)
nmod:poss(knowledge, they)
obj(broaden, knowledge)
case(sport, of)
det(sport, the)
nmod(knowledge, sport)
punct(present, .)
nsubj(contribute, Orchesis)
punct(contribute, ,)
case(student, for)
obl(contribute, student)
amod(student, interested)
case(dance, in)
det(dance, the)
amod(dance, modern)
obl(interested, dance)
punct(contribute, ,)
root(ROOT, contribute)
case(Fete, to)
det(Fete, the)
compound(Fete, May)
obl(contribute, Fete)
cc(offer, and)
conj(contribute, offer)
advmod(offer, earlier)
case(year, in)
det(year, the)
obl(offer, year)
det(demonstration, a)
amod(demonstration, modern)
compound(demonstration, dance)
obj(offer, demonstration)
punct(participate, .)
compound(Club, Tennis)
nsubj(participate, Club)
parataxis(contribute, participate)
case(tournament, in)
det(tournament, a)
amod(tournament, dual)
compound(tournament, tennis)
obl(participate, tournament)
case(University, with)
det(University, the)
nmod(tournament, University)
case(Minnesota, of)
nmod(University, Minnesota)
det(fall, each)
nmod:tmod(University, fall)
punct(sponsor, ,)
cc(sponsor, and)
advmod(sponsor, also)
conj(participate, sponsor)
det(meet, a)
nummod(day, two)
punct(day, -)
compound(meet, day)
compound(meet, state)
amod(tennis, invitational)
compound(meet, tennis)
obj(sponsor, meet)
case(Carleton, at)
nmod(meet, Carleton)
case(May, in)
obl(sponsor, May)
punct(participate, .)
det(dolphin, the)
nsubj(present, dolphin)
root(ROOT, present)
det(show, a)
nummod(night, three)
punct(night, -)
compound(show, night)
compound(show, water)
obj(present, show)
det(week, the)
obl:tmod(present, week)
case(May, of)
det(May, the)
nmod(week, May)
flat(May, Fete)
punct(present, .)
case(auspices, under)
det(auspices, the)
obl(organize, auspices)
case(Association, of)
det(Women, the)
nmod:poss(Association, Women)
case(Women, 's)
compound(Association, recreation)
nmod(auspices, Association)
punct(organize, ,)
amod(competition, interclass)
nsubj:pass(organize, competition)
aux:pass(organize, be)
root(ROOT, organize)
case(badminton, in)
obl(organize, badminton)
punct(basketball, ,)
conj(badminton, basketball)
punct(hockey, ,)
compound(hockey, field)
conj(badminton, hockey)
punct(golf, ,)
conj(badminton, golf)
punct(tennis, ,)
conj(badminton, tennis)
punct(swim, ,)
cc(swim, and)
conj(badminton, swim)
punct(organize, .)
det(Association, the)
nsubj(participate, Association)
root(ROOT, participate)
case(carnival, in)
det(carnival, the)
compound(sport, winter)
compound(carnival, sport)
obl(participate, carnival)
cc(sponsor, and)
conj(participate, sponsor)
amod(day, several)
compound(day, play)
obj(sponsor, day)
case(St., with)
obl(sponsor, St.)
flat(St., olaf)
cc(college, and)
amod(college, other)
advmod(college, nearby)
conj(St., college)
punct(participate, .)
case(co-operation, with)
det(co-operation, the)
obl(arrange, co-operation)
case(Department, of)
det(Department, the)
nmod(co-operation, Department)
case(Education, of)
compound(Education, Physical)
nmod(Department, Education)
case(Men, for)
nmod(Department, Men)
punct(arrange, ,)
det(Women, the)
nmod:poss(Association, Women)
case(Women, 's)
compound(Association, recreation)
nsubj(arrange, Association)
root(ROOT, arrange)
amod(tournament, mix)
obj(arrange, tournament)
case(tennis, in)
nmod(tournament, tennis)
cc(golf, and)
conj(tennis, golf)
case(fall, in)
det(fall, the)
obl(arrange, fall)
cc(spring, and)
conj(fall, spring)
punct(be, .)
case(year, throughout)
det(year, the)
obl(be, year)
expl(be, there)
conj(arrange, be)
amod(event, social)
nsubj(be, event)
punct(event, ,)
case(picnic, such)
fixed(such, as)
nmod(event, picnic)
punct(hike, ,)
compound(hike, breakfast)
conj(picnic, hike)
punct(trip, ,)
compound(trip, canoe)
conj(picnic, trip)
punct(banquet, ,)
conj(picnic, banquet)
punct(party, ,)
cc(party, and)
amod(party, indoor)
conj(picnic, party)
punct(arrange, .)
compound(publication, college)
nsubj(maintain, publication)
case(addition, in)
nmod(publication, addition)
case(pamphlet, to)
det(pamphlet, the)
amod(pamphlet, miscellaneous)
nmod(addition, pamphlet)
cc(matter, and)
amod(matter, other)
amod(matter, print)
conj(pamphlet, matter)
obj(issue, which)
nsubj(issue, it)
acl:relcl(matter, issue)
punct(maintain, ,)
det(College, the)
nsubj(maintain, College)
root(ROOT, maintain)
amod(publication, regular)
obj(maintain, publication)
punct(maintain, ,)
mark(follow, as)
advcl(maintain, follow)
punct(follow, :)
det(Bulletin, the)
obj(follow, Bulletin)
punct(Bulletin, ,)
case(issue, in)
nummod(issue, five)
obl(follow, issue)
punct(maintain, :)
det(report, the)
root(ROOT, report)
case(President, of)
det(President, the)
nmod(report, President)
case(August, in)
nmod(report, August)
punct(report, ;)
punct(report, ;)
det(report, the)
compound(report, Alumni)
compound(report, fund)
appos(report, report)
case(September, in)
nmod(report, September)
punct(report, ;)
punct(report, ;)
det(Catalog, the)
compound(Catalog, annual)
parataxis(report, Catalog)
case(March, in)
nmod(Catalog, March)
punct(Catalog, ;)
punct(Catalog, ;)
det(Bulletin, a)
compound(Bulletin, Alumni)
compound(Bulletin, reunion)
appos(Catalog, Bulletin)
case(April, in)
nmod(Bulletin, April)
punct(Bulletin, ;)
punct(Bulletin, ;)
cc(Bulletin, and)
det(Bulletin, a)
amod(Bulletin, special)
conj(Bulletin, Bulletin)
case(June, in)
nmod(Bulletin, June)
punct(report, .)
det(College, the)
nsubj(publish, College)
advmod(publish, also)
root(ROOT, publish)
det(year, each)
obl:tmod(publish, year)
det(report, the)
obj(publish, report)
case(Treasurer, of)
det(Treasurer, the)
nmod(report, Treasurer)
cc(newsletter, and)
det(newsletter, a)
amod(newsletter, monthly)
conj(Treasurer, newsletter)
acl(newsletter, entitle)
compound(comment, Carleton)
compound(comment, College)
obj(entitle, comment)
punct(publish, .)
case(co-operation, in)
obl(edite, co-operation)
case(Association, with)
det(Association, the)
compound(Association, Alumni)
nmod(co-operation, Association)
case(College, of)
compound(College, Carleton)
nmod(Association, College)
punct(edite, ,)
det(magazine, a)
compound(magazine, alumnus)
nsubj:pass(edite, magazine)
punct(magazine, ,)
det(Voice, the)
appos(magazine, Voice)
case(Alumni, of)
det(Alumni, the)
compound(Alumni, Carleton)
nmod(Voice, Alumni)
punct(edite, ,)
aux:pass(edite, be)
root(ROOT, edite)
cc(mail, and)
conj(edite, mail)
nummod(time, seven)
obl:tmod(mail, time)
det(year, a)
obl:tmod(mail, year)
case(Office, by)
det(College, the)
nmod:poss(Office, College)
case(College, 's)
compound(Office, Publications)
obl(mail, Office)
cc(Office, and)
det(Office, the)
compound(Office, Alumni)
conj(Office, Office)
punct(edite, .)
case(interval, at)
obl(issue, interval)
det(directory, a)
compound(directory, alumnus)
nsubj:pass(issue, directory)
aux:pass(issue, be)
root(ROOT, issue)
punct(issue, .)
det(publication, these)
nsubj:pass(secure, publication)
aux(secure, may)
aux:pass(secure, be)
root(ROOT, secure)
mark(follow, as)
advcl(secure, follow)
punct(secure, :)
det(Catalog, the)
compound(Catalog, annual)
root(ROOT, Catalog)
case(director, from)
det(director, the)
nmod(Catalog, director)
case(admission, of)
nmod(director, admission)
cc(issue, and)
amod(issue, other)
conj(director, issue)
case(Office, from)
det(Office, the)
compound(Office, Publications)
nmod(issue, Office)
punct(Catalog, .)
case(January, in)
obl(publish, January)
punct(publish, ,)
nummod(January, 1960)
punct(publish, ,)
det(issue, the)
amod(issue, first)
nsubj:pass(publish, issue)
case(Miscellany, of)
det(Miscellany, the)
compound(Miscellany, Carleton)
nmod(issue, Miscellany)
punct(Miscellany, ,)
det(magazine, a)
amod(magazine, quarterly)
amod(magazine, literary)
appos(Miscellany, magazine)
punct(publish, ,)
aux:pass(publish, be)
root(ROOT, publish)
case(College, by)
det(College, the)
obl(publish, College)
punct(publish, .)
det(magazine, the)
nsubj(include, magazine)
punct(magazine, ,)
acl(magazine, edite)
case(member, by)
obl(edite, member)
case(Department, of)
det(Department, the)
compound(Department, Carleton)
nmod(member, Department)
case(English, of)
nmod(Department, English)
punct(include, ,)
root(ROOT, include)
obj(include, contribution)
case(author, by)
nmod(contribution, author)
case(both, from)
cc:preconj(within, both)
case(community, within)
cc(community, and)
conj(within, beyond)
det(community, the)
compound(community, Carleton)
nmod(author, community)
punct(include, .)
compound(publication, Student)
nsubj:pass(edite, publication)
det(carletonian, the)
nsubj:pass(edite, carletonian)
punct(carletonian, ,)
det(newspaper, the)
compound(newspaper, college)
appos(carletonian, newspaper)
punct(edite, ,)
aux:pass(edite, be)
root(ROOT, edite)
case(student, by)
obl(edite, student)
cc(publish, and)
conj(edite, publish)
case(College, by)
det(College, the)
obl(publish, College)
case(supervision, under)
det(supervision, the)
obl(publish, supervision)
case(Board, of)
det(Board, the)
compound(Board, Publications)
nmod(supervision, Board)
punct(edite, . )
punct(see, ()
root(ROOT, see)
obj(see, page)
nummod(page, 100)
punct(see, .)
punct(see, ))
nsubj:pass(issue, it)
aux:pass(issue, be)
root(ROOT, issue)
advmod(issue, weekly)
case(year, throughout)
det(year, the)
compound(year, college)
obl(issue, year)
punct(issue, .)
det(Board, the)
compound(Board, Publications)
nsubj(hold, Board)
root(ROOT, hold)
amod(examination, annual)
amod(examination, competitive)
obj(hold, examination)
case(place, for)
nmod(examination, place)
case(editorial, on)
det(editorial, the)
nmod(place, editorial)
cc(staff, and)
compound(staff, business)
conj(editorial, staff)
punct(hold, .)
det(editor, the)
nsubj:pass(choose, editor)
punct(editor, ,)
compound(editor, sport)
conj(editor, editor)
punct(manager, ,)
cc(manager, and)
compound(manager, student)
compound(manager, business)
conj(editor, manager)
aux:pass(choose, be)
root(ROOT, choose)
case(December, in)
obl(choose, December)
punct(December, ,)
det(staff, the)
amod(staff, new)
appos(December, staff)
acl(staff, assume)
obj(assume, responsibility)
case(paper, for)
det(paper, the)
nmod(responsibility, paper)
case(beginning, at)
det(beginning, the)
obl(assume, beginning)
case(semester, of)
det(semester, the)
amod(semester, second)
nmod(beginning, semester)
punct(choose, .)
det(paper, the)
nsubj(afford, paper)
root(ROOT, afford)
amod(practice, excellent)
obj(afford, practice)
case(student, for)
nmod(practice, student)
amod(practice, interested)
case(field, in)
det(field, the)
obl(interested, field)
case(journalism, of)
nmod(field, journalism)
punct(afford, .)
det(Algol, the)
nsubj:pass(publish, Algol)
punct(Algol, ,)
det(annual, the)
compound(annual, college)
appos(Algol, annual)
punct(publish, ,)
aux:pass(publish, be)
root(ROOT, publish)
case(fall, in)
det(fall, the)
obl(publish, fall)
case(year, of)
det(year, each)
nmod(fall, year)
punct(publish, .)
det(Algol, the)
nsubj(serve, Algol)
parataxis(publish, serve)
case(record, as)
det(record, a)
obl(serve, record)
case(organization, of)
compound(organization, campus)
nmod(record, organization)
cc(activity, and)
compound(activity, student)
conj(organization, activity)
case(year, during)
det(year, the)
obl(serve, year)
punct(publish, .)
det(Board, the)
compound(Board, Publications)
nsubj(receive, Board)
root(ROOT, receive)
obj(receive, application)
case(position, for)
det(position, the)
nmod(application, position)
case(editor, of)
nmod(position, editor)
cc(manager, and)
compound(manager, business)
conj(editor, manager)
cc(make, and)
conj(receive, make)
det(appointment, the)
obj(make, appointment)
case(spring, in)
det(spring, the)
obl(make, spring)
xcomp(make, previous)
case(year, to)
det(year, the)
obl(previous, year)
case(publication, of)
nmod(year, publication)
punct(receive, .)
nsubj:pass(nominate, member)
case(staff, of)
det(staff, the)
compound(staff, Algol)
nmod(member, staff)
aux:pass(nominate, be)
root(ROOT, nominate)
case(editor, by)
det(editor, the)
obl(nominate, editor)
cc(manager, and)
compound(manager, business)
conj(editor, manager)
cc(appoint, and)
conj(nominate, appoint)
case(Board, by)
det(Board, the)
compound(Board, Publications)
obl(appoint, Board)
punct(Manuscript, .)
appos(Board, Manuscript)
punct(Manuscript, ,)
det(magazine, a)
amod(magazine, quarterly)
amod(magazine, literary)
appos(Manuscript, magazine)
punct(publish, ,)
aux:pass(publish, be)
conj(nominate, publish)
case(student, by)
det(student, the)
obl(publish, student)
case(College, of)
det(College, the)
nmod(student, College)
punct(publish, .)
nsubj(purpose, it)
root(ROOT, be)
det(purpose, the)
nsubj(be, purpose)
case(magazine, of)
det(magazine, this)
nmod(purpose, magazine)
mark(serve, to)
acl(purpose, serve)
case(outlet, as)
det(outlet, a)
obl(serve, outlet)
case(writing, for)
compound(writing, student)
amod(writing, creative)
nmod(outlet, writing)
punct(purpose, .)
det(editor, the)
nsubj:pass(appoint, editor)
cc(manager, and)
compound(manager, business)
conj(editor, manager)
case(Manuscript, of)
nmod(manager, Manuscript)
aux:pass(appoint, be)
root(ROOT, appoint)
case(Board, by)
det(Board, the)
compound(Board, Publications)
obl(appoint, Board)
punct(Board, .)
compound(station, campus)
compound(station, broadcasting)
appos(Board, station)
det(power, a)
amod(power, low)
punct(power, -)
appos(station, power)
punct(power, ,)
punct(current, ``)
compound(current, carrier)
punct(current, -)
amod(station, current)
punct(current, '')
compound(station, broadcasting)
nsubj(hear, station)
punct(station, ,)
nsubj(hear, KARL)
punct(hear, ,)
parataxis(appoint, hear)
advmod(dormitory, only)
case(dormitory, in)
det(dormitory, the)
compound(dormitory, campus)
obl(hear, dormitory)
punct(own, ,)
aux:pass(own, be)
acl:relcl(dormitory, own)
cc(operate, and)
conj(own, operate)
case(student, by)
det(student, the)
obl(operate, student)
mark(provide, to)
advcl(operate, provide)
det(outlet, a)
obj(provide, outlet)
case(dramatic, for)
compound(dramatic, student)
nmod(outlet, dramatic)
punct(musical, ,)
conj(dramatic, musical)
punct(literary, ,)
conj(dramatic, literary)
punct(technical, ,)
conj(dramatic, technical)
punct(other, ,)
cc(other, and)
amod(talent, other)
conj(dramatic, talent)
punct(furnish, ,)
cc(furnish, and)
mark(furnish, to)
conj(talent, furnish)
obj(furnish, information)
punct(music, ,)
conj(information, music)
punct(entertainment, ,)
cc(entertainment, and)
conj(information, entertainment)
case(listener, for)
compound(listener, campus)
nmod(entertainment, listener)
punct(participate, .)
case(hundred, over)
det(student, a)
nummod(student, hundred)
nsubj(participate, student)
acl:relcl(listener, participate)
case(planning, in)
det(planning, the)
obl(participate, planning)
cc(production, and)
conj(planning, production)
case(schedule, of)
det(schedule, the)
amod(schedule, daily)
compound(schedule, program)
nmod(planning, schedule)
punct(provide, .)
nsubj(provide, KARL)
parataxis(participate, provide)
obj(provide, experience)
case(student, for)
nmod(experience, student)
nsubj(wish, who)
acl:relcl(student, wish)
mark(pursue, to)
xcomp(wish, pursue)
obj(pursue, career)
case(radio, in)
obl(pursue, radio)
punct(appoint, .)
compound(government, Student)
nsubj(include, government)
det(Association, the)
compound(Association, Carleton)
compound(Association, Student)
nsubj(include, Association)
root(ROOT, include)
det(student, all)
obj(include, student)
case(college, in)
nmod(student, college)
cc(intend, and)
aux:pass(intend, be)
conj(include, intend)
punct(work, ``)
mark(work, to)
xcomp(intend, work)
case(betterment, for)
det(betterment, the)
obl(work, betterment)
case(College, of)
compound(College, Carleton)
nmod(betterment, College)
mark(provide, by)
advcl(work, provide)
compound(government, student)
obj(provide, government)
cc(participation, and)
compound(participation, student)
conj(government, participation)
case(administration, with)
det(administration, the)
compound(administration, college)
nmod(participation, administration)
case(formulation, in)
det(formulation, the)
nmod(administration, formulation)
cc(execution, and)
conj(formulation, execution)
case(policy, of)
nmod(formulation, policy)
nsubj(pertain, which)
acl:relcl(policy, pertain)
case(life, to)
compound(life, student)
obl(pertain, life)
cc(activity, and)
conj(life, activity)
punct(life, '')
punct(committee, .)
det(co-operative, the)
compound(co-operative, Carleton)
compound(co-operative, Social)
nsubj(committee, co-operative)
cop(committee, be)
det(committee, a)
compound(committee, standing)
conj(pertain, committee)
case(Association, of)
det(Association, the)
compound(Association, Carleton)
compound(Association, Student)
nmod(committee, Association)
punct(committee, .)
compound(end, week)
punct(end, -)
compound(activity, end)
nmod(committee, activity)
case(campus, for)
det(campus, the)
amod(campus, entire)
nmod(activity, campus)
aux:pass(plan, be)
acl:relcl(activity, plan)
case(board, by)
det(board, the)
compound(board, Co-op)
obl(plan, board)
punct(include, .)
case(month, in)
amod(month, recent)
obl(give, month)
punct(give, ,)
amod(attention, much)
nsubj:pass(give, attention)
aux(give, have)
aux:pass(give, be)
root(ROOT, give)
case(extent, to)
det(extent, the)
amod(extent, probable)
obl(give, extent)
case(downtrend, of)
det(downtrend, the)
amod(downtrend, current)
nmod(extent, downtrend)
case(business, in)
nmod(downtrend, business)
cc(economist, and)
conj(business, economist)
aux:pass(divide, be)
advmod(divide, somewhat)
conj(give, divide)
case(outlook, as)
fixed(as, to)
det(outlook, the)
obl(divide, outlook)
case(future, for)
det(future, the)
amod(future, near)
nmod(outlook, future)
punct(give, .)
cc(year, and)
advmod(year, yet)
punct(year, ,)
case(disappointment, despite)
det(disappointment, some)
obl(year, disappointment)
case(performance, with)
det(performance, the)
nmod(disappointment, performance)
case(year, of)
det(year, this)
amod(year, first)
nmod(performance, year)
case(decade, of)
det(decade, the)
amod(decade, new)
nmod(year, decade)
punct(year, ,)
nsubj(year, 1960)
aux(year, have)
cop(year, be)
det(year, a)
amod(year, good)
root(ROOT, year)
case(way, in)
amod(way, many)
nmod(year, way)
punct(year, ,)
mark(reach, with)
amod(measure, many)
amod(measure, overall)
nsubj(reach, measure)
case(business, of)
nmod(measure, business)
aux(reach, have)
advcl(year, reach)
amod(peak, new)
obj(reach, peak)
case(year, for)
det(year, the)
obl(reach, year)
case(whole, as)
det(whole, a)
obl(reach, whole)
punct(year, .)
det(shift, the)
nsubj(thing, shift)
case(sentiment, in)
nmod(shift, sentiment)
case(optimism, from)
amod(optimism, excessive)
nmod(shift, optimism)
advmod(optimism, early)
case(year, in)
det(year, the)
nmod(optimism, year)
case(mood, to)
det(mood, the)
amod(mood, present)
nmod(year, mood)
case(caution, of)
nmod(mood, caution)
aux(thing, have)
advmod(thing, probably)
cop(thing, be)
det(thing, a)
amod(thing, good)
root(ROOT, thing)
punct(thing, ,)
mark(prevent, in)
fixed(in, that)
nsubj(prevent, it)
aux(prevent, have)
advcl(thing, prevent)
det(accumulation, the)
obj(prevent, accumulation)
case(inventory, of)
det(inventory, the)
amod(inventory, burdensome)
nmod(accumulation, inventory)
nsubj(characterize, that)
aux(characterize, have)
acl:relcl(inventory, characterize)
amod(swing, many)
amod(swing, previous)
obj(characterize, swing)
case(cycle, in)
det(cycle, the)
compound(cycle, business)
obl(characterize, cycle)
punct(thing, .)
det(caution, this)
nsubj(noticeable, caution)
aux(noticeable, have)
cop(noticeable, be)
advmod(noticeable, particularly)
root(ROOT, noticeable)
case(tendency, in)
det(tendency, a)
obl(noticeable, tendency)
case(retailer, of)
nmod(tendency, retailer)
cc(distributor, and)
conj(retailer, distributor)
mark(shift, to)
acl(tendency, shift)
det(burden, the)
compound(burden, inventory)
obj(shift, burden)
advmod(shift, back)
case(supplier, on)
det(supplier, the)
obl(back, supplier)
punct(low, ,)
cc(low, and)
det(stock, the)
compound(stock, fact)
nsubj(low, stock)
case(retail, at)
nmod(stock, retail)
cop(low, be)
conj(noticeable, low)
case(line, in)
amod(line, many)
nsubj(escape, line)
aux(escape, have)
conj(low, escape)
obj(escape, attention)
case(presence, because)
fixed(because, of)
det(presence, the)
obl(escape, presence)
case(stock, of)
amod(stock, higher)
nmod(presence, stock)
case(level, at)
det(level, the)
compound(level, manufacturing)
nmod(presence, level)
punct(noticeable, .)
case(industry, in)
det(industry, the)
compound(industry, electronics)
obl(illustrate, industry)
punct(illustrate, ,)
det(tendency, this)
nsubj:pass(illustrate, tendency)
aux:pass(illustrate, be)
advmod(illustrate, well)
root(ROOT, illustrate)
case(inventory, by)
obl(illustrate, inventory)
case(set, of)
compound(set, tv)
nmod(inventory, set)
punct(illustrate, . )
compound(stock, factory)
nsubj(highest, stock)
case(month, in)
amod(month, recent)
nmod(stock, month)
aux(highest, have)
cop(highest, be)
det(highest, the)
root(ROOT, highest)
nsubj(year, they)
aux(year, have)
cop(year, be)
case(year, in)
nummod(year, three)
obl(highest, year)
punct(highest, ,)
mark(1959, while)
nsubj(1959, those)
case(retail, at)
nmod(those, retail)
cop(1959, be)
case(1959, below)
advcl(highest, 1959)
punct(highest, .)
det(value, the)
amod(value, total)
root(ROOT, value)
case(shipment, of)
nmod:poss(industry, we)
nmod:poss(shipment, industry)
case(industry, 's)
nmod(value, shipment)
punct(value, ,)
case(price, at)
compound(price, factory)
nmod(shipment, price)
punct(increase, ,)
acl(value, increase)
case($, from)
obl(increase, $)
compound(billion, 9.2)
nummod($, billion)
case(1959, in)
obl(increase, 1959)
case($, to)
advmod($, approximately)
obl(increase, $)
compound(billion, 10.1)
nummod($, billion)
case(result, as)
det(result, a)
nmod($, result)
case(increase, of)
nmod(result, increase)
case(all, in)
nmod(increase, all)
case(segment, of)
det(segment, the)
amod(segment, major)
nmod(all, segment)
case(business, of)
nmod:poss(business, we)
nmod(segment, business)
punct(segment, --)
compound(entertainment, home)
appos(segment, entertainment)
punct(military, ,)
conj(entertainment, military)
punct(industrial, ,)
conj(entertainment, industrial)
punct(replacement, ,)
cc(replacement, and)
conj(entertainment, replacement)
punct(entertainment, . )
nsubj(believe, I)
root(ROOT, believe)
det(gain, a)
amod(gain, further)
nsubj(prospect, gain)
cop(prospect, be)
case(prospect, in)
ccomp(believe, prospect)
case(1961, for)
obl(prospect, 1961)
punct(believe, .)
compound(entertainment, Home)
compound(sale, entertainment)
nsubj(be, sale)
compound(sale, up)
acl(sale, reflect)
det(percentage, the)
amod(percentage, largest)
obj(reflect, percentage)
case(set, of)
amod(end, high)
punct(end, -)
compound(set, end)
nmod(percentage, set)
case(console, such)
fixed(such, as)
nmod(set, console)
cc(combination, and)
conj(console, combination)
case(1953, since)
nmod(console, 1953)
punct(value, ,)
compound(value, dollar)
conj(console, value)
case(electronics, of)
compound(electronics, home)
compound(electronics, entertainment)
nmod(value, electronics)
case(1960, in)
nmod(electronics, 1960)
cop($, be)
advmod($, about)
root(ROOT, $)
compound(billion, 1.9)
nummod($, billion)
punct($, ,)
case($, compare)
fixed(compare, to)
nmod($, $)
compound(billion, 1.7)
nummod($, billion)
case(1959, in)
nmod($, 1959)
punct($, .)
nsubj(run, sale)
case(set, of)
compound(set, tv)
nmod(sale, set)
case(retail, at)
nmod(set, retail)
acl:relcl($, run)
advmod(run, ahead)
case(month, of)
det(month, the)
amod(month, like)
obl(run, month)
case(1959, of)
nmod(month, 1959)
case(July, through)
nmod(month, July)
punct(run, ;)
punct(production, ;)
amod(production, set)
nsubj(run, production)
punct(exclude, ()
acl(production, exclude)
obj(exclude, those)
acl(those, destine)
case(market, for)
det(market, the)
compound(market, export)
obl(destine, market)
punct(exclude, ))
advmod(run, also)
conj(run, run)
advmod(run, ahead)
case(month, in)
det(month, the)
amod(month, early)
obl(run, month)
punct(curtail, ,)
cc(curtail, but)
aux:pass(curtail, be)
conj(run, curtail)
case(shutdown, after)
det(shutdown, the)
amod(shutdown, usual)
compound(shutdown, vacation)
obl(curtail, shutdown)
case(face, in)
det(face, the)
nmod(shutdown, face)
case(evidence, of)
amod(evidence, grow)
nmod(face, evidence)
mark(optimistic, that)
nsubj(optimistic, some)
case(plan, of)
det(plan, the)
amod(production, early)
compound(plan, production)
nmod(some, plan)
aux(optimistic, have)
cop(optimistic, be)
advmod(optimistic, overly)
acl(evidence, optimistic)
punct(run, .)
case(year, for)
det(year, the)
obl(come, year)
case(whole, as)
det(whole, a)
nmod(year, whole)
punct(come, ,)
compound(sale, retail)
nsubj(come, sale)
case(set, of)
compound(set, tv)
nmod(sale, set)
advmod(come, probably)
root(ROOT, come)
case(million, to)
compound(million, 5.8)
obl(come, million)
case(million, against)
nummod(million, 5.7)
obl(come, million)
case(1959, in)
obl(come, 1959)
punct(come, ;)
punct(come, ;)
advmod(come, however)
punct(come, ,)
nsubj(come, production)
parataxis(come, come)
case(million, to)
advmod(million, only)
compound(million, 5.6)
obl(come, million)
case(million, compare)
case(million, to)
nummod(million, 6.2)
obl(come, million)
punct(come, .)
case(contrast, in)
obl(increase, contrast)
case(turnout, to)
det(turnout, the)
amod(turnout, lower)
nmod(contrast, turnout)
case(tv, of)
nmod(turnout, tv)
punct(increase, ,)
amod(production, total)
compound(production, radio)
nsubj(increase, production)
root(ROOT, increase)
case(set, from)
compound(million, 15.4)
nummod(set, million)
obl(increase, set)
case(million, to)
compound(million, 16.7)
nmod(set, million)
punct(export, ()
amod(export, exclude)
appos(million, export)
punct(export, ))
punct(increase, .)
det(radio, both)
compound(radio, home)
cc(auto, and)
conj(home, auto)
nsubj(demand, radio)
cop(demand, be)
case(demand, in)
amod(demand, excellent)
root(ROOT, demand)
punct(demand, ,)
case(sale, with)
compound(sale, retail)
nmod(demand, sale)
case(set, of)
compound(set, home)
nmod(sale, set)
case(1959, ahead)
case(1959, of)
nmod(sale, 1959)
case(month, in)
det(month, every)
nmod(1959, month)
case(eleven, of)
det(eleven, the)
amod(eleven, first)
nmod(month, eleven)
punct(demand, ;)
punct(demand, ;)
nsubj(equal, sale)
cc(production, and)
conj(sale, production)
case(set, of)
compound(set, home)
nmod(sale, set)
cop(equal, be)
advmod(equal, about)
parataxis(demand, equal)
case(unit, at)
compound(million, 10.4)
nummod(unit, million)
obl(equal, unit)
punct(demand, .)
compound(production, Auto)
amod(production, set)
nsubj(come, production)
root(ROOT, come)
case(million, to)
advmod(6.3, about)
compound(million, 6.3)
obl(come, million)
case(million, compare)
case(million, to)
nummod(million, 5.6)
obl(come, million)
case(1959, in)
obl(come, 1959)
punct(come, .)
amod(phonograph, Separate)
nsubj(have, phonograph)
advmod(have, also)
root(ROOT, have)
det(year, a)
amod(year, good)
obj(have, year)
punct(have, ,)
advcl(have, reflect)
det(popularity, the)
amod(popularity, grow)
obj(reflect, popularity)
case(sound, of)
compound(sound, stereo)
nmod(popularity, sound)
cc(tendency, and)
det(tendency, the)
amod(tendency, same)
conj(popularity, tendency)
case(part, on)
det(part, the)
nmod(tendency, part)
case(consumer, of)
det(consumer, the)
nmod(part, consumer)
mark(upgrade, to)
acl(part, upgrade)
nsubj(characterize, that)
ccomp(upgrade, characterize)
det(market, the)
compound(tv, radio)
punct(tv, -)
compound(market, tv)
obj(characterize, market)
punct(have, .)
det(outlook, the)
nsubj(far, outlook)
case(electronics, for)
compound(electronics, entertainment)
nmod(outlook, electronics)
case(1961, in)
nmod(electronics, 1961)
cop(far, be)
advmod(far, certainly)
root(ROOT, far)
case(clear, from)
obl(far, clear)
case(present, at)
obl(far, present)
punct(show, ,)
cc(show, but)
amod(survey, recent)
nsubj(show, survey)
aux(show, have)
conj(far, show)
det(desire, a)
obj(show, desire)
case(part, on)
det(part, the)
nmod(desire, part)
case(consumer, of)
nmod(part, consumer)
mark(step, to)
acl(part, step)
compound:prt(step, up)
nmod:poss(plan, they)
compound(plan, buying)
obj(step, plan)
case(goods, for)
amod(goods, durable)
nmod(plan, goods)
punct(far, . )
nsubj(expect, I)
aux(expect, would)
root(ROOT, expect)
mark(1960, that)
nsubj(1960, sale)
case(retail, at)
nmod(sale, retail)
case(half, in)
det(half, the)
amod(half, first)
nmod(sale, half)
case(1961, of)
nmod(half, 1961)
aux(1960, might)
cop(1960, be)
case(1960, below)
ccomp(expect, 1960)
case(%, by)
det(%, some)
nummod(%, 10)
case(15, -)
nmod(10, 15)
obl(1960, %)
cc(show, but)
det(level, that)
amod(half, second)
punct(half, -)
compound(level, half)
nsubj(show, level)
aux(show, should)
conj(1960, show)
det(comparison, a)
amod(comparison, favorable)
obj(show, comparison)
punct(show, ,)
case(possibility, with)
det(possibility, a)
obl(show, possibility)
case(demand, of)
det:predet(demand, quite)
amod(demand, strong)
nmod(possibility, demand)
advmod(demand, late)
case(year, in)
det(year, the)
nmod(demand, year)
mark(recover, if)
compound(condition, business)
nsubj(recover, condition)
acl(possibility, recover)
mark(suggest, as)
det(forecast, some)
amod(forecast, recent)
nsubj(suggest, forecast)
advcl(recover, suggest)
nsubj(will, they)
ccomp(suggest, will)
punct(expect, . )
nsubj(look, I)
root(ROOT, look)
case(sale, for)
compound(sale, tv)
obl(look, sale)
cc(production, and)
conj(sale, production)
mark(equal, to)
cop(equal, be)
advmod(equal, approximately)
xcomp(look, equal)
case(set, at)
compound(million, 5.7)
nummod(set, million)
obl(equal, set)
case(year, for)
det(year, the)
nmod(set, year)
punct(look, ,)
cc(look, but)
nsubj(look, I)
conj(look, look)
case(decline, for)
det(decline, some)
obl(look, decline)
case(radio, in)
nmod(decline, radio)
case(rate, from)
det(rate, the)
amod(rate, high)
nmod(decline, rate)
case(1961, in)
nmod(rate, 1961)
case(level, to)
advmod(nearly, more)
advmod(1959, nearly)
det(1959, the)
nummod(level, 1959)
obl(look, level)
case(set, of)
nummod(set, 15.0)
case(15.5, -)
nmod(15.0, 15.5)
nmod(15.0, million)
nmod(level, set)
punct(look, . )
nsubj(believe, I)
advmod(believe, therefore)
root(ROOT, believe)
expl(realistic, it)
cop(realistic, be)
ccomp(believe, realistic)
mark(assume, to)
csubj(realistic, assume)
det(drop, a)
amod(drop, modest)
obj(assume, drop)
case(value, in)
det(value, the)
amod(value, total)
nmod(drop, value)
case(electronics, of)
compound(entertainment, home)
compound(electronics, entertainment)
nmod(value, electronics)
case($, to)
advmod($, about)
nmod(drop, $)
compound(million, 1.8)
nummod($, million)
punct($, ,)
advmod(1960, slightly)
case(1960, below)
nmod($, 1960)
punct(1959, ,)
cc(1959, but)
case(1959, above)
conj(1960, 1959)
punct(believe, . )
amod(electronics, military)
nsubj(witness, electronics)
mark(grow, to)
acl(electronics, grow)
obj(grow, 1960)
root(ROOT, witness)
det(increase, another)
amod(increase, substantial)
obj(witness, increase)
case(shipment, in)
nmod:poss(industry, we)
nmod:poss(shipment, industry)
case(industry, 's)
nmod(increase, shipment)
case(electronics, of)
amod(electronics, military)
nmod(shipment, electronics)
punct(electronics, ,)
nsubj(total, which)
acl:relcl(electronics, total)
advmod($, about)
obj(total, $)
compound(billion, 5.4)
nummod($, billion)
case($, compare)
case($, to)
obl(total, $)
compound(billion, 4.9)
compound($, billion)
case(1959, in)
nmod($, 1959)
punct(witness, .)
expl(interesting, it)
cop(interesting, be)
root(ROOT, interesting)
mark(note, to)
csubj(interesting, note)
mark(greater, that)
det(level, the)
amod(level, present)
nsubj(greater, level)
case(procurement, of)
amod(electronics, military)
compound(procurement, electronics)
nmod(level, procurement)
cop(greater, be)
ccomp(note, greater)
case(sale, than)
det(industry, the)
nmod:poss(sale, industry)
case(industry, 's)
amod(sale, total)
obl(greater, sale)
case(market, to)
det(market, all)
nmod(sale, market)
case(1950, in)
obl(greater, 1950)
case(1953, -)
nmod(1950, 1953)
punct(1950, ,)
nsubj(year, which)
cop(year, be)
amod(year, good)
acl:relcl(1950, year)
case(industry, for)
nmod:poss(industry, we)
nmod(year, industry)
case(television, with)
nmod(industry, television)
acl(year, enjoy)
nmod:poss(period, its)
amod(period, initial)
obj(enjoy, period)
case(acceptance, of)
amod(acceptance, rapid)
compound(acceptance, consumer)
nmod(period, acceptance)
punct(interesting, .)
expl(point, it)
aux(point, have)
aux:pass(point, be)
advmod(point, correctly)
root(ROOT, point)
compound:prt(point, out)
case(people, by)
advmod(inform, well)
punct(inform, -)
amod(people, inform)
obl(point, people)
case(industry, in)
det(industry, the)
nmod(people, industry)
mark(unrealistic, that)
expl(unrealistic, it)
cop(unrealistic, be)
advmod(unrealistic, probably)
ccomp(point, unrealistic)
mark(expect, to)
xcomp(unrealistic, expect)
det(continuation, a)
obj(expect, continuation)
case(growth, of)
det(growth, the)
amod(growth, yearly)
nmod(continuation, growth)
case(%, of)
nummod(%, 15)
nmod(growth, %)
cc(better, or)
conj(%, better)
nsubj(characterize, that)
acl:relcl(%, characterize)
det(decade, the)
obj(characterize, decade)
case(1950', of)
det(1950', the)
nmod(decade, 1950')
punct(enter, ,)
cc(enter, and)
mark(enter, that)
nmod:poss(market, we)
amod(market, military)
nsubj(enter, market)
aux(enter, may)
aux(enter, be)
conj(characterize, enter)
case(phase, upon)
det(phase, a)
amod(phase, new)
obl(enter, phase)
case(which, in)
obl(give, which)
nsubj(give, procurement)
case(system, of)
amod(weapon, multiple)
compound(system, weapon)
nmod(procurement, system)
aux(give, will)
acl:relcl(phase, give)
obj(give, way)
case(concentration, to)
obl(give, concentration)
case(area, of)
advmod(undeveloped, still)
amod(area, undeveloped)
nmod(concentration, area)
case(capability, of)
nmod:poss(capability, we)
compound(capability, defense)
nmod(area, capability)
punct(give, .)
mark(true, while)
nsubj(true, this)
aux(true, may)
advmod(true, well)
cop(true, be)
advcl(important, true)
case(general, in)
obl(true, general)
punct(believe, ,)
nsubj(believe, I)
conj(point, believe)
expl(important, it)
cop(important, be)
advmod(important, also)
ccomp(believe, important)
mark(keep, to)
csubj(important, keep)
case(mind, in)
obl(keep, mind)
mark(suggest, that)
det(development, some)
amod(development, recent)
nsubj(suggest, development)
ccomp(keep, suggest)
mark(one, that)
case(year, over)
det(year, the)
amod(year, next)
obl(one, year)
cc(electronics, or)
nummod(year, so)
amod(electronics, military)
nsubj(one, electronics)
aux(one, may)
cop(one, be)
ccomp(suggest, one)
case(area, of)
det(area, the)
advmod(grow, most)
advmod(grow, strongly)
amod(area, grow)
nmod(one, area)
case(economy, in)
det(economy, a)
nmod(area, economy)
nsubj(expand, which)
aux(expand, be)
advmod(expand, not)
acl:relcl(economy, expand)
advmod(expand, rapidly)
case(direction, in)
amod(direction, other)
obl(expand, direction)
punct(point, .)
case(item, among)
det(item, the)
obl(program, item)
acl(item, schedule)
case(acceleration, for)
obl(schedule, acceleration)
case(future, in)
det(future, the)
amod(future, near)
obl(schedule, future)
cop(program, be)
det(program, the)
compound(program, Polaris)
cc(b70, and)
conj(Polaris, b70)
root(ROOT, program)
punct(strengthen, ,)
appos(program, strengthen)
case(system, of)
det(system, the)
amod(system, airborne)
compound(system, alert)
nmod(strengthen, system)
case(Command, of)
det(Command, the)
compound(Command, Strategic)
compound(Command, Air)
nmod(system, Command)
punct(system, ,)
cc(system, and)
amod(system, improve)
compound(system, battlefield)
compound(system, surveillance)
conj(system, system)
punct(program, .)
nsubj:pass(expect, Research)
cc(expenditure, and)
compound(expenditure, development)
conj(Research, expenditure)
acl(Research, connect)
case(SAMOS, with)
det(SAMOS, the)
compound(SAMOS, reconnaissance)
amod(SAMOS, satellite)
obl(connect, SAMOS)
cc(development, and)
det(development, the)
amod(development, future)
conj(Research, development)
case(system, of)
amod(system, ballistic)
compound(defense, missile)
compound(system, defense)
nmod(development, system)
case(Zeus, such)
fixed(such, as)
compound(Zeus, Nike)
punct(Zeus, -)
nmod(system, Zeus)
aux:pass(expect, be)
root(ROOT, expect)
mark(increase, to)
xcomp(expect, increase)
advmod(increase, substantially)
punct(expect, .)
nsubj(show, Research)
punct(test, ,)
compound(test, development)
conj(Research, test)
cc(fund, and)
compound(fund, evaluation)
conj(Research, fund)
punct(Research, ,)
acl(fund, devote)
case(missile, to)
obl(devote, missile)
case(1960, in)
obl(devote, 1960)
cop(large, be)
nummod(time, 3)
case(4, to)
nmod(3, 4)
obl:npmod(large, time)
advmod(large, as)
conj(devote, large)
case(those, as)
obl(large, those)
acl(those, devote)
case(aircraft, to)
obl(devote, aircraft)
punct(expect, ,)
cc(expect, and)
amod(procurement, actual)
compound(procurement, missile)
nsubj:pass(expect, procurement)
aux:pass(expect, be)
conj(large, expect)
mark(exceed, to)
xcomp(expect, exceed)
compound(procurement, aircraft)
obj(exceed, procurement)
case(1963, by)
obl(exceed, 1963)
punct(exceed, .)
advmod(later, still)
advmod(show, later)
punct(show, ,)
det(realm, the)
nsubj(show, realm)
case(technology, of)
compound(technology, space)
nmod(realm, technology)
aux(show, will)
root(ROOT, show)
amod(gain, substantial)
obj(show, gain)
punct(show, ;)
punct(show, ;)
nsubj:pass(estimate, it)
aux(estimate, have)
aux:pass(estimate, be)
parataxis(show, estimate)
mark(rise, that)
nsubj(rise, spending)
case(Aeronautics, by)
det(Aeronautics, the)
compound(Aeronautics, National)
nmod(spending, Aeronautics)
cc(Space, and)
conj(Aeronautics, Space)
conj(Aeronautics, Administration)
aux(rise, will)
ccomp(estimate, rise)
case($, from)
advmod($, less)
fixed(less, than)
obl(rise, $)
compound(million, 500)
nummod($, million)
case(1960, in)
amod(1960, fiscal)
nmod($, 1960)
case($, to)
advmod($, more)
fixed(more, than)
nmod($, $)
compound(billion, 2)
compound($, billion)
case(1967, by)
nmod($, 1967)
punct(closer, ,)
cc(closer, and)
mark(closer, that)
det(share, the)
amod(industry, electronic)
nmod:poss(share, industry)
case(industry, 's)
nsubj(closer, share)
case(expenditure, of)
det(expenditure, these)
nmod(share, expenditure)
aux(closer, will)
cop(closer, be)
conj(rise, closer)
case(%, to)
nummod(%, 50)
obl(closer, %)
case(%, than)
det(%, the)
amod(%, current)
nummod(%, 20)
obl(closer, %)
punct(show, .)
det(procurement, the)
amod(procurement, step)
punct(step, -)
compound:prt(step, up)
compound(procurement, defense)
nsubj(begin, procurement)
acl(procurement, call)
obl(call, for)
case(budget, in)
det(budget, the)
nummod(budget, 1961)
obl(call, budget)
aux(begin, have)
advmod(begin, already)
root(ROOT, begin)
mark(make, to)
xcomp(begin, make)
obj(make, itself)
xcomp(make, feel)
case(upturn, in)
det(upturn, a)
obl(feel, upturn)
case(order, in)
nmod(upturn, order)
case(equipment, for)
amod(equipment, military)
amod(equipment, electronic)
nmod(order, equipment)
cc(component, and)
det(component, the)
conj(equipment, component)
nsubj(go, that)
acl:relcl(component, go)
case(it, into)
obl(go, it)
punct(suggest, ,)
cc(suggest, and)
nsubj:pass(suggest, it)
aux(suggest, have)
aux:pass(suggest, be)
conj(begin, suggest)
mark(request, that)
det(increase, a)
amod(increase, additional)
compound(increase, $)
nummod($, 2)
nummod($, billion)
nsubj:pass(request, increase)
case(spending, in)
amod(spending, total)
compound(spending, defense)
nmod(increase, spending)
aux(request, may)
aux:pass(request, be)
ccomp(suggest, request)
case(1962, for)
amod(1962, fiscal)
obl(request, 1962)
punct(begin, .)
mark(gradual, although)
det(impact, the)
nsubj(gradual, impact)
case(increase, of)
det(increase, these)
nmod(impact, increase)
case(shipment, on)
nmod:poss(industry, we)
nmod:poss(shipment, industry)
case(industry, 's)
nmod(increase, shipment)
aux(gradual, will)
cop(gradual, be)
advcl(look, gradual)
punct(gradual, ,)
case(balance, on)
obl(look, balance)
nsubj(look, I)
root(ROOT, look)
case(increase, for)
det(increase, another)
amod(increase, good)
obl(look, increase)
case(shipment, in)
nmod(increase, shipment)
case(year, in)
det(year, the)
compound(year, come)
nmod(increase, year)
punct(look, ,)
case($, to)
case(least, at)
nmod($, least)
obl(look, $)
compound(billion, 6)
compound($, billion)
punct(look, .)
amod(equipment, Industrial)
amod(equipment, electronic)
root(ROOT, equipment)
acl(equipment, pace)
case(growth, by)
det(growth, the)
amod(growth, continue)
amod(growth, rapid)
obl(pace, growth)
case(processing, of)
amod(processing, electronic)
compound(processing, data)
nmod(growth, processing)
punct(sale, ,)
conj(growth, sale)
case(equipment, of)
amod(equipment, industrial)
cc(commercial, and)
conj(industrial, commercial)
conj(industrial, electronic)
nmod(sale, equipment)
acl(equipment, total)
obj(total, $)
compound(billion, 1.8)
nummod($, billion)
case($, compare)
case($, to)
obl(total, $)
compound(billion, 1.6)
nummod($, billion)
case(1959, in)
nmod($, 1959)
punct(equipment, .)
det(market, the)
nsubj(continue, market)
case(computer, for)
nmod(market, computer)
cc(handling, and)
amod(handling, other)
compound(handling, data)
punct(handling, -)
conj(computer, handling)
root(ROOT, continue)
mark(expand, to)
xcomp(continue, expand)
case(rate, at)
det(rate, the)
obl(expand, rate)
case(%, of)
advmod(30, about)
nummod(%, 30)
nmod(rate, %)
advmod(expand, annually)
punct(expand, ,)
advcl(expand, reach)
det($, some)
obj(reach, $)
compound($, 450)
nummod($, million)
case(1960, in)
obl(reach, 1960)
punct(continue, .)
amod(estimate, inform)
nsubj(look, estimate)
root(ROOT, look)
case(market, for)
det(market, this)
obl(look, market)
mark(quadruple, to)
advmod(quadruple, approximately)
advcl(look, quadruple)
case(1960', by)
det(1960', the)
amod(1960', late)
obl(quadruple, 1960')
punct(look, ,)
case(stimulus, under)
det(stimulus, the)
obl(look, stimulus)
case(application, of)
amod(application, new)
nmod(stimulus, application)
case(field, in)
det(field, the)
nmod(stimulus, field)
case(banking, of)
nmod(field, banking)
cc(retail, and)
conj(banking, retail)
punct(control, ,)
amod(process, industrial)
compound(control, process)
conj(banking, control)
punct(storage, ,)
cc(storage, and)
compound(storage, information)
conj(banking, storage)
cc(retrieval, and)
conj(storage, retrieval)
punct(look, .)
case(field, in)
det(field, the)
amod(field, industrial)
obl(bright, field)
punct(bright, ,)
nsubj(bright, prospect)
case(expenditure, for)
amod(expenditure, higher)
nmod(prospect, expenditure)
case(equipment, on)
amod(testing, electronic)
nmod(expenditure, testing)
cc(measure, and)
conj(testing, measure)
nmod(expenditure, equipment)
cop(bright, be)
advmod(bright, also)
advmod(bright, quite)
root(ROOT, bright)
punct(bright, .)
case(term, for)
det(term, the)
amod(term, near)
obl(realize, term)
punct(realize, ,)
advmod(realize, however)
punct(realize, ,)
nsubj:pass(realize, it)
aux(realize, must)
aux:pass(realize, be)
root(ROOT, realize)
mark(sensitive, that)
det(market, the)
amod(market, industrial)
cc(commercial, and)
conj(industrial, commercial)
nsubj(sensitive, market)
cop(sensitive, be)
advmod(more, somewhat)
advmod(sensitive, more)
ccomp(realize, sensitive)
case(condition, to)
amod(condition, general)
compound(condition, business)
obl(sensitive, condition)
mark(market, than)
cop(market, be)
det(market, the)
amod(market, military)
advcl(sensitive, market)
punct(expect, ,)
cc(expect, and)
case(reason, for)
det(reason, this)
obl(expect, reason)
nsubj(expect, I)
aux(expect, would)
conj(realize, expect)
mark(smaller, that)
det(gain, any)
nsubj(smaller, gain)
case(1961, in)
nmod(gain, 1961)
aux(smaller, may)
cop(smaller, be)
advmod(smaller, somewhat)
ccomp(expect, smaller)
case(those, than)
obl(smaller, those)
case(year, of)
amod(year, recent)
nmod(those, year)
punct(smaller, ;)
punct(realize, ;)
nsubj(exceed, sale)
aux(exceed, should)
advmod(exceed, slightly)
parataxis(smaller, exceed)
obj(exceed, 1960)
punct(exceed, ,)
advmod(exceed, however)
punct(reach, ,)
cc(reach, and)
conj(exceed, reach)
obj(reach, $)
compound($, 1.9)
compound($, billion)
punct(realize, .)
compound(part, replacement)
nsubj(continue, part)
case(addition, in)
nmod(part, addition)
case(segment, to)
det(segment, the)
nummod(segment, three)
amod(segment, major)
amod(equipment, original)
compound(segment, equipment)
nmod(part, segment)
case(business, of)
det(business, the)
compound(business, electronics)
nmod(segment, business)
punct(continue, ,)
det(growth, the)
amod(growth, steady)
nsubj(continue, growth)
case(market, in)
det(market, the)
nmod(growth, market)
case(part, for)
compound(part, replacement)
nmod(market, part)
root(ROOT, continue)
obl:tmod(continue, year)
case(year, by)
obl(continue, year)
punct(continue, .)
nsubj(business, this)
cop(business, be)
advmod(business, now)
det(business, a)
compound(business, $)
compound(billion, 1.0)
nummod($, billion)
root(ROOT, business)
punct(business, ,)
advmod(business, up)
case($, from)
obl(business, $)
compound(billion, 0.9)
nummod($, billion)
case(1959, in)
nmod($, 1959)
punct(reach, ,)
cc(reach, and)
aux(reach, should)
conj(business, reach)
obj(reach, $)
compound(billion, 1.1)
nummod($, billion)
case(1961, in)
obl(reach, 1961)
punct(business, .)
det(market, the)
nsubj(reflect, market)
case(part, for)
amod(part, electronic)
nmod(market, part)
case(1960, in)
nmod(part, 1960)
aux(reflect, have)
root(ROOT, reflect)
det(pattern, the)
amod(pattern, change)
obj(reflect, pattern)
case(segment, of)
det(segment, the)
amod(segment, various)
compound(segment, end)
compound(segment, equipment)
nmod(pattern, segment)
case(industry, of)
det(industry, the)
nmod(segment, industry)
punct(reflect, .)
obj(reflect, demand)
case(part, for)
nmod(demand, part)
case(entertainment, for)
compound(entertainment, home)
nmod(part, entertainment)
cop(strong, be)
acl:relcl(demand, strong)
case(half, in)
det(half, the)
amod(half, first)
obl(strong, half)
punct(cut, ,)
cc(cut, but)
nsubj:pass(cut, purchase)
aux:pass(cut, be)
conj(strong, cut)
advmod(cut, back)
case(level, to)
amod(level, lower)
obl(back, level)
case(fall, during)
det(fall, the)
obl(cut, fall)
mark(reduce, as)
amod(manufacturer, set)
nsubj(reduce, manufacturer)
advcl(cut, reduce)
nmod:poss(rate, they)
amod(rate, own)
compound(rate, operating)
obj(reduce, rate)
punct(reflect, .)
case(field, in)
det(field, the)
amod(field, military)
obl(turn, field)
punct(turn, ,)
advcl(turn, income)
nsubj(turn, order)
root(ROOT, turn)
compound:prt(turn, down)
advmod(turn, early)
case(year, in)
det(year, the)
obl(turn, year)
punct(remain, ,)
cc(remain, and)
conj(turn, remain)
advmod(slow, rather)
advmod(remain, slow)
case(fall, until)
amod(fall, late)
obl(remain, fall)
mark(begin, when)
det(upturn, the)
nsubj(begin, upturn)
case(procurement, in)
nmod(upturn, procurement)
case(equipment, of)
nmod(procurement, equipment)
advcl(remain, begin)
mark(make, to)
xcomp(begin, make)
obj(make, itself)
xcomp(make, feel)
case(order, in)
amod(order, rise)
obl(feel, order)
case(component, for)
nmod(order, component)
punct(turn, .)
nsubj(exceed, sale)
case(transistor, of)
nmod(sale, transistor)
case(1960, in)
nmod(transistor, 1960)
root(ROOT, exceed)
obj(exceed, $)
compound(million, 300)
nummod($, million)
punct(exceed, ,)
case($, compare)
case($, to)
nmod($, $)
compound(million, 222)
nummod($, million)
case(1959, in)
nmod($, 1959)
case(reduction, despite)
amod(reduction, substantial)
compound(reduction, price)
obl(total, reduction)
case(type, in)
advmod(type, virtually)
det(type, all)
nmod(reduction, type)
punct(total, .)
nsubj(total, Production)
parataxis(exceed, total)
advmod(million, about)
compound(million, 123)
nummod(unit, million)
obj(total, unit)
case(million, against)
compound(million, 82)
nmod(unit, million)
case(1959, in)
nmod(million, 1959)
punct(look, ,)
cc(look, and)
nsubj(look, I)
conj(total, look)
case(gain, for)
det(gain, a)
amod(gain, further)
obl(look, gain)
case(million, to)
compound(million, 188)
nummod(unit, million)
nmod(gain, unit)
amod(unit, worth)
advmod($, approximately)
obj(worth, $)
compound(million, 380)
nummod($, million)
case(1961, in)
nmod($, 1961)
punct($, .)
obj(worth, sale)
case(component, of)
amod(component, passive)
nmod(sale, component)
punct(sale, ,)
case(capacitor, such)
fixed(such, as)
nmod(sale, capacitor)
cc(resistor, and)
conj(capacitor, resistor)
punct(grow, ,)
mark(grow, although)
advmod(grow, not)
advcl(sale, grow)
advmod(fast, as)
advmod(grow, fast)
mark(ahead, as)
nsubj(ahead, those)
case(semi-conductor, of)
nmod(those, semi-conductor)
cop(ahead, be)
advcl(as, ahead)
case(1959, of)
obl(ahead, 1959)
det(year, this)
obl:tmod(ahead, year)
punct(increase, ,)
cc(increase, and)
aux(increase, should)
conj(ahead, increase)
advmod(increase, again)
case(1961, in)
obl(increase, 1961)
punct(exceed, .)
case(sum, in)
obl(look, sum)
punct(look, ,)
nsubj(look, I)
root(ROOT, look)
case(year, for)
det(year, another)
amod(year, good)
obl(look, year)
case(industry, for)
det(industry, the)
compound(industry, electronics)
nmod(year, industry)
case(1961, in)
obl(look, 1961)
punct(look, ,)
case(sale, with)
amod(sale, total)
obl(look, sale)
advcl(look, increase)
advmod(7, about)
nummod(%, 7)
obj(increase, %)
case($, to)
nmod(%, $)
compound(billion, 10.8)
nummod($, billion)
punct(increase, ,)
case(uncertainty, despite)
det(uncertainty, the)
obl(increase, uncertainty)
case(outlook, in)
det(outlook, the)
compound(outlook, business)
nmod(uncertainty, outlook)
advmod(uncertainty, generally)
punct(look, .)
mark(indicate, as)
nsubj(indicate, I)
aux(indicate, have)
advcl(base, indicate)
advmod(indicate, above)
punct(base, ,)
nsubj(base, I)
root(ROOT, base)
det(feeling, this)
obj(base, feeling)
case(belief, on)
det(belief, a)
obl(base, belief)
mark(continue, that)
amod(weakness, current)
nsubj(continue, weakness)
case(market, in)
det(market, the)
nmod(weakness, market)
case(goods, for)
compound(goods, consumer)
amod(goods, durable)
nmod(market, goods)
aux(continue, may)
acl(belief, continue)
case(month, through)
det(month, the)
amod(month, early)
obl(continue, month)
case(year, of)
det(year, the)
nmod(month, year)
punct(give, ,)
cc(give, but)
aux(give, will)
conj(continue, give)
obj(give, way)
case(recovery, to)
det(recovery, a)
advmod(strong, sufficiently)
amod(recovery, strong)
obl(give, recovery)
advmod(bring, later)
advmod(bring, on)
mark(bring, to)
advcl(give, bring)
det(figure, the)
amod(year, full)
punct(year, -)
compound(figure, year)
obj(bring, figure)
amod(figure, close)
case(those, to)
obl(close, those)
case(1960, of)
nmod(those, 1960)
punct(figure, ;)
punct(figure, ;)
case(prospect, on)
nmod(figure, prospect)
case(increase, for)
amod(increase, continue)
nmod(prospect, increase)
case(spending, in)
compound(spending, defense)
nmod(increase, spending)
punct(prospect, ;)
punct(prospect, ;)
cc(growth, and)
case(growth, on)
amod(growth, continue)
conj(increase, growth)
case(application, in)
det(application, the)
nmod(growth, application)
case(electronics, of)
nmod(application, electronics)
case(problem, to)
det(problem, the)
amod(problem, complex)
nmod(application, problem)
case(manufacturing, of)
nmod(problem, manufacturing)
cc(trade, and)
conj(manufacturing, trade)
case(economy, in)
det(economy, the)
amod(economy, expand)
cc(competitive, but)
conj(expand, competitive)
nmod(manufacturing, economy)
case(1960', of)
det(1960', the)
nmod(economy, 1960')
punct(base, .)
det(appointment, the)
nsubj:pass(announce, appointment)
case(Gilbert, of)
nmod(appointment, Gilbert)
flat(Gilbert, B.)
flat(Gilbert, Devey)
case(manager, as)
compound(manager, General)
nmod(appointment, manager)
case(Inc., of)
compound(Inc., VecTrol)
compound(Inc., Engineering)
punct(Inc., ,)
nmod(manager, Inc.)
punct(manager, ,)
case(Stamford, of)
nmod(manager, Stamford)
punct(Stamford, ,)
appos(Stamford, Connecticut)
punct(Stamford, ,)
det(manufacturer, a)
amod(manufacturer, lead)
appos(Stamford, manufacturer)
case(thyratron, of)
nmod(manufacturer, thyratron)
cc(control, and)
amod(control, silicon)
amod(controls, control)
compound(controls, rectifier)
amod(controls, electrical)
nmod(manufacturer, controls)
punct(announce, ,)
aux(announce, have)
aux:pass(announce, be)
root(ROOT, announce)
case(David, by)
obl(announce, David)
flat(David, B.)
flat(David, Peck)
punct(David, ,)
compound(President, Vice)
appos(David, President)
punct(President, ,)
compound(Products, special)
appos(David, Products)
punct(responsible, .)
nsubj(responsible, Mr.)
flat(Mr., Devey)
aux(responsible, will)
cop(responsible, be)
parataxis(announce, responsible)
case(expansion, for)
det(expansion, the)
amod(expansion, commercial)
obl(responsible, expansion)
case(line, of)
nmod:poss(line, VecTrol)
case(VecTrol, 's)
nmod(expansion, line)
case(component, of)
amod(component, electronic)
cc(electrical, and)
conj(electronic, electrical)
compound(control, power)
conj(electronic, control)
nmod(line, component)
mark(furnish, as)
acl(line, furnish)
case(manufacturer, to)
compound(manufacturer, end)
compound(manufacturer, equipment)
obl(furnish, manufacturer)
punct(manufacturer, ,)
acl(manufacturer, work)
advmod(work, closely)
case(Walter, with)
obl(work, Walter)
flat(Walter, J.)
flat(Walter, Brown)
punct(President, ,)
conj(Walter, President)
cc(Director, and)
conj(Walter, Director)
case(Engineering, of)
nmod(Director, Engineering)
case(subsidiary, of)
det(subsidiary, the)
advmod(acquire, recently)
amod(subsidiary, acquire)
compound(subsidiary, sprague)
nmod(Engineering, subsidiary)
punct(undertake, .)
nsubj(undertake, Mr.)
flat(Mr., Brown)
aux(undertake, will)
case(time, at)
det(time, the)
amod(time, same)
obl(undertake, time)
conj(announce, undertake)
obj(undertake, expansion)
case(program, of)
nmod:poss(program, VecTrol)
case(VecTrol, 's)
amod(design, custom)
compound(program, design)
nmod(expansion, program)
case(user, for)
amod(control, electronic)
compound(user, control)
nmod(program, user)
case(staff, with)
det(staff, a)
advmod(increase, greatly)
amod(staff, increase)
compound(staff, engineering)
nmod(user, staff)
punct(announce, .)
nmod:poss(responsibility, Mr.)
flat(Mr., Devey)
case(Mr., 's)
amod(responsibility, new)
nsubj(addition, responsibility)
cop(addition, be)
case(addition, in)
root(ROOT, addition)
case(those, to)
nmod(addition, those)
case(post, of)
nmod:poss(post, he)
amod(post, present)
nmod(those, post)
case(manager, as)
compound(manager, marketing)
nmod(those, manager)
case(Group, of)
nmod:poss(Group, sprague)
case(sprague, 's)
compound(Products, special)
compound(Group, Products)
nmod(manager, Group)
punct(Group, ,)
nsubj(manufacture, which)
acl:relcl(Group, manufacture)
det(line, a)
amod(line, wide)
obj(manufacture, line)
case(component, of)
amod(component, digital)
amod(component, electronic)
nmod(line, component)
punct(assembly, ,)
amod(assembly, package)
compound(assembly, component)
conj(component, assembly)
punct(wire, ,)
cc(wire, and)
amod(wire, high)
compound(wire, temperature)
compound(wire, magnet)
compound(Mr., wire)
punct(come, .)
nsubj(come, Mr.)
flat(Mr., Devey)
advmod(come, first)
parataxis(addition, come)
case(sprague, to)
obl(come, sprague)
case(1953, in)
obl(come, 1953)
case(specialist, as)
det(specialist, a)
compound(specialist, product)
obl(come, specialist)
case(Department, in)
det(Department, the)
compound(Department, field)
compound(Department, Engineering)
nmod(specialist, Department)
punct(specialist, ,)
acl(specialist, come)
case(Office, from)
det(Office, the)
obl(come, Office)
case(Research, of)
compound(Research, Naval)
nmod(Office, Research)
case(Washington, in)
nmod(Research, Washington)
punct(Washington, ,)
appos(Washington, D.)
flat(D., C.)
punct(D., ,)
advmod(scientist, where)
nsubj(scientist, he)
cop(scientist, be)
det(scientist, a)
amod(scientist, electronic)
acl:relcl(Office, scientist)
acl(scientist, engage)
case(study, in)
amod(study, undersea)
compound(study, warfare)
obl(engage, study)
punct(scientist, .)
case(War, during)
compound(War, World)
nmod(study, War)
nummod(War, 2)
punct(commander, ,)
punct(commander, ,)
nsubj(commander, he)
cop(commander, be)
det(commander, a)
compound(commander, lieutenant)
parataxis(scientist, commander)
case(Navy, in)
det(Navy, the)
compound(States, United)
compound(Navy, States)
nmod(commander, Navy)
punct(graduate, .)
nsubj(graduate, Mr.)
flat(Mr., Devey)
cop(graduate, be)
det(graduate, a)
parataxis(commander, graduate)
case(Institute, of)
det(Institute, the)
compound(Institute, Massachusetts)
nmod(graduate, Institute)
case(technology, of)
nmod(Institute, technology)
punct(attend, ,)
cc(attend, and)
conj(graduate, attend)
det(School, the)
compound(States, United)
compound(Academy, States)
compound(Academy, Naval)
compound(School, Academy)
compound(School, Post)
punct(School, -)
compound(School, Graduate)
obj(attend, School)
acl(School, specialize)
case(engineering, in)
amod(engineering, electronic)
obl(specialize, engineering)
punct(addition, .)
nsubj:pass(name, he)
aux:pass(name, be)
root(ROOT, name)
compound(manager, product)
obj(name, manager)
case(division, of)
det(division, the)
compound(Products, special)
compound(division, Products)
nmod(manager, division)
case(sprague, of)
nmod(division, sprague)
mark(found, when)
nsubj:pass(found, it)
aux:pass(found, be)
advcl(name, found)
case(1958, in)
obl(found, 1958)
punct(promote, ,)
cc(promote, and)
aux:pass(promote, be)
advmod(promote, later)
conj(found, promote)
case(post, to)
nmod:poss(post, he)
amod(post, present)
obl(promote, post)
punct(name, .)
nsubj(member, Mr.)
flat(Mr., Devey)
cop(member, be)
det(member, a)
parataxis(name, member)
case(Institute, of)
det(Institute, the)
nmod(member, Institute)
case(Engineers, of)
compound(Engineers, Radio)
nmod(Institute, Engineers)
punct(chairman, ,)
cc(chairman, and)
cop(chairman, be)
conj(member, chairman)
case(Committee, of)
det(Committee, the)
compound(Committee, Electronic)
compound(Committee, industry)
compound(Committee, Association)
nmod(chairman, Committee)
case(print, on)
nmod(Committee, print)
cc(Modular, and)
conj(print, Modular)
conj(print, component)
punct(Committee, .)
appos(Committee, Mr.)
flat(Mr., Brown)
punct(Mr., ,)
advmod(know, well)
punct(know, -)
amod(inventor, know)
punct(Mr., ,)
obl:npmod(bear, English)
punct(bear, -)
amod(inventor, bear)
appos(Mr., inventor)
punct(inventor, ,)
mark(found, prior)
fixed(prior, to)
acl(inventor, found)
obj(found, VecTrol)
cop(leader, be)
case(leader, at)
amod(leader, various)
compound(leader, time)
compound(leader, section)
obj(found, leader)
case(research, in)
compound(research, radio)
nmod(leader, research)
case(Co., at)
compound(Vickers, Metropolitan)
compound(Co., Vickers)
compound(Co., electrical)
nmod(research, Co.)
punct(Co., ,)
appos(Co., Ltd.)
punct(Co., ;)
punct(Co., ;)
amod(engineer, chief)
appos(leader, engineer)
case(division, of)
det(division, the)
compound(division, radio)
amod(division, set)
nmod(engineer, division)
case(industry, of)
compound(industry, electric)
cc(Musical, and)
conj(electric, Musical)
nmod(division, industry)
punct(Ltd., ,)
appos(industry, Ltd.)
punct(industry, ,)
det(manufacturer, the)
amod(manufacturer, largest)
amod(manufacturer, electronic)
compound(manufacturer, equipment)
appos(industry, manufacturer)
case(Britain, in)
compound(Britain, Great)
nmod(manufacturer, Britain)
punct(manufacturer, ;)
punct(manufacturer, ;)
appos(manufacturer, director)
case(engineering, of)
nmod(director, engineering)
case(Philco, at)
nmod(director, Philco)
case(Britain, of)
compound(Britain, Great)
nmod(Philco, Britain)
punct(Ltd., ,)
conj(Britain, Ltd.)
punct(president, ,)
cc(president, and)
compound(president, vice)
conj(Britain, president)
case(charge, in)
nmod(president, charge)
case(production, of)
nmod(charge, production)
cc(assistant, and)
conj(production, assistant)
case(president, to)
det(president, the)
nmod(production, president)
case(Co., at)
det(Co., the)
compound(Co., Brush)
compound(Co., Development)
nmod(president, Co.)
punct(Co., ,)
appos(Co., Cleveland)
punct(Cleveland, ,)
appos(Cleveland, Ohio)
punct(name, .)
nsubj(have, he)
root(ROOT, have)
det(Bachelor, a)
obj(have, Bachelor)
case(Science, of)
nmod(Bachelor, Science)
case(University, from)
det(University, the)
nmod(Bachelor, University)
case(Manchester, of)
nmod(University, Manchester)
punct(Manchester, ,)
appos(Manchester, England)
punct(have, .)
nsubj(have, Mr.)
flat(Mr., Brown)
advmod(have, presently)
parataxis(have, have)
advmod(130, over)
nummod(patent, 130)
obj(have, patent)
case(dating, to)
nmod:poss(dating, he)
compound(dating, credit)
nmod(patent, dating)
advmod(have, back)
case(1923, to)
obl(back, 1923)
punct(have, .)
nsubj(fellow, he)
cop(fellow, be)
det(fellow, a)
root(ROOT, fellow)
case(Institute, of)
det(Institute, the)
compound(Institute, American)
nmod(fellow, Institute)
case(Engineers, of)
compound(Engineers, electrical)
nmod(Institute, Engineers)
punct(member, ,)
cc(member, and)
det(member, a)
amod(member, senior)
conj(Institute, member)
case(Institute, of)
det(Institute, the)
nmod(member, Institute)
case(Engineers, of)
compound(Engineers, Radio)
nmod(Institute, Engineers)
punct(fellow, .)
nsubj(member, he)
cop(member, be)
det(member, a)
root(ROOT, member)
case(institution, of)
det(institution, the)
nmod(member, institution)
case(Engineers, of)
compound(Engineers, electrical)
nmod(institution, Engineers)
punct(London, ,)
conj(Engineers, London)
punct(Engineers, ,)
det(engineer, a)
amod(engineer, register)
amod(engineer, professional)
appos(Engineers, engineer)
case(Connecticut, in)
nmod(engineer, Connecticut)
cc(Ohio, and)
conj(Connecticut, Ohio)
punct(engineer, ,)
cc(engineer, and)
det(engineer, a)
amod(engineer, charter)
amod(engineer, electrical)
conj(Engineers, engineer)
case(Britain, in)
compound(Britain, Great)
nmod(engineer, Britain)
punct(member, .)
det(promotion, the)
nsubj:pass(announce, promotion)
case(Robert, of)
nmod(promotion, Robert)
flat(Robert, E.)
flat(Robert, Swift)
case(position, to)
det(position, the)
nmod(promotion, position)
case(manager, of)
compound(manager, Assistant)
nmod(position, manager)
case(Department, of)
det(Department, the)
compound(Control, Interference)
compound(Department, Control)
compound(Service, field)
compound(Department, Service)
nmod(manager, Department)
aux:pass(announce, be)
root(ROOT, announce)
advmod(announce, early)
case(December, in)
obl(announce, December)
case(Frederick, by)
obl(announce, Frederick)
flat(Frederick, S.)
flat(Frederick, Scarborough)
punct(Frederick, ,)
appos(Frederick, manager)
case(Service, of)
compound(Control, Interference)
compound(Service, Control)
compound(Service, field)
nmod(manager, Service)
punct(announce, .)
det(appointment, the)
nsubj:pass(make, appointment)
aux:pass(make, be)
root(ROOT, make)
case(move, in)
det(move, a)
obl(make, move)
mark(expand, to)
acl(move, expand)
det(service, the)
compound(service, engineering)
obj(expand, service)
acl(service, offer)
case(designer, to)
det(designer, the)
obl(offer, designer)
case(system, of)
amod(system, electronic)
nmod(designer, system)
case(assistance, through)
nmod(designer, assistance)
case(problem, in)
amod(problem, electro-magnetic)
compound(problem, compatability)
nmod(assistance, problem)
punct(make, .)
case(meeting, between)
obl(help, meeting)
nsubj(help, he)
root(ROOT, help)
det(president, the)
obj(help, president)
xcomp(help, keep)
obj(keep, track)
case(matter, of)
amod(matter, delegate)
nmod(track, matter)
punct(help, .)
mark(fit, since)
det(duty, these)
nsubj(fit, duty)
advcl(fill, fit)
advmod(fit, neatly)
case(those, with)
obl(fit, those)
case(aide, of)
det(aide, the)
amod(aide, propose)
amod(aide, presidential)
nmod(those, aide)
punct(fill, ,)
nummod(person, one)
nsubj(fill, person)
punct(person, ,)
case(assistance, with)
amod(assistance, adequate)
compound(assistance, staff)
nmod(person, assistance)
punct(fill, ,)
aux(fill, could)
root(ROOT, fill)
det(job, both)
obj(fill, job)
punct(fill, .)
mark(see, since)
nsubj(see, faculty)
advcl(proportionate, see)
obj(see, themselves)
case(professional, as)
obl:npmod(employ, self)
punct(employ, -)
amod(professional, employ)
obl(see, professional)
cc(employee, rather)
fixed(rather, than)
fixed(rather, as)
conj(professional, employee)
punct(proportionate, ,)
nsubj(proportionate, enthusiasm)
case(enterprise, in)
det(enterprise, a)
amod(enterprise, common)
nmod(enthusiasm, enterprise)
cop(proportionate, be)
root(ROOT, proportionate)
case(sense, to)
det(sense, the)
obl(proportionate, sense)
case(ownership, of)
nmod(sense, ownership)
nsubj(have, they)
acl:relcl(ownership, have)
case(it, in)
obl(have, it)
case(virtue, by)
obl(have, virtue)
mark(share, of)
acl(virtue, share)
case(decision, in)
det(decision, the)
obl(share, decision)
nsubj(govern, that)
acl:relcl(decision, govern)
nmod:poss(course, its)
obj(govern, course)
punct(proportionate, .)
det(faculty, the)
nsubj(believe, faculty)
root(ROOT, believe)
mark(necessary, that)
amod(autonomy, broad)
nsubj(necessary, autonomy)
cop(necessary, be)
ccomp(believe, necessary)
mark(preserve, to)
csubj(necessary, preserve)
nmod:poss(freedom, its)
obj(preserve, freedom)
case(teaching, in)
obl(preserve, teaching)
cc(scholarship, and)
conj(teaching, scholarship)
punct(believe, .)
det(president, the)
nsubj(expect, president)
root(ROOT, expect)
compound(member, faculty)
obj(expect, member)
mark(remember, to)
xcomp(expect, remember)
punct(remember, ,)
mark(exercise, in)
advcl(remember, exercise)
nmod:poss(autonomy, they)
obj(exercise, autonomy)
punct(expect, ,)
mark(share, that)
nsubj(share, they)
ccomp(expect, share)
det(responsibility, no)
amod(responsibility, collective)
obj(share, responsibility)
case(income, for)
det(university, the)
nmod:poss(income, university)
case(university, 's)
nmod(responsibility, income)
cc(accountable, nor)
cop(accountable, be)
nsubj(accountable, they)
advmod(accountable, personally)
conj(share, accountable)
case(decision, for)
amod(level, top)
punct(level, -)
compound(decision, level)
obl(accountable, decision)
punct(expect, .)
nsubj(welcome, he)
aux(welcome, may)
root(ROOT, welcome)
nmod:poss(participation, they)
amod(participation, appropriate)
obj(welcome, participation)
case(determination, in)
det(determination, the)
obl(welcome, determination)
case(policy, of)
amod(policy, high)
nmod(determination, policy)
punct(have, ,)
cc(have, but)
nsubj(have, he)
conj(welcome, have)
det(right, a)
obj(have, right)
mark(expect, to)
acl(right, expect)
punct(expect, ,)
case(return, in)
obl(expect, return)
punct(leave, ,)
mark(leave, that)
nsubj(leave, they)
aux(leave, will)
ccomp(expect, leave)
amod(matter, administrative)
obj(leave, matter)
case(administration, to)
det(administration, the)
obl(leave, administration)
punct(welcome, .)
advmod(well, how)
advmod(govern, well)
aux(govern, do)
compound(member, faculty)
nsubj(govern, member)
root(ROOT, govern)
obj(govern, themselves)
punct(govern, ?)
punct(govern, ?)
expl(be, there)
root(ROOT, be)
amod(evidence, little)
nsubj(be, evidence)
mark(give, that)
nsubj(give, they)
aux(give, be)
acl(evidence, give)
det(systematic, any)
amod(think, systematic)
xcomp(give, think)
case(theory, to)
det(theory, a)
amod(theory, general)
obl(think, theory)
case(scope, of)
det(scope, the)
amod(scope, optimum)
nmod(theory, scope)
cc(nature, and)
conj(scope, nature)
case(part, of)
nmod:poss(part, they)
nmod(scope, part)
case(government, in)
nmod(part, government)
punct(be, .)
nsubj(pay, they)
advmod(pay, sometimes)
root(ROOT, pay)
amod(attention, more)
obj(pay, attention)
case(rights, to)
nmod:poss(rights, they)
obl(pay, rights)
case(problem, than)
case(problem, to)
nmod:poss(problem, they)
amod(problem, own)
amod(problem, internal)
obl(pay, problem)
case(government, of)
nmod(problem, government)
punct(pay, .)
nsubj(need, they)
punct(need, ,)
advmod(need, too)
punct(need, ,)
root(ROOT, need)
mark(learn, to)
xcomp(need, learn)
mark(delegate, to)
xcomp(learn, delegate)
punct(need, .)
csubj(give, let)
det(administration, the)
obj(let, administration)
xcomp(let, take)
obj(take, detail)
case(hand, off)
nmod:poss(hand, they)
obl(take, hand)
aux(give, would)
root(ROOT, give)
iobj(give, they)
amod(time, more)
obj(give, time)
mark(inform, to)
acl(time, inform)
obj(inform, themselves)
case(education, about)
obl(inform, education)
case(whole, as)
det(whole, a)
amod(area, whole)
punct(area, ,)
det(area, a)
obl(inform, area)
nsubj(benefit, that)
aux(benefit, would)
acl:relcl(area, benefit)
case(attention, by)
amod(attention, more)
compound(attention, faculty)
obl(benefit, attention)
punct(give, .)
mark(insist, although)
nsubj(insist, faculty)
advcl(grant, insist)
mark(govern, on)
advcl(insist, govern)
obj(govern, themselves)
punct(grant, ,)
nsubj(grant, they)
root(ROOT, grant)
amod(prestige, little)
obj(grant, prestige)
case(member, to)
det(member, a)
obl(grant, member)
nsubj(participate, who)
advmod(participate, actively)
acl:relcl(member, participate)
case(government, in)
obl(participate, college)
cc(university, or)
conj(college, university)
obl(participate, government)
punct(grant, .)
expl(be, there)
root(ROOT, be)
punct(be, ,)
advmod(be, nevertheless)
punct(be, ,)
amod(thing, several)
nsubj(be, thing)
obj(do, that)
det(president, the)
nsubj(do, president)
aux(do, can)
acl:relcl(thing, do)
mark(stimulate, to)
xcomp(do, stimulate)
obj(stimulate, participation)
cc(enhance, and)
mark(enhance, to)
conj(stimulate, enhance)
det(prestige, the)
obj(enhance, prestige)
case(those, of)
nmod(prestige, those)
nsubj(willing, who)
cop(willing, be)
acl:relcl(those, willing)
mark(exercise, to)
xcomp(willing, exercise)
nmod:poss(privilege, they)
obj(exercise, privilege)
punct(be, .)
nsubj(can, he)
root(ROOT, can)
punct(issue, ,)
case(example, for)
nmod(issue, example)
punct(issue, ,)
amod(issue, present)
amod(issue, significant)
obl:npmod(wide, university)
punct(wide, -)
amod(issue, wide)
obj(can, issue)
case(senate, to)
det(senate, the)
nmod(issue, senate)
punct(issue, .)
nsubj(encourage, he)
aux(encourage, can)
root(ROOT, encourage)
obj(encourage, quality)
case(work, in)
compound(committee, faculty)
compound(work, committee)
nmod(quality, work)
case(way, in)
amod(way, various)
obl(encourage, way)
punct(encourage, :)
mark(see, by)
advcl(encourage, see)
case(it, to)
obl(see, it)
mark(represent, that)
det(membership, the)
nsubj(represent, membership)
case(committee, of)
det(committee, each)
nmod(membership, committee)
ccomp(see, represent)
det(thoughtful, the)
obj(represent, thoughtful)
cc(faculty, as)
fixed(as, well)
fixed(as, as)
det(faculty, the)
obl:npmod(oriented, action)
punct(oriented, -)
amod(faculty, oriented)
obj(represent, faculty)
punct(represent, ;)
punct(encourage, ;)
mark(make, by)
advcl(represent, make)
xcomp(make, certain)
mark(have, that)
det(member, no)
compound(member, faculty)
nsubj(have, member)
ccomp(certain, have)
advmod(many, too)
amod(assignment, many)
compound(assignment, committee)
obj(have, assignment)
punct(have, ;)
punct(certain, ;)
mark(assure, by)
advcl(have, assure)
amod(liaison, good)
obj(assure, liaison)
case(committee, between)
det(committee, the)
nmod(liaison, committee)
cc(administration, and)
det(administration, the)
conj(committee, administration)
punct(assure, ;)
punct(assure, ;)
mark(minimize, by)
advcl(assure, minimize)
det(number, the)
obj(minimize, number)
case(committee, of)
nmod(number, committee)
punct(encourage, .)
case(avenue, despite)
det(avenue, the)
amod(avenue, many)
obl(persist, avenue)
case(exchange, for)
det(exchange, the)
nmod(avenue, exchange)
case(idea, of)
nmod(exchange, idea)
case(faculty, between)
nmod(idea, faculty)
cc(administration, and)
conj(faculty, administration)
punct(persist, ,)
nsubj(persist, complaint)
case(lack, of)
det(lack, a)
nmod(complaint, lack)
case(communication, of)
nmod(lack, communication)
root(ROOT, persist)
punct(persist, .)
det(cause, the)
nsubj(neglect, cause)
cop(neglect, be)
case(neglect, as)
advmod(neglect, often)
root(ROOT, neglect)
case(hesitance, as)
obl(neglect, hesitance)
mark(disclose, to)
acl(hesitance, disclose)
punct(neglect, . )
det(president, a)
amod(president, busy)
nsubj(tend, president)
punct(president, ,)
amod(president, conversant)
case(problem, with)
det(problem, a)
obl(conversant, problem)
cc(ramification, and)
nmod:poss(ramification, its)
conj(problem, ramification)
cc(beset, and)
conj(conversant, beset)
case(pressure, by)
obl(beset, pressure)
mark(meet, to)
advcl(beset, meet)
obj(meet, deadline)
punct(tend, ,)
root(ROOT, tend)
advmod(tend, naturally)
mark(assume, to)
xcomp(tend, assume)
mark(familiar, that)
nsubj(familiar, other)
aux(familiar, must)
cop(familiar, be)
advmod(familiar, as)
ccomp(assume, familiar)
case(problem, with)
det(problem, a)
obl(familiar, problem)
mark(be, as)
nsubj(be, he)
advcl(familiar, be)
punct(tend, .)
det(need, the)
nsubj(make, need)
case(interchange, for)
nmod(need, interchange)
cc(understanding, and)
conj(interchange, understanding)
root(ROOT, make)
xcomp(make, vital)
det(use, the)
amod(use, full)
xcomp(make, use)
case(method, of)
det(method, all)
nmod(use, method)
case(consultation, of)
nmod(method, consultation)
punct(make, .)
mark(increase, to)
advcl(establish, increase)
compound(influence, faculty)
obj(increase, influence)
cc(decrease, and)
conj(increase, decrease)
obj(decrease, tension)
punct(establish, ,)
amod(president, many)
nsubj(establish, president)
aux(establish, have)
root(ROOT, establish)
det(committee, a)
compound(committee, standing)
amod(committee, advisory)
obj(establish, committee)
case(which, with)
obl(discuss, which)
nsubj(discuss, they)
aux(discuss, can)
acl:relcl(committee, discuss)
obj(discuss, problem)
advmod(discuss, frankly)
punct(establish, .)
det(president, the)
nsubj(have, president)
root(ROOT, have)
amod(influence, little)
obj(have, influence)
case(change, in)
compound(change, day)
punct(day, -)
case(day, by)
punct(day, -)
nmod(day, day)
compound(change, curricular)
nmod(influence, change)
punct(open, ,)
cc(open, but)
mark(look, if)
nsubj(look, he)
advcl(open, look)
advmod(look, ahead)
nummod(year, two)
punct(year, ,)
nummod(year, three)
punct(year, ,)
cc(five, or)
conj(three, five)
obj(look, year)
mark(anticipate, to)
advcl(look, anticipate)
obj(anticipate, issue)
cc(throw, and)
conj(anticipate, throw)
compound:prt(throw, out)
amod(idea, challenging)
obj(throw, idea)
punct(open, ,)
nsubj(open, he)
aux(open, can)
parataxis(have, open)
det(way, the)
obj(open, way)
case(innovation, for)
obl(open, innovation)
punct(have, ,)
cc(have, and)
nsubj(have, he)
aux(have, can)
advmod(have, also)
conj(open, have)
det(deal, a)
amod(deal, great)
obj(have, deal)
mark(say, to)
acl(deal, say)
case(path, as)
fixed(as, to)
det(path, what)
obl(say, path)
nsubj(take, it)
aux(take, will)
acl:relcl(path, take)
punct(require, .)
nsubj(require, success)
aux(require, will)
ccomp(say, require)
obj(require, tact)
punct(sensitivity, ,)
conj(tact, sensitivity)
case(prerogative, to)
compound(prerogative, faculty)
nmod(sensitivity, prerogative)
punct(patience, ,)
conj(prerogative, patience)
punct(persistence, ,)
cc(persistence, and)
conj(prerogative, persistence)
punct(have, .)
det(task, the)
amod(task, critical)
nsubj(be, task)
case(president, for)
det(president, every)
nmod(task, president)
cc(staff, and)
nmod:poss(staff, he)
amod(staff, academic)
amod(staff, administrative)
conj(president, staff)
root(ROOT, be)
mark(assure, to)
ccomp(be, assure)
mark(rebuild, that)
det(college, the)
nsubj(rebuild, college)
cc(university, or)
conj(college, university)
advmod(rebuild, continually)
ccomp(assure, rebuild)
cc(regenerate, and)
conj(rebuild, regenerate)
obj(regenerate, itself)
mark(match, so)
fixed(so, that)
nmod:poss(performance, its)
nsubj(match, performance)
aux(match, will)
advcl(regenerate, match)
xcomp(match, change)
amod(demand, social)
obj(change, demand)
punct(be, .)
amod(professor, great)
nsubj(reproduce, professor)
aux(reproduce, do)
advmod(reproduce, not)
advmod(reproduce, automatically)
root(ROOT, reproduce)
obj(reproduce, themselves)
punct(reproduce, .)
nsubj(form, dean)
aux(form, can)
parataxis(reproduce, form)
det(bridge, a)
amod(bridge, important)
obj(form, bridge)
case(president, between)
det(president, the)
nmod(bridge, president)
cc(faculty, and)
det(faculty, the)
conj(president, faculty)
punct(reproduce, .)
nsubj(serve, they)
root(ROOT, serve)
advmod(only, not)
advmod(spokesmen, only)
case(spokesmen, as)
obl(serve, spokesmen)
case(area, for)
nmod:poss(area, they)
nmod(spokesmen, area)
punct(contribute, ,)
cc(contribute, but)
nsubj(contribute, they)
advmod(contribute, also)
conj(serve, contribute)
case(making, to)
amod(level, top)
punct(level, -)
compound(making, level)
compound(making, decision)
obl(contribute, making)
punct(serve, .)
det(president, the)
nsubj(count, president)
nsubj(appoint, who)
acl:relcl(president, appoint)
amod(man, strong)
obj(appoint, man)
nsubj(have, who)
acl:relcl(man, have)
det(point, a)
det(college, all)
punct(college, -)
compound(point, college)
cc(university, or)
conj(college, university)
obj(have, point)
case(view, of)
nmod(point, view)
cc(talent, and)
det(talent, a)
conj(point, talent)
cc(respect, and)
conj(talent, respect)
case(administration, for)
nmod(respect, administration)
aux(count, can)
root(ROOT, count)
case(assistance, on)
amod(assistance, useful)
obl(count, assistance)
punct(count, . )
compound(member, Faculty)
nsubj(depend, member)
root(ROOT, depend)
case(chairme, on)
nmod:poss(chairme, they)
compound(chairme, department)
obl(depend, chairme)
mark(promote, to)
advcl(depend, promote)
nmod:poss(interest, they)
obj(promote, interest)
case(administration, with)
det(administration, the)
nmod(interest, administration)
punct(depend, .)
det(administration, the)
nsubj(look, administration)
case(time, at)
det(time, the)
amod(time, same)
nmod(administration, time)
punct(look, ,)
root(ROOT, look)
case(chairme, to)
det(chairme, the)
obl(look, chairme)
case(aid, for)
amod(aid, strategic)
nmod(chairme, aid)
case(department, in)
obl:npmod(stronger, building)
amod(department, stronger)
nmod(aid, department)
punct(look, .)
nummod(way, one)
nsubj(be, way)
mark(do, that)
nsubj:pass(do, this)
aux(do, can)
aux:pass(do, be)
acl(way, do)
punct(be, ,)
advmod(do, other)
mark(hire, than)
mark(hire, by)
advcl(other, hire)
amod(professor, new)
amod(price, high)
punct(price, -)
amod(professor, price)
obj(hire, professor)
punct(be, ,)
root(ROOT, be)
mark(encourage, by)
advmod(encourage, constantly)
advcl(be, encourage)
det(member, the)
compound(member, department)
obj(encourage, member)
mark(raise, to)
advcl(encourage, raise)
nmod:poss(standard, they)
obj(raise, standard)
case(performance, of)
nmod(standard, performance)
punct(be, .)
det(quality, the)
nsubj:pass(measure, quality)
case(leadership, of)
det(president, a)
nmod:poss(leadership, president)
case(president, 's)
nmod(quality, leadership)
aux:pass(measure, be)
root(ROOT, measure)
advmod(measure, first)
case(success, by)
nmod:poss(success, he)
obl(measure, success)
mark(build, in)
acl(success, build)
compound:prt(build, up)
det(faculty, the)
obj(build, faculty)
punct(measure, .)
mark(support, by)
advcl(encourage, support)
det(effort, the)
obj(support, effort)
case(member, of)
det(member, the)
amod(member, many)
compound(member, faculty)
nmod(effort, member)
nsubj(work, who)
aux(work, be)
acl:relcl(member, work)
mark(attain, to)
xcomp(work, attain)
advmod(higher, ever)
amod(standard, higher)
obj(attain, standard)
punct(encourage, ,)
det(president, the)
nsubj(encourage, president)
aux(encourage, can)
root(ROOT, encourage)
compound(leadership, faculty)
obj(encourage, leadership)
punct(encourage, .)
advmod(help, indirectly)
nsubj(help, he)
aux(help, can)
advmod(help, best)
root(ROOT, help)
obj(help, they)
mark(insure, by)
advcl(help, insure)
mark(set, that)
amod(criterion, rigorous)
nsubj:pass(set, criterion)
case(appointment, for)
nmod(criterion, appointment)
cc(promotion, and)
conj(appointment, promotion)
aux:pass(set, be)
advmod(set, clearly)
ccomp(insure, set)
advmod(set, forth)
cc(adhere, and)
conj(set, adhere)
obl(adhere, to)
punct(help, .)
det(dean, the)
amod(dean, academic)
nsubj(take, dean)
aux(take, should)
root(ROOT, take)
det(interest, a)
amod(interest, direct)
punct(interest, ,)
amod(term, long)
punct(term, -)
compound(interest, term)
obj(take, interest)
case(development, in)
compound(development, faculty)
nmod(interest, development)
punct(take, .)
det(dean, a)
compound(dean, alert)
nsubj(confer, dean)
aux(confer, will)
root(ROOT, confer)
advmod(year, all)
case(year, through)
det(year, the)
obl(confer, year)
case(need, on)
compound(need, personnel)
obl(confer, need)
punct(plan, ,)
conj(need, plan)
case(future, for)
det(future, the)
nmod(plan, future)
punct(qualification, ,)
conj(need, qualification)
case(those, of)
nmod(qualification, those)
case(job, on)
det(job, the)
nmod(those, job)
punct(prospect, ,)
cc(prospect, and)
amod(prospect, bright)
conj(those, prospect)
advmod(prospect, elsewhere)
punct(confer, .)
case(maintenance, for)
det(maintenance, the)
obl(strategic, maintenance)
case(program, of)
det(program, a)
amod(term, long)
punct(term, -)
compound(program, term)
nmod(maintenance, program)
punct(strategic, ,)
det(department, the)
nsubj(strategic, department)
punct(chairme, ,)
cc(chairme, and)
advmod(chairme, particularly)
nmod:poss(chairme, they)
conj(department, chairme)
punct(strategic, ,)
cop(strategic, be)
root(ROOT, strategic)
punct(strategic, .)
nsubj(evaluate, they)
root(ROOT, evaluate)
cc(nominate, and)
conj(evaluate, nominate)
obj(evaluate, candidate)
case(appointment, for)
nmod(candidate, appointment)
cc(promotion, and)
conj(appointment, promotion)
punct(evaluate, .)
mark(provide, to)
advcl(investigate, provide)
det(judgment, a)
amod(judgment, independent)
obj(provide, judgment)
case(president, for)
det(president, the)
nmod(judgment, president)
punct(investigate, ,)
det(dean, the)
amod(dean, academic)
nsubj(investigate, dean)
advmod(investigate, also)
root(ROOT, investigate)
obj(investigate, candidate)
advmod(investigate, thoroughly)
punct(investigate, .)
case(college, at)
det(college, some)
nmod(review, college)
cc(university, and)
conj(college, university)
punct(review, ,)
det(review, a)
compound(committee, faculty)
compound(review, committee)
root(ROOT, review)
cc(report, and)
conj(review, report)
case(administration, to)
det(administration, the)
nmod(review, administration)
case(qualification, on)
det(qualification, the)
nmod(review, qualification)
case(candidate, of)
nmod(qualification, candidate)
punct(review, .)
det(member, some)
compound(member, faculty)
nsubj(oppose, member)
cc(administrator, and)
amod(administrator, many)
conj(member, administrator)
root(ROOT, oppose)
compound(group, faculty)
compound(group, review)
obj(oppose, group)
mark(repeat, because)
nsubj(repeat, they)
det(they, either)
advcl(oppose, repeat)
nmod:poss(action, department)
case(department, 's)
obj(repeat, action)
cc(forma, or)
compound(pro, act)
compound(forma, pro)
conj(action, forma)
punct(oppose, .)
nsubj(effective, they)
aux(effective, can)
cop(effective, be)
root(ROOT, effective)
punct(effective, ,)
advmod(effective, however)
punct(effective, ,)
mark(set, if)
nmod:poss(member, they)
nsubj(set, member)
advcl(effective, set)
amod(standard, high)
obj(set, standard)
case(candidate, for)
obl(set, candidate)
cc(devote, and)
conj(set, devote)
amod(time, substantial)
obj(devote, time)
case(work, to)
det(work, the)
nmod(time, work)
punct(effective, .)
case(university, at)
nummod(university, one)
obl(cite, university)
punct(cite, ,)
det(president, the)
nsubj(cite, president)
root(ROOT, cite)
det(committee, the)
compound(committee, faculty)
compound(committee, review)
obj(cite, committee)
case(partner, as)
punct(partner, ``)
det(partner, a)
amod(partner, value)
obl(cite, partner)
case(administration, of)
det(administration, the)
nmod(partner, administration)
mark(guard, in)
acl(partner, guard)
cc(promote, and)
conj(guard, promote)
det(quality, the)
obj(promote, quality)
case(faculty, of)
det(faculty, the)
nmod(quality, faculty)
punct(cite, '')
punct(cite, .)
mark(recommend, before)
det(president, the)
nsubj(recommend, president)
advcl(collect, recommend)
det(candidate, a)
obj(recommend, candidate)
case(trustee, to)
det(trustee, the)
nmod(candidate, trustee)
punct(collect, ,)
det(administration, the)
nsubj(collect, administration)
root(ROOT, collect)
det(view, the)
obj(collect, view)
case(colleague, of)
nmod(view, colleague)
case(field, in)
det(field, the)
amod(field, same)
nmod(colleague, field)
case(knowledge, of)
nmod(field, knowledge)
case(campus, on)
nmod(knowledge, campus)
cc(elsewhere, and)
conj(campus, elsewhere)
punct(collect, .)
det(president, the)
nsubj(read, president)
cc(dean, or)
conj(president, dean)
root(ROOT, read)
obj(read, some)
case(publication, of)
nmod:poss(publication, he)
nmod(some, publication)
mark(form, to)
advcl(read, form)
det(evaluation, the)
amod(evaluation, truest)
amod(evaluation, possible)
obj(form, evaluation)
case(quality, of)
det(quality, the)
nmod(evaluation, quality)
case(mind, of)
nmod:poss(mind, he)
nmod(quality, mind)
punct(read, .)
det(way, no)
amod(way, good)
nsubj:pass(discover, way)
mark(evaluate, to)
acl(way, evaluate)
compound(ability, teaching)
obj(evaluate, ability)
aux(discover, have)
advmod(discover, yet)
aux:pass(discover, be)
root(ROOT, discover)
punct(discover, ,)
mark(use, although)
det(institution, some)
nsubj(use, institution)
advcl(discover, use)
compound(sheet, inventory)
obj(use, sheet)
case(list, for)
det(list, a)
obl(use, list)
case(criterion, of)
nmod(list, criterion)
punct(discover, .)
mark(avoid, to)
advcl(make, avoid)
xcomp(avoid, pass)
case(teacher, over)
amod(teacher, quiet)
punct(teacher, ,)
amod(teacher, unaggressive)
obl(pass, teacher)
cc(decide, as)
fixed(as, well)
fixed(as, as)
mark(decide, to)
conj(pass, decide)
mark(merit, whether)
nsubj(merit, other)
ccomp(decide, merit)
obj(merit, promotion)
punct(review, ,)
conj(promotion, review)
case(right, of)
det(right, the)
nmod(promotion, right)
case(member, of)
compound(member, faculty)
nmod(right, member)
case(promotion, to)
nmod(member, promotion)
cc(increase, or)
compound(increase, salary)
conj(promotion, increase)
aux(make, should)
aux:pass(make, be)
root(ROOT, make)
advmod(make, periodically)
mark(recommend, whether)
fixed(whether, or)
fixed(whether, not)
nsubj:pass(recommend, they)
aux(recommend, have)
aux:pass(recommend, be)
ccomp(make, recommend)
case(advancement, for)
obl(recommend, advancement)
case(department, by)
nmod:poss(department, they)
obl(recommend, department)
punct(make, .)
expl(be, there)
root(ROOT, be)
amod(aspect, certain)
nsubj(be, aspect)
case(development, of)
compound(development, personnel)
nmod(aspect, development)
case(which, in)
obl(involve, which)
det(president, a)
nsubj(involve, president)
aux(involve, must)
acl:relcl(aspect, involve)
obj(involve, himself)
advmod(involve, directly)
punct(be, .)
nsubj(consider, he)
aux(consider, should)
advmod(consider, personally)
root(ROOT, consider)
det(potential, the)
obj(consider, potential)
case(member, of)
det(member, a)
compound(member, faculty)
nmod(potential, member)
acl(member, propose)
case(tenure, for)
obl(propose, tenure)
punct(consider, ,)
mark(guard, to)
advcl(consider, guard)
case(mistake, against)
det(mistake, the)
obl(guard, mistake)
mark(make, of)
acl(mistake, make)
det(commitment, this)
advmod(serious, profoundly)
amod(commitment, serious)
obj(make, commitment)
acl(commitment, turn)
advmod(turn, solely)
case(achievement, upon)
det(man, the)
nmod:poss(achievement, man)
case(man, 's)
amod(achievement, former)
obl(turn, achievement)
punct(consider, .)
det(one, no)
nsubj(effective, one)
aux(effective, can)
cop(effective, be)
advmod(effective, as)
root(ROOT, effective)
case(president, as)
det(president, the)
obl(effective, president)
case(man, in)
amod(man, inspiring)
amod(man, older)
obl(effective, man)
mark(welcome, to)
advcl(effective, welcome)
amod(teacher, imaginative)
amod(teacher, new)
obj(welcome, teacher)
nmod:poss(philosophy, whose)
nsubj(different, philosophy)
cc(approach, or)
conj(philosophy, approach)
case(specialty, to)
nmod:poss(specialty, they)
nmod(philosophy, specialty)
cop(different, be)
advmod(different, quite)
acl:relcl(teacher, different)
punct(effective, .)
case(particular, in)
obl(have, particular)
punct(have, ,)
det(president, the)
nsubj(have, president)
aux(have, may)
root(ROOT, have)
mark(summon, to)
xcomp(have, summon)
det:predet(power, all)
nmod:poss(power, he)
amod(power, oratorical)
obj(summon, power)
mark(persuade, to)
advcl(summon, persuade)
compound(member, department)
obj(persuade, member)
mark(accept, to)
xcomp(persuade, accept)
det(man, a)
amod(man, outstanding)
obj(accept, man)
case(scale, above)
det(scale, the)
amod(scale, normal)
compound(scale, salary)
nmod(man, scale)
punct(have, .)
case(occasion, on)
det(occasion, those)
amod(occasion, rare)
obl(bear, occasion)
mark(meet, when)
det(member, a)
compound(member, faculty)
nsubj(meet, member)
case(tenure, on)
nmod(member, tenure)
aux(meet, be)
advmod(meet, not)
advcl(bear, meet)
det(standard, the)
obj(meet, standard)
case(institution, of)
det(institution, the)
nmod(standard, institution)
punct(bear, ,)
det(president, the)
nsubj(bear, president)
aux(bear, must)
advmod(bear, also)
root(ROOT, bear)
det(burden, the)
amod(burden, ultimate)
obj(bear, burden)
case(decision, of)
nmod(burden, decision)
cc(action, and)
conj(decision, action)
punct(bear, . )
det(university, a)
amod(university, true)
nsubj(unity, university)
punct(university, ,)
case(marriage, like)
advmod(successful, most)
amod(marriage, successful)
nmod(university, marriage)
punct(unity, ,)
cop(unity, be)
det(unity, a)
root(ROOT, unity)
case(diversity, of)
nmod(unity, diversity)
mark(force, without)
advcl(opportunity, force)
det(component, all)
obj(force, component)
case(pattern, into)
det(pattern, a)
amod(pattern, single)
obl(force, pattern)
punct(opportunity, ,)
det(preparation, the)
nsubj(opportunity, preparation)
case(plan, of)
det(plan, a)
compound(plan, master)
nmod(preparation, plan)
cop(opportunity, be)
det(opportunity, a)
root(ROOT, opportunity)
mark(consider, to)
acl(opportunity, consider)
obj(consider, interrelation)
case(knowledge, of)
nmod(interrelation, knowledge)
case(level, at)
nmod:poss(level, its)
amod(level, highest)
obl(consider, level)
punct(level, ,)
obj(stand, which)
det(university, a)
nsubj(contrast, university)
punct(university, --)
case(contrast, in)
obl(stand, contrast)
case(multiversity, to)
det(multiversity, a)
nmod(contrast, multiversity)
punct(stand, --)
aux(stand, should)
acl:relcl(level, stand)
obl(stand, for)
punct(opportunity, .)
advmod(begin, recently)
nsubj(begin, college)
cc(university, and)
conj(college, university)
aux(begin, have)
root(ROOT, begin)
mark(translate, to)
xcomp(begin, translate)
nmod:poss(philosophy, they)
amod(philosophy, educational)
obj(translate, philosophy)
case(goal, into)
obl:npmod(wide, institution)
punct(wide, -)
amod(goal, wide)
obl(translate, goal)
punct(begin, .)
det(year, each)
obl:tmod(decide, year)
det(institution, a)
amod(institution, few)
amod(institution, more)
nsubj(decide, institution)
aux(decide, be)
root(ROOT, decide)
amod(question, such)
obj(decide, question)
mark(require, as)
punct(decide, :)
aux(require, shall)
nsubj(require, we)
parataxis(decide, require)
det(education, a)
amod(education, liberal)
obj(require, education)
acl(education, build)
case(core, around)
det(core, a)
compound(core, humanity)
obl(build, core)
case(undergraduate, for)
det(undergraduate, all)
nmod(core, undergraduate)
punct(decide, ?)
punct(decide, ?)
cc(permit, or)
aux(permit, shall)
nsubj(permit, we)
root(ROOT, permit)
amod(specialization, early)
obj(permit, specialization)
case(subject, in)
amod(subject, scientific)
cc(technological, and)
conj(scientific, technological)
obl(permit, subject)
punct(permit, ?)
punct(permit, ?)
case(instance, in)
det(instance, the)
amod(instance, first)
obl(plan, instance)
punct(plan, ,)
amod(material, adequate)
amod(material, appropriate)
compound(material, reading)
nsubj:pass(plan, material)
cc(accommodation, and)
compound(accommodation, library)
conj(material, accommodation)
aux(plan, must)
aux:pass(plan, be)
root(ROOT, plan)
punct(plan, .)
case(second, in)
det(second, the)
obl(require, second)
punct(require, ,)
amod(shop, more)
nsubj:pass(require, shop)
punct(laboratory, ,)
conj(shop, laboratory)
punct(staff, ,)
cc(staff, and)
conj(shop, staff)
aux(require, will)
aux:pass(require, be)
root(ROOT, require)
punct(require, .)
case(president, for)
det(president, the)
obl(offer, president)
punct(offer, ,)
det(plan, a)
compound(plan, master)
nsubj(offer, plan)
acl(plan, look)
advmod(look, ahead)
nummod(year, five)
obj(look, year)
punct(reach, ()
det(reach, the)
amod(reach, maximum)
appos(year, reach)
case(forecast, for)
compound(forecast, sound)
nmod(reach, forecast)
punct(reach, ))
punct(offer, ,)
root(ROOT, offer)
amod(advantage, several)
amod(advantage, practical)
obj(offer, advantage)
punct(offer, . )
nsubj(consider, trustee)
punct(faculty, ,)
conj(trustee, faculty)
punct(administration, ,)
cc(administration, and)
conj(trustee, administration)
aux(consider, can)
root(ROOT, consider)
det(consequence, the)
obj(consider, consequence)
case(decision, of)
nmod(consequence, decision)
mark(make, before)
nsubj:pass(make, they)
aux:pass(make, be)
advcl(consider, make)
punct(make, ,)
case(afterwards, instead)
fixed(instead, of)
obl(make, afterwards)
punct(consider, .)
amod(plant, Physical)
nsubj:pass(develop, plant)
cc(equipment, and)
conj(plant, equipment)
aux(develop, can)
aux:pass(develop, be)
advmod(develop, efficiently)
root(ROOT, develop)
punct(develop, .)
amod(program, propose)
amod(program, new)
nsubj:pass(examine, program)
aux(examine, can)
aux:pass(examine, be)
root(ROOT, examine)
case(appropriateness, for)
obl(examine, appropriateness)
case(goal, to)
nmod(appropriateness, goal)
cc(fitness, and)
case(present, for)
amod(fitness, present)
cc(fitness, and)
conj(present, future)
amod(fitness, financial)
conj(goal, fitness)
punct(examine, .)
root(ROOT, more)
mark(find, than)
nummod(president, one)
nsubj(find, president)
aux(find, have)
advcl(more, find)
mark(help, that)
det(plan, a)
amod(range, long)
punct(range, -)
compound(plan, range)
nsubj(help, plan)
ccomp(find, help)
obj(help, he)
mark(attract, to)
xcomp(help, attract)
amod(gift, major)
obj(attract, gift)
punct(more, .)
nsubj(inspire, it)
root(ROOT, inspire)
obj(inspire, confidence)
case(determination, in)
nmod:poss(institution, he)
nmod:poss(determination, institution)
case(institution, 's)
obl(inspire, determination)
mark(establish, to)
acl(determination, establish)
obj(establish, goal)
cc(achieve, and)
mark(achieve, to)
conj(establish, achieve)
obj(achieve, they)
punct(inspire, .)
mark(decide, before)
advcl(know, decide)
advmod(go, where)
nsubj(go, it)
aux(go, be)
ccomp(decide, go)
punct(know, ,)
advmod(know, however)
punct(know, ,)
det(college, a)
nsubj(know, college)
cc(university, or)
conj(college, university)
aux(know, must)
root(ROOT, know)
ccomp(know, where)
nsubj(be, it)
cop(where, be)
punct(know, .)
det(step, the)
amod(step, first)
nsubj(study, step)
cop(study, be)
det(study, a)
amod(study, comprehensive)
compound(study, self)
root(ROOT, study)
acl(study, make)
case(faculty, by)
obl(make, faculty)
punct(make, ,)
case(consultant, by)
amod(consultant, outside)
obl(make, consultant)
punct(combination, ,)
cc(combination, or)
case(combination, by)
det(combination, a)
conj(study, combination)
case(two, of)
det(two, the)
nmod(combination, two)
punct(study, .)
nsubj(appraise, it)
aux(appraise, should)
advmod(appraise, sternly)
root(ROOT, appraise)
obj(appraise, curricula)
punct(faculty, ,)
conj(curricula, faculty)
punct(organization, ,)
conj(curricula, organization)
punct(building, ,)
conj(curricula, building)
punct(load, ,)
compound(load, faculty)
compound(load, work)
conj(curricula, load)
punct(potential, ,)
cc(potential, and)
conj(curricula, potential)
case(growth, for)
nmod(potential, growth)
case(stature, in)
nmod(growth, stature)
cc(size, and)
conj(stature, size)
punct(appraise, .)
nsubj(uneven, Implementation)
case(plan, of)
det(plan, the)
compound(plan, master)
nmod(Implementation, plan)
aux(uneven, will)
advmod(uneven, inevitably)
cop(uneven, be)
root(ROOT, uneven)
punct(uneven, .)
det(department, some)
nsubj(attack, department)
aux(attack, will)
root(ROOT, attack)
nmod:poss(goal, they)
amod(goal, new)
obj(attack, goal)
advmod(attack, enthusiastically)
punct(attack, ;)
punct(attack, ;)
nsubj(drag, other)
aux(drag, may)
parataxis(attack, drag)
nmod:poss(foot, they)
obj(drag, foot)
punct(attack, .)
nsubj:pass(donate, Funds)
aux(donate, may)
aux:pass(donate, be)
advmod(donate, readily)
parataxis(drag, donate)
case(purpose, for)
det(purpose, some)
obl(donate, purpose)
cc(other, but)
advmod(other, not)
conj(purpose, other)
punct(attack, . )
det(plan, a)
nsubj:pass(bring, plan)
aux(bring, must)
advmod(bring, therefore)
aux:pass(bring, be)
root(ROOT, bring)
compound:prt(bring, up)
case(date, to)
obl(bring, date)
advmod(bring, periodically)
punct(bring, ,)
advmod(assistance, possibly)
case(assistance, with)
det(assistance, the)
obl(bring, assistance)
case(officer, of)
det(officer, a)
amod(officer, permanent)
compound(officer, planning)
nmod(assistance, officer)
punct(bring, .)
mark(provide, to)
advcl(establish, provide)
det(flow, the)
amod(flow, continuous)
obj(provide, flow)
case(information, of)
nmod(flow, information)
amod(information, basic)
case(decision, to)
amod(decision, administrative)
obl(basic, decision)
punct(establish, ,)
det(number, a)
nsubj(establish, number)
case(institution, of)
nmod(number, institution)
aux(establish, have)
root(ROOT, establish)
obj(establish, office)
case(research, of)
amod(research, institutional)
nmod(office, research)
punct(establish, .)
det(office, some)
nsubj(have, office)
root(ROOT, have)
advmod(broad, very)
amod(responsibility, broad)
obj(have, responsibility)
punct(responsibility, ,)
acl(responsibility, touch)
case(aspect, on)
advmod(aspect, almost)
det(aspect, all)
obl(touch, aspect)
case(program, of)
det(university, a)
nmod:poss(program, university)
case(university, 's)
amod(program, instructional)
nmod(aspect, program)
punct(have, .)
nmod:poss(duty, they)
nsubj(include, duty)
parataxis(have, include)
obj(include, evaluation)
case(information, of)
det(information, the)
nmod(evaluation, information)
acl(information, collect)
cc(preparation, and)
conj(collect, preparation)
case(recommendation, of)
nmod(preparation, recommendation)
punct(have, .)
advmod(often, more)
advmod(restrict, often)
punct(restrict, ,)
det(office, these)
nsubj:pass(restrict, office)
aux:pass(restrict, be)
root(ROOT, restrict)
case(gather, to)
det(gather, the)
obl(restrict, gather)
case(data, of)
amod(data, empirical)
nmod(gather, data)
punct(restrict, .)
det(president, the)
nmod:poss(opportunity, president)
case(president, 's)
nsubj(reach, opportunity)
mark(influence, for)
acl(opportunity, influence)
obj(influence, education)
root(ROOT, reach)
nmod:poss(point, its)
amod(point, highest)
obj(reach, point)
punct(reach, ,)
mark(decide, as)
nsubj(decide, he)
advcl(reach, decide)
det(project, which)
obj(decide, project)
nsubj(cut, he)
aux(cut, will)
acl:relcl(project, cut)
advmod(cut, back)
punct(cut, ,)
obj(advance, which)
nsubj(advance, he)
aux(advance, will)
conj(cut, advance)
case(allowance, by)
amod(allowance, increase)
obl(advance, allowance)
cc(effort, or)
amod(effort, new)
compound(raising, fund)
punct(raising, -)
compound(effort, raising)
conj(allowance, effort)
punct(reach, .)
advmod(matter, no)
advmod(budget, matter)
advmod(high, how)
amod(hope, high)
det(hope, the)
nsubj(adjust, hope)
cc(dream, and)
conj(hope, dream)
case(educator, of)
nmod(hope, educator)
punct(making, ,)
compound(making, budget)
conj(educator, making)
advcl(matter, adjust)
obj(adjust, they)
case(reality, to)
det(reality, the)
amod(reality, cold)
obl(adjust, reality)
case(dollar, of)
nmod(reality, dollar)
cc(cent, and)
conj(dollar, cent)
punct(adjust, .)
mark(go, when)
det(budget, the)
nsubj(go, budget)
advcl(budget, go)
case(trustee, to)
obl(go, trustee)
case(approval, for)
obl(go, approval)
nsubj(budget, it)
cop(budget, be)
det(president, the)
nmod:poss(budget, president)
case(president, 's)
root(ROOT, budget)
punct(budget, ,)
case(which, to)
obl(commit, which)
nmod:poss(faith, he)
nsubj:pass(commit, faith)
cc(credit, and)
conj(faith, credit)
aux:pass(commit, be)
acl:relcl(budget, commit)
punct(budget, ;)
punct(budget, ;)
nmod:poss(feature, its)
amod(feature, principal)
nsubj(product, feature)
aux(product, should)
cop(product, be)
det(product, a)
parataxis(budget, product)
case(judgment, of)
nmod:poss(judgment, he)
advmod(consider, most)
amod(judgment, consider)
nmod(product, judgment)
punct(budget, .)
nsubj(examine, he)
aux(examine, can)
advmod(examine, not)
punct(examine, ,)
advmod(examine, of)
fixed(of, course)
punct(examine, ,)
root(ROOT, examine)
det(proposal, each)
obj(examine, proposal)
case(scratch, from)
obl(examine, scratch)
punct(examine, .)
nsubj(review, he)
root(ROOT, review)
cc(shape, and)
conj(review, shape)
det(work, the)
obj(shape, work)
case(other, of)
nmod(work, other)
mark(mold, to)
advcl(shape, mold)
det(product, a)
amod(product, single)
amod(product, joint)
obj(mold, product)
nsubj(promote, that)
aux(promote, will)
advmod(promote, best)
acl:relcl(product, promote)
det(aim, the)
obj(promote, aim)
case(institution, of)
det(institution, the)
nmod(aim, institution)
punct(review, .)
nsubj(flexible, budget)
aux(flexible, must)
cop(flexible, be)
root(ROOT, flexible)
mark(allow, to)
advcl(flexible, allow)
obj(allow, adaptation)
case(change, to)
det(change, the)
amod(change, rapid)
obl(allow, change)
case(scholarship, in)
amod(scholarship, scientific)
cc(technological, and)
conj(scientific, technological)
nmod(change, scholarship)
punct(flexible, .)
mark(involve, because)
amod(instruction, scientific)
nsubj(involve, instruction)
cc(research, and)
conj(instruction, research)
advcl(choose, involve)
advmod(large, increasingly)
amod(sum, large)
obj(involve, sum)
case(money, of)
nmod(sum, money)
punct(choose, ,)
det(institution, a)
nsubj(choose, institution)
aux(choose, should)
root(ROOT, choose)
nmod:poss(field, its)
obj(choose, field)
case(prominence, of)
nmod(field, prominence)
punct(choose, .)
advmod(head, otherwise)
nsubj:pass(head, it)
aux(head, will)
aux:pass(head, be)
root(ROOT, head)
case(bankruptcy, for)
obl(head, bankruptcy)
punct(head, ,)
case(worst, at)
obl(head, worst)
punct(starvation, ,)
cc(starvation, and)
case(best, at)
nmod(starvation, best)
case(starvation, towards)
conj(head, starvation)
case(branch, of)
amod(branch, other)
advmod(dramatic, less)
amod(branch, dramatic)
cc(socially, but)
conj(dramatic, socially)
cc(indispensable, and)
advmod(indispensable, culturally)
conj(dramatic, indispensable)
nmod(starvation, branch)
case(learning, of)
nmod(branch, learning)
punct(head, .)
case(interest, in)
det(interest, the)
amod(interest, national)
obl(consider, interest)
advmod(university, even)
det(university, the)
amod(university, affluent)
nsubj(consider, university)
aux(consider, must)
root(ROOT, consider)
det(division, some)
obj(consider, division)
case(labor, of)
nmod(division, labor)
case(they, among)
nmod(labor, they)
mark(replace, to)
advcl(consider, replace)
nmod:poss(ambition, they)
amod(ambition, present)
obj(replace, ambition)
mark(keep, to)
advcl(replace, keep)
compound:prt(keep, up)
case(Joneses, with)
det(Joneses, the)
obl(keep, Joneses)
case(branch, in)
det(branch, all)
obl(keep, branch)
punct(consider, .)
root(ROOT, support)
obj(support, activity)
punct(activity, --)
compound(management, business)
appos(activity, management)
punct(relation, ,)
amod(relation, public)
conj(activity, relation)
punct(raising, ,)
compound(raising, fund)
punct(raising, -)
conj(activity, raising)
punct(activity, --)
compound(president, offer)
conj(activity, president)
appos(president, one)
case(chance, of)
nmod:poss(chance, they)
amod(chance, best)
nmod(one, chance)
mark(buy, to)
acl(chance, buy)
obj(buy, freedom)
case(attention, for)
nmod(freedom, attention)
case(education, to)
nmod(attention, education)
punct(one, .)
advmod(do, here)
det(mastery, the)
amod(mastery, reasonable)
nsubj(do, mastery)
case(element, of)
det(element, the)
nmod(mastery, element)
case(administration, of)
nmod(element, administration)
aux(do, can)
root(ROOT, do)
obj(do, much)
mark(free, to)
acl(much, free)
det(president, a)
obj(free, president)
case(role, for)
nmod:poss(role, he)
amod(role, primary)
nmod(president, role)
punct(do, .)
case(area, in)
det(area, the)
obl(serve, area)
nsubj(relate, that)
aux(relate, do)
advmod(relate, not)
acl:relcl(area, relate)
advmod(relate, directly)
case(program, to)
det(program, the)
amod(program, educational)
obl(relate, program)
punct(serve, ,)
compound(subordinate, expert)
nsubj(serve, subordinate)
aux(serve, will)
root(ROOT, serve)
det(college, the)
obj(serve, college)
cc(university, or)
conj(college, university)
amod(college, better)
case(attention, than)
amod(attention, close)
amod(attention, presidential)
obl(better, attention)
punct(serve, .)
det(president, the)
nsubj(find, president)
aux(find, should)
root(ROOT, find)
amod(subordinate, strong)
obj(find, subordinate)
cc(delegate, and)
conj(find, delegate)
det(discretion, the)
amod(discretion, widest)
obj(delegate, discretion)
case(they, to)
obl(delegate, they)
punct(find, .)
amod(education, Higher)
nsubj(compete, education)
aux(compete, can)
advmod(compete, not)
root(ROOT, compete)
case(scale, with)
det(scale, the)
compound(scale, salary)
obl(compete, scale)
case(world, of)
det(world, the)
compound(world, business)
nmod(scale, world)
punct(offer, ,)
cc(offer, but)
det(institution, a)
amod(institution, educational)
nsubj(offer, institution)
aux(offer, can)
conj(compete, offer)
amod(attraction, many)
amod(attraction, potent)
amod(attraction, intangible)
obj(offer, attraction)
case(member, to)
nmod(attraction, member)
case(community, of)
det(community, the)
compound(community, business)
nmod(member, community)
nsubj(offset, that)
aux(offset, will)
acl:relcl(community, offset)
det(difference, the)
obj(offset, difference)
case(income, in)
obl(offset, income)
punct(compete, .)
advmod(know, just)
mark(know, as)
det(faculty, the)
amod(faculty, entire)
nsubj(know, faculty)
aux(know, should)
root(ROOT, know)
det(president, the)
nmod:poss(philosophy, president)
case(president, 's)
amod(philosophy, educational)
obj(know, philosophy)
cc(objective, and)
conj(philosophy, objective)
punct(know, ,)
advmod(officer, so)
aux(officer, should)
amod(officer, non-academic)
appos(philosophy, officer)
punct(officer, .)
nsubj(understand, they)
aux(understand, will)
advmod(understand, better)
root(ROOT, understand)
det(relationship, the)
obj(understand, relationship)
case(activity, of)
nmod:poss(activity, they)
nmod(relationship, activity)
case(program, to)
det(program, the)
amod(program, academic)
nmod(activity, program)
cc(able, and)
nsubj(able, they)
aux(able, will)
cop(able, be)
conj(understand, able)
mark(explain, to)
xcomp(able, explain)
nmod:poss(action, they)
obj(explain, action)
case(faculty, to)
nmod(action, faculty)
case(term, in)
obl(explain, term)
case(goal, of)
amod(goal, mutual)
nmod(term, goal)
punct(understand, . )
det(president, a)
nsubj:pass(besieg, president)
aux:pass(besieg, be)
advmod(besieg, frequently)
root(ROOT, besieg)
mark(serve, to)
xcomp(besieg, serve)
case(capacity, in)
amod(capacity, non-academic)
amod(capacity, civic)
cc(governmental, and)
conj(civic, governmental)
obl(serve, capacity)
punct(make, ,)
mark(make, to)
conj(serve, make)
obj(make, speech)
mark(lay, to)
xcomp(make, lay)
obj(lay, group)
punct(make, ,)
cc(make, and)
mark(make, to)
conj(lay, make)
amod(appearance, numerous)
amod(appearance, ceremonial)
obj(make, appearance)
case(campus, on)
cc(campus, and)
case(campus, off)
nmod(appearance, campus)
punct(besieg, .)
mark(accept, since)
nsubj(accept, he)
aux(accept, can)
advmod(accept, neither)
advcl(govern, accept)
cc(reject, nor)
conj(accept, reject)
obj(accept, they)
det(they, all)
punct(govern, ,)
nsubj:pass(govern, he)
aux(govern, must)
aux:pass(govern, be)
root(ROOT, govern)
case(time, by)
det(time, the)
obl(govern, time)
cc(energy, and)
conj(time, energy)
amod(time, available)
case(obligation, for)
nmod:poss(obligation, he)
amod(obligation, prime)
amod(obligation, professional)
obl(available, obligation)
punct(govern, .)
nsubj:pass(receive, declination)
cc(substitution, and)
conj(declination, substitution)
aux:pass(receive, be)
advmod(receive, better)
parataxis(govern, receive)
mark(explain, when)
nsubj(explain, he)
advcl(receive, explain)
advmod(preclude, why)
nmod:poss(obligation, he)
nsubj(preclude, obligation)
case(institution, to)
nmod:poss(institution, he)
nmod(obligation, institution)
ccomp(explain, preclude)
nmod:poss(acceptance, he)
obj(preclude, acceptance)
punct(govern, .)
mark(share, by)
advcl(develop, share)
det(load, the)
obj(share, load)
case(speech, of)
amod(speech, important)
nmod(load, speech)
case(colleague, with)
nmod:poss(colleague, he)
nmod(speech, colleague)
punct(develop, ,)
det(president, the)
nsubj(develop, president)
aux(develop, can)
root(ROOT, develop)
det(cadre, a)
obj(develop, cadre)
case(spokesmen, of)
amod(spokesmen, able)
nmod(cadre, spokesmen)
nsubj(help, who)
aux(help, will)
acl:relcl(spokesmen, help)
mark(create, to)
xcomp(help, create)
det(perception, a)
amod(perception, public)
obj(create, perception)
case(university, of)
det(university, the)
nmod(perception, university)
case(institution, as)
det(institution, a)
obl(create, institution)
punct(create, ,)
obj(create, something)
amod(something, more)
case(shadow, than)
det(shadow, the)
amod(shadow, lengthen)
obl(more, shadow)
case(man, of)
nummod(man, one)
nmod(shadow, man)
punct(develop, . )
nummod(become, 1)
punct(1, .)
nsubj(become, introduction)
expl(become, it)
aux(become, have)
advmod(become, recently)
root(ROOT, become)
xcomp(become, practical)
mark(use, to)
advcl(practical, use)
det(emission, the)
compound(emission, radio)
obj(use, emission)
case(moon, of)
det(moon, the)
nmod(emission, moon)
cc(planet, and)
conj(moon, planet)
case(source, as)
det(source, a)
amod(source, new)
obl(use, source)
case(information, of)
nmod(source, information)
case(body, about)
det(body, these)
nmod(information, body)
cc(atmosphere, and)
nmod:poss(atmosphere, they)
conj(body, atmosphere)
punct(practical, .)
det(result, the)
nsubj(consistent, result)
case(observation, of)
amod(observation, present)
nmod(result, observation)
case(emission, of)
det(emission, the)
amod(emission, thermal)
compound(emission, radio)
nmod(observation, emission)
case(moon, of)
det(moon, the)
nmod(emission, moon)
cop(consistent, be)
root(ROOT, consistent)
case(conductivity, with)
det(conductivity, the)
advmod(low, very)
amod(conductivity, low)
amod(conductivity, thermal)
obl(consistent, conductivity)
case(layer, of)
det(layer, the)
compound(layer, surface)
nmod(conductivity, layer)
nsubj:pass(derive, which)
aux:pass(derive, be)
acl:relcl(layer, derive)
case(variation, from)
det(variation, the)
obl(derive, variation)
case(emission, in)
det(emission, the)
amod(emission, infrare)
nmod(variation, emission)
case(eclipse, during)
nmod(variation, eclipse)
punct(garst, ()
advmod(garst, e.g.)
punct(garst, ,)
appos(eclipse, garst)
punct(garst, ,)
appos(garst, 1958)
punct(garst, ))
punct(accurate, .)
mark(accurate, when)
advmod(accurate, sufficiently)
advcl(available, accurate)
cc(complete, and)
conj(accurate, complete)
nsubj(available, measurement)
cop(available, be)
advcl(possible, available)
punct(possible, ,)
expl(possible, it)
aux(possible, will)
cop(possible, be)
parataxis(consistent, possible)
mark(set, to)
csubj(possible, set)
obj(set, limit)
case(characteristic, on)
det(characteristic, the)
amod(characteristic, thermal)
cc(electrical, and)
conj(thermal, electrical)
obl(set, characteristic)
case(surface, of)
det(surface, the)
nmod(characteristic, surface)
cc(material, and)
amod(material, subsurface)
conj(surface, material)
case(moon, of)
det(moon, the)
nmod(material, moon)
punct(consistent, .)
nsubj(probe, Observations)
case(emission, of)
det(emission, the)
compound(emission, radio)
nmod(Observations, emission)
case(planet, of)
det(planet, a)
nmod(emission, planet)
nsubj(have, which)
acl:relcl(planet, have)
det(atmosphere, a)
amod(atmosphere, extensive)
obj(have, atmosphere)
aux(probe, will)
root(ROOT, probe)
det(atmosphere, the)
obj(probe, atmosphere)
case(extent, to)
det(extent, a)
amod(extent, greater)
obl(probe, extent)
case(those, than)
nmod(extent, those)
acl(those, use)
amod(length, shorter)
compound(length, wave)
obj(use, length)
cc(give, and)
aux(give, should)
case(case, in)
det(case, some)
obl(give, case)
conj(probe, give)
advmod(unobtainable, otherwise)
amod(information, unobtainable)
obj(give, information)
case(characteristic, about)
det(characteristic, the)
nmod(information, characteristic)
case(surface, of)
det(surface, the)
amod(surface, solid)
nmod(characteristic, surface)
punct(give, .)
compound(observation, Radio)
nsubj(supply, observation)
case(Venus, of)
nmod(observation, Venus)
cc(Jupiter, and)
conj(Venus, Jupiter)
aux(supply, have)
advmod(supply, already)
conj(probe, supply)
amod(data, unexpected)
amod(data, experimental)
obj(supply, data)
case(condition, on)
det(condition, the)
amod(condition, physical)
obl(supply, condition)
case(planet, of)
det(planet, these)
nmod(condition, planet)
punct(probe, .)
det(intensity, the)
amod(intensity, observe)
nsubj(higher, intensity)
case(emission, of)
det(emission, the)
compound(emission, radio)
nmod(intensity, emission)
case(Venus, of)
nmod(emission, Venus)
cop(higher, be)
advmod(higher, much)
root(ROOT, higher)
case(intensity, than)
det(intensity, the)
amod(intensity, expect)
amod(intensity, thermal)
obl(higher, intensity)
punct(higher, ,)
mark(that, although)
det(spectrum, the)
nsubj(that, spectrum)
acl(spectrum, indicate)
case(measurement, by)
obl(indicate, measurement)
case(length, at)
compound(length, wave)
obl(indicate, length)
case(cm, near)
nummod(cm, 3)
nmod(length, cm)
cc(cm, and)
nummod(cm, 10)
conj(cm, cm)
cop(that, be)
case(that, like)
conj(higher, that)
case(body, of)
det(body, a)
amod(body, black)
nmod(that, body)
case(degree, at)
advmod(600, about)
nummod(degree, 600)
punct(degree, -)
obl(that, degree)
punct(higher, .)
det(result, this)
nsubj(suggest, result)
root(ROOT, suggest)
det(temperature, a)
advmod(high, very)
amod(temperature, high)
obj(suggest, temperature)
case(surface, at)
det(surface, the)
amod(surface, solid)
nmod(temperature, surface)
case(planet, of)
det(planet, the)
nmod(surface, planet)
punct(suggest, ,)
mark(be, although)
expl(be, there)
advcl(suggest, be)
det(possibility, the)
nsubj(be, possibility)
mark(combination, that)
det(radiation, the)
amod(radiation, observe)
nsubj(combination, radiation)
aux(combination, may)
cop(combination, be)
det(combination, a)
acl(possibility, combination)
case(component, of)
cc:preconj(component, both)
amod(component, thermal)
cc(non-thermal, and)
conj(thermal, non-thermal)
nmod(combination, component)
cc(that, and)
mark(that, that)
det(spectrum, the)
amod(spectrum, observe)
nsubj(that, spectrum)
cop(that, be)
conj(combination, that)
case(body, of)
det(body, a)
amod(body, black)
nmod(that, body)
advmod(coincidence, merely)
case(coincidence, by)
obl(that, coincidence)
punct(suggest, .)
case(case, for)
det(case, the)
obl(spectrum, case)
case(Jupiter, of)
nmod(case, Jupiter)
punct(spectrum, ,)
det(spectrum, the)
compound(spectrum, radio)
compound(spectrum, emission)
nsubj(spectrum, spectrum)
cop(spectrum, be)
advmod(spectrum, definitely)
advmod(spectrum, not)
case(spectrum, like)
det(spectrum, the)
root(ROOT, spectrum)
case(radiator, of)
det(radiator, a)
amod(body, black)
punct(body, -)
compound(radiator, body)
nmod(spectrum, radiator)
punct(seem, ,)
cc(seem, and)
expl(seem, it)
conj(spectrum, seem)
advmod(likely, very)
xcomp(seem, likely)
mark(combination, that)
det(radiation, the)
nsubj(combination, radiation)
acl(radiation, reach)
det(earth, the)
obj(reach, earth)
cop(combination, be)
det(combination, a)
ccomp(likely, combination)
case(radiation, of)
amod(radiation, thermal)
nmod(combination, radiation)
case(atmosphere, from)
det(atmosphere, the)
nmod(combination, atmosphere)
cc(component, and)
amod(component, non-thermal)
conj(atmosphere, component)
punct(spectrum, .)
case(planet, of)
det(planet, the)
amod(planet, remain)
obl(observe, planet)
punct(observe, ,)
cc:preconj(Mars, only)
nsubj:pass(observe, Mars)
cc(Saturn, and)
conj(Mars, Saturn)
aux(observe, have)
aux:pass(observe, be)
root(ROOT, observe)
case(source, as)
compound(source, radio)
obl(observe, source)
punct(available, ,)
cc(available, and)
advmod(much, not)
advmod(much, very)
amod(information, much)
nsubj(available, information)
cop(available, be)
conj(observe, available)
punct(observe, .)
nsubj:pass(observe, Mars)
aux(observe, have)
aux:pass(observe, be)
root(ROOT, observe)
advmod(observe, twice)
case(length, at)
advmod(cm, about)
nummod(cm, 3)
punct(cm, -)
compound(length, cm)
compound(length, wave)
obl(observe, length)
punct(agreement, ,)
cc(agreement, and)
det(intensity, the)
nsubj(agreement, intensity)
case(radiation, of)
det(radiation, the)
amod(radiation, observe)
nmod(intensity, radiation)
cop(agreement, be)
case(agreement, in)
amod(agreement, reasonable)
conj(observe, agreement)
case(radiation, with)
det(radiation, the)
amod(radiation, thermal)
nmod(agreement, radiation)
nsubj:pass(predict, which)
aux(predict, might)
aux:pass(predict, be)
acl:relcl(radiation, predict)
case(basis, on)
det(basis, the)
obl(predict, basis)
case(temperature, of)
det(temperature, the)
amod(temperature, know)
nmod(basis, temperature)
case(Mars, of)
nmod(temperature, Mars)
punct(observe, .)
det(intensity, the)
amod(intensity, low)
nsubj(have, intensity)
case(radiation, of)
det(radiation, the)
nmod(intensity, radiation)
case(Saturn, from)
nmod(radiation, Saturn)
root(ROOT, have)
amod(observation, limit)
obj(have, observation)
punct(seem, ,)
cc(seem, but)
advmod(seem, again)
det(radiation, the)
amod(radiation, measure)
nsubj(seem, radiation)
conj(have, seem)
mark(consistent, to)
cop(consistent, be)
xcomp(seem, consistent)
case(origin, with)
det(origin, a)
amod(origin, thermal)
obl(consistent, origin)
punct(have, .)
det(attempt, no)
nsubj:pass(report, attempt)
mark(measure, to)
acl(attempt, measure)
det(emission, the)
compound(emission, radio)
obj(measure, emission)
case(planet, of)
det(planet, the)
amod(planet, remain)
nmod(emission, planet)
aux(report, have)
aux:pass(report, be)
root(ROOT, report)
punct(expect, ,)
cc(expect, and)
punct(report, ,)
case(distance, because)
fixed(because, of)
nmod:poss(distance, they)
obl(report, distance)
punct(diameter, ,)
amod(diameter, small)
conj(distance, diameter)
punct(temperature, ,)
cc(temperature, or)
amod(temperature, low)
conj(distance, temperature)
punct(expect, ,)
det(radiation, the)
amod(radiation, thermal)
nsubj:pass(expect, radiation)
case(length, at)
compound(wave, radio)
compound(length, wave)
nmod(radiation, length)
acl(radiation, reach)
det(earth, the)
obj(reach, earth)
case(source, from)
det(source, these)
nmod(earth, source)
aux:pass(expect, be)
conj(report, expect)
mark(intensity, to)
cop(intensity, be)
case(intensity, of)
advmod(low, very)
amod(intensity, low)
xcomp(expect, intensity)
punct(report, .)
case(spite, in)
obl(make, spite)
case(this, of)
nmod(spite, this)
punct(make, ,)
det(reflector, the)
advmod(large, very)
amod(reflector, large)
compound(reflector, radio)
nsubj(make, reflector)
cc(improve, and)
conj(reflector, improve)
advcl(improve, amplify)
obj(amplify, technique)
nsubj(become, which)
aux(become, be)
advmod(become, now)
acl:relcl(technique, become)
xcomp(become, available)
aux(make, should)
root(ROOT, make)
expl(make, it)
xcomp(make, possible)
mark(observe, to)
advcl(possible, observe)
det(emission, the)
compound(emission, radio)
obj(observe, emission)
case(most, of)
nmod(emission, most)
case(planet, of)
det(planet, the)
nmod(most, planet)
case(year, in)
det(year, a)
amod(year, few)
obl(observe, year)
punct(make, .)
det(study, the)
nsubj(begin, study)
case(emission, of)
det(emission, the)
compound(emission, radio)
nmod(study, emission)
case(moon, of)
det(moon, the)
nmod(emission, moon)
cc(planet, and)
conj(moon, planet)
root(ROOT, begin)
case(detection, with)
det(detection, the)
obl(begin, detection)
case(radiation, of)
det(radiation, the)
amod(radiation, thermal)
nmod(detection, radiation)
case(moon, of)
det(moon, the)
nmod(radiation, moon)
case(length, at)
nummod(cm, 1.25)
punct(cm, -)
compound(length, cm)
compound(length, wave)
nmod(radiation, length)
case(Dicke, by)
nmod(length, Dicke)
cc(Beringer, and)
conj(Dicke, Beringer)
punct(1946, ()
appos(Beringer, 1946)
punct(1946, ))
punct(follow, .)
nsubj:pass(follow, this)
aux:pass(follow, be)
parataxis(begin, follow)
case(series, by)
det(series, a)
amod(series, comprehensive)
obl(follow, series)
case(observation, of)
nmod(series, observation)
case(emission, of)
det(emission, the)
nummod(cm, 1.25)
punct(cm, -)
compound(emission, cm)
nmod(observation, emission)
case(moon, of)
det(moon, the)
nmod(emission, moon)
case(cycle, over)
nummod(cycle, three)
amod(cycle, lunar)
nmod(emission, cycle)
case(Piddington, by)
nmod(cycle, Piddington)
cc(Minnett, and)
conj(Piddington, Minnett)
punct(1949, ()
nummod(Minnett, 1949)
punct(1949, ))
punct(deduce, .)
nsubj(deduce, they)
parataxis(begin, deduce)
case(measurement, from)
nmod:poss(measurement, they)
obl(deduce, measurement)
mark(deduce, that)
det(emission, the)
compound(emission, radio)
nsubj(deduce, emission)
case(disk, from)
det(disk, the)
amod(disk, whole)
nmod(emission, disk)
case(moon, of)
det(moon, the)
nmod(disk, moon)
acl(disk, varied)
case(lunation, during)
det(lunation, a)
obl(varied, lunation)
case(fashion, in)
det(fashion, a)
advmod(sinusoidal, roughly)
amod(fashion, sinusoidal)
nmod(lunation, fashion)
punct(varied, ;)
punct(emission, ;)
mark(less, that)
det(amplitude, the)
nsubj(less, amplitude)
case(variation, of)
det(variation, the)
nmod(amplitude, variation)
cop(less, be)
advmod(less, considerably)
parataxis(begin, less)
case(amplitude, than)
det(amplitude, the)
obl(less, amplitude)
case(variation, of)
det(variation, the)
nmod(amplitude, variation)
case(emission, in)
det(emission, the)
amod(emission, infrare)
nmod(variation, emission)
mark(measure, as)
acl(variation, measure)
case(Pettit, by)
obl(measure, Pettit)
cc(Nicholson, and)
conj(Pettit, Nicholson)
punct(1930, ()
appos(Nicholson, 1930)
punct(1930, ))
cc(Pettit, and)
conj(Pettit, Pettit)
punct(1935, ()
appos(Pettit, 1935)
punct(1935, ))
punct(1935, ;)
punct(Pettit, ;)
cc(come, and)
mark(come, that)
det(maximum, the)
nsubj(come, maximum)
case(emission, of)
det(emission, the)
compound(emission, radio)
nmod(maximum, emission)
conj(begin, come)
advmod(3, about)
nummod(day, 3)
case(1, -)
nmod(3, 1)
case(2, /)
nummod(day, 2)
obj(come, day)
case(Moon, after)
compound(Moon, full)
nmod(day, Moon)
punct(Moon, ,)
nsubj(contrast, which)
cop(contrast, be)
advmod(contrast, again)
case(contrast, in)
acl:relcl(Moon, contrast)
case(emission, to)
det(emission, the)
amod(emission, infrare)
nmod(contrast, emission)
punct(emission, ,)
nsubj(reach, which)
acl:relcl(emission, reach)
nmod:poss(maximum, its)
obj(reach, maximum)
case(Moon, at)
compound(Moon, full)
obl(reach, Moon)
punct(reach, .)
nsubj(explain, Piddington)
cc(explain, and)
conj(Piddington, Minnett)
conj(reach, explain)
nmod:poss(observation, they)
obj(explain, observation)
mark(point, by)
advcl(explain, point)
compound:prt(point, out)
mark(explain, that)
compound(material, rocklike)
obj(point, material)
nsubj(likely, which)
cop(likely, be)
acl:relcl(material, likely)
mark(make, to)
xcomp(likely, make)
compound:prt(make, up)
det(surface, the)
obj(make, surface)
case(moon, of)
det(moon, the)
nmod(surface, moon)
aux(transparent, would)
cop(transparent, be)
advmod(transparent, partially)
ccomp(make, transparent)
case(wave, to)
compound(wave, radio)
obl(transparent, wave)
punct(transparent, ,)
mark(opaque, although)
advcl(transparent, opaque)
case(radiation, to)
amod(radiation, infrare)
obl(opaque, radiation)
punct(begin, .)
det(emission, the)
amod(emission, infrare)
nsubj:pass(assume, emission)
aux(assume, could)
advmod(assume, then)
aux:pass(assume, be)
root(ROOT, assume)
mark(originate, to)
xcomp(assume, originate)
case(surface, at)
det(surface, the)
obl(originate, surface)
case(moon, of)
det(moon, the)
nmod(surface, moon)
punct(originate, ,)
mark(originate, while)
det(emission, the)
compound(emission, radio)
nsubj(originate, emission)
advcl(originate, originate)
case(depth, at)
det(depth, some)
obl(originate, depth)
case(surface, beneath)
det(surface, the)
nmod(depth, surface)
punct(surface, ,)
advmod(reduce, where)
det(variation, the)
compound(variation, temperature)
nsubj:pass(reduce, variation)
case(radiation, due)
fixed(due, to)
amod(radiation, solar)
nmod(variation, radiation)
aux:pass(reduce, be)
acl:relcl(surface, reduce)
case(amplitude, in)
obl(reduce, amplitude)
cc(shift, and)
conj(reduce, shift)
case(phase, in)
obl(shift, phase)
punct(assume, .)
mark(vary, since)
det(absorption, the)
nsubj(vary, absorption)
case(wave, of)
compound(wave, radio)
nmod(absorption, wave)
case(material, in)
amod(material, rocklike)
nmod(wave, material)
advcl(possible, vary)
case(length, with)
compound(length, wave)
obl(vary, length)
punct(possible, ,)
expl(possible, it)
aux(possible, should)
cop(possible, be)
root(ROOT, possible)
mark(sample, to)
csubj(possible, sample)
det(variation, the)
compound(variation, temperature)
obj(sample, variation)
case(depth, at)
amod(depth, different)
nmod(variation, depth)
case(surface, beneath)
det(surface, the)
nmod(depth, surface)
cc(detect, and)
advmod(detect, possibly)
conj(sample, detect)
obj(detect, change)
case(structure, in)
det(structure, the)
obl(detect, structure)
cc(composition, or)
conj(structure, composition)
case(material, of)
det(material, the)
amod(material, lunar)
compound(material, surface)
nmod(structure, material)
punct(possible, .)
det(emission, the)
compound(emission, radio)
nsubj:pass(detect, emission)
case(planet, of)
det(planet, a)
nmod(emission, planet)
aux:pass(detect, be)
advmod(detect, first)
root(ROOT, detect)
case(1955, in)
obl(detect, 1955)
punct(detect, ,)
mark(identify, when)
nsubj(identify, Burke)
cc(Franklin, and)
conj(Burke, Franklin)
punct(1955, ()
appos(Burke, 1955)
punct(1955, ))
advcl(detect, identify)
det(origin, the)
obj(identify, origin)
case(noise, of)
compound(noise, interference)
punct(interference, -)
case(radio, like)
compound(noise, radio)
nmod(origin, noise)
case(record, on)
nmod:poss(record, they)
nmod(noise, record)
case(length, at)
advmod(15, about)
nummod(meter, 15)
compound(wave, meter)
compound(length, wave)
nmod(origin, length)
case(emission, as)
nmod(length, emission)
case(Jupiter, from)
nmod(emission, Jupiter)
punct(discuss, .)
det(type, this)
amod(type, sporadic)
nsubj:pass(discuss, type)
case(radiation, of)
amod(radiation, planetary)
nmod(type, radiation)
aux:pass(discuss, be)
parataxis(detect, discuss)
case(Burke, by)
obl(discuss, Burke)
punct(chap., ()
appos(discuss, chap.)
nummod(chap., 13)
punct(chap., ))
cc(Gallet, and)
conj(chap., Gallet)
punct(chap, ()
appos(Gallet, chap)
punct(chap, .)
nummod(chap, 14)
punct(chap, ))
punct(radiation, .)
amod(radiation, steady)
appos(Gallet, radiation)
nsubj:pass(observe, which)
cop(presumably, be)
advmod(observe, presumably)
case(origin, of)
amod(origin, thermal)
nsubj:pass(observe, origin)
aux:pass(observe, be)
acl:relcl(radiation, observe)
case(Venus, from)
obl(observe, Venus)
case(cm, at)
nummod(cm, 3.15)
cc(9.4, and)
conj(3.15, 9.4)
obl(observe, cm)
punct(Mars, ,)
cc(Mars, and)
case(Mars, from)
conj(cm, Mars)
cc(Jupiter, and)
conj(Mars, Jupiter)
case(cm, at)
nummod(cm, 3.15)
nmod(Mars, cm)
case(1956, in)
nmod(cm, 1956)
punct(Mayer, ()
appos(cm, Mayer)
punct(McCullough, ,)
conj(Mayer, McCullough)
punct(Sloanaker, ,)
cc(Sloanaker, and)
conj(Mayer, Sloanaker)
punct(Sloanaker, ,)
appos(Sloanaker, 1958)
punct(A, ,)
conj(Mayer, A)
punct(B, ,)
appos(A, B)
punct(C, ,)
appos(B, C)
punct(C, ))
punct(Saturn, ,)
cc(Saturn, and)
case(Saturn, from)
conj(Mayer, Saturn)
case(cm, at)
nummod(cm, 3.75)
nmod(Saturn, cm)
case(1957, in)
nmod(cm, 1957)
punct(drake, ()
appos(cm, drake)
cc(Ewen, and)
conj(drake, Ewen)
punct(drake, ,)
nmod:tmod(drake, 1958)
punct(drake, ))
punct(detect, .)
case(time, in)
det(time, the)
advmod(short, relatively)
amod(time, short)
obl(observe, time)
case(observation, since)
det(observation, these)
amod(observation, early)
nmod(time, observation)
punct(observe, ,)
nsubj:pass(observe, Venus)
aux(observe, have)
aux:pass(observe, be)
root(ROOT, observe)
case(length, at)
amod(length, additional)
compound(length, wave)
obl(observe, length)
case(range, in)
det(range, the)
nmod(length, range)
case(cm, from)
nummod(cm, 0.8)
case(10.2, to)
nmod(0.8, 10.2)
nmod(range, cm)
punct(observe, ,)
cc(observe, and)
nsubj:pass(observe, Jupiter)
aux(observe, have)
aux:pass(observe, be)
conj(observe, observe)
case(range, over)
det(range, the)
compound(length, wave)
punct(length, -)
compound(range, length)
obl(observe, range)
case(Aj, from)
nummod(Aj, 3.03)
case(68, to)
nmod(3.03, 68)
nmod(range, Aj)
punct(range, .)
det(characteristic, the)
amod(characteristic, observable)
nsubj(intensity, characteristic)
case(radiation, of)
amod(radiation, planetary)
compound(radiation, radio)
nmod(characteristic, radiation)
cop(intensity, be)
det(intensity, the)
conj(observe, intensity)
punct(polarization, ,)
det(polarization, the)
conj(intensity, polarization)
punct(direction, ,)
cc(direction, and)
det(direction, the)
conj(intensity, direction)
case(arrival, of)
nmod(direction, arrival)
case(wave, of)
det(wave, the)
nmod(arrival, wave)
punct(observe, .)
det(diameter, the)
amod(diameter, maximum)
amod(diameter, angular)
nsubj(smaller, diameter)
case(disk, of)
det(disk, any)
amod(disk, planetary)
nmod(diameter, disk)
mark(observe, as)
acl(diameter, observe)
case(earth, from)
det(earth, the)
obl(observe, earth)
cop(minute, be)
advmod(1, about)
nummod(minute, 1)
obl:tmod(smaller, minute)
case(arc, of)
nmod(minute, arc)
punct(smaller, .)
nsubj(smaller, this)
cop(smaller, be)
advmod(smaller, much)
root(ROOT, smaller)
case(resolution, than)
det(resolution, the)
amod(resolution, highest)
obl(smaller, resolution)
case(reflector, of)
advmod(reflector, even)
det(reflector, the)
advmod(large, very)
amod(reflector, large)
nmod(resolution, reflector)
advmod(construction, now)
case(construction, under)
nmod(reflector, construction)
punct(resolve, ,)
cc(resolve, and)
advmod(resolve, consequently)
det(emission, the)
compound(emission, radio)
nsubj:pass(resolve, emission)
case(region, of)
amod(region, different)
nmod(emission, region)
case(disk, of)
det(disk, the)
nmod(region, disk)
aux(resolve, can)
advmod(resolve, not)
aux:pass(resolve, be)
conj(smaller, resolve)
punct(smaller, .)
nsubj(possible, it)
aux(possible, should)
cop(possible, be)
root(ROOT, possible)
punct(possible, ,)
advmod(possible, however)
punct(possible, ,)
mark(put, to)
csubj(possible, put)
amod(limit, useful)
obj(put, limit)
case(diameter, on)
det(diameter, the)
obl(put, diameter)
case(source, of)
det(source, the)
compound(source, radio)
nmod(diameter, source)
mark(observe, by)
advcl(put, observe)
case(reflector, with)
amod(reflector, large)
obl(observe, reflector)
cc(interferometers, or)
case(interferometers, with)
conj(reflector, interferometers)
punct(limit, .)
nsubj:pass(limit, measurement)
case(polarization, of)
nmod(measurement, polarization)
aux:pass(limit, be)
advmod(limit, presently)
parataxis(possible, limit)
case(sensitivity, by)
compound(sensitivity, apparatus)
obl(limit, sensitivity)
cc(remain, and)
aux(remain, will)
conj(limit, remain)
xcomp(remain, difficult)
case(intensity, because)
fixed(because, of)
det(intensity, the)
amod(intensity, low)
obl(difficult, intensity)
case(radiation, of)
det(radiation, the)
amod(radiation, planetary)
nmod(intensity, radiation)
case(earth, at)
det(earth, the)
nmod(radiation, earth)
punct(possible, .)
expl(be, there)
aux(be, have)
root(ROOT, be)
amod(measurement, few)
nsubj(be, measurement)
advmod(measurement, specifically)
case(determination, for)
det(determination, the)
nmod(measurement, determination)
case(polarization, of)
det(polarization, the)
nmod(determination, polarization)
case(radiation, of)
amod(radiation, planetary)
nmod(polarization, radiation)
punct(be, .)
det(measurement, the)
nsubj(show, measurement)
acl(measurement, make)
case(reflector, with)
det(reflector, the)
compound(reflector, nrl)
nummod(foot, 50)
punct(foot, -)
compound(reflector, foot)
obl(make, reflector)
punct(reflector, ,)
nsubj(mount, which)
cop(mount, be)
compound(mount, altitude)
punct(mount, -)
compound(mount, azimuth)
punct(mount, -)
acl:relcl(reflector, mount)
punct(show, ,)
aux(show, would)
aux(show, have)
root(ROOT, show)
det(change, a)
amod(change, systematic)
obj(show, change)
case(angle, with)
amod(hour, local)
compound(angle, hour)
nmod(change, angle)
case(intensity, in)
det(intensity, the)
amod(intensity, measure)
nmod(change, intensity)
case(Venus, of)
nmod(intensity, Venus)
cc(Jupiter, and)
conj(Venus, Jupiter)
mark(polarize, if)
det(part, a)
amod(part, substantial)
nsubj:pass(polarize, part)
case(radiation, of)
det(radiation, the)
nmod(part, radiation)
aux(polarize, have)
aux:pass(polarize, be)
advmod(polarize, linearly)
advcl(show, polarize)
punct(show, .)
amod(measurement, recent)
compound(measurement, interferometer)
nsubj(show, measurement)
punct(Radhakrishnan, ()
appos(measurement, Radhakrishnan)
cc(Roberts, and)
conj(Radhakrishnan, Roberts)
punct(Radhakrishnan, ,)
amod(Radhakrishnan, 1960)
punct(Radhakrishnan, ))
aux(show, have)
root(ROOT, show)
det(emission, the)
nummod(mc, 960)
punct(mc, -)
compound(emission, mc)
obj(show, emission)
case(Jupiter, of)
nmod(emission, Jupiter)
mark(polarize, to)
aux:pass(polarize, be)
advmod(polarize, partially)
xcomp(show, polarize)
cc(originate, and)
mark(originate, to)
conj(polarize, originate)
case(region, in)
det(region, a)
obl(originate, region)
case(diameter, of)
amod(diameter, larger)
nmod(region, diameter)
case(disk, than)
det(disk, the)
amod(disk, visible)
nmod(diameter, disk)
punct(show, .)
advmod(available, other)
case(result, than)
det(result, this)
advmod(significant, very)
amod(result, significant)
obl(other, result)
punct(restrict, ,)
nsubj:pass(restrict, most)
case(information, of)
det(information, the)
nmod(most, information)
advmod(available, now)
acl:relcl(most, available)
case(emission, about)
det(emission, the)
compound(emission, radio)
obl(available, emission)
case(planet, of)
det(planet, the)
nmod(emission, planet)
aux:pass(restrict, be)
root(ROOT, restrict)
case(intensity, to)
det(intensity, the)
obl(restrict, intensity)
case(radiation, of)
det(radiation, the)
nmod(intensity, radiation)
punct(restrict, .)
det(concept, the)
nsubj:pass(use, concept)
case(temperature, of)
amod(temperature, apparent)
amod(body, black)
punct(body, -)
compound(temperature, body)
nmod(concept, temperature)
aux:pass(use, be)
root(ROOT, use)
mark(describe, to)
advcl(use, describe)
det(radiation, the)
obj(describe, radiation)
acl(radiation, receive)
case(moon, from)
det(moon, the)
obl(receive, moon)
cc(planet, and)
det(planet, the)
conj(moon, planet)
punct(use, .)
det(radiation, the)
amod(radiation, receive)
nsubj:pass(compare, radiation)
aux:pass(compare, be)
root(ROOT, compare)
case(radiation, with)
det(radiation, the)
obl(compare, radiation)
case(body, from)
det(body, a)
amod(body, hypothetical)
amod(body, black)
obl(compare, body)
nsubj(subtend, which)
acl:relcl(body, subtend)
det(angle, the)
amod(angle, same)
amod(angle, solid)
obj(subtend, angle)
case(disk, as)
det(disk, the)
amod(disk, visible)
obl(subtend, disk)
case(planet, of)
det(planet, the)
nmod(disk, planet)
punct(compare, .)
det(temperature, the)
amod(temperature, apparent)
amod(body, black)
punct(body, -)
compound(temperature, body)
compound(temperature, disk)
nsubj(temperature, temperature)
cop(temperature, be)
det(temperature, the)
root(ROOT, temperature)
nsubj:pass(assume, which)
aux(assume, must)
aux:pass(assume, be)
acl:relcl(temperature, assume)
case(body, for)
det(body, the)
amod(body, black)
obl(assume, body)
mark(equal, in)
fixed(in, order)
mark(equal, that)
det(intensity, the)
nsubj(equal, intensity)
case(radiation, of)
nmod:poss(radiation, its)
nmod(intensity, radiation)
aux(equal, should)
ccomp(assume, equal)
obj(equal, that)
case(radiation, of)
det(radiation, the)
amod(radiation, observe)
nmod(that, radiation)
punct(temperature, .)
det(use, the)
nsubj(specify, use)
case(concept, of)
det(concept, this)
nmod(use, concept)
aux(specify, do)
advmod(specify, not)
root(ROOT, specify)
det(origin, the)
obj(specify, origin)
case(radiation, of)
det(radiation, the)
nmod(origin, radiation)
punct(correspond, ,)
cc(correspond, and)
advmod(radiate, only)
mark(radiate, if)
det(planet, the)
nsubj(radiate, planet)
advmod(radiate, really)
advcl(correspond, radiate)
case(body, as)
det(body, a)
amod(body, black)
obl(radiate, body)
punct(correspond, ,)
aux(correspond, will)
det(temperature, the)
amod(temperature, apparent)
amod(body, black)
punct(body, -)
compound(temperature, body)
nsubj(correspond, temperature)
conj(specify, correspond)
case(temperature, to)
det(temperature, the)
amod(temperature, physical)
obl(correspond, temperature)
case(material, of)
det(material, the)
compound(material, emit)
nmod(temperature, material)
punct(specify, .)
det(radiation, the)
compound(radiation, radio)
nsubj:pass(compare, radiation)
case(sun, of)
det(sun, the)
nmod(radiation, sun)
nsubj:pass(reflect, which)
aux:pass(reflect, be)
acl:relcl(radiation, reflect)
case(moon, from)
det(moon, the)
obl(reflect, moon)
cc(planet, and)
conj(moon, planet)
aux(compare, should)
aux:pass(compare, be)
advmod(compare, negligible)
root(ROOT, compare)
case(emission, with)
nmod:poss(emission, they)
amod(emission, thermal)
obl(compare, emission)
case(length, at)
compound(wave, centimeter)
compound(length, wave)
nmod(emission, length)
punct(compare, ,)
case(time, except)
advmod(time, possibly)
case(time, at)
obl(compare, time)
case(outburst, of)
amod(outburst, exceptional)
nmod(time, outburst)
case(noise, of)
amod(radio, solar)
compound(noise, radio)
nmod(outburst, noise)
punct(compare, .)
det(level, the)
amod(level, quiescent)
nsubj(increase, level)
case(radiation, of)
obl:npmod(length, centimeter)
obl:npmod(length, wave)
punct(length, -)
amod(radiation, length)
amod(radiation, solar)
nmod(level, radiation)
aux(increase, would)
root(ROOT, increase)
det(temperature, the)
amod(temperature, average)
compound(temperature, disk)
compound(temperature, brightness)
obj(increase, temperature)
case(degree, by)
advmod(1, less)
fixed(less, than)
nummod(degree, 1)
punct(degree, -)
obl(increase, degree)
punct(increase, .)
case(length, at)
compound(wave, meter)
compound(length, wave)
obl(expect, length)
det(increase, a)
nsubj:pass(expect, increase)
case(order, of)
det(order, the)
nmod(increase, order)
case(degree, of)
nummod(degree, 10)
punct(degree, -)
nmod(order, degree)
case(temperature, in)
det(temperature, the)
amod(disk, average)
compound(temperature, disk)
nmod(increase, temperature)
case(planet, of)
det(planet, the)
amod(planet, nearer)
nmod(temperature, planet)
aux(expect, would)
aux:pass(expect, be)
root(ROOT, expect)
punct(expect, .)
advmod(expect, therefore)
punct(expect, ,)
advcl(expect, neglect)
det(outburst, the)
amod(outburst, extreme)
obj(neglect, outburst)
punct(outburst, ,)
amod(radiation, reflect)
amod(radiation, solar)
nsubj:pass(expect, radiation)
aux:pass(expect, be)
advmod(expect, not)
acl:relcl(outburst, expect)
mark(cause, to)
xcomp(expect, cause)
amod(error, sizable)
obj(cause, error)
case(measurement, in)
det(measurement, the)
nmod(error, measurement)
case(radiation, of)
amod(radiation, planetary)
nmod(measurement, radiation)
case(range, in)
det(range, the)
compound(range, centimeter)
punct(centimeter, -)
cc(decimeter, and)
compound(length, decimeter)
punct(length, -)
compound(length, wave)
punct(length, -)
compound(range, length)
nmod(measurement, range)
punct(expect, . )
nummod(make, 2)
punct(2, .)
det(observation, the)
compound(observation, moon)
nummod(observation, 2.1)
compound(observation, observation)
compound(observation, Radio)
nsubj:pass(make, observation)
case(moon, of)
det(moon, the)
nmod(observation, moon)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
case(range, over)
det(range, the)
obl(make, range)
case(length, of)
compound(length, wave)
nmod(range, length)
case(mm, from)
nummod(mm, 4.3)
compound(cm, mm)
case(75, to)
nmod(mm, 75)
nmod(range, cm)
punct(summarize, ,)
cc(summarize, and)
det(result, the)
nsubj:pass(summarize, result)
aux:pass(summarize, be)
conj(make, summarize)
case(table, in)
obl(summarize, table)
nummod(table, 1)
punct(summarize, .)
nsubj:pass(make, Observations)
aux(make, have)
advmod(make, also)
aux:pass(make, be)
conj(summarize, make)
case(mm, at)
nummod(mm, 1.5)
obl(make, mm)
advcl(make, use)
amod(technique, optical)
obj(use, technique)
punct(Sinton, ()
appos(technique, Sinton)
punct(Sinton, ,)
appos(Sinton, 1955)
punct(Sinton, ,)
appos(Sinton, 1956)
punct(see, ,)
punct(see, ;)
punct(see, ;)
parataxis(Sinton, see)
advmod(chap, also)
obj(see, chap)
punct(chap, .)
nummod(chap, 11)
punct(see, ))
punct(see, .)
advmod(use, not)
det:predet(observer, all)
det(observer, the)
nsubj(use, observer)
aux(use, have)
parataxis(see, use)
det(procedure, the)
amod(procedure, same)
obj(use, procedure)
cc(make, or)
conj(use, make)
det(assumption, the)
amod(assumption, same)
obj(make, assumption)
case(distribution, about)
det(distribution, the)
amod(distribution, lunar)
compound(distribution, brightness)
nmod(assumption, distribution)
mark(reduce, when)
acl(distribution, reduce)
det(data, the)
obj(reduce, data)
punct(this, ,)
cc(this, and)
nsubj(together, this)
punct(together, ,)
advmod(reduce, together)
case(difference, with)
obl(together, difference)
case(method, in)
det(method, the)
nmod(difference, method)
mark(calibrate, of)
acl(method, calibrate)
det(antennae, the)
obj(calibrate, antennae)
cc(receiver, and)
conj(antennae, receiver)
punct(account, ,)
aux(account, must)
acl(method, account)
case(much, for)
obl(account, much)
case(disagreement, of)
det(disagreement, the)
obl(much, disagreement)
case(temperature, in)
det(temperature, the)
amod(temperature, measure)
compound(temperature, radio)
compound(temperature, brightness)
nmod(disagreement, temperature)
punct(make, .)
case(observation, in)
det(observation, the)
obl(small, observation)
case(mm, at)
nummod(mm, 4.3)
nmod(observation, mm)
punct(coate, ()
appos(mm, coate)
punct(coate, ,)
amod(coate, 1959)
punct(coate, ))
punct(small, ,)
det(diameter, the)
nsubj(small, diameter)
case(beam, of)
det(beam, the)
compound(beam, antenna)
nmod(diameter, beam)
punct(beam, ,)
appos(beam, 6'.7)
punct(small, ,)
cop(small, be)
root(ROOT, small)
advmod(small, enough)
mark(allow, to)
advcl(small, allow)
obj(allow, resolution)
case(some, of)
nmod(resolution, some)
case(feature, of)
det(feature, the)
amod(feature, larger)
nmod(some, feature)
case(surface, of)
det(surface, the)
amod(surface, lunar)
nmod(feature, surface)
punct(make, ,)
cc(make, and)
compound(diagram, contour)
nsubj:pass(make, diagram)
aux(make, have)
aux:pass(make, be)
conj(small, make)
case(distribution, of)
det(distribution, the)
amod(distribution, lunar)
compound(distribution, brightness)
obl(make, distribution)
case(phase, at)
nummod(phase, three)
amod(phase, lunar)
nmod(distribution, phase)
punct(small, .)
det(observation, these)
nsubj(indicate, observation)
root(ROOT, indicate)
mark(heat, that)
det(maria, the)
amod(maria, lunar)
nsubj(heat, maria)
ccomp(indicate, heat)
compound:prt(heat, up)
advmod(rapidly, more)
advmod(heat, rapidly)
cc(cool, and)
advmod(cool, also)
conj(heat, cool)
advmod(cool, off)
advmod(rapidly, more)
advmod(cool, rapidly)
mark(do, than)
advcl(rapidly, do)
det(region, the)
amod(region, mountainous)
obj(do, region)
punct(indicate, .)
compound(Imbrium, mare)
nsubj(seem, Imbrium)
root(ROOT, seem)
mark(exception, to)
cop(exception, be)
det(exception, a)
xcomp(seem, exception)
cc(remain, and)
conj(seem, remain)
xcomp(remain, cooler)
case(region, than)
det(region, the)
obl(cooler, region)
nsubj(surround, which)
acl:relcl(region, surround)
obj(surround, it)
punct(seem, .)
det(diagram, these)
amod(diagram, contour)
nsubj(suggest, diagram)
advmod(suggest, also)
root(ROOT, suggest)
det(falloff, a)
advmod(rapid, rather)
amod(falloff, rapid)
obj(suggest, falloff)
case(brightness, in)
det(brightness, the)
compound(brightness, radio)
nmod(falloff, brightness)
case(latitude, with)
nmod(brightness, latitude)
punct(suggest, .)
advmod(recently, very)
advmod(make, recently)
punct(make, ,)
nsubj:pass(make, observation)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
case(length, at)
compound(mm, 8)
punct(mm, -)
nummod(length, mm)
compound(length, wave)
obl(make, length)
case(reflector, with)
det(reflector, a)
nmod(length, reflector)
nummod(meter, 22)
nmod:npmod(reflector, meter)
case(diameter, in)
nmod(meter, diameter)
case(width, with)
det(width, a)
amod(width, resultant)
compound(width, beam)
obl(make, width)
case(about, of)
advmod(about, only)
advmod(width, about)
nummod(Amenitskii, 2)
punct(2, ')
punct(Amenitskii, ()
root(ROOT, Amenitskii)
punct(Noskova, ,)
conj(Amenitskii, Noskova)
punct(Salomonovich, ,)
cc(Salomonovich, and)
conj(Amenitskii, Salomonovich)
punct(Amenitskii, ,)
appos(Salomonovich, 1960)
punct(Amenitskii, ))
punct(Amenitskii, .)
det(contour, the)
amod(temperature, constant)
punct(temperature, -)
compound(contour, temperature)
nsubj(smoother, contour)
cop(smoother, be)
advmod(smoother, much)
root(ROOT, smoother)
case(those, than)
obl(smoother, those)
acl(those, observe)
case(mm, at)
nummod(mm, 4.3)
obl(observe, mm)
case(coate, by)
obl(observe, coate)
punct(1959, ()
appos(coate, 1959)
punct(1959, ))
cc(sensitive, and)
advmod(sensitive, apparently)
det(emission, the)
nsubj(sensitive, emission)
case(mm, at)
nummod(mm, 8)
nmod(emission, mm)
cop(sensitive, be)
advmod(sensitive, not)
advmod(so, nearly)
advmod(sensitive, so)
conj(smoother, sensitive)
case(difference, to)
obl(sensitive, difference)
case(feature, in)
compound(feature, surface)
nmod(difference, feature)
punct(smoother, .)
amod(observation, such)
amod(resolution, high)
punct(resolution, -)
compound(observation, resolution)
root(ROOT, observation)
mark(need, as)
nsubj:pass(need, these)
aux:pass(need, be)
acl(observation, need)
case(length, at)
amod(wave, several)
compound(length, wave)
obl(need, length)
mark(interpret, in)
fixed(in, order)
mark(interpret, that)
det(emission, the)
compound(emission, radio)
nsubj:pass(interpret, emission)
case(moon, of)
det(moon, the)
nmod(emission, moon)
aux(interpret, can)
aux:pass(interpret, be)
advmod(interpret, properly)
advcl(need, interpret)
punct(observation, .)
det(observation, the)
nsubj:pass(publish, observation)
case(Mayer, of)
nmod(observation, Mayer)
punct(McCullough, ,)
conj(Mayer, McCullough)
punct(Sloanaker, ,)
cc(Sloanaker, and)
conj(Mayer, Sloanaker)
case(cm, at)
nummod(cm, 3.15)
nmod(observation, cm)
cc(Sloanaker, and)
case(Sloanaker, of)
conj(cm, Sloanaker)
case(cm, at)
nummod(cm, 10.3)
nmod(Sloanaker, cm)
aux(publish, have)
advmod(publish, not)
advmod(publish, previously)
aux:pass(publish, be)
root(ROOT, publish)
cc(describe, and)
aux(describe, will)
aux:pass(describe, be)
advmod(describe, briefly)
conj(publish, describe)
punct(measurement, .)
nsubj:pass(obtain, measurement)
case(cm, at)
nummod(cm, 3.15)
nmod(measurement, cm)
aux:pass(obtain, be)
ccomp(describe, obtain)
case(day, on)
nummod(day, 11)
obl(obtain, day)
advcl(obtain, spread)
case(interval, over)
det(interval, the)
obl(spread, interval)
appos(interval, May)
nummod(May, 3)
case(June, to)
nmod(May, June)
nummod(June, 19)
punct(June, ,)
nummod(June, 1956)
punct(spread, ,)
advcl(spread, use)
det(reflector, the)
nummod(foot, 50)
punct(foot, -)
compound(reflector, foot)
obj(use, reflector)
case(Laboratory, at)
det(Laboratory, the)
compound(Laboratory, U.)
compound(Laboratory, S.)
compound(Laboratory, Naval)
compound(Laboratory, Research)
nmod(reflector, Laboratory)
case(Washington, in)
nmod(Laboratory, Washington)
punct(obtain, .)
det(diameter, the)
amod(intensity, half)
punct(intensity, -)
compound(diameter, intensity)
nsubj(9, diameter)
case(beam, of)
det(beam, the)
compound(beam, antenna)
nmod(diameter, beam)
cop(9, be)
advmod(9, about)
root(ROOT, 9)
punct(9, ')
punct(include, ,)
cc(include, and)
det(angle, the)
nsubj(include, angle)
acl(angle, subtend)
case(moon, by)
det(moon, the)
obl(subtend, moon)
conj(9, include)
det(beam, the)
amod(beam, entire)
amod(beam, main)
obj(include, beam)
cc(part, and)
conj(beam, part)
case(lobe, of)
det(lobe, the)
amod(lobe, first)
compound(lobe, side)
nmod(part, lobe)
punct(9, .)
det(pattern, the)
compound(pattern, antenna)
nsubj:pass(measure, pattern)
cc(gain, and)
det(gain, the)
compound(gain, power)
conj(pattern, gain)
case(peak, at)
det(peak, the)
nmod(gain, peak)
case(beam, of)
det(beam, the)
nmod(peak, beam)
aux:pass(measure, be)
advmod(measure, both)
root(ROOT, measure)
punct(Mayer, ()
nsubj:pass(measure, Mayer)
punct(McCullough, ,)
conj(Mayer, McCullough)
punct(Sloanaker, ,)
cc(Sloanaker, and)
conj(Mayer, Sloanaker)
punct(Mayer, ,)
appos(Mayer, 1958)
punct(Mayer, ))
punct(measure, ,)
mark(know, so)
fixed(so, that)
det(sensitivity, the)
amod(sensitivity, absolute)
compound(sensitivity, power)
nsubj:pass(know, sensitivity)
case(beam, of)
det(beam, the)
compound(beam, antenna)
nmod(sensitivity, beam)
case(angle, over)
det(angle, the)
amod(angle, solid)
nmod(sensitivity, angle)
case(moon, of)
det(moon, the)
nmod(angle, moon)
aux:pass(know, be)
advcl(measure, know)
punct(measure, .)
det(ratio, the)
nsubj:pass(find, ratio)
case(change, of)
det(change, the)
amod(change, measure)
compound(change, antenna)
compound(change, temperature)
nmod(ratio, change)
case(scan, during)
det(scan, a)
compound(scan, drift)
nmod(change, scan)
case(moon, across)
det(moon, the)
nmod(scan, moon)
case(temperature, to)
det(temperature, the)
amod(temperature, average)
compound(temperature, brightness)
nmod(scan, temperature)
case(moon, of)
det(moon, the)
nmod(temperature, moon)
case(beam, over)
det(beam, the)
compound(beam, antenna)
nmod(temperature, beam)
punct(assume, ()
advcl(find, assume)
mark(negligible, that)
det(temperature, the)
compound(temperature, brightness)
nsubj(negligible, temperature)
case(sky, of)
det(sky, the)
nmod(temperature, sky)
cop(negligible, be)
ccomp(assume, negligible)
punct(negligible, ))
aux:pass(find, be)
root(ROOT, find)
punct(find, ,)
case(integration, by)
amod(integration, graphical)
obl(find, integration)
case(diagram, of)
det(diagram, the)
compound(diagram, antenna)
compound(diagram, directivity)
nmod(integration, diagram)
punct(diagram, ,)
mark(0.85, to)
cop(0.85, be)
xcomp(find, 0.85)
punct(find, .)
det(temperature, the)
amod(temperature, measure)
compound(temperature, brightness)
nsubj(approximation, temperature)
cop(approximation, be)
det(approximation, a)
amod(approximation, good)
root(ROOT, approximation)
case(temperature, to)
det(temperature, the)
compound(temperature, brightness)
nmod(approximation, temperature)
case(center, at)
det(center, the)
nmod(approximation, center)
case(disk, of)
det(disk, the)
amod(disk, lunar)
nmod(center, disk)
case(beam, because)
fixed(because, of)
det(beam, the)
amod(beam, narrow)
compound(beam, antenna)
obl(approximation, beam)
cc(uniform, and)
mark(uniform, because)
det(distribution, the)
compound(distribution, temperature)
nsubj(uniform, distribution)
case(portion, over)
det(portion, the)
amod(portion, central)
nmod(distribution, portion)
case(disk, of)
det(moon, the)
nmod:poss(disk, moon)
case(moon, 's)
nmod(portion, disk)
cop(uniform, be)
advmod(uniform, nearly)
conj(approximation, uniform)
punct(approximation, .)
det(result, the)
nsubj(Af, result)
case(observation, of)
det(observation, the)
nmod(result, observation)
cop(Af, be)
root(ROOT, Af)
advmod(measure, where)
det(angle, the)
compound(angle, phase)
nsubj:pass(measure, angle)
punct(q, ,)
appos(angle, q)
punct(measure, ,)
aux:pass(measure, be)
parataxis(Af, measure)
case(degree, in)
obl(measure, degree)
case(moon, from)
amod(moon, new)
obl(measure, moon)
cc(include, and)
det(error, the)
amod(error, probable)
nsubj(include, error)
conj(Af, include)
obj(include, absolute)
cc(error, as)
fixed(as, well)
fixed(as, as)
amod(error, relative)
obj(include, error)
punct(Af, .)
det(result, this)
nsubj:pass(plot, result)
aux:pass(plot, be)
root(ROOT, plot)
case(observation, along)
case(observation, with)
det(observation, the)
nummod(mm, 8.6)
punct(mm, -)
compound(observation, mm)
obl(plot, observation)
case(Gibson, of)
nmod(observation, Gibson)
punct(1958, ()
appos(Gibson, 1958)
punct(1958, ))
case(figure, in)
obl(plot, figure)
nummod(figure, 1)
punct(figure, ,)
appos(figure, a)
punct(plot, .)
det(variation, the)
nsubj(less, variation)
case(emission, in)
det(emission, the)
nummod(cm, 3)
punct(cm, -)
compound(emission, cm)
nmod(variation, emission)
case(moon, of)
det(moon, the)
nmod(emission, moon)
case(lunation, during)
det(lunation, a)
nmod(emission, lunation)
cop(less, be)
advmod(much, very)
advmod(less, much)
root(ROOT, less)
case(variation, than)
det(variation, the)
obl(less, variation)
case(emission, in)
det(emission, the)
nummod(mm, 8.6)
punct(mm, -)
compound(emission, mm)
nmod(variation, emission)
punct(less, ,)
mark(expect, as)
aux(expect, would)
aux:pass(expect, be)
advcl(less, expect)
case(explanation, from)
det(explanation, the)
obl(expect, explanation)
case(Piddington, of)
nmod(explanation, Piddington)
cc(Minnett, and)
conj(Piddington, Minnett)
punct(1949, ()
appos(Piddington, 1949)
punct(1949, ))
punct(less, .)
case(discussion, in)
det(discussion, the)
obl(refer, discussion)
nsubj(follow, which)
acl:relcl(discussion, follow)
punct(refer, ,)
det(average, the)
compound(average, time)
nsubj:pass(refer, average)
case(emission, of)
det(emission, the)
compound(emission, radio)
nmod(average, emission)
aux(refer, will)
aux:pass(refer, be)
root(ROOT, refer)
obl(refer, to)
case(component, as)
det(component, the)
amod(component, constant)
obl(refer, component)
punct(call, ,)
cc(call, and)
det(variation, the)
amod(variation, superimpose)
amod(variation, periodic)
nsubj:pass(call, variation)
aux(call, will)
aux:pass(call, be)
conj(refer, call)
det(component, the)
amod(component, variable)
obj(call, component)
punct(refer, .)
det(observation, the)
nummod(cm, 10.3)
punct(cm, -)
compound(observation, cm)
nsubj:pass(make, observation)
case(Sloanaker, of)
nmod(observation, Sloanaker)
aux:pass(make, be)
root(ROOT, make)
case(May, on)
obl(make, May)
nummod(May, 20)
punct(May, ,)
nummod(May, 1958)
punct(make, ,)
advcl(make, use)
det(reflector, the)
nummod(foot, 84)
punct(foot, -)
compound(reflector, foot)
obj(use, reflector)
case(observatory, at)
det(observatory, the)
compound(Point, Maryland)
compound(observatory, Point)
nmod(reflector, observatory)
case(Laboratory, of)
det(Laboratory, the)
compound(Laboratory, U.)
flat(U., S.)
compound(Laboratory, Naval)
compound(Laboratory, Research)
nmod(observatory, Laboratory)
punct(make, .)
det(age, the)
nsubj(day, age)
case(moon, of)
det(moon, the)
nmod(age, moon)
cop(day, be)
advmod(2, about)
nummod(day, 2)
root(ROOT, day)
punct(day, .)
det(diameter, the)
amod(intensity, half)
punct(intensity, -)
compound(diameter, intensity)
nsubj(18'.5, diameter)
case(lobe, of)
det(lobe, the)
amod(lobe, main)
nmod(diameter, lobe)
case(antenna, of)
det(antenna, the)
nmod(lobe, antenna)
cop(18'.5, be)
advmod(18'.5, about)
root(ROOT, 18'.5)
punct(reduce, ,)
cc(reduce, and)
det(temperature, the)
compound(temperature, brightness)
nsubj:pass(reduce, temperature)
aux:pass(reduce, be)
conj(18'.5, reduce)
mark(assume, by)
advcl(reduce, assume)
det(shape, a)
amod(shape, Gaussian)
obj(assume, shape)
case(beam, for)
det(beam, the)
compound(beam, antenna)
nmod(shape, beam)
cc(disk, and)
det(disk, a)
advmod(bright, uniformly)
amod(disk, bright)
conj(beam, disk)
case(moon, for)
det(moon, the)
nmod(disk, moon)
punct(18'.5, .)
compound(experiment, abstract)
nsubj:pass(make, experiment)
aux:pass(make, be)
root(ROOT, make)
case(arc, on)
det(arc, a)
amod(arc, electric)
obl(make, arc)
acl(arc, apply)
det(anode, a)
amod(anode, porous)
compound(anode, graphite)
obj(apply, anode)
acl(anode, cool)
case(gas, by)
det(gas, a)
compound(gas, transpir)
obl(cool, gas)
punct(Argon, ()
appos(gas, Argon)
punct(Argon, ))
punct(make, .)
advmod(feed, thus)
punct(feed, ,)
det(energy, the)
nsubj:pass(feed, energy)
acl(energy, transfer)
case(arc, from)
det(arc, the)
obl(transfer, arc)
case(anode, to)
det(anode, the)
nmod(arc, anode)
aux:pass(feed, be)
advmod(feed, partly)
root(ROOT, feed)
advmod(feed, back)
case(arc, into)
det(arc, the)
obl(feed, arc)
punct(feed, .)
nsubj:pass(show, it)
aux:pass(show, be)
root(ROOT, show)
mark(reduce, that)
case(design, by)
amod(design, proper)
compound(design, anode)
obl(reduce, design)
det(loss, the)
amod(loss, net)
compound(loss, energy)
nsubj:pass(reduce, loss)
case(arc, of)
det(arc, the)
nmod(loss, arc)
case(anode, to)
det(anode, the)
nmod(arc, anode)
aux(reduce, could)
aux:pass(reduce, be)
ccomp(show, reduce)
case(%, to)
advmod(15, approximately)
nummod(%, 15)
obl(reduce, %)
case(energy, of)
det(energy, the)
amod(energy, total)
compound(energy, arc)
nmod(%, energy)
punct(show, . )
det(balance, a)
amod(balance, detailed)
compound(balance, energy)
nsubj:pass(establish, balance)
case(anode, of)
det(anode, the)
nmod(balance, anode)
aux:pass(establish, be)
root(ROOT, establish)
punct(establish, .)
det(ablation, the)
compound(ablation, anode)
nsubj:pass(reduce, ablation)
aux(reduce, could)
aux:pass(reduce, be)
root(ROOT, reduce)
case(amount, to)
det(amount, a)
amod(amount, negligible)
obl(reduce, amount)
punct(reduce, .)
det(dependence, the)
nsubj:pass(investigate, dependence)
case(voltage, of)
det(voltage, the)
compound(voltage, arc)
nmod(dependence, voltage)
case(velocity, upon)
det(velocity, the)
amod(velocity, mass)
compound(velocity, flow)
nmod(dependence, velocity)
case(gas, of)
det(gas, the)
compound(gas, transpirating)
nmod(velocity, gas)
aux:pass(investigate, be)
root(ROOT, investigate)
case(length, for)
amod(length, various)
compound(length, arc)
obl(investigate, length)
cc(current, and)
conj(length, current)
case(Amp, between)
nummod(Amp, 100)
nmod(length, Amp)
cc(Aj, and)
nummod(Aj, 200)
conj(Amp, Aj)
punct(make, .)
amod(observation, qualitative)
nsubj:pass(make, observation)
aux:pass(make, be)
conj(investigate, make)
cc(take, and)
amod(speed, high)
punct(speed, -)
compound(picture, speed)
compound(picture, motion)
nsubj:pass(take, picture)
aux:pass(take, be)
conj(make, take)
mark(study, to)
advcl(take, study)
compound(phenomena, flow)
obj(study, phenomena)
case(arc, in)
det(arc, the)
obl(study, arc)
case(velocity, at)
amod(velocity, various)
amod(velocity, mass)
compound(velocity, flow)
obl(study, velocity)
punct(investigate, .)
root(ROOT, introduction)
det(flux, the)
amod(flux, high)
compound(flux, heat)
obj(introduction, flux)
acl(flux, exist)
case(surface, at)
det(surface, the)
compound(surface, electrode)
obl(exist, surface)
case(arc, of)
amod(arc, electric)
nmod(surface, arc)
parataxis(introduction, necessitate)
amod(cool, extensive)
obj(necessitate, cool)
mark(prevent, to)
acl(cool, prevent)
compound(ablation, electrode)
obj(prevent, ablation)
punct(introduction, .)
det(requirement, the)
compound(requirement, cool)
nsubj(severe, requirement)
cop(severe, be)
advmod(severe, particularly)
root(ROOT, severe)
case(anode, at)
det(anode, the)
obl(severe, anode)
punct(severe, .)
case(arc, in)
amod(burn, free)
punct(burn, -)
amod(arc, burn)
amod(arc, electric)
obl(transfer, arc)
punct(transfer, ,)
case(instance, for)
obl(transfer, instance)
punct(transfer, ,)
advmod(90, approximately)
nummod(%, 90)
nsubj:pass(transfer, %)
case(power, of)
det(power, the)
amod(power, total)
compound(power, arc)
nmod(%, power)
aux:pass(transfer, be)
root(ROOT, transfer)
case(anode, to)
det(anode, the)
obl(transfer, anode)
advcl(transfer, give)
obj(give, rise)
case(flux, to)
amod(flux, local)
compound(flux, heat)
obl(give, flux)
case(excess, in)
obl(give, excess)
case(Af, of)
nmod(excess, Af)
mark(measure, as)
advcl(give, measure)
case(author, by)
det(author, the)
obl(measure, author)
punct(author, --)
det(value, the)
amod(value, exact)
appos(author, value)
case(atmosphere, depend)
case(atmosphere, on)
det(atmosphere, the)
compound(atmosphere, arc)
nmod(value, atmosphere)
punct(transfer, .)
case(generator, in)
compound(generator, plasma)
obl(available, generator)
mark(available, as)
advmod(available, currently)
advmod(available, commercially)
advcl(transfer, available)
case(use, for)
amod(use, industrial)
obl(available, use)
cc(tool, or)
case(tool, as)
amod(tool, high)
compound(research, temperature)
compound(tool, research)
nsubj(%, tool)
advmod(more, often)
advmod(50, more)
fixed(more, than)
nummod(%, 50)
nsubj:pass(transfer, %)
case(input, of)
det(input, the)
amod(input, total)
compound(input, energy)
nmod(%, input)
aux(transfer, be)
aux:pass(transfer, be)
root(ROOT, transfer)
case(medium, to)
det(medium, the)
compound(medium, cool)
obl(transfer, medium)
case(anode, of)
det(anode, the)
nmod(medium, anode)
punct(transfer, .)
det(rate, the)
amod(rate, higher)
compound(transfer, heat)
compound(rate, transfer)
nsubj:pass(explain, rate)
case(anode, at)
det(anode, the)
nmod(rate, anode)
case(those, compare)
case(those, with)
nmod(rate, those)
case(cathode, at)
det(cathode, the)
nmod(those, cathode)
aux(explain, can)
aux:pass(explain, be)
root(ROOT, explain)
case(phenomena, by)
det(phenomena, the)
amod(phenomena, physical)
obl(explain, phenomena)
acl(phenomena, occur)
case(arc, in)
amod(arc, free)
compound(arc, burn)
obl(occur, arc)
punct(explain, .)
case(generator, in)
compound(generator, plasma)
obl(modify, generator)
det(convection, the)
amod(convection, superimpose)
amod(convection, force)
nsubj(modify, convection)
aux(modify, may)
root(ROOT, modify)
det(picture, the)
obj(modify, picture)
advmod(modify, somewhat)
punct(modify, .)
det(transfer, the)
compound(transfer, heat)
nsubj(effect, transfer)
case(anode, to)
det(anode, the)
nmod(transfer, anode)
cop(effect, be)
case(effect, due)
fixed(due, to)
det(effect, the)
amod(effect, follow)
root(ROOT, effect)
punct(effect, :)
nummod(heat, 1)
punct(heat, .)
appos(effect, heat)
case(condensation, of)
nmod(heat, condensation)
punct(function, ()
compound(function, work)
appos(condensation, function)
punct(function, ))
cc(energy, plus)
amod(energy, kinetic)
conj(heat, energy)
case(electron, of)
det(electron, the)
nmod(energy, electron)
acl(electron, imping)
case(anode, on)
det(anode, the)
obl(imping, anode)
punct(effect, .)
det(transfer, this)
compound(transfer, energy)
nsubj(depend, transfer)
root(ROOT, depend)
case(current, on)
det(current, the)
obl(depend, current)
punct(temperature, ,)
det(temperature, the)
appos(current, temperature)
case(column, in)
det(column, the)
compound(column, arc)
nmod(temperature, column)
punct(material, ,)
det(material, the)
compound(material, anode)
conj(column, material)
punct(condition, ,)
cc(condition, and)
det(condition, the)
conj(current, condition)
case(sheath, in)
det(sheath, the)
compound(sheath, anode)
nmod(condition, sheath)
punct(depend, . )
nummod(transfer, 2)
punct(2, .)
compound(transfer, heat)
root(ROOT, transfer)
case(conduction, by)
amod(conduction, molecular)
nmod(transfer, conduction)
cc(radiation, as)
fixed(as, well)
fixed(as, as)
case(radiation, by)
conj(transfer, radiation)
case(column, from)
det(column, the)
compound(column, arc)
nmod(radiation, column)
punct(transfer, .)
det(transfer, the)
compound(transfer, heat)
nsubj:pass(enhance, transfer)
case(anode, to)
det(anode, the)
nmod(transfer, anode)
case(arc, in)
amod(arc, free)
compound(arc, burn)
nmod(anode, arc)
aux:pass(enhance, be)
root(ROOT, enhance)
case(jet, by)
det(jet, a)
amod(jet, hot)
compound(jet, gas)
obl(enhance, jet)
acl(jet, flow)
case(cathode, from)
det(cathode, the)
obl(flow, cathode)
case(anode, towards)
det(anode, the)
obl(flow, anode)
case(velocity, with)
nmod(anode, velocity)
case(Af, up)
nmod(velocity, Af)
punct(investigate, .)
det(phenomenon, this)
nsubj:pass(investigate, phenomenon)
aux(investigate, have)
aux:pass(investigate, be)
advmod(investigate, experimentally)
parataxis(enhance, investigate)
case(detail, in)
obl(investigate, detail)
case(Maecker, by)
obl(investigate, Maecker)
punct(Ref., ()
appos(Maecker, Ref.)
nummod(Ref., 1)
punct(Ref., ))
punct(enhance, .)
det(gradient, the)
compound(gradient, pressure)
nsubj(nature, gradient)
acl(gradient, produce)
det(jet, the)
obj(produce, jet)
cop(nature, be)
case(nature, due)
fixed(due, to)
det(nature, the)
root(ROOT, nature)
case(field, of)
det(field, the)
amod(field, magnetic)
nmod(nature, field)
case(arc, in)
det(arc, the)
nmod(nature, arc)
punct(decrease, ()
amod(decrease, rapid)
appos(nature, decrease)
case(density, of)
amod(density, current)
nmod(decrease, density)
case(cathode, from)
nmod(density, cathode)
case(anode, to)
det(anode, the)
nmod(cathode, anode)
punct(decrease, ))
punct(nature, .)
advmod(resemble, hence)
punct(resemble, ,)
det(condition, the)
compound(condition, flow)
nsubj(resemble, condition)
case(anode, at)
det(anode, the)
nmod(condition, anode)
case(arc, of)
amod(arc, free)
compound(arc, burn)
nmod(anode, arc)
root(ROOT, resemble)
obj(resemble, those)
case(point, near)
det(point, a)
compound(point, stagnation)
nmod(those, point)
punct(resemble, .)
expl(apparent, it)
cop(apparent, be)
root(ROOT, apparent)
case(above, from)
det(above, the)
obl(apparent, above)
cc(evidence, and)
case(evidence, from)
amod(evidence, experimental)
conj(apparent, evidence)
mark(compare, that)
det(requirement, the)
compound(requirement, cool)
nsubj:pass(compare, requirement)
case(anode, for)
det(anode, the)
nmod(requirement, anode)
case(arc, of)
amod(arc, free)
compound(arc, burn)
nmod(anode, arc)
aux:pass(compare, be)
advmod(compare, large)
acl(evidence, compare)
case(those, with)
obl(compare, those)
case(cathode, for)
det(cathode, the)
nmod(those, cathode)
punct(apparent, .)
det(flow, the)
compound(flow, gas)
nsubj(modify, flow)
case(generator, through)
det(generator, a)
compound(generator, plasma)
nmod(flow, generator)
aux(modify, will)
root(ROOT, modify)
det(condition, these)
obj(modify, condition)
punct(modify, ;)
punct(modify, ;)
advmod(part, however)
punct(part, ,)
det(anode, the)
nsubj(part, anode)
cop(part, be)
advmod(part, still)
det(part, the)
parataxis(modify, part)
acl(part, receive)
det(flux, the)
amod(flux, largest)
compound(flux, heat)
obj(receive, flux)
punct(modify, .)
det(attempt, a)
nsubj(aim, attempt)
mark(improve, to)
acl(attempt, improve)
det(life, the)
obj(improve, life)
case(anode, of)
det(anode, the)
nmod(life, anode)
cc(efficiency, or)
det(efficiency, the)
conj(anode, efficiency)
case(generator, of)
det(generator, the)
compound(generator, plasma)
nmod(efficiency, generator)
aux(aim, must)
punct(aim, ,)
advmod(aim, therefore)
punct(aim, ,)
root(ROOT, aim)
case(reduction, at)
det(reduction, a)
obl(aim, reduction)
case(loss, of)
det(loss, the)
compound(loss, anode)
nmod(reduction, loss)
punct(aim, .)
det(possibility, the)
amod(possibility, follow)
nsubj(exist, possibility)
root(ROOT, exist)
mark(achieve, for)
advcl(exist, achieve)
obj(achieve, this)
punct(exist, :)
nummod(use, 1)
punct(1, .)
det(use, the)
parataxis(exist, use)
case(voltage, of)
amod(voltage, high)
nmod(use, voltage)
cc(current, and)
amod(current, low)
conj(voltage, current)
case(design, by)
amod(design, proper)
nmod(current, design)
mark(reduce, to)
acl(design, reduce)
compound(transfer, electron)
compound(transfer, heat)
obj(reduce, transfer)
case(anode, to)
det(anode, the)
obl(reduce, anode)
case(output, for)
det(output, a)
amod(output, give)
compound(output, power)
obl(reduce, output)
punct(exist, . )
nummod(motion, 2)
punct(2, .)
amod(motion, Continuous)
root(ROOT, motion)
case(area, of)
det(area, the)
compound(area, arc)
compound(area, contact)
nmod(motion, area)
case(anode, at)
det(anode, the)
nmod(motion, anode)
case(force, by)
compound(force, flow)
cc(magnetic, or)
conj(flow, magnetic)
nmod(motion, force)
punct(motion, . )
nummod(., 3)
punct(Feedback, .)
root(ROOT, Feedback)
case(energy, of)
det(energy, the)
nmod(Feedback, energy)
acl(energy, transfer)
case(anode, to)
det(anode, the)
obl(transfer, anode)
mark(apply, by)
advcl(transfer, apply)
compound(transpiration, gas)
obj(apply, transpiration)
case(anode, through)
det(anode, the)
obl(apply, anode)
punct(Feedback, .)
det(method, the)
amod(method, third)
nsubj(apply, method)
cop(apply, be)
punct(apply, ,)
case(knowledge, to)
nmod:poss(knowledge, we)
obl(apply, knowledge)
punct(apply, ,)
advmod(apply, successfully)
root(ROOT, apply)
case(time, for)
det(time, the)
amod(time, first)
obl(apply, time)
case(sheer, by)
compound(sheer, C.)
nmod(time, sheer)
cc(co-worker, and)
conj(sheer, co-worker)
punct(2, ()
compound(2, Ref.)
nummod(be, 2)
punct(2, ))
punct(2, .)
det(purpose, the)
nsubj(be, purpose)
case(study, of)
det(study, the)
amod(study, present)
nmod(purpose, study)
parataxis(apply, be)
mark(study, to)
ccomp(be, study)
det(condition, the)
amod(condition, thermal)
obj(study, condition)
cc(establish, and)
mark(establish, to)
conj(study, establish)
det(balance, a)
compound(balance, energy)
obj(establish, balance)
case(anode, for)
det(anode, a)
compound(cool, transpiration)
amod(anode, cool)
nmod(balance, anode)
cc(effect, as)
fixed(as, well)
fixed(as, as)
det(effect, the)
conj(balance, effect)
mark(blow, of)
acl(effect, blow)
case(voltage, on)
det(voltage, the)
compound(voltage, arc)
obl(blow, voltage)
punct(injection, .)
compound(injection, gas)
obj(blow, injection)
case(anode, through)
det(anode, a)
amod(anode, porous)
nmod(injection, anode)
punct(cool, ()
compound(cool, transpiration)
appos(anode, cool)
punct(cool, ))
advmod(only, not)
advmod(feed, only)
acl:relcl(anode, feed)
compound:prt(feed, back)
det(energy, the)
obj(feed, energy)
acl(energy, transfer)
case(anode, to)
det(anode, the)
obl(transfer, anode)
case(process, by)
det(process, the)
amod(process, above)
amod(process, mention)
obl(transfer, process)
punct(modify, ,)
cc(modify, but)
advmod(modify, also)
conj(feed, modify)
det(condition, the)
obj(modify, condition)
case(arc, in)
det(arc, the)
obl(modify, arc)
nmod:npmod(arc, itself)
punct(apply, . )
det(study, a)
amod(study, detailed)
nsubj:pass(attempt, study)
case(phenomenon, of)
det(phenomenon, this)
amod(phenomenon, latter)
nmod(study, phenomenon)
aux:pass(attempt, be)
advmod(attempt, not)
root(ROOT, attempt)
case(paper, in)
det(paper, this)
obl(attempt, paper)
punct(attempt, .)
nsubj:pass(use, Argon)
aux:pass(use, be)
parataxis(attempt, use)
case(gas, as)
det(gas, a)
compound(gas, blowing)
obl(use, gas)
mark(exclude, to)
advcl(use, exclude)
det(effect, any)
obj(exclude, effect)
case(dissociation, of)
nmod(effect, dissociation)
cc(chemical, or)
conj(dissociation, chemical)
nmod(effect, reaction)
punct(attempt, .)
det(material, the)
compound(material, anode)
nsubj(graphite, material)
cop(graphite, be)
amod(graphite, porous)
root(ROOT, graphite)
punct(graphite, .)
amod(metal, sinter)
amod(metal, porous)
nsubj(usable, metal)
aux(usable, should)
cop(usable, be)
parataxis(graphite, usable)
case(principle, in)
obl(usable, principle)
punct(graphite, .)
advmod(arise, however)
punct(arise, ,)
amod(difficulty, technical)
nsubj(arise, difficulty)
root(ROOT, arise)
mark(melt, by)
advcl(arise, melt)
case(spot, at)
amod(spot, local)
amod(spot, hot)
obl(melt, spot)
punct(arise, .)
det(arrangement, the)
amod(arrangement, experimental)
nsubj:pass(base, arrangement)
mark(describe, as)
acl(arrangement, describe)
advmod(describe, below)
aux:pass(base, be)
root(ROOT, base)
case(geometry, on)
det(geometry, the)
obl(base, geometry)
case(arc, of)
amod(arc, free)
compound(arc, burn)
nmod(geometry, arc)
punct(base, .)
advmod(draw, thus)
punct(draw, ,)
amod(comparison, direct)
nsubj:pass(draw, comparison)
aux(draw, can)
aux:pass(draw, be)
root(ROOT, draw)
case(arc, with)
amod(arc, free)
compound(arc, burn)
obl(draw, arc)
nsubj:pass(study, which)
aux(study, have)
aux:pass(study, be)
acl:relcl(arc, study)
case(detail, in)
obl(study, detail)
case(year, during)
det(year, the)
amod(year, past)
obl(study, year)
cc(decade, and)
conj(investigator, decade)
case(investigator, by)
amod(investigator, numerous)
obl(figure, investigator)
punct(Ref., ()
appos(investigator, Ref.)
nummod(Ref., 3)
punct(Ref., ))
punct(figure, .)
amod(apparatus, Experimental)
nsubj(figure, apparatus)
parataxis(draw, figure)
nummod(show, 1)
case(3, to)
nmod(1, 3)
xcomp(figure, show)
amod(view, photographic)
cc(schematic, and)
conj(photographic, schematic)
obj(show, view)
case(stand, of)
det(stand, the)
compound(stand, test)
nmod(view, stand)
cc(model, and)
case(model, of)
nummod(model, two)
amod(model, different)
conj(view, model)
case(holder, of)
det(holder, the)
compound(holder, anode)
nmod(model, holder)
punct(draw, .)
det(cathode, the)
nsubj(consist, cathode)
root(ROOT, consist)
case(rod, of)
det(rod, a)
compound(4, 1)
punct(4, /)
compound(rod, 4)
punct(4, '')
punct(rod, '')
obl:npmod(thoriate, diameter)
amod(rod, thoriate)
compound(rod, tungsten)
obl(consist, rod)
acl(rod, attach)
case(tube, to)
det(tube, a)
compound(cool, water)
amod(tube, cool)
compound(tube, copper)
obl(attach, tube)
punct(consist, .)
det(tube, this)
nsubj:pass(adjust, tube)
aux(adjust, could)
aux:pass(adjust, be)
root(ROOT, adjust)
case(direction, in)
nmod:poss(direction, its)
amod(direction, axial)
obl(adjust, direction)
case(drive, by)
det(drive, a)
amod(drive, electric)
obl(adjust, drive)
mark(establish, to)
advcl(adjust, establish)
det(space, the)
amod(space, require)
compound(space, electrode)
obj(establish, space)
punct(adjust, .)
det(anode, the)
nsubj:pass(mount, anode)
case(figure, in)
nmod(anode, figure)
nummod(figure, 2)
aux:pass(mount, be)
root(ROOT, mount)
case(means, by)
obl(mount, means)
case(holder, of)
det(holder, the)
compound(holder, anode)
nmod(means, holder)
nsubj:pass(attach, which)
aux:pass(attach, be)
acl:relcl(holder, attach)
case(plug, to)
det(plug, a)
compound(plug, steel)
obl(attach, plug)
cc(disk, and)
conj(plug, disk)
punct(mount, .)
det(gas, the)
compound(gas, transpir)
nsubj(form, gas)
acl(gas, eject)
case(anode, from)
det(anode, the)
obl(eject, anode)
root(ROOT, form)
det(jet, a)
obj(form, jet)
acl(jet, direct)
advmod(direct, axially)
case(cathode, towards)
det(cathode, the)
obl(direct, cathode)
advmod(cathode, below)
punct(form, .)
nsubj:pass(prevent, inflow)
case(air, of)
nmod(inflow, air)
case(atmosphere, from)
det(atmosphere, the)
amod(atmosphere, surround)
nmod(inflow, atmosphere)
aux:pass(prevent, be)
root(ROOT, prevent)
case(disk, by)
det(disk, the)
nummod(disk, two)
obl(prevent, disk)
acl(disk, show)
case(figure, in)
obl(show, figure)
nummod(blow, 2)
punct(2, .)
nsubj:pass(blow, Argon)
aux:pass(blow, be)
advmod(blow, also)
conj(prevent, blow)
case(velocity, at)
amod(velocity, low)
obl(blow, velocity)
punct(Af, ()
amod(Af, mass)
compound(Af, flow)
compound(Af, rate)
appos(velocity, Af)
punct(Af, ))
case(coaxial, through)
det(coaxial, a)
compound(coaxial, tube)
nmod(velocity, coaxial)
case(cathode, with)
det(cathode, the)
nmod(coaxial, cathode)
case(precaution, as)
det(precaution, a)
amod(precaution, additional)
nmod(coaxial, precaution)
case(contamination, against)
nmod(precaution, contamination)
case(arc, of)
det(arc, the)
nmod(contamination, arc)
case(air, by)
nmod(contamination, air)
punct(prevent, .)
det(anode, the)
nsubj(consist, anode)
root(ROOT, consist)
case(plug, of)
det(plug, a)
compound(2, 1)
case(2, /)
nummod(diameter, 2)
compound(diameter, inch)
compound(plug, diameter)
amod(plug, porous)
compound(plug, graphite)
obl(consist, plug)
punct(plug, ,)
nummod(inch, 1)
case(4, /)
nmod(1, 4)
obl:npmod(long, inch)
advmod(consist, long)
punct(consist, .)
det(graphite, the)
nsubj(NC, graphite)
cop(NC, be)
compound(NC, National)
compound(NC, Carbon)
root(ROOT, NC)
nummod(NC, 60)
punct(NC, ,)
nsubj(have, which)
acl:relcl(NC, have)
det(porosity, a)
obj(have, porosity)
case(%, of)
nummod(%, 50)
nmod(porosity, %)
cc(size, and)
det(size, a)
amod(size, average)
compound(size, pore)
conj(porosity, size)
case(30, of)
nmod(size, 30)
punct(require, .)
det(size, this)
amod(size, small)
compound(size, pore)
nsubj:pass(require, size)
aux:pass(require, be)
parataxis(NC, require)
mark(ensure, to)
xcomp(require, ensure)
obj(ensure, uniformity)
case(flow, of)
det(flow, the)
nmod(uniformity, flow)
acl(flow, leave)
det(anode, the)
obj(leave, anode)
punct(require, .)
det(plug, the)
compound(plug, anode)
nsubj:pass(insert, plug)
punct(Figure, ()
appos(plug, Figure)
nummod(Figure, 2)
punct(Figure, ))
aux:pass(insert, be)
root(ROOT, insert)
case(holder, into)
det(holder, a)
compound(anode, carbon)
compound(holder, anode)
obl(insert, holder)
punct(insert, . )
det(thermocouple, a)
amod(thermocouple, shield)
nsubj:pass(use, thermocouple)
aux:pass(use, be)
root(ROOT, use)
mark(measure, to)
advcl(use, measure)
det(temperature, the)
amod(temperature, upstream)
obj(measure, temperature)
case(gas, of)
det(gas, the)
compound(gas, transpir)
nmod(temperature, gas)
punct(use, .)
nsubj:pass(expose, it)
aux:pass(expose, be)
root(ROOT, expose)
case(jet, to)
det(jet, a)
amod(jet, high)
compound(gas, velocity)
compound(jet, gas)
obl(expose, jet)
punct(expose, . )
det(plug, a)
root(ROOT, plug)
cc(tube, and)
det(tube, a)
conj(plug, tube)
case(hole, with)
nmod(tube, hole)
case(wall, in)
nmod:poss(wall, its)
amod(wall, cylindrical)
nmod(hole, wall)
acl(hole, divide)
det(chamber, the)
obj(divide, chamber)
case(plug, above)
det(plug, the)
amod(plug, porous)
nmod(chamber, plug)
case(part, into)
nummod(part, two)
obl(divide, part)
punct(plug, .)
det(arrangement, this)
nsubj(have, arrangement)
root(ROOT, have)
det(purpose, the)
obj(have, purpose)
mark(prevent, to)
acl(purpose, prevent)
amod(gas, heat)
obj(prevent, gas)
mark(reach, to)
advcl(prevent, reach)
det(thermocouple, the)
obj(reach, thermocouple)
case(convection, by)
amod(convection, natural)
obl(reach, convection)
punct(have, .)
nummod(pyrometer, two)
nsubj(serve, pyrometer)
acl(pyrometer, show)
case(figure, in)
obl(show, figure)
nummod(figure, 1)
cc(2, and)
conj(figure, 2)
punct(instrument, ()
compound(instrument, Pyrometer)
compound(Model, instrument)
compound(Model, co.)
appos(2, Model)
nummod(Model, 95)
punct(Model, ))
root(ROOT, serve)
case(measurement, for)
amod(measurement, simultaneous)
obl(serve, measurement)
case(temperature, of)
det(temperature, the)
compound(temperature, anode)
compound(temperature, surface)
nmod(measurement, temperature)
cc(distribution, and)
det(distribution, the)
compound(distribution, temperature)
conj(temperature, distribution)
case(holder, along)
det(holder, the)
compound(holder, anode)
nmod(distribution, holder)
punct(serve, .)
nummod(thermocouple, three)
nsubj:pass(place, thermocouple)
aux:pass(place, be)
root(ROOT, place)
case(location, at)
amod(location, different)
obl(place, location)
case(disk, in)
det(disk, the)
compound(disk, aluminum)
nmod(location, disk)
acl(disk, surround)
det(holder, the)
compound(holder, anode)
obj(surround, holder)
mark(determine, to)
xcomp(surround, determine)
nmod:poss(temperature, its)
obj(determine, temperature)
punct(place, .)
det(holder, another)
compound(holder, anode)
nsubj:pass(show, holder)
acl(holder, use)
case(experiment, in)
det(experiment, the)
obl(use, experiment)
aux:pass(show, be)
ccomp(determine, show)
case(figure, in)
obl(show, figure)
nummod(figure, 3)
punct(place, .)
case(design, in)
det(design, this)
obl(cool, design)
det(holder, the)
compound(holder, anode)
nsubj(cool, holder)
cop(cool, be)
obl:npmod(cool, water)
advcl(attach, cool)
cc(determine, and)
det(loss, the)
compound(loss, heat)
nsubj:pass(determine, loss)
case(conduction, by)
nmod(loss, conduction)
case(anode, from)
det(anode, the)
nmod(conduction, anode)
aux:pass(determine, be)
parataxis(cool, determine)
mark(measure, by)
advcl(determine, measure)
det(rise, the)
compound(rise, temperature)
obj(measure, rise)
case(coolant, of)
det(coolant, the)
nmod(rise, coolant)
punct(measure, .)
mark(reduce, to)
advcl(measure, reduce)
compound(transfer, heat)
obj(reduce, transfer)
case(gas, from)
det(gas, the)
amod(gas, hot)
obl(reduce, gas)
case(holder, to)
det(holder, this)
compound(holder, anode)
nmod(gas, holder)
case(regime, outside)
det(regime, the)
obl(reduce, regime)
case(arc, of)
det(arc, the)
nmod(regime, arc)
punct(attach, ,)
det(shield, a)
compound(shield, carbon)
nsubj:pass(attach, shield)
aux:pass(attach, be)
root(ROOT, attach)
case(surface, to)
det(surface, the)
obl(attach, surface)
advcl(attach, provide)
det(gap, a)
compound(gap, air)
obj(provide, gap)
case(inch, of)
nummod(inch, 1/16)
nmod(gap, inch)
case(plate, between)
det(plate, the)
nmod(inch, plate)
cc(surface, and)
det(surface, the)
conj(plate, surface)
case(holder, of)
det(holder, the)
compound(holder, anode)
nmod(surface, holder)
punct(attach, .)
case(addition, in)
obl(cover, addition)
punct(cover, ,)
det(surface, the)
amod(surface, inner)
nsubj:pass(cover, surface)
case(shield, of)
det(shield, the)
compound(shield, carbon)
nmod(surface, shield)
aux:pass(cover, be)
root(ROOT, cover)
case(foil, with)
compound(foil, aluminum)
obl(cover, foil)
mark(reduce, to)
advcl(cover, reduce)
obj(reduce, radiation)
punct(Temperatures, .)
nsubj:pass(cover, Temperatures)
case(shield, of)
det(shield, the)
nmod(Temperatures, shield)
cc(surface, and)
case(surface, of)
det(surface, the)
conj(Temperatures, surface)
case(holder, of)
det(holder, the)
compound(cool, water)
punct(cool, -)
amod(holder, cool)
compound(holder, anode)
nmod(surface, holder)
aux:pass(measure, be)
acl:relcl(surface, measure)
case(thermocouple, by)
obl(measure, thermocouple)
mark(account, to)
xcomp(measure, account)
case(heat, for)
obl(account, heat)
advcl(account, receive)
case(coolant, by)
det(coolant, the)
obl(receive, coolant)
cc(originating, but)
advmod(originating, not)
conj(receive, originating)
case(plug, from)
det(plug, the)
compound(plug, anode)
obl(originating, plug)
punct(cover, .)
det(flow, the)
compound(flow, argon)
nsubj:pass(regulate, flow)
case(bottle, from)
amod(bottle, commercial)
nmod(flow, bottle)
aux:pass(regulate, be)
root(ROOT, regulate)
case(regulator, by)
det(regulator, a)
compound(regulator, pressure)
obl(regulate, regulator)
cc(measure, and)
conj(regulate, measure)
case(rator, with)
det(rator, a)
compound(rator, gas)
compound(rator, flow)
obl(measure, rator)
punct(regulate, .)
det(source, the)
compound(source, power)
nsubj(rectifier, source)
cop(rectifier, be)
det(rectifier, a)
amod(rectifier, commercial)
compound(rectifier, D.)
compound(rectifier, C.)
root(ROOT, rectifier)
punct(rectifier, .)
case(Amp, at)
nummod(Amp, 100)
obl(V, Amp)
det(ripple, the)
nummod(cycle, 360)
compound(ripple, cycle)
nsubj(V, ripple)
cop(V, be)
advmod(0.5, less)
fixed(less, than)
nummod(V, 0.5)
parataxis(rectifier, V)
punct(peak, ()
appos(V, peak)
case(peak, to)
nmod(peak, peak)
punct(peak, ))
case(load, with)
det(load, a)
amod(load, resistive)
nmod(V, load)
punct(rectifier, .)
det(current, the)
nsubj:pass(regulate, current)
aux:pass(regulate, be)
root(ROOT, regulate)
case(means, by)
obl(regulate, means)
case(resistor, of)
det(resistor, a)
amod(resistor, variable)
nmod(means, resistor)
cc(measure, and)
conj(regulate, measure)
case(shunt, with)
det(shunt, a)
compound(m, 50)
nummod(V, m)
compound(shunt, V)
obl(measure, shunt)
cc(millivoltmeter, and)
conj(shunt, millivoltmeter)
punct(regulate, .)
det(voltage, the)
compound(voltage, arc)
nsubj:pass(measure, voltage)
aux:pass(measure, be)
root(ROOT, measure)
case(voltmeter, with)
det(voltmeter, a)
obl(measure, voltmeter)
nmod:poss(terminal, whose)
nsubj:pass(connect, terminal)
aux:pass(connect, be)
acl:relcl(voltmeter, connect)
case(holder, to)
det(holder, the)
compound(holder, anode)
cc(cathode, and)
conj(anode, cathode)
obl(connect, holder)
punct(measure, .)
case(characteristic, because)
fixed(because, of)
det(characteristic, the)
amod(characteristic, fall)
obl(require, characteristic)
case(rectifier, of)
det(rectifier, the)
nmod(characteristic, rectifier)
punct(require, ,)
det(resistor, no)
compound(resistor, ballast)
nsubj:pass(require, resistor)
aux:pass(require, be)
root(ROOT, require)
case(stability, for)
obl(require, stability)
case(operation, of)
nmod(stability, operation)
punct(require, . )
det(starter, a)
amod(frequency, high)
compound(starter, frequency)
nsubj:pass(use, starter)
aux:pass(use, be)
root(ROOT, use)
mark(start, to)
xcomp(use, start)
det(arc, the)
obj(start, arc)
punct(procedure, .)
amod(procedure, Experimental)
obj(start, procedure)
cc(analysis, and)
compound(analysis, error)
conj(procedure, analysis)
nummod(analysis, 1)
punct(anode, .)
compound(cool, transpiration)
amod(anode, cool)
conj(procedure, anode)
case(holder, with)
compound(anode, carbon)
compound(holder, anode)
nmod(anode, holder)
det(holder, the)
compound(holder, anode)
appos(holder, holder)
acl(holder, show)
case(figure, in)
obl(show, figure)
nummod(figure, 2)
aux:pass(design, be)
advcl(show, design)
case(goal, with)
nummod(goal, two)
obl(design, goal)
case(mind, in)
nmod(goal, mind)
punct(use, .)
det(loss, the)
compound(loss, heat)
nsubj(be, loss)
case(holder, of)
det(holder, the)
nmod(loss, holder)
root(ROOT, be)
mark(reduce, to)
aux:pass(reduce, be)
xcomp(be, reduce)
advmod(far, as)
advmod(reduce, far)
mark(possible, as)
advcl(far, possible)
cc(such, and)
nsubj(such, they)
aux(such, should)
cop(such, be)
conj(be, such)
mark(make, that)
det(balance, a)
amod(balance, accurate)
compound(balance, heat)
nsubj:pass(make, balance)
aux(make, can)
aux:pass(make, be)
ccomp(such, make)
punct(be, .)
mark(reduce, in)
fixed(in, order)
mark(reduce, to)
advcl(make, reduce)
det(number, the)
obj(reduce, number)
case(parameter, of)
amod(parameter, variable)
nmod(number, parameter)
punct(make, ,)
det(experiment, all)
nsubj:pass(make, experiment)
aux:pass(make, be)
root(ROOT, make)
case(length, with)
det(length, a)
amod(length, constant)
compound(length, arc)
obl(make, length)
case(0.5, of)
nmod(length, 0.5)
punct(length, '')
punct(length, '')
cc(current, and)
det(current, a)
conj(length, current)
case(Aj, of)
nummod(Aj, 100)
nmod(current, Aj)
punct(current, .)
det(flow, the)
compound(flow, argon)
nsubj:pass(varied, flow)
case(anode, through)
det(anode, the)
amod(anode, porous)
nmod(flow, anode)
aux:pass(varied, be)
conj(make, varied)
advmod(varied, systematically)
case(Af, between)
obl(varied, Af)
cc(Af, and)
conj(Af, Af)
punct(determine, .)
det(limit, the)
amod(limit, lower)
nsubj:pass(determine, limit)
aux:pass(determine, be)
conj(varied, determine)
case(fact, by)
det(fact, the)
obl(determine, fact)
mark(start, that)
case(rate, for)
amod(rate, smaller)
compound(rate, flow)
obl(start, rate)
det(arc, the)
nsubj(start, arc)
acl(fact, start)
mark(strike, to)
xcomp(start, strike)
case(holder, to)
det(holder, the)
compound(holder, anode)
obl(strike, holder)
case(plug, instead)
fixed(instead, of)
fixed(instead, to)
det(plug, the)
amod(plug, porous)
compound(plug, graphite)
obl(strike, plug)
cc(become, and)
mark(become, that)
nsubj(become, it)
conj(plug, become)
advmod(unstable, highly)
xcomp(become, unstable)
punct(make, .)
det(limit, the)
amod(limit, upper)
nsubj:pass(determine, limit)
aux:pass(determine, be)
root(ROOT, determine)
case(difficulty, by)
det(difficulty, the)
obl(determine, difficulty)
mark(measure, of)
acl(difficulty, measure)
det(temperature, the)
amod(temperature, characteristic)
compound(temperature, anode)
compound(temperature, surface)
obj(measure, temperature)
punct(see, ()
parataxis(determine, see)
advmod(see, below)
punct(see, ))
mark(strike, since)
advmod(region, only)
det(region, a)
amod(region, small)
nsubj:pass(strike, region)
case(anode, of)
det(anode, the)
nmod(region, anode)
aux:pass(strike, be)
advcl(determine, strike)
case(arc, by)
det(arc, the)
obl(strike, arc)
punct(determine, .)
det(region, this)
nsubj(change, region)
nsubj(have, which)
acl:relcl(region, have)
det(temperature, a)
amod(temperature, higher)
obj(have, temperature)
case(rest, than)
det(rest, the)
nmod(temperature, rest)
case(surface, of)
det(surface, the)
compound(surface, anode)
nmod(rest, surface)
root(ROOT, change)
obj(change, size)
cc(location, and)
conj(size, location)
advmod(change, continuously)
punct(change, .)
case(rate, for)
det(rate, each)
amod(rate, mass)
compound(rate, flow)
obl(measure, rate)
det(voltage, the)
compound(voltage, arc)
nsubj:pass(measure, voltage)
aux:pass(measure, be)
root(ROOT, measure)
punct(measure, .)
mark(measure, to)
advcl(scan, measure)
det(temperature, the)
compound(temperature, surface)
obj(measure, temperature)
case(plug, of)
det(plug, the)
compound(plug, anode)
nmod(temperature, plug)
punct(scan, ,)
det(surface, the)
nsubj:pass(scan, surface)
aux:pass(scan, be)
root(ROOT, scan)
case(pyrometer, with)
det(pyrometer, a)
obl(scan, pyrometer)
punct(scan, .)
mark(turn, as)
nsubj(turn, it)
advcl(occur, turn)
compound:prt(turn, out)
punct(occur, ,)
det(region, a)
advmod(hot, very)
amod(region, hot)
nsubj(occur, region)
root(ROOT, occur)
case(plug, on)
det(plug, the)
obl(occur, plug)
punct(occur, .)
nmod:poss(temperature, its)
nsubj:pass(denote, temperature)
aux:pass(denote, be)
root(ROOT, denote)
case(Af, by)
obl(denote, Af)
punct(denote, .)
det(size, the)
nsubj:pass(estimate, size)
case(region, of)
det(region, this)
amod(region, hot)
nmod(size, region)
aux:pass(estimate, be)
ccomp(denote, estimate)
case(eye, by)
obl(estimate, eye)
punct(denote, .)
det(rest, the)
nsubj(have, rest)
case(surface, of)
det(surface, the)
nmod(rest, surface)
root(ROOT, have)
det(temperature, a)
obj(have, temperature)
nsubj(decrease, which)
acl:relcl(temperature, decrease)
case(diameter, towards)
det(diameter, the)
amod(diameter, outer)
obl(decrease, diameter)
case(plug, of)
det(plug, the)
nmod(diameter, plug)
punct(have, .)
det(temperature, the)
compound(temperature, mean)
nsubj:pass(approximate, temperature)
case(region, of)
det(region, this)
nmod(temperature, region)
aux:pass(approximate, be)
root(ROOT, approximate)
case(temperature, by)
det(temperature, the)
obl(approximate, temperature)
acl(temperature, measure)
advmod(measure, halfway)
case(edge, between)
det(edge, the)
obl(measure, edge)
case(spot, of)
det(spot, the)
amod(spot, hot)
nmod(edge, spot)
cc(rim, and)
det(rim, the)
conj(edge, rim)
case(plug, of)
det(plug, the)
nmod(rim, plug)
punct(approximate, .)
nsubj:pass(denote, it)
aux:pass(denote, be)
root(ROOT, denote)
case(Af, by)
obl(denote, Af)
punct(denote, .)
det(temperature, the)
compound(temperature, mean)
nsubj:pass(compute, temperature)
case(surface, of)
det(surface, the)
nmod(temperature, surface)
aux:pass(compute, be)
advmod(compute, then)
ccomp(denote, compute)
case(relation, accord)
fixed(accord, to)
det(relation, the)
amod(relation, follow)
obl(compute, relation)
punct(denote, :)
nsubj:pass(calculate, Af)
advmod(fraction, where)
nsubj(fraction, x)
cop(fraction, be)
det(fraction, the)
acl:relcl(Af, fraction)
case(area, of)
det(area, the)
compound(area, plug)
nmod(fraction, area)
acl(area, cover)
case(spot, by)
det(spot, the)
amod(spot, hot)
obl(cover, spot)
punct(assume, .)
advcl(fraction, assume)
amod(equilibrium, thermal)
obj(assume, equilibrium)
case(surface, between)
det(surface, the)
compound(surface, anode)
nmod(equilibrium, surface)
cc(argon, and)
det(argon, the)
compound(argon, transpir)
conj(surface, argon)
punct(calculate, ,)
det(rise, the)
compound(rise, gas)
compound(rise, enthalpy)
nsubj:pass(calculate, rise)
case(anode, through)
det(anode, the)
nmod(rise, anode)
aux:pass(calculate, be)
root(ROOT, calculate)
case(relation, accord)
fixed(accord, to)
det(relation, the)
obl(calculate, relation)
nsubj(result, Af)
mark(take, whereby)
det(heat, the)
amod(heat, specific)
nsubj:pass(take, heat)
case(argon, of)
nmod(heat, argon)
aux:pass(take, be)
advcl(result, take)
case(Af, as)
obl(take, Af)
punct(result, .)
det(calculation, this)
nsubj(result, calculation)
root(ROOT, result)
case(rise, in)
det(rise, a)
compound(rise, enthalpy)
obl(result, rise)
nsubj(high, which)
cop(high, be)
advmod(high, somewhat)
acl:relcl(rise, high)
mark(assume, because)
nsubj(assume, it)
advcl(high, assume)
det(flow, a)
amod(flow, mass)
obj(assume, flow)
advmod(distribute, equally)
acl(flow, distribute)
case(section, over)
det(section, the)
compound(section, plug)
compound(section, cross)
obl(distribute, section)
mark(expect, whereas)
case(reality, in)
obl(expect, reality)
det(velocity, the)
compound(velocity, mass)
nsubj:pass(expect, velocity)
aux:pass(expect, be)
advcl(assume, expect)
mark(smaller, to)
cop(smaller, be)
xcomp(expect, smaller)
case(region, in)
det(region, the)
obl(smaller, region)
case(temperature, of)
amod(temperature, higher)
nmod(region, temperature)
punct(result, .)
det(temperature, the)
amod(temperature, upstream)
compound(temperature, gas)
nsubj:pass(list, temperature)
acl(temperature, measure)
case(thermocouple, with)
det(thermocouple, the)
obl(measure, thermocouple)
acl(thermocouple, show)
case(figure, in)
obl(show, figure)
nummod(figure, 2)
cop(Af, be)
nummod(list, Af)
punct(Af, .)
det(value, the)
compound(value, Af)
nsubj:pass(list, value)
aux:pass(list, be)
root(ROOT, list)
case(table, in)
obl(list, table)
nummod(table, 1)
advmod(list, together)
case(temperature, with)
det(temperature, the)
amod(temperature, measure)
compound(temperature, surface)
obl(list, temperature)
cc(voltage, and)
compound(voltage, arc)
conj(temperature, voltage)
punct(list, .)
advmod(take, simultaneously)
case(temperature, with)
det(temperature, the)
compound(surface, anode)
compound(temperature, surface)
obl(take, temperature)
cc(measurement, and)
compound(measurement, voltage)
conj(temperature, measurement)
compound(reading, pyrometer)
nsubj:pass(take, reading)
aux:pass(take, be)
root(ROOT, take)
case(surface, along)
det(surface, the)
amod(surface, cylindrical)
obl(take, surface)
case(holder, of)
det(holder, the)
compound(anode, carbon)
compound(holder, anode)
nmod(surface, holder)
mark(indicate, as)
advcl(take, indicate)
case(figure, on)
obl(indicate, figure)
nummod(figure, 2)
punct(take, .)
nsubj:pass(plot, some)
case(temperature, of)
det(temperature, these)
nmod(some, temperature)
aux:pass(plot, be)
root(ROOT, plot)
case(figure, in)
obl(plot, figure)
nummod(figure, 4)
punct(plot, .)
nsubj(show, they)
parataxis(plot, show)
det(dependence, no)
amod(dependence, mark)
obj(show, dependence)
case(rate, on)
det(rate, the)
compound(rate, flow)
nmod(dependence, rate)
case(accuracy, within)
det(accuracy, the)
obl(show, accuracy)
case(measurement, of)
det(measurement, these)
nmod(accuracy, measurement)
punct(plot, .)
advmod(take, thus)
punct(take, ,)
det(line, the)
amod(line, dot)
nsubj:pass(take, line)
acl(line, show)
case(figure, in)
obl(show, figure)
nummod(figure, 4)
aux:pass(take, be)
root(ROOT, take)
advmod(typical, as)
xcomp(take, typical)
case(distribution, for)
det(distribution, the)
compound(distribution, temperature)
obl(typical, distribution)
case(rate, for)
det(rate, all)
compound(rate, blowing)
nmod(distribution, rate)
punct(take, .)
det(thermocouple, the)
nsubj(indicate, thermocouple)
case(disk, in)
det(disk, the)
compound(disk, aluminum)
nmod(thermocouple, disk)
acl(disk, show)
case(figure, in)
obl(show, figure)
nummod(figure, 2)
root(ROOT, indicate)
det(temperature, a)
compound(temperature, equilibrium)
obj(indicate, temperature)
case(surface, of)
det(surface, the)
nmod(temperature, surface)
case(Af, of)
nmod(surface, Af)
punct(temperature, .)
det(temperature, this)
nsubj:pass(take, temperature)
aux:pass(take, be)
ccomp(indicate, take)
case(temperature, as)
amod(temperature, environmental)
obl(take, temperature)
case(which, to)
obl(expose, which)
det(holder, the)
compound(holder, anode)
nsubj:pass(expose, holder)
aux:pass(expose, be)
acl:relcl(temperature, expose)
advmod(far, as)
advmod(expose, far)
mark(concerned, as)
nsubj(concerned, radiation)
cop(concerned, be)
advcl(as, concerned)
punct(indicate, .)
expl(small, it)
cop(small, be)
advmod(small, sufficiently)
root(ROOT, small)
case(temperature, compare)
case(temperature, with)
det(temperature, the)
compound(temperature, surface)
obl(small, temperature)
case(holder, of)
det(holder, the)
compound(holder, anode)
nmod(temperature, holder)
punct(temperature, ,)
mark(make, to)
csubj(small, make)
det(flux, the)
compound(flux, energy)
obj(make, flux)
acl(flux, radiat)
case(environment, from)
det(environment, the)
obl(radiat, environment)
case(holder, toward)
det(holder, the)
compound(holder, anode)
nmod(environment, holder)
amod(holder, negligible)
case(accuracy, within)
det(accuracy, the)
obl(negligible, accuracy)
case(measurement, of)
det(measurement, the)
amod(measurement, present)
nmod(accuracy, measurement)
punct(small, .)
det(reflection, the)
nsubj(small, reflection)
case(radiation, of)
nmod(reflection, radiation)
acl(reflection, originating)
case(holder, from)
det(holder, the)
compound(holder, anode)
obl(originating, holder)
cc(reflect, and)
conj(originating, reflect)
advmod(reflect, back)
case(it, to)
obl(back, it)
case(surface, by)
det(surface, the)
amod(surface, surround)
compound(surface, metal)
obl(reflect, surface)
aux(small, should)
advmod(small, also)
cop(small, be)
root(ROOT, small)
case(characteristic, because)
fixed(because, of)
det(characteristic, the)
amod(characteristic, peculiar)
obl(small, characteristic)
case(surface, of)
det(surface, the)
compound(surface, metal)
nmod(characteristic, surface)
cc(geometry, and)
case(geometry, of)
det(geometry, the)
amod(geometry, specific)
conj(surface, geometry)
punct(small, .)
det(loss, the)
amod(loss, total)
compound(loss, heat)
nsubj(include, loss)
case(holder, through)
det(holder, the)
compound(holder, anode)
nmod(loss, holder)
root(ROOT, include)
advmod(include, also)
det(heat, the)
obj(include, heat)
acl(heat, conduct)
case(base, through)
det(base, the)
obl(conduct, base)
case(piece, of)
det(piece, the)
amod(piece, cylindrical)
nmod(base, piece)
case(part, into)
det(part, the)
amod(part, adjacent)
compound(part, metal)
nmod(base, part)
punct(include, .)
nsubj:pass(calculate, it)
aux:pass(calculate, be)
root(ROOT, calculate)
case(Af, from)
det(Af, the)
compound(gradient, temperature)
compound(Af, gradient)
obl(calculate, Af)
case(inch, at)
compound(inch, Af)
nmod(Af, inch)
case(Af, as)
nummod(be, Af)
punct(calculate, .)
det(flux, the)
amod(flux, total)
compound(flux, heat)
nsubj(be, flux)
case(plug, from)
det(plug, the)
amod(plug, porous)
nmod(flux, plug)
case(holder, into)
det(holder, the)
compound(holder, plug)
nmod(plug, holder)
aux:pass(calculate, be)
advmod(Af, thereby)
nummod(be, Af)
punct(Af, .)
det(distribution, the)
compound(distribution, temperature)
nsubj(give, distribution)
case(figure, of)
nmod(distribution, figure)
nummod(figure, 4)
ccomp(be, give)
root(ROOT, Af)
case(rate, for)
det(rate, all)
compound(rate, blowing)
nmod(Af, rate)
punct(Af, ,)
acl(Af, assume)
nummod(take, Af)
punct(Af, .)
det(value, the)
obl:npmod(dependent, temperature)
amod(value, dependent)
nsubj:pass(take, value)
case(ye, of)
punct(value, **)
nsubj:pass(take, ye)
aux:pass(take, be)
ccomp(assume, take)
case(Ref., from)
obl(take, Ref.)
nummod(Ref., 7)
punct(take, .)
det(loss, the)
compound(loss, radiation)
nsubj:pass(compute, loss)
case(surface, from)
det(surface, the)
compound(surface, anode)
nmod(loss, surface)
aux:pass(compute, be)
conj(take, compute)
case(Af, accord)
fixed(accord, to)
obl(compute, Af)
advmod(mean, where)
nsubj(mean, Af)
cop(mean, be)
det(mean, the)
acl:relcl(Af, mean)
case(power, of)
det(power, the)
amod(power, fourth)
nmod(mean, power)
case(Af, of)
det(Af, the)
compound(Af, temperature)
nmod(power, Af)
cc(Af, and)
conj(Af, Af)
acl(power, calculate)
advmod(calculate, analogously)
case(equation, to)
obl(calculate, equation)
punct(1, ()
parataxis(calculate, 1)
punct(1, ))
punct(1, . )
det(viscometer, a)
compound(viscometer, band)
nsubj:pass(show, viscometer)
aux:pass(show, be)
root(ROOT, show)
case(Figure, in)
obl(show, Figure)
nummod(Figure, 2)
punct(show, .)
nsubj(consist, it)
root(ROOT, consist)
case(block, of)
nummod(block, two)
obl(consist, block)
case(surface, with)
amod(surface, flat)
obl(consist, surface)
acl(surface, hold)
advmod(hold, apart)
case(shim, by)
obl(hold, shim)
punct(consist, .)
expl(be, there)
root(ROOT, be)
det(small, a)
nsubj(be, small)
advmod(top, well)
case(top, in)
det(top, the)
nsubj(be, top)
case(which, in)
obl(test, which)
det(fluid, the)
nsubj:pass(place, fluid)
cc(paste, or)
conj(fluid, paste)
mark(test, to)
aux:pass(test, be)
acl(fluid, test)
aux:pass(place, be)
conj(be, place)
punct(be, . )
det(tape, a)
nsubj:pass(pull, tape)
case(acetate, of)
compound(acetate, cellulose)
nmod(tape, acetate)
aux:pass(pull, be)
root(ROOT, pull)
case(block, between)
det(block, the)
obl(pull, block)
cc(pull, and)
det(tape, the)
nsubj(pull, tape)
conj(pull, pull)
det(fluid, the)
obj(pull, fluid)
cc(paste, or)
conj(fluid, paste)
case(it, with)
obl(pull, it)
case(face, between)
det(face, the)
amod(face, parallel)
obl(pull, face)
case(block, of)
det(block, the)
nmod(face, block)
punct(pull, .)
case(use, in)
amod(weight, normal)
compound(weight, use)
nsubj:pass(hang, weight)
aux:pass(hang, be)
root(ROOT, hang)
case(end, on)
det(end, the)
obl(hang, end)
case(tape, of)
det(tape, the)
nmod(end, tape)
cc(allow, and)
conj(hang, allow)
mark(pull, to)
xcomp(allow, pull)
det(tape, the)
obj(pull, tape)
cc(material, and)
det(material, the)
conj(tape, material)
mark(test, to)
aux:pass(test, be)
acl(material, test)
case(block, between)
det(block, the)
obl(test, block)
punct(hang, .)
mark(reach, after)
nsubj(reach, it)
aux(reach, have)
advcl(record, reach)
amod(velocity, terminal)
obj(reach, velocity)
punct(record, ,)
det(time, the)
nsubj:pass(record, time)
case(tape, for)
det(tape, the)
nmod(time, tape)
mark(travel, to)
acl(time, travel)
det(distance, a)
amod(distance, know)
obj(travel, distance)
aux:pass(record, be)
root(ROOT, record)
punct(record, .)
case(use, by)
det(use, the)
obl(obtain, use)
case(weight, of)
amod(weight, various)
nmod(use, weight)
punct(obtain, ,)
nsubj:pass(obtain, data)
case(rate, for)
det(rate, a)
compound(rate, force)
punct(rate, -)
nmod(data, rate)
case(graph, of)
compound(graph, shear)
nmod(rate, graph)
aux(obtain, can)
aux:pass(obtain, be)
root(ROOT, obtain)
punct(obtain, .)
det(instrument, the)
nsubj(modification, instrument)
acl(instrument, use)
case(work, for)
det(work, this)
obl(use, work)
cop(modification, be)
det(modification, a)
amod(modification, slight)
root(ROOT, modification)
case(that, of)
nmod(modification, that)
advmod(describe, previously)
acl(modification, describe)
punct(modification, .)
case(test, in)
det(test, this)
obl(pull, test)
det(tape, a)
compound(tape, Af)
nsubj:pass(pull, tape)
aux:pass(pull, be)
root(ROOT, pull)
case(block, between)
det(block, the)
obl(pull, block)
case(motor, with)
det(motor, a)
nmod(block, motor)
cc(pulley, and)
conj(motor, pulley)
case(rate, at)
det(rate, a)
nmod(motor, rate)
case(Af, of)
nmod(rate, Af)
case(clearance, with)
det(clearance, a)
nmod(rate, clearance)
case(0.002, of)
nmod(clearance, 0.002)
punct(clearance, '')
punct(clearance, '')
case(side, on)
det(side, each)
obl(give, side)
case(tape, of)
det(tape, the)
nmod(side, tape)
punct(give, .)
nsubj(give, this)
parataxis(pull, give)
det(rate, a)
obj(give, rate)
case(shear, of)
nmod(rate, shear)
case(Af, of)
nmod(shear, Af)
punct(give, .)
nsubj:pass(consider, this)
punct(consider, ,)
advmod(consider, however)
punct(consider, ,)
aux(consider, can)
advmod(consider, only)
aux:pass(consider, be)
parataxis(rate, consider)
xcomp(consider, approximate)
punct(consider, ,)
mark(increase, as)
det(diameter, the)
nsubj:pass(increase, diameter)
case(pulley, of)
det(pulley, the)
nmod(diameter, pulley)
aux:pass(increase, be)
advcl(consider, increase)
case(up, by)
det(build, the)
obl(increase, build)
punct(up, -)
nmod(build, up)
case(tape, of)
nmod(up, tape)
cc(remove, and)
det(tape, the)
nsubj:pass(remove, tape)
aux:pass(remove, be)
advmod(remove, occasionally)
conj(increase, remove)
case(pulley, from)
det(pulley, the)
obl(remove, pulley)
case(run, during)
det(run, the)
obl(remove, run)
punct(pull, .)
det(face, the)
nsubj(contain, face)
case(block, of)
nummod(block, one)
nmod(face, block)
root(ROOT, contain)
det(hole, a)
obj(contain, hole)
nummod(hole, 1/16)
punct(hole, '')
punct(hole, '')
case(diameter, in)
obl(contain, diameter)
nsubj(lead, which)
acl:relcl(diameter, lead)
case(manometer, to)
det(manometer, a)
obl(lead, manometer)
case(measurement, for)
det(measurement, the)
obl(lead, measurement)
case(pressure, of)
det(pressure, the)
amod(pressure, normal)
nmod(measurement, pressure)
punct(contain, .)
mark(be, although)
expl(be, there)
advcl(apparent, be)
advmod(four, only)
nummod(fluid, four)
nsubj(be, fluid)
acl(fluid, test)
punct(apparent, ,)
expl(apparent, it)
cop(apparent, be)
root(ROOT, apparent)
mark(be, that)
expl(be, there)
csubj(apparent, be)
nummod(type, two)
amod(type, distinct)
nsubj(be, type)
punct(apparent, .)
nsubj(show, two)
case(fluid, of)
det(fluid, the)
nmod(two, fluid)
root(ROOT, show)
det(pressure, a)
amod(positive, high)
punct(positive, -)
amod(pressure, positive)
amod(pressure, normal)
obj(show, pressure)
mark(undergo, when)
advcl(show, undergo)
obj(undergo, shear)
punct(show, ,)
cc(show, and)
nsubj(show, two)
conj(show, show)
amod(pressure, small)
amod(pressure, negative)
obj(show, pressure)
nsubj(negligible, which)
cop(negligible, be)
acl:relcl(pressure, negligible)
case(comparison, in)
obl(negligible, comparison)
case(amount, with)
det(amount, the)
nmod(comparison, amount)
case(pressure, of)
det(pressure, the)
amod(pressure, positive)
nmod(amount, pressure)
acl(pressure, generate)
case(two, by)
det(two, the)
amod(two, other)
obl(generate, two)
punct(Figure, .)
parataxis(show, Figure)
nummod(show, 3)
obj(Figure, show)
det(data, the)
appos(show, data)
case(fluid, on)
det(fluid, a)
compound(fluid, silicone)
nmod(data, fluid)
punct(fluid, ,)
acl(fluid, label)
nummod(cp, 12,500)
obj(label, cp)
nsubj(give, which)
acl:relcl(cp, give)
det(pressure, a)
amod(pressure, high)
amod(pressure, positive)
amod(pressure, normal)
obj(give, pressure)
punct(show, .)
mark(run, although)
det(tape, the)
nsubj:pass(run, tape)
aux:pass(run, be)
advcl(reach, run)
case(hr., for)
advmod(1, over)
nummod(hr., 1)
obl(run, hr.)
punct(reach, ,)
det(state, a)
amod(state, steady)
nsubj:pass(reach, state)
aux:pass(reach, be)
advmod(reach, not)
root(ROOT, reach)
punct(conclude, ,)
cc(conclude, and)
nsubj:pass(conclude, it)
aux:pass(conclude, be)
conj(reach, conclude)
mark(be, that)
det(reason, the)
nsubj(be, reason)
case(this, for)
nmod(reason, this)
ccomp(conclude, be)
mark(build, that)
det(pressure, the)
amod(pressure, back)
nsubj:pass(build, pressure)
case(manometer, of)
det(manometer, the)
nmod(pressure, manometer)
aux:pass(build, be)
ccomp(be, build)
compound:prt(build, up)
case(material, from)
det(material, the)
obl(build, material)
advcl(build, feed)
obl(feed, from)
case(block, between)
det(block, the)
obl(feed, block)
cc(available, and)
nsubj(available, this)
cop(available, be)
conj(build, available)
case(rate, at)
det(rate, a)
advmod(slow, very)
amod(rate, slow)
obl(available, rate)
punct(reach, . )
det(system, a)
nsubj(have, system)
root(ROOT, have)
mark(use, to)
aux:pass(use, be)
xcomp(have, use)
nsubj(depend, which)
aux(depend, do)
advmod(depend, not)
ccomp(use, depend)
case(feeding, upon)
det(feeding, the)
obl(depend, feeding)
case(fluid, of)
det(fluid, the)
nmod(feeding, fluid)
case(manometer, into)
det(manometer, the)
obl(depend, manometer)
mark(be, if)
nsubj(be, measurement)
case(pressure, of)
det(pressure, the)
amod(pressure, normal)
nmod(measurement, pressure)
advcl(depend, be)
mark(make, to)
aux:pass(make, be)
xcomp(be, make)
case(time, in)
det(time, a)
amod(time, reasonable)
obl(make, time)
punct(have, . )
det(pressure, a)
amod(pressure, back)
nsubj:pass(introduce, pressure)
aux:pass(introduce, be)
advmod(introduce, then)
root(ROOT, introduce)
punct(rise, ,)
cc(rise, and)
det(rise, the)
conj(introduce, rise)
cc(fall, or)
conj(rise, fall)
case(material, of)
det(material, the)
nmod(rise, material)
case(manometer, in)
det(manometer, the)
nmod(rise, manometer)
acl(manometer, indicate)
nsubj(greater, which)
cop(greater, be)
acl:relcl(manometer, greater)
punct(pressure, ,)
det(pressure, the)
amod(pressure, normal)
conj(greater, pressure)
case(block, in)
det(block, the)
nmod(pressure, block)
cc(pressure, or)
det(pressure, the)
compound(pressure, back)
conj(block, pressure)
punct(introduce, .)
case(method, by)
det(method, this)
obl(determine, method)
nsubj:pass(determine, it)
aux:pass(determine, be)
root(ROOT, determine)
mark(atmosphere, that)
det(pressure, the)
amod(pressure, normal)
nsubj(atmosphere, pressure)
acl(pressure, exert)
case(sample, by)
det(sample, a)
obl(exert, sample)
case(polybutene, of)
nmod(sample, polybutene)
punct(weight, ()
amod(weight, molecular)
appos(pressure, weight)
acl(weight, report)
mark(770, to)
cop(770, be)
xcomp(report, 770)
punct(weight, ))
cop(atmosphere, be)
case(atmosphere, over)
det:predet(atmosphere, half)
det(atmosphere, a)
ccomp(determine, atmosphere)
punct(determine, .)
det(pressure, the)
amod(pressure, actual)
nsubj:pass(determine, pressure)
aux:pass(determine, be)
advmod(determine, not)
root(ROOT, determine)
mark(limit, because)
det(pressure, the)
nsubj(limit, pressure)
cop(limit, be)
case(limit, beyond)
det(limit, the)
amod(limit, upper)
advcl(determine, limit)
case(apparatus, of)
det(apparatus, the)
nmod(limit, apparatus)
case(hand, on)
nmod(apparatus, hand)
punct(determine, .)
det(fluid, the)
nummod(fluid, two)
nsubj(polybutene, fluid)
nsubj(give, which)
acl:relcl(fluid, give)
det(pressure, the)
amod(pressure, small)
amod(pressure, negative)
obj(give, pressure)
cop(polybutene, be)
root(ROOT, polybutene)
case(weight, with)
amod(weight, molecular)
nmod(polybutene, weight)
nsubj:pass(state, which)
aux:pass(state, be)
acl:relcl(weight, state)
mark(520, to)
cop(520, be)
xcomp(state, 520)
cc(300, and)
conj(520, 300)
punct(polybutene, .)
nsubj(be, these)
root(ROOT, be)
nsubj(be, fluid)
obj(expect, which)
nsubj(expect, one)
aux(expect, would)
acl:relcl(fluid, expect)
mark(viscoelastic, to)
cop(viscoelastic, be)
advmod(viscoelastic, less)
xcomp(expect, viscoelastic)
cc(newtonian, or)
amod(newtonian, more)
conj(viscoelastic, newtonian)
case(weight, because)
fixed(because, of)
nmod:poss(weight, they)
amod(weight, lower)
amod(weight, molecular)
obl(viscoelastic, weight)
punct(be, .)
det(suction, the)
amod(suction, maximum)
nsubj(3.25, suction)
cop(3.25, be)
root(ROOT, 3.25)
punct(3.25, '')
punct(3.25, '')
case(fluid, of)
compound(fluid, test)
nmod(3.25, fluid)
acl(fluid, measure)
case(top, from)
det(top, the)
obl(measure, top)
case(block, of)
det(block, the)
nmod(top, block)
punct(reach, ,)
cc(reach, and)
amod(state, steady)
nsubj:pass(reach, state)
aux:pass(reach, be)
advmod(reach, apparently)
conj(3.25, reach)
case(fluid, with)
det(fluid, these)
obl(reach, fluid)
punct(3.25, .)
nsubj:pass(presume, it)
aux:pass(presume, be)
root(ROOT, presume)
mark(associate, that)
det(head, this)
amod(head, negative)
nsubj:pass(associate, head)
aux:pass(associate, be)
ccomp(presume, associate)
case(factor, with)
det(factor, some)
amod(factor, geometric)
obl(associate, factor)
case(assembly, of)
det(assembly, the)
nmod(factor, assembly)
punct(associate, ,)
mark(obtain, since)
amod(reading, different)
nsubj:pass(obtain, reading)
aux:pass(obtain, be)
advcl(associate, obtain)
case(fluid, with)
det(fluid, the)
amod(fluid, same)
obl(obtain, fluid)
cc(assembly, and)
det(difference, the)
amod(difference, only)
amod(difference, apparent)
nsubj(assembly, difference)
cop(assembly, be)
det(assembly, the)
conj(obtain, assembly)
cc(disassembly, and)
conj(assembly, disassembly)
case(apparatus, of)
det(apparatus, the)
nmod(disassembly, apparatus)
punct(presume, .)
det(pressure, this)
amod(pressure, negative)
nsubj:pass(explain, pressure)
aux:pass(explain, be)
advmod(explain, not)
root(ROOT, explain)
case(head, by)
det(head, the)
compound(head, velocity)
obl(explain, head)
root(ROOT, Af)
mark(sufficient, since)
nsubj(sufficient, this)
cop(sufficient, be)
advmod(sufficient, not)
advcl(Af, sufficient)
mark(explain, to)
xcomp(sufficient, explain)
det(reading, the)
obj(explain, reading)
case(magnitude, by)
amod(magnitude, several)
obl(explain, magnitude)
punct(Af, .)
det(experiment, these)
nsubj:pass(consider, experiment)
aux(consider, can)
aux:pass(consider, be)
root(ROOT, consider)
xcomp(consider, exploratory)
advmod(consider, only)
punct(consider, .)
advmod(demonstrate, however)
punct(demonstrate, ,)
nsubj(demonstrate, they)
aux(demonstrate, do)
root(ROOT, demonstrate)
det(presence, the)
obj(demonstrate, presence)
case(pressure, of)
amod(pressure, large)
amod(pressure, normal)
nmod(presence, pressure)
case(presence, in)
det(presence, the)
nmod(pressure, presence)
case(field, of)
amod(field, flat)
compound(field, shear)
nmod(presence, field)
nsubj:pass(forecast, which)
aux:pass(forecast, be)
acl:relcl(field, forecast)
case(theory, by)
det(theory, the)
obl(forecast, theory)
case(part, in)
det(part, the)
amod(part, first)
obl(forecast, part)
case(paper, of)
det(paper, the)
nmod(part, paper)
punct(demonstrate, .)
nsubj(give, they)
advmod(give, also)
root(ROOT, give)
obj(give, information)
nsubj(aid, which)
aux(aid, will)
acl:relcl(information, aid)
case(design, in)
det(design, the)
obl(aid, design)
case(instrument, of)
det(instrument, a)
advmod(satisfactory, more)
amod(instrument, satisfactory)
nmod(design, instrument)
case(measurement, for)
det(measurement, the)
nmod(instrument, measurement)
case(pressure, of)
det(pressure, the)
amod(pressure, normal)
nmod(measurement, pressure)
punct(give, .)
det:predet(instrument, such)
det(instrument, a)
nsubj(useful, instrument)
aux(useful, would)
cop(useful, be)
root(ROOT, useful)
case(characterization, for)
det(characterization, the)
obl(useful, characterization)
case(material, of)
amod(material, many)
amod(material, commercial)
nmod(characterization, material)
cc(study, as)
fixed(as, well)
fixed(as, as)
amod(study, theoretical)
conj(characterization, study)
punct(useful, .)
det(elasticity, the)
nsubj(parameter, elasticity)
cop(parameter, be)
det(parameter, a)
root(ROOT, parameter)
case(fluid, of)
nmod(parameter, fluid)
nsubj(subject, which)
cop(subject, be)
advmod(subject, not)
acl:relcl(fluid, subject)
case(measurement, to)
amod(measurement, simple)
obl(subject, measurement)
case(present, at)
obl(subject, present)
punct(parameter, ,)
cc(parameter, and)
nsubj(parameter, it)
cop(parameter, be)
det(parameter, a)
conj(parameter, parameter)
nsubj(varying, which)
aux(varying, be)
advmod(varying, probably)
acl:relcl(parameter, varying)
case(manner, in)
det(manner, a)
amod(manner, unknown)
obl(varying, manner)
case(material, with)
amod(material, many)
amod(material, commercial)
nmod(manner, material)
punct(parameter, .)
det:predet(instrument, such)
det(instrument, a)
nsubj:pass(expect, instrument)
aux:pass(expect, be)
root(ROOT, expect)
mark(useful, to)
cop(useful, be)
advmod(useful, especially)
xcomp(expect, useful)
mark(use, if)
nsubj:pass(use, it)
aux(use, could)
aux:pass(use, be)
advcl(useful, use)
mark(measure, to)
xcomp(use, measure)
det(elasticity, the)
obj(measure, elasticity)
case(paste, of)
amod(paste, heavy)
nmod(elasticity, paste)
case(ink, such)
fixed(such, as)
compound(ink, printing)
nmod(elasticity, ink)
punct(paint, ,)
conj(ink, paint)
punct(adhesive, ,)
conj(ink, adhesive)
punct(plastic, ,)
compound(plastic, molten)
conj(ink, plastic)
punct(dough, ,)
cc(dough, and)
compound(dough, bread)
conj(ink, dough)
punct(related, ,)
case(elasticity, for)
det(elasticity, the)
nsubj(related, elasticity)
cop(related, be)
acl:relcl(dough, related)
case(property, to)
det(property, those)
amod(property, various)
obl(related, property)
acl(property, term)
punct(length, ``)
obj(term, length)
punct(length, '')
punct(shortness, ,)
punct(shortness, ``)
appos(length, shortness)
punct(shortness, '')
punct(spinnability, ,)
punct(spinnability, ``)
appos(shortness, spinnability)
punct(spinnability, '')
punct(etc., ,)
advmod(spinnability, etc.)
punct(spinnability, ,)
nsubj:pass(judge, which)
aux:pass(judge, be)
advmod(judge, usually)
acl:relcl(property, judge)
case(method, by)
amod(method, subjective)
obl(judge, method)
case(present, at)
nmod(method, present)
punct(expect, .)
det(change, the)
amod(change, actual)
root(ROOT, change)
nsubj:pass(calculate, Af)
acl(Af, cause)
case(field, by)
det(field, a)
compound(field, shear)
obl(cause, field)
aux:pass(calculate, be)
root(ROOT, calculate)
mark(multiply, by)
advcl(calculate, multiply)
det(pressure, the)
obj(multiply, pressure)
amod(time, differential)
obl:tmod(multiply, time)
det(volume, the)
obl:tmod(multiply, volume)
punct(multiply, ,)
advmod(head, just)
mark(head, as)
nsubj(head, it)
cop(head, be)
case(head, for)
det(head, any)
amod(head, gravitational)
cc(osmotic, or)
conj(gravitational, osmotic)
compound(head, pressure)
obl(multiply, head)
punct(calculate, .)
mark(volume, if)
det(volume, the)
nsubj(volume, volume)
cop(volume, be)
det(volume, the)
amod(volume, molal)
advcl(obtain, volume)
punct(obtain, ,)
advmod(obtain, then)
nsubj:pass(obtain, Af)
aux:pass(obtain, be)
root(ROOT, obtain)
case(basis, on)
det(basis, a)
compound(basis, molal)
obl(obtain, basis)
nsubj(terminology, which)
cop(terminology, be)
det(terminology, the)
amod(terminology, customary)
acl:relcl(basis, terminology)
case(chemist, of)
det(chemist, the)
nmod(terminology, chemist)
punct(obtain, .)
mark(obvious, although)
det(calculation, the)
compound(calculation, Af)
nsubj(obvious, calculation)
cop(obvious, be)
advcl(interesting, obvious)
case(analogy, by)
obl(obvious, analogy)
case(that, with)
nmod(analogy, that)
case(field, for)
amod(field, gravitational)
obl(obvious, field)
cc(pressure, and)
amod(pressure, osmotic)
conj(field, pressure)
punct(interesting, ,)
expl(interesting, it)
cop(interesting, be)
root(ROOT, interesting)
mark(confirm, to)
csubj(interesting, confirm)
obj(confirm, it)
case(method, by)
det(method, a)
obl(confirm, method)
nsubj:pass(generalize, which)
aux(generalize, can)
aux:pass(generalize, be)
acl:relcl(method, generalize)
mark(include, to)
xcomp(generalize, include)
amod(effect, related)
obj(include, effect)
punct(interesting, .)
root(ROOT, consider)
det(field, a)
compound(field, shear)
obj(consider, field)
case(height, with)
det(height, a)
nmod(field, height)
case(h, of)
nmod(height, h)
cc(area, and)
det(area, a)
amod(area, cross-sectional)
conj(height, area)
case(manometer, of)
det(manometer, a)
amod(manometer, oppose)
case(manometer, by)
det(manometer, a)
nmod(area, manometer)
case(height, with)
det(height, a)
nmod(manometer, height)
case(h, of)
nmod(height, h)
punct(refer, ()
acl(height, refer)
case(base, to)
det(base, the)
amod(base, same)
obl(refer, base)
case(h, as)
nmod(base, h)
punct(refer, ))
cc(area, and)
det(area, a)
amod(area, cross-sectional)
conj(base, area)
case(a, of)
nummod(area, a)
punct(area, .)
mark(change, if)
nsubj(change, Af)
cop(change, be)
det(change, the)
acl(area, change)
case(volume, per)
compound(volume, unit)
nmod(change, volume)
case(Gibbs, in)
nmod(volume, Gibbs)
nmod(volume, function)
acl(change, cause)
case(field, by)
det(field, the)
compound(field, shear)
obl(cause, field)
case(p, at)
amod(p, constant)
nmod(field, p)
cc(T, and)
conj(p, T)
punct(density, ,)
cc(density, and)
punct(density, **)
nsubj(density, yr)
cop(density, be)
det(density, the)
conj(consider, density)
case(fluid, of)
det(fluid, the)
nmod(density, fluid)
punct(density, ,)
advmod(Af, then)
det(energy, the)
amod(energy, total)
amod(energy, potential)
nsubj(Af, energy)
case(system, of)
det(system, the)
nmod(energy, system)
case(height, above)
det(height, the)
compound(height, reference)
nmod(system, height)
cop(Af, be)
conj(density, Af)
punct(consider, .)
nsubj(work, Af)
cop(work, be)
det(work, the)
root(ROOT, work)
amod(work, necessary)
mark(fill, to)
xcomp(necessary, fill)
det(column, the)
compound(column, manometer)
obj(fill, column)
case(height, from)
det(height, the)
compound(height, reference)
obl(fill, height)
case(h, to)
nummod(Af, h)
punct(h, .)
det(volume, the)
amod(volume, total)
nsubj(Af, volume)
case(system, of)
det(system, the)
nmod(volume, system)
case(height, above)
det(height, the)
compound(height, reference)
nmod(system, height)
cop(Af, be)
parataxis(work, Af)
punct(eliminate, ,)
cc(eliminate, and)
nsubj:pass(eliminate, h)
aux(eliminate, can)
aux:pass(eliminate, be)
conj(Af, eliminate)
mark(obtain, to)
xcomp(eliminate, obtain)
det(equation, a)
obj(obtain, equation)
case(energy, for)
det(energy, the)
amod(energy, total)
amod(energy, potential)
nmod(equation, energy)
case(system, of)
det(system, the)
nmod(energy, system)
case(term, in)
nmod(energy, term)
case(h, of)
nummod(find, h)
punct(h, .)
det(energy, the)
amod(energy, minimum)
amod(energy, total)
amod(energy, potential)
nsubj:pass(find, energy)
aux:pass(find, be)
acl:relcl(energy, find)
mark(take, by)
advcl(find, take)
det(derivative, the)
obj(take, derivative)
case(respect, with)
obl(take, respect)
case(h, to)
nmod(respect, h)
cc(equate, and)
conj(respect, equate)
case(zero, to)
obl(equate, zero)
punct(work, .)
nsubj(give, this)
root(ROOT, give)
obj(give, Af)
punct(Af, ,)
nsubj(pressure, which)
cop(pressure, be)
det(pressure, the)
acl:relcl(Af, pressure)
punct(give, .)
nsubj(interesting, this)
cop(interesting, be)
parataxis(give, interesting)
mark(combine, for)
nsubj(combine, it)
advcl(interesting, combine)
cc:preconj(concept, both)
det(concept, the)
amod(concept, thermodynamic)
obj(combine, concept)
case(function, of)
det(function, a)
amod(function, minimum)
compound(function, Gibbs)
nmod(concept, function)
case(equilibrium, for)
nmod(function, equilibrium)
cc(energy, and)
amod(energy, minimum)
amod(energy, mechanical)
amod(energy, potential)
conj(equilibrium, energy)
case(equilibrium, for)
nmod(energy, equilibrium)
punct(give, .)
det(method, this)
nsubj:pass(extend, method)
aux(extend, can)
aux:pass(extend, be)
root(ROOT, extend)
mark(include, to)
advcl(extend, include)
det(difference, the)
compound(difference, concentration)
obj(include, difference)
acl(difference, cause)
case(field, by)
compound(field, shear)
obl(cause, field)
punct(extend, .)
det(relation, the)
nsubj:pass(develop, relation)
case(pressure, between)
amod(pressure, osmotic)
nmod(relation, pressure)
cc(Gibbs, and)
det(Gibbs, the)
conj(pressure, Gibbs)
flat(Gibbs, function)
aux(develop, may)
advmod(develop, also)
aux:pass(develop, be)
root(ROOT, develop)
case(way, in)
det(way, a)
amod(way, analogous)
obl(develop, way)
punct(develop, .)
case(development, in)
det(development, the)
amod(development, above)
obl(apply, development)
nsubj(apply, we)
aux(apply, have)
root(ROOT, apply)
det(thermodynamics, the)
obj(apply, thermodynamics)
case(equilibrium, of)
nmod(thermodynamics, equilibrium)
punct(refer, ()
acl(thermodynamics, refer)
obl(refer, to)
case(some, by)
obl(refer, some)
case(thermostatics, as)
nmod(some, thermostatics)
punct(refer, ))
case(state, to)
det(state, the)
amod(state, steady)
obl(apply, state)
punct(apply, .)
nsubj:pass(justified, this)
aux(justified, can)
aux:pass(justified, be)
root(ROOT, justified)
advmod(justified, thermodynamically)
case(case, in)
det(case, this)
obl(justified, case)
punct(do, ,)
cc(do, and)
nsubj:pass(do, this)
aux(do, will)
aux:pass(do, be)
conj(justified, do)
case(paper, in)
det(paper, a)
amod(paper, separate)
obl(do, paper)
nsubj:pass(prepare, which)
aux(prepare, be)
aux:pass(prepare, be)
acl:relcl(paper, prepare)
punct(justified, .)
nsubj(have, this)
root(ROOT, have)
det(analogy, a)
amod(analogy, interesting)
obj(have, analogy)
case(assumption, with)
det(assumption, the)
nmod(analogy, assumption)
acl(assumption, state)
case(Philippoff, by)
obl(state, Philippoff)
mark(apply, that)
punct(apply, ``)
det(mechanic, the)
amod(mechanic, deformational)
nsubj:pass(apply, mechanic)
case(solid, of)
amod(solid, elastic)
nmod(mechanic, solid)
aux(apply, can)
aux:pass(apply, be)
acl:relcl(assumption, apply)
mark(flow, to)
advcl(apply, flow)
obj(flow, solution)
punct(be, '')
punct(be, .)
expl(be, there)
parataxis(have, be)
nummod(exception, one)
nsubj(be, exception)
case(statement, to)
det(statement, the)
amod(statement, above)
nmod(exception, statement)
mark(point, as)
aux(point, have)
aux:pass(point, be)
acl(exception, point)
compound:prt(point, out)
punct(be, ,)
cc(be, and)
nsubj(be, that)
conj(be, be)
mark(relax, that)
nsubj(relax, fluid)
aux(relax, can)
ccomp(be, relax)
mark(flow, by)
advcl(relax, flow)
case(field, into)
obl(flow, field)
case(rate, of)
amod(rate, lower)
nmod(field, rate)
case(shear, of)
nmod(rate, shear)
punct(flow, ,)
mark(modify, so)
det(statement, the)
nsubj:pass(modify, statement)
aux(modify, should)
aux:pass(modify, be)
advcl(relax, modify)
mark(state, by)
advcl(modify, state)
mark(similar, that)
det(mechanic, the)
nsubj(similar, mechanic)
cop(similar, be)
ccomp(state, similar)
punct(have, .)
mark(similar, if)
det(mechanic, the)
nsubj(similar, mechanic)
cop(similar, be)
advcl(infer, similar)
punct(infer, ,)
nsubj(infer, we)
aux(infer, can)
advmod(infer, also)
root(ROOT, infer)
mark(similar, that)
det(thermodynamics, the)
nsubj(similar, thermodynamics)
aux(similar, will)
advmod(similar, also)
cop(similar, be)
ccomp(infer, similar)
punct(infer, .)
det(concept, the)
root(ROOT, concept)
case(energy, of)
det(energy, the)
compound(energy, strain)
nmod(concept, energy)
case(difference, as)
det(difference, a)
compound(difference, Gibbs)
compound(difference, function)
nmod(concept, difference)
nsubj(compatible, Af)
cc(exert, and)
conj(Af, exert)
det(force, a)
obj(exert, force)
amod(force, normal)
case(face, to)
det(face, the)
compound(face, shear)
obl(normal, face)
cop(compatible, be)
root(ROOT, compatible)
case(information, with)
det(information, the)
obl(compatible, information)
acl(information, obtain)
case(study, from)
amod(study, optical)
compound(study, birefringence)
obl(obtain, study)
case(fluid, of)
nmod(study, fluid)
acl(fluid, undergo)
obj(undergo, shear)
punct(compatible, .)
advmod(show, essentially)
det(study, these)
compound(study, birefringence)
nsubj(show, study)
root(ROOT, show)
mark(present, that)
case(rate, at)
amod(rate, low)
obl(present, rate)
case(shear, of)
nmod(rate, shear)
det(tension, a)
nsubj(present, tension)
cop(present, be)
ccomp(show, present)
case(degree, at)
nummod(degree, 45)
punct(degree, -)
obl(present, degree)
case(direction, to)
det(direction, the)
obl(present, direction)
case(shear, of)
nmod(direction, shear)
punct(rate, ,)
cc(rate, and)
case(rate, as)
det(rate, the)
obl(move, rate)
case(increase, of)
compound(increase, shear)
nmod(rate, increase)
punct(move, ,)
det(direction, the)
nsubj(move, direction)
case(tension, of)
det(tension, the)
amod(tension, maximum)
nmod(direction, tension)
parataxis(show, move)
advmod(move, asymptotically)
case(direction, toward)
det(direction, the)
obl(move, direction)
case(shear, of)
nmod(direction, shear)
punct(move, .)
case(Philippoff, accord)
fixed(accord, to)
nmod(direction, Philippoff)
punct(Philippoff, ,)
det(shear, the)
amod(shear, recoverable)
nsubj:pass(give, shear)
case(shear, 's)
aux:pass(give, be)
acl:relcl(Philippoff, give)
case(Af, by)
obl(give, Af)
advmod(angle, where)
punct(angle, **)
nsubj(angle, yc)
cop(angle, be)
det(angle, the)
parataxis(give, angle)
case(extinction, of)
nmod(angle, extinction)
punct(angle, .)
case(this, from)
obl(angle, this)
cc(force, and)
det(force, the)
conj(this, force)
case(deformation, of)
nmod(force, deformation)
expl(possible, it)
aux(possible, should)
cop(possible, be)
acl:relcl(force, possible)
mark(calculate, to)
csubj(possible, calculate)
det(energy, the)
amod(energy, elastic)
obj(calculate, energy)
case(deformation, of)
nmod(energy, deformation)
nsubj(equal, which)
aux(equal, should)
cop(equal, be)
acl:relcl(energy, equal)
case(Af, to)
det(Af, the)
obl(equal, Af)
acl(Af, calculate)
case(pressure, from)
det(pressure, the)
obl(calculate, pressure)
amod(pressure, normal)
case(face, to)
det(face, the)
compound(face, shear)
obl(normal, face)
punct(show, .)
expl(be, there)
root(ROOT, be)
det(means, another)
nsubj(be, means)
nsubj(show, which)
aux(show, should)
acl:relcl(means, show)
det(direction, the)
obj(show, direction)
cc(value, and)
amod(value, relative)
conj(direction, value)
case(stress, of)
det(stress, the)
nmod(value, stress)
case(fluid, in)
amod(fluid, viscoelastic)
nmod(stress, fluid)
nsubj:pass(mention, that)
aux:pass(mention, be)
advmod(mention, not)
acl:relcl(fluid, mention)
case(such, as)
obl(mention, such)
case(literature, in)
det(literature, the)
obl(mention, literature)
punct(shape, ,)
cc(shape, and)
nsubj(shape, that)
cop(shape, be)
det(shape, the)
conj(be, shape)
case(drop, of)
det(drop, the)
amod(drop, suspend)
nmod(shape, drop)
case(fluid, of)
amod(viscosity, low)
compound(fluid, viscosity)
nmod(drop, fluid)
case(field, in)
compound(field, shear)
nmod(drop, field)
punct(be, .)
det(droplet, these)
nsubj:pass(distort, droplet)
aux:pass(distort, be)
root(ROOT, distort)
case(force, by)
det(force, the)
amod(force, normal)
obl(distort, force)
advmod(pull, just)
mark(pull, as)
det(balloon, a)
nsubj:pass(pull, balloon)
aux(pull, would)
aux:pass(pull, be)
advcl(distort, pull)
cc(press, or)
conj(pull, press)
case(shape, out)
case(shape, of)
obl(press, shape)
case(hand, in)
nmod:poss(hand, one)
case(one, 's)
obl(pull, hand)
punct(distort, .)
det(droplet, these)
nsubj(appear, droplet)
root(ROOT, appear)
mark(ellipsoid, to)
cop(ellipsoid, be)
xcomp(appear, ellipsoid)
punct(convenient, ,)
cc(convenient, and)
expl(convenient, it)
cop(convenient, be)
advmod(convenient, mathematically)
conj(appear, convenient)
mark(assume, to)
csubj(convenient, assume)
mark(be, that)
nsubj(be, they)
ccomp(assume, be)
punct(appear, .)
mark(ellipsoid, if)
nsubj(ellipsoid, they)
cop(ellipsoid, be)
advmod(ellipsoid, not)
advcl(approximation, ellipsoid)
punct(approximation, ,)
det(conclusion, the)
nsubj(approximation, conclusion)
aux(approximation, will)
cop(approximation, be)
det(approximation, a)
amod(approximation, reasonable)
root(ROOT, approximation)
punct(approximation, .)
det(direction, the)
nsubj(be, direction)
case(tension, of)
det(tension, the)
nmod(direction, tension)
case(pressure, of)
amod(pressure, minimum)
nmod(tension, pressure)
root(ROOT, be)
punct(be, ,)
advmod(give, of)
fixed(of, course)
punct(give, ,)
case(direction, give)
case(direction, by)
det(direction, the)
obl(be, direction)
case(axis, of)
det(axis, the)
amod(axis, major)
nmod(direction, axis)
case(ellipsoid, of)
det(ellipsoid, the)
nmod(axis, ellipsoid)
punct(be, . )
nsubj(show, Mason)
cc(Taylor, and)
conj(Mason, Taylor)
det(Mason, both)
root(ROOT, show)
mark(degree, that)
det(axis, the)
amod(axis, major)
nsubj(degree, axis)
case(ellipsoid, of)
det(ellipsoid, the)
nmod(axis, ellipsoid)
cop(degree, be)
case(degree, at)
nummod(degree, 45)
punct(degree, -)
ccomp(show, degree)
case(rate, at)
amod(rate, low)
nmod(degree, rate)
case(shear, of)
nmod(rate, shear)
cc(approach, and)
mark(approach, that)
nsubj(approach, it)
conj(degree, approach)
det(direction, the)
obj(approach, direction)
case(shear, of)
nmod(direction, shear)
case(rate, with)
amod(rate, increase)
nmod(direction, rate)
case(shear, of)
nmod(rate, shear)
punct(show, . )
punct(break, ()
det(suspension, some)
nsubj(break, suspension)
root(ROOT, break)
compound:prt(break, up)
mark(near, before)
nsubj(near, they)
cop(near, be)
advcl(break, near)
case(direction, to)
det(direction, the)
obl(near, direction)
case(shear, of)
nmod(direction, shear)
punct(become, ,)
cc(become, and)
nsubj(become, some)
conj(break, become)
xcomp(become, asymptotic)
case(it, to)
obl(asymptotic, it)
case(breakup, without)
obl(asymptotic, breakup)
punct(break, .)
punct(break, ))
nsubj(type, this)
cop(type, be)
punct(type, ,)
advmod(type, of)
fixed(of, course)
punct(type, ,)
det(type, a)
amod(type, similar)
root(ROOT, type)
case(behavior, of)
nmod(type, behavior)
case(that, to)
nmod(behavior, that)
acl(type, indicate)
case(study, by)
compound(study, birefringence)
obl(indicate, study)
punct(type, .)
det(force, the)
amod(force, relative)
nsubj:pass(calculate, force)
aux(calculate, can)
aux:pass(calculate, be)
root(ROOT, calculate)
case(radii, from)
det(radii, the)
amod(radii, various)
obl(calculate, radii)
case(curvature, of)
nmod(radii, curvature)
mark(assume, if)
nsubj(assume, we)
advcl(calculate, assume)
punct(calculate, :)
punct(calculate, ()
root(ROOT, a)
punct(a, ))
det(tension, the)
compound(tension, surface)
nsubj(uniform, tension)
cop(uniform, be)
root(ROOT, uniform)
case(surface, on)
det(surface, the)
obl(uniform, surface)
case(drop, of)
det(drop, the)
nmod(surface, drop)
punct(uniform, . )
punct(b, ()
root(ROOT, b)
punct(b, ))
mark(same, that)
case(viscosity, because)
fixed(because, of)
det(viscosity, the)
amod(viscosity, low)
obl(same, viscosity)
case(fluid, of)
det(fluid, the)
nmod(viscosity, fluid)
punct(same, ,)
det(pressure, the)
amod(pressure, internal)
nsubj(same, pressure)
cop(same, be)
det(same, the)
root(ROOT, same)
case(direction, in)
det(direction, all)
obl(same, direction)
punct(same, . )
punct(C, ()
root(ROOT, C)
punct(C, ))
det(effect, the)
amod(effect, kinetic)
nsubj(negligible, effect)
cop(negligible, be)
root(ROOT, negligible)
punct(negligible, . )
punct(D, ()
root(ROOT, D)
punct(D, ))
mark(conform, since)
det(shape, the)
nsubj(conform, shape)
case(drop, of)
det(drop, the)
nmod(shape, drop)
advcl(affect, conform)
case(field, to)
det(field, the)
compound(field, force)
obl(conform, field)
punct(affect, ,)
nsubj(affect, it)
aux(affect, do)
advmod(affect, not)
advmod(affect, appreciably)
root(ROOT, affect)
det(distribution, the)
obj(affect, distribution)
case(force, of)
nmod(distribution, force)
case(fluid, in)
det(fluid, the)
obl(affect, fluid)
punct(affect, .)
nsubj(assumption, these)
cop(assumption, be)
amod(assumption, reasonable)
root(ROOT, assumption)
case(fluid, with)
amod(fluid, low)
compound(fluid, viscosity)
nmod(assumption, fluid)
acl(fluid, suspend)
case(fluid, in)
amod(viscosity, high)
compound(fluid, viscosity)
obl(suspend, fluid)
nsubj:pass(subject, which)
aux:pass(subject, be)
acl:relcl(fluid, subject)
case(rate, to)
amod(rate, low)
obl(subject, rate)
case(shear, of)
nmod(rate, shear)
punct(assumption, .)
advmod(Af, just)
mark(Af, as)
det(pressure, the)
nsubj(Af, pressure)
acl(pressure, exert)
case(tension, by)
compound(tension, surface)
obl(exert, tension)
case(drop, in)
det(drop, a)
amod(drop, spherical)
obl(exert, drop)
cop(Af, be)
root(ROOT, Af)
cc(Af, and)
det(pressure, the)
nsubj(Af, pressure)
acl(pressure, exert)
case(tension, by)
compound(tension, surface)
obl(exert, tension)
case(shape, on)
det(shape, a)
amod(shape, cylindrical)
obl(exert, shape)
cop(Af, be)
conj(Af, Af)
punct(Af, ,)
det(pressure, the)
nsubj(Af, pressure)
acl(pressure, exert)
case(surface, by)
det(surface, any)
amod(surface, curve)
obl(exert, surface)
cop(Af, be)
conj(Af, Af)
punct(Af, ,)
advmod(tension, where)
punct(tension, **yg)
cop(tension, be)
det(tension, the)
amod(tension, interfacial)
acl:relcl(Af, tension)
cc(Af, and)
conj(tension, Af)
cc(Af, and)
conj(Af, Af)
cop(radii, be)
det(radii, the)
nummod(radii, two)
conj(tension, radii)
case(curvature, of)
nmod(radii, curvature)
punct(Af, .)
det(formula, this)
nsubj:pass(give, formula)
aux:pass(give, be)
root(ROOT, give)
case(Rumscheidt, by)
obl(give, Rumscheidt)
cc(Mason, and)
conj(Rumscheidt, Mason)
punct(give, .)
mark(axis, if)
nsubj(axis, A)
cop(axis, be)
det(axis, the)
amod(axis, major)
advcl(be, axis)
case(ellipsoid, of)
det(ellipsoid, a)
nmod(axis, ellipsoid)
cc(b, and)
conj(ellipsoid, b)
cc(c, and)
conj(b, c)
cop(axe, be)
det(axe, the)
amod(axe, other)
nummod(axe, two)
conj(axis, axe)
punct(axe, ,)
det(radius, the)
appos(axe, radius)
case(curvature, of)
nmod(radius, curvature)
case(plane, in)
det(plane, the)
compound(plane, ab)
nmod(radius, plane)
case(end, at)
det(end, the)
nmod(plane, end)
case(Af, of)
det(Af, the)
compound(Af, axis)
nmod(end, Af)
punct(difference, ,)
cc(difference, and)
det(difference, the)
nsubj(Af, difference)
case(pressure, in)
nmod(difference, pressure)
case(axe, along)
det(axe, the)
compound(axe, a)
cc(axe, and)
conj(a, b)
nmod(pressure, axe)
cop(Af, be)
root(ROOT, Af)
punct(Af, .)
expl(be, there)
parataxis(Af, be)
det(data, no)
nsubj(be, data)
acl(data, publish)
case(literature, in)
det(literature, the)
obl(publish, literature)
case(shape, on)
det(shape, the)
nmod(literature, shape)
case(drop, of)
amod(drop, low)
compound(drop, viscosity)
nmod(shape, drop)
mark(confirm, to)
advcl(publish, confirm)
det(formula, the)
amod(formula, above)
obj(confirm, formula)
punct(be, .)
advmod(be, however)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, photograph)
case(drop, of)
amod(drop, suspend)
nmod(photograph, drop)
case(phthalate, of)
compound(phthalate, cyclohexanol)
nmod(drop, phthalate)
punct(viscosity, ()
appos(phthalate, viscosity)
nummod(viscosity, 155)
appos(viscosity, poise)
punct(viscosity, ))
acl(drop, suspend)
case(syrup, in)
compound(syrup, corn)
obl(suspend, syrup)
case(poise, of)
nummod(poise, 71)
nmod(syrup, poise)
case(paper, in)
det(paper, a)
nmod(poise, paper)
case(Mason, by)
nmod(paper, Mason)
cc(Bartok, and)
conj(Mason, Bartok)
punct(paper, .)
det(viscosity, this)
nsubj(be, viscosity)
case(material, of)
det(material, the)
nmod(viscosity, material)
case(drop, in)
det(drop, the)
nmod(material, drop)
cop(measurement, be)
punct(measurement, ,)
advmod(negligible, of)
fixed(of, course)
punct(negligible, ,)
advmod(negligible, not)
amod(measurement, negligible)
punct(negligible, .)
parataxis(be, measurement)
case(photograph, on)
det(photograph, the)
nmod(measurement, photograph)
case(paper, in)
det(paper, this)
nmod(photograph, paper)
acl:relcl(measurement, give)
root(ROOT, Af)
case(rate, at)
det(rate, the)
amod(rate, maximum)
nmod(Af, rate)
case(shear, of)
nmod(rate, shear)
case(Af, of)
nmod(shear, Af)
punct(Af, .)
mark(assume, if)
nsubj:pass(assume, it)
aux:pass(assume, be)
advcl(Af, assume)
mark(give, that)
det(formula, the)
obj(assume, formula)
acl(formula, give)
case(Lodge, by)
obl(give, Lodge)
case(cosec, of)
nmod(Lodge, cosec)
nsubj(apply, Af)
root(ROOT, apply)
punct(calculate, ,)
det(difference, the)
compound(difference, pressure)
nsubj:pass(calculate, difference)
case(axe, along)
det(axe, the)
amod(axe, major)
nmod(difference, axe)
aux(calculate, can)
aux:pass(calculate, be)
ccomp(apply, calculate)
case(angle, from)
det(angle, the)
obl(calculate, angle)
case(inclination, of)
nmod(angle, inclination)
case(axis, of)
det(axis, the)
amod(axis, major)
nmod(inclination, axis)
punct(calculate, ,)
cc(calculate, and)
case(tension, from)
det(tension, this)
det(tension, the)
amod(tension, interfacial)
obl(calculate, tension)
aux(calculate, can)
aux:pass(calculate, be)
conj(calculate, calculate)
punct(apply, .)
nsubj(Af, it)
cop(Af, be)
nsubj(Af, value)
cop(Af, be)
root(ROOT, Af)
case(data, from)
det(data, the)
amod(data, above)
nmod(Af, data)
punct(Af, .)
nsubj(appear, this)
root(ROOT, appear)
mark(high, to)
cop(high, be)
xcomp(appear, high)
punct(appear, ,)
mark(expect, as)
aux(expect, would)
aux:pass(expect, be)
advcl(appear, expect)
case(viscosity, from)
det(viscosity, the)
amod(viscosity, appreciable)
obl(expect, viscosity)
case(material, of)
det(material, the)
nmod(viscosity, material)
case(drop, in)
det(drop, the)
nmod(viscosity, drop)
punct(appear, .)
expl(appropriate, it)
cop(appropriate, be)
root(ROOT, appropriate)
mark(call, to)
csubj(appropriate, call)
obj(call, attention)
case(property, to)
amod(property, certain)
amod(property, thermodynamic)
obl(call, property)
case(gas, of)
det(gas, a)
amod(gas, ideal)
nmod(property, gas)
nsubj(analogous, that)
cop(analogous, be)
acl:relcl(gas, analogous)
case(rubber, to)
obl(analogous, rubber)
punct(rubber, -)
case(deformation, like)
obl(analogous, deformation)
punct(appropriate, .)
det(energy, the)
amod(energy, internal)
nsubj(depend, energy)
case(gas, of)
det(gas, a)
amod(gas, ideal)
nmod(energy, gas)
root(ROOT, depend)
case(temperature, on)
obl(depend, temperature)
advmod(depend, only)
cc(independent, and)
cop(independent, be)
conj(depend, independent)
case(pressure, of)
obl(independent, pressure)
cc(volume, or)
conj(pressure, volume)
punct(depend, .)
case(word, in)
amod(word, other)
obl(converted, word)
punct(converted, ,)
mark(compress, if)
det(gas, a)
amod(gas, ideal)
nsubj:pass(compress, gas)
aux:pass(compress, be)
advcl(converted, compress)
cc(keep, and)
conj(compress, keep)
case(temperature, at)
amod(temperature, constant)
obl(keep, temperature)
punct(converted, ,)
det(work, the)
nsubj:pass(converted, work)
acl(work, do)
mark(compress, in)
advcl(do, compress)
nsubj:pass(converted, it)
aux:pass(converted, be)
advmod(converted, completely)
root(ROOT, converted)
case(heat, into)
obl(converted, heat)
cc(transfer, and)
conj(converted, transfer)
case(sink, to)
det(sink, the)
amod(sink, surround)
compound(sink, heat)
obl(transfer, sink)
punct(converted, .)
nsubj(mean, this)
root(ROOT, mean)
mark(equal, that)
nsubj(equal, work)
ccomp(mean, equal)
obj(equal, q)
nsubj(equal, which)
case(turn, in)
obl(equal, turn)
acl:relcl(q, equal)
obj(equal, Af)
punct(mean, .)
expl(be, there)
ccomp(mean, be)
det(relationship, a)
advmod(know, well)
punct(know, -)
amod(relationship, know)
nsubj(be, relationship)
case(probability, between)
nmod(relationship, probability)
cc(entropy, and)
conj(probability, entropy)
nsubj(state, which)
acl:relcl(relationship, state)
det(Af, that)
obj(state, Af)
punct(Af, ,)
advmod(probability, where)
punct(probability, **)
nsubj(probability, zq)
cop(probability, be)
det(probability, the)
acl:relcl(Af, probability)
mark(reach, that)
nsubj:pass(reach, state)
punct(volume, ()
advmod(volume, i.e.)
punct(volume, ,)
appos(state, volume)
case(gas, for)
det(gas, a)
amod(gas, ideal)
nmod(volume, gas)
punct(volume, ))
aux(reach, could)
aux:pass(reach, be)
acl(probability, reach)
case(chance, by)
obl(reach, chance)
advmod(reach, alone)
punct(mean, .)
nsubj:pass(know, this)
aux:pass(know, be)
root(ROOT, know)
case(entropy, as)
amod(entropy, conformational)
obl(know, entropy)
punct(know, .)
det(entropy, this)
amod(entropy, conformational)
nsubj(equal, entropy)
cop(equal, be)
punct(equal, ,)
case(case, in)
det(case, this)
obl(equal, case)
punct(equal, ,)
root(ROOT, equal)
case(entropy, to)
det(entropy, the)
amod(entropy, usual)
obl(equal, entropy)
punct(equal, ,)
mark(be, for)
expl(be, there)
advcl(equal, be)
det(change, no)
amod(change, other)
nsubj(be, change)
cc(energy, or)
amod(energy, other)
conj(change, energy)
acl(change, involve)
punct(equal, .)
root(ROOT, note)
mark(exert, that)
mark(contain, though)
det(gas, the)
amod(gas, ideal)
nsubj(contain, gas)
nmod:npmod(gas, itself)
advcl(exert, contain)
det(energy, no)
amod(energy, additional)
obj(contain, energy)
punct(exert, ,)
det(gas, the)
amod(gas, compress)
nsubj(exert, gas)
aux(exert, do)
ccomp(note, exert)
det(pressure, a)
amod(pressure, increase)
obj(exert, pressure)
punct(note, .)
det(energy, the)
nsubj(come, energy)
case(work, for)
det(work, any)
amod(work, isothermal)
nmod(energy, work)
acl(work, do)
case(gas, by)
det(gas, the)
amod(gas, perfect)
obl(do, gas)
aux(come, must)
root(ROOT, come)
case(energy, as)
amod(energy, thermal)
obl(come, energy)
case(surroundings, from)
nmod:poss(surroundings, its)
obl(come, surroundings)
punct(come, . )
det(study, a)
compound(study, proton)
amod(study, magnetic)
compound(study, resonance)
root(ROOT, study)
case(polycrystalline, of)
nmod(study, polycrystalline)
root(ROOT, Af)
mark(present, as)
det(function, a)
nsubj:pass(present, function)
case(field, of)
amod(field, magnetic)
nmod(function, field)
cc(temperature, and)
conj(field, temperature)
aux:pass(present, be)
parataxis(Af, present)
punct(Af, .)
nsubj(paramagnetic, Af)
cop(paramagnetic, be)
root(ROOT, paramagnetic)
punct(dipole, ,)
cc(dipole, and)
compound(dipole, electron)
amod(dipole, paramagnetic)
conj(paramagnetic, dipole)
cc(effect, as)
fixed(as, well)
fixed(as, as)
amod(effect, nuclear)
compound(effect, dipole)
conj(dipole, effect)
conj(paramagnetic, lead)
case(broaden, to)
compound(broaden, line)
obl(lead, broaden)
punct(paramagnetic, .)
det(line, the)
nsubj(asymmetric, line)
cop(asymmetric, be)
root(ROOT, asymmetric)
cc(range, and)
case(range, over)
det(range, the)
conj(asymmetric, range)
case(gauss, of)
compound(Af, field)
compound(gauss, Af)
nmod(range, gauss)
cc(temperature, and)
conj(gauss, temperature)
nsubj(increase, Af)
det(asymmetry, the)
nsubj(increase, asymmetry)
root(ROOT, increase)
mark(increase, with)
advcl(increase, increase)
obj(increase, Af)
cc(decrease, and)
conj(increase, decrease)
obj(increase, T)
punct(increase, .)
det(shift, a)
amod(shift, isotropic)
compound(shift, resonance)
nsubj(indicate, shift)
case(Af, of)
nmod(shift, Af)
case(field, to)
amod(field, lower)
amod(field, apply)
nmod(shift, field)
root(ROOT, indicate)
det(interaction, a)
amod(interaction, weak)
amod(hyperfine, isotropic)
compound(interaction, hyperfine)
compound(interaction, contact)
xcomp(indicate, interaction)
punct(indicate, .)
det(theory, the)
amod(theory, general)
nsubj:pass(use, theory)
case(shift, of)
compound(shift, resonance)
nmod(theory, shift)
aux:pass(use, be)
root(ROOT, use)
mark(derive, to)
advcl(use, derive)
det(expression, a)
amod(expression, general)
obj(derive, expression)
case(moment, for)
det(moment, the)
amod(moment, second)
nmod(expression, moment)
nsubj(predict, Af)
case(sample, of)
det(sample, a)
amod(sample, polycrystalline)
amod(sample, paramagnetic)
nmod(Af, sample)
cc(specialize, and)
aux:pass(specialize, be)
conj(sample, specialize)
case(Af, to)
obl(specialize, Af)
punct(specialize, .)
det(theory, the)
nsubj(predict, theory)
root(ROOT, predict)
det(dependence, a)
amod(dependence, linear)
obj(predict, dependence)
case(Af, of)
nmod(dependence, Af)
case(Af, on)
nmod(Af, Af)
punct(Af, ,)
advmod(constant, where)
nsubj(constant, J)
cop(constant, be)
det(constant, the)
advmod(determine, experimentally)
amod(constant, determine)
compound(weiss, curie)
punct(weiss, -)
compound(constant, weiss)
acl:relcl(dependence, constant)
punct(predict, .)
det(moment, the)
amod(moment, experimental)
amod(moment, second)
root(ROOT, moment)
nsubj(conform, Af)
root(ROOT, conform)
case(Af, to)
det(Af, the)
compound(Af, relation)
obl(conform, Af)
case(agreement, in)
nmod(Af, agreement)
case(theory, with)
nmod(agreement, theory)
punct(conform, .)
advmod(separate, hence)
punct(separate, ,)
det(effect, the)
compound(effect, electron)
amod(effect, paramagnetic)
nsubj:pass(separate, effect)
punct(slope, ()
appos(effect, slope)
punct(slope, ))
aux(separate, can)
aux:pass(separate, be)
conj(conform, separate)
case(effect, from)
det(effect, the)
amod(effect, nuclear)
obl(separate, effect)
punct(intercept, ()
appos(effect, intercept)
punct(intercept, ))
punct(conform, .)
det(effect, the)
amod(effect, paramagnetic)
compound(effect, dipole)
nsubj(provide, effect)
root(ROOT, provide)
det(information, some)
obj(provide, information)
case(shape, on)
det(shape, the)
compound(shape, particle)
nmod(information, shape)
punct(provide, .)
det(effect, the)
amod(dipole, nuclear)
compound(effect, dipole)
nsubj(provide, effect)
root(ROOT, provide)
det(information, some)
obj(provide, information)
case(motion, on)
det(motion, the)
nmod(information, motion)
case(nuclei, of)
det(nuclei, the)
compound(nuclei, hydrogen)
nmod(motion, nuclei)
punct(remain, ,)
cc(remain, but)
det(symmetry, the)
nsubj(remain, symmetry)
case(bond, of)
det(bond, the)
compound(bond, Af)
nmod(symmetry, bond)
case(Af, in)
nmod(bond, Af)
conj(provide, remain)
case(doubt, in)
obl(remain, doubt)
punct(provide, .)
root(ROOT, introduction)
det(moment, the)
amod(moment, magnetic)
obj(introduction, moment)
case(electron, of)
det(electron, a)
amod(electron, unpaired)
nmod(moment, electron)
acl(electron, associate)
advmod(associate, nearby)
aux(have, may)
conj(introduction, have)
det(influence, a)
amod(influence, tremendous)
obj(have, influence)
case(property, on)
det(property, the)
amod(property, magnetic)
compound(property, resonance)
nmod(influence, property)
case(nuclei, of)
nmod(property, nuclei)
punct(introduction, .)
expl(important, it)
cop(important, be)
root(ROOT, important)
mark(consider, to)
csubj(important, consider)
cc(verify, and)
advmod(verify, experimentally)
conj(consider, verify)
det(influence, this)
obj(verify, influence)
mark(become, since)
amod(resonance, quantitative)
amod(resonance, nuclear)
nsubj(become, resonance)
aux(become, be)
advcl(verify, become)
advmod(use, increasingly)
xcomp(become, use)
case(investigation, in)
obl(use, investigation)
case(structure, of)
nmod(investigation, structure)
punct(important, .)
nsubj(appear, Af)
root(ROOT, appear)
mark(suite, to)
aux:pass(suite, be)
advmod(suite, well)
xcomp(appear, suite)
case(study, for)
det(study, the)
obl(suite, study)
case(matter, of)
det(matter, these)
nmod(study, matter)
punct(suite, ,)
mark(paramagnet, since)
nsubj(paramagnet, it)
cop(paramagnet, be)
det(paramagnet, a)
amod(paramagnet, normal)
advcl(suite, paramagnet)
punct(paramagnet, ,)
case(electron, with)
nummod(electron, three)
amod(electron, unpaired)
nmod(paramagnet, electron)
case(chromium, on)
det(chromium, the)
nmod(electron, chromium)
punct(simple, ,)
nmod:poss(structure, its)
compound(structure, crystal)
nsubj(simple, structure)
cop(simple, be)
advmod(simple, very)
parataxis(appear, simple)
punct(position, ,)
cc(position, and)
det(position, the)
amod(position, unknown)
conj(simple, position)
case(hydrogen, of)
det(hydrogen, the)
nmod(position, hydrogen)
case(strong, in)
det(strong, the)
nmod(position, strong)
compound(bond, Af)
nsubj(provide, bond)
root(ROOT, provide)
amod(interest, structural)
obj(provide, interest)
punct(provide, .)
nsubj(discuss, we)
advmod(discuss, first)
root(ROOT, discuss)
det(bond, the)
compound(bond, Af)
obj(discuss, bond)
case(Af, in)
nmod(bond, Af)
punct(discuss, .)
nsubj(outline, we)
advmod(outline, then)
parataxis(discuss, outline)
det(theory, the)
obj(outline, theory)
case(interaction, of)
det(interaction, the)
nmod(theory, interaction)
case(dipole, of)
amod(dipole, paramagnetic)
nmod(interaction, dipole)
case(nuclei, with)
nmod(interaction, nuclei)
cc(show, and)
conj(outline, show)
mark(agreement, that)
det(theory, the)
nsubj(agreement, theory)
cop(agreement, be)
case(agreement, in)
amod(agreement, excellent)
ccomp(show, agreement)
case(experiment, with)
nmod(agreement, experiment)
punct(discuss, .)
advmod(possible, indeed)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(separate, to)
csubj(possible, separate)
compound(paramagnetic, electron)
obj(separate, paramagnetic)
case(effect, from)
amod(effect, nuclear)
obl(separate, effect)
punct(possible, .)
det(information, the)
nsubj:pass(discuss, information)
acl(information, provide)
case(effect, by)
det(effect, the)
compound(effect, electron)
amod(effect, paramagnetic)
obl(provide, effect)
aux:pass(discuss, be)
advmod(discuss, then)
root(ROOT, discuss)
punct(interpret, ,)
cc(interpret, and)
advmod(interpret, finally)
det(effect, the)
amod(effect, nuclear)
nsubj:pass(interpret, effect)
aux:pass(interpret, be)
conj(discuss, interpret)
case(term, in)
obl(interpret, term)
case(model, of)
amod(model, various)
amod(modify, motional)
punct(modify, -)
amod(model, modify)
nmod(term, model)
case(bond, of)
det(bond, the)
compound(bond, Af)
nmod(model, bond)
case(Af, in)
nmod(bond, Af)
punct(bond, .)
compound(bond, Af)
nsubj(agree, bond)
case(study, in)
compound(study, Af)
amod(study, Theoretical)
nmod(bond, study)
case(bond, of)
det(bond, the)
compound(bond, hydrogen)
nmod(study, bond)
advmod(agree, generally)
conj(discuss, agree)
mark(linear, that)
det(bond, the)
compound(bond, Af)
nsubj(linear, bond)
aux(linear, will)
cop(linear, be)
ccomp(agree, linear)
case(absence, in)
det(absence, the)
obl(linear, absence)
case(peculiarity, of)
nmod(absence, peculiarity)
mark(packing, of)
acl(peculiarity, packing)
case(solid, in)
det(solid, the)
obl(packing, solid)
punct(linear, .)
advmod(asymmetric, moreover)
punct(asymmetric, ,)
nsubj(asymmetric, it)
aux(asymmetric, will)
cop(asymmetric, be)
parataxis(linear, asymmetric)
case(critical, until)
det(critical, a)
amod(critical, certain)
obl(asymmetric, critical)
compound(distance, Af)
nsubj:pass(reach, distance)
aux:pass(reach, be)
root(ROOT, reach)
punct(reach, ,)
case(which, below)
obl(become, which)
nsubj(become, it)
aux(become, will)
ccomp(reach, become)
xcomp(become, symmetric)
punct(reach, .)
expl(be, there)
root(ROOT, be)
amod(evidence, ample)
nsubj(be, evidence)
case(source, from)
amod(source, many)
nmod(evidence, source)
mark(symmetric, that)
det(bond, the)
compound(bond, Af)
nsubj(symmetric, bond)
case(Af, in)
nmod(bond, Af)
cop(symmetric, be)
acl(source, symmetric)
punct(be, .)
det(distance, the)
compound(distance, Af)
nsubj(Aj, distance)
case(Af, in)
nmod(distance, Af)
cop(Aj, be)
nummod(Aj, 2.26)
root(ROOT, Aj)
punct(Aj, .)
expl(be, there)
parataxis(Aj, be)
nsubj(be, evidence)
punct(evidence, ,)
advmod(convincing, though)
advmod(convincing, less)
amod(evidence, convincing)
case(Af, than)
case(Af, for)
obl(convincing, Af)
punct(be, ,)
mark(symmetric, that)
det(bond, the)
compound(bond, Af)
nsubj(symmetric, bond)
case(nickel, in)
nmod(bond, nickel)
advmod(symmetric, dimethylglyoxime)
cop(symmetric, be)
ccomp(be, symmetric)
punct(Aj, .)
advmod(lead, here)
det(distance, the)
compound(distance, Af)
nsubj(Aj, distance)
cop(Aj, be)
nummod(Aj, 2.44)
nsubj(here, Aj)
punct(Aj, .)
det(number, a)
nsubj(lead, number)
case(estimate, of)
amod(estimate, semiempirical)
nmod(number, estimate)
case(worker, by)
amod(worker, various)
nmod(estimate, worker)
root(ROOT, lead)
case(conclusion, to)
det(conclusion, the)
obl(lead, conclusion)
mark(become, that)
det(bond, the)
compound(bond, Af)
nsubj(become, bond)
acl(conclusion, become)
xcomp(become, symmetric)
mark(a, when)
det(length, the)
compound(length, Af)
compound(length, bond)
nsubj(a, length)
cop(a, be)
advmod(2.5, about)
nummod(a, 2.4)
case(2.5, to)
nmod(2.4, 2.5)
advcl(symmetric, a)
punct(be, ,)
cc(aside, but)
advmod(be, aside)
case(example, from)
det(example, the)
amod(example, possible)
obl(be, example)
case(nickel, of)
nmod(example, nickel)
advmod(be, dimethylglyoxime)
expl(be, there)
aux(be, have)
conj(a, be)
det(report, no)
amod(report, convincing)
nsubj(be, report)
case(bond, of)
amod(bond, symmetric)
compound(bond, Af)
nmod(report, bond)
punct(report, .)
nsubj(study, Douglass)
aux(study, have)
acl:relcl(report, study)
det(structure, the)
compound(structure, crystal)
obj(study, structure)
case(Af, of)
nmod(structure, Af)
case(diffraction, by)
compound(ray, x)
punct(ray, -)
compound(diffraction, ray)
obl(study, diffraction)
punct(lead, .)
nsubj(find, he)
root(ROOT, find)
det(structure, the)
nsubj(contain, structure)
ccomp(find, contain)
det(bond, a)
compound(bond, Af)
obj(contain, bond)
case(distance, with)
det(distance, the)
compound(distance, Af)
nmod(bond, distance)
case(Af, of)
nmod(distance, Af)
punct(find, .)
expl(be, there)
parataxis(find, be)
punct(be, ,)
advmod(be, then)
punct(possibility, ,)
det(possibility, the)
nsubj(be, possibility)
mark(symmetric, that)
det(bond, this)
compound(bond, Af)
nsubj(symmetric, bond)
cop(symmetric, be)
acl(possibility, symmetric)
punct(symmetric, ,)
mark(unable, although)
nsubj(unable, Douglass)
cop(unable, be)
advcl(symmetric, unable)
mark(determine, to)
xcomp(unable, determine)
nsubj(symmetry, it)
cop(symmetry, be)
ccomp(determine, symmetry)
case(data, from)
nmod:poss(data, he)
compound(ray, x)
punct(ray, -)
compound(data, ray)
nmod(symmetry, data)
punct(find, .)
nsubj(find, Douglass)
root(ROOT, find)
nsubj(show, Af)
mark(trigonal, to)
cop(trigonal, be)
advcl(show, trigonal)
punct(trigonal, ,)
compound(Af, Laue)
compound(Af, symmetry)
nsubj(show, Af)
punct(Af, ,)
case(Af, with)
nmod(Af, Af)
punct(Af, ,)
conj(Af, Af)
punct(Af, .)
compound(density, X-ray)
cc(experimental, and)
conj(X-ray, experimental)
conj(Af, density)
root(ROOT, show)
nummod(unit, one)
compound(unit, formula)
obj(show, unit)
case(cell, in)
det(cell, the)
compound(cell, unit)
nmod(unit, cell)
punct(unit, ,)
acl(unit, corresponding)
case(density, to)
det(density, a)
amod(density, paramagnetic)
compound(density, ion)
obl(corresponding, density)
case(Af, of)
nmod(density, Af)
punct(density, .)
det(data, the)
compound(ray, x)
punct(ray, -)
compound(data, ray)
nsubj(permit, data)
aux(permit, do)
advmod(permit, not)
parataxis(show, permit)
obj(permit, Douglass)
mark(determine, to)
xcomp(permit, determine)
advmod(group, uniquely)
det(group, the)
compound(group, space)
obj(determine, group)
punct(lead, ,)
cc(lead, but)
det(test, a)
amod(test, negative)
nsubj(lead, test)
case(piezoelectricity, for)
nmod(test, piezoelectricity)
conj(permit, lead)
obj(lead, he)
mark(assume, to)
xcomp(lead, assume)
det(center, a)
obj(assume, center)
case(symmetry, of)
nmod(center, symmetry)
punct(show, .)
case(assumption, under)
det(assumption, this)
obl(Af, assumption)
det(group, the)
compound(group, space)
nsubj(Af, group)
aux(Af, must)
cop(Af, be)
root(ROOT, Af)
cc(position, and)
det(follow, the)
nsubj(position, follow)
cop(position, be)
det(position, the)
conj(Af, position)
case(atom, of)
det(atom, the)
nmod(position, atom)
case(cell, in)
det(cell, the)
compound(cell, unit)
nmod(atom, cell)
punct(Af, .)
nummod(require, Af)
punct(Af, .)
det(group, this)
compound(group, space)
nsubj(require, group)
root(ROOT, require)
det(bond, the)
compound(bond, hydrogen)
obj(require, bond)
mark(symmetric, to)
cop(symmetric, be)
acl(bond, symmetric)
punct(require, .)
nsubj(find, Douglass)
parataxis(require, find)
compound(intensity, powder)
compound(calculation, intensity)
obj(find, calculation)
cc(measurement, and)
conj(calculation, measurement)
mark(agree, to)
xcomp(find, agree)
obj(agree, best)
case(Af, for)
obl(best, Af)
punct(lead, .)
det(lead, these)
compound(lead, data)
obj(find, lead)
case(structure, to)
det(structure, a)
nmod(lead, structure)
case(which, in)
obl(lie, which)
nsubj(lie, sheet)
case(atom, of)
compound(atom, cr)
nmod(sheet, atom)
acl:relcl(structure, lie)
case(sheet, between)
nummod(sheet, two)
obl(lie, sheet)
case(atom, of)
case(atom, of)
nmod(sheet, atom)
punct(require, .)
det(atom, the)
compound(atom, o)
nsubj:pass(pack, atom)
case(sheet, in)
det(sheet, each)
nmod(atom, sheet)
aux:pass(pack, be)
advmod(pack, close)
root(ROOT, pack)
cc(surround, and)
det(atom, each)
compound(atom, cr)
nsubj:pass(surround, atom)
aux:pass(surround, be)
conj(pack, surround)
case(octahedron, by)
det(octahedron, a)
amod(octahedron, distort)
obl(surround, octahedron)
case(atom, of)
case(atom, of)
nmod(octahedron, atom)
punct(stack, .)
det(layer, the)
compound(layer, Af)
nsubj:pass(stack, layer)
aux:pass(stack, be)
parataxis(surround, stack)
xcomp(stack, normal)
case(axis, to)
det(axis, the)
punct(axis, ()
compound(axis, 111)
punct(axis, ))
obl(normal, axis)
case(oxygen, with)
det(oxygen, the)
amod(oxygen, lower)
nmod(axis, oxygen)
case(layer, of)
nummod(layer, one)
nmod(oxygen, layer)
advmod(oxygen, directly)
case(oxygen, above)
det(oxygen, the)
amod(oxygen, upper)
nmod(oxygen, oxygen)
case(layer, of)
det(layer, the)
amod(layer, neighbor)
amod(layer, lower)
nmod(oxygen, layer)
punct(oxygen, ,)
case(manner, in)
det:predet(manner, such)
det(manner, a)
nmod(oxygen, manner)
nsubj(layer, that)
det(repeat, the)
nsubj(layer, repeat)
cop(layer, be)
det(layer, every)
nummod(layer, three)
acl:relcl(manner, layer)
punct(pack, .)
det(layer, the)
amod(layer, separate)
nsubj:pass(join, layer)
aux:pass(join, be)
root(ROOT, join)
advmod(join, together)
case(bond, by)
compound(bond, hydrogen)
obl(join, bond)
punct(join, . )
det(draw, a)
nsubj(be, draw)
case(structure, of)
det(structure, the)
nmod(draw, structure)
root(ROOT, be)
mark(find, to)
aux:pass(find, be)
ccomp(be, find)
case(reference, in)
obl(find, reference)
nummod(reference, 6)
punct(be, .)
det(detail, the)
amod(detail, gross)
nsubj(appear, detail)
case(structure, of)
det(structure, the)
nmod(detail, structure)
root(ROOT, appear)
xcomp(appear, reasonable)
punct(appear, .)
det(structure, the)
nsubj(appear, structure)
root(ROOT, appear)
mark(unique, to)
cop(unique, be)
xcomp(appear, unique)
case(compound, among)
compound(compound, ooh)
obl(unique, compound)
punct(same, ,)
cc(same, but)
cop(same, be)
det(same, the)
conj(appear, same)
case(that, as)
obl(same, that)
advcl(same, assume)
case(Af, by)
obl(assume, Af)
punct(appear, .)
det(angles, the)
compound(angles, bond)
nsubj(limit, angles)
cc(distance, and)
conj(angles, distance)
cop(limit, be)
advmod(limit, all)
case(limit, within)
det(limit, the)
amod(limit, expect)
conj(appear, limit)
cc(normal, and)
det(volume, the)
nsubj(normal, volume)
case(oxygen, per)
nmod(volume, oxygen)
cop(normal, be)
advmod(normal, about)
conj(limit, normal)
punct(appear, .)
advmod(move, however)
punct(move, ,)
det(absence, the)
amod(absence, possible)
nsubj(move, absence)
case(center, of)
det(center, a)
nmod(absence, center)
case(symmetry, of)
nmod(center, symmetry)
advmod(only, not)
cc:preconj(move, only)
root(ROOT, move)
det(atom, the)
compound(atom, hydrogen)
obj(move, atom)
advmod(move, off)
vocative(allow, Af)
punct(allow, ,)
cc(allow, but)
advmod(allow, also)
root(ROOT, allow)
det(atom, the)
compound(atom, oxygen)
obj(allow, atom)
mark(become, to)
xcomp(allow, become)
xcomp(become, nonequivalent)
punct(nonequivalent, ,)
case(Af, with)
obl(nonequivalent, Af)
case(Af, at)
nmod(Af, Af)
cc(Af, and)
conj(Af, Af)
case(Af, at)
nmod(Af, Af)
punct(Af, ()
compound(group, space)
compound(Af, group)
appos(Af, Af)
punct(Af, ))
punct(Af, ,)
advmod(represent, where)
nsubj(represent, Af)
acl:relcl(Af, represent)
det(oxygen, the)
obj(represent, oxygen)
case(side, on)
nummod(side, one)
obl(represent, side)
case(layer, of)
det(layer, the)
compound(layer, Af)
nmod(side, layer)
cc(Af, and)
conj(layer, Af)
obj(Af, those)
case(side, on)
det(side, the)
amod(side, other)
nmod(those, side)
punct(allow, .)
advmod(shorten, however)
punct(shorten, ,)
det(nonequivalence, any)
compound(nonequivalence, oxygen)
nsubj(shorten, nonequivalence)
aux(shorten, would)
root(ROOT, shorten)
cc:preconj(short, either)
det(short, the)
advmod(short, already)
advmod(short, extremely)
parataxis(shorten, short)
compound(distance, Af)
compound(distance, interlayer)
root(ROOT, distance)
case(a, of)
nummod(a, 2.55)
nmod(distance, a)
cc(bond, or)
det(bond, the)
amod(bond, non-hydrogen)
punct(bond, -)
conj(distance, bond)
compound(interaction, Af)
compound(interaction, interlayer)
nsubj(difficult, interaction)
nsubj(short, which)
cop(short, be)
advmod(short, already)
advmod(short, quite)
acl:relcl(interaction, short)
case(Aj, at)
nummod(Aj, 2.58)
obl(short, Aj)
punct(difficult, .)
advmod(difficult, hence)
expl(difficult, it)
cop(difficult, be)
root(ROOT, difficult)
mark(conceive, to)
csubj(difficult, conceive)
case(packing, of)
det(packing, a)
obl(conceive, packing)
case(atom, of)
det(atom, the)
nmod(packing, atom)
case(material, in)
det(material, this)
nmod(atom, material)
case(which, in)
obl(far, which)
det(atom, the)
compound(atom, oxygen)
nsubj(far, atom)
cop(far, be)
acl:relcl(packing, far)
case(equivalence, from)
amod(equivalence, geometrical)
obl(far, equivalence)
punct(difficult, .)
det(effect, the)
amod(effect, only)
nsubj(be, effect)
case(lack, of)
nmod(effect, lack)
case(center, of)
det(center, a)
nmod(lack, center)
aux(be, would)
advmod(be, then)
root(ROOT, be)
mark(release, to)
ccomp(be, release)
det(atom, the)
compound(atom, hydrogen)
obj(release, atom)
mark(occupy, to)
advcl(release, occupy)
obj(occupy, general)
punct(position, ,)
cc(position, rather)
fixed(rather, than)
amod(position, special)
punct(position, ,)
obj(occupy, position)
case(axis, along)
det(axis, the)
punct(axis, ()
nummod(axis, 111)
punct(axis, ))
nmod(position, axis)
punct(be, .)
mark(linear, if)
det(bond, the)
compound(bond, Af)
nsubj(linear, bond)
cop(linear, be)
advcl(be, linear)
advmod(be, then)
expl(be, there)
root(ROOT, be)
nummod(position, three)
amod(position, reasonable)
nsubj(be, position)
case(atom, for)
det(atom, the)
compound(atom, hydrogen)
nmod(position, atom)
punct(be, :)
punct(1, ()
nummod(center, 1)
punct(1, ))
det(atom, the)
compound(atom, hydrogen)
nsubj:pass(center, atom)
aux:pass(center, be)
parataxis(be, center)
cc(lie, and)
advmod(lie, hence)
nsubj(lie, all)
conj(center, lie)
case(midway, on)
det(midway, a)
compound(midway, sheet)
obl(lie, midway)
case(sheet, between)
det(sheet, the)
compound(sheet, oxygen)
nmod(midway, sheet)
punct(lie, ;)
punct(lie, ;)
punct(2, ()
nummod(lie, 2)
punct(2, ))
det(atom, all)
compound(atom, hydrogen)
nsubj(lie, atom)
parataxis(be, lie)
case(sheet, on)
det(sheet, a)
obl(lie, sheet)
punct(closer, ,)
cc(closer, but)
det(sheet, the)
nsubj(closer, sheet)
cop(closer, be)
conj(lie, closer)
case(sheet, to)
nummod(sheet, one)
compound(sheet, oxygen)
obl(closer, sheet)
case(other, than)
case(other, to)
det(other, the)
obl(closer, other)
punct(closer, ;)
punct(place, ;)
punct(3, ()
nummod(place, 3)
punct(3, ))
compound(atom, hydrogen)
nsubj:pass(place, atom)
aux:pass(place, be)
advmod(place, asymmetrically)
parataxis(closer, place)
punct(place, ,)
cc:preconj(randomly, either)
advmod(place, randomly)
cc(way, or)
case(way, in)
det(way, a)
amod(way, order)
conj(randomly, way)
punct(place, ,)
mark(closer, so)
fixed(so, that)
det(atom, some)
compound(atom, hydrogen)
nsubj(closer, atom)
cop(closer, be)
advcl(place, closer)
case(atom, to)
det(atom, the)
amod(atom, upper)
compound(atom, oxygen)
obl(closer, atom)
mark(closer, while)
nsubj(closer, other)
cop(closer, be)
advcl(closer, closer)
case(atom, to)
det(atom, the)
amod(atom, lower)
compound(atom, oxygen)
obl(closer, atom)
punct(be, .)
nsubj(appear, position)
punct(2, ()
nummod(appear, 2)
punct(2, ))
root(ROOT, appear)
case(we, to)
obl(appear, we)
mark(unlikely, to)
cop(unlikely, be)
xcomp(appear, unlikely)
case(view, in)
obl(unlikely, view)
case(absence, of)
det(absence, the)
nmod(view, absence)
case(effect, of)
det(effect, a)
amod(effect, piezoelectric)
nmod(absence, effect)
cc(grounds, and)
case(grounds, on)
amod(grounds, general)
amod(grounds, chemical)
amod(grounds, structural)
conj(effect, grounds)
punct(appear, . )
det(randomization, a)
nsubj(likely, randomization)
case(up, of)
punct(up, ``)
nmod(randomization, up)
case(up, 's)
punct(up, '')
cc(down, and)
punct(down, ``)
conj(up, down)
case(down, 's)
punct(down, '')
cop(likely, be)
advmod(likely, more)
root(ROOT, likely)
mark(order, than)
advcl(likely, order)
punct(up, ``)
compound:prt(order, up)
case(up, 's)
punct(up, '')
cc(downs, and)
punct(downs, ``)
conj(order, downs)
punct(downs, '')
case(position, in)
nmod(downs, position)
punct(3, ()
nummod(separate, 3)
punct(3, ))
mark(separate, since)
det(atom, the)
compound(atom, hydrogen)
nsubj:pass(separate, atom)
aux:pass(separate, be)
advmod(separate, well)
advcl(likely, separate)
cc(affect, and)
advmod(affect, so)
det(position, the)
nsubj(affect, position)
case(one, of)
nmod(position, one)
aux(affect, could)
advmod(affect, hardly)
conj(separate, affect)
det(position, the)
obj(affect, position)
case(another, of)
nmod(position, another)
punct(imply, ,)
cc(up, and)
advmod(order, also)
mark(order, since)
advcl(affect, order)
punct(up, ``)
compound:prt(order, up)
punct(up, '')
cc(down, and)
punct(down, ``)
conj(up, down)
punct(down, '')
conj(up, imply)
det(cell, a)
amod(cell, larger)
compound(cell, unit)
obj(imply, cell)
punct(cell, ,)
case(which, for)
obl(exist, which)
det(evidence, no)
nsubj(exist, evidence)
acl:relcl(cell, exist)
punct(likely, .)
advmod(appear, therefore)
punct(appear, ,)
det(feature, the)
amod(feature, only)
amod(feature, unknown)
amod(feature, structural)
nsubj(appear, feature)
aux(appear, would)
root(ROOT, appear)
mark(be, to)
xcomp(appear, be)
mark(locate, whether)
det(atom, the)
compound(atom, hydrogen)
nsubj:pass(locate, atom)
aux:pass(locate, be)
ccomp(be, locate)
advmod(locate, symmetrically)
punct(1, ()
nummod(locate, 1)
punct(1, ))
cc(prepare, or)
advmod(3, asymmetrically)
punct(3, ()
nummod(prepare, 3)
punct(3, ))
punct(3, .)
amod(procedure, Experimental)
compound(samples, procedure)
nsubj(prepare, samples)
nsubj(prepare, Douglass)
parataxis(appear, prepare)
nmod:poss(sample, he)
obj(prepare, sample)
obl(prepare, of)
nsubj(enough, Af)
case(decomposition, by)
amod(decomposition, thermal)
nmod(Af, decomposition)
case(acid, of)
amod(acid, aqueous)
amod(acid, chromic)
nmod(decomposition, acid)
case(c, at)
nummod(c, 300)
case(325, -)
nummod(degree, 325)
punct(degree, -)
compound(c, degree)
punct(c, -)
nmod(Af, c)
punct(enough, .)
nsubj(enough, Dr.)
flat(Dr., Douglass)
cop(enough, be)
advmod(enough, kind)
root(ROOT, enough)
mark(lend, to)
advcl(enough, lend)
iobj(lend, we)
advmod(5, about)
nummod(gram, 5)
obj(lend, gram)
case(material, of)
nmod:poss(material, he)
nmod(gram, material)
punct(enough, .)
det(material, this)
nsubj(prove, material)
root(ROOT, prove)
mark(unsatisfactory, to)
cop(unsatisfactory, be)
xcomp(prove, unsatisfactory)
punct(prove, ,)
mark(obtain, since)
nsubj(obtain, we)
aux(obtain, could)
advmod(obtain, not)
advcl(prove, obtain)
amod(result, reproducible)
obj(obtain, result)
case(portion, on)
amod(portion, various)
obl(obtain, portion)
case(sample, of)
det(sample, the)
nmod(portion, sample)
punct(prove, .)
advmod(learn, subsequently)
punct(learn, ,)
nsubj(learn, we)
root(ROOT, learn)
case(Douglass, from)
obl(learn, Douglass)
mark(contain, that)
nmod:poss(sample, he)
nsubj(contain, sample)
ccomp(learn, contain)
det(impurity, a)
amod(percent, few)
compound(impurity, percent)
compound(impurity, Af)
obj(contain, impurity)
punct(learn, .)
root(ROOT, since)
nsubj(ferromagnetic, Af)
cop(ferromagnetic, be)
root(ROOT, ferromagnetic)
punct(ferromagnetic, ,)
nsubj(feel, we)
parataxis(ferromagnetic, feel)
mark(suspect, that)
det(result, any)
nsubj(suspect, result)
acl(result, obtain)
case(Af, from)
det(Af, the)
advmod(contaminate, magnetically)
amod(Af, contaminate)
obl(obtain, Af)
aux(suspect, would)
cop(suspect, be)
ccomp(feel, suspect)
punct(ferromagnetic, .)
nsubj(suggest, Plane)
root(ROOT, suggest)
det(preparation, another)
obj(suggest, preparation)
case(Af, of)
nmod(preparation, Af)
obj(use, which)
nsubj(use, we)
acl:relcl(preparation, use)
advmod(use, here)
punct(ml, .)
nummod(ml, 500)
appos(preparation, ml)
case(aqueous, of)
nummod(m, 1)
compound(aqueous, m)
nmod(ml, aqueous)
nsubj:pass(heat, Af)
case(Af, with)
nummod(Af, 1)
nmod(Af, Af)
acl(Af, add)
aux:pass(heat, be)
root(ROOT, heat)
case(bomb, in)
det(bomb, a)
obl(heat, bomb)
case(C, at)
nummod(degree, 170)
punct(degree, -)
compound(C, degree)
punct(C, -)
nmod(bomb, C)
case(hour, for)
nummod(hour, 48)
obl(heat, hour)
punct(heat, . )
det(solid, a)
advmod(fine, very)
advcl(form, fine)
punct(form, ,)
amod(solid, gray)
nsubj:pass(form, solid)
punct(g, ()
advmod(15, about)
nummod(g, 15)
appos(solid, g)
punct(g, ))
aux:pass(form, be)
root(ROOT, form)
punct(form, ,)
obl:npmod(wash, water)
punct(wash, -)
conj(form, wash)
case(centrifugation, by)
obl(wash, centrifugation)
punct(dry, ,)
cc(dry, and)
conj(wash, dry)
case(c, at)
nummod(c, 110)
punct(c, -)
compound(c, degree)
punct(c, -)
obl(dry, c)
punct(c, ))
punct(c, .)
amod(analysis, Differential)
compound(analysis, thermal)
nsubj(show, analysis)
conj(form, show)
det(reaction, a)
advmod(small, very)
amod(reaction, small)
amod(reaction, endothermic)
obj(show, reaction)
case(C, at)
nummod(degree, 340)
punct(degree, -)
compound(C, degree)
punct(C, -)
nmod(reaction, C)
cc(reaction, and)
det(reaction, a)
amod(reaction, large)
amod(reaction, endothermic)
conj(reaction, reaction)
case(degree, at)
nummod(degree, 470)
punct(degree, -)
nmod(reaction, degree)
punct(degree, -)
appos(reaction, c)
punct(c, .)
det(reaction, this)
amod(reaction, latter)
nsubj(accord, reaction)
cop(accord, be)
case(accord, in)
parataxis(c, accord)
case(decomposition, with)
det(decomposition, the)
amod(decomposition, report)
nmod(accord, decomposition)
case(Af, of)
nmod(decomposition, Af)
punct(show, .)
amod(analysis, thermogravimetric)
nsubj(show, analysis)
parataxis(accord, show)
det(loss, a)
compound(loss, weight)
obj(show, loss)
case(%, of)
nummod(%, 1.8)
nmod(loss, %)
acl(%, center)
case(c, at)
nummod(degree, 337)
punct(degree, -)
compound(c, degree)
punct(c, -)
obl(center, c)
cc(loss, and)
det(loss, another)
compound(loss, weight)
conj(c, loss)
case(%, of)
nummod(%, 10.8)
nmod(loss, %)
case(c, at)
nummod(degree, 463)
punct(degree, -)
compound(c, degree)
punct(c, -)
nmod(%, c)
punct(show, .)
det(loss, the)
amod(loss, expect)
compound(loss, weight)
nsubj(analysis, loss)
case(Af, for)
nmod(loss, Af)
acl(loss, go)
case(Af, to)
obl(go, Af)
cc(Af, and)
conj(Af, Af)
cop(%, be)
nummod(%, 10.6)
compound(analysis, %)
punct(analysis, .)
amod(analysis, Mass)
amod(analysis, spectrometric)
root(ROOT, analysis)
case(gas, of)
nmod(analysis, gas)
acl(gas, evolve)
case(heating, upon)
obl(evolve, heating)
case(degree, to)
nummod(degree, 410)
punct(degree, -)
obl(evolve, degree)
punct(degree, -)
appos(degree, c)
acl(c, indicate)
compound(oxide, nitrogen)
obj(indicate, oxide)
cc(vapor, and)
compound(vapor, water)
conj(oxide, vapor)
punct(analysis, .)
det(reaction, the)
amod(reaction, small)
nsubj:pass(cause, reaction)
acl(reaction, occur)
case(degree, at)
nummod(degree, 337)
punct(degree, -)
obl(occur, degree)
punct(reaction, -)
nsubj:pass(cause, C)
aux:pass(cause, be)
advmod(cause, probably)
root(ROOT, cause)
case(decomposition, by)
obl(cause, decomposition)
case(nitrate, of)
amod(nitrate, occlude)
nmod(decomposition, nitrate)
punct(amount, ,)
cc(amount, and)
advmod(amount, perhaps)
case(amount, by)
det(amount, a)
amod(amount, small)
conj(nitrate, amount)
case(material, of)
det(material, some)
compound(material, hydrous)
nmod(amount, material)
amod(material, other)
case(Af, than)
obl(other, Af)
punct(make, .)
det(measurement, all)
amod(measurement, subsequent)
nsubj:pass(make, measurement)
aux:pass(make, be)
parataxis(cause, make)
case(material, on)
obl(make, material)
nsubj:pass(heat, which)
aux(heat, have)
aux:pass(heat, be)
acl:relcl(material, heat)
case(c, to)
nummod(degree, 375)
punct(degree, -)
compound(c, degree)
punct(c, -)
obl(heat, c)
case(hour, for)
nummod(hour, one)
nmod(c, hour)
punct(spectra, .)
compound(spectra, emission)
obl(heat, spectra)
advcl(spectra, indicate)
compound(calcium, Af)
nsubj(give, calcium)
cc(impurity, and)
det(impurity, all)
amod(impurity, other)
conj(calcium, impurity)
advmod(lower, much)
amod(calcium, lower)
punct(give, .)
compound(analysis, Chromium)
nsubj(give, analysis)
root(ROOT, give)
nummod(%, 58.8)
compound(cr, %)
obj(give, cr)
case(theory, as)
case(theory, compare)
case(theory, with)
nummod(%, 61.2)
compound(theory, %)
obl(give, theory)
punct(give, .)
root(ROOT, however)
punct(however, ,)
nsubj(adsorb, Af)
root(ROOT, adsorb)
obj(adsorb, water)
case(atmosphere, from)
det(atmosphere, the)
obl(adsorb, atmosphere)
cc(account, and)
nsubj(account, this)
aux(account, may)
conj(adsorb, account)
case(analysis, for)
det(analysis, the)
amod(analysis, low)
compound(analysis, chromium)
obl(account, analysis)
cc(loss, and)
amod(loss, high)
amod(loss, total)
compound(loss, weight)
conj(analysis, loss)
punct(adsorb, .)
det(pattern, the)
compound(ray, x)
punct(ray, -)
compound(pattern, ray)
compound(pattern, diffraction)
nsubj(indicate, pattern)
case(material, of)
det(material, the)
nmod(pattern, material)
punct(pattern, ,)
acl(pattern, take)
case(CuK, with)
obl(take, CuK)
punct(take, *)
punct(radiation, *ya)
obl(take, radiation)
punct(indicate, ,)
root(ROOT, indicate)
det(presence, the)
obj(indicate, presence)
case(line, of)
det(line, no)
amod(line, extra)
nmod(presence, line)
cc(agreement, and)
cop(agreement, be)
case(agreement, in)
amod(agreement, good)
conj(indicate, agreement)
case(pattern, with)
det(pattern, the)
nmod(agreement, pattern)
case(Douglass, of)
nmod(pattern, Douglass)
punct(analysis, .)
amod(analysis, Magnetic)
nsubj(indicate, analysis)
case(R., by)
nmod(analysis, R.)
flat(R., G.)
flat(R., Meisenheimer)
case(laboratory, of)
det(laboratory, this)
nmod(R., laboratory)
ccomp(indicate, indicate)
det(impurity, no)
amod(impurity, ferromagnetic)
obj(indicate, impurity)
punct(indicate, .)
nsubj:pass(find, Af)
aux:pass(find, be)
root(ROOT, find)
mark(paramagnetic, to)
cop(paramagnetic, be)
xcomp(find, paramagnetic)
case(electron, with)
nummod(electron, three)
amod(electron, unpaired)
obl(paramagnetic, electron)
case(atom, per)
compound(atom, chromium)
nmod(electron, atom)
cc(susceptibility, and)
det(susceptibility, a)
amod(susceptibility, molecular)
conj(electron, susceptibility)
case(Af, of)
nmod(susceptibility, Af)
punct(Af, ,)
advmod(3.10, where)
nsubj(3.10, Af)
punct(Af, .)
case(electron, for)
advmod(three, exactly)
nummod(electron, three)
amod(electron, unpaired)
nmod(susceptibility, electron)
det(coefficient, the)
nsubj(3.10, coefficient)
aux(3.10, would)
cop(3.10, be)
acl:relcl(electron, 3.10)
punct(find, .)
det(spectrum, a)
amod(spectrum, infrare)
root(ROOT, spectrum)
punct(spectrum, ,)
acl(spectrum, obtain)
case(H., by)
obl(obtain, H.)
flat(H., A.)
flat(H., benesi)
cc(R., and)
conj(H., R.)
flat(R., G.)
nsubj(show, Snyder)
case(laboratory, of)
det(laboratory, this)
nmod(Snyder, laboratory)
punct(show, ,)
root(ROOT, show)
obj(show, band)
case(position, in)
det(position, the)
obl(show, position)
acl(position, find)
case(Jones, by)
obl(find, Jones)
punct(show, .)
compound(examination, Electron)
amod(examination, microscopic)
nsubj(show, examination)
case(sample, of)
det(sample, the)
compound(sample, Af)
nmod(examination, sample)
root(ROOT, show)
obj(show, it)
mark(compose, to)
aux:pass(compose, be)
xcomp(show, compose)
case(particle, of)
advmod(isotropic, nearly)
amod(particle, isotropic)
obl(compose, particle)
advmod(0.3, about)
compound(m, 0.3)
nummod(particle, m)
case(diameter, in)
nmod(m, diameter)
punct(show, .)
det(particle, the)
nsubj(appear, particle)
root(ROOT, appear)
xcomp(appear, rough)
cc(smaller, and)
advmod(smaller, undoubtedly)
det(domain, the)
amod(crystal, single)
punct(crystal, -)
compound(domain, crystal)
nsubj(smaller, domain)
cop(smaller, be)
conj(appear, smaller)
case(this, than)
obl(smaller, this)
punct(appear, .)
det(data, the)
compound(ray, x)
punct(ray, -)
compound(data, ray)
nsubj(consistent, data)
cop(consistent, be)
root(ROOT, consistent)
case(size, with)
amod(size, particle)
obl(consistent, size)
case(a, of)
nummod(a, 1000)
nmod(size, a)
cc(greater, or)
conj(a, greater)
punct(consistent, .)
nsubj(find, we)
root(ROOT, find)
det(effect, no)
amod(effect, obvious)
obj(find, effect)
case(orientation, due)
fixed(due, to)
amod(orientation, prefer)
obl(find, orientation)
case(crystallite, of)
det(crystallite, the)
nmod(orientation, crystallite)
case(sample, in)
det(sample, this)
nmod(crystallite, sample)
cc(expect, nor)
aux(expect, would)
nsubj(expect, we)
conj(find, expect)
mark(basis, to)
case(basis, on)
det(basis, the)
xcomp(expect, basis)
case(shape, of)
det(shape, the)
nmod(basis, shape)
acl(shape, find)
case(examination, from)
compound(examination, electron)
amod(examination, microscopic)
obl(find, examination)
punct(resonance, .)
amod(resonance, nuclear)
amod(resonance, magnetic)
appos(examination, resonance)
punct(NMR, ()
appos(resonance, NMR)
punct(NMR, ))
conj(resonance, measurement)
det(absorption, the)
amod(absorption, magnetic)
compound(absorption, resonance)
nsubj:pass(detect, absorption)
aux:pass(detect, be)
acl:relcl(measurement, detect)
mark(employ, by)
advcl(detect, employ)
det(model, a)
compound(model, varian)
obj(employ, model)
compound(spectrometer, Af)
amod(line, broad)
compound(spectrometer, line)
root(ROOT, spectrometer)
cc(system, and)
det(system, the)
amod(system, associate)
nummod(inch, 12)
punct(inch, -)
compound(system, inch)
compound(system, electromagnet)
conj(spectrometer, system)
punct(spectrometer, .)
nummod(measurement, one)
nsubj:pass(obtain, measurement)
case(sec, at)
nummod(sec, 40)
compound(sec, Mc/)
nmod(measurement, sec)
aux:pass(obtain, be)
root(ROOT, obtain)
case(unit, with)
det(unit, the)
compound(model, varian)
compound(unit, model)
compound(unit, Af)
obl(obtain, unit)
punct(obtain, . )
det(type, a)
amod(T, bridge)
punct(T, -)
compound(type, T)
nsubj:pass(use, type)
case(bridge, of)
nmod(type, bridge)
aux:pass(use, be)
root(ROOT, use)
case(range, in)
det(range, the)
compound(16, 10)
punct(16, -)
nummod(sec, 16)
compound(sec, Mc/)
compound(range, sec)
obl(use, range)
punct(use, .)
det(level, the)
compound(level, rf)
compound(level, power)
nsubj:pass(maintain, level)
aux:pass(maintain, be)
root(ROOT, maintain)
xcomp(maintain, small)
advmod(maintain, enough)
case(time, at)
det(time, all)
obl(maintain, time)
mark(prevent, to)
advcl(maintain, prevent)
amod(distortion, obvious)
compound(shape, line)
compound(distortion, shape)
obj(prevent, distortion)
case(effect, by)
compound(effect, saturation)
nmod(distortion, effect)
punct(maintain, . )
det(frequency, a)
compound(frequency, modulation)
nsubj:pass(use, frequency)
case(cp, of)
nummod(cp, 40)
nmod(frequency, cp)
case(amplitude, with)
det(amplitude, a)
nmod(frequency, amplitude)
advmod(small, as)
amod(amplitude, small)
mark(possible, as)
advcl(small, possible)
punct(use, ,)
advcl(use, commensurate)
case(quality, with)
advmod(good, reasonably)
amod(quality, good)
compound(quality, signal)
punct(signal, -)
case(noise, to)
punct(noise, -)
compound(quality, noise)
obl(commensurate, quality)
punct(use, ,)
aux:pass(use, be)
root(ROOT, use)
punct(use, .)
compound(spectra, Background)
nsubj:pass(obtain, spectra)
aux:pass(obtain, be)
conj(use, obtain)
case(case, in)
det(case, all)
obl(obtain, case)
punct(obtain, .)
det(spectrometer, the)
nsubj:pass(adjust, spectrometer)
aux:pass(adjust, be)
root(ROOT, adjust)
mark(minimize, to)
advcl(adjust, minimize)
det(amount, the)
obj(minimize, amount)
case(mode, of)
compound(mode, dispersion)
nmod(amount, mode)
acl(amount, mix)
compound:prt(mix, in)
case(signal, with)
det(signal, the)
compound(signal, absorption)
obl(mix, signal)
punct(adjust, . )
det(value, a)
amod(value, single)
root(ROOT, value)
case(time, of)
det(time, the)
amod(time, thermal)
compound(time, relaxation)
nmod(value, time)
nsubj:pass(measure, Af)
case(temperature, at)
compound(temperature, room)
nmod(Af, temperature)
aux:pass(measure, be)
root(ROOT, measure)
case(method, by)
det(method, the)
amod(method, progressive)
compound(method, saturation)
obl(measure, method)
punct(measure, .)
det(value, the)
nsubj(microsecond, value)
case(Af, of)
nmod(value, Af)
acl(value, estimate)
case(gauss, at)
nummod(gauss, 470)
obl(estimate, gauss)
cop(microsecond, be)
compound(microsecond, Af)
root(ROOT, microsecond)
punct(microsecond, . )
det(measurement, a)
amod(measurement, single)
root(ROOT, measurement)
case(time, of)
det(time, the)
compound(spin, spin)
punct(spin, -)
compound(time, spin)
compound(time, relaxation)
nmod(measurement, time)
nsubj:pass(obtain, Af)
aux:pass(obtain, be)
root(ROOT, obtain)
case(method, at)
nummod(method, 10)
compound(method, Mc)
case(sec, /)
conj(Mc, sec)
case(pulse, by)
compound(method, pulse)
obl(obtain, method)
punct(obtain, .)
det(measurement, this)
nsubj:pass(obtain, measurement)
aux:pass(obtain, be)
root(ROOT, obtain)
case(W., by)
obl(obtain, W.)
flat(W., Blumberg)
case(University, of)
det(University, the)
nmod(W., University)
case(California, of)
nmod(University, California)
punct(California, ,)
appos(University, Berkeley)
punct(obtain, ,)
mark(observe, by)
advcl(obtain, observe)
det(breadth, the)
obj(observe, breadth)
case(signal, of)
det(signal, the)
amod(decay, free)
compound(decay, induction)
compound(signal, decay)
nmod(breadth, signal)
punct(obtain, .)
det(value, the)
nsubj(microsecond, value)
acl(value, derive)
cop(microsecond, be)
nummod(microsecond, 16)
root(ROOT, microsecond)
punct(microsecond, .)
compound(shift, field)
nsubj:pass(derive, shift)
aux:pass(derive, be)
root(ROOT, derive)
case(value, from)
det(value, the)
compound(value, mean)
obl(derive, value)
case(line, of)
det(line, the)
compound(line, resonance)
nmod(value, line)
punct(value, ,)
acl(line, define)
case(field, as)
det(field, the)
obl(define, field)
case(which, about)
obl(zero, which)
det(moment, the)
amod(moment, first)
nsubj(zero, moment)
cop(zero, be)
acl:relcl(field, zero)
punct(derive, .)
amod(moment, second)
nsubj:pass(compute, moment)
case(spectra, of)
det(spectra, the)
nmod(moment, spectra)
aux:pass(compute, be)
root(ROOT, compute)
case(integration, by)
amod(integration, numerical)
obl(compute, integration)
punct(compute, .)
nsubj:pass(apply, correction)
aux:pass(apply, be)
root(ROOT, apply)
case(broaden, for)
compound(broaden, modulation)
obl(apply, broaden)
punct(background, ,)
compound(background, apparatus)
conj(broaden, background)
punct(shift, ,)
cc(shift, and)
compound(shift, field)
conj(broaden, shift)
punct(apply, .)
nsubj:pass(obtain, Spectra)
aux:pass(obtain, be)
root(ROOT, obtain)
case(range, over)
det(range, the)
compound(range, temperature)
obl(obtain, range)
case(degree, of)
nummod(degree, 77)
case(294, -)
nmod(77, 294)
punct(degree, -)
nmod(range, degree)
case(k, -)
nmod(degree, k)
punct(obtain, .)
case(measurement, for)
det(measurement, the)
amod(temperature, low)
punct(temperature, -)
compound(measurement, temperature)
nmod(range, measurement)
det(sample, the)
nsubj:pass(cool, sample)
aux:pass(cool, be)
acl:relcl(measurement, cool)
case(method, by)
det(method, a)
amod(method, cold)
compound(gas, nitrogen)
compound(flow, gas)
compound(method, flow)
obl(cool, method)
amod(method, similar)
case(that, to)
obl(similar, that)
case(Andrew, of)
nmod(that, Andrew)
cc(ead, and)
conj(Andrew, ead)
punct(obtain, .)
det(temperature, the)
nsubj:pass(maintain, temperature)
aux:pass(maintain, be)
root(ROOT, maintain)
obl(maintain, to)
case(about, within)
advmod(maintain, about)
root(ROOT, Af)
case(period, for)
det(period, the)
nmod(Af, period)
case(time, of)
nmod(period, time)
acl(time, require)
mark(make, to)
xcomp(require, make)
det(measurement, the)
obj(make, measurement)
punct(hour, ()
advmod(hour, usually)
advmod(one, about)
nummod(hour, one)
appos(measurement, hour)
punct(hour, ))
punct(Af, .)
nummod(sample, one)
nsubj(show, sample)
punct(sample, ,)
nsubj:pass(expose, which)
aux(expose, have)
aux:pass(expose, be)
acl:relcl(sample, expose)
case(atmosphere, to)
det(atmosphere, the)
obl(expose, atmosphere)
case(evacuation, after)
obl(expose, evacuation)
case(C, at)
nummod(degree, 375)
punct(degree, -)
compound(C, degree)
punct(C, -)
nmod(evacuation, C)
punct(show, ,)
root(ROOT, show)
det(presence, the)
obj(show, presence)
case(water, of)
amod(water, adsorb)
nmod(presence, water)
punct(would, ()
advmod(0.3, about)
nummod(would, 0.3)
appos(water, would)
punct(would, ))
punct(would, ))
mark(evidence, as)
advcl(show, evidence)
case(line, by)
det(line, a)
amod(line, weak)
compound(line, resonance)
obl(evidence, line)
nsubj(narrow, which)
cop(narrow, be)
advmod(narrow, very)
acl:relcl(line, narrow)
case(temperature, at)
compound(temperature, room)
obl(narrow, temperature)
cc(disappear, and)
nsubj(disappear, which)
conj(narrow, disappear)
punct(disappear, ,)
mark(broaden, due)
fixed(due, to)
advcl(disappear, broaden)
punct(disappear, ,)
case(temperature, at)
amod(temperature, low)
obl(disappear, temperature)
punct(show, .)
det(data, the)
nsubj(spectra, data)
acl(data, report)
advmod(report, here)
cop(spectra, be)
cc:preconj(spectra, either)
case(spectra, from)
root(ROOT, spectra)
case(which, from)
obl(eliminate, which)
det(resonance, the)
amod(resonance, adsorb)
compound(resonance, water)
nsubj:pass(eliminate, resonance)
aux(eliminate, could)
advmod(eliminate, easily)
aux:pass(eliminate, be)
acl:relcl(spectra, eliminate)
cc(spectra, or)
case(spectra, from)
conj(eliminate, spectra)
case(samples, of)
nmod(spectra, samples)
acl(samples, evacuate)
cc(seal, and)
conj(evacuate, seal)
compound:prt(seal, off)
case(degree, at)
nummod(degree, 375)
punct(degree, -)
obl(seal, degree)
punct(degree, -)
appos(degree, c)
nsubj(contain, which)
acl:relcl(c, contain)
det(water, no)
amod(water, adsorb)
obj(contain, water)
punct(c, .)
det(density, the)
amod(density, measure)
compound(density, powder)
nsubj(Af, density)
case(Af, of)
det(Af, the)
nmod(density, Af)
acl:relcl(density, use)
advmod(use, here)
cop(Af, be)
case(Af, about)
root(ROOT, Af)
punct(Af, ,)
advmod(third, approximately)
nummod(third, one)
punct(third, -)
appos(Af, third)
nsubj(correspond, that)
case(density, of)
det(density, the)
compound(density, crystal)
nmod(that, density)
punct(Af, ()
appos(density, Af)
punct(Af, ))
punct(Af, .)
det:predet(density, such)
det(density, a)
nsubj(correspond, density)
parataxis(Af, correspond)
case(density, to)
det(density, a)
amod(density, paramagnetic)
compound(density, ion)
obl(correspond, density)
case(Af, of)
advmod(Af, about)
nmod(density, Af)
punct(obtain, .)
nsubj:pass(obtain, Spectra)
aux:pass(obtain, be)
conj(correspond, obtain)
case(sample, from)
det(sample, a)
amod(sample, powder)
obl(obtain, sample)
acl(sample, have)
det(shape, the)
obj(have, shape)
case(cylinder, of)
det(cylinder, a)
amod(cylinder, right)
amod(cylinder, circular)
nmod(shape, cylinder)
case(ratio, with)
det(ratio, a)
compound(ratio, height)
punct(height, -)
case(diameter, to)
punct(diameter, -)
nmod(height, diameter)
obl(have, ratio)
case(4, of)
nmod(ratio, 4)
punct(Af, :)
discourse(Af, : )
nummod(flat, 1)
punct(1, .)
det(top, the)
nsubj(flat, top)
case(sample, of)
det(sample, the)
nmod(top, sample)
cop(flat, be)
advmod(flat, nearly)
root(ROOT, flat)
cc(hemispherical, and)
det(bottom, the)
nsubj(hemispherical, bottom)
conj(flat, hemispherical)
punct(flat, .)
nsubj:pass(obtain, Spectra)
aux:pass(obtain, be)
advmod(obtain, also)
root(ROOT, obtain)
case(sample, from)
det(sample, a)
obl(obtain, sample)
case(container, in)
det(container, a)
amod(container, spherical)
nmod(sample, container)
nsubj:pass(make, which)
aux:pass(make, be)
acl:relcl(container, make)
mark(blow, by)
advcl(make, blow)
det(bubble, a)
obj(blow, bubble)
case(end, on)
det(end, the)
obl(blow, end)
case(tube, of)
det(tube, a)
amod(tube, capillary)
compound(tube, glass)
nmod(end, tube)
punct(obtain, .)
det(bubble, the)
nsubj:pass(fill, bubble)
aux:pass(fill, be)
root(ROOT, fill)
case(precaution, to)
det(precaution, the)
amod(precaution, top)
cc(special, and)
conj(top, special)
obl(fill, precaution)
aux:pass(take, be)
conj(fill, take)
mark(prevent, to)
advcl(take, prevent)
det(sample, any)
obj(prevent, sample)
mark(remain, from)
acl(sample, remain)
case(capillary, in)
det(capillary, the)
obl(remain, capillary)
punct(fill, .)
nsubj:pass(obtain, Spectra)
aux:pass(obtain, be)
advmod(obtain, also)
root(ROOT, obtain)
case(sample, from)
det(sample, a)
amod(sample, third)
obl(obtain, sample)
case(Af, of)
nmod(sample, Af)
nsubj:pass(dilut, which)
aux(dilut, have)
aux:pass(dilut, be)
acl:relcl(sample, dilut)
case(time, to)
nummod(time, three)
obl(dilut, time)
nmod:poss(volume, its)
amod(volume, original)
obl(dilut, volume)
case(alundum, with)
amod(alundum, powder)
punct(alundum, ,)
compound(alundum, anhydrous)
nmod(volume, alundum)
punct(Af, ()
appos(alundum, Af)
punct(Af, ))
punct(contain, .)
det(sample, this)
nsubj:pass(contain, sample)
aux:pass(contain, be)
parataxis(obtain, contain)
case(container, in)
det(container, a)
amod(container, cylindrical)
obl(contain, container)
amod(container, similar)
case(that, to)
obl(similar, that)
acl(that, describe)
advmod(describe, above)
punct(obtain, .)
nsubj(give, Polyphosphates)
root(ROOT, give)
amod(life, renew)
obj(give, life)
mark(soap, to)
advcl(give, soap)
obj(soap, product)
case(time, at)
det(time, a)
obl(soap, time)
mark(threat, when)
nsubj(threat, surfactant)
cop(threat, be)
det(threat, a)
advcl(soap, threat)
advmod(expensive, though)
amod(threat, expensive)
punct(spell, ,)
cc(spell, and)
det(polyphosphate, these)
amod(polyphosphate, same)
nsubj(spell, polyphosphate)
conj(give, spell)
det(decline, the)
obj(spell, decline)
case(usage, of)
compound(usage, soap)
nmod(decline, usage)
mark(recognize, when)
det(synergism, the)
nsubj:pass(recognize, synergism)
case(polyphosphate, between)
nmod(synergism, polyphosphate)
cc(active, and)
amod(detergent, synthetic)
compound(active, detergent)
conj(polyphosphate, active)
aux:pass(recognize, be)
advcl(spell, recognize)
cc(exploit, and)
conj(recognize, exploit)
punct(give, .)
det(market, the)
nsubj(diverse, market)
nsubj(diverse, today)
case(builder, for)
compound(builder, detergent)
nmod(market, builder)
cop(diverse, be)
advmod(diverse, quite)
root(ROOT, diverse)
punct(diverse, .)
det(field, the)
amod(field, best)
amod(field, know)
nsubj(duty, field)
case(application, of)
nmod(field, application)
case(builder, for)
nmod(application, builder)
cop(duty, be)
case(duty, in)
amod(duty, heavy)
punct(duty, -)
root(ROOT, duty)
punct(formulation, ,)
obl:npmod(dry, spray)
punct(dry, -)
amod(formulation, dry)
compound(formulation, detergent)
conj(duty, formulation)
case(use, for)
compound(use, household)
nmod(formulation, use)
punct(duty, .)
det(product, these)
advmod(advertise, widely)
amod(product, advertise)
nsubj:pass(base, product)
punct(product, ,)
nsubj:pass(use, which)
aux:pass(use, be)
acl:relcl(product, use)
advmod(use, primarily)
case(clothes, for)
compound(clothes, wash)
obl(use, clothes)
punct(base, ,)
aux:pass(base, be)
root(ROOT, base)
case(sudsing, on)
amod(sudsing, high)
punct(sudsing, -)
obl(base, sudsing)
punct(active, ,)
amod(active, synthetic)
compound(active, organic)
conj(sudsing, active)
punct(alkylbenzenesulfonate, ()
compound(alkylbenzenesulfonate, sodium)
appos(active, alkylbenzenesulfonate)
punct(alkylbenzenesulfonate, ))
cc(contain, and)
conj(base, contain)
advmod(50, up)
fixed(up, to)
nummod(%, 50)
obl(contain, %)
case(weight, by)
obl(contain, weight)
case(tripolyphosphate, of)
compound(tripolyphosphate, sodium)
nmod(weight, tripolyphosphate)
cc(mixture, or)
det(mixture, a)
conj(weight, mixture)
case(tripolyphosphate, of)
compound(tripolyphosphate, sodium)
nmod(mixture, tripolyphosphate)
cc(pyrophosphate, and)
compound(pyrophosphate, tetrasodium)
conj(tripolyphosphate, pyrophosphate)
punct(base, .)
case(market, in)
det(market, the)
compound(market, household)
obl(be, market)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(be, also)
compound(sudsing, low)
punct(sudsing, -)
amod(formulation, sudsing)
compound(formulation, detergent)
nsubj(be, formulation)
acl(formulation, base)
case(active, on)
amod(active, nonionic)
obl(base, active)
case(amount, with)
advmod(amount, about)
det(amount, the)
amod(amount, same)
nmod(formulation, amount)
case(builder, of)
compound(builder, phosphate)
nmod(amount, builder)
punct(amount, ;)
punct(amount, ;)
compound(duty, light)
punct(duty, -)
compound(detergent, duty)
amod(detergent, synthetic)
appos(amount, detergent)
case(builder, with)
advmod(less, much)
amod(builder, less)
nmod(detergent, builder)
punct(detergent, ;)
punct(detergent, ;)
cc(powder, and)
det(powder, the)
amod(powder, dwindle)
amod(powder, build)
punct(soap, -)
compound(powder, soap)
conj(detergent, powder)
cc(flake, as)
fixed(as, well)
fixed(as, as)
compound(flake, soap)
conj(powder, flake)
cc(granule, and)
conj(flake, granule)
punct(flake, ,)
appos(flake, none)
case(which, of)
obl(advertise, which)
aux:pass(advertise, be)
advmod(advertise, now)
advmod(advertise, nationally)
acl:relcl(none, advertise)
punct(be, . )
det(entrant, a)
advmod(publicize, well)
punct(publicize, -)
amod(entrant, publicize)
nsubj(detergent, entrant)
nsubj(achieve, which)
aux(achieve, have)
acl:relcl(entrant, achieve)
obj(achieve, success)
advmod(recently, only)
advmod(achieve, recently)
cop(detergent, be)
det(detergent, the)
amod(detergent, build)
compound(detergent, liquid)
root(ROOT, detergent)
punct(detergent, ,)
case(which, with)
obl(incorporation, which)
det(problem, the)
amod(problem, major)
nsubj(incorporation, problem)
nsubj(incorporation, today)
cop(incorporation, be)
acl:relcl(detergent, incorporation)
case(builder, of)
nmod(incorporation, builder)
cc(active, and)
conj(incorporation, active)
case(volume, into)
det(volume, a)
amod(volume, small)
obl(active, volume)
acl(volume, use)
det(ratio, a)
advmod(high, sufficiently)
amod(ratio, high)
compound(ratio, builder)
cc(active, /)
amod(ratio, active)
obj(use, ratio)
punct(detergent, .)
amod(surface, hard)
punct(surface, -)
compound(cleaning, surface)
nsubj:pass(represent, cleaning)
case(application, in)
compound(application, household)
nmod(cleaning, application)
aux:pass(represent, be)
root(ROOT, represent)
case(class, by)
nummod(class, two)
obl(represent, class)
case(product, of)
amod(product, alkaline)
nmod(class, product)
punct(class, :)
punct(1, ()
nummod(formulation, 1)
punct(1, ))
det(formulation, the)
nsubj:pass(represent, formulation)
acl(formulation, make)
advmod(make, expressly)
case(dishwasher, for)
compound(dishwasher, machine)
obl(make, dishwasher)
punct(cleaner, ,)
cc(cleaner, and)
punct(2, ()
nummod(cleaner, 2)
punct(2, ))
det(cleaner, the)
amod(purpose, general)
punct(purpose, -)
compound(cleaner, purpose)
conj(formulation, cleaner)
acl(cleaner, use)
case(wall, for)
obl(use, wall)
cc(woodwork, and)
conj(wall, woodwork)
punct(represent, .)
det(product, the)
amod(product, better)
compound(product, quality)
nsubj(contain, product)
case(both, in)
nmod(product, both)
case(line, of)
det(line, these)
nmod(both, line)
root(ROOT, contain)
compound(builder, phosphate)
obj(contain, builder)
punct(contain, .)
case(addition, in)
obl(have, addition)
punct(have, ,)
nsubj(have, many)
case(cleaner, of)
det(cleaner, the)
amod(surface, hard)
punct(surface, -)
compound(cleaner, surface)
nmod(many, cleaner)
acl(cleaner, use)
case(wall, for)
obl(use, wall)
cc(woodwork, and)
conj(wall, woodwork)
root(ROOT, have)
nmod:poss(genesis, they)
obj(have, genesis)
case(orthophosphate, in)
compound(orthophosphate, trisodium)
obl(have, orthophosphate)
punct(orthophosphate, ,)
nsubj(ingredient, which)
cop(ingredient, be)
advmod(ingredient, still)
det(ingredient, the)
amod(ingredient, major)
acl:relcl(orthophosphate, ingredient)
case(number, of)
det(number, a)
nmod(ingredient, number)
case(product, of)
amod(product, such)
nmod(number, product)
punct(have, .)
amod(powder, many)
compound(powder, scour)
nsubj(contain, powder)
advmod(contain, now)
advmod(contain, also)
root(ROOT, contain)
obj(contain, phosphate)
punct(contain, .)
det(cleaner, these)
amod(surface, hard)
punct(surface, -)
compound(cleaner, surface)
nsubj:pass(discuss, cleaner)
aux:pass(discuss, be)
root(ROOT, discuss)
case(Chapter, in)
obl(discuss, Chapter)
nummod(Chapter, 28)
punct(discuss, .)
det(Cleaning, the)
compound(process, cleaning)
compound(Cleaning, process)
nsubj(matter, Cleaning)
cc(action, or)
compound(action, detergent)
conj(Cleaning, action)
cop(matter, be)
advmod(matter, entirely)
det(matter, a)
root(ROOT, matter)
case(surface, of)
nmod(matter, surface)
punct(matter, .)
amod(cleaning, wet)
nsubj(involve, cleaning)
root(ROOT, involve)
det(medium, a)
amod(medium, aqueous)
obj(involve, medium)
punct(substrate, ,)
det(substrate, a)
amod(substrate, solid)
conj(medium, substrate)
punct(soil, ,)
conj(medium, soil)
mark(remove, to)
aux:pass(remove, be)
xcomp(involve, remove)
punct(detergent, ,)
cc(detergent, and)
det(detergent, the)
conj(medium, detergent)
cc(material, or)
obl:npmod(active, surface)
punct(active, -)
amod(material, active)
conj(detergent, material)
punct(involve, .)
det(differentiation, a)
amod(differentiation, oversimplify)
root(ROOT, differentiation)
case(lie, between)
amod(lie, soft)
punct(soft, -)
cc(lie, and)
amod(surface, hard)
punct(surface, -)
compound(lie, surface)
compound(lie, cleaning)
nmod(differentiation, lie)
case(magnitude, in)
det(magnitude, the)
nmod(lie, magnitude)
cc(kind, and)
conj(magnitude, kind)
case(surface, of)
nmod(kind, surface)
acl(kind, involve)
punct(differentiation, .)
nummod(gram, one)
nsubj:pass(find, gram)
case(cotton, of)
nmod(gram, cotton)
aux(find, have)
aux:pass(find, be)
root(ROOT, find)
mark(have, to)
xcomp(find, have)
det(area, a)
amod(area, specific)
compound(area, surface)
obj(have, area)
case(Af, of)
nmod(area, Af)
punct(area, .)
case(contrast, in)
obl(have, contrast)
punct(coupon, ,)
det(coupon, a)
compound(coupon, metal)
parataxis(find, coupon)
nsubj(have, Af)
case(size, in)
nmod(Af, size)
aux(have, would)
root(ROOT, have)
det(magnitude, a)
obj(have, magnitude)
case(less, from)
compound(less, 100,000)
case(million, to)
det(million, a)
nmod(100,000, million)
nmod(magnitude, less)
punct(have, .)
advmod(here, even)
advmod(be, here)
expl(be, there)
parataxis(have, be)
nsubj(be, room)
case(variation, for)
det(variation, some)
nmod(room, variation)
punct(vary, ,)
case(surface, for)
compound(surface, metal)
nsubj(vary, surface)
advcl(be, vary)
case(smoothness, in)
obl(vary, smoothness)
punct(capacity, ,)
amod(capacity, absorptive)
conj(smoothness, capacity)
punct(reactivity, ,)
cc(reactivity, and)
amod(reactivity, chemical)
conj(smoothness, reactivity)
punct(have, .)
nsubj(use, spring)
root(ROOT, use)
det(analyzer, a)
compound(analyzer, Brush)
compound(analyzer, surface)
punct(analyzer, -)
obj(use, analyzer)
case(study, in)
det(study, a)
compound(cleaning, metal)
punct(cleaning, -)
compound(study, cleaning)
obl(use, study)
cc(show, and)
conj(use, show)
amod(difference, considerable)
obj(show, difference)
case(removal, in)
compound(removal, soil)
nmod(difference, removal)
punct(show, ,)
case(roughness, depend)
case(roughness, upon)
compound(roughness, surface)
obl(show, roughness)
punct(use, .)
expl(be, there)
root(ROOT, be)
amod(difference, considerable)
nsubj(be, difference)
case(requirement, between)
det(requirement, the)
nmod(difference, requirement)
case(textile, for)
nmod(requirement, textile)
cc(cleaning, and)
amod(surface, hard)
punct(surface, -)
compound(cleaning, surface)
conj(textile, cleaning)
punct(be, .)
nsubj(high, exclusive)
case(value, of)
amod(value, esthetic)
nmod(exclusive, value)
punct(exclusive, ,)
case(level, such)
fixed(such, as)
amod(level, high)
punct(level, -)
cc(level, or)
amod(foam, low)
punct(foam, -)
compound(level, foam)
nmod(exclusive, level)
punct(content, ,)
compound(content, perfume)
conj(level, content)
punct(etc., ,)
advmod(level, etc.)
punct(high, ,)
det(requirement, the)
nsubj(high, requirement)
case(organic, for)
det(organic, the)
nmod(requirement, organic)
amod(organic, active)
acl(organic, use)
case(textile, in)
compound(textile, wash)
obl(use, textile)
cop(high, be)
root(ROOT, high)
punct(high, .)
advmod(matter, no)
advmod(suitable, matter)
advmod(formulate, how)
nsubj:pass(formulate, they)
aux:pass(formulate, be)
advcl(suitable, formulate)
punct(suitable, ,)
det(number, a)
amod(number, large)
nsubj(suitable, number)
case(active, of)
amod(active, organic)
nmod(number, active)
cop(suitable, be)
advmod(suitable, simply)
advmod(suitable, not)
root(ROOT, suitable)
case(application, for)
det(application, this)
obl(suitable, application)
punct(suitable, ,)
mark(give, since)
nsubj(give, they)
aux(give, do)
advmod(give, not)
advcl(suitable, give)
amod(removal, adequate)
compound(removal, soil)
obj(give, removal)
punct(suitable, .)
nsubj:pass(demonstrate, this)
aux:pass(demonstrate, be)
advmod(demonstrate, best)
root(ROOT, demonstrate)
case(test, by)
amod(test, practical)
compound(test, wash)
obl(demonstrate, test)
case(which, in)
obl(wash, which)
compound(article, cloth)
nsubj:pass(wash, article)
aux:pass(wash, be)
advmod(wash, repeatedly)
acl:relcl(test, wash)
case(formulation, with)
det(formulation, the)
amod(formulation, same)
compound(formulation, detergent)
obl(wash, formulation)
punct(demonstrate, . )
det(formulation, a)
amod(formulation, good)
nsubj(keep, formulation)
aux(keep, will)
root(ROOT, keep)
det(clothes, the)
obj(keep, clothes)
xcomp(keep, clean)
cc(white, and)
conj(clean, white)
case(washing, after)
amod(washing, many)
obl(clean, washing)
punct(keep, ;)
punct(keep, ;)
advmod(exhibit, whereas)
punct(exhibit, ,)
case(formulation, with)
det(formulation, a)
amod(formulation, poor)
obl(exhibit, formulation)
punct(exhibit, ,)
det(clothes, the)
nsubj(exhibit, clothes)
conj(keep, exhibit)
det(up, a)
compound(up, build)
punct(up, -)
obj(exhibit, up)
case(grey, of)
punct(grey, ``)
compound(tale, tattle)
punct(tale, -)
compound(grey, tale)
nmod(up, grey)
punct(grey, '')
cc(spot, and)
amod(spot, dirty)
conj(grey, spot)
punct(up, --)
advmod(result, sometimes)
case(result, with)
amod(result, bad)
nmod(spot, result)
advmod(wash, even)
case(wash, after)
det(wash, the)
amod(wash, first)
nmod(result, wash)
punct(keep, .)
mark(lengthy, since)
amod(procedure, practical)
compound(procedure, wash)
nsubj(lengthy, procedure)
cop(lengthy, be)
advmod(lengthy, both)
advcl(develop, lengthy)
cc(expensive, and)
conj(lengthy, expensive)
punct(develop, ,)
det(number, a)
nsubj:pass(develop, number)
case(test, of)
compound(test, laboratory)
nmod(number, test)
aux(develop, have)
aux:pass(develop, be)
root(ROOT, develop)
case(evaluation, for)
det(evaluation, the)
amod(evaluation, numerical)
obl(develop, evaluation)
case(detergent, of)
nmod(evaluation, detergent)
punct(develop, .)
nsubj(indicate, Harris)
aux(indicate, have)
root(ROOT, indicate)
mark(use, that)
nummod(device, two)
nsubj:pass(use, device)
punct(device, ,)
det(Launder, the)
appos(device, Launder)
punct(Launder, -)
flat(Launder, ometer)
cc(terg, and)
conj(Launder, terg)
punct(terg, -)
flat(terg, o)
punct(terg, -)
flat(terg, Tometer)
aux:pass(use, be)
advmod(widely, most)
advmod(use, widely)
ccomp(indicate, use)
case(testing, for)
amod(testing, rapid)
compound(testing, detergent)
obl(use, testing)
punct(list, ,)
cc(list, and)
nsubj(list, he)
aux(list, have)
conj(use, list)
det(fabric, the)
advmod(available, commercially)
amod(fabric, available)
amod(fabric, standard)
amod(fabric, soil)
obj(list, fabric)
punct(indicate, .)
advmod(be, also)
mark(be, give)
root(ROOT, be)
amod(procedure, several)
compound(procedure, laboratory)
compound(procedure, wash)
nsubj(be, procedure)
case(use, in)
amod(use, general)
nmod(procedure, use)
punct(be, .)
det(fabric, the)
amod(fabric, soil)
nsubj:pass(make, fabric)
acl(fabric, use)
case(testing, for)
amod(testing, rapid)
obl(use, testing)
case(formulation, of)
compound(formulation, detergent)
nmod(testing, formulation)
aux:pass(make, be)
root(ROOT, make)
case(way, in)
det:predet(way, such)
det(way, a)
obl(make, way)
mark(remove, that)
advmod(part, only)
nsubj:pass(remove, part)
case(soil, of)
det(soil, the)
nmod(part, soil)
aux:pass(remove, be)
acl(way, remove)
case(formulation, by)
advmod(formulation, even)
det(formulation, the)
amod(formulation, best)
compound(formulation, detergent)
obl(remove, formulation)
case(wash, in)
det(wash, a)
amod(wash, single)
nmod(formulation, wash)
punct(make, .)
case(way, in)
det(way, this)
obl(obtain, way)
punct(obtain, ,)
amod(value, numerical)
nsubj:pass(obtain, value)
case(efficacy, for)
det(efficacy, the)
amod(efficacy, relative)
nmod(value, efficacy)
case(formulation, of)
amod(formulation, various)
compound(formulation, detergent)
nmod(efficacy, formulation)
aux(obtain, can)
aux:pass(obtain, be)
root(ROOT, obtain)
mark(measure, by)
advcl(obtain, measure)
det(reflectance, the)
obj(measure, reflectance)
punct(whiteness, ()
appos(reflectance, whiteness)
punct(whiteness, ))
case(swatch, of)
det(swatch, the)
compound(swatch, cloth)
nmod(reflectance, swatch)
advmod(measure, before)
cc(wash, and)
mark(wash, after)
conj(before, wash)
punct(obtain, .)
compound(redeposition, Soil)
nsubj:pass(evaluate, redeposition)
aux:pass(evaluate, be)
root(ROOT, evaluate)
mark(wash, by)
advcl(evaluate, wash)
amod(swatch, clean)
obj(wash, swatch)
case(one, with)
det(one, the)
amod(one, dirty)
obl(wash, one)
punct(evaluate, .)
case(case, as)
cop(high, be)
det(case, the)
nsubj(high, case)
case(agent, with)
det(agent, the)
obl:npmod(active, surface)
punct(active, -)
amod(agent, active)
nmod(case, agent)
punct(high, ,)
det(requirement, the)
nsubj(high, requirement)
case(builder, for)
nmod(requirement, builder)
mark(use, to)
aux:pass(use, be)
acl(requirement, use)
case(composition, in)
compound(composition, detergent)
obl(use, composition)
case(textile, for)
compound(textile, wash)
nmod(composition, textile)
cop(high, be)
advmod(high, also)
root(ROOT, high)
punct(high, .)
amod(number, large)
nsubj:pass(investigate, number)
case(builder, of)
amod(builder, potential)
nmod(number, builder)
aux(investigate, have)
aux:pass(investigate, be)
root(ROOT, investigate)
punct(find, ,)
cc(find, but)
nsubj:pass(find, none)
aux(find, have)
aux:pass(find, be)
conj(investigate, find)
mark(effective, to)
cop(effective, be)
advmod(effective, as)
xcomp(find, effective)
mark(range, as)
det(polyphosphate, the)
obl(effective, polyphosphate)
case(range, over)
det(range, the)
advmod(wide, relatively)
amod(range, wide)
nmod(polyphosphate, range)
case(condition, of)
nmod(range, condition)
acl(range, meet)
case(practice, in)
obl(meet, practice)
punct(investigate, .)
det(problem, the)
nsubj(complex, problem)
case(cleaning, of)
amod(surface, hard)
punct(surface, -)
compound(cleaning, surface)
nmod(problem, cleaning)
cop(complex, be)
advmod(complex, not)
advmod(complex, nearly)
case(complex, as)
root(ROOT, complex)
punct(complex, .)
case(cleaning, in)
amod(surface, hard)
punct(surface, -)
compound(cleaning, surface)
obl(important, cleaning)
punct(important, ,)
det(salt, the)
amod(salt, inorganic)
nsubj(important, salt)
cop(important, be)
advmod(important, more)
root(ROOT, important)
case(organic, than)
det(organic, the)
obl(important, organic)
amod(organic, active)
punct(important, .)
advmod(do, indeed)
punct(do, ,)
mark(employ, when)
det(constituent, the)
amod(constituent, proper)
amod(constituent, inorganic)
nsubj:pass(employ, constituent)
aux:pass(employ, be)
advcl(do, employ)
punct(do, ,)
advmod(do, practically)
det(wet, any)
compound(agent, wet)
cc(active, or)
obl:npmod(active, surface)
punct(active, -)
amod(agent, active)
nsubj(do, agent)
aux(do, will)
root(ROOT, do)
det(job, a)
advmod(good, reasonably)
amod(job, good)
obj(do, job)
mark(present, when)
advcl(do, present)
case(amount, in)
amod(amount, sufficient)
obl(present, amount)
case(formulation, in)
det(formulation, a)
amod(surface, hard)
punct(surface, -)
compound(formulation, surface)
compound(formulation, cleaning)
nmod(amount, formulation)
punct(do, .)
nsubj(ingredient, Hydroxides)
punct(orthophosphate, ,)
conj(Hydroxides, orthophosphate)
punct(borate, ,)
conj(Hydroxides, borate)
punct(carbonate, ,)
conj(Hydroxides, carbonate)
punct(silicate, ,)
cc(silicate, and)
conj(Hydroxides, silicate)
cop(ingredient, be)
amod(ingredient, important)
amod(ingredient, inorganic)
root(ROOT, ingredient)
case(cleaner, of)
amod(surface, hard)
punct(surface, -)
compound(cleaner, surface)
nmod(ingredient, cleaner)
punct(ingredient, .)
case(addition, in)
obl(use, addition)
punct(use, ,)
det(polyphosphate, the)
nsubj:pass(use, polyphosphate)
aux:pass(use, be)
advmod(use, also)
root(ROOT, use)
punct(use, ,)
advmod(act, probably)
advcl(use, act)
obj(act, more)
mark(peptize, as)
advcl(act, peptize)
obj(peptize, agent)
case(anything, than)
obl(peptize, anything)
amod(anything, else)
punct(use, .)
det(importance, the)
nsubj:pass(emphasize, importance)
case(constituent, of)
det(constituent, the)
amod(constituent, inorganic)
nmod(importance, constituent)
case(cleaning, in)
amod(surface, hard)
punct(surface, -)
compound(cleaning, surface)
nmod(constituent, cleaning)
aux(emphasize, have)
aux:pass(emphasize, be)
root(ROOT, emphasize)
case(number, in)
det(number, a)
obl(emphasize, number)
case(papers, of)
nmod(number, papers)
punct(emphasize, .)
amod(chemistry, Physical)
root(ROOT, chemistry)
case(wash, of)
nmod(chemistry, wash)
mark(be, although)
expl(be, there)
advcl(chemistry, be)
det(question, no)
nsubj(be, question)
cc(involve, but)
mark(involve, that)
det(process, the)
nsubj(involve, process)
case(fabric, of)
compound(fabric, wash)
nmod(process, fabric)
acl(question, involve)
det(number, a)
obj(involve, number)
case(phenomena, of)
nmod(number, phenomena)
nsubj:pass(relate, which)
aux:pass(relate, be)
acl:relcl(phenomena, relate)
advmod(relate, together)
case(way, in)
det(way, a)
advmod(complicated, extremely)
amod(way, complicated)
obl(relate, way)
cc(understand, and)
mark(understand, that)
det(phenomena, these)
nsubj:pass(understand, phenomena)
cc(interrelation, and)
nmod:poss(interrelation, they)
conj(phenomena, interrelation)
aux:pass(understand, be)
advmod(understand, not)
advmod(understand, well)
advcl(attempt, understand)
case(present, at)
det(present, the)
obl(understand, present)
punct(attempt, ,)
det(section, this)
nsubj(attempt, section)
parataxis(chemistry, attempt)
mark(present, to)
xcomp(attempt, present)
advmod(present, briefly)
det(picture, a)
compound(picture, up)
punct(up, -)
case(date, to)
punct(date, -)
obl(up, date)
obj(present, picture)
case(chemistry, of)
det(chemistry, the)
amod(chemistry, physical)
nmod(picture, chemistry)
mark(wash, of)
acl(chemistry, wash)
cc:preconj(fabric, either)
obj(wash, fabric)
cc(surface, or)
amod(surface, hard)
conj(fabric, surface)
punct(chemistry, .)
det(purpose, the)
nsubj(be, purpose)
case(wash, of)
nmod(purpose, wash)
root(ROOT, be)
punct(be, ,)
advmod(remove, obviously)
punct(be, ,)
mark(remove, to)
ccomp(be, remove)
obj(remove, soil)
nsubj:pass(class, which)
aux:pass(class, be)
advmod(class, arbitrarily)
acl:relcl(soil, class)
case(category, in)
det(category, the)
nummod(category, four)
amod(category, major)
obl(class, category)
acl(category, give)
advmod(give, below)
punct(1, :)
obj(give, 1)
punct(be, .)
root(ROOT, Dirt)
punct(Dirt, ,)
nsubj:pass(define, which)
aux:pass(define, be)
advmod(define, here)
acl:relcl(Dirt, define)
case(material, as)
compound(material, particulate)
obl(define, material)
nsubj(inorganic, which)
cop(inorganic, be)
advmod(inorganic, usually)
acl:relcl(material, inorganic)
cc(divide, and)
aux:pass(divide, be)
advmod(often, very)
advmod(divide, often)
advmod(finely, extremely)
advmod(divide, finely)
conj(inorganic, divide)
advmod(divide, so)
mark(exhibit, as)
mark(exhibit, to)
advcl(divide, exhibit)
compound(property, colloidal)
obj(exhibit, property)
punct(Dirt, . )
nummod(soil, 2)
punct(2, .)
amod(soil, Greasy)
root(ROOT, soil)
punct(soil, ,)
nsubj:pass(typify, which)
aux:pass(typify, be)
acl:relcl(soil, typify)
case(hydrocarbon, by)
obl(typify, hydrocarbon)
cc(fat, and)
conj(hydrocarbon, fat)
punct(ester, ()
appos(soil, ester)
case(glycerol, of)
nmod(ester, glycerol)
case(acid, with)
amod(chain, long)
punct(chain, -)
compound(acid, chain)
compound(acid, organic)
nmod(ester, acid)
punct(ester, ))
punct(soil, . )
nummod(., 3)
punct(Stains, .)
root(ROOT, Stains)
punct(Stains, ,)
nsubj(include, which)
acl:relcl(Stains, include)
det(variety, the)
amod(variety, wide)
obj(include, variety)
case(material, of)
amod(material, nonparticulate)
nmod(variety, material)
nsubj(give, which)
acl:relcl(material, give)
obj(give, color)
advmod(present, even)
mark(present, when)
advcl(give, present)
case(concentration, in)
advmod(low, very)
amod(concentration, low)
obl(present, concentration)
case(object, on)
det(object, the)
amod(object, soil)
nmod(concentration, object)
punct(Stains, . )
nummod(soil, 4)
punct(4, .)
amod(soil, Miscellaneous)
root(ROOT, soil)
punct(soil, ,)
nsubj(include, which)
advmod(include, primarily)
acl:relcl(soil, include)
amod(substance, sticky)
obj(include, substance)
cc(liquid, and)
amod(liquid, colorless)
conj(substance, liquid)
nsubj(evaporate, which)
acl:relcl(substance, evaporate)
mark(leave, to)
advcl(evaporate, leave)
det(residue, a)
obj(leave, residue)
punct(soil, .)
det(dirt, the)
nsubj:pass(hold, dirt)
case(object, on)
det(object, the)
amod(object, soil)
nmod(dirt, object)
aux:pass(hold, be)
advmod(hold, mechanically)
root(ROOT, hold)
case(irregularity, by)
compound(irregularity, surface)
obl(hold, irregularity)
case(extent, to)
det(extent, some)
obl(hold, extent)
punct(hold, .)
advmod(attraction, however)
punct(attraction, ,)
det(factor, a)
amod(factor, major)
nsubj(attraction, factor)
case(dirt, in)
compound(dirt, bind)
nmod(factor, dirt)
cop(attraction, be)
det(attraction, the)
root(ROOT, attraction)
case(surface, between)
nmod(attraction, surface)
nsubj(go, that)
acl:relcl(surface, go)
case(name, under)
det(name, the)
obl(go, name)
case(force, of)
nmod:poss(force, Van)
flat(Van, der)
flat(Van, waal)
case(Van, 's)
nmod(name, force)
punct(attraction, .)
nsubj(interaction, this)
cop(interaction, be)
det(interaction, a)
advmod(complicated, theoretically)
amod(interaction, complicated)
compound(interaction, dipole)
root(ROOT, interaction)
nsubj(cause, which)
acl:relcl(interaction, cause)
det(particle, any)
advmod(small, extremely)
amod(particle, small)
amod(particle, uncharge)
obj(cause, particle)
mark(agglomerate, to)
acl(particle, agglomerate)
case(particle, with)
amod(particle, other)
amod(particle, small)
amod(particle, uncharge)
obl(agglomerate, particle)
punct(stick, ,)
cc(stick, or)
mark(stick, to)
conj(agglomerate, stick)
case(surface, to)
det(surface, a)
amod(surface, uncharge)
obl(stick, surface)
punct(stick, .)
advmod(bear, obviously)
punct(bear, ,)
mark(bear, if)
nsubj(particle, colloidal)
advcl(bear, particle)
advcl(stick, bear)
obj(bear, charge)
case(sign, of)
amod(sign, opposite)
nmod(charge, sign)
cc(charge, or)
punct(charge, ,)
mark(charge, if)
nummod(kind, one)
nsubj:pass(charge, kind)
aux:pass(charge, be)
advcl(bear, charge)
cc(be, and)
det(kind, the)
amod(kind, other)
nsubj(be, kind)
conj(charge, be)
advmod(be, not)
punct(intensify, ,)
det(attraction, the)
nsubj:pass(intensify, attraction)
aux(intensify, will)
aux:pass(intensify, be)
ccomp(be, intensify)
cc(reinforce, and)
det(tendency, the)
nsubj:pass(reinforce, tendency)
mark(agglomerate, to)
acl(tendency, agglomerate)
aux(reinforce, will)
aux:pass(reinforce, be)
advmod(reinforce, greatly)
conj(intensify, reinforce)
punct(interaction, .)
advmod(tend, likewise)
punct(tend, ,)
det(particle, a)
amod(particle, charge)
nsubj(tend, particle)
aux(tend, will)
root(ROOT, tend)
mark(stick, to)
xcomp(tend, stick)
case(surface, to)
det(surface, a)
amod(surface, uncharge)
obl(stick, surface)
cc(versa, and)
compound(versa, vice)
conj(surface, versa)
punct(attract, ,)
cc(attract, and)
det(particle, a)
amod(particle, charge)
nsubj:pass(attract, particle)
aux(attract, will)
aux:pass(attract, be)
advmod(strongly, very)
advmod(attract, strongly)
conj(tend, attract)
case(surface, to)
det(surface, a)
obl(attract, surface)
acl(surface, exhibit)
det(charge, a)
amod(charge, opposite)
obj(exhibit, charge)
punct(tend, .)
case(addition, in)
obl(hold, addition)
punct(hold, ,)
compound(particle, dirt)
nsubj:pass(hold, particle)
aux(hold, can)
aux:pass(hold, be)
root(ROOT, hold)
case(surface, onto)
det(surface, a)
amod(surface, soil)
obl(hold, surface)
case(substance, by)
amod(substance, sticky)
obl(hold, substance)
cc(tension, or)
case(tension, by)
det(tension, the)
compound(tension, surface)
conj(substance, tension)
case(liquid, of)
nmod(tension, liquid)
punct(tension, ,)
case(grease, include)
compound(grease, liquid)
nmod(tension, grease)
punct(hold, .)
nsubj:pass(sorb, grease)
punct(stain, ,)
conj(grease, stain)
punct(soil, ,)
cc(soil, and)
amod(soil, miscellaneous)
conj(grease, soil)
aux:pass(sorb, be)
advmod(sorb, usually)
root(ROOT, sorb)
case(surface, onto)
det(surface, the)
amod(surface, soil)
obl(sorb, surface)
punct(sorb, .)
case(case, in)
amod(case, most)
obl(take, case)
punct(take, ,)
det(soil, these)
nsubj:pass(take, soil)
aux:pass(take, be)
root(ROOT, take)
compound:prt(take, up)
case(liquid, as)
obl(take, liquid)
case(action, through)
amod(action, capillary)
obl(take, action)
punct(take, .)
case(system, in)
det(system, a)
advmod(static, essentially)
amod(system, static)
obl(replace, system)
punct(replace, ,)
det(oil, a)
nsubj:pass(replace, oil)
aux(replace, can)
advmod(replace, not)
aux:pass(replace, be)
root(ROOT, replace)
case(water, by)
obl(replace, water)
case(surface, on)
det(surface, a)
obl(replace, surface)
mark(reduce, unless)
det(tension, the)
amod(tension, interfacial)
nsubj:pass(reduce, tension)
case(phase, of)
det(phase, the)
compound(phase, water)
nmod(tension, phase)
aux:pass(reduce, be)
advcl(replace, reduce)
case(agent, by)
det(agent, a)
obl:npmod(active, surface)
punct(active, -)
amod(agent, active)
obl(reduce, agent)
punct(replace, .)
det(process, the)
compound(process, wash)
nsubj(consist, process)
mark(remove, whereby)
nsubj:pass(remove, soil)
aux:pass(remove, be)
acl(process, remove)
root(ROOT, consist)
advmod(consist, basically)
mark(apply, of)
advcl(consist, apply)
amod(action, mechanical)
obj(apply, action)
mark(loosen, to)
advcl(apply, loosen)
det(particle, the)
compound(particle, dirt)
obj(loosen, particle)
cc(matter, and)
amod(matter, dry)
conj(particle, matter)
case(presence, in)
det(presence, the)
obl(loosen, presence)
case(water, of)
nmod(presence, water)
nsubj(help, which)
acl:relcl(presence, help)
mark(float, to)
xcomp(help, float)
compound:prt(float, off)
det(debris, the)
obj(float, debris)
cc(act, and)
conj(debris, act)
punct(float, ,)
case(extent, to)
det(extent, some)
obl(float, extent)
punct(float, ,)
case(agent, as)
det(agent, a)
compound(agent, dissolve)
cc(solvate, and)
conj(dissolve, solvate)
obl(float, agent)
punct(consist, .)
amod(soil, Greasy)
nsubj:pass(remove, soil)
aux:pass(remove, be)
advmod(remove, hardly)
root(ROOT, remove)
mark(wash, by)
advcl(remove, wash)
case(water, in)
amod(water, plain)
obl(wash, water)
punct(remove, ;)
punct(remove, ;)
cc(water, and)
amod(water, natural)
nsubj(contain, water)
punct(contain, ,)
case(addition, in)
obl(contain, addition)
punct(contain, ,)
advmod(contain, often)
conj(remove, contain)
obj(contain, impurity)
case(salt, such)
fixed(such, as)
compound(salt, calcium)
nmod(impurity, salt)
nsubj(react, which)
aux(react, can)
acl:relcl(salt, react)
case(soil, with)
obl(react, soil)
mark(make, to)
advcl(react, make)
obj(make, they)
advmod(difficult, more)
xcomp(make, difficult)
mark(remove, to)
advcl(difficult, remove)
punct(remove, .)
advmod(use, therefore)
punct(use, ,)
nsubj:pass(use, detergent)
aux:pass(use, be)
root(ROOT, use)
punct(use, .)
det(detergent, the)
nsubj(substance, detergent)
amod(detergent, active)
cop(substance, be)
det(substance, that)
root(ROOT, substance)
nsubj(act, which)
advmod(act, primarily)
acl:relcl(substance, act)
mark(remove, to)
advcl(act, remove)
amod(soil, greasy)
obj(remove, soil)
punct(substance, .)
det(constituent, the)
amod(constituent, other)
root(ROOT, constituent)
case(assist, in)
det(assist, a)
amod(assist, build)
compound(assist, detergent)
nmod(constituent, assist)
case(this, in)
nmod(assist, this)
cc(removal, and)
case(removal, in)
det(removal, the)
conj(constituent, removal)
case(stain, of)
amod(stain, dirty)
nmod(removal, stain)
cc(soil, and)
det(soil, the)
amod(soil, hydrophilic)
amod(soil, sticky)
cc(dry, or)
conj(sticky, dry)
conj(stain, soil)
punct(constituent, .)
mark(know, as)
aux:pass(know, be)
advmod(know, well)
advcl(belong, know)
punct(belong, ,)
compound(active, detergent)
nsubj(belong, active)
root(ROOT, belong)
case(class, to)
det(class, the)
amod(class, chemical)
obl(belong, class)
acl(class, consist)
case(weight, of)
advmod(high, moderately)
amod(weight, high)
amod(weight, molecular)
obl(consist, weight)
cc(molecule, and)
advmod(molecule, highly)
amod(molecule, polar)
conj(weight, molecule)
nsubj(exhibit, which)
acl:relcl(molecule, exhibit)
det(property, the)
obj(exhibit, property)
mark(form, of)
acl(property, form)
obj(form, micelle)
case(solution, in)
obl(form, solution)
punct(belong, .)
amod(investigation, Physicochemical)
nsubj(show, investigation)
case(surfactant, of)
compound(surfactant, anionic)
nmod(investigation, surfactant)
punct(investigation, ,)
case(soap, include)
det(soap, the)
nmod(surfactant, soap)
punct(show, ,)
aux(show, have)
root(ROOT, show)
mark(be, that)
expl(be, there)
ccomp(show, be)
amod(polymerization, little)
nsubj(be, polymerization)
cc(agglomeration, or)
conj(polymerization, agglomeration)
case(anion, of)
det(anion, the)
compound(anion, chain)
nmod(polymerization, anion)
case(region, below)
det(region, a)
amod(region, certain)
nmod(anion, region)
case(concentration, of)
nmod(region, concentration)
acl(region, call)
det(concentration, the)
amod(concentration, critical)
compound(concentration, micelle)
obj(call, concentration)
punct(concentration, . )
punct(1, ()
nummod(concentration, 1)
punct(1, ))
case(concentration, below)
det(concentration, the)
amod(concentration, critical)
compound(concentration, micelle)
nmod(polymerization, concentration)
punct(monomer, ,)
conj(concentration, monomer)
cc(dimer, and)
det(dimer, some)
conj(concentration, dimer)
cop(. , be)
amod(. , present)
conj(concentration, . )
punct(2, ()
nummod(be, 2)
punct(2, ))
case(region, in)
det(region, the)
amod(region, critical)
compound(region, micelle)
obl(be, region)
punct(be, ,)
expl(be, there)
conj(. , be)
det(agglomeration, a)
amod(agglomeration, rapid)
nsubj(be, agglomeration)
cc(polymerization, or)
conj(agglomeration, polymerization)
mark(give, to)
acl(agglomeration, give)
det(micelle, the)
obj(give, micelle)
punct(micelle, ,)
nsubj(have, which)
acl:relcl(micelle, have)
det(degree, a)
obj(have, degree)
case(polymerization, of)
nmod(degree, polymerization)
acl(degree, average)
advmod(average, around)
nummod(. , 60)
case(80, -)
nmod(60, 80)
obj(average, . )
punct(3, ()
appos(. , 3)
punct(3, ))
case(anionic, for)
nmod(. , anionic)
punct(appear, ,)
det(micelle, these)
nsubj(appear, micelle)
acl:relcl(. , appear)
mark(assemblage, to)
cop(assemblage, be)
advmod(assemblage, roughly)
amod(assemblage, spherical)
xcomp(appear, assemblage)
case(which, in)
obl(come, which)
det(tail, the)
compound(tail, hydrocarbon)
nsubj(come, tail)
acl:relcl(assemblage, come)
advmod(come, together)
mark(face, so)
fixed(so, that)
det(group, the)
amod(group, polar)
nsubj(face, group)
punct(end, ()
det(end, the)
amod(end, ionez)
appos(group, end)
punct(end, ))
advcl(come, face)
advmod(face, outward)
case(phase, towards)
det(phase, the)
amod(phase, aqueous)
amod(phase, continuous)
obl(face, phase)
punct(show, .)
advmod(more, obviously)
amod(substance, hydrophobic)
punct(substance, ()
amod(substance, oleophilic)
punct(substance, ))
nsubj(more, substance)
case(grease, such)
fixed(such, as)
nmod(substance, grease)
punct(oil, ,)
conj(grease, oil)
punct(particle, ,)
cc(particle, or)
conj(grease, particle)
acl(substance, have)
det(surface, a)
amod(surface, greasy)
cc(oily, or)
conj(greasy, oily)
obj(have, surface)
cop(more, be)
root(ROOT, more)
case(home, at)
obl(more, home)
case(center, in)
det(center, the)
obl(more, center)
case(micelle, of)
det(micelle, a)
nmod(center, micelle)
case(phase, than)
case(phase, in)
det(phase, the)
amod(phase, aqueous)
nmod(micelle, phase)
punct(more, .)
nsubj(imbibe, Micelles)
aux(imbibe, can)
root(ROOT, imbibe)
cc(hold, and)
conj(imbibe, hold)
det(amount, a)
amod(amount, considerable)
obj(hold, amount)
case(substance, of)
amod(substance, oleophilic)
nmod(amount, substance)
mark(increase, so)
fixed(so, that)
det(volume, the)
compound(volume, micelle)
nsubj:pass(increase, volume)
aux(increase, may)
aux:pass(increase, be)
advcl(hold, increase)
advmod(much, as)
obj(increase, much)
case(fold, as)
advmod(fold, approximately)
nummod(fold, two)
punct(fold, -)
obl(much, fold)
punct(imbibe, .)
mark(demonstrate, although)
det(matter, the)
nsubj:pass(demonstrate, matter)
aux(demonstrate, have)
advmod(demonstrate, not)
aux:pass(demonstrate, be)
advmod(demonstrate, unequivocally)
advcl(contribute, demonstrate)
punct(contribute, ,)
det(show, the)
amod(show, available)
compound(show, data)
nsubj(contribute, show)
nsubj(micelle, that)
acl:relcl(show, micelle)
case(themselves, in)
obl(micelle, themselves)
aux(contribute, do)
advmod(contribute, not)
root(ROOT, contribute)
advmod(contribute, significantly)
case(process, to)
det(process, the)
compound(process, detergency)
obl(contribute, process)
punct(contribute, .)
advcl(ability, related)
case(formation, to)
compound(formation, micelle)
obl(related, formation)
cop(ability, be)
det(ability, the)
advmod(important, technologically)
amod(ability, important)
root(ROOT, ability)
case(active, of)
compound(active, detergent)
nmod(ability, active)
mark(congregate, to)
acl(ability, congregate)
case(interface, at)
compound(water, oil)
punct(water, -)
compound(interface, water)
obl(congregate, interface)
case(manner, in)
det:predet(manner, such)
det(manner, a)
obl(congregate, manner)
mark(direct, that)
det(end, the)
amod(end, polar)
punct(end, ()
cc(ionez, or)
amod(end, ionez)
punct(end, ))
nsubj:pass(direct, end)
case(molecule, of)
det(molecule, the)
nmod(end, molecule)
aux:pass(direct, be)
acl(manner, direct)
case(phase, towards)
det(phase, the)
amod(phase, aqueous)
obl(direct, phase)
cc(chain, and)
det(chain, the)
compound(chain, hydrocarbon)
conj(phase, chain)
case(phase, towards)
det(phase, the)
amod(phase, oily)
nmod(chain, phase)
punct(ability, .)
case(process, in)
det(process, the)
compound(process, cleaning)
obl(coate, process)
punct(coate, ,)
amod(soil, sorb)
amod(soil, greasy)
nsubj(become, soil)
root(ROOT, become)
xcomp(become, coate)
case(manner, in)
det(manner, this)
obl(coate, manner)
case(film, with)
det(film, a)
amod(film, oriented)
obl(coate, film)
case(surfactant, of)
nmod(film, surfactant)
punct(coate, .)
advmod(roll, then)
case(wash, during)
obl(roll, wash)
punct(roll, ,)
det(soil, the)
amod(soil, greasy)
nsubj(roll, soil)
root(ROOT, roll)
advmod(roll, back)
case(edge, at)
det(edge, the)
obl(back, edge)
mark(disengage, so)
fixed(so, that)
amod(droplet, emulsify)
nsubj(disengage, droplet)
aux(disengage, can)
advcl(roll, disengage)
obj(disengage, themselves)
case(mass, from)
det(mass, the)
amod(mass, sorb)
compound(mass, oil)
obl(disengage, mass)
punct(disengage, ,)
case(aid, with)
det(aid, the)
obl(disengage, aid)
case(action, of)
amod(action, mechanical)
nmod(aid, action)
punct(enter, ,)
cc(enter, and)
conj(disengage, enter)
det(phase, the)
amod(phase, aqueous)
obj(enter, phase)
punct(substance, .)
advmod(substance, obviously)
punct(substance, ,)
det(substance, a)
appos(phase, substance)
nsubj:pass(sorb, which)
aux:pass(sorb, be)
advmod(sorb, permanently)
cc(temporarily, or)
conj(permanently, temporarily)
acl:relcl(substance, sorb)
case(surface, on)
det(surface, the)
obl(sorb, surface)
case(place, in)
obl(sorb, place)
case(soil, of)
det(soil, the)
nmod(place, soil)
aux(tend, will)
conj(sorb, tend)
mark(accelerate, to)
xcomp(tend, accelerate)
det(process, this)
obj(accelerate, process)
cc(push, and)
advmod(push, effectively)
conj(accelerate, push)
compound:prt(push, off)
det(soil, the)
amod(soil, greasy)
obj(push, soil)
punct(roll, .)
nsubj(tend, substance)
amod(substance, other)
case(active, than)
compound(active, detergent)
obl(other, active)
advmod(tend, also)
root(ROOT, tend)
mark(sorb, to)
aux:pass(sorb, be)
advmod(sorb, strongly)
xcomp(tend, sorb)
case(media, from)
amod(media, aqueous)
obl(sorb, media)
case(surface, onto)
obl(sorb, surface)
case(phase, of)
amod(phase, other)
amod(phase, contiguous)
amod(phase, condense)
nmod(surface, phase)
punct(tend, .)
nsubj(true, this)
cop(true, be)
advmod(true, particularly)
root(ROOT, true)
case(ion, of)
advmod(charge, highly)
amod(ion, charge)
obl(true, ion)
punct(ion, ,)
advmod(ion, especially)
det(ion, those)
appos(ion, ion)
nsubj(fall, which)
acl:relcl(ion, fall)
case(class, into)
det(class, the)
obl(fall, class)
case(polyelectrolyte, of)
nmod(class, polyelectrolyte)
punct(true, . )
mark(sorb, whereas)
det(agent, the)
amod(agent, usual)
amod(agent, organic)
obl:npmod(active, surface)
punct(active, -)
amod(agent, active)
nsubj:pass(sorb, agent)
aux:pass(sorb, be)
advmod(sorb, strongly)
advcl(sorb, sorb)
case(interface, at)
compound(water, oil)
punct(water, -)
compound(interface, water)
obl(sorb, interface)
punct(sorb, ,)
det(ion, the)
advmod(charge, highly)
amod(ion, charge)
nsubj:pass(sorb, ion)
aux:pass(sorb, be)
advmod(strongly, most)
advmod(sorb, strongly)
ccomp(think, sorb)
case(interface, at)
obl(sorb, interface)
case(water, between)
nmod(interface, water)
cc(material, and)
amod(material, insoluble)
conj(water, material)
acl(interface, exhibit)
det(structure, a)
amod(structure, ionic)
obj(exhibit, structure)
punct(see, ()
parataxis(sorb, see)
obj(see, table)
nummod(see, 26)
case(2, -)
nmod(26, 2)
case(p., on)
obl(see, p.)
nummod(p., 1678)
punct(see, ))
punct(think, .)
advmod(think, thus)
punct(think, ,)
case(media, for)
amod(media, aqueous)
obl(think, media)
punct(think, ,)
nsubj(think, we)
aux(think, can)
root(ROOT, think)
case(organic, of)
det(organic, the)
amod(organic, idealize)
obl(think, organic)
amod(organic, active)
case(agent, as)
det(agent, a)
amod(agent, oleophilic)
cc(hydrophobic, or)
conj(oleophilic, hydrophobic)
obl:npmod(active, surface)
punct(active, -)
conj(oleophilic, active)
obl(active, agent)
punct(builder, ,)
cc(builder, and)
case(builder, of)
det(builder, a)
amod(builder, idealize)
conj(agent, builder)
case(agent, as)
det(agent, a)
amod(agent, oleophobic)
cc(hydrophilic, or)
conj(oleophobic, hydrophilic)
obl:npmod(active, surface)
punct(active, -)
conj(oleophobic, active)
nmod(builder, agent)
punct(think, .)
case(data, from)
det(data, the)
compound(data, equilibrium)
compound(data, sorption)
obl(seem, data)
nsubj(available, which)
cop(available, be)
acl:relcl(data, available)
punct(seem, ,)
expl(seem, it)
root(ROOT, seem)
xcomp(seem, logical)
mark(expect, to)
advcl(logical, expect)
mark(sorb, that)
compound(ion, polyphosphate)
nsubj:pass(sorb, ion)
aux(sorb, would)
aux:pass(sorb, be)
advmod(sorb, strongly)
ccomp(expect, sorb)
case(surface, on)
det(surface, the)
obl(sorb, surface)
case(dirt, of)
det(dirt, the)
nmod(surface, dirt)
punct(soil, ()
advmod(soil, especially)
compound(soil, clay)
appos(dirt, soil)
punct(soil, ))
mark(give, so)
fixed(so, as)
fixed(so, to)
advcl(sorb, give)
iobj(give, it)
det(charge, a)
advmod(increase, greatly)
amod(charge, increase)
amod(charge, negative)
obj(give, charge)
punct(seem, .)
det(particle, the)
amod(particle, charge)
nsubj(repel, particle)
advmod(repel, then)
root(ROOT, repel)
det(other, each)
obj(repel, other)
cc(repel, and)
aux:pass(repel, be)
advmod(repel, also)
conj(repel, repel)
case(surface, from)
det(surface, the)
amod(surface, charge)
obl(repel, surface)
punct(surface, ,)
nsubj(bear, which)
advmod(invariably, almost)
advmod(bear, invariably)
acl:relcl(surface, bear)
det(charge, a)
amod(charge, negative)
obj(bear, charge)
case(condition, under)
compound(condition, wash)
nmod(charge, condition)
punct(repel, .)
det(particle, the)
advmod(charge, negatively)
amod(particle, charge)
compound(particle, dirt)
nsubj(leave, particle)
advmod(leave, then)
root(ROOT, leave)
det(surface, the)
obj(leave, surface)
cc(go, and)
conj(leave, go)
case(phase, into)
det(phase, the)
amod(phase, aqueous)
obl(go, phase)
punct(leave, .)
det(hypothesis, this)
nsubj:pass(evolve, hypothesis)
aux:pass(evolve, be)
root(ROOT, evolve)
case(analogy, in)
obl(evolve, analogy)
case(action, to)
det(action, the)
amod(action, demonstrate)
obl(evolve, action)
case(active, of)
amod(active, organic)
nmod(action, active)
case(detergency, in)
nmod(action, detergency)
punct(evolve, .)
nsubj(consider, it)
aux(consider, do)
advmod(consider, not)
root(ROOT, consider)
det(effect, the)
amod(effect, kinetic)
obj(consider, effect)
case(builder, of)
det(builder, the)
compound(builder, phosphate)
nmod(effect, builder)
case(phenomena, on)
compound(desorption, sorption)
punct(desorption, -)
compound(phenomena, desorption)
nmod(builder, phenomena)
nsubj:pass(discuss, which)
aux(discuss, will)
aux:pass(discuss, be)
acl:relcl(phenomena, discuss)
advmod(discuss, later)
punct(see, ()
parataxis(consider, see)
obj(see, pp.)
nummod(pp., 1746)
case(1748, -)
nmod(1746, 1748)
punct(see, ))
punct(see, .)
det(picture, the)
amod(picture, crude)
nsubj:pass(represent, picture)
case(process, of)
det(process, the)
compound(process, detergency)
nmod(picture, process)
advmod(develop, thus)
advmod(develop, far)
acl:relcl(picture, develop)
aux(represent, can)
aux:pass(represent, be)
conj(consider, represent)
case(Af, as)
punct(Af, :)
nummod(compare, Af)
punct(Af, .)
det(influence, the)
nsubj:pass(compare, influence)
case(action, of)
amod(action, mechanical)
nmod(influence, action)
case(particle, on)
det(particle, the)
nmod(influence, particle)
case(soil, of)
amod(soil, free)
nmod(particle, soil)
aux(compare, may)
aux:pass(compare, be)
conj(represent, compare)
case(that, to)
obl(compare, that)
case(energy, of)
amod(energy, kinetic)
nmod(that, energy)
case(scale, on)
det(scale, a)
amod(scale, molecular)
nmod(energy, scale)
punct(compare, .)
amod(soil, Freed)
nsubj:pass(disperse, soil)
aux(disperse, must)
aux:pass(disperse, be)
conj(compare, disperse)
cc(protect, and)
conj(disperse, protect)
case(flocculation, against)
obl(protect, flocculation)
punct(consider, .)
amod(cloth, Cleaned)
nsubj:pass(protect, cloth)
aux(protect, must)
aux:pass(protect, be)
root(ROOT, protect)
case(redeposition, against)
det(redeposition, the)
obl(protect, redeposition)
case(soil, of)
amod(soil, disperse)
nmod(redeposition, soil)
punct(protect, .)
expl(evident, it)
cop(evident, be)
root(ROOT, evident)
mark(severe, that)
det(requirement, the)
nsubj(severe, requirement)
acl(requirement, impose)
case(effect, by)
det(effect, these)
obl(impose, effect)
case(constituent, upon)
det(constituent, any)
nummod(constituent, one)
compound(constituent, detergent)
nmod(effect, constituent)
acl(constituent, act)
advmod(act, alone)
cop(severe, be)
ccomp(evident, severe)
punct(evident, .)
case(consideration, upon)
obl(wonder, consideration)
case(variety, of)
det(variety, the)
nmod(consideration, variety)
case(soil, of)
nmod(variety, soil)
cc(fabric, and)
conj(soil, fabric)
advmod(encounter, normally)
acl(variety, encounter)
case(process, in)
det(process, the)
compound(process, wash)
obl(encounter, process)
punct(wonder, ,)
expl(wonder, it)
cop(wonder, be)
nsubj(wonder, little)
root(ROOT, wonder)
mark(gain, that)
det(use, the)
nsubj(gain, use)
case(number, of)
det(number, a)
nmod(use, number)
case(constituent, of)
compound(constituent, detergent)
nmod(number, constituent)
acl(constituent, have)
punct(property, ``)
amod(property, synergistic)
punct(property, '')
obj(have, property)
aux(gain, have)
ccomp(wonder, gain)
amod(acceptance, widespread)
obj(gain, acceptance)
punct(wonder, .)
case(process, in)
det(process, the)
case(all, over)
punct(all, -)
det(process, all)
obl(difficult, process)
punct(difficult, ,)
expl(difficult, it)
cop(difficult, be)
root(ROOT, difficult)
mark(assign, to)
csubj(difficult, assign)
det(role, a)
punct(role, ``)
amod(role, pure)
punct(role, '')
obj(assign, role)
case(constituent, to)
det(constituent, each)
obl(assign, constituent)
case(formulation, of)
det(formulation, a)
amod(formulation, build)
punct(detergent, -)
compound(formulation, detergent)
nmod(constituent, formulation)
punct(difficult, ;)
punct(difficult, ;)
cc(be, and)
punct(be, ,)
advmod(be, indeed)
punct(be, ,)
expl(be, there)
conj(difficult, be)
det(reason, no)
amod(reason, more)
nsubj(be, reason)
mark(separate, to)
acl(reason, separate)
det(role, the)
amod(role, interrelate)
obj(separate, role)
case(agent, of)
det(agent, the)
amod(agent, active)
punct(builder, ,)
compound(agent, builder)
punct(agent, ,)
conj(active, antiredeposition)
nmod(role, agent)
punct(etc., ,)
conj(role, etc.)
mark(be, than)
expl(be, there)
advcl(etc., be)
mark(assign, to)
ccomp(be, assign)
amod(action, individual)
obj(assign, action)
case(each, to)
nmod(action, each)
case(isomer, of)
det(isomer, the)
amod(isomer, numerous)
nmod(each, isomer)
acl(isomer, make)
compound:prt(make, up)
det(organic, a)
amod(organic, give)
amod(organic, commercial)
obj(make, organic)
xcomp(make, active)
punct(difficult, .)
det(exchange, the)
amod(exchange, thermal)
nsubj(measurable, exchange)
case(chlorine, of)
nmod(exchange, chlorine)
case(Af, between)
nmod(chlorine, Af)
cc(Af, and)
compound(Af, liquid)
conj(Af, Af)
cop(measurable, be)
advmod(measurable, readily)
root(ROOT, measurable)
case(temperature, at)
obl(measurable, temperature)
case(range, in)
det(range, the)
obl(measurable, range)
case(degree, of)
nummod(degree, 180)
punct(degree, -)
nmod(range, degree)
cc(above, and)
conj(degree, above)
punct(measurable, .)
det(exchange, the)
amod(exchange, photochemical)
nsubj(occur, exchange)
root(ROOT, occur)
case(yield, with)
det(yield, a)
compound(yield, quantum)
obl(occur, yield)
case(order, of)
det(order, the)
nmod(yield, order)
case(unity, of)
nmod(order, unity)
case(phase, in)
det(phase, the)
compound(phase, liquid)
nmod(order, phase)
case(degree, at)
nummod(degree, 65)
punct(degree, -)
nmod(phase, degree)
acl(degree, use)
obj(use, light)
xcomp(use, absorb)
advmod(Af, only)
case(Af, by)
det(Af, the)
obl(absorb, Af)
punct(occur, .)
case(phase, in)
det(phase, the)
compound(phase, gas)
obl(observe, phase)
punct(observe, ,)
case(Af, with)
obl(observe, Af)
case(Af, of)
nmod(Af, Af)
cc(Af, and)
conj(Af, Af)
case(Af, of)
nmod(Af, Af)
punct(observe, ,)
amod(yield, quantum)
nsubj:pass(observe, yield)
case(order, of)
det(order, the)
nmod(yield, order)
case(Af, of)
nmod(order, Af)
aux(observe, have)
aux:pass(observe, be)
root(ROOT, observe)
case(degree, at)
nummod(degree, 85)
punct(degree, -)
obl(observe, degree)
punct(observe, .)
case(attempt, despite)
amod(attempt, extensive)
obl(observe, attempt)
mark(obtain, to)
acl(attempt, obtain)
advmod(pure, highly)
amod(reagent, pure)
obj(obtain, reagent)
punct(experience, ,)
amod(difficulty, serious)
nsubj:pass(experience, difficulty)
aux:pass(experience, be)
advcl(obtain, experience)
mark(obtain, in)
advcl(experience, obtain)
amod(rate, reproducible)
obj(obtain, rate)
case(reaction, of)
nmod(rate, reaction)
punct(experience, .)
nsubj(appear, it)
root(ROOT, appear)
xcomp(appear, possible)
mark(set, to)
advcl(possible, set)
det(limit, a)
amod(limit, lower)
obj(set, limit)
case(about, of)
advmod(set, about)
root(ROOT, Af)
case(energy, for)
det(energy, the)
compound(energy, activation)
nmod(Af, energy)
case(abstraction, of)
det(abstraction, the)
nmod(energy, abstraction)
case(atom, of)
det(atom, a)
compound(atom, chlorine)
nmod(abstraction, atom)
case(molecule, from)
det(molecule, a)
compound(tetrachloride, carbon)
compound(molecule, tetrachloride)
nmod(atom, molecule)
case(atom, by)
det(atom, a)
compound(atom, chlorine)
nmod(molecule, atom)
mark(form, to)
acl(atom, form)
nsubj(radical, Af)
root(ROOT, radical)
punct(radical, .)
det(rate, the)
nsubj(appear, rate)
case(reaction, of)
det(reaction, the)
compound(phase, gas)
compound(reaction, phase)
compound(reaction, exchange)
nmod(rate, reaction)
root(ROOT, appear)
mark(proportional, to)
cop(proportional, be)
xcomp(appear, proportional)
case(power, to)
det(power, the)
amod(power, first)
obl(proportional, power)
case(intensity, of)
det(intensity, the)
amod(intensity, absorb)
compound(intensity, light)
nmod(power, intensity)
advcl(proportional, indicate)
mark(remove, that)
det(intermediate, the)
amod(intermediate, radical)
nsubj:pass(remove, intermediate)
aux:pass(remove, be)
ccomp(indicate, remove)
case(wall, at)
det(wall, the)
obl(remove, wall)
cc(reaction, or)
case(reaction, by)
conj(wall, reaction)
case(impurity, with)
det(impurity, a)
nmod(reaction, impurity)
cc(reaction, rather)
fixed(rather, than)
fixed(rather, by)
amod(reaction, bimolecular)
amod(reaction, radical)
compound(reaction, combination)
conj(impurity, reaction)
punct(appear, .)
nsubj(appear, introduction)
case(simplicity, because)
fixed(because, of)
det(simplicity, the)
nmod(introduction, simplicity)
case(molecule, of)
det(molecule, the)
nmod(simplicity, molecule)
punct(reaction, ,)
amod(reaction, isotopic)
compound(reaction, exchange)
conj(molecule, reaction)
case(halogen, between)
amod(halogen, elemental)
nmod(reaction, halogen)
cc(tetrahalide, and)
det(tetrahalide, the)
amod(tetrahalide, corresponding)
compound(tetrahalide, carbon)
conj(halogen, tetrahalide)
aux(appear, would)
root(ROOT, appear)
mark(offer, to)
xcomp(appear, offer)
advmod(fruitful, particularly)
amod(possibility, fruitful)
obj(offer, possibility)
mark(obtain, for)
acl(possibility, obtain)
amod(data, unambiguous)
amod(data, basic)
amod(data, kinetic)
obj(obtain, data)
punct(appear, .)
nsubj(appear, it)
aux(appear, would)
root(ROOT, appear)
mark(possible, that)
expl(possible, it)
aux(possible, should)
cop(possible, be)
ccomp(appear, possible)
mark(determine, to)
csubj(possible, determine)
amod(mechanism, unique)
obj(determine, mechanism)
case(reaction, for)
det(reaction, the)
amod(reaction, thermal)
cc(photochemical, and)
conj(thermal, photochemical)
nmod(mechanism, reaction)
case(phase, in)
cc:preconj(phase, both)
det(phase, the)
compound(phase, liquid)
cc(gas, and)
conj(liquid, gas)
nmod(reaction, phase)
cc(determine, and)
mark(determine, to)
conj(determine, determine)
obj(determine, value)
case(energy, for)
compound(energy, activation)
nmod(value, energy)
case(some, of)
nmod(energy, some)
case(reaction, of)
det(reaction, the)
amod(reaction, intermediate)
nmod(some, reaction)
case(atom, of)
nmod(reaction, atom)
cc(radical, and)
amod(radical, free)
conj(atom, radical)
punct(information, ,)
cc(information, as)
fixed(as, well)
fixed(as, as)
conj(reaction, information)
case(heat, on)
det(heat, the)
nmod(information, heat)
case(dissociation, of)
nmod(heat, dissociation)
case(bond, of)
det(bond, the)
compound(halogen, carbon)
punct(halogen, -)
compound(bond, halogen)
nmod(dissociation, bond)
punct(appear, .)
det(reaction, the)
nsubj(seem, reaction)
case(chlorine, of)
nmod(reaction, chlorine)
case(tetrachloride, with)
compound(tetrachloride, carbon)
nmod(chlorine, tetrachloride)
root(ROOT, seem)
advmod(suite, particularly)
xcomp(seem, suite)
case(study, for)
amod(study, such)
obl(suite, study)
punct(seem, .)
expl(possible, it)
aux(possible, should)
cop(possible, be)
root(ROOT, possible)
mark(prepare, to)
csubj(possible, prepare)
advmod(pure, very)
amod(chlorine, pure)
obj(prepare, chlorine)
case(oxidation, by)
obl(prepare, oxidation)
case(chloride, of)
amod(chloride, inorganic)
nmod(oxidation, chloride)
case(system, on)
det(system, a)
compound(system, vacuum)
obl(prepare, system)
acl(system, follow)
case(distillation, by)
amod(distillation, multiple)
obl(follow, distillation)
case(liquid, of)
det(liquid, the)
nmod(distillation, liquid)
punct(possible, .)
expl(possible, it)
aux(possible, should)
cop(possible, be)
root(ROOT, possible)
case(tetrachloride, to)
amod(tetrachloride, free)
compound(tetrachloride, carbon)
obl(possible, tetrachloride)
case(substance, of)
det(substance, any)
compound(substance, interfere)
nmod(tetrachloride, substance)
case(method, by)
det(method, the)
amod(method, usual)
compound(method, purification)
nmod(substance, method)
acl(method, follow)
case(prechlorination, by)
obl(follow, prechlorination)
case(addition, prior)
fixed(prior, to)
obl(follow, addition)
case(chlorine, of)
amod(chlorine, radioactive)
nmod(addition, chlorine)
punct(possible, . )
advmod(expect, furthermore)
punct(expect, ,)
det(exchange, the)
nsubj:pass(expect, exchange)
aux(expect, would)
advmod(expect, not)
aux:pass(expect, be)
root(ROOT, expect)
mark(sensitive, to)
cop(sensitive, be)
xcomp(expect, sensitive)
mark(trace, to)
xcomp(sensitive, trace)
obj(trace, amount)
case(impurity, of)
nmod(amount, impurity)
mark(apt, because)
expl(apt, it)
aux(apt, would)
advmod(apt, not)
cop(apt, be)
advcl(trace, apt)
mark(reaction, to)
cop(reaction, be)
det(reaction, a)
compound(reaction, chain)
xcomp(apt, reaction)
mark(expect, since)
det(energy, the)
compound(energy, activation)
nsubj:pass(expect, energy)
case(abstraction, for)
nmod(energy, abstraction)
case(chlorine, of)
nmod(abstraction, chlorine)
case(atom, by)
det(atom, a)
compound(atom, chlorine)
nmod(abstraction, atom)
aux(expect, would)
aux:pass(expect, be)
advcl(reaction, expect)
mark(high, to)
cop(high, be)
advmod(high, too)
xcomp(expect, high)
punct(expect, ;)
punct(expect, ;)
advmod(expect, also)
nsubj:pass(expect, it)
aux(expect, would)
aux:pass(expect, be)
conj(expect, expect)
mark(compete, that)
nsubj(compete, Af)
aux(compete, would)
ccomp(expect, compete)
advmod(effectively, very)
advmod(compete, effectively)
case(impurity, with)
det(impurity, any)
obl(compete, impurity)
case(scavenger, as)
det(scavenger, a)
nmod(impurity, scavenger)
case(radical, for)
compound(radical, Af)
nmod(scavenger, radical)
punct(expect, .)
root(ROOT, contrary)
case(expectation, to)
det(expectation, these)
obl(contrary, expectation)
nsubj(find, we)
aux(find, have)
acl:relcl(expectation, find)
expl(impossible, it)
xcomp(find, impossible)
mark(obtain, to)
csubj(impossible, obtain)
det(degree, the)
obj(obtain, degree)
case(reproducibility, of)
nmod(degree, reproducibility)
nsubj(wish, one)
aux(wish, would)
acl:relcl(reproducibility, wish)
punct(wish, ,)
advmod(effort, even)
case(effort, with)
amod(effort, extensive)
obl(wish, effort)
mark(prepare, to)
acl(effort, prepare)
advmod(pure, especially)
amod(reagent, pure)
obj(prepare, reagent)
punct(contrary, .)
nsubj(report, we)
aux(report, be)
root(ROOT, report)
det(investigation, these)
obj(report, investigation)
advmod(report, here)
advmod(report, briefly)
case(relevancy, because)
fixed(because, of)
nmod:poss(relevancy, they)
obl(report, relevancy)
case(problem, to)
nmod(relevancy, problem)
case(study, of)
det(study, the)
nmod(problem, study)
case(reaction, of)
advmod(simple, apparently)
amod(reaction, simple)
compound(reaction, exchange)
nmod(study, reaction)
case(chlorine, of)
nmod(reaction, chlorine)
cc(furnish, and)
mark(furnish, because)
det(result, the)
nsubj(furnish, result)
conj(report, furnish)
det(information, some)
obj(furnish, information)
case(energy, on)
det(energy, the)
compound(energy, activation)
nmod(information, energy)
case(abstraction, for)
nmod(information, abstraction)
case(atom, of)
compound(atom, chlorine)
nmod(abstraction, atom)
case(tetrachloride, from)
compound(tetrachloride, carbon)
nmod(atom, tetrachloride)
punct(report, .)
amod(reagent, Experimental)
root(ROOT, reagent)
punct(reagent, .)
punct(reagent, --)
compound(tank, Matheson)
amod(tank, highest)
compound(tank, purity)
compound(chlorine, tank)
nsubj:pass(pass, chlorine)
aux:pass(pass, be)
root(ROOT, pass)
case(tube, through)
det(tube, a)
obl(pass, tube)
case(resublime, of)
nmod(tube, resublime)
root(ROOT, Af)
case(system, into)
det(system, a)
amod(system, evacuate)
compound(system, Pyrex)
nmod(Af, system)
advmod(condense, where)
nsubj:pass(condense, it)
aux:pass(condense, be)
acl:relcl(system, condense)
case(air, with)
compound(air, liquid)
obl(condense, air)
punct(Af, .)
nsubj:pass(distilled, it)
aux:pass(distilled, be)
advmod(distilled, then)
root(ROOT, distilled)
case(least, at)
nmod(three, least)
nummod(time, three)
obl:tmod(distilled, time)
case(trap, from)
det(trap, a)
obl(distilled, trap)
case(degree, at)
punct(degree, -)
nummod(degree, 78)
punct(degree, -)
nmod(trap, degree)
case(trap, to)
det(trap, a)
compound(trap, liquid)
compound(trap, air)
nmod(trap, trap)
case(fraction, with)
advmod(fraction, only)
det(fraction, a)
amod(fraction, small)
amod(fraction, middle)
nmod(trap, fraction)
aux:pass(retain, be)
acl(fraction, retain)
case(distillation, in)
det(distillation, each)
obl(retain, distillation)
punct(distilled, .)
det(product, the)
amod(product, purify)
nsubj:pass(store, product)
aux:pass(store, be)
root(ROOT, store)
case(degree, at)
punct(degree, -)
nummod(degree, 78)
punct(degree, -)
obl(store, degree)
case(tube, in)
det(tube, a)
obl(store, tube)
acl(tube, equip)
case(seal, with)
det(seal, a)
compound(seal, break)
obl(equip, seal)
punct(store, .)
case(method, of)
amod(method, several)
obl(find, method)
acl(method, employ)
case(chlorine, for)
compound(chlorine, tag)
obl(employ, chlorine)
case(radiochlorine, with)
nmod(chlorine, radiochlorine)
punct(find, ,)
det(exchange, the)
nsubj:pass(find, exchange)
case(chlorine, of)
amod(chlorine, inactive)
nmod(exchange, chlorine)
case(chloride, with)
amod(chloride, tag)
compound(chloride, aluminum)
nmod(exchange, chloride)
case(temperature, at)
compound(temperature, room)
nmod(chloride, temperature)
aux:pass(find, be)
root(ROOT, find)
mark(satisfactory, to)
cop(satisfactory, be)
det(satisfactory, the)
advmod(satisfactory, most)
xcomp(find, satisfactory)
punct(find, .)
mark(prepare, to)
advcl(precipitate, prepare)
det(latter, the)
obj(prepare, latter)
punct(precipitate, ,)
compound(chloride, silver)
nsubj:pass(precipitate, chloride)
aux:pass(precipitate, be)
root(ROOT, precipitate)
case(solution, from)
det(solution, a)
obl(precipitate, solution)
acl(solution, contain)
nsubj(obtain, Af)
root(ROOT, obtain)
case(Laboratory, from)
det(Laboratory, the)
compound(Laboratory, oak)
compound(Laboratory, Ridge)
compound(Laboratory, National)
obl(obtain, Laboratory)
punct(obtain, .)
det(chloride, the)
compound(chloride, silver)
nsubj:pass(fuse, chloride)
aux:pass(fuse, be)
root(ROOT, fuse)
case(vacuum, under)
obl(fuse, vacuum)
case(presence, in)
det(presence, the)
obl(fuse, presence)
case(chip, of)
compound(chip, aluminum)
nmod(presence, chip)
case(product, with)
det(product, the)
amod(product, resultant)
obl(fuse, product)
case(Af, of)
nmod(product, Af)
nsubj:pass(sublime, which)
aux:pass(sublime, be)
acl:relcl(product, sublime)
case(flask, into)
det(flask, a)
obl(sublime, flask)
case(line, on)
det(line, the)
compound(line, vacuum)
nmod(flask, line)
punct(fuse, .)
advmod(purify, previously)
amod(chlorine, purify)
nsubj:pass(admit, chlorine)
aux:pass(admit, be)
advmod(admit, subsequently)
root(ROOT, admit)
cc(allow, and)
det(exchange, the)
nsubj:pass(allow, exchange)
aux:pass(allow, be)
conj(admit, allow)
mark(take, to)
xcomp(allow, take)
obj(take, place)
punct(admit, .)
det(radiochlorine, the)
nsubj:pass(store, radiochlorine)
aux:pass(store, be)
root(ROOT, store)
case(degree, at)
punct(degree, -)
nummod(degree, 78)
punct(degree, -)
obl(store, degree)
case(tube, in)
det(tube, a)
obl(store, tube)
acl(tube, equip)
case(seal, with)
det(seal, a)
compound(seal, break)
obl(equip, seal)
punct(store, .)
compound(quantity, Liter)
nsubj:pass(saturate, quantity)
case(Mallinckrodt, of)
nmod(quantity, Mallinckrodt)
punct(sulfur, ,)
amod(sulfur, low)
conj(Mallinckrodt, sulfur)
punct(grade, ,)
compound(grade, reagent)
conj(Mallinckrodt, grade)
compound(tetrachloride, carbon)
conj(Mallinckrodt, tetrachloride)
aux:pass(saturate, be)
root(ROOT, saturate)
case(Af, with)
obl(saturate, Af)
cc(Af, and)
conj(Af, Af)
cc(illuminate, and)
conj(saturate, illuminate)
case(hour, for)
advmod(50, about)
nummod(hour, 50)
obl(illuminate, hour)
case(lamp, with)
det(lamp, a)
nummod(watt, 1000)
compound(tungsten, watt)
compound(lamp, tungsten)
nmod(hour, lamp)
case(distance, at)
det(distance, a)
obl(illuminate, distance)
case(inch, of)
det(inch, a)
amod(inch, few)
nmod(distance, inch)
punct(saturate, .)
det(mixture, the)
nsubj:pass(extract, mixture)
aux:pass(extract, be)
advmod(extract, then)
root(ROOT, extract)
case(alkali, with)
obl(extract, alkali)
cc(water, and)
case(water, with)
nmod(alkali, water)
case(which, follow)
obl(distilled, which)
det(tetrachloride, the)
compound(tetrachloride, carbon)
nsubj:pass(distilled, tetrachloride)
aux:pass(distilled, be)
acl:relcl(alkali, distilled)
case(column, on)
det(column, a)
compound(column, Vigreux)
obl(distilled, column)
punct(center, ,)
det(center, a)
nummod(%, 25)
compound(center, %)
appos(column, center)
acl(center, cut)
aux:pass(retain, be)
xcomp(cut, retain)
nsubj:pass(degass, which)
aux:pass(degass, be)
advmod(degass, then)
acl:relcl(center, degass)
case(vacuum, under)
obl(degass, vacuum)
case(presence, in)
det(presence, the)
obl(degass, presence)
case(Af, of)
nmod(presence, Af)
punct(add, .)
amod(chlorine, purify)
amod(chlorine, inactive)
nsubj:pass(add, chlorine)
aux:pass(add, be)
advmod(add, then)
conj(degass, add)
case(one, from)
obl(add, one)
case(tube, of)
det(tube, the)
nmod(one, tube)
acl(tube, describe)
advmod(describe, above)
cc(mixture, and)
det(mixture, the)
conj(tube, mixture)
acl(mixture, freeze)
compound:prt(freeze, out)
cc(seal, and)
conj(freeze, seal)
compound:prt(seal, off)
case(flask, in)
det(flask, a)
obl(seal, flask)
acl(flask, equip)
case(seal, with)
det(seal, a)
compound(seal, break)
obl(equip, seal)
punct(illuminate, .)
det(solution, this)
compound(solution, chlorine)
punct(tetrachloride, -)
compound(tetrachloride, carbon)
compound(solution, tetrachloride)
nsubj:pass(illuminate, solution)
aux:pass(illuminate, be)
conj(extract, illuminate)
case(day, for)
det(day, a)
obl(illuminate, day)
case(which, follow)
obl(reseal, which)
det(flask, the)
nsubj:pass(reseal, flask)
aux:pass(reseal, be)
acl:relcl(day, reseal)
case(system, onto)
det(system, a)
compound(system, vacuum)
obl(reseal, system)
cc(chlorine, and)
det(chlorine, the)
compound(chlorine, excess)
conj(system, chlorine)
acl(system, distilled)
compound:prt(distilled, off)
punct(extract, .)
det(amount, the)
amod(amount, require)
nsubj:pass(distilled, amount)
case(tetrachloride, of)
compound(tetrachloride, carbon)
nmod(amount, tetrachloride)
aux:pass(distilled, be)
root(ROOT, distilled)
case(series, into)
det(series, a)
obl(distilled, series)
case(cell, of)
compound(cell, reaction)
nmod(series, cell)
case(manifold, on)
det(manifold, a)
nmod(series, manifold)
case(line, on)
det(line, a)
compound(line, vacuum)
nmod(manifold, line)
punct(distilled, .)
det(amount, the)
amod(amount, desire)
nsubj:pass(condense, amount)
case(chlorine, of)
amod(chlorine, inactive)
nmod(amount, chlorine)
cc(chlorine, and)
amod(chlorine, radioactive)
conj(chlorine, chlorine)
aux:pass(condense, be)
advmod(condense, likewise)
root(ROOT, condense)
case(cell, in)
det(cell, these)
obl(condense, cell)
case(line, on)
det(line, the)
compound(line, vacuum)
obl(condense, line)
case(which, follow)
obl(freeze, which)
nsubj:pass(freeze, they)
aux:pass(freeze, be)
acl:relcl(line, freeze)
compound:prt(freeze, down)
cc(manifold, and)
det(manifold, the)
conj(freeze, manifold)
mark(seal, as)
det(whole, a)
nsubj:pass(seal, whole)
aux:pass(seal, be)
advcl(freeze, seal)
compound:prt(seal, off)
punct(condense, .)
det(contents, the)
nsubj:pass(mix, contents)
case(manifold, of)
det(manifold, the)
nmod(contents, manifold)
case(experiment, for)
compound(phase, liquid)
compound(experiment, phase)
nmod(manifold, experiment)
aux:pass(mix, be)
advmod(mix, then)
root(ROOT, mix)
case(shake, by)
obl(mix, shake)
punct(redistributed, ,)
conj(shake, redistributed)
case(tube, to)
det(tube, the)
compound(tube, reaction)
obl(redistributed, tube)
punct(freeze, ,)
acl(tube, freeze)
compound:prt(freeze, down)
punct(seal, ,)
cc(seal, and)
det(tube, each)
nsubj:pass(seal, tube)
aux:pass(seal, be)
advmod(seal, then)
conj(mix, seal)
compound:prt(seal, off)
punct(mix, .)
det(reactant, the)
nsubj:pass(freeze, reactant)
case(experiment, for)
det(experiment, the)
compound(phase, gas)
compound(experiment, phase)
nmod(reactant, experiment)
aux:pass(freeze, be)
advmod(freeze, first)
root(ROOT, freeze)
compound:prt(freeze, out)
case(arm, in)
det(arm, a)
compound(arm, side)
punct(arm, -)
obl(freeze, arm)
advcl(freeze, attach)
case(manifold, to)
det(manifold, the)
obl(attach, manifold)
cc(allow, and)
advmod(allow, then)
conj(freeze, allow)
mark(distil, to)
xcomp(allow, distil)
advmod(distil, slowly)
case(manifold, into)
det(manifold, the)
obl(distil, manifold)
case(cell, of)
amod(cell, pre-cooled)
compound(cell, reaction)
nmod(manifold, cell)
mark(seal, before)
advcl(distil, seal)
compound:prt(seal, off)
punct(freeze, .)
det(method, this)
nsubj(solve, method)
case(general, in)
nmod(method, general)
root(ROOT, solve)
det(problem, the)
obj(solve, problem)
mark(obtain, of)
acl(problem, obtain)
advmod(equal, fairly)
amod(concentration, equal)
obj(obtain, concentration)
case(reactant, of)
nmod(concentration, reactant)
case(each, in)
obl(obtain, each)
case(cell, of)
det(cell, the)
nummod(cell, six)
nmod(each, cell)
case(set, from)
det(set, a)
nmod(cell, set)
punct(solve, .)
compound(condition, reaction)
root(ROOT, condition)
cc(analysis, and)
conj(condition, analysis)
punct(condition, .)
punct(condition, --)
det(samples, the)
nsubj:pass(prepare, samples)
case(study, for)
compound(phase, liquid)
compound(study, phase)
amod(reaction, thermal)
compound(study, reaction)
nmod(samples, study)
aux:pass(prepare, be)
root(ROOT, prepare)
case(tube, in)
compound(tube, Pyrex)
amod(tube, capillary)
obl(prepare, tube)
nummod(mm, 2.5)
obl(prepare, mm)
punct(prepare, .)
root(ROOT, i.d.)
cc(long, and)
advmod(15, about)
nummod(cm., 15)
obl:npmod(long, cm.)
conj(i.d., long)
punct(i.d., .)
case(experiment, in)
det(experiment, a)
amod(experiment, few)
obl(make, experiment)
det(tube, the)
nsubj:pass(make, tube)
aux:pass(make, be)
root(ROOT, make)
case(mm, from)
amod(mm, standard)
nummod(mm, 6)
obl(make, mm)
punct(make, .)
root(ROOT, i.d.)
compound(tube, Pyrex)
root(ROOT, tube)
case(thickness, of)
nummod(mm., 1)
compound(wall, mm.)
compound(thickness, wall)
nmod(tube, thickness)
punct(tube, .)
det(type, both)
nsubj(withstood, type)
case(tube, of)
nmod(type, tube)
root(ROOT, withstood)
det(pressure, the)
obj(withstood, pressure)
case(atmosphere, of)
advmod(20, approximately)
nummod(atmosphere, 20)
nmod(pressure, atmosphere)
acl(atmosphere, exert)
case(tetrachloride, by)
det(tetrachloride, the)
compound(tetrachloride, carbon)
obl(exert, tetrachloride)
case(degree, at)
nummod(degree, 220)
punct(degree, -)
obl(exert, degree)
punct(withstood, .)
det(cell, the)
amod(cell, photochemical)
compound(cell, reaction)
nsubj(consist, cell)
root(ROOT, consist)
case(mm, of)
nummod(mm, 10)
obl(consist, mm)
punct(consist, .)
root(ROOT, i.d)
punct(i.d, .)
compound(tube, Pyrex)
nsubj:pass(minimize, tube)
punct(tube, ,)
nummod(cm., 5.5)
obl:npmod(long, cm.)
amod(tube, long)
punct(tube, ,)
compound(effect, diffraction)
conj(tube, effect)
aux:pass(minimize, be)
root(ROOT, minimize)
case(fact, by)
det(fact, the)
obl(minimize, fact)
mark(pass, that)
det(light, the)
nsubj(pass, light)
acl(fact, pass)
case(interface, through)
cc:preconj(interface, only)
compound(glass, liquid)
punct(glass, -)
compound(interface, glass)
obl(pass, interface)
cc(interface, and)
advmod(interface, not)
compound(glass, gas)
punct(glass, -)
compound(interface, glass)
conj(interface, interface)
punct(minimize, .)
det(cell, these)
nsubj:pass(use, cell)
aux:pass(use, be)
root(ROOT, use)
cc(tube, rather)
fixed(rather, than)
compound(tube, square)
compound(tube, Pyrex)
obl(use, tube)
case(tendency, because)
fixed(because, of)
det(tendency, the)
obl(use, tendency)
case(latter, of)
det(latter, the)
nmod(tendency, latter)
mark(shatter, to)
acl(latter, shatter)
mark(thaw, when)
advcl(shatter, thaw)
amod(tetrachloride, freeze)
compound(tetrachloride, carbon)
obj(thaw, tetrachloride)
punct(use, .)
det(cell, the)
amod(cell, round)
nsubj:pass(position, cell)
aux:pass(position, be)
advmod(position, reproducibly)
root(ROOT, position)
case(beam, in)
det(beam, the)
compound(beam, light)
obl(position, beam)
nsubj(enter, which)
acl:relcl(beam, enter)
det(bath, the)
amod(bath, thermostate)
amod(bath, mineral)
compound(bath, oil)
punct(bath, -)
obj(enter, bath)
case(window, through)
det(window, a)
obl(enter, window)
punct(position, .)
nummod(type, two)
nsubj:pass(use, type)
case(source, of)
compound(source, light)
nmod(type, source)
aux:pass(use, be)
root(ROOT, use)
punct(lamp, ,)
det(lamp, a)
nummod(watt, thousand)
compound(projection, watt)
compound(lamp, projection)
obj(use, lamp)
cc(arc, and)
det(arc, a)
amod(arc, AH6)
amod(pressure, high)
compound(arc, pressure)
compound(arc, mercury)
conj(lamp, arc)
punct(use, .)
det(light, the)
nsubj:pass(filter, light)
aux:pass(filter, be)
root(ROOT, filter)
case(window, by)
det(window, the)
amod(window, soft)
compound(window, glass)
obl(filter, window)
case(thermostat, of)
det(thermostat, the)
nmod(window, thermostat)
advmod(ensure, thus)
advcl(filter, ensure)
det(light, that)
advmod(light, only)
obj(ensure, light)
acl(light, absorb)
case(chlorine, by)
det(chlorine, the)
obl(absorb, chlorine)
cc(enter, and)
advmod(enter, not)
case(tetrachloride, by)
det(tetrachloride, the)
compound(tetrachloride, carbon)
nsubj(enter, tetrachloride)
aux(enter, could)
conj(ensure, enter)
det(cell, the)
compound(cell, reaction)
obj(enter, cell)
punct(filter, .)
amod(intensity, relative)
compound(intensity, incident)
compound(intensity, light)
nsubj:pass(measure, intensity)
aux:pass(measure, be)
root(ROOT, measure)
case(system, with)
det(system, a)
compound(potentiometer, thermopile)
compound(system, potentiometer)
obl(measure, system)
punct(measure, .)
nsubj:pass(achieve, change)
case(intensity, of)
nmod(change, intensity)
case(cell, on)
det(cell, the)
nmod(intensity, cell)
aux:pass(achieve, be)
root(ROOT, achieve)
case(use, by)
obl(achieve, use)
case(screen, of)
det(screen, a)
compound(screen, wire)
nmod(use, screen)
cc(varying, and)
mark(varying, by)
conj(achieve, varying)
det(distance, the)
obj(varying, distance)
case(source, of)
det(source, the)
compound(source, light)
nmod(distance, source)
case(cell, from)
det(cell, the)
nmod(source, cell)
punct(achieve, . )
case(reaction, follow)
obl(scratch, reaction)
det(cell, the)
nsubj:pass(scratch, cell)
aux:pass(scratch, be)
root(ROOT, scratch)
case(file, with)
det(file, a)
obl(scratch, file)
cc(open, and)
conj(scratch, open)
case(solution, under)
det(solution, a)
nummod(%, 20)
compound(solution, %)
amod(solution, aqueous)
compound(iodide, sodium)
compound(solution, iodide)
obl(open, solution)
punct(scratch, .)
root(ROOT, Carrier)
nsubj:pass(add, Af)
aux:pass(add, be)
root(ROOT, add)
cc(separate, and)
det(phase, the)
compound(phase, aqueous)
cc(organic, and)
conj(aqueous, organic)
nsubj:pass(separate, phase)
aux:pass(separate, be)
conj(add, separate)
punct(immerse, ()
nsubj:pass(immerse, cell)
acl(cell, contain)
amod(reactant, gaseous)
obj(contain, reactant)
aux:pass(immerse, be)
conj(separate, immerse)
case(air, in)
compound(air, liquid)
obl(immerse, air)
mark(open, before)
advcl(immerse, open)
case(iodide, under)
compound(iodide, sodium)
obl(open, iodide)
punct(immerse, ))
punct(add, .)
case(titration, after)
obl(count, titration)
case(Af, of)
det(Af, the)
amod(Af, liberate)
nmod(titration, Af)
case(Af, with)
nmod(Af, Af)
punct(count, ,)
nsubj:pass(count, aliquot)
case(aqueous, of)
det(aqueous, the)
nmod(aliquot, aqueous)
cc(phase, and)
case(phase, of)
det(phase, the)
amod(phase, organic)
conj(aqueous, phase)
aux:pass(count, be)
root(ROOT, count)
case(tube, in)
det(tube, a)
compound(type, solution)
punct(type, -)
compound(tube, type)
compound(tube, Geiger)
obl(count, tube)
punct(count, .)
case(phase, in)
det(phase, the)
compound(phase, liquid)
obl(run, phase)
advcl(determine, run)
det(amount, the)
obj(run, amount)
case(tetrachloride, of)
compound(tetrachloride, carbon)
nmod(amount, tetrachloride)
case(tube, in)
det(tube, each)
compound(tube, reaction)
nmod(amount, tube)
aux:pass(determine, be)
root(ROOT, determine)
mark(weigh, by)
advcl(determine, weigh)
det(tube, the)
obj(weigh, tube)
mark(open, before)
advcl(weigh, open)
cc(weigh, and)
conj(open, weigh)
det(fragment, the)
obj(weigh, fragment)
mark(empty, after)
advcl(weigh, empty)
punct(determine, .)
det(fraction, the)
nsubj(determined, fraction)
case(exchange, of)
nmod(fraction, exchange)
cop(determined, be)
root(ROOT, determined)
case(ratio, as)
det(ratio, the)
obl(determined, ratio)
case(count, of)
det(count, the)
nmod(ratio, count)
cc(minute, /)
conj(count, minute)
acl(count, observe)
case(tetrachloride, in)
det(tetrachloride, the)
compound(tetrachloride, carbon)
obl(observe, tetrachloride)
case(count, to)
det(count, the)
nmod(tetrachloride, count)
cc(minute, /)
nmod(count, minute)
acl(count, calculate)
case(fraction, for)
det(fraction, the)
compound(tetrachloride, carbon)
compound(fraction, tetrachloride)
obl(calculate, fraction)
case(distribution, for)
compound(distribution, equilibrium)
nmod(fraction, distribution)
case(activity, of)
det(activity, the)
nmod(distribution, activity)
case(chlorine, between)
det(chlorine, the)
nmod(activity, chlorine)
cc(tetrachloride, and)
compound(tetrachloride, carbon)
conj(chlorine, tetrachloride)
punct(correction, ,)
advmod(determine, empirically)
amod(correction, determine)
conj(chlorine, correction)
aux:pass(make, be)
acl(correction, make)
case(difference, for)
det(difference, the)
obl(make, difference)
mark(count, in)
acl(difference, count)
obj(count, efficiency)
case(Af, of)
nmod(efficiency, Af)
case(Af, in)
obl(count, Af)
cc(Af, and)
conj(Af, Af)
punct(result, .)
conj(Af, result)
det(reaction, the)
amod(reaction, thermal)
appos(result, reaction)
punct(determined, .)
punct(determined, --)
mark(study, in)
advcl(prepare, study)
det(reaction, the)
compound(phase, liquid)
compound(reaction, phase)
amod(reaction, thermal)
obj(study, reaction)
punct(prepare, ,)
det(tube, some)
nummod(tube, 70)
nsubj:pass(prepare, tube)
case(filling, from)
nummod(filling, 12)
amod(filling, different)
compound(filling, manifold)
nmod(tube, filling)
aux:pass(prepare, be)
root(ROOT, prepare)
cc(analyze, and)
conj(prepare, analyze)
punct(prepare, .)
nsubj:pass(do, experiment)
aux:pass(do, be)
root(ROOT, do)
case(180, at)
obl(do, 180)
punct(200, ,)
conj(180, 200)
punct(210, ,)
conj(180, 210)
punct(degree, ,)
cc(degree, and)
nummod(degree, 220)
punct(degree, -)
conj(180, degree)
punct(do, . )
case(observation, follow)
obl(undertake, observation)
case(fact, of)
det(fact, the)
nmod(observation, fact)
mark(undertake, that)
det(rate, the)
compound(rate, reaction)
nsubj:pass(undertake, rate)
case(mixture, of)
advmod(identical, supposedly)
amod(mixture, identical)
compound(mixture, reaction)
nmod(rate, mixture)
acl(mixture, prepare)
case(manifold, on)
det(manifold, the)
amod(manifold, same)
compound(manifold, fill)
obl(prepare, manifold)
cc(expose, and)
conj(prepare, expose)
case(condition, under)
amod(condition, identical)
obl(expose, condition)
advmod(differ, often)
advcl(expose, differ)
case(hundred, by)
amod(hundred, several)
obl(differ, hundred)
case(cent, per)
nmod(hundred, cent)
punct(undertake, ,)
det(series, a)
amod(series, systematic)
nsubj:pass(undertake, series)
case(experiment, of)
nmod(series, experiment)
aux:pass(undertake, be)
root(ROOT, undertake)
mark(see, to)
advcl(undertake, see)
mark(ascribe, whether)
det(difficulty, the)
nsubj:pass(ascribe, difficulty)
aux(ascribe, could)
aux:pass(ascribe, be)
ccomp(see, ascribe)
case(method, to)
det(method, the)
obl(ascribe, method)
mark(prepare, of)
acl(method, prepare)
det(chlorine, the)
obj(prepare, chlorine)
punct(prepare, ,)
case(effect, to)
det(effect, the)
obl(prepare, effect)
case(oxygen, of)
nmod(effect, oxygen)
cc(moisture, or)
conj(oxygen, moisture)
cc(effect, or)
case(effect, to)
det(effect, the)
conj(oxygen, effect)
case(surface, of)
nmod(effect, surface)
case(ratio, to)
compound(ratio, volume)
nmod(effect, ratio)
case(tube, in)
det(tube, the)
compound(tube, reaction)
nmod(ratio, tube)
punct(undertake, .)
case(addition, in)
obl(prepare, addition)
case(method, to)
det(method, the)
nmod(addition, method)
acl(method, describe)
case(section, in)
det(section, the)
obl(describe, section)
advmod(section, above)
punct(prepare, ,)
nsubj:pass(prepare, chlorine)
cc(radiochlorine, and)
conj(chlorine, radiochlorine)
aux:pass(prepare, be)
root(ROOT, prepare)
case(electrolysis, by)
det(electrolysis, the)
obl(prepare, electrolysis)
case(eutectic, of)
det(eutectic, a)
compound(eutectic, Af)
nmod(electrolysis, eutectic)
case(line, on)
det(line, the)
compound(line, vacuum)
nmod(eutectic, line)
punct(exchange, ,)
cc(exchange, and)
case(exchange, by)
obl(substitute, exchange)
case(Af, of)
nmod(exchange, Af)
case(Af, with)
compound(Af, molten)
nmod(exchange, Af)
punct(substitute, .)
compound(hydride, Calcium)
nsubj:pass(substitute, hydride)
aux:pass(substitute, be)
conj(prepare, substitute)
case(Af, for)
obl(substitute, Af)
case(agent, as)
det(agent, a)
compound(agent, drying)
obl(substitute, agent)
case(tetrachloride, for)
compound(tetrachloride, carbon)
nmod(agent, tetrachloride)
punct(prepare, .)
det(correlation, no)
root(ROOT, correlation)
case(variable, between)
det(variable, these)
nmod(correlation, variable)
cc(irreproducibility, and)
det(irreproducibility, the)
conj(variable, irreproducibility)
case(result, of)
det(result, the)
nmod(irreproducibility, result)
aux:pass(find, be)
parataxis(correlation, find)
punct(correlation, .)
det(rate, the)
compound(rate, reaction)
root(ROOT, rate)
acl(rate, observe)
case(degree, at)
nummod(degree, 200)
punct(degree, -)
obl(observe, degree)
conj(observe, range)
obl(range, from)
root(ROOT, Af)
case(chlorine, of)
det(chlorine, the)
nmod(Af, chlorine)
acl(chlorine, exchange)
case(hour, per)
obl(exchange, hour)
case(0.7, to)
obl(exchange, 0.7)
conj(exchange, exchange)
case(hour, per)
obl(exchange, hour)
punct(Af, .)
case(case, in)
amod(case, most)
nmod(Sets, case)
det(concentration, the)
compound(concentration, chlorine)
nsubj(Af, concentration)
cop(Af, be)
case(Af, about)
root(ROOT, Af)
punct(Sets, .)
parataxis(Af, Sets)
case(tube, of)
compound(tube, reaction)
nmod(Sets, tube)
acl(Sets, contain)
obj(contain, 0.2)
case(atmosphere, of)
det(atmosphere, a)
nmod(0.2, atmosphere)
case(oxygen, of)
amod(oxygen, add)
nmod(atmosphere, oxygen)
case(case, in)
nummod(case, one)
nmod(atmosphere, case)
cc(add, and)
conj(Sets, add)
obj(add, moisture)
case(another, in)
obl(add, another)
punct(give, ,)
nsubj(give, both)
parataxis(add, give)
compound(rate, reaction)
obj(give, rate)
case(range, in)
det(range, the)
obl(give, range)
case(0.1, of)
nmod(range, 0.1)
case(0.4, to)
nmod(0.1, 0.4)
case(chlorine, of)
det(chlorine, the)
nmod(0.4, chlorine)
acl(chlorine, exchange)
case(hour, per)
obl(exchange, hour)
punct(Sets, .)
det(reaction, no)
amod(reaction, detectable)
nsubj:pass(find, reaction)
aux:pass(find, be)
root(ROOT, find)
case(temperature, at)
compound(temperature, room)
obl(find, temperature)
case(mixture, for)
compound(mixture, reaction)
nmod(temperature, mixture)
acl(mixture, allow)
mark(stand, to)
xcomp(allow, stand)
case(hour, up)
fixed(up, to)
nummod(hour, 5)
obl(stand, hour)
punct(find, .)
det(reaction, the)
compound(phase, liquid)
compound(reaction, phase)
amod(reaction, photochemical)
root(ROOT, reaction)
punct(reaction, .)
det(exchange, the)
compound(phase, liquid)
compound(exchange, phase)
amod(exchange, photochemical)
nsubj(reproducible, exchange)
case(chlorine, between)
nmod(exchange, chlorine)
cc(tetrachloride, and)
compound(tetrachloride, carbon)
conj(chlorine, tetrachloride)
cop(reproducible, be)
advmod(reproducible, more)
root(ROOT, reproducible)
case(exchange, than)
det(exchange, the)
amod(exchange, thermal)
obl(reproducible, exchange)
punct(reproducible, ,)
mark(erratic, although)
advmod(erratic, still)
advcl(reproducible, erratic)
punct(reproducible, .)
det(improvement, the)
nsubj(noticeable, improvement)
cop(noticeable, be)
advmod(noticeable, most)
root(ROOT, noticeable)
case(consistency, in)
det(consistency, the)
amod(consistency, greater)
obl(noticeable, consistency)
case(cell, among)
compound(cell, reaction)
nmod(consistency, cell)
acl(consistency, prepare)
case(group, as)
det(group, a)
obl(prepare, group)
case(manifold, on)
det(manifold, the)
amod(manifold, same)
nmod(group, manifold)
punct(noticeable, .)
advmod(large, Rather)
amod(difference, large)
nsubj:pass(find, difference)
aux:pass(find, be)
advmod(find, still)
root(ROOT, find)
case(cell, between)
compound(cell, reaction)
obl(find, cell)
case(filling, from)
amod(filling, different)
compound(filling, manifold)
nmod(cell, filling)
punct(find, .)
det(tube, some)
nummod(reaction, 80)
compound(tube, reaction)
nsubj:pass(illuminate, tube)
case(filling, from)
nummod(filling, 13)
compound(filling, manifold)
nmod(tube, filling)
aux:pass(illuminate, be)
root(ROOT, illuminate)
case(range, in)
det(range, the)
compound(range, temperature)
obl(illuminate, range)
case(40, from)
nmod(range, 40)
case(85, to)
nmod(40, 85)
case(degree, -)
nmod(40, degree)
case(endeavor, in)
det(endeavor, a)
amod(endeavor, further)
obl(illuminate, endeavor)
mark(determine, to)
acl(endeavor, determine)
det(cause, the)
obj(determine, cause)
case(irreproducibility, of)
det(irreproducibility, the)
nmod(cause, irreproducibility)
cc(obtain, and)
mark(obtain, to)
conj(determine, obtain)
obj(obtain, information)
case(energy, on)
det(energy, the)
compound(energy, activation)
nmod(information, energy)
cc(effect, and)
det(effect, the)
conj(energy, effect)
case(intensity, of)
compound(intensity, light)
nmod(effect, intensity)
punct(illuminate, .)
case(case, in)
det(case, all)
obl(be, case)
expl(be, there)
root(ROOT, be)
advmod(measurable, readily)
amod(exchange, measurable)
nsubj(be, exchange)
case(hour, after)
advmod(little, as)
advmod(be, little)
case(hour, as)
nummod(hour, one)
obl(be, hour)
case(illumination, of)
nmod(hour, illumination)
punct(be, .)
mark(compare, by)
root(ROOT, compare)
compound(cell, reaction)
obj(compare, cell)
acl(cell, seal)
case(dependency, from)
det(dependency, the)
amod(dependency, same)
compound(dependency, manifold)
compound(dependency, temperature)
obl(seal, dependency)
acl(dependency, corresponding)
case(energy, to)
compound(energy, activation)
obl(corresponding, energy)
acl(energy, range)
case(11, from)
obl(range, 11)
case(18, to)
nmod(11, 18)
nsubj:pass(observe, Af)
aux:pass(observe, be)
root(ROOT, observe)
mark(seem, while)
nsubj(seem, dependence)
case(power, on)
det(power, the)
amod(power, first)
nmod(dependence, power)
case(intensity, of)
det(intensity, the)
compound(intensity, light)
nmod(power, intensity)
advcl(observe, seem)
mark(indicate, to)
aux:pass(indicate, be)
xcomp(seem, indicate)
case(case, in)
amod(case, most)
obl(indicate, case)
punct(observe, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(make, to)
csubj(possible, make)
obj(make, estimate)
case(yield, of)
det(yield, the)
compound(yield, quantum)
nmod(estimate, yield)
mark(observe, by)
advcl(make, observe)
det(extent, the)
obj(observe, extent)
case(reduction, of)
nmod(extent, reduction)
case(solution, of)
det(solution, a)
amod(solution, uranyl)
compound(actinometer, oxalate)
compound(solution, actinometer)
nmod(extent, solution)
acl(solution, illuminate)
case(time, for)
det(time, a)
amod(time, know)
obl(illuminate, time)
case(cell, in)
det(cell, a)
amod(cell, typical)
compound(cell, reaction)
nmod(time, cell)
cc(make, and)
conj(illuminate, make)
amod(conversion, appropriate)
obj(make, conversion)
case(difference, base)
case(difference, on)
det(difference, the)
nmod(conversion, difference)
case(spectra, in)
det(spectra, the)
compound(spectra, absorption)
nmod(difference, spectra)
case(oxalate, of)
amod(oxalate, uranyl)
nmod(spectra, oxalate)
cc(chlorine, and)
case(chlorine, of)
conj(oxalate, chlorine)
punct(consider, ,)
cc(consider, and)
conj(make, consider)
det(distribution, the)
amod(distribution, spectral)
obj(consider, distribution)
case(source, of)
det(source, the)
compound(source, light)
nmod(distribution, source)
punct(possible, .)
det(estimate, these)
nsubj(indicate, estimate)
root(ROOT, indicate)
mark(order, that)
det(yield, the)
compound(yield, quantum)
nsubj(order, yield)
case(exchange, for)
det(exchange, the)
nmod(yield, exchange)
case(chlorine, of)
nmod(exchange, chlorine)
case(liquid, with)
compound(tetrachloride, liquid)
compound(tetrachloride, carbon)
nmod(chlorine, tetrachloride)
case(degree, at)
nummod(degree, 65)
punct(degree, -)
nmod(tetrachloride, degree)
cop(order, be)
case(order, of)
det(order, the)
ccomp(indicate, order)
case(magnitude, of)
nmod(order, magnitude)
case(unity, of)
nmod(magnitude, unity)
punct(order, .)
mark(add, when)
amod(cell, typical)
compound(cell, reaction)
nsubj(order, cell)
case(which, to)
obl(add, which)
nsubj:pass(add, 0.3)
case(atmosphere, of)
det(atmosphere, a)
nmod(0.3, atmosphere)
case(oxygen, of)
nmod(atmosphere, oxygen)
aux(add, have)
aux:pass(add, be)
acl:relcl(cell, add)
aux:pass(illuminate, be)
conj(add, illuminate)
punct(chlorine, ,)
nsubj:pass(produce, chlorine)
cc(phosgene, and)
conj(chlorine, phosgene)
aux:pass(produce, be)
conj(illuminate, produce)
punct(indicate, .)
nsubj:pass(observe, Exchange)
aux:pass(observe, be)
advmod(observe, also)
root(ROOT, observe)
case(cell, in)
det(cell, these)
obl(observe, cell)
punct(cell, ,)
nsubj(have, which)
acl:relcl(cell, have)
compound(present, chlorine)
obj(have, present)
case(Af, at)
obl(have, Af)
punct(exchange, .)
det(exchange, the)
amod(exchange, photochemical)
parataxis(observe, exchange)
case(phase, in)
det(phase, the)
compound(phase, gas)
nmod(exchange, phase)
punct(observe, .)
punct(observe, --)
mark(be, although)
expl(be, there)
advcl(reproducible, be)
det(variation, some)
nsubj(be, variation)
case(result, in)
nmod(variation, result)
nsubj:pass(attribute, which)
aux(attribute, must)
aux:pass(attribute, be)
acl:relcl(variation, attribute)
obj(attribute, either)
mark(trace, to)
xcomp(attribute, trace)
obj(trace, impurity)
cc(variation, or)
case(variation, to)
conj(impurity, variation)
case(effect, in)
compound(effect, wall)
obl(trace, effect)
punct(reproducible, ,)
det(exchange, the)
amod(exchange, photochemical)
nsubj(reproducible, exchange)
case(phase, in)
det(phase, the)
compound(phase, gas)
nmod(exchange, phase)
cop(reproducible, be)
advmod(reproducible, sufficiently)
root(ROOT, reproducible)
mark(seem, so)
fixed(so, that)
nsubj(seem, it)
advcl(reproducible, seem)
xcomp(seem, meaningful)
mark(compare, to)
advcl(meaningful, compare)
det(rate, the)
compound(rate, reaction)
obj(compare, rate)
case(series, in)
amod(series, different)
obl(compare, series)
case(tube, of)
compound(tube, reaction)
nmod(series, tube)
case(purpose, for)
det(purpose, the)
nmod(series, purpose)
mark(obtain, of)
acl(purpose, obtain)
obj(obtain, information)
case(effect, on)
det(effect, the)
nmod(information, effect)
case(concentration, of)
compound(concentration, chlorine)
nmod(effect, concentration)
cc(concentration, and)
case(concentration, of)
compound(tetrachloride, carbon)
compound(concentration, tetrachloride)
conj(concentration, concentration)
case(rate, on)
det(rate, the)
compound(rate, reaction)
nmod(concentration, rate)
punct(rate, .)
appos(rate, data)
case(comparison, on)
amod(comparison, such)
nmod(data, comparison)
advmod(comparison, together)
case(data, with)
nmod(comparison, data)
case(effect, on)
det(effect, the)
nmod(data, effect)
case(intensity, of)
compound(intensity, light)
nmod(effect, intensity)
aux:pass(give, be)
acl:relcl(effect, give)
case(table, in)
obl(give, table)
nummod(table, 1)
punct(reproducible, .)
punct(reproducible, ,)
case(series, in)
obl(varied, series)
nummod(series, 1)
punct(varied, ,)
det(intensity, the)
amod(intensity, relative)
compound(intensity, light)
nsubj:pass(varied, intensity)
aux:pass(varied, be)
root(ROOT, varied)
mark(varying, by)
advcl(varied, varying)
det(distance, the)
obj(varying, distance)
case(lamp, of)
det(lamp, the)
nmod(distance, lamp)
case(cell, from)
det(cell, the)
compound(cell, reaction)
nmod(lamp, cell)
case(range, over)
det(range, the)
obl(varying, range)
case(cm, from)
nummod(cm, 14.7)
case(29.2, to)
nmod(14.7, 29.2)
nmod(range, cm)
punct(varied, .)
punct(varied, .)
det(column, the)
amod(column, last)
nsubj(show, column)
root(ROOT, show)
det(rate, the)
obj(show, rate)
case(exchange, of)
nmod(rate, exchange)
nsubj:pass(observe, that)
aux(observe, would)
aux(observe, have)
aux:pass(observe, be)
acl:relcl(rate, observe)
case(intensity, at)
det(intensity, a)
amod(intensity, relative)
obl(observe, intensity)
case(distance, of)
nummod(distance, 4)
punct(distance, ()
nummod(distance, 14.7)
compound(distance, cm.)
appos(intensity, distance)
punct(distance, ))
acl(intensity, calculate)
case(assumption, on)
det(assumption, the)
obl(calculate, assumption)
obj(proportional, that)
det(intensity, the)
compound(intensity, incident)
compound(intensity, light)
nsubj(proportional, intensity)
cop(proportional, be)
advmod(proportional, inversely)
acl:relcl(assumption, proportional)
case(square, to)
det(square, the)
obl(proportional, square)
case(distance, of)
det(distance, the)
nmod(square, distance)
case(lamp, of)
det(lamp, the)
nmod(distance, lamp)
case(cell, from)
det(cell, the)
nmod(lamp, cell)
cc(proportional, and)
mark(proportional, that)
det(rate, the)
nsubj(proportional, rate)
cop(proportional, be)
advmod(proportional, directly)
conj(proportional, proportional)
case(intensity, to)
det(intensity, the)
compound(intensity, incident)
compound(intensity, light)
obl(proportional, intensity)
punct(show, .)
amod(proportionality, direct)
nsubj:pass(assume, proportionality)
case(rate, of)
det(rate, the)
nmod(proportionality, rate)
case(intensity, to)
det(intensity, the)
compound(intensity, incident)
nmod(rate, intensity)
aux(assume, have)
advmod(assume, also)
aux:pass(assume, be)
root(ROOT, assume)
mark(obtain, in)
advcl(assume, obtain)
det(value, the)
obj(obtain, value)
case(column, in)
det(column, the)
amod(column, last)
nmod(value, column)
case(sample, for)
det(sample, the)
amod(sample, fourth)
obl(obtain, sample)
case(series, of)
nmod(sample, series)
nummod(series, 2)
punct(sample, ,)
advmod(reduce, where)
det(intensity, the)
compound(intensity, light)
nsubj:pass(reduce, intensity)
aux:pass(reduce, be)
acl:relcl(sample, reduce)
case(use, by)
obl(reduce, use)
case(screen, of)
det(screen, a)
nmod(use, screen)
punct(assume, .)
det(effect, the)
compound(effect, poynt)
punct(poynt, -)
compound(effect, Robertson)
nsubj(cause, effect)
punct(Robertson, ()
appos(effect, Robertson)
punct(Robertson, ,)
amod(Robertson, 1937)
punct(effect, ;)
punct(effect, ;)
appos(effect, Wyatt)
cc(Whipple, and)
conj(Wyatt, Whipple)
punct(Wyatt, ,)
amod(Wyatt, 1950)
punct(Wyatt, ))
punct(effect, ,)
nsubj(retardation, which)
cop(retardation, be)
det(retardation, a)
acl:relcl(effect, retardation)
case(motion, of)
det(motion, the)
amod(motion, orbital)
nmod(retardation, motion)
case(particle, of)
nmod(motion, particle)
case(aberration, by)
det(aberration, the)
amod(aberration, relativistic)
nmod(motion, aberration)
case(force, of)
det(force, the)
amod(force, repulsive)
nmod(aberration, force)
case(radiation, of)
det(radiation, the)
amod(radiation, imping)
amod(radiation, solar)
nmod(force, radiation)
punct(cause, ,)
root(ROOT, cause)
det(dust, the)
obj(cause, dust)
mark(spiral, to)
acl(dust, spiral)
case(sun, into)
det(sun, the)
obl(spiral, sun)
case(time, in)
obl(spiral, time)
advmod(shorter, much)
advmod(spiral, shorter)
case(age, than)
det(age, the)
obl(shorter, age)
case(Earth, of)
det(Earth, the)
nmod(age, Earth)
punct(cause, .)
det(velocity, the)
amod(velocity, radial)
nsubj(vary, velocity)
root(ROOT, vary)
advmod(vary, inversely)
case(size, as)
det(size, the)
compound(size, particle)
obl(vary, size)
punct(size, --)
det(particle, a)
nummod(diameter, 1000)
punct(diameter, -)
nummod(diameter, m)
punct(diameter, -)
compound(particle, diameter)
appos(size, particle)
case(orbit, near)
det(orbit, the)
nmod(particle, orbit)
case(Mars, of)
nmod(orbit, Mars)
aux(reach, would)
acl:relcl(particle, reach)
det(sun, the)
obj(reach, sun)
case(year, in)
advmod(million, about)
compound(million, 60)
nummod(year, million)
obl(reach, year)
punct(extend, .)
nsubj(extend, Whipple)
punct(1955, ()
appos(Whipple, 1955)
punct(1955, ))
conj(vary, extend)
det(effect, the)
obj(extend, effect)
mark(include, to)
acl(effect, include)
det(pressure, the)
amod(corpuscular, solar)
punct(corpuscular, -)
compound(pressure, corpuscular)
punct(pressure, -)
compound(pressure, radiation)
obj(include, pressure)
punct(pressure, ,)
nsubj(increase, which)
acl:relcl(pressure, increase)
cc:preconj(size, both)
det(size, the)
amod(size, minimum)
compound(size, particle)
obj(increase, size)
cc(drag, and)
det(drag, the)
conj(size, drag)
punct(vary, . )
advmod(sputter, further)
punct(sputter, ,)
det(radiation, the)
compound(radiation, corpuscular)
nsubj(sputter, radiation)
punct(radiation, ,)
advmod(proton, i.e.)
punct(proton, ,)
det(proton, the)
amod(wind, solar)
punct(wind, -)
compound(proton, wind)
appos(radiation, proton)
punct(sputter, ,)
aux(sputter, must)
root(ROOT, sputter)
compound:prt(sputter, away)
det(atom, the)
compound(atom, surface)
obj(sputter, atom)
case(dust, of)
det(dust, the)
nmod(atom, dust)
cc(cause, and)
conj(sputter, cause)
det(diminution, a)
amod(diminution, slow)
obj(cause, diminution)
case(size, in)
nmod(diminution, size)
punct(cause, ,)
case(increase, with)
det(increase, a)
amod(increase, resultant)
obl(cause, increase)
case(effect, in)
cc:preconj(effect, both)
det(effect, the)
compound(Robertson, poynt)
punct(Robertson, -)
compound(effect, Robertson)
nmod(increase, effect)
cc(ratio, and)
det(ratio, the)
conj(effect, ratio)
case(force, of)
det(force, the)
amod(force, repulsive)
nmod(ratio, force)
case(force, to)
det(force, the)
amod(force, gravitational)
nmod(force, force)
punct(sputter, .)
det(effect, the)
compound(Robertson, poynt)
punct(Robertson, -)
compound(effect, Robertson)
nsubj(cause, effect)
root(ROOT, cause)
det(axis, the)
amod(axis, semi-major)
obj(cause, axis)
case(orbit, of)
nmod(axis, orbit)
mark(diminish, to)
acl(axis, diminish)
advmod(rapidly, more)
advmod(diminish, rapidly)
case(axis, than)
det(axis, the)
amod(axis, semi-minor)
obl(diminish, axis)
punct(diminish, ,)
case(tendency, with)
det(tendency, a)
amod(tendency, consequent)
obl(diminish, tendency)
case(orbit, toward)
amod(orbit, circular)
nmod(tendency, orbit)
mark(move, as)
det(particle, the)
nsubj(move, particle)
acl(tendency, move)
case(sun, toward)
det(sun, the)
obl(move, sun)
punct(cause, .)
advmod(increase, also)
punct(increase, ,)
amod(attraction, planetary)
amod(attraction, gravitational)
nsubj(increase, attraction)
root(ROOT, increase)
det(concentration, the)
compound(concentration, dust)
obj(increase, concentration)
case(plane, near)
det(plane, the)
nmod(concentration, plane)
case(ecliptic, of)
det(ecliptic, the)
nmod(plane, ecliptic)
mark(approach, as)
det(sun, the)
nsubj:pass(approach, sun)
aux:pass(approach, be)
advcl(increase, approach)
punct(increase, .)
case(unit, at)
nummod(unit, one)
amod(unit, astronomical)
obl(circular, unit)
case(sun, from)
det(sun, the)
nmod(unit, sun)
punct(distance, ()
det(Earth, the)
nmod:poss(distance, Earth)
case(Earth, 's)
appos(sun, distance)
punct(distance, ))
det(orbit, the)
compound(orbit, dust)
nsubj(circular, orbit)
cop(circular, be)
advmod(circular, probably)
advmod(circular, nearly)
root(ROOT, circular)
punct(circular, .)
mark(case, if)
nsubj(case, such)
cop(case, be)
det(case, the)
advcl(particle, case)
punct(particle, ,)
det(particle, the)
root(ROOT, particle)
case(distance, within)
det(distance, a)
nmod(particle, distance)
case(about, of)
advmod(distance, about)
nsubj(have, Af)
case(Earth, of)
det(Earth, the)
nmod(Af, Earth)
aux(have, will)
root(ROOT, have)
punct(have, ,)
xcomp(have, relative)
case(Earth, to)
det(Earth, the)
obl(relative, Earth)
punct(Earth, ,)
det(energy, a)
amod(energy, kinetic)
appos(Earth, energy)
amod(energy, less)
case(energy, than)
nmod:poss(energy, they)
amod(energy, potential)
obl(less, energy)
cc(capture, and)
nsubj:pass(capture, they)
aux(capture, will)
aux:pass(capture, be)
conj(have, capture)
case(orbit, into)
obl(capture, orbit)
case(Earth, about)
det(Earth, the)
nmod(orbit, Earth)
punct(calculate, .)
nsubj(calculate, De)
flat(De, Jager)
punct(1955, ()
appos(De, 1955)
punct(1955, ))
aux(calculate, have)
parataxis(have, calculate)
det(time, the)
obj(calculate, time)
acl(time, require)
mark(reach, for)
det(particle, these)
nsubj(reach, particle)
mark(reach, to)
advcl(require, reach)
det(atmosphere, the)
obj(reach, atmosphere)
case(influence, under)
det(influence, the)
obl(reach, influence)
case(effect, of)
det(effect, the)
compound(effect, poynt)
punct(Robertson, -)
compound(effect, Robertson)
nmod(influence, effect)
punct(effect, ,)
nsubj(cause, which)
case(case, in)
det(case, this)
obl(cause, case)
acl:relcl(effect, cause)
det(orbit, the)
obj(cause, orbit)
mark(become, to)
xcomp(cause, become)
obj(become, more)
cc(eccentric, and)
advmod(eccentric, more)
conj(more, eccentric)
mark(change, without)
advcl(become, change)
det(axis, the)
amod(axis, semi-major)
obj(change, axis)
punct(have, .)
det(effect, this)
nsubj(give, effect)
aux(give, can)
root(ROOT, give)
obj(give, rise)
case(blanket, to)
det(blanket, a)
obl(give, blanket)
case(micrometeorite, of)
nmod(blanket, micrometeorite)
case(Earth, around)
det(Earth, the)
nmod(blanket, Earth)
punct(give, .)
mark(be, since)
expl(be, there)
advcl(be, be)
det(loss, a)
amod(loss, continual)
nsubj(be, loss)
case(material, of)
amod(material, micrometeoritic)
nmod(loss, material)
case(space, in)
nmod(loss, space)
case(effect, because)
fixed(because, of)
det(effect, the)
compound(effect, radiation)
obl(be, effect)
punct(be, ,)
expl(be, there)
aux(be, must)
root(ROOT, be)
det(replenishment, a)
amod(replenishment, continual)
nsubj(be, replenishment)
punct(replenishment, :)
advmod(disappear, otherwise)
punct(disappear, ,)
nsubj(disappear, micrometeorite)
aux(disappear, would)
aux(disappear, have)
acl:relcl(replenishment, disappear)
case(space, from)
amod(space, interplanetary)
obl(disappear, space)
punct(replenishment, .)
expl(be, there)
root(ROOT, be)
amod(source, several)
amod(source, possible)
nsubj(be, source)
punct(source, .)
case(Whipple, accord)
fixed(accord, to)
nmod(source, Whipple)
punct(1955, ()
appos(Whipple, 1955)
punct(1955, ))
punct(sufficient, ,)
amod(debris, cometary)
nsubj(sufficient, debris)
cop(sufficient, be)
parataxis(be, sufficient)
mark(replenish, to)
advcl(sufficient, replenish)
det(material, the)
obj(replenish, material)
acl(material, spiraling)
case(sun, into)
det(sun, the)
obl(spiraling, sun)
punct(replenish, ,)
advcl(replenish, maintain)
det(state, a)
advmod(steady, fairly)
amod(state, steady)
obj(maintain, state)
punct(be, .)
compound(collision, asteroidal)
nsubj:pass(think, collision)
aux:pass(think, be)
advmod(think, also)
root(ROOT, think)
mark(contribute, to)
xcomp(think, contribute)
obj(contribute, material)
punct(think, .)
expl(possible, it)
cop(possible, be)
advmod(possible, also)
root(ROOT, possible)
mark(originate, that)
nsubj(originate, some)
case(dust, of)
det(dust, the)
nmod(some, dust)
case(vicinity, in)
det(vicinity, the)
nmod(some, vicinity)
case(Earth, of)
det(Earth, the)
nmod(vicinity, Earth)
ccomp(possible, originate)
case(impact, from)
amod(impact, meteoritic)
obl(originate, impact)
case(moon, upon)
det(moon, the)
nmod(impact, moon)
punct(measurement, .)
nummod(measurement, 5.3)
amod(measurement, direct)
nsubj(make, measurement)
case(one, of)
compound(flux, micrometeorite)
compound(one, flux)
nmod(measurement, one)
aux(make, can)
advmod(make, not)
csubj(possible, make)
det(guess, a)
advmod(satisfactory, very)
amod(guess, satisfactory)
obj(make, guess)
case(flux, about)
det(flux, the)
compound(flux, micrometeorite)
nmod(guess, flux)
case(space, in)
nmod(flux, space)
punct(possible, .)
advmod(neighborhood, even)
case(neighborhood, in)
det(neighborhood, the)
obl(vary, neighborhood)
case(Earth, of)
det(Earth, the)
nmod(neighborhood, Earth)
punct(Earth, ,)
advmod(obtain, where)
nsubj:pass(obtain, information)
aux(obtain, have)
aux:pass(obtain, be)
acl:relcl(Earth, obtain)
cc:preconj(directly, both)
advmod(obtain, directly)
cc(indirectly, and)
conj(directly, indirectly)
punct(vary, ,)
det(value, the)
amod(value, derive)
compound(value, flux)
nsubj(vary, value)
root(ROOT, vary)
case(order, by)
case(least, at)
nmod(four, least)
nummod(order, four)
obl(vary, order)
case(magnitude, of)
nmod(order, magnitude)
punct(demonstrate, .)
det(discrepancy, this)
amod(discrepancy, large)
nsubj(demonstrate, discrepancy)
parataxis(vary, demonstrate)
det(inadequacy, the)
obj(demonstrate, inadequacy)
case(method, of)
det(method, the)
amod(method, experimental)
nmod(inadequacy, method)
cc(lack, and)
det(lack, the)
conj(method, lack)
case(understanding, of)
nmod(lack, understanding)
case(phenomena, of)
det(phenomena, the)
amod(phenomena, various)
nmod(understanding, phenomena)
acl(phenomena, involve)
punct(demonstrate, .)
case(kilometer, beyond)
det(kilometer, a)
advmod(million, few)
nummod(kilometer, million)
obl(unreliable, kilometer)
case(Earth, from)
det(Earth, the)
nmod(kilometer, Earth)
punct(unreliable, ,)
cc(unreliable, but)
advmod(unreliable, still)
case(region, in)
det(region, the)
obl(unreliable, region)
case(orbit, of)
det(Earth, the)
nmod:poss(orbit, Earth)
case(Earth, 's)
nmod(region, orbit)
punct(unreliable, ,)
det(prediction, a)
nsubj(unreliable, prediction)
case(flux, of)
det(flux, the)
nmod(prediction, flux)
case(dust, of)
nmod(flux, dust)
cop(unreliable, be)
advmod(unreliable, even)
advmod(unreliable, more)
root(ROOT, unreliable)
punct(unreliable, .)
case(distance, at)
amod(distance, greater)
obl(certain, distance)
case(sun, from)
det(sun, the)
nmod(distance, sun)
punct(certain, ,)
det(situation, the)
nsubj(certain, situation)
cop(certain, be)
advmod(certain, still)
advmod(certain, less)
root(ROOT, certain)
punct(certain, .)
expl(be, there)
root(ROOT, be)
amod(source, several)
nsubj(be, source)
case(evidence, of)
nmod(source, evidence)
case(environment, on)
det(environment, the)
compound(environment, micrometeorite)
nmod(evidence, environment)
punct(be, .)
amod(information, direct)
nsubj:pass(obtain, information)
aux(obtain, have)
aux:pass(obtain, be)
root(ROOT, obtain)
case(rocket, from)
obl(obtain, rocket)
cc(satellite, and)
conj(rocket, satellite)
acl(rocket, equip)
case(sensor, with)
compound(sensor, impact)
obl(equip, sensor)
punct(obtain, .)
case(addition, in)
obl(extrapolate, addition)
punct(extrapolate, ,)
det(distribution, the)
compound(distribution, size)
nsubj:pass(extrapolate, distribution)
acl(distribution, obtain)
case(observation, from)
amod(observation, visual)
cc(radar, and)
conj(visual, radar)
obl(obtain, observation)
case(meteor, of)
nmod(observation, meteor)
aux(extrapolate, may)
aux:pass(extrapolate, be)
root(ROOT, extrapolate)
case(domain, to)
det(domain, the)
compound(domain, micrometeorite)
obl(extrapolate, domain)
punct(extrapolate, .)
case(brightness, from)
det(brightness, the)
obl(derive, brightness)
case(component, of)
det(component, the)
compound(component, f)
nmod(brightness, component)
case(corona, of)
det(corona, the)
amod(corona, solar)
nmod(component, corona)
cc(brightness, and)
det(brightness, the)
conj(component, brightness)
case(light, of)
det(light, the)
amod(light, zodiacal)
nmod(brightness, light)
punct(estimate, ,)
det(estimate, a)
nsubj:pass(derive, estimate)
case(size, of)
det(size, the)
compound(size, particle)
nmod(estimate, size)
punct(concentration, ,)
conj(size, concentration)
punct(distribution, ,)
cc(distribution, and)
amod(distribution, spatial)
conj(size, distribution)
aux(derive, can)
aux:pass(derive, be)
root(ROOT, derive)
case(region, for)
obl(derive, region)
case(space, of)
nmod(region, space)
case(plane, near)
det(plane, the)
amod(plane, ecliptic)
nmod(region, plane)
punct(source, .)
det(source, another)
amod(source, important)
nsubj(analysis, source)
case(evidence, of)
nmod(source, evidence)
advmod(receive, only)
advmod(receive, recently)
acl(source, receive)
amod(attention, much)
obj(receive, attention)
cop(analysis, be)
det(analysis, the)
conj(derive, analysis)
case(dust, of)
amod(dust, atmospheric)
nmod(analysis, dust)
case(component, for)
det(component, a)
amod(component, meteoritic)
nmod(analysis, component)
punct(analysis, .)
det(core, the)
nsubj(valuable, core)
case(sediment, of)
amod(sea, deep)
punct(sea, -)
compound(sediment, sea)
nmod(core, sediment)
cc(content, and)
conj(sediment, content)
case(collector, of)
nmod(content, collector)
case(region, in)
compound(region, remote)
nmod(collector, region)
cop(valuable, be)
root(ROOT, valuable)
case(category, in)
det(category, this)
obl(valuable, category)
punct(valuable, .)
det(data, the)
nsubj(provide, data)
root(ROOT, provide)
det(measure, a)
obj(provide, measure)
case(mass, of)
det(mass, the)
amod(mass, total)
nmod(measure, mass)
case(incident, of)
amod(material, cosmic)
compound(incident, material)
nmod(mass, incident)
case(Earth, upon)
det(Earth, the)
nmod(incident, Earth)
punct(provide, .)
det(evidence, the)
amod(evidence, direct)
nsubj:pass(obtain, evidence)
case(environment, on)
det(environment, the)
compound(environment, micrometeorite)
nmod(evidence, environment)
case(Earth, near)
det(Earth, the)
nmod(environment, Earth)
aux:pass(obtain, be)
root(ROOT, obtain)
case(sensor, from)
amod(sensor, piezoelectric)
obl(obtain, sensor)
punct(microphone, ()
advmod(microphone, essentially)
appos(sensor, microphone)
punct(microphone, ))
cc(gage, and)
case(gage, from)
compound(gage, wire)
conj(sensor, gage)
punct(obtain, ;)
punct(obtain, ;)
det(instrument, these)
nsubj:pass(install, instrument)
aux:pass(install, be)
parataxis(obtain, install)
case(rocket, on)
obl(install, rocket)
punct(satellite, ,)
conj(rocket, satellite)
punct(probe, ,)
cc(probe, and)
compound(probe, space)
conj(rocket, probe)
punct(obtain, .)
advmod(collect, statistically)
punct(collect, ,)
det(data, the)
advmod(significant, most)
amod(data, significant)
nsubj:pass(collect, data)
aux(collect, have)
aux:pass(collect, be)
root(ROOT, collect)
case(sensor, from)
det(sensor, the)
obl(collect, sensor)
case(Alpha, on)
nummod(Alpha, 1958)
nmod(sensor, Alpha)
punct(explorer, ()
appos(Alpha, explorer)
nummod(explorer, 1)
punct(explorer, ))
punct(explorer, ,)
nummod(Delta, 1958)
appos(Alpha, Delta)
nummod(Sputnik, 2)
punct(Sputnik, ()
appos(Delta, Sputnik)
nummod(Sputnik, 3)
punct(Sputnik, ))
punct(Eta, ,)
cc(Eta, and)
nummod(Eta, 1959)
conj(Alpha, Eta)
punct(Vanguard, ()
appos(Eta, Vanguard)
nummod(Vanguard, 3)
punct(Vanguard, ))
punct(collect, .)
det(vehicle, these)
nsubj(collect, vehicle)
punct(vehicle, ,)
case(area, with)
amod(area, large)
amod(area, sensitive)
nmod(vehicle, area)
punct(collect, ,)
aux(collect, have)
root(ROOT, collect)
obj(collect, data)
case(time, for)
amod(time, long)
amod(time, enough)
obl(collect, time)
mark(give, to)
advcl(collect, give)
amod(rate, reliable)
compound(rate, impact)
obj(give, rate)
case(period, for)
det(period, the)
nmod(rate, period)
case(exposure, of)
nmod(period, exposure)
punct(collect, .)
amod(vehicle, many)
amod(vehicle, other)
nsubj(contribute, vehicle)
case(product, with)
amod(product, smaller)
amod(area, sensitive)
punct(area, -)
compound(product, area)
compound(time, exposure)
punct(time, -)
compound(product, time)
nmod(vehicle, product)
root(ROOT, contribute)
det(information, some)
obj(contribute, information)
punct(contribute, .)
det(rate, the)
compound(rate, impact)
nsubj(Af, rate)
case(Alpha, on)
compound(Alpha, 1958)
nmod(rate, Alpha)
case(event, for)
nummod(event, 153)
nmod(Alpha, event)
cop(Af, be)
root(ROOT, Af)
case(particle, for)
nmod(Af, particle)
case(mass, of)
nmod(particle, mass)
amod(particle, greater)
case(Af, than)
obl(greater, Af)
punct(Dubin, ()
appos(Af, Dubin)
punct(Dubin, ,)
appos(Dubin, 1960)
punct(Dubin, ))
punct(Af, ;)
punct(Af, ;)
det(threshold, this)
amod(threshold, mass)
nsubj:pass(derive, threshold)
aux:pass(derive, be)
parataxis(Af, derive)
case(calibration, from)
det(calibration, the)
compound(calibration, detector)
obl(derive, calibration)
cc(velocity, and)
det(velocity, a)
amod(velocity, assume)
compound(velocity, impact)
conj(calibration, velocity)
case(Af, of)
nmod(velocity, Af)
punct(velocity, .)
det(show, the)
compound(show, data)
compound(variation, show)
amod(variation, daily)
cc(diurnal, and)
conj(daily, diurnal)
conj(calibration, variation)
punct(Af, .)
nummod(cent, Ninety)
compound(cent, per)
nsubj(occur, cent)
case(impact, of)
det(impact, the)
compound(record, 153)
amod(impact, record)
nmod(cent, impact)
root(ROOT, occur)
case(midnight, between)
obl(occur, midnight)
cc(noon, and)
conj(midnight, noon)
punct(much, ,)
cc(much, and)
case(day, from)
obl(much, day)
case(day, to)
nmod(day, day)
det(variation, the)
nsubj(much, variation)
case(rate, of)
det(rate, the)
nmod(variation, rate)
cop(much, be)
advmod(much, as)
conj(occur, much)
case(order, as)
det(order, a)
obl(much, order)
case(magnitude, of)
nmod(order, magnitude)
punct(occur, .)
nsubj(conclude, one)
aux(conclude, may)
root(ROOT, conclude)
mark(concentrate, that)
nsubj:pass(concentrate, most)
case(material, of)
det(material, the)
amod(material, detect)
amod(material, micrometeoritic)
nmod(most, material)
aux:pass(concentrate, be)
ccomp(conclude, concentrate)
case(stream, in)
amod(stream, orbital)
obl(concentrate, stream)
nsubj(intersect, which)
acl:relcl(stream, intersect)
det(Earth, the)
nmod:poss(orbit, Earth)
case(Earth, 's)
obj(intersect, orbit)
punct(conclude, .)
expl(be, there)
aux(be, have)
root(ROOT, be)
amod(report, contradictory)
nsubj(be, report)
case(2, from)
nummod(Delta, 1958)
compound(2, Delta)
nmod(report, 2)
punct(believe, ,)
cc(believe, and)
det(data, the)
nsubj:pass(believe, data)
acl(data, quote)
advmod(quote, here)
aux:pass(believe, be)
conj(be, believe)
mark(reliable, to)
cop(reliable, be)
det(reliable, the)
advmod(reliable, more)
xcomp(believe, reliable)
punct(be, .)
case(May, on)
obl(occur, May)
nummod(May, 15)
punct(occur, ,)
det(increase, a)
advmod(large, very)
amod(increase, large)
nsubj(occur, increase)
root(ROOT, occur)
case(Af, with)
obl(occur, Af)
case(mass, of)
nmod(Af, mass)
case(Af, between)
nmod(Af, Af)
cc(Af, and)
conj(Af, Af)
punct(occur, ;)
punct(occur, ;)
case(day, for)
det(day, the)
amod(day, next)
nummod(day, two)
obl(Af, day)
punct(Af, ,)
det(rate, the)
compound(rate, impact)
nsubj(Af, rate)
cop(Af, be)
parataxis(occur, Af)
punct(Af, ;)
punct(occur, ;)
cc(less, and)
case(day, for)
det(day, the)
amod(day, next)
nummod(day, nine)
obl(less, day)
punct(less, ,)
det(rate, the)
compound(rate, impact)
nsubj(Af, rate)
cop(Af, be)
advmod(Af, less)
case(Af, than)
conj(Af, Af)
punct(Nazarova, ()
appos(Af, Nazarova)
punct(Nazarova, ,)
appos(Nazarova, 1960)
punct(Nazarova, ))
punct(occur, .)
det(data, the)
nsubj(indicate, data)
case(day, for)
det(day, the)
amod(day, first)
nmod(data, day)
root(ROOT, indicate)
det(stream, a)
compound(stream, meteor)
obj(indicate, stream)
case(concentration, with)
det(concentration, a)
advmod(high, very)
amod(concentration, high)
nmod(stream, concentration)
case(particle, of)
nmod(concentration, particle)
cc(lead, and)
aux(lead, may)
aux(lead, have)
conj(indicate, lead)
case(estimate, to)
det(estimate, the)
amod(estimate, high)
obl(lead, estimate)
case(flux, of)
compound(flux, micrometeorite)
nmod(estimate, flux)
punct(indicate, .)
amod(data, preliminary)
nsubj(give, data)
case(Eta, from)
nummod(Eta, 1959)
nmod(data, Eta)
root(ROOT, give)
det(rate, a)
amod(rate, average)
compound(rate, impact)
obj(give, rate)
case(Af, of)
nmod(rate, Af)
case(mass, for)
nmod(rate, mass)
amod(rate, larger)
case(Af, than)
obl(larger, Af)
case(event, for)
advmod(1000, about)
nummod(event, 1000)
obl(larger, event)
case(period, in)
det(period, a)
nummod(day, 22)
punct(day, -)
compound(period, day)
nmod(event, period)
punct(LaGow, ()
appos(period, LaGow)
cc(Alexander, and)
conj(LaGow, Alexander)
punct(LaGow, ,)
nmod:tmod(LaGow, 1960)
punct(LaGow, ))
punct(give, .)
det(rate, the)
compound(rate, day)
punct(day, -)
case(day, to)
punct(day, -)
nmod(day, day)
root(ROOT, rate)
acl(rate, varied)
case(factor, by)
advmod(factor, less)
fixed(less, than)
det(factor, a)
obl(varied, factor)
case(4.5, of)
nmod(factor, 4.5)
punct(rate, .)
det(data, the)
nsubj:pass(analyze, data)
aux(analyze, have)
advmod(analyze, not)
advmod(analyze, yet)
aux:pass(analyze, be)
root(ROOT, analyze)
case(variation, for)
amod(variation, diurnal)
obl(analyze, variation)
punct(analyze, .)
root(ROOT, note)
mark(time, that)
det(threshold, the)
amod(threshold, mass)
nsubj(time, threshold)
cop(time, be)
nummod(time, four)
ccomp(note, time)
nsubj(Alpha, that)
case(Alpha, of)
nummod(Alpha, 1958)
nmod(time, Alpha)
cc(fifth, and)
mark(fifth, that)
det(flux, the)
nsubj(fifth, flux)
cop(fifth, be)
nummod(fifth, one)
conj(time, fifth)
advmod(large, as)
obl(fifth, large)
punct(note, .)
mark(assume, if)
nsubj(assume, one)
advcl(obtain, assume)
mark(change, that)
det(flux, the)
amod(flux, average)
nsubj(change, flux)
aux(change, do)
advmod(change, not)
ccomp(assume, change)
case(measurement, between)
obl(change, measurement)
punct(obtain, ,)
det(curve, a)
amod(distribution, mass)
punct(distribution, -)
compound(curve, distribution)
nsubj:pass(obtain, curve)
aux:pass(obtain, be)
root(ROOT, obtain)
nsubj(relate, which)
ccomp(obtain, relate)
det(flux, the)
obj(relate, flux)
case(particle, of)
nmod(flux, particle)
amod(flux, larger)
case(radius, than)
det(radius, a)
amod(radius, give)
obl(larger, radius)
case(power, to)
det(power, the)
amod(power, inverse)
compound(2, 7)
punct(2, /)
nummod(power, 2)
nmod(radius, power)
case(radius, of)
det(radius, the)
nmod(power, radius)
punct(obtain, .)
compound(probe, Space)
nsubj(yield, probe)
aux(yield, have)
root(ROOT, yield)
amod(information, little)
obj(yield, information)
punct(information, .)
appos(information, Pioneer)
nummod(Pioneer, 1)
punct(record, ,)
conj(yield, record)
det(decrease, a)
obj(record, decrease)
case(flux, in)
nmod(decrease, flux)
case(distance, with)
obl(record, distance)
case(Earth, from)
det(Earth, the)
nmod(distance, Earth)
case(basis, on)
det(basis, the)
obl(record, basis)
case(count, of)
nummod(count, 11)
nmod(basis, count)
case(hour, in)
nummod(hour, 9)
nmod(basis, hour)
punct(yield, .)
case(detector, with)
obl(indicate, detector)
amod(detector, sensitive)
case(interval, to)
nummod(interval, three)
amod(interval, mass)
obl(sensitive, interval)
cc(count, and)
case(count, base)
case(count, on)
det(count, a)
amod(count, few)
obl(sensitive, count)
punct(indicate, ,)
det(probe, the)
amod(probe, second)
cc(third, and)
conj(second, third)
amod(probe, russian)
compound(probe, space)
nsubj(indicate, probe)
root(ROOT, indicate)
mark(less, that)
det(flux, the)
nsubj(less, flux)
case(particle, of)
det(particle, the)
amod(particle, smallest)
nmod(flux, particle)
acl(particle, detect)
cop(less, be)
ccomp(indicate, less)
case(that, than)
obl(less, that)
case(one, of)
amod(one, larger)
nmod(that, one)
punct(indicate, .)
aux:pass(base, be)
advcl(validity, base)
case(event, on)
advmod(few, so)
amod(event, few)
obl(base, event)
punct(validity, ,)
det(result, these)
nsubj(validity, result)
cop(validity, be)
case(validity, of)
amod(validity, dubious)
root(ROOT, validity)
punct(validity, .)
det(calibration, the)
nsubj(uncertain, calibration)
case(sensor, of)
compound(sensor, piezoelectric)
nmod(calibration, sensor)
case(term, in)
nmod(calibration, term)
case(parameter, of)
det(parameter, the)
compound(parameter, particle)
nmod(term, parameter)
cop(uncertain, be)
advmod(uncertain, very)
root(ROOT, uncertain)
punct(uncertain, .)
amod(worker, many)
nsubj(believe, worker)
root(ROOT, believe)
mark(proportional, that)
det(response, the)
nsubj(proportional, response)
cop(proportional, be)
ccomp(believe, proportional)
case(momentum, to)
det(momentum, the)
compound(momentum, incident)
obl(proportional, momentum)
case(particle, of)
det(particle, the)
nmod(momentum, particle)
punct(momentum, ,)
det(relation, a)
appos(momentum, relation)
acl(relation, deduce)
case(result, from)
compound(result, laboratory)
obl(deduce, result)
advmod(extrapolate, linearly)
conj(deduce, extrapolate)
case(velocity, to)
amod(velocity, meteoritic)
obl(extrapolate, velocity)
punct(believe, .)
advmod(expect, however)
punct(expect, ,)
nsubj(expect, one)
aux(expect, must)
root(ROOT, expect)
mark(cause, that)
nsubj(cause, vaporization)
cc(ejection, and)
conj(vaporization, ejection)
case(material, of)
nmod(vaporization, material)
case(impact, by)
compound(impact, hypervelocity)
nmod(material, impact)
aux(cause, would)
ccomp(expect, cause)
det(deviation, a)
obj(cause, deviation)
case(relationship, from)
det(relationship, a)
amod(relationship, linear)
nmod(deviation, relationship)
punct(expect, .)
case(States, in)
det(States, the)
compound(States, United)
obl(calibrate, States)
punct(calibrate, ,)
nsubj:pass(calibrate, most)
case(sensor, of)
det(sensor, the)
nmod(most, sensor)
aux:pass(calibrate, be)
root(ROOT, calibrate)
mark(drop, by)
advcl(calibrate, drop)
amod(sphere, small)
obj(drop, sphere)
case(surface, on)
nmod:poss(surface, they)
amod(surface, sensitive)
obl(drop, surface)
punct(calibrate, .)
det(experimenter, the)
amod(experimenter, russian)
nsubj(claim, experimenter)
root(ROOT, claim)
mark(cause, that)
advmod(fraction, only)
det(fraction, a)
amod(fraction, small)
nsubj:pass(cause, fraction)
case(impulse, of)
det(impulse, the)
nmod(fraction, impulse)
case(sensor, from)
det(sensor, the)
nmod(impulse, sensor)
aux:pass(cause, be)
ccomp(claim, cause)
case(momentum, by)
det(momentum, the)
compound(momentum, incident)
obl(cause, momentum)
case(remainder, with)
det(remainder, the)
nmod(momentum, remainder)
cop(momentum, be)
acl(remainder, momentum)
case(material, of)
amod(material, eject)
nmod(momentum, material)
case(sensor, from)
det(sensor, the)
nmod(momentum, sensor)
punct(claim, .)
det(momentum, this)
punct(momentum, ``)
compound(momentum, ejection)
punct(ejection, '')
nsubj(related, momentum)
cop(related, be)
advmod(related, linearly)
root(ROOT, related)
case(energy, to)
det(energy, the)
compound(energy, particle)
obl(related, energy)
punct(related, .)
nsubj(quote, they)
root(ROOT, quote)
case(threshold, about)
det(threshold, the)
amod(threshold, same)
compound(threshold, mass)
obl(quote, threshold)
case(that, as)
obl(quote, that)
case(apparatus, of)
det(apparatus, the)
compound(apparatus, U.S.)
nmod(that, apparatus)
punct(threshold, ,)
cc(threshold, but)
det(threshold, a)
compound(threshold, momentum)
conj(quote, threshold)
advmod(40, about)
nummod(time, 40)
obl:npmod(greater, time)
amod(threshold, greater)
punct(quote, .)
expl(be, there)
root(ROOT, be)
det(difference, a)
nsubj(be, difference)
case(arrangement, in)
det(arrangement, the)
amod(arrangement, experimental)
nmod(difference, arrangement)
punct(be, ,)
mark(attach, in)
fixed(in, that)
det(microphone, the)
compound(microphone, U.S.)
nsubj:pass(attach, microphone)
aux:pass(attach, be)
acl(difference, attach)
advmod(attach, directly)
case(skin, to)
det(skin, the)
compound(skin, vehicle)
obl(attach, skin)
mark(isolate, while)
det(instrument, the)
amod(instrument, russian)
nsubj:pass(isolate, instrument)
aux:pass(isolate, be)
advcl(attach, isolate)
case(skin, from)
det(skin, the)
obl(isolate, skin)
punct(be, .)
det(mass, the)
compound(mass, threshold)
nsubj:pass(derive, mass)
aux:pass(derive, be)
root(ROOT, derive)
case(threshold, from)
det(threshold, the)
compound(threshold, momentum)
obl(derive, threshold)
case(assumption, with)
det(assumption, the)
nmod(threshold, assumption)
case(velocity, of)
det(velocity, a)
compound(impact, mean)
compound(velocity, impact)
nmod(assumption, velocity)
case(Af, of)
nmod(velocity, Af)
case(work, in)
det(work, the)
compound(work, U.S.)
nmod(velocity, work)
cc(Af, and)
conj(work, Af)
case(work, in)
det(work, the)
compound(work, U.S.S.R.)
nmod(work, work)
punct(derive, .)
det(mass, the)
compound(mass, threshold)
nsubj(correspond, mass)
case(Af, of)
case(Af, about)
nmod(mass, Af)
root(ROOT, correspond)
case(sphere, to)
det(sphere, a)
nummod(M-, 10)
punct(M-, -)
compound(sphere, M-)
compound(sphere, diameter)
obl(correspond, sphere)
case(Af, of)
compound(Af, density)
nmod(sphere, Af)
punct(correspond, .)
advmod(unreliable, however)
punct(unreliable, ,)
det(conversion, the)
nsubj(unreliable, conversion)
case(mass, from)
nmod(conversion, mass)
case(size, to)
nmod(mass, size)
cop(unreliable, be)
conj(correspond, unreliable)
punct(unreliable, ,)
mark(give, since)
amod(meteor, many)
amod(meteor, photographic)
nsubj(give, meteor)
advcl(unreliable, give)
obj(give, evidence)
case(structure, of)
det(structure, a)
amod(structure, fluffy)
punct(structure, ,)
advmod(bound, loosely)
amod(structure, bound)
compound(structure, meteorite)
nmod(evidence, structure)
case(density, with)
nmod(structure, density)
advmod(low, as)
advmod(density, low)
case(Af, as)
obl(low, Af)
punct(low, .)
case(what, to)
det(extent, what)
obl(unknown, extent)
amod(density, such)
amod(density, low)
nsubj(apply, density)
acl:relcl(extent, apply)
case(micrometeorite, to)
obl(apply, micrometeorite)
cop(unknown, be)
conj(unreliable, unknown)
punct(correspond, .)
det(value, the)
compound(value, velocity)
nsubj(open, value)
acl(value, use)
cop(open, be)
advmod(open, also)
root(ROOT, open)
case(question, to)
det(question, some)
obl(open, question)
punct(open, ;)
punct(open, ;)
mark(orbit, if)
det(fraction, a)
amod(fraction, substantial)
nsubj(orbit, fraction)
case(dust, of)
det(dust, the)
nmod(fraction, dust)
aux(orbit, be)
advcl(open, orbit)
case(Earth, about)
det(Earth, the)
obl(orbit, Earth)
punct(orbit, ,)
advmod(third, only)
advmod(one, about)
nummod(third, one)
advmod(use, third)
det(velocity, the)
compound(mention, above)
punct(mention, -)
amod(velocity, mention)
amod(velocity, average)
nsubj:pass(use, velocity)
aux(use, should)
aux:pass(use, be)
conj(orbit, use)
mark(derive, in)
advcl(use, derive)
det(mass, the)
obj(derive, mass)
punct(open, .)
amod(light, Zodiacal)
nsubj(give, light)
cc(gegenschein, and)
det(gegenschein, the)
conj(light, gegenschein)
root(ROOT, give)
det(evidence, some)
obj(give, evidence)
case(blanket, for)
det:predet(blanket, such)
det(blanket, a)
compound(blanket, dust)
nmod(evidence, blanket)
punct(blanket, ,)
det(phenomenon, a)
appos(evidence, phenomenon)
advmod(expect, also)
mark(expect, to)
aux:pass(expect, be)
advcl(give, expect)
mark(orbit, if)
det(dust, the)
nsubj(orbit, dust)
case(capture, before)
nmod(dust, capture)
cop(orbit, be)
case(orbit, in)
amod(orbit, circular)
advcl(expect, orbit)
case(sun, about)
det(sun, the)
nmod(orbit, sun)
punct(orbit, ,)
mark(indicate, as)
advcl(orbit, indicate)
case(trend, by)
det(trend, the)
obl(indicate, trend)
case(meteor, of)
det(meteor, the)
amod(meteor, smaller)
amod(meteor, visible)
nmod(trend, meteor)
punct(give, .)
det(variation, the)
amod(variation, diurnal)
nsubj(dependence, variation)
case(flux, in)
det(flux, the)
amod(flux, observe)
nmod(variation, flux)
aux(dependence, may)
cop(dependence, be)
advmod(dependence, partly)
case(dependence, due)
fixed(due, to)
det(dependence, the)
root(ROOT, dependence)
case(sensitivity, of)
det(sensitivity, the)
compound(sensitivity, detector)
nmod(dependence, sensitivity)
case(velocity, on)
det(velocity, the)
compound(velocity, incident)
nmod(sensitivity, velocity)
punct(dependence, .)
det(flux, the)
nsubj:pass(estimate, flux)
case(micrometeorite, of)
nmod(flux, micrometeorite)
case(neighborhood, in)
det(neighborhood, the)
nmod(flux, neighborhood)
case(Earth, of)
det(Earth, the)
nmod(neighborhood, Earth)
aux(estimate, can)
aux:pass(estimate, be)
root(ROOT, estimate)
case(extrapolation, by)
obl(estimate, extrapolation)
case(radar, from)
nmod(extrapolation, radar)
cc(data, and)
amod(data, visual)
compound(data, meteor)
conj(radar, data)
punct(estimate, . )
det(summary, a)
nsubj:pass(give, summary)
case(data, of)
compound(data, meteorite)
nmod(summary, data)
punct(summary, ,)
acl(summary, prepare)
case(Whipple, by)
obl(prepare, Whipple)
punct(1958, ()
appos(Whipple, 1958)
punct(1958, ))
case(basis, on)
det(basis, the)
obl(prepare, basis)
case(evidence, of)
amod(evidence, photographic)
punct(visual, ,)
conj(photographic, visual)
punct(radar, ,)
cc(radar, and)
conj(photographic, radar)
nmod(basis, evidence)
punct(give, ,)
aux:pass(give, be)
root(ROOT, give)
case(table, in)
obl(give, table)
nummod(table, 5)
case(1, -)
nmod(5, 1)
punct(give, .)
case(mass, from)
det(mass, a)
amod(mass, estimate)
obl(give, mass)
case(g, of)
nummod(g, 25)
nmod(mass, g)
case(meteorite, for)
det(meteorite, a)
amod(magnitude, zero)
punct(magnitude, -)
compound(meteorite, magnitude)
nmod(g, meteorite)
punct(derive, ,)
det(mass, the)
amod(mass, other)
nsubj:pass(derive, mass)
aux:pass(derive, be)
acl:relcl(meteorite, derive)
case(assumption, with)
det(assumption, the)
obl(derive, assumption)
case(decrease, of)
det(decrease, a)
amod(decrease, mass)
nmod(assumption, decrease)
case(factor, by)
det(factor, a)
nmod(decrease, factor)
case(2.512, of)
nmod(factor, 2.512)
case(increase, for)
det(increase, each)
compound(increase, unit)
nmod(factor, increase)
case(magnitude, in)
nmod(increase, magnitude)
punct(give, .)
det(radius, the)
nsubj:pass(calculate, radius)
aux:pass(calculate, be)
root(ROOT, calculate)
case(mass, from)
det(mass, the)
obl(calculate, mass)
mark(assume, by)
advcl(calculate, assume)
obj(assume, sphere)
case(density, of)
nmod(sphere, density)
root(ROOT, Af)
case(particle, except)
case(particle, for)
det(particle, the)
amod(particle, smallest)
nmod(Af, particle)
punct(particle, ,)
nsubj(have, which)
aux(have, must)
acl:relcl(particle, have)
det(density, a)
amod(density, higher)
amod(density, mass)
obj(have, density)
mark(remain, to)
acl(density, remain)
case(system, in)
det(system, the)
amod(system, solar)
obl(remain, system)
case(presence, in)
det(presence, the)
nmod(system, presence)
case(pressure, of)
amod(radiation, solar)
punct(radiation, -)
compound(pressure, radiation)
nmod(presence, pressure)
punct(Af, .)
det(value, the)
compound(value, flux)
nsubj(particle, value)
cop(particle, be)
case(particle, for)
det(particle, all)
root(ROOT, particle)
case(mass, with)
nmod(particle, mass)
amod(mass, greater)
case(mass, than)
det(mass, the)
amod(mass, give)
obl(greater, mass)
cc(base, and)
aux:pass(base, be)
conj(particle, base)
case(estimate, on)
det(estimate, a)
obl(base, estimate)
case(number, of)
det(number, the)
nmod(estimate, number)
case(meteor, of)
amod(meteor, visual)
nmod(number, meteor)
punct(particle, .)
nsubj:pass(assume, it)
aux:pass(assume, be)
root(ROOT, assume)
mark(increase, that)
det(value, the)
compound(value, flux)
nsubj(increase, value)
ccomp(assume, increase)
case(factor, by)
det(factor, a)
obl(increase, factor)
case(2.512, of)
nmod(factor, 2.512)
case(magnitude, per)
nmod(2.512, magnitude)
punct(increase, ,)
case(accordance, in)
obl(increase, accordance)
case(opinion, with)
det(opinion, the)
nmod(accordance, opinion)
mark(constant, that)
det(flux, the)
amod(flux, total)
compound(flux, mass)
nsubj(constant, flux)
case(range, in)
det(range, each)
compound(range, unit)
nmod(flux, range)
case(magnitude, in)
nmod(range, magnitude)
cop(constant, be)
acl(opinion, constant)
punct(assume, .)
det(value, the)
nsubj(agree, value)
root(ROOT, agree)
case(data, with)
det(data, the)
obl(agree, data)
case(Alpha, from)
nummod(Alpha, 1958)
obl(agree, Alpha)
cc(Eta, and)
nummod(Eta, 1959)
conj(Alpha, Eta)
punct(agree, .)
det(figure, the)
nsubj:pass(derive, figure)
case(column, in)
det(column, the)
amod(column, next)
punct(next, -)
case(last, to)
punct(last, -)
amod(column, last)
nmod(figure, column)
aux:pass(derive, be)
root(ROOT, derive)
case(assumption, with)
det(assumption, the)
obl(derive, assumption)
case(cent, of)
nummod(cent, 50)
compound(cent, per)
nmod(assumption, cent)
acl(cent, shield)
case(Earth, by)
det(Earth, the)
obl(shield, Earth)
punct(derive, ;)
punct(derive, ;)
advmod(apply, hence)
punct(apply, ,)
det(figure, these)
nsubj(apply, figure)
parataxis(derive, apply)
advmod(apply, immediately)
case(atmosphere, above)
det(Earth, the)
nmod:poss(atmosphere, Earth)
case(Earth, 's)
obl(apply, atmosphere)
punct(derive, .)
det(flux, the)
amod(flux, unshield)
nsubj:pass(give, flux)
aux:pass(give, be)
root(ROOT, give)
case(column, in)
det(column, the)
amod(column, last)
obl(give, column)
punct(give, ;)
punct(give, ;)
det(figure, these)
nsubj(constitute, figure)
parataxis(give, constitute)
det(estimate, the)
amod(estimate, best)
obj(constitute, estimate)
case(flux, for)
det(flux, the)
nmod(estimate, flux)
case(space, in)
amod(space, interplanetary)
nmod(flux, space)
case(Earth, near)
det(Earth, the)
nmod(space, Earth)
punct(give, .)
advmod(less, of)
fixed(of, course)
punct(less, ,)
mark(be, if)
expl(be, there)
advcl(less, be)
det(blanket, a)
compound(blanket, dust)
nsubj(be, blanket)
case(Earth, around)
det(Earth, the)
nmod(blanket, Earth)
punct(less, ,)
det(flux, the)
nsubj(less, flux)
case(space, in)
amod(space, interplanetary)
nmod(flux, space)
aux(less, should)
cop(less, be)
root(ROOT, less)
case(figure, than)
det(figure, the)
obl(less, figure)
acl(figure, give)
advmod(give, here)
punct(less, .)
root(ROOT, note)
mark(one, that)
det(scale, the)
amod(scale, mass)
nsubj(one, scale)
cop(one, be)
ccomp(note, one)
case(two, to)
nummod(order, two)
nmod(one, order)
case(magnitude, of)
nmod(order, magnitude)
amod(order, greater)
mark(use, than)
nsubj(use, some)
advmod(use, previously)
advcl(greater, use)
punct(note, ;)
punct(note, ;)
case(example, for)
obl(derive, example)
punct(derive, ,)
nsubj(derive, Jacchia)
punct(1948, ()
appos(Jacchia, 1948)
punct(1948, ))
ccomp(note, derive)
det(scale, a)
obj(derive, scale)
case(g, of)
nummod(g, 0.15)
nmod(scale, g)
case(Af, for)
det(Af, a)
nmod(g, Af)
punct(meteorite, ,)
amod(magnitude, zero)
punct(magnitude, -)
compound(meteorite, magnitude)
appos(Af, meteorite)
punct(note, .)
det(scale, the)
amod(scale, older)
nsubj:pass(base, scale)
aux:pass(base, be)
root(ROOT, base)
case(estimate, on)
amod(estimate, theoretical)
obl(base, estimate)
case(efficiency, of)
det(efficiency, the)
compound(efficiency, conversion)
nmod(estimate, efficiency)
case(energy, of)
amod(energy, kinetic)
nmod(efficiency, energy)
case(light, into)
nmod(efficiency, light)
punct(base, .)
det(scale, the)
amod(scale, mass)
nsubj:pass(derive, scale)
acl(scale, use)
case(Table, in)
obl(use, Table)
obl:tmod(use, 5)
case(1, -)
nmod(5, 1)
aux:pass(derive, be)
root(ROOT, derive)
case(assumption, on)
det(assumption, the)
obl(derive, assumption)
mark(related, that)
det(motion, the)
nsubj(related, motion)
case(trail, of)
det(trail, the)
compound(trail, glow)
nmod(motion, trail)
cop(related, be)
acl(assumption, related)
case(transfer, to)
det(transfer, the)
compound(transfer, momentum)
obl(related, transfer)
case(trail, to)
det(trail, the)
nmod(transfer, trail)
case(meteorite, by)
det(meteorite, the)
nmod(trail, meteorite)
punct(related, ,)
advcl(related, permit)
det(calculation, the)
obj(permit, calculation)
case(mass, of)
det(mass, the)
nmod(calculation, mass)
mark(know, if)
det(velocity, the)
nsubj:pass(know, velocity)
aux:pass(know, be)
acl(calculation, know)
punct(Cook, ()
nsubj:pass(know, Cook)
cc(Whipple, and)
conj(Cook, Whipple)
punct(Cook, ,)
conj(Cook, 1958)
punct(Cook, ))
punct(derive, .)
det(distribution, a)
compound(distribution, concentration)
nsubj:pass(derive, distribution)
aux(derive, have)
aux:pass(derive, be)
parataxis(derive, derive)
case(observation, from)
compound(observation, radar)
obl(derive, observation)
amod(observation, sensitive)
case(magnitude, to)
det(magnitude, the)
amod(magnitude, fifteenth)
obl(sensitive, magnitude)
punct(man, ()
appos(magnitude, man)
cc(Eshleman, and)
conj(man, Eshleman)
punct(man, ,)
conj(man, 1959)
punct(man, ))
punct(extrapolation, .)
appos(magnitude, extrapolation)
case(relationship, of)
det(relationship, this)
nmod(extrapolation, relationship)
case(magnitude, through)
det(magnitude, the)
amod(magnitude, thirtieth)
nmod(relationship, magnitude)
acl:relcl(extrapolation, cover)
det(range, the)
obj(cover, range)
case(micrometeorite, of)
nmod(range, micrometeorite)
punct(derive, .)
det(equation, the)
amod(equation, approximate)
nsubj(Af, equation)
cop(Af, be)
root(ROOT, Af)
punct(Af, ,)
advmod(number, where)
nsubj(number, N)
cop(number, be)
det(number, the)
acl:relcl(Af, number)
case(Af, of)
nmod(number, Af)
case(density, with)
compound(density, electron)
compound(density, line)
punct(density, -)
obl(greater, density)
amod(number, greater)
obl(equal, than)
cc(equal, or)
conj(greater, equal)
case(Af, to)
obl(equal, Af)
punct(proportional, ,)
cc(proportional, and)
nsubj(proportional, q)
cop(proportional, be)
conj(Af, proportional)
case(mass, to)
det(mass, the)
obl(proportional, mass)
case(meteorite, of)
det(meteorite, the)
nmod(mass, meteorite)
punct(proportional, .)
advmod(proportional, therefore)
punct(proportional, ,)
nsubj(proportional, N)
cop(proportional, be)
advmod(proportional, inversely)
parataxis(Af, proportional)
case(radius, to)
det(radius, the)
obl(proportional, radius)
acl(radius, cube)
cc(agreement, and)
case(agreement, in)
amod(agreement, fair)
conj(cube, agreement)
case(power, with)
det(power, the)
compound(power, inverse)
compound(2, 7)
case(2, /)
nmod(inverse, 2)
nmod(agreement, power)
acl(power, derive)
case(Alpha, from)
nummod(Alpha, 1958)
obl(derive, Alpha)
cc(data, and)
nummod(data, 1959)
compound(data, Eta)
conj(Alpha, data)
punct(Af, .)
case(magnitude, at)
det(magnitude, the)
amod(magnitude, fifteenth)
obl(order, magnitude)
punct(order, ,)
nsubj(order, Af)
punct(magnitude, ,)
cc(magnitude, and)
case(magnitude, at)
det(magnitude, the)
nummod(fifth, twenty)
punct(fifth, -)
amod(magnitude, fifth)
conj(Af, magnitude)
punct(magnitude, ,)
appos(magnitude, Af)
punct(magnitude, .)
det(flux, these)
amod(flux, extrapolate)
nsubj(order, flux)
cop(order, be)
case(order, about)
det(order, a)
root(ROOT, order)
case(magnitude, of)
nmod(order, magnitude)
advmod(order, less)
case(value, than)
det(value, the)
obl(less, value)
case(data, from)
det(data, the)
compound(data, satellite)
nmod(value, data)
cc(figure, and)
det(figure, the)
conj(data, figure)
case(table, in)
nmod:poss(table, Whipple)
case(Whipple, 's)
nmod(figure, table)
punct(order, .)
det(extrapolation, the)
nsubj(error, extrapolation)
aux(error, may)
cop(error, be)
case(error, in)
root(ROOT, error)
case(reason, for)
amod(reason, several)
obl(error, reason)
punct(error, .)
det(data, the)
amod(data, observational)
nsubj(have, data)
acl(data, determine)
det(distribution, the)
compound(distribution, concentration)
obj(determine, distribution)
root(ROOT, have)
det(range, a)
obj(have, range)
case(error, of)
nmod(range, error)
nsubj:pass(magnify, which)
aux:pass(magnify, be)
acl:relcl(range, magnify)
case(extension, in)
det(extension, the)
obl(magnify, extension)
case(region, into)
det(region, the)
compound(region, micrometeorite)
obl(magnify, region)
punct(have, .)
det(pressure, the)
amod(electromagnetic, solar)
punct(electromagnetic, -)
amod(pressure, electromagnetic)
punct(electromagnetic, -)
cc(corpuscular, and)
conj(electromagnetic, corpuscular)
punct(radiation, -)
compound(pressure, radiation)
root(ROOT, pressure)
cc(increase, and)
det(increase, the)
amod(increase, associate)
compound(Robertson, poynt)
punct(Robertson, -)
compound(effect, Robertson)
compound(increase, effect)
conj(pressure, increase)
case(effectiveness, in)
nmod(increase, effectiveness)
mark(decrease, as)
det(size, the)
compound(size, particle)
nsubj(decrease, size)
acl(increase, decrease)
cc(modify, and)
conj(decrease, modify)
det(distribution, the)
obj(modify, distribution)
cc(size, and)
compound(size, limit)
conj(distribution, size)
case(micron, to)
amod(micron, larger)
fixed(larger, than)
det(micron, a)
amod(micron, few)
obl(modify, micron)
punct(decrease, .)
advmod(suggest, also)
punct(suggest, ,)
expl(suggest, it)
aux(suggest, have)
aux:pass(suggest, be)
root(ROOT, suggest)
mark(same, that)
det(source, the)
nsubj(same, source)
case(all, of)
nmod(source, all)
cc(part, or)
conj(all, part)
case(dust, of)
det(dust, the)
nmod(part, dust)
aux(same, may)
advmod(same, not)
cop(same, be)
det(same, the)
ccomp(suggest, same)
case(that, as)
obl(same, that)
case(meteorite, for)
amod(meteorite, visual)
cc(radar, or)
conj(visual, radar)
obl(same, meteorite)
punct(best, ()
appos(meteorite, best)
punct(1960, ,)
conj(best, 1960)
punct(best, ))
punct(expect, ,)
cc(expect, and)
det(distribution, the)
amod(distribution, same)
nsubj:pass(expect, distribution)
aux(expect, would)
advmod(expect, not)
aux:pass(expect, be)
conj(same, expect)
punct(suggest, .)
nummod(obtain, 5.4)
punct(5.4, .)
amod(indication, indirect)
nsubj:pass(obtain, indication)
case(flux, of)
compound(flux, micrometeorite)
nmod(indication, flux)
det(measure, a)
nmod(indication, measure)
case(accretion, of)
det(accretion, the)
amod(accretion, total)
amod(accretion, mass)
nmod(measure, accretion)
case(material, of)
amod(material, meteoritic)
nmod(accretion, material)
case(Earth, by)
det(Earth, the)
nmod(material, Earth)
aux:pass(obtain, be)
root(ROOT, obtain)
case(analysis, from)
obl(obtain, analysis)
case(sediment, of)
amod(sea, deep)
punct(sea, -)
compound(sediment, sea)
nmod(analysis, sediment)
cc(dust, and)
conj(sediment, dust)
acl(sediment, collect)
case(region, in)
compound(region, remote)
obl(collect, region)
punct(Pettersson, ()
appos(region, Pettersson)
punct(Pettersson, ,)
appos(Pettersson, 1960)
punct(Pettersson, ))
punct(material, .)
advmod(meteoritic, most)
amod(material, meteoritic)
appos(region, material)
punct(material, ,)
case(time, by)
det(time, the)
nmod(material, time)
nsubj(reach, it)
acl:relcl(time, reach)
det(Earth, the)
nmod:poss(surface, Earth)
case(Earth, 's)
obj(reach, surface)
punct(reduce, ,)
aux(reduce, have)
aux:pass(reduce, be)
conj(reach, reduce)
case(dust, to)
obl(reduce, dust)
cc(spherule, or)
case(spherule, to)
conj(dust, spherule)
case(material, of)
amod(material, ablate)
nmod(spherule, material)
case(passage, in)
nmod:poss(passage, its)
nmod(spherule, passage)
case(atmosphere, through)
det(atmosphere, the)
nmod(passage, atmosphere)
punct(passage, .)
case(meteorite, for)
det(meteorite, all)
nmod(passage, meteorite)
punct(cent, ,)
det(content, the)
amod(content, average)
compound(content, nickel)
nsubj(cent, content)
cop(cent, be)
advmod(2.5, about)
nummod(cent, 2.5)
compound(cent, per)
conj(reduce, cent)
punct(cent, .)
nsubj(higher, this)
cop(higher, be)
advmod(higher, much)
root(ROOT, higher)
case(content, than)
det(content, the)
compound(content, nickel)
obl(higher, content)
case(dust, of)
amod(dust, terrestrial)
nmod(content, dust)
cc(sediment, and)
conj(dust, sediment)
cc(provide, and)
conj(higher, provide)
det(basis, a)
obj(provide, basis)
case(determination, for)
det(determination, the)
nmod(basis, determination)
case(influx, of)
det(influx, the)
amod(influx, meteoritic)
amod(influx, mass)
nmod(determination, influx)
punct(higher, .)
amod(data, present)
nsubj(indicate, data)
root(ROOT, indicate)
det(accretion, a)
obj(indicate, accretion)
case(about, of)
advmod(accretion, about)
compound(ton, Af)
nsubj(use, ton)
case(year, per)
nmod(ton, year)
case(globe, over)
det(globe, the)
amod(globe, entire)
nmod(ton, globe)
punct(warfare, ,)
cc(warfare, or)
case(Af, about)
compound(warfare, Af)
punct(Af, .)
amod(warfare, Biological)
compound(warfare, warfare)
amod(warfare, Biological)
nsubj(use, warfare)
cop(use, be)
det(use, the)
amod(use, intentional)
root(ROOT, use)
case(microorganism, of)
compound(microorganism, living)
nmod(use, microorganism)
cc(product, or)
nmod:poss(product, they)
amod(product, toxic)
conj(microorganism, product)
case(purpose, for)
det(purpose, the)
nmod(product, purpose)
mark(destroy, of)
acl(purpose, destroy)
cc(reduce, or)
conj(destroy, reduce)
det(effectiveness, the)
amod(effectiveness, military)
obj(reduce, effectiveness)
case(man, of)
nmod(effectiveness, man)
punct(use, .)
nsubj(exploitation, it)
cop(exploitation, be)
det(exploitation, the)
root(ROOT, exploitation)
case(potential, of)
det(potential, the)
amod(potential, inherent)
nmod(exploitation, potential)
case(agent, of)
amod(agent, infectious)
compound(agent, disease)
nmod(potential, agent)
case(research, by)
amod(research, scientific)
nmod(potential, research)
cc(development, and)
conj(research, development)
punct(potential, ,)
acl(potential, result)
case(production, in)
det(production, the)
obl(result, production)
case(system, of)
compound(weapon, BW)
compound(system, weapon)
nmod(production, system)
punct(exploitation, .)
nsubj:pass(injure, man)
aux(injure, may)
advmod(injure, also)
aux:pass(injure, be)
root(ROOT, injure)
advmod(injure, secondarily)
case(damage, by)
obl(injure, damage)
case(crop, to)
nmod:poss(crop, he)
compound(crop, food)
nmod(damage, crop)
cc(animal, or)
amod(animal, domestic)
conj(crop, animal)
punct(injure, .)
amod(warfare, Biological)
nsubj:pass(consider, warfare)
aux:pass(consider, be)
root(ROOT, consider)
mark(weapon, to)
cop(weapon, be)
advmod(weapon, primarily)
det(weapon, a)
amod(weapon, strategic)
xcomp(consider, weapon)
punct(consider, .)
det(reason, the)
amod(reason, major)
nsubj(be, reason)
case(this, for)
nmod(reason, this)
root(ROOT, be)
mark(have, that)
nsubj(have, it)
ccomp(be, have)
det(effect, no)
amod(kill, quick)
punct(kill, -)
compound(effect, kill)
obj(have, effect)
punct(be, .)
det(period, the)
compound(period, incubation)
nsubj(render, period)
case(disease, of)
amod(disease, infectious)
nmod(period, disease)
punct(period, ,)
cc(period, plus)
det(period, a)
amod(period, variable)
conj(period, period)
case(illness, of)
nmod(period, illness)
advmod(effect, even)
case(effect, before)
det(effect, a)
amod(effect, lethal)
nmod(period, effect)
punct(render, ,)
root(ROOT, render)
det(weapon, this)
obj(render, weapon)
xcomp(render, unsuitable)
case(encounter, for)
compound(encounter, hand)
punct(hand, -)
case(hand, to)
punct(hand, -)
nmod(hand, hand)
obl(unsuitable, encounter)
punct(render, . )
det(man, a)
nsubj(machine, man)
aux(machine, can)
cop(machine, be)
det(machine, a)
amod(machine, effective)
compound(machine, fighting)
root(ROOT, machine)
case(period, throughout)
det(period, the)
compound(period, incubation)
nmod(machine, period)
case(disease, of)
advmod(infectious, most)
amod(disease, infectious)
nmod(period, disease)
punct(machine, .)
advmod(use, thus)
punct(use, ,)
det(enemy, a)
nsubj(use, enemy)
aux(use, would)
advmod(use, probably)
root(ROOT, use)
det(weapon, this)
obj(use, weapon)
case(attack, for)
obl(use, attack)
case(center, on)
amod(population, static)
compound(center, population)
nmod(attack, center)
case(city, such)
fixed(such, as)
amod(city, large)
nmod(center, city)
punct(use, .)
det(procedure, a)
amod(procedure, important)
amod(procedure, operational)
nsubj(be, procedure)
case(BW, in)
nmod(procedure, BW)
case(enemy, for)
det(enemy, a)
nmod(BW, enemy)
aux(be, would)
root(ROOT, be)
mark(create, to)
ccomp(be, create)
det(areosol, a)
obj(create, areosol)
cc(cloud, or)
conj(areosol, cloud)
case(agent, of)
nmod(areosol, agent)
case(area, over)
det(area, the)
compound(area, target)
nmod(areosol, area)
punct(stimulate, .)
det(concept, this)
nsubj(stimulate, concept)
aux(stimulate, have)
parataxis(be, stimulate)
advmod(basic, much)
amod(research, basic)
obj(stimulate, research)
case(behavior, concern)
det(behavior, the)
nmod(research, behavior)
case(material, of)
amod(material, particulate)
amod(material, biological)
nmod(behavior, material)
punct(pathogenesis, ,)
det(pathogenesis, the)
conj(behavior, pathogenesis)
case(infection, of)
amod(infection, respiratory)
nmod(pathogenesis, infection)
punct(management, ,)
det(management, the)
amod(management, medical)
conj(infection, management)
case(disease, of)
amod(disease, such)
nmod(management, disease)
cc(defense, and)
conj(disease, defense)
case(occurrence, against)
nmod:poss(occurrence, they)
nmod(disease, occurrence)
punct(be, .)
det(property, the)
amod(property, biological)
cc(physical, and)
conj(biological, physical)
nsubj:pass(study, property)
case(particle, of)
amod(particle, infectious)
nmod(property, particle)
aux(study, have)
aux:pass(study, be)
root(ROOT, study)
advmod(study, intensively)
case(year, during)
det(year, the)
amod(year, past)
nummod(year, fifteen)
obl(study, year)
punct(study, .)
advmod(new, much)
amod(equipment, new)
nsubj:pass(develop, equipment)
cc(technique, and)
amod(technique, many)
amod(technique, unique)
conj(equipment, technique)
aux(develop, have)
aux:pass(develop, be)
conj(study, develop)
case(exposure, for)
det(exposure, the)
amod(exposure, quantitative)
obl(develop, exposure)
case(animal, of)
amod(animal, experimental)
nmod(exposure, animal)
case(aerosol, to)
nmod(exposure, aerosol)
case(agent, of)
amod(agent, infectious)
nmod(aerosol, agent)
acl(agent, contain)
case(particle, in)
obl(contain, particle)
case(characteristic, of)
amod(characteristic, specify)
amod(characteristic, dimensional)
nmod(particle, characteristic)
punct(gather, .)
amod(information, much)
nsubj:pass(gather, information)
aux(gather, have)
aux:pass(gather, be)
acl:relcl(characteristic, gather)
xcomp(gather, relative)
case(sampling, to)
amod(sampling, quantitative)
obl(gather, sampling)
cc(technique, and)
compound(technique, assesment)
conj(sampling, technique)
punct(gather, .)
nsubj:pass(accomplish, much)
case(work, of)
det(work, the)
amod(work, older)
amod(work, experimental)
obl(much, work)
case(infection, on)
amod(infection, respiratory)
nmod(work, infection)
aux:pass(accomplish, be)
conj(gather, accomplish)
case(procedure, by)
advmod(artificial, very)
amod(procedure, artificial)
obl(accomplish, procedure)
punct(accomplish, .)
det(instillation, the)
amod(instillation, intranasal)
nsubj(different, instillation)
case(suspension, of)
det(suspension, a)
amod(suspension, fluid)
nmod(instillation, suspension)
case(agent, of)
amod(agent, infectious)
nmod(suspension, agent)
case(animal, in)
det(animal, a)
amod(animal, anesthetize)
nmod(suspension, animal)
cop(different, be)
advmod(different, far)
root(ROOT, different)
case(exposure, from)
obl(different, exposure)
punct(exposure, ,)
case(respiration, through)
amod(respiration, natural)
nmod(exposure, respiration)
punct(different, ,)
case(organisms, to)
amod(organisms, aerosolize)
obl(different, organisms)
punct(different, .)
det(importance, the)
nsubj:pass(demonstrate, importance)
case(size, of)
amod(size, particle)
nmod(importance, size)
case(aerosol, in)
amod(aerosol, such)
nmod(size, aerosol)
aux(demonstrate, have)
aux:pass(demonstrate, be)
advmod(demonstrate, thoroughly)
root(ROOT, demonstrate)
punct(demonstrate, .)
det(feature, the)
amod(feature, natural)
amod(feature, anatomical)
cc(physiological, and)
conj(anatomical, physiological)
amod(feature, defensive)
nsubj(capable, feature)
case(tract, of)
det(tract, the)
amod(tract, upper)
amod(tract, respiratory)
nmod(feature, tract)
punct(feature, ,)
case(turbinate, such)
fixed(such, as)
det(turbinate, the)
nmod(feature, turbinate)
case(nose, of)
det(nose, the)
nmod(turbinate, nose)
cc(cilia, and)
det(cilia, the)
conj(nose, cilia)
case(trachea, of)
det(trachea, the)
nmod(cilia, trachea)
cc(bronchi, and)
amod(bronchi, larger)
conj(trachea, bronchi)
punct(capable, ,)
cop(capable, be)
root(ROOT, capable)
mark(imping, of)
advcl(capable, imping)
compound:prt(imping, out)
det(particle, the)
amod(particle, larger)
obj(imping, particle)
case(which, to)
obl(expose, which)
nsubj:pass(expose, we)
aux:pass(expose, be)
advmod(expose, ordinarily)
acl:relcl(particle, expose)
case(existence, in)
nmod:poss(existence, we)
amod(existence, daily)
obl(expose, existence)
punct(capable, .)
advmod(small, very)
amod(particle, small)
root(ROOT, particle)
punct(particle, ,)
advmod(capable, however)
punct(capable, ,)
case(range, in)
det(range, a)
compound(range, size)
obl(capable, range)
case(micron, of)
nummod(micron, 1)
case(4, to)
nmod(1, 4)
nmod(range, micron)
case(diameter, in)
nmod(micron, diameter)
cop(capable, be)
parataxis(particle, capable)
mark(pass, of)
advcl(capable, pass)
det(barrier, these)
compound(barrier, imping)
obj(pass, barrier)
cc(enter, and)
conj(pass, enter)
det(bed, the)
amod(bed, alveolar)
obj(enter, bed)
case(lung, of)
det(lung, the)
nmod(bed, lung)
punct(particle, .)
det(area, this)
nsubj(susceptible, area)
cop(susceptible, be)
advmod(susceptible, highly)
root(ROOT, susceptible)
case(infection, to)
obl(susceptible, infection)
punct(susceptible, .)
det(entrance, the)
root(ROOT, entrance)
cc(retention, and)
conj(entrance, retention)
case(particle, of)
amod(particle, infectious)
nmod(entrance, particle)
case(amount, in)
det(amount, the)
amod(amount, alveoli)
nmod(entrance, amount)
advmod(inoculation, almost)
case(inoculation, to)
det(inoculation, a)
amod(inoculation, intratissue)
nmod(amount, inoculation)
punct(entrance, .)
det(relationship, the)
nsubj:pass(illustrate, relationship)
case(size, between)
amod(size, particle)
nmod(relationship, size)
cc(dose, and)
amod(dose, infectious)
conj(size, dose)
aux:pass(illustrate, be)
root(ROOT, illustrate)
case(table, in)
obl(illustrate, table)
nummod(table, 1)
punct(illustrate, .)
mark(consider, in)
advcl(recognize, consider)
compound(defense, BW)
obj(consider, defense)
punct(recognize, ,)
nsubj:pass(recognize, it)
aux(recognize, must)
aux:pass(recognize, be)
root(ROOT, recognize)
mark(meet, that)
det(number, a)
nsubj:pass(meet, number)
case(parameter, of)
amod(parameter, critical)
amod(parameter, meterological)
nmod(number, parameter)
aux(meet, must)
aux:pass(meet, be)
ccomp(recognize, meet)
case(aerosol, for)
det(aerosol, a)
obl(meet, aerosol)
mark(exhibit, to)
advcl(meet, exhibit)
amod(effect, optimum)
obj(exhibit, effect)
punct(recognize, .)
case(example, for)
obl(destructive, example)
punct(destructive, ,)
amod(sunlight, bright)
nsubj(destructive, sunlight)
cop(destructive, be)
advmod(destructive, rapidly)
root(ROOT, destructive)
case(microorganism, for)
compound(microorganism, living)
obl(destructive, microorganism)
acl(microorganism, suspend)
case(air, in)
obl(suspend, air)
punct(destructive, .)
expl(be, there)
root(ROOT, be)
amod(requirement, optimal)
compound(requirement, humidity)
nsubj(be, requirement)
case(agent, for)
amod(agent, various)
nmod(requirement, agent)
mark(necessary, when)
amod(Neutral, airborne)
punct(Neutral, .)
nsubj(necessary, Neutral)
cc(inversion, or)
conj(Neutral, inversion)
amod(condition, meteorological)
nsubj(necessary, condition)
cop(necessary, be)
advcl(be, necessary)
case(cloud, for)
det(cloud, a)
obl(necessary, cloud)
mark(travel, to)
advcl(necessary, travel)
case(surface, along)
det(surface, the)
obl(travel, surface)
punct(be, .)
nsubj(rise, it)
aux(rise, will)
root(ROOT, rise)
case(condition, during)
compound(condition, lapse)
obl(rise, condition)
punct(rise, .)
expl(be, there)
root(ROOT, be)
punct(be, ,)
advmod(be, of)
fixed(of, course)
punct(be, ,)
amod(time, certain)
nsubj(be, time)
case(cycle, during)
det(cycle, the)
nummod(hour, 24)
punct(hour, -)
compound(cycle, hour)
amod(cycle, daily)
obl(be, cycle)
mark(meet, when)
nsubj:pass(meet, most)
case(condition, of)
det(condition, these)
nmod(most, condition)
aux(meet, will)
aux:pass(meet, be)
advcl(be, meet)
punct(be, .)
amod(property, Certain)
amod(property, other)
nsubj(noteworthy, property)
case(particle, of)
amod(particle, small)
nmod(property, particle)
punct(property, ,)
case(addition, in)
obl(noteworthy, addition)
case(those, to)
nmod(addition, those)
advmod(mention, already)
acl(those, mention)
case(connection, in)
obl(mention, connection)
case(penetration, with)
nmod(connection, penetration)
case(tract, of)
det(tract, the)
amod(tract, respiratory)
nmod(penetration, tract)
punct(noteworthy, ,)
cop(noteworthy, be)
root(ROOT, noteworthy)
case(consideration, in)
compound(consideration, defense)
obl(noteworthy, consideration)
punct(noteworthy, .)
det(particle, the)
advmod(particle, smaller)
det(particle, the)
obl(travel, particle)
mark(further, the)
amod(particle, further)
nsubj(travel, it)
aux(travel, will)
root(ROOT, travel)
advmod(travel, downwind)
mark(settle, before)
advcl(travel, settle)
compound:prt(settle, out)
punct(travel, .)
det(aerosol, a)
nsubj(diffuse, aerosol)
case(particle, of)
amod(particle, such)
amod(particle, small)
nmod(aerosol, particle)
punct(diffuse, ,)
advmod(diffuse, moreover)
punct(diffuse, ,)
root(ROOT, diffuse)
case(structure, through)
obl(diffuse, structure)
case(manner, in)
advmod(manner, much)
det(manner, the)
amod(manner, same)
obl(diffuse, manner)
case(gas, as)
det(gas, a)
nmod(manner, gas)
punct(diffuse, .)
expl(be, there)
aux(be, may)
root(ROOT, be)
det(number, a)
nsubj(be, number)
case(effect, of)
amod(effect, secondary)
nmod(number, effect)
acl(effect, result)
case(diffusion, from)
obl(result, diffusion)
case(building, through)
obl(result, building)
case(contamination, such)
fixed(such, as)
amod(contamination, widespread)
obl(result, contamination)
case(kitchen, of)
nmod(contamination, kitchen)
punct(restaurant, ,)
conj(kitchen, restaurant)
punct(store, ,)
compound(store, food)
conj(kitchen, store)
punct(hospital, ,)
conj(kitchen, hospital)
punct(etc, ,)
conj(kitchen, etc)
punct(be, .)
punct(be, .)
case(organism, depend)
case(organism, on)
det(organism, the)
obl(be, organism)
punct(be, ,)
expl(be, there)
aux(be, may)
root(ROOT, be)
nsubj(be, multiplication)
case(food, in)
det(food, some)
nmod(multiplication, food)
cc(product, or)
compound(product, beverage)
conj(food, product)
punct(multiplication, ,)
advmod(milk, i.e.)
punct(multiplication, ,)
case(milk, in)
nmod(multiplication, milk)
case(example, for)
nmod(milk, example)
punct(be, .)
det(consequence, the)
amod(consequence, secondary)
nsubj(serious, consequence)
case(this, from)
nmod(consequence, this)
aux(serious, could)
cop(serious, be)
advmod(serious, very)
root(ROOT, serious)
cc(take, and)
aux(take, must)
aux:pass(take, be)
conj(serious, take)
case(consideration, into)
obl(take, consideration)
case(planning, in)
nmod(consideration, planning)
case(defense, for)
nmod(planning, defense)
punct(serious, .)
nsubj:pass(illustrate, something)
case(behavior, of)
det(behavior, the)
nmod(something, behavior)
case(cloud, of)
nmod(behavior, cloud)
case(particle, of)
amod(particle, small)
nmod(cloud, particle)
aux(illustrate, can)
aux:pass(illustrate, be)
root(ROOT, illustrate)
case(trial, by)
det(trial, the)
amod(trial, follow)
compound(trial, field)
obl(illustrate, trial)
punct(illustrate, :)
case(trial, in)
det(trial, the)
amod(trial, first)
obl(disseminate, trial)
det(substance, a)
amod(substance, inert)
nsubj:pass(disseminate, substance)
aux:pass(disseminate, be)
root(ROOT, disseminate)
case(boat, from)
det(boat, a)
obl(disseminate, boat)
acl(boat, travel)
det(mile, some)
nummod(mile, ten)
obj(travel, mile)
case(shore, off)
obl(travel, shore)
case(condition, under)
advmod(select, appropriately)
amod(condition, select)
amod(condition, meteorological)
obl(travel, condition)
punct(disseminate, .)
compound(cadmium, Zinc)
compound(sulfide, cadmium)
nsubj:pass(disseminate, sulfide)
case(particle, in)
nmod(sulfide, particle)
case(micron, of)
nummod(micron, 2)
nmod(particle, micron)
case(size, in)
nmod(micron, size)
aux:pass(disseminate, be)
root(ROOT, disseminate)
punct(disseminate, .)
det(material, this)
nsubj(fluoresc, material)
root(ROOT, fluoresc)
case(light, under)
compound(light, ultraviolet)
obl(fluoresc, light)
nsubj(facilitate, which)
acl:relcl(light, facilitate)
nmod:poss(sampling, its)
obj(facilitate, sampling)
cc(assessment, and)
conj(sampling, assessment)
punct(sampling, .)
compound(hundred, four)
nummod(pound, hundred)
cc(pound, and)
conj(hundred, fifty)
nsubj:pass(disseminate, pound)
aux:pass(disseminate, be)
parataxis(fluoresc, disseminate)
mark(travel, while)
det(ship, the)
nsubj(travel, ship)
aux(travel, be)
advcl(disseminate, travel)
det(distance, a)
obj(travel, distance)
case(mile, of)
nummod(mile, 156)
nmod(distance, mile)
punct(describe, .)
nsubj(describe, Figure)
nummod(Figure, 1)
conj(travel, describe)
det(result, the)
obj(describe, result)
acl(result, obtain)
case(trial, in)
det(trial, this)
obl(obtain, trial)
punct(describe, .)
det(particle, the)
nsubj(travel, particle)
root(ROOT, travel)
det(distance, a)
amod(distance, maximum)
amod(distance, detect)
obj(travel, distance)
case(mile, of)
det(mile, some)
nummod(mile, 450)
nmod(distance, mile)
punct(travel, .)
case(isopleth, from)
det(isopleth, these)
compound(isopleth, dosage)
obl(see, isopleth)
nsubj:pass(see, it)
aux(see, can)
aux:pass(see, be)
root(ROOT, see)
mark(cover, that)
det(area, a)
nsubj:pass(cover, area)
case(mile, of)
advmod(34,000, over)
compound(square, 34,000)
nummod(mile, square)
nmod(area, mile)
aux:pass(cover, be)
ccomp(see, cover)
punct(see, .)
det(dosage, these)
nsubj:pass(increase, dosage)
aux(increase, could)
aux(increase, have)
aux:pass(increase, be)
root(ROOT, increase)
mark(increase, by)
advcl(increase, increase)
det(strength, the)
compound(strength, source)
obj(increase, strength)
nsubj(small, which)
cop(small, be)
acl:relcl(strength, small)
case(case, in)
det(case, this)
obl(small, case)
punct(increase, .)
det(behavior, the)
nsubj:pass(illustrate, behavior)
case(aerosol, of)
det(aerosol, a)
amod(aerosol, biological)
nmod(behavior, aerosol)
punct(aerosol, ,)
case(scale, on)
det(scale, a)
advmod(smaller, much)
amod(scale, smaller)
obl(illustrate, scale)
punct(illustrate, ,)
aux:pass(illustrate, be)
root(ROOT, illustrate)
case(trial, by)
det(trial, a)
amod(trial, specific)
compound(trial, field)
obl(illustrate, trial)
acl(trial, conduct)
case(organism, with)
det(organism, a)
amod(organism, non-pathogenic)
obl(conduct, organism)
punct(illustrate, .)
det(suspension, a)
amod(suspension, aqueous)
nsubj:pass(aerosolize, suspension)
case(spore, of)
det(spore, the)
nmod(suspension, spore)
case(subtilis, of)
compound(subtilis, B.)
nmod(spore, subtilis)
punct(niger, ,)
compound(niger, var.)
conj(subtilis, niger)
punct(subtilis, ,)
advmod(know, generally)
acl(subtilis, know)
case(globigii, as)
compound(globigii, Bacillus)
obl(know, globigii)
punct(aerosolize, ,)
aux:pass(aerosolize, be)
root(ROOT, aerosolize)
advcl(aerosolize, use)
advmod(available, commercially)
amod(nozzle, available)
obj(use, nozzle)
punct(aerosolize, . )
det(cloud, a)
amod(cloud, satisfactory)
nsubj:pass(produce, cloud)
aux:pass(produce, be)
root(ROOT, produce)
advmod(efficient, even)
mark(efficient, though)
det(nozzle, these)
nsubj(efficient, nozzle)
cop(efficient, be)
advmod(efficient, only)
advmod(5, about)
nummod(cent, 5)
compound(cent, per)
obl:npmod(efficient, cent)
advcl(produce, efficient)
mark(produce, in)
advcl(efficient, produce)
det(cloud, a)
amod(cloud, initial)
obj(produce, cloud)
case(range, in)
det(range, the)
compound(range, size)
obl(produce, range)
case(micron, of)
nummod(micron, 1)
case(5, to)
nmod(1, 5)
nmod(range, micron)
punct(produce, .)
case(test, in)
det(test, this)
obl(aerosolize, test)
punct(aerosolize, ,)
nummod(gallon, 130)
appos(test, gallon)
case(suspension, of)
det(suspension, a)
nmod(gallon, suspension)
punct(gallon, ,)
acl(gallon, have)
det(count, a)
obj(have, count)
case(organisms, of)
compound(organisms, Af)
nmod(count, organisms)
case(ml, per)
nmod(organisms, ml)
punct(total, ,)
cc(total, or)
det(total, a)
conj(count, total)
case(spore, of)
advmod(spore, approximately)
compound(spore, Af)
nmod(total, spore)
punct(aerosolize, ,)
aux:pass(aerosolize, be)
root(ROOT, aerosolize)
punct(aerosolize, .)
det(operation, the)
compound(operation, spraying)
nsubj:pass(conduct, operation)
aux:pass(conduct, be)
root(ROOT, conduct)
case(deck, from)
det(deck, the)
compound(deck, rear)
obl(conduct, deck)
case(vessel, of)
det(vessel, a)
amod(vessel, small)
amod(vessel, Naval)
nmod(deck, vessel)
punct(conduct, ,)
advcl(conduct, cruise)
nummod(mile, two)
obj(cruise, mile)
case(shore, off)
punct(shore, -)
obl(cruise, shore)
cc(vertical, and)
conj(shore, vertical)
case(breeze, to)
det(breeze, a)
amod(sure, on)
punct(sure, -)
amod(breeze, sure)
obl(vertical, breeze)
punct(conduct, .)
nsubj(continue, spray)
root(ROOT, continue)
case(course, along)
det(course, a)
nummod(mile, two)
punct(mile, -)
compound(course, mile)
obl(continue, course)
punct(continue, .)
det(operation, this)
nsubj:pass(start, operation)
aux:pass(start, be)
root(ROOT, start)
case(p.m., at)
nummod(p.m., 5:00)
obl(start, p.m.)
cc(last, and)
conj(start, last)
case(minute, for)
nummod(minute, 29)
obl(last, minute)
punct(start, .)
expl(be, there)
root(ROOT, be)
det(condition, a)
amod(condition, slight)
compound(condition, lapse)
nsubj(be, condition)
punct(fog, ,)
det(fog, a)
amod(fog, moderate)
conj(condition, fog)
punct(humidity, ,)
cc(humidity, and)
nummod(cent, 100)
compound(cent, per)
compound(humidity, cent)
amod(humidity, relative)
conj(condition, humidity)
punct(be, . )
det(network, a)
nsubj:pass(set, network)
case(station, of)
compound(station, sampling)
nmod(network, station)
aux(set, have)
aux:pass(set, be)
root(ROOT, set)
compound:prt(set, up)
case(shore, on)
obl(set, shore)
punct(set, .)
nsubj:pass(locate, these)
aux:pass(locate, be)
root(ROOT, locate)
case(home, at)
det(home, the)
obl(locate, home)
case(employee, of)
compound(employee, government)
nmod(home, employee)
punct(home, ,)
case(Offices, in)
compound(Offices, government)
nmod(home, Offices)
punct(building, ,)
conj(Offices, building)
cc(reservation, and)
conj(Offices, reservation)
case(area, within)
det(area, the)
compound(area, trial)
nmod(Offices, area)
punct(locate, . )
det(attempt, a)
amod(attempt, rough)
nsubj:pass(make, attempt)
aux:pass(make, be)
root(ROOT, make)
mark(characterize, to)
xcomp(make, characterize)
det(profile, the)
amod(profile, vertical)
obj(characterize, profile)
case(cloud, of)
det(cloud, the)
nmod(profile, cloud)
mark(take, by)
advcl(characterize, take)
obj(take, samples)
case(window, from)
case(window, outside)
det(window, the)
obl(take, window)
case(floor, on)
det(floor, the)
amod(floor, first)
punct(ninth, ,)
conj(first, ninth)
punct(fifteenth, ,)
cc(fifteenth, and)
conj(first, fifteenth)
obl(take, floor)
case(building, of)
det(building, a)
compound(building, government)
compound(building, office)
nmod(floor, building)
punct(make, .)
det(sampler, all)
nsubj:pass(operate, sampler)
aux:pass(operate, be)
root(ROOT, operate)
case(period, for)
det(period, a)
obl(operate, period)
case(hour, of)
nummod(hour, two)
nmod(period, hour)
case(one, except)
nmod(hour, one)
punct(one, ,)
nsubj:pass(operate, which)
aux:pass(operate, be)
acl:relcl(period, operate)
case(hour, for)
nummod(hour, four)
obl(operate, hour)
punct(operate, .)
case(instance, in)
det(instance, this)
obl(be, instance)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(dosage, a)
nsubj(be, dosage)
case(562, of)
nmod(dosage, 562)
case(hour, during)
det(hour, the)
amod(hour, first)
nummod(hour, two)
nmod(dosage, hour)
cc(dosage, and)
det(dosage, a)
amod(dosage, total)
conj(dosage, dosage)
case(1980, of)
nmod(dosage, 1980)
case(period, for)
det(period, the)
nummod(hour, four)
punct(hour, -)
compound(period, hour)
nmod(dosage, period)
punct(period, ,)
det(increase, a)
amod(increase, four-)
compound(increase, fold)
appos(period, increase)
punct(suggest, .)
nsubj(suggest, this)
parataxis(be, suggest)
mark(increase, that)
det(period, the)
compound(period, sampling)
nsubj:pass(increase, period)
punct(period, ,)
advmod(location, particularly)
case(location, at)
det(location, the)
advmod(distant, more)
amod(location, distant)
obl(increase, location)
punct(increase, ,)
aux(increase, should)
aux(increase, have)
aux:pass(increase, be)
ccomp(suggest, increase)
punct(suggest, .)
mark(see, as)
aux(see, can)
aux:pass(see, be)
advcl(cover, see)
case(Figure, from)
obl(see, Figure)
nummod(Figure, 2)
punct(cover, ,)
det(area, a)
amod(area, extensive)
nsubj:pass(cover, area)
aux:pass(cover, be)
root(ROOT, cover)
case(aerosol, by)
det(aerosol, this)
obl(cover, aerosol)
punct(cover, .)
det(distance, the)
amod(distance, maximum)
nsubj(sample, distance)
root(ROOT, sample)
ccomp(sample, be)
nummod(mile, 23)
obj(sample, mile)
case(source, from)
det(source, the)
obl(sample, source)
punct(sample, .)
mark(see, as)
aux(see, can)
aux:pass(see, be)
advcl(cover, see)
case(isopleth, from)
det(isopleth, these)
compound(isopleth, dosage)
obl(see, isopleth)
punct(cover, ,)
advmod(square, approximately)
nummod(mile, 100)
nummod(mile, square)
nsubj:pass(cover, mile)
aux:pass(cover, be)
root(ROOT, cover)
case(area, within)
det(area, the)
obl(cover, area)
acl(area, sample)
punct(cover, .)
expl(likely, it)
cop(likely, be)
advmod(likely, quite)
root(ROOT, likely)
mark(cover, that)
det(area, a)
advmod(greater, even)
amod(area, greater)
nsubj:pass(cover, area)
aux:pass(cover, be)
ccomp(likely, cover)
punct(cover, ,)
advmod(downwind, particularly)
advmod(cover, downwind)
punct(likely, .)
det(dosage, the)
nsubj(be, dosage)
case(level, in)
det(level, the)
nummod(level, three)
nmod(dosage, level)
case(profile, of)
det(profile, the)
amod(profile, vertical)
nmod(level, profile)
root(ROOT, be)
punct(be, :)
nummod(sampling, Af)
punct(Af, .)
nsubj(sampling, this)
cop(sampling, be)
advmod(sampling, not)
punct(sampling, ,)
advmod(sampling, of)
fixed(of, course)
punct(sampling, ,)
amod(sampling, enough)
root(ROOT, sampling)
mark(give, to)
acl(sampling, give)
det(description, a)
amod(description, satisfactory)
obj(give, description)
case(diffusion, of)
det(diffusion, the)
amod(diffusion, vertical)
nmod(description, diffusion)
case(aerosol, of)
det(aerosol, the)
nmod(diffusion, aerosol)
punct(sampling, . )
det(number, a)
nsubj:pass(create, number)
case(problem, of)
amod(problem, unique)
amod(problem, medical)
nmod(number, problem)
aux(create, might)
aux:pass(create, be)
root(ROOT, create)
mark(expose, when)
nsubj:pass(expose, man)
aux:pass(expose, be)
advcl(create, expose)
case(agent, to)
det(agent, a)
amod(agent, infectious)
obl(expose, agent)
case(route, through)
det(route, the)
amod(route, respiratory)
nmod(agent, route)
cc(portal, rather)
fixed(rather, than)
fixed(rather, by)
amod(portal, natural)
conj(route, portal)
case(entry, of)
nmod(portal, entry)
punct(create, .)
det(agent, some)
nsubj:pass(show, agent)
aux(show, have)
aux:pass(show, be)
root(ROOT, show)
mark(toxic, to)
cop(toxic, be)
advmod(more, much)
advmod(toxic, more)
xcomp(show, toxic)
cc(infectious, or)
conj(toxic, infectious)
case(animal, to)
amod(animal, experimental)
obl(toxic, animal)
mark(expose, when)
advcl(toxic, expose)
case(aerosol, to)
obl(expose, aerosol)
case(size, of)
amod(size, optimum)
amod(size, particle)
nmod(aerosol, size)
case(portal, than)
case(portal, by)
det(portal, the)
amod(portal, natural)
obl(expose, portal)
punct(show, .)
amod(toxin, botulinal)
nsubj(toxic, toxin)
punct(toxic, ,)
case(example, for)
obl(toxic, example)
punct(toxic, ,)
cop(toxic, be)
amod(fold, several)
nummod(fold, thousand)
punct(fold, -)
obl:npmod(toxic, fold)
advmod(toxic, more)
root(ROOT, toxic)
case(route, by)
det(route, this)
obl(toxic, route)
mark(give, than)
mark(give, when)
advcl(toxic, give)
case(os, per)
obl(give, os)
punct(toxic, .)
case(instance, in)
det(instance, some)
obl(result, instance)
det(picture, a)
amod(picture, different)
amod(picture, clinical)
compound(picture, disease)
nsubj(result, picture)
aux(result, may)
root(ROOT, result)
case(route, from)
det(route, this)
obl(result, route)
case(exposure, of)
nmod(route, exposure)
punct(result, ,)
advcl(result, make)
obj(make, diagnosis)
xcomp(make, difficult)
punct(result, .)
case(tularemia, in)
obl(expect, tularemia)
acl(tularemia, produce)
case(exposure, by)
compound(exposure, aerosol)
obl(produce, exposure)
punct(expect, ,)
nsubj(expect, one)
aux(expect, would)
advmod(expect, not)
root(ROOT, expect)
mark(find, to)
xcomp(expect, find)
det(ulcer, the)
amod(ulcer, classical)
obj(find, ulcer)
case(fever, of)
punct(fever, ``)
compound(fever, rabbit)
nmod(ulcer, fever)
punct(fever, '')
case(finger, on)
det(finger, a)
obl(find, finger)
punct(expect, .)
det(enemy, a)
nsubj(choose, enemy)
aux(choose, would)
advmod(choose, obviously)
root(ROOT, choose)
det(agent, a)
obj(choose, agent)
nsubj:pass(believe, that)
aux:pass(believe, be)
acl:relcl(agent, believe)
mark(infectious, to)
cop(infectious, be)
advmod(infectious, highly)
xcomp(believe, infectious)
punct(choose, .)
nsubj(belong, Agents)
nsubj:pass(know, that)
aux:pass(know, be)
acl:relcl(Agents, know)
mark(cause, to)
xcomp(know, cause)
amod(infection, frequent)
obj(cause, infection)
case(worker, among)
compound(worker, laboratory)
nmod(infection, worker)
case(those, such)
fixed(such, as)
nmod(infection, those)
acl(those, cause)
compound(fever, q)
obj(cause, fever)
punct(tularemia, ,)
conj(fever, tularemia)
punct(brucellosis, ,)
conj(fever, brucellosis)
punct(glander, ,)
conj(fever, glander)
punct(coccidioidomycosis, ,)
conj(fever, coccidioidomycosis)
punct(etc., ,)
conj(fever, etc.)
punct(belong, ,)
root(ROOT, belong)
case(category, in)
det(category, this)
nmod(belong, category)
punct(belong, .)
det(agent, a)
nsubj:pass(select, agent)
aux(select, would)
advmod(select, likely)
aux:pass(select, be)
root(ROOT, select)
nsubj(possess, which)
aux(possess, would)
ccomp(select, possess)
amod(viability, sufficient)
obj(possess, viability)
cc(stability, and)
compound(stability, virulence)
conj(viability, stability)
mark(meet, to)
advcl(possess, meet)
amod(requirement, realistic)
amod(requirement, minimal)
amod(requirement, logistic)
obj(meet, requirement)
punct(select, .)
nsubj(goal, it)
cop(goal, be)
punct(goal, ,)
advmod(goal, obviously)
punct(goal, ,)
det(goal, a)
amod(goal, proper)
root(ROOT, goal)
case(research, of)
nmod(goal, research)
mark(improve, to)
acl(research, improve)
case(property, on)
det(property, this)
obl(improve, property)
punct(goal, .)
case(connection, in)
det(connection, this)
obl(capable, connection)
expl(capable, it)
aux(capable, should)
cop(capable, be)
root(ROOT, capable)
mark(disseminate, of)
aux:pass(disseminate, be)
advcl(capable, disseminate)
case(destruction, without)
amod(destruction, excessive)
obl(disseminate, destruction)
punct(capable, . )
advmod(fastidious, moreover)
punct(fastidious, ,)
nsubj(fastidious, it)
aux(fastidious, should)
advmod(fastidious, not)
cop(fastidious, be)
advmod(fastidious, so)
root(ROOT, fastidious)
case(requirement, in)
nmod:poss(requirement, its)
compound(requirement, growth)
obl(fastidious, requirement)
mark(make, as)
mark(make, to)
advcl(fastidious, make)
obj(make, production)
case(scale, on)
det(scale, a)
advmod(significant, militarily)
amod(scale, significant)
obl(make, scale)
amod(scale, improbable)
punct(fastidious, .)
det(aggressor, a)
nsubj(use, aggressor)
aux(use, would)
root(ROOT, use)
det(agent, a)
obj(use, agent)
case(which, against)
obl(be, which)
expl(be, there)
acl:relcl(agent, be)
det(immunity, a)
amod(immunity, minimal)
advmod(acquire, naturally)
amod(immunity, acquire)
cc(induce, or)
advmod(induce, artificially)
amod(immunity, induce)
nsubj(be, immunity)
case(population, in)
det(population, a)
compound(population, target)
nmod(immunity, population)
punct(use, . )
det(immunity, a)
amod(immunity, solid)
nsubj(circumstance, immunity)
cop(circumstance, be)
det(circumstance, the)
nummod(circumstance, one)
amod(circumstance, effective)
root(ROOT, circumstance)
mark(neutralize, whereby)
nsubj:pass(neutralize, attack)
case(agent, by)
det(agent, a)
amod(agent, specific)
nmod(attack, agent)
aux(neutralize, can)
aux:pass(neutralize, be)
advcl(circumstance, neutralize)
punct(circumstance, .)
nsubj:pass(remember, it)
aux(remember, must)
aux:pass(remember, be)
root(ROOT, remember)
punct(remember, ,)
advmod(remember, however)
punct(remember, ,)
mark(be, that)
expl(be, there)
ccomp(remember, be)
amod(agent, many)
nsubj(be, agent)
case(which, for)
obl(be, which)
expl(be, there)
acl:relcl(agent, be)
det(immunity, no)
amod(immunity, solid)
nsubj(be, immunity)
cc(break, and)
det(immunity, a)
amod(immunity, partial)
cc(grade, or)
amod(grade, low)
punct(grade, -)
conj(partial, grade)
nsubj:pass(break, immunity)
aux(break, may)
aux:pass(break, be)
conj(be, break)
case(dose, by)
det(dose, a)
amod(dose, appropriate)
obl(break, dose)
case(agent, of)
nmod(dose, agent)
punct(remember, .)
expl(be, there)
root(ROOT, be)
det(spectrum, a)
amod(spectrum, broad)
nsubj(be, spectrum)
case(organisms, of)
nmod(spectrum, organisms)
case(selection, from)
det(selection, which)
nmod(spectrum, selection)
case(purpose, for)
det(purpose, a)
amod(purpose, specify)
amod(purpose, military)
nmod(selection, purpose)
aux(make, might)
aux:pass(make, be)
acl(spectrum, make)
punct(be, .)
det(enemy, a)
nsubj(choose, enemy)
aux(choose, might)
root(ROOT, choose)
det(microorganism, a)
advmod(debilitate, acutely)
amod(microorganism, debilitate)
obj(choose, microorganism)
punct(producer, ,)
det(producer, a)
amod(producer, chronic)
compound(producer, disease)
conj(microorganism, producer)
cc(one, or)
conj(microorganism, one)
acl(one, cause)
det(rate, a)
amod(rate, high)
obj(cause, rate)
case(lethality, of)
nmod(rate, lethality)
punct(choose, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(produce, that)
amod(form, certain)
amod(form, mutational)
nsubj:pass(produce, form)
aux(produce, may)
aux:pass(produce, be)
csubj(possible, produce)
case(strain, such)
fixed(such, as)
amod(strain, antibiotic)
amod(strain, resistant)
obl(produce, strain)
punct(possible, .)
nsubj:pass(develop, Mutants)
aux(develop, may)
advmod(develop, also)
aux:pass(develop, be)
root(ROOT, develop)
case(change, with)
obl(develop, change)
case(property, in)
amod(property, biochemical)
nmod(change, property)
nsubj(importance, that)
cop(importance, be)
case(importance, of)
acl:relcl(property, importance)
case(identification, in)
nmod(importance, identification)
punct(develop, .)
nsubj(importance, all)
case(consideration, of)
det(consideration, these)
nmod(all, consideration)
cop(importance, be)
case(importance, of)
amod(importance, critical)
root(ROOT, importance)
mark(consider, in)
acl(importance, consider)
compound(management, defense)
cc(medical, and)
conj(defense, medical)
obj(consider, management)
punct(importance, .)
amod(agent, Biological)
nsubj(host, agent)
cop(host, be)
punct(host, ,)
advmod(host, of)
fixed(of, course)
punct(host, ,)
advmod(host, highly)
root(ROOT, host)
xcomp(host, -specific)
punct(host, .)
nsubj(destroy, they)
aux(destroy, do)
advmod(destroy, not)
root(ROOT, destroy)
amod(structure, physical)
obj(destroy, structure)
mark(true, as)
cop(true, be)
advcl(destroy, true)
case(explosive, of)
amod(explosive, high)
obl(true, explosive)
punct(destroy, .)
nsubj(be, this)
aux(be, may)
root(ROOT, be)
mark(override, of)
advcl(be, override)
obj(override, importance)
mark(consider, in)
acl(importance, consider)
amod(objective, military)
obj(consider, objective)
punct(be, .)
det(question, the)
nsubj(merit, question)
case(disease, of)
amod(disease, epidemic)
nmod(question, disease)
root(ROOT, merit)
det(discussion, some)
obj(merit, discussion)
punct(merit, .)
advmod(effort, only)
det(effort, a)
amod(effort, limited)
nsubj:pass(devote, effort)
aux(devote, have)
aux:pass(devote, be)
root(ROOT, devote)
case(problem, to)
det(problem, this)
obl(devote, problem)
punct(devote, .)
nsubj(assume, some)
case(those, of)
nmod(some, those)
nsubj(question, who)
acl:relcl(those, question)
det(value, the)
obj(question, value)
case(BW, of)
nmod(value, BW)
aux(assume, have)
root(ROOT, assume)
mark(establishment, that)
det(potential, the)
amod(potential, only)
nsubj(establishment, potential)
aux(establishment, would)
cop(establishment, be)
case(establishment, in)
det(establishment, the)
ccomp(assume, establishment)
case(epidemics, of)
nmod(establishment, epidemics)
punct(assume, .)
nsubj(point, they)
advmod(point, then)
root(ROOT, point)
compound:prt(point, out)
mark(unlikely, that)
case(lack, with)
nmod:poss(lack, we)
amod(lack, present)
obl(unlikely, lack)
case(knowledge, of)
nmod(lack, knowledge)
case(factor, of)
det:predet(factor, all)
det(factor, the)
nmod(knowledge, factor)
amod(factor, concerned)
case(rise, in)
det(rise, the)
obl(concerned, rise)
cc(fall, and)
conj(rise, fall)
case(epidemics, of)
nmod(rise, epidemics)
punct(unlikely, ,)
expl(unlikely, it)
cop(unlikely, be)
ccomp(point, unlikely)
mark(initiate, that)
det(episode, a)
amod(episode, plan)
nsubj:pass(initiate, episode)
aux(initiate, could)
aux:pass(initiate, be)
ccomp(unlikely, initiate)
punct(point, .)
nsubj(argue, they)
root(ROOT, argue)
advmod(argue, further)
punct(contradictorily, ()
cc(contradictorily, and)
advmod(contradictorily, somewhat)
advmod(argue, contradictorily)
punct(contradictorily, ))
mark(make, that)
nmod:poss(knowledge, we)
nsubj(make, knowledge)
cc(resource, and)
conj(knowledge, resource)
case(medicine, in)
amod(medicine, preventive)
nmod(knowledge, medicine)
aux(make, would)
ccomp(argue, make)
expl(make, it)
xcomp(make, possible)
mark(control, to)
advcl(possible, control)
det:predet(outbreak, such)
det(outbreak, a)
obj(control, outbreak)
case(disease, of)
nmod(outbreak, disease)
punct(argue, .)
nsubj(why, this)
cop(why, be)
root(ROOT, why)
det(approach, this)
nsubj:pass(give, approach)
case(defense, to)
compound(defense, BW)
nmod(approach, defense)
aux(give, have)
advmod(give, not)
aux:pass(give, be)
acl:relcl(why, give)
amod(attention, major)
obj(give, attention)
punct(why, .)
nmod:poss(problem, we)
amod(problem, major)
nsubj(what, problem)
cop(what, be)
root(ROOT, what)
det(enemy, a)
nsubj(accomplish, enemy)
aux(accomplish, might)
acl:relcl(what, accomplish)
case(attack, in)
det(attack, a)
amod(attack, initial)
obl(accomplish, attack)
case(target, on)
det(target, a)
nmod(attack, target)
punct(what, .)
nsubj(eliminate, this)
punct(eliminate, ,)
advmod(eliminate, of)
fixed(of, course)
punct(eliminate, ,)
aux(eliminate, do)
advmod(eliminate, not)
root(ROOT, eliminate)
case(consideration, from)
obl(eliminate, consideration)
case(agent, for)
det(agent, this)
compound(agent, purpose)
nmod(consideration, agent)
nsubj:pass(associate, that)
aux:pass(associate, be)
acl:relcl(agent, associate)
advmod(associate, naturally)
case(disease, with)
amod(disease, epidemic)
obl(associate, disease)
punct(eliminate, . )
det(example, a)
amod(example, hypothetical)
nsubj(illustrate, example)
aux(illustrate, will)
root(ROOT, illustrate)
det(point, this)
obj(illustrate, point)
punct(illustrate, .)
root(ROOT, let)
obj(let, we)
xcomp(let, assume)
mark(possible, that)
expl(possible, it)
aux(possible, would)
cop(possible, be)
ccomp(assume, possible)
case(enemy, for)
det(enemy, a)
obl(possible, enemy)
mark(create, to)
acl(enemy, create)
det(aerosol, a)
obj(create, aerosol)
case(agent, of)
det(agent, the)
amod(agent, causative)
nmod(aerosol, agent)
case(typhus, of)
amod(typhus, epidemic)
nmod(agent, typhus)
punct(prowazwki, ()
compound(prowazwki, Rickettsia)
appos(typhus, prowazwki)
punct(prowazwki, ))
case(A, over)
compound(A, City)
nmod(agent, A)
cc(result, and)
mark(result, that)
det(number, a)
amod(number, large)
nsubj(result, number)
case(case, of)
nmod(number, case)
case(fever, of)
compound(fever, typhus)
nmod(case, fever)
conj(possible, result)
advmod(result, therefrom)
punct(let, .)
det(epidemic, no)
nsubj:pass(initiate, epidemic)
aux:pass(initiate, be)
root(ROOT, initiate)
cc(expect, nor)
cop(one, be)
conj(initiate, one)
acl(one, expect)
mark(lousy, because)
det(population, the)
nsubj(lousy, population)
case(A, in)
compound(A, City)
nmod(population, A)
cop(lousy, be)
advmod(lousy, not)
advcl(expect, lousy)
punct(initiate, .)
nsubj(prerequisite, Lousiness)
cop(prerequisite, be)
det(prerequisite, a)
root(ROOT, prerequisite)
case(typhus, for)
amod(typhus, epidemic)
nmod(prerequisite, typhus)
punct(prerequisite, .)
case(case, in)
det(case, this)
obl(accomplish, case)
punct(accomplish, ,)
advmod(accomplish, then)
punct(accomplish, ,)
det(objective, the)
amod(objective, military)
nsubj:pass(accomplish, objective)
aux:pass(accomplish, be)
root(ROOT, accomplish)
case(agent, with)
det(agent, a)
amod(agent, epidemic)
obl(accomplish, agent)
advmod(result, solely)
case(result, through)
det(result, the)
obl(accomplish, result)
acl(result, secure)
case(attack, in)
det(attack, the)
amod(attack, initial)
obl(secure, attack)
punct(accomplish, .)
nsubj:pass(do, this)
aux:pass(do, be)
root(ROOT, do)
case(knowledge, with)
amod(knowledge, full)
obl(do, knowledge)
mark(be, that)
expl(be, there)
aux(be, would)
acl(knowledge, be)
det(epidemic, no)
nsubj(be, epidemic)
punct(do, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(make, hand)
punct(make, ,)
det(attack, a)
amod(attack, similar)
nsubj:pass(make, attack)
aux(make, might)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
case(B, on)
compound(B, City)
obl(make, B)
nmod:poss(population, whose)
nsubj:pass(know, population)
aux:pass(know, be)
acl:relcl(B, know)
mark(lousy, to)
cop(lousy, be)
xcomp(know, lousy)
punct(make, .)
nsubj(expect, one)
aux(expect, might)
root(ROOT, expect)
det(spread, some)
obj(expect, spread)
case(disease, of)
det(disease, the)
nmod(spread, disease)
case(case, in)
det(case, this)
obl(expect, case)
advcl(expect, result)
case(effectiveness, in)
amod(effectiveness, increase)
obl(result, effectiveness)
case(attack, of)
det(attack, the)
nmod(effectiveness, attack)
punct(expect, .)
det(problem, the)
amod(problem, major)
amod(problem, defensive)
nsubj(concerned, problem)
cop(concerned, be)
root(ROOT, concerned)
case(possibility, with)
det(possibility, the)
obl(concerned, possibility)
case(delivery, of)
amod(delivery, over)
amod(delivery, military)
nmod(possibility, delivery)
case(agent, of)
amod(agent, biological)
nmod(delivery, agent)
case(device, from)
amod(device, appropriate)
compound(device, disseminating)
nmod(agent, device)
punct(concerned, .)
expl(difficult, it)
aux(difficult, should)
cop(difficult, be)
advmod(more, no)
advmod(difficult, more)
root(ROOT, difficult)
mark(deliver, to)
csubj(difficult, deliver)
amod(device, such)
obj(deliver, device)
case(weapon, than)
amod(weapon, other)
obl(deliver, weapon)
punct(difficult, .)
det(vehicle, the)
amod(vehicle, same)
compound(vehicle, delivery)
nsubj(usable, vehicle)
punct(vehicle, --)
mark(airplane, whether)
nsubj(airplane, they)
cop(airplane, be)
acl:relcl(vehicle, airplane)
punct(submarine, ,)
conj(airplane, submarine)
cc(missile, or)
amod(missile, guide)
conj(airplane, missile)
punct(usable, --)
aux(usable, should)
cop(usable, be)
root(ROOT, usable)
punct(usable, .)
mark(possible, if)
expl(possible, it)
cop(possible, be)
advcl(possible, possible)
case(enemy, for)
det(enemy, a)
obl(possible, enemy)
mark(put, to)
acl(enemy, put)
det(bomb, a)
amod(bomb, atomic)
obj(put, bomb)
case(city, on)
det(city, a)
obl(put, city)
punct(possible, ,)
expl(possible, it)
aux(possible, should)
cop(possible, be)
advmod(possible, equally)
root(ROOT, possible)
mark(put, to)
csubj(possible, put)
det(cloud, a)
obj(put, cloud)
case(agent, of)
amod(agent, biological)
nmod(cloud, agent)
case(city, over)
det(city, that)
obl(put, city)
punct(possible, .)
amod(agent, Biological)
nsubj(suitable, agent)
cop(suitable, be)
punct(suitable, ,)
advmod(suitable, moreover)
punct(suitable, ,)
root(ROOT, suitable)
case(delivery, for)
obl(suitable, delivery)
case(sabotage, through)
compound(sabotage, enemy)
nmod(delivery, sabotage)
nsubj(impose, which)
acl:relcl(sabotage, impose)
amod(problem, many)
obj(impose, problem)
case(defense, in)
nmod(problem, defense)
punct(suitable, . )
det(area, a)
amod(area, few)
amod(area, obvious)
compound(area, target)
nsubj:pass(mention, area)
case(importance, of)
amod(importance, great)
nmod(area, importance)
aux(mention, might)
aux:pass(mention, be)
root(ROOT, mention)
punct(mention, .)
det(conditioning, the)
compound(conditioning, air)
compound(system, conditioning)
cc(system, and)
compound(system, ventilate)
nsubj(subject, system)
case(building, of)
amod(building, large)
nmod(system, building)
cop(subject, be)
root(ROOT, subject)
case(attack, to)
obl(subject, attack)
punct(subject, .)
nsubj(become, America)
aux(become, be)
advmod(become, rapidly)
parataxis(subject, become)
det(nation, a)
xcomp(become, nation)
nsubj(use, that)
acl:relcl(nation, use)
xcomp(use, process)
punct(precook, ,)
conj(process, precook)
cc(food, and)
advmod(predigest, even)
conj(process, predigest)
obj(use, food)
punct(subject, .)
nsubj(industry, this)
cop(industry, be)
det(industry, a)
amod(industry, enormous)
root(ROOT, industry)
nsubj(subject, that)
cop(subject, be)
acl:relcl(industry, subject)
case(sabotage, to)
obl(subject, sabotage)
punct(industry, .)
nsubj(include, one)
aux(include, must)
root(ROOT, include)
det(preparation, the)
obj(include, preparation)
case(drink, of)
amod(drink, soft)
nmod(preparation, drink)
cc(processing, and)
det(processing, the)
conj(preparation, processing)
case(milk, of)
nmod(processing, milk)
cc(product, and)
conj(milk, milk)
conj(milk, product)
punct(include, .)
amod(industry, huge)
nsubj(involved, industry)
cop(involved, be)
root(ROOT, involved)
advmod(involved, also)
case(production, in)
det(production, the)
obl(involved, production)
case(product, of)
amod(product, biological)
nmod(production, product)
punct(drug, ,)
conj(product, drug)
cc(cosmetics, and)
conj(product, cosmetics)
nsubj(liable, which)
cop(liable, be)
acl:relcl(product, liable)
case(type, to)
det(type, this)
obl(liable, type)
case(attack, of)
nmod(type, attack)
punct(involved, . )
det(variety, a)
nsubj:pass(direct, variety)
case(technique, of)
nmod(variety, technique)
aux(direct, have)
aux:pass(direct, be)
root(ROOT, direct)
case(isolation, toward)
det(isolation, the)
obl(direct, isolation)
cc(study, and)
conj(isolation, study)
case(antibody, of)
compound(group, blood)
compound(antibody, group)
nmod(isolation, antibody)
punct(direct, .)
nsubj(include, these)
root(ROOT, include)
amod(temperature, low)
punct(temperature, -)
compound(ethanol, temperature)
obj(include, ethanol)
punct(Cohn, ()
appos(ethanol, Cohn)
punct(Cohn, ))
appos(ethanol, fractionation)
punct(electrophoresis, ,)
conj(fractionation, electrophoresis)
punct(ultracentrifugation, ,)
conj(fractionation, ultracentrifugation)
cc(chromatography, and)
compound(chromatography, column)
conj(fractionation, chromatography)
case(cellulose, on)
compound(exchange, ion)
compound(cellulose, exchange)
nmod(fractionation, cellulose)
punct(include, . )
nsubj:pass(apply, modification)
case(technique, of)
det(technique, the)
amod(technique, last)
nmod(modification, technique)
aux(apply, have)
aux:pass(apply, be)
root(ROOT, apply)
case(group, by)
amod(group, several)
obl(apply, group)
case(investigator, of)
nmod(group, investigator)
punct(Abelson, .)
appos(group, Abelson)
cc(Rawson, and)
conj(Abelson, Rawson)
punct(apply, ,)
advcl(apply, use)
det(scheme, a)
amod(scheme, stepwise)
amod(scheme, elution)
obj(use, scheme)
punct(scheme, ,)
amod(sera, fractionate)
amod(sera, whole)
conj(scheme, sera)
acl(sera, contain)
compound(antibody, abo)
cc(rh, and)
conj(abo, rh)
obj(contain, antibody)
case(cellulose, on)
compound(cellulose, diethylaminoethyl)
compound(cellulose, deae)
nmod(antibody, cellulose)
cc(cellulose, and)
conj(cellulose, carboxymethyl)
conj(cellulose, cellulose)
punct(apply, .)
nsubj(use, speer)
cc(coworker, and)
conj(speer, coworker)
punct(speer, ,)
case(study, in)
det(study, a)
amod(study, similar)
obl(use, study)
case(antibody, of)
compound(group, blood)
compound(antibody, group)
nmod(study, antibody)
case(sera, of)
amod(sera, whole)
nmod(antibody, sera)
punct(use, ,)
root(ROOT, use)
det(series, a)
obj(use, series)
case(gradient, of)
nmod(series, gradient)
case(elution, for)
nmod(gradient, elution)
case(Aj, from)
nmod(elution, Aj)
punct(use, .)
nsubj(use, Fahey)
cc(Morrison, and)
conj(Fahey, Morrison)
parataxis(use, use)
det(gradient, a)
amod(gradient, single)
punct(gradient, ,)
amod(gradient, continuous)
obj(use, gradient)
case(h, at)
amod(h, constant)
compound(h, p)
nmod(gradient, h)
case(fractionation, for)
det(fractionation, the)
nmod(h, fractionation)
case(agglutinin, of)
amod(agglutinin, anti-A)
cc(anti-b, and)
conj(anti-A, anti-b)
nmod(fractionation, agglutinin)
case(samples, from)
amod(samples, preisolate)
punct(samples, **)
compound(globulin, yg)
punct(globulin, -)
compound(samples, globulin)
nmod(agglutinin, samples)
punct(use, .)
case(work, in)
det(work, the)
amod(work, present)
obl(fractionate, work)
amod(sera, whole)
nsubj:pass(fractionate, sera)
aux(fractionate, have)
aux:pass(fractionate, be)
root(ROOT, fractionate)
case(chromatography, by)
obl(fractionate, chromatography)
case(cellulose, on)
compound(cellulose, deae)
punct(cellulose, -)
nmod(chromatography, cellulose)
advcl(fractionate, use)
amod(gradient, single)
obj(use, gradient)
amod(gradient, similar)
case(those, to)
obl(similar, those)
acl(those, describe)
case(Sober, by)
obl(describe, Sober)
cc(Peterson, and)
conj(Sober, Peterson)
punct(property, ,)
cc(property, and)
amod(property, certain)
amod(property, chemical)
cc(serological, and)
conj(chemical, serological)
conj(chromatography, property)
case(fraction, of)
det(fraction, the)
nmod(property, fraction)
acl(fraction, contain)
obj(contain, antibody)
case(system, of)
det(system, the)
compound(system, abo)
cc(rh, and)
conj(abo, rh)
nmod(antibody, system)
aux(describe, have)
aux:pass(describe, be)
acl:relcl(fraction, describe)
punct(fractionate, . )
nsubj:pass(obtain, Materials)
cc(method, and)
conj(Materials, method)
nsubj:pass(obtain, samples)
punct(samples, .)
compound(samples, Serum)
nsubj:pass(obtain, samples)
aux:pass(obtain, be)
root(ROOT, obtain)
case(a, from)
amod(a, normal)
compound(a, group)
obl(obtain, a)
punct(b, ,)
compound(b, group)
conj(a, b)
cc(group, and)
conj(a, group)
case(donor, of)
nmod(group, donor)
punct(obtain, .)
nsubj:pass(take, three)
case(sera, of)
det(sera, the)
amod(sera, anti-Rh)
nmod(three, sera)
acl(sera, use)
aux:pass(take, be)
root(ROOT, take)
case(individual, from)
advmod(sensitize, recently)
amod(individual, sensitize)
obl(take, individual)
punct(take, .)
nsubj(contain, one)
root(ROOT, contain)
amod(antibody, complete)
obj(contain, antibody)
cc(have, and)
conj(contain, have)
det(titer, a)
obj(have, titer)
case(1, of)
nmod(titer, 1)
punct(titer, :)
appos(titer, 512)
case(saline, in)
nmod(512, saline)
punct(contain, .)
det(second, the)
amod(antibody, second)
amod(antibody, contain)
amod(antibody, incomplete)
root(ROOT, antibody)
cc(show, and)
conj(antibody, show)
obj(show, titer)
case(1, of)
nmod(titer, 1)
punct(titer, :)
appos(titer, 256)
case(albumin, in)
nmod(256, albumin)
cc(1, and)
conj(256, 1)
punct(1, :)
conj(256, 2048)
case(test, by)
det(test, the)
amod(test, indirect)
compound(test, Coombs)
nmod(2048, test)
punct(256, .)
det(third, the)
nsubj(have, third)
punct(have, ,)
advcl(have, contain)
det(type, the)
amod(type, mix)
obj(contain, type)
case(antibody, of)
amod(antibody, complete)
cc(incomplete, and)
conj(complete, incomplete)
nmod(type, antibody)
punct(have, ,)
root(ROOT, have)
obj(have, titer)
case(1, of)
nmod(titer, 1)
punct(256, :)
appos(titer, 256)
case(saline, in)
nmod(256, saline)
punct(saline, ,)
conj(256, 1)
punct(512, :)
conj(256, 512)
case(albumin, in)
nmod(512, albumin)
cc(1, and)
conj(512, 1)
punct(1, :)
appos(1, 1024)
case(test, by)
det(test, the)
amod(test, indirect)
compound(test, Coombs)
nmod(1024, test)
punct(have, .)
case(addition, in)
obl(obtain, addition)
nummod(serum, one)
nsubj:pass(obtain, serum)
aux:pass(obtain, be)
root(ROOT, obtain)
case(donor, from)
det(donor, a)
obl(obtain, donor)
punct(R., ()
appos(donor, R.)
flat(R., E.)
punct(R., ))
nsubj:pass(sensitize, who)
aux(sensitize, have)
aux:pass(sensitize, be)
acl:relcl(donor, sensitize)
nummod(year, 6)
obl:npmod(previously, year)
advmod(sensitize, previously)
punct(obtain, .)
det(serum, this)
nsubj(exhibit, serum)
root(ROOT, exhibit)
obj(exhibit, titer)
case(1, of)
nmod(titer, 1)
punct(16, :)
appos(titer, 16)
case(albumin, in)
nmod(16, albumin)
cc(1, and)
conj(16, 1)
punct(16, :)
conj(16, 256)
case(test, by)
det(test, the)
amod(test, indirect)
compound(test, Coombs)
nmod(256, test)
punct(exhibit, .)
det(titer, these)
compound(titer, antibody)
nsubj:pass(determine, titer)
aux:pass(determine, be)
root(ROOT, determine)
case(reaction, by)
obl(determine, reaction)
case(homozygous, with)
nmod(reaction, homozygous)
compound(cell, Af)
amod(cell, red)
root(ROOT, cell)
punct(cell, .)
amod(technique, serological)
root(ROOT, technique)
punct(technique, .)
nsubj:pass(determine, Anti-A)
cc(activity, and)
amod(activity, anti-b)
conj(Anti-A, activity)
aux:pass(determine, be)
root(ROOT, determine)
case(fraction, in)
obl(determine, fraction)
case(sera, from)
det(sera, the)
nmod(fraction, sera)
case(a, of)
compound(a, group)
nmod(sera, a)
punct(b, ,)
compound(b, group)
conj(a, b)
cc(group, or)
conj(a, group)
case(donor, of)
nmod(group, donor)
case(method, by)
det(method, the)
amod(method, follow)
compound(agglutination, tube)
compound(method, agglutination)
nmod(donor, method)
punct(determine, .)
nummod(drop, one)
nsubj:pass(add, drop)
case(sample, of)
det(sample, each)
nmod(drop, sample)
aux:pass(add, be)
root(ROOT, add)
case(drop, to)
nummod(drop, one)
obl(add, drop)
case(suspension, of)
det(suspension, a)
nummod(%, 2)
compound(suspension, %)
nmod(drop, suspension)
case(group, of)
nmod(suspension, group)
root(ROOT, Af)
cc(group, or)
conj(Af, group)
compound(cell, b)
amod(cell, red)
conj(Af, cell)
case(tube, in)
det(tube, a)
amod(tube, small)
compound(tube, Af)
compound(tube, test)
nmod(cell, tube)
punct(cell, .)
case(instance, in)
amod(instance, several)
obl(use, instance)
nsubj:pass(use, group)
case(cell, of)
nmod(group, cell)
aux:pass(use, be)
advmod(use, also)
root(ROOT, use)
case(controls, as)
obl(use, controls)
punct(use, .)
det(cell, the)
amod(cell, red)
nsubj:pass(use, cell)
aux:pass(use, be)
root(ROOT, use)
case(day, within)
nummod(day, 2)
obl(use, day)
case(donation, after)
obl(use, donation)
cc(wash, and)
aux:pass(wash, be)
conj(use, wash)
case(amount, with)
amod(amount, large)
obl(wash, amount)
case(saline, of)
nmod(amount, saline)
case(use, before)
nmod(amount, use)
punct(use, .)
det(mixture, the)
nsubj:pass(allow, mixture)
case(sample, of)
nmod(mixture, sample)
cc(suspension, plus)
compound(suspension, cell)
conj(sample, suspension)
aux:pass(allow, be)
root(ROOT, allow)
mark(stand, to)
xcomp(allow, stand)
case(temperature, at)
compound(temperature, room)
obl(stand, temperature)
case(Aj, for)
nummod(Aj, 1)
obl(stand, Aj)
punct(allow, .)
det(tube, the)
nsubj:pass(centrifuge, tube)
aux:pass(centrifuge, be)
advmod(centrifuge, then)
parataxis(allow, centrifuge)
case(rpm, at)
nummod(rpm, 1000)
obl(centrifuge, rpm)
case(min, for)
nummod(min, 1)
obl(centrifuge, min)
cc(examine, and)
conj(centrifuge, examine)
advmod(examine, macroscopically)
case(agglutination, for)
obl(examine, agglutination)
punct(allow, .)
case(method, for)
det(method, the)
compound(method, albumin)
obl(allow, method)
punct(allow, ,)
amod(volume, equal)
nsubj:pass(allow, volume)
case(albumin, of)
nummod(%, 30)
compound(albumin, %)
compound(albumin, bovine)
nmod(volume, albumin)
punct(sample, ,)
conj(albumin, sample)
cc(cell, and)
nummod(%, 2)
compound(cell, %)
conj(volume, cell)
acl(cell, suspend)
case(saline, in)
obl(suspend, saline)
aux:pass(allow, be)
root(ROOT, allow)
mark(stand, to)
xcomp(allow, stand)
case(temperature, at)
compound(temperature, room)
obl(stand, temperature)
case(hr, for)
nummod(hr, 1)
obl(stand, hr)
cc(centrifuge, and)
advmod(centrifuge, then)
aux:pass(centrifuge, be)
conj(stand, centrifuge)
case(rpm, at)
nummod(rpm, 1000)
obl(centrifuge, rpm)
case(Aj, for)
nummod(Aj, 1)
nmod(rpm, Aj)
punct(test, .)
det(samples, all)
nsubj:pass(test, samples)
aux:pass(test, be)
parataxis(centrifuge, test)
case(method, by)
cc:preconj(method, both)
det(method, the)
amod(method, saline)
cc(albumin, and)
conj(saline, albumin)
obl(test, method)
punct(allow, .)
det(activity, the)
nsubj:pass(test, activity)
case(fraction, of)
nmod(activity, fraction)
case(sera, of)
nmod(fraction, sera)
acl(sera, contain)
compound(antibody, rh)
obj(contain, antibody)
aux:pass(test, be)
root(ROOT, test)
case(technique, by)
det(technique, the)
amod(technique, saline)
punct(albumin, ,)
conj(saline, albumin)
cc(indirect, and)
conj(saline, indirect)
compound(technique, Coombs)
obl(test, technique)
punct(test, .)
root(ROOT, Homozygous)
cc(heterozygous, and)
conj(Homozygous, heterozygous)
compound(cell, Af)
root(ROOT, cell)
punct(Af, ,)
conj(cell, Af)
cc(homozygous, and)
conj(cell, homozygous)
cc(heterozygous, and)
conj(cell, heterozygous)
compound(cell, Af)
nsubj:pass(use, cell)
aux:pass(use, be)
root(ROOT, use)
mark(test, to)
xcomp(use, test)
det(sample, each)
obj(test, sample)
punct(use, ;)
punct(use, ;)
advmod(interest, however)
punct(use, ,)
case(interest, in)
det(interest, the)
obl(use, interest)
case(clarity, of)
nmod(interest, clarity)
cc(conciseness, and)
conj(clarity, conciseness)
advmod(result, only)
det(result, the)
conj(interest, result)
acl(result, obtain)
case(homozygous, with)
obl(obtain, homozygous)
root(ROOT, Af)
cc(homozygous, and)
conj(Af, homozygous)
compound(cell, Af)
nsubj:pass(present, cell)
aux(present, will)
aux:pass(present, be)
root(ROOT, present)
advmod(present, here)
punct(present, .)
det(test, the)
compound(test, saline)
cc(albumin, and)
conj(saline, albumin)
nsubj:pass(perform, test)
aux:pass(perform, be)
root(ROOT, perform)
mark(describe, as)
advcl(perform, describe)
case(samples, for)
det(samples, the)
compound(samples, abo)
obl(describe, samples)
mark(incubate, except)
mark(incubate, that)
det(mixture, the)
nsubj:pass(incubate, mixture)
aux:pass(incubate, be)
advcl(describe, incubate)
case(hr, for)
nummod(hr, 1)
obl(incubate, hr)
case(c, at)
nummod(degree, 37)
punct(degree, -)
compound(c, degree)
punct(c, -)
nmod(hr, c)
case(centrifugation, before)
nmod(c, centrifugation)
punct(perform, .)
det(tube, the)
amod(tube, saline)
nsubj:pass(save, tube)
aux:pass(save, be)
root(ROOT, save)
cc(use, and)
conj(save, use)
case(test, for)
det(test, the)
amod(test, indirect)
compound(test, Coombs)
obl(use, test)
case(manner, in)
det(manner, the)
amod(manner, follow)
obl(use, manner)
punct(save, .)
det(cell, the)
nsubj:pass(wash, cell)
aux:pass(wash, be)
root(ROOT, wash)
nummod(time, three)
obl:tmod(wash, time)
case(saline, with)
obl(wash, saline)
punct(add, ,)
amod(serum, anti-human)
nsubj:pass(add, serum)
aux:pass(add, be)
conj(wash, add)
punct(resuspend, ,)
det(cell, the)
nsubj:pass(resuspend, cell)
aux:pass(resuspend, be)
conj(add, resuspend)
punct(centrifuge, ,)
cc(centrifuge, and)
det(mixture, the)
nsubj:pass(centrifuge, mixture)
aux:pass(centrifuge, be)
conj(resuspend, centrifuge)
case(rpm, at)
nummod(rpm, 1000)
obl(centrifuge, rpm)
case(min, for)
nummod(min, 1)
obl(centrifuge, min)
cc(examine, and)
conj(centrifuge, examine)
case(agglutination, for)
obl(examine, agglutination)
punct(wash, .)
det(sera, the)
amod(sera, anti-human)
nsubj(use, sera)
aux(prepare, use)
aux:pass(prepare, be)
root(ROOT, prepare)
mark(inject, by)
advcl(prepare, inject)
amod(serum, whole)
amod(serum, human)
obj(inject, serum)
case(rabbit, into)
obl(inject, rabbit)
punct(prepare, .)
det(antisera, those)
nsubj:pass(select, antisera)
acl(antisera, show)
case(immunoelectrophoresis, by)
obl(show, immunoelectrophoresis)
mark(type, to)
cop(type, be)
case(type, of)
det(type, the)
punct(spectrum, ``)
amod(spectrum, broad)
compound(type, spectrum)
punct(spectrum, '')
nsubj:pass(select, type)
aux:pass(select, be)
root(ROOT, select)
case(use, for)
obl(select, use)
case(study, in)
det(study, the)
amod(study, present)
nmod(use, study)
punct(select, .)
det(cell, the)
amod(cell, red)
nsubj:pass(use, cell)
case(test, for)
det(test, the)
compound(test, rh)
compound(test, antibody)
nmod(cell, test)
aux:pass(use, be)
root(ROOT, use)
case(day, within)
nummod(day, 3)
obl(use, day)
mark(draw, after)
advcl(use, draw)
case(cell, except)
case(cell, for)
det(cell, the)
compound(cell, Af)
obl(draw, cell)
punct(cell, ,)
nsubj:pass(glycerolize, which)
aux(glycerolize, have)
aux:pass(glycerolize, be)
acl:relcl(cell, glycerolize)
cc(store, and)
conj(glycerolize, store)
case(c, at)
punct(degree, -)
nummod(degree, 20)
punct(degree, -)
compound(c, degree)
punct(c, -)
obl(store, c)
case(year, for)
advmod(1, approximately)
nummod(year, 1)
nmod(c, year)
punct(use, .)
det(cell, these)
nsubj:pass(thaw, cell)
aux:pass(thaw, be)
root(ROOT, thaw)
case(c, at)
nummod(degree, 37)
punct(degree, -)
compound(c, degree)
punct(c, -)
obl(thaw, c)
case(min, for)
nummod(min, 30)
nmod(c, min)
cc(deglycerolize, and)
aux:pass(deglycerolize, be)
conj(thaw, deglycerolize)
mark(centrifuge, by)
advmod(centrifuge, alternately)
advcl(deglycerolize, centrifuge)
cc(mixing, and)
conj(centrifuge, mixing)
case(concentration, with)
amod(concentration, descend)
obl(mixing, concentration)
case(solution, of)
compound(solution, glycerol)
nmod(concentration, solution)
punct(20, ()
appos(solution, 20)
punct(18, ,)
conj(20, 18)
punct(10, ,)
conj(20, 10)
punct(8, ,)
conj(20, 8)
punct(4, ,)
conj(20, 4)
cc(%, and)
nummod(%, 2)
conj(20, %)
punct(%, ))
punct(thaw, .)
det(cell, the)
nsubj:pass(wash, cell)
aux:pass(wash, be)
advmod(wash, then)
root(ROOT, wash)
nummod(time, three)
obl:tmod(wash, time)
case(saline, with)
obl(wash, saline)
cc(resuspend, and)
conj(wash, resuspend)
case(%, to)
nummod(%, 2)
obl(resuspend, %)
case(saline, in)
nmod(%, saline)
punct(wash, .)
root(ROOT, chromatography)
punct(chromatography, .)
compound(samples, Blood)
nsubj:pass(allow, samples)
aux:pass(allow, be)
root(ROOT, allow)
mark(clot, to)
xcomp(allow, clot)
case(temperature, at)
compound(temperature, room)
obl(clot, temperature)
case(hr, for)
nummod(hr, 3)
obl(clot, hr)
punct(centrifuge, ,)
conj(hr, centrifuge)
cc(remove, and)
det(serum, the)
nsubj:pass(remove, serum)
aux:pass(remove, be)
conj(allow, remove)
punct(allow, .)
det(serum, the)
nsubj:pass(measure, serum)
aux:pass(measure, be)
root(ROOT, measure)
advmod(measure, volumetrically)
cc(dialyze, and)
advmod(dialyze, subsequently)
conj(measure, dialyze)
case(cold, in)
det(cold, the)
obl(dialyze, cold)
case(hr, for)
case(least, at)
nmod(24, least)
nummod(hr, 24)
obl(dialyze, hr)
case(change, against)
nummod(change, three)
case(four, to)
nmod(three, four)
nmod(hr, change)
punct(change, ,)
advmod(750, approximately)
nummod(ml, 750)
appos(change, ml)
det(ml, each)
punct(buffer, ,)
case(buffer, of)
punct(buffer, ``)
compound(buffer, starting)
nmod(each, buffer)
punct(buffer, '')
punct(buffer, .)
det(buffer, this)
appos(buffer, buffer)
punct(buffer, ,)
appos(buffer, ph)
appos(buffer, 8.6)
punct(0.005, ,)
cop(0.005, be)
appos(buffer, 0.005)
root(ROOT, M)
case(Af, in)
nmod(M, Af)
cc(m, and)
nummod(m, 0.039)
conj(M, m)
case(tris, in)
compound(aminometha, tris)
punct(hydroxymethyl, ()
compound(aminometha, hydroxymethyl)
punct(hydroxymethyl, ))
punct(aminometha, -)
parataxis(M, aminometha)
punct(tris, ()
appos(aminometha, tris)
punct(tris, ))
punct(M, .)
mark(centrifuge, after)
nsubj:pass(centrifuge, dialysis)
det(sample, the)
nsubj:pass(centrifuge, sample)
aux:pass(centrifuge, be)
advcl(prepare, centrifuge)
cc(supernatant, and)
det(supernatant, the)
nsubj:pass(centrifuge, supernatant)
acl(supernatant, place)
case(column, on)
det(column, a)
compound(cm, Af)
compound(column, cm)
obl(place, column)
case(cellulose, of)
compound(cellulose, eeae)
punct(cellulose, -)
nmod(column, cellulose)
acl(column, equilibrate)
case(buffer, with)
compound(buffer, starting)
obl(equilibrate, buffer)
punct(cellulose, .)
det(cellulose, the)
compound(cellulose, deae)
punct(cellulose, -)
appos(supernatant, cellulose)
punct(cellulose, ,)
acl(cellulose, contain)
compound(m, 0.78)
nummod(Eq, m)
obj(contain, Eq)
case(n/g, of)
nmod(Eq, n/g)
punct(prepare, ,)
aux:pass(prepare, be)
root(ROOT, prepare)
case(laboratory, in)
nmod:poss(laboratory, we)
obl(prepare, laboratory)
case(method, by)
det(method, the)
obl(prepare, method)
case(Peterson, of)
nmod(method, Peterson)
cc(Sober, and)
conj(Peterson, Sober)
punct(7, ()
appos(Peterson, 7)
punct(7, ))
case(cellulose, from)
amod(cellulose, powder)
nmod(method, cellulose)
punct(cellulose, ,)
nummod(mesh, 100)
case(230, -)
nmod(100, 230)
appos(cellulose, mesh)
punct(prepare, .)
det(amount, the)
amod(amount, small)
nsubj:pass(suspend, amount)
case(material, of)
amod(material, insoluble)
nmod(amount, material)
nsubj(precipitate, which)
acl:relcl(material, precipitate)
case(dialysis, during)
obl(precipitate, dialysis)
aux:pass(suspend, be)
root(ROOT, suspend)
case(ml, in)
advmod(5, approximately)
nummod(ml, 5)
obl(suspend, ml)
case(buffer, of)
compound(buffer, starting)
nmod(ml, buffer)
punct(buffer, ,)
acl(buffer, centrifuge)
punct(resuspend, ,)
conj(centrifuge, resuspend)
case(ml, in)
nummod(ml, 2.5)
obl(resuspend, ml)
case(saline, of)
amod(saline, isotonic)
nmod(ml, saline)
cc(test, and)
conj(resuspend, test)
case(activity, for)
compound(activity, antibody)
obl(test, activity)
punct(suspend, .)
det(chromatography, the)
nsubj:pass(do, chromatography)
aux:pass(do, be)
root(ROOT, do)
case(c, at)
nummod(degree, 6)
punct(degree, -)
compound(c, degree)
punct(c, -)
obl(do, c)
acl(c, use)
compound(elution, gradient)
obj(use, elution)
punct(use, ,)
advmod(Sober, essentially)
case(Sober, accord)
fixed(accord, to)
obl(use, Sober)
cc(Peterson, and)
conj(Sober, Peterson)
punct(do, .)
det(gradient, the)
amod(gradient, deep)
amod(gradient, concave)
nsubj:pass(obtain, gradient)
acl(gradient, employ)
punct(fig., ()
appos(employ, fig.)
nummod(fig., 2)
punct(fig., ))
aux:pass(obtain, be)
root(ROOT, obtain)
case(device, with)
det(device, a)
compound(chamber, nine)
punct(chamber, -)
amod(device, chamber)
compound(device, gradient)
compound(device, elution)
obl(obtain, device)
punct(Varigrad, ()
punct(Varigrad, ``)
appos(device, Varigrad)
punct(Varigrad, '')
punct(reference, ,)
conj(device, reference)
punct(8, ()
appos(reference, 8)
punct(8, ))
punct(8, ))
cc(describe, and)
aux(describe, have)
aux:pass(describe, be)
conj(obtain, describe)
advmod(describe, elsewhere)
punct(obtain, .)
det(other, the)
nsubj:pass(produce, other)
punct(produce, ,)
det(gradient, a)
amod(gradient, shallow)
amod(gradient, concave)
nsubj:pass(produce, gradient)
punct(Fig., ()
appos(gradient, Fig.)
nummod(Fig., 1)
punct(Fig., ))
punct(produce, ,)
aux:pass(produce, be)
root(ROOT, produce)
case(so-, with)
det(so-, a)
obl(produce, so-)
acl(so-, call)
punct(sphere, ``)
compound(sphere, cone)
punct(sphere, -)
compound(apparatus, sphere)
punct(sphere, '')
obj(call, apparatus)
punct(apparatus, ,)
det(cone, the)
punct(cone, ``)
appos(apparatus, cone)
punct(cone, '')
cop(flask, be)
det(flask, a)
nummod(liter, 2)
punct(liter, -)
compound(flask, liter)
compound(flask, Erlenmeyer)
acl(cone, flask)
cc(sphere, and)
det(sphere, the)
punct(sphere, ``)
conj(flask, sphere)
punct(sphere, ,)
punct(sphere, '')
det(flask, a)
nummod(liter, 2)
punct(liter, -)
compound(flask, liter)
compound(bottom, round)
punct(bottom, -)
compound(flask, bottom)
appos(sphere, flask)
punct(produce, .)
nsubj(contain, each)
advmod(contain, initially)
root(ROOT, contain)
nummod(ml, 1700)
obj(contain, ml)
case(buffer, of)
nmod(ml, buffer)
punct(contain, ;)
punct(contain, ;)
case(sphere, in)
det(sphere, the)
obl(start, sphere)
aux(start, be)
parataxis(contain, start)
obj(start, buffer)
cc(buffer, and)
case(cone, in)
det(cone, the)
obl(buffer, cone)
cop(buffer, be)
amod(buffer, final)
conj(start, buffer)
punct(buffer, ,)
nummod(m, 0.50)
nummod(buffer, m)
case(Af, in)
cc:preconj(Af, both)
nmod(buffer, Af)
cc(tris, and)
conj(Af, tris)
punct(Af, ,)
appos(Af, ph)
nummod(ph, 4.1)
punct(contain, . )
det(rate, a)
compound(rate, flow)
nsubj:pass(use, rate)
case(Af, of)
nummod(Af, 72)
nmod(rate, Af)
aux:pass(use, be)
root(ROOT, use)
cc(collect, and)
nummod(ml, 12)
compound(fraction, ml)
nsubj:pass(collect, fraction)
aux:pass(collect, be)
conj(use, collect)
punct(use, .)
advmod(165, approximately)
nummod(fraction, 165)
nsubj:pass(obtain, fraction)
aux:pass(obtain, be)
root(ROOT, obtain)
case(column, from)
det(column, each)
obl(obtain, column)
punct(obtain, .)
nsubj:pass(read, these)
aux:pass(read, be)
root(ROOT, read)
case(m**ym, at)
nummod(m**ym, 280)
obl(read, m**ym)
case(spectrophotometer, in)
det(spectrophotometer, a)
compound(spectrophotometer, Beckman)
compound(spectrophotometer, model)
compound(spectrophotometer, DU)
obl(read, spectrophotometer)
cc(test, and)
conj(read, test)
case(activity, for)
compound(activity, antibody)
obl(test, activity)
mark(describe, as)
advcl(test, describe)
advmod(describe, above)
punct(read, .)
compound(electrophoresis, paper)
nsubj:pass(concentrate, electrophoresis)
punct(electrophoresis, .)
case(identification, for)
compound(identification, protein)
obl(concentrate, identification)
punct(fraction, ,)
nsubj:pass(concentrate, fraction)
case(column, from)
det(column, the)
nmod(fraction, column)
aux:pass(concentrate, be)
root(ROOT, concentrate)
case(pervaporation, by)
obl(concentrate, pervaporation)
case(stream, against)
det(stream, a)
obl(concentrate, stream)
case(air, of)
nmod(stream, air)
case(c, at)
nummod(degree, 5)
punct(degree, -)
compound(c, degree)
punct(c, -)
nmod(stream, c)
cc(dialysis, or)
case(dialysis, by)
amod(pressure, negative)
compound(dialysis, pressure)
conj(c, dialysis)
case(apparatus, in)
det(apparatus, a)
nmod(dialysis, apparatus)
nsubj(permit, which)
acl:relcl(apparatus, permit)
amod(concentration, simultaneous)
obj(permit, concentration)
case(protein, of)
det(protein, the)
nmod(concentration, protein)
cc(dialysis, and)
conj(protein, dialysis)
case(saline, against)
amod(saline, isotonic)
nmod(protein, saline)
punct(maintain, .)
case(procedure, during)
det(procedure, the)
amod(procedure, latter)
obl(maintain, procedure)
det(temperature, the)
nsubj:pass(maintain, temperature)
aux:pass(maintain, be)
conj(permit, maintain)
case(c, at)
nummod(degree, 2)
punct(degree, -)
compound(c, degree)
punct(c, -)
obl(maintain, c)
mark(surround, by)
advcl(maintain, surround)
det(apparatus, the)
obj(surround, apparatus)
case(ice, with)
nmod(apparatus, ice)
punct(concentrate, .)
mark(give, because)
amod(dialysis, negative)
compound(dialysis, pressure)
nsubj(give, dialysis)
advcl(use, give)
amod(recovery, better)
obj(give, recovery)
case(protein, of)
nmod(recovery, protein)
punct(detection, ,)
amod(detection, permit)
conj(protein, detection)
case(protein, of)
nmod(detection, protein)
acl(detection, concentrate)
case(solution, from)
advmod(dilute, very)
amod(solution, dilute)
obl(concentrate, solution)
cc(procedure, and)
cop(procedure, be)
det(procedure, a)
amod(procedure, gentler)
conj(solution, procedure)
punct(use, ,)
nsubj:pass(use, it)
aux:pass(use, be)
root(ROOT, use)
case(all, in)
obl(use, all)
cc(experiment, but)
det(experiment, the)
amod(experiment, earliest)
conj(all, experiment)
punct(use, .)
compound(electrophoresis, paper)
nsubj:pass(carry, electrophoresis)
aux:pass(carry, be)
root(ROOT, carry)
compound:prt(carry, out)
case(samples, on)
det(samples, the)
amod(samples, concentrate)
obl(carry, samples)
case(cell, in)
det(cell, a)
compound(model, spinco)
compound(cell, model)
compound(cell, R)
nmod(samples, cell)
advcl(carry, use)
amod(buffer, barbital)
obj(use, buffer)
punct(buffer, ,)
appos(buffer, ph)
nummod(ph, 8.6)
punct(buffer, ,)
amod(strength, ionic)
appos(buffer, strength)
nummod(strength, 0.075)
punct(buffer, ,)
case(temperature, at)
compound(temperature, room)
obl(use, temperature)
case(paper, on)
compound(paper, Whatman)
nummod(Whatman, 3)
compound(paper, mm)
compound(paper, filter)
nmod(temperature, paper)
punct(carry, .)
nummod(milliamper, five)
nsubj:pass(apply, milliamper)
cc(cell, /)
conj(milliamper, cell)
aux:pass(apply, be)
root(ROOT, apply)
case(hr, for)
nummod(hr, 18)
obl(apply, hr)
punct(hr, ,)
case(which, after)
obl(stain, which)
det(strip, the)
nsubj:pass(stain, strip)
aux:pass(stain, be)
acl:relcl(hr, stain)
case(bromphenol, with)
obl(stain, bromphenol)
obl(stain, blue)
cc(carry, and)
nsubj:pass(carry, densitometry)
aux:pass(carry, be)
conj(stain, carry)
compound:prt(use, out)
advcl(carry, use)
det(Analytrol, a)
compound(Analytrol, spinco)
obj(use, Analytrol)
punct(be, .)
mark(be, when)
compound(electrophoresis, paper)
nsubj(be, electrophoresis)
advcl(carry, be)
mark(use, to)
aux:pass(use, be)
xcomp(be, use)
case(preparation, for)
obl(use, preparation)
punct(strip, ,)
nummod(strip, eight)
appos(preparation, strip)
case(sample, of)
det(sample, a)
amod(sample, whole)
compound(sample, serum)
nmod(strip, sample)
cc(fraction, or)
det(fraction, a)
amod(fraction, chromatographic)
conj(sample, fraction)
acl(fraction, concentrate)
case(pressure, by)
amod(pressure, negative)
obl(concentrate, pressure)
nsubj:pass(run, dialysis)
aux:pass(run, be)
acl:relcl(fraction, run)
cc(chamber, /)
conj(run, chamber)
case(condition, under)
det(condition, the)
obl(run, condition)
acl(condition, describe)
advmod(describe, above)
punct(apply, .)
case(end, at)
det(end, the)
obl(dry, end)
case(run, of)
det(run, the)
nmod(end, run)
punct(dry, ,)
det(strip, the)
nsubj:pass(dry, strip)
case(position, in)
det(position, the)
amod(position, third)
cc(sixth, and)
conj(third, sixth)
nmod(strip, position)
case(chamber, in)
det(chamber, each)
nmod(position, chamber)
aux:pass(dry, be)
root(ROOT, dry)
punct(dry, ,)
advcl(dry, stain)
case(hr, for)
nummod(hr, 1)
obl(stain, hr)
punct(wash, ,)
conj(hr, wash)
cc(dry, and)
conj(wash, dry)
punct(stain, ,)
mark(maintain, while)
det(strip, the)
amod(strip, other)
nsubj:pass(maintain, strip)
aux:pass(maintain, be)
advcl(stain, maintain)
case(position, in)
det(position, a)
amod(position, horizontal)
obl(maintain, position)
case(c, at)
nummod(degree, 1)
punct(degree, -)
compound(c, degree)
punct(c, -)
nmod(position, c)
punct(dry, .)
det(strip, the)
amod(strip, unstained)
nsubj:pass(mark, strip)
aux:pass(mark, be)
advmod(mark, then)
root(ROOT, mark)
punct(mark, ,)
advcl(mark, use)
det(one, the)
amod(one, stain)
obj(use, one)
case(guide, as)
det(guide, a)
obl(use, guide)
punct(cut, ,)
cc(cut, and)
conj(use, cut)
advmod(cut, transversely)
advmod(cut, so)
mark(separate, as)
mark(separate, to)
advcl(cut, separate)
det(band, the)
amod(band, various)
compound(band, protein)
obj(separate, band)
punct(mark, .)
det(section, the)
compound(section, strip)
nsubj:pass(pool, section)
acl(section, contain)
det(protein, a)
amod(protein, give)
obj(contain, protein)
aux:pass(pool, be)
root(ROOT, pool)
punct(elute, ,)
conj(pool, elute)
case(ml, with)
nummod(ml, 0.5)
obl(elute, ml)
case(saline, of)
amod(saline, isotonic)
nmod(ml, saline)
punct(test, ,)
cc(test, and)
det(eluate, the)
nsubj:pass(test, eluate)
aux:pass(test, be)
conj(pool, test)
case(activity, for)
compound(activity, antibody)
obl(test, activity)
punct(pool, .)
root(ROOT, ultracentrifugation)
punct(ultracentrifugation, . )
nsubj:pass(concentrate, fraction)
case(column, from)
det(column, the)
nmod(fraction, column)
nsubj(be, which)
acl:relcl(column, be)
mark(subject, to)
aux:pass(subject, be)
xcomp(be, subject)
case(ultracentrifugation, to)
amod(ultracentrifugation, analytical)
obl(subject, ultracentrifugation)
aux:pass(concentrate, be)
root(ROOT, concentrate)
case(pressure, by)
amod(pressure, negative)
obl(concentrate, pressure)
obl(concentrate, dialysis)
cc(dialyze, and)
conj(concentrate, dialyze)
case(hr, for)
nummod(hr, 16)
obl(dialyze, hr)
case(cold, in)
det(cold, the)
obl(dialyze, cold)
case(500, against)
case(least, at)
nmod(500, least)
nummod(volume, 500)
obl(dialyze, volume)
case(saline, of)
obl:npmod(buffer, phosphate)
punct(buffer, -)
amod(saline, buffer)
nmod(volume, saline)
punct(saline, ,)
compound(h, p)
appos(saline, h)
nummod(h, 7.2)
punct(strength, ,)
amod(strength, ionic)
list(saline, strength)
root(ROOT, 0.154)
punct(0.154, .)
nsubj:pass(centrifuge, they)
aux:pass(centrifuge, be)
advmod(centrifuge, then)
root(ROOT, centrifuge)
case(pm, at)
nummod(pm, 59,780)
obl(centrifuge, pm)
case(min, for)
nummod(min, 35)
case(80, to)
nmod(35, 80)
obl(centrifuge, min)
case(c, at)
nummod(degree, 20)
punct(degree, -)
compound(c, degree)
punct(c, -)
nmod(min, c)
case(ultracentrifuge, in)
det(ultracentrifuge, a)
compound(ultracentrifuge, spinco)
compound(e, model)
compound(ultracentrifuge, e)
nmod(c, ultracentrifuge)
case(concentration, at)
det(concentration, a)
compound(concentration, protein)
nmod(ultracentrifuge, concentration)
case(%, of)
nummod(%, 1.00)
case(1.25, to)
nmod(1.00, 1.25)
nmod(concentration, %)
punct(compute, .)
compound(coefficient, sedimentation)
nsubj:pass(compute, coefficient)
aux:pass(compute, be)
acl:relcl(%, compute)
case(value, as)
compound(value, Af)
obl(compute, value)
cc(amount, and)
amod(amount, relative)
nsubj:pass(calculate, amount)
case(component, of)
det(component, the)
amod(component, various)
nmod(amount, component)
aux:pass(calculate, be)
acl:relcl(value, calculate)
case(pattern, from)
det(pattern, the)
compound(pattern, Schlieren)
obl(calculate, pattern)
punct(pattern, .)
case(ultracentrifugation, for)
amod(ultracentrifugation, preparative)
obl(concentrate, ultracentrifugation)
punct(concentrate, ,)
nsubj:pass(concentrate, fraction)
case(column, from)
det(column, the)
nmod(fraction, column)
aux:pass(concentrate, be)
acl:relcl(pattern, concentrate)
case(dialysis, by)
amod(pressure, negative)
compound(dialysis, pressure)
obl(concentrate, dialysis)
case(volume, to)
obl(concentrate, volume)
case(ml, of)
nummod(ml, 1)
nmod(volume, ml)
cc(less, or)
conj(ml, less)
punct(transfer, ,)
acl(volume, transfer)
case(tube, to)
compound(tube, cellulose)
obl(transfer, tube)
cc(dilut, and)
conj(transfer, dilut)
case(12, to)
nummod(ml, 12)
obl(dilut, ml)
case(saline, with)
amod(saline, isotonic)
nmod(ml, saline)
punct(centrifuge, .)
nsubj:pass(carry, ultracentrifugation)
aux:pass(carry, be)
advmod(carry, then)
root(ROOT, carry)
compound:prt(carry, out)
case(L, in)
det(L, a)
compound(model, spinco)
compound(L, model)
obl(carry, L)
flat(L, ultracentrifuge)
case(rpm, at)
nummod(rpm, 40,000)
obl(carry, rpm)
case(min, for)
nummod(min, 125)
case(150, to)
nmod(125, 150)
nmod(rpm, min)
punct(min, ,)
nsubj:pass(use, refrigeration)
aux:pass(use, be)
acl(min, use)
case(run, throughout)
det(run, the)
obl(use, run)
punct(use, .)
amod(fraction, successive)
nummod(ml, 1)
punct(ml, -)
compound(fraction, ml)
nsubj:pass(draw, fraction)
aux:pass(draw, be)
advmod(draw, then)
conj(carry, draw)
compound:prt(draw, off)
case(syringe, with)
det(syringe, a)
amod(syringe, hypodermic)
obl(draw, syringe)
punct(syringe, ,)
acl(syringe, start)
case(top, at)
det(top, the)
obl(start, top)
case(tube, of)
det(tube, the)
nmod(top, tube)
punct(test, ,)
cc(test, and)
conj(start, test)
case(activity, for)
amod(activity, agglutinin)
obl(test, activity)
punct(carry, .)
amod(method, other)
nsubj:pass(describe, method)
aux(describe, will)
aux:pass(describe, be)
root(ROOT, describe)
advmod(describe, below)
punct(describe, .)
nsubj(show, Experimental)
cc(result, and)
conj(Experimental, result)
det(material, the)
amod(material, insoluble)
nsubj(show, material)
nsubj(precipitate, which)
acl:relcl(material, precipitate)
case(dialysis, during)
obl(precipitate, dialysis)
case(buffer, against)
compound(buffer, starting)
obl(precipitate, buffer)
advmod(show, always)
conj(describe, show)
amod(activity, intense)
compound(activity, agglutinin)
obj(show, activity)
punct(activity, ,)
advmod(group, regardless)
case(group, of)
det(group, the)
compound(group, blood)
nmod(activity, group)
case(donor, of)
det(donor, the)
nmod(group, donor)
punct(describe, .)
case(either, with)
obl(chromatography, either)
case(gradient, of)
det(gradient, the)
nmod(either, gradient)
acl(gradient, describe)
punct(chromatography, ,)
root(ROOT, chromatography)
case(cellulose, on)
compound(cellulose, deae)
punct(cellulose, -)
compound(agglutinin, cellulose)
amod(agglutinin, separate)
nmod(chromatography, agglutinin)
case(series, of)
det(series, the)
compound(series, abo)
nmod(agglutinin, series)
case(region, into)
case(least, at)
nmod(three, least)
nummod(region, three)
nmod(agglutinin, region)
punct(Figs., ()
appos(region, Figs.)
nummod(Figs., 1)
cc(2, and)
conj(Figs., 2)
punct(Figs., ))
punct(Figs., :)
root(ROOT, one)
case(capacity, of)
advmod(low, extremely)
amod(capacity, low)
compound(capacity, anionic)
compound(capacity, bind)
nmod(one, capacity)
punct(one, ,)
appos(capacity, one)
case(capacity, of)
amod(capacity, low)
compound(capacity, anionic)
compound(capacity, bind)
nmod(one, capacity)
cc(one, and)
conj(one, one)
case(capacity, of)
amod(anionic, high)
compound(capacity, anionic)
compound(capacity, bind)
nmod(one, capacity)
punct(one, .)
nsubj:pass(label, these)
aux(label, have)
aux:pass(label, be)
root(ROOT, label)
obj(label, region)
nummod(region, 1)
punct(2, ,)
nummod(region, 2)
punct(4, ,)
cc(4, and)
conj(region, 4)
punct(4, ,)
advmod(4, respectively)
punct(Fig., ,)
case(Fig., in)
nmod(4, Fig.)
nummod(Fig., 1)
punct(label, .)
mark(flatten, when)
det(part, the)
amod(part, early)
nsubj:pass(flatten, part)
case(gradient, of)
det(gradient, the)
nmod(part, gradient)
aux:pass(flatten, be)
advcl(label, flatten)
punct(flatten, ,)
advmod(use, either)
mark(use, by)
advcl(flatten, use)
det(gradient, the)
obj(use, gradient)
acl(gradient, show)
case(fig, in)
obl(show, fig)
punct(label, .)
nummod(separate, 2)
cc(allow, or)
mark(allow, by)
advcl(separate, allow)
det(gradient, the)
punct(sphere, ``)
compound(sphere, cone)
punct(sphere, -)
compound(gradient, sphere)
punct(sphere, '')
obj(allow, gradient)
mark(become, to)
acl(gradient, become)
xcomp(become, establish)
advmod(slowly, more)
advmod(establish, slowly)
punct(separate, ,)
compound(activity, Region)
nummod(activity, 2)
nsubj:pass(separate, activity)
aux(separate, could)
advmod(separate, sometimes)
aux:pass(separate, be)
root(ROOT, separate)
case(area, into)
nummod(area, two)
obl(separate, area)
punct(donor, ()
appos(area, donor)
punct(donor, P.)
conj(donor, J.)
cc(R., and)
conj(donor, R.)
flat(R., S.)
punct(R., ,)
appos(R., Fig.)
nummod(Fig., 1)
cc(E., and)
conj(R., E.)
flat(E., M.)
punct(E., ,)
appos(E., Fig.)
nummod(Fig., 2)
punct(E., ))
punct(give, .)
det(procedure, the)
amod(procedure, latter)
nsubj(give, procedure)
conj(separate, give)
obj(give, rise)
case(peak, to)
det(peak, a)
amod(peak, small)
amod(peak, active)
compound(peak, protein)
obl(give, peak)
punct(Region, ()
appos(peak, Region)
nummod(Region, 1)
appos(Region, a)
punct(a, ))
case(region, between)
nmod(peak, region)
nummod(region, 1)
cc(2, and)
conj(1, 2)
punct(give, .)
case(2, in)
obl(detect, 2)
case(experiment, of)
nummod(experiment, 15)
nmod(2, experiment)
case(serum, on)
amod(serum, whole)
nmod(experiment, serum)
det(region, a)
nsubj:pass(detect, region)
case(activity, of)
amod(activity, agglutinin)
nmod(region, activity)
case(capacity, with)
amod(capacity, intermediate)
compound(capacity, anionic)
compound(capacity, bind)
nmod(region, capacity)
aux:pass(detect, be)
root(ROOT, detect)
punct(Region, ()
appos(detect, Region)
nummod(Region, 3)
punct(Region, ,)
appos(Region, Fig.)
nummod(Fig., 1)
punct(Region, ))
punct(detect, . )
advmod(detect, moreover)
punct(detect, ,)
case(concentration, after)
obl(detect, concentration)
acl(concentration, use)
amod(dialysis, negative)
compound(dialysis, pressure)
obj(use, dialysis)
punct(detect, ,)
amod(activity, agglutinin)
nsubj:pass(detect, activity)
aux(detect, could)
advmod(detect, sometimes)
aux:pass(detect, be)
root(ROOT, detect)
case(region, in)
det(region, the)
obl(detect, region)
acl(region, designate)
obj(designate, 2)
det(donor, a)
punct(donor, ()
obj(designate, donor)
punct(donor, P.)
conj(donor, J.)
punct(D., ,)
conj(donor, D.)
flat(D., A.)
punct(J., ,)
cc(J., and)
conj(donor, J.)
flat(J., F.)
punct(J., ,)
appos(J., Fig.)
nummod(Fig., 1)
punct(Fig., ))
punct(J., .)
cc(region, not)
det:predet(region, all)
det(region, these)
appos(J., region)
acl(region, exhibit)
amod(activity, equal)
compound(activity, agglutinate)
obj(exhibit, activity)
punct(exhibit, ,)
mark(evidence, as)
advcl(exhibit, evidence)
case(titer, by)
obl(evidence, titer)
cc(extent, and)
det(extent, the)
conj(titer, extent)
case(area, of)
det(area, the)
amod(area, active)
nmod(extent, area)
punct(detect, .)
case(case, in)
det(case, all)
obl(lay, case)
punct(lay, ,)
nsubj(lay, most)
case(activity, of)
det(activity, the)
nmod(most, activity)
root(ROOT, lay)
case(region, in)
det(region, the)
obl(lay, region)
case(capacity, of)
amod(anionic, high)
compound(capacity, anionic)
compound(capacity, bind)
nmod(region, capacity)
punct(lay, .)
nsubj(noticeable, this)
cop(noticeable, be)
advmod(noticeable, particularly)
root(ROOT, noticeable)
case(a, in)
compound(a, group)
obl(noticeable, a)
cc(sera, and)
compound(b, group)
compound(sera, b)
conj(a, sera)
punct(noticeable, ,)
case(which, in)
obl(case, which)
parataxis(noticeable, case)
obj(case, activity)
case(region, in)
nmod(activity, region)
nummod(region, 1)
cc(detectable, and)
nsubj(detectable, 2)
cop(detectable, be)
advmod(detectable, usually)
advmod(detectable, not)
conj(case, detectable)
case(concentration, without)
amod(concentration, prior)
obl(detectable, concentration)
cc(detect, and)
advmod(detect, occasionally)
aux(detect, could)
advmod(detect, not)
aux:pass(detect, be)
conj(detectable, detect)
case(all, at)
obl(detect, all)
punct(noticeable, .)
expl(appear, there)
root(ROOT, appear)
mark(difference, to)
cop(difference, be)
det(difference, no)
xcomp(appear, difference)
case(distribution, in)
det(distribution, the)
nmod(difference, distribution)
case(activity, of)
amod(activity, anti-A)
cc(anti-b, and)
conj(anti-A, anti-b)
nmod(distribution, activity)
case(group, in)
nmod(distribution, group)
case(serum, of)
nmod(group, serum)
punct(difference, ,)
mark(group, though)
case(group, in)
nummod(group, two)
obl(find, group)
case(donor, of)
nmod(group, donor)
punct(J., ()
appos(group, J.)
flat(J., F.)
cc(E., and)
conj(J., E.)
flat(E., M.)
punct(J., ))
advmod(type, only)
nummod(type, one)
nsubj:pass(find, type)
case(agglutinin, of)
nmod(type, agglutinin)
aux:pass(find, be)
parataxis(appear, find)
case(region, in)
det(region, the)
obl(find, region)
case(capacity, of)
amod(anionic, low)
compound(capacity, anionic)
compound(capacity, bind)
nmod(region, capacity)
punct(Figs., ()
appos(capacity, Figs.)
nummod(Figs., 1)
cc(2, and)
conj(Figs., 2)
punct(Figs., ))
punct(appear, .)
amod(samples, several)
nsubj:pass(fractionate, samples)
case(plasma, of)
amod(plasma, citrate)
nmod(samples, plasma)
aux:pass(fractionate, be)
root(ROOT, fractionate)
case(laboratory, in)
nmod:poss(laboratory, we)
obl(fractionate, laboratory)
case(method, by)
obl(fractionate, method)
nummod(method, 6)
case(Cohn, of)
nmod(method, Cohn)
compound(al, et)
flat(Cohn, al)
punct(fractionate, .)
det(fraction, these)
nsubj:pass(test, fraction)
aux:pass(test, be)
root(ROOT, test)
case(activity, for)
compound(activity, abo)
compound(activity, agglutinin)
obl(test, activity)
punct(test, ,)
advcl(test, use)
obj(use, fraction)
case(plasma, from)
compound(plasma, group)
compound(plasma, AB)
obl(use, plasma)
case(control, as)
det(control, a)
obl(use, control)
punct(test, .)
mark(expect, as)
advcl(find, expect)
punct(find, ,)
nsubj:pass(find, most)
case(activity, of)
det(activity, the)
nmod(most, activity)
aux:pass(find, be)
root(ROOT, find)
case(Af, in)
compound(Af, fraction)
obl(find, Af)
punct(find, ,)
case(activity, with)
amod(activity, slight)
obl(find, activity)
acl(activity, see)
case(fraction, in)
obl(see, fraction)
nummod(fraction, 4)
case(1, -)
nmod(4, 1)
punct(find, . )
det(sample, a)
root(ROOT, sample)
case(fraction, of)
nmod(sample, fraction)
nsubj:pass(dissolve, Af)
case(group, from)
nmod(Af, group)
case(plasma, of)
nmod(group, plasma)
aux:pass(dissolve, be)
root(ROOT, dissolve)
case(buffer, in)
amod(buffer, start)
obl(dissolve, buffer)
punct(buffer, ,)
acl(buffer, dialyze)
case(buffer, against)
det(buffer, this)
obl(dialyze, buffer)
cc(subject, and)
conj(dialyze, subject)
case(chromatography, to)
obl(subject, chromatography)
advcl(subject, use)
det(gradient, the)
obj(use, gradient)
acl(gradient, show)
case(fig, in)
obl(show, fig)
punct(dissolve, .)
nummod(find, 2)
punct(2, .)
advmod(again, once)
advmod(find, again)
punct(find, ,)
det(activity, both)
amod(activity, anti-A)
cc(anti-b, and)
conj(anti-A, anti-b)
nsubj:pass(find, activity)
aux:pass(find, be)
root(ROOT, find)
case(material, in)
det(material, the)
amod(material, insoluble)
obl(find, material)
acl(material, precipitate)
case(dialysis, during)
obl(precipitate, dialysis)
punct(find, .)
advmod(find, similarly)
punct(find, ,)
det(type, both)
nsubj:pass(find, type)
case(antibody, of)
nmod(type, antibody)
aux:pass(find, be)
root(ROOT, find)
case(region, in)
nummod(region, three)
obl(find, region)
case(eluate, of)
det(eluate, the)
amod(eluate, chromatographic)
nmod(region, eluate)
punct(find, ,)
advcl(find, have)
advmod(low, extremely)
obj(have, low)
punct(low, ,)
conj(low, low)
punct(capacity, ,)
cc(capacity, and)
amod(anionic, high)
compound(capacity, anionic)
compound(capacity, bind)
obj(have, capacity)
punct(capacity, ,)
advmod(Fig., respectively)
punct(Fig., ()
appos(capacity, Fig.)
nummod(Fig., 3)
punct(Fig., ))
punct(reveal, .)
nsubj(reveal, chromatography)
case(sera, of)
amod(sera, whole)
nmod(chromatography, sera)
parataxis(find, reveal)
mark(continuous, that)
det(area, the)
nsubj(continuous, area)
case(activity, of)
compound(activity, rh)
compound(activity, antibody)
nmod(area, activity)
cop(continuous, be)
advmod(continuous, generally)
ccomp(reveal, continuous)
cc(wide, and)
conj(continuous, wide)
punct(reveal, .)
det(activity, the)
amod(activity, incomplete)
compound(activity, antibody)
nsubj(appear, activity)
root(ROOT, appear)
case(part, in)
det(part, the)
amod(part, early)
obl(appear, part)
case(chromatogram, of)
det(chromatogram, the)
nmod(part, chromatogram)
punct(appear, ;)
punct(appear, ;)
det(complete, the)
parataxis(appear, complete)
punct(complete, ,)
case(part, in)
det(part, the)
amod(part, latter)
obl(appear, part)
punct(appear, .)
det(serum, the)
nsubj:pass(spread, serum)
acl(serum, contain)
det(type, the)
amod(type, mix)
obj(contain, type)
case(antibody, of)
amod(antibody, complete)
cc(incomplete, and)
conj(complete, incomplete)
nmod(type, antibody)
acl(antibody, show)
obj(show, activity)
case(region, in)
det(region, both)
obl(show, region)
punct(fig, ()
appos(region, fig)
punct(fig, .)
nummod(fig, 1)
punct(1, ))
punct(1, .)
case(case, in)
det(case, all)
obl(spread, case)
det(activity, the)
nsubj:pass(spread, activity)
case(cell, against)
compound(cell, Af)
nmod(activity, cell)
aux:pass(spread, be)
root(ROOT, spread)
case(area, over)
det(area, a)
amod(area, wider)
obl(spread, area)
case(that, than)
nmod(area, that)
case(cell, with)
compound(cell, Af)
nmod(area, cell)
punct(cell, ,)
advmod(type, regardless)
case(type, of)
det(type, the)
nmod(cell, type)
case(test, of)
nmod(type, test)
punct(saline, ()
appos(type, saline)
punct(albumin, ,)
conj(saline, albumin)
punct(saline, ,)
amod(Coombs, indirect)
conj(saline, Coombs)
punct(saline, ))
acl(type, use)
case(comparison, for)
obl(use, comparison)
punct(spread, .)
det(material, the)
amod(material, insoluble)
nsubj(show, material)
acl(material, result)
case(dialysis, from)
obl(result, dialysis)
case(buffer, against)
compound(buffer, starting)
obl(result, buffer)
advmod(show, always)
root(ROOT, show)
amod(activity, strong)
obj(show, activity)
punct(show, .)
case(fact, in)
compound(agglutination, fact)
nsubj:pass(produce, agglutination)
case(cell, of)
compound(cell, Af)
nmod(agglutination, cell)
case(saline, in)
nmod(cell, saline)
aux(produce, could)
aux:pass(produce, be)
root(ROOT, produce)
case(material, by)
det(material, the)
amod(material, insoluble)
obl(produce, material)
case(sera, from)
nmod(material, sera)
acl(material, contain)
punct(only, ``)
advmod(contain, only)
punct(only, '')
amod(activity, incomplete)
compound(activity, antibody)
obj(contain, activity)
punct(produce, .)
nsubj:pass(know, this)
aux:pass(know, be)
advmod(know, later)
root(ROOT, know)
mark(result, to)
cop(result, be)
det(result, the)
xcomp(know, result)
mark(concentrate, of)
acl(result, concentrate)
det(amount, the)
compound(amount, minute)
obj(concentrate, amount)
case(antibody, of)
amod(antibody, complete)
nmod(amount, antibody)
acl(amount, find)
case(sera, in)
det(sera, these)
obl(find, sera)
punct(know, ;)
punct(know, ;)
mark(suspend, when)
det(fraction, the)
amod(fraction, insoluble)
nsubj:pass(suspend, fraction)
aux:pass(suspend, be)
advcl(detect, suspend)
case(volume, in)
det(volume, a)
obl(suspend, volume)
case(saline, of)
nmod(volume, saline)
amod(volume, equal)
case(that, to)
obl(equal, that)
case(sample, of)
det(sample, the)
amod(sample, original)
compound(sample, serum)
nmod(that, sample)
punct(detect, ,)
det(activity, no)
amod(activity, complete)
compound(activity, antibody)
nsubj:pass(detect, activity)
aux(detect, could)
aux:pass(detect, be)
conj(know, detect)
punct(know, .)
advmod(hibernate, apart)
case(honeybee, from)
det(honeybee, the)
obl(apart, honeybee)
punct(hibernate, ,)
advmod(hibernate, practically)
det(bee, all)
nsubj(hibernate, bee)
cc(bumblebee, and)
conj(bee, bumblebee)
root(ROOT, hibernate)
case(state, in)
det(state, a)
obl(hibernate, state)
case(torpor, of)
nmod(state, torpor)
punct(hibernate, .)
advmod(come, occasionally)
punct(come, ,)
nsubj(come, you)
aux(come, may)
root(ROOT, come)
advmod(come, across)
nummod(bumblebee, one)
cc(two, or)
conj(one, two)
obj(come, bumblebee)
case(season, in)
det(season, the)
amod(season, cold)
obl(come, season)
punct(come, ,)
mark(turn, when)
nsubj(turn, you)
aux(turn, be)
advcl(come, turn)
case(sod, over)
obl(turn, sod)
case(garden, in)
nmod:poss(garden, you)
obl(turn, garden)
punct(have, ,)
cc(have, but)
nsubj(have, you)
conj(come, have)
mark(observer, to)
cop(observer, be)
det(observer, a)
advmod(keen, really)
amod(observer, keen)
xcomp(have, observer)
mark(see, to)
acl(observer, see)
obj(see, they)
case(all, at)
obl(see, all)
punct(come, .)
nsubj(keep, they)
root(ROOT, keep)
nmod:poss(wing, they)
obj(keep, wing)
cc(foot, and)
conj(wing, foot)
xcomp(keep, press)
advmod(press, tightly)
case(body, against)
nmod:poss(body, they)
obl(press, body)
punct(mistake, ,)
cc(mistake, and)
case(spite, in)
obl(mistake, spite)
case(attire, of)
nmod:poss(attire, they)
advmod(colorful, often)
amod(attire, colorful)
nmod(spite, attire)
nsubj(mistake, you)
aux(mistake, may)
advmod(well, very)
advmod(mistake, well)
conj(keep, mistake)
obj(mistake, they)
case(lump, for)
obl(mistake, lump)
case(dirt, of)
nmod(lump, dirt)
punct(keep, . )
nsubj(add, I)
aux(add, must)
root(ROOT, add)
case(once, at)
obl(add, once)
mark(what, that)
det(animal, these)
nsubj(what, animal)
cop(what, be)
ccomp(add, what)
nsubj(call, we)
acl:relcl(what, call)
punct(queen, ``)
obj(call, queen)
punct(queen, '')
punct(queen, ,)
amod(female, young)
appos(queen, female)
nsubj(mate, that)
aux(mate, have)
acl:relcl(female, mate)
case(summer, in)
det(summer, the)
amod(summer, previous)
obl(mate, summer)
cc(autumn, or)
conj(summer, autumn)
punct(add, .)
expl(alone, it)
cop(alone, be)
case(they, on)
obl(alone, they)
root(ROOT, alone)
mark(depend, that)
det(future, the)
nsubj(depend, future)
case(race, of)
nmod:poss(race, they)
nmod(future, race)
ccomp(alone, depend)
punct(depend, ,)
case(relative, for)
det:predet(relative, all)
nmod:poss(relative, they)
obl(perish, relative)
punct(mother, ()
appos(relative, mother)
punct(husband, ,)
conj(mother, husband)
punct(brother, ,)
conj(mother, brother)
punct(sister, ,)
cc(sister, and)
amod(sister, unmated)
conj(mother, sister)
punct(mother, ))
aux(perish, have)
conj(depend, perish)
case(arrival, with)
det(arrival, the)
obl(perish, arrival)
case(weather, of)
det(weather, the)
amod(weather, cold)
nmod(arrival, weather)
punct(alone, .)
advmod(some, even)
nsubj(die, some)
case(queen, of)
det(queen, the)
nmod(some, queen)
aux(die, will)
root(ROOT, die)
mark(over, before)
det(winter, the)
nsubj(over, winter)
cop(over, be)
advcl(die, over)
punct(fall, ,)
conj(over, fall)
obj(fall, prey)
case(enemy, to)
obl(fall, enemy)
cc(disease, or)
conj(enemy, disease)
punct(die, .)
det(survivor, the)
nsubj(emerge, survivor)
root(ROOT, emerge)
case(day, on)
det(day, some)
amod(day, nice)
punct(day, ,)
amod(day, sunny)
obl(emerge, day)
case(March, in)
obl(emerge, March)
cc(April, or)
conj(March, April)
punct(emerge, ,)
mark(close, when)
det(temperature, the)
nsubj(close, temperature)
cop(close, be)
advcl(emerge, close)
case(degree, to)
nummod(degree, 50)
punct(degree, -)
obl(close, degree)
cc(be, and)
expl(be, there)
conj(close, be)
advmod(be, not)
advmod(much, too)
amod(wind, much)
nsubj(be, wind)
punct(emerge, .)
advmod(be, now)
det(thing, the)
nsubj(be, thing)
mark(do, for)
nsubj(do, we)
mark(do, to)
acl(thing, do)
root(ROOT, be)
mark(find, to)
ccomp(be, find)
iobj(find, ourselves)
det(couple, a)
obj(find, couple)
case(currant, of)
det(currant, those)
amod(currant, wonderful)
compound(currant, flower)
nmod(couple, currant)
case(sanguineum, such)
fixed(such, as)
det(sanguineum, the)
amod(sanguineum, red)
compound(sanguineum, Ribes)
nmod(currant, sanguineum)
case(Northwest, of)
nmod:poss(Northwest, we)
compound(Northwest, Pacific)
nmod(sanguineum, Northwest)
punct(tree, ,)
cc(tree, or)
advmod(tree, otherwise)
det(tree, a)
amod(tree, good)
compound(tree, sloe)
conj(sanguineum, tree)
punct(willow, ,)
cc(willow, or)
advmod(willow, perhaps)
det(willow, some)
amod(willow, nice)
compound(willow, pussy)
conj(tree, willow)
case(bloom, in)
nmod(willow, bloom)
punct(willow, ,)
advmod(one, preferably)
appos(willow, one)
case(catkin, with)
amod(catkin, male)
cc(staminate, or)
conj(male, staminate)
nmod(one, catkin)
punct(be, .)
det(bloom, the)
nsubj(place, bloom)
case(Ribes, of)
nmod(bloom, Ribes)
cc(willow, and)
case(willow, of)
det(willow, the)
nmod(bloom, willow)
cc(sloe, and)
conj(willow, sloe)
cop(place, be)
det(place, the)
root(ROOT, place)
advmod(assemble, where)
amod(number, large)
nsubj(assemble, number)
case(insect, of)
nmod:poss(insect, we)
amod(insect, early)
nmod(number, insect)
aux(assemble, will)
acl:relcl(place, assemble)
punct(honeybee, :)
obj(assemble, honeybee)
punct(bumblebee, ,)
conj(honeybee, bumblebee)
punct(bee, ,)
cc(bee, and)
amod(bee, other)
amod(bee, wild)
conj(honeybee, bee)
punct(kind, ,)
cc(kind, and)
advmod(kind, also)
amod(kind, various)
conj(honeybee, kind)
case(fly, of)
nmod(kind, fly)
punct(place, .)
nsubj(crowd, it)
cop(crowd, be)
det(crowd, a)
amod(crowd, happy)
punct(crowd, ,)
amod(crowd, buzzing)
root(ROOT, crowd)
punct(crowd, .)
det(catkin, each)
amod(catkin, male)
compound(catkin, willow)
nsubj:pass(compose, catkin)
aux:pass(compose, be)
root(ROOT, compose)
case(number, of)
det(number, a)
amod(number, large)
obl(compose, number)
case(flower, of)
amod(flower, small)
nmod(number, flower)
punct(compose, .)
expl(difficult, it)
cop(difficult, be)
advmod(difficult, not)
root(ROOT, difficult)
mark(see, to)
csubj(difficult, see)
mark(arrange, that)
det(stamen, the)
nsubj:pass(arrange, stamen)
case(catkin, of)
det(catkin, the)
nmod(stamen, catkin)
aux:pass(arrange, be)
advmod(arrange, always)
ccomp(see, arrange)
case(pair, in)
obl(arrange, pair)
punct(nothing, ,)
cc(nothing, and)
mark(nothing, that)
det(flower, each)
amod(flower, individual)
nsubj(nothing, flower)
cop(nothing, be)
conj(arrange, nothing)
case(pair, but)
nummod(pair, one)
amod(pair, such)
nmod(nothing, pair)
acl(pair, stand)
case(scale, on)
det(scale, a)
amod(scale, green)
punct(scale, ,)
amod(tip, black)
punct(tip, -)
amod(scale, tip)
amod(scale, little)
obl(stand, scale)
punct(difficult, .)
mark(scrutinize, by)
advcl(notice, scrutinize)
det(flower, the)
obj(scrutinize, flower)
punct(notice, ,)
nsubj(notice, one)
aux(notice, can)
advmod(notice, also)
root(ROOT, notice)
mark(bear, that)
det(scale, the)
nsubj(bear, scale)
ccomp(notice, bear)
nummod(wart, one)
cc(two, or)
conj(one, two)
amod(wart, tiny)
obj(bear, wart)
punct(notice, .)
nsubj(nectary, those)
cop(nectary, be)
det(nectary, the)
root(ROOT, nectary)
cc(gland, or)
compound(gland, honey)
conj(nectary, gland)
punct(Fig., ()
appos(gland, Fig.)
nummod(Fig., 26)
punct(Fig., ,)
appos(Fig., page)
nummod(Fig., 74)
punct(Fig., ))
punct(nectary, .)
det(staminate, the)
nsubj(willow, staminate)
root(ROOT, willow)
obj(willow, catkin)
punct(willow, ,)
advmod(provide, then)
punct(provide, ,)
conj(willow, provide)
nmod:poss(visitor, they)
obj(provide, visitor)
case(nectar, with)
cc:preconj(nectar, both)
obl(provide, nectar)
cc(pollen, and)
conj(nectar, pollen)
punct(willow, ;)
punct(arrangement, ;)
det(arrangement, a)
amod(arrangement, marvelous)
parataxis(willow, arrangement)
punct(arrangement, ,)
mark(provide, for)
nsubj(provide, it)
advcl(arrangement, provide)
advmod(what, exactly)
obj(provide, what)
det(queen, the)
compound(queen, bee)
nsubj(need, queen)
acl:relcl(what, need)
mark(make, to)
xcomp(need, make)
nmod:poss(beebread, they)
obj(make, beebread)
punct(combination, ,)
det(combination, a)
conj(beebread, combination)
case(honey, of)
nmod(combination, honey)
cc(pollen, and)
conj(honey, pollen)
case(which, with)
obl(feed, which)
det(young, the)
nsubj:pass(feed, young)
case(species, of)
det(species, all)
nmod(young, species)
aux:pass(feed, be)
acl:relcl(combination, feed)
punct(willow, .)
det(exception, the)
amod(exception, only)
nsubj(bee, exception)
case(this, to)
nmod(exception, this)
cop(bee, be)
amod(bee, certain)
root(ROOT, bee)
nsubj(become, that)
aux(become, have)
acl:relcl(bee, become)
xcomp(become, parasite)
punct(bee, . )
nsubj(deal, I)
aux(deal, will)
root(ROOT, deal)
case(these, with)
obl(deal, these)
advmod(on, later)
advmod(deal, on)
punct(deal, .)
advmod(often, Quite)
advmod(form, often)
punct(form, ,)
nsubj(form, honeybee)
parataxis(deal, form)
det(majority, a)
obj(form, majority)
case(catkin, on)
det(catkin, the)
compound(catkin, willow)
nmod(majority, catkin)
punct(deal, .)
mark(see, as)
nsubj(see, we)
aux(see, have)
advmod(see, already)
advcl(bigger, see)
case(chapter, in)
det(chapter, the)
amod(chapter, first)
obl(see, chapter)
punct(bigger, ,)
nsubj(bigger, bumblebee)
cop(bigger, be)
root(ROOT, bigger)
punct(hairier, ,)
conj(bigger, hairier)
punct(colorful, ,)
cc(colorful, and)
advmod(more, much)
advmod(colorful, more)
conj(bigger, colorful)
case(honeybee, than)
obl(colorful, honeybee)
punct(colorful, ,)
advcl(colorful, exhibit)
amod(combination, various)
obj(exhibit, combination)
case(black, of)
nmod(combination, black)
punct(yellow, ,)
conj(black, yellow)
punct(white, ,)
conj(black, white)
cc(orange, and)
conj(black, orange)
punct(bigger, .)
root(ROOT, let)
obj(let, we)
advmod(try, not)
xcomp(let, try)
mark(key, to)
xcomp(try, key)
obj(key, they)
compound:prt(key, out)
case(stage, at)
det(stage, this)
obl(key, stage)
case(game, of)
det(game, the)
nmod(stage, game)
punct(let, ,)
cc(let, and)
conj(key, let)
obj(let, we)
advmod(call, just)
xcomp(let, call)
obj(call, they)
obj(call, Bombus)
punct(let, .)
expl(be, there)
aux(be, must)
root(ROOT, be)
amod(species, several)
compound(species, dozen)
nsubj(be, species)
case(States, in)
det(States, the)
compound(States, United)
nmod(species, States)
advmod(be, alone)
punct(be, .)
mark(insist, if)
nsubj(insist, you)
advmod(insist, really)
advcl(Bumblebees, insist)
mark(know, on)
advcl(insist, know)
nmod:poss(name, they)
obj(know, name)
punct(Bumblebees, ,)
det(book, a)
amod(book, excellent)
nsubj(Bumblebees, book)
case(species, on)
det(species, the)
compound(species, North)
amod(species, american)
nmod(book, species)
cop(Bumblebees, be)
root(ROOT, Bumblebees)
cc(way, and)
nmod:poss(way, they)
conj(Bumblebees, way)
case(o., by)
nmod(way, o.)
flat(o., E.)
flat(o., Plath)
punct(Bumblebees, .)
mark(manage, if)
nsubj(manage, we)
advcl(discover, manage)
mark(keep, to)
xcomp(manage, keep)
obj(keep, track)
case(queen, of)
det(queen, a)
compound(queen, Bombus)
obl(keep, queen)
mark(leave, after)
nsubj(leave, she)
aux(leave, have)
advcl(keep, leave)
nmod:poss(place, she)
compound(place, feeding)
obj(leave, place)
punct(discover, ,)
nsubj(discover, we)
aux(discover, may)
root(ROOT, discover)
det(hideout, the)
amod(hideout, snug)
amod(hideout, little)
obj(discover, hideout)
obj(fix, which)
nsubj(fix, she)
aux(fix, have)
acl:relcl(hideout, fix)
compound:prt(fix, up)
case(herself, for)
obl(fix, herself)
mark(wake, when)
nsubj(wake, she)
advcl(fix, wake)
compound:prt(wake, up)
case(sleep, from)
nmod:poss(sleep, she)
compound(sleep, winter)
obl(wake, sleep)
punct(discover, .)
mark(befit, as)
advcl(choosy, befit)
det(queen, a)
obj(befit, queen)
punct(choosy, ,)
det(female, a)
compound(female, bumblebee)
nsubj(choosy, female)
cop(choosy, be)
advmod(choosy, rather)
root(ROOT, choosy)
cc(spend, and)
aux(spend, may)
conj(choosy, spend)
amod(time, considerable)
obj(spend, time)
acl(time, search)
case(place, for)
det(place, a)
amod(place, suitable)
compound(place, nest)
obl(search, place)
punct(choosy, .)
amod(species, most)
nsubj(seem, species)
root(ROOT, seem)
mark(prefer, to)
xcomp(seem, prefer)
det(hollow, a)
compound(make, ready)
punct(make, -)
amod(hollow, make)
obj(prefer, hollow)
case(nest, such)
fixed(such, as)
det(nest, a)
amod(nest, desert)
compound(nest, mouse)
nmod(hollow, nest)
punct(house, ,)
det(house, a)
compound(house, bird)
conj(nest, house)
punct(hole, ,)
cc(hole, or)
det(hole, the)
conj(nest, hole)
acl(hole, make)
case(woodpecker, by)
det(woodpecker, a)
obl(make, woodpecker)
punct(seem, ;)
punct(seem, ;)
nsubj(show, some)
parataxis(seem, show)
det(like, a)
amod(like, definite)
obj(show, like)
mark(make, for)
acl(like, make)
nmod:poss(nest, they)
obj(make, nest)
case(moss, in)
obl(make, moss)
punct(seem, .)
mark(make, once)
nsubj(make, she)
aux(make, have)
advcl(start, make)
compound:prt(make, up)
nmod:poss(mind, she)
obj(make, mind)
punct(start, ,)
det(queen, the)
nsubj(start, queen)
root(ROOT, start)
compound:prt(start, out)
mark(construct, by)
advcl(start, construct)
punct(construct, ,)
case(abode, in)
nmod:poss(abode, she)
amod(abode, choose)
obl(construct, abode)
punct(floor, ,)
det(floor, a)
amod(floor, small)
punct(floor, ``)
conj(abode, floor)
punct(floor, '')
case(grass, of)
amod(grass, dry)
nmod(floor, grass)
cc(material, or)
det(material, some)
amod(material, woolly)
conj(grass, material)
punct(start, .)
case(this, on)
obl(build, this)
punct(build, ,)
nsubj(build, she)
root(ROOT, build)
det(compartment, a)
punct(compartment, ``)
compound(compartment, egg)
obj(build, compartment)
punct(compartment, '')
cc(cell, or)
punct(cell, ``)
compound(cell, egg)
conj(compartment, cell)
punct(cell, '')
nsubj:pass(fill, which)
aux:pass(fill, be)
acl:relcl(cell, fill)
case(mixture, with)
det(mixture, that)
amod(mixture, famous)
compound(mixture, pollen)
punct(pollen, -)
cc(nectar, and)
punct(nectar, -)
conj(pollen, nectar)
obl(fill, mixture)
acl(mixture, call)
xcomp(call, beebread)
punct(build, .)
nsubj(build, she)
advmod(build, also)
root(ROOT, build)
nummod(cup, one)
cc(two, or)
conj(one, two)
compound(cup, waxe)
obj(build, cup)
obj(fill, which)
nsubj(fill, she)
acl:relcl(cup, fill)
case(honey, with)
obl(fill, honey)
punct(build, .)
advmod(deposit, then)
punct(deposit, ,)
det(group, a)
nsubj:pass(deposit, group)
case(egg, of)
nmod(group, egg)
aux:pass(deposit, be)
root(ROOT, deposit)
case(cavity, in)
det(cavity, a)
obl(deposit, cavity)
case(loaf, in)
det(loaf, the)
compound(loaf, beebread)
nmod(cavity, loaf)
cc(close, and)
det(compartment, the)
compound(compartment, egg)
nsubj:pass(close, compartment)
aux:pass(close, be)
conj(deposit, close)
punct(deposit, .)
det(queen, the)
nsubj(keep, queen)
advmod(keep, afterward)
root(ROOT, keep)
xcomp(keep, incubate)
cc(guard, and)
conj(incubate, guard)
nmod:poss(egg, she)
obj(guard, egg)
case(han, like)
det(han, a)
compound(han, mother)
obl(guard, han)
punct(keep, ,)
conj(incubate, take)
det(sip, a)
obj(take, sip)
case(time, from)
obl(take, time)
case(time, to)
nmod(time, time)
case(honey, from)
det(honey, the)
amod(honey, rather)
compound(honey, liquid)
obl(take, honey)
case(pot, in)
nmod:poss(pot, she)
compound(pot, honey)
nmod(honey, pot)
punct(keep, .)
mark(hatch, when)
det(larvae, the)
nsubj(hatch, larvae)
advcl(feed, hatch)
punct(feed, ,)
nsubj(feed, they)
root(ROOT, feed)
case(beebread, on)
det(beebread, the)
obl(feed, beebread)
punct(feed, ,)
mark(receive, although)
nsubj(receive, they)
advmod(receive, also)
advcl(feed, receive)
amod(meal, extra)
compound(meal, honey)
obj(receive, meal)
case(mother, from)
nmod:poss(mother, they)
obl(receive, mother)
punct(feed, .)
nsubj(continue, she)
root(ROOT, continue)
mark(add, to)
xcomp(continue, add)
case(supply, to)
det(supply, the)
compound(supply, pollen)
obl(add, supply)
mark(need, as)
advcl(add, need)
punct(continue, .)
det(larvae, the)
nsubj(grow, larvae)
punct(larvae, ,)
acl(larvae, keep)
xcomp(keep, warm)
case(queen, by)
det(queen, the)
obl(warm, queen)
punct(grow, ,)
cop(grow, be)
advmod(grow, full)
root(ROOT, grow)
case(day, in)
advmod(ten, about)
nummod(day, ten)
obl(grow, day)
punct(grow, .)
nsubj(make, each)
advmod(make, now)
root(ROOT, make)
det(cocoon, a)
amod(cocoon, tough)
punct(cocoon, ,)
amod(cocoon, papery)
obj(make, cocoon)
cc(pupate, and)
conj(cocoon, pupate)
punct(make, .)
case(week, after)
det(week, another)
nummod(week, two)
obl(emerge, week)
punct(emerge, ,)
det(young, the)
amod(young, first)
nsubj(emerge, young)
root(ROOT, emerge)
punct(emerge, ,)
nummod(daughter, four)
case(eight, to)
nmod(four, eight)
amod(daughter, small)
obj(emerge, daughter)
nsubj(begin, that)
acl:relcl(daughter, begin)
mark(play, to)
xcomp(begin, play)
det(role, the)
obj(play, role)
case(bee, of)
compound(bee, worker)
nmod(role, bee)
punct(play, ,)
advcl(play, collect)
obj(collect, pollen)
cc(nectar, and)
conj(pollen, nectar)
case(field, in)
det(field, the)
obl(collect, field)
cc(care, and)
conj(collect, care)
case(generation, for)
det(generation, the)
amod(generation, new)
amod(generation, young)
obl(care, generation)
mark(retire, while)
det(queen, the)
nsubj(retire, queen)
advcl(care, retire)
case(life, to)
det(life, a)
obl(retire, life)
case(lay, of)
compound(lay, egg)
nmod(life, lay)
punct(emerge, .)
det(bee, the)
amod(bee, first)
compound(bee, worker)
nsubj(mate, bee)
aux(mate, do)
advmod(mate, not)
root(ROOT, mate)
cc(lay, or)
conj(mate, lay)
obj(mate, egg)
punct(mate, ;)
punct(mate, ;)
nsubj(emerge, male)
cc(female, and)
compound(female, mate)
conj(male, female)
aux(emerge, do)
advmod(emerge, not)
parataxis(mate, emerge)
case(later, until)
obl(emerge, later)
case(season, in)
det(season, the)
obl(emerge, season)
punct(mate, .)
det(brood, the)
nsubj(tend, brood)
case(worker, of)
nmod(brood, worker)
nsubj(appear, that)
acl:relcl(worker, appear)
advmod(appear, later)
root(ROOT, tend)
mark(bigger, to)
cop(bigger, be)
xcomp(tend, bigger)
case(one, than)
det(one, the)
amod(one, first)
obl(bigger, one)
punct(tend, ,)
advmod(feed, probably)
mark(feed, because)
nsubj:pass(feed, they)
aux:pass(feed, be)
advmod(feed, better)
advcl(bigger, feed)
punct(tend, .)
case(middle, by)
det(middle, the)
obl(receive, middle)
case(summer, of)
det(summer, the)
nmod(middle, summer)
punct(receive, ,)
nsubj(receive, many)
case(larvae, of)
det(larvae, the)
nmod(many, larvae)
advmod(receive, apparently)
root(ROOT, receive)
det:predet(diet, such)
det(diet, a)
amod(diet, good)
obj(receive, diet)
mark(optimal, that)
nsubj(optimal, it)
cop(optimal, be)
punct(optimal, ``)
acl(diet, optimal)
punct(optimal, '')
punct(be, ,)
cc(be, and)
nsubj(be, it)
conj(receive, be)
advmod(be, then)
mark(begin, that)
amod(queen, young)
nsubj(begin, queen)
ccomp(be, begin)
mark(appear, to)
xcomp(begin, appear)
punct(receive, .)
advmod(produce, simultaneously)
punct(produce, ,)
nsubj:pass(produce, male)
cc(drone, or)
conj(male, drone)
aux:pass(produce, be)
root(ROOT, produce)
punct(produce, ,)
advmod(egg, mostly)
case(egg, from)
det(egg, the)
amod(egg, unfertilized)
obl(produce, egg)
case(worker, of)
nmod(egg, worker)
punct(produce, ,)
mark(produce, although)
det(few, a)
nsubj:pass(produce, few)
aux(produce, may)
aux:pass(produce, be)
advcl(produce, produce)
case(queen, by)
det(queen, the)
obl(produce, queen)
punct(produce, .)
det(queen, the)
amod(queen, young)
nsubj(leave, queen)
cc(drone, and)
conj(queen, drone)
root(ROOT, leave)
det(nest, the)
obj(leave, nest)
cc(mate, and)
conj(leave, mate)
punct(begin, ,)
cc(begin, and)
case(period, after)
det(period, a)
amod(period, short)
obl(begin, period)
case(freedom, of)
nmod(period, freedom)
punct(begin, ,)
det(queen, the)
amod(queen, fertilize)
amod(queen, young)
nsubj(begin, queen)
aux(begin, will)
conj(leave, begin)
mark(dig, to)
xcomp(begin, dig)
advmod(dig, in)
case(winter, for)
det(winter, the)
obl(dig, winter)
punct(leave, .)
expl(fact, it)
cop(fact, be)
det(fact, a)
amod(fact, amazing)
root(ROOT, fact)
mark(happen, that)
case(species, in)
det(species, some)
obl(happen, species)
nsubj(happen, this)
aux(happen, will)
csubj(fact, happen)
mark(swing, while)
det(summer, the)
nsubj(swing, summer)
cop(swing, be)
advmod(swing, still)
case(swing, in)
amod(swing, full)
advcl(happen, swing)
punct(happen, ,)
case(instance, for)
obl(swing, instance)
punct(August, ,)
case(August, in)
obl(happen, August)
punct(fact, .)
det(temperature, the)
nsubj(high, temperature)
advmod(high, then)
cop(high, be)
advmod(high, still)
advmod(high, very)
root(ROOT, high)
punct(high, .)
case(nest, at)
det(nest, the)
amod(nest, old)
obl(cease, nest)
punct(cease, ,)
det(queen, the)
nsubj(cease, queen)
aux(cease, will)
case(fall, in)
det(fall, the)
amod(fall, early)
obl(cease, fall)
root(ROOT, cease)
mark(lay, to)
xcomp(cease, lay)
det(egg, the)
amod(egg, fertilize)
obj(lay, egg)
nsubj(produce, that)
aux(produce, will)
acl:relcl(egg, produce)
obj(produce, female)
punct(cease, .)
case(result, as)
det(result, a)
obl(increase, result)
punct(increase, ,)
det(proportion, the)
nsubj(increase, proportion)
case(male, of)
nmod(proportion, male)
punct(leave, ()
nsubj(leave, which)
acl:relcl(proportion, leave)
det(nest, the)
obj(leave, nest)
punct(leave, ))
root(ROOT, increase)
punct(die, ,)
cc(die, and)
advmod(die, eventually)
det(colony, the)
amod(colony, old)
nsubj(die, colony)
aux(die, will)
conj(increase, die)
advmod(die, out)
advmod(die, completely)
punct(increase, .)
det(nest, the)
nsubj:pass(destroy, nest)
nmod:npmod(nest, itself)
punct(destroy, ,)
det(structure, the)
nsubj:pass(destroy, structure)
obj(house, that)
case(case, in)
det(case, some)
obl(house, case)
acl(structure, house)
advmod(2,000, about)
nummod(individual, 2,000)
obj(house, individual)
mark(peak, when)
det(season, the)
nsubj(peak, season)
cop(peak, be)
case(peak, at)
nmod:poss(peak, its)
advcl(destroy, peak)
punct(destroy, ,)
aux:pass(destroy, be)
advmod(destroy, now)
advmod(destroy, rapidly)
root(ROOT, destroy)
case(larvae, by)
det(larvae, the)
compound(larvae, scaveng)
obl(destroy, larvae)
case(beetle, of)
amod(beetle, certain)
nmod(larvae, beetle)
cc(moth, and)
conj(beetle, moth)
punct(destroy, .)
advmod(always, not)
advmod(take, always)
punct(take, ,)
advmod(take, though)
punct(take, ,)
aux(take, do)
det(development, the)
nsubj(take, development)
case(colony, of)
det(colony, a)
compound(colony, bumblebee)
nmod(development, colony)
root(ROOT, take)
obj(take, place)
case(fashion, in)
det(fashion, the)
amod(fashion, smooth)
obl(take, fashion)
nsubj(describe, we)
aux(describe, have)
advmod(describe, just)
acl:relcl(fashion, describe)
punct(take, .)
det(member, some)
nsubj(become, member)
case(family, of)
det(family, the)
compound(family, bee)
nmod(member, family)
aux(become, have)
root(ROOT, become)
xcomp(become, idler)
punct(parasite, ,)
amod(parasite, social)
conj(idler, parasite)
nsubj(live, that)
acl:relcl(parasite, live)
case(expense, at)
det(expense, the)
obl(live, expense)
case(relative, of)
nmod:poss(relative, they)
amod(relative, hardworking)
nmod(expense, relative)
punct(idler, .)
nsubj(suffer, Bumblebees)
aux(suffer, can)
advmod(suffer, thus)
root(ROOT, suffer)
advmod(suffer, severely)
case(onslaught, from)
det(onslaught, the)
obl(suffer, onslaught)
case(Psithyrus, of)
nmod(onslaught, Psithyrus)
punct(Psithyrus, ,)
det(cuckoo-bumblebee, the)
punct(cuckoo-bumblebee, ``)
appos(Psithyrus, cuckoo-bumblebee)
punct(cuckoo-bumblebee, '')
mark(call, as)
nsubj:pass(call, it)
aux:pass(call, be)
advcl(suffer, call)
case(country, in)
det(country, some)
amod(country, european)
obl(call, country)
punct(suffer, .)
compound(individual, female)
nsubj(look, individual)
case(Psithyrus, of)
nmod(individual, Psithyrus)
parataxis(suffer, look)
advmod(look, deceptively)
case(worker, like)
det(worker, the)
obl(look, worker)
cc(queen, and)
conj(worker, queen)
case(bumblebee, of)
det(bumblebee, the)
nmod(worker, bumblebee)
nsubj(victimize, they)
acl:relcl(bumblebee, victimize)
punct(suffer, .)
det(way, the)
nummod(way, one)
amod(way, sure)
nsubj(be, way)
mark(tell, to)
acl(way, tell)
obj(tell, victim)
cc(villain, and)
conj(victim, villain)
advmod(tell, apart)
root(ROOT, be)
mark(examine, to)
ccomp(be, examine)
det(leg, the)
compound(leg, hind)
obj(examine, leg)
nsubj(case, which)
case(case, in)
det(case, the)
obl(lack, case)
case(idler, of)
det(idler, the)
nmod(case, idler)
punct(idler, ,)
appos(idler, Psithyrus)
punct(lack, ,)
conj(examine, lack)
det(basket, the)
compound(basket, pollen)
obj(lack, basket)
punct(lack, --)
advmod(lack, naturally)
punct(be, !)
punct(be, !)
det(parasite, the)
amod(parasite, female)
nsubj(spend, parasite)
root(ROOT, spend)
amod(time, much)
obj(spend, time)
case(effort, in)
nmod:poss(effort, she)
nmod(time, effort)
mark(find, to)
acl(effort, find)
det(nest, a)
obj(find, nest)
case(host, of)
nmod:poss(host, she)
nmod(nest, host)
punct(spend, .)
mark(succeed, when)
nsubj(succeed, she)
advcl(manage, succeed)
punct(manage, ,)
nsubj(manage, she)
advmod(manage, usually)
parataxis(spend, manage)
mark(slip, to)
xcomp(manage, slip)
compound:prt(slip, in)
advmod(slip, unobtrusively)
punct(slip, ,)
mark(deposit, to)
advcl(slip, deposit)
det(egg, a)
obj(deposit, egg)
case(loaf, on)
det(loaf, a)
amod(loaf, complete)
obl(deposit, loaf)
case(beebread, of)
nmod(loaf, beebread)
mark(seal, before)
det(bumblebee, the)
nsubj(seal, bumblebee)
advcl(deposit, seal)
det(compartment, the)
compound(compartment, egg)
obj(seal, compartment)
punct(spend, .)
det(host, the)
nsubj(seem, host)
advmod(seem, never)
root(ROOT, seem)
mark(recognize, to)
xcomp(seem, recognize)
mark(amiss, that)
nsubj(amiss, something)
cop(amiss, be)
ccomp(recognize, amiss)
punct(recognize, ,)
mark(seal, so)
fixed(so, that)
det(compartment, the)
nsubj:pass(seal, compartment)
advmod(seal, afterward)
aux:pass(seal, be)
advcl(recognize, seal)
advmod(seal, normally)
punct(seem, .)
advmod(develop, thus)
punct(develop, ,)
det(larvae, the)
nsubj(develop, larvae)
case(intruder, of)
det(intruder, the)
nmod(larvae, intruder)
aux(develop, can)
root(ROOT, develop)
case(expense, at)
det(expense, the)
obl(develop, expense)
case(inhabitant, of)
det(inhabitant, the)
amod(inhabitant, rightful)
nmod(expense, inhabitant)
cc(store, and)
det(store, the)
conj(inhabitant, store)
case(beebread, of)
nmod(store, beebread)
punct(develop, .)
advmod(on, later)
advmod(feed, on)
punct(feed, ,)
nsubj:pass(feed, they)
cc(mother, and)
det(mother, the)
conj(they, mother)
conj(they, Psithyrus)
aux:pass(feed, be)
root(ROOT, feed)
case(worker, by)
det(worker, the)
compound(worker, Bombus)
obl(feed, worker)
punct(feed, .)
advmod(claim, worse)
advmod(claim, still)
punct(claim, ,)
case(number, in)
det(number, a)
obl(claim, number)
case(case, of)
nmod(number, case)
nsubj:pass(claim, it)
aux(claim, have)
aux:pass(claim, be)
root(ROOT, claim)
mark(kill, that)
det(female, the)
compound(female, Psithyrus)
nsubj(kill, female)
ccomp(claim, kill)
det(queen, the)
compound(queen, Bombus)
obj(kill, queen)
punct(claim, .)
cc(let, but)
root(ROOT, let)
obj(let, we)
xcomp(let, return)
punct(return, ,)
case(interlude, after)
det(interlude, this)
amod(interlude, gruesome)
obl(return, interlude)
punct(return, ,)
case(catkin, to)
nmod:poss(catkin, we)
compound(catkin, willow)
obl(return, catkin)
case(spring, in)
det(spring, the)
nmod(catkin, spring)
punct(let, ;)
punct(let, ;)
expl(be, there)
parataxis(let, be)
amod(bee, other)
amod(bee, wild)
nsubj(be, bee)
nsubj(command, that)
acl:relcl(bee, command)
nmod:poss(attention, we)
obj(command, attention)
punct(let, .)
expl(certain, it)
cop(certain, be)
advmod(certain, almost)
root(ROOT, certain)
mark(andrena, that)
nsubj(andrena, some)
case(these, of)
nmod(some, these)
punct(some, ,)
advmod(smaller, usually)
det(trifle, a)
appos(some, trifle)
amod(trifle, smaller)
case(honeybee, than)
det(honeybee, the)
obl(smaller, honeybee)
punct(andrena, ,)
cop(andrena, be)
parataxis(certain, andrena)
cc(bee, or)
compound(bee, mining)
conj(andrena, bee)
punct(certain, .)
expl(be, there)
root(ROOT, be)
advmod(200, about)
nummod(kind, 200)
amod(kind, different)
nsubj(be, kind)
case(Andrena, of)
nmod(kind, Andrena)
case(Europe, in)
obl(be, Europe)
advmod(be, alone)
punct(be, .)
nsubj(armata, one)
case(favorite, of)
nmod:poss(favorite, my)
nmod(one, favorite)
cop(armata, be)
compound(armata, A.)
root(ROOT, armata)
punct(armata, ,)
det(species, a)
appos(armata, species)
advmod(common, very)
parataxis(armata, common)
case(England, in)
obl(common, England)
punct(England, ,)
advmod(refer, where)
nsubj:pass(refer, it)
aux:pass(refer, be)
advmod(refer, sometimes)
acl:relcl(England, refer)
obl(refer, to)
case(bee, as)
det(bee, the)
compound(bee, lawn)
obl(refer, bee)
punct(armata, .)
det(female, the)
nsubj(like, female)
root(ROOT, like)
mark(burrow, to)
xcomp(like, burrow)
case(turf, in)
det(turf, the)
amod(turf, short)
obl(burrow, turf)
case(lawn, of)
advmod(keep, well)
punct(keep, -)
amod(lawn, keep)
nmod(turf, lawn)
punct(lawn, ,)
advmod(appear, where)
nmod:poss(mound, they)
amod(mound, little)
nsubj(appear, mound)
case(earth, of)
nmod(mound, earth)
advmod(appear, often)
acl:relcl(lawn, appear)
case(hundred, by)
det(hundred, the)
obl(appear, hundred)
punct(like, .)
advmod(equal, almost)
advcl(beautiful, equal)
case(size, in)
obl(equal, size)
case(honeybee, to)
det(honeybee, a)
nmod(size, honeybee)
punct(beautiful, ,)
nsubj(beautiful, A.)
flat(A., armata)
cop(beautiful, be)
advmod(more, much)
advmod(beautiful, more)
root(ROOT, beautiful)
case(color, in)
obl(beautiful, color)
punct(beautiful, ,)
case(female, at)
fixed(at, least)
case(female, in)
det(female, the)
obl(beautiful, female)
case(species, of)
det(species, the)
nmod(female, species)
punct(female, :)
det(red, a)
amod(red, rich)
punct(velvety, ,)
conj(rich, velvety)
punct(red, ,)
amod(red, rusty)
appos(female, red)
punct(beautiful, .)
det(male, the)
nsubj(duller, male)
cop(duller, be)
advmod(duller, much)
root(ROOT, duller)
punct(duller, .)
mark(mate, after)
aux(mate, have)
advcl(dig, mate)
punct(dig, ,)
det(female, a)
amod(female, Andrena)
nsubj(dig, female)
root(ROOT, dig)
det(hole, a)
obj(dig, hole)
advmod(down, straight)
advmod(dig, down)
case(ground, into)
det(ground, the)
obl(down, ground)
punct(dig, ,)
advcl(dig, form)
det(burrow, a)
obj(form, burrow)
case(size, about)
det(size, the)
nmod(burrow, size)
case(pencil, of)
det(pencil, a)
compound(pencil, lead)
nmod(size, pencil)
punct(dig, .)
det(part, the)
amod(part, bottom)
nsubj(have, part)
case(burrow, of)
det(burrow, a)
nmod(part, burrow)
root(ROOT, have)
det(number, a)
obj(have, number)
case(tunnel, of)
compound(tunnel, side)
nmod(number, tunnel)
cc(cell, or)
punct(cell, ``)
conj(tunnel, cell)
punct(cell, '')
punct(number, ,)
appos(cell, each)
case(which, of)
obl(provide, which)
aux:pass(provide, be)
acl:relcl(each, provide)
case(egg, with)
det(egg, a)
obl(provide, egg)
cc(store, plus)
det(store, a)
conj(egg, store)
case(beebread, of)
nmod(store, beebread)
punct(have, .)
det(development, the)
nsubj(rapid, development)
case(larvae, of)
det(larvae, the)
amod(larvae, Andrena)
nmod(development, larvae)
cop(rapid, be)
advmod(rapid, very)
root(ROOT, rapid)
punct(rapid, ,)
advmod(pupate, so)
mark(pupate, that)
case(end, by)
det(end, the)
obl(pupate, end)
case(spring, of)
nmod(end, spring)
nsubj(pupate, they)
aux(pupate, have)
advmod(pupate, already)
parataxis(rapid, pupate)
cc(become, and)
conj(pupate, become)
xcomp(become, adult)
punct(rapid, .)
cc(enclose, but)
nsubj:pass(enclose, they)
aux:pass(enclose, be)
advmod(enclose, still)
root(ROOT, enclose)
case(cell, in)
nmod:poss(cell, they)
amod(cell, larval)
obl(enclose, cell)
cc(remain, and)
conj(enclose, remain)
advmod(remain, there)
case(summer, throughout)
det(summer, the)
obl(remain, summer)
punct(fall, ,)
conj(remain, fall)
punct(coincide, ,)
cc(coincide, and)
nsubj(coincide, winter)
punct(winter, .)
nmod:poss(appearance, they)
nsubj(coincide, appearance)
punct(appearance, ,)
amod(spring, next)
appos(appearance, spring)
punct(coincide, ,)
conj(enclose, coincide)
case(way, in)
det(way, a)
advmod(uncanny, almost)
amod(way, uncanny)
obl(coincide, way)
case(flower, with)
det(flower, the)
nmod(way, flower)
case(plant, of)
nmod:poss(plant, they)
compound(plant, host)
nmod(flower, plant)
punct(enclose, .)
case(valley, in)
det(valley, the)
compound(valley, Sacramento)
obl(observe, valley)
case(California, in)
nmod(valley, California)
punct(observe, ,)
case(instance, for)
obl(observe, instance)
punct(observe, ,)
nsubj:pass(observe, it)
aux(observe, have)
aux:pass(observe, be)
root(ROOT, observe)
mark(be, that)
expl(be, there)
ccomp(observe, be)
advmod(be, not)
nummod(day, one)
nmod:poss(difference, day)
case(day, 's)
nsubj(be, difference)
case(emergence, between)
det(emergence, the)
nmod(difference, emergence)
case(andrena, of)
det(andrena, the)
nmod(emergence, andrena)
cc(opening, and)
det(opening, the)
conj(emergence, opening)
case(catkin, of)
det(catkin, the)
compound(catkin, willow)
nmod(opening, catkin)
punct(observe, .)
nsubj(response, this)
aux(response, must)
cop(response, be)
case(response, due)
fixed(due, to)
det(response, a)
advmod(identical, completely)
amod(response, identical)
root(ROOT, response)
case(weather, to)
det(weather, the)
nmod(response, weather)
punct(response, ,)
case(plant, in)
det(plant, the)
nmod(response, plant)
cc(animal, and)
det(animal, the)
conj(plant, animal)
punct(response, .)
mark(mate, after)
det(male, the)
nsubj(mate, male)
cc(andrena, and)
amod(andrena, female)
conj(male, andrena)
aux(mate, have)
advcl(repeat, mate)
punct(repeat, ,)
det(cycle, the)
nsubj:pass(repeat, cycle)
aux:pass(repeat, be)
root(ROOT, repeat)
punct(repeat, .)
mark(gregarious, although)
nsubj(gregarious, Andrena)
cop(gregarious, be)
advcl(call, gregarious)
punct(call, ,)
mark(find, so)
fixed(so, that)
nsubj(find, we)
aux(find, may)
advcl(call, find)
obj(find, hundred)
cc(hundred, and)
conj(hundred, hundred)
case(burrow, of)
nmod(hundred, burrow)
advmod(find, together)
punct(call, ,)
nsubj(call, we)
aux(call, must)
advmod(call, still)
root(ROOT, call)
iobj(call, it)
det(bee, a)
amod(bee, solitary)
obj(call, bee)
punct(call, .)
nsubj(simpler, it)
cop(simpler, be)
compound(history, life)
nsubj(simpler, history)
cop(simpler, be)
advmod(simpler, much)
root(ROOT, simpler)
case(that, than)
obl(simpler, that)
case(bumblebee, of)
det(bumblebee, the)
advmod(colonial, truly)
amod(bumblebee, colonial)
nmod(that, bumblebee)
cc(serve, and)
aux(serve, can)
conj(simpler, serve)
case(example, as)
det(example, a)
obl(serve, example)
case(cycle, of)
det(cycle, the)
compound(cycle, life)
nmod(example, cycle)
case(species, of)
amod(species, many)
amod(species, other)
nmod(cycle, species)
punct(simpler, .)
advmod(all, after)
obl(means, all)
punct(life, ,)
amod(life, social)
nsubj(means, life)
case(group, in)
det(group, the)
nmod(life, group)
case(bee, of)
det(bee, the)
nmod(group, bee)
cop(means, be)
case(means, by)
det(means, no)
root(ROOT, means)
amod(means, general)
punct(means, ,)
mark(feature, although)
nsubj(feature, it)
advmod(feature, certainly)
cop(feature, be)
det(feature, a)
amod(feature, strike)
advcl(means, feature)
punct(means, .)
case(basis, on)
det(basis, the)
obl(like, basis)
case(history, of)
nmod:poss(history, its)
compound(history, life)
nmod(basis, history)
punct(like, ,)
nsubj(like, we)
root(ROOT, like)
mark(think, to)
xcomp(like, think)
mark(primitive, that)
nsubj(primitive, Andrena)
cop(primitive, be)
advmod(primitive, more)
ccomp(think, primitive)
case(bumblebee, than)
det(bumblebee, the)
obl(primitive, bumblebee)
punct(like, .)
det(way, the)
nsubj(perfect, way)
case(which, in)
obl(transport, which)
nsubj(transport, it)
acl:relcl(way, transport)
nsubj(perfect, it)
cop(perfect, be)
nsubj(perfect, pollen)
cop(perfect, be)
advmod(perfect, not)
advmod(perfect, so)
root(ROOT, perfect)
punct(perfect, ,)
advmod(perfect, either)
punct(perfect, .)
nsubj(lack, it)
root(ROOT, lack)
compound(basket, pollen)
obj(lack, basket)
cc(possess, and)
conj(lack, possess)
advmod(number, only)
det(number, a)
amod(number, large)
obj(possess, number)
case(hair, of)
amod(hair, long)
punct(hair, ,)
amod(hair, branch)
nmod(number, hair)
case(leg, on)
nmod:poss(leg, its)
nmod(hair, leg)
punct(possess, ,)
case(which, on)
obl(collect, which)
det(grain, the)
compound(grain, pollen)
nsubj(collect, grain)
aux(collect, will)
acl:relcl(hair, collect)
punct(lack, .)
advmod(do, still)
nsubj(do, Andrena)
aux(do, will)
root(ROOT, do)
det(job, a)
advmod(good, reasonably)
amod(job, good)
obj(do, job)
punct(do, ,)
mark(look, so)
fixed(so, that)
det(animal, a)
nsubj(look, animal)
case(load, with)
det(load, a)
amod(load, full)
compound(load, pollen)
nmod(animal, load)
advcl(do, look)
case(piece, like)
det(piece, a)
amod(piece, gay)
amod(piece, little)
obl(look, piece)
case(down, of)
amod(down, yellow)
nmod(piece, down)
acl(piece, float)
case(wind, in)
det(wind, the)
obl(float, wind)
punct(do, .)
advmod(related, Closely)
advcl(find, related)
case(andrena, to)
det(andrena, the)
obl(related, andrena)
cop(bee, be)
det(bee, the)
amod(bee, nomias)
cc(alkali, or)
conj(nomias, alkali)
nsubj:pass(find, bee)
punct(bee, .)
compound(melanderi, Nomia)
nsubj:pass(find, melanderi)
aux(find, can)
aux:pass(find, be)
root(ROOT, find)
case(number, in)
amod(number, tremendous)
obl(find, number)
case(part, in)
amod(part, certain)
nmod(number, part)
case(States, of)
det(States, the)
compound(States, United)
nmod(part, States)
advmod(part, west)
case(plain, of)
det(plain, the)
compound(plain, Great)
obl(west, plain)
punct(plain, ,)
case(example, for)
nmod(plain, example)
punct(Utah, ,)
case(Utah, in)
nmod(plain, Utah)
cc(Washington, and)
amod(Washington, central)
conj(Utah, Washington)
punct(find, .)
case(Department, in)
det(Department, the)
compound(States, United)
compound(Department, States)
obl(mention, Department)
case(Yearbook, of)
nmod:poss(Yearbook, agriculture)
case(agriculture, 's)
nmod(Department, Yearbook)
case(agriculture, of)
nmod(Yearbook, agriculture)
punct(agriculture, ,)
nummod(agriculture, 1952)
punct(Yearbook, ,)
nsubj:pass(devote, which)
aux:pass(devote, be)
acl:relcl(Yearbook, devote)
advmod(devote, entirely)
case(insect, to)
obl(devote, insect)
punct(mention, ,)
nsubj(mention, George)
flat(George, E.)
flat(George, Bohart)
root(ROOT, mention)
det(site, a)
obj(mention, site)
case(Utah, in)
nmod(site, Utah)
nsubj:pass(estimate, which)
aux:pass(estimate, be)
acl:relcl(site, estimate)
mark(contain, to)
xcomp(estimate, contain)
nummod(female, 200,000)
compound(female, nest)
obj(contain, female)
punct(mention, .)
advmod(inch, often)
det(burrow, the)
nsubj(inch, burrow)
cop(inch, be)
advmod(inch, only)
det(inch, a)
root(ROOT, inch)
cc(apart, or)
obl:npmod(apart, two)
conj(inch, apart)
punct(cover, ,)
cc(cover, and)
det(city, the)
compound(city, bee)
nsubj(cover, city)
conj(inch, cover)
amod(acre, several)
obj(cover, acre)
punct(inch, .)
det(history, the)
compound(history, life)
nsubj(similar, history)
case(bee, of)
det(bee, the)
amod(bee, alkali)
nmod(history, bee)
cop(similar, be)
root(ROOT, similar)
case(that, to)
obl(similar, that)
case(Andrena, of)
nmod(that, Andrena)
punct(take, ,)
cc(take, but)
det(activity, the)
amod(activity, first)
nsubj(take, activity)
case(adult, of)
det(adult, the)
nmod(activity, adult)
aux(take, do)
advmod(take, not)
conj(similar, take)
obj(take, place)
case(summer, until)
obl(take, summer)
punct(hibernate, ,)
cc(hibernate, and)
det(individual, the)
nsubj(hibernate, individual)
conj(take, hibernate)
case(stage, in)
det(stage, the)
amod(stage, prepupal)
obl(hibernate, stage)
punct(similar, .)
case(place, in)
amod(place, most)
obl(be, place)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nummod(generation, two)
nsubj(be, generation)
det(year, a)
nmod:tmod(generation, year)
punct(generation, ,)
det(brood, a)
amod(brood, second)
appos(generation, brood)
case(adult, of)
nmod(brood, adult)
acl(adult, appear)
advmod(appear, late)
case(summer, in)
det(summer, the)
obl(appear, summer)
punct(be, . )
nsubj(plead, I)
aux(plead, must)
root(ROOT, plead)
xcomp(plead, guilty)
case(sympathy, to)
det(sympathy, a)
amod(sympathy, special)
obl(guilty, sympathy)
case(nomias, for)
nmod(sympathy, nomias)
punct(plead, .)
nsubj(pride, this)
aux(pride, may)
advmod(pride, just)
cop(pride, be)
root(ROOT, pride)
case(state, in)
nmod:poss(state, my)
amod(state, adopt)
nmod(pride, state)
case(Washington, of)
nmod(state, Washington)
punct(love, ,)
cc(love, but)
advmod(love, certainly)
nsubj(love, I)
conj(pride, love)
mark(visit, to)
xcomp(love, visit)
nmod:poss(city, they)
compound(city, mound)
obj(visit, city)
case(Yakima, near)
nmod(city, Yakima)
cc(Prosser, and)
conj(Yakima, Prosser)
case(July, in)
obl(visit, July)
cc(August, or)
conj(July, August)
punct(visit, ,)
mark(period, when)
det(bee, the)
nsubj(period, bee)
cop(period, be)
case(period, in)
nmod:poss(period, they)
advmod(active, most)
amod(period, active)
advcl(visit, period)
punct(pride, .)
det(name, the)
nsubj(indicate, name)
punct(bee, ``)
amod(bee, alkali)
appos(name, bee)
punct(bee, '')
root(ROOT, indicate)
mark(have, that)
nsubj(have, one)
ccomp(indicate, have)
mark(look, to)
xcomp(have, look)
case(they, for)
obl(look, they)
case(place, in)
advmod(inhospitable, rather)
amod(place, inhospitable)
obl(look, place)
punct(indicate, .)
advmod(alkaline, sometimes)
punct(alkaline, ,)
mark(means, although)
case(means, by)
det(means, no)
obl(alkaline, means)
advmod(means, always)
punct(alkaline, ,)
nsubj(alkaline, these)
cop(alkaline, be)
advmod(alkaline, indeed)
root(ROOT, alkaline)
punct(alkaline, .)
det(thing, the)
nsubj(be, thing)
root(ROOT, be)
mark(love, that)
det(bee, these)
nsubj(love, bee)
ccomp(be, love)
det(soil, a)
amod(grain, fine)
punct(grain, -)
amod(soil, grain)
obj(love, soil)
nsubj(moist, that)
cop(moist, be)
acl:relcl(soil, moist)
punct(be, ;)
punct(be, ;)
cc(stagnant, yet)
det(water, the)
nsubj(stagnant, water)
case(ground, in)
det(ground, the)
nmod(water, ground)
aux(stagnant, should)
advmod(stagnant, not)
cop(stagnant, be)
conj(be, stagnant)
advmod(stagnant, either)
punct(be, .)
nsubj(dislike, they)
root(ROOT, dislike)
amod(vegetation, dense)
obj(dislike, vegetation)
punct(dislike, .)
advmod(find, where)
aux(find, do)
nsubj(find, one)
root(ROOT, find)
amod(condition, such)
obj(find, condition)
punct(find, ?)
punct(find, ?)
det(chance, the)
amod(chance, best)
nsubj:pass(offer, chance)
punct(offer, ,)
advmod(offer, of)
fixed(of, course)
punct(offer, ,)
aux:pass(offer, be)
root(ROOT, offer)
case(terrain, by)
advmod(sloping, gently)
amod(terrain, sloping)
obl(offer, terrain)
advmod(remain, where)
det(water, the)
nsubj(remain, water)
acl:relcl(terrain, remain)
xcomp(remain, close)
case(surface, to)
det(surface, the)
obl(close, surface)
cc(dry, and)
mark(dry, where)
det(air, the)
nsubj(dry, air)
cop(dry, be)
conj(close, dry)
punct(dry, ,)
mark(leave, so)
fixed(so, that)
det(evaporation, a)
amod(evaporation, high)
nsubj(leave, evaporation)
advcl(dry, leave)
amod(deposit, salty)
obj(leave, deposit)
nsubj(permit, which)
acl:relcl(deposit, permit)
advmod(growth, only)
amod(growth, sparse)
compound(growth, plant)
obj(permit, growth)
punct(offer, .)
amod(other, many)
amod(snake, other)
punct(all, ()
advmod(all, probably)
advmod(all, nearly)
amod(snake, all)
punct(all, ))
nsubj(more, snake)
case(maturity, at)
nmod(snake, maturity)
cop(more, be)
advmod(more, already)
root(ROOT, more)
case(length, than)
det:predet(length, half)
nmod:poss(length, they)
amod(length, final)
obl(more, length)
punct(more, .)
nsubj(put, Laurence)
flat(Laurence, M.)
flat(Laurence, Klauber)
root(ROOT, put)
obj(put, length)
case(maturity, at)
obl(put, maturity)
case(third, at)
nummod(third, two)
obl(put, third)
det(length, the)
amod(length, ultimate)
appos(third, length)
case(rattlesnake, for)
det(rattlesnake, some)
nmod(length, rattlesnake)
punct(length, ,)
cc(data, and)
nmod:poss(data, Charles)
flat(Charles, C.)
flat(Charles, Carpenter)
case(Charles, 's)
nsubj(show, data)
case(garter, on)
compound(garter, Michigan)
nmod(data, garter)
cc(snake, and)
compound(snake, ribbon)
conj(garter, snake)
punct(Thamnophis, ()
appos(snake, Thamnophis)
punct(Thamnophis, ))
conj(put, show)
mark(more, that)
det(female, the)
amod(female, smallest)
amod(female, gravid)
nsubj(more, female)
cop(more, be)
ccomp(show, more)
fixed(more, than)
obl(long, half)
advmod(long, as)
advmod(more, long)
case(adult, as)
det(adult, the)
amod(adult, biggest)
obl(long, adult)
punct(state, .)
nsubj(state, Felix)
flat(Felix, Kopstein)
parataxis(more, state)
mark(reach, that)
punct(reach, ``)
mark(reach, when)
det(snake, the)
nsubj(reach, snake)
advcl(reach, reach)
nmod:poss(maturity, its)
obj(reach, maturity)
nsubj(reach, it)
aux(reach, have)
advmod(reach, already)
ccomp(state, reach)
case(length, about)
nmod:poss(length, its)
amod(length, maximal)
obl(reach, length)
punct(reach, '')
punct(go, ,)
cc(go, but)
conj(reach, go)
advmod(go, on)
mark(cite, to)
advcl(go, cite)
det(python, the)
amod(python, reticulate)
obj(cite, python)
case(exception, as)
det(exception, a)
obl(cite, exception)
punct(cite, ,)
case(length, with)
amod(length, maximum)
obl(cite, length)
advmod(time, approximately)
nummod(time, three)
nmod:tmod(length, time)
nsubj(maturity, that)
case(maturity, at)
nmod(time, maturity)
punct(put, .)
expl(hard, it)
cop(hard, be)
root(ROOT, hard)
mark(understand, to)
csubj(hard, understand)
advmod(conclude, how)
nsubj(conclude, he)
ccomp(understand, conclude)
mark(grow, that)
amod(snake, most)
nsubj(grow, snake)
aux(grow, do)
advmod(grow, not)
ccomp(conclude, grow)
advmod(grow, appreciably)
mark(attain, after)
advcl(grow, attain)
obj(attain, maturity)
punct(hard, ;)
punct(hard, ;)
nsubj(work, he)
aux(work, be)
parataxis(hard, work)
case(species, with)
obl(work, species)
case(Java, of)
nmod(species, Java)
punct(work, ,)
advmod(unusual, so)
advmod(unusual, perhaps)
det(snake, some)
amod(snake, tropical)
nsubj(unusual, snake)
cop(unusual, be)
conj(work, unusual)
case(respect, in)
det(respect, this)
obl(unusual, respect)
punct(hard, .)
amod(giant, Certain)
amod(giant, individual)
nsubj(record, giant)
root(ROOT, record)
advmod(record, later)
aux(fail, do)
ccomp(record, fail)
mark(show, to)
xcomp(fail, show)
det(difference, a)
amod(difference, reasonable)
obj(show, difference)
case(maturity, after)
obl(show, maturity)
punct(impossible, ,)
cc(impossible, but)
expl(impossible, it)
cop(impossible, be)
conj(fail, impossible)
mark(know, to)
csubj(impossible, know)
mark(condition, whether)
nsubj(condition, this)
cop(condition, be)
case(condition, due)
fixed(due, to)
amod(condition, captive)
ccomp(know, condition)
punct(fail, .)
amod(record, additional)
nsubj:pass(omit, record)
case(growth, of)
amod(growth, slow)
nmod(record, growth)
aux(omit, have)
aux:pass(omit, be)
root(ROOT, omit)
punct(omit, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(make, to)
csubj(possible, make)
det(generalization, a)
amod(generalization, few)
obj(make, generalization)
case(giant, about)
det(giant, the)
nummod(giant, six)
nmod(generalization, giant)
nmod:npmod(giant, themselves)
punct(possible, .)
expl(seem, there)
root(ROOT, seem)
mark(correlation, to)
cop(correlation, be)
det(correlation, a)
amod(correlation, rough)
xcomp(seem, correlation)
case(length, between)
det(length, the)
amod(length, initial)
cc(ultimate, and)
conj(initial, ultimate)
nmod(correlation, length)
punct(correlation, ,)
acl(length, start)
case(smallest, with)
det(smallest, the)
obl(start, smallest)
punct(constrictor, ()
compound(constrictor, boa)
appos(smallest, constrictor)
punct(constrictor, ))
cc(end, and)
conj(start, end)
case(largest, with)
det(largest, the)
obl(end, largest)
punct(anaconda, ()
appos(largest, anaconda)
punct(anaconda, ))
punct(anaconda, .)
nsubj(scanty, data)
case(former, on)
det(former, the)
nmod(data, former)
cop(scanty, be)
acl:relcl(largest, scanty)
punct(be, ,)
cc(be, but)
expl(be, there)
aux(be, can)
conj(scanty, be)
amod(doubt, little)
nsubj(be, doubt)
mark(bear, that)
det(latter, the)
nsubj:pass(bear, latter)
aux:pass(bear, be)
advmod(bear, sometimes)
acl(doubt, bear)
case(length, at)
det(length, a)
obl(greater, length)
xcomp(bear, greater)
case(that, than)
obl(greater, that)
case(any, of)
nmod(that, any)
case(other, of)
det(other, the)
nmod(any, other)
punct(lend, ,)
advmod(bear, there)
mark(lend, by)
advcl(there, lend)
obj(lend, support)
case(belief, to)
det(belief, the)
obl(lend, belief)
mark(do, that)
det(anaconda, the)
nsubj(do, anaconda)
acl(belief, do)
punct(do, ,)
advmod(attain, indeed)
punct(attain, ,)
conj(do, attain)
det(length, the)
amod(length, greatest)
obj(attain, length)
punct(seem, .)
case(four, for)
obl(include, four)
case(six, of)
det(six, the)
nmod(four, six)
punct(anaconda, ()
det(anaconda, the)
nsubj:pass(include, anaconda)
cc(python, and)
det(python, the)
compound(python, amethystine)
conj(anaconda, python)
aux(include, can)
advmod(include, not)
aux:pass(include, be)
root(ROOT, include)
case(lack, for)
obl(include, lack)
case(data, of)
nmod(lack, data)
punct(include, ))
expl(be, there)
parataxis(include, be)
advmod(be, also)
det(correlation, a)
nsubj(be, correlation)
case(size, between)
nmod(correlation, size)
case(maturity, at)
nmod(size, maturity)
cc(length, and)
amod(length, maximum)
conj(maturity, length)
punct(smallest, ,)
det(constrictor, the)
compound(constrictor, boa)
nsubj(smallest, constrictor)
cop(smallest, be)
det(smallest, the)
acl(correlation, smallest)
cc(python, and)
det(python, the)
amod(python, indian)
conj(smallest, python)
det(next, the)
amod(python, next)
case(size, in)
obl(next, size)
case(stage, at)
det(stage, the)
amod(stage, former)
obl(next, stage)
punct(be, .)
root(ROOT, let)
obj(let, we)
xcomp(let, speculate)
det(little, a)
obj(speculate, little)
case(size, on)
det(size, the)
amod(size, maximum)
obl(speculate, size)
case(anaconda, of)
det(anaconda, the)
nmod(size, anaconda)
punct(let, .)
mark(start, if)
punct(start, ,)
case(part, in)
det(part, a)
amod(part, certain)
obl(start, part)
case(range, of)
det(range, the)
nmod(part, range)
punct(start, ,)
nsubj(start, it)
root(ROOT, start)
obj(start, life)
nummod(foot, 1)
obl:npmod(longer, foot)
advmod(start, longer)
mark(do, than)
advcl(longer, do)
obj(do, any)
case(giant, of)
det(giant, the)
amod(giant, other)
punct(large, ()
advmod(large, relatively)
amod(giant, large)
punct(large, ))
nmod(any, giant)
punct(reach, ,)
cc(reach, and)
conj(start, reach)
obj(reach, maturity)
advmod(reach, at)
punct(let, ,)
conj(reach, let)
obj(let, we)
xcomp(let, guess)
punct(guess, ,)
nummod(inch, 18)
obl:npmod(longer, inch)
advmod(guess, longer)
case(other, than)
det(other, the)
obl(longer, other)
punct(result, ,)
det(quadruple, a)
nsubj(result, quadruple)
case(length, of)
det(length, the)
compound(length, maturity)
nmod(quadruple, length)
aux(result, would)
ccomp(guess, result)
case(maximum, in)
det(maximum, a)
obl(result, maximum)
case(foot, of)
punct(foot, ()
advmod(40, nearly)
punct(foot, ))
nummod(foot, 40)
nmod(maximum, foot)
punct(result, .)
mark(come, when)
expl(come, it)
advcl(lead, come)
case(rate, to)
obl(come, rate)
case(growth, of)
amod(growth, early)
nmod(rate, growth)
punct(lead, ,)
det(python, the)
amod(python, indian)
nsubj(lead, python)
root(ROOT, lead)
case(figure, with)
det(figure, a)
obl(lead, figure)
case(foot, of)
advmod(3, about)
nummod(foot, 3)
nmod(figure, foot)
nummod(inch, 6)
nmod:npmod(figure, inch)
case(year, per)
nmod(inch, year)
case(year, for)
det(year, the)
amod(year, first)
nummod(year, two)
obl(lead, year)
punct(more, ,)
advmod(lead, more)
cc(less, or)
conj(more, less)
punct(lead, .)
det(python, the)
amod(python, african)
compound(python, rock)
nsubj:pass(follow, python)
punct(python, ,)
det(second, a)
amod(second, close)
appos(python, second)
punct(follow, ,)
aux:pass(follow, be)
root(ROOT, follow)
case(turn, in)
obl(follow, turn)
case(python, by)
det(python, the)
amod(python, reticulate)
obl(follow, python)
punct(follow, .)
expl(be, there)
root(ROOT, be)
amod(data, few)
nsubj(be, data)
case(constrictor, on)
det(constrictor, the)
compound(constrictor, boa)
nmod(data, constrictor)
punct(unconvincing, ,)
nsubj(unconvincing, those)
case(anaconda, for)
det(anaconda, the)
nmod(those, anaconda)
cop(unconvincing, be)
conj(be, unconvincing)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(be, be)
nsubj(be, nothing)
case(all, at)
nmod(python, all)
case(python, on)
det(python, the)
compound(python, amethystine)
obl(be, python)
punct(be, .)
nsubj(seem, it)
root(ROOT, seem)
xcomp(seem, likely)
mark(come, that)
det(python, the)
amod(python, indian)
nsubj(come, python)
ccomp(likely, come)
advmod(come, out)
advmod(come, ahead)
mark(make, because)
nsubj:pass(make, record)
case(growth, of)
nmod:poss(growth, its)
nmod(record, growth)
aux(make, have)
aux:pass(make, be)
advcl(come, make)
advmod(carefully, more)
advmod(make, carefully)
cc(frequently, and)
conj(carefully, frequently)
punct(seem, ;)
punct(seem, ;)
nsubj(respond, it)
parataxis(seem, respond)
advmod(well, exceptionally)
advmod(captivity, well)
case(captivity, to)
obl(respond, captivity)
cc(reach, and)
aux(reach, do)
advmod(reach, not)
conj(respond, reach)
obj(reach, proportion)
nsubj(make, that)
acl:relcl(proportion, make)
obj(make, it)
advmod(make, hard)
mark(keep, to)
xcomp(make, keep)
punct(seem, . )
nsubj(make, I)
aux(make, can)
advmod(make, not)
root(ROOT, make)
obj(make, sense)
case(figure, out)
case(figure, of)
det(figure, the)
obl(make, figure)
case(growth, for)
compound(growth, post)
compound(growth, maturity)
nmod(figure, growth)
punct(make, ;)
punct(make, ;)
case(best, at)
obl(appear, best)
det(increase, the)
amod(increase, annual)
nsubj(appear, increase)
parataxis(make, appear)
mark(matter, to)
cop(matter, be)
det(matter, a)
xcomp(appear, matter)
case(inch, of)
nmod(matter, inch)
cc(foot, rather)
fixed(rather, than)
conj(inch, foot)
punct(make, .)
mark(keep, until)
amod(record, better)
nsubj:pass(keep, record)
aux(keep, have)
aux:pass(keep, be)
advcl(wise, keep)
case(period, over)
amod(period, longer)
obl(keep, period)
case(time, of)
nmod(period, time)
cc(know, and)
advmod(more, much)
nsubj:pass(know, more)
aux:pass(know, be)
conj(keep, know)
case(dimension, about)
det(dimension, the)
amod(dimension, maximum)
obl(know, dimension)
punct(wise, ,)
expl(wise, it)
aux(wise, will)
cop(wise, be)
root(ROOT, wise)
mark(refrain, to)
csubj(wise, refrain)
case(conclusion, from)
compound(conclusion, draw)
obl(refrain, conclusion)
punct(wise, .)
nsubj:pass(state, it)
aux:pass(state, be)
advmod(state, often)
root(ROOT, state)
mark(require, that)
det(snake, the)
amod(snake, largest)
nsubj(require, snake)
ccomp(state, require)
nummod(year, five)
obj(require, year)
mark(attain, to)
advcl(require, attain)
obj(attain, maturity)
punct(overestimation, ,)
cc(overestimation, but)
nsubj(overestimation, this)
advmod(overestimation, apparently)
cop(overestimation, be)
det(overestimation, a)
conj(state, overestimation)
punct(state, .)
det(way, the)
amod(way, best)
nsubj(observation, way)
mark(determine, to)
acl(way, determine)
det(figure, the)
amod(figure, correct)
obj(determine, figure)
punct(figure, ()
case(captive, in)
nmod(figure, captive)
punct(figure, ))
cop(observation, be)
case(observation, by)
amod(observation, direct)
root(ROOT, observation)
case(pair, of)
nmod(observation, pair)
acl(pair, isolate)
case(birth, from)
obl(isolate, birth)
punct(method, ,)
det(method, a)
appos(observation, method)
nsubj(produce, that)
acl:relcl(method, produce)
amod(result, surprising)
obj(produce, result)
punct(produce, :)
advcl(produce, mature)
case(python, of)
det(python, a)
amod(python, male)
amod(python, indian)
obl(mature, python)
case(year, in)
advmod(two, less)
fixed(less, than)
nummod(year, two)
obl(mature, year)
punct(mate, ,)
nmod:poss(mate, he)
appos(year, mate)
case(three, in)
advmod(three, less)
fixed(less, than)
nmod(mate, three)
punct(mate, ;)
punct(mate, ;)
appos(mate, data)
case(constrictor, on)
det(constrictor, the)
compound(constrictor, boa)
nmod(data, constrictor)
case(match, about)
nmod(constrictor, match)
nmod(constrictor, this)
punct(be, .)
det(approach, another)
nsubj(be, approach)
acl:relcl(data, be)
mark(estimate, to)
ccomp(be, estimate)
case(rate, from)
det(rate, the)
obl(estimate, rate)
case(growth, of)
nmod(rate, growth)
cc(size, and)
det(size, the)
amod(size, smallest)
conj(growth, size)
case(maturity, at)
nmod(size, maturity)
punct(be, .)
nsubj(confirm, result)
case(approach, from)
det(approach, this)
nmod(result, approach)
advmod(confirm, amply)
root(ROOT, confirm)
det(observation, the)
amod(observation, direct)
obj(confirm, observation)
punct(observation, :)
advmod(three, about)
nummod(year, three)
obl:tmod(require, year)
aux:pass(require, be)
parataxis(confirm, require)
punct(confirm, ,)
expl(difference, there)
cop(difference, be)
det(difference, a)
amod(difference, possible)
amod(difference, slight)
parataxis(require, difference)
case(male, between)
nmod(difference, male)
cc(female, and)
conj(male, female)
case(time, in)
det(time, the)
obl(difference, time)
acl(time, require)
punct(confirm, .)
advmod(python, only)
det(python, the)
compound(python, amethystine)
nsubj:pass(exclude, python)
cc(anaconda, and)
det(anaconda, the)
conj(python, anaconda)
aux(exclude, must)
aux:pass(exclude, be)
root(ROOT, exclude)
case(lack, for)
obl(exclude, lack)
cc(paucity, or)
conj(lack, paucity)
case(data, of)
nmod(lack, data)
punct(exclude, .)
det(information, the)
amod(information, follow)
nsubj(show, information)
case(snake, on)
nmod(information, snake)
acl(information, varying)
advmod(varying, greatly)
case(size, in)
obl(varying, size)
punct(all, ()
cc(all, but)
nsubj(show, all)
case(maximum, with)
advmod(foot, less)
fixed(less, than)
det(maximum, a)
nummod(foot, 10)
punct(foot, -)
compound(maximum, foot)
nmod(all, maximum)
punct(maximum, ))
root(ROOT, show)
punct(show, ,)
mark(consider, when)
advcl(show, consider)
case(forego, with)
det(forego, the)
obl(consider, forego)
punct(be, ,)
mark(be, that)
expl(be, there)
ccomp(consider, be)
advmod(be, probably)
det(correlation, no)
nsubj(be, correlation)
case(length, between)
det(length, the)
nmod(correlation, length)
case(snake, of)
det(snake, a)
nmod(length, snake)
cc(time, and)
det(time, the)
conj(snake, time)
acl(time, require)
case(it, for)
obl(require, it)
mark(mature, to)
advcl(require, mature)
punct(show, .)
nsubj(supply, Oliver)
punct(supply, ,)
case(summary, in)
nmod:poss(summary, he)
obl(supply, summary)
case(habit, of)
det(habit, the)
nmod(summary, habit)
case(snake, of)
det(snake, the)
nmod(habit, snake)
case(States, of)
det(States, the)
compound(States, United)
nmod(snake, States)
punct(supply, ,)
aux(supply, could)
root(ROOT, supply)
obj(supply, data)
case(period, on)
det(period, the)
compound(period, mature)
obl(supply, period)
case(species, for)
advmod(species, only)
nummod(species, three)
nmod(period, species)
case(addition, in)
nmod(species, addition)
case(rattler, to)
det(rattler, the)
nmod(addition, rattler)
punct(rattler, ,)
obj(consider, which)
nsubj(consider, I)
aux(consider, shall)
acl:relcl(rattler, consider)
advmod(consider, separately)
punct(supply, .)
det(three, these)
nsubj(alike, three)
cop(alike, be)
advmod(alike, much)
root(ROOT, alike)
punct(alike, :)
amod(snake, line)
appos(alike, snake)
punct(tropidoclonion, ()
appos(snake, tropidoclonion)
punct(tropidoclonion, ))
punct(snake, ,)
nummod(year, one)
appos(snake, year)
cc(month, and)
nummod(month, nine)
conj(snake, month)
punct(alike, ;)
punct(alike, ;)
amod(belly, red)
punct(belly, -)
amod(snake, belly)
conj(snake, snake)
punct(Storeria, ()
appos(snake, Storeria)
punct(Storeria, ))
punct(year, ,)
nummod(year, two)
appos(snake, year)
punct(year, ;)
punct(year, ;)
appos(snake, cottonmouth)
punct(Ancistrodon, ()
appos(cottonmouth, Ancistrodon)
punct(Ancistrodon, ))
punct(year, ,)
nummod(year, two)
appos(cottonmouth, year)
punct(alike, .)
nsubj(investigate, Klauber)
root(ROOT, investigate)
det(rattlesnake, the)
obj(investigate, rattlesnake)
advmod(himself, carefully)
obl:npmod(investigate, himself)
cc(summarize, and)
advmod(summarize, also)
conj(investigate, summarize)
det(other, what)
nsubj(find, other)
aux(find, have)
ccomp(summarize, find)
punct(investigate, .)
nsubj(conclude, he)
root(ROOT, conclude)
mark(mate, that)
case(species, in)
det(species, the)
amod(species, southern)
obl(mate, species)
punct(species, ,)
nsubj(grow, which)
aux(grow, be)
advmod(grow, rapidly)
acl:relcl(species, grow)
obj(grow, type)
punct(mate, ,)
nsubj(mate, female)
ccomp(conclude, mate)
case(age, at)
det(age, the)
obl(mate, age)
case(two, of)
nmod(age, two)
cc(half, and)
det(half, a)
conj(two, half)
cc(bear, and)
conj(mate, bear)
det(young, the)
amod(young, first)
obj(bear, young)
mark(three, when)
nsubj(three, they)
cop(three, be)
advcl(bear, three)
punct(conclude, .)
amod(herpetologist, other)
nsubj(ascertain, herpetologist)
aux(ascertain, have)
root(ROOT, ascertain)
mark(give, that)
case(States, in)
det(States, the)
amod(States, northern)
compound(States, United)
obl(give, States)
det(rattlesnake, the)
amod(rattlesnake, prairie)
nsubj(give, rattlesnake)
aux(give, may)
advmod(give, not)
ccomp(ascertain, give)
amod(birth, first)
obj(give, birth)
mark(old, until)
nsubj(old, it)
cop(old, be)
obl:npmod(old, four)
cc(five, or)
advmod(five, even)
nummod(year, five)
obl:npmod(old, year)
advcl(give, old)
punct(bear, ,)
cc(bear, and)
mark(bear, that)
det(young, the)
nsubj:pass(bear, young)
aux(bear, may)
aux:pass(bear, be)
conj(old, bear)
det(year, every)
amod(year, other)
obl:tmod(bear, year)
punct(bear, ,)
cc(annually, rather)
fixed(rather, than)
advmod(bear, annually)
punct(ascertain, .)
nmod:poss(study, Carpenter)
case(Carpenter, 's)
nsubj(show, study)
root(ROOT, show)
mark(mature, that)
amod(garter, female)
amod(garter, common)
nsubj(mature, garter)
cc(snake, and)
compound(snake, ribbon)
conj(garter, snake)
case(Michigan, of)
nmod(snake, Michigan)
ccomp(show, mature)
obl(mature, at)
case(age, about)
det(age, the)
obl(mature, age)
case(two, of)
nmod(age, two)
punct(mature, .)
amod(length, maximum)
compound(monster, length)
amod(monster, oversize)
nsubj:pass(bring, monster)
aux:pass(bring, be)
advmod(bring, never)
ccomp(show, bring)
advmod(bring, home)
cc:preconj(alive, either)
xcomp(bring, alive)
cc(preserve, or)
conj(alive, preserve)
punct(open, ,)
cc(open, and)
compound(measurement, field)
nsubj(open, measurement)
cop(open, be)
advmod(open, obviously)
conj(bring, open)
case(doubt, to)
obl(open, doubt)
case(tendency, because)
fixed(because, of)
det(tendency, the)
amod(tendency, universal)
obl(open, tendency)
mark(exaggerate, to)
acl(tendency, exaggerate)
obj(exaggerate, dimension)
punct(show, .)
nsubj(value, measurement)
case(skin, of)
nmod(measurement, skin)
cop(value, be)
case(value, of)
amod(value, little)
root(ROOT, value)
punct(value, ;)
punct(value, ;)
det(hide, every)
compound(hide, snake)
nsubj(longer, hide)
cop(longer, be)
advmod(longer, noticeably)
parataxis(value, longer)
mark(present, than)
nmod:poss(carcass, its)
nsubj(present, carcass)
cc(stretch, and)
conj(carcass, intentional)
conj(carcass, stretch)
advcl(longer, present)
det(difficulty, no)
obj(present, difficulty)
case(explorer, to)
det(explorer, the)
amod(explorer, unscrupulous)
nmod(difficulty, explorer)
punct(value, .)
case(spite, in)
obl(be, spite)
case(pitfall, of)
det:predet(pitfall, all)
det(pitfall, the)
nmod(spite, pitfall)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(amount, a)
amod(amount, certain)
nsubj(be, amount)
case(agreement, of)
nmod(amount, agreement)
case(some, on)
nmod(amount, some)
case(giant, of)
det(giant, the)
nmod(some, giant)
punct(be, .)
det(anaconda, the)
nsubj(prove, anaconda)
root(ROOT, prove)
mark(fly, to)
cop(fly, be)
det(fly, the)
xcomp(prove, fly)
case(ointment, in)
det(ointment, the)
nmod(fly, ointment)
punct(clear, ,)
cc(clear, but)
det(reason, the)
nsubj(clear, reason)
case(this, for)
nmod(reason, this)
cop(clear, be)
advmod(clear, not)
conj(prove, clear)
punct(prove, ;)
punct(prove, ;)
det(condition, the)
advmod(wild, relatively)
amod(condition, wild)
nsubj(responsible, condition)
advmod(find, still)
parataxis(clear, find)
case(America, in)
amod(America, tropical)
compound(America, South)
obl(find, America)
aux(responsible, might)
cop(responsible, be)
ccomp(find, responsible)
punct(prove, .)
expl(be, there)
root(ROOT, be)
nummod(level, three)
nsubj(be, level)
case(which, on)
obl(treat, which)
mark(treat, to)
acl(level, treat)
det(subject, the)
obj(treat, subject)
punct(be, .)
det(first, the)
nsubj(scientific, first)
cop(scientific, be)
det(scientific, the)
advmod(scientific, strictly)
root(ROOT, scientific)
punct(scientific, ,)
nsubj(demand, which)
parataxis(scientific, demand)
amod(proof, concrete)
obj(demand, proof)
cc(err, and)
advmod(err, therefore)
aux(err, may)
conj(demand, err)
case(side, on)
det(side, the)
amod(side, conservative)
obl(err, side)
mark(wait, by)
advcl(err, wait)
case(evidence, for)
obl(wait, evidence)
case(flesh, in)
det(flesh, the)
nmod(evidence, flesh)
punct(scientific, .)
det(approach, this)
nsubj(reject, approach)
root(ROOT, reject)
advmod(measurement, virtually)
det(measurement, all)
compound(measurement, field)
obj(reject, measurement)
punct(reject, .)
det(level, the)
amod(level, next)
nsubj(attempt, level)
root(ROOT, attempt)
mark(weigh, to)
xcomp(attempt, weigh)
amod(evidence, varied)
obj(weigh, evidence)
cc(come, and)
conj(weigh, come)
case(conclusion, to)
det(conclusion, a)
amod(conclusion, balance)
punct(conclusion, ,)
amod(conclusion, sensible)
obl(come, conclusion)
punct(attempt, ;)
punct(attempt, ;)
compound(measurement, field)
nsubj:pass(reject, measurement)
case(explorer, by)
amod(explorer, experience)
nmod(measurement, explorer)
aux:pass(reject, be)
advmod(reject, not)
parataxis(attempt, reject)
punct(evaluate, ,)
cc(evaluate, and)
advmod(report, even)
nsubj:pass(evaluate, report)
case(nature, of)
det(nature, a)
advmod(scientific, less)
amod(nature, scientific)
nmod(report, nature)
aux:pass(evaluate, be)
advmod(evaluate, duly)
conj(reject, evaluate)
punct(attempt, .)
det(level, the)
amod(level, third)
nsubj(lean, level)
root(ROOT, lean)
case(belief, on)
det(belief, a)
obl(lean, belief)
mark(mean, that)
det(lot, a)
nsubj(mean, lot)
case(smoke, of)
nmod(lot, smoke)
acl(belief, mean)
det(fire, some)
obj(mean, fire)
punct(lean, .)
det(argument, the)
nsubj(comparable, argument)
case(approach, against)
det(approach, this)
amod(approach, last)
nmod(argument, approach)
cop(comparable, be)
root(ROOT, comparable)
obl(comparable, to)
mark(reject, that)
nsubj(reject, which)
ccomp(comparable, reject)
obj(reject, story)
case(snake, about)
compound(snake, hoop)
nmod(story, snake)
punct(reject, ,)
case(snake, about)
nmod(story, snake)
nsubj(break, that)
acl:relcl(snake, break)
obj(break, themselves)
case(piece, into)
amod(piece, many)
obl(break, piece)
cc(join, and)
conj(break, join)
compound:prt(join, up)
advmod(join, again)
punct(ghost, ,)
cc(ghost, or)
advmod(ghost, even)
case(ghost, of)
obl(join, ghost)
nsubj(chase, that)
acl:relcl(ghost, chase)
obj(chase, people)
case(graveyards, out)
case(graveyards, of)
obl(chase, graveyards)
punct(ghost, ;)
punct(prove, ;)
det(piling, the)
amod(piling, mere)
compound(up, piling)
advmod(prove, up)
case(testimony, of)
nmod(up, testimony)
aux(prove, do)
advmod(prove, not)
parataxis(comparable, prove)
punct(prove, ,)
case(mind, to)
det(mind, the)
amod(mind, scientific)
obl(prove, mind)
punct(existence, ,)
det(existence, the)
conj(prove, existence)
case(snake, of)
compound(snake, hoop)
nmod(existence, snake)
punct(snake, ,)
amod(snake, joint)
conj(snake, snake)
punct(ghost, ,)
cc(ghost, or)
conj(snake, ghost)
punct(comparable, .)
nsubj(use, Oliver)
aux(use, have)
advmod(use, recently)
root(ROOT, use)
det(approach, the)
amod(level, second)
punct(level, -)
compound(approach, level)
obj(use, approach)
case(snake, with)
det(snake, the)
amod(snake, largest)
nmod(approach, snake)
punct(come, ,)
cc(come, and)
aux(come, have)
conj(use, come)
case(conclusion, to)
det(conclusion, these)
obl(come, conclusion)
punct(reach, :)
det(anaconda, the)
nsubj(reach, anaconda)
parataxis(come, reach)
det(length, a)
obj(reach, length)
case(foot, of)
case(least, at)
nmod(37, least)
nummod(foot, 37)
nmod(length, foot)
punct(foot, ,)
det(python, the)
amod(python, reticulate)
appos(foot, python)
nummod(python, 33)
punct(python, ,)
det(python, the)
amod(python, african)
compound(python, rock)
appos(python, python)
nummod(python, 25)
punct(python, ,)
det(python, the)
compound(python, amethystine)
appos(python, python)
case(least, at)
nmod(22, least)
nummod(python, 22)
punct(python, ,)
det(python, the)
amod(python, indian)
appos(22, python)
nummod(python, 20)
punct(constrictor, ,)
cc(constrictor, and)
det(constrictor, the)
compound(constrictor, boa)
conj(foot, constrictor)
nummod(constrictor, 18)
case(1/2, -)
nmod(18, 1/2)
punct(use, .)
nsubj(treat, Bernard)
flat(Bernard, Heuvelmans)
advmod(treat, also)
root(ROOT, treat)
case(snake, of)
det(snake, the)
amod(snake, largest)
obl(treat, snake)
punct(concerned, ,)
cc(level, but)
case(level, on)
det(level, the)
amod(level, third)
obl(concerned, level)
punct(concerned, ,)
cc(concerned, and)
cop(concerned, be)
advmod(concerned, chiefly)
conj(treat, concerned)
case(anaconda, with)
det(anaconda, the)
obl(concerned, anaconda)
punct(treat, .)
nsubj(reason, he)
root(ROOT, reason)
mark(38, that)
mark(find, as)
nsubj:pass(find, anaconda)
nummod(foot, 30)
obl:npmod(long, foot)
advmod(find, long)
aux:pass(find, be)
advmod(find, often)
advcl(38, find)
punct(38, ,)
nsubj(38, some)
aux(38, might)
cop(38, be)
ccomp(reason, 38)
punct(freak, ,)
cc(freak, and)
amod(freak, occasional)
punct(freak, ``)
amod(freak, monstrous)
conj(38, freak)
punct(freak, '')
case(50, over)
nmod(freak, 50)
punct(reason, .)
nsubj(reject, he)
root(ROOT, reject)
obj(reject, dimension)
case(foot, of)
nummod(foot, 70)
nmod(dimension, foot)
cc(more, and)
conj(foot, more)
punct(reject, .)
nmod:poss(chapter, he)
amod(chapter, thirteenth)
nsubj(include, chapter)
root(ROOT, include)
amod(account, many)
amod(account, exciting)
obj(include, account)
case(serpent, of)
amod(serpent, huge)
nmod(account, serpent)
case(strength, with)
amod(strength, prodigious)
nmod(serpent, strength)
punct(seem, ,)
cc(seem, but)
nsubj(seem, these)
conj(include, seem)
mark(give, to)
aux:pass(give, be)
xcomp(seem, give)
mark(complete, to)
xcomp(give, complete)
nmod:poss(picture, he)
obj(complete, picture)
punct(believe, ,)
advmod(believe, not)
mark(believe, to)
aux:pass(believe, be)
advcl(complete, believe)
punct(information, .)
amod(information, detailed)
nsubj:pass(believe, information)
case(length, on)
amod(length, record)
nmod(information, length)
case(giant, of)
det(giant, the)
nmod(length, giant)
aux:pass(give, be)
acl:relcl(information, give)
case(section, in)
det(section, the)
obl(give, section)
nsubj(follow, that)
acl:relcl(section, follow)
punct(include, .)
nsubj(include, Growth)
case(discussion, of)
det(discussion, the)
nummod(giant, six)
compound(discussion, giant)
nmod(Growth, discussion)
case(one, of)
det(one, the)
compound(one, giant)
nmod(discussion, one)
case(one, by)
nmod(one, one)
aux(include, will)
root(ROOT, include)
punct(include, ,)
advmod(far, as)
advmod(include, far)
mark(possible, as)
advcl(far, possible)
punct(data, ,)
nsubj(include, data)
case(aspect, on)
det(aspect, these)
nmod(data, aspect)
case(growth, of)
nmod(aspect, growth)
punct(data, :)
appos(data, size)
case(which, at)
obl(start, which)
nsubj:pass(start, life)
aux:pass(start, be)
acl:relcl(size, start)
cc(reach, and)
case(maturity, at)
det(maturity, which)
amod(maturity, sexual)
nsubj:pass(reach, maturity)
aux:pass(reach, be)
conj(start, reach)
punct(time, ;)
punct(time, ;)
obl:npmod(reach, time)
acl(time, require)
mark(reach, to)
xcomp(require, reach)
obj(reach, maturity)
punct(rate, ;)
punct(rate, ;)
appos(time, rate)
case(growth, of)
nmod(rate, growth)
cc:preconj(before, both)
advmod(rate, before)
cc(stage, and)
case(stage, after)
det(stage, this)
amod(stage, crucial)
obl(before, stage)
punct(before, ;)
punct(length, ;)
cc(length, and)
amod(length, maximum)
conj(stage, length)
punct(length, ,)
case(confirmation, with)
nmod(length, confirmation)
cc(amplification, or)
conj(confirmation, amplification)
case(figure, of)
nmod:poss(figure, Oliver)
case(Oliver, 's)
nmod(confirmation, figure)
punct(confirmation, .)
amod(information, definite)
nsubj(lack, information)
case(growth, on)
det(growth, the)
nmod(information, growth)
case(individual, of)
amod(individual, senile)
nmod(growth, individual)
cop(lack, be)
acl:relcl(length, lack)
punct(include, .)
root(ROOT, Anaconda)
punct(Anaconda, :)
case(birth, at)
obl(vary, birth)
punct(vary, ,)
det(species, this)
nsubj(vary, species)
parataxis(Anaconda, vary)
advmod(vary, considerably)
case(size, in)
obl(vary, size)
punct(Anaconda, . )
det(brood, a)
nsubj(range, brood)
case(eight, of)
compound(eight, twenty)
punct(eight, -)
nmod(brood, eight)
acl(brood, bear)
case(Zoo, at)
compound(Zoo, Brookfield)
obl(bear, Zoo)
punct(range, ,)
case(Chicago, near)
obl(range, Chicago)
punct(range, ,)
root(ROOT, range)
case(length, in)
obl(range, length)
case(22, from)
obl(range, 22)
case(33, to)
nmod(22, 33)
case(2, -)
compound(2, 1)
case(2, /)
nummod(inch, 2)
obl(average, inch)
cc(average, and)
conj(give, average)
nummod(inch, 29)
obj(average, inch)
punct(give, .)
nsubj(give, Lawrence)
flat(Lawrence, E.)
flat(Lawrence, Griffin)
conj(range, give)
obj(give, measurement)
case(anaconda, of)
nummod(anaconda, nineteen)
amod(anaconda, young)
nmod(measurement, anaconda)
punct(anaconda, ,)
advmod(member, presumably)
appos(anaconda, member)
case(brood, of)
det(brood, a)
nmod(member, brood)
punct(member, ,)
case(America, from)
punct(America, ``)
compound(America, South)
nmod(member, America)
punct(America, '')
punct(America, ;)
punct(measurement, ;)
det(measurement, the)
amod(measurement, extreme)
appos(anaconda, measurement)
case(fall, of)
det(fall, these)
nmod(measurement, fall)
case(limit, between)
det(limit, the)
amod(limit, lower)
nmod(fall, limit)
case(brood, of)
det(brood, the)
compound(brood, Brookfield)
nmod(limit, brood)
cc(average, and)
nmod:poss(average, its)
conj(brood, average)
punct(range, .)
nsubj(have, Raymond)
flat(Raymond, L.)
nsubj(have, Ditmars)
root(ROOT, have)
nummod(brood, two)
obj(have, brood)
nsubj(average, that)
acl:relcl(brood, average)
nummod(inch, 27)
obj(average, inch)
punct(have, .)
nsubj(give, R.)
flat(R., R.)
flat(R., mole)
cc(F., and)
conj(R., F.)
flat(F., W.)
flat(F., urich)
parataxis(have, give)
advmod(20, approximately)
nummod(inch, 20)
obj(give, inch)
case(length, as)
det(length, the)
amod(length, average)
obl(give, length)
case(brood, of)
det(brood, a)
nmod(length, brood)
case(thirty, of)
nmod(brood, thirty)
case(region, from)
det(region, the)
nmod(brood, region)
case(estuary, of)
det(estuary, the)
compound(estuary, Orinoco)
nmod(region, estuary)
punct(report, .)
nsubj(report, William)
flat(William, Beebe)
parataxis(have, report)
nummod(inch, 26)
obj(report, inch)
cc(ounce, and)
nummod(ounce, 2.4)
conj(inch, ounce)
punct(emaciate, ()
det(snake, this)
nsubj:pass(emaciate, snake)
aux(emaciate, must)
aux(emaciate, have)
aux:pass(emaciate, be)
parataxis(ounce, emaciate)
punct(emaciate, ))
case(length, for)
det(length, the)
obl(emaciate, length)
cc(weight, and)
det(weight, the)
conj(length, weight)
case(anaconda, of)
det(anaconda, a)
amod(anaconda, young)
nmod(weight, anaconda)
case(Guiana, from)
compound(Guiana, British)
nmod(anaconda, Guiana)
punct(have, .)
case(contrast, in)
obl(record, contrast)
punct(record, ,)
nsubj(record, Ditmars)
root(ROOT, record)
det(length, the)
amod(length, average)
obj(record, length)
case(young, of)
compound(two, seventy)
punct(two, -)
nummod(young, two)
nmod(length, young)
case(female, of)
det(female, a)
nummod(foot, 19)
punct(foot, -)
compound(female, foot)
nmod(young, female)
case(inch, as)
nummod(inch, 38)
obl(record, inch)
punct(bear, ,)
cc(bear, and)
nummod(young, four)
nsubj:pass(bear, young)
aux:pass(bear, be)
conj(record, bear)
case(London, in)
obl(bear, London)
case(length, at)
det(length, a)
obl(bear, length)
case(inch, of)
nummod(inch, 35)
cc(36, or)
conj(35, 36)
nmod(length, inch)
cc(weight, and)
det(weight, a)
conj(length, weight)
case(ounce, of)
case(ounce, from)
nummod(ounce, 14)
case(16, to)
nmod(14, 16)
nmod(weight, ounce)
punct(record, .)
nsubj(have, Beebe)
root(ROOT, have)
det(anaconda, a)
nummod(foot, 3)
punct(foot, -)
compound(anaconda, foot)
obj(have, anaconda)
nsubj(weigh, that)
acl:relcl(anaconda, weigh)
advmod(9.8, only)
nummod(ounce, 9.8)
obj(weigh, ounce)
punct(have, . )
det(difference, a)
nsubj(explain, difference)
case(subspecy, between)
nmod(difference, subspecy)
aux(explain, might)
root(ROOT, explain)
det(range, the)
amod(range, great)
obj(explain, range)
case(size, in)
obl(explain, size)
punct(explain, . )
nsubj(have, I)
root(ROOT, have)
amod(information, little)
obj(have, information)
case(rate, on)
det(anaconda, the)
nmod:poss(rate, anaconda)
case(anaconda, 's)
nmod(information, rate)
case(growth, of)
nmod(rate, growth)
punct(have, .)
nsubj(have, Hans)
flat(Hans, Schweizer)
root(ROOT, have)
obj(have, one)
nsubj(increase, that)
acl:relcl(one, increase)
case(inch, from)
nummod(inch, 19)
case(1, -)
nmod(19, 1)
case(2, /)
nmod(19, 2)
obl(increase, inch)
case(foot, to)
nummod(foot, 5)
nmod(inch, foot)
nummod(inch, 3)
obl:tmod(increase, inch)
case(year, in)
nummod(year, five)
obl(increase, year)
punct(record, ,)
cc(record, and)
nsubj(record, J.)
flat(J., J.)
flat(J., Quelch)
conj(have, record)
det(growth, a)
obj(record, growth)
case(foot, of)
case(foot, from)
advmod(4, less)
fixed(less, than)
nummod(foot, 4)
nmod(growth, foot)
case(10, to)
advmod(10, nearly)
nmod(foot, 10)
case(year, in)
advmod(six, about)
nummod(year, six)
nmod(10, year)
punct(have, .)
expl(unlikely, it)
cop(unlikely, be)
advmod(unlikely, very)
root(ROOT, unlikely)
mark(grow, that)
nsubj(grow, either)
case(anaconda, of)
det(anaconda, these)
nmod(either, anaconda)
aux(grow, be)
csubj(unlikely, grow)
case(rate, at)
det(rate, a)
amod(rate, normal)
obl(grow, rate)
punct(unlikely, .)
case(1948, in)
obl(write, 1948)
punct(write, ,)
nsubj(write, Afranio)
flat(Afranio, do)
flat(Afranio, Amaral)
punct(Afranio, ,)
det(herpetologist, the)
amod(herpetologist, note)
amod(herpetologist, brazilian)
appos(Afranio, herpetologist)
punct(write, ,)
root(ROOT, write)
det(paper, a)
amod(paper, technical)
obj(write, paper)
case(snake, on)
det(snake, the)
compound(snake, giant)
obl(write, snake)
punct(write, .)
nsubj(conclude, he)
root(ROOT, conclude)
mark(12, that)
det(anaconda, the)
nmod:poss(length, anaconda)
case(anaconda, 's)
amod(length, maximum)
nsubj(12, length)
cop(12, be)
ccomp(conclude, 12)
cc(13, or)
conj(12, 13)
punct(14, ()
advmod(14, perhaps)
nummod(meter, 14)
punct(14, ))
appos(12, meter)
punct(meter, ,)
nsubj(approximate, which)
aux(approximate, would)
acl:relcl(meter, approximate)
case(foot, from)
nummod(foot, 39)
case(42, to)
nmod(39, 42)
obl(approximate, foot)
punct(foot, ()
nummod(meter, 14)
nsubj(foot, meter)
cop(foot, be)
advmod(less, slightly)
advmod(foot, less)
fixed(less, than)
nummod(foot, 46)
parataxis(lie, foot)
punct(foot, ))
punct(lie, .)
advmod(lie, thus)
punct(lie, ,)
nmod:poss(estimate, he)
nsubj(lie, estimate)
ccomp(conclude, lie)
case(suggestion, between)
nmod:poss(suggestion, Oliver)
case(Oliver, 's)
obl(lie, suggestion)
case(foot, of)
case(least, at)
nmod(37, least)
nummod(foot, 37)
nmod(suggestion, foot)
cc(freak, and)
det(freak, the)
nummod(foot, 50)
punct(foot, -)
compound(freak, foot)
punct(freak, ``)
amod(freak, monstrous)
conj(foot, freak)
punct(freak, '')
acl(freak, intimate)
case(Heuvelmans, by)
obl(intimate, Heuvelmans)
punct(conclude, .)
det(measurement, the)
advmod(convincing, most)
amod(measurement, convincing)
amod(measurement, recent)
nsubj:pass(make, measurement)
case(anaconda, of)
det(anaconda, a)
nmod(measurement, anaconda)
aux:pass(make, be)
root(ROOT, make)
case(Colombia, in)
amod(Colombia, eastern)
obl(make, Colombia)
case(Roberto, by)
obl(make, Roberto)
flat(Roberto, Lamon)
punct(Roberto, ,)
det(geologist, a)
compound(geologist, petroleum)
appos(Roberto, geologist)
case(Company, of)
det(Company, the)
compound(Company, Richmond)
compound(Company, oil)
nmod(geologist, Company)
punct(report, ,)
cc(report, and)
conj(make, report)
case(1944, in)
obl(report, 1944)
case(Emmett, by)
obl(report, Emmett)
flat(Emmett, R.)
flat(Emmett, Dunn)
punct(make, .)
advmod(open, however)
punct(open, ,)
case(measurement, as)
det(measurement, a)
compound(measurement, field)
obl(open, measurement)
punct(open, ,)
expl(open, it)
cop(open, be)
root(ROOT, open)
mark(question, to)
csubj(open, question)
punct(open, .)
nmod:poss(foot, Oliver)
case(Oliver, 's)
compound(2, 37)
punct(2, -)
compound(2, 1)
punct(2, /)
nummod(foot, 2)
nsubj:pass(base, foot)
aux:pass(base, be)
advmod(base, partly)
root(ROOT, base)
case(report, on)
det(report, this)
obl(base, report)
cc(accept, and)
aux(accept, can)
aux:pass(accept, be)
conj(base, accept)
advmod(accept, as)
obl(accept, probable)
punct(base, .)
advmod(skeptical, however)
punct(skeptical, ,)
amod(herpetologist, many)
nsubj(remain, herpetologist)
root(ROOT, remain)
xcomp(remain, skeptical)
cc(prefer, and)
aux(prefer, would)
conj(remain, prefer)
det(maximum, a)
amod(maximum, tentative)
obj(prefer, maximum)
case(foot, of)
advmod(30, about)
nummod(foot, 30)
nmod(maximum, foot)
punct(skeptical, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(prove, that)
advmod(anaconda, especially)
amod(anaconda, large)
nsubj(prove, anaconda)
aux(prove, will)
csubj(possible, prove)
mark(belong, to)
xcomp(prove, belong)
case(subspecy, to)
obl(belong, subspecy)
xcomp(belong, limit)
case(area, to)
det(area, a)
amod(area, small)
obl(limit, area)
punct(possible, .)
case(difference, in)
compound(difference, snake)
nsubj(characteristic, difference)
case(size, in)
nmod(difference, size)
cop(characteristic, be)
det(characteristic, a)
amod(characteristic, common)
root(ROOT, characteristic)
case(subspecy, of)
nmod(characteristic, subspecy)
punct(characteristic, .)
compound(constrictor, Boa)
root(ROOT, constrictor)
punct(constrictor, : )
det(female, a)
amod(female, colombian)
nmod:poss(brood, female)
case(female, 's)
nsubj(average, brood)
case(constrictor, of)
nummod(constrictor, sixteen)
compound(constrictor, boa)
nmod(brood, constrictor)
acl(constrictor, bear)
case(Zoo, in)
det(Zoo, the)
compound(Island, Staten)
compound(Zoo, Island)
obl(bear, Zoo)
root(ROOT, average)
nummod(inch, 20)
obj(average, inch)
punct(average, .)
det(length, this)
compound(length, birth)
nsubj(seem, length)
parataxis(average, seem)
mark(typical, to)
cop(typical, be)
xcomp(seem, typical)
punct(seem, .)
mark(collate, when)
det(record, some)
nummod(record, thirteen)
nsubj:pass(collate, record)
case(individual, of)
advmod(bear, newly)
cc(bear, and)
advmod(bear, recently)
amod(individual, bear)
nmod(record, individual)
aux:pass(collate, be)
advcl(seem, collate)
punct(correlation, ,)
amod(correlation, little)
cc(correlation, or)
det(correlation, no)
nsubj:pass(detect, correlation)
case(length, between)
nmod(correlation, length)
cc(distribution, and)
conj(length, distribution)
aux(detect, can)
aux:pass(detect, be)
conj(collate, detect)
punct(average, .)
det(range, the)
nsubj(inch, range)
cop(inch, be)
case(inch, from)
nummod(inch, 14)
case(25, to)
nmod(14, 25)
root(ROOT, inch)
punct(inch, ;)
punct(inch, ;)
det(figure, the)
amod(figure, former)
nsubj:pass(base, figure)
aux:pass(base, be)
parataxis(inch, base)
case(birth, on)
det(birth, a)
advmod(unusual, somewhat)
amod(birth, unusual)
obl(base, birth)
case(female, of)
nmod(birth, four)
case(female, by)
det(female, a)
amod(female, central)
amod(female, american)
nmod(birth, female)
punct(see, ()
parataxis(birth, see)
obj(see, chapter)
case(lay, on)
obl(see, lay)
punct(brooding, ,)
conj(lay, brooding)
punct(hatch, ,)
conj(lay, hatch)
punct(birth, ,)
cc(birth, and)
conj(lay, birth)
punct(birth, ))
punct(latter, ,)
det(latter, the)
conj(see, latter)
case(individual, on)
det(individual, a)
punct(normal, ``)
amod(individual, normal)
punct(normal, '')
advmod(bear, newly)
amod(individual, bear)
nmod(latter, individual)
punct(inch, .)
advmod(take, however)
punct(take, ,)
mark(base, as)
advmod(base, so)
nsubj:pass(base, many)
case(record, of)
det(record, the)
nmod(many, record)
aux:pass(base, be)
advmod(base, not)
advmod(base, certainly)
advcl(take, base)
case(snake, on)
amod(snake, newborn)
obl(base, snake)
punct(take, ,)
det(data, these)
nsubj:pass(take, data)
aux(take, must)
aux:pass(take, be)
root(ROOT, take)
advmod(take, tentatively)
punct(take, ;)
punct(take, ;)
amod(conclusion, final)
nsubj(have, conclusion)
aux(have, will)
parataxis(take, have)
mark(await, to)
xcomp(have, await)
det(measurement, the)
obj(await, measurement)
case(brood, of)
nmod(measurement, brood)
case(locality, from)
amod(locality, definite)
obl(await, locality)
punct(take, .)
nmod:poss(measurement, alphonse)
flat(alphonse, R.)
flat(alphonse, hoge)
case(alphonse, 's)
nsubj(suggest, measurement)
case(specimen, of)
amod(specimen, several)
advmod(young, very)
amod(specimen, young)
nmod(measurement, specimen)
case(Brazil, from)
nmod(specimen, Brazil)
root(ROOT, suggest)
mark(larger, that)
case(birth, at)
obl(larger, birth)
det(female, the)
nsubj(larger, female)
cop(larger, be)
advmod(larger, slightly)
ccomp(suggest, larger)
case(male, than)
det(male, the)
obl(larger, male)
punct(suggest, . )
nsubj(have, I)
root(ROOT, have)
advmod(little, surprisingly)
amod(information, little)
obj(have, information)
case(size, on)
det(size, the)
nmod(information, size)
cc(age, and)
conj(size, age)
case(maturity, at)
nmod(size, maturity)
punct(have, .)
nsubj(write, Carl)
flat(Carl, Kauffeld)
aux(write, have)
root(ROOT, write)
case(I, to)
obl(write, I)
case(activity, of)
amod(activity, sexual)
obl(write, activity)
case(February, in)
obl(write, February)
nummod(February, 1943)
case(bear, of)
amod(bear, young)
acl(February, bear)
case(March, in)
obl(write, March)
nummod(March, 1940)
punct(write, .)
nummod(female, one)
nsubj(gravid, female)
punct(female, ,)
acl(female, collect)
case(island, on)
det(island, a)
obl(collect, island)
case(coast, off)
det(coast, the)
nmod(island, coast)
case(Nicaragua, of)
nmod(coast, Nicaragua)
punct(gravid, ,)
cop(gravid, be)
root(ROOT, gravid)
cc(measure, and)
conj(gravid, measure)
nummod(foot, 4)
compound(inch, foot)
nummod(inch, 8)
obj(measure, inch)
case(snout, from)
obl(measure, snout)
mark(vent, to)
obl(measure, vent)
punct(6, ()
nmod:poss(tail, she)
nsubj(6, tail)
aux(6, should)
cop(6, be)
case(6, between)
parataxis(gravid, 6)
cc(long, and)
nummod(inch, 7)
obl:npmod(long, inch)
advmod(6, long)
punct(6, ))
punct(gravid, .)
det(female, the)
nsubj(long, female)
case(America, from)
compound(America, Central)
nmod(female, America)
nsubj(give, which)
acl:relcl(female, give)
obj(give, birth)
case(four, to)
obl(give, four)
cop(long, be)
advmod(foot, only)
nummod(foot, 3)
case(11, foot)
nummod(inch, 11)
obl:npmod(long, inch)
root(ROOT, long)
punct(long, .)
det(data, what)
nsubj(be, data)
expl(be, there)
aux(indicate, be)
case(growth, on)
obl(be, growth)
root(ROOT, indicate)
amod(variation, considerable)
obj(indicate, variation)
case(rate, in)
nmod(variation, rate)
punct(indicate, ;)
punct(indicate, ;)
advmod(keep, unfortunately)
punct(keep, ,)
det(one, no)
nsubj(keep, one)
aux(keep, have)
parataxis(indicate, keep)
amod(record, complete)
obj(keep, record)
case(individual, of)
nummod(individual, one)
nmod(record, individual)
punct(keep, ,)
mark(make, whereas)
nsubj:pass(make, many)
aux(make, have)
aux:pass(make, be)
advcl(keep, make)
case(period, for)
det(period, a)
advmod(short, very)
amod(period, short)
obl(make, period)
case(time, of)
nmod(period, time)
punct(indicate, .)
det(result, the)
nsubj(varied, result)
cop(varied, be)
advmod(varied, too)
root(ROOT, varied)
mark(allow, to)
advcl(varied, allow)
obj(allow, generalization)
punct(varied, .)
det(bronchus, the)
nsubj(maintain, bronchus)
cc(artery, and)
amod(artery, pulmonary)
conj(bronchus, artery)
case(type, in)
det(type, this)
compound(type, lung)
nmod(bronchus, type)
root(ROOT, maintain)
det(relationship, a)
amod(relationship, close)
obj(maintain, relationship)
advmod(maintain, throughout)
punct(maintain, .)
det(vein, the)
amod(vein, pulmonary)
nsubj(follow, vein)
punct(follow, ,)
advmod(follow, however)
punct(follow, ,)
case(septa, without)
det(septa, the)
amod(septa, limiting)
amod(septa, supportive)
compound(septa, tissue)
obl(follow, septa)
case(type, as)
case(type, in)
nmod(septa, type)
nummod(type, 1)
punct(follow, ,)
punct(follow, ,)
root(ROOT, follow)
det(path, a)
advmod(direct, more)
amod(path, direct)
obj(follow, path)
case(hilum, to)
det(hilum, the)
nmod(path, hilum)
cc(maintain, and)
aux(maintain, do)
advmod(maintain, not)
conj(follow, maintain)
det(relationship, this)
amod(relationship, close)
obj(maintain, relationship)
punct(fig, ()
appos(relationship, fig)
punct(fig, .)
nummod(fig, 8)
punct(fig, ,)
nummod(fig, 22)
punct(fig, ))
punct(note, .)
det(difference, another)
amod(difference, mark)
nsubj:pass(note, difference)
aux:pass(note, be)
parataxis(follow, note)
advmod(note, here)
punct(note, .)
det(artery, the)
amod(artery, pulmonary)
nsubj(continue, artery)
punct(continue, ,)
case(addition, in)
obl(continue, addition)
mark(supply, to)
acl(addition, supply)
det(portion, the)
amod(portion, distal)
obj(supply, portion)
case(bronchiole, of)
det(bronchiole, the)
amod(bronchiole, respiratory)
nmod(portion, bronchiole)
punct(duct, ,)
det(duct, the)
amod(duct, alveolar)
conj(bronchiole, duct)
punct(alveoli, ,)
cc(alveoli, and)
det(alveoli, the)
conj(bronchiole, alveoli)
punct(continue, ,)
root(ROOT, continue)
advmod(continue, on)
cc(supply, and)
advmod(supply, directly)
conj(continue, supply)
det(pleura, the)
amod(pleura, thin)
obj(supply, pleura)
punct(fig, ()
appos(pleura, fig)
punct(fig, .)
nummod(fig, 8)
punct(fig, ))
punct(pleura, .)
det(artery, the)
amod(artery, bronchial)
appos(pleura, artery)
punct(artery, ,)
case(number, except)
case(number, for)
det(number, a)
amod(number, small)
nmod(artery, number)
case(branch, of)
amod(branch, short)
nmod(number, branch)
case(hilum, in)
det(hilum, the)
nmod(branch, hilum)
punct(contribute, ,)
acl(number, contribute)
obj(contribute, none)
case(supply, of)
det(supply, the)
amod(supply, pleural)
compound(supply, blood)
nmod(none, supply)
punct(contribute, .)
nsubj(do, it)
root(ROOT, do)
punct(do, ,)
case(type, as)
case(type, in)
obl(do, type)
nummod(type, 1)
punct(supply, ,)
punct(supply, ,)
conj(do, supply)
det(node, the)
compound(node, hilar)
compound(node, lymph)
obj(supply, node)
punct(artery, ,)
det(artery, the)
amod(artery, pulmonary)
conj(node, artery)
punct(vein, ,)
det(vein, the)
amod(vein, pulmonary)
conj(node, vein)
punct(bronchi, ,)
det(bronchi, the)
conj(node, bronchi)
punct(bronchiole, ,)
cc(bronchiole, and)
det(bronchiole, the)
conj(node, bronchiole)
punct(bronchiole, --)
acl(bronchiole, terminate)
case(bed, in)
det(bed, a)
amod(bed, common)
amod(bed, capillary)
obl(terminate, bed)
case(artery, with)
det(artery, the)
amod(artery, pulmonary)
nmod(bed, artery)
case(level, at)
det(level, the)
obl(terminate, level)
case(bronchiole, of)
det(bronchiole, the)
amod(bronchiole, respiratory)
nmod(level, bronchiole)
punct(do, .)
det(anastomose, no)
amod(anastomose, bronchial)
compound(anastomose, artery)
punct(pulmonary, -)
amod(anastomose, pulmonary)
compound(anastomose, artery)
nsubj:pass(note, anastomose)
aux:pass(note, be)
root(ROOT, note)
case(group, in)
det(group, this)
obl(note, group)
punct(note, .)
compound(type, Lung)
nsubj(composite, type)
nummod(type, 3)
punct(fig., ()
punct(fig., ()
appos(type, fig.)
nummod(fig., 3)
punct(fig., ))
cop(composite, be)
case(degree, to)
det(degree, some)
obl(composite, degree)
det(composite, a)
parataxis(note, composite)
case(type, of)
nmod(composite, type)
nummod(type, 1)
punct(2, ,)
cc(2, and)
conj(type, 2)
punct(composite, .)
nsubj:pass(characterize, it)
aux:pass(characterize, be)
root(ROOT, characterize)
case(presence, by)
det(presence, the)
obl(characterize, presence)
case(lobule, of)
advmod(develop, incompletely)
amod(lobule, develop)
amod(lobule, secondary)
nmod(presence, lobule)
punct(lobule, ;)
punct(lobule, ;)
advmod(define, well)
amod(lobule, define)
punct(arrange, ,)
cc(arrange, but)
advmod(arrange, haphazardly)
conj(define, arrange)
punct(septa, ,)
amod(septa, interlobular)
obj(arrange, septa)
cc(pleura, and)
det(pleura, a)
amod(pleura, thick)
punct(pleura, ,)
advmod(vascular, remarkably)
amod(pleura, vascular)
conj(septa, pleura)
punct(fig, ()
appos(pleura, fig)
punct(fig, .)
nummod(fig, 9)
punct(9, ))
punct(9, .)
det(airways, the)
advmod(distal, most)
amod(airways, distal)
nsubj(similar, airways)
cop(similar, be)
parataxis(characterize, similar)
case(those, to)
obl(similar, those)
acl(those, find)
case(type, in)
obl(find, type)
nummod(type, 1)
punct(compose, ,)
punct(compose, ,)
aux:pass(compose, be)
advcl(find, compose)
case(bronchiole, of)
obl(compose, numerous)
punct(bronchiole, ,)
advmod(true, apparently)
amod(bronchiole, true)
amod(bronchiole, terminal)
obl(compose, bronchiole)
cc(bronchiole, and)
amod(bronchiole, occasional)
punct(bronchiole, ,)
advmod(develop, poorly)
amod(bronchiole, develop)
amod(bronchiole, respiratory)
conj(bronchiole, bronchiole)
punct(fig, ()
appos(bronchiole, fig)
punct(fig, .)
nummod(fig, 14)
punct(fig, ,)
nummod(fig, 15)
punct(fig, ))
punct(fig, .)
case(instance, in)
det(instance, this)
nmod(septation, instance)
punct(septation, ,)
case(septation, because)
fixed(because, of)
amod(septation, incomplete)
nmod(bronchiole, septation)
punct(constitute, ,)
det(lobule, the)
amod(lobule, secondary)
nsubj(constitute, lobule)
aux(constitute, do)
advmod(constitute, not)
acl:relcl(septation, constitute)
case(itself, in)
obl(constitute, itself)
nsubj(appear, what)
ccomp(constitute, appear)
mark(lung, to)
cop(lung, be)
det(lung, a)
amod(lung, small)
amod(lung, individual)
xcomp(appear, lung)
case(type, as)
case(type, in)
obl(lung, type)
nummod(type, 1)
punct(Air-drifts, .)
appos(lung, Air-drifts)
case(area, from)
nummod(area, one)
nmod(Air-drifts, area)
case(another, to)
nmod(area, another)
cop(conceivable, be)
punct(conceivable, ,)
advmod(conceivable, therefore)
punct(conceivable, ,)
parataxis(Air-drifts, conceivable)
punct(characterize, .)
advmod(situate, distally)
det(bronchus, the)
nsubj:pass(situate, bronchus)
aux:pass(situate, be)
root(ROOT, situate)
case(artery, between)
det(artery, a)
amod(artery, pulmonary)
obl(situate, artery)
case(side, on)
nummod(side, one)
nmod(artery, side)
cc(vein, and)
det(vein, a)
amod(vein, pulmonary)
conj(artery, vein)
case(other, on)
det(other, the)
nmod(vein, other)
punct(situate, ,)
case(type, as)
case(type, in)
obl(situate, type)
nummod(type, 1)
punct(fig., ()
punct(fig., ()
appos(type, fig.)
nummod(fig., 24)
punct(fig., ))
punct(maintain, .)
det(relationship, this)
nsubj:pass(maintain, relationship)
punct(maintain, ,)
advmod(maintain, however)
punct(maintain, ,)
aux:pass(maintain, be)
advmod(maintain, not)
conj(situate, maintain)
advmod(maintain, centrally)
punct(maintain, .)
advmod(note, here)
det(vein, the)
amod(vein, pulmonary)
nsubj:pass(note, vein)
punct(note, ,)
case(type, as)
case(type, in)
obl(note, type)
nummod(type, 2)
punct(note, ,)
punct(note, ,)
aux:pass(note, be)
root(ROOT, note)
mark(draw, to)
xcomp(note, draw)
advmod(draw, away)
case(bronchus, from)
det(bronchus, the)
obl(away, bronchus)
punct(follow, ,)
cc(follow, and)
mark(follow, to)
conj(draw, follow)
det(course, a)
advmod(direct, more)
amod(course, direct)
punct(course, ,)
amod(course, independent)
obj(follow, course)
case(hilum, to)
det(hilum, the)
nmod(course, hilum)
punct(fig, ()
appos(hilum, fig)
punct(fig, .)
nummod(fig, 23)
punct(fig, ,)
nummod(fig, 24)
punct(fig, ))
punct(note, .)
det(artery, the)
amod(artery, bronchial)
nsubj(differ, artery)
case(course, in)
nmod:poss(course, its)
nmod(artery, course)
cc(distribution, and)
conj(course, distribution)
conj(note, differ)
advmod(that, somewhat)
case(that, from)
obl(differ, that)
acl(that, find)
case(mammal, in)
amod(mammal, other)
obl(find, mammal)
punct(note, .)
mark(see, as)
advcl(supply, see)
case(type, in)
obl(see, type)
nummod(type, 1)
punct(2, ,)
cc(2, and)
conj(type, 2)
punct(supply, ,)
punct(supply, ,)
nsubj(supply, it)
root(ROOT, supply)
det(node, the)
amod(node, hilar)
compound(node, lymph)
obj(supply, node)
punct(vasorum, ,)
compound(vasorum, vasa)
conj(node, vasorum)
case(artery, to)
det(artery, the)
amod(artery, pulmonary)
obl(supply, artery)
cc(vein, and)
conj(artery, vein)
punct(bronchi, ,)
det(bronchi, the)
conj(artery, bronchi)
cc(bronchiole, and)
det(bronchiole, the)
amod(bronchiole, terminal)
conj(bronchi, bronchiole)
punct(supply, .)
case(type, as)
case(type, in)
obl(provide, type)
nummod(type, 1)
punct(provide, ,)
punct(provide, ,)
nsubj(provide, it)
root(ROOT, provide)
amod(blood, arterial)
obj(provide, blood)
case(septa, to)
det(septa, the)
amod(septa, interlobular)
obl(provide, septa)
punct(see, ,)
cc(see, and)
det(supply, a)
advmod(rich, extremely)
amod(supply, rich)
amod(supply, anastomotic)
amod(supply, pleural)
nsubj:pass(see, supply)
aux:pass(see, be)
conj(provide, see)
punct(fig, ()
appos(see, fig)
punct(fig, .)
nummod(fig, 9)
punct(fig, ,)
nummod(fig, 10)
punct(10, ))
punct(derive, .)
det(supply, this)
amod(supply, pleural)
nsubj:pass(derive, supply)
aux:pass(derive, be)
parataxis(provide, derive)
cc:preconj(hilar, both)
case(hilar, from)
obl(derive, hilar)
cc(branch, and)
conj(hilar, interlobular)
amod(branch, bronchial)
compound(branch, artery)
conj(hilar, branch)
punct(derive, .)
det:predet(derivation, such)
det(derivation, a)
amod(derivation, dual)
nsubj:pass(demonstrate, derivation)
aux:pass(demonstrate, be)
advmod(demonstrate, strikingly)
root(ROOT, demonstrate)
case(process, during)
det(process, the)
compound(process, injection)
obl(demonstrate, process)
advmod(note, where)
amod(fill, initial)
nsubj:pass(note, fill)
aux(note, would)
aux:pass(note, be)
acl:relcl(process, note)
mark(occur, to)
xcomp(note, occur)
case(vessel, in)
amod(vessel, several)
amod(vessel, isolate)
amod(vessel, pleural)
obl(occur, vessel)
case(once, at)
obl(occur, once)
punct(demonstrate, .)
nsubj(fill, some)
case(these, of)
nmod(some, these)
aux(fill, be)
advmod(fill, obviously)
root(ROOT, fill)
case(branch, from)
amod(branch, interlobular)
obl(fill, branch)
case(artery, of)
det(artery, the)
amod(artery, bronchial)
nmod(branch, artery)
mark(fill, while)
nsubj(fill, other)
aux(fill, be)
advcl(fill, fill)
case(branch, from)
amod(branch, direct)
compound(branch, hilar)
obl(fill, branch)
case(surface, follow)
case(surface, along)
det(surface, the)
amod(surface, pleural)
obl(fill, surface)
punct(fill, .)
case(completion, with)
obl(note, completion)
case(fill, of)
nmod(completion, fill)
punct(note, ,)
obl:npmod(like, net)
punct(like, -)
amod(anastomose, like)
nsubj:pass(note, anastomose)
aux:pass(note, be)
root(ROOT, note)
mark(present, to)
cop(present, be)
xcomp(note, present)
case(branch, between)
det(branch, these)
advmod(derive, separately)
amod(branch, derive)
obl(present, branch)
punct(note, .)
det(increase, a)
amod(increase, unusual)
nsubj:pass(note, increase)
case(number, in)
det(number, the)
nmod(increase, number)
case(artery, of)
amod(artery, bronchial)
nmod(number, artery)
amod(artery, present)
case(substance, within)
det(substance, the)
obl(present, substance)
case(lung, of)
det(lung, the)
nmod(substance, lung)
aux:pass(note, be)
root(ROOT, note)
punct(note, .)
nsubj:pass(account, this)
aux:pass(account, be)
root(ROOT, account)
case(primarily, for)
advmod(account, primarily)
case(presence, by)
det(presence, the)
obl(account, presence)
case(artery, of)
det(artery, a)
amod(artery, bronchial)
nmod(presence, artery)
advmod(account, closely)
case(artery, follow)
det(artery, the)
amod(artery, pulmonary)
nmod(artery, artery)
punct(account, .)
det(diameter, the)
nsubj(large, diameter)
case(artery, of)
det(artery, this)
amod(artery, bronchial)
nmod(diameter, artery)
cop(large, be)
advmod(large, much)
advmod(large, too)
root(ROOT, large)
case(it, for)
obl(large, it)
mark(vasorum, to)
cop(vasorum, be)
det(vasorum, a)
amod(vasorum, mere)
compound(vasorum, vasa)
xcomp(large, vasorum)
punct(fig, ()
appos(vasorum, fig)
punct(fig, .)
nummod(fig, 16)
punct(fig, ,)
nummod(fig, 23)
punct(fig, ,)
nmod:tmod(fig, 24)
punct(fig, ))
punct(large, .)
case(region, in)
amod(region, distal)
obl(fourth, region)
nmod:poss(diameter, its)
nsubj(fourth, diameter)
aux(fourth, would)
cop(fourth, be)
nummod(fourth, one)
punct(fourth, -)
root(ROOT, fourth)
case(that, to)
nummod(fifth, one)
punct(fifth, -)
amod(that, fifth)
nmod(fourth, that)
case(artery, of)
det(artery, the)
amod(artery, pulmonary)
nmod(that, artery)
punct(fourth, .)
det(vessel, this)
nsubj:pass(follow, vessel)
aux(follow, could)
aux:pass(follow, be)
root(ROOT, follow)
case(parenchyma, to)
det(parenchyma, the)
obl(follow, parenchyma)
advmod(provide, where)
nsubj(provide, it)
advmod(provide, directly)
acl:relcl(parenchyma, provide)
amod(blood, bronchial)
amod(blood, arterial)
obj(provide, blood)
case(bed, to)
det(bed, the)
amod(bed, alveolar)
amod(bed, capillary)
obl(provide, bed)
punct(fig, ()
appos(bed, fig)
punct(fig, .)
nummod(fig, 17)
punct(18, ,)
nummod(fig, 18)
punct(fig, ))
punct(follow, .)
advmod(note, also)
nummod(pathways, three)
amod(pathways, other)
amod(pathways, direct)
nsubj:pass(note, pathways)
case(supply, of)
amod(supply, alveolar)
amod(supply, bronchial)
amod(supply, arterial)
nmod(pathways, supply)
aux:pass(note, be)
parataxis(follow, note)
punct(note, :)
case(pleura, via)
det(pleura, the)
obl(note, pleura)
punct(note, ;)
punct(note, ;)
case(septa, through)
det(septa, the)
amod(septa, interlobular)
nmod(pleura, septa)
punct(septa, ;)
punct(pleura, ;)
cc(bronchiole, and)
case(bronchiole, along)
det(bronchiole, the)
amod(bronchiole, terminal)
obl(note, bronchiole)
punct(fig, ()
appos(bronchiole, fig)
punct(fig, .)
nummod(fig, 14)
punct(fig, ,)
nummod(fig, 17)
punct(18, ,)
nummod(fig, 18)
punct(18, ,)
nummod(18, 19)
punct(18, ))
punct(note, .)
nummod(anastomosis, one)
amod(anastomosis, bronchial)
compound(pulmonary, arteriolar)
punct(pulmonary, -)
amod(arteriolar, pulmonary)
compound(anastomosis, arteriolar)
nsubj:pass(note, anastomosis)
aux:pass(note, be)
conj(follow, note)
case(level, at)
det(level, the)
amod(level, terminal)
compound(level, bronchiolar)
obl(note, level)
punct(fig., ()
appos(level, fig.)
nummod(fig., 26)
punct(fig., ))
punct(discussion, .)
appos(level, discussion)
expl(evident, it)
cop(evident, be)
root(ROOT, evident)
mark(exist, that)
amod(difference, many)
amod(difference, mark)
cc(strike, and)
conj(mark, strike)
nsubj(exist, difference)
ccomp(evident, exist)
case(lung, between)
obl(exist, lung)
mark(make, when)
det(comparison, a)
amod(comparison, inter-specy)
nsubj:pass(make, comparison)
aux:pass(make, be)
advcl(exist, make)
punct(evident, .)
det(significance, the)
nsubj:pass(study, significance)
case(difference, of)
det(difference, these)
nmod(significance, difference)
aux(study, have)
advmod(study, not)
aux:pass(study, be)
root(ROOT, study)
cc(have, nor)
conj(study, have)
det(existence, the)
obj(have, existence)
mark(corresponding, of)
acl(existence, corresponding)
amod(difference, physiologic)
obj(corresponding, difference)
aux:pass(determine, be)
xcomp(corresponding, determine)
punct(study, .)
advmod(different, however)
punct(different, ,)
det(dynamics, the)
nsubj(different, dynamics)
case(airflow, of)
nmod(dynamics, airflow)
punct(dynamics, ,)
case(consideration, from)
amod(consideration, morphologic)
nmod(dynamics, consideration)
advmod(consideration, alone)
punct(different, ,)
aux(different, may)
advmod(different, conceivably)
cop(different, be)
root(ROOT, different)
case(monkey, in)
det(monkey, the)
obl(different, monkey)
case(horse, than)
case(horse, in)
det(horse, the)
obl(different, horse)
punct(different, .)
det(volume, the)
nsubj(different, volume)
cc(characteristic, and)
punct(different, ,)
advmod(different, perhaps)
punct(different, ,)
advmod(characteristic, even)
det(characteristic, the)
conj(volume, characteristic)
case(flow, of)
amod(flow, bronchial)
amod(flow, arterial)
compound(flow, blood)
nmod(characteristic, flow)
aux(different, might)
cop(different, be)
root(ROOT, different)
case(dog, in)
det(dog, the)
obl(different, dog)
case(horse, than)
case(horse, in)
det(horse, the)
obl(different, horse)
punct(different, .)
advmod(nonexistent, also)
punct(nonexistent, ,)
amod(drift, interlobular)
compound(drift, air)
nsubj(nonexistent, drift)
aux(nonexistent, may)
cop(nonexistent, be)
advmod(nonexistent, all)
cc(nonexistent, but)
root(ROOT, nonexistent)
case(cow, in)
det(cow, the)
obl(nonexistent, cow)
punct(nonexistent, ;)
punct(nonexistent, ;)
advmod(occur, probably)
parataxis(nonexistent, occur)
case(horse, in)
det(horse, the)
obl(occur, horse)
advmod(occur, much)
case(being, as)
case(being, in)
det(being, the)
amod(being, human)
obl(occur, being)
punct(occur, ;)
punct(present, ;)
cc(present, and)
punct(present, ,)
case(contrast, in)
obl(present, contrast)
punct(present, ,)
cop(present, be)
conj(occur, present)
case(degree, to)
det(degree, a)
advmod(immense, relatively)
amod(degree, immense)
obl(present, degree)
case(basis, on)
det(basis, a)
amod(basis, segmental)
nmod(degree, basis)
case(dog, in)
det(dog, the)
nmod(basis, dog)
advmod(absent, where)
nsubj(absent, lobule)
cop(absent, be)
acl:relcl(basis, absent)
punct(Van, ()
parataxis(absent, Van)
flat(Van, Allen)
cc(Lindskog, and)
conj(Van, Lindskog)
punct(Van, ,)
punct(Van, ')
nmod:tmod(Van, 31)
punct(Van, ))
punct(Van, . )
det(reason, a)
nsubj(lack, reason)
case(variation, for)
amod(variation, such)
amod(variation, wide)
nmod(reason, variation)
case(morphology, in)
det(morphology, the)
amod(morphology, pulmonary)
nmod(variation, morphology)
cop(lack, be)
advmod(lack, entirely)
root(ROOT, lack)
case(present, at)
obl(lack, present)
punct(lack, .)
case(limit, within)
amod(limit, certain)
amod(limit, wide)
obl(dictate, limit)
nsubj(dictate, anatomy)
root(ROOT, dictate)
obj(dictate, function)
cc(include, and)
punct(dictate, ,)
mark(permit, if)
nsubj:pass(permit, one)
aux:pass(permit, be)
advcl(include, permit)
mark(speculate, to)
xcomp(permit, speculate)
punct(include, ,)
amod(pathology, potential)
nsubj:pass(include, pathology)
aux(include, should)
aux:pass(include, be)
parataxis(dictate, include)
case(statement, in)
det(statement, this)
obl(include, statement)
advmod(include, as)
fixed(as, well)
punct(include, .)
case(example, for)
obl(related, example)
punct(related, ,)
det(susceptibility, the)
amod(susceptibility, mark)
nsubj(related, susceptibility)
case(monkey, of)
det(monkey, the)
nmod(susceptibility, monkey)
case(infection, to)
amod(infection, respiratory)
nmod(monkey, infection)
aux(related, might)
cop(related, be)
conj(include, related)
case(duct, to)
nmod:poss(duct, its)
amod(duct, delicate)
punct(duct, ,)
amod(duct, long)
amod(duct, alveolar)
obl(related, duct)
cc(bronchiole, and)
amod(bronchiole, short)
punct(bronchiole, ,)
amod(bronchiole, large)
conj(duct, bronchiole)
acl(bronchiole, situate)
case(parenchyma, within)
det(parenchyma, a)
obl(situate, parenchyma)
advmod(lack, entirely)
acl(parenchyma, lack)
case(barrier, in)
amod(barrier, protective)
amod(barrier, supportive)
compound(barrier, tissue)
obl(lack, barrier)
case(those, such)
fixed(such, as)
nmod(barrier, those)
acl(those, find)
case(type, in)
obl(find, type)
nummod(type, 1)
punct(3, ,)
cc(3, and)
conj(type, 3)
punct(dictate, .)
nsubj(wonder, one)
aux(wonder, might)
advmod(wonder, also)
root(ROOT, wonder)
mark(capable, if)
nsubj(capable, monkey)
cop(capable, be)
advcl(wonder, capable)
mark(develop, of)
advcl(capable, develop)
obj(develop, bronchiolitis)
mark(know, as)
nsubj(know, we)
advcl(develop, know)
obj(know, it)
case(man, in)
obl(know, man)
cc(horse, or)
det(horse, the)
conj(man, horse)
punct(wonder, .)
case(addition, in)
obl(difficult, addition)
punct(difficult, ,)
expl(difficult, it)
aux(difficult, would)
cop(difficult, be)
root(ROOT, difficult)
mark(imagine, to)
csubj(difficult, imagine)
obj(imagine, chronic)
amod(emphysema, generalize)
obj(imagine, emphysema)
acl(emphysema, occur)
case(cow, in)
det(cow, a)
obl(occur, cow)
punct(consider, ,)
conj(occur, consider)
nmod:poss(development, its)
amod(development, mark)
amod(development, lobular)
obj(consider, development)
cc(difficult, but)
punct(difficult, ,)
advmod(difficult, conversely)
punct(difficult, ,)
advmod(difficult, not)
conj(consider, difficult)
mark(imagine, to)
advcl(difficult, imagine)
obj(imagine, this)
xcomp(imagine, occur)
case(horse, in)
det(horse, the)
obl(occur, horse)
cc(dog, or)
det(dog, the)
conj(horse, dog)
punct(appear, .)
advmod(appear, anatomically)
punct(appear, ,)
det(lung, the)
compound(lung, horse)
nsubj(appear, lung)
parataxis(difficult, appear)
mark(that, to)
cop(that, be)
advmod(that, remarkably)
case(that, like)
xcomp(appear, that)
case(man, of)
nmod(that, man)
punct(appear, ,)
advmod(ascertain, insofar)
mark(ascertain, as)
nsubj:pass(ascertain, this)
aux(ascertain, can)
aux:pass(ascertain, be)
advcl(that, ascertain)
case(comparison, from)
obl(ascertain, comparison)
case(finding, of)
nmod:poss(finding, we)
nmod(comparison, finding)
case(horse, in)
det(horse, the)
nmod(finding, horse)
case(those, with)
nmod(finding, those)
case(other, of)
nmod(those, other)
punct(Birnbaum, ()
appos(those, Birnbaum)
punct(Birnbaum, ,)
punct(Birnbaum, ')
appos(Birnbaum, 54)
punct(Birnbaum, ))
case(being, in)
det(being, the)
amod(being, human)
nmod(those, being)
punct(difficult, .)
det(area, the)
amod(area, only)
nsubj(be, area)
case(which, in)
obl(find, which)
nsubj(find, one)
aux(find, might)
acl:relcl(area, find)
amod(disagreement, major)
obj(find, disagreement)
case(matter, in)
det(matter, this)
nmod(disagreement, matter)
root(ROOT, be)
case(regard, in)
obl(be, regard)
case(distribution, to)
det(distribution, the)
amod(distribution, alveolar)
nmod(regard, distribution)
case(artery, of)
det(artery, the)
amod(artery, bronchial)
nmod(distribution, artery)
punct(be, .)
advmod(early, as)
advmod(claim, early)
case(1858, as)
obl(early, 1858)
punct(claim, ,)
compound(Fort, Le)
nsubj(claim, Fort)
root(ROOT, claim)
det(distribution, a)
amod(distribution, alveolar)
obj(claim, distribution)
case(artery, of)
det(artery, the)
amod(artery, bronchial)
nmod(distribution, artery)
case(being, in)
amod(being, human)
nmod(artery, being)
punct(claim, .)
case(1951, in)
obl(reaffirm, 1951)
punct(reaffirm, ,)
nsubj:pass(reaffirm, this)
aux:pass(reaffirm, be)
root(ROOT, reaffirm)
case(cudkowicz, by)
obl(reaffirm, cudkowicz)
punct(reaffirm, .)
det(opposition, the)
nsubj(have, opposition)
case(point, to)
det(point, this)
nmod(opposition, point)
case(view, of)
nmod(point, view)
root(ROOT, have)
nmod:poss(support, its)
amod(support, staunchest)
obj(have, support)
case(work, in)
det(work, the)
nmod(support, work)
case(Miller, of)
nmod(work, Miller)
punct('50, ()
appos(Miller, '50)
punct('50, ))
punct(have, .)
advmod(rely, apparently)
punct(rely, ,)
advmod(rely, however)
punct(rely, ,)
nsubj(rely, Miller)
aux(rely, have)
root(ROOT, rely)
advmod(rely, heavily)
case(anatomy, on)
det(anatomy, the)
obl(rely, anatomy)
case(dog, in)
nmod(anatomy, dog)
cc(cat, and)
conj(dog, cat)
punct(criticize, ,)
cc(criticize, and)
nsubj:pass(criticize, he)
aux(criticize, have)
aux:pass(criticize, be)
conj(rely, criticize)
mark(use, for)
advcl(criticize, use)
amod(material, pathologic)
amod(material, human)
obj(use, material)
case(study, in)
nmod:poss(study, he)
amod(study, normal)
obl(use, study)
punct(Loosli, ()
appos(study, Loosli)
punct(Loosli, ,)
appos(Loosli, '38)
punct(Loosli, ))
punct(rely, .)
mark(note, although)
nsubj(note, Miller)
advcl(find, note)
case(1907, in)
obl(note, 1907)
mark(exist, that)
det(difference, a)
nsubj(exist, difference)
case(supply, in)
det(supply, the)
amod(supply, pleural)
compound(supply, blood)
nmod(difference, supply)
ccomp(note, exist)
case(animal, between)
obl(exist, animal)
punct(exist, ,)
advmod(exist, nowhere)
case(work, in)
nmod:poss(work, he)
amod(work, publish)
obl(exist, work)
aux(find, be)
nsubj(find, it)
root(ROOT, find)
mark(do, that)
nsubj(do, he)
ccomp(find, do)
det(study, a)
amod(study, comparative)
obj(do, study)
case(feature, of)
det(feature, the)
amod(feature, intrapulmonary)
nmod(study, feature)
case(lung, of)
amod(lung, various)
amod(lung, mammalian)
nmod(feature, lung)
amod(lung, other)
case(dog, than)
case(dog, in)
det(dog, the)
obl(other, dog)
cc(cat, and)
conj(dog, cat)
punct(Miller, ()
appos(dog, Miller)
punct(Miller, ,)
punct(Miller, ')
appos(Miller, 13)
punct(Miller, ;)
punct('25, ;)
appos(Miller, '25)
punct(Miller, ))
punct(find, .)
det(meaning, the)
nsubj(clear, meaning)
case(variation, of)
det(variation, this)
nmod(meaning, variation)
case(distribution, in)
nmod(meaning, distribution)
case(artery, of)
det(artery, the)
amod(artery, bronchial)
nmod(distribution, artery)
mark(find, as)
acl(distribution, find)
case(horse, in)
det(horse, the)
obl(find, horse)
cop(clear, be)
advmod(clear, not)
root(ROOT, clear)
punct(clear, .)
advmod(know, however)
punct(know, ,)
det(artery, this)
nsubj:pass(know, artery)
aux:pass(know, be)
root(ROOT, know)
mark(vessel, to)
cop(vessel, be)
det(vessel, a)
compound(vessel, nutrient)
xcomp(know, vessel)
case(distribution, with)
det(distribution, a)
nmod(vessel, distribution)
advmod(distribution, primarily)
case(airways, to)
det(airways, the)
amod(airways, proximal)
nmod(distribution, airways)
cc(tissue, and)
amod(tissue, supportive)
conj(airways, tissue)
case(lung, of)
det(lung, the)
nmod(tissue, lung)
punct(know, .)
det(alveoli, the)
nsubj(diffusing, alveoli)
cc(bronchiole, and)
amod(bronchiole, respiratory)
conj(alveoli, bronchiole)
aux(diffusing, be)
advmod(diffusing, primarily)
root(ROOT, diffusing)
obj(diffusing, tissue)
punct(diffusing, .)
advmod(capable, theoretically)
punct(diffusing, ,)
nsubj(capable, they)
cop(capable, be)
parataxis(diffusing, capable)
mark(extract, of)
advcl(capable, extract)
nmod:poss(oxygen, they)
amod(oxygen, require)
obj(extract, oxygen)
cc:preconj(air, either)
case(air, from)
det(air, the)
amod(air, surround)
obl(extract, air)
punct(Ghoreyeb, ()
appos(air, Ghoreyeb)
cc(Karsner, and)
conj(Ghoreyeb, Karsner)
punct('13, ,)
conj(Ghoreyeb, '13)
punct('13, ))
cc(blood, or)
case(blood, from)
amod(blood, pulmonary)
amod(blood, arterial)
conj(air, blood)
punct(Comroe, ()
appos(blood, Comroe)
punct(Comroe, ,)
punct(Comroe, ')
appos(Comroe, 58)
punct(Comroe, ))
punct(diffusing, .)
advmod(requirement, therefore)
punct(requirement, ,)
det(explanation, a)
nsubj(requirement, explanation)
case(supply, of)
det(supply, this)
amod(supply, alveolar)
amod(supply, bronchial)
compound(supply, artery)
nmod(explanation, supply)
aux(requirement, might)
cop(requirement, be)
det(requirement, the)
amod(requirement, nutritive)
root(ROOT, requirement)
case(amount, of)
det(amount, a)
amod(amount, increase)
nmod(requirement, amount)
case(tissue, of)
amod(tissue, supportive)
nmod(amount, tissue)
punct(diffusing, ,)
advmod(primarily, not)
advmod(diffusing, primarily)
acl(amount, diffusing)
case(nature, in)
obl(diffusing, nature)
punct(diffusing, ,)
case(region, in)
det(region, the)
obl(diffusing, region)
case(alveolus, of)
det(alveolus, the)
nmod(region, alveolus)
punct(requirement, .)
mark(true, if)
nsubj(true, this)
cop(true, be)
advcl(exist, true)
punct(exist, ,)
det(possibility, the)
nsubj(exist, possibility)
root(ROOT, exist)
mark(cause, that)
det(lesion, a)
amod(lesion, occlusive)
nsubj(cause, lesion)
case(artery, of)
det(artery, the)
amod(artery, bronchial)
nmod(lesion, artery)
aux(cause, might)
ccomp(exist, cause)
amod(degeneration, widespread)
obj(cause, degeneration)
case(tissue, of)
amod(tissue, supportive)
nmod(degeneration, tissue)
amod(tissue, similar)
case(that, to)
obl(similar, that)
advcl(similar, see)
case(emphysema, in)
amod(emphysema, generalize)
obl(see, emphysema)
punct(exist, .)
nsubj(expect, one)
aux(expect, would)
advmod(expect, not)
root(ROOT, expect)
det:predet(event, such)
det(event, a)
obj(expect, event)
mark(occur, to)
acl(event, occur)
case(animal, in)
obl(occur, animal)
advcl(occur, possess)
obj(possess, lung)
case(type, of)
nmod(lung, type)
nummod(type, 1)
punct(note, ,)
cc(note, or)
nummod(note, 2)
punct(2, .)
det(presence, the)
nsubj:pass(note, presence)
mark(occur, of)
advmod(occur, normally)
acl(presence, occur)
amod(anastomose, bronchial)
obl:npmod(pulmonary, artery)
punct(pulmonary, -)
amod(anastomose, pulmonary)
compound(anastomose, artery)
obj(occur, anastomose)
aux:pass(note, be)
advmod(note, first)
conj(expect, note)
case(1721, in)
obl(note, 1721)
case(Ruysch, by)
obl(note, Ruysch)
punct(thereafter, ,)
cc(thereafter, and)
advmod(other, thereafter)
case(other, by)
amod(other, many)
obl(note, other)
punct(expect, .)
nsubj(claim, Nakamura)
punct('58, ()
appos(Nakamura, '58)
punct('58, ))
punct(Verloop, ,)
conj(Nakamura, Verloop)
punct('48, ()
amod(Verloop, '48)
punct('48, ))
punct(Marchand, ,)
conj(Nakamura, Marchand)
punct(Gilroy, ,)
conj(Marchand, Gilroy)
cc(Watson, and)
conj(Nakamura, Watson)
punct('50, ()
appos(Watson, '50)
punct('50, ))
punct(Von, ,)
conj(Nakamura, Von)
flat(Von, Hayek)
punct('53, ()
appos(Von, '53)
punct('53, ))
punct(Tobin, ,)
cc(Tobin, and)
conj(Von, Tobin)
punct('52, ()
appos(Tobin, '52)
punct('52, ))
aux(claim, have)
advmod(claim, all)
root(ROOT, claim)
nmod:poss(existence, they)
amod(existence, normal)
cc(nonfunctional, but)
advmod(nonfunctional, relatively)
conj(normal, nonfunctional)
obj(claim, existence)
case(human, in)
det(human, the)
amod(Miller, human)
cop(Miller, be)
punct(Miller, .)
nmod(existence, Miller)
punct('50, ()
appos(Miller, '50)
punct('50, ))
cop(antagonist, be)
det(antagonist, the)
amod(antagonist, principal)
ccomp(claim, antagonist)
case(viewpoint, of)
det(viewpoint, this)
nmod(antagonist, viewpoint)
punct(claim, .)
case(criticism, in)
obl(base, criticism)
case(view, of)
det(latter, the)
nmod:poss(view, latter)
case(latter, 's)
nmod(criticism, view)
punct(base, ,)
nmod:poss(conclusion, he)
nsubj:pass(base, conclusion)
aux:pass(base, be)
root(ROOT, base)
case(study, upon)
compound(injection, dog)
compound(injection, lung)
compound(study, injection)
obl(base, study)
case(which, in)
obl(fill, which)
nsubj:pass(fill, all)
case(channel, of)
det(channel, the)
amod(channel, vascular)
nmod(all, channel)
aux:pass(fill, be)
advmod(fill, first)
acl:relcl(study, fill)
case(solution, with)
det(solution, a)
obl(fill, solution)
case(pressure, under)
nmod(solution, pressure)
cc(inject, and)
advmod(inject, then)
aux:pass(inject, be)
conj(fill, inject)
case(particle, with)
amod(particle, various)
amod(particle, size)
amod(particle, color)
obl(inject, particle)
acl(particle, design)
mark(stop, to)
xcomp(design, stop)
case(level, at)
det(level, the)
amod(level, arteriolar)
obl(stop, level)
punct(base, .)
advmod(early, as)
advmod(demonstrate, early)
mark(demonstrate, as)
nsubj(demonstrate, 1913)
nsubj(demonstrate, Ghoreyeb)
cc(Karsner, and)
conj(Ghoreyeb, Karsner)
root(ROOT, demonstrate)
case(study, with)
amod(study, perfusion)
obl(demonstrate, study)
case(dog, in)
nmod(study, dog)
mark(remain, that)
amod(flow, bronchial)
compound(flow, artery)
nsubj(remain, flow)
aux(remain, would)
ccomp(demonstrate, remain)
xcomp(remain, constant)
case(level, at)
det(level, a)
amod(level, certain)
amod(level, low)
obl(constant, level)
mark(maintain, when)
nsubj:pass(maintain, pressure)
aux:pass(maintain, be)
advcl(constant, maintain)
case(artery, in)
det(artery, the)
amod(artery, pulmonary)
obl(maintain, artery)
cc(vein, and)
conj(artery, vein)
punct(occur, ,)
cc(occur, but)
mark(increase, that)
advcl(occur, increase)
case(flow, in)
amod(flow, bronchial)
compound(flow, artery)
obl(increase, flow)
aux(occur, would)
conj(maintain, occur)
case(response, in)
obl(occur, response)
case(drop, to)
det(drop, a)
amod(drop, relative)
nmod(response, drop)
case(pressure, in)
amod(pressure, pulmonary)
compound(pressure, artery)
nmod(drop, pressure)
punct(occur, .)
nsubj(reaffirm, Berry)
punct(Brailsford, ,)
conj(Berry, Brailsford)
cc(Daly, and)
conj(Berry, Daly)
case(1931, in)
nmod(Berry, 1931)
cc(Nakamura, and)
conj(1931, Nakamura)
case(1958, in)
nmod(1931, 1958)
root(ROOT, reaffirm)
obj(reaffirm, this)
punct(reaffirm, .)
nmod:poss(study, we)
amod(study, own)
nsubj:pass(accomplish, study)
case(which, in)
obl(demonstrate, which)
amod(anastomose, bronchial)
obl:npmod(pulmonary, artery)
punct(pulmonary, -)
amod(anastomose, pulmonary)
compound(anastomose, artery)
nsubj:pass(demonstrate, anastomose)
aux:pass(demonstrate, be)
acl:relcl(study, demonstrate)
punct(accomplish, ,)
aux:pass(accomplish, be)
root(ROOT, accomplish)
mark(inject, by)
advcl(accomplish, inject)
det(artery, the)
amod(artery, bronchial)
obj(inject, artery)
advmod(inject, first)
case(pressure, with)
det(pressure, no)
obl(inject, pressure)
case(artery, on)
det(artery, the)
amod(artery, pulmonary)
nmod(pressure, artery)
cc(vein, or)
conj(artery, vein)
punct(inject, ,)
cc(inject, and)
advmod(inject, then)
mark(inject, by)
conj(inject, inject)
det(artery, the)
amod(artery, pulmonary)
obj(inject, artery)
cc(vein, and)
conj(artery, vein)
advmod(inject, afterwards)
punct(accomplish, .)
nsubj(possible, it)
cop(possible, be)
advmod(possible, distinctly)
root(ROOT, possible)
punct(possible, ,)
advmod(render, therefore)
punct(possible, ,)
mark(render, that)
amod(pressure, simultaneous)
nsubj(render, pressure)
case(vessel, in)
det(vessel, all)
nummod(vessel, three)
nmod(pressure, vessel)
aux(render, would)
aux(render, have)
csubj(possible, render)
det(shunt, the)
obj(render, shunt)
xcomp(render, inoperable)
cc(uninjectable, and)
advmod(uninjectable, hence)
punct(uninjectable, ,)
conj(render, uninjectable)
punct(possible, .)
det(viewpoint, this)
nsubj:pass(support, viewpoint)
aux:pass(support, be)
advmod(support, further)
root(ROOT, support)
case(demonstration, by)
nmod:poss(demonstration, Verloop)
case(Verloop, 's)
punct('48, ()
compound(demonstration, '48)
punct('48, ))
obl(support, demonstration)
case(artery, of)
amod(artery, thicken)
amod(artery, bronchial)
nmod(demonstration, artery)
cc(coat, and)
amod(coat, arteriolar)
amod(coat, muscular)
conj(artery, coat)
nsubj(capable, which)
cop(capable, be)
acl:relcl(coat, capable)
mark(act, of)
advcl(capable, act)
case(valve, as)
obl(act, valve)
punct(support, .)
case(word, in)
amod(word, other)
obl(consider, word)
punct(consider, ,)
det(anastomose, the)
nsubj:pass(consider, anastomose)
case(artery, between)
det(artery, the)
amod(artery, bronchial)
nmod(anastomose, artery)
cc(artery, and)
amod(artery, pulmonary)
conj(artery, artery)
aux(consider, should)
aux:pass(consider, be)
root(ROOT, consider)
case(shunt, as)
amod(shunt, functional)
cc(demand, or)
conj(functional, demand)
obl(consider, shunt)
punct(consider, .)
case(addition, in)
obl(do, addition)
punct(do, ,)
amod(work, little)
nsubj:pass(do, work)
aux(do, have)
aux:pass(do, be)
root(ROOT, do)
case(basis, on)
det(basis, a)
amod(basis, comparative)
obl(do, basis)
case(regard, in)
nmod(basis, regard)
case(existence, to)
det(existence, the)
amod(existence, normal)
nmod(regard, existence)
case(anastomose, of)
amod(anastomose, bronchial)
compound(pulmonary, artery)
punct(pulmonary, -)
amod(anastomose, pulmonary)
compound(anastomose, artery)
nmod(existence, anastomose)
punct(do, .)
nsubj(find, Verloop)
punct('48, ()
appos(Verloop, '48)
punct('48, ;)
punct('48, ;)
nummod('48, '49)
punct('49, ))
root(ROOT, find)
det(shunt, these)
obj(find, shunt)
case(human, in)
det(human, the)
amod(be, human)
cop(unable, be)
cc(unable, but)
cop(unable, be)
conj(find, unable)
mark(find, to)
xcomp(unable, find)
obj(find, they)
case(rat, in)
obl(find, rat)
punct(find, .)
nsubj(unable, Ellis)
punct(Ellis, ,)
conj(Ellis, Grindlay)
cc(Edwards, and)
conj(Ellis, Edwards)
punct('52, ()
appos(Edwards, '52)
punct('52, ))
advmod(unable, also)
cop(unable, be)
root(ROOT, unable)
mark(find, to)
xcomp(unable, find)
obj(find, they)
case(rat, in)
obl(find, rat)
punct(unable, .)
nsubj(unable, Nakamura)
punct('58, ()
appos(Nakamura, '58)
punct('58, ))
cop(unable, be)
root(ROOT, unable)
mark(demonstrate, to)
xcomp(unable, demonstrate)
nmod:poss(existence, they)
obj(demonstrate, existence)
punct(existence, ,)
cc:preconj(method, either)
case(method, by)
amod(method, anatomic)
cc(physiologic, or)
conj(anatomic, physiologic)
obl(demonstrate, method)
punct(demonstrate, ,)
case(dog, in)
obl(demonstrate, dog)
punct(unable, .)
det(possibility, the)
root(ROOT, possibility)
mark(species, that)
det(absence, the)
nsubj(species, absence)
cc(presence, or)
conj(absence, presence)
case(shunt, of)
det(shunt, these)
nmod(absence, shunt)
cop(species, be)
acl(possibility, species)
punct(species, -)
nsubj(infer, dependent)
cop(infer, be)
advmod(infer, therefore)
appos(possibility, infer)
punct(possibility, .)
advmod(deny, certainly)
punct(deny, ,)
det(fact, the)
amod(fact, mere)
nsubj(deny, fact)
mark(fail, of)
acl(fact, fail)
mark(demonstrate, to)
xcomp(fail, demonstrate)
obj(demonstrate, they)
case(one, in)
obl(demonstrate, one)
cc(species, or)
det(species, another)
conj(one, species)
aux(deny, do)
advmod(deny, not)
advmod(deny, conclusively)
root(ROOT, deny)
nmod:poss(existence, they)
obj(deny, existence)
case(species, in)
det(species, that)
obl(deny, species)
punct(deny, .)
nsubj(suggestive, it)
cop(suggestive, be)
punct(suggestive, ,)
advmod(suggestive, however)
punct(suggestive, ,)
advmod(suggestive, highly)
root(ROOT, suggestive)
cc(agree, and)
conj(suggestive, agree)
advmod(agree, well)
case(finding, with)
nmod:poss(finding, we)
amod(finding, own)
obl(agree, finding)
case(which, in)
obl(fail, which)
nsubj(fail, we)
advmod(fail, also)
acl:relcl(finding, fail)
mark(demonstrate, to)
xcomp(fail, demonstrate)
advmod(occur, normally)
xcomp(demonstrate, occur)
amod(shunt, bronchial)
obl:npmod(pulmonary, artery)
punct(pulmonary, -)
amod(shunt, pulmonary)
compound(shunt, artery)
obj(occur, shunt)
case(species, in)
amod(species, certain)
nmod(shunt, species)
punct(occur, ,)
advmod(dog, especially)
det(dog, the)
appos(shunt, dog)
punct(suggestive, .)
case(conclusion, in)
obl(suggest, conclusion)
punct(suggest, ,)
det(finding, these)
nsubj(suggest, finding)
root(ROOT, suggest)
det(need, the)
obj(suggest, need)
case(physiology, for)
det(physiology, a)
amod(physiology, comparative)
nmod(need, physiology)
punct(pathology, ,)
conj(physiology, pathology)
punct(histology, ,)
cc(histology, and)
conj(physiology, histology)
case(lung, of)
amod(lung, mammalian)
nmod(histology, lung)
punct(suggest, .)
case(addition, in)
obl(interesting, addition)
punct(interesting, ,)
det(survey, a)
amod(survey, detailed)
amod(survey, interspecy)
nsubj(interesting, survey)
case(incidence, of)
det(incidence, the)
nmod(survey, incidence)
case(emphysema, of)
amod(emphysema, generalize)
amod(emphysema, pulmonary)
nmod(incidence, emphysema)
case(mammal, in)
nmod(emphysema, mammal)
aux(interesting, would)
cop(interesting, be)
root(ROOT, interesting)
cc(pertinent, and)
conj(interesting, pertinent)
punct(interesting, .)
advmod(exercise, also)
punct(exercise, ,)
case(present, for)
det(present, the)
obl(exercise, present)
punct(exercise, ,)
amod(caution, great)
nsubj:pass(exercise, caution)
aux(exercise, should)
aux:pass(exercise, be)
root(ROOT, exercise)
case(choice, in)
det(choice, the)
obl(exercise, choice)
case(animal, of)
det(animal, a)
amod(animal, experimental)
nmod(choice, animal)
case(study, for)
amod(study, pulmonary)
nmod(animal, study)
mark(be, if)
nsubj(be, they)
advcl(exercise, be)
mark(apply, to)
aux:pass(apply, be)
xcomp(be, apply)
case(man, to)
obl(apply, man)
punct(exercise, .)
nsubj(be, this)
root(ROOT, be)
advmod(be, especially)
mark(be, so)
fixed(so, if)
det(dog, the)
nsubj(be, dog)
punct(cat, ,)
conj(dog, cat)
cc(monkey, or)
conj(dog, monkey)
ccomp(be, be)
mark(use, to)
aux:pass(use, be)
xcomp(be, use)
punct(view, ,)
case(view, in)
obl(use, view)
case(difference, of)
nmod:poss(difference, they)
amod(difference, mark)
amod(difference, anatomical)
nmod(view, difference)
case(man, from)
nmod(difference, man)
punct(be, .)
advmod(suggest, finally)
punct(suggest, ,)
nsubj:pass(suggest, it)
aux:pass(suggest, be)
root(ROOT, suggest)
mark(comparable, that)
case(respects, in)
amod(respects, many)
obl(comparable, respects)
det(lung, the)
compound(lung, horse)
nsubj(comparable, lung)
aux(comparable, may)
cop(comparable, be)
advmod(more, anatomically)
advmod(comparable, more)
ccomp(suggest, comparable)
case(that, to)
obl(comparable, that)
case(human, of)
det(human, the)
nmod(that, human)
case(species, than)
det(species, any)
amod(species, other)
advmod(know, presently)
amod(species, know)
obl(human, species)
punct(suggest, .)
root(ROOT, summary)
det(feature, the)
amod(feature, main)
amod(feature, subgross)
amod(feature, anatomical)
nsubj:pass(present, feature)
case(lung, of)
det(lung, the)
nmod(feature, lung)
case(mammal, of)
amod(mammal, various)
nmod(lung, mammal)
aux:pass(present, be)
appos(summary, present)
punct(summary, . )
det(tabulation, a)
nsubj(permit, tabulation)
case(feature, of)
det(feature, these)
nmod(tabulation, feature)
root(ROOT, permit)
det(lung, the)
obj(permit, lung)
mark(group, to)
aux:pass(group, be)
acl(lung, group)
case(type, into)
nummod(type, three)
amod(type, distinctive)
compound(type, subgross)
obl(group, type)
punct(permit, .)
obl:tmod(represent, type)
nummod(type, 1)
punct(represent, ,)
aux:pass(represent, be)
root(ROOT, represent)
case(cow, by)
det(cow, the)
obl(represent, cow)
punct(sheep, ,)
conj(cow, sheep)
punct(pig, ,)
cc(pig, and)
conj(cow, pig)
punct(cow, ;)
punct(cow, ;)
appos(cow, type)
nummod(type, 2)
punct(type, ,)
punct(type, ,)
case(dog, by)
det(dog, the)
nmod(type, dog)
punct(cat, ,)
conj(dog, cat)
punct(monkey, ,)
cc(monkey, and)
conj(dog, monkey)
punct(dog, ;)
punct(type, ;)
appos(cow, type)
nummod(type, 3)
punct(type, ,)
punct(type, ,)
case(horse, by)
det(horse, the)
nmod(type, horse)
punct(represent, .)
nsubj:pass(develop, lobularity)
aux:pass(develop, be)
advmod(develop, extremely)
advmod(develop, well)
root(ROOT, develop)
case(type, in)
obl(develop, type)
nummod(type, 1)
punct(develop, ;)
punct(develop, ;)
parataxis(develop, absent)
case(type, in)
obl(absent, type)
nummod(type, 2)
punct(absent, ;)
punct(develop, ;)
advmod(develop, imperfectly)
parataxis(absent, develop)
case(type, in)
obl(develop, type)
nummod(type, 3)
punct(develop, .)
det(pleura, the)
nsubj(thick, pleura)
cc(septa, and)
amod(septa, interlobular)
conj(pleura, septa)
cop(thick, be)
root(ROOT, thick)
case(type, in)
obl(thick, type)
nummod(type, 1)
cc(3, and)
conj(1, 3)
punct(thick, .)
det(pleura, the)
nsubj(thin, pleura)
cop(thin, be)
advmod(thin, extremely)
root(ROOT, thin)
case(type, in)
obl(thin, type)
nummod(type, 2)
cc(absent, and)
nsubj(absent, septa)
cop(absent, be)
conj(thin, absent)
punct(supply, .)
amod(supply, arterial)
parataxis(thin, supply)
case(pleura, to)
det(pleura, the)
nmod(supply, pleura)
case(type, in)
nmod(supply, type)
nummod(type, 1)
cc(provide, and)
nsubj:pass(provide, 3)
aux:pass(provide, be)
conj(thin, provide)
case(artery, by)
det(artery, the)
amod(artery, bronchial)
obl(provide, artery)
punct(provide, ,)
cc(type, and)
case(type, in)
conj(artery, type)
nummod(type, 2)
punct(type, ,)
case(artery, by)
det(artery, the)
amod(artery, pulmonary)
nmod(type, artery)
punct(thin, .)
case(type, in)
obl(terminate, type)
nummod(type, 1)
punct(terminate, ,)
nummod(type, 2)
cc(terminate, and)
nummod(terminate, 3)
det(artery, the)
amod(artery, bronchial)
nsubj(terminate, artery)
root(ROOT, terminate)
case(bed, in)
det(bed, a)
amod(bed, capillary)
obl(terminate, bed)
acl(bed, share)
case(common, in)
obl(share, common)
case(artery, with)
det(artery, the)
amod(artery, pulmonary)
obl(common, artery)
case(level, at)
det(level, the)
obl(share, level)
case(bronchiole, of)
det(bronchiole, the)
amod(bronchiole, distal)
nmod(level, bronchiole)
punct(terminate, .)
case(type, in)
obl(provide, type)
nummod(type, 3)
det(artery, the)
amod(artery, bronchial)
nsubj(provide, artery)
advmod(provide, also)
root(ROOT, provide)
obj(provide, blood)
advmod(provide, directly)
case(bed, to)
det(bed, the)
amod(bed, alveolar)
amod(bed, capillary)
obl(provide, bed)
punct(provide, .)
amod(bronchiole, true)
compound(bronchiole, terminal)
nsubj(comprise, bronchiole)
parataxis(provide, comprise)
det(form, the)
advmod(frequent, most)
amod(form, frequent)
obj(comprise, form)
acl(form, take)
case(airways, by)
det(airways, the)
amod(airways, distal)
obl(take, airways)
case(type, in)
obl(take, type)
nummod(type, 1)
cc(3, and)
conj(type, 3)
punct(type, ,)
mark(present, although)
amod(number, small)
nsubj(present, number)
case(bronchiole, of)
advmod(develop, poorly)
amod(bronchiole, develop)
amod(bronchiole, respiratory)
nmod(number, bronchiole)
cop(present, be)
advcl(comprise, present)
punct(present, .)
advmod(develop, well)
conj(present, develop)
amod(bronchiole, respiratory)
obj(develop, bronchiole)
punct(bronchiole, ,)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(appear, hand)
punct(appear, ,)
acl(bronchiole, appear)
mark(form, to)
cop(form, be)
det(form, the)
amod(form, only)
xcomp(appear, form)
acl(form, take)
case(airways, by)
det(airways, the)
amod(airways, distal)
obl(take, airways)
case(type, in)
obl(take, type)
nummod(type, 2)
punct(appear, .)
case(type, in)
obl(follow, type)
nummod(type, 1)
det(vein, the)
amod(vein, pulmonary)
nsubj(follow, vein)
advmod(follow, closely)
root(ROOT, follow)
det(course, the)
obj(follow, course)
case(bronchus, of)
det(bronchus, the)
nmod(course, bronchus)
cc(artery, and)
det(artery, the)
amod(artery, pulmonary)
conj(bronchus, artery)
case(periphery, from)
det(periphery, the)
nmod(artery, periphery)
case(hilum, to)
det(hilum, the)
nmod(periphery, hilum)
punct(follow, .)
nsubj(barrier, this)
aux(barrier, may)
cop(barrier, be)
case(barrier, due)
fixed(due, to)
det(barrier, the)
amod(barrier, heavy)
amod(barrier, interlobular)
amod(tissue, connective)
compound(barrier, tissue)
root(ROOT, barrier)
amod(barrier, present)
punct(barrier, .)
case(type, in)
obl(maintain, type)
nummod(type, 3)
punct(maintain, ,)
det(relationship, this)
amod(relationship, general)
nsubj:pass(maintain, relationship)
aux:pass(maintain, be)
root(ROOT, maintain)
advmod(maintain, peripherally)
cc(centrally, but)
advmod(centrally, not)
conj(maintain, centrally)
mark(follow, where)
det(vein, the)
amod(vein, pulmonary)
nsubj(follow, vein)
advcl(maintain, follow)
det(path, a)
advmod(independent, more)
amod(path, independent)
obj(follow, path)
case(hilum, to)
det(hilum, the)
nmod(path, hilum)
mark(case, as)
cop(case, be)
det(case, the)
advcl(follow, case)
case(lung, throughout)
det(lung, the)
nmod(case, lung)
case(type, in)
nmod(case, type)
nummod(type, 2)
punct(maintain, .)
nsubj:pass(mention, some)
case(feature, of)
det(feature, the)
nmod(some, feature)
case(portion, of)
det(portion, the)
amod(portion, top)
nmod(feature, portion)
case(Figure, of)
nmod(portion, Figure)
nummod(Figure, 1)
cc(Figure, and)
conj(Figure, Figure)
nummod(Figure, 2)
aux:pass(mention, be)
root(ROOT, mention)
mark(discuss, in)
advcl(mention, discuss)
obj(discuss, table)
nummod(table, 1)
punct(discuss, .)
advmod(spread, first)
punct(spread, ,)
det(Profile, the)
compound(Profile, onset)
nsubj(spread, Profile)
parataxis(mention, spread)
case(year, across)
advmod(12, approximately)
nummod(year, 12)
obl(spread, year)
case(boy, for)
nmod(year, boy)
cc(year, and)
nummod(year, 10)
conj(boy, year)
case(girl, for)
nmod(year, girl)
punct(spread, .)
case(contrast, in)
obl(bunch, contrast)
punct(bunch, ,)
nsubj:pass(bunch, 20)
case(line, of)
det(line, the)
nummod(line, 21)
nmod(20, line)
case(Profile, in)
det(Profile, the)
compound(Profile, completion)
nmod(line, Profile)
punct(exclude, ()
acl(Profile, exclude)
obj(exclude, center)
obj(exclude, 5)
case(boy, for)
obl(exclude, boy)
cc(4, and)
conj(boy, 4)
case(girl, for)
nmod(4, girl)
punct(exclude, ))
aux:pass(bunch, be)
root(ROOT, bunch)
cc(extend, and)
conj(bunch, extend)
case(period, over)
det(period, a)
advmod(shorter, much)
amod(period, shorter)
obl(extend, period)
punct(period, ,)
advmod(30, approximately)
nummod(month, 30)
nmod:npmod(period, month)
case(boy, for)
nmod(month, boy)
cc(month, and)
nummod(month, 40)
conj(boy, month)
case(girl, for)
nmod(month, girl)
punct(bunch, .)
det(Chart, the)
compound(Chart, maturity)
nsubj(demonstrate, Chart)
case(sex, for)
det(sex, each)
nmod(Chart, sex)
root(ROOT, demonstrate)
advmod(demonstrate, clearly)
mark(phenomenon, that)
nsubj(phenomenon, onset)
cop(phenomenon, be)
det(phenomenon, a)
ccomp(demonstrate, phenomenon)
case(childhood, of)
amod(childhood, infancy)
cc(early, and)
conj(infancy, early)
nmod(phenomenon, childhood)
mark(phenomenon, whereas)
nsubj(phenomenon, completion)
cop(phenomenon, be)
det(phenomenon, a)
advcl(phenomenon, phenomenon)
case(portion, of)
det(portion, the)
amod(portion, later)
nmod(phenomenon, portion)
case(adolescence, of)
nmod(portion, adolescence)
punct(demonstrate, .)
advmod(vary, second)
punct(vary, ,)
case(sex, for)
det(sex, both)
obl(vary, sex)
punct(vary, ,)
det(line, the)
nummod(line, 21)
compound(line, transverse)
nsubj(vary, line)
case(Profile, in)
det(Profile, the)
compound(Profile, onset)
nmod(line, Profile)
root(ROOT, vary)
obj(vary, more)
case(spread, in)
amod(spread, individual)
obl(more, spread)
case(those, than)
obl(more, those)
case(Profile, in)
det(Profile, the)
compound(Profile, completion)
nmod(those, Profile)
punct(vary, .)
mark(value, although)
det(deviation, the)
amod(deviation, standard)
nsubj(value, deviation)
advcl(be, value)
case(spread, on)
det(spread, which)
obl(value, spread)
case(line, of)
det(line, the)
nmod(spread, line)
aux:pass(base, be)
acl:relcl(spread, base)
cop(larger, be)
advmod(larger, relatively)
ccomp(base, larger)
case(center, for)
det(center, those)
obl(larger, center)
nsubj(begin, which)
acl:relcl(center, begin)
mark(ossify, to)
xcomp(begin, ossify)
advmod(ossify, early)
punct(table, ()
obj(ossify, table)
nummod(table, 1)
punct(table, ))
punct(be, ,)
expl(be, there)
root(ROOT, be)
amod(difference, considerable)
nsubj(be, difference)
case(value, in)
det(value, this)
nmod(difference, value)
case(center, between)
nmod(value, center)
acl(center, have)
det(onset, the)
advmod(time, closely)
amod(onset, time)
obj(have, onset)
punct(onset, .)
advmod(onset, third)
punct(see, ,)
det(process, the)
nsubj:pass(see, process)
case(calcification, of)
nmod(process, calcification)
aux:pass(see, be)
parataxis(be, see)
mark(begin, to)
xcomp(see, begin)
advmod(begin, later)
cc(continue, and)
mark(continue, to)
conj(begin, continue)
advmod(longer, much)
advmod(continue, longer)
case(boy, for)
det(boy, these)
obl(continue, boy)
case(girl, than)
case(girl, for)
det(girl, the)
obl(continue, girl)
punct(fact, ,)
det(fact, a)
appos(girl, fact)
nsubj(confirm, which)
acl:relcl(fact, confirm)
obj(confirm, data)
case(group, for)
amod(group, other)
obl(confirm, group)
case(child, of)
nmod(group, child)
punct(see, .)
det(Profile, the)
compound(Profile, onset)
nsubj:pass(construct, Profile)
cc(Profile, and)
compound(Profile, completion)
conj(Profile, Profile)
aux:pass(construct, be)
root(ROOT, construct)
mark(serve, to)
advcl(construct, serve)
case(norm, as)
obl(serve, norm)
case(child, for)
nmod(norm, child)
punct(construct, .)
expl(convenient, it)
cop(convenient, be)
root(ROOT, convenient)
mark(classify, to)
csubj(convenient, classify)
det(child, a)
nmod:poss(age, child)
case(child, 's)
compound(age, onset)
obj(classify, age)
cc(age, and)
compound(age, completion)
conj(age, age)
case(advanced, as)
punct(advanced, ``)
amod(moderate, advanced)
punct(moderate, '')
punct(moderate, ,)
punct(moderate, ``)
parataxis(convenient, moderate)
punct(moderate, '')
punct(modal, ()
conj(moderate, modal)
punct(modal, ))
punct(delay, ,)
cc(delay, or)
punct(delay, ``)
conj(convenient, delay)
punct(delay, '')
case(whether, accord)
fixed(accord, to)
mark(appear, whether)
det(child, the)
nmod:poss(age, child)
case(child, 's)
obl(appear, age)
amod(dot, equivalent)
punct(dot, ``)
nsubj(appear, dot)
punct(dot, '')
advcl(delay, appear)
case(leave, to)
det(leave, the)
obl(appear, leave)
obl(leave, of)
punct(leave, ,)
obl(leave, upon)
punct(right, ,)
cc(right, or)
case(right, to)
det(right, the)
conj(leave, right)
case(line, of)
det(line, the)
amod(line, appropriate)
amod(line, short)
amod(line, transverse)
nmod(right, line)
punct(right, .)
mark(appear, when)
det(dot, a)
nsubj(appear, dot)
advcl(right, appear)
xcomp(appear, close)
case(end, to)
det(end, the)
obl(close, end)
case(line, of)
det(line, the)
amod(line, transverse)
nmod(end, line)
punct(end, ,)
det(rating, the)
punct(rating, ``)
amod(rating, moderate)
punct(rating, '')
nsubj:pass(classify, rating)
aux(classify, may)
aux:pass(classify, be)
advmod(classify, further)
acl:relcl(line, classify)
case(position, accord)
fixed(accord, to)
det(position, the)
obl(classify, position)
case(dot, of)
det(dot, the)
nmod(position, dot)
case(respect, with)
nmod(position, respect)
case(mark, to)
det(mark, the)
amod(mark, vertical)
nmod(respect, mark)
acl(mark, denote)
det(age, the)
compound(age, mean)
obj(denote, age)
punct(call, .)
amod(classification, such)
nsubj:pass(call, classification)
aux(call, may)
aux:pass(call, be)
acl:relcl(mark, call)
punct(advanced, ``)
advmod(advanced, somewhat)
xcomp(call, advanced)
punct(advanced, '')
cc(delay, or)
punct(delay, ``)
advmod(delay, somewhat)
conj(advanced, delay)
punct(delay, '')
punct(delay, ,)
mark(be, as)
det(case, the)
nsubj(be, case)
aux(be, may)
advcl(delay, be)
punct(be, ,)
advcl(be, reserve)
punct(moderate, ``)
obj(reserve, moderate)
punct(moderate, '')
case(dot, for)
obl(reserve, dot)
nmod(dot, upon)
cc(close, or)
conj(dot, close)
case(mean, to)
det(mean, the)
obl(close, mean)
punct(convenient, .)
case(portion, in)
det(portion, the)
amod(portion, lower)
obl(classify, portion)
case(Chart, of)
det(Chart, each)
nmod(portion, Chart)
punct(classify, ,)
det(Age, the)
compound(Age, Skeletal)
nsubj:pass(classify, Age)
punct(Hand, ()
appos(Age, Hand)
punct(Hand, ))
case(boy, of)
nmod(Age, boy)
nummod(boy, 34)
cc(girl, and)
conj(boy, girl)
nummod(girl, 2)
aux(classify, may)
aux:pass(classify, be)
advmod(classify, similarly)
root(ROOT, classify)
punct(classify, .)
expl(denote, there)
det(one, the)
amod(one, middle)
nsubj(denote, one)
case(curve, of)
det(curve, the)
nummod(curve, three)
nmod(one, curve)
root(ROOT, denote)
punct(mean, ``)
ccomp(denote, mean)
compound(Age, Skeletal)
obj(mean, Age)
punct(Age, '')
case(boy, for)
det(boy, the)
compound(Series, maturity)
compound(boy, Series)
obl(mean, boy)
cc(girl, and)
conj(boy, girl)
punct(denote, .)
det(curve, the)
amod(curve, upper)
nsubj(denote, curve)
root(ROOT, denote)
det(mean, the)
obj(denote, mean)
cc(deviation, plus)
nummod(deviation, one)
amod(deviation, standard)
conj(mean, deviation)
punct(represent, ,)
cc(represent, and)
det(curve, the)
amod(curve, lower)
nsubj(represent, curve)
conj(denote, represent)
det(mean, the)
obj(represent, mean)
case(deviation, minus)
nummod(deviation, one)
amod(deviation, standard)
obj(represent, deviation)
punct(denote, .)
advmod(classify, thus)
punct(classify, ,)
det(child, a)
nmod:poss(Age, child)
case(child, 's)
compound(Age, Skeletal)
nsubj:pass(classify, Age)
punct(dot, ``)
appos(Age, dot)
punct(dot, '')
aux(classify, may)
aux:pass(classify, be)
root(ROOT, classify)
case(advanced, as)
punct(advanced, ``)
obl(classify, advanced)
punct(advanced, '')
mark(appear, when)
nsubj(appear, they)
advcl(classify, appear)
case(curve, above)
det(curve, the)
amod(curve, middle)
obl(appear, curve)
punct(curve, ,)
punct(moderate, ``)
appos(curve, moderate)
punct(moderate, '')
mark(appear, when)
nsubj(appear, they)
advcl(moderate, appear)
advmod(above, immediately)
advmod(appear, above)
cc(curve, or)
case(curve, below)
det(curve, the)
amod(curve, middle)
conj(above, curve)
punct(delay, ,)
cc(delay, and)
punct(delay, ``)
conj(curve, delay)
punct(delay, '')
mark(appear, when)
nsubj(appear, they)
advcl(delay, appear)
case(curve, below)
det(curve, the)
amod(curve, lower)
obl(appear, curve)
punct(appear, .)
mark(summarize, to)
advcl(appear, summarize)
det(purpose, the)
obj(summarize, purpose)
case(Chart, of)
det(Chart, the)
compound(maturity, Skeletal)
compound(Chart, maturity)
nmod(purpose, Chart)
punct(contain, :)
nsubj(contain, each)
parataxis(classify, contain)
nummod(kind, two)
obj(contain, kind)
case(norm, of)
amod(norm, skeletal)
compound(norm, maturity)
nmod(kind, norm)
nsubj(show, which)
acl:relcl(norm, show)
nummod(method, two)
det:predet(method, quite)
amod(method, different)
obj(show, method)
mark(depict, of)
acl(method, depict)
amod(level, developmental)
obj(depict, level)
case(center, of)
compound(center, growth)
nmod(level, center)
punct(classify, .)
advmod(require, first)
punct(require, ,)
det(portion, the)
amod(portion, upper)
nsubj(require, portion)
root(ROOT, require)
obj(require, series)
case(film, of)
nmod(series, film)
case(child, for)
det(child, every)
nmod(series, child)
punct(require, ,)
advcl(require, consist)
case(those, of)
obl(consist, those)
case(Hand, from)
nmod(those, Hand)
punct(Elbow, ,)
conj(Hand, Elbow)
punct(Shoulder, ,)
conj(Hand, Shoulder)
punct(Knee, ,)
conj(Hand, Knee)
punct(Foot, ,)
cc(Foot, and)
conj(Hand, Foot)
punct(require, .)
det(portion, the)
amod(portion, lower)
nsubj(necessitate, portion)
root(ROOT, necessitate)
advmod(film, only)
obj(necessitate, film)
case(Hand, of)
nmod(film, Hand)
punct(necessitate, .)
advmod(permit, second)
punct(permit, ,)
det(portion, the)
amod(portion, upper)
nsubj(permit, portion)
root(ROOT, permit)
obj(permit, comparison)
case(level, of)
compound(level, maturity)
nmod(comparison, level)
case(number, of)
det(number, a)
amod(number, equal)
nmod(comparison, number)
case(center, of)
compound(center, growth)
nmod(number, center)
case(bone, from)
det(bone, the)
amod(bone, long)
punct(short, ,)
conj(long, short)
punct(round, ,)
cc(round, and)
conj(long, round)
nmod(number, bone)
case(region, of)
det(region, the)
nummod(region, five)
nmod(bone, region)
punct(permit, .)
det(portion, the)
amod(portion, lower)
nsubj(permit, portion)
root(ROOT, permit)
obj(permit, comparison)
case(level, of)
compound(level, maturity)
nmod(comparison, level)
case(bone, of)
amod(bone, short)
cc(round, and)
conj(short, round)
nmod(comparison, bone)
advmod(permit, predominantly)
punct(permit, ,)
mark(include, since)
advmod(bone, only)
nummod(bone, two)
amod(bone, long)
nsubj:pass(include, bone)
aux:pass(include, be)
advcl(permit, include)
case(Hand, in)
obl(include, Hand)
cc(wrist, and)
conj(Hand, wrist)
case(region, as)
det(region, a)
obl(include, region)
punct(include, .)
advmod(deal, third)
punct(deal, ,)
det(portion, the)
amod(portion, upper)
nsubj(deal, portion)
parataxis(permit, deal)
case(indicator, with)
advmod(indicator, only)
nummod(indicator, two)
obl(deal, indicator)
case(level, of)
amod(level, developmental)
nmod(indicator, level)
punct(onset, ,)
conj(level, onset)
cc(completion, and)
conj(level, completion)
punct(deal, .)
det(portion, the)
amod(portion, lower)
nsubj(utilize, portion)
root(ROOT, utilize)
det(complement, the)
amod(complement, full)
obj(utilize, complement)
case(indicator, of)
amod(indicator, intermediate)
compound(indicator, maturity)
nmod(complement, indicator)
case(center, of)
det(center, each)
compound(center, Hand)
nmod(indicator, center)
cc(onset, as)
fixed(as, well)
fixed(as, as)
nmod:poss(onset, they)
conj(complement, onset)
cc(completion, and)
conj(onset, completion)
punct(onset, .)
appos(onset, Fourth)
punct(onset, ,)
det(indicator, the)
nummod(indicator, two)
nsubj(part, indicator)
cop(part, be)
case(part, for)
det(part, the)
amod(part, most)
parataxis(utilize, part)
advmod(separate, widely)
acl(part, separate)
advmod(separate, chronologically)
punct(separate, ,)
case(gap, with)
det(gap, the)
amod(gap, extensive)
compound(gap, age)
obl(separate, gap)
acl(gap, occur)
case(childhood, during)
obl(occur, childhood)
case(all, for)
obl(occur, all)
cc(center, but)
nummod(center, one)
compound(center, growth)
conj(all, center)
punct(utilize, .)
det(portion, the)
amod(portion, lower)
nsubj(provide, portion)
root(ROOT, provide)
det(rating, a)
obj(provide, rating)
case(stage, at)
det(stage, any)
obl(provide, stage)
case(infancy, between)
nmod(stage, infancy)
cc(adulthood, and)
conj(infancy, adulthood)
punct(provide, .)
nsubj:pass(compare, onset)
punct(completion, ,)
conj(onset, completion)
punct(Ages, ,)
cc(Ages, and)
amod(Ages, Skeletal)
conj(onset, Ages)
punct(Hand, ()
appos(Ages, Hand)
punct(Hand, ))
case(boy, of)
nmod(Ages, boy)
nummod(boy, 34)
cc(girl, and)
conj(boy, girl)
nummod(girl, 2)
aux(compare, may)
aux:pass(compare, be)
advmod(compare, directly)
root(ROOT, compare)
cc(classify, and)
conj(compare, classify)
punct(compare, ,)
advcl(compare, use)
advmod(Ages, only)
det(Ages, those)
amod(Ages, Skeletal)
obj(use, Ages)
nsubj(appear, which)
acl:relcl(Ages, appear)
advmod(appear, immediately)
case(Profile, below)
det(Profile, the)
compound(Profile, onset)
obl(appear, Profile)
cc(Profile, and)
det(Profile, the)
compound(Profile, completion)
conj(Profile, Profile)
punct(compare, .)
expl(assume, it)
aux(assume, may)
aux:pass(assume, be)
root(ROOT, assume)
mark(small, that)
nsubj(small, difference)
case(ratings, in)
nmod(difference, ratings)
case(selection, due)
fixed(due, to)
nmod(difference, selection)
case(center, of)
compound(center, growth)
nmod(selection, center)
case(region, from)
amod(region, specific)
nmod(selection, region)
case(body, of)
det(body, the)
nmod(region, body)
aux(small, will)
cop(small, be)
ccomp(assume, small)
punct(small, ,)
case(table, accord)
fixed(accord, to)
amod(table, exist)
obl(small, table)
case(age, of)
compound(age, onset)
nmod(table, age)
cc(age, and)
compound(age, completion)
conj(age, age)
case(center, for)
nmod(age, center)
case(body, throughout)
det(body, the)
nmod(center, body)
punct(ratings, .)
advmod(ratings, accordingly)
punct(ratings, ,)
compound(level, maturity)
compound(ratings, level)
nsubj(similar, ratings)
case(means, by)
nmod(ratings, means)
case(portion, of)
det(portion, the)
amod(portion, upper)
nmod(means, portion)
cc(portion, and)
amod(portion, lower)
conj(portion, portion)
case(Chart, of)
det(Chart, the)
nmod(portion, Chart)
punct(portion, ,)
advmod(similar, respectively)
punct(similar, ,)
aux(similar, should)
cop(similar, be)
advmod(similar, somewhat)
ccomp(assume, similar)
case(Skeletal, since)
obl(similar, Skeletal)
compound(assessment, Age)
nsubj(dependent, assessment)
cop(dependent, be)
root(ROOT, dependent)
case(onset, upon)
obl(dependent, onset)
case(infancy, during)
obl(dependent, infancy)
cc(completion, and)
case(completion, upon)
conj(infancy, completion)
case(adolescence, during)
nmod(completion, adolescence)
punct(dependent, .)
expl(clear, it)
cop(clear, be)
root(ROOT, clear)
mark(be, that)
expl(be, there)
csubj(clear, be)
det(difference, some)
nsubj(be, difference)
case(ratings, in)
det(ratings, the)
nmod(difference, ratings)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(clear, be)
amod(agreement, substantial)
nsubj(be, agreement)
punct(clear, .)
case(Skeletal, since)
det(Skeletal, a)
root(ROOT, Skeletal)
compound(rating, Age)
nsubj:pass(make, rating)
aux(make, can)
aux:pass(make, be)
root(ROOT, make)
case(age, at)
det(age, any)
obl(make, age)
case(growth, during)
nmod(age, growth)
punct(make, ,)
case(Elbow, from)
obl(make, Elbow)
punct(Shoulder, ,)
conj(Elbow, Shoulder)
punct(Knee, ,)
conj(Elbow, Knee)
punct(Foot, ,)
cc(Foot, or)
conj(Elbow, Foot)
cc(Hand, as)
fixed(as, well)
fixed(as, as)
conj(Elbow, Hand)
punct(seem, ,)
nsubj(seem, it)
conj(make, seem)
mark(method, to)
cop(method, be)
det(method, the)
xcomp(seem, method)
case(choice, of)
nmod(method, choice)
mark(wish, when)
nsubj(wish, one)
advcl(method, wish)
mark(study, to)
xcomp(wish, study)
amod(aspect, most)
obj(study, aspect)
case(progress, of)
amod(progress, skeletal)
amod(progress, developmental)
nmod(aspect, progress)
case(childhood, during)
nmod(progress, childhood)
punct(make, .)
mark(state, as)
advcl(provide, state)
advmod(state, earlier)
case(paper, in)
det(paper, the)
obl(state, paper)
punct(provide, ,)
nsubj(provide, onset)
cc(completion, and)
conj(onset, completion)
punct(onset, --)
advmod(former, particularly)
det(former, the)
appos(onset, former)
punct(provide, --)
root(ROOT, provide)
det(tool, a)
amod(tool, different)
obj(provide, tool)
cc(indicator, or)
conj(tool, indicator)
case(expectancy, of)
nmod(tool, expectancy)
case(development, in)
amod(development, osseous)
nmod(tool, development)
punct(tool, ,)
appos(development, each)
case(period, within)
det(period, a)
amod(period, limit)
compound(period, age)
nmod(each, period)
punct(period, .)
det:predet(indicator, such)
det(indicator, a)
appos(period, indicator)
punct(indicator, ,)
cc(indicator, or)
conj(indicator, indicator)
punct(need, ,)
aux:pass(need, be)
acl:relcl(indicator, need)
case(means, as)
obl(need, means)
mark(recognize, of)
acl(means, recognize)
amod(period, specific)
obj(recognize, period)
case(delay, of)
nmod(period, delay)
case(progress, in)
amod(progress, skeletal)
amod(progress, developmental)
nmod(period, progress)
punct(need, .)
nsubj:pass(state, it)
aux:pass(state, be)
root(ROOT, state)
advmod(state, earlier)
mark(be, that)
nummod(purpose, one)
nsubj(be, purpose)
case(study, of)
det(study, this)
nmod(purpose, study)
ccomp(state, be)
mark(extend, to)
ccomp(be, extend)
det(analysis, the)
obj(extend, analysis)
case(variability, of)
nmod(analysis, variability)
case(onset, of)
nmod(variability, onset)
cc(completion, and)
conj(onset, completion)
case(each, in)
obl(extend, each)
case(center, of)
det(center, the)
nummod(center, 21)
compound(center, growth)
nmod(each, center)
advmod(that, somewhat)
case(that, beyond)
nmod(each, that)
acl(that, provide)
case(data, by)
det(data, the)
obl(provide, data)
case(Tables, in)
obl(provide, Tables)
nummod(Tables, 1)
cc(2, and)
conj(Tables, 2)
punct(state, .)
case(approach, as)
nummod(approach, one)
obl(construct, approach)
mark(do, to)
acl(approach, do)
obj(do, this)
punct(construct, ,)
nsubj:pass(construct, figure)
nummod(figure, 3)
cc(4, and)
conj(3, 4)
aux(construct, have)
aux:pass(construct, be)
root(ROOT, construct)
case(age, from)
det(age, the)
compound(age, mean)
obl(construct, age)
cc(onset, and)
det(onset, the)
amod(onset, individual)
conj(age, onset)
cc(age, and)
compound(age, completion)
conj(onset, age)
case(boy, for)
nmod(onset, boy)
nummod(boy, 34)
cc(2, and)
compound(2, girl)
nummod(bring, 2)
punct(2, .)
det(difference, the)
nsubj:pass(bring, difference)
case(age, between)
compound(age, onset)
nmod(difference, age)
cc(age, and)
compound(age, completion)
conj(age, age)
case(respect, with)
obl(bring, respect)
case(age, to)
det(age, the)
amod(age, corresponding)
compound(age, mean)
nmod(respect, age)
aux(bring, have)
aux:pass(bring, be)
conj(construct, bring)
case(juxtaposition, into)
obl(bring, juxtaposition)
case(means, by)
obl(bring, means)
case(series, of)
det(series, a)
nmod(means, series)
case(arrow, of)
nmod(series, arrow)
punct(bring, .)
det(data, the)
nsubj(appear, data)
case(boy, for)
nmod(data, boy)
nummod(boy, 34)
root(ROOT, appear)
case(Figure, in)
obl(appear, Figure)
nummod(Figure, 3)
punct(continue, ,)
cc(continue, and)
case(girl, for)
obl(continue, girl)
nummod(girl, 2)
case(Figure, in)
compound(4, Figure)
nummod(use, 4)
punct(4, .)
det(system, the)
compound(system, number)
conj(appear, system)
acl(system, use)
case(Tables, in)
obl(use, Tables)
nummod(Tables, 1)
cc(2, and)
conj(Tables, 2)
cc(figure, and)
conj(2, figure)
nummod(figure, 1)
cc(2, and)
nsubj:pass(continue, 2)
aux:pass(continue, be)
conj(use, continue)
case(center, for)
det(center, the)
nummod(center, 21)
compound(center, growth)
obl(continue, center)
punct(appear, .)
det(dot, the)
punct(dot, ``)
nsubj(indicate, dot)
punct(dot, '')
case(end, on)
nummod(end, one)
nmod(dot, end)
case(arrow, of)
det(arrow, each)
nmod(end, arrow)
root(ROOT, indicate)
obj(indicate, extent)
case(difference, of)
nmod(extent, difference)
case(month, in)
nmod(extent, month)
case(age, between)
det(child, the)
nmod:poss(age, child)
case(child, 's)
compound(age, onset)
nmod(month, age)
cc(age, and)
det(age, the)
amod(age, corresponding)
compound(age, mean)
conj(age, age)
case(center, for)
det(center, the)
compound(center, growth)
nmod(age, center)
punct(indicate, .)
det(tip, the)
punct(tip, ``)
nsubj(represent, tip)
punct(tip, '')
case(arrow, of)
det(arrow, the)
nmod(tip, arrow)
root(ROOT, represent)
obj(represent, extent)
case(difference, of)
nmod(extent, difference)
case(age, between)
det(child, the)
nmod:poss(age, child)
case(child, 's)
compound(age, completion)
nmod(difference, age)
cc(age, and)
det(age, the)
amod(age, corresponding)
compound(age, mean)
conj(age, age)
case(center, for)
det(center, the)
compound(center, growth)
nmod(age, center)
punct(represent, .)
advmod(indicate, thus)
punct(indicate, ,)
det(alignment, the)
nsubj(indicate, alignment)
case(dot, of)
det(dot, the)
punct(dot, ``)
nmod(alignment, dot)
punct(dot, '')
cc(tip, and)
punct(tip, ``)
conj(dot, tip)
punct(tip, '')
punct(indicate, ,)
advmod(tip, respectively)
punct(indicate, ,)
root(ROOT, indicate)
amod(variability, individual)
obj(indicate, variability)
case(center, of)
det(center, the)
nummod(growth, 21)
compound(center, growth)
nmod(variability, center)
case(child, of)
det(child, each)
nmod(center, child)
case(respect, with)
nmod(center, respect)
case(value, to)
det(value, the)
compound(value, mean)
nmod(respect, value)
case(boy, for)
det(boy, these)
nmod(value, boy)
cc(girl, and)
conj(boy, girl)
punct(indicate, .)
det(direction, the)
root(ROOT, direction)
case(which, in)
obl(show, which)
det(point, the)
compound(point, arrow)
nsubj(show, point)
acl:relcl(direction, show)
advmod(change, how)
det(level, the)
compound(level, maturity)
nsubj:pass(change, level)
case(center, of)
det(center, the)
compound(center, growth)
nmod(level, center)
aux:pass(change, be)
ccomp(show, change)
case(completion, at)
obl(change, completion)
case(level, from)
det(level, the)
nmod(completion, level)
case(onset, at)
nmod(level, onset)
punct(change, .)
mark(coincide, when)
det(dot, the)
punct(dot, ``)
nsubj(coincide, dot)
punct(dot, '')
cc(tip, and)
punct(tip, ``)
conj(dot, tip)
punct(tip, '')
advcl(change, coincide)
punct(be, ,)
det(classification, the)
nsubj(be, classification)
acl(classification, use)
case(paper, in)
det(paper, this)
obl(use, paper)
ccomp(coincide, be)
punct(be, ``)
amod(schedule, same)
root(ROOT, schedule)
punct(schedule, '')
punct(schedule, .)
det(length, the)
nsubj(indicate, length)
case(arrow, of)
det(arrow, the)
nmod(length, arrow)
parataxis(schedule, indicate)
obj(indicate, amount)
case(slow, of)
nmod(amount, slow)
cc(acceleration, or)
conj(slow, acceleration)
case(completion, at)
nmod(amount, completion)
case(that, over)
nmod(completion, that)
case(onset, at)
nmod(completion, onset)
punct(read, ,)
cc(read, and)
det(difference, the)
nsubj:pass(read, difference)
case(month, in)
nmod(difference, month)
aux(read, can)
aux:pass(read, be)
conj(indicate, read)
advmod(read, roughly)
mark(refer, by)
advcl(read, refer)
det(arrow, the)
obj(refer, arrow)
case(scale, to)
det(scale, the)
compound(scale, age)
obl(refer, scale)
case(base, along)
det(base, the)
obl(refer, base)
case(figure, of)
det(figure, each)
nmod(base, figure)
punct(refer, ,)
cc(refer, or)
advmod(precisely, more)
advmod(refer, precisely)
mark(refer, by)
conj(refer, refer)
case(data, to)
det(data, the)
amod(data, original)
obl(refer, data)
case(table, in)
det(table, the)
amod(table, appropriate)
obl(refer, table)
punct(schedule, .)
det(difference, the)
nsubj(govern, difference)
case(sequence, between)
det(sequence, the)
nmod(difference, sequence)
case(onset, of)
nmod(sequence, onset)
case(ossification, of)
nmod(onset, ossification)
case(sex, for)
det(sex, the)
nmod(ossification, sex)
root(ROOT, govern)
det(sequence, the)
compound(sequence, number)
obj(govern, sequence)
case(figure, in)
nmod(sequence, figure)
nummod(figure, 3)
cc(4, and)
nummod(clarify, 4)
punct(4, .)
det(difference, this)
nsubj:pass(clarify, difference)
aux:pass(clarify, be)
advmod(clarify, readily)
parataxis(govern, clarify)
mark(refer, by)
advcl(clarify, refer)
case(table, to)
obl(refer, table)
nummod(table, 1)
punct(refer, .)
case(example, for)
obl(portray, example)
punct(arrow, ,)
nsubj(portray, arrow)
nummod(arrow, 17)
case(Figure, in)
obl(portray, Figure)
nummod(Figure, 3)
conj(clarify, portray)
det(epiphysis, the)
amod(epiphysis, proximal)
amod(epiphysis, radial)
obj(portray, epiphysis)
case(boy, for)
nmod(epiphysis, boy)
nummod(boy, 34)
punct(epiphysis, ,)
mark(portray, whereas)
det(epiphysis, the)
amod(epiphysis, same)
nsubj:pass(portray, epiphysis)
case(girl, for)
nmod(epiphysis, girl)
nummod(girl, 2)
aux:pass(portray, be)
acl(epiphysis, portray)
case(arrow, by)
obl(portray, arrow)
nummod(arrow, 18)
case(Figure, in)
obl(portray, Figure)
nummod(Figure, 4)
punct(Figure, .)
case(boy, for)
det(boy, the)
obl(delay, boy)
punct(delay, ,)
det(epiphysis, this)
nsubj:pass(delay, epiphysis)
aux:pass(delay, be)
advmod(delay, markedly)
conj(portray, delay)
case(onset, at)
obl(delay, onset)
cc(mean, but)
case(mean, near)
det(mean, the)
obl(delay, mean)
case(completion, at)
nmod(mean, completion)
punct(delay, .)
advmod(shorten, thus)
punct(shorten, ,)
det(Span, the)
nsubj:pass(shorten, Span)
case(ossification, of)
nmod:poss(ossification, its)
nmod(Span, ossification)
aux:pass(shorten, be)
conj(delay, shorten)
cc(demonstrate, and)
det(center, the)
nmod:poss(ability, center)
case(center, 's)
nsubj:pass(shorten, ability)
mark(catch, to)
punct(catch, ``)
acl(ability, catch)
compound:prt(catch, up)
punct(catch, '')
case(ossification, in)
obl(catch, ossification)
aux:pass(demonstrate, be)
advcl(catch, demonstrate)
punct(govern, .)
case(contrast, in)
obl(advanced, contrast)
punct(advanced, ,)
case(girl, for)
det(girl, the)
obl(advanced, girl)
det(epiphysis, the)
nsubj:pass(advanced, epiphysis)
aux:pass(advanced, be)
advmod(advanced, slightly)
root(ROOT, advanced)
case(onset, at)
obl(advanced, onset)
cc(delay, and)
conj(advanced, delay)
case(completion, at)
obl(delay, completion)
punct(advanced, .)
advmod(occur, obviously)
punct(occur, ,)
det(slow, the)
nsubj(occur, slow)
case(she, for)
nmod(slow, she)
aux(occur, may)
aux(occur, have)
conj(advanced, occur)
case(point, at)
det(point, any)
obl(occur, point)
case(onset, between)
nmod(point, onset)
cc(completion, and)
conj(onset, completion)
punct(occur, .)
det(Skeletal, the)
root(ROOT, Skeletal)
compound(curve, Age)
nsubj(show, curve)
case(portion, in)
det(portion, the)
amod(portion, lower)
nmod(curve, portion)
case(2, of)
nmod(portion, Figure)
nmod(portion, 2)
root(ROOT, show)
mark(occur, that)
nsubj(occur, slow)
aux(occur, may)
aux(occur, have)
ccomp(show, occur)
case(she, for)
obl(occur, she)
case(period, during)
det(period, the)
amod(period, prepubescent)
obl(occur, period)
punct(show, .)
nsubj:pass(evaluate, length)
case(shaft, of)
det(shaft, the)
nmod(length, shaft)
case(arrow, of)
det(arrow, these)
nmod(shaft, arrow)
aux(evaluate, may)
aux:pass(evaluate, be)
root(ROOT, evaluate)
case(value, accord)
fixed(accord, to)
det(value, the)
amod(value, standard)
compound(value, deviation)
obl(evaluate, value)
case(center, for)
det(center, each)
nmod(value, center)
case(table, in)
nmod(value, table)
nummod(table, 1)
punct(evaluate, .)
nsubj(attempt, we)
aux(attempt, have)
root(ROOT, attempt)
mark(simplify, to)
xcomp(attempt, simplify)
det(task, the)
amod(task, extensive)
obj(simplify, task)
mark(analyze, of)
acl(task, analyze)
compound(age, onset)
obj(analyze, age)
cc(age, and)
compound(age, completion)
conj(age, age)
case(child, of)
det(child, each)
nmod(age, child)
punct(analyze, --)
advmod(value, more)
fixed(more, than)
nummod(value, 1700)
conj(age, value)
case(group, for)
det(group, the)
amod(group, entire)
nmod(value, group)
punct(value, --)
mark(construct, by)
advcl(analyze, construct)
obj(construct, figure)
case(each, for)
nmod(figure, each)
case(center, of)
det(center, the)
nummod(center, 21)
nmod(each, center)
mark(appear, so)
fixed(so, that)
det(data, the)
nsubj(appear, data)
case(boy, for)
det(boy, all)
nummod(boy, 34)
nmod(data, boy)
cc(34, and)
conj(boy, 34)
case(girl, of)
det(girl, the)
nmod(34, girl)
aux(appear, will)
advcl(example, appear)
advmod(appear, together)
case(center, for)
det(center, each)
compound(center, growth)
obl(appear, center)
punct(figure, .)
nsubj(example, figure)
nummod(figure, 5)
cc(6, and)
nsubj(example, 6)
cop(example, be)
parataxis(attempt, example)
case(method, of)
nmod:poss(method, we)
nmod(example, method)
mark(analyze, of)
acl(method, analyze)
det(result, the)
obj(analyze, result)
case(center, for)
det(center, each)
compound(center, growth)
nmod(result, center)
punct(figure, .)
nummod(figure, Forty)
amod(figure, other)
appos(result, figure)
amod(figure, similar)
case(5, to)
obl(similar, 5)
cc(6, and)
conj(5, 6)
cc(data, and)
det(data, the)
amod(data, original)
conj(figure, data)
acl(data, use)
case(construction, in)
det(construction, the)
obl(use, construction)
case(figure, of)
det(figure, all)
nmod(construction, figure)
cc(table, and)
conj(figure, table)
case(monograph, in)
det(monograph, this)
nmod(figure, monograph)
aux(include, have)
aux:pass(include, be)
acl:relcl(construction, include)
case(Appendix, in)
det(Appendix, the)
obl(include, Appendix)
punct(attempt, .)
det(principle, the)
nsubj:pass(apply, principle)
acl(principle, use)
mark(make, in)
advcl(use, make)
det(arrow, each)
obj(make, arrow)
case(figure, for)
obl(make, figure)
nummod(figure, 3)
cc(4, and)
conj(figure, 4)
aux:pass(apply, be)
root(ROOT, apply)
case(construction, to)
det(construction, the)
obl(apply, construction)
case(figure, of)
nmod(construction, figure)
nummod(figure, 5)
cc(6, and)
conj(5, 6)
cc(figure, as)
fixed(as, well)
fixed(as, as)
det(figure, all)
conj(construction, figure)
case(Appendix, in)
det(Appendix, the)
nmod(figure, Appendix)
punct(apply, .)
nummod(center, one)
compound(center, growth)
nsubj:pass(choose, center)
case(bone, in)
det(bone, a)
amod(bone, short)
nmod(center, bone)
punct(center, --)
amod(phalanx, distal)
appos(center, phalanx)
case(finger, of)
det(finger, the)
amod(finger, second)
nmod(phalanx, finger)
punct(choose, --)
aux:pass(choose, be)
root(ROOT, choose)
case(example, as)
det(example, a)
obl(choose, example)
case(discussion, for)
nmod(example, discussion)
advmod(discussion, here)
punct(choose, ,)
advmod(fusion, primarily)
case(fusion, because)
compound(diaphyseal, epiphyseal)
punct(diaphyseal, -)
compound(fusion, diaphyseal)
nmod(example, fusion)
punct(fusion, ,)
det(indicator, the)
compound(indicator, maturity)
appos(fusion, indicator)
case(completion, for)
nmod(indicator, completion)
case(bone, in)
amod(bone, long)
cc(short, and)
conj(long, short)
nmod(completion, bone)
punct(occur, ,)
acl:relcl(indicator, occur)
case(center, in)
det(center, this)
obl(occur, center)
case(girl, for)
obl(occur, girl)
case(menarche, near)
det(menarche, the)
nmod(girl, menarche)
cc(boy, and)
case(boy, for)
conj(menarche, boy)
case(stage, near)
nmod:poss(stage, they)
amod(stage, comparable)
amod(stage, pubescent)
nmod(boy, stage)
punct(choose, .)
nmod:poss(completion, its)
nsubj(become, completion)
advmod(become, thus)
root(ROOT, become)
xcomp(become, one)
case(indicator, of)
det(indicator, the)
amod(indicator, convenient)
compound(indicator, maturity)
nmod(one, indicator)
mark(include, to)
acl(indicator, include)
case(study, in)
obl(include, study)
case(growth, of)
nmod(study, growth)
punct(pattern, ,)
compound(pattern, dietary)
conj(growth, pattern)
punct(health, ,)
cc(health, and)
conj(growth, health)
case(adolescence, during)
obl(include, adolescence)
punct(one, .)
det(summary, the)
amod(summary, follow)
nsubj(example, summary)
punct(summary, ,)
case(figure, base)
case(figure, on)
nmod(summary, figure)
nummod(figure, 5)
cc(6, and)
conj(5, 6)
punct(example, ,)
cop(example, be)
det(example, a)
root(ROOT, example)
case(way, of)
nummod(way, one)
nmod(example, way)
mark(interpreting, of)
acl(way, interpreting)
det(figure, the)
nummod(figure, 42)
obj(interpreting, figure)
acl(figure, construct)
case(age, from)
compound(age, onset)
obl(construct, age)
cc(age, and)
compound(age, completion)
conj(age, age)
case(child, of)
amod(child, individual)
nmod(age, child)
case(respect, with)
obl(construct, respect)
case(age, to)
det(age, the)
amod(age, appropriate)
compound(age, mean)
nmod(respect, age)
case(center, for)
det(center, each)
compound(center, growth)
nmod(age, center)
punct(example, .)
case(top, at)
det(top, the)
obl(draw, top)
case(Figure, of)
nmod(top, Figure)
nummod(Figure, 5)
punct(draw, ,)
case(example, for)
obl(draw, example)
punct(draw, ,)
det(range, the)
compound(range, onset)
nsubj:pass(draw, range)
cc(line, and)
compound(range, completion)
compound(line, range)
conj(range, line)
case(center, for)
det(center, the)
amod(center, choose)
compound(center, growth)
nmod(line, center)
aux(draw, have)
aux:pass(draw, be)
root(ROOT, draw)
case(girl, for)
obl(draw, girl)
case(mean, accord)
fixed(accord, to)
nmod:poss(mean, they)
obl(draw, mean)
cc(value, and)
amod(value, standard)
compound(value, deviation)
conj(mean, value)
case(table, in)
nmod(value, table)
nummod(table, 1)
punct(arrow, .)
det(arrow, the)
nummod(arrow, 34)
nsubj:pass(array, arrow)
punct(arrow, ,)
acl(arrow, denote)
amod(age, onset)
obj(denote, age)
cc(deviation, plus)
compound(age, completion)
compound(deviation, age)
conj(age, deviation)
punct(array, ,)
aux(array, have)
aux:pass(array, be)
conj(draw, array)
case(sequence, in)
det(sequence, a)
compound(sequence, onset)
obl(array, sequence)
nsubj(begin, which)
acl:relcl(sequence, begin)
case(girl, with)
obl(begin, girl)
nummod(girl, 18)
nsubj(have, who)
acl:relcl(sequence, have)
det(onset, the)
amod(onset, earliest)
obj(have, onset)
case(girl, of)
det(girl, the)
nummod(girl, 34)
nmod(onset, girl)
punct(array, .)
det(center, the)
compound(center, growth)
nsubj(depict, center)
root(ROOT, depict)
advmod(depict, here)
punct(depict, ,)
case(phalanx, in)
det(phalanx, the)
amod(phalanx, distal)
obl(list, phalanx)
case(finger, of)
det(finger, the)
amod(finger, second)
nmod(phalanx, finger)
punct(list, ,)
aux:pass(list, be)
conj(depict, list)
case(fifth, as)
det(fifth, the)
obl(list, fifth)
case(those, of)
nmod(fifth, those)
case(bone, in)
det(bone, the)
nummod(bone, seven)
amod(bone, short)
nmod(those, bone)
punct(list, .)
det(age, the)
compound(age, mean)
compound(age, onset)
nsubj(month, age)
cop(month, be)
nummod(month, 25.3)
root(ROOT, month)
punct(table, ()
appos(month, table)
nummod(table, 1)
punct(table, ))
punct(month, ,)
cc(month, and)
det(Span, the)
amod(Span, average)
nsubj(month, Span)
case(stage, of)
det(stage, the)
amod(stage, osseous)
nmod(Span, stage)
cop(month, be)
nummod(month, 133)
conj(month, month)
punct(month, .)
det(correlation, the)
nsubj(-.50, correlation)
punct(table, ()
appos(correlation, table)
nummod(table, 2)
punct(table, ))
case(age, between)
compound(age, onset)
nmod(correlation, age)
cc(age, and)
compound(age, completion)
conj(age, age)
cop(-.50, be)
root(ROOT, -.50)
punct(10, ,)
cc(10, and)
nsubj(10, that)
case(age, between)
compound(age, onset)
nmod(that, age)
cc(Span, and)
conj(age, Span)
cop(10, be)
case(10, -.)
conj(-.50, 10)
punct(-.50, .)
case(consideration, with)
amod(consideration, due)
root(ROOT, consideration)
case(limit, for)
det(limit, the)
nmod(consideration, limit)
case(precision, of)
nmod(limit, precision)
case(assess, in)
nmod(precision, assess)
punct(rate, ,)
amod(rate, expect)
conj(limit, rate)
case(change, of)
nmod(rate, change)
case(ossification, in)
nmod(rate, ossification)
case(age, of)
compound(age, girl)
nmod(ossification, age)
nummod(year, 2)
nmod(age, year)
punct(variation, ,)
cc(variation, and)
det(variation, the)
amod(variation, know)
conj(rate, variation)
case(rate, in)
nmod(variation, rate)
case(ossification, of)
nmod(rate, ossification)
case(child, of)
det(child, these)
nmod(ossification, child)
mark(describe, as)
acl(variation, describe)
case(paper, in)
nmod:poss(paper, we)
amod(paper, precede)
obl(describe, paper)
case(supplement, in)
det(supplement, the)
nmod(paper, supplement)
punct(arrow, ,)
det(arrow, each)
appos(paper, arrow)
case(length, with)
det(length, a)
punct(length, ``)
compound(length, shaft)
nmod(arrow, length)
punct(length, '')
case(month, of)
nummod(month, four)
nmod(length, month)
cc(less, or)
conj(month, less)
aux:pass(select, be)
acl:relcl(length, select)
mark(indicate, as)
advcl(select, indicate)
punct(schedule, ``)
amod(schedule, same)
obj(indicate, schedule)
punct(schedule, '')
case(onset, at)
obl(indicate, onset)
cc(completion, and)
conj(onset, completion)
punct(indicate, ,)
case(epiphysis, for)
det(epiphysis, this)
amod(epiphysis, particular)
obl(indicate, epiphysis)
punct(select, .)
advmod(girl, accordingly)
punct(girl, ,)
nsubj:pass(say, girl)
nummod(girl, 31)
punct(29, ,)
conj(girl, 29)
punct(29, ,)
conj(girl, 33)
punct(21, ,)
conj(girl, 21)
punct(26, ,)
conj(girl, 26)
punct(13, ,)
compound(26, 13)
punct(3, ,)
compound(13, 3)
punct(4, ,)
compound(3, 4)
punct(14, ,)
compound(4, 14)
punct(32, ,)
compound(14, 32)
punct(24, ,)
nummod(32, 24)
punct(25, ,)
nummod(24, 25)
punct(34, ,)
nummod(25, 34)
punct(23, ,)
compound(34, 23)
punct(6, ,)
nummod(23, 6)
punct(15, ,)
nummod(6, 15)
punct(22, ,)
compound(15, 22)
punct(say, ,)
cc(16, and)
nsubj:pass(say, 16)
aux(say, may)
aux:pass(say, be)
root(ROOT, say)
mark(have, to)
xcomp(say, have)
det(schedule, the)
punct(schedule, ``)
amod(schedule, same)
obj(have, schedule)
punct(schedule, '')
case(onset, at)
obl(have, onset)
cc(completion, and)
conj(onset, completion)
punct(say, .)
nsubj(seem, it)
root(ROOT, seem)
xcomp(seem, clear)
punct(seem, ,)
case(shape, from)
det(shape, the)
compound(balance, counter)
punct(balance, -)
amod(shape, balance)
obl(seem, shape)
case(series, of)
det(series, the)
nmod(shape, series)
case(arrow, of)
nmod(series, arrow)
case(Figure, in)
nmod(series, Figure)
nummod(Figure, 5)
mark(be, that)
expl(be, there)
ccomp(seem, be)
case(number, about)
det(number, a)
amod(number, equal)
nsubj(be, number)
case(onset, of)
amod(onset, early)
cc(late, and)
conj(early, late)
nmod(number, onset)
cc(completion, and)
conj(onset, completion)
case(girl, for)
det(girl, the)
nummod(girl, 34)
nmod(completion, girl)
punct(completion, .)
advmod(occur, accordingly)
punct(occur, ,)
mark(occur, if)
amod(diaphyseal, epiphyseal)
punct(diaphyseal, -)
compound(fusion, diaphyseal)
nsubj(occur, fusion)
advcl(be, occur)
case(phalanx, in)
det(phalanx, this)
obl(occur, phalanx)
case(menarche, near)
obl(occur, menarche)
punct(occur, ,)
advmod(menarch, early)
cc(menarch, and)
amod(menarch, late)
nsubj:pass(forecast, menarch)
aux(forecast, might)
aux(forecast, have)
aux:pass(forecast, be)
conj(occur, forecast)
advmod(precisely, rather)
advmod(forecast, precisely)
case(time, at)
det(time, the)
obl(forecast, time)
case(onset, of)
nmod(time, onset)
case(ossification, of)
nmod(onset, ossification)
case(girl, for)
det(girl, the)
nummod(girl, 18)
nmod(onset, girl)
case(schedule, with)
punct(schedule, ``)
amod(schedule, same)
nmod(girl, schedule)
punct(schedule, '')
punct(schedule, .)
case(example, as)
det(example, a)
nmod(time, example)
case(interpretation, of)
det(interpretation, the)
nmod(example, interpretation)
case(arrow, of)
det(arrow, a)
nmod(interpretation, arrow)
case(figure, in)
det(figure, the)
nmod(arrow, figure)
nsubj(exceed, which)
acl:relcl(arrow, exceed)
nummod(month, four)
obj(exceed, month)
case(length, in)
compound(length, shaft)
obl(exceed, length)
case(conjunction, in)
obl(exceed, conjunction)
case(position, with)
nmod:poss(position, its)
nmod(conjunction, position)
case(figure, in)
det(figure, the)
nmod(position, figure)
punct(have, :)
nsubj(have, girl)
nsubj(have, 2)
parataxis(exceed, have)
det(onset, a)
amod(onset, delay)
obj(have, onset)
cc(completion, and)
advmod(delay, further)
amod(completion, delay)
conj(onset, completion)
punct(seem, .)
expl(interest, it)
cop(interest, be)
case(interest, of)
root(ROOT, interest)
mark(later, that)
nmod:poss(menarche, she)
nsubj(later, menarche)
cop(later, be)
advmod(later, somewhat)
ccomp(interest, later)
case(average, than)
det(average, the)
obl(later, average)
case(girl, for)
det(girl, the)
nmod(average, girl)
case(group, in)
det(group, this)
nmod(girl, group)
punct(interest, . )
det(analysis, a)
amod(analysis, similar)
nsubj(necessitate, analysis)
case(Figure, of)
nmod(analysis, Figure)
nummod(Figure, 6)
case(boy, for)
det(boy, the)
nummod(boy, 34)
nmod(Figure, boy)
aux(necessitate, would)
root(ROOT, necessitate)
det:predet(conclusion, quite)
det(conclusion, a)
amod(conclusion, different)
obj(necessitate, conclusion)
case(value, about)
det(value, the)
amod(value, predictive)
nmod(conclusion, value)
case(age, of)
amod(age, onset)
nmod(value, age)
mark(forecast, in)
acl(value, forecast)
nmod:poss(attainment, they)
obj(forecast, attainment)
case(stage, of)
det(stage, the)
amod(stage, pubescent)
nmod(attainment, stage)
punct(Boys, .)
appos(attainment, Boys)
nummod(Boys, 32)
punct(Boys, ,)
nummod(Boys, 23)
punct(Boys, ,)
nummod(Boys, 31)
punct(17, ,)
nummod(Boys, 17)
punct(30, ,)
conj(Boys, 30)
punct(19, ,)
nummod(30, 19)
punct(have, ,)
cc(have, and)
nsubj(have, 24)
conj(Boys, have)
punct(schedule, ``)
amod(schedule, same)
obj(have, schedule)
punct(schedule, '')
case(onset, at)
obl(have, onset)
cc(completion, and)
conj(onset, completion)
punct(have, ;)
punct(have, ;)
advmod(appear, thus)
amod(forecast, early)
nsubj(appear, forecast)
case(stage, of)
det(stage, the)
amod(stage, pubescent)
nmod(forecast, stage)
aux(appear, would)
parataxis(have, appear)
xcomp(appear, possible)
case(boy, for)
advmod(boy, only)
nummod(boy, seven)
obl(appear, boy)
punct(necessitate, .)
nsubj(have, Boy)
nummod(Boy, 34)
punct(Boy, ,)
case(girl, like)
nmod(Boy, girl)
nummod(girl, 2)
punct(have, ,)
aux(have, do)
advmod(have, not)
root(ROOT, have)
punct(schedule, ``)
amod(schedule, same)
obj(have, schedule)
punct(schedule, '')
punct(have, ;)
punct(have, ;)
nmod:poss(arrow, he)
nsubj(cross, arrow)
parataxis(have, cross)
det(line, the)
obj(cross, line)
acl(line, denote)
det(mean, the)
obj(denote, mean)
punct(have, .)
det(dot, the)
punct(dot, ``)
nsubj(indicate, dot)
punct(dot, '')
case(arrow, on)
nmod:poss(arrow, he)
nmod(dot, arrow)
root(ROOT, indicate)
amod(onset, early)
obj(indicate, onset)
cc(tip, and)
det(tip, the)
punct(tip, ``)
conj(onset, tip)
punct(tip, '')
conj(indicate, indicate)
advmod(later, relatively)
amod(completion, later)
obj(indicate, completion)
punct(indicate, .)
mark(draw, after)
det(figure, the)
nummod(figure, 42)
nsubj:pass(draw, figure)
aux(draw, have)
aux:pass(draw, be)
advcl(summarize, draw)
case(figure, like)
obl(draw, figure)
nummod(figure, 5)
cc(6, and)
conj(5, 6)
punct(summarize, ,)
nsubj:pass(summarize, classification)
case(age, of)
det(age, the)
compound(age, onset)
nmod(classification, age)
cc(age, and)
compound(age, completion)
conj(age, age)
aux:pass(summarize, be)
root(ROOT, summarize)
case(they, from)
obl(summarize, they)
punct(summarize, .)
advmod(enough, interestingly)
advmod(inhibit, enough)
punct(inhibit, ,)
det(effect, the)
nsubj:pass(inhibit, effect)
case(glycoside, of)
det(glycoside, the)
compound(glycoside, digitalis)
nmod(effect, glycoside)
aux:pass(inhibit, be)
root(ROOT, inhibit)
case(concentration, by)
det(concentration, a)
amod(concentration, high)
obl(inhibit, concentration)
case(potassium, of)
nmod(concentration, potassium)
case(medium, in)
det(medium, the)
compound(medium, incubation)
nmod(concentration, medium)
cc(enhance, and)
aux:pass(enhance, be)
conj(inhibit, enhance)
case(absence, by)
det(absence, the)
obl(enhance, absence)
case(potassium, of)
nmod(absence, potassium)
punct(Wolff, ()
appos(potassium, Wolff)
punct(Wolff, ,)
appos(Wolff, 1960)
punct(Wolff, ))
punct(organification, .)
nummod(organification, b)
punct(b, .)
nsubj(mechanism, organification)
case(iodine, of)
nmod(organification, iodine)
det(mechanism, the)
amod(mechanism, precise)
nsubj(be, mechanism)
case(organification, for)
nmod(mechanism, organification)
case(iodine, of)
nmod(organification, iodine)
case(thyroid, in)
det(thyroid, the)
nmod(iodine, thyroid)
conj(inhibit, be)
advmod(understand, not)
mark(understand, as)
advmod(understand, yet)
advmod(understand, completely)
advcl(be, understand)
punct(inhibit, .)
advmod(accomplish, however)
punct(accomplish, ,)
det(formation, the)
nsubj:pass(accomplish, formation)
case(iodine, of)
advmod(bound, organically)
amod(iodine, bound)
nmod(formation, iodine)
punct(iodine, ,)
advmod(iodotyrosine, mainly)
compound(iodotyrosine, mono)
punct(iodotyrosine, -)
appos(iodine, iodotyrosine)
punct(accomplish, ,)
aux(accomplish, can)
aux:pass(accomplish, be)
root(ROOT, accomplish)
case(system, in)
obl:npmod(free, cell)
punct(free, -)
amod(system, free)
obl(accomplish, system)
punct(accomplish, .)
case(absence, in)
det(absence, the)
obl(protein, absence)
case(addition, of)
nmod(absence, addition)
case(homogenate, to)
det(homogenate, the)
nmod(addition, homogenate)
punct(protein, ,)
det(product, the)
nsubj(protein, product)
acl(product, form)
cop(protein, be)
det(protein, a)
amod(protein, iodinate)
compound(protein, particulate)
root(ROOT, protein)
punct(Fawcett, ()
appos(protein, Fawcett)
cc(Kirkwood, and)
conj(Fawcett, Kirkwood)
punct(Fawcett, ,)
conj(Fawcett, 1953)
punct(Fawcett, ;)
punct(protein, ;)
conj(Fawcett, Taurog)
punct(Potter, ,)
conj(Taurog, Potter)
cc(Chaikoff, and)
conj(Taurog, Chaikoff)
punct(Chaikoff, ,)
nummod(Chaikoff, 1955)
punct(Taurog, ;)
punct(Taurog, ;)
conj(Taurog, Taurog)
punct(Potter, ,)
conj(Taurog, Potter)
punct(Tong, ,)
conj(Taurog, Tong)
punct(Chaikoff, ,)
cc(Chaikoff, and)
conj(Taurog, Chaikoff)
punct(Chaikoff, ,)
appos(Chaikoff, 1956)
punct(Chaikoff, ;)
punct(Serif, ;)
appos(Taurog, Serif)
cc(Kirkwood, and)
conj(Serif, Kirkwood)
punct(Serif, ,)
appos(Serif, 1958)
punct(Serif, ;)
punct(De, ;)
nsubj(appear, De)
flat(De, Groot)
cc(Carvalho, and)
conj(De, Carvalho)
punct(Carvalho, ,)
appos(Carvalho, 1960)
punct(De, ))
punct(appear, .)
det(iodoprotein, this)
nsubj(appear, iodoprotein)
aux(appear, do)
advmod(appear, not)
parataxis(protein, appear)
mark(same, to)
cop(same, be)
det(same, the)
xcomp(appear, same)
mark(present, as)
nsubj(present, what)
cop(present, be)
advmod(present, normally)
advcl(same, present)
case(thyroid, in)
det(thyroid, the)
obl(present, thyroid)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(appear, be)
det(evidence, no)
nsubj(be, evidence)
advmod(far, so)
advmod(be, far)
mark(iodinate, that)
nsubj:pass(iodinate, thyroglobulin)
aux(iodinate, can)
aux:pass(iodinate, be)
acl(evidence, iodinate)
case(vitro, in)
obl(iodinate, vitro)
case(system, by)
obl:npmod(free, cell)
punct(free, -)
amod(system, free)
obl(iodinate, system)
punct(protein, .)
case(addition, in)
obl(di-iodotyrosine, addition)
punct(di-iodotyrosine, ,)
det(acid, the)
compound(acid, iodoamino)
nsubj(di-iodotyrosine, acid)
acl(acid, form)
case(quantity, in)
amod(quantity, largest)
obl(form, quantity)
case(thyroid, in)
det(thyroid, the)
amod(thyroid, intact)
nmod(quantity, thyroid)
cop(di-iodotyrosine, be)
root(ROOT, di-iodotyrosine)
punct(di-iodotyrosine, .)
mark(add, if)
nsubj:pass(add, tyrosine)
cc(system, and)
det(system, a)
conj(tyrosine, system)
acl(system, generate)
compound(peroxide, hydrogen)
obj(generate, peroxide)
aux:pass(add, be)
advcl(form, add)
case(homogenate, to)
det(homogenate, a)
obl:npmod(free, cell)
punct(free, -)
amod(homogenate, free)
obl(add, homogenate)
case(thyroid, of)
det(thyroid, the)
nmod(homogenate, thyroid)
punct(form, ,)
amod(quantity, large)
nsubj:pass(form, quantity)
case(dotyrosine, of)
amod(dotyrosine, free)
compound(io, mono)
punct(io, -)
compound(dotyrosine, io)
nmod(quantity, dotyrosine)
aux(form, can)
aux:pass(form, be)
root(ROOT, form)
punct(Alexander, ()
obj(form, Alexander)
punct(Alexander, ,)
nummod(Alexander, 1959)
punct(Alexander, ))
punct(form, .)
expl(clear, it)
cop(clear, be)
advmod(clear, not)
root(ROOT, clear)
mark(bear, whether)
det(system, this)
nsubj(bear, system)
csubj(clear, bear)
det(resemblance, any)
obj(bear, resemblance)
case(mechanism, to)
det(mechanism, the)
case(mechanism, in)
compound(iodinate, vivo)
compound(mechanism, iodinate)
nmod(resemblance, mechanism)
punct(identify, ,)
cc(identify, and)
det(peroxide, a)
compound(peroxide, system)
compound(peroxide, generating)
nsubj:pass(identify, peroxide)
aux(identify, have)
advmod(identify, not)
aux:pass(identify, be)
conj(bear, identify)
case(tissue, in)
compound(tissue, thyroid)
obl(identify, tissue)
punct(clear, .)
case(grounds, on)
amod(grounds, chemical)
obl(seem, grounds)
expl(seem, it)
root(ROOT, seem)
advmod(likely, most)
xcomp(seem, likely)
mark(converted, that)
nsubj:pass(converted, iodide)
aux:pass(converted, be)
advmod(converted, first)
ccomp(likely, converted)
case(Af, to)
obl(converted, Af)
cc(Af, and)
advmod(Af, then)
case(Af, to)
conj(Af, Af)
case(species, as)
det(species, the)
amod(species, active)
compound(species, iodinate)
nmod(Af, species)
punct(seem, .)
case(gland, in)
det(gland, the)
compound(gland, thyroid)
obl(appear, gland)
expl(appear, it)
root(ROOT, appear)
mark(iodinate, that)
nsubj:pass(iodinate, protein)
punct(thyroglobulin, ()
amod(thyroglobulin, chiefly)
appos(protein, thyroglobulin)
punct(thyroglobulin, ))
aux:pass(iodinate, be)
ccomp(appear, iodinate)
cc(iodinate, and)
mark(iodinate, that)
amod(tyrosine, free)
nsubj:pass(iodinate, tyrosine)
cc(thyronine, and)
conj(tyrosine, thyronine)
aux:pass(iodinate, be)
advmod(iodinate, not)
conj(iodinate, iodinate)
punct(appear, .)
nsubj(enough, Iodination)
case(tyrosine, of)
nmod(Iodination, tyrosine)
punct(enough, ,)
advmod(enough, however)
punct(enough, ,)
cop(enough, be)
advmod(enough, not)
root(ROOT, enough)
case(synthesis, for)
det(synthesis, the)
obl(enough, synthesis)
case(hormone, of)
nmod(synthesis, hormone)
punct(enough, .)
det(iodotyrosine, the)
compound(iodotyrosine, mono)
punct(mono, -)
cc(iodotyrosine, and)
compound(iodotyrosine, di)
punct(iodotyrosine, -)
nsubj:pass(couple, iodotyrosine)
aux(couple, must)
aux:pass(couple, be)
root(ROOT, couple)
mark(form, to)
advcl(couple, form)
obj(form, tri-iodothyronine)
cc(thyroxine, and)
conj(tri-iodothyronine, thyroxine)
punct(couple, .)
det(mechanism, the)
nsubj:pass(study, mechanism)
case(couple, of)
det(couple, this)
nmod(mechanism, couple)
aux(study, have)
aux:pass(study, be)
root(ROOT, study)
case(detail, in)
det(detail, some)
obl(study, detail)
case(system, with)
amod(system, non-enzymatic)
nmod(detail, system)
case(vitro, in)
nmod(system, vitro)
cc(simulate, and)
aux(simulate, can)
aux:pass(simulate, be)
conj(study, simulate)
case(analogue, by)
amod(analogue, certain)
compound(iodotyrosine, di)
punct(iodotyrosine, -)
compound(analogue, iodotyrosine)
obl(simulate, analogue)
punct(Pitt, ()
root(ROOT, Pitt)
punct(Pitt, -)
appos(Pitt, Rivers)
cc(James, and)
conj(Rivers, James)
punct(Pitt, ,)
list(Pitt, 1958)
punct(Pitt, ))
punct(Pitt, .)
expl(be, there)
root(ROOT, be)
advmod(far, so)
advmod(be, far)
det(evidence, no)
nsubj(be, evidence)
mark(indicate, to)
acl(evidence, indicate)
advmod(indicate, conclusively)
mark(control, that)
det(couple, this)
nsubj(control, couple)
cop(control, be)
case(control, under)
amod(control, enzymatic)
ccomp(indicate, control)
punct(be, .)
det(nature, the)
amod(nature, chemical)
nsubj:pass(discuss, nature)
case(iodocompound, of)
det(iodocompound, the)
nmod(nature, iodocompound)
aux:pass(discuss, be)
root(ROOT, discuss)
advmod(discuss, below)
punct(pp., ()
appos(discuss, pp.)
nummod(pp., 76)
compound(seq, et)
appos(pp., seq)
punct(pp., .)
punct(pp., ))
punct(know, . )
nummod(know, c)
punct(c, .)
compound(synthesis, Thyroglobulin)
nsubj:pass(know, synthesis)
nsubj:pass(know, Little)
aux:pass(know, be)
conj(discuss, know)
case(mechanism, of)
det(mechanism, the)
amod(mechanism, synthetic)
obl(know, mechanism)
case(formation, for)
nmod(mechanism, formation)
case(thyroglobulin, of)
nmod(formation, thyroglobulin)
punct(know, .)
nmod:poss(synthesis, its)
nsubj:pass(demonstrate, synthesis)
aux(demonstrate, have)
advmod(demonstrate, not)
aux:pass(demonstrate, be)
root(ROOT, demonstrate)
case(system, in)
obl:npmod(free, cell)
punct(free, -)
amod(system, free)
obl(demonstrate, system)
punct(have, ,)
cc(have, nor)
conj(demonstrate, have)
nmod:poss(synthesis, its)
obj(have, synthesis)
case(system, by)
nmod(synthesis, system)
case(cell, with)
amod(cell, intact)
compound(cell, thyroid)
nmod(system, cell)
case(vitro, in)
nmod(cell, vitro)
aux:pass(prove, be)
advmod(prove, unequivocally)
advcl(have, prove)
punct(demonstrate, .)
expl(be, there)
root(ROOT, be)
det(reason, some)
nsubj(be, reason)
mark(think, to)
acl(reason, think)
mark(proceed, that)
amod(synthesis, thyroglobulin)
nsubj(proceed, synthesis)
aux(proceed, may)
ccomp(think, proceed)
advmod(proceed, independently)
case(iodination, of)
obl(proceed, iodination)
punct(proceed, ,)
case(tumour, for)
case(tumour, in)
amod(tumour, certain)
amod(tumour, transplantable)
obl(proceed, tumour)
case(thyroid, of)
det(thyroid, the)
compound(thyroid, rat)
nmod(tumour, thyroid)
acl(thyroid, contain)
advmod(contain, essentially)
det(thyroglobulin, no)
amod(thyroglobulin, iodinate)
obj(contain, thyroglobulin)
punct(protein, ,)
det(protein, a)
appos(thyroglobulin, protein)
nsubj(appear, that)
acl:relcl(protein, appear)
mark(thyroglobulin, to)
aux:pass(thyroglobulin, be)
xcomp(appear, thyroglobulin)
aux(observe, have)
aux:pass(observe, be)
conj(appear, observe)
case(experiment, in)
amod(experiment, ultracentrifuge)
obl(observe, experiment)
punct(Wolff, ()
appos(experiment, Wolff)
punct(Robbins, ,)
conj(Wolff, Robbins)
cc(Rall, and)
conj(Wolff, Rall)
punct(Wolff, ,)
conj(Wolff, 1959)
punct(Wolff, ))
punct(note, .)
amod(finding, Similar)
nsubj:pass(note, finding)
aux(note, have)
aux:pass(note, be)
acl:relcl(experiment, note)
case(patient, in)
det(patient, a)
obl(note, patient)
case(absence, with)
amod(absence, congenital)
nmod(patient, absence)
case(enzyme, of)
det(enzyme, the)
compound(enzyme, organification)
nmod(absence, enzyme)
punct(enzyme, ,)
nmod:poss(tissue, whose)
compound(tissue, thyroid)
nsubj(concentrate, tissue)
aux(concentrate, could)
advmod(concentrate, only)
acl:relcl(enzyme, concentrate)
obj(concentrate, iodide)
punct(be, .)
case(addition, in)
obl(contain, addition)
punct(contain, ,)
case(availability, depend)
case(availability, on)
obl(contain, availability)
case(iodine, of)
compound(iodine, dietary)
nmod(availability, iodine)
punct(contain, ,)
nsubj(contain, thyroglobulin)
aux(contain, may)
root(ROOT, contain)
amod(quantity, varying)
obj(contain, quantity)
case(iodine, of)
nmod(quantity, iodine)
punct(contain, . )
nummod(clear, D)
punct(D, .)
nsubj(clear, secretion)
mark(thyroxine, since)
det(hormone, the)
amod(hormone, circulate)
compound(hormone, thyroid)
nsubj(thyroxine, hormone)
cop(thyroxine, be)
det(thyroxine, the)
compound(acid, amino)
compound(thyroxine, acid)
advcl(clear, thyroxine)
cc(tri-iodothyronine, and)
conj(thyroxine, tri-iodothyronine)
punct(c, ()
punct(c, cf.)
compound(c, section)
appos(thyroxine, c)
punct(c, ))
punct(clear, ,)
expl(clear, it)
cop(clear, be)
root(ROOT, clear)
mark(exist, that)
det(mechanism, some)
nsubj(exist, mechanism)
aux(exist, must)
csubj(clear, exist)
case(gland, in)
det(gland, the)
compound(gland, thyroid)
obl(exist, gland)
case(release, for)
nmod:poss(release, they)
obl(exist, release)
case(protein, from)
nmod(release, protein)
case(secretion, before)
nmod(release, secretion)
punct(clear, .)
det(presence, the)
nsubj:pass(demonstrate, presence)
case(protease, of)
amod(protease, several)
nmod(presence, protease)
cc(peptidase, and)
conj(protease, peptidase)
aux(demonstrate, have)
aux:pass(demonstrate, be)
root(ROOT, demonstrate)
case(thyroid, in)
det(thyroid, the)
obl(demonstrate, thyroid)
punct(demonstrate, .)
nsubj(have, one)
case(protease, of)
det(protease, the)
nmod(one, protease)
root(ROOT, have)
compound(optimum, p)
compound(optimum, h)
obj(have, optimum)
case(3.7, of)
advmod(3.7, about)
nmod(optimum, 3.7)
cc(another, and)
conj(optimum, another)
case(5.7, of)
advmod(5.7, about)
nmod(another, 5.7)
punct(McQuillan, ()
appos(5.7, McQuillan)
punct(stanley, ,)
conj(McQuillan, stanley)
cc(Trikojus, and)
conj(McQuillan, Trikojus)
punct(Trikojus, ,)
appos(McQuillan, 1954)
punct(McQuillan, ;)
punct(alper, ;)
conj(McQuillan, alper)
punct(Robbins, ,)
conj(alper, Robbins)
cc(Rall, and)
conj(alper, Rall)
punct(alper, ,)
nmod:tmod(alper, 1955)
punct(alper, ))
punct(have, .)
det(finding, the)
nsubj(suggest, finding)
mark(increase, that)
det(concentration, the)
nsubj:pass(increase, concentration)
case(one, of)
nmod(concentration, one)
case(protease, of)
det(protease, these)
nmod(one, protease)
aux:pass(increase, be)
acl(finding, increase)
case(gland, in)
compound(gland, thyroid)
obl(increase, gland)
case(animal, from)
compound(treat, tsh)
punct(treat, -)
amod(animal, treat)
nmod(gland, animal)
root(ROOT, suggest)
mark(active, that)
det(protease, this)
nsubj(active, protease)
aux(active, may)
cop(active, be)
ccomp(suggest, active)
case(vivo, in)
obl(active, vivo)
punct(suggest, .)
expl(be, there)
root(ROOT, be)
det(evidence, no)
amod(evidence, conclusive)
nsubj(be, evidence)
advmod(be, yet)
mark(prepare, that)
nsubj:pass(prepare, either)
case(protease, of)
det(protease, the)
nmod(either, protease)
aux(prepare, have)
aux:pass(prepare, be)
acl(evidence, prepare)
case(form, in)
advmod(purify, highly)
amod(form, purify)
obl(prepare, form)
cc(know, nor)
cop(know, be)
nmod:poss(specificity, they)
nsubj(know, specificity)
conj(prepare, know)
punct(be, . )
det(study, a)
nsubj(show, study)
case(activity, of)
nmod:poss(activity, they)
nmod(study, activity)
case(thyroglobulin, on)
nmod(activity, thyroglobulin)
aux(show, have)
root(ROOT, show)
mark(release, that)
nsubj:pass(release, thyroxine)
aux:pass(release, be)
advmod(release, not)
advmod(release, preferentially)
ccomp(show, release)
cc(proceed, and)
mark(proceed, that)
det(degradation, the)
nsubj(proceed, degradation)
conj(release, proceed)
obj(proceed, stepwise)
case(formation, with)
det(formation, the)
nmod(stepwise, formation)
case(intermediate, of)
amod(intermediate, macromolecular)
nmod(formation, intermediate)
punct(alper, ()
appos(intermediate, alper)
punct(Petermann, ,)
conj(alper, Petermann)
cc(Rall, and)
conj(alper, Rall)
punct(Rall, ,)
conj(alper, 1956)
punct(alper, ))
punct(alper, .)
case(enzyme, besides)
amod(enzyme, proteolytic)
nmod(formation, enzyme)
det(thyroid, the)
nsubj(possess, thyroid)
acl:relcl(enzyme, possess)
advcl(possess, de-iodinating)
obj(de-iodinating, enzyme)
punct(show, . )
det(de-iodinase, a)
amod(de-iodinase, microsomal)
nsubj:pass(identify, de-iodinase)
case(optimum, with)
det(optimum, a)
compound(optimum, ph)
nmod(de-iodinase, optimum)
case(8, of)
advmod(8, around)
nmod(optimum, 8)
punct(require, ,)
cc(require, and)
conj(optimum, require)
amod(nucleotide, reduce)
compound(nucleotide, triphosphopyridine)
obj(require, nucleotide)
case(activity, for)
nmod(nucleotide, activity)
punct(identify, ,)
aux(identify, have)
aux:pass(identify, be)
root(ROOT, identify)
case(thyroid, in)
det(thyroid, the)
obl(identify, thyroid)
punct(Stanbury, ()
appos(thyroid, Stanbury)
punct(Stanbury, ,)
appos(Stanbury, 1957)
punct(Stanbury, ))
punct(effective, .)
det(enzyme, this)
compound(enzyme, de-iodinating)
nsubj(effective, enzyme)
cop(effective, be)
parataxis(identify, effective)
case(mono, against)
obl(effective, mono)
punct(mono, -)
cc(di-iodotyrosine, and)
conj(mono, di-iodotyrosine)
punct(de-iodinate, ,)
cc(de-iodinate, but)
aux(de-iodinate, do)
advmod(de-iodinate, not)
conj(effective, de-iodinate)
obj(de-iodinate, thyroxine)
cc(tri-iodothyronine, or)
conj(thyroxine, tri-iodothyronine)
punct(identify, .)
nsubj:pass(assume, it)
aux:pass(assume, be)
root(ROOT, assume)
mark(remain, that)
det(iodine, the)
nsubj(remain, iodine)
acl(iodine, release)
case(iodotyrosine, from)
det(iodotyrosine, the)
obl(release, iodotyrosine)
ccomp(assume, remain)
case(pool, in)
det(pool, the)
compound(pool, iodide)
obl(remain, pool)
case(thyroid, of)
det(thyroid, the)
nmod(pool, thyroid)
punct(thyroid, ,)
advmod(oxidise, where)
nsubj:pass(oxidise, it)
aux:pass(oxidise, be)
acl:relcl(thyroid, oxidise)
cc(re-incorated, and)
conj(oxidise, re-incorated)
case(thyroglobulin, into)
obl(oxidise, thyroglobulin)
punct(assume, .)
det(thyroxine, the)
nsubj(diffuse, thyroxine)
cc(tri-iodothyronine, and)
conj(thyroxine, tri-iodothyronine)
acl(thyroxine, release)
case(proteolysis, by)
obl(release, proteolysis)
cc(de-iodination, and)
advmod(escape, so)
amod(de-iodination, escape)
obl(release, de-iodination)
advmod(diffuse, presumably)
root(ROOT, diffuse)
case(stream, into)
det(stream, the)
compound(stream, blood)
obl(diffuse, stream)
punct(diffuse, .)
nsubj:pass(show, it)
aux(show, have)
aux:pass(show, be)
root(ROOT, show)
mark(bind, that)
nsubj(bind, thyroglobulin)
ccomp(show, bind)
obj(bind, thyroxine)
punct(appear, ,)
cc(appear, but)
det(bind, the)
nsubj(appear, bind)
aux(appear, do)
advmod(appear, not)
conj(show, appear)
mark(strong, to)
cop(strong, be)
advmod(strong, particularly)
xcomp(appear, strong)
punct(show, .)
nsubj:pass(suggest, it)
aux(suggest, have)
aux:pass(suggest, be)
root(ROOT, suggest)
mark(protein, that)
det(protein, the)
compound(protein, plasma)
compound(bind, thyroxine)
punct(bind, -)
compound(protein, bind)
nsubj:pass(suggest, protein)
punct(protein, ,)
nsubj(have, which)
acl:relcl(protein, have)
det(affinity, a)
advmod(high, extremely)
amod(affinity, high)
obj(have, affinity)
case(thyroxine, for)
nmod(affinity, thyroxine)
punct(compete, ,)
conj(have, compete)
case(thyroglobulin, with)
obl(compete, thyroglobulin)
case(thyroxine, for)
obl(compete, thyroxine)
punct(Ingbar, ()
appos(thyroxine, Ingbar)
cc(Freinkel, and)
conj(Ingbar, Freinkel)
punct(Ingbar, ,)
nmod:tmod(Ingbar, 1957)
punct(Ingbar, ))
punct(e, .)
nmod:tmod(Ingbar, e)
punct(suggest, .)
compound(drug, antithyroid)
nsubj(type, drug)
compound(drug, antithyroid)
conj(drug, drug)
cop(type, be)
case(type, of)
nummod(type, two)
amod(type, general)
root(ROOT, type)
punct(type, .)
nummod(type, one)
nsubj(have, type)
root(ROOT, have)
det(anion, a)
amod(anion, small)
amod(anion, univalent)
obj(have, anion)
case(type, of)
det(type, the)
compound(fluoro, thiocyanate)
punct(fluoro, -)
compound(fluoro, perchlorate)
punct(fluoro, -)
compound(type, fluoro)
nmod(anion, type)
punct(have, .)
det(ion, this)
nsubj(inhibit, ion)
root(ROOT, inhibit)
compound(synthesis, thyroid)
compound(synthesis, hormone)
obj(inhibit, synthesis)
mark(interfere, by)
advcl(inhibit, interfere)
case(concentration, with)
compound(concentration, iodide)
obl(interfere, concentration)
case(thyroid, in)
det(thyroid, the)
obl(interfere, thyroid)
punct(inhibit, .)
nsubj(appear, it)
aux(appear, do)
advmod(appear, not)
root(ROOT, appear)
mark(affect, to)
xcomp(appear, affect)
det(mechanism, the)
compound(mechanism, iodinate)
obj(affect, mechanism)
case(such, as)
obl(affect, such)
punct(appear, .)
det(group, the)
amod(group, other)
nsubj:pass(typify, group)
case(agent, of)
amod(agent, antithyroid)
nmod(group, agent)
cc(drug, or)
conj(agent, drug)
aux:pass(typify, be)
root(ROOT, typify)
case(thiouracil, by)
obl(typify, thiouracil)
punct(typify, .)
det(drug, these)
nsubj(have, drug)
root(ROOT, have)
det(effect, no)
obj(have, effect)
case(mechanism, on)
det(mechanism, the)
compound(mechanism, iodide)
compound(mechanism, concentrate)
nmod(effect, mechanism)
punct(inhibit, ,)
cc(inhibit, but)
nsubj(inhibit, they)
conj(have, inhibit)
obj(inhibit, organification)
punct(have, .)
det(mechanism, the)
nsubj:pass(work, mechanism)
case(action, of)
nmod(mechanism, action)
case(drug, of)
det(drug, these)
nmod(action, drug)
aux(work, have)
advmod(work, not)
aux:pass(work, be)
advmod(work, completely)
root(ROOT, work)
compound:prt(work, out)
punct(appear, ,)
cc(appear, but)
nsubj(appear, certain)
case(they, of)
nmod(certain, they)
conj(work, appear)
mark(act, to)
xcomp(appear, act)
mark(reduce, by)
advcl(act, reduce)
det(form, the)
amod(form, oxidise)
obj(reduce, form)
case(iodine, of)
nmod(form, iodine)
mark(iodinate, before)
nsubj(iodinate, it)
aux(iodinate, can)
advcl(reduce, iodinate)
obj(iodinate, thyroglobulin)
punct(astwood, ()
parataxis(iodinate, astwood)
punct(astwood, ,)
appos(astwood, 1954)
punct(astwood, ))
punct(work, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(be, hand)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(drug, a)
amod(drug, few)
amod(drug, antithyroid)
nsubj(be, drug)
case(type, of)
det(type, this)
amod(type, same)
amod(type, general)
nmod(drug, type)
punct(type, ,)
case(resorcinol, such)
fixed(such, as)
nmod(type, resorcinol)
punct(possess, ,)
acl(resorcinol, possess)
det(activity, no)
compound(activity, reduce)
obj(possess, activity)
cc(act, and)
advmod(act, possibly)
conj(possess, act)
case(formation, through)
obl(act, formation)
case(complex, of)
det(complex, a)
nmod(formation, complex)
case(iodine, with)
amod(iodine, molecular)
nmod(complex, iodine)
punct(be, .)
nsubj(cause, any)
case(drug, of)
det(drug, the)
amod(drug, antithyroid)
nmod(any, drug)
punct(drug, ,)
case(type, of)
det(type, either)
nmod(any, type)
punct(cause, ,)
mark(give, if)
advcl(cause, give)
case(dose, in)
amod(dose, large)
amod(dose, enough)
obl(give, dose)
case(period, for)
det(period, a)
amod(period, long)
nmod(dose, period)
case(time, of)
nmod(period, time)
aux(cause, will)
root(ROOT, cause)
obj(cause, goitre)
punct(cause, ,)
advcl(cause, ow)
case(inhibition, to)
obl(ow, inhibition)
case(synthesis, of)
compound(synthesis, thyroid)
compound(synthesis, hormone)
nmod(inhibition, synthesis)
punct(inhibition, ,)
case(production, with)
obl(ow, production)
case(hypothyroidism, of)
nmod(production, hypothyroidism)
punct(cause, .)
det(lobe, the)
amod(lobe, anterior)
nsubj(respond, lobe)
case(pituitary, of)
det(pituitary, the)
nmod(lobe, pituitary)
advmod(respond, then)
root(ROOT, respond)
case(output, by)
det(output, a)
amod(output, increase)
obl(respond, output)
case(tsh, of)
nmod(output, tsh)
punct(respond, ,)
advcl(respond, cause)
det(thyroid, the)
obj(cause, thyroid)
mark(enlarge, to)
xcomp(cause, enlarge)
punct(respond, .)
det(effect, the)
nsubj:pass(counteract, effect)
case(drug, of)
nmod(effect, drug)
nsubj(act, that)
acl:relcl(drug, act)
case(mechanism, on)
det(mechanism, the)
compound(concentrate, iodide)
punct(concentrate, -)
compound(mechanism, concentrate)
obl(act, mechanism)
aux(counteract, can)
aux:pass(counteract, be)
root(ROOT, counteract)
case(addition, by)
obl(counteract, addition)
case(amount, of)
advmod(large, relatively)
amod(amount, large)
nmod(addition, amount)
case(iodine, of)
nmod(amount, iodine)
case(diet, to)
det(diet, the)
nmod(iodine, diet)
punct(counteract, .)
det(drug, the)
amod(drug, antithyroid)
nsubj:pass(antagonise, drug)
case(type, of)
det(type, the)
compound(type, thiouracil)
nmod(drug, type)
punct(antagonise, ,)
advmod(antagonise, however)
punct(antagonise, ,)
aux:pass(antagonise, be)
advmod(antagonise, not)
root(ROOT, antagonise)
case(means, by)
amod(means, such)
obl(antagonise, means)
punct(antagonise, .)
case(those, besides)
obl(find, those)
case(type, of)
det(type, the)
compound(type, thiouracil)
cc(resorcinol, and)
conj(thiouracil, resorcinol)
nmod(those, type)
punct(find, ,)
amod(drug, certain)
compound(drug, antithyroid)
nsubj:pass(find, drug)
aux(find, have)
aux:pass(find, be)
root(ROOT, find)
mark(occur, in)
advmod(occur, naturally)
advcl(find, occur)
obj(occur, food)
punct(find, .)
det(oxazolidone, the)
advmod(conclusively, most)
advmod(identify, conclusively)
amod(oxazolidone, identify)
cop(oxazolidone, be)
compound(vinyl, L-5)
punct(vinyl, -)
compound(oxazolidone, vinyl)
punct(oxazolidone, -)
nummod(vinyl, 2)
punct(oxazolidone, -)
compound(oxazolidone, thio)
punct(oxazolidone, -)
root(ROOT, oxazolidone)
punct(oxazolidone, ,)
nsubj:pass(isolate, which)
aux:pass(isolate, be)
acl:relcl(oxazolidone, isolate)
case(rutabaga, from)
obl(isolate, rutabaga)
punct(greer, ()
appos(isolate, greer)
punct(greer, ,)
appos(greer, 1950)
punct(greer, ))
punct(oxazolidone, .)
nsubj:pass(presume, it)
aux:pass(presume, be)
root(ROOT, presume)
mark(occur, to)
xcomp(presume, occur)
case(member, in)
amod(member, other)
obl(occur, member)
case(family, of)
det(family, the)
compound(family, Brassica)
nmod(member, family)
punct(presume, .)
expl(be, there)
root(ROOT, be)
det(evidence, some)
nsubj(be, evidence)
mark(play, that)
advmod(occur, naturally)
amod(goitrogen, occur)
nsubj(play, goitrogen)
aux(play, may)
acl(evidence, play)
det(role, a)
obj(play, role)
case(development, in)
det(development, the)
nmod(role, development)
case(goitre, of)
nmod(development, goitre)
punct(development, ,)
advmod(Tasmania, particularly)
case(Tasmania, in)
obl(play, Tasmania)
cc(Australia, and)
conj(Tasmania, Australia)
punct(Clements, ()
appos(Tasmania, Clements)
cc(Wishart, and)
conj(Clements, Wishart)
punct(Clements, ,)
nmod:tmod(Clements, 1956)
punct(Clements, ))
punct(be, .)
advmod(seem, there)
expl(seem, it)
root(ROOT, seem)
mark(inactive, that)
det(goitrogen, the)
nsubj(inactive, goitrogen)
acl(goitrogen, ingest)
case(animal, by)
compound(animal, dairy)
obl(ingest, animal)
cop(inactive, be)
obl:npmod(inactive, itself)
ccomp(seem, inactive)
cc(converted, but)
aux:pass(converted, be)
conj(inactive, converted)
case(animal, in)
det(animal, the)
obl(converted, animal)
case(goitrogen, to)
det(goitrogen, a)
amod(goitrogen, active)
obl(converted, goitrogen)
punct(goitrogen, ,)
nsubj:pass(secrete, which)
aux:pass(secrete, be)
advmod(secrete, then)
acl:relcl(goitrogen, secrete)
case(milk, in)
det(milk, the)
obl(secrete, milk)
punct(seem, . )
nummod(play, F)
punct(F, .)
compound(influence, Dietary)
nsubj(play, influence)
case(presence, besides)
det(presence, the)
nmod(influence, presence)
case(goitrogen, of)
nmod(presence, goitrogen)
case(diet, in)
det(diet, the)
nmod(presence, diet)
punct(play, ,)
det(level, the)
nsubj(play, level)
case(iodine, of)
nmod(level, iodine)
nmod:npmod(iodine, itself)
case(diet, in)
det(diet, the)
nmod(level, diet)
root(ROOT, play)
det(role, a)
amod(role, major)
obj(play, role)
mark(govern, in)
acl(role, govern)
det(activity, the)
obj(govern, activity)
case(gland, of)
det(gland, the)
compound(gland, thyroid)
nmod(activity, gland)
punct(play, .)
case(animal, in)
det(animal, the)
amod(animal, experimental)
obl(cause, animal)
cc(man, and)
case(man, in)
nmod:poss(deficiency, man)
amod(deficiency, gross)
nsubj(cause, deficiency)
case(iodine, in)
compound(iodine, dietary)
nmod(deficiency, iodine)
root(ROOT, cause)
compound(hyperplasia, thyroid)
obj(cause, hyperplasia)
punct(hypertrophy, ,)
conj(hyperplasia, hypertrophy)
cc(activity, and)
amod(activity, increase)
compound(activity, thyroid)
conj(hyperplasia, activity)
punct(money, ()
appos(hyperplasia, money)
punct(Rall, ,)
conj(money, Rall)
cc(Rawson, and)
conj(money, Rawson)
punct(Rawson, ,)
conj(money, 1952)
punct(money, ;)
punct(Stanbury, ;)
conj(hyperplasia, Stanbury)
punct(Brownell, ,)
conj(Stanbury, Brownell)
punct(Riggs, ,)
conj(Stanbury, Riggs)
punct(perinetti, ,)
conj(Stanbury, perinetti)
punct(Itoiz, ,)
conj(Stanbury, Itoiz)
punct(Del, ,)
cc(Del, and)
conj(Stanbury, Del)
flat(Del, Castillo)
punct(Del, ,)
appos(Del, 1954)
punct(Del, ))
punct(cause, .)
case(man, in)
obl(ymg, man)
det(level, the)
amod(level, normal)
nsubj(ymg, level)
case(iodine, of)
nmod(level, iodine)
case(diet, in)
det(diet, the)
nmod(level, diet)
cc(level, and)
det(level, the)
conj(level, level)
amod(level, necessary)
mark(prevent, to)
advcl(necessary, prevent)
obj(prevent, development)
case(goitre, of)
nmod(development, goitre)
cop(ymg, be)
advmod(100, about)
nummod(ymg, 100)
punct(ymg, **)
root(ROOT, ymg)
case(day, per)
nmod(ymg, day)
punct(ymg, .)
case(level, with)
amod(level, lower)
obl(enable, level)
punct(hypertrophy, ,)
compound(hypertrophy, thyroid)
conj(level, hypertrophy)
cc(blood, and)
amod(blood, increase)
compound(blood, thyroid)
conj(hypertrophy, blood)
punct(enable, -)
nsubj(enable, flow)
root(ROOT, enable)
det(thyroid, the)
obj(enable, thyroid)
mark(accumulate, to)
xcomp(enable, accumulate)
det(proportion, a)
amod(proportion, larger)
obj(accumulate, proportion)
case(intake, of)
det(intake, the)
amod(intake, daily)
nmod(proportion, intake)
case(iodine, of)
nmod(intake, iodine)
punct(enable, . )
advmod(able, further)
punct(able, ,)
det(gland, the)
nsubj(able, gland)
cop(able, be)
root(ROOT, able)
mark(re-use, to)
xcomp(able, re-use)
det(fraction, a)
amod(fraction, larger)
obj(re-use, fraction)
case(hormone, of)
det(hormone, the)
compound(hormone, thyroid)
nmod(fraction, hormone)
acl(hormone, de-iodinate)
advmod(de-iodinate, peripherally)
punct(able, .)
case(presence, in)
det(presence, the)
obl(find, presence)
case(intake, of)
det(intake, a)
amod(intake, low)
compound(intake, iodine)
nmod(presence, intake)
punct(intake, ,)
appos(intake, thyroglobulin)
acl(thyroglobulin, label)
case(vivo, in)
obl(label, vivo)
case(Af, with)
nmod(vivo, Af)
aux:pass(find, be)
root(ROOT, find)
mark(contain, to)
xcomp(find, contain)
amod(iodotyrosine, more)
compound(iodotyrosine, mono)
punct(iodotyrosine, -)
obj(contain, iodotyrosine)
case(normal, than)
obl(contain, normal)
punct(reduce, ,)
det(amount, the)
nsubj:pass(reduce, amount)
case(di-iodotyrosine, of)
nmod(amount, di-iodotyrosine)
cc(iodothyronine, and)
conj(di-iodotyrosine, iodothyronine)
aux:pass(reduce, be)
advmod(reduce, correspondingly)
advcl(contain, reduce)
punct(find, .)
nsubj(appear, this)
root(ROOT, appear)
mark(result, to)
xcomp(appear, result)
case(amount, from)
cc:preconj(amount, both)
det(amount, a)
amod(amount, reduce)
obl(result, amount)
case(substrate, of)
det(substrate, the)
compound(substrate, iodine)
nmod(amount, substrate)
cc(secretion, and)
det(secretion, a)
advmod(rapid, more)
amod(secretion, rapid)
conj(amount, secretion)
case(thyroglobulin, of)
advmod(iodinate, newly)
amod(thyroglobulin, iodinate)
nmod(secretion, thyroglobulin)
punct(appear, .)
mark(persist, if)
det(deficiency, the)
nsubj(persist, deficiency)
advcl(reasonable, persist)
advmod(enough, long)
advmod(persist, enough)
punct(reasonable, ,)
expl(reasonable, it)
cop(reasonable, be)
root(ROOT, reasonable)
mark(suppose, to)
csubj(reasonable, suppose)
mark(reflect, that)
det(label, the)
compound(label, Af)
nsubj(reflect, label)
aux(reflect, will)
ccomp(suppose, reflect)
det(distribution, the)
compound(distribution, Af)
obj(reflect, distribution)
case(thyroglobulin, in)
det(thyroglobulin, the)
nmod(distribution, thyroglobulin)
punct(expect, .)
amod(result, Similar)
nsubj:pass(expect, result)
aux(expect, might)
aux:pass(expect, be)
parataxis(reflect, expect)
case(influence, from)
det(influence, the)
obl(expect, influence)
case(drug, of)
nmod(influence, drug)
cc(condition, or)
amod(condition, pathological)
conj(drug, condition)
nsubj(limit, that)
acl:relcl(condition, limit)
compound(trap, iodide)
obj(limit, trap)
punct(organification, ,)
cc(organification, or)
conj(trap, organification)
punct(accelerate, ,)
cc(accelerate, or)
conj(limit, accelerate)
compound(proteolysis, thyroglobulin)
obj(accelerate, proteolysis)
punct(b, .)
obj(accelerate, b)
punct(reasonable, .)
det(hormone, the)
obl:npmod(stimulate, thyroid)
punct(stimulate, -)
amod(hormone, stimulate)
nsubj:pass(give, hormone)
det(name, the)
appos(hormone, name)
obl:npmod(stimulate, thyroid)
punct(stimulate, -)
amod(hormone, stimulate)
appos(hormone, hormone)
punct(tsh, ()
appos(hormone, tsh)
punct(tsh, ))
aux(give, have)
aux:pass(give, be)
root(ROOT, give)
case(substance, to)
det(substance, a)
obl(give, substance)
acl(substance, find)
case(gland, in)
det(gland, the)
amod(gland, anterior)
amod(gland, pituitary)
obl(find, gland)
case(species, of)
det(species, all)
nmod(gland, species)
case(animal, of)
nmod(species, animal)
advmod(test, so)
acl(species, test)
case(presence, for)
nmod:poss(presence, its)
obl(test, presence)
punct(give, .)
det(hormone, the)
nsubj:pass(call, hormone)
aux(call, have)
advmod(call, also)
aux:pass(call, be)
root(ROOT, call)
amod(hormone, thyrotrophin)
cc(thyrotrophic, or)
conj(thyrotrophin, thyrotrophic)
obj(call, hormone)
punct(call, .)
case(time, at)
det(time, the)
amod(time, present)
obl(know, time)
nsubj(know, we)
aux(know, do)
advmod(know, not)
root(ROOT, know)
mark(act, by)
det(tsh, what)
amod(tsh, biochemical)
compound(tsh, mechanism)
nsubj(act, tsh)
advcl(know, act)
case(thyroid, on)
det(thyroid, the)
obl(act, thyroid)
punct(be, ,)
cc(be, but)
case(bio-assay, for)
obl(be, bio-assay)
case(hormone, of)
det(hormone, the)
nmod(bio-assay, hormone)
expl(be, there)
conj(know, be)
det(number, a)
nsubj(be, number)
case(property, of)
nmod(number, property)
case(which, by)
obl(estimate, which)
nmod:poss(activity, its)
nsubj:pass(estimate, activity)
aux(estimate, may)
aux:pass(estimate, be)
acl:relcl(property, estimate)
punct(estimate, ,)
case(release, include)
obl(estimate, release)
case(iodine, of)
nmod(release, iodine)
case(thyroid, from)
det(thyroid, the)
nmod(release, thyroid)
punct(increase, ,)
conj(thyroid, increase)
case(weight, in)
compound(weight, thyroid)
nmod(increase, weight)
punct(increase, ,)
conj(weight, increase)
case(height, in)
compound(height, mean)
nmod(increase, height)
case(cell, of)
det(cell, the)
amod(cell, follicular)
nmod(height, cell)
cc(increase, and)
conj(cell, increase)
case(uptake, in)
det(uptake, the)
amod(uptake, thyroidal)
nmod(increase, uptake)
case(Af, of)
nmod(uptake, Af)
punct(restrict, .)
advmod(uptake, here)
nsubj(restrict, we)
aux(restrict, shall)
ccomp(here, restrict)
obj(restrict, discussion)
case(method, to)
det(method, those)
nmod(discussion, method)
nsubj(appear, that)
acl:relcl(method, appear)
advmod(sensitive, sufficiently)
xcomp(appear, sensitive)
cc(precise, and)
conj(sensitive, precise)
mark(determine, for)
advcl(sensitive, determine)
det(concentration, the)
obj(determine, concentration)
case(tsh, of)
nmod(concentration, tsh)
case(blood, in)
nmod(tsh, blood)
punct(know, .)
nsubj(review, Brown)
punct(1959, ()
appos(Brown, 1959)
punct(1959, ))
aux(review, have)
root(ROOT, review)
advmod(method, generally)
det(method, the)
amod(method, various)
obj(review, method)
case(tsh, of)
compound(tsh, assay)
nmod(method, tsh)
punct(refer, ,)
cc(refer, and)
det(reader, the)
nsubj:pass(refer, reader)
aux:pass(refer, be)
conj(review, refer)
case(paper, to)
nmod:poss(paper, she)
obl(refer, paper)
case(information, for)
amod(information, further)
obl(refer, information)
case(subject, on)
det(subject, the)
nmod(information, subject)
punct(review, . )
nummod(point, 1)
punct(1, .)
amod(constitution, Chemical)
nsubj:pass(point, constitution)
cc(property, and)
amod(property, physical)
conj(constitution, property)
case(tsh, of)
amod(tsh, pituitary)
nmod(property, tsh)
advmod(long, as)
advmod(ago, long)
advmod(point, ago)
case(1851, as)
obl(ago, 1851)
nsubj:pass(point, it)
aux:pass(point, be)
root(ROOT, point)
compound:prt(point, out)
case(Niepce, by)
obl(point, Niepce)
punct(1851, ()
appos(Niepce, 1851)
punct(1851, ))
mark(be, that)
expl(be, there)
ccomp(point, be)
det(connection, a)
nsubj(be, connection)
case(pituitary, between)
det(pituitary, the)
nmod(connection, pituitary)
cc(thyroid, and)
det(thyroid, the)
conj(pituitary, thyroid)
punct(point, .)
det(connection, this)
nsubj:pass(clarify, connection)
aux:pass(clarify, be)
root(ROOT, clarify)
case(Smith, by)
obl(clarify, Smith)
cc(Smith, and)
conj(Smith, Smith)
punct(1922, ()
appos(Smith, 1922)
punct(1922, ))
punct(Smith, ,)
nsubj(show, who)
parataxis(clarify, show)
mark(re-activate, that)
amod(extract, saline)
nsubj(re-activate, extract)
case(gland, of)
amod(gland, fresh)
compound(gland, bovine)
amod(gland, pituitary)
nmod(extract, gland)
aux(re-activate, could)
ccomp(show, re-activate)
det(thyroid, the)
amod(thyroid, atrophy)
obj(re-activate, thyroid)
case(tadpole, of)
amod(tadpole, hypophysectomised)
nmod(thyroid, tadpole)
punct(clarify, .)
det(attempt, the)
amod(attempt, first)
nsubj(come, attempt)
mark(isolate, to)
acl(attempt, isolate)
obj(isolate, tsh)
root(ROOT, come)
det(decade, a)
obl:npmod(later, decade)
advmod(come, later)
punct(come, ,)
mark(use, when)
nsubj(use, Janssen)
cc(Loeser, and)
conj(Janssen, Loeser)
punct(1931, ()
appos(Janssen, 1931)
punct(1931, ))
advcl(come, use)
amod(acid, trichloroacetic)
obj(use, acid)
mark(separate, to)
advcl(use, separate)
det(tsh, the)
amod(tsh, soluble)
obj(separate, tsh)
case(impurity, from)
amod(impurity, insoluble)
obl(separate, impurity)
punct(come, .)
case(work, after)
nmod:poss(work, they)
obl(apply, work)
amod(investigator, other)
nsubj(apply, investigator)
root(ROOT, apply)
compound(fractionation, salt)
punct(fractionation, -)
compound(technique, fractionation)
obj(apply, technique)
case(problem, to)
det(problem, the)
obl(apply, problem)
punct(fractionation, ,)
cc(fractionation, as)
fixed(as, well)
fixed(as, as)
conj(technique, fractionation)
case(solvent, with)
amod(solvent, organic)
nmod(fractionation, solvent)
punct(solvent, ,)
case(acetone, such)
fixed(such, as)
nmod(solvent, acetone)
punct(apply, .)
nsubj(conclude, albert)
punct(1949, ()
appos(albert, 1949)
punct(1949, ))
aux(conclude, have)
root(ROOT, conclude)
mark(review, that)
det(preparation, the)
advmod(active, most)
amod(preparation, active)
nsubj:pass(review, preparation)
case(tsh, of)
nmod(preparation, tsh)
acl(preparation, make)
case(period, during)
det(period, this)
obl(make, period)
punct(preparation, ,)
case(1931, from)
obl(make, 1931)
case(1945, to)
nmod(1931, 1945)
punct(potent, ,)
cop(potent, be)
advmod(potent, probably)
advmod(300, about)
nummod(time, 100)
case(300, to)
nmod(100, 300)
obl:npmod(potent, time)
advmod(potent, as)
ccomp(conclude, potent)
case(material, as)
det(material, the)
compound(material, starting)
obl(potent, material)
punct(potent, .)
nsubj:pass(review, much)
case(work, of)
det(work, this)
nmod(much, work)
aux(review, have)
aux:pass(review, be)
ccomp(conclude, review)
case(White, by)
obl(review, White)
punct(1944, ()
nummod(review, 1944)
punct(1944, ))
cc(albert, and)
case(albert, by)
conj(review, albert)
punct(1949, ()
appos(albert, 1949)
punct(1949, ))
punct(development, .)
nsubj:pass(discuss, development)
case(1957, up)
fixed(up, to)
advmod(1957, about)
nmod(development, 1957)
aux(discuss, have)
aux:pass(discuss, be)
conj(review, discuss)
case(Sonenberg, by)
obl(discuss, Sonenberg)
punct(1958, ()
nummod(discuss, 1958)
punct(1958, ))
punct(conclude, .)
case(year, in)
det(year, the)
amod(year, last)
amod(year, few)
obl(lead, year)
punct(lead, ,)
det(application, the)
nsubj(lead, application)
case(technique, of)
amod(technique, chromatographic)
cc(other, and)
conj(chromatographic, other)
amod(technique, modern)
nmod(application, technique)
case(problem, to)
det(problem, the)
nmod(technique, problem)
mark(isolate, of)
acl(problem, isolate)
obj(isolate, tsh)
aux(lead, have)
root(ROOT, lead)
case(purification, to)
amod(purification, further)
obl(lead, purification)
punct(Bates, ()
appos(purification, Bates)
cc(Condliffe, and)
conj(Bates, Condliffe)
punct(Bates, ,)
appos(Bates, 1960)
punct(purification, ;)
punct(purification, ;)
appos(purification, Pierce)
punct(Carsten, ,)
conj(Pierce, Carsten)
cc(Wynston, and)
conj(Pierce, Wynston)
punct(Pierce, ,)
nmod:tmod(Pierce, 1960)
punct(Pierce, ))
punct(lead, .)
det(preparation, the)
advmod(active, most)
amod(preparation, active)
nsubj(appear, preparation)
acl(preparation, obtain)
case(group, by)
det(group, these)
nummod(group, two)
obl(obtain, group)
case(investigator, of)
nmod(group, investigator)
root(ROOT, appear)
mark(similar, to)
cop(similar, be)
xcomp(appear, similar)
case(potency, in)
obl(similar, potency)
punct(composition, ,)
conj(potency, composition)
cc(property, and)
amod(property, physical)
conj(potency, property)
punct(appear, .)
nummod(problem, two)
nsubj(present, problem)
root(ROOT, present)
obj(present, themselves)
mark(consider, in)
advcl(present, consider)
det(hormone, any)
obj(consider, hormone)
case(blood, in)
obl(consider, blood)
punct(present, .)
advmod(same, first)
punct(same, ,)
cop(same, be)
det(form, the)
compound(form, circulate)
nsubj(same, form)
case(hormone, of)
det(hormone, the)
nmod(form, hormone)
det(same, the)
root(ROOT, same)
mark(find, as)
nsubj(find, that)
advcl(same, find)
case(gland, in)
det(gland, the)
obl(find, gland)
advmod(synthesise, where)
nsubj:pass(synthesise, it)
aux:pass(synthesise, be)
acl:relcl(gland, synthesise)
cc(store, and)
conj(synthesise, store)
punct(same, ?)
punct(same, ?)
advmod(what, second)
punct(what, ,)
root(ROOT, what)
cop(what, be)
nmod:poss(concentration, its)
nsubj(what, concentration)
case(circumstance, in)
amod(circumstance, normal)
nmod(concentration, circumstance)
cc(depart, and)
case(what, in)
det(circumstance, what)
obj(depart, circumstance)
aux(depart, will)
det(concentration, this)
nsubj(depart, concentration)
conj(concentration, depart)
case(level, from)
det(level, the)
amod(level, normal)
obl(depart, level)
cc(direction, and)
case(direction, in)
det(direction, which)
conj(level, direction)
punct(depart, ?)
punct(depart, ?)
expl(necessary, it)
cop(necessary, be)
advmod(necessary, therefore)
root(ROOT, necessary)
mark(consider, to)
csubj(necessary, consider)
det(property, the)
obj(consider, property)
case(tsh, of)
amod(tsh, pituitary)
nmod(property, tsh)
mark(be, if)
det(information, the)
amod(information, fragmentary)
amod(information, chemical)
nsubj(be, information)
case(tsh, about)
compound(tsh, blood)
nmod(information, tsh)
advcl(consider, be)
mark(discuss, to)
aux:pass(discuss, be)
xcomp(be, discuss)
advmod(discuss, rationally)
punct(necessary, .)
det(importance, the)
nsubj:pass(accentuate, importance)
mark(know, of)
acl(importance, know)
case(what, in)
det(form, what)
amod(form, chemical)
obl(know, form)
det(hormone, the)
nsubj(exist, hormone)
aux(exist, may)
acl:relcl(form, exist)
aux:pass(accentuate, be)
root(ROOT, accentuate)
case(observation, by)
det(observation, the)
amod(observation, recent)
obl(accentuate, observation)
mark(exist, that)
expl(exist, there)
acl(observation, exist)
det(tsh, a)
advmod(act, abnormally)
amod(act, long)
punct(act, -)
amod(tsh, act)
obj(exist, tsh)
case(blood, in)
nmod(tsh, blood)
acl(tsh, draw)
case(patient, from)
amod(patient, many)
amod(patient, thyrotoxic)
obl(draw, patient)
punct(Adams, ()
appos(patient, Adams)
punct(Adams, ,)
appos(Adams, 1958)
punct(Adams, ))
punct(differ, .)
mark(differ, whether)
det(tsh, this)
amod(tsh, abnormal)
nsubj(differ, tsh)
advcl(exist, differ)
advmod(differ, chemically)
case(tsh, from)
amod(tsh, pituitary)
obl(differ, tsh)
punct(tsh, ,)
cc(tsh, or)
cop(tsh, be)
punct(tsh, ,)
advmod(tsh, alternatively)
punct(tsh, ,)
amod(tsh, normal)
conj(differ, tsh)
case(period, with)
nmod:poss(period, its)
nmod(tsh, period)
case(effectiveness, of)
nmod(period, effectiveness)
acl(effectiveness, modify)
case(constituent, by)
det(constituent, some)
amod(constituent, other)
compound(constituent, blood)
obl(modify, constituent)
punct(decide, ,)
aux(decide, can)
advmod(decide, not)
aux:pass(decide, be)
acl:relcl(period, decide)
case(study, without)
amod(study, chemical)
obl(decide, study)
case(activity, of)
det(activity, the)
nmod(study, activity)
case(blood, in)
det(blood, the)
nmod(activity, blood)
case(patient, of)
det(patient, these)
nmod(blood, patient)
cc(comparison, and)
det(comparison, a)
conj(blood, comparison)
case(substance, of)
det(substance, the)
nmod(comparison, substance)
amod(substance, responsible)
case(activity, for)
det(activity, the)
compound(activity, blood)
obl(responsible, activity)
case(Aj, with)
amod(Aj, pituitary)
nmod(activity, Aj)
punct(responsible, .)
mark(evaluate, in)
advcl(responsible, evaluate)
obj(evaluate, data)
case(concentration, on)
det(concentration, the)
obl(evaluate, concentration)
case(tsh, of)
nmod(concentration, tsh)
case(blood, in)
nmod(tsh, blood)
punct(examine, ,)
nsubj(examine, one)
aux(examine, must)
parataxis(evaluate, examine)
advmod(examine, critically)
det(method, the)
amod(method, bio-assay)
obj(examine, method)
acl(method, use)
mark(obtain, to)
advcl(use, obtain)
obj(obtain, they)
punct(examine, .)
det(introduction, the)
nsubj(reference, introduction)
case(Pharmacopoeia, of)
det(Pharmacopoeia, the)
compound(States, United)
compound(Pharmacopoeia, States)
nmod(introduction, Pharmacopoeia)
root(ROOT, reference)
obj(reference, standard)
case(1952, in)
nmod(standard, 1952)
cc(redefinition, and)
det(redefinition, the)
nsubj(make, redefinition)
cc(equate, and)
conj(redefinition, equate)
case(usp, of)
det(usp, the)
nmod(unit, usp)
cc(unit, and)
conj(usp, international)
nmod(redefinition, unit)
case(activity, of)
compound(stimulate, thyroid)
punct(stimulate, -)
amod(activity, stimulate)
nmod(unit, activity)
aux(make, have)
conj(reference, make)
expl(make, it)
xcomp(make, possible)
mark(compare, to)
csubj(possible, compare)
obj(compare, result)
xcomp(compare, publish)
case(investigator, by)
amod(investigator, different)
obl(publish, investigator)
case(time, since)
det(time, that)
obl(publish, time)
punct(reference, .)
nsubj(like, we)
aux(like, should)
root(ROOT, like)
mark(re-emphasise, to)
xcomp(like, re-emphasise)
det(importance, the)
obj(re-emphasise, importance)
mark(state, of)
acl(importance, state)
obj(state, result)
advmod(term, solely)
case(term, in)
obl(state, term)
case(unit, of)
amod(unit, international)
nmod(term, unit)
case(activity, of)
compound(activity, tsh)
nmod(unit, activity)
cc(avoid, and)
mark(avoid, of)
conj(re-emphasise, avoid)
det(re-introduction, the)
obj(avoid, re-introduction)
case(unit, of)
amod(unit, biological)
nmod(re-introduction, unit)
punct(like, .)
case(part, for)
det(part, the)
amod(part, most)
obl(confine, part)
punct(confine, ,)
det(discussion, this)
nsubj:pass(confine, discussion)
aux(confine, will)
aux:pass(confine, be)
root(ROOT, confine)
case(result, to)
obl(confine, result)
acl(result, obtain)
case(introduction, since)
det(introduction, the)
obl(obtain, introduction)
case(standard, of)
det(standard, the)
compound(standard, reference)
nmod(introduction, standard)
punct(confine, . )
nummod(define, a)
punct(a, .)
amod(preparation, Standard)
nsubj:pass(define, preparation)
cc(unit, and)
conj(preparation, unit)
case(activity, of)
obl:npmod(stimulate, thyroid)
punct(stimulate, -)
amod(activity, stimulate)
nmod(preparation, activity)
det(unit, the)
amod(unit, international)
appos(preparation, unit)
punct(u., ()
appos(unit, u.)
punct(u., ))
punct(preparation, ,)
acl(preparation, adopt)
mark(make, to)
xcomp(adopt, make)
xcomp(make, possible)
det(comparison, the)
obj(make, comparison)
case(result, of)
nmod(comparison, result)
case(laboratory, from)
amod(laboratory, different)
nmod(result, laboratory)
punct(Mussett, ()
appos(laboratory, Mussett)
cc(perry, and)
conj(Mussett, perry)
punct(Mussett, ,)
conj(Mussett, 1955)
punct(Mussett, ))
punct(define, ,)
aux(define, have)
aux:pass(define, be)
root(ROOT, define)
case(amount, as)
det(amount, the)
obl(define, amount)
case(present, of)
compound(present, activity)
nmod(amount, present)
case(mg, in)
nummod(mg, 13.5)
nmod(amount, mg)
case(preparation, of)
det(preparation, the)
compound(preparation, International)
compound(preparation, Standard)
nmod(mg, preparation)
punct(define, .)
det(unit, the)
amod(unit, international)
nsubj(equipotent, unit)
cop(equipotent, be)
root(ROOT, equipotent)
case(unit, with)
det(unit, the)
compound(unit, usp)
obl(equipotent, unit)
acl(unit, adopt)
case(1952, in)
obl(adopt, 1952)
punct(unit, ,)
nsubj:pass(define, which)
aux:pass(define, be)
acl:relcl(unit, define)
case(amount, as)
det(amount, the)
obl(define, amount)
case(present, of)
compound(present, activity)
nmod(amount, present)
case(mg, in)
nummod(mg, 20)
nmod(amount, mg)
case(substance, of)
det(substance, the)
compound(reference, usp)
compound(substance, reference)
nmod(mg, substance)
punct(equipotent, .)
compound(Muscle, introduction)
compound(weakness, Muscle)
nsubj:pass(recognize, weakness)
aux:pass(recognize, be)
advmod(recognize, now)
root(ROOT, recognize)
case(complication, as)
det(complication, a)
amod(complication, uncommon)
advmod(serious, though)
amod(complication, serious)
obl(recognize, complication)
case(therapy, of)
compound(therapy, steroid)
nmod(complication, therapy)
punct(complication, ,)
case(most, with)
nmod(complication, most)
case(corticosteroid, of)
det(corticosteroid, the)
amod(corticosteroid, synthetic)
amod(corticosteroid, adrenal)
nmod(most, corticosteroid)
case(use, in)
amod(use, clinical)
nmod(corticosteroid, use)
punct(recognize, .)
mark(show, although)
nsubj(show, biopsy)
aux(show, have)
advcl(provide, show)
amod(change, structural)
obj(show, change)
case(some, in)
nmod(change, some)
case(case, of)
det(case, the)
amod(case, report)
nmod(some, case)
case(weakness, of)
amod(induce, steroid)
punct(induce, -)
amod(weakness, induce)
nmod(case, weakness)
punct(provide, ,)
det(case, this)
nsubj(provide, case)
root(ROOT, provide)
det(example, the)
amod(example, only)
obj(provide, example)
acl(example, know)
case(we, to)
obl(know, we)
case(necropsy, in)
det(necropsy, which)
obl(know, necropsy)
advcl(know, afford)
det(opportunity, the)
obj(afford, opportunity)
case(study, for)
amod(study, extensive)
nmod(opportunity, study)
case(group, of)
amod(group, multiple)
compound(group, muscle)
nmod(study, group)
punct(provide, .)
det(case, the)
nsubj(be, case)
acl(case, describe)
case(paper, in)
det(paper, this)
obl(describe, paper)
root(ROOT, be)
mark(man, that)
case(man, of)
det(man, a)
amod(man, older)
obl(be, man)
nsubj(develop, who)
acl:relcl(man, develop)
xcomp(develop, disabling)
amod(weakness, muscular)
obj(disabling, weakness)
mark(receive, while)
advcl(disabling, receive)
det(variety, a)
obj(receive, variety)
case(steroid, of)
nmod(variety, steroid)
case(anemia, for)
det(anemia, a)
amod(anemia, refractory)
nmod(steroid, anemia)
punct(be, .)
nsubj(accountant, report)
case(case, of)
nmod(report, case)
det(patient, this)
nsubj(accountant, patient)
cop(accountant, be)
det(accountant, a)
nummod(year, 65)
punct(year, -)
obl:npmod(old, year)
punct(old, -)
amod(accountant, old)
amod(accountant, white)
amod(accountant, male)
root(ROOT, accountant)
nsubj(enter, who)
acl:relcl(accountant, enter)
det(Hospital, the)
compound(York, New)
compound(Hospital, York)
obj(enter, Hospital)
case(admission, for)
nmod:poss(admission, he)
amod(admission, fourth)
cc(terminal, and)
conj(fourth, terminal)
obl(enter, admission)
case(June, on)
obl(enter, June)
nummod(June, 26)
punct(June, ,)
nummod(June, 1959)
punct(enter, ,)
mark(disabling, because)
fixed(because, of)
advcl(enter, disabling)
obj(disabling, weakness)
cc(debility, and)
amod(debility, general)
conj(weakness, debility)
punct(accountant, .)
case(1953, in)
obl(develop, 1953)
det(patient, the)
nsubj(develop, patient)
root(ROOT, develop)
det(anemia, a)
amod(anemia, unexplained)
obj(develop, anemia)
case(which, for)
obl(give, which)
nummod(transfusion, 15)
compound(transfusion, blood)
nsubj:pass(give, transfusion)
aux:pass(give, be)
acl:relcl(anemia, give)
case(period, over)
det(period, a)
obl(give, period)
case(year, of)
nummod(year, 4)
nmod(period, year)
punct(develop, .)
nsubj:pass(note, splenomegaly)
aux:pass(note, be)
advmod(note, first)
root(ROOT, note)
case(1956, in)
obl(note, 1956)
punct(show, ,)
cc(show, and)
det(biopsy, a)
amod(biopsy, sternal)
amod(biopsy, marrow)
nsubj(show, biopsy)
case(time, at)
det(time, that)
nmod(biopsy, time)
conj(note, show)
punct(foci, ``)
amod(foci, scatter)
obj(show, foci)
case(fibrosis, of)
nmod(foci, fibrosis)
punct(foci, '')
amod(foci, suggestive)
case(myelofibrosis, of)
obl(suggestive, myelofibrosis)
punct(note, .)
det(transfusion, no)
amod(transfusion, additional)
nsubj(necessary, transfusion)
cop(necessary, be)
root(ROOT, necessary)
case(institution, after)
det(institution, the)
obl(necessary, institution)
case(prednisone, of)
nmod(institution, prednisone)
case(July, in)
obl(necessary, July)
punct(July, ,)
nummod(July, 1957)
punct(necessary, ,)
case(dose, in)
det(dose, a)
amod(dose, initial)
obl(necessary, dose)
case(mg, of)
nummod(mg, 40)
nmod(dose, mg)
punct(necessary, .)
root(ROOT, daily)
case(taper, with)
amod(taper, gradual)
obl(daily, taper)
case(mg., to)
nummod(mg., 10)
nmod(taper, mg.)
root(ROOT, daily)
punct(daily, .)
det(medication, this)
nsubj:pass(continue, medication)
aux:pass(continue, be)
root(ROOT, continue)
case(February, until)
obl(continue, February)
punct(February, ,)
nummod(February, 1958)
punct(continue, .)
case(February, in)
obl(suffer, February)
punct(suffer, ,)
nummod(February, 1958)
punct(suffer, ,)
det(patient, the)
nsubj(suffer, patient)
root(ROOT, suffer)
det(infarction, a)
amod(infarction, myocardial)
obj(suffer, infarction)
acl(infarction, complicated)
case(edema, by)
amod(edema, pulmonary)
obl(complicated, edema)
punct(finding, .)
amod(finding, additional)
obj(suffer, finding)
case(time, at)
det(time, this)
nmod(finding, time)
acl(finding, include)
advmod(include, cardiomegaly)
punct(obliteran, ,)
amod(obliteran, peripheral)
compound(obliteran, arteriosclerosis)
obj(include, obliteran)
punct(cholelithiasis, ,)
cc(cholelithiasis, and)
conj(obliteran, cholelithiasis)
punct(suffer, .)
det(hemoglobin, the)
nsubj(gm, hemoglobin)
cop(gm, be)
nummod(gm, 11.6)
root(ROOT, gm)
punct(gm, .)
punct(gm, .)
nsubj(include, therapy)
root(ROOT, include)
obj(include, digitalization)
cc(anticoagulation, and)
conj(digitalization, anticoagulation)
punct(include, .)
advmod(become, later)
punct(become, ,)
nsubj(become, chlorothiazide)
cc(salt, and)
compound(restriction, salt)
conj(chlorothiazide, restriction)
root(ROOT, become)
xcomp(become, necessary)
mark(control, to)
advcl(necessary, control)
det(edema, the)
obj(control, edema)
case(failure, of)
amod(failure, chronic)
amod(failure, congestive)
nmod(edema, failure)
punct(necessary, .)
mark(increase, because)
fixed(because, of)
advcl(start, increase)
obj(increase, anemia)
punct(start, ,)
nsubj:pass(start, triamcinolone)
punct(mg., ,)
nummod(mg., 8)
appos(triamcinolone, mg.)
advmod(mg., daily)
punct(start, ,)
aux:pass(start, be)
root(ROOT, start)
case(Feb., on)
obl(start, Feb.)
nummod(Feb., 23)
punct(Feb., ,)
nummod(Feb., 1958)
punct(continue, ,)
cc(continue, and)
aux:pass(continue, be)
conj(start, continue)
case(July, until)
obl(continue, July)
punct(July, ,)
nummod(July, 1958)
punct(start, .)
case(September, in)
obl(develop, September)
punct(develop, ,)
nummod(September, 1958)
punct(develop, ,)
det(patient, the)
nsubj(develop, patient)
root(ROOT, develop)
amod(weakness, generalize)
obj(develop, weakness)
cc(fatigue, and)
conj(weakness, fatigue)
nsubj(concurrent, which)
cop(concurrent, be)
acl:relcl(weakness, concurrent)
case(exacerbation, with)
obl(concurrent, exacerbation)
case(anemia, of)
nmod:poss(anemia, he)
nmod(exacerbation, anemia)
punct(develop, ;)
punct(develop, ;)
det(hemoglobin, the)
nsubj(gm, hemoglobin)
cop(gm, be)
nummod(gm, 10.6)
parataxis(develop, gm)
punct(develop, .)
punct(develop, .)
case(attempt, in)
det(attempt, a)
root(ROOT, attempt)
mark(reverse, to)
acl(attempt, reverse)
det(trend, the)
compound(trend, downhill)
obj(reverse, trend)
mark(stimulate, by)
advcl(reverse, stimulate)
det(marrow, the)
compound(marrow, bone)
obj(stimulate, marrow)
cc(control, and)
conj(stimulate, control)
det(component, any)
amod(component, hemolytic)
obj(control, component)
punct(triamcinolone, ,)
conj(component, triamcinolone)
punct(triamcinolone, ,)
nummod(mg, 16)
conj(component, mg)
punct(triamcinolone, .)
advmod(begin, daily)
punct(begin, ,)
aux:pass(begin, be)
root(ROOT, begin)
case(Sept., on)
obl(begin, Sept.)
nummod(Sept., 26)
punct(Sept., ,)
nummod(Sept., 1958)
punct(continue, ,)
cc(continue, and)
conj(begin, continue)
case(Feb., until)
obl(continue, Feb.)
nummod(Feb., 18)
punct(Feb., ,)
nummod(Feb., 1959)
punct(begin, .)
case(patient, at)
obl(feel, first)
det(patient, the)
nsubj(feel, patient)
root(ROOT, feel)
xcomp(feel, stronger)
punct(rise, ,)
cc(rise, and)
det(hemoglobin, the)
nsubj(rise, hemoglobin)
conj(feel, rise)
case(gm., to)
nummod(gm., 13.8)
obl(rise, gm.)
punct(complain, ,)
cc(complain, but)
case(Oct., on)
obl(complain, Oct.)
nummod(Oct., 20)
punct(Oct., ,)
nummod(Oct., 1958)
punct(complain, ,)
nsubj(complain, he)
conj(feel, complain)
mark(cave, of)
punct(cave, ``)
advcl(complain, cave)
advmod(cave, in)
punct(cave, '')
case(knee, in)
nmod:poss(knee, he)
obl(cave, knee)
punct(feel, .)
case(Nov., by)
obl(pronounce, Nov.)
nummod(Nov., 8)
punct(Nov., ,)
nummod(Nov., 1958)
punct(pronounce, ,)
nsubj:pass(pronounce, weakness)
punct(pronounce, ,)
advmod(involve, specifically)
acl(weakness, involve)
det(musculature, the)
compound(musculature, pelvic)
cc(thigh, and)
conj(pelvic, thigh)
obj(involve, musculature)
punct(pronounce, ,)
aux:pass(pronounce, be)
root(ROOT, pronounce)
punct(difficulty, ,)
cc(difficulty, and)
det(complaint, a)
amod(complaint, common)
nsubj(difficulty, complaint)
cop(difficulty, be)
punct(difficulty, ``)
conj(pronounce, difficulty)
mark(step, in)
acl(difficulty, step)
compound:prt(step, up)
case(curb, on)
case(curb, to)
obl(step, curb)
punct(Prednisone, '')
punct(Prednisone, .)
nsubj:pass(substitute, Prednisone)
punct(Prednisone, ,)
nummod(mg., 30)
appos(Prednisone, mg.)
advmod(mg., daily)
punct(substitute, ,)
aux:pass(substitute, be)
parataxis(difficulty, substitute)
case(triamcinolone, for)
obl(substitute, triamcinolone)
case(Nov., from)
obl(substitute, Nov.)
nummod(Nov., 22)
case(Dec., until)
obl(substitute, Dec.)
nummod(Dec., 1)
punct(Dec., ,)
nummod(Dec., 1958)
punct(Dec., ,)
case(improvement, without)
det(improvement, any)
obl(substitute, improvement)
case(weakness, in)
det(weakness, the)
nmod(improvement, weakness)
punct(pronounce, .)
compound(potassium, Serum)
nsubj(Eq, potassium)
case(time, at)
det(time, this)
nmod(potassium, time)
cop(Eq, be)
nummod(m, 3.8)
compound(Eq, m)
root(ROOT, Eq)
punct(Eq, .)
case(liter, per)
obl(gm, liter)
punct(gm, ,)
cc(gm, and)
det(hemoglobin, the)
nsubj(gm, hemoglobin)
cop(gm, be)
nummod(gm, 13.9)
root(ROOT, gm)
punct(gm, .)
case(Dec., by)
obl(worse, Dec.)
nummod(Dec., 1)
punct(Dec., ,)
nummod(Dec., 1958)
punct(worse, ,)
det(weakness, the)
nsubj(worse, weakness)
case(group, in)
det(group, the)
compound(group, pelvic)
cc(quadricep, and)
conj(pelvic, quadricep)
compound(group, muscle)
nmod(weakness, group)
cop(worse, be)
advmod(worse, appreciably)
root(ROOT, worse)
punct(become, ,)
cc(become, and)
expl(become, it)
conj(worse, become)
xcomp(become, difficult)
case(patient, for)
det(patient, the)
obl(difficult, patient)
mark(rise, to)
acl(patient, rise)
xcomp(rise, unaided)
case(sitting, from)
det(sitting, a)
obl(rise, sitting)
cc(position, or)
compound(position, recline)
conj(sitting, position)
punct(Triamcinolone, .)
appos(position, Triamcinolone)
punct(mg, ,)
nummod(mg, 16)
appos(Triamcinolone, mg)
punct(mg, .)
advmod(resume, daily)
punct(resume, ,)
aux:pass(resume, be)
acl:relcl(Triamcinolone, resume)
cc(maintain, and)
conj(resume, maintain)
case(Feb., until)
obl(maintain, Feb.)
nummod(Feb., 18)
punct(Feb., ,)
nummod(Feb., 1959)
punct(omit, .)
nsubj:pass(omit, Chlorothiazide)
aux:pass(omit, be)
conj(resume, omit)
case(period, for)
det(period, a)
nummod(week, 2)
punct(week, -)
compound(period, week)
obl(omit, period)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(omit, be)
det(change, no)
nsubj(be, change)
case(weakness, in)
det(weakness, the)
compound(weakness, muscle)
nmod(change, weakness)
punct(worse, .)
case(time, at)
det(time, this)
obl(reveal, time)
det(examination, a)
amod(examination, detailed)
amod(examination, neuromuscular)
nsubj(reveal, examination)
root(ROOT, reveal)
amod(atrophy, diffuse)
compound(atrophy, muscle)
obj(reveal, atrophy)
nsubj(moderate, that)
cop(moderate, be)
acl:relcl(atrophy, moderate)
case(hand, in)
det(hand, the)
obl(moderate, hand)
cc(foot, and)
conj(hand, foot)
punct(mark, ,)
cc(mark, but)
conj(reveal, mark)
case(shoulder, in)
det(shoulder, the)
obl(mark, shoulder)
punct(hip, ,)
conj(shoulder, hip)
punct(girdle, ,)
cc(girdle, and)
amod(girdle, pelvic)
conj(shoulder, girdle)
punct(shoulder, ,)
case(reflex, with)
amod(reflex, hypoactive)
amod(tendon, deep)
punct(tendon, -)
compound(reflex, tendon)
obl(mark, reflex)
punct(reveal, .)
det(fasciculation, no)
nsubj:pass(find, fasciculation)
cc(defect, or)
amod(defect, sensory)
conj(fasciculation, defect)
aux:pass(find, be)
root(ROOT, find)
punct(find, .)
nsubj(reveal, electromyography)
root(ROOT, reveal)
det(evidence, no)
obj(reveal, evidence)
case(disease, of)
amod(disease, lower)
compound(disease, motor)
compound(disease, neuron)
nmod(evidence, disease)
punct(reveal, .)
compound(test, thyroid)
compound(test, function)
nsubj(yield, test)
parataxis(reveal, yield)
amod(result, normal)
obj(yield, result)
punct(reveal, .)
det(iodine, the)
obl:npmod(bound, protein)
punct(bound, -)
amod(iodine, bound)
nsubj(mg., iodine)
cop(mg., be)
nummod(mg., 6.6)
root(ROOT, mg.)
punct(show, ,)
cc(show, and)
det(uptake, the)
amod(uptake, radioactive)
compound(uptake, iodine)
nsubj(hour, uptake)
case(gland, over)
det(gland, the)
compound(gland, thyroid)
nmod(uptake, gland)
cop(hour, be)
nummod(%, 46)
nmod:npmod(hour, %)
case(hour, in)
nummod(hour, 24)
parataxis(mg., hour)
punct(hour, ,)
case(ratio, with)
det(ratio, a)
compound(ratio, conversion)
nmod(hour, ratio)
case(%, of)
nummod(%, 12)
nmod(ratio, %)
punct(demonstrate, . )
det(test, a)
compound(test, schilling)
nsubj(demonstrate, test)
parataxis(mg., demonstrate)
amod(absorption, normal)
obj(demonstrate, absorption)
case(Af, of)
compound(Af, vitamin)
nmod(absorption, Af)
punct(absorption, .)
case(February, in)
obl(demonstrate, February)
punct(February, ,)
nummod(February, 1959)
punct(admission, ,)
case(admission, during)
det(admission, the)
amod(admission, second)
obl(demonstrate, admission)
case(Hospital, to)
det(Hospital, the)
compound(York, New)
compound(Hospital, York)
nmod(admission, Hospital)
punct(show, ,)
det(specimen, a)
compound(specimen, biopsy)
nsubj(show, specimen)
case(gastrocnemius, of)
det(gastrocnemius, the)
amod(gastrocnemius, left)
nmod(specimen, gastrocnemius)
acl:relcl(Hospital, show)
xcomp(show, strike)
obj(strike, increase)
case(nuclei, in)
det(nuclei, the)
amod(nuclei, sarcolemmal)
compound(nuclei, sheath)
obl(strike, nuclei)
cc(fiber, and)
amod(fiber, shrunken)
compound(fiber, muscle)
conj(nuclei, fiber)
case(section, in)
amod(section, several)
obl(strike, section)
punct(mg., .)
compound(serum, serial)
compound(level, serum)
compound(level, potassium)
nsubj(remain, level)
root(ROOT, remain)
xcomp(remain, normal)
punct(normal, ;)
punct(normal, ;)
det(glutamic, the)
compound(glutamic, serum)
nsubj(unit, glutamic)
amod(transaminase, oxaloacetic)
nsubj(unit, transaminase)
cop(unit, be)
nummod(unit, 10)
parataxis(normal, unit)
case(ml, per)
nmod(unit, ml)
punct(normal, .)
case(min, per)
root(ROOT, min)
punct(min, .)
punct(min, .)
det(impression, the)
amod(impression, clinical)
nsubj(dystrophy, impression)
case(time, at)
det(time, this)
nmod(impression, time)
cop(dystrophy, be)
cc:preconj(dystrophy, either)
amod(dystrophy, muscular)
root(ROOT, dystrophy)
cc(polymyositis, or)
conj(dystrophy, polymyositis)
punct(dystrophy, .)
case(Feb., on)
obl(start, Feb.)
nummod(Feb., 12)
punct(Feb., ,)
nummod(Feb., 1959)
punct(start, ,)
amod(corticotropin, purify)
nsubj:pass(start, corticotropin)
punct(gel, ()
compound(gel, acth)
appos(corticotropin, gel)
punct(gel, ))
punct(unit, ,)
nummod(unit, 20)
appos(corticotropin, unit)
advmod(intramuscularly, daily)
advmod(unit, intramuscularly)
punct(start, ,)
aux:pass(start, be)
root(ROOT, start)
cc(have, but)
conj(start, have)
mark(discontinued, to)
aux:pass(discontinued, be)
xcomp(have, discontinued)
nummod(week, 3)
obl:npmod(later, week)
advmod(discontinued, later)
case(retention, because)
fixed(because, of)
amod(retention, excessive)
compound(retention, fluid)
obl(discontinued, retention)
punct(start, .)
case(March, from)
obl(maintain, March)
nummod(March, 3)
case(May, to)
nmod(March, May)
nummod(May, 1)
punct(May, ,)
nummod(May, 1949)
punct(maintain, ,)
det(patient, the)
nsubj:pass(maintain, patient)
aux:pass(maintain, be)
root(ROOT, maintain)
case(dexamethasone, on)
obl(maintain, dexamethasone)
punct(dexamethasone, ,)
nummod(mg., 3)
case(6, to)
nmod(3, 6)
obl(maintain, mg.)
advmod(maintain, daily)
punct(maintain, .)
case(May, in)
nmod(prednisone, May)
nummod(May, 1959)
punct(prednisone, ,)
root(ROOT, prednisone)
punct(prednisone, ,)
nummod(mg, 30)
conj(prednisone, mg)
punct(prednisone, .)
advmod(replace, daily)
punct(replace, ,)
root(ROOT, replace)
det(dexamethasone, the)
obj(replace, dexamethasone)
punct(replace, . )
compound(weakness, Muscle)
nsubj(improve, weakness)
aux(improve, do)
advmod(improve, not)
root(ROOT, improve)
punct(need, ,)
cc(need, and)
det(patient, the)
nsubj(need, patient)
conj(improve, need)
advmod(need, first)
det(cane, a)
obj(need, cane)
punct(need, ,)
advmod(crutch, then)
obl:npmod(need, crutch)
punct(improve, .)
case(spite, in)
root(ROOT, spite)
case(test, of)
amod(test, normal)
compound(test, thyroid)
compound(test, function)
nmod(spite, test)
punct(trial, ,)
det(trial, a)
conj(test, trial)
case(propylthiouracil, of)
nmod(trial, propylthiouracil)
punct(mg, ,)
nummod(mg, 400)
conj(trial, mg)
punct(trial, .)
advmod(give, daily)
case(week, for)
nummod(week, one)
obl(give, week)
punct(give, ,)
aux:pass(give, be)
root(ROOT, give)
cc(serve, but)
conj(give, serve)
advmod(serve, only)
mark(intensify, to)
advcl(serve, intensify)
compound(weakness, muscle)
obj(intensify, weakness)
punct(give, .)
amod(attempt, repeat)
nsubj(unsuccessful, attempt)
mark(withdraw, to)
acl(attempt, withdraw)
obj(withdraw, steroid)
advmod(withdraw, entirely)
cop(unsuccessful, be)
root(ROOT, unsuccessful)
mark(result, because)
amod(weakness, increase)
compound(weakness, muscle)
nsubj(result, weakness)
advcl(unsuccessful, result)
punct(fever, ,)
cc(fever, as)
fixed(as, well)
fixed(as, as)
conj(result, fever)
punct(malaise, ,)
conj(fever, malaise)
punct(anorexia, ,)
conj(fever, anorexia)
punct(anxiety, ,)
conj(fever, anxiety)
punct(exacerbation, ,)
cc(exacerbation, and)
det(exacerbation, a)
conj(fever, exacerbation)
case(anemia, of)
det(anemia, the)
nmod(exacerbation, anemia)
punct(unsuccessful, .)
det(reaction, these)
nsubj:pass(interpret, reaction)
aux:pass(interpret, be)
root(ROOT, interpret)
mark(manifestation, as)
cop(manifestation, be)
advcl(interpret, manifestation)
case(hypoadrenocorticism, of)
nmod(manifestation, hypoadrenocorticism)
punct(interpret, .)
amod(pain, severe)
compound(pain, back)
nsubj(prompt, pain)
case(June, in)
nmod(pain, June)
punct(June, ,)
nummod(June, 1959)
punct(prompt, ,)
root(ROOT, prompt)
det(admission, a)
amod(admission, third)
compound(admission, hospital)
obj(prompt, admission)
punct(prompt, .)
amod(osteoporosis, extensive)
nsubj:pass(find, osteoporosis)
case(collapse, with)
amod(collapse, partial)
nmod(osteoporosis, collapse)
case(D8, of)
nmod(collapse, D8)
aux:pass(find, be)
root(ROOT, find)
punct(find, . )
det(diet, a)
amod(protein, high)
punct(protein, -)
compound(diet, protein)
nsubj(fail, diet)
punct(supplement, ,)
compound(supplement, calcium)
compound(supplement, lactate)
conj(diet, supplement)
punct(norethandrolone, ,)
cc(norethandrolone, and)
conj(diet, norethandrolone)
root(ROOT, fail)
mark(change, to)
xcomp(fail, change)
det(complaint, the)
amod(complaint, skeletal)
obj(change, complaint)
cc(weakness, or)
det(weakness, the)
amod(weakness, severe)
compound(weakness, muscle)
conj(complaint, weakness)
punct(fail, .)
det(admission, the)
amod(admission, terminal)
compound(admission, hospital)
nsubj:pass(necessitate, admission)
case(June, on)
nmod(admission, June)
nummod(June, 27)
punct(June, ,)
nummod(June, 1959)
punct(necessitate, ,)
aux:pass(necessitate, be)
root(ROOT, necessitate)
case(weakness, by)
amod(weakness, continue)
obl(necessitate, weakness)
cc(debility, and)
conj(weakness, debility)
acl(weakness, complicated)
case(retention, by)
amod(retention, urinary)
obl(complicated, retention)
cc(hemorrhoid, and)
amod(hemorrhoid, painful)
amod(hemorrhoid, thrombose)
conj(retention, hemorrhoid)
punct(necessitate, . )
compound(film, X-ray)
nsubj(show, film)
case(column, of)
det(column, the)
amod(column, vertebral)
nmod(film, column)
root(ROOT, show)
obj(show, progression)
case(demineralization, of)
det(demineralization, the)
nmod(progression, demineralization)
punct(show, .)
case(July, on)
obl(develop, July)
nummod(July, 4)
punct(July, ,)
nummod(July, 1959)
punct(develop, ,)
det(patient, the)
nsubj(develop, patient)
root(ROOT, develop)
amod(pain, mark)
amod(pain, abdominal)
obj(develop, pain)
cc(distension, and)
conj(pain, distension)
punct(go, ,)
conj(develop, go)
case(shock, into)
obl(go, shock)
punct(die, ,)
cc(die, and)
conj(develop, die)
punct(die, .)
obj(die, finding)
case(necropsy, at)
nmod(finding, necropsy)
det(body, the)
nsubj(that, body)
cop(that, be)
acl:relcl(finding, that)
case(man, of)
det(man, a)
advmod(develop, well)
punct(develop, -)
amod(man, develop)
punct(man, ,)
advmod(debilitate, somewhat)
amod(man, debilitate)
amod(man, white)
nmod(that, man)
acl(man, weigh)
nummod(lb, 108)
obj(weigh, lb)
punct(develop, .)
punct(develop, .)
expl(be, there)
root(ROOT, be)
amod(pterygia, bilateral)
nsubj(be, pterygia)
cc(senilis, and)
compound(senilis, arcus)
conj(pterygia, senilis)
punct(edentulous, ,)
cc(edentulous, and)
det(mouth, the)
nsubj(edentulous, mouth)
cop(edentulous, be)
conj(be, edentulous)
punct(be, .)
det(heart, the)
nsubj(weigh, heart)
root(ROOT, weigh)
nummod(gm., 510)
obj(weigh, gm.)
punct(measure, ,)
cc(measure, and)
case(tract, at)
det(tract, the)
compound(tract, outflow)
obl(measure, tract)
det(left, the)
nsubj(measure, left)
cc(right, and)
conj(left, right)
nsubj(measure, ventricle)
conj(weigh, measure)
nummod(mm, 19)
cc(3, and)
conj(19, 3)
obj(measure, mm)
punct(measure, .)
punct(measure, ,)
advmod(measure, respectively)
punct(weigh, .)
det(artery, the)
compound(artery, coronary)
nsubj(sclerotic, artery)
cop(sclerotic, be)
root(ROOT, sclerotic)
cc(narrow, and)
advmod(narrow, diffusely)
conj(sclerotic, narrow)
case(course, throughout)
nmod:poss(course, they)
obl(narrow, course)
punct(occlude, ,)
cc(occlude, and)
det(artery, the)
amod(artery, right)
compound(artery, coronary)
nsubj:pass(occlude, artery)
aux:pass(occlude, be)
advmod(occlude, virtually)
conj(sclerotic, occlude)
case(distal, by)
det(distal, a)
amod(plaque, yellow)
amod(plaque, atheromatous)
compound(distal, plaque)
nummod(cm., 1.5)
compound(distal, cm.)
obl(occlude, distal)
case(origin, to)
nmod:poss(origin, its)
nmod(distal, origin)
punct(sclerotic, .)
det(myocardium, the)
nsubj:pass(replace, myocardium)
case(base, of)
det(base, the)
amod(base, posterior)
nmod(myocardium, base)
case(ventricle, of)
det(ventricle, the)
amod(ventricle, left)
nmod(base, ventricle)
aux:pass(replace, be)
root(ROOT, replace)
case(tissue, by)
amod(tissue, gray)
compound(tissue, scar)
obl(replace, tissue)
case(area, over)
det(area, a)
nummod(cm., 7.5)
compound(area, cm.)
obl(replace, area)
punct(replace, .)
det(valve, the)
nsubj(normal, valve)
cop(normal, be)
root(ROOT, normal)
case(plaque, except)
case(plaque, for)
amod(plaque, thin)
amod(plaque, yellow)
obl(normal, plaque)
case(surface, on)
det(surface, the)
amod(surface, inferior)
obl(normal, surface)
case(leaflet, of)
det(leaflet, the)
compound(leaflet, mitral)
nmod(surface, leaflet)
punct(normal, .)
advmod(show, microscopically)
punct(show, ,)
nsubj(show, section)
case(base, from)
det(base, the)
amod(base, posterior)
nmod(section, base)
case(ventricle, of)
det(ventricle, the)
amod(ventricle, left)
nmod(base, ventricle)
case(heart, of)
det(heart, the)
nmod(ventricle, heart)
root(ROOT, show)
amod(area, several)
amod(area, large)
obj(show, area)
case(replacement, of)
nmod(area, replacement)
case(muscle, of)
nmod(replacement, muscle)
case(tissue, by)
amod(tissue, fibrous)
nmod(muscle, tissue)
punct(show, .)
case(addition, in)
obl(contain, addition)
punct(contain, ,)
amod(section, other)
nsubj(contain, section)
root(ROOT, contain)
amod(area, focal)
obj(contain, area)
case(necrosis, of)
amod(necrosis, recent)
amod(necrosis, myocardial)
nmod(area, necrosis)
nsubj:pass(infiltrate, that)
aux:pass(infiltrate, be)
acl:relcl(necrosis, infiltrate)
case(neutrophil, with)
obl(infiltrate, neutrophil)
punct(contain, .)
nsubj:pass(hypertrophied, many)
case(fiber, of)
det(fiber, the)
amod(fiber, myocardial)
nmod(many, fiber)
aux:pass(hypertrophied, be)
root(ROOT, hypertrophied)
cc(have, and)
conj(hypertrophied, have)
amod(nuclei, large)
punct(irregular, ,)
conj(large, irregular)
punct(nuclei, ,)
amod(nuclei, basophilic)
obj(have, nuclei)
punct(hypertrophied, .)
det(intima, the)
nsubj:pass(thicken, intima)
case(artery, of)
det(artery, the)
amod(artery, larger)
compound(artery, coronary)
nmod(intima, artery)
aux:pass(thicken, be)
root(ROOT, thicken)
case(tissue, by)
amod(tissue, fibrous)
obl(thicken, tissue)
acl(tissue, contain)
amod(cleft, fusiform)
obj(contain, cleft)
cc(cell, and)
amod(cell, mononuclear)
conj(cleft, cell)
punct(thicken, .)
det(surface, the)
amod(surface, intimal)
nsubj:pass(cover, surface)
case(aorta, of)
det(aorta, the)
nmod(surface, aorta)
aux:pass(cover, be)
root(ROOT, cover)
case(plaque, with)
amod(plaque, confluent)
punct(brown, ,)
amod(brown, yellow)
punct(brown, -)
amod(plaque, brown)
punct(plaque, ,)
amod(plaque, hard)
punct(plaque, ,)
amod(plaque, friable)
obl(cover, plaque)
case(course, along)
nmod:poss(course, its)
amod(course, entire)
nmod(plaque, course)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(cover, be)
det(narrow, a)
amod(narrow, mark)
nsubj(be, narrow)
case(orifice, of)
det(orifice, the)
nmod(narrow, orifice)
case(artery, of)
det(artery, the)
amod(artery, large)
amod(artery, major)
amod(artery, visceral)
nmod(orifice, artery)
punct(cover, .)
case(particular, in)
obl(occlude, particular)
punct(occlude, ,)
det(orifice, the)
nsubj:pass(occlude, orifice)
case(artery, of)
det(artery, the)
amod(artery, right)
amod(artery, renal)
cc(celiac, and)
conj(renal, celiac)
nmod(orifice, artery)
aux:pass(occlude, be)
advmod(occlude, virtually)
root(ROOT, occlude)
punct(occlude, ,)
cc(occlude, and)
det(artery, both)
amod(artery, calcify)
amod(artery, common)
compound(artery, iliac)
nsubj:pass(occlude, artery)
aux:pass(occlude, be)
advmod(occlude, completely)
conj(occlude, occlude)
punct(occlude, .)
det(lung, the)
nsubj(weigh, lung)
root(ROOT, weigh)
advmod(weigh, together)
nummod(gm, 950)
obj(weigh, gm)
punct(weigh, .)
punct(weigh, .)
case(surface, on)
det(surface, the)
obl(be, surface)
case(lung, of)
det(lung, both)
nmod(surface, lung)
expl(be, there)
root(ROOT, be)
compound(bleb, emphysematous)
nsubj(be, bleb)
acl(bleb, measure)
compound:prt(measure, up)
case(cm., to)
nummod(cm., 3)
obl(measure, cm.)
case(diameter, in)
obl(measure, diameter)
punct(be, .)
det(parenchyma, the)
nsubj(hyperemic, parenchyma)
cop(hyperemic, be)
advmod(hyperemic, slightly)
root(ROOT, hyperemic)
case(apex, in)
det(apex, the)
obl(hyperemic, apex)
case(lung, of)
det(lung, the)
amod(lung, leave)
nmod(apex, lung)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(hyperemic, be)
amod(firm, several)
nsubj(be, firm)
punct(firm, ,)
amod(nodule, gray)
punct(nodule, ,)
amod(nodule, fibrocalcific)
conj(firm, nodule)
acl(firm, measure)
advmod(large, as)
xcomp(measure, large)
case(mm, as)
nummod(mm, 3)
obl(large, mm)
punct(hyperemic, .)
root(ROOT, .)
advmod(be, microscopically)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, emphysema)
punct(fibrosis, ,)
conj(emphysema, fibrosis)
punct(congestion, ,)
cc(congestion, and)
amod(congestion, vascular)
conj(emphysema, congestion)
punct(be, . )
compound(lade, macrophage)
nsubj:pass(see, lade)
case(pigment, with)
amod(pigment, brown)
nmod(lade, pigment)
aux:pass(see, be)
root(ROOT, see)
case(some, in)
obl(see, some)
case(alveoli, of)
det(alveoli, the)
nmod(some, alveoli)
punct(thicken, ,)
cc(thicken, and)
det(intima, the)
nsubj:pass(thicken, intima)
case(some, of)
nmod(intima, some)
case(artery, of)
det(artery, the)
amod(artery, small)
nmod(some, artery)
aux:pass(thicken, be)
conj(see, thicken)
case(tissue, by)
amod(tissue, fibrous)
obl(thicken, tissue)
punct(see, .)
det(spleen, the)
compound(spleen, firm)
amod(spleen, red)
nsubj(weigh, spleen)
root(ROOT, weigh)
nummod(gm., 410)
obj(weigh, gm.)
punct(mottle, ,)
cc(mottle, and)
nsubj:pass(mottle, it)
aux:pass(mottle, be)
nsubj:pass(mottle, surface)
aux:pass(mottle, be)
conj(weigh, mottle)
case(discrete, by)
obl(mottle, discrete)
punct(patch, ,)
amod(patch, small)
obl(mottle, patch)
case(material, of)
amod(material, white)
nmod(patch, material)
punct(weigh, .)
det(cell, the)
amod(cell, endothelial)
nsubj(prominent, cell)
acl(cell, lining)
det(sinusoid, the)
obj(lining, sinusoid)
cop(prominent, be)
root(ROOT, prominent)
punct(quantity, ,)
cc(quantity, and)
amod(quantity, many)
amod(quantity, contain)
amod(quantity, large)
conj(prominent, quantity)
case(hemosiderin, of)
nmod(quantity, hemosiderin)
punct(prominent, .)
nsubj(contain, some)
case(sinusoid, of)
det(sinusoid, the)
nmod(some, sinusoid)
root(ROOT, contain)
amod(number, large)
obj(contain, number)
case(cell, of)
amod(cell, nucleate)
amod(cell, red)
nmod(number, cell)
punct(find, ,)
cc(find, and)
nsubj:pass(find, cell)
case(series, of)
det(series, the)
amod(series, granulocytic)
nmod(cell, series)
aux:pass(find, be)
conj(contain, find)
case(number, in)
amod(number, small)
obl(find, number)
punct(contain, .)
expl(be, there)
root(ROOT, be)
amod(fibrosis, slight)
nsubj(be, fibrosis)
cc(arteriolosclerosis, and)
amod(arteriolosclerosis, mark)
conj(fibrosis, arteriolosclerosis)
punct(be, .)
det(liver, the)
nsubj(weigh, liver)
root(ROOT, weigh)
nummod(gm., 2,090)
obj(weigh, gm.)
punct(brown, ,)
cop(brown, be)
parataxis(weigh, brown)
case(color, in)
obl(brown, color)
punct(mottle, ,)
cc(mottle, and)
det(surface, the)
compound(surface, cut)
nsubj:pass(mottle, surface)
aux:pass(mottle, be)
conj(weigh, mottle)
case(area, by)
amod(area, irregular)
amod(area, pale)
obl(mottle, area)
punct(mottle, .)
advmod(be, microscopically)
punct(be, ,)
expl(be, there)
parataxis(weigh, be)
nsubj(be, hyperemia)
case(vein, of)
det(vein, the)
amod(vein, central)
nmod(hyperemia, vein)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(be, be)
det(atrophy, some)
nsubj(be, atrophy)
case(parenchyma, of)
amod(parenchyma, adjacent)
nmod(atrophy, parenchyma)
punct(weigh, .)
det(cell, some)
compound(cord, liver)
compound(cell, cord)
nsubj(contain, cell)
root(ROOT, contain)
amod(cytoplasm, vacuolate)
obj(contain, cytoplasm)
punct(contain, ,)
mark(have, while)
nsubj(have, other)
advcl(contain, have)
amod(amount, small)
obj(have, amount)
case(pigment, of)
amod(pigment, brown)
compound(pigment, hemosiderin)
nmod(amount, pigment)
punct(contain, .)
det(gallbladder, the)
nsubj(contain, gallbladder)
root(ROOT, contain)
advmod(40, about)
nummod(cc., 40)
obj(contain, cc.)
case(bile, of)
amod(brown, green)
punct(brown, -)
amod(bile, brown)
nmod(cc., bile)
cc(calculi, and)
obl:npmod(smooth, 3)
amod(calculi, smooth)
punct(calculi, ,)
amod(green, dark)
punct(green, -)
amod(calculi, green)
conj(bile, calculi)
acl(calculi, measure)
advmod(1, up)
fixed(up, to)
nummod(cm., 1)
obj(measure, cm.)
case(diameter, in)
obl(measure, diameter)
punct(contain, .)
det(mucosa, the)
nsubj(atrophic, mucosa)
case(stomach, of)
det(stomach, the)
nmod(mucosa, stomach)
cop(atrophic, be)
root(ROOT, atrophic)
cc(blacken, and)
advmod(blacken, irregularly)
conj(atrophic, blacken)
case(area, over)
det(area, a)
nummod(cm., 14)
compound(area, cm.)
obl(blacken, area)
punct(atrophic, .)
det(intestine, the)
amod(intestine, small)
cc(large, and)
conj(small, large)
nsubj:pass(fill, intestine)
aux:pass(fill, be)
root(ROOT, fill)
case(gas, with)
obl(fill, gas)
punct(dilate, ,)
cc(dilate, and)
det(jejunum, the)
nsubj:pass(dilate, jejunum)
aux:pass(dilate, be)
conj(fill, dilate)
case(time, to)
advmod(2, about)
nummod(time, 2)
obl(dilate, time)
nmod:poss(circumference, its)
amod(circumference, normal)
obl(dilate, circumference)
punct(fill, .)
det(intestine, the)
amod(intestine, small)
nsubj(contain, intestine)
cc(colon, and)
conj(intestine, colon)
root(ROOT, contain)
advmod(300, approximately)
nummod(cc., 300)
obj(contain, cc.)
case(smell, of)
compound(smell, foul)
punct(smell, -)
nmod(cc., smell)
punct(material, ,)
amod(material, sanguineous)
conj(smell, material)
punct(mucosa, ,)
cc(mucosa, and)
det(mucosa, the)
conj(cc., mucosa)
nmod(mucosa, throughout)
cop(hyperemic, be)
acl(mucosa, hyperemic)
cc(mottle, and)
amod(brown, mottle)
amod(brown, green)
punct(brown, -)
conj(hyperemic, brown)
punct(hyperemic, . )
det(search, a)
amod(search, careful)
nsubj(fail, search)
root(ROOT, fail)
mark(show, to)
xcomp(fail, show)
obj(show, occlusion)
case(any, of)
nmod(occlusion, any)
case(vessel, of)
det(vessel, the)
amod(vessel, mesenteric)
nmod(any, vessel)
punct(vessel, .)
advmod(show, microscopically)
punct(show, ,)
det(mucosa, the)
nsubj(show, mucosa)
case(stomach, of)
det(stomach, the)
nmod(mucosa, stomach)
conj(fail, show)
amod(cytolysis, extensive)
obj(show, cytolysis)
cc(contain, and)
conj(show, contain)
amod(number, large)
obj(contain, number)
case(rod, of)
obl:npmod(negative, gram)
punct(negative, -)
amod(rod, negative)
amod(rod, bacterial)
nmod(number, rod)
punct(fail, .)
det(submucosa, the)
nsubj:pass(infiltrate, submucosa)
aux:pass(infiltrate, be)
advmod(infiltrate, focally)
root(ROOT, infiltrate)
case(neutrophil, with)
obl(infiltrate, neutrophil)
punct(infiltrate, .)
det(mucosa, the)
nsubj(show, mucosa)
case(jejunum, of)
det(jejunum, the)
nmod(mucosa, jejunum)
cc(ileum, and)
conj(jejunum, ileum)
root(ROOT, show)
amod(change, similar)
obj(show, change)
punct(edematous, ,)
cc(edematous, and)
case(area, in)
det(area, some)
obl(edematous, area)
det(submucosa, the)
nsubj(edematous, submucosa)
cop(edematous, be)
conj(show, edematous)
cc(contain, and)
conj(edematous, contain)
amod(number, considerable)
obj(contain, number)
case(neutrophil, of)
nmod(number, neutrophil)
punct(show, .)
nsubj:pass(fill, some)
case(vessel, of)
det(vessel, the)
amod(vessel, small)
nmod(some, vessel)
aux:pass(fill, be)
root(ROOT, fill)
case(thrombi, with)
compound(thrombi, fibrin)
obl(fill, thrombi)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(fill, be)
amod(hemorrhage, extensive)
amod(hemorrhage, interstitial)
nsubj(be, hemorrhage)
punct(fill, . )
det(section, a)
nsubj(reveal, section)
case(colon, of)
det(colon, the)
nmod(section, colon)
root(ROOT, reveal)
amod(hyperemia, intense)
obj(reveal, hyperemia)
cc(ulceration, and)
amod(ulceration, extensive)
amod(ulceration, focal)
conj(hyperemia, ulceration)
case(mucosa, of)
det(mucosa, the)
nmod(ulceration, mucosa)
punct(hyperemia, ,)
acl(mucosa, associate)
case(fibrin, with)
amod(fibrin, much)
obl(associate, fibrin)
cc(neutrophil, and)
amod(neutrophil, many)
conj(fibrin, neutrophil)
punct(culture, .)
parataxis(reveal, culture)
acl(culture, take)
case(jejunum, from)
det(jejunum, the)
obl(take, jejunum)
amod(albicans, yield)
compound(albicans, Monilia)
obl(take, albicans)
punct(pyocanea, ,)
compound(pyocanea, Pseudomonas)
conj(albicans, pyocanea)
punct(aerogene, ,)
compound(aerogene, Aerobacter)
conj(albicans, aerogene)
punct(Streptococcus, ,)
cc(Streptococcus, and)
conj(albicans, Streptococcus)
advmod(albicans, anhemolyticus)
punct(reveal, .)
det(kidney, the)
nsubj(pale, kidney)
cop(pale, be)
root(ROOT, pale)
cc(weigh, and)
conj(pale, weigh)
advmod(gm., right)
punct(gm., ,)
nummod(gm., 110)
obj(weigh, gm.)
punct(leave, ,)
cc(leave, and)
conj(pale, leave)
punct(leave, ,)
nummod(gm, 230)
obj(leave, gm)
punct(pale, .)
punct(pale, .)
det(surface, the)
nsubj(granular, surface)
cop(granular, be)
advmod(granular, coarsely)
cc(finely, and)
advmod(granular, finely)
root(ROOT, granular)
cc(punctuate, and)
conj(granular, punctuate)
case(cyst, by)
amod(cyst, clear)
punct(cyst, ,)
compound(fill, fluid)
punct(fill, -)
amod(cyst, fill)
obl(punctuate, cyst)
acl(cyst, measure)
advmod(3, up)
fixed(up, to)
nummod(cm., 3)
obj(measure, cm.)
case(diameter, in)
obl(measure, diameter)
punct(granular, .)
case(surface, on)
det(surface, the)
obl(be, surface)
case(kidney, of)
det(kidney, the)
amod(kidney, right)
nmod(surface, kidney)
expl(be, there)
root(ROOT, be)
advmod(be, also)
nummod(firm, 2)
amod(firm, yellow)
punct(firm, ,)
nsubj(be, firm)
punct(area, ,)
amod(raise, friable)
amod(area, raise)
conj(firm, area)
acl(area, measure)
compound:prt(measure, up)
case(cm., to)
nummod(cm., 2)
obl(measure, cm.)
case(diameter, in)
nmod(cm., diameter)
punct(show, .)
advmod(show, microscopically)
punct(show, ,)
det(kidney, both)
nsubj(show, kidney)
parataxis(be, show)
amod(scar, many)
amod(scar, small)
amod(scar, cortical)
obj(show, scar)
case(which, in)
obl(be, which)
expl(be, there)
acl:relcl(scar, be)
nsubj(be, glomerular)
cc(fibrosis, and)
amod(fibrosis, interstitial)
conj(glomerular, fibrosis)
punct(atrophy, ,)
amod(atrophy, tubular)
conj(glomerular, atrophy)
punct(infiltration, ,)
cc(infiltration, and)
det(infiltration, a)
conj(glomerular, infiltration)
case(lymphocyte, of)
nmod(infiltration, lymphocyte)
cc(cell, and)
compound(cell, plasma)
conj(lymphocyte, cell)
punct(tubule, .)
amod(tubule, occasional)
appos(lymphocyte, tubule)
acl(tubule, contain)
amod(cast, hyaline)
obj(contain, cast)
acl(cast, admixe)
case(neutrophil, with)
obl(admixe, neutrophil)
punct(be, .)
advmod(be, throughout)
punct(be, ,)
expl(be, there)
acl:relcl(tubule, be)
amod(arteriolosclerosis, mark)
nsubj(be, arteriolosclerosis)
cc(hyalinization, and)
conj(arteriolosclerosis, hyalinization)
case(arteriole, of)
amod(arteriole, afferent)
compound(arteriole, glomerular)
nmod(arteriolosclerosis, arteriole)
punct(be, .)
det(change, these)
nsubj:pass(mark, change)
aux:pass(mark, be)
advmod(mark, more)
root(ROOT, mark)
case(kidney, in)
det(kidney, the)
amod(kidney, atrophic)
amod(kidney, right)
obl(mark, kidney)
case(left, than)
case(left, in)
det(left, the)
obl(mark, left)
punct(mark, .)
case(addition, in)
obl(be, addition)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nummod(adenomas, 2)
amod(adenomas, small)
amod(adenomas, papillary)
nsubj(be, adenomas)
case(kidney, in)
det(kidney, the)
amod(kidney, right)
nmod(adenomas, kidney)
punct(be, .)
det(bone, the)
nsubj(soft, bone)
case(body, of)
det(body, the)
amod(body, vertebral)
nmod(bone, body)
punct(rib, ,)
conj(body, rib)
punct(sternum, ,)
cc(sternum, and)
conj(body, sternum)
cop(soft, be)
root(ROOT, soft)
cc(compress, and)
aux:pass(compress, be)
advmod(compress, easily)
conj(soft, compress)
punct(soft, .)
det(marrow, the)
nsubj(pale, marrow)
case(body, of)
det(body, the)
amod(body, vertebral)
nmod(marrow, body)
cop(pale, be)
root(ROOT, pale)
cc(show, and)
conj(pale, show)
obj(show, area)
case(replacement, of)
compound(replacement, fatty)
nmod(area, replacement)
punct(pale, .)
advmod(be, microscopically)
punct(be, ,)
expl(be, there)
root(ROOT, be)
amod(area, many)
nsubj(be, area)
case(hypercellularity, of)
nmod(area, hypercellularity)
acl(area, alternate)
case(area, with)
obl(alternate, area)
case(hypocellularity, of)
nmod(area, hypocellularity)
punct(be, .)
det(cell, the)
nsubj(normal, cell)
case(erythroid, of)
det(erythroid, the)
nmod(cell, erythroid)
punct(myeloid, ,)
conj(erythroid, myeloid)
punct(series, ,)
cc(series, and)
amod(series, megakaryocytic)
conj(erythroid, series)
cop(normal, be)
root(ROOT, normal)
case(number, except)
case(number, for)
nmod:poss(number, they)
obl(normal, number)
punct(normal, .)
expl(be, there)
root(ROOT, be)
det(evidence, no)
nsubj(be, evidence)
case(fibrosis, of)
nmod(evidence, fibrosis)
punct(be, .)
det(muscle, the)
nsubj(soft, muscle)
case(extremity, of)
det(extremity, the)
nmod(muscle, extremity)
punct(wall, ,)
compound(wall, chest)
conj(extremity, wall)
punct(neck, ,)
conj(extremity, neck)
punct(wall, ,)
cc(wall, and)
amod(wall, abdominal)
conj(extremity, wall)
cop(soft, be)
root(ROOT, soft)
punct(pale, ,)
conj(soft, pale)
punct(atrophic, ,)
cc(atrophic, and)
conj(soft, atrophic)
punct(study, .)
amod(study, microscopic)
conj(soft, study)
case(gastrocnemius, of)
det(gastrocnemius, the)
nmod(study, gastrocnemius)
punct(major, ,)
compound(major, pectoralis)
conj(gastrocnemius, major)
punct(abdominis, ,)
compound(abdominis, transversus)
conj(gastrocnemius, abdominis)
punct(brachii, ,)
compound(brachii, bicep)
conj(gastrocnemius, brachii)
punct(diaphragm, ,)
cc(diaphragm, and)
conj(gastrocnemius, diaphragm)
conj(study, show)
obj(show, atrophy)
cc(varying, as)
fixed(as, well)
fixed(as, as)
advcl(show, varying)
obj(varying, degree)
case(injury, of)
nmod(degree, injury)
acl(injury, range)
case(swell, from)
obl(range, swell)
cc(vacuolization, and)
conj(swell, vacuolization)
case(necrosis, to)
amod(necrosis, focal)
obl(range, necrosis)
case(fiber, of)
det(fiber, the)
compound(fiber, muscle)
nmod(necrosis, fiber)
punct(soft, .)
det(change, these)
nsubj:pass(mark, change)
aux:pass(mark, be)
advmod(mark, most)
root(ROOT, mark)
case(gastrocnemius, in)
det(gastrocnemius, the)
obl(mark, gastrocnemius)
cc(bicep, and)
conj(gastrocnemius, bicep)
cc(evident, and)
advmod(evident, less)
conj(gastrocnemius, evident)
case(pectoralis, in)
det(pectoralis, the)
obl(evident, pectoralis)
punct(diaphragm, ,)
conj(pectoralis, diaphragm)
punct(transversus, ,)
cc(transversus, and)
conj(pectoralis, transversus)
punct(mark, .)
case(gastrocnemius, in)
det(gastrocnemius, the)
obl(be, gastrocnemius)
cc(bicep, and)
conj(gastrocnemius, bicep)
expl(be, there)
root(ROOT, be)
amod(fiber, many)
amod(fiber, swell)
cc(homogeneous, and)
conj(swell, homogeneous)
amod(fiber, necrotic)
nsubj(be, fiber)
case(that, such)
fixed(such, as)
nmod(fiber, that)
acl(that, show)
case(Figure, in)
obl(show, Figure)
nummod(Figure, 2)
punct(eosinophilic, .)
amod(fiber, such)
amod(fiber, swell)
nsubj(eosinophilic, fiber)
cop(eosinophilic, be)
advmod(eosinophilic, deeply)
parataxis(be, eosinophilic)
punct(contain, ,)
conj(eosinophilic, contain)
det(nuclei, a)
amod(nuclei, few)
amod(nuclei, pyknotic)
obj(contain, nuclei)
punct(show, ,)
cc(show, and)
conj(eosinophilic, show)
obj(show, loss)
case(cross-striation, of)
nmod(loss, cross-striation)
punct(obliteration, ,)
conj(cross-striation, obliteration)
case(myofibril, of)
nmod(cross-striation, myofibril)
punct(vacuolization, ,)
cc(vacuolization, and)
amod(vacuolization, prominent)
conj(cross-striation, vacuolization)
punct(be, .)
det(necrosis, the)
nsubj(involve, necrosis)
advmod(involve, often)
root(ROOT, involve)
advmod(portion, only)
det(portion, a)
obj(involve, portion)
case(length, of)
det(length, the)
nmod(portion, length)
case(fiber, of)
det(fiber, a)
amod(fiber, give)
nmod(length, fiber)
punct(normal, ,)
cc(normal, and)
advmod(normal, usually)
det(fiber, the)
advmod(adjacent, immediately)
amod(fiber, adjacent)
nsubj(normal, fiber)
cop(normal, be)
conj(involve, normal)
punct(involve, .)
mark(show, as)
advcl(pale, show)
case(Figure, in)
obl(show, Figure)
nummod(Figure, 3)
punct(pale, ,)
det(protoplasm, the)
nsubj(pale, protoplasm)
case(fiber, of)
amod(fiber, other)
nmod(protoplasm, fiber)
cop(pale, be)
root(ROOT, pale)
punct(granular, ,)
conj(pale, granular)
punct(flocculate, ,)
cc(flocculate, or)
conj(pale, flocculate)
cc(invade, and)
conj(pale, invade)
case(phagocyte, by)
obl(invade, phagocyte)
punct(pale, .)
amod(cell, inflammatory)
nsubj(absent, cell)
cop(absent, be)
advmod(absent, strikingly)
root(ROOT, absent)
punct(absent, .)
case(association, in)
obl(be, association)
case(change, with)
det(change, these)
nmod(association, change)
case(fiber, in)
det(fiber, the)
nmod(change, fiber)
punct(be, ,)
expl(be, there)
root(ROOT, be)
ccomp(be, strike)
obj(strike, alteration)
case(nuclei, in)
det(nuclei, the)
compound(nuclei, muscle)
nmod(alteration, nuclei)
punct(be, .)
nsubj:pass(increase, these)
aux:pass(increase, be)
root(ROOT, increase)
cc:preconj(number, both)
case(number, in)
obl(increase, number)
cc(size, and)
case(size, in)
conj(number, size)
punct(contain, ,)
acl(size, contain)
amod(nucleoli, prominent)
obj(contain, nucleoli)
punct(distribute, ,)
cc(distribute, and)
aux:pass(distribute, be)
conj(increase, distribute)
case(fiber, throughout)
det(fiber, the)
obl(distribute, fiber)
punct(Figs, ()
appos(fiber, Figs)
punct(Figs, .)
nummod(Figs, 2)
case(5, -)
nmod(2, 5)
punct(Figs, ))
punct(fiber, .)
case(contrast, in)
nmod(fiber, contrast)
case(change, to)
det(change, the)
amod(change, nuclear)
nmod(contrast, change)
acl(change, describe)
advmod(describe, above)
punct(see, ,)
det(change, another)
nsubj:pass(see, change)
case(nuclei, in)
compound(nuclei, muscle)
nmod(change, nuclei)
aux:pass(see, be)
conj(increase, see)
punct(see, ,)
advmod(occur, usually)
advcl(see, occur)
case(fiber, in)
obl(occur, fiber)
nsubj(smaller, that)
cop(smaller, be)
advmod(smaller, somewhat)
acl:relcl(fiber, smaller)
case(normal, than)
obl(smaller, normal)
cc(show, but)
nsubj(show, that)
conj(smaller, show)
amod(cross-striation, distinct)
obj(show, cross-striation)
cc(myofibrillae, and)
conj(cross-striation, myofibrillae)
punct(increase, .)
det(nuclei, the)
nsubj(show, nuclei)
case(fiber, of)
det(fiber, these)
nmod(nuclei, fiber)
punct(nuclei, ,)
mark(show, as)
aux:pass(show, be)
advcl(show, show)
case(figure, in)
obl(show, figure)
nummod(figure, 3)
cc(4, and)
conj(3, 4)
punct(show, ,)
root(ROOT, show)
amod(proliferation, remarkable)
obj(show, proliferation)
cc(approximate, and)
aux:pass(approximate, be)
advmod(approximate, closely)
conj(show, approximate)
punct(approximate, ,)
advcl(approximate, form)
det(structure, a)
compound(structure, chainlike)
obj(form, structure)
case(center, at)
cc:preconj(center, either)
det(center, the)
obl(form, center)
cc(periphery, or)
det(periphery, the)
conj(center, periphery)
case(fiber, of)
det(fiber, the)
nmod(periphery, fiber)
punct(show, .)
amod(nuclei, Individual)
nsubj(oval, nuclei)
cop(oval, be)
advmod(oval, usually)
root(ROOT, oval)
case(round, to)
obl(oval, round)
punct(oval, ,)
mark(elongate, though)
advmod(elongate, occasionally)
advcl(oval, elongate)
punct(small, ,)
cc(small, and)
advmod(small, frequently)
conj(elongate, small)
cc(pyknotic, and)
advmod(pyknotic, somewhat)
conj(small, pyknotic)
punct(oval, .)
case(time, at)
obl(observe, time)
punct(observe, ,)
nsubj:pass(observe, clump)
case(nuclei, of)
nummod(nuclei, 10)
case(pack, to)
nmod(10, 15)
advmod(pack, closely)
punct(pack, -)
amod(nuclei, pack)
nmod(clump, nuclei)
aux:pass(observe, be)
advmod(observe, also)
root(ROOT, observe)
punct(observe, .)
advmod(be, occasionally)
expl(be, there)
root(ROOT, be)
amod(fiber, small)
amod(fiber, basophilic)
nsubj(be, fiber)
nsubj(devoid, that)
cop(devoid, be)
acl:relcl(fiber, devoid)
case(myofibrillae, of)
obl(devoid, myofibrillae)
cc(contain, and)
conj(be, contain)
amod(nuclei, many)
amod(nuclei, vesicular)
obj(contain, nuclei)
case(nucleoli, with)
amod(nucleoli, prominent)
nmod(nuclei, nucleoli)
punct(fig, ()
appos(nucleoli, fig)
punct(fig, .)
nummod(fig, 5)
punct(fig, ))
punct(be, .)
nsubj:pass(think, these)
aux:pass(think, be)
root(ROOT, think)
mark(represent, to)
xcomp(think, represent)
amod(fiber, regenerating)
obj(represent, fiber)
punct(think, . )
compound(stain, Trichrome)
nsubj(fail, stain)
root(ROOT, fail)
mark(show, to)
xcomp(fail, show)
obj(show, fibrosis)
case(muscle, in)
det(muscle, the)
amod(muscle, involve)
obl(show, muscle)
punct(fail, .)
case(all, in)
obl(normal, all)
case(section, of)
det(section, the)
nmod(all, section)
acl(section, examine)
punct(normal, ,)
det(arteriole, the)
nsubj(normal, arteriole)
cc(artery, and)
amod(artery, small)
conj(arteriole, artery)
cop(normal, be)
advmod(normal, essentially)
root(ROOT, normal)
punct(normal, .)
nsubj:pass(treat, purification)
case(conjugate, of)
det(conjugate, the)
nmod(purification, conjugate)
mark(attempt, in)
acl(conjugate, attempt)
mark(improve, to)
xcomp(attempt, improve)
obj(improve, specificity)
case(stain, of)
nmod(specificity, stain)
punct(antisera, ,)
det(antisera, the)
amod(label, fluorescein)
punct(label, -)
amod(antisera, label)
conj(purification, antisera)
acl(antisera, use)
case(method, in)
det(method, both)
amod(method, direct)
cc(indirect, and)
conj(direct, indirect)
obl(use, method)
aux:pass(treat, be)
root(ROOT, treat)
case(one, in)
obl(treat, one)
case(way, of)
amod(way, several)
nmod(one, way)
punct(treat, :)
punct(1, ()
nummod(pass, 1)
punct(1, ))
nsubj:pass(pass, they)
aux:pass(pass, be)
acl:relcl(way, pass)
case(chloride, through)
obl(pass, Dowex)
punct(chloride, -)
nummod(chloride, 2)
punct(chloride, -)
obl(pass, chloride)
advmod(treat, twice)
cc(treat, and)
conj(pass, treat)
case(powder, with)
compound(powder, acetone)
amod(powder, insoluble)
obl(treat, powder)
punct(coon, ()
appos(powder, coon)
punct(coon, ,)
appos(coon, 1958)
punct(coon, ))
acl(powder, prepare)
case(liver, from)
compound(liver, mouse)
obl(prepare, liver)
cc(stem, or)
case(stem, from)
amod(stem, healthy)
amod(stem, sweet)
compound(stem, clover)
conj(liver, stem)
cc(tissue, or)
compound(gall, crown)
compound(tissue, gall)
conj(stem, tissue)
acl(tissue, produce)
case(tumefacien, by)
compound(tumefacien, Agrobacterium)
obl(produce, tumefacien)
punct(E., ()
appos(tumefacien, E.)
flat(E., F.)
flat(E., Smith)
cc(townsend, &)
conj(E., townsend)
punct(E., ))
case(stem, on)
amod(stem, sweet)
compound(stem, clover)
compound(. , stem)
nmod(E., . )
punct(2, ()
nummod(. , 2)
punct(2, ))
det(conjugate, the)
nsubj:pass(absorb, conjugate)
advmod(absorb, as)
fixed(as, well)
mark(absorb, as)
det(sera, the)
amod(sera, intermediate)
nsubj:pass(absorb, sera)
aux:pass(absorb, be)
root(ROOT, absorb)
case(minute, for)
nummod(minute, 30)
obl(absorb, minute)
case(mg, with)
nummod(mg, 20)
case(50, -)
nmod(20, 50)
obl(absorb, mg)
case(protein, of)
nmod(mg, protein)
acl(mg, extract)
case(stem, from)
amod(stem, healthy)
amod(stem, sweet)
compound(stem, clover)
obl(extract, stem)
punct(absorb, .)
det(protein, the)
nsubj:pass(extract, protein)
aux:pass(extract, be)
root(ROOT, extract)
case(volume, with)
nummod(volume, 3)
obl(extract, volume)
case(Af, of)
nmod(volume, Af)
case(Af, in)
nmod(volume, Af)
mark(give, to)
advcl(extract, give)
det(extract, a)
advmod(neutral, nearly)
amod(extract, neutral)
obj(give, extract)
cc(precipitate, and)
conj(extract, precipitate)
case(saturation, by)
nummod(%, 80)
compound(saturation, %)
obl(precipitate, saturation)
case(Af, with)
nmod(saturation, Af)
punct(wash, .)
det(precipitate, the)
nsubj:pass(wash, precipitate)
aux:pass(wash, be)
parataxis(extract, wash)
advmod(wash, twice)
case(solution, with)
det(solution, a)
nummod(%, 80)
obl:npmod(saturate, %)
amod(solution, saturate)
obl(wash, solution)
case(Af, of)
nmod(solution, Af)
punct(solution, ,)
acl(solution, dissolve)
case(quantity, in)
det(quantity, a)
amod(quantity, small)
obl(dissolve, quantity)
case(buffer, of)
compound(m, 0.1)
nummod(buffer, m)
amod(buffer, neutral)
compound(buffer, phosphate)
nmod(quantity, buffer)
punct(buffer, ,)
acl(buffer, dialyze)
case(water, against)
amod(water, cold)
amod(water, distilled)
obl(dialyze, water)
mark(free, till)
advcl(dialyze, free)
case(ion, from)
compound(ion, ammonium)
obl(free, ion)
punct(lyophilize, ,)
cc(lyophilize, and)
conj(free, lyophilize)
xcomp(lyophilize, use)
compound(. , liquid)
compound(. , nitrogen)
obj(use, . )
punct(3, ()
nummod(treat, 3)
punct(3, ))
case(experiment, in)
amod(experiment, other)
obl(treat, experiment)
det(conjugate, the)
amod(conjugate, indirect)
nsubj:pass(treat, conjugate)
aux:pass(treat, be)
acl:relcl(. , treat)
case(volume, with)
nummod(volume, 3)
obl(treat, volume)
case(acetate, of)
compound(acetate, ethyl)
nmod(volume, acetate)
mark(recommend, as)
advcl(treat, recommend)
case(dineen, by)
obl(recommend, dineen)
cc(Ade, and)
conj(dineen, Ade)
punct(1957, ()
appos(Ade, 1957)
punct(1957, ))
obl(recommend, . )
punct(4, ()
appos(. , 4)
punct(4, ))
det(conjugate, the)
nsubj:pass(pass, conjugate)
aux:pass(pass, be)
root(ROOT, pass)
case(column, through)
det(column, a)
compound(column, diethylaminoethyl)
punct(deae, ()
nummod(column, deae)
punct(deae, ))
compound(column, cellulose)
obl(pass, column)
acl(column, equilibrate)
case(buffer, with)
amod(buffer, neutral)
compound(buffer, phosphate)
obl(equilibrate, buffer)
punct(buffer, ()
appos(buffer, pbs)
punct(contain, ))
appos(buffer, contain)
compound(phosphate, Af)
compound(phosphate, potassium)
nsubj(same, phosphate)
cc(Af, and)
conj(phosphate, Af)
punct(phosphate, .)
appos(phosphate, preparation)
case(section, of)
amod(section, freeze)
nmod(preparation, section)
det(technique, the)
nsubj(same, technique)
case(section, of)
compound(section, cutting)
nmod(technique, section)
cop(same, be)
advmod(same, essentially)
det(same, the)
root(ROOT, same)
case(that, as)
obl(same, that)
acl(that, describe)
case(coon, by)
obl(describe, coon)
compound(coon, et)
flat(coon, al)
punct(1951, ()
appos(coon, 1951)
punct(1951, ))
punct(1951, .)
compound(tumor, Root)
cc(tumor, and)
conj(Root, stem)
conj(coon, tumor)
case(plant, from)
amod(plant, sweet)
compound(plant, clover)
nmod(tumor, plant)
acl(plant, infect)
case(WTV, with)
obl(infect, WTV)
aux:pass(freeze, be)
advmod(freeze, quick)
punct(freeze, -)
acl:relcl(plant, freeze)
case(nitrogen, in)
compound(nitrogen, liquid)
obl(freeze, nitrogen)
punct(embed, ,)
acl(nitrogen, embed)
case(ice, in)
obl(embed, ice)
punct(cut, ,)
cc(cut, and)
conj(embed, cut)
case(ym, at)
nummod(ym, 3)
case(6, -)
nmod(3, 6)
punct(ym, **)
obl(cut, ym)
case(cryostat, in)
det(cryostat, a)
nmod(ym, cryostat)
acl(cryostat, maintain)
case(degree, at)
punct(degree, -)
nummod(degree, 16)
punct(degree, -)
obl(maintain, degree)
case(degree, to)
punct(degree, -)
nummod(degree, 20)
punct(degree, -)
obl(maintain, degree)
punct(ym, .)
det(section, the)
nsubj:pass(mount, section)
aux:pass(mount, be)
root(ROOT, mount)
case(slide, on)
amod(slide, cold)
obl(mount, slide)
acl(slide, smear)
case(adhesive, with)
nmod:poss(adhesive, haupt)
case(haupt, 's)
obl(smear, adhesive)
punct(Johansen, ()
appos(adhesive, Johansen)
punct(Johansen, ,)
appos(Johansen, 1940)
punct(Johansen, ))
case(experiment, in)
amod(experiment, earlier)
obl(smear, experiment)
punct(experiment, ,)
cc(experiment, and)
case(experiment, in)
amod(experiment, later)
conj(adhesive, experiment)
case(mixture, with)
det(mixture, a)
amod(mixture, different)
nmod(experiment, mixture)
case(component, of)
det(component, the)
amod(component, same)
nmod(mixture, component)
acl(component, report)
case(Schramm, by)
obl(report, Schramm)
cc(Rottger, and)
conj(Schramm, Rottger)
punct(1959, ()
appos(Schramm, 1959)
punct(1959, ))
punct(mount, .)
det(adhesive, the)
amod(adhesive, latter)
nsubj:pass(find, adhesive)
aux:pass(find, be)
root(ROOT, find)
mark(satisfactory, to)
cop(satisfactory, be)
advmod(more, much)
advmod(satisfactory, more)
xcomp(find, satisfactory)
punct(find, .)
det(section, the)
nsubj:pass(thaw, section)
aux:pass(thaw, be)
advmod(thaw, then)
root(ROOT, thaw)
mark(place, by)
advcl(thaw, place)
det(finger, a)
obj(place, finger)
case(slide, under)
det(slide, the)
obl(place, slide)
cc(dry, and)
conj(place, dry)
case(fan, under)
det(fan, a)
obl(dry, fan)
case(minute, for)
nummod(minute, 30)
obl(dry, minute)
punct(thaw, ;)
punct(thaw, ;)
mark(use, until)
advcl(store, use)
nsubj:pass(store, they)
aux:pass(store, be)
conj(thaw, store)
case(long, for)
advmod(long, as)
obl(store, long)
case(week, as)
nummod(week, 2)
obl(store, week)
punct(thaw, .)
compound(technique, Staining)
compound(method, technique)
amod(method, indirect)
root(ROOT, method)
punct(method, .)
det(section, the)
nsubj:pass(fix, section)
aux:pass(fix, be)
root(ROOT, fix)
case(acetone, in)
obl(fix, acetone)
case(minute, for)
nummod(minute, 15)
obl(fix, minute)
cc(dry, and)
conj(fix, dry)
case(degree, at)
nummod(degree, 37)
punct(degree, -)
obl(dry, degree)
case(minute, for)
nummod(minute, 30)
obl(dry, minute)
punct(fix, .)
nsubj:pass(cover, some)
case(they, of)
nmod(some, they)
aux:pass(cover, be)
advmod(cover, then)
root(ROOT, cover)
case(drop, with)
det(drop, a)
obl(cover, drop)
case(Af, of)
nmod(drop, Af)
case(chamber, in)
det(chamber, a)
amod(chamber, moist)
nmod(drop, chamber)
case(24, at)
nmod(chamber, 24)
case(degree, -)
nmod(24, degree)
case(minute, for)
nummod(minute, 30)
case(40, -)
nmod(30, 40)
obl(cover, minute)
punct(cover, .)
mark(cover, as)
compound(section, controls)
amod(section, other)
nsubj:pass(cover, section)
aux:pass(cover, be)
advmod(cover, similarly)
advcl(wash, cover)
case(Aj, with)
obl(cover, Aj)
punct(wash, .)
nsubj:pass(wash, section)
aux:pass(wash, be)
advmod(wash, then)
root(ROOT, wash)
case(pbs, with)
obl(wash, pbs)
case(minute, for)
nummod(minute, 15)
case(30, -)
nmod(15, 30)
obl(wash, minute)
punct(wash, .)
mark(blot, after)
advcl(layer, blot)
compound:prt(blot, out)
obj(blot, most)
case(saline, of)
det(saline, the)
nmod(most, saline)
case(section, around)
det(section, the)
obl(blot, section)
punct(layer, ,)
det(drop, a)
nsubj:pass(layer, drop)
case(Af, of)
nmod(drop, Af)
aux:pass(layer, be)
root(ROOT, layer)
case(each, over)
obl(layer, each)
case(section, of)
det(section, the)
nmod(each, section)
punct(each, ,)
acl(section, allow)
mark(react, to)
xcomp(allow, react)
case(minute, for)
nummod(minute, 30)
obl(react, minute)
punct(wash, ,)
cc(wash, and)
advmod(wash, then)
conj(layer, wash)
case(pbs, with)
obl(wash, pbs)
case(minute, for)
nummod(minute, 15)
case(30, -)
nmod(15, 30)
obl(wash, minute)
punct(layer, .)
mark(blot, after)
advcl(mount, blot)
compound:prt(blot, out)
obj(blot, most)
case(liquid, of)
det(liquid, the)
nmod(most, liquid)
case(section, around)
det(section, the)
nmod(liquid, section)
punct(mount, ,)
det(latter, the)
nsubj:pass(mount, latter)
aux:pass(mount, be)
root(ROOT, mount)
case(glycerine, in)
amod(glycerine, buffer)
obl(mount, glycerine)
punct(glycerine, ()
nummod(part, 7)
compound(glycerine, part)
appos(glycerine, glycerine)
case(part, to)
nummod(part, 3)
nmod(glycerine, part)
case(pbs, of)
nmod(part, pbs)
punct(glycerine, ))
punct(mount, .)
amod(method, direct)
root(ROOT, method)
punct(method, .)
mark(drying, after)
advcl(treat, drying)
det(section, the)
obj(drying, section)
case(fan, under)
det(fan, the)
obl(drying, fan)
punct(fix, ,)
conj(drying, fix)
case(acetone, in)
obl(fix, acetone)
punct(drying, ,)
cc(drying, and)
conj(fix, drying)
case(degree, at)
nummod(degree, 37)
punct(degree, -)
obl(drying, degree)
case(method, as)
case(method, in)
det(method, the)
amod(method, indirect)
obl(treat, method)
punct(treat, ,)
det(section, the)
nsubj:pass(treat, section)
aux:pass(treat, be)
root(ROOT, treat)
case(Af, with)
amod(Af, conjugate)
obl(treat, Af)
cc(Af, or)
conj(Af, Af)
punct(undiluted, ()
acl(Af, undiluted)
mark(mention, unless)
advcl(undiluted, mention)
advmod(mention, otherwise)
punct(undiluted, ))
case(minute, for)
nummod(minute, 5)
case(30, -)
nmod(5, 30)
obl(treat, minute)
punct(treat, .)
case(controls, as)
obl(treat, controls)
punct(treat, ,)
amod(section, other)
nsubj:pass(treat, section)
aux:pass(treat, be)
advmod(treat, similarly)
root(ROOT, treat)
case(Af, with)
obl(treat, Af)
cc(antiserum, or)
amod(antiserum, conjugate)
conj(Af, antiserum)
case(strain, to)
det(strain, the)
compound(York, New)
compound(strain, York)
obl(treat, strain)
case(virus, of)
compound(virus, potato)
amod(dwarf, yellow)
punct(dwarf, -)
amod(virus, dwarf)
nmod(strain, virus)
punct(Wolcyrz, ()
appos(virus, Wolcyrz)
cc(Black, and)
conj(Wolcyrz, Black)
punct(Wolcyrz, ,)
nmod:tmod(Wolcyrz, 1956)
punct(Wolcyrz, ))
punct(treat, .)
det(section, the)
nsubj:pass(wash, section)
aux:pass(wash, be)
advmod(wash, then)
root(ROOT, wash)
case(pbs, with)
obl(wash, pbs)
case(minute, for)
nummod(minute, 15)
case(30, -)
nmod(15, 30)
obl(wash, minute)
cc(mount, and)
conj(wash, mount)
case(glycerine, in)
amod(glycerine, buffer)
obl(mount, glycerine)
punct(glycerine, .)
compound(microscopy, Fluorescence)
compound(Stained, microscopy)
amod(section, Stained)
cc(unstained, or)
conj(Stained, unstained)
nsubj:pass(examine, section)
aux:pass(examine, be)
conj(wash, examine)
case(illumination, under)
amod(illumination, dark)
compound(illumination, field)
obl(examine, illumination)
case(microscope, in)
det(microscope, a)
compound(microscope, Zeiss)
amod(microscope, fluorescence)
nmod(illumination, microscope)
acl(microscope, equip)
case(lamp, with)
det(lamp, a)
compound(lamp, mercury)
compound(lamp, vapor)
obl(equip, lamp)
punct(lamp, ()
compound(hbo, Osram)
appos(lamp, hbo)
nummod(hbo, 200)
punct(hbo, ))
punct(wash, .)
det(beam, the)
compound(beam, light)
nsubj:pass(filter, beam)
case(lamp, from)
det(lamp, the)
nmod(beam, lamp)
aux:pass(filter, be)
root(ROOT, filter)
case(filter, through)
det(filter, a)
obl:npmod(standard, half)
punct(standard, -)
amod(thickness, standard)
compound(filter, thickness)
compound(1840, corning)
compound(filter, 1840)
obl(filter, filter)
punct(filter, .)
case(eyepiece, in)
det(eyepiece, the)
obl(use, eyepiece)
det(filter, a)
compound(filter, Wratten)
nummod(b, 2)
compound(filter, b)
nsubj:pass(use, filter)
aux:pass(use, be)
root(ROOT, use)
mark(filter, to)
advcl(use, filter)
compound:prt(filter, off)
amod(light, residual)
amod(light, ultra-violet)
obj(filter, light)
punct(use, . )
det(filter, a)
amod(filter, red)
nsubj:pass(use, filter)
punct(filter, ,)
compound(barrier, Zeiss)
compound(filter, barrier)
appos(filter, filter)
case(code, with)
det(code, the)
nmod(filter, code)
punct(Schott, ()
appos(code, Schott)
punct(Schott, ))
appos(code, designation)
appos(code, BG)
nummod(BG, 23)
punct(use, ,)
aux:pass(use, be)
advmod(use, also)
root(ROOT, use)
case(assembly, in)
det(assembly, the)
amod(assembly, ocular)
compound(assembly, lens)
obl(use, assembly)
mark(improve, as)
nsubj(improve, it)
advcl(use, improve)
det(contrast, the)
obj(improve, contrast)
case(fluorescence, between)
amod(fluorescence, specific)
cc(nonspecific, and)
conj(specific, nonspecific)
nmod(contrast, fluorescence)
punct(use, .)
compound(specificity, result)
root(ROOT, specificity)
case(method, of)
compound(method, stain)
amod(method, indirect)
nmod(specificity, method)
punct(specificity, .)
case(experiment, in)
det(experiment, the)
amod(experiment, first)
amod(experiment, few)
obl(pass, experiment)
nsubj:pass(pass, Af)
aux:pass(pass, be)
root(ROOT, pass)
case(chloride, through)
compound(chloride, Dowex)
punct(chloride, -)
nummod(chloride, 2)
punct(chloride, -)
obl(pass, chloride)
advmod(pass, twice)
cc(absorb, and)
conj(pass, absorb)
advmod(absorb, twice)
case(powder, with)
nummod(powder, 50)
case(100, -)
nmod(50, 100)
compound(powder, mg)
amod(powder, sweet)
compound(tissue, clover)
compound(powder, tissue)
obl(absorb, powder)
punct(pass, .)
det(sera, the)
amod(sera, intermediate)
nsubj:pass(absorb, sera)
aux:pass(absorb, be)
advmod(absorb, also)
advmod(absorb, similarly)
root(ROOT, absorb)
case(powder, with)
compound(powder, tissue)
obl(absorb, powder)
punct(absorb, .)
nsubj:pass(treat, section)
case(tumor, of)
amod(tumor, sweet)
compound(stem, clover)
compound(tumor, stem)
cc(root, and)
conj(stem, root)
nmod(section, tumor)
aux:pass(treat, be)
root(ROOT, treat)
case(1, with)
obl(treat, 1)
punct(solution, :)
nummod(solution, 10)
parataxis(treat, solution)
nmod(solution, of)
root(ROOT, Af)
case(minute, for)
nummod(minute, 30)
nmod(Af, minute)
punct(wash, ,)
conj(Af, wash)
case(saline, in)
amod(saline, buffer)
obl(wash, saline)
case(minute, for)
nummod(minute, 15)
obl(wash, minute)
punct(stain, ,)
conj(wash, stain)
case(Af, with)
obl(stain, Af)
case(minute, for)
nummod(minute, 30)
obl(stain, minute)
punct(wash, ,)
cc(wash, and)
conj(wash, wash)
case(minute, for)
nummod(minute, 15)
obl(wash, minute)
case(Aj, in)
nmod(minute, Aj)
punct(show, .)
amod(section, such)
nsubj(show, section)
parataxis(Af, show)
amod(fluorescence, bright)
amod(green, yellow)
punct(green, -)
amod(fluorescence, green)
amod(fluorescence, specific)
obj(show, fluorescence)
case(cell, in)
det(cell, the)
nmod(fluorescence, cell)
case(tissue, of)
det(tissue, the)
compound(tissue, pseudophloem)
nmod(cell, tissue)
punct(Lee, ()
appos(tissue, Lee)
cc(Black, and)
conj(Lee, Black)
punct(Lee, ,)
conj(Lee, 1955)
punct(Lee, ))
punct(distinguished, .)
det(fluorescence, this)
amod(fluorescence, specific)
nsubj(distinguished, fluorescence)
cop(distinguished, be)
advmod(distinguished, readily)
parataxis(show, distinguished)
case(light, from)
det(light, the)
obl(distinguished, light)
amod(fluorescence, green)
amod(fluorescence, nonspecific)
appos(light, fluorescence)
case(section, in)
amod(section, consecutive)
nmod(fluorescence, section)
acl(section, stain)
case(1, with)
obl(stain, 1)
punct(dilution, :)
nummod(dilution, 10)
obl(stain, dilution)
case(NS, of)
nmod(dilution, NS)
cc(Af, and)
conj(NS, Af)
cc(section, or)
case(alone, with)
compound(alone, Af)
amod(section, alone)
punct(section, .)
amod(section, Unstained)
conj(dilution, section)
acl(section, mount)
case(glycerine, in)
amod(glycerine, buffer)
obl(mount, glycerine)
cc(section, or)
conj(glycerine, section)
acl(glycerine, treat)
advmod(treat, only)
case(NS, with)
obl(treat, NS)
cc(Af, or)
conj(NS, Af)
aux(show, do)
advmod(show, not)
advcl(treat, show)
amod(fluorescence, such)
amod(fluorescence, green)
obj(show, fluorescence)
punct(show, .)
nsubj(show, section)
case(tissue, of)
compound(gall, crown)
compound(tissue, gall)
nmod(section, tissue)
advmod(stain, similarly)
acl(tissue, stain)
case(Af, with)
cc:preconj(Af, either)
obl(stain, Af)
cc(Af, and)
conj(Af, Af)
cc(NS, or)
conj(Af, NS)
cc(Af, and)
conj(Af, Af)
advmod(show, also)
root(ROOT, show)
advmod(fluorescence, only)
det(fluorescence, the)
compound(fluorescence, light)
amod(fluorescence, green)
amod(fluorescence, nonspecific)
obj(show, fluorescence)
punct(show, .)
advmod(consider, however)
punct(consider, ,)
det(stain, the)
amod(stain, nonspecific)
nsubj:pass(consider, stain)
case(Af, by)
det(Af, the)
nmod(stain, Af)
case(section, in)
compound(section, tumor)
nmod(Af, section)
aux:pass(consider, be)
root(ROOT, consider)
xcomp(consider, bright)
advmod(consider, enough)
mark(confuse, to)
aux:pass(confuse, be)
advcl(bright, confuse)
case(stain, with)
det(stain, the)
obl(confuse, stain)
case(amount, of)
amod(amount, small)
nmod(stain, amount)
case(antigen, of)
compound(antigen, WTV)
nmod(amount, antigen)
punct(consider, .)
nummod(absorption, two)
nsubj(improve, absorption)
case(Af, of)
nmod(absorption, Af)
case(acetate, with)
compound(acetate, ethyl)
nmod(absorption, acetate)
cc(absorption, or)
nummod(absorption, two)
conj(acetate, absorption)
case(Af, of)
nmod(absorption, Af)
punct(pass, ()
nsubj:pass(pass, which)
aux(pass, have)
aux:pass(pass, be)
acl:relcl(absorption, pass)
case(chloride, through)
obl(pass, Dowex)
punct(chloride, -)
nummod(chloride, 2)
punct(chloride, -)
obl(pass, chloride)
punct(chloride, ))
punct(NS, ,)
conj(chloride, NS)
cc(Af, and)
conj(NS, Af)
case(powder, with)
compound(gall, crown)
compound(powder, gall)
compound(powder, tissue)
nmod(NS, powder)
punct(powder, ,)
cc(powder, or)
compound(liver, mouse)
compound(powder, liver)
conj(powder, powder)
aux(improve, do)
advmod(improve, not)
advmod(improve, further)
root(ROOT, improve)
det(specificity, the)
obj(improve, specificity)
case(stain, of)
nmod(specificity, stain)
punct(treatment, .)
obj(improve, treatment)
case(sera, of)
det:predet(sera, all)
det(sera, the)
nmod(treatment, sera)
case(protein, with)
amod(protein, sweet)
compound(protein, clover)
nmod(sera, protein)
advmod(reduce, greatly)
amod(fluorescence, reduce)
amod(fluorescence, nonspecific)
nmod(sera, fluorescence)
punct(fluorescence, ,)
advmod(dilut, especially)
mark(dilut, when)
det(conjugate, the)
amod(conjugate, treat)
nsubj:pass(dilut, conjugate)
aux:pass(dilut, be)
advcl(improve, dilut)
case(1, to)
obl(dilut, 1)
punct(dilut, :)
nsubj(saline, 2)
case(0.85, with)
nmod(2, 0.85)
obl:npmod(saline, %)
conj(dilut, saline)
punct(saline, .)
case(procedure, in)
det:predet(procedure, all)
det(procedure, the)
amod(procedure, above)
obl(reduce, procedure)
punct(procedure, ,)
mark(dilut, when)
det(sera, the)
amod(sera, intermediate)
nsubj:pass(dilut, sera)
aux:pass(dilut, be)
acl:relcl(procedure, dilut)
case(1, to)
obl(dilut, 1)
punct(10, :)
obl:npmod(dilut, 10)
cc(1, or)
conj(10, 1)
punct(dilut, :)
nummod(%, 100)
case(%, with)
nummod(%, 0.85)
obl:npmod(saline, %)
amod(specific, saline)
punct(reduce, ,)
det(fluorescence, the)
amod(fluorescence, specific)
cc(nonspecific, and)
conj(specific, nonspecific)
nsubj:pass(reduce, fluorescence)
aux:pass(reduce, be)
advmod(reduce, not)
advmod(reduce, appreciably)
root(ROOT, reduce)
punct(reduce, ,)
advmod(reduce, whereas)
punct(dilution, ,)
det(dilution, a)
nsubj:pass(reduce, dilution)
case(sera, of)
det(sera, the)
amod(sera, intermediate)
nmod(dilution, sera)
case(1, to)
nmod(sera, 1)
punct(500, :)
appos(dilution, 500)
cc(dilut, or)
conj(500, dilut)
det(Af, the)
obj(dilut, Af)
case(1, to)
obl(dilut, 1)
punct(fluorescence, :)
compound(reduce, 5)
advmod(reduce, greatly)
amod(fluorescence, reduce)
amod(fluorescence, specific)
obj(dilut, fluorescence)
punct(500, .)
csubj(improve, Rinsing)
det(section, the)
obj(Rinsing, section)
case(pbs, with)
nmod(section, pbs)
mark(layer, before)
advcl(Rinsing, layer)
det(sera, the)
amod(sera, intermediate)
obj(layer, sera)
aux(improve, do)
advmod(improve, not)
root(ROOT, improve)
det(reaction, the)
compound(reaction, stain)
obj(improve, reaction)
punct(improve, .)
case(addition, in)
root(ROOT, addition)
case(treatment, to)
amod(treatment, other)
nmod(addition, treatment)
punct(treat, ,)
acl(addition, treat)
det(section, the)
obj(treat, section)
case(serum, with)
amod(serum, normal)
compound(serum, sheep)
obl(treat, serum)
case(hour, for)
det:predet(hour, half)
det(hour, a)
obl(treat, hour)
mark(layer, before)
advcl(treat, layer)
nsubj(reduce, Af)
aux(reduce, do)
advmod(reduce, not)
root(ROOT, reduce)
amod(stain, nonspecific)
obj(reduce, stain)
punct(reduce, .)
det(treatment, the)
amod(treatment, only)
nsubj(be, treatment)
case(which, by)
obl(remove, which)
amod(stain, nonspecific)
nsubj:pass(remove, stain)
aux(remove, could)
aux:pass(remove, be)
advmod(remove, satisfactorily)
acl:relcl(treatment, remove)
root(ROOT, be)
mark(pass, by)
ccomp(be, pass)
det(conjugate, the)
obj(pass, conjugate)
case(column, through)
det(column, a)
compound(cellulose, deae)
punct(cellulose, -)
compound(column, cellulose)
obl(pass, column)
punct(column, .)
mark(pass, when)
nummod(ml, 1)
nsubj:pass(pass, ml)
case(conjugate, of)
nmod(ml, conjugate)
aux:pass(pass, be)
advcl(pass, pass)
case(column, through)
det(column, a)
obl(pass, column)
punct(Af, ()
appos(column, Af)
punct(Af, ))
punct(pass, ,)
det(fraction, the)
amod(fraction, first)
cc(milliliter, and)
amod(milliliter, second)
compound(fraction, milliliter)
nsubj(specific, fraction)
acl(fraction, collect)
cop(specific, be)
det(specific, the)
advmod(specific, most)
conj(pass, specific)
cc(give, and)
conj(specific, give)
det(stain, no)
amod(stain, nonspecific)
obj(give, stain)
case(experiment, in)
det(experiment, some)
nmod(stain, experiment)
punct(little, ,)
cc(little, and)
advmod(little, very)
conj(experiment, little)
case(other, in)
obl(little, other)
punct(specific, .)
case(case, in)
det(case, the)
amod(case, latter)
nmod(treatment, case)
det(treatment, a)
amod(treatment, additional)
root(ROOT, treatment)
mark(treat, of)
det(treat, the)
compound(treat, deae)
punct(treat, -)
compound(treat, cellulose)
punct(treat, -)
acl(treatment, treat)
nsubj(improve, Af)
case(mg, with)
nummod(mg, 50)
nmod(Af, mg)
case(powder, of)
amod(powder, sweet)
compound(powder, clover)
compound(powder, stem)
compound(powder, tissue)
nmod(mg, powder)
advmod(improve, further)
root(ROOT, improve)
det(specificity, the)
obj(improve, specificity)
punct(improve, .)
case(treatment, after)
det(treatment, these)
obl(stain, treatment)
det(conjugate, the)
nsubj(stain, conjugate)
aux(stain, do)
advmod(stain, not)
root(ROOT, stain)
xcomp(stain, healthy)
cc(gall, or)
obl:npmod(gall, crown)
amod(tissue, gall)
amod(tissue, sweet)
compound(tissue, clover)
obj(stain, tissue)
cc(stain, or)
conj(stain, stain)
iobj(stain, they)
det(green, a)
advmod(faint, very)
amod(green, faint)
obj(stain, green)
nsubj(distinguishable, which)
cop(distinguishable, be)
advmod(distinguishable, easily)
acl:relcl(green, distinguishable)
case(stain, from)
det(stain, the)
amod(stain, bright)
amod(green, yellow)
punct(green, -)
amod(stain, green)
amod(stain, specific)
obl(distinguishable, stain)
punct(stain, .)
case(conjugate, with)
det(conjugate, this)
amod(conjugate, purify)
obl(consist, conjugate)
det(procedure, the)
amod(procedure, best)
compound(procedure, stain)
nsubj(consist, procedure)
root(ROOT, consist)
mark(treat, of)
advcl(consist, treat)
det(section, the)
obj(treat, section)
case(1, with)
nmod(section, 1)
punct(dilution, :)
nummod(dilution, 10)
parataxis(consist, dilution)
nmod(dilution, of)
root(ROOT, Af)
case(minute, for)
nummod(minute, 30)
nmod(Af, minute)
punct(wash, ,)
parataxis(Af, wash)
case(pbs, with)
obl(wash, pbs)
case(minute, for)
nummod(minute, 15)
obl(wash, minute)
punct(stain, ,)
conj(wash, stain)
case(Af, with)
obl(stain, Af)
case(minute, for)
nummod(minute, 30)
obl(stain, minute)
punct(wash, ,)
cc(wash, and)
conj(stain, wash)
case(pbs, with)
obl(wash, pbs)
case(minute, for)
nummod(minute, 15)
obl(wash, minute)
punct(Af, .)
det(specificity, the)
nsubj(indicate, specificity)
mark(stain, of)
acl(specificity, stain)
case(tumor, in)
compound(tumor, WTV)
obl(stain, tumor)
case(Af, with)
nmod(stain, Af)
cc(Af, and)
conj(Af, Af)
cc(NS, but)
advmod(NS, not)
case(NS, with)
conj(Af, NS)
cc(Af, and)
conj(NS, Af)
cc(antiserum, or)
case(antiserum, with)
conj(NS, antiserum)
case(virus, to)
compound(virus, potato)
amod(dwarf, yellow)
punct(dwarf, -)
amod(virus, dwarf)
nmod(antiserum, virus)
cc(Af, and)
conj(virus, Af)
punct(absence, ,)
cc(absence, and)
det(absence, the)
conj(virus, absence)
case(stain, of)
amod(stain, such)
nmod(absence, stain)
case(tissue, in)
compound(gall, crown)
compound(tissue, gall)
compound(tissue, tumor)
nmod(stain, tissue)
case(clover, from)
amod(clover, sweet)
punct(clover, -)
nmod(tissue, clover)
punct(indicate, ,)
root(ROOT, indicate)
mark(stain, that)
det(antigen, a)
nsubj:pass(stain, antigen)
case(WTV, of)
nmod(antigen, WTV)
aux(stain, be)
aux:pass(stain, be)
ccomp(indicate, stain)
punct(indicate, .)
amod(method, direct)
root(ROOT, method)
punct(method, .)
nsubj:pass(conjugate, Af)
aux:pass(conjugate, be)
advmod(conjugate, first)
root(ROOT, conjugate)
case(mg, with)
nummod(mg, 50)
obl(conjugate, mg)
case(FITC, of)
nmod(mg, FITC)
case(gram, per)
nmod(mg, gram)
case(globulin, of)
nmod(gram, globulin)
punct(conjugate, .)
det(conjugate, this)
nsubj:pass(pass, conjugate)
aux:pass(pass, be)
parataxis(conjugate, pass)
advmod(pass, twice)
case(chloride, through)
compound(chloride, Dowex)
punct(chloride, -)
nummod(chloride, 2)
punct(chloride, -)
obl(pass, chloride)
cc(treat, and)
conj(pass, treat)
case(powder, with)
amod(powder, various)
compound(powder, tissue)
obl(treat, powder)
case(manner, in)
det(manner, the)
amod(manner, same)
obl(treat, manner)
mark(describe, as)
advcl(treat, describe)
case(method, for)
det(method, the)
amod(method, indirect)
obl(describe, method)
punct(conjugate, .)
case(case, in)
det(case, all)
obl(present, case)
det(amount, a)
amod(amount, disturbing)
nsubj(present, amount)
case(stain, of)
amod(stain, nonspecific)
nmod(amount, stain)
cop(present, be)
advmod(present, still)
root(ROOT, present)
mark(distinguishable, although)
nsubj(distinguishable, it)
cop(distinguishable, be)
advmod(distinguishable, still)
advcl(present, distinguishable)
case(fluorescence, from)
amod(fluorescence, specific)
obl(distinguishable, fluorescence)
punct(present, .)
case(experiment, in)
amod(experiment, later)
obl(prepare, experiment)
punct(prepare, ,)
nsubj:pass(prepare, Af)
cc(Af, and)
conj(Af, Af)
aux:pass(prepare, be)
root(ROOT, prepare)
mark(conjugate, by)
advcl(prepare, conjugate)
nummod(mg, 8)
obj(conjugate, mg)
case(FITC, of)
nmod(mg, FITC)
case(gram, per)
nmod(mg, gram)
case(globulin, of)
nmod(gram, globulin)
punct(prepare, .)
det(conjugate, these)
root(ROOT, conjugate)
nsubj(have, Af)
root(ROOT, have)
advmod(less, much)
amod(stain, less)
amod(stain, nonspecific)
obj(have, stain)
case(conjugate, than)
det(conjugate, the)
amod(conjugate, previous)
obl(have, conjugate)
punct(FITC, ()
case(FITC, with)
nummod(FITC, 50)
compound(FITC, mg)
obl(have, FITC)
case(gram, per)
nmod(FITC, gram)
case(globulin, of)
nmod(gram, globulin)
punct(FITC, ))
mark(similar, while)
det(stain, the)
amod(stain, specific)
nsubj(similar, stain)
cop(similar, be)
advcl(have, similar)
case(case, in)
det(case, both)
obl(similar, case)
punct(have, .)
amod(stain, nonspecific)
nsubj:pass(eliminate, stain)
aux(eliminate, could)
aux:pass(eliminate, be)
advmod(eliminate, satisfactorily)
root(ROOT, eliminate)
mark(pass, by)
advcl(eliminate, pass)
det(conjugate, these)
obj(pass, conjugate)
case(column, through)
det(column, a)
compound(cellulose, deae)
punct(cellulose, -)
compound(column, cellulose)
obl(pass, column)
mark(describe, as)
advcl(pass, describe)
case(Af, for)
obl(describe, Af)
punct(describe, .)
det(procedure, the)
amod(procedure, best)
compound(procedure, stain)
parataxis(eliminate, procedure)
case(this, with)
nmod(procedure, this)
acl(this, purify)
nsubj(consist, Af)
root(ROOT, consist)
case(stain, of)
obl(consist, stain)
case(conjugate, with)
det(conjugate, the)
obl(consist, conjugate)
case(minute, for)
nummod(minute, 30)
nmod(conjugate, minute)
cc(wash, and)
conj(consist, wash)
case(pbs, in)
obl(wash, pbs)
case(minute, for)
nummod(minute, 15)
obl(wash, minute)
punct(consist, .)
det(specificity, the)
nsubj:pass(establish, specificity)
case(stain, of)
nmod(specificity, stain)
case(Af, with)
nmod(stain, Af)
aux:pass(establish, be)
root(ROOT, establish)
mark(follow, as)
advcl(establish, follow)
punct(establish, :)
nsubj(stain, Af)
advmod(stain, specifically)
root(ROOT, stain)
compound(section, tumor)
obj(stain, section)
cc(section, but)
advmod(section, not)
conj(section, section)
case(stem, of)
amod(stem, healthy)
amod(stem, sweet)
compound(stem, clover)
nmod(section, stem)
cc(tissue, or)
case(tissue, of)
compound(gall, crown)
amod(tissue, gall)
compound(tissue, tumor)
conj(stem, tissue)
case(clover, from)
amod(clover, sweet)
nmod(tissue, clover)
punct(stain, .)
nsubj:pass(stain, section)
case(tumor, of)
nmod(section, tumor)
acl(tumor, incite)
case(WTV, by)
obl(incite, WTV)
aux:pass(stain, be)
advmod(stain, not)
advmod(stain, similarly)
root(ROOT, stain)
case(serum, with)
amod(serum, conjugate)
amod(serum, normal)
obl(stain, serum)
cc(antiserum, or)
amod(antiserum, conjugate)
conj(serum, antiserum)
case(virus, to)
compound(virus, potato)
amod(dwarf, yellow)
punct(dwarf, -)
amod(virus, dwarf)
nmod(serum, virus)
punct(stain, .)
case(passing, after)
root(ROOT, passing)
nsubj(1, Af)
case(cellulose, through)
compound(cellulose, deae)
punct(cellulose, -)
nmod(Af, cellulose)
punct(1, ,)
det(titer, the)
nsubj(1, titer)
case(antibody, of)
nmod(titer, antibody)
case(WTV, to)
nmod(antibody, WTV)
case(fraction, in)
det(fraction, the)
amod(fraction, specific)
nmod(titer, fraction)
cop(1, be)
root(ROOT, 1)
punct(1, :)
appos(1, 4)
case(titer, of)
det(titer, the)
nmod(4, titer)
case(passage, before)
amod(passage, such)
nmod(4, passage)
punct(test, ()
compound(ring, precipitin)
compound(test, ring)
appos(passage, test)
case(R., by)
nmod(test, R.)
flat(R., F.)
flat(R., Whitcomb)
punct(test, ))
punct(1, ;)
punct(1, ;)
cc(dilution, but)
amod(dilution, mere)
nsubj(remove, dilution)
case(conjugate, of)
det(conjugate, the)
nmod(dilution, conjugate)
case(1, to)
nmod(conjugate, 1)
punct(remove, :)
nsubj(remove, 4)
aux(remove, do)
advmod(remove, not)
advmod(remove, satisfactorily)
parataxis(1, remove)
amod(stain, nonspecific)
obj(remove, stain)
punct(1, .)
nsubj(indicate, this)
root(ROOT, indicate)
det(increase, that)
nsubj(dilution, increase)
case(specificity, in)
nmod(increase, specificity)
case(Af, of)
nmod(specificity, Af)
mark(pass, after)
acl(increase, pass)
obj(pass, it)
case(cellulose, through)
compound(cellulose, deae)
punct(cellulose, -)
obl(pass, cellulose)
cop(dilution, be)
advmod(dilution, not)
advmod(dilution, merely)
case(dilution, due)
fixed(due, to)
ccomp(indicate, dilution)
punct(indicate, .)
amod(stain, Specific)
root(ROOT, stain)
case(cellulose, by)
compound(cellulose, deae)
punct(cellulose, -)
nmod(stain, cellulose)
acl(stain, treat)
nsubj:pass(photograph, Af)
cc(Af, and)
conj(Af, Af)
punct(photograph, ,)
mark(distinguishable, although)
advmod(distinguishable, clearly)
advcl(photograph, distinguishable)
case(microscope, under)
det(microscope, the)
obl(distinguishable, microscope)
case(stain, from)
cc:preconj(stain, either)
amod(stain, nonspecific)
nmod(microscope, stain)
cc(autofluorescence, or)
conj(stain, autofluorescence)
case(cell, of)
nmod(stain, cell)
punct(photograph, ,)
aux:pass(photograph, be)
advmod(photograph, not)
advmod(photograph, satisfactorily)
root(ROOT, photograph)
mark(show, to)
advcl(photograph, show)
amod(difference, such)
obj(show, difference)
case(spite, in)
obl(show, spite)
case(attempt, of)
amod(attempt, many)
nmod(spite, attempt)
case(photography, with)
amod(photography, black)
cc(color, and)
conj(black, white)
cc(color, and)
conj(black, color)
nmod(attempt, photography)
punct(photograph, .)
nsubj(chiefly, this)
cop(chiefly, be)
root(ROOT, chiefly)
case(autofluorescence, because)
fixed(because, of)
det(autofluorescence, the)
amod(autofluorescence, bluish)
amod(autofluorescence, white)
obl(chiefly, autofluorescence)
case(cell, from)
det(cell, the)
nmod(autofluorescence, cell)
punct(chiefly, .)
det(autofluorescence, the)
nsubj(brilliant, autofluorescence)
case(wall, from)
det(wall, the)
nmod(autofluorescence, wall)
case(cell, of)
det(cell, the)
compound(cell, xylem)
nmod(wall, cell)
cop(brilliant, be)
advmod(brilliant, particularly)
root(ROOT, brilliant)
punct(brilliant, .)
nsubj(similar, distribution)
case(result, of)
compound(antigen, virus)
compound(result, antigen)
nmod(distribution, result)
case(stain, of)
amod(stain, specific)
nmod(result, stain)
case(direct, by)
det(direct, the)
nmod(stain, direct)
cc(method, and)
det(method, the)
amod(method, indirect)
conj(direct, method)
cop(similar, be)
root(ROOT, similar)
cc(show, and)
conj(similar, show)
det(localization, the)
obj(show, localization)
case(antigen, of)
compound(antigen, WTV)
nmod(localization, antigen)
case(tissue, in)
amod(tissue, certain)
obl(show, tissue)
case(tumor, of)
nmod(tissue, tumor)
punct(similar, .)
det(antigen, the)
compound(antigen, virus)
nsubj:pass(concentrate, antigen)
aux:pass(concentrate, be)
root(ROOT, concentrate)
case(tissue, in)
det(tissue, the)
compound(tissue, pseudophloem)
obl(concentrate, tissue)
punct(concentrate, . )
advmod(stain, frequently)
det(cell, a)
amod(cell, few)
amod(cell, isolate)
amod(wall, thick)
punct(wall, -)
amod(cell, wall)
nsubj:pass(stain, cell)
cc(group, or)
punct(group, ,)
advmod(group, rarely)
punct(group, ,)
conj(cell, group)
case(cell, of)
amod(cell, such)
nmod(group, cell)
case(region, in)
det(region, the)
compound(region, xylem)
nmod(cell, region)
punct(stain, ,)
aux:pass(stain, be)
advmod(stain, also)
advmod(stain, specifically)
root(ROOT, stain)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(stain, be)
det(stain, no)
amod(stain, such)
nsubj(be, stain)
case(epidermis, in)
nmod(stain, epidermis)
punct(cortex, ,)
conj(epidermis, cortex)
punct(most, ,)
conj(epidermis, most)
punct(cell, x)
compound(cell, ylem)
conj(epidermis, cell)
punct(cell, ,)
compound(cell, ray)
conj(epidermis, cell)
punct(pith, ,)
cc(pith, or)
conj(epidermis, pith)
punct(stain, .)
case(cell, within)
det(cell, the)
compound(cell, pseudophloem)
obl(irregular, cell)
det(distribution, the)
nsubj(irregular, distribution)
case(antigen, of)
compound(antigen, WTV)
nmod(distribution, antigen)
cop(irregular, be)
root(ROOT, irregular)
case(cytoplasm, in)
det(cytoplasm, the)
obl(irregular, cytoplasm)
punct(irregular, .)
det(antigen, no)
nsubj(detectable, antigen)
cop(detectable, be)
root(ROOT, detectable)
case(area, in)
amod(area, certain)
amod(area, dark)
amod(area, spherical)
obl(detectable, area)
case(cell, in)
amod(cell, most)
obl(detectable, cell)
punct(detectable, .)
det(area, these)
nsubj:pass(think, area)
aux:pass(think, be)
root(ROOT, think)
mark(represent, to)
xcomp(think, represent)
det(nuclei, the)
obj(represent, nuclei)
punct(think, .)
case(section, in)
det(section, some)
compound(section, tumor)
obl(stain, section)
amod(body, small)
amod(body, spherical)
nsubj(stain, body)
punct(body, ,)
advmod(body, possibly)
compound(body, inclusion)
conj(body, body)
punct(Littau, ()
appos(body, Littau)
cc(Black, and)
conj(Littau, Black)
punct(1952, ,)
conj(Littau, 1952)
punct(Littau, ))
root(ROOT, stain)
advmod(intensely, more)
advmod(stain, intensely)
case(rest, than)
det(rest, the)
obl(stain, rest)
case(cytoplasm, of)
nmod(rest, cytoplasm)
cc(contain, and)
advmod(contain, probably)
conj(stain, contain)
amod(antigen, more)
obj(contain, antigen)
punct(stain, .)
case(case, in)
det(case, all)
obl(contain, case)
amod(tissue, study)
nsubj(contain, tissue)
case(stem, of)
det(stem, the)
nmod(tissue, stem)
case(which, on)
obl(develop, which)
det(tumor, the)
nsubj(develop, tumor)
aux(develop, have)
acl:relcl(stem, develop)
aux(contain, do)
advmod(contain, not)
root(ROOT, contain)
amod(amount, detectable)
obj(contain, amount)
case(antigen, of)
compound(antigen, WTV)
nmod(amount, antigen)
punct(amount, .)
appos(amount, discussion)
case(method, in)
cc:preconj(method, both)
det(method, the)
amod(method, direct)
cc(indirect, and)
conj(direct, indirect)
nmod(discussion, method)
case(stain, of)
nmod(method, stain)
punct(have, ,)
det(conjugate, the)
nsubj(have, conjugate)
acl:relcl(discussion, have)
advmod(stain, nonspecifically)
xcomp(have, stain)
obj(stain, fraction)
punct(have, .)
case(method, in)
det(method, the)
amod(method, indirect)
obl(evident, method)
punct(evident, ,)
nsubj(evident, this)
cop(evident, be)
root(ROOT, evident)
case(fact, from)
det(fact, the)
obl(evident, fact)
mark(stain, that)
compound(section, tumor)
nsubj:pass(stain, section)
aux:pass(stain, be)
acl(fact, stain)
obj(stain, light)
xcomp(stain, green)
advmod(stain, even)
mark(stain, when)
advcl(stain, stain)
case(NS, with)
obl(stain, NS)
cc(Af, and)
conj(NS, Af)
cc(Af, or)
case(Af, with)
conj(NS, Af)
advmod(Af, only)
punct(evident, .)
case(method, in)
det(method, the)
amod(method, direct)
obl(stain, method)
punct(stain, ,)
nsubj:pass(stain, Af)
punct(Af, ,)
advmod(further, not)
advmod(treat, further)
acl(Af, treat)
punct(tissue, ,)
amod(tissue, stain)
amod(tissue, certain)
conj(Af, tissue)
case(stem, of)
amod(stem, healthy)
amod(stem, sweet)
compound(stem, clover)
nmod(tissue, stem)
advmod(stem, nonspecifically)
cc(section, and)
amod(tumor, WTV)
compound(section, tumor)
conj(stem, section)
aux:pass(stain, be)
advmod(stain, similarly)
root(ROOT, stain)
case(comparable, by)
obl(stain, comparable)
nsubj:pass(pass, Af)
punct(Af, .)
case(Af, after)
obl(pass, Af)
cc(Af, and)
conj(Af, Af)
aux:pass(pass, be)
root(ROOT, pass)
case(Dowex, through)
obl(pass, Dowex)
punct(chloride, -)
nummod(chloride, 2)
punct(chloride, -)
nmod(Dowex, chloride)
advmod(chloride, twice)
cc(treat, and)
conj(pass, treat)
advmod(treat, twice)
case(powder, with)
amod(powder, healthy)
amod(powder, sweet)
compound(powder, clover)
compound(powder, tissue)
obl(treat, powder)
punct(reduce, ,)
amod(stain, nonspecific)
nsubj:pass(reduce, stain)
aux:pass(reduce, be)
advmod(reduce, greatly)
acl:relcl(powder, reduce)
cc(present, but)
det(amount, a)
amod(amount, disturbing)
nsubj(present, amount)
case(stain, of)
amod(stain, such)
nmod(amount, stain)
cop(present, be)
advmod(present, still)
conj(reduce, present)
punct(treatment, .)
nsubj(present, treatment)
case(conjugate, of)
det(conjugate, the)
nmod(treatment, conjugate)
case(acetate, with)
compound(acetate, ethyl)
nmod(conjugate, acetate)
punct(conjugate, ,)
cc(conjugate, and)
det(conjugate, the)
conj(treatment, conjugate)
punct(conjugate, ()
nsubj:pass(pass, which)
aux(pass, have)
aux:pass(pass, be)
acl:relcl(conjugate, pass)
case(chloride, through)
obl(pass, Dowex)
punct(chloride, -)
nummod(chloride, 2)
punct(chloride, -)
obl(pass, chloride)
punct(chloride, ))
case(powder, with)
compound(powder, mouse)
compound(powder, liver)
nmod(chloride, powder)
punct(powder, ,)
amod(powder, sweet)
compound(crown, clover)
compound(powder, crown)
compound(powder, gall)
compound(powder, tissue)
conj(powder, powder)
punct(protein, ,)
cc(protein, or)
amod(protein, healthy)
amod(protein, sweet)
compound(protein, clover)
conj(powder, protein)
aux(remove, do)
advmod(remove, not)
advmod(remove, satisfactorily)
conj(pass, remove)
advmod(stain, nonspecifically)
compound(substance, stain)
obj(remove, substance)
case(conjugate, in)
det(conjugate, the)
nmod(substance, conjugate)
punct(remove, .)
amod(treatment, such)
nsubj(successful, treatment)
case(conjugate, of)
det(conjugate, the)
nmod(treatment, conjugate)
aux(successful, have)
advmod(successful, usually)
cop(successful, be)
acl:relcl(substance, successful)
mark(eliminate, in)
advcl(successful, eliminate)
amod(stain, nonspecific)
obj(eliminate, stain)
case(system, in)
amod(system, several)
amod(system, other)
obl(eliminate, system)
punct(coon, ()
appos(system, coon)
punct(coon, ,)
appos(coon, 1958)
punct(coon, ))
punct(coon, .)
conj(coon, Schramm)
cc(Rottger, and)
conj(Schramm, Rottger)
punct(1959, ()
appos(Rottger, 1959)
punct(1959, ))
aux(report, do)
advmod(report, not)
parataxis(Schramm, report)
det(stain, any)
amod(stain, such)
amod(stain, nonspecific)
obj(report, stain)
case(tissue, of)
compound(tissue, plant)
nmod(stain, tissue)
case(antiserum, with)
amod(antiserum, fluorescein)
compound(label, isocyanate)
punct(label, -)
amod(antiserum, label)
nmod(stain, antiserum)
case(virus, to)
compound(virus, tobacco)
compound(virus, mosaic)
nmod(antiserum, virus)
punct(pass, .)
det(reason, the)
nsubj:pass(know, reason)
case(failure, for)
det(failure, the)
nmod(reason, failure)
case(treatment, of)
det(treatment, these)
nmod(failure, treatment)
mark(eliminate, to)
acl(treatment, eliminate)
amod(stain, nonspecific)
obj(eliminate, stain)
case(conjugate, in)
det(conjugate, the)
obl(eliminate, conjugate)
case(system, in)
nmod:poss(system, we)
nmod(conjugate, system)
aux:pass(know, be)
advmod(know, not)
root(ROOT, know)
punct(know, .)
case(work, in)
nmod:poss(work, we)
obl(be, work)
det(procedure, the)
amod(procedure, best)
nsubj(be, procedure)
mark(remove, for)
acl(procedure, remove)
obj(remove, substance)
acl(substance, cause)
amod(stain, nonspecific)
obj(cause, stain)
mark(obtain, in)
fixed(in, order)
mark(obtain, to)
advcl(cause, obtain)
amod(conjugate, specific)
obj(obtain, conjugate)
root(ROOT, be)
mark(pass, to)
ccomp(be, pass)
det(conjugate, the)
obj(pass, conjugate)
case(column, through)
det(column, a)
compound(cellulose, deae)
punct(cellulose, -)
compound(column, cellulose)
obl(pass, column)
cc(absorb, and)
case(case, in)
det(case, some)
obl(absorb, case)
mark(absorb, to)
conj(pass, absorb)
det(fraction, the)
amod(fraction, first)
cc(milliliter, and)
amod(milliliter, second)
conj(first, milliliter)
obj(absorb, fraction)
case(powder, with)
amod(powder, sweet)
compound(powder, clover)
compound(powder, tissue)
nmod(fraction, powder)
punct(be, .)
det(stain, the)
amod(stain, specific)
nsubj(show, stain)
case(method, by)
det(method, both)
amod(method, direct)
cc(indirect, and)
conj(direct, indirect)
nmod(stain, method)
root(ROOT, show)
mark(concentrate, that)
compound(antigen, WTV)
nsubj:pass(concentrate, antigen)
aux:pass(concentrate, be)
ccomp(show, concentrate)
case(tissue, in)
det(tissue, the)
compound(tissue, pseudophloem)
obl(concentrate, tissue)
cc(cell, and)
case(cell, in)
det(cell, a)
amod(cell, few)
amod(wall, thick)
punct(wall, -)
amod(cell, wall)
conj(tissue, cell)
case(region, in)
det(region, the)
compound(region, xylem)
nmod(cell, region)
punct(detectable, ,)
cc(detectable, but)
cop(detectable, be)
advmod(detectable, not)
conj(concentrate, detectable)
case(tissue, in)
det(tissue, any)
amod(tissue, other)
obl(detectable, tissue)
case(tumor, of)
det(tumor, the)
compound(tumor, root)
cc(stem, and)
conj(root, stem)
nmod(tissue, tumor)
punct(show, . )
det(study, a)
nsubj(indicate, study)
case(distribution, of)
det(distribution, the)
nmod(study, distribution)
case(antigen, of)
compound(antigen, WTV)
nmod(distribution, antigen)
case(cell, within)
det(cell, the)
compound(cell, pseudophloem)
nmod(antigen, cell)
root(ROOT, indicate)
mark(distribute, that)
nsubj:pass(distribute, it)
aux:pass(distribute, be)
advmod(distribute, irregularly)
ccomp(indicate, distribute)
case(cytoplasm, in)
det(cytoplasm, the)
obl(distribute, cytoplasm)
punct(distribute, .)
compound(tumor, Wound)
punct(tumor, -)
compound(virus, tumor)
nsubj(leafhopper, virus)
cop(leafhopper, be)
det(leafhopper, a)
conj(distribute, leafhopper)
acl(leafhopper, transmit)
obj(transmit, virus)
advmod(easily, not)
advmod(transmissible, easily)
xcomp(transmit, transmissible)
case(inoculation, by)
amod(inoculation, mechanical)
obl(transmissible, inoculation)
punct(Black, ()
appos(inoculation, Black)
punct(Black, ,)
appos(Black, 1944)
punct(transmissible, ;)
punct(brakke, ;)
appos(leafhopper, brakke)
flat(brakke, et)
flat(brakke, al)
punct(brakke, ,)
appos(brakke, 1954)
punct(brakke, ))
punct(indicate, .)
det(concentration, the)
nsubj(indicate, concentration)
cc(localization, and)
amod(localization, apparent)
conj(concentration, localization)
case(antigen, of)
det(antigen, the)
compound(antigen, WTV)
nmod(localization, antigen)
case(tissue, in)
amod(tissue, pseudophloem)
nmod(antigen, tissue)
case(tumor, of)
det(tumor, the)
nmod(tissue, tumor)
aux(indicate, may)
root(ROOT, indicate)
mark(multiply, that)
det(virus, the)
nsubj(multiply, virus)
advmod(multiply, preferentially)
ccomp(indicate, multiply)
case(phloem, in)
det(phloem, the)
obl(multiply, phloem)
cc(need, and)
aux(need, may)
conj(multiply, need)
mark(place, to)
aux:pass(place, be)
advmod(place, directly)
xcomp(need, place)
case(tissue, in)
det(tissue, this)
obl(place, tissue)
mark(infect, in)
fixed(in, order)
mark(infect, to)
advcl(place, infect)
obj(infect, plant)
punct(indicate, .)
mark(depend, since)
amod(reaction, emotional)
nsubj(depend, reaction)
case(vertebrate, in)
det(vertebrate, the)
amod(vertebrate, higher)
nmod(reaction, vertebrate)
advcl(expect, depend)
case(experience, on)
amod(experience, individual)
obl(depend, experience)
cc(arouse, and)
aux:pass(arouse, be)
conj(depend, arouse)
case(man, in)
obl(arouse, man)
punct(expect, ,)
case(addition, in)
obl(expect, addition)
punct(expect, ,)
case(symbol, by)
amod(symbol, complex)
obl(expect, symbol)
punct(expect, ,)
nsubj(expect, one)
aux(expect, would)
root(ROOT, expect)
mark(excited, that)
det(hypothalamus, the)
nsubj(excited, hypothalamus)
aux(excited, could)
cop(excited, be)
ccomp(expect, excited)
case(cortex, from)
det(cortex, the)
obl(excited, cortex)
punct(expect, .)
case(experiment, in)
obl(demonstrate, experiment)
case(application, with)
amod(application, topical)
nmod(experiment, application)
case(strychnine, of)
nmod(application, strychnine)
case(cortex, on)
det(cortex, the)
amod(cortex, cerebral)
nmod(application, cortex)
punct(demonstrate, ,)
det(transmission, the)
nsubj:pass(demonstrate, transmission)
case(impulse, of)
nmod(transmission, impulse)
case(cortex, from)
det(cortex, the)
nmod(impulse, cortex)
case(hypothalamus, to)
det(hypothalamus, the)
nmod(cortex, hypothalamus)
aux:pass(demonstrate, be)
root(ROOT, demonstrate)
punct(demonstrate, . )
advmod(increase, moreover)
punct(increase, ,)
det(responsiveness, the)
nsubj:pass(increase, responsiveness)
case(hypothalamus, of)
det(hypothalamus, the)
nmod(responsiveness, hypothalamus)
case(stimulation, to)
amod(stimulation, nociceptive)
nmod(hypothalamus, stimulation)
aux:pass(increase, be)
advmod(increase, greatly)
root(ROOT, increase)
case(condition, under)
det(condition, these)
obl(increase, condition)
punct(increase, .)
advmod(more, even)
advmod(complex, more)
root(ROOT, complex)
cc(form, and)
advmod(induce, obviously)
advmod(induce, cortically)
amod(form, induce)
nsubj:pass(elicit, form)
case(arousal, of)
amod(arousal, emotional)
nmod(form, arousal)
aux(elicit, could)
aux:pass(elicit, be)
parataxis(complex, elicit)
case(monkey, in)
obl(elicit, monkey)
obj(see, a)
mark(see, on)
advcl(elicit, see)
compound(b, monkey)
obj(see, b)
punct(b, ()
cc(rabbit, but)
advmod(rabbit, not)
det(rabbit, a)
conj(b, rabbit)
punct(rabbit, ))
case(stress, in)
amod(stress, emotional)
obl(see, stress)
punct(elicit, . )
det(reaction, a)
advmod(extinguished, previously)
amod(reaction, extinguished)
amod(reaction, condition)
nsubj:pass(restore, reaction)
aux:pass(restore, be)
root(ROOT, restore)
case(a, in)
compound(a, monkey)
obl(restore, a)
cc(associate, and)
aux:pass(associate, be)
conj(restore, associate)
case(sign, with)
amod(sign, typical)
obl(associate, sign)
case(excitement, of)
amod(excitement, emotional)
nmod(sign, excitement)
case(discharge, include)
amod(discharge, sympathetic)
nmod(excitement, discharge)
punct(restore, .)
nsubj(seem, it)
root(ROOT, seem)
mark(follow, to)
xcomp(seem, follow)
obj(follow, that)
advmod(follow, by)
cc(large, and)
advmod(exist, large)
det(antagonism, a)
nsubj(exist, antagonism)
conj(seem, exist)
case(paleo, between)
det(paleo, the)
obl(exist, paleo)
punct(paleo, -)
cc(neocortex, and)
det(neocortex, the)
conj(paleo, neocortex)
advmod(far, as)
advmod(exist, far)
mark(concerned, as)
amod(reactivity, emotional)
nsubj(concerned, reactivity)
cop(concerned, be)
advcl(far, concerned)
punct(determine, ,)
cc(determine, and)
mark(determine, that)
det(balance, the)
nsubj(determine, balance)
case(system, between)
det(system, the)
nummod(system, two)
nmod(balance, system)
conj(concerned, determine)
det(responsiveness, the)
amod(responsiveness, emotional)
obj(determine, responsiveness)
case(organism, of)
det(organism, the)
nmod(responsiveness, organism)
punct(seem, .)
case(addition, in)
obl(play, addition)
punct(play, ,)
det(relation, the)
amod(hypothalamic, neocortical)
punct(hypothalamic, -)
amod(relation, hypothalamic)
nsubj(play, relation)
root(ROOT, play)
det(role, a)
amod(role, great)
obj(play, role)
case(primate, in)
nmod(role, primate)
punct(play, ,)
mark(demonstrate, as)
nmod:poss(experiment, Mirsky)
case(Mirsky, 's)
amod(experiment, interesting)
advcl(play, experiment)
case(communication, on)
det(communication, the)
punct(communication, ``)
nmod(experiment, communication)
case(affect, of)
nmod(communication, affect)
punct(communication, '')
nmod(experiment, demonstrate)
punct(play, .)
cc(enhance, but)
advmod(animal, even)
case(animal, in)
advmod(primitive, relatively)
amod(animal, primitive)
compound(animal, laboratory)
obl(enhance, animal)
case(rat, such)
fixed(such, as)
det(rat, the)
nmod(animal, rat)
punct(activity, ,)
compound(activity, sex)
conj(rat, activity)
advmod(identify, closely)
acl(activity, identify)
case(hypothalamus, with)
det(hypothalamus, the)
obl(identify, hypothalamus)
cc(brain, and)
det(brain, the)
amod(brain, visceral)
conj(hypothalamus, brain)
aux:pass(enhance, be)
conj(stress, enhance)
case(neocortex, by)
det(neocortex, the)
obl(enhance, neocortex)
punct(stress, .)
nsubj(stress, maclean)
root(ROOT, stress)
advmod(stress, correctly)
det(importance, the)
obj(stress, importance)
case(brain, of)
det(brain, the)
amod(brain, visceral)
nmod(importance, brain)
case(preservation, for)
nmod(brain, preservation)
case(individual, of)
det(individual, the)
nmod(preservation, individual)
cc(species, and)
det(species, the)
conj(individual, species)
punct(evidence, ,)
mark(evidence, as)
advcl(stress, evidence)
case(influence, by)
det(influence, the)
obl(evidence, influence)
case(brain, of)
det(brain, the)
amod(brain, limbic)
nmod(influence, brain)
punct(hypothalamus, ()
case(hypothalamus, include)
det(hypothalamus, the)
nmod(brain, hypothalamus)
punct(hypothalamus, ))
case(emotion, on)
nmod(influence, emotion)
amod(emotion, related)
mark(fight, to)
advcl(related, fight)
cc(flight, and)
conj(fight, flight)
cc(function, and)
advmod(function, also)
case(function, on)
amod(function, sexual)
conj(fight, function)
punct(stress, .)
nsubj:pass(add, it)
aux(add, should)
aux:pass(add, be)
root(ROOT, add)
mark(play, that)
case(interrelation, in)
compound(interrelation, man)
amod(hypothalamic, neocortical)
punct(hypothalamic, -)
amod(interrelation, hypothalamic)
nsubj(play, interrelation)
advmod(play, probably)
ccomp(add, play)
det(role, a)
obj(play, role)
case(fusion, in)
det(fusion, the)
nmod(role, fusion)
case(process, of)
amod(process, emotional)
nmod(fusion, process)
case(perception, with)
det(perception, those)
amod(perception, underlying)
nmod(fusion, perception)
punct(memory, ,)
conj(perception, memory)
punct(imagination, ,)
conj(perception, imagination)
punct(creativity, ,)
cc(creativity, and)
conj(perception, creativity)
punct(add, .)
amod(experience, previous)
nsubj(importance, experience)
cop(importance, be)
advmod(importance, obviously)
case(importance, of)
amod(importance, great)
root(ROOT, importance)
case(response, for)
det(response, the)
amod(response, qualitative)
cc(quantitative, and)
conj(qualitative, quantitative)
amod(response, emotional)
nmod(importance, response)
punct(importance, .)
det(brain, the)
amod(brain, visceral)
root(ROOT, brain)
advmod(know, as)
fixed(as, well)
mark(know, as)
det(neocortex, the)
nsubj:pass(know, neocortex)
aux:pass(know, be)
conj(brain, know)
mark(contribute, to)
xcomp(know, contribute)
case(memory, to)
obl(contribute, memory)
punct(scope, ,)
cc(scope, but)
det(topic, this)
nsubj(scope, topic)
cop(scope, be)
case(scope, beyond)
det(scope, the)
conj(know, scope)
case(paper, of)
det(paper, this)
nmod(scope, paper)
punct(brain, .)
nummod(let, 13)
punct(13, .)
amod(balance, Hypothalamic)
nsubj(let, balance)
cc(significance, and)
nmod:poss(significance, its)
conj(balance, significance)
case(discussion, after)
det(discussion, this)
amod(discussion, brief)
nmod(balance, discussion)
case(relation, of)
amod(paleocortical, neo)
punct(paleocortical, -)
punct(paleocortical, ,)
amod(relation, paleocortical)
punct(cortico-hypothalamic, ,)
cc(cortico-hypothalamic, and)
conj(paleocortical, cortico-hypothalamic)
nmod(discussion, relation)
punct(let, ,)
root(ROOT, let)
obj(let, we)
xcomp(let, return)
advmod(more, once)
advmod(return, more)
case(problem, to)
det(problem, the)
obl(return, problem)
case(balance, of)
amod(balance, hypothalamic)
nmod(problem, balance)
cc(significance, and)
nmod:poss(significance, its)
amod(significance, physiological)
cc(pathological, and)
conj(physiological, pathological)
conj(balance, significance)
punct(let, . )
amod(process, facilitatory)
nsubj(take, process)
root(ROOT, take)
obj(take, place)
case(neocortex, between)
nmod(place, neocortex)
cc(hypothalamus, and)
conj(neocortex, hypothalamus)
case(pathways, via)
compound(pathways, ascend)
cc(descend, and)
conj(ascend, descend)
obl(take, pathways)
punct(take, .)
advmod(discharge, thus)
amod(fugal, cortico)
punct(fugal, -)
amod(discharge, fugal)
root(ROOT, discharge)
acl(discharge, induce)
case(application, by)
amod(application, topical)
obl(induce, application)
case(strychnine, of)
nmod(application, strychnine)
case(area, to)
det(area, a)
compound(area, minute)
obl(induce, area)
case(summate, in)
det(summate, the)
compound(summate, neocortex)
nmod(area, summate)
case(spike, with)
nmod(summate, spike)
amod(spike, present)
case(hypothalamus, in)
det(hypothalamus, the)
obl(present, hypothalamus)
cc(cause, and)
conj(hypothalamus, cause)
amod(discharge, increase)
amod(discharge, convulsive)
conj(hypothalamus, discharge)
punct(discharge, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(cause, hand)
punct(cause, ,)
det(reduction, the)
amod(reduction, temporary)
nsubj(cause, reduction)
case(excitability, in)
amod(excitability, hypothalamic)
nmod(reduction, excitability)
case(injection, through)
det(injection, the)
nmod(reduction, injection)
case(barbiturate, of)
det(barbiturate, a)
nmod(injection, barbiturate)
case(hypothalamus, into)
det(hypothalamus, the)
amod(hypothalamus, posterior)
nmod(barbiturate, hypothalamus)
root(ROOT, cause)
det(lessen, a)
obj(cause, lessen)
case(frequency, in)
nmod(lessen, frequency)
cc(amplitude, and)
conj(frequency, amplitude)
case(spike, of)
amod(spike, cortical)
compound(spike, strychnine)
nmod(amplitude, spike)
mark(restore, until)
det(excitability, the)
amod(excitability, hypothalamic)
nsubj:pass(restore, excitability)
aux:pass(restore, be)
advcl(cause, restore)
punct(cause, .)
advmod(exist, apparently)
punct(exist, ,)
det(feedback, a)
amod(feedback, positive)
nsubj(exist, feedback)
root(ROOT, exist)
case(hypothalamus, between)
det(hypothalamus, the)
amod(hypothalamus, posterior)
obl(exist, hypothalamus)
cc(cortex, and)
det(cortex, the)
amod(cortex, cerebral)
conj(hypothalamus, cortex)
punct(exist, .)
advmod(lead, consequently)
punct(lead, ,)
mark(fall, if)
case(reason, for)
det(reason, any)
obl(lead, reason)
det(excitability, the)
amod(excitability, hypothalamic)
nsubj(fall, excitability)
advcl(lead, fall)
case(level, below)
det(level, the)
amod(level, physiological)
obl(fall, level)
punct(lead, ,)
det(discharge, the)
amod(discharge, lessen)
amod(cortical, hypothalamic)
punct(cortical, -)
amod(discharge, cortical)
nsubj(lead, discharge)
root(ROOT, lead)
case(state, to)
det(state, a)
amod(state, diminish)
obl(lead, state)
case(activity, of)
nmod(state, activity)
case(cortex, in)
det(cortex, the)
nmod(state, cortex)
case(reduction, with)
amod(reduction, consequent)
nmod(state, reduction)
case(discharge, in)
det(discharge, the)
amod(fugal, cortico)
punct(fugal, -)
amod(discharge, fugal)
nmod(reduction, discharge)
punct(lead, .)
advmod(develop, obviously)
punct(develop, ,)
det(cycle, a)
amod(cycle, vicious)
nsubj(develop, cycle)
root(ROOT, develop)
punct(develop, .)
det(tendency, this)
nsubj:pass(break, tendency)
aux(break, can)
aux:pass(break, be)
root(ROOT, break)
advmod(break, either)
mark(restoring, by)
advcl(break, restoring)
amod(excitability, hypothalamic)
obj(restoring, excitability)
advmod(restoring, directly)
cc(pathways, or)
case(pathways, via)
amod(hypothalamic, cortico)
punct(hypothalamic, -)
amod(pathways, hypothalamic)
conj(excitability, pathways)
punct(break, .)
nsubj:pass(believe, it)
aux:pass(believe, be)
root(ROOT, believe)
mark(involve, that)
compound(therapy, drug)
nsubj(involve, therapy)
cc(electroshock, and)
conj(therapy, electroshock)
ccomp(believe, involve)
det(former, the)
obj(involve, former)
cc(psychotherapy, and)
conj(former, psychotherapy)
det(mechanism, the)
amod(mechanism, latter)
obj(involve, mechanism)
punct(believe, .)
mark(comment, before)
nsubj(comment, we)
advcl(remember, comment)
advmod(comment, further)
case(condition, on)
det(condition, these)
amod(condition, pathological)
obl(comment, condition)
punct(remember, ,)
nsubj(remember, we)
aux(remember, should)
root(ROOT, remember)
mark(distinguish, that)
nsubj(distinguish, change)
case(state, in)
det(state, the)
nmod(change, state)
case(hypothalamus, of)
det(hypothalamus, the)
nmod(state, hypothalamus)
case(limit, within)
amod(limit, physiological)
nmod(hypothalamus, limit)
ccomp(remember, distinguish)
obj(distinguish, sleep)
case(wakefulness, from)
obl(distinguish, wakefulness)
punct(remember, .)
advmod(prevail, thus)
punct(prevail, ,)
det(intensity, a)
amod(intensity, low)
nsubj(prevail, intensity)
case(discharge, of)
amod(cortical, hypothalamic)
punct(cortical, -)
amod(discharge, cortical)
nmod(intensity, discharge)
root(ROOT, prevail)
case(sleep, in)
obl(prevail, sleep)
cc(one, and)
det(one, a)
amod(one, high)
conj(sleep, one)
case(wakefulness, during)
nmod(one, wakefulness)
punct(prevail, ,)
advcl(prevail, result)
case(potential, in)
amod(potential, synchronous)
compound(potential, eeg)
obl(result, potential)
case(former, in)
det(former, the)
obl(result, former)
cc(asynchrony, and)
conj(former, asynchrony)
case(condition, in)
det(condition, the)
amod(condition, latter)
obl(former, condition)
punct(prevail, . )
advmod(induce, moreover)
punct(induce, ,)
det(dominance, the)
nsubj(induce, dominance)
case(action, in)
amod(action, parasympathetic)
nmod(dominance, action)
punct(inhibition, ()
case(inhibition, with)
amod(inhibition, reciprocal)
nmod(dominance, inhibition)
case(sympathetic, of)
det(sympathetic, the)
nmod(inhibition, sympathetic)
punct(inhibition, ))
case(level, at)
det(level, the)
amod(level, hypothalamic)
nmod(inhibition, level)
root(ROOT, induce)
punct(induce, ,)
case(action, by)
nmod:poss(action, its)
amod(action, peripheral)
obl(induce, action)
punct(symptom, ,)
det(symptom, the)
amod(symptom, autonomic)
conj(action, symptom)
case(sleep, of)
nmod(symptom, sleep)
cc(action, and)
punct(symptom, ,)
case(action, by)
nmod:poss(action, its)
nmod(symptom, action)
case(cortex, on)
det(cortex, the)
nmod(action, cortex)
punct(lessen, ,)
det(lessen, a)
conj(symptom, lessen)
case(reactivity, in)
det(reactivity, the)
nmod(lessen, reactivity)
case(apparatus, of)
det(apparatus, the)
amod(apparatus, sensory)
cc(motor, and)
conj(sensory, motor)
nmod(reactivity, apparatus)
case(system, of)
det(system, the)
amod(system, somatic)
amod(system, nervous)
nmod(apparatus, system)
punct(induce, .)
case(dominance, with)
det(dominance, the)
obl(occur, dominance)
case(division, of)
det(division, the)
amod(division, sympathetic)
nmod(dominance, division)
case(hypothalamus, of)
det(hypothalamus, the)
nmod(division, hypothalamus)
punct(occur, ,)
det(change, the)
amod(change, opposite)
nsubj(occur, change)
root(ROOT, occur)
punct(occur, .)
mark(produce, since)
amod(stimulation, electrical)
nsubj(produce, stimulation)
case(hypothalamus, of)
det(hypothalamus, the)
amod(hypothalamus, posterior)
nmod(stimulation, hypothalamus)
advcl(say, produce)
det(effect, the)
obj(produce, effect)
case(wakefulness, of)
nmod(effect, wakefulness)
mark(induce, while)
nsubj(induce, stimulation)
case(hypothalamus, of)
det(hypothalamus, the)
amod(hypothalamus, anterior)
nmod(stimulation, hypothalamus)
advcl(produce, induce)
obj(induce, sleep)
punct(say, ,)
nsubj:pass(say, it)
aux(say, may)
aux:pass(say, be)
root(ROOT, say)
mark(alter, that)
det(reactivity, the)
nsubj:pass(alter, reactivity)
case(organism, of)
det(organism, the)
amod(organism, whole)
nmod(reactivity, organism)
aux:pass(alter, be)
ccomp(say, alter)
case(change, by)
det(change, a)
obl(alter, change)
case(reactivity, in)
det(reactivity, the)
amod(reactivity, autonomic)
nmod(change, reactivity)
case(hypothalamus, of)
det(hypothalamus, the)
nmod(reactivity, hypothalamus)
punct(say, .)
amod(effect, Similar)
nsubj:pass(induce, effect)
aux(induce, can)
aux:pass(induce, be)
root(ROOT, induce)
advmod(induce, reflexly)
case(reflex, via)
det(reflex, the)
compound(reflex, baroreceptor)
obl(induce, reflex)
case(man, in)
nmod(reflex, man)
cc(animal, and)
conj(man, animal)
punct(induce, .)
case(importance, of)
amod(importance, particular)
root(ROOT, importance)
cop(importance, be)
det(study, the)
nsubj(importance, study)
case(action, of)
det(action, the)
nmod(study, action)
case(drug, of)
nmod(action, drug)
case(respect, in)
det(respect, this)
nmod(action, respect)
punct(importance, .)
mark(act, although)
det(drug, no)
nsubj(act, drug)
advcl(be, act)
advmod(act, exclusively)
case(hypothalamus, on)
det(hypothalamus, the)
obl(act, hypothalamus)
cc(part, or)
det(part, a)
conj(hypothalamus, part)
case(it, of)
nmod(part, it)
punct(be, ,)
expl(be, there)
root(ROOT, be)
amod(specificity, sufficient)
nsubj(be, specificity)
mark(distinguish, to)
acl(specificity, distinguish)
obj(distinguish, drug)
nsubj(shift, which)
acl:relcl(drug, shift)
det(balance, the)
amod(balance, hypothalamic)
obj(shift, balance)
case(side, to)
det(side, the)
amod(side, sympathetic)
obl(shift, side)
case(those, from)
nmod(side, those)
nsubj(produce, which)
acl:relcl(those, produce)
det(dominance, a)
amod(dominance, parasympathetic)
obj(produce, dominance)
punct(be, .)
det(former, the)
nsubj(comprise, former)
root(ROOT, comprise)
amod(drug, analeptic)
cc(psychoactive, and)
conj(analeptic, psychoactive)
obj(comprise, drug)
punct(drug, ,)
mark(latter, the)
appos(drug, latter)
det(tranquilizer, the)
nsubj(latter, tranquilizer)
punct(comprise, .)
amod(difference, Specific)
nsubj(exist, difference)
root(ROOT, exist)
case(action, in)
det(action, the)
obl(exist, action)
case(drug, of)
amod(drug, different)
nmod(action, drug)
acl(drug, belong)
case(group, to)
det(group, the)
amod(group, same)
obl(belong, group)
case(instance, as)
punct(exist, ,)
case(instance, for)
obl(belong, instance)
punct(exist, ,)
case(reserpine, between)
obl(belong, reserpine)
cc(chlorpromazine, and)
conj(reserpine, chlorpromazine)
punct(exist, .)
advcl(obscure, important)
mark(be, as)
det(difference, these)
nsubj(be, difference)
advcl(important, be)
punct(obscure, ,)
nsubj(obscure, they)
aux(obscure, should)
advmod(obscure, not)
root(ROOT, obscure)
det(fact, the)
amod(fact, basic)
obj(obscure, fact)
mark(produce, that)
mark(shift, by)
advcl(produce, shift)
det(balance, the)
amod(balance, hypothalamic)
obj(shift, balance)
advmod(shift, sufficiently)
case(side, to)
det(side, the)
amod(side, parasympathetic)
obl(shift, side)
punct(produce, ,)
nsubj(produce, we)
conj(obscure, produce)
obj(produce, depression)
punct(produce, ,)
mark(cause, whereas)
det(shift, a)
nsubj(cause, shift)
case(direction, in)
det(direction, the)
amod(direction, opposite)
nmod(shift, direction)
advcl(produce, cause)
amod(effect, excitatory)
obj(cause, effect)
cc(change, and)
punct(change, ,)
advmod(change, eventually)
punct(change, ,)
amod(change, maniclike)
conj(effect, change)
punct(obscure, .)
det(state, the)
amod(state, emotional)
nsubj(influence, state)
acl(state, produce)
case(drug, by)
obl(produce, drug)
root(ROOT, influence)
det(potential, the)
amod(potential, cortical)
obj(influence, potential)
case(manner, in)
det(manner, a)
amod(manner, characteristic)
nmod(potential, manner)
punct(influence, ;)
punct(influence, ;)
nsubj(prevail, synchrony)
parataxis(influence, prevail)
case(eeg, in)
det(eeg, the)
obl(prevail, eeg)
case(animal, of)
det(animal, the)
amod(animal, experimental)
nmod(eeg, animal)
case(administration, after)
nmod(eeg, administration)
case(tranquilizer, of)
nmod(administration, tranquilizer)
punct(asynchrony, ,)
cc(asynchrony, but)
conj(administration, asynchrony)
case(application, after)
nmod(asynchrony, application)
case(drug, of)
amod(drug, analeptic)
cc(psychoactive, and)
conj(analeptic, psychoactive)
nmod(application, drug)
punct(influence, .)
det(therapy, the)
compound(therapy, shock)
nsubj(act, therapy)
advcl(show, act)
advmod(act, likewise)
case(balance, on)
det(balance, the)
amod(balance, hypothalamic)
obl(act, balance)
punct(act, .)
amod(experiment, physiological)
nsubj(show, experiment)
cc(observation, and)
amod(observation, clinical)
conj(experiment, observation)
aux(show, have)
root(ROOT, show)
mark(influence, that)
det(procedure, these)
nsubj(influence, procedure)
ccomp(show, influence)
det(secretion, the)
advmod(control, hypothalamically)
amod(secretion, control)
compound(secretion, hypophyseal)
obj(influence, secretion)
cc(increase, and)
conj(influence, increase)
amod(discharge, sympathetic)
obj(increase, discharge)
punct(show, .)
nsubj(shift, they)
root(ROOT, shift)
det(balance, the)
amod(balance, hypothalamic)
obj(shift, balance)
case(side, to)
det(side, the)
amod(side, sympathetic)
obl(shift, side)
punct(shift, .)
nsubj(explain, this)
parataxis(shift, explain)
det(effect, the)
amod(effect, beneficial)
obj(explain, effect)
case(therapy, of)
compound(therapy, electroshock)
nmod(effect, therapy)
case(depression, in)
amod(depression, certain)
nmod(effect, depression)
cc(shift, and)
det(shift, a)
conj(effect, shift)
case(reaction, in)
det(reaction, the)
nmod(shift, reaction)
case(reactivity, from)
compound(reactivity, hypo)
punct(hypo, -)
case(normal, to)
amod(reactivity, normal)
nmod(reaction, reactivity)
case(system, of)
det(system, the)
amod(system, sympathetic)
nmod(reactivity, system)
mark(show, as)
acl(reactivity, show)
case(test, by)
det(test, the)
compound(test, Mecholyl)
obl(show, test)
punct(shift, .)
det(investigator, some)
nsubj(find, investigator)
aux(find, have)
root(ROOT, find)
det(parallelism, a)
obj(find, parallelism)
case(remission, between)
nmod(parallelism, remission)
cc(return, and)
conj(remission, return)
case(reactivity, of)
det(reactivity, the)
amod(reactivity, sympathetic)
nmod(remission, reactivity)
case(hypothalamus, of)
det(hypothalamus, the)
nmod(reactivity, hypothalamus)
case(level, to)
det(level, the)
amod(level, normal)
nmod(hypothalamus, level)
mark(indicate, as)
advcl(find, indicate)
case(test, by)
det(test, the)
compound(test, Mecholyl)
obl(indicate, test)
cc(impairment, and)
punct(impairment, ,)
advmod(impairment, conversely)
punct(impairment, ,)
case(impairment, between)
amod(impairment, clinical)
nmod(test, impairment)
cc(increase, and)
conj(indicate, increase)
obj(increase, deviation)
case(test, of)
det(test, this)
nmod(deviation, test)
case(norm, from)
det(norm, the)
obl(increase, norm)
punct(find, .)
advmod(have, nevertheless)
punct(have, ,)
det(theory, the)
nsubj(have, theory)
obj(have, that)
det(influence, the)
amod(influence, determine)
nsubj(have, influence)
case(balance, of)
det(balance, the)
amod(balance, hypothalamic)
nmod(influence, balance)
root(ROOT, have)
det(influence, a)
amod(influence, profound)
obj(have, influence)
case(behavior, on)
det(behavior, the)
amod(behavior, clinical)
nmod(influence, behavior)
case(patient, of)
amod(patient, neuropsychiatric)
nmod(behavior, patient)
aux(test, have)
advmod(test, not)
advmod(test, yet)
aux:pass(test, be)
acl:relcl(influence, test)
case(number, on)
det(number, a)
amod(number, adequate)
obl(test, number)
case(patient, of)
nmod(number, patient)
punct(test, .)
det(test, the)
compound(test, Mecholyl)
cc(noradrenalin, and)
conj(Mecholyl, noradrenalin)
nsubj(indicator, test)
acl(test, apply)
case(precaution, with)
amod(precaution, certain)
obl(apply, precaution)
cop(indicator, be)
amod(indicator, reliable)
root(ROOT, indicator)
case(balance, of)
det(balance, this)
amod(balance, central)
amod(balance, autonomic)
nmod(indicator, balance)
punct(sake, ,)
cc(sake, but)
case(sake, for)
det(sake, the)
conj(indicator, sake)
mark(correlate, of)
acl(sake, correlate)
amod(state, autonomic)
cc(clinical, and)
conj(autonomic, clinical)
obj(correlate, state)
punct(study, ,)
cc(study, and)
mark(study, of)
conj(correlate, study)
det(effect, the)
obj(study, effect)
case(procedure, of)
amod(procedure, certain)
amod(procedure, therapeutic)
nmod(effect, procedure)
case(reaction, on)
amod(reaction, central)
amod(reaction, autonomic)
nmod(procedure, reaction)
punct(seem, ,)
amod(test, additional)
nsubj(seem, test)
acl:relcl(effect, seem)
mark(desirable, to)
cop(desirable, be)
xcomp(seem, desirable)
punct(seem, .)
nsubj:pass(assume, it)
aux:pass(assume, be)
root(ROOT, assume)
mark(follow, that)
det(shift, the)
nsubj(follow, shift)
case(balance, in)
amod(balance, autonomic)
amod(balance, hypothalamic)
nmod(shift, balance)
acl(balance, occur)
advmod(occur, spontaneously)
case(patient, in)
amod(patient, neuropsychiatric)
obl(occur, patient)
case(application, from)
det(application, the)
obl(occur, application)
case(procedure, of)
amod(procedure, certain)
amod(procedure, therapeutic)
nmod(application, procedure)
ccomp(assume, follow)
det(pattern, the)
obj(follow, pattern)
acl(pattern, know)
case(cycle, from)
det(cycle, the)
compound(wakefulness, sleep)
punct(wakefulness, -)
compound(cycle, wakefulness)
obl(know, cycle)
punct(assume, . )
det(change, a)
nsubj(lead, change)
case(balance, in)
det(balance, the)
nmod(change, balance)
case(side, to)
det(side, the)
amod(side, parasympathetic)
nmod(balance, side)
root(ROOT, lead)
case(individual, in)
det(individual, the)
amod(individual, normal)
obl(lead, individual)
mark(sleep, to)
acl(individual, sleep)
cc(collapse, or)
punct(collapse, ,)
case(circumstance, in)
amod(circumstance, special)
obl(sleep, circumstance)
punct(collapse, ,)
case(collapse, to)
amod(collapse, cardiovascular)
obl(sleep, collapse)
cc(nausea, or)
conj(collapse, nausea)
cc(vomit, and)
conj(collapse, vomit)
punct(lead, .)
case(condition, in)
det(condition, both)
obl(diminish, condition)
det(sensitivity, the)
amod(sensitivity, emotional)
cc(perceptual, and)
conj(emotional, perceptual)
nsubj:pass(diminish, sensitivity)
aux:pass(diminish, be)
root(ROOT, diminish)
punct(occur, ,)
cc(occur, but)
det(depression, no)
nsubj(occur, depression)
conj(diminish, occur)
mark(see, such)
fixed(such, as)
aux:pass(see, be)
advcl(occur, see)
advmod(see, clinically)
cc(produce, or)
aux(produce, may)
aux:pass(produce, be)
conj(see, produce)
case(person, in)
amod(person, normal)
obl(produce, person)
case(drug, by)
nmod(person, drug)
punct(diminish, .)
det(difference, the)
amod(difference, fundamental)
nsubj(remain, difference)
case(state, between)
amod(state, physiological)
cc(pathological, and)
conj(physiological, pathological)
nmod(difference, state)
case(dominance, of)
nmod(state, parasympathetic)
punct(parasympathetic, ()
cc(also, and)
advmod(sympathetic, also)
case(sympathetic, of)
conj(parasympathetic, sympathetic)
punct(sympathetic, ))
nmod(state, dominance)
root(ROOT, remain)
mark(elucidate, to)
aux:pass(elucidate, be)
xcomp(remain, elucidate)
punct(remain, .)
advmod(lie, perhaps)
det(clue, a)
nsubj(lie, clue)
case(problem, to)
det(problem, these)
cc(related, and)
conj(these, related)
nmod(clue, problem)
root(ROOT, lie)
case(fact, in)
det(fact, the)
obl(lie, fact)
mark(associate, that)
nsubj:pass(associate, change)
case(intensity, in)
det(intensity, the)
nmod(change, intensity)
case(discharge, of)
amod(discharge, hypothalamic)
nmod(intensity, discharge)
nsubj:pass(associate, which)
aux:pass(associate, be)
acl(fact, associate)
case(change, with)
obl(associate, change)
case(lead, in)
nmod:poss(lead, its)
compound(lead, balance)
nmod(change, lead)
advmod(alteration, also)
case(alteration, to)
amod(alteration, qualitative)
nmod(change, alteration)
case(reactivity, in)
nmod(alteration, reactivity)
punct(lie, . )
det(state, a)
nsubj(cause, state)
case(tuning, of)
amod(tuning, parasympathetic)
punct(tuning, ``)
nmod(state, tuning)
punct(tuning, '')
case(hypothalamus, of)
det(hypothalamus, the)
nmod(tuning, hypothalamus)
acl(hypothalamus, induce)
advmod(induce, experimentally)
root(ROOT, cause)
advmod(only, not)
advmod(increase, only)
det(increase, a)
obj(cause, increase)
case(reactivity, in)
det(reactivity, the)
amod(reactivity, parsympathetic)
nmod(increase, reactivity)
case(structure, of)
det(structure, this)
nmod(reactivity, structure)
mark(direct, to)
acl(reactivity, direct)
cc(induce, and)
advmod(induce, reflexly)
amod(stimuli, induce)
obj(direct, stimuli)
punct(lead, ,)
cc(lead, but)
conj(cause, lead)
advmod(lead, also)
case(reversal, to)
det(reversal, a)
amod(reversal, autonomic)
obl(lead, reversal)
punct(reversal, :)
det(stimulus, a)
nsubj(elicit, stimulus)
acl(stimulus, act)
advmod(act, sympathetically)
case(condition, under)
compound(condition, control)
obl(act, condition)
acl:relcl(reversal, elicit)
case(state, in)
det(state, this)
obl(elicit, state)
mark(tuning, of)
acl(state, tuning)
det(response, a)
amod(response, parasympathetic)
obj(tuning, response)
punct(elicit, !)
punct(cause, ! )
advmod(alter, furthermore)
punct(alter, ,)
amod(reaction, condition)
nsubj:pass(alter, reaction)
aux:pass(alter, be)
advmod(alter, fundamentally)
root(ROOT, alter)
mark(augment, when)
det(reactivity, the)
amod(reactivity, hypothalamic)
amod(reactivity, sympathetic)
nsubj:pass(augment, reactivity)
aux:pass(augment, be)
advcl(alter, augment)
case(level, beyond)
det(level, a)
amod(level, critical)
obl(augment, level)
punct(related, ,)
cc(related, and)
amod(type, several)
nsubj(related, type)
case(change, of)
amod(change, behavioral)
nmod(type, change)
advmod(related, probably)
conj(alter, related)
case(degree, to)
det(degree, the)
obl(related, degree)
case(tuning, of)
amod(tuning, central)
amod(tuning, autonomic)
punct(tuning, ``)
nmod(degree, tuning)
punct(tuning, '')
aux:pass(observe, be)
acl(degree, observe)
punct(alter, .)
mark(produce, if)
punct(produce, ,)
case(instance, for)
obl(produce, instance)
punct(produce, ,)
det:predet(change, such)
det(change, a)
nsubj:pass(produce, change)
aux:pass(produce, be)
advcl(reappear, produce)
case(one, by)
obl(produce, one)
cc(a, or)
det(few, a)
amod(comas, few)
compound(comas, insulin)
obl(produce, comas)
cc(electroshock, or)
conj(comas, electroshock)
punct(reappear, ,)
advmod(inhibit, previously)
amod(reaction, inhibit)
amod(reaction, condition)
nsubj(reappear, reaction)
root(ROOT, reappear)
punct(reappear, .)
advmod(abolish, however)
punct(abolish, ,)
mark(apply, if)
det(procedure, these)
nsubj:pass(apply, procedure)
aux:pass(apply, be)
advcl(abolish, apply)
advmod(often, more)
advmod(apply, often)
punct(abolish, ,)
amod(response, condition)
amod(response, emotional)
nsubj:pass(abolish, response)
aux:pass(abolish, be)
advmod(abolish, temporarily)
root(ROOT, abolish)
punct(abolish, .)
case(study, in)
amod(study, other)
obl(establish, study)
punct(establish, ,)
nsubj(establish, loss)
case(differentiation, of)
nmod(loss, differentiation)
mark(establish, in)
advmod(establish, previously)
root(ROOT, establish)
amod(reflex, condition)
obj(establish, reflex)
acl(reflex, result)
case(treatment, from)
amod(treatment, repeat)
amod(treatment, convulsive)
punct(treatment, ()
compound(treatment, metrazol)
punct(treatment, ))
obl(result, treatment)
punct(suggest, ,)
advcl(establish, suggest)
det(disturbance, a)
amod(disturbance, fundamental)
obj(suggest, disturbance)
case(balance, in)
det(balance, the)
nmod(disturbance, balance)
case(process, between)
amod(process, excitatory)
cc(inhibitory, and)
conj(excitatory, inhibitory)
conj(excitatory, cerebral)
nmod(balance, process)
punct(establish, .)
expl(show, it)
aux(show, have)
advmod(show, further)
aux:pass(show, be)
root(ROOT, show)
mark(associate, that)
punct(show, :)
punct(1, ()
nummod(associate, 1)
punct(1, ))
det(neurosis, a)
amod(neurosis, experimental)
nsubj:pass(associate, neurosis)
case(stage, in)
nmod:poss(stage, its)
amod(stage, initial)
nmod(neurosis, stage)
aux:pass(associate, be)
ccomp(show, associate)
case(shift, with)
det(shift, a)
amod(shift, reversible)
obl(associate, shift)
case(balance, in)
det(balance, the)
amod(balance, central)
amod(balance, autonomic)
nmod(shift, balance)
punct(associate, ;)
punct(associate, ;)
punct(2, ()
nummod(alter, 2)
punct(2, ))
nsubj(alter, drug)
acl(drug, alter)
det(balance, the)
amod(balance, hypothalamic)
obj(alter, balance)
ccomp(show, alter)
amod(reaction, condition)
obj(alter, reaction)
punct(alter, ;)
punct(alter, ;)
punct(3, ()
nummod(fail, 3)
punct(3, ))
case(state, in)
det(state, a)
obl(fail, state)
case(depression, of)
nmod(state, depression)
punct(fail, ,)
det(stimulus, the)
amod(stimulus, positive)
amod(stimulus, condition)
nsubj(fail, stimulus)
aux(fail, may)
ccomp(show, fail)
mark(elicit, to)
xcomp(fail, elicit)
det(reaction, a)
amod(reaction, condition)
obj(elicit, reaction)
cc(cause, but)
conj(elicit, cause)
det(synchrony, a)
amod(synchrony, increase)
obj(cause, synchrony)
case(desynchronize, instead)
fixed(instead, of)
det(desynchronize, the)
amod(desynchronize, excitatory)
obl(cause, desynchronize)
punct(alerting, ()
acl(desynchronize, alerting)
punct(alerting, ))
obj(cause, effect)
case(Aj, on)
det(Aj, the)
nmod(effect, Aj)
punct(show, .)
nsubj(data, these)
cop(data, be)
amod(data, few)
cc(disjointed, and)
advmod(disjointed, seemingly)
conj(few, disjointed)
root(ROOT, data)
punct(illustrate, ,)
cc(illustrate, but)
nsubj(illustrate, they)
conj(data, illustrate)
det(fact, the)
amod(fact, important)
obj(illustrate, fact)
mark(occur, that)
amod(alteration, fundamental)
nsubj(occur, alteration)
case(reaction, in)
amod(reaction, condition)
nmod(alteration, reaction)
acl(fact, occur)
case(variety, in)
det(variety, a)
obl(occur, variety)
case(state, of)
nmod(variety, state)
case(which, in)
obl(alter, which)
det(balance, the)
amod(balance, hypothalamic)
nsubj:pass(alter, balance)
aux(alter, have)
aux:pass(alter, be)
acl:relcl(variety, alter)
case(experimentation, by)
amod(experimentation, physiological)
obl(alter, experimentation)
punct(action, ,)
amod(action, pharmacological)
conj(experimentation, action)
punct(process, ,)
cc(process, or)
amod(process, clinical)
conj(experimentation, process)
punct(process, .)
nummod(process, 14)
punct(basis, .)
case(basis, on)
det(basis, the)
amod(basis, physiological)
nmod(experimentation, basis)
case(form, of)
det(form, some)
nmod(basis, form)
case(psychotherapy, of)
nmod(form, psychotherapy)
det(remark, the)
amod(remark, forego)
nsubj(imply, remark)
acl:relcl(basis, imply)
mark(play, that)
det(balance, the)
amod(balance, hypothalamic)
nsubj(play, balance)
ccomp(imply, play)
det(role, a)
amod(role, crucial)
obj(play, role)
case(crossroad, at)
det(crossroad, the)
nmod(role, crossroad)
case(form, between)
amod(form, physiological)
cc(pathological, and)
conj(physiological, pathological)
nmod(crossroad, form)
case(emotion, of)
nmod(form, emotion)
punct(data, .)
mark(case, if)
nsubj(case, this)
cop(case, be)
det(case, the)
advcl(expect, case)
punct(expect, ,)
nsubj(expect, one)
aux(expect, would)
root(ROOT, expect)
mark(mention, that)
advmod(only, not)
advmod(procedure, only)
det(procedure, the)
amod(procedure, various)
nsubj(mention, procedure)
advmod(mention, just)
ccomp(expect, mention)
nsubj(alter, which)
ccomp(mention, alter)
det(balance, the)
amod(balance, hypothalamic)
obj(alter, balance)
aux(influence, would)
ccomp(alter, influence)
amod(state, emotional)
obj(influence, state)
cc(behavior, and)
conj(state, behavior)
cc(act, but)
mark(act, that)
nsubj(act, emotion)
nmod:npmod(emotion, itself)
aux(act, would)
conj(influence, act)
advmod(act, likewise)
punct(expect, .)
nsubj(point, we)
root(ROOT, point)
compound:prt(point, out)
mark(lead, that)
amod(excitement, emotional)
nsubj(lead, excitement)
aux(lead, may)
ccomp(point, lead)
case(disorder, to)
amod(disorder, psychosomatic)
obl(lead, disorder)
cc(symptom, and)
amod(symptom, neurotic)
conj(disorder, symptom)
punct(lead, ,)
advmod(type, particularly)
case(type, in)
amod(type, certain)
obl(lead, type)
case(personality, of)
nmod(type, personality)
punct(know, ,)
cc(know, but)
nsubj:pass(know, it)
aux:pass(know, be)
advmod(know, also)
conj(point, know)
mark(cure, that)
det(relive, the)
nsubj(cure, relive)
case(emotion, of)
det(emotion, a)
amod(emotion, strong)
nmod(relive, emotion)
punct(abreaction, ()
punct(abreaction, ``)
appos(emotion, abreaction)
punct(abreaction, '')
punct(abreaction, ))
aux(cure, may)
ccomp(know, cure)
det(neurosis, a)
compound(neurosis, battle)
obj(cure, neurosis)
punct(point, .)
det(phenomenon, this)
nsubj(raise, phenomenon)
root(ROOT, raise)
det(question, the)
obj(raise, question)
mark(have, whether)
det(guidance, the)
nsubj(have, guidance)
case(emotion, of)
det(emotion, the)
nmod(guidance, emotion)
case(end, for)
amod(end, therapeutic)
nmod(emotion, end)
aux(have, may)
advmod(have, not)
acl(question, have)
det(application, a)
advmod(wider, even)
amod(application, wider)
obj(have, application)
case(area, in)
det(area, the)
nmod(application, area)
case(neurose, of)
det(neurose, the)
nmod(area, neurose)
punct(raise, .)
cop(procedure, be)
det(procedure, a)
advmod(physiological, strictly)
amod(procedure, physiological)
advcl(expect, procedure)
punct(expect, ,)
nsubj(expect, one)
aux(expect, may)
root(ROOT, expect)
case(information, from)
det:predet(information, such)
det(information, a)
compound(information, study)
amod(information, additional)
obj(expect, information)
case(nature, on)
det(nature, the)
nmod(information, nature)
case(process, of)
det(process, the)
amod(process, emotional)
nmod(nature, process)
nmod:npmod(process, itself)
punct(lie, .)
nmod:poss(experiment, Wolpe)
case(Wolpe, 's)
nsubj(lie, experiment)
cc(work, and)
amod(work, therapeutic)
conj(experiment, work)
ccomp(expect, lie)
case(area, in)
det(area, this)
obl(lie, area)
punct(lie, .)
nsubj(show, he)
root(ROOT, show)
advmod(show, convincingly)
mark(reaction, that)
nsubj(reaction, anxiety)
cop(reaction, be)
det(reaction, a)
amod(reaction, learn)
punct(condition, ()
amod(reaction, condition)
punct(reaction, ))
ccomp(show, reaction)
cc(basis, and)
cop(basis, be)
det(basis, the)
conj(show, basis)
case(neurose, of)
amod(neurose, experimental)
cc(clinical, and)
conj(experimental, clinical)
nmod(basis, neurose)
cc(assume, and)
conj(basis, assume)
punct(functional, ,)
advmod(functional, therefore)
punct(functional, ,)
mark(functional, that)
det(change, the)
amod(change, neuronal)
nsubj(functional, change)
nsubj(underlie, which)
acl:relcl(change, underlie)
det(neurose, the)
obj(underlie, neurose)
cop(functional, be)
ccomp(assume, functional)
cc(reversible, and)
conj(functional, reversible)
punct(show, .)
det(observation, a)
amod(observation, important)
nsubj(serve, observation)
case(Pavlov, of)
nmod(observation, Pavlov)
root(ROOT, serve)
case(post, as)
det(post, a)
compound(post, guide)
obl(serve, post)
mark(achieve, to)
acl(post, achieve)
det:predet(reversibility, such)
det(reversibility, a)
obj(achieve, reversibility)
case(means, by)
amod(means, physiological)
nmod(reversibility, means)
punct(serve, .)
case(experiment, in)
det(experiment, a)
compound(experiment, conditioning)
obl(demonstrate, experiment)
punct(demonstrate, ,)
nsubj(demonstrate, he)
root(ROOT, demonstrate)
det(antagonism, the)
obj(demonstrate, antagonism)
case(feeding, between)
nmod(antagonism, feeding)
cc(pain, and)
conj(feeding, pain)
punct(demonstrate, . )
det(shock, a)
amod(shock, mild)
amod(shock, electrical)
nsubj(serve, shock)
root(ROOT, serve)
case(stimulus, as)
det(stimulus, a)
amod(stimulus, condition)
obl(serve, stimulus)
cc(follow, and)
aux:pass(follow, be)
conj(serve, follow)
case(feeding, by)
obl(follow, feeding)
punct(serve, .)
det(pain, the)
nsubj(become, pain)
root(ROOT, become)
advmod(symbol, thus)
det(symbol, the)
xcomp(become, symbol)
case(food, for)
nmod(symbol, food)
cc(elicit, and)
conj(become, elicit)
compound(secretion, salivary)
obj(elicit, secretion)
punct(reflex, ()
amod(reflex, condition)
appos(secretion, reflex)
punct(reflex, ))
punct(become, .)
advmod(increase, even)
mark(increase, when)
det(intensity, the)
nsubj:pass(increase, intensity)
case(shock, of)
det(shock, the)
nmod(intensity, shock)
aux:pass(increase, be)
advcl(fail, increase)
advmod(increase, gradually)
punct(fail, ,)
nsubj(fail, it)
root(ROOT, fail)
mark(evoke, to)
xcomp(fail, evoke)
det(sign, any)
obj(evoke, sign)
case(pain, of)
nmod(sign, pain)
punct(fail, .)
mark(produce, since)
amod(stimuli, strong)
amod(stimuli, nociceptive)
nsubj(produce, stimuli)
advcl(think, produce)
det(neurosis, a)
amod(neurosis, experimental)
obj(produce, neurosis)
case(which, during)
obl(fail, which)
det(animal, the)
nsubj(fail, animal)
acl:relcl(neurosis, fail)
mark(eat, to)
xcomp(fail, eat)
case(situation, in)
det(situation, the)
amod(situation, experimental)
obl(eat, situation)
punct(think, ,)
nsubj(think, Wolpe)
root(ROOT, think)
mark(utilize, that)
nsubj(utilize, he)
aux(utilize, could)
ccomp(think, utilize)
det(antagonism, the)
compound(pain, feeding)
punct(pain, -)
compound(antagonism, pain)
obj(utilize, antagonism)
mark(inhibit, to)
acl(antagonism, inhibit)
det(symptom, the)
amod(symptom, neurotic)
obj(inhibit, symptom)
case(feeding, through)
obl(inhibit, feeding)
punct(think, .)
amod(experiment, appropriate)
nsubj(show, experiment)
root(ROOT, show)
mark(possible, that)
nsubj(possible, this)
cop(possible, be)
punct(possible, ,)
advmod(possible, indeed)
punct(possible, ,)
ccomp(show, possible)
punct(show, .)
nsubj(apply, he)
advmod(apply, then)
root(ROOT, apply)
det(principle, this)
obj(apply, principle)
case(inhibition, of)
amod(inhibition, reciprocal)
nmod(principle, inhibition)
case(neurose, to)
amod(neurose, human)
nmod(inhibition, neurose)
punct(apply, .)
nsubj(take, he)
root(ROOT, take)
obj(take, advantage)
case(antagonism, of)
det(antagonism, the)
nmod(advantage, antagonism)
case(assertiveness, between)
amod(assertiveness, aggressive)
nmod(antagonism, assertiveness)
cc(anxiety, and)
conj(assertiveness, anxiety)
cc(find, and)
conj(take, find)
det(disappearance, a)
advmod(rapid, relatively)
amod(disappearance, rapid)
obj(find, disappearance)
case(anxiety, of)
nmod(disappearance, anxiety)
mark(establish, when)
det(attitude, the)
amod(attitude, former)
nsubj:pass(establish, attitude)
aux:pass(establish, be)
advcl(find, establish)
punct(take, .)
case(interpretation, for)
det(interpretation, the)
obl(remember, interpretation)
case(investigation, of)
det(investigation, these)
amod(investigation, significant)
nmod(interpretation, investigation)
punct(remember, ,)
nsubj:pass(remember, it)
aux(remember, should)
aux:pass(remember, be)
root(ROOT, remember)
mark(exist, that)
amod(relation, reciprocal)
nsubj(exist, relation)
ccomp(remember, exist)
case(hypothalamus, in)
det(hypothalamus, the)
obl(exist, hypothalamus)
case(respect, with)
nmod(hypothalamus, respect)
case(function, to)
amod(function, autonomic)
cc(somatic, and)
conj(autonomic, somatic)
nmod(respect, function)
nsubj:pass(associate, which)
aux:pass(associate, be)
advmod(associate, closely)
acl:relcl(function, associate)
case(emotion, with)
det(emotion, the)
obl(associate, emotion)
punct(remember, .)
det(antagonism, the)
compound(pain, feeding)
punct(pain, -)
compound(antagonism, pain)
nsubj(seem, antagonism)
root(ROOT, seem)
mark(base, to)
aux:pass(base, be)
xcomp(seem, base)
case(relation, on)
det(relation, this)
amod(relation, reciprocal)
obl(base, relation)
case(system, between)
det(system, the)
compound(system, tropho)
punct(tropho, -)
cc(ergotropic, and)
conj(tropho, ergotropic)
nmod(relation, system)
punct(seem, . )
advmod(exist, furthermore)
punct(exist, ,)
det(antagonism, a)
amod(antagonism, functional)
nsubj(exist, antagonism)
root(ROOT, exist)
case(attitude, between)
det(attitude, a)
amod(attitude, aggressive)
obl(exist, attitude)
cc(state, and)
det(state, a)
conj(attitude, state)
case(anxiety, of)
nmod(state, anxiety)
punct(exist, .)
mark(present, although)
case(emotion, in)
det(emotion, both)
obl(present, emotion)
amod(symptom, sympathetic)
nsubj(present, symptom)
cop(present, be)
advcl(underlie, present)
punct(underlie, ,)
amod(pattern, different)
amod(somatic, autonomic)
punct(somatic, -)
amod(pattern, somatic)
nsubj(underlie, pattern)
root(ROOT, underlie)
obj(underlie, aggression)
cc(anxiety, and)
conj(aggression, anxiety)
punct(aggression, ,)
advmod(underlie, respectively)
punct(underlie, ,)
mark(indicate, as)
advcl(underlie, indicate)
case(rate, by)
det(rate, the)
obl(indicate, rate)
case(excretion, of)
det(excretion, the)
nmod(rate, excretion)
case(catecholamine, of)
det(catecholamine, the)
nmod(excretion, catecholamine)
punct(state, ,)
det(state, the)
conj(catecholamine, state)
case(tone, of)
det(tone, the)
compound(tone, muscle)
nmod(state, tone)
punct(test, ,)
cc(test, and)
det(test, the)
compound(test, Mecholyl)
conj(catecholamine, test)
punct(underlie, .)
det(incompatibility, the)
amod(incompatibility, psychological)
nsubj(seem, incompatibility)
case(state, of)
det(state, these)
amod(state, emotional)
nmod(incompatibility, state)
root(ROOT, seem)
mark(reflect, to)
aux:pass(reflect, be)
xcomp(seem, reflect)
obl(reflect, in)
punct(difference, ,)
cc(base, or)
case(difference, base)
case(difference, on)
punct(difference, ,)
det(difference, this)
amod(difference, mark)
obl(reflect, difference)
punct(difference, .)
nummod(difference, 15)
punct(conclude, .)
parataxis(seem, conclude)
obj(conclude, remark)
case(attempt, in)
nmod:poss(attempt, we)
obl(emphasize, attempt)
mark(interpret, to)
acl(attempt, interpret)
det(emotion, the)
obj(interpret, emotion)
case(range, in)
nmod:poss(range, they)
amod(range, physiological)
cc(pathological, and)
conj(physiological, pathological)
nmod(emotion, range)
punct(emphasize, ,)
nsubj(emphasize, we)
root(ROOT, emphasize)
det(importance, the)
obj(emphasize, importance)
case(degree, of)
det(degree, the)
nmod(importance, degree)
case(activity, of)
nmod(degree, activity)
case(division, of)
det(division, the)
amod(division, parasympathetic)
cc(sympathetic, and)
conj(parasympathetic, sympathetic)
nmod(degree, division)
case(system, of)
det(system, the)
amod(system, hypothalamic)
nmod(division, system)
cc(influence, and)
nmod:poss(influence, they)
conj(division, influence)
case(system, on)
det(system, the)
amod(system, inhibitory)
cc(excitatory, and)
conj(inhibitory, excitatory)
nmod(influence, system)
punct(influence, ,)
advmod(influence, respectively)
punct(emphasize, .)
nsubj(stress, we)
root(ROOT, stress)
det(relation, the)
amod(relation, reciprocal)
obj(stress, relation)
case(system, of)
det(system, these)
nmod(relation, system)
case(respect, with)
obl(stress, respect)
case(discharge, to)
det(discharge, the)
amod(somatic, autonomic)
punct(somatic, -)
amod(discharge, somatic)
amod(discharge, downward)
nmod(respect, discharge)
cc(discharge, as)
fixed(as, well)
fixed(as, as)
case(discharge, regard)
det(discharge, the)
amod(cortical, hypothalamic)
punct(cortical, -)
amod(discharge, cortical)
conj(respect, discharge)
punct(stress, .)
mark(far, although)
nsubj(far, we)
cop(far, be)
advmod(far, still)
advcl(suggest, far)
case(understanding, from)
det(understanding, a)
amod(understanding, complete)
obl(far, understanding)
case(problem, of)
det(problem, these)
nmod(understanding, problem)
punct(suggest, ,)
case(approximation, as)
det(approximation, a)
amod(approximation, first)
obl(suggest, approximation)
punct(suggest, ,)
nsubj:pass(suggest, it)
aux:pass(suggest, be)
root(ROOT, suggest)
mark(alteration, that)
nsubj:pass(suggest, alteration)
case(balance, in)
det(balance, the)
amod(balance, hypothalamic)
nmod(alteration, balance)
case(change, with)
amod(change, consequent)
nmod(alteration, change)
case(account, in)
det(account, the)
amod(cortical, hypothalamic)
punct(cortical, -)
amod(discharge, cortical)
compound(account, discharge)
nmod(change, account)
case(change, for)
amod(change, major)
nmod(account, change)
case(behavior, in)
nmod(change, behavior)
acl(change, see)
case(mood, in)
amod(mood, various)
obl(see, mood)
cc(state, and)
conj(mood, state)
case(emotion, of)
nmod(mood, emotion)
case(man, in)
nmod(emotion, man)
cc(beast, and)
conj(man, beast)
case(circumstance, under)
amod(circumstance, physiological)
nmod(man, circumstance)
punct(circumstance, ,)
case(neurosis, in)
amod(neurosis, experimental)
cc(clinical, and)
conj(experimental, clinical)
nmod(circumstance, neurosis)
punct(result, ,)
cc(result, and)
case(result, as)
det(result, the)
conj(neurosis, result)
case(agent, of)
amod(agent, psychopharmacological)
nmod(result, agent)
punct(suggest, .)
case(view, in)
obl(suggest, view)
case(role, of)
det(role, the)
amod(role, important)
nmod(view, role)
obj(play, which)
amod(disturbance, emotional)
nsubj(play, disturbance)
acl:relcl(role, play)
case(genesis, in)
det(genesis, the)
obl(play, genesis)
case(disorder, of)
amod(disorder, neurotic)
cc(psychotic, and)
conj(neurotic, psychotic)
nmod(genesis, disorder)
cc(parallelism, and)
det(parallelism, the)
conj(disorder, parallelism)
acl(parallelism, observe)
case(state, between)
amod(state, autonomic)
obl(observe, state)
cc(behavior, and)
amod(behavior, psychological)
conj(state, behavior)
case(instance, in)
amod(instance, several)
obl(observe, instance)
punct(suggest, ,)
nsubj:pass(suggest, it)
aux:pass(suggest, be)
advmod(suggest, further)
root(ROOT, suggest)
mark(play, that)
det(imbalance, a)
amod(imbalance, hypothalamic)
nsubj(play, imbalance)
aux(play, may)
ccomp(suggest, play)
det(role, a)
amod(role, important)
obj(play, role)
mark(initiate, in)
acl(role, initiate)
amod(change, mental)
obj(initiate, change)
punct(suggest, .)
nummod(try, 6.4)
punct(6.4, .)
det(theorem, the)
amod(theorem, primary)
compound(theorem, decomposition)
root(ROOT, theorem)
nsubj(try, we)
aux(try, be)
acl:relcl(theorem, try)
mark(study, to)
xcomp(try, study)
det(T, a)
amod(T, linear)
compound(T, operator)
obj(study, T)
case(V, on)
det(V, the)
amod(dimensional, finite)
punct(dimensional, -)
amod(V, dimensional)
compound(V, space)
nmod(T, V)
punct(study, ,)
mark(decompose, by)
advcl(study, decompose)
obj(decompose, T)
case(sum, into)
det(sum, a)
amod(sum, direct)
obl(decompose, sum)
case(operator, of)
nmod(sum, operator)
nsubj(elementary, which)
cop(elementary, be)
case(elementary, in)
det(elementary, some)
compound(elementary, sense)
acl:relcl(operator, elementary)
punct(try, .)
nsubj(do, we)
aux(do, can)
root(ROOT, do)
obj(do, this)
case(value, through)
det(value, the)
amod(value, characteristic)
obl(do, value)
cc(vector, and)
conj(value, vector)
case(T, of)
nmod(vector, T)
case(case, in)
amod(case, certain)
amod(case, special)
nmod(value, case)
punct(do, ,)
advmod(when, i.e.)
punct(do, ,)
case(case, when)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(when, polynomial)
case(factor, for)
compound(factor, T)
nmod(polynomial, factor)
case(f, over)
det(f, the)
compound(f, scalar)
compound(f, field)
nmod(factor, f)
case(product, into)
det(product, a)
nmod(f, product)
case(polynomial, of)
amod(polynomial, distinct)
amod(polynomial, monic)
nmod(product, polynomial)
case(degree, of)
nmod(polynomial, degree)
nummod(degree, 1)
punct(do, .)
obj(do, what)
aux(do, can)
nsubj(do, we)
root(ROOT, do)
case(T, with)
det(T, the)
amod(T, general)
obl(do, T)
punct(do, ?)
punct(do, ?)
mark(try, if)
nsubj(try, we)
advcl(confront, try)
mark(study, to)
xcomp(try, study)
obj(study, T)
advcl(study, use)
amod(value, characteristic)
obj(use, value)
punct(confront, ,)
nsubj:pass(confront, we)
aux:pass(confront, be)
root(ROOT, confront)
case(problem, with)
nummod(problem, two)
obl(confront, problem)
punct(confront, .)
advmod(have, first)
punct(have, ,)
nsubj(have, T)
aux(have, may)
advmod(have, not)
root(ROOT, have)
det(value, a)
amod(value, single)
amod(value, characteristic)
obj(have, value)
punct(have, ;)
punct(have, ;)
nsubj(deficiency, this)
cop(deficiency, be)
advmod(deficiency, really)
det(deficiency, a)
parataxis(have, deficiency)
case(field, in)
det(field, the)
compound(field, scalar)
nmod(deficiency, field)
punct(deficiency, ,)
advmod(close, namely)
punct(deficiency, ,)
mark(close, that)
nsubj:pass(close, it)
aux:pass(close, be)
advmod(close, not)
advmod(close, algebraically)
parataxis(deficiency, close)
punct(have, .)
advmod(Af, second)
punct(Af, ,)
advmod(factor, even)
mark(F, if)
det(factor, the)
amod(factor, characteristic)
compound(factor, polynomial)
nsubj(be, factor)
advmod(F, completely)
case(F, over)
nmod(factor, F)
case(product, into)
det(product, a)
nmod(F, product)
case(polynomial, of)
nmod(product, polynomial)
case(degree, of)
nmod(polynomial, degree)
nummod(degree, 1)
punct(be, ,)
expl(be, there)
aux(be, may)
advmod(be, not)
advcl(Af, be)
advmod(characteristic, enough)
amod(vector, characteristic)
nsubj(be, vector)
case(T, for)
nmod(vector, T)
mark(span, to)
acl(vector, span)
det(V, the)
compound(V, space)
obj(span, V)
punct(deficiency, .)
nsubj(deficiency, this)
cop(deficiency, be)
advmod(deficiency, clearly)
det(deficiency, a)
parataxis(be, deficiency)
case(T, in)
nummod(deficiency, T)
punct(illustrate, .)
det(situation, the)
amod(situation, second)
nsubj:pass(illustrate, situation)
aux:pass(illustrate, be)
parataxis(deficiency, illustrate)
case(T, by)
det(T, the)
compound(T, operator)
obl(illustrate, T)
case(Af, on)
nmod(T, Af)
punct(field, ()
case(field, F)
det(field, any)
nmod(T, field)
punct(field, ))
acl(T, represent)
case(basis, in)
det(basis, the)
amod(basis, standard)
obl(represent, basis)
case(Af, by)
nmod(basis, Af)
punct(Af, .)
det(polynomial, the)
amod(polynomial, characteristic)
nsubj(Af, polynomial)
case(a, for)
nmod(polynomial, a)
cop(Af, be)
root(ROOT, Af)
cc(polynomial, and)
nsubj(polynomial, this)
cop(polynomial, be)
advmod(polynomial, plainly)
advmod(polynomial, also)
det(polynomial, the)
amod(polynomial, minimal)
conj(Af, polynomial)
case(T, for)
det(T, a)
punct(T, ()
cc(T, or)
case(T, for)
obl(polynomial, T)
punct(T, ))
punct(Af, .)
advmod(diagonalizable, thus)
nsubj(diagonalizable, T)
cop(diagonalizable, be)
advmod(diagonalizable, not)
root(ROOT, diagonalizable)
punct(diagonalizable, .)
nsubj(see, one)
root(ROOT, see)
mark(happen, that)
nsubj(happen, this)
ccomp(see, happen)
mark(have, because)
det(space, the)
amod(space, null)
nsubj(have, space)
case(Af, of)
nmod(space, Af)
advcl(happen, have)
obj(have, dimension)
nummod(dimension, 1)
advmod(have, only)
punct(see, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(V, hand)
punct(V, ,)
det(space, the)
amod(space, null)
nsubj(V, space)
case(Af, of)
nmod(space, Af)
cc(space, and)
det(space, the)
amod(space, null)
conj(space, space)
case(Af, of)
nmod(space, Af)
advmod(space, together)
case(V, span)
root(ROOT, V)
punct(V, ,)
det(former, the)
nsubj(subspace, former)
cop(subspace, be)
det(subspace, the)
acl:relcl(V, subspace)
acl(subspace, span)
case(Af, by)
obl(span, Af)
cc(latter, and)
det(latter, the)
conj(Af, latter)
det(subspace, the)
appos(latter, subspace)
acl(subspace, span)
case(Af, by)
obl(span, Af)
cc(Af, and)
conj(Af, Af)
punct(more, .)
nsubj(more, this)
aux(more, will)
cop(more, be)
parataxis(subspace, more)
cc(less, or)
conj(more, less)
nmod:poss(method, we)
amod(method, general)
conj(more, method)
case(problem, for)
det(problem, the)
amod(problem, second)
nmod(method, problem)
punct(more, .)
mark(remember, if)
punct(remember, ()
parataxis(polynomial, remember)
nsubj(assumption, this)
cop(assumption, be)
det(assumption, a)
ccomp(remember, assumption)
punct(remember, ))
det(polynomial, the)
amod(polynomial, minimal)
root(ROOT, polynomial)
case(decompose, for)
compound(decompose, T)
nmod(polynomial, decompose)
nsubj(show, Af)
mark(element, where)
nsubj(element, Af)
cop(element, be)
amod(element, distinct)
advcl(show, element)
case(F, of)
nmod(element, F)
punct(show, ,)
advmod(show, then)
nsubj(show, we)
aux(show, shall)
root(ROOT, show)
mark(sum, that)
det(V, the)
compound(V, space)
nsubj(sum, V)
cop(sum, be)
det(sum, the)
amod(sum, direct)
ccomp(show, sum)
case(space, of)
det(space, the)
amod(space, null)
nmod(sum, space)
case(Af, of)
nmod(space, Af)
punct(sum, .)
det(operator, the)
amod(operator, diagonalizable)
nsubj(case, operator)
cop(case, be)
det(case, the)
amod(case, special)
ccomp(show, case)
case(this, of)
nmod(case, this)
case(which, in)
nmod(Af, which)
acl:relcl(case, Af)
case(i, for)
det(i, each)
nmod(Af, i)
punct(show, .)
det(theorem, the)
nsubj(general, theorem)
obj(prove, which)
nsubj(prove, we)
acl:relcl(theorem, prove)
cop(general, be)
advmod(general, more)
root(ROOT, general)
case(what, than)
obl(general, what)
nsubj(describe, we)
aux(describe, have)
acl:relcl(what, describe)
punct(general, ,)
mark(work, since)
nsubj(work, it)
advcl(general, work)
case(decomposition, with)
det(decomposition, the)
amod(decomposition, primary)
obl(work, decomposition)
case(polynomial, of)
det(polynomial, the)
amod(polynomial, minimal)
nmod(decomposition, polynomial)
punct(work, ,)
mark(all, whether)
fixed(whether, or)
fixed(whether, not)
det(prime, the)
nsubj(all, prime)
nsubj(enter, which)
acl:relcl(prime, enter)
cop(all, be)
conj(general, all)
case(degree, of)
amod(degree, first)
nmod(all, degree)
punct(general, .)
det(reader, the)
nsubj(find, reader)
aux(find, will)
root(ROOT, find)
obj(find, it)
xcomp(find, helpful)
mark(think, to)
xcomp(helpful, think)
case(case, of)
det(case, the)
amod(case, special)
obl(think, case)
mark(degree, when)
det(prime, the)
nsubj(degree, prime)
cop(degree, be)
case(degree, of)
advcl(think, degree)
nummod(degree, 1)
punct(think, ,)
cc(think, and)
advmod(more, even)
advmod(particularly, more)
advmod(think, particularly)
punct(think, ,)
mark(think, to)
conj(degree, think)
case(proof, of)
det(proof, the)
obl(think, proof)
case(theorem, of)
nmod(proof, theorem)
nummod(theorem, 10)
punct(case, ,)
det(case, a)
amod(case, special)
appos(proof, case)
case(theorem, of)
det(theorem, this)
nmod(case, theorem)
punct(case, .)
compound(. , theorem)
nummod(theorem, 12)
appos(case, . )
punct(theorem, ()
amod(theorem, primary)
compound(theorem, decomposition)
appos(. , theorem)
punct(theorem, ))
punct(find, .)
root(ROOT, let)
mark(operator, T)
cop(operator, be)
det(operator, a)
amod(operator, linear)
xcomp(let, operator)
case(V, on)
det(V, the)
amod(dimensional, finite)
punct(dimensional, -)
amod(V, dimensional)
compound(V, vector)
compound(V, space)
nmod(operator, V)
case(f, over)
det(f, the)
compound(f, field)
nmod(V, f)
punct(let, .)
parataxis(let, let)
obj(let, p)
cop(polynomial, be)
det(polynomial, the)
amod(polynomial, minimal)
xcomp(let, polynomial)
case(T, for)
nmod(polynomial, T)
punct(Af, ,)
appos(T, Af)
punct(Af, ,)
advmod(polynomial, where)
det(Af, the)
nsubj(polynomial, Af)
punct(polynomial, ,)
cop(polynomial, be)
amod(polynomial, distinct)
amod(polynomial, irreducible)
amod(polynomial, monic)
acl:relcl(Af, polynomial)
case(F, over)
nmod(polynomial, F)
cc(integer, and)
det(Af, the)
nsubj(integer, Af)
cop(integer, be)
amod(integer, positive)
conj(polynomial, integer)
punct(let, .)
root(ROOT, let)
obj(let, Af)
cop(space, be)
det(space, the)
amod(space, null)
xcomp(let, space)
case(Af, of)
nmod(space, Af)
punct(let, .)
advmod(a, then)
punct(a, ()
parataxis(let, a)
punct(a, ))
root(ROOT, Af)
punct(Af, ;)
punct(Af, ;)
punct(b, ()
nummod(each, b)
punct(b, ))
appos(Af, each)
nsubj(invariant, Af)
cop(invariant, be)
root(ROOT, invariant)
case(T, under)
obl(invariant, T)
punct(invariant, ;)
punct(c, ;)
punct(c, ()
parataxis(invariant, c)
punct(c, ))
root(ROOT, if)
nsubj(operator, Af)
cop(operator, be)
det(operator, the)
root(ROOT, operator)
acl(operator, induce)
case(Af, on)
obl(induce, Af)
case(T, by)
obl(induce, T)
punct(operator, ,)
advmod(Af, then)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(Af, polynomial)
case(Af, for)
nmod(polynomial, Af)
cop(Af, be)
parataxis(operator, Af)
punct(Proof, .)
parataxis(operator, Proof)
punct(operator, .)
det(idea, the)
nsubj(this, idea)
case(proof, of)
det(proof, the)
nmod(idea, proof)
cop(this, be)
root(ROOT, this)
punct(this, .)
mark(valid, if)
det(decomposition, the)
amod(sum, direct)
punct(sum, -)
compound(decomposition, sum)
nsubj(valid, decomposition)
punct(a, ()
nummod(valid, a)
punct(a, ))
cop(valid, be)
advcl(get, valid)
punct(get, ,)
advmod(get, how)
aux(get, can)
nsubj(get, we)
root(ROOT, get)
obj(get, hold)
case(projection, of)
det(projection, the)
nmod(hold, projection)
root(ROOT, Af)
acl(Af, associate)
case(decomposition, with)
det(decomposition, the)
obl(associate, decomposition)
punct(Af, ?)
punct(Af, ?)
det(projection, the)
root(ROOT, projection)
nsubj(identity, Af)
aux(identity, will)
cop(identity, be)
det(identity, the)
root(ROOT, identity)
case(Af, on)
nmod(identity, Af)
cc(zero, and)
conj(Af, zero)
case(Af, on)
det(Af, the)
amod(Af, other)
nmod(zero, Af)
punct(identity, .)
nsubj(find, we)
aux(find, shall)
parataxis(identity, find)
det(Af, a)
amod(Af, polynomial)
obj(find, Af)
mark(identity, such)
fixed(such, that)
nsubj(identity, Af)
cop(identity, be)
det(identity, the)
acl:relcl(Af, identity)
case(Af, on)
nmod(identity, Af)
cc(zero, and)
cop(zero, be)
conj(identity, zero)
case(Af, on)
det(Af, the)
amod(Af, other)
obl(zero, Af)
punct(Af, ,)
cc(Af, and)
advmod(Af, so)
det(Af, that)
conj(Af, Af)
punct(etc, ,)
advmod(Af, etc)
punct(identity, .)
punct(identity, .)
case(i, for)
det(i, each)
obl(let, i)
punct(let, ,)
root(ROOT, let)
obj(let, Af)
punct(let, .)
punct(let, since)
nsubj(polynomial, Af)
cop(polynomial, be)
amod(polynomial, distinct)
amod(polynomial, prime)
root(ROOT, polynomial)
punct(polynomial, ,)
det(polynomial, the)
parataxis(polynomial, polynomial)
nsubj(prime, Af)
cop(prime, be)
advmod(prime, relatively)
root(ROOT, prime)
punct(theorem, ()
appos(prime, theorem)
nummod(theorem, 8)
punct(theorem, ,)
appos(theorem, Chapter)
nummod(Chapter, 4)
punct(theorem, ))
punct(prime, .)
advmod(be, thus)
expl(be, there)
root(ROOT, be)
nsubj(be, polynomial)
vocative(note, Af)
det:predet(Af, such)
det(Af, that)
appos(Af, Af)
punct(note, .)
root(ROOT, note)
advmod(note, also)
mark(divisible, that)
mark(divisible, if)
nsubj:pass(divisible, Af)
punct(divisible, ,)
advmod(divisible, then)
nsubj:pass(divisible, Af)
aux:pass(divisible, be)
ccomp(note, divisible)
case(p, by)
det(p, the)
amod(p, polynomial)
obl(divisible, p)
punct(divisible, ,)
mark(contain, because)
nsubj(contain, Af)
advcl(divisible, contain)
det(Af, each)
obj(contain, Af)
case(factor, as)
det(factor, a)
obl(contain, factor)
punct(show, .)
nsubj(show, we)
aux(show, shall)
parataxis(note, show)
mark(polynomial, that)
det(polynomial, the)
obj(show, polynomial)
nsubj(behave, Af)
root(ROOT, behave)
case(manner, in)
det(manner, the)
obl(behave, manner)
acl(manner, describe)
case(paragraph, in)
det(paragraph, the)
amod(paragraph, first)
obl(describe, paragraph)
case(proof, of)
det(proof, the)
nmod(paragraph, proof)
punct(behave, .)
root(ROOT, let)
obj(let, Af)
punct(let, .)
mark(divide, since)
nsubj(divide, Af)
cc(p, and)
conj(Af, p)
advcl(let, divide)
obj(divide, Af)
case(Af, for)
obl(divide, Af)
punct(have, ,)
nsubj(have, we)
parataxis(let, have)
obj(have, Af)
punct(let, .)
advmod(projection, thus)
det(Af, the)
nsubj(projection, Af)
cop(projection, be)
parataxis(let, projection)
nsubj(correspond, which)
acl:relcl(projection, correspond)
case(decomposition, to)
det(decomposition, some)
amod(decomposition, direct-sum)
obl(correspond, decomposition)
case(V, of)
det(V, the)
compound(V, space)
nmod(decomposition, V)
punct(let, .)
nsubj(wish, we)
root(ROOT, wish)
mark(show, to)
xcomp(wish, show)
mark(Af, that)
det(range, the)
nsubj(Af, range)
case(Af, of)
nmod(range, Af)
cop(Af, be)
advmod(Af, exactly)
det(Af, the)
compound(Af, subspace)
ccomp(clear, Af)
punct(wish, .)
nsubj(clear, it)
cop(clear, be)
parataxis(wish, clear)
mark(Af, that)
det(vector, each)
nsubj(Af, vector)
case(range, in)
det(range, the)
nmod(vector, range)
case(Af, of)
nmod(range, Af)
cop(Af, be)
case(Af, in)
ccomp(clear, Af)
mark(range, for)
mark(range, if)
punct(range, **)
nsubj(range, ya)
cop(range, be)
case(range, in)
det(range, the)
advcl(Af, range)
case(Af, of)
nmod(range, Af)
punct(range, ,)
advmod(Af, then)
nsubj(range, Af)
cc(Af, and)
advmod(Af, so)
conj(Af, Af)
mark(divisible, because)
nsubj:pass(divisible, Af)
aux:pass(divisible, be)
advcl(range, divisible)
case(p, by)
det(p, the)
amod(p, minimal)
compound(p, polynomial)
obl(divisible, p)
punct(suppose, .)
advmod(suppose, conversely)
punct(suppose, ,)
parataxis(wish, suppose)
obj(suppose, that)
punct(suppose, **)
nsubj(space, ya)
cop(space, be)
case(space, in)
det(space, the)
amod(space, null)
parataxis(suppose, space)
case(Af, of)
nmod(space, Af)
punct(space, .)
mark(Af, if)
advcl(divisible, Af)
punct(divisible, ,)
advmod(divisible, then)
nsubj:pass(divisible, Af)
aux:pass(divisible, be)
parataxis(space, divisible)
case(Af, by)
obl(divisible, Af)
cc(Af, and)
advmod(Af, so)
conj(divisible, Af)
punct(Af, ,)
advmod(Af, i.e.)
punct(Af, ,)
appos(Af, Af)
punct(immediate, .)
cc(immediate, but)
advmod(immediate, then)
expl(immediate, it)
cop(immediate, be)
conj(wish, immediate)
mark(range, that)
nsubj(complete, Af)
punct(Af, ,)
advmod(immediate, i.e.)
punct(that, ,)
nsubj(immediate, that)
punct(that, **)
nsubj(range, ya)
cop(range, be)
case(range, in)
det(range, the)
parataxis(immediate, range)
case(Af, of)
nmod(range, Af)
punct(complete, .)
nsubj(complete, this)
parataxis(range, complete)
det(proof, the)
obj(complete, proof)
case(statement, of)
nmod(proof, statement)
punct(a, ()
appos(proof, a)
punct(a, ))
punct(wish, .)
expl(clear, it)
cop(clear, be)
advmod(clear, certainly)
root(ROOT, clear)
mark(subspace, that)
det(subspace, the)
nsubj(clear, subspace)
nsubj(invariant, Af)
cop(invariant, be)
root(ROOT, invariant)
case(T, under)
nummod(invariant, T)
punct(invariant, .)
mark(operator, if)
nsubj(operator, Af)
cop(operator, be)
det(operator, the)
advcl(invariant, operator)
acl(operator, induce)
case(Af, on)
obl(induce, Af)
case(T, by)
obl(induce, T)
punct(invariant, ,)
advmod(Af, then)
advmod(Af, evidently)
conj(operator, Af)
punct(invariant, ,)
mark(0, because)
case(definition, by)
compound(Af, definition)
nsubj(0, Af)
cop(0, be)
advcl(show, 0)
case(Af, on)
det(Af, the)
compound(Af, subspace)
nmod(0, Af)
punct(show, .)
nsubj(show, this)
parataxis(invariant, show)
mark(divide, that)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(divide, polynomial)
case(Af, for)
nmod(polynomial, Af)
ccomp(show, divide)
obj(divide, Af)
punct(let, .)
advmod(let, conversely)
punct(let, ,)
conj(divide, let)
obj(let, g)
cop(polynomial, be)
det(polynomial, any)
obj(let, polynomial)
case(Af, such)
fixed(such, that)
nmod(polynomial, Af)
punct(Af, .)
advmod(Af, then)
appos(Af, Af)
punct(Af, .)
advmod(divisible, thus)
nsubj:pass(divisible, Af)
aux:pass(divisible, be)
parataxis(polynomial, divisible)
case(p, by)
det(p, the)
amod(p, minimal)
amod(p, polynomial)
obl(divisible, p)
case(T, of)
nmod(p, T)
punct(divide, ,)
advmod(divide, i.e.)
punct(divide, ,)
nsubj(divide, Af)
conj(divisible, divide)
obj(divide, Af)
punct(see, .)
nsubj:pass(see, it)
aux:pass(see, be)
advmod(see, easily)
parataxis(divide, see)
mark(divide, that)
nsubj(divide, Af)
ccomp(see, divide)
nummod(divide, g)
punct(see, .)
advmod(Af, hence)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(Af, polynomial)
case(Af, for)
nmod(polynomial, Af)
cop(Af, be)
parataxis(divide, Af)
punct(corollary, .)
discourse(Af, corollary)
punct(corollary, .)
mark(corollary, if)
nsubj(projection, Af)
cop(projection, be)
det(projection, the)
root(ROOT, projection)
acl(projection, associate)
case(decomposition, with)
det(decomposition, the)
amod(decomposition, primary)
obl(associate, decomposition)
case(T, of)
nmod(decomposition, T)
punct(projection, ,)
advmod(polynomial, then)
det(Af, each)
nsubj(polynomial, Af)
cop(polynomial, be)
det(polynomial, a)
parataxis(projection, polynomial)
case(T, in)
nmod(polynomial, T)
punct(commute, ,)
cc(commute, and)
advmod(commute, accordingly)
mark(commute, if)
det(operator, a)
amod(operator, linear)
nsubj(commute, operator)
nsubj(commute, u)
acl:relcl(operator, commute)
case(T, with)
obl(commute, T)
advmod(commute, then)
nsubj(commute, u)
conj(polynomial, commute)
case(each, with)
obl(commute, each)
case(Af, of)
det(Af, the)
nmod(each, Af)
punct(commute, ,)
advmod(subspace, i.e.)
punct(subspace, ,)
det(subspace, each)
parataxis(commute, subspace)
nsubj(invariant, Af)
cop(invariant, be)
root(ROOT, invariant)
case(u, under)
obl(invariant, u)
punct(invariant, .)
case(notation, in)
det(notation, the)
obl(let, notation)
case(proof, of)
det(proof, the)
nmod(notation, proof)
case(theorem, of)
nmod(proof, theorem)
nummod(theorem, 12)
punct(let, ,)
root(ROOT, let)
obj(let, we)
xcomp(let, take)
det(look, a)
obj(take, look)
case(case, at)
det(case, the)
amod(case, special)
nmod(look, case)
case(which, in)
obl(product, which)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(product, polynomial)
case(T, for)
nmod(polynomial, T)
cop(product, be)
det(product, a)
acl:relcl(case, product)
case(polynomial, of)
amod(degree, first)
punct(degree, -)
compound(polynomial, degree)
nmod(product, polynomial)
punct(polynomial, ,)
advmod(product, i.e.)
punct(case, ,)
det(case, the)
nsubj(product, case)
case(which, in)
obl(Af, which)
det(Af, each)
nsubj(Af, Af)
cop(Af, be)
case(Af, of)
det(Af, the)
compound(Af, form)
acl:relcl(case, Af)
punct(Af, .)
advmod(Af, now)
det(range, the)
nsubj(Af, range)
case(Af, of)
nmod(range, Af)
cop(Af, be)
det(Af, the)
amod(Af, null)
compound(Af, space)
parataxis(case, Af)
case(Af, of)
nmod(Af, Af)
punct(let, .)
parataxis(Af, let)
obj(let, we)
xcomp(let, put)
obj(put, Af)
punct(let, .)
case(theorem, by)
obl(put, theorem)
nummod(theorem, 10)
punct(operator, ,)
nsubj(operator, D)
cop(operator, be)
det(operator, a)
amod(operator, diagonalizable)
parataxis(let, operator)
obj(call, which)
nsubj(call, we)
aux(call, shall)
acl:relcl(operator, call)
det(part, the)
amod(part, diagonalizable)
obj(call, part)
case(T, of)
nmod(part, T)
punct(let, .)
parataxis(call, let)
obj(let, we)
xcomp(let, look)
case(Af, at)
det(Af, the)
compound(Af, operator)
obl(look, Af)
punct(Af, .)
advmod(Af, now)
compound(Af, Af)
appos(Af, Af)
advmod(Af, so)
nummod(familiar, Af)
punct(Af, .)
det(reader, the)
nsubj(familiar, reader)
aux(familiar, should)
cop(familiar, be)
parataxis(Af, familiar)
advmod(familiar, enough)
case(projection, with)
obl(familiar, projection)
case(now, by)
obl(familiar, now)
mark(see, so)
fixed(so, that)
nsubj(see, he)
advcl(familiar, see)
mark(have, that)
obj(see, Af)
cc(Af, and)
case(general, in)
nmod(Af, general)
det(Af, that)
conj(Af, Af)
punct(see, .)
mark(have, when)
nsubj(have, Af)
case(i, for)
det(i, each)
nmod(Af, i)
punct(have, ,)
nsubj(have, we)
aux(have, shall)
ccomp(see, have)
obj(have, Af)
punct(have, ,)
mark(0, because)
det(Af, the)
compound(Af, operator)
nsubj(0, Af)
aux(0, will)
advmod(0, then)
cop(0, be)
advcl(have, 0)
case(range, on)
det(range, the)
nmod(0, range)
case(Af, of)
nmod(range, Af)
punct(definition, .)
nmod(range, definition)
punct(let, .)
parataxis(0, let)
mark(operator, N)
cop(operator, be)
det(operator, a)
amod(operator, linear)
xcomp(let, operator)
case(V, on)
det(V, the)
compound(V, vector)
compound(V, space)
nmod(operator, V)
punct(let, .)
nsubj(say, we)
root(ROOT, say)
mark(nilpotent, that)
nsubj(nilpotent, N)
cop(nilpotent, be)
ccomp(say, nilpotent)
mark(be, if)
expl(be, there)
advcl(nilpotent, be)
det(integer, some)
amod(integer, positive)
nsubj(be, integer)
cop(such, R)
acl:relcl(integer, such)
fixed(such, that)
nsubj(let, Af)
punct(13, .)
nsubj(let, theorem)
nummod(let, 13)
punct(13, .)
parataxis(say, let)
mark(operator, T)
cop(operator, be)
det(operator, a)
amod(operator, linear)
xcomp(let, operator)
case(V, on)
det(V, the)
amod(dimensional, finite)
punct(dimensional, -)
amod(V, dimensional)
compound(V, vector)
compound(V, space)
nmod(operator, V)
case(f, over)
det(f, the)
compound(f, field)
nmod(V, f)
punct(suppose, .)
parataxis(say, suppose)
mark(decompose, that)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(decompose, polynomial)
case(T, for)
nmod(polynomial, T)
ccomp(suppose, decompose)
case(F, over)
obl(decompose, F)
case(product, into)
det(product, a)
obl(decompose, product)
case(polynomial, of)
amod(polynomial, linear)
nmod(product, polynomial)
punct(say, .)
advmod(be, then)
expl(be, there)
root(ROOT, be)
det(d, a)
amod(d, diagonalizable)
compound(d, operator)
nsubj(be, d)
case(V, on)
nmod(d, V)
cc(N, and)
det(N, a)
compound(operator, nilpotent)
compound(N, operator)
conj(d, N)
case(V, in)
nmod(N, V)
det:predet(that, such)
nmod(N, that)
punct(a, ()
nummod(that, a)
punct(a, ))
root(ROOT, Af)
punct(Af, ,)
punct(b, ()
list(Af, b)
punct(b, ))
nummod(determine, Af)
punct(Af, .)
det(d, the)
amod(d, diagonalizable)
compound(d, operator)
nsubj:pass(determine, d)
cc(N, and)
det(N, the)
compound(N, nilpotent)
compound(N, operator)
conj(d, N)
aux:pass(determine, be)
advmod(determine, uniquely)
root(ROOT, determine)
case(a, by)
punct(a, ()
nummod(determine, a)
punct(a, ))
cc(b, and)
punct(b, ()
conj(a, b)
punct(b, ))
cc(polynomial, and)
nsubj(polynomial, each)
case(they, of)
nmod(each, they)
cop(polynomial, be)
det(polynomial, a)
conj(determine, polynomial)
case(T, in)
compound(Proof, T)
punct(Proof, .)
nmod(polynomial, Proof)
punct(determine, .)
nsubj(observe, we)
aux(observe, have)
advmod(observe, just)
root(ROOT, observe)
mark(write, that)
nsubj(write, we)
aux(write, can)
ccomp(observe, write)
obj(write, Af)
advmod(diagonalizable, where)
nsubj(diagonalizable, D)
cop(diagonalizable, be)
acl:relcl(Af, diagonalizable)
cc(nilpotent, and)
nsubj(nilpotent, N)
cop(nilpotent, be)
conj(diagonalizable, nilpotent)
punct(commute, ,)
cc(where, and)
advmod(D, where)
nsubj(commute, D)
cc(commute, and)
aux(commute, N)
advmod(commute, not)
advmod(commute, only)
conj(write, commute)
cc(polynomial, but)
cop(polynomial, be)
conj(commute, polynomial)
case(T, in)
nmod(polynomial, T)
punct(suppose, .)
advmod(suppose, now)
parataxis(observe, suppose)
mark(have, that)
nsubj(have, we)
advmod(have, also)
ccomp(suppose, have)
obj(have, Af)
advmod(diagonalizable, where)
nsubj(diagonalizable, D)
punct(D, ')
cop(diagonalizable, be)
acl:relcl(Af, diagonalizable)
punct(N, ,)
conj(diagonalizable, N)
punct(N, ')
cop(nilpotent, be)
conj(diagonalizable, nilpotent)
punct(Af, ,)
cc(Af, and)
conj(prove, Af)
punct(prove, .)
nsubj(prove, we)
aux(prove, shall)
parataxis(nilpotent, prove)
det(Af, that)
obj(prove, Af)
punct(prove, .)
case(D, since)
obl(prove, D)
punct(D, ')
cc(N, and)
conj(D, N)
punct(N, ')
conj(D, commute)
case(another, with)
nummod(another, one)
obl(commute, another)
cc(Af, and)
conj(another, Af)
punct(see, ,)
nsubj(see, we)
parataxis(commute, see)
mark(commute, that)
obj(see, D')
cc(N, and)
conj(D', N)
punct(commute, ')
ccomp(see, commute)
case(D, with)
nummod(D, T)
punct(D, .)
advmod(D, thus)
obl(commute, D)
punct(D, ')
cc(N, and)
conj(D, N)
punct(N, ')
acl(D, commute)
case(polynomial, with)
det(polynomial, any)
obl(commute, polynomial)
case(T, in)
nmod(polynomial, T)
punct(commute, ;)
punct(commute, ;)
mark(commute, hence)
nsubj(commute, they)
advcl(commute, commute)
case(D, with)
obl(commute, D)
cc(N, and)
case(N, with)
conj(D, N)
punct(commute, .)
advmod(have, now)
nsubj(have, we)
conj(commute, have)
obj(have, Af)
cc(Af, or)
conj(Af, Af)
cc(commute, and)
det(four, all)
nsubj(commute, four)
case(operator, of)
det(operator, these)
nmod(four, operator)
conj(have, commute)
case(another, with)
nummod(another, one)
obl(commute, another)
punct(observe, .)
mark(diagonalizable, since)
nsubj(diagonalizable, D)
cc(D, and)
conj(D, D)
punct(D, ')
cop(diagonalizable, be)
advmod(diagonalizable, both)
advcl(diagonalizable, diagonalizable)
cc(commute, and)
nsubj(commute, they)
conj(diagonalizable, commute)
punct(diagonalizable, ,)
nsubj(diagonalizable, they)
cop(diagonalizable, be)
advmod(diagonalizable, simultaneously)
root(ROOT, diagonalizable)
punct(diagonalizable, ,)
cc(diagonalizable, and)
nsubj(diagonalizable, Af)
cop(diagonalizable, be)
conj(diagonalizable, diagonalizable)
punct(diagonalizable, .)
case(N, since)
obl(nilpotent, N)
cc(N, and)
conj(N, N)
punct(N, ')
cop(nilpotent, be)
cc:preconj(nilpotent, both)
root(ROOT, nilpotent)
cc(commute, and)
nsubj(commute, they)
conj(nilpotent, commute)
punct(operator, ,)
det(operator, the)
obj(commute, operator)
nsubj(nilpotent, Af)
cop(nilpotent, be)
root(ROOT, nilpotent)
punct(nilpotent, ;)
punct(nilpotent, ;)
mark(use, for)
punct(nilpotent, ,)
advcl(nilpotent, use)
det(fact, the)
obj(use, fact)
mark(commute, that)
nsubj(commute, N)
cc(N, and)
conj(N, N)
case(N, 's)
acl(fact, commute)
obj(commute, Af)
cc(0, and)
advmod(0, so)
mark(large, when)
nsubj(large, R)
cop(large, be)
advmod(large, sufficiently)
advcl(0, large)
det(term, every)
obl:tmod(large, term)
case(expression, in)
det(expression, this)
nmod(term, expression)
case(Af, for)
nmod(expression, Af)
aux(0, will)
cop(0, be)
acl(fact, 0)
punct(nilpotent, . )
punct(have, ()
advmod(have, actually)
punct(have, ,)
det(operator, a)
compound(operator, nilpotent)
nsubj(have, operator)
case(space, on)
det(space, a)
amod(space, n-dimensional)
nmod(operator, space)
aux(have, must)
root(ROOT, have)
nsubj(power, it)
cop(power, be)
case(power, T)
ccomp(have, power)
nummod(power, 0)
punct(have, ;)
punct(have, ;)
mark(take, if)
nsubj(take, we)
advcl(enough, take)
obj(take, Af)
advmod(take, above)
punct(enough, ,)
nsubj(enough, that)
aux(enough, will)
cop(enough, be)
amod(enough, large)
ccomp(have, enough)
punct(have, .)
nsubj(follow, it)
advmod(follow, then)
root(ROOT, follow)
mark(enough, that)
nsubj(enough, Af)
cop(enough, be)
amod(enough, large)
ccomp(follow, enough)
punct(obvious, ,)
cc(obvious, but)
nsubj(obvious, this)
cop(obvious, be)
advmod(obvious, not)
conj(follow, obvious)
case(expression, from)
det(expression, the)
amod(expression, above)
obl(obvious, expression)
punct(follow, .)
punct(follow, ))
root(ROOT, now)
nsubj(operator, Af)
cop(operator, be)
det(operator, a)
amod(operator, diagonalizable)
root(ROOT, operator)
nsubj(nilpotent, which)
cop(nilpotent, be)
advmod(nilpotent, also)
acl:relcl(operator, nilpotent)
punct(operator, .)
det:predet(operator, such)
det(operator, a)
nsubj(operator, operator)
cop(operator, be)
advmod(operator, obviously)
det(operator, the)
amod(operator, zero)
parataxis(operator, operator)
punct(operator, ;)
punct(operator, ;)
mark(nilpotent, for)
mark(nilpotent, since)
nsubj(nilpotent, it)
cop(nilpotent, be)
advcl(form, nilpotent)
punct(form, ,)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(form, polynomial)
case(operator, for)
det(operator, this)
nmod(polynomial, operator)
cop(form, be)
case(form, of)
det(form, the)
parataxis(operator, form)
root(ROOT, Af)
case(Af, for)
det(Af, some)
nmod(Af, Af)
punct(Af, ;)
punct(Af, ;)
cc(have, but)
advmod(diagonalizable, then)
mark(diagonalizable, since)
det(operator, the)
nsubj(diagonalizable, operator)
cop(diagonalizable, be)
advcl(have, diagonalizable)
punct(have, ,)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(have, polynomial)
aux(have, can)
advmod(have, not)
parataxis(Af, have)
det(root, a)
amod(root, repeat)
obj(have, root)
punct(have, ;)
punct(have, ;)
advmod(Af, hence)
nsubj(have, Af)
cc(x, and)
det(polynomial, the)
amod(polynomial, minimal)
nsubj(x, polynomial)
cop(x, be)
advmod(x, simply)
conj(Af, x)
punct(x, ,)
nsubj(say, which)
parataxis(x, say)
det(operator, the)
nsubj(0, operator)
cop(0, be)
ccomp(say, 0)
punct(x, .)
advmod(see, thus)
nsubj(see, we)
parataxis(say, see)
det(Af, that)
obj(see, Af)
cc(Af, and)
conj(Af, Af)
punct(corollary, .)
obj(see, corollary)
punct(Af, .)
root(ROOT, let)
obj(let, V)
cop(space, be)
det(space, a)
amod(dimensional, finite)
punct(dimensional, -)
amod(space, dimensional)
compound(space, vector)
xcomp(let, space)
case(f, over)
det(f, a)
advmod(close, algebraically)
amod(f, close)
compound(f, field)
nmod(space, f)
punct(f, ,)
advmod(field, e.g.)
punct(f, ,)
det(field, the)
appos(f, field)
case(number, of)
amod(number, complex)
nmod(field, number)
punct(let, .)
advmod(write, then)
det(T, every)
amod(T, linear)
compound(T, operator)
nsubj:pass(write, T)
case(V, in)
nmod(T, V)
aux(write, can)
aux:pass(write, be)
root(ROOT, write)
case(sum, as)
det(sum, the)
obl(write, sum)
case(d, of)
det(d, a)
amod(d, diagonalizable)
compound(d, operator)
nmod(sum, d)
cc(operator, and)
det(operator, a)
compound(operator, nilpotent)
conj(d, operator)
case(which, N)
nsubj(commute, which)
acl:relcl(operator, commute)
punct(write, .)
det(D, these)
compound(D, operator)
nsubj(unique, D)
cc(N, and)
conj(D, N)
cop(unique, be)
root(ROOT, unique)
cc(polynomial, and)
nsubj(polynomial, each)
cop(polynomial, be)
det(polynomial, a)
conj(unique, polynomial)
case(T, in)
nmod(polynomial, T)
punct(polynomial, .)
case(result, from)
det(result, these)
obl(see, result)
punct(see, ,)
nsubj(see, one)
parataxis(unique, see)
mark(reduce, that)
det(study, the)
nsubj:pass(reduce, study)
case(operator, of)
amod(operator, linear)
nmod(study, operator)
case(space, on)
compound(space, vector)
nmod(operator, space)
case(field, over)
det(field, a)
advmod(close, algebraically)
amod(field, close)
nmod(space, field)
aux:pass(reduce, be)
advmod(reduce, essentially)
ccomp(see, reduce)
case(study, to)
det(study, the)
obl(reduce, study)
case(operator, of)
amod(operator, nilpotent)
nmod(study, operator)
punct(unique, .)
case(space, for)
compound(space, vector)
obl(need, space)
case(field, over)
advmod(close, non-algebraically)
amod(field, close)
nmod(space, field)
punct(need, ,)
nsubj(need, we)
advmod(need, still)
root(ROOT, need)
mark(find, to)
xcomp(need, find)
det(substitute, some)
obj(find, substitute)
case(value, for)
amod(value, characteristic)
nmod(substitute, value)
cc(vector, and)
conj(value, vector)
punct(need, .)
expl(fact, it)
cop(fact, be)
det(fact, a)
advmod(interesting, very)
amod(fact, interesting)
root(ROOT, fact)
mark(handle, that)
det(problem, these)
nummod(problem, two)
nsubj:pass(handle, problem)
aux(handle, can)
aux:pass(handle, be)
acl(fact, handle)
advmod(handle, simultaneously)
cc(what, and)
nsubj(what, this)
cop(what, be)
conj(fact, what)
nsubj(do, we)
aux(do, shall)
acl:relcl(what, do)
case(chapter, in)
det(chapter, the)
amod(chapter, next)
obl(do, chapter)
punct(fact, .)
mark(conclude, in)
advcl(like, conclude)
det(section, this)
obj(conclude, section)
punct(like, ,)
nsubj(like, we)
aux(like, should)
root(ROOT, like)
mark(give, to)
xcomp(like, give)
det(example, a)
obj(give, example)
nsubj(illustrate, which)
acl:relcl(example, illustrate)
obj(illustrate, some)
case(idea, of)
det(idea, the)
nmod(some, idea)
case(theorem, of)
det(theorem, the)
amod(theorem, primary)
compound(theorem, decomposition)
nmod(idea, theorem)
punct(like, .)
nsubj(choose, we)
aux(choose, have)
root(ROOT, choose)
mark(give, to)
xcomp(choose, give)
obj(give, it)
case(end, at)
det(end, the)
obl(give, end)
case(section, of)
det(section, the)
nmod(end, section)
mark(deal, since)
nsubj(deal, it)
advcl(give, deal)
case(equation, with)
amod(equation, differential)
obl(deal, equation)
cc(algebra, and)
advmod(algebra, thus)
cop(algebra, be)
advmod(algebra, not)
advmod(linear, purely)
amod(algebra, linear)
conj(deal, algebra)
punct(choose, .)
nsubj(necessary, Example)
nummod(Example, 11)
punct(11, .)
case(theorem, in)
det(theorem, the)
amod(theorem, primary)
compound(theorem, decomposition)
obl(necessary, theorem)
punct(necessary, ,)
nsubj(necessary, it)
cop(necessary, be)
advmod(necessary, not)
root(ROOT, necessary)
mark(dimensional, that)
det(V, the)
compound(V, vector)
compound(V, space)
nsubj(dimensional, V)
cop(dimensional, be)
amod(dimensional, finite)
ccomp(necessary, dimensional)
punct(necessary, ,)
cc(necessary, nor)
cop(necessary, be)
nsubj(necessary, it)
conj(dimensional, necessary)
case(part, for)
obl(necessary, part)
punct(a, ()
nummod(necessary, a)
punct(a, ))
cc(polynomial, and)
punct(b, ()
nummod(polynomial, b)
punct(b, ))
det(p, that)
nsubj(polynomial, p)
cop(polynomial, be)
det(polynomial, the)
amod(polynomial, minimal)
parataxis(necessary, polynomial)
case(T, for)
nmod(polynomial, T)
punct(polynomial, .)
mark(operator, if)
nsubj(operator, T)
cop(operator, be)
det(operator, a)
amod(operator, linear)
advcl(polynomial, operator)
case(space, on)
det(space, a)
amod(space, arbitrary)
compound(space, vector)
nmod(operator, space)
cc(be, and)
mark(be, if)
expl(be, there)
conj(operator, be)
det(p, a)
amod(p, monic)
compound(p, polynomial)
nsubj(be, p)
det:predet(Af, such)
det(Af, that)
nmod(p, Af)
punct(part, ,)
advmod(part, then)
appos(p, part)
punct(a, ()
compound(b, a)
punct(a, ))
cc(valid, and)
punct(b, ()
nummod(valid, b)
punct(b, ))
case(theorem, of)
obl(valid, theorem)
nummod(theorem, 12)
cop(valid, be)
acl:relcl(part, valid)
case(T, for)
obl(valid, T)
case(proof, with)
det(proof, the)
obl(valid, proof)
obj(give, which)
nsubj(give, we)
acl:relcl(proof, give)
punct(let, .)
parataxis(valid, let)
mark(integer, N)
cop(integer, be)
det(integer, a)
amod(integer, positive)
xcomp(let, integer)
cc(let, and)
conj(let, let)
obj(let, V)
cop(space, be)
det(space, the)
xcomp(let, space)
case(time, of)
det(time, all)
amod(time, N)
compound(F, time)
advmod(differentiable, continuously)
amod(F, differentiable)
compound(F, function)
nmod(space, F)
case(line, on)
det(line, the)
amod(line, real)
nmod(F, line)
nsubj(satisfy, which)
acl:relcl(line, satisfy)
det(equation, the)
compound(equation, differential)
obj(satisfy, equation)
root(ROOT, Af)
mark(constant, where)
nsubj(constant, Af)
cop(constant, be)
det(constant, some)
amod(constant, fix)
appos(Af, constant)
punct(Af, .)
root(ROOT, if)
nsubj(denote, Af)
root(ROOT, denote)
det(space, the)
obj(denote, space)
case(function, of)
amod(time, N)
nmod(space, time)
advmod(differentiable, continuously)
amod(function, differentiable)
nmod(space, function)
punct(denote, ,)
advmod(subspace, then)
det(V, the)
compound(V, space)
nsubj(subspace, V)
case(solution, of)
nmod(V, solution)
case(equation, of)
det(equation, this)
compound(equation, differential)
nmod(solution, equation)
cop(subspace, be)
det(subspace, a)
parataxis(denote, subspace)
case(Af, of)
nmod(subspace, Af)
punct(subspace, .)
mark(denote, if)
nsubj(denote, D)
advcl(subspace, denote)
det(operator, the)
compound(operator, differentiation)
obj(denote, operator)
cc(polynomial, and)
nsubj(polynomial, p)
cop(polynomial, be)
det(polynomial, the)
ccomp(denote, polynomial)
vocative(space, Af)
advmod(space, then)
nsubj(space, V)
cop(space, be)
det(space, the)
amod(space, null)
root(ROOT, space)
case(p, of)
det(p, the)
compound(p, operator)
nmod(space, p)
punct(space, ()
punct(space, ,)
punct(space, ))
punct(space, ,)
mark(say, because)
nsubj(say, Af)
advmod(say, simply)
advcl(space, say)
nummod(let, Af)
punct(Af, .)
root(ROOT, let)
obj(let, we)
advmod(regard, now)
xcomp(let, regard)
obj(regard, D)
case(operator, as)
det(operator, a)
amod(operator, linear)
obl(regard, operator)
case(subspace, on)
det(subspace, the)
nmod(operator, subspace)
nummod(Af, V)
punct(V, .)
advmod(Af, then)
appos(operator, Af)
punct(Af, .)
mark(discuss, if)
nsubj(discuss, we)
aux(discuss, be)
advcl(space, discuss)
amod(function, differentiable)
amod(value, complex)
punct(value, -)
amod(function, value)
obj(discuss, function)
punct(space, ,)
advmod(space, then)
nsubj(space, Af)
cc(V, and)
conj(Af, V)
cop(space, be)
amod(space, complex)
compound(space, vector)
parataxis(let, space)
punct(number, ,)
cc(number, and)
nsubj(number, Af)
aux(number, may)
cop(number, be)
det(number, any)
amod(number, complex)
conj(space, number)
punct(space, .)
nsubj(write, we)
advmod(write, now)
root(ROOT, write)
obj(write, Af)
mark(number, where)
nsubj(number, Af)
cop(number, be)
amod(number, distinct)
amod(number, complex)
advcl(write, number)
punct(write, .)
mark(space, if)
nsubj(space, Af)
cop(space, be)
det(space, the)
amod(space, null)
advcl(say, space)
case(Af, of)
nmod(space, Af)
punct(say, ,)
advmod(say, then)
nsubj(say, theorem)
nummod(theorem, 12)
root(ROOT, say)
mark(expressible, that)
nsubj(expressible, Af)
punct(Af, .)
case(word, in)
amod(word, other)
obl(satisfy, word)
punct(expressible, ,)
mark(satisfy, if)
nsubj(satisfy, F)
advcl(expressible, satisfy)
det(Af, the)
compound(Af, differential)
compound(Af, equation)
obj(satisfy, Af)
punct(expressible, ,)
advmod(expressible, then)
nsubj(expressible, F)
cop(expressible, be)
advmod(expressible, uniquely)
ccomp(say, expressible)
case(form, in)
det(form, the)
obl(expressible, form)
root(ROOT, Af)
advmod(satisfy, where)
nsubj(satisfy, Af)
parataxis(Af, satisfy)
det(Af, the)
compound(Af, differential)
compound(Af, equation)
obj(satisfy, Af)
punct(Af, .)
advmod(study, thus)
punct(Af, ,)
det(study, the)
appos(Af, study)
case(solution, of)
det(solution, the)
nmod(study, solution)
case(equation, to)
det(equation, the)
nmod(solution, equation)
nsubj:pass(reduce, Af)
aux:pass(reduce, be)
root(ROOT, reduce)
case(study, to)
det(study, the)
obl(reduce, study)
case(space, of)
det(space, the)
nmod(study, space)
case(solution, of)
nmod(space, solution)
case(equation, of)
det(equation, a)
amod(equation, differential)
nmod(solution, equation)
case(form, of)
det(form, the)
nmod(equation, form)
nummod(accomplish, Af)
punct(Af, .)
det(reduction, this)
nsubj:pass(accomplish, reduction)
aux(accomplish, have)
aux:pass(accomplish, be)
root(ROOT, accomplish)
case(method, by)
det(method, the)
amod(method, general)
obl(accomplish, method)
case(algebra, of)
amod(algebra, linear)
nmod(method, algebra)
punct(algebra, ,)
advmod(algebra, i.e.)
punct(accomplish, ,)
case(theorem, by)
det(theorem, the)
amod(theorem, primary)
compound(theorem, decomposition)
obl(accomplish, theorem)
punct(accomplish, .)
mark(describe, to)
advcl(know, describe)
det(space, the)
obj(describe, space)
case(solution, of)
nmod(space, solution)
case(Af, to)
nmod(solution, Af)
punct(know, ,)
nsubj(know, one)
aux(know, must)
root(ROOT, know)
obj(know, something)
case(equation, about)
amod(equation, differential)
nmod(something, equation)
punct(know, ;)
punct(know, ;)
nsubj(be, that)
aux(know, be)
punct(know, ,)
nsubj(know, one)
aux(know, must)
parataxis(know, know)
obj(know, something)
case(D, about)
nmod(something, D)
amod(something, other)
case(fact, than)
det(fact, the)
obl(know, fact)
mark(operator, that)
nsubj(operator, it)
cop(operator, be)
det(operator, a)
amod(operator, linear)
acl(fact, operator)
punct(know, .)
advmod(need, however)
punct(need, ,)
nsubj(need, one)
aux(need, do)
advmod(need, not)
root(ROOT, need)
mark(know, to)
xcomp(need, know)
advmod(much, very)
advmod(know, much)
punct(need, .)
expl(easy, it)
cop(easy, be)
advmod(easy, very)
root(ROOT, easy)
mark(establish, to)
csubj(easy, establish)
case(induction, by)
obl(establish, induction)
case(R, on)
obl(establish, R)
mark(Af, that)
mark(Af, if)
nsubj(Af, F)
cop(Af, be)
case(Af, in)
advcl(establish, Af)
advmod(Af, then)
parataxis(Af, Af)
punct(easy, ;)
punct(easy, ;)
nsubj(Af, that)
cop(Af, be)
punct(Af, ,)
parataxis(easy, Af)
punct(etc, ,)
advmod(Af, etc)
punct(easy, .)
punct(easy, .)
advmod(Af, thus)
root(ROOT, Af)
mark(. , if)
cc(. , and)
advmod(. , only)
mark(. , if)
nsubj(. , Af)
advcl(Af, . )
det(g, a)
compound(g, function)
obj(. , g)
det:predet(Af, such)
det(Af, that)
obj(. , Af)
punct(i.e., ,)
advmod(Af, i.e.)
punct(Af, ,)
nsubj(function, Af)
punct(function, ,)
aux(function, must)
cop(function, be)
det(function, a)
amod(function, polynomial)
root(ROOT, function)
case(Af, of)
compound(Af, degree)
nmod(function, Af)
cc(less, or)
advmod(Af, less)
punct(Af, :)
appos(function, Af)
punct(function, .)
advmod(satisfy, thus)
nsubj(satisfy, F)
parataxis(function, satisfy)
obj(satisfy, Af)
mark(have, if)
cc(have, and)
advmod(have, only)
mark(have, if)
nsubj(have, F)
advcl(satisfy, have)
det(Af, the)
compound(Af, form)
obj(have, Af)
punct(have, .)
advmod(span, accordingly)
punct(span, ,)
det(Af, the)
punct(function, ')
compound(Af, function)
punct(function, ')
nsubj(span, Af)
conj(satisfy, span)
det(space, the)
obj(span, space)
case(solution, of)
nmod(space, solution)
case(Af, of)
nmod(solution, Af)
punct(function, .)
punct(function, since)
nsubj(function, Af)
cop(function, be)
advmod(function, linearly)
amod(function, independent)
root(ROOT, function)
cc(have, and)
det(function, the)
amod(function, exponential)
nsubj(have, function)
conj(function, have)
det(zero, no)
obj(have, zero)
punct(have, ,)
det(function, these)
amod(function, R)
parataxis(function, function)
vocative(form, Af)
punct(form, ,)
root(ROOT, form)
det(basis, a)
obj(form, basis)
case(space, for)
det(space, the)
nmod(basis, space)
case(solution, of)
nmod(space, solution)
punct(space, .)
nummod(example, 7)
case(1, -)
nmod(7, 1)
punct(example, .)
parataxis(form, example)
case(experiment, of)
amod(experiment, binomial)
nmod(example, experiment)
det(experiment, some)
nsubj:pass(compose, experiment)
aux:pass(compose, be)
acl:relcl(example, compose)
case(repetition, of)
obl(compose, repetition)
case(trial, of)
amod(trial, independent)
nmod(repetition, trial)
punct(repetition, ,)
appos(repetition, each)
case(outcome, with)
nummod(outcome, two)
amod(outcome, possible)
nmod(each, outcome)
punct(compose, .)
det(distribution, the)
amod(distribution, binomial)
compound(distribution, probability)
nsubj(describe, distribution)
aux(describe, may)
root(ROOT, describe)
det(variation, the)
obj(describe, variation)
nsubj(occur, that)
acl:relcl(variation, occur)
case(set, from)
nummod(set, one)
obl(occur, set)
case(trial, of)
nmod(set, trial)
case(experiment, of)
det:predet(experiment, such)
det(experiment, a)
amod(experiment, binomial)
nmod(trial, experiment)
case(another, to)
nmod(experiment, another)
punct(describe, .)
nsubj(devote, we)
root(ROOT, devote)
det(chapter, a)
obj(devote, chapter)
case(distribution, to)
det(distribution, the)
amod(distribution, binomial)
nmod(chapter, distribution)
advmod(only, not)
advmod(model, only)
mark(model, because)
nsubj(model, it)
cop(model, be)
det(model, a)
amod(model, mathematical)
advcl(devote, model)
case(variety, for)
det(variety, a)
amod(variety, enormous)
nmod(model, variety)
case(phenomena, of)
amod(phenomena, real)
compound(phenomena, life)
nmod(variety, phenomena)
punct(have, ,)
cc(have, but)
advmod(have, also)
mark(have, because)
nsubj(have, it)
advcl(model, have)
amod(property, important)
obj(have, property)
nsubj(recur, that)
acl:relcl(property, recur)
case(model, in)
amod(model, many)
amod(model, other)
compound(model, probability)
obl(recur, model)
punct(devote, .)
nsubj(begin, we)
root(ROOT, begin)
case(example, with)
det(example, a)
amod(example, few)
obl(begin, example)
case(experiment, of)
amod(experiment, binomial)
nmod(example, experiment)
punct(begin, .)
compound(example, Marksmanship)
root(ROOT, example)
punct(example, . )
det(marksman, a)
amod(marksman, train)
nsubj(hit, marksman)
acl(marksman, shoot)
nummod(round, five)
obj(shoot, round)
case(target, at)
det(target, a)
obl(shoot, target)
punct(hit, ,)
nsubj(hit, all)
case(condition, under)
advmod(condition, practically)
det(condition, the)
amod(condition, same)
nmod(all, condition)
punct(hit, ,)
aux(hit, may)
root(ROOT, hit)
det(bull, the)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
obj(hit, eye)
case(time, from)
nummod(time, 0)
case(5, to)
nmod(0, 5)
obl(hit, time)
punct(hit, .)
case(set, in)
amod(set, repeat)
obl(vary, set)
case(shot, of)
nummod(shot, five)
nmod(set, shot)
nmod:poss(number, he)
nsubj(vary, number)
case(eye, of)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
nmod(number, eye)
root(ROOT, vary)
punct(vary, .)
obj(say, what)
aux(say, can)
nsubj(say, we)
root(ROOT, say)
case(probability, of)
det(probability, the)
obl(say, probability)
case(number, of)
det(number, the)
amod(number, different)
amod(number, possible)
nmod(probability, number)
case(eye, of)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
nmod(number, eye)
punct(say, ?)
punct(say, ?)
root(ROOT, Inheritance)
case(mouse, in)
nmod(Inheritance, mouse)
punct(Inheritance, .)
case(litter, in)
obl(integer, litter)
case(mouse, of)
nummod(mouse, eight)
nmod(litter, mouse)
case(parent, from)
amod(parent, similar)
nmod(mouse, parent)
punct(integer, ,)
det(number, the)
nsubj(integer, number)
case(mouse, of)
nmod(number, mouse)
case(hair, with)
fixed(instead, straight)
case(hair, instead)
fixed(instead, of)
amod(hair, wavy)
nmod(number, hair)
cop(integer, be)
det(integer, a)
root(ROOT, integer)
case(0, from)
nmod(integer, 0)
case(8, to)
nmod(0, 8)
punct(integer, .)
det(probability, what)
nsubj:pass(attach, probability)
aux(attach, should)
aux:pass(attach, be)
parataxis(integer, attach)
case(outcome, to)
det(outcome, these)
amod(outcome, possible)
obl(attach, outcome)
punct(integer, ?)
punct(integer, ?)
root(ROOT, Aces)
punct(one, ()
appos(Aces, one)
punct(one, ))
case(dice, with)
nummod(dice, three)
nmod(Aces, dice)
punct(Aces, .)
mark(toss, when)
nummod(dice, three)
nsubj:pass(toss, dice)
aux:pass(toss, be)
advcl(what, toss)
advmod(toss, repeatedly)
punct(what, ,)
root(ROOT, what)
cop(what, be)
det(probability, the)
nsubj(what, probability)
nsubj(0, that)
det(number, the)
nsubj(0, number)
case(ace, of)
nmod(number, ace)
cop(0, be)
acl:relcl(probability, 0)
punct(0, ()
cc(1, or)
conj(0, 1)
punct(2, ,)
cc(2, or)
conj(0, 2)
punct(3, ,)
cc(3, or)
nummod(problem, 3)
punct(3, ))
punct(problem, ?)
punct(problem, ?)
amod(problem, general)
amod(problem, binomial)
nsubj(what, problem)
punct(problem, .)
advmod(generally, more)
advmod(suppose, generally)
punct(suppose, ,)
root(ROOT, suppose)
mark(consist, that)
det(experiment, a)
nsubj(consist, experiment)
ccomp(suppose, consist)
case(number, of)
det(number, a)
obl(consist, number)
case(trial, of)
amod(trial, independent)
nmod(number, trial)
punct(consist, ,)
mark(success, that)
det(result, each)
compound(result, trial)
nsubj(remain, result)
case(success, in)
cc:preconj(success, either)
det(success, a)
punct(success, ``)
nmod(result, success)
punct(success, '')
cc(non-success, or)
det(non-success, a)
punct(non-success, ``)
conj(success, non-success)
punct(non-success, '')
punct(failure, ()
punct(failure, ``)
appos(non-success, failure)
punct(failure, '')
punct(failure, ))
punct(remain, ,)
cc(remain, and)
mark(remain, that)
det(probability, the)
nsubj(remain, probability)
case(success, of)
nmod(probability, success)
conj(consist, remain)
xcomp(remain, constant)
case(trial, from)
obl(constant, trial)
case(trial, to)
obl(constant, trial)
punct(suppose, .)
case(example, in)
det(example, the)
obl(call, example)
advmod(example, above)
punct(call, ,)
det(occurrence, the)
nsubj:pass(call, occurrence)
case(eye, of)
det(bull, a)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
nmod(occurrence, eye)
punct(eye, ,)
det(mouse, a)
amod(hair, straight)
punct(hair, -)
amod(mouse, hair)
appos(eye, mouse)
punct(ace, ,)
cc(ace, or)
det(ace, a)
conj(eye, ace)
aux(call, could)
aux:pass(call, be)
root(ROOT, call)
det(success, a)
punct(success, ``)
xcomp(call, success)
punct(success, '')
punct(call, .)
case(general, in)
obl(label, general)
punct(label, ,)
det(outcome, any)
nsubj:pass(label, outcome)
nsubj(choose, we)
acl:relcl(outcome, choose)
aux(label, may)
aux:pass(label, be)
root(ROOT, label)
punct(success, ``)
xcomp(label, success)
punct(success, '')
punct(label, .)
det(question, the)
amod(question, major)
nsubj(be, question)
case(chapter, in)
det(chapter, this)
nmod(question, chapter)
conj(label, be)
punct(what, :)
ccomp(be, what)
cop(what, be)
det(probability, the)
nsubj(what, probability)
case(success, of)
advmod(x, exactly)
compound(success, x)
nmod(probability, success)
case(trial, in)
compound(trial, N)
nmod(success, trial)
punct(what, ?)
punct(what, ?)
case(chapter, in)
obl(answer, chapter)
nummod(chapter, 3)
cc(4, and)
conj(3, 4)
nsubj(answer, we)
root(ROOT, answer)
obj(answer, question)
case(those, like)
nmod(question, those)
case(example, in)
det(example, the)
nmod(those, example)
punct(answer, ,)
advmod(count, usually)
mark(count, by)
advcl(answer, count)
obj(count, point)
case(space, in)
det(space, a)
compound(space, sample)
obl(count, space)
punct(answer, . )
advmod(solve, fortunately)
punct(solve, ,)
det(formula, a)
amod(formula, general)
nsubj(solve, formula)
case(applicability, of)
amod(applicability, wide)
nmod(formula, applicability)
root(ROOT, solve)
det(problem, all)
obj(solve, problem)
case(kind, of)
det(kind, this)
nmod(problem, kind)
punct(solve, .)
mark(derive, before)
advcl(explain, derive)
det(formula, this)
obj(derive, formula)
punct(explain, ,)
nsubj(explain, we)
root(ROOT, explain)
obj(explain, what)
nsubj(mean, we)
acl:relcl(what, mean)
case(problem, by)
punct(problem, ``)
obl(mean, problem)
case(kind, of)
det(kind, this)
nmod(problem, kind)
punct(problem, '')
punct(explain, .)
nsubj:pass(compose, experiment)
aux:pass(compose, be)
advmod(compose, often)
ccomp(explain, compose)
case(trial, of)
amod(trial, several)
amod(trial, identical)
obl(compose, trial)
punct(repeat, ,)
cc(repeat, and)
advmod(repeat, sometimes)
nsubj:pass(repeat, experiment)
nmod:npmod(experiment, themselves)
aux:pass(repeat, be)
conj(compose, repeat)
punct(explain, .)
case(example, in)
det(example, the)
amod(example, marksmanship)
obl(consist, example)
punct(consist, ,)
det(trial, a)
nsubj(consist, trial)
root(ROOT, consist)
case(shot, of)
punct(shot, ``)
nummod(round, one)
compound(shot, round)
obl(consist, shot)
case(target, at)
det(target, a)
nmod(shot, target)
punct(shot, '')
case(outcome, with)
obl(consist, outcome)
cc:preconj(eye, either)
nummod(bull, one)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
nmod(outcome, eye)
punct(success, ()
appos(eye, success)
punct(success, ))
cc(none, or)
conj(eye, none)
punct(failure, ()
appos(none, failure)
punct(failure, ))
punct(consist, . )
advmod(consist, further)
punct(consist, ,)
det(experiment, a)
nsubj(consist, experiment)
aux(consist, might)
root(ROOT, consist)
case(round, of)
nummod(round, five)
obl(consist, round)
punct(regard, ,)
cc(regard, and)
amod(set, several)
nsubj:pass(regard, set)
case(round, of)
nummod(round, five)
nmod(set, round)
aux(regard, might)
aux:pass(regard, be)
conj(consist, regard)
case(experiment, as)
det(experiment, a)
amod(experiment, super-)
obl(regard, experiment)
acl(experiment, compose)
case(repetition, of)
amod(repetition, several)
obl(compose, repetition)
case(experiment, of)
det(experiment, the)
nummod(round, five)
punct(round, -)
compound(experiment, round)
nmod(repetition, experiment)
punct(consist, .)
mark(toss, if)
nummod(dice, three)
nsubj:pass(toss, dice)
aux:pass(toss, be)
advcl(toss, toss)
punct(toss, ,)
det(trial, a)
nsubj(toss, trial)
cop(toss, be)
nummod(toss, one)
root(ROOT, toss)
case(die, of)
nummod(die, one)
nmod(toss, die)
cc(compose, and)
det(experiment, the)
nsubj:pass(compose, experiment)
aux:pass(compose, be)
conj(toss, compose)
case(trial, of)
nummod(trial, three)
obl(compose, trial)
punct(toss, .)
cc(trial, or)
punct(trial, ,)
nsubj(amount, what)
advcl(trial, amount)
case(thing, to)
det(thing, the)
amod(thing, same)
obl(amount, thing)
punct(trial, ,)
mark(toss, if)
nummod(die, one)
nsubj:pass(toss, die)
aux:pass(toss, be)
advcl(trial, toss)
nummod(time, three)
obl:tmod(toss, time)
punct(trial, ,)
det(toss, each)
nsubj(trial, toss)
cop(trial, be)
det(trial, a)
root(ROOT, trial)
punct(form, ,)
cc(form, and)
det(toss, the)
nummod(toss, three)
nsubj(form, toss)
conj(trial, form)
det(experiment, the)
obj(form, experiment)
punct(trial, . )
advmod(distinguish, mathematically)
punct(distinguish, ,)
nsubj(distinguish, we)
aux(distinguish, shall)
advmod(distinguish, not)
root(ROOT, distinguish)
det(experiment, the)
obj(distinguish, experiment)
case(dice, of)
nummod(dice, three)
nmod(experiment, dice)
acl(dice, toss)
advmod(toss, once)
case(that, from)
obl(toss, that)
case(die, of)
nummod(die, one)
nmod(that, die)
conj(distinguish, toss)
nummod(time, three)
obl:tmod(toss, time)
punct(distinguish, .)
det(example, these)
nsubj(illustrative, example)
cop(illustrative, be)
root(ROOT, illustrative)
case(use, of)
det(use, the)
obl(illustrative, use)
case(word, of)
det(word, the)
nmod(use, word)
punct(trial, ``)
appos(word, trial)
punct(trial, '')
cc(experiment, and)
punct(experiment, ``)
conj(trial, experiment)
punct(experiment, '')
mark(use, as)
nsubj:pass(use, they)
aux:pass(use, be)
advcl(experiment, use)
case(chapter, in)
det(chapter, this)
obl(use, chapter)
punct(word, ,)
cc(word, but)
nsubj(word, they)
cop(word, be)
advmod(flexible, quite)
amod(word, flexible)
conj(illustrative, word)
cc(be, and)
nsubj(be, it)
cop(word, be)
advmod(restrict, well)
advmod(restrict, not)
mark(restrict, to)
advcl(be, restrict)
obj(restrict, they)
advmod(narrowly, too)
advmod(restrict, narrowly)
punct(illustrative, .)
compound(manager, Example)
nummod(manager, 1)
punct(manager, .)
compound(football, Student)
compound(manager, football)
root(ROOT, manager)
punct(manager, .)
nummod(student, ten)
nsubj(act, student)
root(ROOT, act)
case(manager, as)
obl(act, manager)
case(team, for)
det(team, a)
amod(school, high)
punct(school, -)
compound(team, school)
compound(team, football)
obl(act, team)
punct(driver, ,)
cc(driver, and)
case(manager, of)
det(manager, these)
obl(driver, manager)
det(p, a)
compound(p, proportion)
nsubj:pass(license, p)
aux:pass(license, be)
amod(driver, license)
conj(act, driver)
punct(act, .)
det(manager, each)
compound(manager, Friday)
nummod(Friday, one)
nsubj:pass(choose, manager)
aux:pass(choose, be)
root(ROOT, choose)
case(lot, by)
obl(choose, lot)
mark(stay, to)
advcl(choose, stay)
advmod(stay, late)
cc(load, and)
conj(stay, load)
det(equipment, the)
obj(load, equipment)
case(truck, on)
det(truck, a)
obl(load, truck)
punct(choose, .)
case(Fridays, on)
nummod(Fridays, three)
obl(need, Fridays)
det(coach, the)
nsubj(need, coach)
aux(need, have)
root(ROOT, need)
det(driver, a)
obj(need, driver)
punct(need, .)
advcl(what, consider)
advmod(Fridays, only)
det(Fridays, these)
obl:tmod(consider, Fridays)
punct(what, ,)
root(ROOT, what)
cop(what, be)
det(probability, the)
nsubj(what, probability)
obj(have, that)
det(coach, the)
nsubj(have, coach)
acl:relcl(probability, have)
obj(have, driver)
det(time, all)
nummod(time, 3)
obl:tmod(have, time)
punct(what, ?)
punct(what, ?)
advmod(2, exactly)
nummod(time, 2)
root(ROOT, time)
punct(time, ?)
punct(time, ? )
nummod(time, 1)
root(ROOT, time)
punct(time, ?)
punct(time, ?)
nummod(time, 0)
appos(time, time)
punct(time, ?)
punct(discussion, ?)
parataxis(time, discussion)
punct(time, .)
root(ROOT, note)
mark(be, that)
expl(be, there)
ccomp(note, be)
nummod(trial, 3)
nsubj(be, trial)
case(interest, of)
nmod(trial, interest)
punct(note, .)
det(trial, each)
nsubj(consist, trial)
root(ROOT, consist)
mark(choose, of)
advcl(consist, choose)
det(manager, a)
compound(manager, student)
obj(choose, manager)
case(random, at)
obl(choose, random)
punct(consist, .)
det(outcome, the)
nummod(outcome, 2)
amod(outcome, possible)
nsubj(driver, outcome)
case(trial, on)
det(trial, each)
nmod(outcome, trial)
cop(driver, be)
punct(driver, ``)
root(ROOT, driver)
punct(driver, '')
cc(nondriver, or)
punct(nondriver, ``)
conj(driver, nondriver)
punct(nondriver, '')
punct(driver, .)
mark(lot, since)
det(choice, the)
nsubj(lot, choice)
cop(lot, be)
case(lot, by)
advcl(independent, lot)
det(week, each)
nmod:npmod(lot, week)
punct(independent, ,)
det(outcome, the)
nsubj(independent, outcome)
case(trial, of)
amod(trial, different)
nmod(outcome, trial)
cop(independent, be)
conj(driver, independent)
punct(driver, .)
det(manager, the)
nsubj(stay, manager)
root(ROOT, stay)
det(same, the)
obj(stay, same)
punct(stay, ,)
mark(same, so)
fixed(so, that)
nsubj(same, Af)
cop(same, be)
det(same, the)
advcl(stay, same)
case(week, for)
det(week, all)
obl(same, week)
punct(stay, .)
nsubj(generalize, we)
advmod(generalize, now)
root(ROOT, generalize)
det(idea, these)
obj(generalize, idea)
case(experiment, for)
amod(experiment, general)
amod(experiment, binomial)
obl(generalize, experiment)
punct(generalize, .)
case(experiment, for)
det(experiment, a)
obl(generalize, experiment)
mark(qualify, to)
acl(experiment, qualify)
case(experiment, as)
det(experiment, a)
amod(experiment, binomial)
obl(qualify, experiment)
punct(have, ,)
nsubj(have, it)
aux(have, must)
parataxis(generalize, have)
nummod(property, four)
obj(have, property)
punct(property, :)
punct(1, ()
nummod(be, 1)
punct(1, ))
expl(be, there)
aux(be, must)
appos(property, be)
det(number, a)
amod(number, fix)
nsubj(be, number)
case(trial, of)
nmod(number, trial)
punct(number, ,)
punct(2, ()
nummod(result, 2)
punct(2, ))
det(trial, each)
nsubj(result, trial)
aux(result, must)
acl:relcl(number, result)
case(success, in)
det(success, a)
punct(success, ``)
obl(result, success)
punct(success, '')
cc(failure, or)
det(failure, a)
punct(failure, ``)
conj(success, failure)
punct(failure, '')
punct(trial, ()
det(trial, a)
amod(trial, binomial)
appos(failure, trial)
punct(trial, ))
punct(have, ,)
punct(3, ()
nummod(have, 3)
punct(3, ))
det(trial, all)
nsubj(have, trial)
aux(have, must)
parataxis(failure, have)
amod(probability, identical)
obj(have, probability)
case(success, of)
nmod(probability, success)
punct(have, ,)
punct(4, ()
nummod(independent, 4)
punct(4, ))
det(trial, the)
nsubj(independent, trial)
aux(independent, must)
cop(independent, be)
parataxis(have, independent)
case(other, of)
det(other, each)
obl(independent, other)
punct(generalize, .)
advmod(use, below)
nsubj(use, we)
root(ROOT, use)
nmod:poss(example, we)
amod(example, earlier)
obj(use, example)
mark(describe, to)
acl(example, describe)
cc(illustrate, and)
conj(describe, illustrate)
det(property, these)
nummod(property, four)
obj(illustrate, property)
punct(use, .)
nsubj(give, we)
advmod(give, also)
root(ROOT, give)
punct(give, ,)
case(property, for)
det(property, each)
obl(give, property)
punct(example, ,)
det(example, a)
obj(give, example)
advmod(absent, where)
det(property, the)
nsubj(absent, property)
cop(absent, be)
acl:relcl(example, absent)
punct(give, .)
det(language, the)
nsubj(standard, language)
cc(notation, and)
conj(language, notation)
acl(language, introduce)
cop(standard, be)
root(ROOT, standard)
case(chapter, throughout)
det(chapter, the)
obl(standard, chapter)
compound(1, . )
nummod(be, 1)
punct(1, .)
expl(be, there)
aux(be, must)
parataxis(standard, be)
det(n, a)
amod(n, fix)
compound(n, number)
nsubj(be, n)
case(trial, of)
amod(trial, repeat)
nmod(n, trial)
punct(standard, .)
case(marksman, for)
det(marksman, the)
obl(study, marksman)
punct(study, ,)
nsubj(study, we)
root(ROOT, study)
obj(study, set)
case(shot, of)
nummod(shot, five)
nmod(set, shot)
punct(Af, ()
appos(shot, Af)
punct(Af, ))
punct(study, ;)
punct(study, ;)
case(mouse, for)
det(mouse, the)
obl(restrict, mouse)
punct(restrict, ,)
nsubj(restrict, we)
parataxis(study, restrict)
obj(restrict, attention)
case(litter, to)
nmod(attention, litter)
case(eight, of)
nmod(litter, eight)
punct(Af, ()
appos(litter, Af)
punct(Af, ))
punct(restrict, ;)
punct(toss, ;)
cc(toss, and)
case(ace, for)
det(ace, the)
obl(toss, ace)
punct(toss, ,)
nsubj(toss, we)
conj(study, toss)
nummod(dice, three)
obj(toss, dice)
punct(Af, ()
appos(dice, Af)
punct(Af, ))
punct(dice, .)
obj(toss, experiment)
case(number, without)
det(number, a)
amod(number, fix)
nmod(experiment, number)
case(trial, of)
nmod(number, trial)
punct(toss, .)
parataxis(toss, toss)
det(die, a)
obj(toss, die)
mark(appear, until)
det(ace, a)
nsubj(appear, ace)
advcl(toss, appear)
punct(toss, .)
root(ROOT, here)
det(number, the)
nsubj(here, number)
case(trial, of)
nmod(number, trial)
cop(variable, be)
det(variable, a)
amod(variable, random)
nsubj(here, variable)
punct(number, ,)
cc(number, not)
det(number, a)
amod(number, fix)
conj(variable, number)
punct(here, . )
nummod(trial, 2)
punct(2, .)
amod(trial, binomial)
root(ROOT, trial)
punct(trial, .)
nsubj(success, each)
case(trial, of)
det(trial, the)
amod(trial, N)
nmod(each, trial)
cop(success, be)
cc:preconj(success, either)
det(success, a)
root(ROOT, success)
cc(failure, or)
det(failure, a)
conj(success, failure)
punct(success, .)
punct(success, ``)
nsubj(label, success)
punct(success, '')
cc(failure, and)
punct(failure, ``)
conj(success, failure)
punct(failure, '')
cop(label, be)
advmod(label, just)
amod(label, convenient)
root(ROOT, label)
case(category, for)
det(category, the)
nummod(category, two)
nmod(label, category)
case(outcome, of)
nmod(category, outcome)
mark(talk, when)
nsubj(talk, we)
advcl(label, talk)
case(trial, about)
amod(trial, binomial)
obl(talk, trial)
case(general, in)
obl(talk, general)
punct(label, .)
det(word, these)
nsubj(expressive, word)
cop(expressive, be)
advmod(expressive, more)
root(ROOT, expressive)
case(label, than)
obl(expressive, label)
case(a, like)
punct(a, ``)
nmod(label, a)
punct(a, '')
cc(a, and)
punct(a, ``)
advmod(a, not)
punct(a, -)
conj(a, a)
punct(a, '')
punct(natural, .)
nsubj(natural, it)
cop(natural, be)
parataxis(expressive, natural)
case(viewpoint, from)
det(marksman, the)
nmod:poss(viewpoint, marksman)
case(marksman, 's)
obl(natural, viewpoint)
mark(call, to)
acl(viewpoint, call)
det(bull, a)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
obj(call, eye)
det(success, a)
obj(call, success)
punct(arbitrary, ,)
cc(arbitrary, but)
case(example, in)
det(example, the)
compound(example, mouse)
obl(arbitrary, example)
expl(arbitrary, it)
cop(arbitrary, be)
conj(natural, arbitrary)
det(category, which)
nsubj(correspond, category)
ccomp(arbitrary, correspond)
case(hair, to)
amod(hair, straight)
obl(correspond, hair)
case(mouse, in)
det(mouse, a)
obl(correspond, mouse)
punct(expressive, .)
det(word, the)
nsubj(mean, word)
punct(word, ``)
nsubj(mean, binomial)
punct(binomial, '')
root(ROOT, mean)
punct(name, ``)
case(name, of)
nummod(name, two)
obl(mean, name)
punct(name, '')
cc(term, or)
punct(term, ``)
case(term, of)
nummod(term, two)
nmod(name, term)
punct(term, '')
punct(apply, ,)
cc(apply, and)
det(usage, both)
nsubj(apply, usage)
conj(mean, apply)
case(work, in)
nmod:poss(work, we)
obl(apply, work)
punct(apply, :)
det(first, the)
appos(work, first)
case(name, to)
det(name, the)
obl(first, name)
case(outcome, of)
det(outcome, the)
nummod(outcome, two)
nmod(name, outcome)
case(trial, of)
det(trial, a)
amod(trial, binomial)
nmod(outcome, trial)
punct(second, ,)
cc(second, and)
det(second, the)
conj(outcome, second)
case(p, to)
det(term, the)
compound(p, term)
nmod(second, p)
cc(Af, and)
conj(p, Af)
nsubj(represent, that)
acl:relcl(p, represent)
det(probability, the)
obj(represent, probability)
case(success, of)
punct(success, ``)
nmod(probability, success)
punct(success, '')
cc(failure, and)
punct(failure, ``)
conj(success, failure)
punct(failure, '')
punct(failure, .)
advmod(be, sometimes)
mark(be, when)
expl(be, there)
advcl(group, be)
amod(outcome, many)
nsubj(be, outcome)
case(trial, for)
det(trial, a)
amod(trial, single)
nmod(outcome, trial)
punct(group, ,)
nsubj(group, we)
conj(mean, group)
det(outcome, these)
obj(group, outcome)
case(class, into)
nummod(class, two)
obl(group, class)
punct(group, ,)
case(example, as)
case(example, in)
det(example, the)
obl(group, example)
case(die, of)
det(die, the)
nmod(example, die)
punct(die, ,)
advmod(construct, where)
nsubj(construct, we)
aux(construct, have)
advmod(construct, arbitrarily)
acl:relcl(die, construct)
det(class, the)
obj(construct, class)
punct(ace, ``)
obj(construct, ace)
punct(ace, '')
cc(not-ace, and)
punct(not-ace, ``)
conj(ace, not-ace)
punct(not-ace, '')
punct(experiment, .)
conj(ace, experiment)
case(property, without)
det(property, the)
nummod(class, two)
punct(class, -)
compound(property, class)
nmod(experiment, property)
punct(mean, .)
nsubj(classify, we)
root(ROOT, classify)
obj(classify, mouse)
case(hair, as)
punct(hair, ``)
amod(hair, straight)
punct(hair, -)
obl(classify, hair)
punct(hair, '')
cc(hair, or)
punct(hair, ``)
amod(hair, wavy)
punct(hair, -)
conj(hair, hair)
punct(hair, '')
punct(appear, ,)
cc(appear, but)
det(mouse, a)
amod(mouse, hairless)
nsubj(appear, mouse)
conj(classify, appear)
punct(classify, .)
nsubj(escape, we)
aux(escape, can)
root(ROOT, escape)
case(difficulty, from)
det:predet(difficulty, such)
det(difficulty, a)
obl(escape, difficulty)
mark(rule, by)
advcl(escape, rule)
compound:prt(rule, out)
det(animal, the)
obj(rule, animal)
mark(constitute, as)
advmod(constitute, not)
advcl(rule, constitute)
det(trial, a)
obj(constitute, trial)
punct(satisfactory, ,)
cc(satisfactory, but)
det:predet(solution, such)
det(solution, a)
nsubj(satisfactory, solution)
cop(satisfactory, be)
advmod(satisfactory, not)
advmod(satisfactory, always)
conj(escape, satisfactory)
punct(escape, . )
nummod(have, 3)
punct(3, .)
det(trial, all)
nsubj(have, trial)
root(ROOT, have)
amod(probability, identical)
obj(have, probability)
case(success, of)
nmod(probability, success)
punct(have, .)
det(die, each)
nsubj(have, die)
root(ROOT, have)
obj(have, probability)
root(ROOT, Af)
mark(produce, of)
acl(Af, produce)
det(ace, a)
obj(produce, ace)
punct(Af, ;)
punct(Af, ;)
det(marksman, the)
nsubj(have, marksman)
parataxis(Af, have)
det(p, some)
compound(p, probability)
obj(have, p)
punct(p, ,)
advmod(0.1, perhaps)
appos(p, 0.1)
punct(p, ,)
mark(make, of)
advcl(have, make)
det(bull, a)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
obj(make, eye)
punct(Af, .)
root(ROOT, note)
mark(need, that)
nsubj(need, we)
ccomp(note, need)
advmod(know, not)
xcomp(need, know)
det(value, the)
obj(know, value)
case(p, of)
nmod(value, p)
punct(know, ,)
case(experiment, for)
det(experiment, the)
obl(know, experiment)
mark(binomial, to)
cop(binomial, be)
acl(experiment, binomial)
punct(note, .)
root(ROOT, experiment)
mark(constant, where)
nsubj(constant, p)
cop(constant, be)
advmod(constant, not)
appos(experiment, constant)
punct(experiment, .)
case(round, during)
det(round, a)
obl(come, round)
case(practice, of)
compound(practice, target)
nmod(round, practice)
det(sun, the)
nsubj(come, sun)
root(ROOT, come)
obl(come, from)
case(cloud, behind)
det(cloud, a)
obl(come, cloud)
cc(dazzle, and)
conj(come, dazzle)
det(marksman, the)
obj(dazzle, marksman)
punct(dazzle, ,)
advcl(dazzle, lower)
nmod:poss(chance, he)
obj(lower, chance)
case(eye, of)
det(bull, a)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
nmod(chance, eye)
punct(come, . )
nummod(independent, 4)
punct(4, .)
det(trial, the)
nsubj(independent, trial)
cop(independent, be)
root(ROOT, independent)
punct(independent, .)
advmod(speak, strictly)
advcl(mean, speak)
punct(mean, ,)
nsubj(mean, this)
root(ROOT, mean)
mark(compute, that)
det(probability, the)
nsubj:pass(compute, probability)
case(outcome, for)
det(outcome, each)
amod(outcome, possible)
nmod(probability, outcome)
case(experiment, of)
det(experiment, the)
nmod(outcome, experiment)
aux(compute, can)
aux:pass(compute, be)
ccomp(mean, compute)
mark(multiply, by)
advcl(compute, multiply)
advmod(multiply, together)
det(probability, the)
obj(multiply, probability)
case(outcome, of)
det(outcome, the)
amod(outcome, possible)
nmod(probability, outcome)
case(trial, of)
det(trial, the)
amod(trial, single)
amod(trial, binomial)
nmod(outcome, trial)
punct(mean, .)
advmod(imply, thus)
case(Af, in)
det(Af, the)
nummod(dice, three)
punct(dice, -)
compound(example, dice)
compound(Af, example)
obl(imply, Af)
punct(Af, ,)
conj(Af, Af)
punct(imply, ,)
cc(assumption, and)
det(assumption, the)
compound(assumption, independence)
conj(Af, assumption)
root(ROOT, imply)
mark(expect, that)
det(probability, the)
nsubj(expect, probability)
mark(Af, that)
det(ace, the)
nummod(ace, three)
compound(ace, dice)
compound(ace, fall)
nsubj(Af, ace)
punct(not-ace, ,)
amod(ace, not-ace)
punct(ace, ,)
conj(ace, ace)
case(order, in)
det(order, that)
nmod(ace, order)
cop(Af, be)
acl(probability, Af)
punct(Af, .)
advmod(expect, experimentally)
punct(expect, ,)
nsubj(expect, we)
ccomp(imply, expect)
obj(expect, independence)
mark(have, when)
det(trial, the)
nsubj(have, trial)
advcl(expect, have)
obj(have, nothing)
mark(do, to)
acl(nothing, do)
case(another, with)
nummod(another, one)
obl(do, another)
punct(example, .)
obl(expect, example)
advmod(fail, where)
nsubj(fail, independence)
acl:relcl(example, fail)
punct(example, . )
det(family, a)
root(ROOT, family)
case(plan, of)
nummod(plan, five)
nmod(family, plan)
mark(go, to)
acl(plan, go)
advmod(go, together)
cc:preconj(beach, either)
case(beach, to)
det(beach, the)
obl(go, beach)
cc(mountain, or)
case(mountain, to)
det(mountain, the)
conj(beach, mountain)
punct(toss, ,)
cc(toss, and)
det(coin, a)
nsubj:pass(toss, coin)
aux:pass(toss, be)
conj(go, toss)
mark(decide, to)
advcl(toss, decide)
punct(toss, .)
nsubj(want, we)
root(ROOT, want)
mark(know, to)
xcomp(want, know)
det(number, the)
obj(know, number)
case(people, of)
nmod(number, people)
acl(people, go)
case(mountain, to)
det(mountain, the)
obl(go, mountain)
punct(want, .)
mark(view, when)
det(experiment, this)
nsubj:pass(view, experiment)
aux:pass(view, be)
advcl(know, view)
mark(compose, as)
advcl(view, compose)
case(trial, of)
nummod(trial, five)
amod(trial, binomial)
obl(compose, trial)
punct(trial, ,)
appos(trial, one)
case(member, for)
det(member, each)
nmod(one, member)
case(family, of)
det(family, the)
nmod(member, family)
punct(independent, ,)
det(outcome, the)
nsubj(independent, outcome)
case(trial, of)
det(trial, the)
nmod(outcome, trial)
cop(independent, be)
advmod(independent, obviously)
advmod(independent, not)
conj(want, independent)
punct(want, .)
advmod(view, indeed)
punct(view, ,)
det(experiment, the)
nsubj:pass(view, experiment)
aux:pass(view, be)
advmod(view, better)
root(ROOT, view)
mark(consist, as)
advcl(view, consist)
case(trial, of)
nummod(trial, one)
amod(trial, binomial)
obl(consist, trial)
case(family, for)
det(family, the)
amod(family, entire)
nmod(trial, family)
punct(view, .)
det(follow, the)
nsubj(example, follow)
cop(example, be)
det(example, a)
advmod(extreme, less)
amod(example, extreme)
root(ROOT, example)
case(dependence, of)
nmod(example, dependence)
punct(example, .)
root(ROOT, consider)
obj(consider, couple)
acl(couple, visit)
det(museum, a)
compound(museum, art)
obj(visit, museum)
punct(consider, .)
det(vote, each)
compound(vote, person)
root(ROOT, vote)
case(one, for)
nmod(vote, one)
case(pair, of)
det(pair, a)
nmod(one, pair)
case(picture, of)
nmod(pair, picture)
mark(receive, to)
acl(pair, receive)
det(prize, a)
amod(prize, popular)
obj(receive, prize)
punct(vote, .)
advcl(call, Voting)
case(picture, for)
nummod(picture, one)
obl(Voting, picture)
aux(call, may)
aux:pass(call, be)
root(ROOT, call)
punct(success, ``)
xcomp(call, success)
punct(success, '')
punct(call, ,)
case(failure, for)
det(failure, the)
amod(failure, other)
punct(failure, ``)
obl(call, failure)
punct(failure, '')
punct(failure, .)
det(experiment, a)
nsubj(consist, experiment)
parataxis(call, consist)
case(voting, of)
det(voting, the)
obl(consist, voting)
case(couple, of)
nummod(couple, one)
nmod(voting, couple)
punct(trial, ,)
cc(trial, or)
nummod(trial, two)
conj(voting, trial)
punct(call, .)
case(repetition, in)
obl(agree, repetition)
case(experiment, of)
det(experiment, the)
nmod(repetition, experiment)
case(couple, from)
nmod(repetition, couple)
case(couple, to)
nmod(couple, couple)
punct(agree, ,)
det(vote, the)
nsubj(agree, vote)
case(person, of)
det(person, the)
nummod(person, two)
nmod(vote, person)
case(couple, in)
det(couple, a)
nmod(person, couple)
advmod(agree, probably)
root(ROOT, agree)
advmod(often, more)
advmod(agree, often)
mark(imply, than)
nsubj(imply, independence)
aux(imply, would)
advcl(often, imply)
punct(agree, ,)
mark(likely, because)
nsubj(likely, couple)
nsubj(visit, who)
acl:relcl(couple, visit)
det(museum, the)
obj(visit, museum)
advmod(visit, together)
cop(likely, be)
advmod(likely, more)
conj(agree, likely)
mark(have, to)
xcomp(likely, have)
amod(taste, similar)
obj(have, taste)
mark(pair, than)
cop(pair, be)
det(pair, a)
amod(pair, random)
advcl(have, pair)
case(people, of)
nmod(pair, people)
acl(people, draw)
case(population, from)
det(population, the)
amod(population, entire)
obl(draw, population)
case(visitor, of)
nmod(population, visitor)
punct(agree, .)
root(ROOT, table)
nummod(table, 7)
punct(table, -)
nsubj(illustrate, 1)
parataxis(table, illustrate)
det(point, the)
obj(illustrate, point)
punct(table, .)
det(table, the)
nsubj(show, table)
root(ROOT, show)
mark(vote, that)
nsubj(vote, 0.6)
case(boy, of)
det(boy, the)
nmod(0.6, boy)
cc(0.6, and)
conj(0.6, 0.6)
case(girl, of)
det(girl, the)
nmod(0.6, girl)
ccomp(show, vote)
case(a, for)
compound(a, picture)
obl(vote, a)
punct(vote, .)
advmod(cast, therefore)
punct(vote, ,)
case(voting, under)
amod(voting, independent)
obl(cast, voting)
punct(Af, ,)
conj(voting, Af)
cc(0.36, or)
conj(voting, 0.36)
case(couple, of)
det(couple, the)
nmod(0.36, couple)
aux(cast, would)
ccomp(show, cast)
nummod(vote, two)
obj(cast, vote)
case(a, for)
compound(a, picture)
nmod(vote, a)
punct(cast, ,)
cc(cast, and)
nsubj(cast, Af)
cc(0.16, or)
conj(Af, 0.16)
aux(cast, would)
conj(cast, cast)
nummod(vote, two)
obj(cast, vote)
case(b, for)
compound(b, picture)
nmod(vote, b)
punct(cast, .)
advmod(voting, thus)
case(voting, in)
amod(voting, independent)
obl(cast, voting)
punct(Af, ,)
conj(voting, Af)
cc(0.52, or)
conj(voting, 0.52)
case(couple, of)
det(couple, the)
nmod(0.52, couple)
aux(agree, would)
acl:relcl(voting, agree)
punct(show, .)
cc(show, but)
nsubj(show, table)
nummod(show, 7)
case(1, -)
nmod(7, 1)
root(ROOT, show)
mark(agree, that)
nsubj(agree, Af)
cc(0.70, or)
conj(Af, 0.70)
acl(show, agree)
punct(agree, ,)
advmod(many, too)
obj(agree, many)
case(voting, for)
amod(voting, independent)
obl(many, voting)
punct(show, .)
det(performance, each)
root(ROOT, performance)
case(result, of)
det(result, a)
amod(result, n-trial)
amod(result, binomial)
compound(result, experiment)
nmod(performance, result)
case(number, in)
det(number, some)
amod(number, whole)
nmod(performance, number)
case(0, from)
nmod(number, 0)
case(N, through)
nmod(0, N)
case(value, as)
det(value, the)
nmod(number, value)
case(x, of)
det(x, the)
amod(x, random)
amod(x, variable)
nmod(value, x)
punct(x, ,)
advmod(want, where)
nsubj(want, Af)
punct(Af, .)
nsubj(want, we)
acl:relcl(x, want)
mark(study, to)
xcomp(want, study)
det(function, the)
compound(function, probability)
obj(study, function)
case(variable, of)
det(variable, this)
amod(variable, random)
nmod(function, variable)
punct(performance, .)
case(example, for)
obl(interested, example)
punct(interested, ,)
nsubj(interested, we)
cop(interested, be)
root(ROOT, interested)
case(number, in)
det(number, the)
obl(interested, number)
case(eye, of)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
nmod(number, eye)
punct(eye, ,)
advmod(shot, not)
det(shot, which)
nsubj(eye, shot)
cop(eye, be)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
parataxis(interested, eye)
punct(interested, . )
det(experiment, a)
amod(experiment, binomial)
nsubj(produce, experiment)
aux(produce, can)
root(ROOT, produce)
amod(variable, random)
obj(produce, variable)
amod(variable, other)
case(number, than)
det(number, the)
obl(other, number)
case(success, of)
nmod(number, success)
punct(produce, .)
case(example, for)
obl(get, example)
punct(get, ,)
det(marksman, the)
nsubj(get, marksman)
root(ROOT, get)
nummod(shot, 5)
obj(get, shot)
punct(take, ,)
cc(take, but)
nsubj(take, we)
conj(get, take)
nmod:poss(score, he)
obj(take, score)
mark(number, to)
cop(number, be)
det(number, the)
xcomp(take, number)
case(shot, of)
nmod(number, shot)
case(eye, before)
nmod:poss(bull, he)
amod(bull, first)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
nmod(number, eye)
punct(0, ,)
nsubj(0, that)
cop(0, be)
punct(0, ,)
appos(eye, 0)
punct(1, ,)
nummod(0, 1)
punct(2, ,)
conj(0, 2)
punct(4, ,)
compound(4, 3)
punct(4, ,)
compound(2, 4)
punct(4, ()
cc(5, or)
conj(4, 5)
punct(get, ,)
mark(get, if)
nsubj(get, he)
advcl(5, get)
det(bull, no)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
obj(get, eye)
punct(get, ))
punct(get, .)
advmod(score, thus)
nsubj(score, we)
aux(score, do)
advmod(score, not)
root(ROOT, score)
det(number, the)
obj(score, number)
case(eye, of)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
nmod(number, eye)
punct(number, ,)
cc(number, and)
det(variable, the)
amod(variable, random)
nsubj(number, variable)
cop(number, be)
advmod(number, not)
det(number, the)
conj(score, number)
case(success, of)
nmod(number, success)
punct(score, .)
det(constancy, the)
nsubj(condition, constancy)
case(p, of)
nmod(constancy, p)
cc(independence, and)
det(independence, the)
conj(p, independence)
cop(condition, be)
det(condition, the)
root(ROOT, condition)
advmod(likely, most)
amod(condition, likely)
mark(give, to)
xcomp(likely, give)
obj(give, trouble)
case(practice, in)
obl(give, practice)
punct(condition, .)
advmod(change, obviously)
punct(change, ,)
advmod(slight, very)
amod(change, slight)
nsubj(change, change)
case(p, in)
nmod(change, p)
aux(change, do)
advmod(change, not)
root(ROOT, change)
det(probability, the)
obj(change, probability)
advmod(change, much)
punct(make, ,)
cc(make, and)
det(lack, a)
amod(lack, slight)
nsubj(make, lack)
case(independence, of)
nmod(lack, independence)
aux(make, may)
advmod(make, not)
conj(change, make)
det(difference, a)
amod(difference, appreciable)
obj(make, difference)
punct(change, . )
punct(see, ()
case(instance, for)
obl(see, instance)
punct(see, ,)
root(ROOT, see)
obj(see, Example)
nummod(Example, 2)
case(section, of)
nmod(2, section)
nummod(section, 5)
case(5, -)
nmod(section, 5)
punct(see, ,)
case(card, on)
amod(card, red)
obl(see, card)
case(hand, in)
obl(see, hand)
case(5, of)
nmod(hand, 5)
punct(see, .)
punct(see, ))
case(hand, on)
det(hand, the)
amod(hand, other)
obl(use, hand)
punct(use, ,)
advmod(describe, even)
mark(describe, when)
det(model, the)
amod(model, binomial)
nsubj(describe, model)
aux(describe, do)
advmod(describe, not)
advcl(use, describe)
advmod(describe, well)
det(phenomenon, the)
amod(phenomenon, physical)
obj(describe, phenomenon)
aux:pass(study, be)
acl(phenomenon, study)
punct(use, ,)
det(model, the)
amod(model, binomial)
nsubj:pass(use, model)
aux(use, may)
advmod(use, still)
aux:pass(use, be)
root(ROOT, use)
case(baseline, as)
det(baseline, a)
obl(use, baseline)
case(purpose, for)
amod(purpose, comparative)
nmod(baseline, purpose)
punct(use, ;)
punct(use, ;)
nsubj(be, that)
aux(discuss, be)
punct(discuss, ,)
nsubj(discuss, we)
aux(discuss, may)
parataxis(use, discuss)
det(phenomenon, the)
obj(discuss, phenomenon)
case(term, in)
obl(discuss, term)
case(departure, of)
nmod:poss(departure, its)
nmod(term, departure)
case(model, from)
det(model, the)
amod(model, binomial)
nmod(departure, model)
punct(use, .)
mark(summarize, to)
root(ROOT, summarize)
punct(summarize, : )
det(experiment, a)
amod(experiment, binomial)
nsubj(consist, experiment)
root(ROOT, consist)
case(trial, of)
compound(trial, Af)
amod(trial, independent)
amod(trial, binomial)
obl(consist, trial)
punct(trial, ,)
appos(trial, all)
case(probability, with)
det(probability, the)
amod(probability, same)
nmod(all, probability)
root(ROOT, Af)
mark(yield, of)
acl(Af, yield)
det(success, a)
obj(yield, success)
punct(Af, .)
det(outcome, the)
nsubj(success, outcome)
case(experiment, of)
det(experiment, the)
nmod(outcome, experiment)
cop(success, be)
compound(success, x)
root(ROOT, success)
punct(success, .)
det(x, the)
amod(x, random)
amod(x, variable)
nsubj(take, x)
root(ROOT, take)
det(value, the)
obj(take, value)
nsubj(find, Af)
case(probability, with)
nmod(Af, probability)
nmod(Af, Af)
cc(Af, or)
punct(Af, ,)
advmod(briefly, more)
advmod(Af, briefly)
conj(Af, Af)
punct(find, .)
nsubj(find, we)
aux(find, shall)
root(ROOT, find)
det(formula, a)
obj(find, formula)
case(probability, for)
det(probability, the)
nmod(formula, probability)
case(success, of)
advmod(x, exactly)
compound(success, x)
nmod(probability, success)
case(value, for)
amod(value, give)
nmod(success, value)
case(p, of)
nmod(value, p)
cc(N, and)
conj(p, N)
punct(value, .)
mark(pair, when)
det(number, each)
nsubj:pass(pair, number)
case(success, of)
nmod(number, success)
punct(pair, X)
aux:pass(pair, be)
advcl(find, pair)
case(probability, with)
nmod:poss(probability, its)
obl(pair, probability)
case(occurrence, of)
nmod(probability, occurrence)
nsubj(function, Af)
punct(function, ,)
det(set, the)
appos(Af, set)
case(Af, of)
compound(Af, pair)
nmod(set, Af)
punct(function, ,)
cop(function, be)
det(function, a)
compound(function, probability)
root(ROOT, function)
acl(function, call)
det(distribution, a)
amod(distribution, binomial)
obj(call, distribution)
punct(function, .)
det(choice, the)
nsubj(determine, choice)
case(p, of)
nmod(choice, p)
cc(N, and)
conj(p, N)
root(ROOT, determine)
det(distribution, the)
amod(distribution, binomial)
obj(determine, distribution)
advmod(determine, uniquely)
punct(produce, ,)
cc(produce, and)
amod(choice, different)
nsubj(produce, choice)
advmod(produce, always)
conj(determine, produce)
amod(distribution, different)
obj(produce, distribution)
punct(produce, ()
case(Af, except)
mark(Af, when)
obl(produce, Af)
punct(produce, ;)
punct(0, ;)
advmod(0, then)
det(number, the)
nsubj(0, number)
case(success, of)
nmod(number, success)
cop(0, be)
advmod(0, always)
parataxis(determine, 0)
punct(0, ))
punct(determine, .)
det(set, the)
nsubj:pass(call, set)
case(distribution, of)
det(distribution, all)
amod(distribution, binomial)
nmod(set, distribution)
aux:pass(call, be)
root(ROOT, call)
det(family, the)
obj(call, family)
case(distribution, of)
amod(distribution, binomial)
nmod(family, distribution)
punct(shorten, ,)
cc(shorten, but)
case(discussion, in)
amod(discussion, general)
obl(shorten, discussion)
det(expression, this)
nsubj:pass(shorten, expression)
aux:pass(shorten, be)
advmod(shorten, often)
conj(call, shorten)
case(distribution, to)
punct(distribution, ``)
det(distribution, the)
amod(distribution, binomial)
obl(shorten, distribution)
punct(distribution, '')
punct(binomial, ,)
cc(binomial, or)
advmod(binomial, even)
punct(binomial, ``)
det(binomial, the)
conj(distribution, binomial)
punct(binomial, '')
mark(clear, when)
det(context, the)
nsubj(clear, context)
cop(clear, be)
advcl(treat, clear)
punct(treat, .)
amod(distribution, binomial)
nsubj:pass(treat, distribution)
aux:pass(treat, be)
acl:relcl(binomial, treat)
case(James, by)
obl(treat, James)
flat(James, bernoulli)
case(1700, about)
obl(treat, 1700)
punct(call, ,)
cc(call, and)
case(reason, for)
det(reason, this)
obl(call, reason)
amod(trial, binomial)
nsubj:pass(call, trial)
aux:pass(call, be)
advmod(call, sometimes)
conj(treat, call)
compound(trial, bernoulli)
obj(call, trial)
punct(call, .)
amod(variable, Random)
root(ROOT, variable)
punct(variable, .)
det(trial, each)
amod(trial, binomial)
nsubj(produce, trial)
case(experiment, of)
det(experiment, a)
amod(experiment, binomial)
nmod(trial, experiment)
root(ROOT, produce)
cc:preconj(0, either)
nummod(success, 0)
cc(1, or)
conj(0, 1)
obj(produce, success)
punct(produce, .)
advmod(think, therefore)
det(trial, each)
amod(trial, binomial)
nsubj:pass(think, trial)
aux(think, can)
aux:pass(think, be)
root(ROOT, think)
obl(think, of)
mark(produce, as)
advcl(think, produce)
det(value, a)
obj(produce, value)
case(variable, of)
det(variable, a)
amod(variable, random)
nmod(value, variable)
acl(variable, associate)
case(trial, with)
det(trial, that)
obl(associate, trial)
cc(take, and)
conj(associate, take)
det(value, the)
obj(take, value)
nummod(value, 0)
cc(1, and)
conj(0, 1)
punct(take, ,)
case(q, with)
compound(q, probability)
obl(take, q)
cc(p, and)
conj(q, p)
advmod(q, respectively)
punct(think, .)
det(trial, the)
amod(trial, several)
nsubj(produce, trial)
case(experiment, of)
det(experiment, a)
amod(experiment, binomial)
nmod(trial, experiment)
root(ROOT, produce)
det(x, a)
amod(x, new)
amod(x, random)
amod(x, variable)
obj(produce, x)
punct(x, ,)
det(number, the)
amod(number, total)
appos(x, number)
case(success, of)
nmod(number, success)
punct(number, ,)
nsubj(sum, which)
cop(sum, be)
advmod(sum, just)
det(sum, the)
acl:relcl(number, sum)
case(variable, of)
det(variable, the)
amod(variable, random)
nmod(sum, variable)
acl(variable, associate)
case(trial, with)
det(trial, the)
amod(trial, single)
obl(associate, trial)
punct(produce, .)
compound(2, Example)
nummod(get, 2)
punct(2, .)
det(marksman, the)
nsubj(get, marksman)
root(ROOT, get)
nummod(bull, two)
nmod:poss(eye, bull)
case(bull, 's)
punct(eye, -)
obj(get, eye)
punct(eye, ,)
appos(eye, one)
case(shot, on)
nmod:poss(shot, he)
amod(shot, third)
nmod(one, shot)
cc(one, and)
conj(one, one)
case(fifth, on)
nmod:poss(fifth, he)
nmod(one, fifth)
punct(get, .)
det(number, the)
nsubj(be, number)
case(success, of)
nmod(number, success)
case(shot, on)
det(shot, the)
nummod(shot, five)
amod(shot, individual)
nmod(success, shot)
root(ROOT, be)
punct(be, ,)
advmod(0, then)
punct(0, ,)
parataxis(be, 0)
punct(0, ,)
compound(0, 0)
punct(0, ,)
compound(0, 1)
punct(0, ,)
compound(0, 0)
punct(1, ,)
nummod(value, 1)
punct(1, .)
det(number, the)
nsubj(value, number)
case(success, of)
nmod(number, success)
case(shot, on)
det(shot, each)
nmod(success, shot)
cop(value, be)
det(value, a)
ccomp(be, value)
case(variable, of)
det(variable, a)
amod(variable, random)
nmod(value, variable)
nsubj(have, that)
acl:relcl(variable, have)
obj(have, value)
nummod(value, 0)
cc(1, or)
conj(0, 1)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(have, be)
nummod(variable, 5)
amod(variable, such)
amod(variable, random)
nsubj(be, variable)
advmod(be, here)
punct(value, .)
nmod:poss(sum, they)
nsubj(x, sum)
cop(x, be)
root(ROOT, x)
punct(x, ,)
det(number, the)
amod(number, total)
appos(x, number)
case(success, of)
nmod(number, success)
punct(success, ,)
nsubj(have, which)
case(experiment, in)
det(experiment, this)
obl(have, experiment)
acl:relcl(success, have)
det(Af, the)
compound(Af, value)
obj(have, Af)
punct(consider, .)
parataxis(x, consider)
det(c, a)
amod(c, simple)
punct(c, ,)
amod(c, close)
punct(c, ,)
compound(curve, plane)
compound(c, curve)
obj(consider, c)
nsubj(image, which)
cop(image, be)
det(image, a)
amod(analytic, real)
punct(analytic, -)
amod(image, analytic)
acl:relcl(c, image)
case(circle, of)
det(circle, the)
compound(circle, unit)
nmod(image, circle)
punct(give, ,)
cc(give, and)
nsubj:pass(give, which)
aux:pass(give, be)
conj(image, give)
case(Af, by)
obl(give, Af)
punct(x, .)
nsubj(function, these)
cop(function, be)
amod(function, real)
amod(function, analytic)
amod(function, periodic)
root(ROOT, function)
case(T, with)
compound(T, period)
nmod(function, T)
punct(function, .)
case(paper, in)
det(paper, the)
amod(paper, follow)
obl(show, paper)
nsubj:pass(show, it)
aux:pass(show, be)
root(ROOT, show)
mark(inscribe, that)
case(sense, in)
det(sense, a)
amod(sense, certain)
amod(sense, definite)
obl(inscribe, sense)
punct(inscribe, ,)
advmod(inscribe, exactly)
det(number, a)
amod(number, odd)
nsubj:pass(inscribe, number)
case(square, of)
nmod(number, square)
aux(inscribe, can)
aux:pass(inscribe, be)
ccomp(show, inscribe)
case(curve, in)
det(curve, every)
amod(curve, such)
obl(inscribe, curve)
nsubj(contain, which)
aux(contain, do)
advmod(contain, not)
acl:relcl(curve, contain)
det(number, a)
amod(number, infinite)
obj(contain, number)
case(square, of)
amod(square, inscribe)
nmod(number, square)
punct(show, .)
det(theorem, this)
nsubj(similar, theorem)
cop(similar, be)
root(ROOT, similar)
case(theorem, to)
det(theorem, the)
obl(similar, theorem)
case(Kakutani, of)
nmod(theorem, Kakutani)
mark(exist, that)
expl(exist, there)
ccomp(similar, exist)
det(cube, a)
compound(cube, circumscribe)
obj(exist, cube)
case(set, around)
det(set, any)
amod(set, close)
punct(set, ,)
amod(set, bounded)
amod(set, convex)
xcomp(exist, set)
case(Af, in)
obl(set, Af)
punct(generalize, .)
det(theorem, the)
amod(theorem, latter)
nsubj:pass(generalize, theorem)
aux(generalize, have)
aux:pass(generalize, be)
parataxis(similar, generalize)
case(yamabe, by)
obl(generalize, yamabe)
cc(Yujobo, and)
conj(yamabe, Yujobo)
punct(show, ,)
cc(cairn, and)
conj(yamabe, cairn)
mark(show, to)
advcl(generalize, show)
mark(be, that)
case(Af, in)
obl(be, Af)
expl(be, there)
ccomp(show, be)
nsubj(be, family)
case(cube, of)
amod(cube, such)
nmod(family, cube)
punct(similar, .)
advmod(remove, here)
punct(remove, ,)
case(case, for)
det(case, the)
obl(remove, case)
case(square, of)
nmod(case, square)
acl(square, inscribe)
case(curve, in)
compound(curve, plane)
obl(inscribe, curve)
punct(remove, ,)
nsubj(remove, we)
root(ROOT, remove)
det(restriction, the)
obj(remove, restriction)
case(convexity, to)
nmod(restriction, convexity)
cc(give, and)
conj(remove, give)
amod(result, certain)
amod(result, other)
obj(give, result)
punct(remove, . )
det(square, a)
nsubj(mean, square)
acl(square, inscribe)
case(c, in)
det(c, a)
compound(c, curve)
obl(inscribe, c)
root(ROOT, mean)
det(square, a)
obj(mean, square)
case(point, with)
nmod:poss(point, its)
nummod(point, four)
compound(point, corner)
nmod(square, point)
case(curve, on)
det(curve, the)
nmod(point, curve)
punct(mean, ,)
mark(lie, though)
nsubj(lie, it)
aux(lie, may)
advmod(lie, not)
advcl(mean, lie)
advmod(interior, entirely)
case(interior, in)
det(interior, the)
obl(lie, interior)
case(C, of)
nmod(interior, C)
punct(lie, .)
advmod(Af, indeed)
punct(Af, ,)
det(Af, the)
amod(Af, spiral)
nsubj(possess, Af)
punct(possess, ,)
case(endpoint, with)
det(endpoint, the)
nummod(endpoint, two)
obl(possess, endpoint)
acl(endpoint, connect)
case(line, by)
det(line, a)
amod(line, straight)
obl(connect, line)
parataxis(mean, possess)
advmod(square, only)
nummod(square, one)
amod(square, inscribe)
obj(possess, square)
punct(mean, .)
det(square, the)
nsubj(have, square)
root(ROOT, have)
nummod(point, one)
compound(point, corner)
obj(have, point)
case(segment, on)
det(segment, the)
amod(segment, straight)
compound(segment, line)
nmod(point, segment)
punct(lie, ,)
cc(lie, and)
aux(lie, do)
advmod(lie, not)
conj(have, lie)
advmod(lie, entirely)
case(interior, in)
det(interior, the)
obl(lie, interior)
punct(have, .)
case(C, on)
obl(construct, C)
punct(construct, ,)
case(p, from)
det(p, the)
compound(p, point)
obl(construct, p)
case(Af, at)
nmod(p, Af)
case(q, to)
det(q, the)
compound(q, point)
nmod(Af, q)
case(Af, at)
nmod(q, Af)
punct(construct, ,)
nsubj(construct, we)
root(ROOT, construct)
det(chord, the)
obj(construct, chord)
punct(erect, ,)
cc(erect, and)
case(chord, upon)
det(chord, the)
obl(erect, chord)
case(side, as)
det(side, a)
nmod(chord, side)
conj(construct, erect)
det(square, a)
obj(erect, square)
case(way, in)
det:predet(way, such)
det(way, a)
obl(erect, way)
mark(c, that)
mark(c, as)
case(square, 's)
nsubj(c, approach)
det:predet(square, zero)
det(square, the)
nsubj(c, square)
cop(c, be)
case(c, inside)
acl(way, c)
punct(c, .)
mark(increase, as)
cop(increase, be)
advcl(c, increase)
nsubj(consider, we)
acl:relcl(increase, consider)
det(point, the)
nummod(point, two)
amod(corner, free)
compound(point, corner)
obj(consider, point)
case(square, of)
det(square, the)
nmod(point, square)
punct(Af, ,)
conj(square, Af)
cc(Af, and)
conj(square, Af)
punct(adjacent, ,)
amod(point, adjacent)
case(p, to)
obl(adjacent, p)
cc(q, and)
conj(p, q)
advmod(p, respectively)
punct(adjacent, .)
mark(c, as)
case(q, 's)
nsubj(c, approach)
case(square, T)
det(square, the)
nmod(approach, square)
aux(c, will)
cop(c, be)
case(c, outside)
advcl(adjacent, c)
cc(cross, and)
advmod(cross, therefore)
cc:preconj(Af, both)
nsubj(cross, Af)
cc(Af, and)
conj(Af, Af)
aux(cross, must)
conj(c, cross)
obj(cross, C)
det(number, a)
amod(number, odd)
obj(cross, number)
case(time, of)
nmod(number, time)
mark(vary, as)
aux(vary, be)
advcl(cross, vary)
case(zero, from)
obl(vary, zero)
case(T, to)
obl(vary, T)
punct(touch, .)
det(point, the)
nsubj(touch, point)
aux(touch, may)
advmod(touch, also)
parataxis(vary, touch)
obj(touch, C)
case(crossing, without)
obl(touch, crossing)
punct(construct, .)
root(ROOT, suppose)
nsubj(cross, Af)
ccomp(suppose, cross)
obj(cross, C)
mark(have, when)
nsubj(have, Af)
punct(suppose, .)
nsubj(have, we)
advmod(have, now)
parataxis(suppose, have)
amod(square, certain)
obj(have, square)
case(corner, with)
nummod(corner, three)
nmod(square, corner)
case(c, on)
nmod(corner, c)
punct(have, .)
case(square, for)
det(square, any)
amod(square, such)
obl(call, square)
det(corner, the)
amod(corner, middle)
nsubj:pass(call, corner)
case(these, of)
nmod(corner, these)
aux(call, will)
aux:pass(call, be)
parataxis(suppose, call)
det(vertex, the)
xcomp(call, vertex)
case(square, of)
det(square, the)
nmod(vertex, square)
cc(call, and)
det(corner, the)
nsubj:pass(call, corner)
advmod(curve, not)
case(curve, on)
det(curve, the)
nmod(corner, curve)
aux(call, will)
aux:pass(call, be)
conj(call, call)
det(point, the)
amod(point, diagonal)
obj(call, point)
case(square, of)
det(square, the)
nmod(point, square)
punct(suppose, .)
det(point, each)
nsubj(possess, point)
case(C, on)
nmod(point, C)
punct(possess, ,)
case(vertex, as)
det(vertex, a)
obl(possess, vertex)
punct(possess, ,)
aux(possess, may)
root(ROOT, possess)
det(number, a)
amod(number, finite)
obj(possess, number)
case(point, of)
amod(point, corresponding)
amod(point, diagonal)
nmod(number, point)
case(construction, by)
det(construction, the)
amod(construction, above)
nmod(point, construction)
punct(possess, .)
case(vertex, to)
det(vertex, each)
amod(vertex, pair)
obl(correspond, vertex)
cc(point, and)
amod(point, diagonal)
conj(vertex, point)
expl(correspond, there)
conj(possess, correspond)
det(point, a)
amod(point, unique)
amod(point, forward)
compound(point, corner)
obj(correspond, point)
punct(point, ,)
advmod(correspond, i.e.)
punct(point, ,)
det(corner, the)
appos(point, corner)
case(C, on)
nmod(corner, C)
acl(corner, reach)
advmod(reach, first)
mark(proceed, by)
advcl(reach, proceed)
case(c, along)
obl(proceed, c)
case(vertex, from)
det(vertex, the)
obl(proceed, vertex)
case(direction, in)
det(direction, the)
obl(proceed, direction)
mark(increase, of)
acl(direction, increase)
obj(increase, T)
punct(possess, .)
mark(Af, if)
det(vertex, the)
nsubj(Af, vertex)
cop(Af, be)
case(Af, at)
advcl(find, Af)
punct(left, ,)
cc(left, and)
mark(left, if)
det(interior, the)
nsubj(left, interior)
case(C, of)
nmod(interior, C)
cop(left, be)
case(left, on)
det(left, the)
conj(Af, left)
mark(move, as)
nsubj(move, one)
advcl(left, move)
case(direction, in)
det(direction, the)
obl(move, direction)
mark(increase, of)
acl(direction, increase)
obj(increase, t)
punct(find, ,)
advmod(find, then)
det(corner, every)
amod(corner, such)
nsubj:pass(find, corner)
aux(find, can)
aux:pass(find, be)
root(ROOT, find)
case(curve, from)
det(curve, the)
obl(find, curve)
acl(curve, obtain)
mark(rotate, by)
advcl(obtain, rotate)
compound(clockwise, c)
obj(rotate, clockwise)
case(degree, through)
nummod(degree, 90)
punct(degree, -)
obl(rotate, degree)
case(vertex, about)
det(vertex, the)
obl(rotate, vertex)
punct(find, .)
det(set, the)
nsubj(consist, set)
case(intersection, of)
nmod(set, intersection)
case(Af, of)
nmod(intersection, Af)
punct(set, ,)
det(curve, the)
amod(curve, rotate)
appos(set, curve)
punct(set, ,)
case(c, with)
det(c, the)
amod(c, original)
compound(c, curve)
obl(consist, c)
root(ROOT, consist)
case(set, of)
advmod(set, just)
det(set, the)
obl(consist, set)
case(point, of)
amod(corner, forward)
compound(point, corner)
nmod(set, point)
case(c, on)
nmod(point, c)
acl(c, corresponding)
case(vertex, to)
det(vertex, the)
obl(corresponding, vertex)
case(Af, at)
nmod(vertex, Af)
punct(vertex, ,)
cc(vertex, plus)
det(vertex, the)
conj(vertex, vertex)
nmod:npmod(vertex, itself)
punct(consist, .)
nsubj(note, we)
root(ROOT, note)
mark(coincide, that)
nummod(C, two)
amod(C, such)
compound(C, curve)
nsubj(coincide, C)
cc(Af, and)
conj(C, Af)
punct(coincide, ,)
aux(coincide, can)
advmod(coincide, not)
ccomp(note, coincide)
case(more, at)
obl(coincide, more)
case(number, than)
det(number, a)
amod(number, finite)
obl(coincide, number)
case(point, of)
nmod(number, point)
punct(coincide, ;)
punct(note, ;)
advmod(coincide, otherwise)
punct(coincide, ,)
cop(analytic, be)
advcl(coincide, analytic)
punct(coincide, ,)
nsubj(coincide, they)
aux(coincide, would)
parataxis(note, coincide)
case(point, at)
det(point, all)
obl(coincide, point)
punct(point, ,)
nsubj(impossible, which)
cop(impossible, be)
acl:relcl(point, impossible)
mark(coincide, since)
nsubj(coincide, they)
aux(coincide, do)
advmod(coincide, not)
advcl(impossible, coincide)
case(Af, near)
obl(coincide, Af)
punct(coincide, .)
case(vertex, with)
det(vertex, each)
obl(coincide, vertex)
nsubj(associate, we)
acl:relcl(vertex, associate)
amod(value, certain)
amod(value, numerical)
obj(associate, value)
punct(value, ,)
advmod(set, namely)
det(set, the)
appos(value, set)
case(difference, of)
amod(difference, positive)
nmod(set, difference)
case(T, in)
det(T, the)
compound(T, parameter)
nmod(difference, T)
case(vertex, between)
det(vertex, the)
nmod(T, vertex)
cc(point, and)
nmod:poss(point, its)
amod(point, corresponding)
amod(point, forward)
compound(point, corner)
conj(vertex, point)
punct(note, .)
case(vertex, for)
det(vertex, the)
obl(denote, vertex)
case(Af, at)
nmod(vertex, Af)
punct(denote, ,)
det(value, these)
nsubj:pass(denote, value)
aux(denote, will)
aux:pass(denote, be)
root(ROOT, denote)
case(Af, by)
obl(denote, Af)
punct(feer, .)
det(feer, the)
compound(feer, function)
parataxis(denote, feer)
punct(feer, })
acl(feer, define)
case(way, in)
det(way, this)
obl(define, way)
aux:pass(multi-value, be)
acl:relcl(feer, multi-value)
punct(denote, .)
nsubj(consider, we)
root(ROOT, consider)
advmod(consider, now)
det(graph, the)
obj(consider, graph)
case(feer, of)
det(feer, the)
compound(feer, function)
nmod(graph, feer)
punct(feer, })
case(Af, on)
nmod(feer, Af)
punct(refer, .)
nsubj(refer, we)
aux(refer, will)
parataxis(consider, refer)
case(plane, to)
det(plane, the)
obl(refer, plane)
case(c, of)
nmod(plane, c)
cc(Af, and)
conj(c, Af)
case(C-plane, as)
det(C-plane, the)
nmod(plane, C-plane)
cc(plane, and)
case(plane, to)
det(plane, the)
conj(C-plane, plane)
case(graph, of)
det(graph, the)
nmod(plane, graph)
case(Aj, as)
det(Aj, the)
nmod(graph, Aj)
punct(graph, .)
det(graph, the)
appos(Aj, graph)
punct(graph, ,)
case(set, as)
det(set, a)
nmod(graph, set)
punct(have, ,)
aux(have, may)
acl(graph, have)
det(number, a)
amod(number, finite)
obj(have, number)
case(component, of)
nmod(number, component)
punct(consider, .)
nsubj(denote, we)
aux(denote, will)
root(ROOT, denote)
det(value, the)
obj(denote, value)
case(feer, of)
nmod(value, feer)
punct(value, })
case(component, on)
amod(component, different)
obl(denote, component)
case(Af, by)
nmod(component, Af)
punct(denote, .)
det(point, each)
obl:tmod(denote, point)
case(T, with)
compound(T, abscissa)
nmod(point, T)
case(graph, on)
det(graph, the)
nmod(T, graph)
parataxis(denote, represent)
det(intersection, a)
obj(represent, intersection)
case(c, between)
nmod(intersection, c)
cc(Af, and)
conj(c, Af)
punct(denote, .)
expl(be, there)
parataxis(denote, be)
nummod(type, two)
nsubj(be, type)
case(intersection, of)
amod(intersection, such)
nmod(type, intersection)
punct(type, ,)
case(essentially, depend)
advmod(cross, essentially)
mark(cross, on)
mark(cross, whether)
det(curve, the)
nsubj(cross, curve)
acl(type, cross)
case(point, at)
det(point, the)
obl(cross, point)
case(intersection, of)
nmod(point, intersection)
punct(denote, .)
det(point, a)
amod(point, ordinary)
nsubj(point, point)
aux(point, will)
cop(point, be)
det(point, any)
root(ROOT, point)
case(intersection, of)
nmod(point, intersection)
det(such, a)
amod(point, such)
mark(meet, that)
case(neighborhood, in)
det(neighborhood, every)
obl(meet, neighborhood)
case(C-plane, of)
det(C-plane, a)
case(C-plane, in)
det(C-plane, the)
nmod(neighborhood, C-plane)
punct(meet, ,)
nsubj(meet, Af)
ccomp(such, meet)
cc:preconj(interior, both)
det(interior, the)
obj(meet, interior)
cc(exterior, and)
det(exterior, the)
conj(interior, exterior)
case(c, of)
nmod(exterior, c)
punct(meet, .)
det(point, any)
amod(point, other)
nsubj:pass(call, point)
case(intersection, of)
nmod(point, intersection)
case(c, between)
nmod(intersection, c)
cc(Af, and)
conj(c, Af)
aux(call, will)
aux:pass(call, be)
parataxis(point, call)
det(point, a)
compound(point, tangent)
obj(call, point)
punct(point, .)
det(terminology, this)
nsubj:pass(apply, terminology)
aux(apply, will)
advmod(apply, also)
aux:pass(apply, be)
ccomp(Proof, apply)
case(point, to)
det(point, the)
amod(point, corresponding)
obl(apply, point)
case(Aj, in)
det(Aj, the)
nmod(point, Aj)
punct(apply, .)
nsubj(prove, we)
aux(prove, can)
advmod(prove, now)
parataxis(apply, prove)
amod(lemma, several)
obj(prove, lemma)
punct(1, .)
compound(1, Lemma)
nummod(prove, 1)
punct(1, .)
case(neighborhood, in)
det(neighborhood, some)
obl(prove, neighborhood)
case(f-plane, in)
det(f-plane, the)
nmod(neighborhood, f-plane)
case(point, of)
det(point, any)
amod(point, ordinary)
nmod(f-plane, point)
case(graph, of)
det(graph, the)
nmod(point, graph)
punct(Proof, ,)
det(f, the)
compound(f, function)
nsubj(function, f)
cop(function, be)
det(function, a)
compound(value, single)
punct(value, -)
amod(function, value)
punct(function, ,)
amod(function, continuous)
compound(Proof, function)
punct(Proof, .)
root(ROOT, Proof)
punct(Proof, .)
nsubj(show, we)
advmod(show, first)
root(ROOT, show)
mark(value, that)
det(function, the)
nsubj:pass(value, function)
aux:pass(value, be)
advmod(value, single)
punct(value, -)
ccomp(show, value)
case(neighborhood, in)
det(neighborhood, some)
obl(value, neighborhood)
punct(show, .)
case(vertex, with)
det(vertex, the)
obl(assume, vertex)
case(Af, at)
nmod(vertex, Af)
case(C-plane, in)
det(C-plane, the)
nmod(vertex, C-plane)
nsubj(assume, we)
root(ROOT, assume)
mark(location, that)
nsubj(location, Af)
cop(location, be)
det(location, the)
amod(location, parametric)
ccomp(assume, location)
case(C, on)
nmod(location, C)
case(q, of)
det(q, a)
amod(q, ordinary)
compound(q, intersection)
nmod(C, q)
case(C, between)
nmod(q, C)
cc(Af, and)
conj(C, Af)
punct(assume, .)
case(plane, in)
det(plane, the)
compound(plane, f)
punct(plane, -)
obl(Af, plane)
det(coordinate, the)
nsubj(Af, coordinate)
case(point, of)
det(point, the)
amod(point, corresponding)
nmod(coordinate, point)
cop(Af, be)
root(ROOT, Af)
punct(Af, .)
nsubj(know, we)
parataxis(Af, know)
mark(analytic, that)
case(C-plane, in)
det(C-plane, the)
obl(analytic, C-plane)
cc:preconj(c, both)
nsubj(analytic, c)
cc(Af, and)
conj(c, Af)
cop(analytic, be)
ccomp(know, analytic)
punct(Af, .)
case(plane, in)
det(plane, the)
compound(plane, c)
punct(plane, -)
obl(construct, plane)
nsubj(construct, we)
root(ROOT, construct)
det(set, a)
obj(construct, set)
case(coordinate, of)
amod(coordinate, rectangular)
compound(coordinate, cartesian)
nmod(set, coordinate)
nsubj(V, u)
punct(V, ,)
appos(set, V)
case(origin, with)
det(origin, the)
nmod(V, origin)
case(q, at)
nmod(origin, q)
cc(such, and)
mark(have, such)
fixed(such, that)
cc:preconj(c, both)
nsubj(have, c)
cc(Af, and)
conj(c, Af)
conj(construct, have)
amod(slope, finite)
obj(have, slope)
case(q, at)
nmod(slope, q)
punct(have, .)
case(q, Near)
obl(have, q)
punct(represent, ,)
det(curve, both)
nsubj:pass(represent, curve)
aux(represent, can)
aux:pass(represent, be)
parataxis(have, represent)
case(function, by)
amod(function, analytic)
obl(represent, function)
case(u, of)
nmod(function, u)
punct(construct, .)
case(neighborhood, in)
det(neighborhood, a)
obl(function, neighborhood)
case(q, of)
nmod(neighborhood, q)
det(difference, the)
nsubj(function, difference)
case(function, between)
det(function, these)
nmod(difference, function)
cop(function, be)
advmod(function, also)
det(function, a)
amod(value, single)
punct(value, -)
amod(function, value)
punct(function, ,)
amod(function, analytic)
root(ROOT, function)
case(U, of)
nmod(function, U)
punct(function, .)
advmod(find, furthermore)
punct(find, ,)
nsubj(find, one)
aux(find, can)
parataxis(function, find)
det(neighborhood, a)
obj(find, neighborhood)
case(q, of)
nmod(neighborhood, q)
case(which, in)
obl(monotone, which)
det(function, the)
compound(function, difference)
nsubj(monotone, function)
cop(monotone, be)
acl:relcl(neighborhood, monotone)
punct(monotone, ,)
mark(analytic, for)
mark(analytic, since)
nsubj(analytic, it)
cop(analytic, be)
advcl(monotone, analytic)
nsubj(have, it)
aux(have, can)
ccomp(analytic, have)
advmod(number, only)
det(number, a)
amod(number, finite)
obj(have, number)
case(extrema, of)
nmod(number, extrema)
case(interval, in)
det(interval, any)
nmod(extrema, interval)
punct(have, .)
advmod(find, now)
punct(find, ,)
mark(find, to)
advcl(need, find)
obj(find, Af)
punct(need, ,)
nsubj(need, one)
parataxis(have, need)
det(intersection, the)
obj(need, intersection)
case(C, of)
nmod(intersection, C)
cc(Af, and)
conj(C, Af)
case(q, near)
nmod(C, q)
punct(function, .)
cc(Af, but)
nsubj(Af, Af)
cop(Af, be)
advmod(Af, just)
det(Af, the)
compound(Af, curve)
root(ROOT, Af)
acl(Af, translate)
case(rotation, without)
obl(translate, rotation)
case(arc, through)
det(arc, a)
amod(arc, small)
obl(translate, arc)
punct(Af, ,)
case(Af, for)
obl(obtain, Af)
aux:pass(obtain, be)
advmod(obtain, always)
conj(Af, obtain)
mark(rotate, by)
advcl(obtain, rotate)
obj(rotate, c)
case(degree, through)
advmod(degree, exactly)
nummod(degree, 90)
punct(degree, -)
obl(rotate, degree)
punct(Af, .)
det(arc, the)
nsubj(segment, arc)
cop(segment, be)
nsubj(segment, itself)
det(segment, a)
root(ROOT, segment)
case(curve, of)
det(curve, a)
amod(curve, analytic)
nmod(segment, curve)
punct(segment, .)
advmod(small, thus)
mark(small, if)
nsubj(small, e)
cop(small, be)
advmod(small, sufficiently)
advcl(be, small)
punct(be, ,)
expl(be, there)
aux(be, can)
conj(segment, be)
advmod(intersection, only)
nummod(intersection, one)
nsubj(be, intersection)
case(C, of)
nmod(intersection, C)
cc(Af, and)
conj(C, Af)
case(q, near)
nmod(C, q)
punct(be, ,)
mark(be, for)
mark(be, if)
expl(be, there)
advcl(be, be)
advmod(one, more)
fixed(more, than)
nummod(intersection, one)
nsubj(be, intersection)
case(e, for)
det(e, every)
nmod(intersection, e)
advmod(function, then)
det(difference, the)
nsubj(function, difference)
case(C, between)
nmod(difference, C)
cc(Af, and)
conj(C, Af)
case(q, near)
nmod(C, q)
aux(function, would)
advmod(function, not)
cop(function, be)
det(function, a)
amod(function, monotone)
conj(be, function)
punct(segment, .)
advmod(value, therefore)
punct(value, ,)
nsubj(value, Af)
cop(value, be)
amod(value, single)
punct(value, -)
root(ROOT, value)
case(q, near)
obl(value, q)
punct(value, .)
nsubj:pass(see, it)
aux:pass(see, be)
advmod(see, also)
root(ROOT, see)
det(Af, that)
obj(see, Af)
punct(see, ,)
mark(accomplish, since)
det(change, the)
nsubj:pass(accomplish, change)
case(Af, from)
nmod(change, Af)
case(Af, to)
nmod(Af, Af)
aux:pass(accomplish, be)
advcl(see, accomplish)
case(translation, by)
det(translation, a)
amod(translation, continuous)
obl(accomplish, translation)
punct(accomplish, .)
advmod(continuous, thus)
nsubj(continuous, Af)
cop(continuous, be)
advmod(continuous, also)
conj(see, continuous)
case(Af, at)
obl(continuous, Af)
punct(neighborhood, ,)
cc(neighborhood, and)
case(neighborhood, in)
det(neighborhood, a)
conj(continuous, neighborhood)
case(Af, of)
nmod(neighborhood, Af)
nsubj(contain, which)
aux(contain, do)
advmod(contain, not)
acl:relcl(neighborhood, contain)
det(point, a)
compound(point, tangent)
obj(contain, point)
punct(see, .)
nsubj(turn, we)
root(ROOT, turn)
advmod(turn, now)
case(set, to)
det(set, the)
obl(turn, set)
case(point, of)
compound(point, tangent)
nmod(set, point)
case(graph, on)
det(graph, the)
nmod(point, graph)
punct(turn, .)
det(set, this)
nsubj(consist, set)
aux(consist, must)
root(ROOT, consist)
case(point, of)
amod(point, isolate)
obl(consist, point)
cc(interval, and)
amod(interval, close)
conj(point, interval)
punct(consist, .)
det(fact, the)
root(ROOT, fact)
mark(be, that)
expl(be, there)
aux(be, can)
advmod(be, not)
acl(fact, be)
det(point, any)
compound(point, limit)
nsubj(be, point)
case(set, of)
det(set, the)
nmod(point, set)
case(interval, except)
case(interval, in)
amod(interval, close)
nmod(set, interval)
conj(be, follow)
case(argument, from)
det(argument, the)
obl(follow, argument)
acl(argument, use)
case(Lemma, in)
obl(use, Lemma)
nummod(Lemma, 1)
punct(use, ,)
advmod(follow, namely)
punct(follow, ,)
mark(analytic, that)
case(point, near)
det(point, any)
compound(point, tangent)
obl(analytic, point)
case(plane, in)
det(plane, the)
compound(plane, C-)
nmod(point, plane)
det(c, the)
compound(c, curve)
nsubj(analytic, c)
cc(Af, and)
conj(c, Af)
cop(analytic, be)
conj(follow, analytic)
punct(function, ,)
cc(function, and)
advmod(function, therefore)
det(difference, the)
nsubj(function, difference)
case(they, between)
nmod(difference, they)
aux(function, must)
cop(function, be)
det(function, a)
amod(function, monotone)
conj(analytic, function)
case(neighborhood, in)
det(neighborhood, some)
nmod(function, neighborhood)
case(side, on)
cc:preconj(side, either)
obl(function, side)
case(point, of)
det(point, the)
compound(point, tangent)
nmod(side, point)
punct(fact, .)
nsubj(prevent, this)
root(ROOT, prevent)
det(occurrence, the)
obj(prevent, occurrence)
case(sequence, of)
det(sequence, a)
amod(sequence, infinite)
nmod(occurrence, sequence)
case(point, of)
amod(point, isolate)
compound(point, tangent)
nmod(sequence, point)
punct(2, .)
parataxis(prevent, Lemma)
nummod(neighborhood, 2)
punct(2, .)
case(neighborhood, in)
det(neighborhood, some)
obl(prevent, neighborhood)
case(point, of)
det(point, a)
amod(point, isolate)
compound(point, tangent)
nmod(neighborhood, point)
case(f-plane, in)
det(f-plane, the)
nmod(point, f-plane)
punct(say, ,)
conj(prevent, say)
obj(say, Af)
punct(say, ,)
det(Af, the)
compound(Af, function)
nsubj:pass(value, Af)
aux:pass(value, be)
cc:preconj(value, either)
advmod(value, double)
punct(value, -)
ccomp(say, value)
cc(have, or)
conj(value, have)
det(value, no)
obj(have, value)
acl(value, define)
punct(define, ,)
case(point, except)
case(point, at)
det(point, the)
compound(point, tangent)
obl(define, point)
nmod:npmod(point, itself)
punct(point, ,)
advmod(value, where)
nsubj:pass(value, it)
aux:pass(value, be)
advmod(value, single)
punct(value, -)
acl:relcl(point, value)
punct(prevent, .)
root(ROOT, Proof)
punct(Proof, . )
det(q, a)
compound(point, tangent)
compound(q, point)
nsubj(occur, q)
case(C-plane, in)
det(C-plane, the)
nmod(q, C-plane)
root(ROOT, occur)
mark(tangent, when)
nsubj(tangent, C)
cc(Af, and)
conj(C, Af)
cop(tangent, be)
advcl(occur, tangent)
case(another, to)
nummod(another, one)
nmod(tangent, another)
punct(tangent, .)
det(change, a)
amod(change, continuous)
appos(tangent, change)
case(T, in)
nmod(change, T)
case(result, through)
det(result, a)
compound(result, amount)
compound(result, e)
nmod(change, result)
case(translation, in)
det(translation, a)
nmod(result, translation)
case(arc, along)
det(arc, a)
amod(arc, analytic)
nmod(translation, arc)
case(Af, of)
det(Af, the)
compound(Af, curve)
nmod(arc, Af)
punct(be, .)
expl(be, there)
parataxis(change, be)
nummod(possibility, three)
nsubj(be, possibility)
punct(be, :)
root(ROOT, ()
root(ROOT, a)
punct(a, ))
nsubj(remain, Af)
root(ROOT, remain)
xcomp(remain, tangent)
case(C, to)
nmod(tangent, C)
mark(translate, as)
nsubj:pass(translate, it)
aux:pass(translate, be)
advcl(tangent, translate)
punct(tangent, ;)
punct(b, ;)
punct(b, ()
parataxis(tangent, b)
punct(b, ))
nsubj(move, Af)
root(ROOT, move)
advmod(move, away)
case(C, from)
obl(away, C)
cc(intersect, and)
aux(intersect, do)
advmod(intersect, not)
conj(move, intersect)
obj(intersect, it)
case(all, at)
obl(intersect, all)
case(Af, for)
obl(intersect, Af)
punct(intersect, ;)
punct(C, ;)
punct(C, ()
parataxis(move, C)
punct(C, ))
compound(cut, Af)
root(ROOT, cut)
case(C, across)
nmod(cut, C)
cc(be, and)
expl(be, there)
conj(cut, be)
nummod(intersection, two)
amod(intersection, ordinary)
nsubj(be, intersection)
case(T, for)
det(T, every)
nmod(intersection, T)
case(Af, in)
nmod(T, Af)
punct(result, .)
det(result, the)
amod(result, first)
compound(result, possibility)
appos(intersection, result)
case(interval, in)
det(interval, a)
amod(interval, close)
nmod(result, interval)
case(point, of)
compound(point, tangent)
nmod(interval, point)
case(f-plane, in)
det(f-plane, the)
nmod(point, f-plane)
punct(f-plane, ,)
det(point, the)
compound(point, end)
appos(f-plane, point)
case(which, of)
obl(fall, which)
acl:relcl(point, fall)
case(category, into)
obl(fall, category)
punct(b, ()
appos(category, b)
punct(b, ))
cc(c, or)
punct(c, ()
conj(category, c)
punct(c, ))
punct(result, .)
case(category, in)
det(category, the)
amod(category, second)
obl(have, category)
det(Af, the)
compound(Af, function)
nsubj(have, Af)
root(ROOT, have)
det(value, no)
obj(have, value)
acl(value, define)
case(Af, in)
det(Af, a)
compound(Af, neighborhood)
obl(define, Af)
punct(have, .)
case(category, in)
det(category, the)
amod(category, third)
obl(value, category)
det(function, the)
nsubj:pass(value, function)
aux:pass(value, be)
advmod(value, double)
punct(value, -)
parataxis(have, value)
case(interval, in)
det(interval, this)
obl(value, interval)
punct(have, .)
det(remark, the)
amod(remark, same)
nsubj(apply, remark)
root(ROOT, apply)
case(interval, to)
det(interval, a)
obl(apply, interval)
case(side, on)
det(side, the)
amod(side, other)
nmod(interval, side)
case(Af, of)
nmod(side, Af)
punct(apply, .)
advmod(apply, again)
punct(apply, ,)
det(analyticity, the)
parataxis(apply, analyticity)
case(guarantee, of)
det(guarantee, the)
nummod(curve, two)
compound(guarantee, curve)
nmod(analyticity, guarantee)
mark(exist, that)
amod(interval, such)
nsubj(exist, interval)
acl:relcl(guarantee, exist)
punct(apply, .)
case(neighborhood, in)
det(neighborhood, the)
obl(value, neighborhood)
case(point, of)
det(point, a)
compound(point, end)
nmod(neighborhood, point)
case(interval, of)
det(interval, a)
nmod(point, interval)
case(point, of)
compound(point, tangent)
nmod(interval, point)
case(f-plane, in)
det(f-plane, the)
nmod(point, f-plane)
det(function, the)
nsubj:pass(value, function)
aux:pass(value, be)
nummod(value, two)
punct(value, -)
root(ROOT, value)
cc(no-value, or)
conj(value, no-value)
case(side, on)
nummod(side, one)
obl(value, side)
punct(function, ,)
cc(function, and)
cop(function, be)
det(function, a)
amod(value, single)
punct(value, -)
amod(function, value)
conj(value, function)
acl(function, consist)
advmod(point, entirely)
case(point, of)
compound(point, tangent)
obl(consist, point)
case(side, on)
det(side, the)
amod(side, other)
obl(consist, side)
punct(value, .)
case(result, with)
det(result, the)
amod(result, above)
obl(make, result)
nsubj(make, we)
aux(make, can)
root(ROOT, make)
det(remark, the)
amod(remark, follow)
obj(make, remark)
case(graph, about)
det(graph, the)
nmod(remark, graph)
case(F, of)
nmod(graph, F)
punct(graph, .)
advmod(make, first)
punct(make, ,)
case(value, for)
det(value, any)
obl(make, value)
case(T, of)
nmod(value, T)
case(which, for)
obl(point, which)
det(value, all)
nsubj(point, value)
case(feer, of)
nmod(value, feer)
punct(point, })
cop(point, be)
amod(point, ordinary)
acl:relcl(value, point)
det(number, the)
nsubj(point, number)
case(value, of)
nmod(number, value)
case(feer, of)
nmod(value, feer)
punct(odd, })
aux(odd, must)
cop(odd, be)
acl:relcl(point, odd)
punct(make, .)
mark(clear, for)
expl(clear, it)
cop(clear, be)
advcl(return, clear)
mark(be, that)
det(number, the)
amod(number, total)
nsubj(be, number)
case(intersection, of)
amod(intersection, ordinary)
nmod(number, intersection)
case(C, of)
nmod(intersection, C)
cc(Af, and)
conj(C, Af)
aux(be, must)
ccomp(clear, be)
advmod(be, even)
punct(start, ()
advmod(start, otherwise)
punct(start, ,)
advcl(be, start)
case(interior, in)
det(interior, the)
obl(start, interior)
case(C, of)
nmod(interior, C)
punct(return, ,)
nsubj(return, Af)
aux(return, could)
advmod(return, not)
advmod(return, finally)
root(ROOT, return)
case(interior, to)
det(interior, the)
obl(return, interior)
punct(return, ))
punct(argument, ,)
cc(argument, and)
det(center, the)
nsubj(argument, center)
case(rotation, of)
nmod(center, rotation)
case(T, at)
nmod(rotation, T)
cop(argument, be)
det(argument, the)
conj(return, argument)
case(function, of)
det(function, the)
nmod(argument, function)
punct(value, ,)
advmod(value, not)
det(value, a)
appos(function, value)
punct(value, .)
advmod(value, therefore)
punct(value, ,)
case(value, for)
det(value, any)
obl(argument, value)
case(T, of)
nmod(value, T)
det(number, the)
nsubj(equal, number)
case(value, of)
nmod(number, value)
case(feer, of)
nmod(value, feer)
punct(equal, })
cop(equal, be)
acl:relcl(value, equal)
case(number, to)
det(number, the)
punct(number, ()
amod(number, finite)
punct(number, ))
obl(equal, number)
case(point, of)
compound(point, tangent)
nmod(number, point)
acl(point, corresponding)
case(T, to)
det(T, the)
compound(T, argument)
obl(corresponding, T)
cc(number, plus)
det(number, a)
amod(number, odd)
conj(T, number)
punct(number, .)
conj(T, definition)
punct(definition, .)
det(number, the)
nsubj:pass(call, number)
case(value, of)
amod(value, ordinary)
nmod(number, value)
case(feer, of)
det(feer, the)
compound(feer, function)
nmod(value, feer)
punct(feer, })
case(T, at)
nmod(feer, T)
aux(call, will)
aux:pass(call, be)
root(ROOT, call)
nmod:poss(multiplicity, its)
obj(call, multiplicity)
case(T, at)
obl(call, T)
punct(call, .)
compound(3, Lemma)
nummod(have, 3)
punct(3, .)
det(graph, the)
nsubj(have, graph)
case(for, of)
nmod(graph, for)
parataxis(call, have)
case(least, at)
nmod(one, least)
nummod(component, one)
obj(have, component)
nmod:poss(support, whose)
nsubj(interval, support)
cop(interval, be)
det(interval, the)
amod(interval, entire)
acl:relcl(component, interval)
vocative(suppose, Aj)
punct(Proof, .)
ccomp(suppose, Proof)
punct(Proof, .)
nsubj(suppose, we)
root(ROOT, suppose)
advmod(suppose, not)
punct(suppose, .)
advmod(define, then)
det(component, every)
nsubj:pass(define, component)
case(graph, of)
det(graph, the)
nmod(component, graph)
case(F, of)
nmod(graph, F)
aux(define, must)
aux:pass(define, be)
root(ROOT, define)
case(sub-interval, over)
det(sub-interval, a)
amod(sub-interval, bounded)
obl(define, sub-interval)
punct(define, .)
root(ROOT, suppose)
nsubj:pass(define, Af)
aux:pass(define, be)
root(ROOT, define)
case(Af, in)
det(Af, the)
compound(Af, sub)
compound(Af, -interval)
obl(define, Af)
punct(define, .)
advmod(point, now)
nsubj(point, Af)
cc(Af, and)
conj(Af, Af)
aux(point, must)
advmod(point, both)
cop(point, be)
compound(point, tangent)
parataxis(define, point)
case(component, on)
det(component, the)
compound(component, T)
nmod(point, component)
case(f-plane, in)
det(f-plane, the)
nmod(component, f-plane)
punct(point, ;)
punct(point, ;)
advmod(extend, otherwise)
case(Lemma, by)
obl(extend, Lemma)
nummod(Lemma, 1)
det(component, the)
nsubj(extend, component)
aux(extend, would)
parataxis(point, extend)
case(point, beyond)
det(point, these)
obl(extend, point)
punct(define, . )
advmod(see, further)
punct(see, ,)
nsubj(see, we)
root(ROOT, see)
case(Lemma, by)
obl(see, Lemma)
nummod(Lemma, 2)
mark(change, that)
det(multiplicity, the)
nsubj(change, multiplicity)
case(F, of)
nmod(multiplicity, F)
aux(change, can)
advmod(change, only)
ccomp(see, change)
case(point, at)
det(point, a)
compound(point, tangent)
obl(change, point)
punct(change, ,)
cc(change, and)
case(point, at)
det:predet(point, such)
det(point, a)
obl(change, point)
aux(change, can)
advmod(change, only)
conj(change, change)
case(integer, by)
det(integer, a)
advmod(integer, even)
obl(change, integer)
punct(see, .)
advmod(number, thus)
det(multiplicity, the)
nsubj(number, multiplicity)
case(Af, of)
nmod(multiplicity, Af)
case(T, for)
det(T, a)
amod(T, give)
nmod(multiplicity, T)
aux(number, must)
cop(number, be)
det(number, a)
advmod(number, even)
root(ROOT, number)
punct(number, .)
nsubj(true, this)
cop(true, be)
root(ROOT, true)
case(component, of)
det(component, all)
obl(true, component)
nsubj(have, which)
acl:relcl(component, have)
det:predet(support, such)
det(support, a)
amod(support, bounded)
obj(have, support)
punct(true, .)
cc(contradiction, but)
nsubj(contradiction, this)
cop(contradiction, be)
det(contradiction, a)
root(ROOT, contradiction)
punct(contradiction, ,)
mark(know, for)
nsubj(know, we)
advcl(contradiction, know)
mark(odd, that)
det(multiplicity, the)
nsubj(odd, multiplicity)
case(feer, of)
nmod(multiplicity, feer)
punct(multiplicity, })
cop(odd, be)
ccomp(know, odd)
case(T, for)
det(T, every)
obl(odd, T)
punct(contradiction, .)
nsubj(show, we)
aux(show, have)
root(ROOT, show)
mark(contain, that)
det(graph, the)
nsubj(contain, graph)
case(F, of)
nmod(graph, F)
ccomp(show, contain)
case(least, at)
nmod(one, least)
nummod(component, one)
obj(contain, component)
nmod:poss(inverse, whose)
nsubj(interval, inverse)
cop(interval, be)
det(interval, the)
amod(interval, entire)
acl:relcl(component, interval)
punct(0, {)
appos(interval, 0)
punct(T, ,)
conj(0, T)
punct(T, })
punct(odd, ,)
cc(odd, and)
nmod:poss(multiplicity, whose)
nsubj(odd, multiplicity)
cop(odd, be)
conj(0, odd)
punct(show, .)
expl(be, there)
aux(be, must)
root(ROOT, be)
det(number, a)
amod(number, odd)
nsubj(be, number)
case(component, of)
amod(component, such)
nmod(number, component)
punct(component, ,)
nsubj:pass(call, which)
aux(call, will)
aux:pass(call, be)
acl:relcl(component, call)
amod(component, complete)
obj(call, component)
punct(be, .)
det(component, the)
amod(component, remain)
punct(incomplete, ()
amod(component, incomplete)
punct(component, ))
nsubj(have, component)
cc:preconj(component, all)
root(ROOT, have)
det(number, a)
advmod(number, even)
obj(have, number)
case(point, of)
amod(point, ordinary)
nmod(number, point)
case(argument, at)
det(argument, any)
nmod(point, argument)
punct(define, ,)
cc(define, and)
aux:pass(define, be)
conj(have, define)
advmod(-interval, only)
case(-interval, on)
det(-interval, a)
amod(-interval, proper)
compound(-interval, sub)
obl(define, -interval)
case(Aj, of)
nmod(-interval, Aj)
punct(show, .)
nsubj(show, we)
aux(show, must)
advmod(show, now)
parataxis(have, show)
mark(exist, that)
case(component, on)
det(component, some)
obl(exist, component)
case(graph, of)
det(graph, the)
nmod(component, graph)
expl(exist, there)
ccomp(show, exist)
nummod(point, two)
obj(exist, point)
case(which, for)
obl(exist, which)
det(point, the)
amod(point, corresponding)
amod(point, diagonal)
nsubj(side, point)
case(C-plane, in)
det(C-plane, the)
nmod(point, C-plane)
cop(side, be)
case(side, on)
amod(side, opposite)
advcl(consider, side)
case(C, of)
nmod(side, C)
punct(consider, .)
nsubj(consider, we)
advmod(consider, again)
parataxis(have, consider)
det(p, a)
amod(p, fix)
compound(p, point)
obj(consider, p)
case(Af, at)
nmod(p, Af)
cc(q, and)
det(q, a)
amod(q, variable)
compound(q, point)
conj(p, q)
case(Af, at)
nmod(q, Af)
case(C, on)
nmod(Af, C)
punct(erect, .)
nsubj(erect, we)
parataxis(q, erect)
det(square, a)
obj(erect, square)
case(pq, with)
nmod(square, pq)
case(side, as)
det(side, a)
obl(erect, side)
cc(Af, and)
case(Af, with)
amod(corner, free)
compound(Af, corner)
conj(side, Af)
cc(adjacent, and)
compound(adjacent, Af)
conj(Af, adjacent)
case(p, to)
nmod(adjacent, p)
cc(q, and)
conj(p, q)
advmod(p, respectively)
punct(p, .)
mark(vary, as)
aux(vary, be)
advcl(erect, vary)
case(zero, from)
obl(vary, zero)
case(T, to)
obl(vary, T)
punct(denote, ,)
det(value, the)
nsubj:pass(denote, value)
case(Af, of)
case(of, 's)
case(Af, for)
det(Af, which)
nmod(value, Af)
cc(c, and)
compound(c, Af)
compound(c, cross)
conj(Af, c)
aux(denote, will)
aux:pass(denote, be)
conj(vary, denote)
case(Af, by)
obl(denote, Af)
cc(Af, and)
conj(Af, Af)
advmod(denote, respectively)
punct(have, .)
nsubj(have, we)
root(ROOT, have)
obj(have, Af)
punct(point, ,)
cc(point, plus)
compound(point, tangent)
conj(Af, point)
punct(have, .)
det(s-value, these)
nsubj(value, s-value)
cop(value, be)
advmod(value, just)
det(value, the)
amod(value, ordinary)
root(ROOT, value)
case(Lemma, of)
nmod(value, Af)
punct(Lemma, .)
nmod(value, Lemma)
nummod(Lemma, 4)
punct(value, .)
det(Af, the)
compound(Af, value)
nsubj(value, Af)
cop(value, be)
det(value, the)
amod(value, ordinary)
root(ROOT, value)
case(Af, at)
nmod(value, Af)
case(get, of)
det(get, a)
amod(get, multi-value)
compound(get, function)
nmod(value, get)
punct(get, })
nsubj(have, which)
acl:relcl(get, have)
obj(have, component)
acl(component, corresponding)
case(those, to)
obl(corresponding, those)
case(feer, of)
nmod(those, feer)
punct(Proof, })
punct(Proof, .)
parataxis(value, Proof)
punct(Proof, .)
nsubj(define, we)
advmod(define, first)
root(ROOT, define)
det(betwent, a)
compound(betwent, function)
obj(define, betwent)
punct(define, })
mark(follow, as)
advcl(define, follow)
punct(define, :)
case(set, give)
det(set, the)
obl(follow, set)
case(square, of)
nmod(set, square)
mark(have, such)
fixed(such, that)
nsubj(have, each)
acl:relcl(set, have)
nummod(corner, three)
obj(have, corner)
case(c, on)
nmod(corner, c)
cc(vertex, and)
conj(c, vertex)
case(t, at)
nmod(corner, t)
punct(betwent, ,)
appos(t, betwent)
punct(set, })
cop(set, be)
det(set, the)
amod(set, corresponding)
conj(have, set)
case(difference, of)
amod(difference, positive)
amod(difference, parametric)
nmod(set, difference)
case(T, between)
nmod(difference, T)
cc(point, and)
det(point, the)
amod(point, backward)
compound(point, corner)
conj(T, point)
punct(define, .)
det(F, the)
compound(F, function)
nsubj(have, F)
cc(B, and)
conj(F, B)
root(ROOT, have)
advmod(multiplicity, exactly)
det(multiplicity, the)
amod(multiplicity, same)
obj(have, multiplicity)
case(argument, at)
det(argument, every)
nmod(multiplicity, argument)
advmod(argument, T)
punct(have, .)
advmod(have, now)
case(p, with)
obl(have, p)
acl(p, fix)
case(Af, at)
obl(fix, Af)
punct(occur, ,)
compound(value, Af)
punct(value, -)
nsubj(occur, value)
parataxis(have, occur)
mark(cross, when)
det(Af, the)
compound(Af, corner)
nsubj(cross, Af)
advcl(occur, cross)
obj(cross, C)
punct(value, ,)
cc(value, and)
cop(value, be)
case(value, among)
det(value, the)
conj(cross, value)
case(such, of)
cop(such, be)
nmod(value, such)
mark(ordinate, that)
nsubj(ordinate, Af)
punct(Af, .)
det(root, the)
nsubj(ordinate, root)
case(equation, of)
det(equation, this)
nmod(root, equation)
cop(ordinate, be)
advmod(ordinate, just)
det(ordinate, the)
ccomp(such, ordinate)
case(intersection, of)
det(intersection, the)
nmod(ordinate, intersection)
case(graph, of)
det(graph, the)
nmod(intersection, graph)
case(b, of)
nmod(graph, b)
case(line, with)
det(line, a)
amod(line, straight)
nmod(graph, line)
case(slope, of)
compound(slope, unit)
nmod(line, slope)
case(Af, through)
nmod(line, Af)
case(b-plane, in)
det(b-plane, the)
nmod(Af, b-plane)
punct(plane, ()
det(plane, the)
appos(b-plane, plane)
case(graph, of)
det(graph, the)
nmod(plane, graph)
case(b, of)
nmod(graph, b)
punct(plane, ))
punct(have, .)
nsubj(define, we)
root(ROOT, define)
det(value, these)
obj(define, value)
case(Af, as)
obl(define, Af)
punct(define, ,)
cc(define, and)
conj(define, define)
obj(define, get)
punct(define, })
case(way, in)
det(way, the)
amod(way, same)
obl(define, way)
case(T, for)
det(T, each)
nmod(way, T)
punct(define, .)
advmod(obtain, thus)
nsubj(obtain, we)
parataxis(define, obtain)
obj(obtain, g{t})
mark(introduce, by)
advcl(obtain, introduce)
det(axis, a)
amod(axis, oblique)
compound(axis, g{)
compound(axis, t})
punct(axis, -)
obj(introduce, axis)
case(Aj, in)
det(Aj, the)
nmod(axis, Aj)
punct(introduction, .)
obl(introduce, introduction)
punct(define, .)
case(1, in)
obl(investigate, 1)
nsubj(investigate, we)
root(ROOT, investigate)
det(series, a)
amod(series, new)
obj(investigate, series)
case(involution, of)
compound(involution, line)
nmod(series, involution)
case(space, in)
det(space, a)
amod(space, projective)
obl(investigate, space)
case(dimension, of)
nummod(dimension, three)
nmod(space, dimension)
case(field, over)
det(field, the)
nmod(dimension, field)
case(number, of)
amod(number, complex)
nmod(field, number)
punct(investigate, .)
nsubj:pass(define, these)
aux:pass(define, be)
root(ROOT, define)
case(transformation, by)
det(transformation, a)
amod(transformation, simple)
amod(transformation, involutorial)
obl(define, transformation)
case(point, of)
det(point, the)
nmod(transformation, point)
case(which, in)
obl(meet, which)
det(line, a)
amod(line, general)
nsubj(meet, line)
acl:relcl(point, meet)
det(surface, a)
amod(surface, nonsingular)
amod(surface, quadric)
obj(meet, surface)
advcl(meet, bear)
det(curve, a)
obj(bear, curve)
case(Af, of)
compound(Af, symbol)
nmod(curve, Af)
punct(show, .)
advmod(show, then)
case(2, in)
obl(show, 2)
nsubj(show, we)
conj(define, show)
mark(involution, that)
det(involution, any)
compound(involution, line)
ccomp(show, involution)
case(property, with)
det(property, the)
nmod(involution, property)
nsubj(a, that)
punct(a, ()
appos(involution, a)
punct(a, ))
nsubj(have, it)
root(ROOT, have)
det(complex, no)
obj(have, complex)
case(line, of)
amod(line, invariant)
nmod(complex, line)
punct(b, ,)
cc(b, and)
punct(b, ()
conj(complex, b)
punct(b, ))
nmod:poss(line, its)
amod(line, singular)
nsubj(form, line)
root(ROOT, form)
det(complex, a)
obj(form, complex)
acl(complex, consist)
advmod(consist, exclusively)
case(line, of)
det(line, the)
obl(exclusively, line)
nsubj(meet, which)
acl:relcl(line, meet)
det(curve, a)
amod(curve, twist)
obj(meet, curve)
punct(form, ,)
cop(type, be)
advmod(type, necessarily)
case(type, of)
det(type, the)
parataxis(form, type)
acl(type, discuss)
case(1, in)
nummod(generalization, 1)
punct(generalization, .)
det(generalization, no)
nsubj(type, generalization)
case(result, of)
det(result, these)
nmod(generalization, result)
case(space, to)
nmod(result, space)
case(dimension, of)
advmod(three, more)
fixed(more, than)
nummod(dimension, three)
nmod(space, dimension)
aux(find, have)
advmod(far, so)
advmod(find, far)
aux:pass(find, be)
acl:relcl(dimension, find)
xcomp(find, possible)
compound(1, . )
nummod(let, 1)
punct(1, .)
conj(find, let)
mark(surface, q)
cop(surface, be)
det(surface, a)
amod(surface, nonsingular)
amod(surface, quadric)
xcomp(let, surface)
acl(surface, bear)
compound(Af, reguli)
obj(bear, Af)
cc(Af, and)
conj(Af, Af)
punct(let, ,)
cc(let, and)
conj(surface, let)
punct(let, **)
discourse(curve, zg)
cop(curve, be)
det(curve, a)
compound(curve, Af)
ccomp(let, curve)
case(order, of)
nmod(curve, order)
nummod(order, k)
case(q, on)
nmod(curve, q)
punct(form, . )
det(line, a)
amod(line, general)
nsubj(meet, line)
nsubj(meet, L)
root(ROOT, meet)
obj(meet, q)
case(point, in)
nummod(point, two)
obl(meet, point)
punct(Af, ,)
appos(point, Af)
cc(Af, and)
conj(Af, Af)
punct(meet, ,)
case(each, through)
obl(pass, each)
case(which, of)
obl(pass, which)
acl:relcl(point, pass)
det(generator, a)
amod(generator, unique)
obj(pass, generator)
case(regulus, of)
det(regulus, the)
nmod(generator, regulus)
punct(Af, ,)
appos(regulus, Af)
punct(regulus, ,)
nmod:poss(line, whose)
nsubj(secant, line)
cop(secant, be)
amod(secant, simple)
acl:relcl(Af, secant)
case(Aj, of)
nmod(secant, Aj)
punct(let, .)
case(generator, on)
det(generator, these)
obl(let, generator)
conj(secant, let)
obj(let, Af)
cc(Af, and)
conj(Af, Af)
cop(conjugate, be)
punct(conjugate, ,)
advmod(conjugate, respectively)
punct(conjugate, ,)
det(conjugate, the)
amod(conjugate, harmonic)
conj(let, conjugate)
case(Af, of)
nmod(conjugate, Af)
cc(Af, and)
conj(Af, Af)
case(respect, with)
nmod(conjugate, respect)
case(point, to)
det(point, the)
nummod(point, two)
nmod(respect, point)
case(which, in)
obl(meet, which)
det(generator, the)
amod(generator, corresponding)
nsubj(meet, generator)
acl:relcl(point, meet)
nsubj(image, Aj)
punct(Aj, .)
det(Af, the)
compound(Af, line)
nsubj(image, Af)
cop(image, be)
det(image, the)
root(ROOT, image)
case(L, of)
nmod(image, L)
punct(image, .)
advmod(involutorial, clearly)
punct(involutorial, ,)
det(transformation, the)
nsubj(involutorial, transformation)
cop(involutorial, be)
parataxis(image, involutorial)
punct(image, .)
nsubj(observe, we)
root(ROOT, observe)
advmod(observe, first)
mark(meet, that)
det(line, no)
nsubj(meet, line)
punct(l, ,)
appos(line, l)
punct(meet, ,)
aux(meet, can)
ccomp(observe, meet)
obj(meet, it)
cop(image, be)
obj(meet, image)
case(one, except)
case(one, at)
obl(meet, one)
case(intersection, of)
nmod:poss(intersection, its)
nmod(one, intersection)
case(q, with)
nmod(one, q)
punct(one, .)
mark(do, for)
mark(do, if)
nsubj(do, it)
advcl(contain, do)
punct(contain, ,)
det(plane, the)
nsubj(contain, plane)
case(L, of)
nmod(plane, L)
cc(l, and)
conj(L, l)
punct(l, ')
aux(contain, would)
ccomp(observe, contain)
nummod(generator, two)
obj(contain, generator)
case(Af, of)
nmod(generator, Af)
punct(generator, ,)
nsubj(impossible, which)
cop(impossible, be)
acl:relcl(generator, impossible)
punct(observe, . )
advmod(clear, moreover)
punct(clear, ,)
case(transformation, from)
det(transformation, the)
amod(transformation, definitive)
obl(clear, transformation)
case(intercept, of)
nmod(transformation, intercept)
case(generator, on)
det(generator, the)
nmod(intercept, generator)
case(Af, of)
nmod(generator, Af)
punct(clear, ,)
expl(clear, it)
cop(clear, be)
root(ROOT, clear)
mark(point, that)
det(point, the)
amod(point, only)
nsubj(point, point)
case(q, of)
nmod(point, q)
case(which, at)
obl(meet, which)
det(line, a)
nsubj(meet, line)
aux(meet, can)
acl:relcl(point, meet)
nmod:poss(image, it)
case(it, 's)
obj(meet, image)
cop(point, be)
det(point, the)
ccomp(clear, point)
case(Aj, of)
nmod(point, Aj)
punct(point, .)
advmod(complex, hence)
det(totality, the)
nsubj(point, totality)
case(line, of)
amod(line, singular)
nmod(totality, line)
cop(complex, be)
det(complex, the)
compound(order, T)
compound(complex, order)
acl:relcl(totality, complex)
case(line, of)
nmod(complex, line)
nsubj(meet, which)
acl:relcl(line, meet)
obj(meet, Aj)
punct(line, .)
det(line, the)
amod(line, invariant)
nsubj(line, line)
cop(line, be)
det(line, the)
parataxis(complex, line)
case(congruence, of)
det(congruence, the)
nmod(line, congruence)
case(secant, of)
nmod(congruence, secant)
case(zg, of)
punct(zg, **)
nmod(secant, zg)
punct(line, ,)
mark(q, since)
nsubj(q, each)
case(meet, of)
det(meet, these)
nmod(each, meet)
advcl(line, q)
case(point, in)
nummod(point, two)
obl(q, point)
nsubj(invariant, which)
cop(invariant, be)
acl:relcl(point, invariant)
punct(clear, .)
det(order, the)
nsubj(Af, order)
case(congruence, of)
det(congruence, this)
nmod(order, congruence)
cop(Af, be)
root(ROOT, Af)
punct(Af, ,)
case(secant, since)
compound(secant, Af)
obl(Af, secant)
case(curve, of)
det(curve, a)
nmod(secant, curve)
case(symbol, of)
nmod(curve, symbol)
punct(b, ()
nummod(pass, b)
punct(b, ))
case(pass, on)
det(pass, a)
amod(pass, quadric)
compound(pass, surface)
nmod(secant, pass)
case(point, through)
det(point, a)
amod(point, arbitrary)
nmod(pass, point)
punct(Af, .)
det(class, the)
nsubj(Af, class)
case(congruence, of)
det(congruence, the)
nmod(class, congruence)
cop(Af, be)
root(ROOT, Af)
punct(Af, ,)
mark(meet, since)
det(plane, a)
amod(plane, arbitrary)
nsubj(meet, plane)
advcl(Af, meet)
punct(zg, **)
obj(meet, zg)
case(point, in)
nummod(point, k)
nmod(zg, point)
punct(Af, .)
mark(k, since)
det(complex, the)
nsubj(k, complex)
case(line, of)
amod(line, singular)
nmod(complex, line)
cop(k, be)
case(order, of)
compound(k, order)
advcl(follow, k)
cc(be, and)
mark(be, since)
expl(be, there)
advcl(follow, be)
det(complex, no)
nsubj(be, complex)
case(line, of)
amod(line, invariant)
nmod(complex, line)
punct(follow, ,)
nsubj(follow, it)
root(ROOT, follow)
case(formula, from)
det(formula, the)
obl(follow, formula)
root(ROOT, Af)
mark(Af, that)
det(order, the)
nsubj(Af, order)
case(involution, of)
det(involution, the)
nmod(order, involution)
cop(Af, be)
appos(Af, Af)
punct(Af, .)
expl(be, there)
appos(Af, be)
amod(set, various)
nsubj(be, set)
case(line, of)
amod(line, exceptional)
nmod(set, line)
punct(line, ,)
cc(line, or)
conj(set, line)
nmod:poss(image, whose)
nsubj(unique, image)
cop(unique, be)
advmod(unique, not)
acl:relcl(line, unique)
punct(Af, .)
det(obvious, the)
advmod(obvious, most)
nsubj(complex, obvious)
case(these, of)
nmod(obvious, these)
cop(complex, be)
det(complex, the)
amod(complex, quadratic)
root(ROOT, complex)
case(tangent, of)
nmod(complex, tangent)
case(q, to)
nmod(tangent, q)
punct(complex, ,)
det(line, each)
appos(complex, line)
case(which, of)
obl(transform, which)
aux:pass(transform, be)
acl:relcl(line, transform)
case(pencil, into)
det(pencil, the)
amod(pencil, entire)
obl(transform, pencil)
case(line, of)
compound(tangent, line)
nmod(pencil, tangent)
case(q, to)
nmod(tangent, q)
case(image, at)
det(image, the)
obl(transform, image)
case(point, of)
det(point, the)
nmod(image, point)
case(tangency, of)
nmod(point, tangency)
case(line, of)
det(line, the)
amod(line, give)
nmod(tangency, line)
punct(complex, .)
advmod(transform, thus)
nsubj:pass(transform, pencil)
case(tangent, of)
nmod(pencil, tangent)
case(q, to)
nmod(tangent, q)
aux:pass(transform, be)
root(ROOT, transform)
case(pencil, into)
obl(transform, pencil)
case(tangent, of)
nmod(pencil, tangent)
punct(transform, .)
expl(interesting, it)
cop(interesting, be)
root(ROOT, interesting)
mark(establish, that)
det(1, a)
nsubj(interesting, 1)
punct(interesting, :)
nummod(correspondence, 1)
nsubj:pass(establish, correspondence)
aux(establish, can)
aux:pass(establish, be)
csubj(interesting, establish)
case(line, between)
det(line, the)
obl(establish, line)
case(pencil, of)
nummod(pencil, two)
amod(pencil, such)
nmod(line, pencil)
punct(establish, ,)
mark(assign, so)
fixed(so, that)
case(sense, in)
det(sense, a)
obl(assign, sense)
det(image, a)
amod(image, unique)
nsubj:pass(assign, image)
aux(assign, can)
advmod(assign, actually)
aux:pass(assign, be)
advcl(establish, assign)
case(tangent, to)
det(tangent, each)
obl(assign, tangent)
punct(interesting, .)
case(line, for)
det(line, the)
obl(transform, line)
case(plane, of)
det(plane, any)
nmod(line, plane)
punct(transform, ,)
punct(transform, **)
nsubj:pass(transform, yp)
punct(q, ,)
compound(q, meeting)
conj(yp, q)
case(c, in)
det(c, a)
amod(c, conic)
nmod(q, c)
punct(transform, ,)
aux:pass(transform, be)
root(ROOT, transform)
case(congruence, into)
det(congruence, the)
obl(transform, congruence)
case(secant, of)
nmod(congruence, secant)
case(c, of)
det(c, the)
compound(c, curve)
nmod(secant, c)
punct(c, ')
case(which, into)
obl(transform, which)
nsubj:pass(transform, C)
aux:pass(transform, be)
acl:relcl(c, transform)
case(involution, in)
det(involution, the)
compound(involution, point)
obl(transform, involution)
case(q, on)
nmod(involution, q)
punct(transform, .)
case(particular, in)
obl(transform, particular)
punct(transform, ,)
nsubj:pass(transform, tangent)
case(c, to)
nmod(tangent, c)
aux:pass(transform, be)
root(ROOT, transform)
case(tangent, into)
obl(transform, tangent)
case(C, to)
nmod(tangent, C)
punct(C, ')
punct(transform, .)
advmod(plane, moreover)
punct(transform, ,)
mark(plane, if)
nsubj(plane, Af)
cc(Af, and)
conj(Af, Af)
cop(plane, be)
nummod(plane, two)
advcl(transform, plane)
acl(plane, intersecting)
case(l, in)
det(l, a)
compound(l, line)
obl(intersecting, l)
punct(tangent, ,)
conj(l, tangent)
mark(q, to)
acl(tangent, q)
case(p, at)
det(p, a)
compound(p, point)
obl(q, p)
punct(intersection, ,)
det(intersection, the)
nummod(intersection, two)
amod(intersection, free)
appos(p, intersection)
case(Af, of)
det(Af, the)
compound(curve, image)
compound(Af, curve)
nmod(intersection, Af)
cc(Af, and)
conj(Af, Af)
aux(coincide, must)
parataxis(intersection, coincide)
case(p, at)
obl(coincide, p)
punct(coincide, ')
punct(image, ,)
det(image, the)
nsubj(coincide, image)
case(p, of)
nmod(image, p)
punct(have, ,)
cc(have, and)
case(Af, at)
det(Af, this)
compound(Af, point)
obl(have, Af)
cc(Af, and)
conj(Af, Af)
aux(have, must)
conj(transform, have)
det(l', a)
amod(l', common)
compound(l', tangent)
obj(have, l')
punct(l', .)
advmod(think, hence)
punct(think, ,)
acl(l', think)
advmod(think, of)
fixed(of, as)
det(line, a)
obl(think, line)
case(plane, in)
det(plane, a)
amod(plane, particular)
nmod(line, plane)
punct(yp, **)
appos(line, yp)
punct(have, ,)
det(tangent, any)
nsubj(have, tangent)
case(q, to)
nmod(tangent, q)
parataxis(yp, have)
det(image, a)
amod(image, unique)
obj(have, image)
cc(same, and)
advmod(same, moreover)
det(image, this)
nsubj(same, image)
cop(same, be)
det(same, the)
conj(have, same)
case(plane, for)
det(plane, all)
obl(same, plane)
case(L, through)
nmod(plane, L)
punct(same, .)
det(generator, each)
parataxis(same, generator)
punct(generator, ,)
punct(yl, **)
appos(generator, yl)
punct(yl, ,)
punct(yl, of)
nsubj(exceptional, Af)
cop(exceptional, be)
advmod(exceptional, also)
root(ROOT, exceptional)
punct(exceptional, ,)
mark(transform, for)
obl(transform, each)
aux:pass(transform, be)
ccomp(exceptional, transform)
case(congruence, into)
det(congruence, the)
amod(congruence, entire)
obl(transform, congruence)
case(secant, of)
nmod(congruence, secant)
case(curve, of)
det(curve, the)
nmod(secant, curve)
case(which, into)
obl(transform, which)
det(generator, that)
nsubj:pass(transform, generator)
aux:pass(transform, be)
acl:relcl(curve, transform)
case(involution, by)
det(involution, the)
compound(involution, point)
obl(transform, involution)
case(q, on)
nmod(involution, q)
punct(symbol, .)
det(curve, this)
nsubj(symbol, curve)
cop(symbol, be)
case(symbol, of)
parataxis(exceptional, symbol)
root(ROOT, Af)
mark(meet, since)
nsubj(meet, it)
advcl(Af, meet)
punct(yl, **)
obj(meet, yl)
punct(line, ,)
cc(line, and)
advmod(line, hence)
det(line, every)
conj(yl, line)
case(Af, of)
nmod(line, Af)
case(point, in)
det(point, the)
compound(point, Af)
amod(point, invariant)
nmod(line, point)
case(point, on)
punct(meet, **yl)
cc(meet, and)
mark(meet, since)
nsubj(meet, it)
advmod(meet, obviously)
conj(meet, meet)
det(line, every)
obj(meet, line)
case(Af, of)
nmod(line, Af)
case(point, in)
det(point, a)
amod(point, single)
obl(meet, point)
punct(Af, .)
det(congruence, the)
nsubj(Af, congruence)
case(secant, of)
nmod:poss(secant, its)
nmod(congruence, secant)
cop(Af, be)
advmod(Af, therefore)
case(Af, of)
compound(Af, order)
root(ROOT, Af)
cc(Af, and)
compound(Af, class)
conj(Af, Af)
punct(Af, . )
det(class, a)
amod(class, final)
nsubj(identifiable, class)
case(line, of)
amod(line, exceptional)
nmod(class, line)
cop(identifiable, be)
root(ROOT, identifiable)
case(consideration, from)
det(consideration, the)
amod(consideration, follow)
obl(identifiable, consideration)
punct(identifiable, :)
case(generator, since)
det(generator, no)
nummod(generator, two)
root(ROOT, generator)
nmod(generator, of)
nsubj(intersect, Af)
aux(intersect, can)
root(ROOT, intersect)
punct(intersect, ,)
nsubj(follow, it)
parataxis(intersect, follow)
mark(have, that)
nmod:poss(curve, they)
compound(curve, image)
nsubj(have, curve)
aux(have, can)
ccomp(follow, have)
det(intersection, no)
amod(intersection, free)
obj(have, intersection)
punct(intersect, .)
case(word, in)
amod(word, other)
obl(fix, word)
punct(fix, ,)
det(curve, these)
nsubj(fix, curve)
aux(fix, have)
advmod(fix, only)
root(ROOT, fix)
obj(fix, intersection)
amod(intersection, common)
case(they, to)
obl(common, they)
det(they, all)
punct(fix, .)
advmod(be, now)
det(way, the)
amod(way, only)
nsubj(be, way)
case(which, in)
obl(pass, which)
det(curve, all)
nsubj(pass, curve)
case(family, of)
det(family, the)
compound(family, image)
nmod(curve, family)
case(Af, of)
nmod(family, Af)
aux(pass, can)
acl:relcl(way, pass)
case(point, through)
det(point, a)
amod(point, fix)
obl(pass, point)
root(ROOT, be)
mark(have, to)
ccomp(be, have)
det(generator, a)
obj(have, generator)
case(Af, of)
nmod(generator, Af)
nsubj(secant, which)
cop(secant, be)
advmod(secant, not)
det(secant, a)
acl:relcl(generator, secant)
cc(tangent, but)
det(tangent, a)
conj(secant, tangent)
case(zg, of)
punct(zg, **)
nmod(tangent, zg)
punct(transform, ,)
case(then, for)
obl(transform, then)
det(point, any)
nsubj:pass(transform, point)
case(generator, on)
det:predet(generator, such)
det(generator, a)
nmod(point, generator)
aux(transform, will)
aux:pass(transform, be)
ccomp(be, transform)
case(point, into)
det(point, the)
obl(transform, point)
case(tangency, of)
nmod(point, tangency)
punct(be, .)
case(curve, since)
nummod(curve, two)
obl(follow, curve)
case(Af, of)
compound(Af, symbol)
nmod(curve, Af)
case(q, on)
obl(intersect, q)
advcl(follow, intersect)
case(point, in)
compound(point, Af)
obl(intersect, point)
punct(follow, ,)
nsubj(follow, it)
root(ROOT, follow)
mark(be, that)
expl(be, there)
ccomp(follow, be)
compound(line, Af)
nsubj(be, line)
case(Af, of)
nmod(line, Af)
nsubj(tangent, which)
cop(tangent, be)
acl:relcl(line, tangent)
case(Aj, to)
nmod(tangent, Aj)
punct(tangent, .)
advmod(tangent, clearly)
punct(line, ,)
det(line, any)
appos(line, line)
punct(line, ,)
appos(line, l)
punct(line, ,)
case(bundle, of)
det(bundle, any)
nmod(line, bundle)
acl(bundle, have)
obj(have, one)
case(point, of)
det(point, these)
nmod(one, point)
case(tangency, of)
nmod(point, tangency)
punct(tangency, ,)
appos(tangency, T)
punct(transform, ,)
mark(transform, as)
nsubj:pass(transform, vertex)
aux(transform, will)
aux:pass(transform, be)
advcl(have, transform)
case(pencil, into)
det(pencil, the)
amod(pencil, entire)
obl(transform, pencil)
advcl(transform, have)
det(image, the)
obj(have, image)
case(intersection, of)
det(intersection, the)
amod(intersection, second)
nmod(image, intersection)
case(L, of)
nmod(intersection, L)
cc(q, and)
conj(L, q)
case(vertex, as)
nmod(intersection, vertex)
cc(lie, and)
conj(vertex, lie)
case(plane, in)
det(plane, the)
obl(lie, plane)
acl(plane, determine)
case(point, by)
det(point, the)
compound(point, image)
obl(determine, point)
cc(generator, and)
det(generator, the)
conj(point, generator)
case(Af, of)
nmod(generator, Af)
nsubj(tangent, which)
cop(tangent, be)
acl:relcl(generator, tangent)
obl(tangent, to)
punct(zg, **)
obl(tangent, zg)
case(T, at)
nmod(zg, T)
punct(follow, . )
det(line, a)
nsubj:pass(transform, line)
case(two, through)
nmod(line, two)
case(point, of)
det(point, these)
nmod(two, point)
punct(Af, ,)
appos(point, Af)
cc(Af, and)
conj(Af, Af)
punct(transform, ,)
aux(transform, will)
aux:pass(transform, be)
root(ROOT, transform)
case(congruence, into)
det(congruence, the)
amod(congruence, entire)
amod(congruence, bilinear)
obl(transform, congruence)
advcl(transform, have)
det(tangent, the)
obj(have, tangent)
case(zg, to)
punct(zg, **)
obl(have, zg)
case(Af, at)
nmod(zg, Af)
cc(Af, and)
conj(Af, Af)
case(directrice, as)
nmod(zg, directrice)
punct(c, .)
det(c, a)
amod(c, conic)
punct(c, ,)
appos(zg, c)
punct(c, ,)
cop(curve, be)
det(curve, a)
punct(curve, ()
compound(1, 1)
punct(1, ,)
nummod(curve, 1)
punct(1, ))
appos(c, curve)
case(q, on)
nmod(curve, q)
punct(meet, ,)
parataxis(curve, meet)
det(image, the)
obj(meet, image)
case(line, of)
det(line, any)
nmod(image, line)
case(Af, of)
nmod(line, Af)
punct(line, ,)
obj(find, which)
nsubj(find, we)
aux(find, have)
advmod(find, already)
acl:relcl(line, find)
mark(curve, to)
cop(curve, be)
det(curve, a)
compound(curve, Af)
xcomp(find, curve)
case(q, on)
nmod(curve, q)
punct(curve, ,)
case(point, in)
compound(point, Af)
obl(curve, point)
punct(transform, .)
advmod(meet, hence)
nsubj(C, it)
cop(C, be)
nsubj(meet, image)
punct(C, ,)
appos(image, C)
punct(C, ')
punct(meet, ,)
root(ROOT, meet)
det(line, any)
obj(meet, line)
case(Af, of)
nmod(line, Af)
case(point, in)
compound(point, Af)
obl(meet, point)
punct(meet, . )
advmod(meet, moreover)
punct(C, ,)
nsubj(meet, C)
punct(C, ')
advmod(meet, obviously)
root(ROOT, meet)
det(line, any)
obj(meet, line)
root(ROOT, Af)
case(point, in)
det(point, a)
amod(point, single)
nmod(Af, point)
punct(Af, .)
punct(C, hence)
nsubj(curve, C)
punct(C, ')
cop(curve, be)
det(curve, a)
compound(curve, Af)
root(ROOT, curve)
case(q, on)
nmod(curve, q)
punct(curve, .)
advmod(curve, therefore)
punct(curve, ,)
det(congruence, the)
appos(curve, congruence)
case(secant, of)
nmod:poss(secant, its)
nmod(congruence, secant)
punct(image, ,)
nsubj(image, that)
cop(image, be)
det(image, the)
parataxis(curve, image)
case(field, of)
det(field, a)
amod(field, general)
compound(field, plane)
nmod(image, field)
case(line, of)
nmod(field, line)
punct(Af, ,)
cop(Af, be)
case(Af, of)
compound(Af, order)
nmod(image, Af)
cc(Af, and)
compound(Af, class)
conj(Af, Af)
punct(Af, .)
advmod(congruence, finally)
punct(congruence, ,)
det(image, the)
nsubj(congruence, image)
case(bundle, of)
det(bundle, a)
amod(bundle, general)
nmod(image, bundle)
case(line, of)
nmod(bundle, line)
cop(congruence, be)
det(congruence, a)
parataxis(curve, congruence)
nmod:poss(order, whose)
nsubj(order, order)
cop(order, be)
det(order, the)
acl:relcl(congruence, order)
case(congruence, of)
det(congruence, the)
nmod(order, congruence)
case(line, of)
amod(line, invariant)
nmod(congruence, line)
punct(Af, ,)
advmod(Af, namely)
nsubj(order, Af)
cc(class, and)
nmod:poss(class, whose)
conj(Af, class)
cop(order, be)
det(order, the)
conj(order, order)
case(congruence, of)
det(congruence, the)
compound(congruence, image)
nmod(order, congruence)
case(field, of)
det(field, a)
amod(field, general)
compound(field, plane)
nmod(congruence, field)
case(line, of)
nmod(field, line)
punct(field, ,)
advmod(Af, namely)
appos(field, Af)
punct(curve, . )
nummod(make, 2)
punct(2, .)
det(observation, the)
amod(observation, precede)
nsubj(make, observation)
root(ROOT, make)
expl(make, it)
xcomp(make, clear)
mark(exist, that)
expl(exist, there)
ccomp(clear, exist)
compound(involution, line)
obj(exist, involution)
case(order, of)
det(order, all)
nmod(involution, order)
amod(order, greater)
case(1, than)
obl(greater, 1)
case(complex, with)
det(complex, no)
obl(exist, complex)
case(line, of)
amod(line, invariant)
nmod(complex, line)
cc(complex, and)
case(complex, with)
det(complex, a)
conj(complex, complex)
case(line, of)
amod(line, singular)
nmod(complex, line)
acl(line, consist)
advmod(consist, exclusively)
case(line, of)
det(line, the)
obl(consist, line)
nsubj(meet, which)
acl:relcl(line, meet)
det(Aj, a)
amod(Aj, twist)
compound(Aj, curve)
obj(meet, Aj)
punct(show, .)
nsubj(show, we)
advmod(show, now)
aux(show, shall)
parataxis(make, show)
mark(type, that)
det(involution, any)
nsubj(type, involution)
case(characteristic, with)
det(characteristic, these)
nmod(involution, characteristic)
cop(type, be)
advmod(type, necessarily)
case(type, of)
det(type, the)
ccomp(show, type)
nsubj(describe, we)
aux(describe, have)
advmod(describe, just)
acl:relcl(type, describe)
punct(make, .)
mark(do, to)
advcl(show, do)
obj(do, this)
nsubj(show, we)
aux(show, must)
advmod(show, first)
root(ROOT, show)
mark(meet, that)
det(line, every)
nsubj(meet, line)
nsubj(meet, which)
acl:relcl(line, meet)
punct(zg, **)
obj(meet, zg)
case(p, in)
det(p, a)
compound(p, point)
nmod(zg, p)
ccomp(show, meet)
nsubj(image, it)
cop(image, be)
ccomp(meet, image)
case(p, at)
nmod(image, p)
punct(meet, .)
mark(see, to)
xcomp(meet, see)
obj(see, this)
punct(consider, ,)
conj(see, consider)
det(pencil, a)
amod(pencil, general)
obj(consider, pencil)
case(line, of)
nmod(pencil, line)
acl(line, contain)
det(secant, a)
amod(secant, general)
obj(contain, secant)
case(Aj, of)
nmod(secant, Aj)
punct(1, .)
case(1, by)
punct(1, ()
nmod(image, 1)
punct(1, ))
punct(surface, ,)
det(image, the)
nsubj(surface, image)
case(pencil, of)
det(pencil, this)
nmod(image, pencil)
cop(surface, be)
det(surface, a)
amod(surface, rule)
ccomp(show, surface)
case(order, of)
nmod(surface, order)
root(ROOT, Af)
nsubj:pass(meet, which)
aux:pass(meet, be)
acl:relcl(Af, meet)
case(plane, by)
det(plane, the)
obl(meet, plane)
case(pencil, of)
det(pencil, the)
nmod(plane, pencil)
case(curve, in)
det(curve, a)
nmod(plane, curve)
punct(C, ,)
appos(curve, C)
punct(C, ,)
case(Af, of)
compound(Af, order)
nmod(curve, Af)
punct(be, .)
case(c, on)
obl(be, c)
expl(be, there)
acl:relcl(Af, be)
det(correspondence, a)
compound(correspondence, Af)
nsubj(be, correspondence)
case(which, in)
obl(cut, which)
det(point, the)
compound(point, Af)
nsubj(cut, point)
acl:relcl(correspondence, cut)
case(C, from)
obl(cut, C)
case(line, by)
det(line, a)
amod(line, general)
obl(cut, line)
punct(l, ,)
conj(line, l)
punct(correspond, ,)
case(pencil, of)
det(pencil, the)
nmod(line, pencil)
acl:relcl(correspondence, correspond)
case(point, to)
det(point, the)
obl(correspond, point)
case(intersection, of)
nmod(point, intersection)
case(image, of)
det(image, the)
nmod(intersection, image)
case(L, of)
nmod(image, L)
cc(plane, and)
det(plane, the)
conj(L, plane)
case(pencil, of)
det(pencil, the)
nmod(plane, pencil)
punct(correspond, .)
root(ROOT, since)
nsubj(rational, C)
cop(rational, be)
root(ROOT, rational)
punct(rational, ,)
det(correspondence, this)
nsubj(have, correspondence)
parataxis(rational, have)
nummod(coincidence, k)
obj(have, coincidence)
punct(coincidence, ,)
nsubj(imply, each)
case(which, of)
obl(imply, which)
acl:relcl(coincidence, imply)
det(line, a)
obj(imply, line)
case(pencil, of)
det(pencil, the)
nmod(line, pencil)
nsubj(meet, which)
acl:relcl(pencil, meet)
nmod:poss(image, its)
obj(meet, image)
punct(rational, .)
advmod(contain, however)
punct(contain, ,)
mark(contain, since)
det(pencil, the)
nsubj(contain, pencil)
advcl(contain, contain)
det(secant, a)
obj(contain, secant)
case(zg, of)
punct(zg, **)
nmod(secant, zg)
nsubj(contain, it)
advmod(contain, actually)
root(ROOT, contain)
advmod(contain, only)
compound(line, Af)
amod(line, singular)
nsubj(necessary, line)
punct(line, .)
mark(avoid, to)
acl(line, avoid)
det(contradiction, this)
obj(avoid, contradiction)
expl(necessary, it)
cop(necessary, be)
root(ROOT, necessary)
mark(composite, that)
nsubj(composite, c)
cop(composite, be)
ccomp(necessary, composite)
punct(composite, ,)
case(secant, with)
det(secant, the)
obl(composite, secant)
nmod(secant, of)
punct(secant, **zg)
cc(curve, and)
det(curve, a)
conj(secant, curve)
case(Af, of)
compound(Af, order)
nmod(curve, Af)
case(component, as)
nmod(curve, component)
punct(necessary, .)
advmod(follow, thus)
nsubj(follow, it)
root(ROOT, follow)
mark(invariant, that)
det(secant, the)
nsubj(invariant, secant)
case(zg, of)
punct(zg, **)
nmod(secant, zg)
cop(invariant, be)
advmod(invariant, all)
ccomp(follow, invariant)
punct(follow, .)
cc(pencil, but)
mark(case, if)
nsubj(case, this)
cop(case, be)
det(case, the)
advcl(pencil, case)
punct(pencil, ,)
advmod(pencil, then)
det(pencil, a)
amod(pencil, arbitrary)
root(ROOT, pencil)
case(line, of)
nmod(pencil, line)
acl(pencil, have)
det(point, a)
obj(have, point)
punct(point, ,)
appos(point, p)
punct(p, ,)
case(zg, of)
punct(zg, **)
nmod(p, zg)
mark(transform, as)
nsubj:pass(transform, vertex)
aux:pass(transform, be)
advcl(zg, transform)
case(surface, into)
det(surface, a)
amod(surface, rule)
obl(transform, surface)
case(order, of)
nmod(surface, order)
nsubj(have, Af)
csubj(concurrent, have)
compound(generator, Af)
obj(have, generator)
root(ROOT, concurrent)
case(p, at)
obl(concurrent, p)
punct(concurrent, .)
mark(cone, since)
det(surface, a)
amod(surface, rule)
nsubj(cone, surface)
case(order, of)
det(N, order)
nmod(surface, N)
case(generator, with)
amod(generator, N)
amod(generator, concurrent)
nmod(N, generator)
cop(cone, be)
advmod(cone, necessarily)
det(cone, a)
advcl(follow, cone)
punct(follow, ,)
nsubj(follow, it)
parataxis(concurrent, follow)
advmod(follow, finally)
mark(meet, that)
det(line, every)
nsubj(meet, line)
case(point, through)
det(point, a)
nmod(line, point)
punct(p, ,)
conj(point, p)
punct(p, ,)
case(zg, of)
punct(zg, **)
nmod(line, zg)
advcl(follow, meet)
nsubj(image, it)
cop(image, be)
obj(meet, image)
case(p, at)
nmod(image, p)
punct(meet, ,)
mark(assert, as)
advcl(meet, assert)
punct(concurrent, .)
advmod(consider, now)
root(ROOT, consider)
det(transformation, the)
obj(consider, transformation)
case(line, of)
det(line, the)
nmod(transformation, line)
case(bundle, of)
det(bundle, a)
nmod(line, bundle)
case(vertex, with)
nmod(bundle, vertex)
punct(vertex, ,)
appos(vertex, p)
punct(p, ,)
case(p, on)
punct(p, **zg)
nsubj:pass(effect, which)
aux:pass(effect, be)
acl:relcl(line, effect)
case(involution, by)
det(involution, the)
obl(effect, involution)
case(whole, as)
det(whole, a)
obl(effect, whole)
punct(consider, .)
case(remark, from)
det(remark, the)
amod(remark, precede)
obl(clear, remark)
punct(clear, ,)
expl(clear, it)
cop(clear, be)
root(ROOT, clear)
mark(transform, that)
det:predet(bundle, such)
det(bundle, a)
nsubj:pass(transform, bundle)
aux:pass(transform, be)
csubj(clear, transform)
case(itself, into)
obl(transform, itself)
case(fashion, in)
det(fashion, a)
amod(fashion, involutorial)
obl(transform, fashion)
punct(clear, . )
advmod(be, moreover)
punct(be, ,)
case(involution, in)
det(involution, this)
obl(be, involution)
expl(be, there)
root(ROOT, be)
det(cone, a)
nsubj(be, cone)
case(line, of)
amod(line, invariant)
nmod(cone, line)
case(order, of)
nmod(line, order)
nsubj(follow, Af)
punct(follow, ,)
advmod(cone, namely)
det(cone, the)
nsubj(follow, cone)
case(secant, of)
nmod(cone, secant)
case(secant, of)
punct(secant, **zg)
nsubj(pass, which)
acl:relcl(cone, pass)
case(p, through)
obl(pass, p)
punct(follow, .)
advmod(follow, hence)
nsubj(follow, it)
root(ROOT, follow)
mark(involution, that)
det(involution, the)
nsubj(involution, involution)
case(bundle, within)
det(bundle, the)
nmod(involution, bundle)
aux(involution, must)
cop(involution, be)
det(involution, a)
compound(involution, perspective)
compound(Jonquieres, De)
compound(involution, Jonquieres)
ccomp(follow, involution)
case(order, of)
nmod(involution, order)
nsubj(have, Af)
cc(locus, and)
det(locus, the)
amod(locus, invariant)
conj(Af, locus)
aux(have, must)
root(ROOT, have)
det(line, a)
amod(line, multiple)
obj(have, line)
case(Af, of)
amod(Af, multiplicity)
cc:preconj(Af, either)
nmod(line, Af)
cc(Af, or)
conj(Af, Af)
punct(have, .)
det(possibility, the)
amod(possibility, first)
nsubj(require, possibility)
parataxis(have, require)
mark(be, that)
expl(be, there)
ccomp(require, be)
det(line, a)
nsubj(be, line)
case(p, through)
nmod(line, p)
nsubj(meet, which)
acl:relcl(line, meet)
punct(zg, **)
obj(meet, zg)
case(point, in)
compound(point, Af)
nmod(zg, point)
punct(zg, ;)
punct(require, ;)
det(second, the)
nsubj(require, second)
parataxis(have, require)
mark(be, that)
expl(be, there)
ccomp(require, be)
det(line, a)
nsubj(be, line)
case(p, through)
nmod(line, p)
nsubj(meet, which)
acl:relcl(line, meet)
punct(zg, **)
obj(meet, zg)
case(point, in)
compound(point, Af)
obl(meet, point)
punct(zg, .)
case(case, in)
det(case, each)
obl(transform, case)
punct(transform, ,)
nsubj:pass(transform, line)
case(bundle, of)
det(bundle, the)
nmod(line, bundle)
aux:pass(transform, be)
root(ROOT, transform)
case(involution, by)
obl(transform, involution)
case(pencil, within)
det(pencil, the)
nmod(involution, pencil)
nsubj(determine, they)
acl:relcl(pencil, determine)
case(secant, with)
det(secant, the)
amod(secant, multiple)
obl(determine, secant)
punct(transform, .)
case(case, in)
det(case, the)
amod(case, first)
obl(secant, case)
det(element, the)
amod(element, fix)
nsubj(secant, element)
case(pencil, within)
det(pencil, each)
nmod(element, pencil)
cop(secant, be)
det(secant, the)
amod(secant, multiple)
root(ROOT, secant)
cc(line, and)
det(line, the)
conj(secant, line)
acl(line, join)
det(vertex, the)
obj(join, vertex)
punct(p, ,)
appos(vertex, p)
punct(p, ,)
case(intersection, to)
det(intersection, the)
obl(join, intersection)
nmod(intersection, of)
punct(intersection, **zg)
cc(plane, and)
det(plane, the)
conj(intersection, plane)
case(pencil, of)
det(pencil, the)
nmod(plane, pencil)
nsubj(lie, which)
aux(lie, do)
advmod(lie, not)
acl:relcl(plane, lie)
case(secant, on)
det(secant, the)
amod(secant, multiple)
obl(lie, secant)
punct(secant, .)
case(second, in)
det(second, the)
obl(line, second)
punct(line, ,)
det(element, the)
amod(element, fix)
nsubj(line, element)
cop(line, be)
det(line, the)
root(ROOT, line)
nsubj(join, which)
acl:relcl(line, join)
det(vertex, the)
obj(join, vertex)
punct(p, ,)
conj(vertex, p)
punct(vertex, ,)
case(intersection, to)
det(intersection, the)
nummod(intersection, two)
obl(join, intersection)
nmod(intersection, of)
punct(intersection, **zg)
cc(plane, and)
det(plane, the)
conj(intersection, plane)
case(pencil, of)
det(pencil, the)
nmod(plane, pencil)
nsubj(lie, which)
aux(lie, do)
advmod(lie, not)
acl:relcl(pencil, lie)
case(secant, on)
det(secant, the)
amod(secant, multiple)
obl(lie, secant)
punct(line, .)
det(secant, the)
amod(secant, multiple)
nsubj(exceptional, secant)
punct(exceptional, ,)
advmod(exceptional, of)
fixed(of, course)
punct(exceptional, ,)
cop(exceptional, be)
root(ROOT, exceptional)
cc(transform, and)
case(case, in)
det(case, each)
obl(transform, case)
aux:pass(transform, be)
conj(exceptional, transform)
case(cone, into)
obl(transform, cone)
case(Af, of)
compound(Af, order)
nmod(cone, Af)
punct(Observations, .)
nsubj:pass(transform, Observations)
amod(Observations, similar)
case(these, to)
obl(similar, these)
aux(make, can)
aux:pass(make, be)
acl:relcl(Observations, make)
case(point, at)
det(point, each)
obl(make, point)
case(Aj, of)
nmod(point, Aj)
punct(have, .)
advmod(have, hence)
punct(have, **)
nsubj(have, zg)
aux(have, must)
parataxis(exceptional, have)
cc:preconj(regulus, either)
det(regulus, a)
obj(have, regulus)
case(secant, of)
compound(fold, Af)
punct(fold, -)
compound(secant, fold)
nmod(regulus, secant)
cc(regulus, or)
det(regulus, a)
conj(regulus, regulus)
case(secant, of)
compound(fold, Af)
punct(fold, -)
compound(secant, fold)
nmod(regulus, secant)
punct(regulus, .)
advmod(regulus, moreover)
punct(have, ,)
mark(moreover, if)
vocative(intersect, Af)
punct(intersect, ,)
det(two, no)
nsubj(intersect, two)
case(secant, of)
det(secant, the)
amod(secant, multiple)
nmod(two, secant)
aux(intersect, can)
root(ROOT, intersect)
punct(intersect, .)
mark(case, for)
mark(case, if)
nsubj(case, such)
cop(case, be)
det(case, the)
advcl(intersect, case)
punct(meet, ,)
cc:preconj(plane, either)
det(plane, the)
nsubj(meet, plane)
case(line, of)
det(line, the)
nummod(line, two)
nmod(plane, line)
aux(meet, would)
acl:relcl(case, meet)
punct(zg, **)
obj(meet, zg)
case(point, in)
advmod(k, more)
fixed(more, than)
nummod(point, k)
nmod(zg, point)
cc(high, or)
punct(high, ,)
advmod(high, alternatively)
punct(high, ,)
det(order, the)
nsubj(high, order)
case(regulus, of)
det(regulus, the)
compound(regulus, image)
nmod(order, regulus)
case(pencil, of)
det(pencil, the)
nmod(regulus, pencil)
acl(pencil, determine)
case(line, by)
det(line, the)
nummod(line, two)
obl(determine, line)
aux(high, would)
cop(high, be)
advmod(high, too)
conj(intersect, high)
punct(intersect, .)
cc(quadratic, but)
mark(intersect, if)
det(line, no)
nummod(line, two)
nsubj(intersect, line)
case(regulus, of)
det(regulus, the)
nmod(line, regulus)
case(secant, of)
amod(secant, multiple)
nmod(regulus, secant)
case(zg, of)
punct(zg, **)
nmod(secant, zg)
aux(intersect, can)
advcl(quadratic, intersect)
punct(quadratic, ,)
advmod(quadratic, then)
det(regulus, the)
nsubj(quadratic, regulus)
aux(quadratic, must)
cop(quadratic, be)
root(ROOT, quadratic)
punct(Af, ,)
cc(Af, or)
case(word, in)
amod(word, other)
obl(Af, word)
punct(Af, ,)
punct(Af, **)
nsubj(Af, zg)
aux(Af, must)
cop(Af, be)
cc:preconj(Af, either)
det(Af, a)
conj(quadratic, Af)
cc(curve, or)
det(curve, a)
compound(curve, Af)
conj(Af, curve)
case(surface, on)
det(surface, a)
amod(surface, nonsingular)
amod(surface, quadric)
nmod(curve, surface)
punct(quadratic, .)
nsubj(observe, we)
advmod(observe, now)
root(ROOT, observe)
mark(impossible, that)
det(case, the)
nsubj(impossible, case)
case(which, in)
obl(curve, which)
punct(curve, **)
nsubj(curve, zg)
cop(curve, be)
det(curve, a)
compound(curve, Af)
acl:relcl(case, curve)
case(quadric, on)
det(quadric, a)
nmod(curve, quadric)
cop(impossible, be)
ccomp(observe, impossible)
mark(consist, if)
det(complex, the)
nsubj(consist, complex)
case(line, of)
amod(line, singular)
nmod(complex, line)
advcl(impossible, consist)
advmod(consist, exclusively)
case(line, of)
det(line, the)
obl(consist, line)
nsubj(meet, which)
acl:relcl(line, meet)
obj(meet, Aj)
punct(meet, .)
case(pencil, for)
det(pencil, any)
obl(meet, pencil)
case(plane, in)
det(plane, a)
nmod(pencil, plane)
acl(plane, contain)
det(secant, a)
compound(fold, Af)
punct(fold, -)
compound(secant, fold)
obj(contain, secant)
case(zg, of)
punct(have, **)
nsubj(have, zg)
parataxis(observe, have)
det(regulus, a)
compound(regulus, image)
obj(have, regulus)
nsubj(meet, which)
acl:relcl(regulus, meet)
det(plane, the)
obj(meet, plane)
case(pencil, of)
det(pencil, the)
nmod(plane, pencil)
case(line, in)
compound(line, Af)
nmod(pencil, line)
punct(image, ,)
advmod(image, namely)
det(image, the)
appos(plane, image)
case(line, of)
det(line, the)
nmod(image, line)
case(pencil, of)
det(pencil, the)
nmod(line, pencil)
nsubj(pass, which)
acl:relcl(line, pass)
case(intersection, through)
det(intersection, the)
obl(pass, intersection)
nmod(intersection, of)
punct(intersection, **zg)
cc(secant, and)
det(secant, the)
amod(secant, multiple)
conj(intersection, secant)
punct(component, ,)
cc(component, plus)
det(component, a)
amod(component, additional)
conj(secant, component)
mark(account, to)
acl(component, account)
case(intersection, for)
det(intersection, the)
obl(account, intersection)
case(image, of)
det(image, the)
nmod(intersection, image)
case(line, of)
det(line, the)
amod(line, general)
nmod(image, line)
case(pencil, of)
det(pencil, the)
nmod(line, pencil)
punct(observe, .)
advmod(Af, however)
punct(Af, ,)
mark(be, if)
expl(be, there)
advcl(Af, be)
det(complex, no)
amod(complex, additional)
nsubj(be, complex)
case(line, of)
amod(line, singular)
nmod(complex, line)
punct(Af, ,)
det(order, the)
nsubj(Af, order)
case(regulus, of)
det(regulus, the)
compound(regulus, image)
nmod(order, regulus)
case(pencil, of)
det(pencil, a)
nmod(regulus, pencil)
cop(Af, be)
advmod(Af, precisely)
root(ROOT, Af)
punct(Af, .)
nsubj(contradict, this)
parataxis(Af, contradict)
det(observation, the)
amod(observation, precede)
obj(contradict, observation)
punct(reject, ,)
cc(reject, and)
advmod(reject, so)
punct(reject, ,)
case(assumption, under)
det(assumption, the)
obl(reject, assumption)
case(paper, of)
det(paper, this)
nmod(assumption, paper)
punct(reject, ,)
nsubj(reject, we)
aux(reject, must)
conj(contradict, reject)
det(possibility, the)
obj(reject, possibility)
nsubj(curve, that)
punct(curve, **)
nsubj(curve, zg)
cop(curve, be)
det(curve, a)
compound(curve, Af)
acl:relcl(possibility, curve)
case(surface, on)
det(surface, a)
amod(surface, quadric)
nmod(curve, surface)
punct(Af, .)
advcl(observe, continue)
case(case, with)
det(case, the)
obl(continue, case)
case(which, in)
obl(curve, which)
punct(curve, **)
nsubj(curve, zg)
cop(curve, be)
det(curve, a)
compound(curve, Af)
parataxis(continue, curve)
case(q, on)
det(q, a)
amod(q, quadric)
nmod(curve, q)
punct(observe, ,)
nsubj(observe, we)
advmod(observe, first)
root(ROOT, observe)
mark(consist, that)
det(regulus, the)
amod(regulus, second)
nsubj(consist, regulus)
case(q, of)
nmod(regulus, q)
ccomp(observe, consist)
advmod(consist, precisely)
case(line, of)
det(line, the)
obl(consist, line)
nsubj(join, which)
acl:relcl(line, join)
det(intersection, the)
nummod(intersection, two)
amod(intersection, free)
obj(join, intersection)
nmod(intersection, of)
punct(intersection, **zg)
cc(plane, and)
det(plane, the)
conj(intersection, plane)
case(one, through)
det(one, any)
nmod(plane, one)
case(secant, of)
det(secant, the)
amod(secant, multiple)
nmod(one, secant)
punct(observe, .)
case(each, for)
obl(meet, each)
case(line, of)
det(line, these)
nmod(each, line)
root(ROOT, meet)
obj(meet, q)
case(point, in)
nummod(point, three)
obl(meet, point)
punct(point, ,)
advmod(point, namely)
nummod(point, two)
appos(point, point)
case(point, on)
punct(point, **zg)
cc(point, and)
nummod(point, one)
conj(point, point)
case(one, on)
nmod(point, one)
case(secant, of)
det(secant, the)
amod(secant, multiple)
nmod(one, secant)
punct(meet, .)
advmod(consider, now)
root(ROOT, consider)
det(line, a)
amod(line, arbitrary)
obj(consider, line)
punct(l, ,)
appos(line, l)
punct(q, ,)
compound(q, meeting)
conj(l, q)
case(point, in)
nummod(point, two)
obl(consider, point)
punct(Af, ,)
appos(point, Af)
cc(Af, and)
conj(Af, Af)
punct(consider, .)
mark(secant, if)
punct(secant, **)
nsubj(secant, ya)
cop(secant, be)
det(secant, the)
amod(secant, multiple)
parataxis(consider, secant)
case(zg, of)
punct(zg, **)
nmod(secant, zg)
nsubj(pass, which)
acl:relcl(zg, pass)
case(Af, through)
obl(pass, Af)
cc(secant, and)
punct(secant, **)
nsubj(secant, yb)
cop(secant, be)
det(secant, the)
amod(secant, simple)
conj(consider, secant)
case(zg, of)
punct(zg, **)
nmod(secant, zg)
nsubj(pass, which)
acl:relcl(zg, pass)
case(Af, through)
obl(pass, Af)
punct(point, ,)
cc(point, and)
mark(point, if)
nsubj(point, Af)
cop(point, be)
det(point, the)
advcl(pass, point)
case(which, in)
nmod(point, which)
punct(meet, **)
nsubj(meet, ya)
acl:relcl(point, meet)
punct(meet, **)
obj(meet, zg)
punct(image, ,)
cc(image, and)
mark(image, if)
nsubj(image, Af)
cop(image, be)
det(image, the)
advcl(follow, image)
case(Af, of)
nmod(image, Af)
case(generator, on)
det(generator, the)
nmod(image, generator)
punct(image, **)
nsubj(follow, yb)
punct(follow, ,)
nsubj(follow, it)
parataxis(consider, follow)
mark(Af, that)
det(image, the)
nsubj(Af, image)
case(Af, of)
det(Af, the)
compound(Af, line)
nmod(image, Af)
cop(Af, be)
ccomp(follow, Af)
punct(Af, .)
det(society, these)
nsubj(expect, society)
aux(expect, can)
parataxis(Af, expect)
mark(face, to)
xcomp(expect, face)
amod(time, difficult)
obj(face, time)
punct(consider, .)
mark(gain, as)
det(process, the)
amod(process, historic)
nsubj(gain, process)
case(modernization, of)
nmod(process, modernization)
advmod(gain, gradually)
advcl(threaten, gain)
obj(gain, momentum)
punct(threaten, ,)
nmod:poss(cohesion, they)
nsubj:pass(threaten, cohesion)
aux(threaten, will)
aux:pass(threaten, be)
root(ROOT, threaten)
case(force, by)
amod(force, divisive)
obl(threaten, force)
punct(threaten, ,)
det(gap, the)
conj(force, gap)
case(ruler, between)
nmod(gap, ruler)
cc(subject, and)
conj(ruler, subject)
punct(town, ,)
conj(ruler, town)
cc(country, and)
conj(ruler, country)
punct(widen, ,)
aux(widen, will)
conj(threaten, widen)
punct(widen, ;)
punct(widen, ;)
amod(aspirant, new)
nsubj(emerge, aspirant)
case(power, for)
nmod(aspirant, power)
aux(emerge, will)
parataxis(widen, emerge)
nmod:poss(ambition, whose)
nsubj(exceed, ambition)
advmod(exceed, far)
ccomp(emerge, exceed)
nmod:poss(competence, they)
obj(exceed, competence)
punct(emerge, ;)
punct(emerge, ;)
amod(ruler, old)
nsubj(lose, ruler)
aux(lose, may)
parataxis(emerge, lose)
nmod:poss(nerve, they)
obj(lose, nerve)
cc(sense, and)
nmod:poss(sense, they)
conj(nerve, sense)
case(direction, of)
nmod(sense, direction)
punct(threaten, .)
amod(leader, national)
nsubj(have, leader)
aux(have, will)
root(ROOT, have)
mark(display, to)
xcomp(have, display)
det(skill, the)
amod(skill, highest)
obj(display, skill)
case(statesmanship, of)
nmod(skill, statesmanship)
mark(guide, to)
advcl(display, guide)
nmod:poss(people, they)
obj(guide, people)
case(time, through)
obl(guide, time)
case(uncertainty, of)
nmod(time, uncertainty)
cc(confusion, and)
conj(uncertainty, confusion)
nsubj(destroy, which)
acl:relcl(uncertainty, destroy)
nmod:poss(sense, man)
case(man, 's)
obj(destroy, sense)
case(identity, of)
nmod(sense, identity)
punct(destroy, .)
nsubj(have, feeling)
case(community, of)
det(community, a)
nmod(feeling, community)
case(interest, of)
nmod(community, interest)
aux(have, will)
parataxis(have, have)
mark(recreate, to)
aux:pass(recreate, be)
xcomp(have, recreate)
punct(have, --)
case(some, in)
obl(have, some)
case(nation, of)
det(nation, the)
amod(nation, new)
nmod(some, nation)
punct(build, ,)
advmod(build, indeed)
punct(build, ,)
nsubj:pass(build, they)
aux(build, must)
aux:pass(build, be)
conj(have, build)
case(time, for)
det(time, the)
amod(time, first)
obl(build, time)
punct(build, --)
case(basis, on)
det(basis, a)
amod(basis, new)
obl(build, basis)
nsubj(look, which)
acl:relcl(basis, look)
case(future, toward)
det(future, the)
obl(look, future)
cc(rely, and)
aux(rely, do)
advmod(rely, not)
conj(look, rely)
advmod(memory, only)
case(memory, on)
amod(memory, share)
obl(rely, memory)
case(past, of)
det(past, the)
nmod(memory, past)
punct(have, .)
advmod(escape, nevertheless)
punct(escape, ,)
case(foresight, with)
nmod(some, foresight)
cc(planning, and)
amod(planning, careful)
conj(foresight, planning)
punct(escape, ,)
nsubj:pass(escape, some)
case(consequence, of)
det(consequence, the)
advmod(disruptive, more)
amod(consequence, disruptive)
cc(dangerous, and)
conj(disruptive, dangerous)
nmod(some, consequence)
case(change, of)
amod(change, social)
nmod(consequence, change)
nsubj(troubled, which)
aux(troubled, have)
acl:relcl(consequence, troubled)
amod(country, other)
obj(troubled, country)
acl(country, pass)
case(stage, through)
det(stage, this)
obl(pass, stage)
aux(escape, can)
aux:pass(escape, be)
root(ROOT, escape)
punct(escape, .)
det(States, the)
compound(States, United)
nsubj(help, States)
aux(help, can)
root(ROOT, help)
mark(communicate, by)
advcl(help, communicate)
det(concern, a)
amod(concern, genuine)
obj(communicate, concern)
case(problem, with)
det(problem, the)
nmod(concern, problem)
det(country, these)
nsubj(face, country)
acl:relcl(problem, face)
cc(readiness, and)
det(readiness, a)
conj(face, readiness)
mark(provide, to)
acl(readiness, provide)
amod(form, technical)
cc(other, and)
conj(technical, other)
amod(form, appropriate)
obj(provide, form)
case(assistance, of)
nmod(form, assistance)
advmod(possible, where)
amod(assistance, possible)
punct(help, .)
nmod:poss(goal, we)
amod(goal, central)
nsubj(be, goal)
aux(be, should)
root(ROOT, be)
mark(provide, to)
ccomp(be, provide)
det(incentive, the)
amod(incentive, greatest)
amod(incentive, positive)
obj(provide, incentive)
mark(tackle, for)
det(society, these)
nsubj(tackle, society)
mark(tackle, to)
acl(incentive, tackle)
case(task, boldly)
det(task, the)
obl(tackle, task)
obj(face, which)
nsubj(face, they)
acl:relcl(task, face)
punct(be, .)
case(time, at)
det(time, the)
amod(time, same)
obl(recognize, time)
punct(recognize, ,)
nsubj(recognize, we)
aux(recognize, should)
root(ROOT, recognize)
mark(make, that)
det(obstacle, the)
nsubj(make, obstacle)
mark(change, to)
acl(obstacle, change)
cc(lack, and)
det(lack, the)
conj(obstacle, lack)
case(cohesion, of)
nmod(lack, cohesion)
cc(stability, and)
conj(cohesion, stability)
nsubj(characterize, which)
acl:relcl(lack, characterize)
det(country, these)
obj(characterize, country)
aux(make, may)
ccomp(recognize, make)
obj(make, they)
advmod(prone, particularly)
xcomp(make, prone)
case(diversion, to)
obl(prone, diversion)
cc(adventure, and)
amod(adventure, external)
conj(diversion, adventure)
case(sort, of)
det(sort, all)
nmod(adventure, sort)
punct(recognize, .)
nsubj(seem, it)
aux(seem, may)
root(ROOT, seem)
case(some, to)
obl(seem, some)
case(they, of)
nmod(some, they)
det(success, that)
nsubj:pass(purchase, success)
aux(purchase, can)
aux:pass(purchase, be)
ccomp(seem, purchase)
advmod(less, much)
advmod(dearly, less)
advmod(purchase, dearly)
mark(fishing, by)
advcl(purchase, fishing)
case(water, in)
det(water, the)
amod(water, murky)
obl(fishing, water)
case(politics, of)
amod(politics, international)
nmod(water, politics)
mark(face, than)
mark(face, by)
advcl(fishing, face)
compound:prt(face, up)
case(task, to)
det(task, the)
amod(task, intractable)
obl(face, task)
case(home, at)
nmod(task, home)
punct(seem, .)
nsubj(do, we)
aux(do, should)
root(ROOT, do)
obj(do, what)
nsubj(can, we)
acl:relcl(what, can)
mark(discourage, to)
advcl(do, discourage)
det(conclusion, this)
obj(discourage, conclusion)
punct(discourage, ,)
cc:preconj(offer, both)
mark(offer, by)
advcl(discourage, offer)
obj(offer, assistance)
case(need, for)
nmod:poss(need, they)
amod(need, domestic)
nmod(assistance, need)
cc(react, and)
mark(react, by)
conj(offer, react)
advmod(react, firmly)
case(action, to)
amod(action, irresponsible)
obl(react, action)
case(scene, on)
det(scene, the)
compound(scene, world)
nmod(action, scene)
punct(make, .)
mark(necessary, when)
advcl(make, necessary)
punct(make, ,)
nsubj(make, we)
aux(make, should)
parataxis(do, make)
expl(make, it)
xcomp(make, clear)
mark(lose, that)
nsubj(make, country)
nsubj(choose, which)
acl:relcl(country, choose)
mark(derive, to)
xcomp(choose, derive)
amod(advantage, marginal)
obj(derive, advantage)
case(war, from)
det(war, the)
amod(war, cold)
nmod(advantage, war)
cc(exploit, or)
mark(exploit, to)
conj(derive, exploit)
nmod:poss(potential, they)
obj(exploit, potential)
mark(disrupt, for)
acl(potential, disrupt)
det(security, the)
obj(disrupt, security)
case(world, of)
det(world, the)
nmod(security, world)
aux(lose, will)
advmod(lose, not)
advmod(lose, only)
acl(potential, lose)
nmod:poss(sympathy, we)
obj(lose, sympathy)
cc(risk, but)
advmod(risk, also)
conj(lose, risk)
nmod:poss(prospect, they)
amod(prospect, own)
obj(risk, prospect)
case(development, for)
amod(development, orderly)
obl(risk, development)
punct(do, .)
case(nation, as)
det(nation, a)
obl(feel, nation)
punct(feel, ,)
nsubj(feel, we)
root(ROOT, feel)
det(obligation, a)
obj(feel, obligation)
mark(assist, to)
acl(obligation, assist)
amod(country, other)
obj(assist, country)
case(development, in)
nmod:poss(development, they)
obl(assist, development)
punct(feel, ;)
punct(feel, ;)
cc(pertain, but)
det(obligation, this)
nsubj(pertain, obligation)
conj(feel, pertain)
advmod(country, only)
case(country, to)
obl(pertain, country)
nsubj(seek, which)
aux(seek, be)
advmod(seek, honestly)
acl:relcl(country, seek)
mark(become, to)
xcomp(seek, become)
amod(member, responsible)
xcomp(become, member)
case(community, of)
det(community, a)
amod(community, stable)
cc(move, and)
advmod(move, forward)
punct(move, -)
conj(stable, move)
compound(community, world)
nmod(member, community)
punct(feel, . )
amod(society, transitional)
nsubj(find, society)
mark(look, when)
nsubj(look, we)
advcl(society, look)
case(country, at)
obl(look, country)
case(Iran, like)
nmod(country, Iran)
punct(Iraq, ,)
conj(Iran, Iraq)
punct(Pakistan, ,)
conj(Iran, Pakistan)
punct(Burma, ,)
cc(Burma, and)
conj(Iran, Burma)
punct(Iran, ,)
advmod(make, where)
amod(progress, substantial)
nsubj:pass(make, progress)
aux(make, have)
aux:pass(make, be)
acl:relcl(Iran, make)
mark(create, in)
advcl(make, create)
det(supply, a)
amod(supply, minimum)
obj(create, supply)
case(man, of)
amod(man, modern)
nmod(supply, man)
cc(capital, and)
case(capital, of)
amod(capital, social)
amod(capital, overhead)
conj(man, capital)
punct(exist, ,)
cc(exist, and)
mark(exist, where)
nsubj(exist, institution)
case(government, of)
amod(government, centralize)
nmod(institution, government)
advcl(find, exist)
punct(find, ,)
nsubj(find, we)
root(ROOT, find)
det(category, a)
amod(category, second)
obj(find, category)
case(country, of)
nmod(category, country)
case(set, with)
det(set, a)
amod(set, different)
nmod(country, set)
case(problem, of)
nmod(set, problem)
cc(priority, and)
advmod(different, hence)
amod(priority, different)
conj(problem, priority)
case(policy, for)
nmod(priority, policy)
punct(find, .)
det(man, the)
nsubj:pass(commit, man)
case(power, in)
nmod(man, power)
aux:pass(commit, be)
root(ROOT, commit)
case(principle, in)
obl(commit, principle)
case(modernization, to)
nmod(principle, modernization)
punct(proceed, ,)
cc(proceed, but)
amod(change, economic)
cc(social, and)
conj(economic, social)
nsubj(proceed, change)
aux(proceed, be)
conj(commit, proceed)
advmod(erratically, only)
advmod(proceed, erratically)
punct(commit, .)
amod(enterprise, isolate)
nsubj:pass(launch, enterprise)
aux(launch, have)
aux:pass(launch, be)
root(ROOT, launch)
punct(related, ,)
cc(related, but)
nsubj(related, they)
cop(related, be)
advmod(related, not)
advmod(related, yet)
conj(launch, related)
case(other, to)
det(other, each)
obl(related, other)
case(pattern, in)
det(pattern, a)
amod(pattern, meaningful)
obl(related, pattern)
punct(launch, .)
det(society, the)
nsubj(likely, society)
cop(likely, be)
root(ROOT, likely)
mark(characterize, to)
aux:pass(characterize, be)
xcomp(likely, characterize)
mark(have, by)
advcl(characterize, have)
det(sector, a)
advmod(modernize, fairly)
amod(sector, modernize)
amod(sector, urban)
obj(have, sector)
cc(sector, and)
det(sector, a)
advmod(untouched, relatively)
amod(sector, untouched)
amod(sector, rural)
conj(sector, sector)
punct(have, ,)
case(communication, with)
advmod(poor, very)
amod(communication, poor)
obl(have, communication)
case(two, between)
det(two, the)
nmod(communication, two)
punct(likely, .)
nsubj:pass(impede, Progress)
aux:pass(impede, be)
root(ROOT, impede)
case(inhibition, by)
amod(inhibition, psychological)
obl(impede, inhibition)
case(action, to)
amod(action, effective)
nmod(inhibition, action)
case(those, among)
nmod(action, those)
case(power, in)
nmod(those, power)
cc(failure, and)
case(failure, by)
det(failure, a)
conj(those, failure)
case(part, on)
nmod:poss(part, they)
nmod(failure, part)
mark(understand, to)
acl(failure, understand)
advmod(mobilize, how)
amod(resource, local)
nsubj:pass(mobilize, resource)
punct(human, ,)
conj(resource, human)
cc(material, and)
conj(resource, material)
punct(mobilize, ,)
aux(mobilize, can)
aux:pass(mobilize, be)
ccomp(understand, mobilize)
mark(achieve, to)
advcl(mobilize, achieve)
det(goal, the)
amod(goal, national)
obj(achieve, goal)
case(modernization, of)
nmod(goal, modernization)
advmod(accept, already)
advmod(accept, symbolically)
acl(goal, accept)
punct(share, .)
amod(country, most)
nsubj(share, country)
case(category, in)
det(category, this)
amod(category, second)
nmod(country, category)
conj(impede, share)
det(difficulty, the)
obj(share, difficulty)
mark(have, of)
acl(difficulty, have)
obj(have, many)
case(structure, of)
det(structure, the)
obl(many, structure)
case(system, of)
det(system, a)
amod(system, modern)
amod(system, political)
cc(social, and)
conj(political, social)
nmod(structure, system)
case(standard, without)
det(standard, the)
amod(standard, modern)
nmod(system, standard)
case(performance, of)
nmod(standard, performance)
acl(performance, require)
mark(make, to)
xcomp(require, make)
obj(make, they)
xcomp(make, effective)
punct(impede, .)
case(society, in)
det(society, these)
advmod(change, rapidly)
amod(society, change)
obl(be, society)
expl(be, there)
root(ROOT, be)
advmod(be, also)
advmod(little, too)
amod(appreciation, little)
nsubj(be, appreciation)
case(need, of)
det(need, the)
nmod(appreciation, need)
case(effort, for)
nmod(need, effort)
mark(achieve, to)
acl(effort, achieve)
obj(achieve, goal)
punct(be, .)
det(period, the)
amod(period, colonial)
nsubj(leave, period)
aux(leave, have)
advmod(leave, generally)
root(ROOT, leave)
obj(leave, people)
xcomp(leave, believe)
mark(can, that)
nsubj(can, government)
ccomp(believe, can)
punct(provide, ,)
mark(wish, if)
nsubj(wish, it)
advcl(provide, wish)
punct(provide, ,)
parataxis(leave, provide)
det(manner, all)
obj(provide, manner)
case(service, of)
nmod(manner, service)
case(they, for)
nmod(service, they)
punct(provide, --)
cc(have, and)
mark(have, that)
mark(have, with)
compound(man, independence)
amod(man, free)
nsubj(have, man)
aux(have, do)
advmod(have, not)
conj(provide, have)
mark(work, to)
xcomp(have, work)
mark(realize, to)
advcl(work, realize)
det(benefit, the)
obj(realize, benefit)
case(life, of)
amod(life, modern)
nmod(benefit, life)
punct(realize, .)
case(example, for)
nmod(accordance, example)
punct(accordance, ,)
case(accordance, in)
obl(announce, accordance)
case(fashion, with)
det(fashion, the)
nmod(accordance, fashion)
case(time, of)
det(time, the)
nmod(fashion, time)
punct(announce, ,)
advmod(transitional, most)
amod(society, transitional)
nsubj(announce, society)
aux(announce, have)
conj(leave, announce)
amod(plan, economic)
compound(plan, development)
obj(announce, plan)
case(number, of)
amod(number, varying)
nmod(plan, number)
case(year, of)
nmod(number, year)
punct(announce, ;)
punct(announce, ;)
nsubj(mystique, such)
cop(mystique, be)
det(mystique, the)
advcl(announce, mystique)
case(planning, of)
nmod(mystique, planning)
mark(expect, that)
nsubj(expect, people)
acl:relcl(mystique, expect)
mark(follow, that)
nsubj(follow, fulfillment)
case(plan, of)
det(plan, the)
nmod(fulfillment, plan)
aux(follow, will)
ccomp(expect, follow)
advmod(follow, automatically)
case(announcement, upon)
nmod:poss(announcement, its)
obl(follow, announcement)
punct(leave, .)
det(service, the)
amod(service, civil)
nsubj(inadequate, service)
case(society, in)
amod(society, such)
nmod(service, society)
cop(inadequate, be)
advmod(inadequate, generally)
root(ROOT, inadequate)
mark(deal, to)
xcomp(inadequate, deal)
advmod(deal, competently)
mark(face, with)
det(problem, the)
nsubj(face, problem)
advcl(deal, face)
obj(face, they)
punct(inadequate, ;)
punct(inadequate, ;)
cc(equate, and)
nmod:poss(member, they)
nsubj(equate, member)
advmod(equate, often)
conj(inadequate, equate)
det(career, a)
compound(career, government)
obj(equate, career)
case(security, with)
nmod(career, security)
cc(status, and)
conj(security, status)
cc(sacrifice, rather)
fixed(rather, than)
case(sacrifice, with)
conj(security, sacrifice)
punct(discipline, ,)
compound(discipline, self)
punct(discipline, -)
conj(sacrifice, discipline)
punct(competence, ,)
cc(competence, and)
conj(sacrifice, competence)
punct(press, .)
amod(policy, american)
nsubj(press, policy)
aux(press, should)
parataxis(inadequate, press)
advmod(press, constantly)
det(view, the)
obj(press, view)
mark(demand, that)
mark(demand, until)
det(government, these)
nsubj(demand, government)
advcl(press, demand)
obj(demand, efficiency)
cc(effectiveness, and)
conj(efficiency, effectiveness)
case(bureaucracy, of)
nmod:poss(bureaucracy, they)
nmod(efficiency, bureaucracy)
expl(hope, there)
cop(hope, be)
advmod(hope, not)
det(hope, the)
amod(hope, slightest)
acl(view, hope)
mark(modernize, that)
nsubj(modernize, they)
aux(modernize, will)
cc:preconj(modernize, either)
acl:relcl(hope, modernize)
mark(democratize, of)
advcl(modernize, democratize)
nmod:poss(society, they)
obj(democratize, society)
punct(inadequate, .)
nsubj(spread, we)
aux(spread, should)
root(ROOT, spread)
det(view, the)
obj(spread, view)
mark(matter, that)
nsubj(matter, planning)
cc(development, and)
amod(development, national)
conj(planning, development)
cop(matter, be)
amod(matter, serious)
acl(view, matter)
nsubj(call, which)
acl:relcl(matter, call)
case(effort, for)
obl(call, effort)
cc(enthusiasm, as)
fixed(as, well)
fixed(as, as)
obl(call, enthusiasm)
punct(spread, .)
case(all, above)
obl(seek, all)
punct(seek, ,)
nsubj(seek, we)
aux(seek, should)
root(ROOT, seek)
mark(encourage, to)
xcomp(seek, encourage)
det(leader, the)
obj(encourage, leader)
case(society, of)
det(society, these)
nmod(leader, society)
mark(accept, to)
advcl(encourage, accept)
det(fact, the)
amod(fact, unpleasant)
obj(accept, fact)
mark(responsible, that)
nsubj(responsible, they)
cop(responsible, be)
acl(fact, responsible)
case(fate, for)
nmod:poss(fate, they)
obl(responsible, fate)
punct(seek, .)
advmod(framework, only)
case(framework, within)
det(framework, the)
obl(provide, framework)
case(relationship, of)
det(relationship, a)
amod(relationship, mature)
nmod(framework, relationship)
acl(relationship, characterize)
case(appraisal, by)
amod(appraisal, honest)
obl(characterize, appraisal)
case(performance, of)
nmod(appraisal, performance)
aux(provide, can)
nsubj(provide, we)
root(ROOT, provide)
xcomp(provide, tell)
obj(tell, assistance)
punct(provide, .)
case(respect, with)
obl(afford, respect)
case(country, to)
det(country, those)
nmod(respect, country)
nmod:poss(leader, whose)
nsubj(prefer, leader)
acl:relcl(country, prefer)
mark(live, to)
xcomp(prefer, live)
case(illusion, with)
nmod:poss(illusion, they)
obl(live, illusion)
punct(afford, ,)
nsubj(afford, we)
aux(afford, can)
root(ROOT, afford)
mark(wait, to)
xcomp(afford, wait)
punct(afford, ,)
case(time, for)
case(time, in)
obl(become, time)
nmod:poss(lack, they)
amod(lack, comparative)
nsubj(become, lack)
case(progress, of)
nmod(lack, progress)
aux(become, will)
conj(afford, become)
xcomp(become, clear)
mark(see, for)
nsubj(see, all)
mark(see, to)
advcl(clear, see)
punct(afford, .)
nmod:poss(assistance, we)
amod(assistance, technical)
nsubj(place, assistance)
case(country, to)
det(country, these)
nmod(assistance, country)
aux(place, should)
root(ROOT, place)
amod(emphasis, special)
obj(place, emphasis)
mark(induce, on)
advcl(place, induce)
det(government, the)
amod(government, central)
obj(induce, government)
mark(assume, to)
xcomp(induce, assume)
det(role, the)
obj(assume, role)
case(advisor, of)
nmod(role, advisor)
cc(guide, and)
conj(advisor, guide)
obj(assume, which)
case(stage, at)
det(stage, a)
amod(stage, earlier)
obl(assume, stage)
amod(expert, foreign)
nsubj(assume, expert)
ccomp(assume, assume)
mark(deal, in)
advcl(assume, deal)
case(government, with)
det(government, the)
amod(government, central)
obl(deal, government)
punct(place, .)
nsubj(encourage, we)
aux(encourage, should)
root(ROOT, encourage)
det(government, the)
obj(encourage, government)
mark(develop, to)
xcomp(encourage, develop)
nmod:poss(assistance, they)
amod(assistance, own)
amod(assistance, technical)
obj(develop, assistance)
case(community, to)
nmod(assistance, community)
punct(government, ,)
compound(government, state)
cc(provincial, and)
conj(state, provincial)
conj(community, government)
punct(community, ,)
amod(community, rural)
conj(community, community)
punct(group, ,)
cc(group, and)
amod(group, other)
amod(group, smaller)
conj(community, group)
punct(develop, ,)
advcl(develop, make)
xcomp(make, certain)
mark(neglect, that)
det(segment, no)
amod(segment, important)
nsubj:pass(neglect, segment)
case(economy, of)
det(economy, the)
nmod(segment, economy)
aux:pass(neglect, be)
ccomp(certain, neglect)
punct(encourage, .)
advmod(underline, simultaneously)
nsubj(underline, we)
aux(underline, should)
aux(underline, be)
root(ROOT, underline)
det(interrelationships, the)
obj(underline, interrelationships)
case(progress, of)
amod(progress, technical)
nmod(interrelationships, progress)
case(field, in)
amod(field, various)
nmod(progress, field)
punct(underline, ,)
advcl(underline, show)
advmod(introduce, how)
amod(training, agricultural)
nsubj:pass(introduce, training)
aux(introduce, can)
aux:pass(introduce, be)
ccomp(show, introduce)
case(education, into)
obl(introduce, education)
punct(affect, ,)
advmod(affect, how)
nsubj(affect, health)
advcl(introduce, affect)
compound(productivity, labor)
obj(affect, productivity)
punct(benefit, ,)
advmod(small, how)
amod(business, small)
nsubj(benefit, business)
aux(benefit, can)
conj(affect, benefit)
det(community, the)
amod(community, rural)
compound(community, farm)
obj(benefit, community)
punct(relate, ,)
cc(relate, and)
punct(relate, ,)
case(all, above)
nmod(progress, all)
punct(relate, ,)
advmod(relate, how)
nsubj(relate, progress)
case(field, in)
det(field, each)
nmod(progress, field)
conj(benefit, relate)
case(progress, to)
amod(progress, national)
obl(relate, progress)
punct(underline, .)
nsubj(demonstrate, Efforts)
case(Program, such)
fixed(such, as)
det(Program, the)
compound(Program, community)
compound(Program, Development)
nmod(Efforts, Program)
case(Philippines, in)
det(Philippines, the)
nmod(Program, Philippines)
aux(demonstrate, have)
root(ROOT, demonstrate)
mark(work, that)
amod(society, transitional)
nsubj(work, society)
aux(work, can)
ccomp(demonstrate, work)
case(development, toward)
amod(development, balance)
amod(development, national)
obl(work, development)
punct(demonstrate, .)
mark(achieve, to)
advcl(such, achieve)
det(goal, this)
obj(achieve, goal)
case(development, of)
amod(development, balance)
nmod(goal, development)
punct(such, ,)
nsubj(such, communication)
case(government, between)
det(government, the)
amod(government, central)
nmod(communication, government)
cc(community, and)
det(community, the)
amod(community, local)
conj(government, community)
aux(such, must)
cop(such, be)
root(ROOT, such)
mark(take, that)
det(need, the)
nsubj:pass(take, need)
cc(aspiration, and)
conj(need, aspiration)
case(people, of)
det(people, the)
nmod(need, people)
nmod:npmod(people, themselves)
aux:pass(take, be)
advmod(take, effectively)
ccomp(such, take)
case(account, into)
obl(take, account)
punct(such, .)
mark(impose, if)
compound(program, modernization)
nsubj:pass(impose, program)
aux:pass(impose, be)
advcl(encounter, impose)
case(above, from)
obl(impose, above)
punct(encounter, ,)
case(understanding, without)
det(understanding, the)
obl(impose, understanding)
cc(cooperation, and)
conj(understanding, cooperation)
case(people, of)
det(people, the)
nmod(understanding, people)
punct(encounter, ,)
nsubj(encounter, they)
aux(encounter, will)
root(ROOT, encounter)
compound(difficulty, grave)
obj(encounter, difficulty)
punct(encounter, .)
compound(reform, land)
nsubj(likely, reform)
cop(likely, be)
root(ROOT, likely)
mark(issue, to)
cop(issue, be)
det(issue, a)
compound(issue, press)
xcomp(likely, issue)
case(many, in)
nmod(issue, many)
case(country, of)
det(country, these)
nmod(many, country)
punct(likely, .)
expl(policy, it)
aux(policy, should)
cop(policy, be)
amod(policy, american)
root(ROOT, policy)
advmod(only, not)
cc:preconj(encourage, only)
mark(encourage, to)
csubj(policy, encourage)
amod(program, effective)
compound(reform, land)
compound(program, reform)
obj(encourage, program)
cc(underline, but)
advmod(underline, also)
mark(underline, to)
conj(encourage, underline)
det(relation, the)
obj(underline, relation)
case(reform, of)
amod(reform, such)
nmod(relation, reform)
case(growth, to)
det(growth, the)
amod(growth, economic)
nmod(reform, growth)
cc(modernization, and)
conj(growth, modernization)
case(society, of)
det(society, the)
nmod(modernization, society)
punct(policy, .)
case(policy, as)
det(policy, a)
amod(policy, isolate)
obl(likely, policy)
punct(likely, ,)
compound(reform, land)
nsubj(likely, reform)
cop(likely, be)
root(ROOT, likely)
mark(disruptive, to)
cop(disruptive, be)
advmod(disruptive, politically)
xcomp(likely, disruptive)
punct(likely, ;)
punct(likely, ;)
case(part, as)
obl(gain, part)
case(effort, of)
det(effort, a)
amod(effort, larger)
compound(effort, development)
nmod(part, effort)
punct(gain, ,)
advmod(gain, however)
punct(gain, ,)
nsubj(gain, it)
aux(gain, may)
parataxis(likely, gain)
amod(acceptance, wide)
obj(gain, acceptance)
punct(likely, .)
nsubj:pass(recognize, it)
aux(recognize, should)
advmod(recognize, also)
aux:pass(recognize, be)
root(ROOT, recognize)
mark(solve, that)
det(problem, the)
nsubj:pass(solve, problem)
case(tenancy, of)
amod(tenancy, rural)
nmod(problem, tenancy)
aux(solve, can)
advmod(solve, not)
aux:pass(solve, be)
ccomp(recognize, solve)
case(decree, by)
amod(decree, administrative)
obl(solve, decree)
advmod(solve, alone)
punct(recognize, .)
compound(reform, land)
compound(program, reform)
nsubj(need, program)
root(ROOT, need)
mark(supplement, to)
aux:pass(supplement, be)
xcomp(need, supplement)
case(program, with)
obl(supplement, program)
mark(promote, for)
acl(program, promote)
amod(credit, rural)
obj(promote, credit)
cc(assistance, and)
amod(assistance, technical)
conj(credit, assistance)
case(agriculture, in)
obl(promote, agriculture)
punct(need, .)
advmod(begin, lastly)
punct(planner, ,)
amod(planner, governmental)
cc(private, and)
conj(governmental, private)
nsubj(begin, planner)
aux(begin, will)
case(stage, at)
det(stage, this)
obl(begin, stage)
parataxis(need, begin)
mark(see, to)
xcomp(begin, see)
amod(requirement, large)
amod(requirement, capital)
obj(see, requirement)
acl(requirement, loom)
advmod(loom, ahead)
punct(begin, .)
mark(hold, by)
advcl(provide, hold)
compound:prt(hold, out)
obj(hold, prospect)
case(assistance, for)
amod(assistance, external)
compound(assistance, capital)
nmod(prospect, assistance)
punct(provide, ,)
det(States, the)
compound(States, United)
nsubj(provide, States)
aux(provide, can)
root(ROOT, provide)
amod(incentive, strong)
obj(provide, incentive)
mark(prepare, to)
acl(incentive, prepare)
case(drive, for)
det(drive, the)
amod(drive, concerted)
amod(drive, economic)
obl(prepare, drive)
amod(drive, necessary)
mark(achieve, to)
advcl(necessary, achieve)
compound(sustain, self)
punct(sustain, -)
compound(growth, sustain)
obj(achieve, growth)
punct(provide, .)
advmod(modernize, actively)
advcl(country, modernize)
obj(modernize, society)
case(stage, at)
det(stage, a)
amod(stage, third)
nmod(society, stage)
case(process, in)
det(process, the)
compound(process, modernization)
nmod(stage, process)
cop(country, be)
amod(country, such)
root(ROOT, country)
case(India, as)
nmod(country, India)
punct(Brazil, ,)
conj(India, Brazil)
punct(Philippines, ,)
det(Philippines, the)
conj(India, Philippines)
punct(Taiwan, ,)
cc(Taiwan, and)
conj(India, Taiwan)
punct(Taiwan, ,)
nsubj(ready, which)
cop(ready, be)
acl:relcl(Taiwan, ready)
cc(commit, and)
conj(ready, commit)
mark(move, to)
xcomp(commit, move)
case(stage, into)
det(stage, the)
obl(move, stage)
case(growth, of)
compound(sustain, self)
punct(sustain, -)
compound(growth, sustain)
nmod(stage, growth)
punct(country, .)
nsubj(continue, they)
aux(continue, must)
root(ROOT, continue)
mark(satisfy, to)
xcomp(continue, satisfy)
amod(need, basic)
amod(need, capital)
obj(satisfy, need)
punct(continue, ;)
punct(continue, ;)
cc(persist, and)
expl(persist, there)
conj(continue, persist)
det(problem, the)
amod(problem, dual)
obj(persist, problem)
mark(maintain, of)
acl(problem, maintain)
amod(unity, operational)
obj(maintain, unity)
case(program, around)
det(program, a)
amod(program, national)
obl(maintain, program)
case(modernization, of)
nmod(program, modernization)
mark(decentralize, while)
advmod(decentralize, simultaneously)
advcl(maintain, decentralize)
obj(decentralize, participation)
case(program, in)
det(program, the)
obl(decentralize, program)
case(group, to)
amod(group, wider)
cc(wider, and)
conj(wider, wider)
obl(decentralize, group)
punct(continue, .)
cc(make, but)
det(country, these)
nsubj(make, country)
aux(make, have)
root(ROOT, make)
amod(stride, big)
obj(make, stride)
mark(develop, toward)
acl(stride, develop)
det(capital, the)
amod(capital, necessary)
amod(capital, human)
cc(social, and)
conj(human, social)
amod(capital, overhead)
obj(develop, capital)
punct(make, ;)
punct(make, ;)
nsubj(establish, they)
aux(establish, have)
parataxis(make, establish)
advmod(stable, reasonably)
amod(institution, stable)
cc(effective, and)
conj(stable, effective)
amod(institution, governmental)
obj(establish, institution)
case(level, at)
amod(level, national)
cc(local, and)
conj(national, local)
nmod(institution, level)
punct(establish, ;)
punct(make, ;)
cc(begin, and)
nsubj(begin, they)
aux(begin, have)
conj(make, begin)
mark(develop, to)
xcomp(begin, develop)
det(capacity, a)
obj(develop, capacity)
mark(deal, to)
acl(capacity, deal)
advmod(deal, realistically)
cc(simultaneously, and)
conj(realistically, simultaneously)
case(sector, with)
det:predet(sector, all)
det(sector, the)
amod(sector, major)
obl(deal, sector)
case(economy, of)
nmod:poss(economy, they)
nmod(sector, economy)
punct(make, .)
case(front, on)
det(front, the)
amod(front, economic)
obl(be, front)
punct(be, ,)
det(priority, the)
amod(priority, first)
nsubj(be, priority)
case(country, of)
det(country, these)
nmod(priority, country)
root(ROOT, be)
mark(mobilize, to)
ccomp(be, mobilize)
det(volume, a)
advmod(increase, vastly)
amod(volume, increase)
obj(mobilize, volume)
case(resource, of)
nmod(volume, resource)
punct(be, .)
amod(task, several)
amod(task, related)
nsubj:pass(carry, task)
aux(carry, must)
aux:pass(carry, be)
root(ROOT, carry)
compound:prt(carry, out)
mark(be, if)
compound(sustain, self)
punct(sustain, -)
compound(growth, sustain)
nsubj(be, growth)
advcl(carry, be)
mark(achieve, to)
aux:pass(achieve, be)
xcomp(be, achieve)
punct(carry, .)
det(country, these)
nsubj(formulate, country)
aux(formulate, must)
root(ROOT, formulate)
det(program, a)
amod(program, comprehensive)
punct(program, ,)
amod(term, long)
punct(term, -)
compound(program, term)
obj(formulate, program)
acl(program, cover)
det(objective, the)
obj(cover, objective)
case(private, of)
cc:preconj(private, both)
det(private, the)
nmod(objective, private)
cc(sector, and)
det(sector, the)
amod(sector, public)
conj(private, sector)
case(economy, of)
det(economy, the)
nmod(sector, economy)
punct(formulate, .)
nsubj(able, they)
aux(able, must)
case(planning, in)
nmod:poss(planning, they)
obl(able, planning)
cop(able, be)
root(ROOT, able)
mark(count, to)
xcomp(able, count)
case(commitment, on)
case(least, at)
nmod(tentative, least)
amod(commitment, tentative)
obl(count, commitment)
case(assistance, of)
amod(assistance, foreign)
compound(assistance, capital)
nmod(commitment, assistance)
case(period, over)
obl(count, period)
case(year, of)
amod(year, several)
nmod(period, year)
punct(able, .)
amod(import, Capital)
nsubj:pass(employ, import)
acl(import, draw)
case(number, from)
det(number, a)
obl(draw, number)
case(source, of)
nmod(number, source)
aux(employ, must)
aux:pass(employ, be)
root(ROOT, employ)
cc(combine, and)
conj(employ, combine)
advmod(enough, skillfully)
advmod(combine, enough)
mark(permit, to)
advcl(combine, permit)
amod(programming, domestic)
compound(programming, investment)
obj(permit, programming)
mark(go, to)
acl(programming, go)
advmod(go, forward)
punct(employ, .)
compound(flow, Capital)
nsubj:pass(coordinate, flow)
aux(coordinate, must)
aux:pass(coordinate, be)
root(ROOT, coordinate)
case(need, with)
amod(need, national)
obl(coordinate, need)
cc(planning, and)
conj(need, planning)
punct(coordinate, .)
advmod(effect, finally)
punct(effect, ,)
det(balance, a)
nsubj:pass(effect, balance)
aux(effect, must)
aux:pass(effect, be)
root(ROOT, effect)
case(finance, among)
compound(finance, project)
obl(effect, finance)
punct(utilization, ,)
conj(finance, utilization)
case(surplus, of)
amod(surplus, agricultural)
nmod(finance, surplus)
punct(balance, ,)
cc(balance, and)
amod(balance, general)
conj(finance, balance)
case(support, of)
compound(support, payment)
nmod(balance, support)
punct(effect, .)
advmod(cumulative, thus)
punct(be, ,)
mark(cumulative, although)
det(agenda, the)
nsubj(cumulative, agenda)
case(assistance, of)
amod(assistance, external)
nmod(agenda, assistance)
case(sphere, in)
det(sphere, the)
amod(sphere, economic)
nmod(assistance, sphere)
cop(cumulative, be)
advcl(be, cumulative)
punct(remain, ,)
cc(remain, and)
nsubj(remain, many)
case(policy, of)
det(policy, the)
nmod(many, policy)
acl(policy, suggest)
case(nation, for)
obl(suggest, nation)
case(stage, in)
det(stage, the)
amod(stage, earlier)
obl(suggest, stage)
conj(cumulative, remain)
xcomp(remain, relevant)
punct(be, ,)
det(purpose, the)
amod(purpose, basic)
nsubj(be, purpose)
case(policy, of)
amod(policy, american)
amod(policy, economic)
nmod(purpose, policy)
case(stage, during)
det(stage, the)
amod(stage, later)
nmod(purpose, stage)
case(development, of)
nmod(stage, development)
aux(be, should)
root(ROOT, be)
mark(assure, to)
ccomp(be, assure)
det(movement, that)
obj(assure, movement)
case(stage, into)
det(stage, a)
nmod(movement, stage)
case(growth, of)
compound(sustain, self)
punct(sustain, -)
compound(growth, sustain)
nmod(stage, growth)
aux:pass(prevent, be)
advmod(prevent, not)
ccomp(assure, prevent)
case(lack, by)
obl(prevent, lack)
case(exchange, of)
amod(exchange, foreign)
nmod(lack, exchange)
punct(prevent, .)
expl(remain, there)
root(ROOT, remain)
amod(problem, many)
amod(problem, political)
cc(administrative, and)
conj(political, administrative)
nsubj(remain, problem)
mark(solve, to)
aux:pass(solve, be)
acl(problem, solve)
punct(remain, .)
case(thing, for)
nummod(thing, one)
obl(deficient, thing)
punct(deficient, ,)
mark(train, although)
amod(number, considerable)
nsubj:pass(train, number)
case(man, of)
nmod(number, man)
aux(train, have)
aux:pass(train, be)
advcl(deficient, train)
punct(deficient, ,)
nsubj(deficient, bureaucracy)
cop(deficient, be)
advmod(deficient, still)
root(ROOT, deficient)
case(respects, in)
amod(respects, many)
obl(deficient, respects)
punct(deficient, ;)
punct(deficient, ;)
advmod(Service, even)
det(Service, the)
amod(Service, fame)
compound(Service, Indian)
compound(Service, Civil)
nsubj(adequate, Service)
cop(adequate, be)
advmod(adequate, not)
advmod(adequate, fully)
parataxis(deficient, adequate)
case(range, to)
det(range, the)
amod(range, tremendous)
obl(adequate, range)
case(task, of)
nmod(range, task)
nsubj(undertake, it)
aux(undertake, have)
acl:relcl(task, undertake)
punct(assistance, .)
amod(assistance, technical)
conj(range, assistance)
mark(need, in)
compound(personnel, training)
amod(management, middle)
punct(middle, -)
cc(management, and)
amod(management, upper-level)
compound(personnel, management)
nsubj:pass(need, personnel)
aux:pass(need, be)
advmod(need, still)
acl(assistance, need)
case(case, in)
amod(case, many)
obl(need, case)
punct(deficient, .)
expl(be, there)
root(ROOT, be)
advmod(be, also)
amod(problem, more)
amod(problem, basic)
nsubj(be, problem)
punct(be, .)
nsubj(stage, this)
cop(stage, be)
det(stage, the)
root(ROOT, stage)
case(which, at)
obl(take, which)
amod(development, democratic)
nsubj(take, development)
aux(take, must)
acl:relcl(stage, take)
obj(take, place)
mark(be, if)
det(society, the)
nsubj(be, society)
advcl(take, be)
mark(become, to)
ccomp(be, become)
det(community, a)
amod(community, open)
xcomp(become, community)
case(people, of)
amod(people, creative)
nmod(community, people)
punct(stage, .)
advmod(exist, nevertheless)
punct(exist, ,)
nsubj(exist, impulse)
advmod(exist, still)
root(ROOT, exist)
case(elite, among)
det(elite, the)
compound(elite, ruling)
obl(exist, elite)
mark(rationalize, to)
acl(elite, rationalize)
cc(perpetuate, and)
advmod(perpetuate, thus)
mark(perpetuate, to)
conj(rationalize, perpetuate)
det(need, the)
obj(perpetuate, need)
case(practice, for)
amod(practice, centralize)
cc(authoritarian, and)
conj(centralize, authoritarian)
nmod(need, practice)
punct(be, .)
det(danger, another)
amod(danger, great)
nsubj(be, danger)
parataxis(exist, be)
mark(feel, that)
det(class, the)
amod(class, emerge)
amod(class, middle)
nsubj(feel, class)
aux(feel, will)
ccomp(be, feel)
obj(feel, itself)
advmod(alienate, increasingly)
xcomp(feel, alienate)
case(leader, from)
det(leader, the)
amod(leader, political)
obl(alienate, leader)
nsubj(justify, who)
advmod(justify, still)
acl:relcl(leader, justify)
nmod:poss(dominance, they)
obj(justify, dominance)
case(reference, by)
obl(justify, reference)
case(struggle, to)
det(struggle, the)
nmod(reference, struggle)
case(independence, for)
nmod(struggle, independence)
cc(phase, or)
det(phase, the)
amod(phase, early)
conj(independence, phase)
case(nationalism, of)
nmod(phase, nationalism)
punct(exist, .)
det(capacity, the)
nsubj(likely, capacity)
case(intellectual, of)
nmod(capacity, intellectual)
cc(member, and)
conj(intellectual, member)
case(class, of)
det(class, the)
amod(class, new)
amod(class, professional)
nmod(member, class)
mark(contribute, to)
acl(class, contribute)
advmod(contribute, creatively)
case(development, to)
amod(development, national)
obl(contribute, development)
cop(likely, be)
root(ROOT, likely)
mark(destroy, to)
aux:pass(destroy, be)
xcomp(likely, destroy)
case(sense, by)
det(sense, a)
amod(sense, constrain)
obl(destroy, sense)
case(inferiority, of)
nmod(sense, inferiority)
case(class, toward)
cc:preconj(class, both)
nmod:poss(class, they)
amod(class, own)
amod(class, political)
nmod(sense, class)
cc(colleague, and)
nmod:poss(colleague, they)
conj(class, colleague)
cc(counterpart, and)
amod(counterpart, professional)
conj(colleague, counterpart)
case(West, in)
det(West, the)
nmod(counterpart, West)
punct(colleague, .)
advmod(respond, particularly)
mark(party, when)
case(party, base)
case(party, upon)
det(party, a)
amod(party, single)
amod(party, dominant)
obl(respond, party)
punct(respond, ,)
nsubj(respond, government)
aux(respond, may)
parataxis(likely, respond)
case(situation, to)
det:predet(situation, such)
det(situation, a)
obl(respond, situation)
mark(claim, by)
advcl(respond, claim)
det(monopoly, a)
obj(claim, monopoly)
case(understanding, of)
nmod(monopoly, understanding)
case(interest, about)
det(interest, the)
amod(interest, national)
nmod(understanding, interest)
punct(likely, .)
advcl(fail, convinced)
case(wisdom, of)
det(wisdom, the)
obl(convinced, wisdom)
case(action, of)
nmod:poss(action, they)
amod(action, own)
nmod(wisdom, action)
punct(reassure, ,)
cc(reassure, and)
conj(convinced, reassure)
case(promise, by)
det(promise, the)
obl(reassure, promise)
case(program, of)
nmod:poss(program, they)
amod(program, economic)
compound(program, development)
nmod(promise, program)
punct(fail, ,)
nsubj(fail, government)
aux(fail, may)
root(ROOT, fail)
mark(push, to)
xcomp(fail, push)
advmod(push, outward)
mark(win, to)
advcl(push, win)
obj(win, more)
cc(more, and)
conj(more, more)
obj(win, people)
case(effort, to)
det(effort, the)
amod(effort, national)
obl(win, effort)
punct(win, ,)
advcl(win, become)
advmod(rigid, instead)
advmod(rigid, more)
xcomp(become, rigid)
cc(inflexible, and)
conj(rigid, inflexible)
case(policy, in)
nmod:poss(policy, they)
obl(rigid, policy)
punct(fail, .)
amod(policy, american)
nsubj(stress, policy)
case(society, toward)
amod(society, such)
nmod(policy, society)
aux(stress, should)
root(ROOT, stress)
nmod:poss(sympathy, we)
obj(stress, sympathy)
case(class, for)
det(class, the)
amod(class, emerge)
amod(class, social)
cc(professional, and)
conj(social, professional)
obl(stress, class)
punct(stress, .)
nsubj(attempt, it)
aux(attempt, should)
root(ROOT, attempt)
mark(communicate, to)
xcomp(attempt, communicate)
cc:preconj(appreciation, both)
det(appreciation, a)
obj(communicate, appreciation)
case(standard, of)
amod(standard, professional)
nmod(appreciation, standard)
cc(understanding, and)
det(understanding, a)
conj(appreciation, understanding)
case(power, of)
det(power, the)
amod(power, tremendous)
nmod(understanding, power)
cc(potentiality, and)
conj(power, potentiality)
case(society, of)
advmod(open, genuinely)
amod(society, open)
cc(pluralistic, and)
conj(open, pluralistic)
nmod(power, society)
punct(attempt, .)
nsubj(have, we)
root(ROOT, have)
det(obligation, every)
obj(have, obligation)
mark(take, to)
acl(obligation, take)
advmod(take, seriously)
nmod:poss(claim, they)
obj(take, claim)
mark(democratic, to)
cop(democratic, be)
acl(claim, democratic)
cc(free, and)
amod(country, free)
conj(democratic, country)
punct(have, ;)
punct(have, ;)
nsubj(have, we)
advmod(have, also)
parataxis(have, have)
punct(have, ,)
case(consequence, in)
obl(have, consequence)
punct(duty, ,)
det(duty, the)
obj(have, duty)
mark(appraise, to)
acl(duty, appraise)
advmod(appraise, realistically)
cc(performance, and)
advmod(performance, honestly)
nmod:poss(performance, they)
conj(realistically, performance)
cc(communicate, and)
mark(communicate, to)
conj(appraise, communicate)
nmod:poss(judgment, we)
obj(communicate, judgment)
case(leader, to)
nmod:poss(leader, they)
obl(communicate, leader)
case(frank, in)
obl(communicate, frank)
cc(way, but)
amod(way, friendly)
conj(frank, way)
punct(have, .)
det(factor, the)
compound(factor, time)
obj(emphasize, factor)
nsubj(emphasize, we)
aux(emphasize, have)
root(ROOT, emphasize)
mark(take, that)
det(process, the)
compound(process, modernize)
nsubj(take, process)
case(society, in)
det(society, each)
nmod(process, society)
aux(take, will)
ccomp(emphasize, take)
det(period, a)
amod(period, considerable)
obj(take, period)
case(time, of)
nmod(period, time)
punct(emphasize, .)
case(exception, with)
det(exception, the)
obl(concerned, exception)
case(making, of)
compound(making, treaty)
punct(making, -)
nmod(exception, making)
punct(concerned, ,)
amod(relation, foreign)
nsubj(concerned, relation)
cop(concerned, be)
advmod(concerned, historically)
root(ROOT, concerned)
case(part, for)
det(part, the)
amod(part, most)
obl(concerned, part)
case(condition, with)
nmod(part, condition)
case(short, of)
nmod(condition, short)
cc(duration, or)
case(least, at)
obl(measurable, least)
amod(duration, measurable)
nmod(condition, duration)
punct(duration, .)
amod(policy, foreign)
nsubj(take, policy)
advmod(take, now)
parataxis(concerned, take)
case(perspective, on)
det(perspective, a)
amod(perspective, different)
obl(take, perspective)
cc(become, and)
aux(become, must)
conj(take, become)
xcomp(become, skilled)
advmod(merely, not)
cc:preconj(response, merely)
case(response, at)
obl(skilled, response)
cc(also, but)
advmod(projection, also)
case(projection, at)
conj(response, projection)
punct(american, .)
amod(policy, american)
cc(world, and)
amod(world, free)
punct(world, -)
compound(policy, world)
nsubj(affect, policy)
aux(affect, can)
advmod(affect, marginally)
conj(response, affect)
det(pace, the)
obj(affect, pace)
case(transition, of)
nmod(pace, transition)
punct(depend, ;)
punct(affect, ;)
cc(depend, but)
advmod(depend, basically)
det(pace, that)
nsubj(depend, pace)
conj(affect, depend)
case(change, on)
obl(depend, change)
case(supply, in)
det(supply, the)
nmod(change, supply)
case(resource, of)
nmod(supply, resource)
cc(attitude, and)
case(attitude, in)
det(attitude, the)
amod(attitude, human)
conj(resource, attitude)
punct(institution, ,)
amod(institution, political)
conj(attitude, institution)
punct(structure, ,)
cc(structure, and)
amod(structure, social)
conj(attitude, structure)
obj(generate, which)
det(society, each)
nsubj(generate, society)
aux(generate, must)
acl:relcl(structure, generate)
punct(concerned, .)
nsubj(follow, it)
root(ROOT, follow)
mark(have, that)
det(policy, any)
amod(policy, effective)
nsubj(have, policy)
case(country, toward)
det(country, the)
amod(country, underdeveloped)
nmod(policy, country)
aux(have, must)
ccomp(follow, have)
det(horizon, a)
advmod(long, realistically)
amod(horizon, long)
amod(horizon, working)
obj(have, horizon)
punct(follow, .)
nsubj:pass(mark, it)
aux(mark, must)
aux:pass(mark, be)
root(ROOT, mark)
case(patience, by)
det(patience, a)
obl(mark, patience)
cc(persistence, and)
conj(patience, persistence)
nsubj(trademark, which)
aux(trademark, have)
advmod(trademark, not)
advmod(trademark, always)
cop(trademark, be)
nmod:poss(trademark, its)
acl:relcl(patience, trademark)
punct(mark, .)
det(condition, this)
nsubj(affect, condition)
root(ROOT, affect)
advmod(only, not)
cc:preconj(conception, only)
det(conception, the)
obj(affect, conception)
cc(support, but)
advmod(support, also)
det(support, the)
amod(support, legislative)
cc(financial, and)
conj(legislative, financial)
conj(conception, support)
case(policy, of)
amod(policy, foreign)
nmod(support, policy)
punct(conception, ,)
advmod(context, especially)
case(context, in)
det(context, the)
nmod(conception, context)
case(aid, of)
amod(aid, economic)
nmod(context, aid)
punct(context, .)
appos(context, 2)
punct(affect, :)
punct(affect, :)
nsubj(definite, some)
case(function, of)
det(function, the)
amod(function, major)
nmod(some, function)
case(religion, of)
nmod(function, religion)
det(place, the)
appos(function, place)
case(religion, of)
nmod(place, religion)
case(simple, in)
det(simple, the)
amod(society, simple)
punct(society, ,)
compound(society, preliterate)
nsubj(definite, society)
cop(definite, be)
advmod(definite, quite)
root(ROOT, definite)
punct(definite, ;)
punct(definite, ;)
case(complex, as)
det(complex, a)
obl(fit, complex)
nsubj(fit, it)
parataxis(definite, fit)
case(organization, into)
det(organization, the)
amod(organization, whole)
amod(organization, social)
obl(fit, organization)
cc(function, and)
conj(organization, function)
advmod(part, dominantly)
case(part, in)
det(part, every)
obl(fit, part)
case(it, of)
nmod(part, it)
punct(definite, .)
case(society, in)
obl(clear, society)
case(ours, like)
nmod(society, ours)
punct(clear, ,)
advmod(clear, however)
punct(clear, ,)
nsubj(place, it)
cop(clear, be)
nsubj(clear, place)
cop(clear, be)
advmod(clear, less)
root(ROOT, clear)
cc(complex, and)
advmod(complex, more)
conj(clear, complex)
punct(clear, .)
case(diversity, with)
det(diversity, the)
obl(be, diversity)
case(viewpoint, of)
amod(viewpoint, religious)
nmod(diversity, viewpoint)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, difference)
case(opinion, of)
nmod(difference, opinion)
case(feature, as)
fixed(as, to)
det(feature, the)
amod(feature, essential)
nmod(difference, feature)
case(religion, of)
nmod(feature, religion)
punct(be, ;)
punct(be, ;)
cc(be, and)
expl(be, there)
conj(be, be)
amod(opinion, different)
nsubj(be, opinion)
case(function, as)
fixed(as, to)
det(function, the)
amod(function, essential)
nmod(opinion, function)
case(religion, of)
nmod(function, religion)
punct(be, .)
advmod(perform, nevertheless)
punct(perform, ,)
case(most, for)
obl(perform, most)
case(population, of)
det(population, the)
nmod(most, population)
case(society, of)
amod(society, heterogeneous)
amod(society, advanced)
nmod(population, society)
punct(perform, ,)
advmod(perform, though)
advmod(perform, less)
case(portion, for)
det(portion, the)
amod(portion, less)
amod(portion, religious)
obl(less, portion)
punct(perform, ,)
nsubj(perform, religion)
aux(perform, do)
root(ROOT, perform)
amod(function, certain)
amod(function, modal)
amod(function, individual)
cc(social, and)
conj(individual, social)
obj(perform, function)
punct(perform, .)
mark(significance, although)
det(function, the)
amod(function, inner)
nsubj(significance, function)
case(religion, of)
nmod(function, religion)
cop(significance, be)
advmod(significance, not)
case(significance, of)
amod(significance, direct)
advcl(have, significance)
case(organization, in)
amod(organization, social)
nmod(significance, organization)
punct(have, ,)
nsubj(have, they)
root(ROOT, have)
amod(consequence, important)
amod(consequence, indirect)
obj(have, consequence)
punct(have, .)
mark(perform, if)
det(function, the)
amod(function, inner)
nsubj:pass(perform, function)
case(religion, of)
nmod(function, religion)
aux:pass(perform, be)
advcl(associate, perform)
punct(associate, ,)
det(individual, the)
nsubj(associate, individual)
cop(associate, be)
det(associate, a)
amod(associate, compose)
punct(order, ,)
conj(compose, order)
punct(motivate, ,)
conj(compose, motivate)
punct(secure, ,)
cc(secure, and)
advmod(secure, emotionally)
conj(compose, secure)
root(ROOT, associate)
punct(associate, ;)
punct(associate, ;)
nsubj(frustrated, he)
cop(frustrated, be)
advmod(frustrated, not)
advmod(frustrated, greatly)
parataxis(associate, frustrated)
punct(anomic, ,)
cc(anomic, and)
nsubj(anomic, he)
cop(anomic, be)
advmod(anomic, not)
conj(frustrated, anomic)
punct(anomic, ;)
punct(fitted, ;)
nsubj:pass(fitted, he)
aux:pass(fitted, be)
advmod(fitted, better)
parataxis(anomic, fitted)
mark(perform, to)
advcl(fitted, perform)
nmod:poss(life, he)
amod(life, social)
obj(perform, life)
case(fellow, among)
nmod:poss(fellow, he)
obl(perform, fellow)
punct(associate, .)
expl(be, there)
root(ROOT, be)
amod(function, several)
advmod(related, closely)
amod(function, related)
amod(function, inner)
nsubj(be, function)
punct(be, .)
case(analysis, in)
det(analysis, the)
amod(analysis, last)
obl(means, analysis)
punct(means, ,)
nsubj(means, religion)
cop(means, be)
det(means, the)
root(ROOT, means)
case(induce, of)
nmod(means, induce)
punct(formulate, ,)
conj(induce, formulate)
punct(express, ,)
conj(induce, express)
punct(enhance, ,)
conj(induce, enhance)
punct(implement, ,)
conj(induce, implement)
punct(perpetuating, ,)
cc(perpetuating, and)
conj(means, perpetuating)
nmod:poss(experience, man)
case(man, 's)
amod(experience, deepest)
obj(perpetuating, experience)
punct(experience, --)
det(religious, the)
appos(experience, religious)
punct(religious, .)
nsubj(religious, man)
cop(religious, be)
advmod(religious, first)
parataxis(means, religious)
punct(religious, ;)
punct(religious, ;)
det(instrumentality, the)
nsubj(follow, instrumentality)
parataxis(religious, follow)
punct(religious, .)
nsubj(seek, Religion)
root(ROOT, seek)
mark(satisfy, to)
xcomp(seek, satisfy)
amod(need, human)
obj(satisfy, need)
case(pertinence, of)
amod(pertinence, great)
nmod(need, pertinence)
punct(seek, .)
det(thing, the)
amod(thing, significant)
nsubj(occurrence, thing)
case(it, in)
nmod(thing, it)
punct(thing, ,)
case(level, at)
det(level, the)
amod(level, higher)
amod(level, religious)
nmod(thing, level)
punct(occurrence, ,)
cop(occurrence, be)
det(occurrence, the)
amod(occurrence, inner)
amod(occurrence, emotional)
punct(mental, ,)
conj(emotional, mental)
punct(spiritual, ,)
cc(spiritual, and)
conj(emotional, spiritual)
root(ROOT, occurrence)
nsubj(fill, that)
acl:relcl(occurrence, fill)
det(need, the)
amod(need, press)
amod(need, human)
obj(fill, need)
case(preservation, of)
compound(preservation, self)
punct(preservation, -)
nmod(need, preservation)
punct(pacification, ,)
compound(pacification, self)
punct(pacification, -)
conj(preservation, pacification)
punct(completion, ,)
cc(completion, and)
compound(completion, self)
punct(completion, -)
conj(preservation, completion)
punct(occurrence, .)
det(experience, the)
amod(experience, chief)
nsubj(sense, experience)
cop(sense, be)
det(sense, the)
root(ROOT, sense)
case(communion, of)
nmod(sense, communion)
punct(relationship, ,)
cc(relationship, and)
case(religion, in)
det(religion, the)
amod(religion, higher)
obl(relationship, religion)
punct(relationship, ,)
case(relationship, of)
det(relationship, a)
amod(relationship, harmonious)
conj(sense, relationship)
case(power, with)
det(power, the)
amod(power, supernatural)
nmod(relationship, power)
punct(sense, .)
advcl(fact, related)
case(this, to)
obl(related, this)
cop(fact, be)
det(fact, the)
root(ROOT, fact)
mark(define, that)
nsubj(define, most)
case(religion, of)
det(religion, the)
amod(religion, higher)
nmod(most, religion)
acl(fact, define)
case(individual, for)
det(individual, the)
obl(define, individual)
nmod:poss(place, he)
appos(individual, place)
case(universe, in)
det(universe, the)
nmod(place, universe)
cc(give, and)
conj(define, give)
iobj(give, he)
det(feeling, a)
obj(give, feeling)
mark(secure, that)
nsubj(secure, he)
cop(secure, be)
advmod(secure, relatively)
acl(feeling, secure)
case(universe, in)
det(universe, a)
amod(universe, order)
punct(universe, ,)
amod(universe, dependable)
obl(secure, universe)
punct(have, .)
nsubj(have, man)
conj(secure, have)
det(experience, the)
obj(have, experience)
mark(ally, of)
aux:pass(ally, be)
advmod(ally, helpfully)
acl(experience, ally)
case(what, with)
obl(ally, what)
nsubj(understand, he)
aux(understand, can)
advmod(understand, not)
advmod(understand, fully)
acl:relcl(what, understand)
punct(part, ;)
punct(have, ;)
nsubj(part, he)
cop(part, be)
det(part, a)
amod(part, coordinate)
parataxis(have, part)
case(all, of)
nmod(part, all)
case(energy, of)
det(energy, the)
amod(energy, mysterious)
nmod(all, energy)
cc(being, and)
conj(energy, being)
cc(movement, and)
conj(energy, movement)
punct(fact, .)
det(universe, the)
nsubj(home, universe)
cop(home, be)
det(home, a)
amod(home, safe)
cc(permanent, and)
conj(safe, permanent)
root(ROOT, home)
punct(home, . )
det(number, a)
nsubj(satisfy, number)
case(religion, of)
nmod(number, religion)
advmod(satisfy, also)
root(ROOT, satisfy)
case(need, for)
det:predet(need, many)
det(need, the)
obl(satisfy, need)
mark(link, of)
aux:pass(link, be)
acl(need, link)
case(ultimate, with)
det(ultimate, the)
obl(link, ultimate)
cc(eternal, and)
conj(ultimate, eternal)
punct(satisfy, .)
nsubj(defeat, death)
cop(defeat, be)
advmod(defeat, not)
amod(defeat, permanent)
parataxis(satisfy, defeat)
cc(disappearance, and)
conj(defeat, disappearance)
punct(defeat, ;)
punct(defeat, ;)
nsubj(have, man)
parataxis(defeat, have)
det(chance, a)
amod(chance, second)
obj(have, chance)
punct(defeat, .)
nsubj:pass(lose, he)
aux:pass(lose, be)
advmod(lose, not)
root(ROOT, lose)
case(abyss, in)
det(abyss, the)
obl(lose, abyss)
case(time, of)
amod(time, endless)
nmod(abyss, time)
punct(lose, ;)
punct(lose, ;)
nsubj(have, he)
parataxis(lose, have)
obj(have, endless)
ccomp(have, be)
punct(lose, .)
nsubj(offer, Religion)
case(best, at)
nmod:poss(best, its)
nmod(Religion, best)
advmod(offer, also)
root(ROOT, offer)
det(experience, the)
obj(offer, experience)
case(fulfillment, of)
amod(fulfillment, spiritual)
nmod(experience, fulfillment)
mark(invite, by)
advcl(offer, invite)
obj(invite, man)
case(realm, into)
det(realm, the)
amod(realm, highest)
obl(invite, realm)
case(spirit, of)
det(spirit, the)
nmod(realm, spirit)
punct(offer, .)
nsubj(summate, Religion)
aux(summate, can)
root(ROOT, summate)
punct(epitomize, ,)
conj(summate, epitomize)
punct(relate, ,)
conj(summate, relate)
punct(conserve, ,)
cc(conserve, and)
conj(summate, conserve)
det:predet(ideal, all)
det(ideal, the)
amod(ideal, highest)
obj(conserve, ideal)
cc(value, and)
conj(ideal, value)
punct(ideal, --)
amod(ideal, ethical)
punct(aesthetic, ,)
conj(ethical, aesthetic)
punct(religious, ,)
cc(religious, and)
conj(ethical, religious)
punct(ethical, --)
case(man, of)
obl(ethical, man)
acl(man, form)
case(culture, in)
nmod:poss(culture, he)
obl(form, culture)
punct(summate, .)
expl(be, there)
root(ROOT, be)
advmod(be, also)
det(possibility, the)
nsubj(be, possibility)
punct(possibility, ,)
case(religion, among)
amod(religion, higher)
nmod(possibility, religion)
punct(possibility, ,)
mark(experience, of)
acl(possibility, experience)
amod(meaning, consistent)
obj(experience, meaning)
case(life, in)
nmod(meaning, life)
cc(enjoy, and)
conj(experience, enjoy)
obj(enjoy, guidance)
cc(expansiveness, and)
conj(guidance, expansiveness)
punct(be, .)
det(kind, the)
root(ROOT, kind)
case(experience, of)
amod(experience, religious)
nmod(kind, experience)
mark(seek, that)
amod(modern, most)
nsubj(seek, modern)
acl:relcl(kind, seek)
advmod(only, not)
cc:preconj(provide, only)
ccomp(seek, provide)
punct(clarify, ,)
conj(provide, clarify)
punct(relate, ,)
cc(relate, and)
conj(provide, relate)
amod(yearning, human)
obj(relate, yearning)
punct(value, ,)
conj(yearning, value)
punct(ideal, ,)
conj(yearning, ideal)
punct(purpose, ,)
cc(purpose, and)
conj(yearning, purpose)
punct(provide, ;)
punct(provide, ;)
nsubj(provide, it)
advmod(provide, also)
parataxis(kind, provide)
obj(provide, facility)
cc(incitement, and)
conj(facility, incitement)
case(development, for)
det(development, the)
obl(provide, development)
case(personality, of)
nmod(development, personality)
punct(sociality, ,)
conj(personality, sociality)
punct(creativeness, ,)
cc(creativeness, and)
conj(personality, creativeness)
punct(kind, .)
case(impulse, under)
det(impulse, the)
amod(impulse, religious)
obl(have, impulse)
punct(have, ,)
mark(have, whether)
nsubj(have, theistic)
cc(humanistic, or)
conj(theistic, humanistic)
punct(have, ,)
nsubj(have, man)
root(ROOT, have)
obj(have, joy)
case(living, in)
obl(have, living)
punct(have, ;)
punct(lead, ;)
nsubj(lead, life)
parataxis(have, lead)
advmod(lead, somewhere)
punct(have, .)
nsubj(be, Religion)
case(best, at)
nmod:poss(best, its)
nmod(Religion, best)
root(ROOT, be)
advmod(be, out)
case(front, in)
obl(out, front)
punct(out, ,)
advmod(beckoning, ever)
ccomp(be, beckoning)
cc(lead, and)
conj(beckoning, lead)
advmod(lead, on)
punct(mobilize, ,)
cc(have, and)
punct(mobilize, ,)
mark(put, as)
nsubj(put, Lippman)
advcl(mobilize, put)
obj(put, it)
punct(mobilize, ,)
punct(mobilize, ``)
parataxis(be, mobilize)
det(man, all)
nmod:poss(energy, man)
case(man, 's)
amod(energy, scatter)
obj(mobilize, energy)
case(sense, in)
nummod(sense, one)
amod(sense, triumphant)
obl(mobilize, sense)
case(importance, of)
nmod:poss(importance, he)
amod(importance, own)
amod(importance, infinite)
nmod(sense, importance)
punct(sense, '')
punct(sense, .)
case(time, at)
det(time, the)
amod(time, same)
obl(have, time)
obj(bind, that)
nsubj(bind, religion)
acl:relcl(time, bind)
det(individual, the)
obj(bind, individual)
advmod(bind, helpfully)
case(supernatural, to)
det(supernatural, the)
obl(bind, supernatural)
cc(give, and)
conj(bind, give)
iobj(give, he)
amod(peace, cosmic)
obj(give, peace)
cc(sense, and)
det(sense, a)
conj(peace, sense)
case(fulfillment, of)
amod(fulfillment, supreme)
nmod(sense, fulfillment)
punct(have, ,)
nsubj(have, it)
advmod(have, also)
parataxis(be, have)
amod(value, great)
amod(value, therapeutic)
obj(have, value)
case(he, for)
nmod(value, he)
punct(be, .)
nsubj(give, it)
root(ROOT, give)
iobj(give, he)
obj(give, aid)
punct(comfort, ,)
conj(aid, comfort)
punct(aid, ,)
advmod(solace, even)
conj(aid, solace)
punct(give, ,)
mark(meet, in)
advcl(give, meet)
amod(situation, mundane)
compound(situation, life)
obj(meet, situation)
advmod(feel, where)
nmod:poss(knowledge, he)
amod(knowledge, own)
compound(knowledge, unassisted)
amod(knowledge, practical)
nsubj:pass(feel, knowledge)
cc(skill, and)
conj(knowledge, skill)
aux:pass(feel, be)
acl:relcl(situation, feel)
case(he, by)
obl(feel, he)
mark(inadequate, to)
cop(inadequate, be)
xcomp(feel, inadequate)
punct(give, .)
nsubj:pass(confront, he)
aux:pass(confront, be)
root(ROOT, confront)
case(crise, with)
det(crise, the)
amod(crise, recurrent)
obl(confront, crise)
punct(crise, ,)
case(catastrophe, such)
fixed(such, as)
amod(catastrophe, great)
amod(catastrophe, natural)
nmod(crise, catastrophe)
cc(transition, and)
det(transition, the)
amod(transition, great)
conj(crise, transition)
case(life, of)
nmod(transition, life)
punct(transition, --)
appos(transition, marriage)
punct(disease, ,)
amod(disease, incurable)
conj(marriage, disease)
punct(widowhood, ,)
conj(marriage, widowhood)
punct(age, ,)
amod(age, old)
conj(marriage, age)
punct(certainty, ,)
det(certainty, the)
conj(crise, certainty)
case(death, of)
nmod(certainty, death)
punct(confront, .)
nsubj(have, he)
root(ROOT, have)
mark(cope, to)
xcomp(have, cope)
case(frustration, with)
obl(cope, frustration)
cc(disturbance, and)
amod(disturbance, other)
amod(disturbance, emotional)
conj(frustration, disturbance)
cc(anomie, and)
conj(frustration, anomie)
punct(have, .)
nmod:poss(belief, he)
amod(belief, religious)
nsubj(provide, belief)
root(ROOT, provide)
obj(provide, he)
case(explanation, with)
amod(explanation, plausible)
obl(provide, explanation)
case(condition, for)
amod(condition, many)
nmod(explanation, condition)
nsubj(cause, which)
acl:relcl(condition, cause)
iobj(cause, he)
amod(concern, great)
obj(cause, concern)
punct(make, ,)
cc(make, and)
nmod:poss(faith, he)
amod(faith, religious)
nsubj(make, faith)
conj(provide, make)
amod(fortitude, possible)
obj(make, fortitude)
punct(equanimity, ,)
conj(fortitude, equanimity)
punct(consolation, ,)
cc(consolation, and)
conj(fortitude, consolation)
punct(enable, ,)
advcl(make, enable)
obj(enable, he)
mark(endure, to)
xcomp(enable, endure)
amod(misfortune, colossal)
obj(endure, misfortune)
punct(fear, ,)
conj(misfortune, fear)
punct(frustration, ,)
conj(misfortune, frustration)
punct(uncertainty, ,)
conj(misfortune, uncertainty)
punct(suffering, ,)
conj(misfortune, suffering)
punct(evil, ,)
conj(misfortune, evil)
punct(danger, ,)
cc(danger, and)
conj(misfortune, danger)
punct(provide, .)
nsubj(include, Religion)
advmod(include, usually)
advmod(include, also)
root(ROOT, include)
det(principle, a)
obj(include, principle)
case(compensation, of)
nmod(principle, compensation)
punct(principle, ,)
advmod(state, mainly)
case(state, in)
det(state, a)
amod(state, promise)
amod(state, perfect)
amod(state, future)
obl(include, state)
punct(include, .)
det(belief, the)
root(ROOT, belief)
case(immortality, in)
nmod(belief, immortality)
punct(belief, ,)
advmod(hold, where)
acl:relcl(belief, hold)
punct(function, ,)
obj(hold, function)
case(redress, as)
det(redress, a)
nmod(function, redress)
case(ill, for)
det(ill, the)
nmod(redress, ill)
cc(disappointment, and)
conj(ill, disappointment)
case(here, of)
det(here, the)
nmod(ill, here)
cc(now, and)
conj(here, now)
punct(function, .)
det(tension, the)
nsubj(accompany, tension)
root(ROOT, accompany)
det(consciousness, a)
amod(consciousness, repressive)
obj(accompany, consciousness)
case(wrongdo, of)
nmod(consciousness, wrongdo)
cc(sin, or)
conj(wrongdo, sin)
cc(secret, or)
det(secret, some)
amod(secret, torment)
conj(wrongdo, secret)
aux:pass(relieved, be)
conj(accompany, relieved)
case(contain, for)
det(contain, the)
amod(contain, less)
obl:npmod(contain, self)
punct(contain, -)
obl(relieved, contain)
cc(sufficient, or)
obl:npmod(sufficient, self)
punct(sufficient, -)
conj(contain, sufficient)
case(confession, by)
obl(relieved, confession)
punct(repentance, ,)
conj(confession, repentance)
punct(penance, ,)
cc(penance, and)
conj(confession, penance)
punct(accompany, .)
det(feeling, the)
nsubj:pass(compensate, feeling)
case(inferiority, of)
amod(inferiority, individual)
nmod(feeling, inferiority)
punct(defeat, ,)
conj(inferiority, defeat)
punct(humilation, ,)
cc(humilation, or)
conj(inferiority, humilation)
acl(inferiority, grow)
case(situation, out)
case(situation, of)
amod(situation, various)
amod(situation, social)
obl(grow, situation)
cc(deficiency, or)
amod(deficiency, individual)
conj(situation, deficiency)
cc(failure, or)
conj(deficiency, failure)
aux:pass(compensate, be)
root(ROOT, compensate)
case(communion, for)
case(communion, by)
obl(compensate, communion)
case(worship, in)
nmod(communion, worship)
cc(prayer, or)
conj(worship, prayer)
case(friendly, with)
det(friendly, a)
amod(worship, friendly)
punct(God, ,)
cc(victorious, but)
advmod(victorious, all)
punct(victorious, -)
amod(God, victorious)
compound(God, Father)
punct(God, -)
conj(friendly, God)
punct(fellowship, ,)
cc(fellowship, as)
fixed(as, well)
fixed(as, as)
fixed(as, by)
amod(fellowship, sympathetic)
conj(God, fellowship)
case(other, with)
nmod(fellowship, other)
nsubj(share, who)
acl:relcl(other, share)
det(faith, this)
obj(share, faith)
punct(opportunity, ,)
cc(opportunity, and)
case(opportunity, by)
conj(share, opportunity)
case(act, in)
amod(act, religious)
nmod(opportunity, act)
mark(give, for)
acl(opportunity, give)
obj(give, vent)
case(emotion, to)
obl(give, emotion)
cc(energy, and)
conj(emotion, energy)
punct(compensate, .)
mark(provide, in)
advcl(undertake, provide)
case(function, for)
det(function, these)
amod(function, inner)
amod(function, individual)
obl(provide, function)
punct(undertake, ,)
nsubj(undertake, religion)
root(ROOT, undertake)
case(behalf, in)
obl(undertake, behalf)
case(peace, of)
amod(peace, individual)
nmod(behalf, peace)
case(mind, of)
nmod(peace, mind)
cc(service, and)
advmod(service, well)
punct(service, -)
cop(service, be)
conj(peace, service)
case(which, for)
obl(be, which)
expl(be, there)
acl:relcl(service, be)
det(institution, no)
amod(institution, other)
nsubj(be, institution)
punct(undertake, .)
case(addition, in)
obl(be, addition)
case(function, to)
det(function, the)
nmod(addition, function)
case(religion, of)
nmod(function, religion)
case(man, within)
nmod(religion, man)
punct(be, ,)
expl(be, there)
aux(be, have)
advmod(be, always)
root(ROOT, be)
det(function, the)
amod(function, outer)
amod(function, social)
nsubj(be, function)
case(community, for)
det(community, the)
nmod(function, community)
cc(society, and)
conj(community, society)
punct(be, .)
det(two, the)
nsubj(separable, two)
aux(separable, have)
advmod(separable, never)
cop(separable, be)
root(ROOT, separable)
punct(separable, .)
nsubj(necessary, Religion)
cop(necessary, be)
advmod(necessary, vitally)
root(ROOT, necessary)
case(maintenance, in)
cc:preconj(maintenance, both)
amod(maintenance, societal)
obl(necessary, maintenance)
cc(regulation, and)
conj(maintenance, regulation)
punct(necessary, .)
det(system, the)
compound(system, value)
punct(system, -)
nsubj:pass(correlate, system)
case(community, of)
det(community, a)
nmod(system, community)
cc(society, or)
conj(community, society)
aux:pass(correlate, be)
advmod(correlate, always)
root(ROOT, correlate)
obl(correlate, with)
punct(degree, ,)
cc(degree, and)
case(degree, to)
det(degree, a)
obl(correlate, degree)
amod(degree, dependent)
case(system, upon)
punct(system, ,)
det(system, a)
amod(system, more)
cc(share, or)
advmod(share, less)
conj(more, share)
obl(correlate, system)
case(belief, of)
amod(belief, religious)
nmod(system, belief)
cc(conviction, and)
conj(belief, conviction)
punct(correlate, .)
det(religion, the)
nsubj(support, religion)
root(ROOT, support)
punct(re-enforce, ,)
obj(support, re-enforce)
punct(reaffirm, ,)
conj(re-enforce, reaffirm)
punct(maintain, ,)
cc(maintain, and)
conj(support, maintain)
det(value, the)
amod(value, fundamental)
obj(maintain, value)
punct(support, .)
advmod(States, even)
case(States, in)
det(States, the)
compound(States, United)
obl(be, States)
punct(be, ,)
case(freedom, with)
nmod:poss(freedom, its)
obl(be, freedom)
case(belief, of)
amod(belief, religious)
nmod(freedom, belief)
cc(worship, and)
conj(belief, worship)
cc(differentiation, and)
nmod:poss(differentiation, its)
amod(differentiation, vast)
amod(differentiation, denominational)
conj(belief, differentiation)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(consensus, a)
amod(consensus, general)
nsubj(be, consensus)
case(value, regard)
det(value, the)
amod(value, basic)
amod(value, christian)
nmod(consensus, value)
punct(be, .)
nsubj:pass(demonstrate, this)
aux:pass(demonstrate, be)
root(ROOT, demonstrate)
advmod(be, especially)
mark(be, when)
expl(be, there)
advcl(demonstrate, be)
nsubj(be, awareness)
case(orientation, of)
advmod(different, radically)
amod(orientation, different)
compound(orientation, value)
nmod(awareness, orientation)
advmod(be, elsewhere)
punct(demonstrate, ;)
punct(demonstrate, ;)
case(example, for)
nmod(rally, example)
compound(rally, Americans)
conj(be, rally)
case(value, to)
amod(value, christian)
nmod(rally, value)
case(those, vis-a-vis)
nmod(rally, those)
case(communism, of)
amod(communism, atheistic)
nmod(those, communism)
punct(demonstrate, .)
case(America, in)
obl(sanction, America)
advmod(sanction, also)
nsubj(sanction, all)
case(body, of)
nmod:poss(body, we)
amod(body, major)
amod(body, religious)
nmod(all, body)
advmod(sanction, officially)
root(ROOT, sanction)
det(ethic, a)
amod(ethic, universalistic)
obj(sanction, ethic)
nsubj(reflective, which)
cop(reflective, be)
acl:relcl(ethic, reflective)
case(religion, of)
nmod:poss(religion, we)
amod(religion, common)
obl(reflective, religion)
punct(sanction, .)
advmod(member, even)
det(member, the)
amod(member, non-church)
nsubj(tend, member)
punct(member, --)
det(freewheeler, the)
appos(member, freewheeler)
punct(religionist, ,)
amod(religionist, marginal)
conj(freewheeler, religionist)
cc(on, and)
advmod(on, so)
conj(freewheeler, on)
punct(have, --)
parataxis(member, have)
det(value, the)
obj(have, value)
case(civilization, of)
amod(civilization, christian)
nmod(value, civilization)
acl(value, internalize)
case(they, in)
obl(internalize, they)
punct(tend, .)
advmod(tend, furthermore)
punct(tend, ,)
nsubj(tend, religion)
root(ROOT, tend)
mark(integrate, to)
xcomp(tend, integrate)
det(range, the)
amod(range, whole)
obj(integrate, range)
case(value, of)
nmod(range, value)
case(value, from)
det(value, the)
amod(value, highest)
cc(ultimate, or)
conj(highest, ultimate)
nmod(range, value)
case(God, of)
nmod(value, God)
case(value, to)
det(value, the)
amod(value, intermediary)
cc(subordinate, and)
conj(intermediary, subordinate)
nmod(value, value)
punct(those, ;)
punct(those, ;)
case(example, for)
nmod(those, example)
punct(those, ,)
nsubj(give, those)
case(object, regard)
compound(object, material)
nmod(those, object)
cc(end, and)
amod(end, pragmatic)
conj(object, end)
punct(those, .)
advmod(give, finally)
punct(give, ,)
nsubj(give, it)
conj(tend, give)
obj(give, sanctity)
punct(give, ,)
advmod(give, more)
case(legitimacy, than)
amod(legitimacy, human)
obl(give, legitimacy)
punct(give, ,)
cc(importance, and)
advmod(importance, even)
punct(legitimacy, ,)
case(reference, through)
amod(reference, super-empirical)
nmod(importance, reference)
punct(transcendent, ,)
amod(importance, transcendent)
cc(supernatural, and)
conj(transcendent, supernatural)
conj(legitimacy, importance)
case(value, to)
det(value, some)
nmod(importance, value)
punct(importance, ;)
punct(importance, ;)
case(example, for)
nmod(marriage, example)
punct(marriage, ,)
conj(importance, marriage)
case(sacrament, as)
det(sacrament, a)
nmod(marriage, sacrament)
punct(breaking, ,)
amod(breaking, much)
compound(breaking, law)
punct(breaking, -)
conj(sacrament, breaking)
advmod(sinful, as)
amod(breaking, sinful)
punct(sinful, ,)
advmod(state, occasionally)
det(state, the)
conj(sinful, state)
case(instrument, as)
det(instrument, a)
amod(instrument, divine)
nmod(state, instrument)
punct(state, .)
nsubj(place, it)
root(ROOT, place)
amod(value, certain)
obj(place, value)
case(least, at)
nmod(question, least)
case(question, beyond)
obl(place, question)
cc(tamper, and)
conj(question, tamper)
punct(place, .)
advmod(related, Closely)
advcl(fact, related)
case(function, to)
det(function, this)
obl(related, function)
cop(fact, be)
det(fact, the)
root(ROOT, fact)
mark(provide, that)
det(system, the)
amod(system, religious)
nsubj(provide, system)
acl(fact, provide)
det(body, a)
obj(provide, body)
case(end, of)
amod(end, ultimate)
nmod(body, end)
case(society, for)
det(society, the)
obl(provide, society)
punct(society, ,)
nsubj(compatible, which)
cop(compatible, be)
acl:relcl(society, compatible)
case(end, with)
det(end, the)
amod(end, supreme)
amod(end, eternal)
obl(compatible, end)
punct(fact, .)
mark(lead, this)
nsubj(lead, something)
advcl(explain, lead)
case(conception, to)
det(conception, a)
obl(lead, conception)
case(plan, of)
det(plan, a)
advmod(all, over)
punct(all, -)
det(plan, all)
amod(plan, social)
nmod(conception, plan)
case(meaning, with)
det(meaning, a)
nmod(plan, meaning)
amod(meaning, interpretable)
case(term, in)
obl(interpretable, term)
case(end, of)
amod(end, ultimate)
nmod(term, end)
punct(lead, ;)
punct(lead, ;)
case(example, for)
nmod(plan, example)
punct(plan, ,)
det(plan, a)
nsubj(explain, plan)
nsubj(fulfill, that)
acl:relcl(plan, fulfill)
det(will, the)
obj(fulfill, will)
case(God, of)
nmod(will, God)
punct(will, ,)
nsubj(advance, which)
acl:relcl(plan, advance)
det(Kingdom, the)
obj(advance, Kingdom)
case(God, of)
nmod(Kingdom, God)
punct(Kingdom, ,)
nsubj(involve, which)
acl:relcl(Kingdom, involve)
amod(life, social)
obj(involve, life)
case(part, as)
obl(involve, part)
case(Design, of)
det(Design, the)
compound(Design, Grand)
nmod(part, Design)
punct(explain, .)
nsubj(explain, this)
root(ROOT, explain)
det(end, some)
compound(end, group)
obj(explain, end)
cc(provide, and)
conj(explain, provide)
det(justification, a)
obj(provide, justification)
case(primacy, of)
nmod:poss(primacy, they)
nmod(justification, primacy)
punct(explain, .)
nsubj(give, it)
root(ROOT, give)
amod(guidance, social)
obj(give, guidance)
cc(direction, and)
conj(guidance, direction)
cc(make, and)
conj(give, make)
case(program, for)
obl(make, program)
case(action, of)
amod(action, social)
nmod(program, action)
punct(give, .)
advmod(give, finally)
punct(give, ,)
nsubj(give, it)
root(ROOT, give)
xcomp(give, mean)
case(endeavor, to)
amod(endeavor, much)
amod(endeavor, social)
obl(mean, endeavor)
punct(logic, ,)
cc(logic, and)
conj(endeavor, logic)
punct(consistency, ,)
conj(logic, consistency)
punct(mean, ,)
cc(mean, and)
conj(mean, mean)
case(life, to)
obl(mean, life)
punct(give, .)
case(general, in)
obl(be, general)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(society, no)
nsubj(be, society)
advmod(secularize, so)
acl(society, secularize)
mark(end, as)
mark(end, to)
cop(end, be)
advmod(end, completely)
case(end, without)
advmod(inspire, religiously)
amod(end, inspire)
amod(end, transcendental)
advcl(secularize, end)
punct(be, .)
nsubj(integrate, Religion)
root(ROOT, integrate)
cc(unify, and)
conj(integrate, unify)
punct(integrate, .)
nsubj(grow, some)
case(oldest, of)
det(oldest, the)
nmod(some, oldest)
punct(persistent, ,)
advmod(persistent, most)
conj(oldest, persistent)
punct(form, ,)
cc(cohesive, and)
advmod(cohesive, most)
amod(form, cohesive)
nsubj(grow, form)
case(grouping, of)
amod(grouping, social)
nmod(form, grouping)
aux(grow, have)
root(ROOT, grow)
case(religion, out)
case(religion, of)
obl(grow, religion)
punct(grow, .)
det(group, these)
nsubj(varied, group)
aux(varied, have)
root(ROOT, varied)
advmod(varied, widely)
case(family, from)
amod(family, mere)
obl(varied, family)
punct(primitive, ,)
conj(family, primitive)
punct(group, ,)
amod(group, totemic)
conj(family, group)
punct(cult, ,)
cc(cult, and)
amod(cult, small)
amod(cult, modern)
conj(family, cult)
cc(sect, and)
conj(cult, sect)
punct(cult, ,)
case(membership, to)
det(membership, the)
nmod(family, membership)
case(denomination, of)
amod(denomination, great)
nmod(membership, denomination)
punct(great, ,)
cc(great, and)
conj(denomination, great)
punct(religion, ,)
advmod(disperse, widely)
amod(religion, disperse)
compound(religion, world)
conj(denomination, religion)
punct(varied, .)
nsubj(foster, Religion)
root(ROOT, foster)
compound(life, group)
obj(foster, life)
case(way, in)
amod(way, various)
obl(foster, way)
punct(foster, .)
det(value, the)
amod(value, common)
amod(value, ultimate)
nsubj(factor, value)
punct(end, ,)
conj(value, end)
cc(goal, and)
conj(value, goal)
acl(value, foster)
case(religion, by)
obl(foster, religion)
cop(factor, be)
det(factor, a)
advmod(important, most)
amod(factor, important)
root(ROOT, factor)
punct(factor, .)
case(system, without)
det(system, a)
obl(be, system)
case(value, of)
nmod(system, value)
expl(be, there)
aux(be, can)
root(ROOT, be)
det(society, no)
nsubj(be, society)
punct(be, .)
mark(prevail, where)
det:predet(system, such)
det(system, a)
compound(system, value)
nsubj(prevail, system)
advcl(unify, prevail)
punct(unify, ,)
nsubj(unify, it)
advmod(unify, always)
root(ROOT, unify)
obj(unify, all)
nsubj(possess, who)
acl:relcl(all, possess)
obj(possess, it)
punct(unify, ;)
punct(unify, ;)
nsubj(enable, it)
parataxis(unify, enable)
obj(enable, member)
case(society, of)
det(society, the)
nmod(member, society)
mark(operate, to)
acl(member, operate)
case(system, as)
det(system, a)
obl(operate, system)
punct(unify, .)
det(belief, the)
nsubj:pass(express, belief)
case(religion, of)
det(religion, a)
nmod(belief, religion)
advmod(reflect, also)
acl(religion, reflect)
det(value, the)
obj(reflect, value)
aux:pass(express, be)
root(ROOT, express)
case(creed, in)
obl(express, creed)
punct(dogma, ,)
conj(creed, dogma)
punct(doctrine, ,)
cc(doctrine, and)
conj(creed, doctrine)
punct(form, ,)
cc(form, and)
conj(express, form)
obj(call, what)
nsubj(call, Durkheim)
ccomp(form, call)
det(credo, a)
obj(call, credo)
punct(express, .)
mark(point, as)
nsubj(point, he)
advcl(exist, point)
compound:prt(point, out)
punct(exist, ,)
det(group, a)
amod(group, religious)
nsubj(exist, group)
aux(exist, can)
advmod(exist, not)
root(ROOT, exist)
case(credo, without)
det(credo, a)
amod(credo, collective)
obl(exist, credo)
punct(extensive, ,)
cc(extensive, and)
mark(extensive, the)
advmod(extensive, more)
conj(exist, extensive)
det(credo, the)
nsubj(extensive, credo)
punct(credo, ,)
det(unified, the)
advmod(unified, more)
amod(credo, unified)
cc(strong, and)
conj(unified, strong)
cop(group, be)
det(group, the)
conj(extensive, group)
punct(exist, .)
det(credo, the)
nsubj(unify, credo)
root(ROOT, unify)
cc(socialize, and)
compound(man, socialize)
obj(unify, man)
mark(attach, by)
advcl(unify, attach)
obj(attach, they)
advmod(attach, completely)
case(body, to)
det(body, a)
amod(body, identical)
obl(attach, body)
case(doctrine, of)
nmod(body, doctrine)
punct(unify, ;)
punct(unify, ;)
det(extensive, the)
advmod(extensive, more)
parataxis(unify, extensive)
cc(firm, and)
conj(extensive, firm)
det(body, the)
obj(firm, body)
case(doctrine, of)
nmod(body, doctrine)
punct(firmer, ,)
det(group, the)
advmod(group, firmer)
det(group, the)
appos(doctrine, group)
punct(unify, .)
det(symbolism, the)
amod(symbolism, religious)
nsubj(constitute, symbolism)
punct(rite, ,)
cc(rite, and)
advmod(rite, especially)
det(rite, the)
advmod(relate, closely)
amod(rite, relate)
conj(symbolism, rite)
cc(form, and)
compound(form, worship)
conj(rite, form)
punct(constitute, ,)
root(ROOT, constitute)
det(bond, a)
amod(bond, powerful)
obj(constitute, bond)
case(member, for)
det(member, the)
nmod(bond, member)
case(faith, of)
det(faith, the)
amod(faith, particular)
nmod(member, faith)
punct(constitute, .)
det(religion, the)
nsubj(expression, religion)
punct(expression, ,)
case(fact, in)
obl(expression, fact)
punct(expression, ,)
cop(expression, be)
det(expression, a)
root(ROOT, expression)
case(unity, of)
det(unity, the)
nmod(expression, unity)
case(group, of)
det(group, the)
nmod(unity, group)
punct(group, ,)
amod(group, small)
cc(large, or)
conj(small, large)
punct(expression, .)
det(code, the)
amod(code, common)
nsubj(bind, code)
punct(code, ,)
case(action, for)
amod(action, religious)
nmod(code, action)
case(such, as)
nmod(code, such)
cc(aspect, and)
case(aspect, in)
nmod:poss(aspect, they)
amod(aspect, ethical)
conj(code, aspect)
case(behavior, for)
amod(behavior, everyday)
amod(behavior, moral)
nmod(aspect, behavior)
punct(bind, ,)
root(ROOT, bind)
det(devote, the)
obj(bind, devote)
advmod(bind, together)
punct(bind, .)
nsubj(be, these)
root(ROOT, be)
nsubj(be, way)
mark(participate, of)
advmod(participate, jointly)
acl(way, participate)
case(behavior, in)
advmod(symbolize, significantly)
amod(behavior, symbolize)
punct(standardize, ,)
conj(symbolize, standardize)
punct(order, ,)
cc(order, and)
conj(symbolize, order)
advmod(sanctify, religiously)
amod(behavior, sanctify)
obl(participate, behavior)
punct(be, .)
det(code, the)
nsubj(mechanism, code)
cop(mechanism, be)
root(ROOT, mechanism)
case(training, for)
obl(mechanism, training)
case(training, in)
punct(direct, ,)
cc(direct, and)
conj(mechanism, direct)
cc(enforcing, and)
conj(direct, enforcing)
punct(interaction, ,)
amod(interaction, uniform)
amod(interaction, social)
conj(direct, interaction)
punct(interaction, ,)
cc(reassert, and)
case(continually, for)
advmod(reassert, continually)
cc(reassert, and)
advmod(reassert, publicly)
conj(direct, reassert)
det(solidarity, the)
obj(reassert, solidarity)
case(group, of)
det(group, the)
nmod(solidarity, group)
punct(note, .)
nsubj(note, Durkheim)
conj(mechanism, note)
advmod(ago, long)
advmod(note, ago)
mark(unite, that)
nsubj(note, religion)
case(system, as)
punct(system, ``)
det(system, a)
amod(system, unified)
nmod(religion, system)
case(belief, of)
nmod(system, belief)
cc(practice, and)
conj(belief, practice)
amod(belief, relative)
case(thing, to)
amod(thing, sacred)
obl(relative, thing)
acl:relcl(system, unite)
case(community, into)
nummod(community, one)
amod(community, single)
amod(community, moral)
obl(unite, community)
det:predet(those, all)
nsubj(unite, those)
nsubj(adhere, who)
acl:relcl(those, adhere)
case(they, to)
obl(adhere, they)
punct(those, '')
punct(be, .)
nmod:poss(view, he)
nsubj(be, view)
parataxis(mechanism, be)
mark(pertain, that)
det(religion, every)
nsubj(pertain, religion)
ccomp(be, pertain)
case(community, to)
det(community, a)
obl(pertain, community)
punct(unit, ,)
cc(unit, and)
punct(unit, ,)
advmod(unit, conversely)
punct(unit, ,)
det(community, every)
nsubj(unit, community)
cop(unit, be)
case(aspect, in)
nummod(aspect, one)
obl(unit, aspect)
det(unit, a)
amod(unit, religious)
conj(pertain, unit)
punct(unit, .)
nsubj:pass(bring, this)
aux:pass(bring, be)
parataxis(unit, bring)
compound:prt(bring, out)
case(etho, in)
det(etho, the)
amod(etho, common)
amod(etho, religious)
obl(bring, etho)
nsubj(prevail, that)
acl:relcl(etho, prevail)
advmod(audience, even)
case(audience, in)
det(audience, the)
advmod(diverse, denominationally)
amod(audience, diverse)
obl(prevail, audience)
case(occasion, at)
amod(occasion, many)
amod(occasion, secular)
amod(occasion, semi-public)
cc(public, and)
conj(semi-public, public)
nmod(audience, occasion)
case(States, in)
det(States, the)
compound(States, United)
nmod(occasion, States)
punct(prevail, ;)
punct(mechanism, ;)
cc(evidence, and)
nsubj:pass(evidence, it)
aux:pass(evidence, be)
conj(prevail, evidence)
case(prayer, in)
det(prayer, the)
obl(evidence, prayer)
acl(prayer, offer)
punct(offer, ,)
case(allusion, in)
det(allusion, the)
amod(allusion, frequent)
amod(allusion, religious)
obl(offer, allusion)
punct(confirmation, ,)
cc(confirmation, and)
case(confirmation, in)
det(confirmation, the)
conj(allusion, confirmation)
case(point, of)
nmod(confirmation, point)
case(grounds, on)
amod(grounds, religious)
nmod(point, grounds)
punct(mechanism, .)
det(effect, the)
amod(effect, unify)
nsubj:pass(bring, effect)
case(religion, of)
nmod(effect, religion)
aux:pass(bring, be)
advmod(bring, also)
root(ROOT, bring)
compound:prt(bring, out)
case(fact, in)
det(fact, the)
obl(bring, fact)
mark(clung, that)
advmod(people, historically)
nsubj(clung, people)
aux(clung, have)
acl(fact, clung)
advmod(clung, together)
case(unit, as)
amod(unit, more)
cc(cohesive, or)
advmod(cohesive, less)
amod(unit, cohesive)
amod(unit, cultural)
obl(clung, unit)
punct(unit, ,)
case(religion, with)
nmod(unit, religion)
case(bond, as)
det(bond, the)
amod(bond, dominant)
nmod(religion, bond)
punct(clung, ,)
advmod(disperse, even)
mark(disperse, though)
advmod(disperse, spatially)
advcl(clung, disperse)
cc(organized, and)
advmod(organized, not)
advmod(organized, politically)
conj(disperse, organized)
punct(bring, .)
det(Jews, the)
nsubj(example, Jews)
case(year, for)
nummod(year, 2500)
nmod(Jews, year)
aux(example, have)
cop(example, be)
det(example, a)
amod(example, prime)
root(ROOT, example)
punct(example, ,)
mark(case, though)
det(adherent, the)
nsubj(case, adherent)
case(world, of)
det(world, any)
nmod(adherent, world)
cc(religion, or)
amod(religion, interpeople)
conj(world, religion)
cop(case, be)
advcl(example, case)
case(point, in)
obl(case, point)
punct(example, .)
nsubj:pass(point, it)
aux(point, might)
aux:pass(point, be)
root(ROOT, point)
compound:prt(point, out)
mark(support, that)
det(function, the)
compound(function, integrating)
nsubj(support, function)
case(religion, of)
nmod(function, religion)
punct(function, ,)
case(good, for)
nmod(function, good)
cc(ill, or)
conj(good, ill)
punct(support, ,)
aux(support, have)
advmod(support, often)
ccomp(point, support)
cc(identify, or)
aux:pass(identify, be)
conj(support, identify)
case(grouping, with)
amod(grouping, other)
obl(identify, grouping)
punct(grouping, --)
amod(grouping, political)
punct(nationality, ,)
conj(political, nationality)
punct(language, ,)
conj(political, language)
punct(class, ,)
conj(political, class)
punct(racial, ,)
conj(political, racial)
punct(sociability, ,)
conj(political, sociability)
punct(economic, ,)
advmod(economic, even)
conj(political, economic)
punct(point, .)
nsubj(exercise, Religion)
advmod(exercise, usually)
root(ROOT, exercise)
det(function, a)
compound(conserve, stabilize)
punct(conserve, -)
compound(function, conserve)
obj(exercise, function)
punct(exercise, .)
mark(act, as)
obl(act, such)
nsubj(act, it)
root(ROOT, act)
case(anchor, as)
det(anchor, a)
obl(act, anchor)
case(people, for)
det(people, the)
nmod(anchor, people)
punct(act, .)
expl(be, there)
root(ROOT, be)
det(tendency, a)
amod(tendency, mark)
nsubj(be, tendency)
case(religion, for)
nmod(tendency, religion)
punct(tendency, ,)
advmod(firmly, once)
advmod(establish, firmly)
acl(religion, establish)
punct(establish, ,)
mark(resist, to)
advcl(establish, resist)
obj(resist, change)
punct(resist, ,)
advmod(only, not)
cc:preconj(doctrine, only)
case(doctrine, in)
nmod:poss(doctrine, they)
amod(doctrine, own)
obl(resist, doctrine)
cc(policy, and)
conj(doctrine, policy)
cc(practice, and)
conj(doctrine, practice)
punct(affair, ,)
cc(affair, but)
advmod(affair, also)
case(affair, in)
amod(affair, secular)
conj(doctrine, affair)
acl(affair, have)
amod(relevance, religious)
obj(have, relevance)
punct(be, .)
nsubj(factor, it)
aux(factor, have)
advmod(factor, thus)
cop(factor, be)
det(factor, a)
amod(factor, significant)
root(ROOT, factor)
case(conservation, in)
det(conservation, the)
nmod(factor, conservation)
case(value, of)
amod(value, social)
nmod(conservation, value)
punct(factor, ,)
mark(obstacle, though)
advmod(obstacle, also)
case(measure, in)
det(measure, some)
obl(obstacle, measure)
punct(obstacle, ,)
det(obstacle, a)
conj(factor, obstacle)
case(creation, to)
det(creation, the)
nmod(obstacle, creation)
cc(diffusion, or)
conj(creation, diffusion)
case(one, of)
amod(one, new)
nmod(creation, one)
punct(factor, .)
nsubj(tend, it)
root(ROOT, tend)
mark(support, to)
xcomp(tend, support)
det(sentiment, the)
amod(sentiment, longstanding)
amod(sentiment, precious)
obj(support, sentiment)
punct(sentiment, ,)
det(way, the)
amod(way, traditional)
appos(sentiment, way)
mark(thinking, of)
nmod(way, thinking)
punct(way, ,)
cc(way, and)
det(way, the)
amod(way, customary)
conj(sentiment, way)
case(living, of)
nmod(way, living)
punct(way, .)
mark(point, as)
nsubj(point, yinger)
aux(point, have)
advcl(way, point)
compound:prt(point, out)
punct(point, ,)
det(reliance, the)
punct(reliance, ``)
obj(point, reliance)
case(symbol, on)
nmod(reliance, symbol)
punct(reliance, ,)
case(tradition, on)
nmod(reliance, tradition)
punct(reliance, ,)
case(writings, on)
amod(writings, sacred)
nmod(reliance, writings)
punct(cultivation, ,)
case(cultivation, on)
det(cultivation, the)
nmod(writings, cultivation)
case(feeling, of)
amod(feeling, emotional)
nmod(cultivation, feeling)
case(identity, of)
nmod(feeling, identity)
cc(harmony, and)
conj(identity, harmony)
case(value, with)
amod(value, sacred)
nmod(identity, value)
punct(turn, ,)
acl(feeling, turn)
obj(turn, one)
case(far, to)
det(past, the)
obl(more, past)
advmod(more, far)
advmod(turn, more)
case(future, than)
case(future, to)
det(future, the)
obl(more, future)
punct(more, '')
punct(function, .)
advmod(function, historically)
punct(function, ,)
nsubj(function, religion)
aux(function, have)
advmod(function, also)
parataxis(tend, function)
case(engine, as)
det(engine, a)
amod(engine, tremendous)
obl(function, engine)
case(vindication, of)
nmod(engine, vindication)
punct(enforcement, ,)
conj(vindication, enforcement)
punct(sanction, ,)
conj(vindication, sanction)
punct(perpetuation, ,)
cc(perpetuation, and)
conj(vindication, perpetuation)
case(institution, of)
amod(institution, various)
amod(institution, other)
nmod(perpetuation, institution)
punct(tend, .)
case(time, at)
det(time, the)
amod(time, same)
obl(energize, time)
mark(exercise, that)
nsubj(exercise, religion)
acl:relcl(time, exercise)
det(influence, a)
compound(influence, conserve)
obj(exercise, influence)
punct(energize, ,)
nsubj(energize, it)
advmod(energize, also)
root(ROOT, energize)
cc(motivate, and)
conj(energize, motivate)
cc:preconj(individual, both)
obj(motivate, individual)
cc(group, and)
conj(individual, group)
punct(energize, .)
nsubj(ow, much)
case(individual, of)
det(individual, the)
amod(individual, important)
obl(much, individual)
cc(action, and)
amod(action, social)
conj(individual, action)
aux(ow, have)
aux(ow, be)
conj(energize, ow)
case(incentive, to)
amod(incentive, religious)
obl(ow, incentive)
punct(energize, .)
det(end, the)
amod(end, great)
amod(end, ultimate)
nsubj(serve, end)
case(religion, of)
nmod(end, religion)
aux(serve, have)
root(ROOT, serve)
case(light, as)
amod(light, magnificent)
compound(light, beacon)
obl(serve, light)
nsubj(lure, that)
acl:relcl(light, lure)
obj(lure, people)
case(they, toward)
obl(lure, they)
case(force, with)
det(force, a)
advmod(irresistible, almost)
amod(force, irresistible)
obl(lure, force)
punct(mobilize, ,)
acl(force, mobilize)
obj(mobilize, energy)
cc(sacrifice, and)
amod(sacrifice, induce)
conj(energy, sacrifice)
punct(serve, ;)
punct(serve, ;)
case(example, for)
obl(expend, example)
punct(crusade, ,)
det(crusade, the)
nsubj:pass(expend, crusade)
punct(effort, ,)
compound(effort, mission)
conj(crusade, effort)
punct(war, ,)
advmod(war, just)
appos(crusade, war)
punct(war, .)
amod(effort, much)
nsubj:pass(expend, effort)
aux(expend, have)
aux:pass(expend, be)
parataxis(serve, expend)
case(effort, in)
det(effort, the)
amod(effort, sincere)
obl(expend, effort)
mark(apply, to)
acl(effort, apply)
det(teaching, the)
obj(apply, teaching)
cc(admonition, and)
conj(teaching, admonition)
case(religion, of)
nmod(teaching, religion)
punct(serve, .)
det(system, the)
amod(system, insuperable)
compound(system, reward)
root(ROOT, system)
mark(have, that)
amod(religion, most)
nsubj(embody, religion)
acl:relcl(system, embody)
acl(system, have)
amod(effect, great)
amod(effect, motivate)
obj(have, effect)
punct(system, .)
nsubj(provide, Religion)
root(ROOT, provide)
det(reward, the)
advmod(attractive, most)
amod(reward, attractive)
obj(provide, reward)
punct(reward, ,)
cc:preconj(world, either)
case(world, in)
det(world, this)
nmod(reward, world)
cc(next, or)
det(next, the)
conj(world, next)
punct(provide, ,)
case(those, for)
obl(next, those)
nsubj(abide, who)
advmod(merely, not)
advmod(abide, merely)
acl:relcl(those, abide)
case(norm, by)
nmod:poss(norm, it)
case(it, 's)
obl(abide, norm)
punct(engage, ,)
cc(engage, but)
nsubj(engage, who)
conj(provide, engage)
case(work, in)
amod(work, good)
obl(engage, work)
punct(provide, .)
nsubj(act, Religion)
advmod(act, usually)
root(ROOT, act)
case(aid, as)
det(aid, a)
amod(aid, powerful)
obl(act, aid)
case(control, in)
amod(control, social)
nmod(aid, control)
punct(act, ,)
advcl(act, enforcing)
det(man, what)
nsubj(do, man)
aux(do, should)
cc(do, or)
aux(do, should)
advmod(do, not)
ccomp(enforcing, do)
punct(act, .)
case(people, among)
amod(people, primitive)
obl(bind, people)
det(sanction, the)
nsubj(bind, sanction)
cc(dictate, and)
conj(sanction, dictate)
case(religion, of)
nmod(sanction, religion)
aux(bind, be)
advmod(bind, more)
conj(act, bind)
case(any, than)
obl(bind, any)
case(controls, of)
det(controls, the)
amod(controls, other)
nmod(any, controls)
acl(controls, exercise)
case(group, by)
det(group, the)
obl(exercise, group)
punct(bind, ;)
punct(bind, ;)
cc(great, and)
case(society, in)
amod(society, modern)
obl(great, society)
amod(influence, such)
nsubj(great, influence)
cop(great, be)
advmod(great, still)
conj(bind, great)
punct(act, .)
nsubj(have, Religion)
root(ROOT, have)
nmod:poss(prescription, its)
amod(prescription, own)
amod(prescription, supernatural)
obj(have, prescription)
nsubj(code, that)
cop(code, be)
case(code, at)
det(code, the)
amod(code, same)
compound(code, time)
acl:relcl(prescription, code)
case(behavior, of)
nmod(code, behavior)
case(here, for)
det(here, the)
nmod(code, here)
cc(now, and)
conj(here, now)
punct(have, .)
advcl(strong, overwhelmed)
case(care, with)
det(care, the)
obl(overwhelmed, care)
case(child, of)
nummod(child, five)
amod(child, young)
nmod(care, child)
cc(concerned, and)
conj(overwhelmed, concerned)
case(difficulty, about)
amod(difficulty, persistent)
amod(difficulty, economic)
obl(concerned, difficulty)
case(income, due)
fixed(due, to)
nmod:poss(husband, she)
nmod:poss(income, husband)
case(husband, 's)
amod(income, marginal)
obl(concerned, income)
punct(strong, ,)
nmod:poss(defense, she)
nsubj(strong, defense)
case(denial, of)
nmod(defense, denial)
cop(strong, be)
advmod(strong, excessively)
root(ROOT, strong)
punct(strong, .)
advmod(show, thus)
det(lack, the)
nsubj(show, lack)
case(recognition, of)
amod(recognition, effective)
nmod(lack, recognition)
case(responsibility, of)
det(responsibility, the)
nmod(recognition, responsibility)
acl(responsibility, involve)
mark(care, in)
advcl(involve, care)
case(baby, for)
nummod(baby, two)
obl(care, baby)
root(ROOT, show)
obj(show, sign)
mark(become, of)
acl(sign, become)
det(problem, a)
compound(problem, disabling)
obj(become, problem)
punct(show, .)
det(result, the)
nsubj(fear, result)
punct(result, ,)
advmod(visible, dramatically)
amod(result, visible)
case(matter, in)
det(matter, a)
obl(visible, matter)
case(day, of)
nmod(matter, day)
case(function, in)
det(family, the)
nmod:poss(function, family)
case(family, 's)
amod(function, disrupt)
amod(function, daily)
nmod(matter, function)
punct(fear, ,)
cop(fear, be)
det(fear, a)
amod(like, phobic)
punct(like, -)
amod(fear, like)
root(ROOT, fear)
mark(befall, that)
det(harm, some)
amod(harm, terrible)
nsubj(befall, harm)
aux(befall, would)
acl(fear, befall)
det(twin, the)
amod(twin, second)
obj(befall, twin)
punct(twin, ,)
nmod:poss(birth, whose)
nsubj:pass(anticipate, birth)
aux(anticipate, have)
advmod(anticipate, not)
aux:pass(anticipate, be)
acl:relcl(twin, anticipate)
punct(fear, .)
advmod(Mrs., Soon)
root(ROOT, Mrs.)
nmod:poss(fear, B.)
case(B., 's)
nsubj(threaten, fear)
root(ROOT, threaten)
mark(burst, to)
xcomp(threaten, burst)
case(panic, into)
det(panic, a)
amod(blow, full)
punct(blow, -)
amod(panic, blow)
obl(burst, panic)
case(welfare, concern)
det(welfare, the)
nmod(panic, welfare)
case(family, of)
det(family, the)
amod(family, entire)
nmod(welfare, family)
punct(threaten, .)
root(ROOT, inability)
mark(care, to)
acl(inability, care)
case(child, for)
det(child, the)
amod(child, other)
obl(care, child)
punct(difficulty, ,)
parataxis(inability, difficulty)
mark(feed, in)
acl(difficulty, feed)
det(baby, the)
obj(feed, baby)
punct(baby, ,)
nsubj(seem, who)
acl:relcl(baby, seem)
xcomp(seem, colicky)
punct(fatigue, ,)
obl:npmod(weary, bone)
punct(weary, -)
amod(fatigue, weary)
conj(colicky, fatigue)
punct(episode, ,)
amod(episode, repeat)
compound(episode, cry)
conj(fatigue, episode)
punct(temper, ,)
cc(temper, and)
amod(temper, short)
nsubj(reflect, temper)
parataxis(inability, reflect)
det(family, the)
nmod:poss(helplessness, family)
case(family, 's)
obj(reflect, helplessness)
mark(cope, in)
acl(helplessness, cope)
case(situation, with)
det(situation, the)
amod(situation, stressful)
obl(cope, situation)
punct(reflect, .)
advmod(family, clearly)
punct(family, ,)
nsubj(family, this)
cop(family, be)
det(family, a)
root(ROOT, family)
case(crisis, in)
nmod(family, crisis)
punct(family, .)
nsubj(compare, Mrs.)
flat(Mrs., B.)
parataxis(family, compare)
nmod:poss(feeling, she)
obj(compare, feeling)
case(weakness, of)
nmod(feeling, weakness)
case(feeling, to)
nmod:poss(feeling, she)
nmod(feeling, feeling)
case(weakness, of)
nmod(feeling, weakness)
cc(helplessness, and)
conj(weakness, helplessness)
case(time, at)
det(time, the)
obl(compare, time)
case(death, of)
nmod:poss(mother, she)
nmod:poss(death, mother)
case(mother, 's)
nmod(time, death)
mark(eight, when)
nsubj(eight, she)
cop(eight, be)
acl(death, eight)
punct(anger, ,)
cc(anger, as)
fixed(as, well)
fixed(as, as)
nmod:poss(anger, she)
amod(anger, subsequent)
conj(eight, anger)
case(father, at)
nmod:poss(father, she)
nmod(anger, father)
case(remarry, for)
nmod(anger, remarry)
punct(family, .)
nmod:poss(experience, she)
amod(experience, previous)
amod(experience, traumatic)
nsubj(flash, experience)
root(ROOT, flash)
case(mind, through)
nmod:poss(mind, she)
obl(flash, mind)
mark(happen, as)
mark(happen, if)
nsubj(happen, they)
aux(happen, have)
advcl(flash, happen)
obl:tmod(happen, yesterday)
punct(flash, .)
case(anniversary, on)
det(anniversary, the)
obl(pour, anniversary)
case(death, of)
nmod:poss(father, she)
nmod:poss(death, father)
case(father, 's)
nmod(anniversary, death)
nsubj(pour, she)
root(ROOT, pour)
compound:prt(pour, out)
mark(agonize, with)
advcl(pour, agonize)
obj(agonize, tear)
nmod:poss(feeling, she)
obj(agonize, feeling)
case(guilt, of)
nmod(feeling, guilt)
mark(attend, about)
advmod(attend, not)
aux(attend, have)
advcl(agonize, attend)
nmod:poss(funeral, he)
obj(attend, funeral)
punct(pour, .)
case(word, in)
det(family, the)
nmod:poss(word, family)
case(family, 's)
amod(word, own)
obl(reach, word)
punct(third, ()
case(third, during)
det(third, the)
nmod(word, third)
case(visit, of)
nummod(visit, twelve)
nmod(third, visit)
punct(third, ))
punct(reach, ,)
nsubj(reach, they)
aux(reach, have)
punct(reach, ``)
root(ROOT, reach)
det(peak, the)
compound(peak, crisis)
obj(reach, peak)
punct(reach, --)
cc:preconj(situation, either)
det(situation, the)
nsubj(give, situation)
aux(give, will)
parataxis(reach, give)
cc(break, or)
nsubj(break, we)
aux(break, will)
conj(give, break)
punct(give, '')
punct(reach, !)
punct(reach, !)
amod(confrontation, direct)
nsubj(dissipate, confrontation)
cc(acceptance, and)
conj(confrontation, acceptance)
case(anger, of)
nmod:poss(anger, Mrs.)
flat(Mrs., B.)
case(Mrs., 's)
nmod(confrontation, anger)
case(baby, against)
det(baby, the)
amod(baby, second)
nmod(anger, baby)
advmod(dissipate, soon)
root(ROOT, dissipate)
nmod:poss(fear, she)
obj(dissipate, fear)
case(annihilation, of)
nmod(fear, annihilation)
punct(Abreaction, .)
appos(fear, Abreaction)
case(anxiety, of)
nmod:poss(anxiety, she)
nmod(Abreaction, anxiety)
cc(guilt, and)
conj(anxiety, guilt)
case(death, concern)
det(death, the)
nmod(Abreaction, death)
case(parent, of)
nmod:poss(parent, she)
nmod(death, parent)
punct(link, ,)
mark(link, when)
advcl(dissipate, link)
compound:prt(link, up)
case(feeling, with)
nmod:poss(feeling, she)
amod(feeling, current)
obl(link, feeling)
case(anger, of)
nmod(feeling, anger)
cc(fear, and)
nmod:poss(fear, she)
conj(anger, fear)
case(loss, of)
nmod(fear, loss)
punct(abandonment, ,)
conj(loss, abandonment)
punct(annihilation, ,)
cc(annihilation, and)
conj(loss, annihilation)
punct(produce, ,)
acl:relcl(feeling, produce)
amod(relief, further)
obj(produce, relief)
case(tension, of)
nmod(relief, tension)
punct(dissipate, .)
case(interview, in)
det(interview, a)
amod(interview, joint)
obl(help, interview)
nsubj:pass(help, Mr.)
cc(Mrs., and)
conj(Mr., Mrs.)
conj(Mr., B.)
aux:pass(help, be)
root(ROOT, help)
mark(understand, to)
xcomp(help, understand)
det(meaning, the)
obj(understand, meaning)
case(wander, of)
det(son, a)
amod(son, younger)
nmod:poss(wander, son)
case(son, 's)
nmod(meaning, wander)
advmod(understand, away)
case(home, from)
obl(away, home)
case(term, in)
obl(understand, term)
case(feeling, of)
nmod:poss(feeling, he)
nmod(term, feeling)
case(displacement, of)
nmod(feeling, displacement)
case(reaction, in)
nmod(feeling, reaction)
case(arrival, to)
det(arrival, the)
nmod(reaction, arrival)
case(twin, of)
det(twin, the)
nmod(arrival, twin)
punct(help, .)
det(father, the)
nsubj(respected, father)
punct(father, ,)
advmod(perceive, accurately)
acl(father, perceive)
det(child, the)
nmod:poss(need, child)
case(child, 's)
obj(perceive, need)
punct(respected, ,)
advmod(only, not)
advmod(respected, only)
root(ROOT, respected)
obj(respected, they)
case(worthy, as)
obl(respected, worthy)
case(attention, of)
nmod:poss(attention, he)
obl(worthy, attention)
punct(satisfied, ,)
cc(satisfied, but)
advmod(satisfied, immediately)
conj(respected, satisfied)
obj(satisfied, they)
mark(take, by)
advcl(satisfied, take)
obj(take, he)
case(lap, on)
nmod:poss(lap, he)
obl(take, lap)
case(twin, along)
case(twin, with)
det(twin, the)
obl(take, twin)
punct(say, ,)
advcl(take, say)
punct(say, ,)
punct(say, ``)
nsubj(have, I)
root(ROOT, have)
det(lap, a)
amod(lap, big)
obj(have, lap)
punct(have, ;)
punct(have, ;)
expl(be, there)
parataxis(have, be)
nsubj(be, room)
case(you, for)
nmod(room, you)
punct(room, ,)
advmod(Johnnie, too)
punct(Johnnie, ,)
appos(room, Johnnie)
punct(Johnnie, '')
punct(Johnnie, .)
advmod(variety, simultaneously)
punct(variety, ,)
det(variety, a)
conj(room, variety)
case(support, of)
amod(support, environmental)
nmod(variety, support)
punct(variety, --)
det(homemaker, a)
amod(homemaker, calm)
cc(motherly, but)
advmod(motherly, not)
advmod(motherly, too)
conj(calm, motherly)
appos(support, homemaker)
punct(referral, ,)
appos(homemaker, referral)
case(use, for)
amod(aid, temporary)
amod(aid, economic)
nmod(use, aid)
punct(use, ,)
amod(use, intelligent)
nmod(referral, use)
case(care, of)
compound(care, nursing)
nmod(use, care)
punct(accompaniment, ,)
conj(use, accompaniment)
case(clinic, to)
det(clinic, the)
amod(baby, well)
punct(baby, -)
compound(clinic, baby)
nmod(accompaniment, clinic)
case(advice, for)
amod(advice, medical)
nmod(clinic, advice)
case(problem, on)
det(twin, the)
nmod:poss(problem, twin)
case(twin, 's)
compound(problem, feeding)
nmod(advice, problem)
punct(problem, --)
acl(problem, combine)
mark(prevent, to)
xcomp(combine, prevent)
amod(development, further)
obj(prevent, development)
case(mechanism, of)
amod(mechanism, predictable)
amod(mechanism, pathological)
nmod(development, mechanism)
punct(have, . )
compound(visit, follow)
punct(follow, -)
compound:prt(follow, up)
nsubj(indicate, visit)
case(nurse, of)
det(nurse, the)
nmod(visit, nurse)
cc(worker, and)
amod(worker, social)
conj(nurse, worker)
root(ROOT, indicate)
amod(success, continue)
obj(indicate, success)
case(care, in)
det(care, the)
nmod(success, care)
case(baby, of)
det(baby, the)
amod(baby, new)
nmod(care, baby)
cc(improvement, as)
fixed(as, well)
fixed(as, as)
det(improvement, a)
amod(improvement, mark)
conj(success, improvement)
case(function, in)
det(family, the)
nmod:poss(day, family)
case(family, 's)
compound(function, day)
punct(day, -)
case(day, to)
punct(day, -)
nmod(day, day)
amod(health, mental)
compound(function, health)
cc(social, and)
conj(health, social)
nmod(improvement, function)
punct(indicate, .)
mark(see, as)
advcl(be, see)
case(family, in)
det(family, the)
compound(family, B.)
obl(see, family)
punct(be, ,)
expl(be, there)
aux(be, must)
root(ROOT, be)
det(attempt, a)
nsubj(be, attempt)
mark(help, to)
acl(attempt, help)
det(client, the)
obj(help, client)
xcomp(help, develop)
amod(awareness, conscious)
obj(develop, awareness)
case(problem, of)
det(problem, the)
nmod(awareness, problem)
punct(develop, ,)
advmod(absence, especially)
case(absence, in)
det(absence, the)
obl(develop, absence)
case(request, of)
det(request, a)
amod(request, formal)
nmod(absence, request)
case(assistance, for)
nmod(request, assistance)
punct(be, .)
det(lack, the)
nsubj(spring, lack)
case(awareness, of)
nmod(lack, awareness)
advmod(spring, usually)
root(ROOT, spring)
case(anxiety, from)
amod(anxiety, deep)
cc(disguise, but)
conj(deep, disguise)
obl(spring, anxiety)
punct(spring, ,)
advmod(assume, often)
advcl(spring, assume)
det(guise, the)
amod(guise, superficial)
obj(assume, guise)
case(know, of)
punct(know, ``)
advmod(know, not)
acl(guise, know)
punct(know, '')
cc(caring, or)
punct(caring, ``)
advmod(caring, not)
conj(know, caring)
punct(caring, '')
punct(caring, .)
det(use, the)
amod(use, unhealthy)
nsubj:pass(handle, use)
case(denial, of)
nmod(use, denial)
case(reaction, in)
det(reaction, the)
amod(reaction, initial)
nmod(use, reaction)
case(stress, to)
det(stress, a)
nmod(reaction, stress)
aux(handle, must)
aux:pass(handle, be)
ccomp(assume, handle)
case(medium, through)
det(medium, the)
obl(handle, medium)
case(transference, of)
det(transference, a)
amod(transference, positive)
amod(transference, control)
nmod(medium, transference)
punct(spring, .)
case(general, in)
obl(active, general)
punct(active, ,)
det(approach, the)
nsubj(active, approach)
cop(active, be)
advmod(active, more)
root(ROOT, active)
case(passive, than)
obl(active, passive)
punct(reach, ,)
advmod(out, more)
advmod(reach, out)
punct(reach, -)
conj(active, reach)
case(reflective, than)
obl(reach, reflective)
punct(active, .)
mark(inevitable, while)
det(regression, some)
nsubj(inevitable, regression)
cop(inevitable, be)
advcl(discourage, inevitable)
punct(discourage, ,)
nsubj:pass(discourage, it)
aux:pass(discourage, be)
parataxis(active, discourage)
cc(encourage, rather)
fixed(rather, than)
advcl(discourage, encourage)
mark(follow, so)
fixed(so, that)
det(transference, the)
nsubj(follow, transference)
aux(follow, do)
advmod(follow, not)
advcl(encourage, follow)
det(stage, the)
obj(follow, stage)
case(regression, of)
amod(regression, plan)
nmod(stage, regression)
acl(regression, associate)
case(adaptation, with)
amod(adaptation, certain)
compound(adaptation, casework)
obl(associate, adaptation)
case(model, of)
det(model, the)
amod(model, psychoanalytic)
nmod(adaptation, model)
case(therapy, for)
compound(therapy, insight)
nmod(model, therapy)
punct(active, . )
mark(establish, to)
advcl(demonstrate, establish)
det(relationship, a)
advmod(meaningful, emotionally)
amod(relationship, meaningful)
obj(establish, relationship)
det(worker, the)
nsubj(demonstrate, worker)
aux(demonstrate, must)
root(ROOT, demonstrate)
amod(helpfulness, actual)
cc(potential, or)
conj(actual, potential)
obj(demonstrate, helpfulness)
advmod(demonstrate, immediately)
punct(demonstrate, ,)
advmod(interview, preferably)
case(interview, within)
det(interview, the)
amod(interview, first)
obl(demonstrate, interview)
punct(demonstrate, ,)
mark(meet, by)
advcl(demonstrate, meet)
det(client, the)
nmod:poss(need, client)
case(client, 's)
amod(need, specific)
obj(meet, need)
punct(demonstrate, .)
det(need, these)
nsubj(concern, need)
advmod(concern, usually)
root(ROOT, concern)
det(reduction, the)
obj(concern, reduction)
case(guilt, of)
nmod(reduction, guilt)
cc(relief, and)
det(relief, some)
conj(reduction, relief)
case(tension, of)
nmod(relief, tension)
punct(concern, .)
det(interview, the)
amod(interview, initial)
nsubj(therapeutic, interview)
aux(therapeutic, must)
cop(therapeutic, be)
root(ROOT, therapeutic)
cc(exploratory, rather)
fixed(rather, than)
advmod(exploratory, purely)
conj(therapeutic, exploratory)
mark(seek, in)
det(sense, a)
compound(seek, information)
punct(seek, -)
advcl(exploratory, seek)
obj(seek, sense)
punct(therapeutic, .)
case(stage, in)
det(stage, this)
compound(building, relationship)
punct(building, -)
compound(stage, building)
obl(communicate, stage)
det(worker, the)
nsubj(communicate, worker)
aux(communicate, must)
root(ROOT, communicate)
obj(communicate, confidence)
case(ability, in)
det(client, the)
nmod:poss(ability, client)
case(client, 's)
obl(communicate, ability)
mark(deal, to)
acl(ability, deal)
case(problem, with)
det(problem, the)
obl(deal, problem)
punct(communicate, .)
mark(do, in)
advmod(do, so)
advcl(offer, do)
nsubj(offer, he)
advmod(offer, implicitly)
root(ROOT, offer)
det(contagion, the)
amod(contagion, positive)
obj(offer, contagion)
case(hope, of)
nmod(contagion, hope)
case(kind, as)
det(kind, a)
obl(offer, kind)
case(dynamic, of)
amod(dynamic, maturational)
nmod(kind, dynamic)
mark(counteract, to)
acl(kind, counteract)
obj(counteract, feeling)
case(helplessness, of)
nmod(feeling, helplessness)
cc(hopelessness, and)
conj(helplessness, hopelessness)
advmod(associate, generally)
acl(feeling, associate)
case(stage, with)
det(stage, the)
amod(stage, first)
obl(associate, stage)
case(impact, of)
compound(impact, stress)
nmod(stage, impact)
punct(offer, .)
advmod(receive, thus)
punct(receive, ,)
det(client, the)
nsubj(receive, client)
root(ROOT, receive)
amod(support, enough)
compound(support, ego)
obj(receive, support)
mark(engage, to)
acl(support, engage)
case(effort, in)
amod(effort, constructive)
obl(engage, effort)
case(behalf, on)
nmod:poss(behalf, he)
amod(behalf, own)
nmod(effort, behalf)
punct(receive, .)
advmod(be, here)
expl(be, there)
root(ROOT, be)
det(component, a)
amod(component, specific)
amod(component, preventive)
nsubj(be, component)
nsubj(apply, which)
acl:relcl(component, apply)
case(sense, in)
det(sense, a)
advmod(generalize, more)
amod(sense, generalize)
obl(apply, sense)
case(situation, to)
det(situation, any)
compound(situation, casework)
nmod(sense, situation)
punct(be, .)
nsubj(prevent, we)
aux(prevent, be)
root(ROOT, prevent)
cc(avert, or)
conj(prevent, avert)
amod(phenomena, pathogenic)
obj(prevent, phenomena)
case(regression, such)
fixed(such, as)
amod(regression, undue)
nmod(phenomena, regression)
punct(suppression, ,)
amod(suppression, unhealthy)
conj(regression, suppression)
cc(repression, and)
conj(regression, repression)
punct(use, ,)
amod(use, excessive)
conj(regression, use)
case(denial, of)
nmod(use, denial)
punct(turn, ,)
cc(turn, and)
amod(guilt, cripple)
nsubj(turn, guilt)
conj(prevent, turn)
case(self, against)
det(self, the)
obl(turn, self)
punct(turn, .)
mark(necessary, while)
det(suppression, some)
nsubj(necessary, suppression)
cc(denial, and)
det(denial, some)
conj(suppression, denial)
cop(necessary, be)
advmod(necessary, not)
advmod(necessary, only)
advcl(determine, necessary)
cc(healthy, but)
conj(necessary, healthy)
punct(determine, ,)
det(worker, the)
nmod:poss(knowledge, worker)
case(worker, 's)
amod(knowledge, clinical)
nsubj(determine, knowledge)
aux(determine, must)
conj(prevent, determine)
advmod(use, how)
det(defense, these)
nsubj:pass(use, defense)
aux(use, be)
aux:pass(use, be)
ccomp(determine, use)
punct(determine, ,)
det(shift, what)
amod(shift, healthy)
nsubj:pass(indicate, shift)
case(adaptation, in)
amod(adaptation, defensive)
nmod(shift, adaptation)
aux:pass(indicate, be)
conj(use, indicate)
punct(time, ,)
cc(time, and)
mark(bring, when)
nsubj:pass(time, effort)
mark(bring, at)
acl(effort, bring)
case(change, about)
obl(bring, change)
aux(time, can)
aux:pass(time, be)
advmod(effectively, most)
advmod(time, effectively)
conj(indicate, time)
punct(prevent, .)
mark(steering, in)
advcl(use, steering)
det(family, the)
obj(steering, family)
case(ego-adaptive, toward)
obl(steering, ego-adaptive)
cc(away, and)
conj(ego-adaptive, away)
case(response, from)
amod(response, maladaptive)
obl(steering, response)
punct(use, ,)
det(worker, the)
nsubj(use, worker)
root(ROOT, use)
compound(honor, time)
punct(honor, -)
amod(technique, honor)
amod(technique, focus)
compound(technique, casework)
obj(use, technique)
case(support, of)
amod(support, specific)
amod(support, emotional)
nmod(technique, support)
punct(clarification, ,)
conj(support, clarification)
punct(guidance, ,)
cc(guidance, and)
amod(guidance, anticipatory)
conj(support, guidance)
punct(guidance, .)
case(period, over)
det(period, a)
advmod(short, relatively)
amod(period, short)
obl(use, period)
case(time, of)
nmod(period, time)
punct(period, ,)
advmod(week, usually)
advmod(week, about)
nummod(week, four)
case(twelve, to)
nmod(four, twelve)
obl:tmod(able, week)
punct(able, ,)
det(worker, the)
nsubj(able, worker)
aux(able, must)
cop(able, be)
parataxis(use, able)
mark(shift, to)
xcomp(able, shift)
det(focus, the)
obj(shift, focus)
punct(focus, ,)
advmod(shift, back)
cc(forth, and)
conj(back, forth)
punct(shift, ,)
case(exigency, between)
amod(exigency, immediate)
amod(exigency, external)
amod(exigency, stressful)
nmod(focus, exigency)
punct(precipitate, ()
punct(precipitate, ``)
acl(exigency, precipitate)
obj(precipitate, stress)
punct(precipitate, '')
punct(precipitate, ))
cc(issue, and)
det(issue, the)
amod(issue, key)
punct(issue, ,)
advmod(relevant, emotionally)
amod(issue, relevant)
conj(exigency, issue)
punct(problem, ()
punct(problem, ``)
amod(problem, underlying)
appos(issue, problem)
punct(problem, '')
punct(problem, ))
nsubj(breakthrough, which)
cop(breakthrough, be)
punct(breakthrough, ,)
advmod(breakthrough, often)
case(breakthrough, in)
det(breakthrough, a)
amod(breakthrough, dramatic)
amod(breakthrough, preconscious)
acl:relcl(problem, breakthrough)
punct(breakthrough, ,)
acl(breakthrough, reactivate)
case(situation, by)
det(situation, the)
compound(situation, crisis)
obl(reactivate, situation)
punct(amenable, ,)
cc(amenable, and)
advmod(amenable, hence)
advmod(amenable, once)
advmod(amenable, again)
conj(breakthrough, amenable)
case(resolution, to)
obl(amenable, resolution)
punct(amenable, .)
mark(be, though)
expl(be, there)
advcl(amenable, be)
advmod(be, obviously)
nsubj(be, nothing)
amod(nothing, new)
case(technique, about)
det(technique, these)
obl(new, technique)
punct(challenge, ,)
nsubj(challenge, they)
aux(challenge, do)
parataxis(be, challenge)
det(worker, the)
nmod:poss(skill, worker)
case(worker, 's)
obj(challenge, skill)
mark(articulate, to)
acl(skill, articulate)
obj(articulate, they)
advmod(articulate, precisely)
case(spot, on)
det(spot, the)
obl(articulate, spot)
cc(basis, and)
case(basis, on)
det(basis, the)
conj(spot, basis)
case(assessment, of)
amod(assessment, quick)
cc(accurate, and)
conj(quick, accurate)
amod(assessment, diagnostic)
nmod(basis, assessment)
punct(challenge, .)
advmod(necessary, then)
punct(necessary, ,)
advmod(necessary, too)
punct(necessary, ,)
det(flexibility, the)
amod(flexibility, utmost)
amod(flexibility, clinical)
nsubj(necessary, flexibility)
cop(necessary, be)
root(ROOT, necessary)
mark(combine, in)
advmod(combine, judiciously)
advcl(necessary, combine)
advmod(time, carefully)
amod(visit, time)
obl:npmod(oriented, family)
punct(oriented, -)
amod(visit, oriented)
compound(visit, home)
obj(combine, visit)
punct(interview, ,)
amod(interview, single)
cc(group, and)
conj(single, group)
compound(interview, office)
conj(visit, interview)
punct(call, ,)
cc(call, and)
amod(call, appropriate)
compound(call, telephone)
compound(call, follow)
punct(follow, -)
compound:prt(follow, up)
conj(visit, call)
punct(call, ,)
mark(be, if)
det(worker, the)
nsubj(be, worker)
acl(call, be)
mark(accessible, to)
cop(accessible, be)
advmod(accessible, genuinely)
xcomp(be, accessible)
cc(be, and)
mark(be, if)
det(outcome, the)
amod(outcome, predict)
amod(outcome, unhealthy)
nsubj(be, outcome)
conj(accessible, be)
mark(avert, to)
aux:pass(avert, be)
advmod(avert, actually)
xcomp(be, avert)
case(accordance, in)
obl(avert, accordance)
case(principle, with)
det(principle, the)
nmod(accordance, principle)
case(intervention, of)
amod(intervention, preventive)
nmod(principle, intervention)
punct(necessary, .)
case(addition, in)
obl(available, addition)
punct(available, ,)
case(case, in)
amod(case, many)
obl(available, case)
punct(available, ,)
det(variety, a)
nsubj(available, variety)
case(resource, of)
amod(resource, concrete)
amod(resource, social)
nmod(variety, resource)
punct(resource, --)
compound(care, homemaker)
punct(day, ,)
conj(homemaker, day)
conj(resource, care)
punct(medical, ,)
amod(aid, medical)
cc(financial, and)
conj(medical, financial)
conj(resource, aid)
punct(available, --)
aux(available, must)
cop(available, be)
advmod(available, reasonably)
root(ROOT, available)
case(support, for)
det(support, the)
compound(support, reality)
obl(available, support)
acl(support, need)
mark(bolster, to)
xcomp(need, bolster)
det(family, the)
obj(bolster, family)
case(effort, in)
nmod:poss(effort, its)
amod(effort, individual)
cc(collective, and)
conj(individual, collective)
compound(effort, cope)
cc(integrative, and)
conj(individual, integrative)
obl(bolster, effort)
punct(available, .)
case(stage, at)
amod(stage, certain)
amod(stage, critical)
obl(important, stage)
punct(important, ,)
cc(reason, and)
advmod(reason, only)
case(reason, for)
compound(reason, sound)
amod(reason, diagnostic)
obl(important, reason)
punct(important, ,)
nsubj(important, it)
aux(important, may)
cop(important, be)
root(ROOT, important)
mark(accompany, to)
xcomp(important, accompany)
compound(member, family)
obj(accompany, member)
case(use, in)
nmod:poss(use, they)
obl(accompany, use)
case(resource, of)
det(resource, these)
nmod(use, resource)
mark(be, if)
nmod:poss(behavior, they)
compound(solving, problem)
punct(solving, -)
compound(behavior, solving)
nsubj(be, behavior)
advcl(accompany, be)
mark(constructive, to)
cop(constructive, be)
xcomp(be, constructive)
cc(defeat, rather)
fixed(rather, than)
conj(constructive, defeat)
punct(defeat, .)
mark(expensive, while)
advcl(defeat, expensive)
case(time, in)
obl(expensive, time)
cc(involve, and)
conj(expensive, involve)
det(deal, a)
amod(deal, great)
obj(involve, deal)
case(adaptation, of)
nmod(deal, adaptation)
case(part, on)
det(part, the)
nmod(deal, part)
case(worker, of)
det(worker, the)
nmod(part, worker)
punct(term, ()
case(term, in)
nmod(worker, term)
case(willingness, of)
nmod:poss(willingness, he)
nmod(term, willingness)
mark(leave, to)
acl(willingness, leave)
det(sanctity, the)
obj(leave, sanctity)
case(office, of)
nmod:poss(office, he)
nmod(sanctity, office)
cc(enter, and)
conj(leave, enter)
advmod(enter, actively)
case(life, into)
det(client, the)
nmod:poss(life, client)
case(client, 's)
obl(enter, life)
punct(enter, ))
punct(find, ,)
nsubj:pass(find, technique)
case(accompaniment, of)
nmod(technique, accompaniment)
aux:pass(find, be)
advcl(enter, find)
mark(value, to)
cop(value, be)
case(value, of)
amod(value, tremendous)
xcomp(find, value)
mark(service, when)
case(service, in)
det(service, the)
obl(value, service)
case(objective, of)
amod(objective, specific)
amod(objective, preventive)
nmod(service, objective)
punct(important, .)
advmod(common, finally)
punct(common, ,)
nsubj(common, whatever)
det(technique, the)
nsubj(whatever, technique)
acl(technique, use)
punct(common, ,)
det(goal, a)
amod(goal, twin)
nsubj(common, goal)
cop(common, be)
root(ROOT, common)
case(service, to)
det(service, all)
amod(service, preventive)
compound(service, casework)
obl(common, service)
punct(common, :)
mark(cushion, to)
advcl(common, cushion)
cc(reduce, or)
conj(cushion, reduce)
det(force, the)
obj(cushion, force)
case(impact, of)
det(impact, the)
compound(impact, stress)
nmod(force, impact)
mark(time, while)
case(time, at)
det(time, the)
amod(time, same)
obl(cushion, time)
mark(encourage, to)
acl(time, encourage)
cc(support, and)
conj(encourage, support)
compound(member, family)
obj(support, member)
mark(mobilize, to)
advcl(support, mobilize)
cc(use, and)
conj(mobilize, use)
nmod:poss(capacity, they)
compound(capacity, ego)
obj(use, capacity)
punct(common, .)
aux(outline, have)
advcl(address, outline)
det(approach, a)
obj(outline, approach)
case(theory, to)
det(theory, the)
nmod(approach, theory)
cc(practice, and)
conj(theory, practice)
case(casework, of)
amod(casework, preventive)
nmod(theory, casework)
punct(address, ,)
nsubj(address, we)
advmod(address, now)
root(ROOT, address)
obj(address, ourselves)
case(question, to)
nmod:poss(question, we)
amod(question, final)
obl(address, question)
punct(address, :)
det(place, what)
nsubj(brief, place)
aux(brief, should)
nsubj(occupy, brief)
punct(occupy, ,)
compound(casework, crisis)
punct(oriented, -)
amod(casework, oriented)
amod(casework, preventive)
nsubj(occupy, casework)
root(ROOT, occupy)
case(spectrum, in)
nmod:poss(spectrum, we)
amod(spectrum, total)
obl(occupy, spectrum)
case(service, of)
nmod(spectrum, service)
punct(brief, ?)
punct(occupy, ?)
nsubj(recognize, we)
aux(recognize, should)
advmod(recognize, first)
root(ROOT, recognize)
nmod:poss(tendency, we)
obj(recognize, tendency)
mark(develop, to)
acl(tendency, develop)
det(hierarchy, a)
obj(develop, hierarchy)
case(value, of)
nmod(hierarchy, value)
punct(develop, ,)
conj(develop, locate)
amod(treatment, brief)
obj(locate, treatment)
case(bottom, at)
det(bottom, the)
obl(locate, bottom)
cc(service, and)
amod(term, long)
punct(term, -)
compound(service, term)
amod(service, intensive)
conj(bottom, service)
case(top, at)
det(top, the)
nmod(service, top)
punct(locate, ,)
mark(see, instead)
fixed(instead, of)
advcl(locate, see)
det(service, the)
obj(see, service)
case(part, as)
obl(see, part)
case(continuum, of)
det(continuum, a)
nmod(part, continuum)
punct(continuum, ,)
mark(important, each)
amod(continuum, important)
case(right, in)
nmod:poss(right, its)
amod(right, own)
obl(important, right)
punct(recognize, .)
det(problem, this)
nsubj(old, problem)
cop(old, be)
advmod(old, perhaps)
advmod(old, as)
root(ROOT, old)
case(casework, as)
amod(casework, social)
obl(old, casework)
nmod:npmod(casework, itself)
punct(old, .)
advmod(decade, almost)
nummod(decade, three)
obl:tmod(ago, decade)
advmod(undertake, ago)
nsubj(undertake, Bertha)
flat(Bertha, reynold)
parataxis(old, undertake)
det(study, a)
obj(undertake, study)
case(interview, of)
amod(contact, short)
punct(contact, -)
compound(interview, contact)
nmod(study, interview)
case(conviction, because)
fixed(because, of)
nmod:poss(conviction, she)
obl(undertake, conviction)
mark(have, that)
amod(term, short)
punct(term, -)
compound(casework, term)
nsubj(have, casework)
acl(conviction, have)
det(place, a)
amod(place, important)
cc(neglect, but)
conj(important, neglect)
obj(have, place)
case(network, in)
nmod:poss(network, we)
obl(have, network)
case(service, of)
amod(service, social)
nmod(network, service)
punct(old, .)
nmod:poss(conclusion, she)
nsubj:pass(borne, conclusion)
aux(borne, have)
aux:pass(borne, be)
root(ROOT, borne)
compound:prt(borne, out)
case(experience, in)
det(experience, the)
obl(borne, experience)
case(practitioner, of)
amod(practitioner, many)
nmod(experience, practitioner)
punct(borne, :)
punct(borne, ``)
amod(contact, short)
punct(contact, -)
compound(interview, contact)
nsubj(experience, interview)
cop(experience, be)
advmod(experience, neither)
det(experience, a)
amod(experience, truncate)
cc(experience, nor)
det(experience, a)
amod(experience, telescop)
root(ROOT, experience)
cc(quality, but)
cop(quality, be)
case(quality, of)
det(quality, the)
amod(quality, same)
amod(quality, essential)
conj(experience, quality)
case(work, as)
det(work, the)
advmod(call, so)
punct(call, -)
amod(work, call)
amod(work, intensive)
compound(work, case)
nmod(quality, work)
punct(work, '')
punct(work, .)
advmod(be, thus)
punct(casework, ,)
nsubj(quality, casework)
acl(casework, involve)
det(number, a)
amod(number, limited)
obj(involve, number)
case(interview, of)
nmod(number, interview)
ccomp(involve, be)
advmod(regard, still)
mark(regard, to)
aux:pass(regard, be)
ccomp(be, regard)
case(term, in)
obl(regard, term)
case(quality, of)
det(quality, the)
nmod(term, quality)
case(service, of)
nmod(quality, service)
acl(quality, render)
cc(quantity, rather)
fixed(rather, than)
fixed(rather, of)
det(quantity, the)
conj(quality, quantity)
case(time, of)
nmod(quantity, time)
acl(time, expend)
punct(experience, .)
mark(experience, that)
nsubj(experience, we)
aux(experience, be)
advcl(evident, experience)
det(upsurge, a)
obj(experience, upsurge)
case(interest, of)
nmod(upsurge, interest)
case(formulation, in)
det(formulation, the)
amod(formulation, many)
nmod(upsurge, formulation)
cc(adaptation, and)
amod(adaptation, preventive)
conj(formulation, adaptation)
case(treatment, of)
amod(treatment, brief)
nmod(adaptation, treatment)
case(casework, in)
amod(casework, social)
nmod(treatment, casework)
cop(evident, be)
root(ROOT, evident)
case(sampling, from)
advmod(sampling, even)
det(sampling, a)
amod(sampling, small)
obl(evident, sampling)
case(literature, of)
amod(literature, current)
nmod(sampling, literature)
punct(evident, .)
advmod(noteworthy, especially)
root(ROOT, noteworthy)
cop(noteworthy, be)
nmod:poss(finding, Levinger)
case(Levinger, 's)
nsubj(noteworthy, finding)
mark(indicator, that)
det(length, the)
nsubj(indicator, length)
case(treatment, of)
nmod(length, treatment)
case(se, per)
nmod(treatment, se)
cop(indicator, be)
advmod(indicator, not)
det(indicator, a)
amod(indicator, reliable)
acl(finding, indicator)
case(outcome, of)
amod(outcome, successful)
nmod(indicator, outcome)
punct(indicator, .)
case(number, accord)
fixed(accord, to)
det(number, a)
obl(indicator, number)
case(study, of)
nmod(number, study)
punct(nature, ,)
det(predictor, the)
amod(predictor, important)
nsubj(nature, predictor)
cop(nature, be)
det(nature, the)
acl:relcl(number, nature)
cc(management, and)
conj(nature, management)
case(anxiety, of)
det(client, the)
nmod:poss(anxiety, client)
case(client, 's)
nmod(nature, anxiety)
cc(accessibility, as)
fixed(as, well)
fixed(as, as)
det(accessibility, the)
conj(nature, accessibility)
case(person, of)
det(person, the)
compound(person, help)
nmod(accessibility, person)
punct(accessibility, .)
case(example, for)
obl(note, example)
punct(note, ,)
det(level, the)
nsubj(note, level)
case(improvement, of)
nmod(level, improvement)
parataxis(finding, note)
case(experiment, in)
det(experiment, a)
amod(experiment, recent)
obl(note, experiment)
case(course, with)
det(course, a)
amod(course, short)
nmod(experiment, course)
case(treatment, of)
amod(treatment, immediate)
nmod(course, treatment)
case(problem, for)
compound(child, parent)
punct(child, -)
compound(relationship, child)
compound(problem, relationship)
nmod(course, problem)
acl(problem, compare)
advmod(compare, favorably)
case(result, with)
det(result, the)
nmod(problem, result)
acl(result, report)
case(clinic, by)
amod(clinic, typical)
compound(guidance, child)
compound(clinic, guidance)
obl(report, clinic)
advmod(equal, where)
det(hour, the)
nsubj(equal, hour)
acl(hour, spend)
case(study, in)
advmod(diagnostic, purely)
amod(study, diagnostic)
obl(spend, study)
aux(equal, may)
acl:relcl(clinic, equal)
cc(exceed, or)
conj(equal, exceed)
det(number, the)
obj(exceed, number)
case(hour, of)
nmod(number, hour)
acl(hour, devote)
case(interview, to)
amod(interview, actual)
compound(interview, treatment)
obl(devote, interview)
case(project, in)
det(project, the)
amod(project, experimental)
nmod(interview, project)
punct(finding, .)
case(significance, of)
amod(significance, startling)
obl(assertion, significance)
punct(assertion, ,)
advmod(significance, too)
punct(assertion, ,)
cop(assertion, be)
det(assertion, the)
root(ROOT, assertion)
mark(possible, that)
expl(possible, it)
cop(possible, be)
acl(assertion, possible)
mark(carry, to)
csubj(possible, carry)
compound:prt(carry, out)
det(program, this)
obj(carry, program)
case(rate, with)
advmod(rate, only)
det(rate, a)
nummod(percent, 6)
compound(rate, percent)
compound(rate, attrition)
obl(carry, rate)
case(rate, as)
fixed(as, compare)
case(rate, with)
det(rate, a)
obl(carry, rate)
case(percent, of)
nummod(percent, 59)
nmod(rate, percent)
acl(percent, report)
case(group, for)
det(group, a)
amod(group, comparable)
obl(report, group)
case(family, of)
nmod(group, family)
nsubj(receive, who)
aux(receive, be)
acl:relcl(family, receive)
obj(receive, help)
case(service, in)
advmod(operate, traditionally)
amod(service, operate)
compound(guidance, child)
compound(service, guidance)
obl(receive, service)
punct(assertion, .)
det(report, these)
nsubj(refer, report)
root(ROOT, refer)
case(level, to)
det(level, a)
obl(refer, level)
case(prevention, of)
amod(prevention, secondary)
nmod(level, prevention)
case(clinic, in)
det(clinic, a)
compound(guidance, child)
compound(clinic, guidance)
nmod(level, clinic)
acl(clinic, approach)
case(route, by)
det(route, the)
amod(route, customary)
obl(approach, route)
case(referral, of)
amod(referral, voluntary)
nmod(route, referral)
case(family, by)
det(family, the)
nmod(referral, family)
cc(people, or)
case(people, by)
amod(people, other)
amod(people, professional)
conj(family, people)
punct(refer, .)
nsubj(evident, similarity)
case(approach, to)
det(approach, the)
nmod(similarity, approach)
obj(describe, which)
nsubj(describe, I)
aux(describe, have)
acl:relcl(approach, describe)
cop(evident, be)
root(ROOT, evident)
case(establishment, in)
det(establishment, the)
amod(establishment, prompt)
obl(evident, establishment)
case(relationship, of)
det(relationship, a)
compound(relationship, help)
nmod(establishment, relationship)
punct(appraisal, ,)
amod(appraisal, quick)
conj(relationship, appraisal)
case(issue, of)
amod(issue, key)
nmod(appraisal, issue)
punct(mobilization, ,)
cc(mobilization, and)
det(mobilization, the)
amod(mobilization, immediate)
conj(relationship, mobilization)
case(plan, of)
compound(plan, treatment)
nmod(mobilization, plan)
case(dynamics, as)
det(dynamics, the)
amod(dynamics, essential)
nmod(mobilization, dynamics)
mark(help, in)
acl(dynamics, help)
mark(further, to)
xcomp(help, further)
det(ego, the)
nmod:poss(effort, ego)
case(ego, 's)
compound(effort, cope)
obj(further, effort)
mark(deal, in)
acl(effort, deal)
case(interplay, with)
det(interplay, the)
obl(deal, interplay)
case(stress, of)
amod(stress, inner)
cc(outer, and)
conj(inner, outer)
nmod(interplay, stress)
punct(deal, .)
mark(be, while)
expl(be, there)
advcl(deal, be)
amod(possibility, many)
amod(possibility, different)
nsubj(be, possibility)
case(timing, for)
det(timing, the)
nmod(possibility, timing)
case(intervention, of)
compound(intervention, casework)
nmod(timing, intervention)
punct(report, ,)
det(experiment, the)
nsubj(point, experiment)
advmod(report, recently)
acl(experiment, report)
case(variety, from)
det(variety, a)
obl(report, variety)
case(setting, of)
amod(setting, traditional)
nmod(variety, setting)
det(setting, all)
acl:relcl(possibility, point)
compound:prt(point, up)
det(importance, the)
obj(point, importance)
case(response, of)
det(response, a)
amod(response, immediate)
nmod(importance, response)
case(need, to)
det(client, the)
nmod:poss(need, client)
case(client, 's)
amod(need, initial)
nmod(response, need)
case(help, for)
nmod(need, help)
punct(evident, .)
case(program, in)
det(program, some)
obl(concentrate, program)
punct(concentrate, ,)
nsubj:pass(concentrate, treatment)
aux:pass(concentrate, be)
root(ROOT, concentrate)
case(period, over)
det(period, a)
amod(period, short)
obl(concentrate, period)
case(time, of)
nmod(period, time)
punct(concentrate, ,)
mark(establish, while)
case(other, in)
obl(use, other)
punct(concentrate, ,)
mark(establish, after)
det(contact, the)
amod(contact, initial)
nsubj:pass(establish, contact)
aux:pass(establish, be)
advcl(use, establish)
punct(use, ,)
amod(space, flexible)
nsubj:pass(use, space)
case(interview, of)
nmod(space, interview)
aux(use, have)
aux:pass(use, be)
advmod(use, experimentally)
conj(concentrate, use)
case(success, with)
amod(success, apparent)
obl(use, success)
punct(Willingness, .)
nsubj:pass(use, Willingness)
mark(take, to)
acl(Willingness, take)
det(risk, the)
obj(take, risk)
case(interpretation, of)
amod(interpretation, early)
cc(direct, and)
conj(early, direct)
nmod(risk, interpretation)
punct(proviso, ()
case(proviso, with)
det(proviso, the)
nmod(interpretation, proviso)
mark(threaten, that)
mark(threaten, if)
det(interpretation, the)
nsubj(threaten, interpretation)
cop(threaten, be)
advmod(threaten, too)
acl(proviso, threaten)
punct(withdraw, ,)
det(worker, the)
nsubj(withdraw, worker)
aux(withdraw, can)
conj(threaten, withdraw)
punct(withdraw, ))
cop(feature, be)
det(feature, another)
amod(feature, prominent)
acl(proviso, feature)
case(effort, in)
det(effort, these)
nmod(feature, effort)
punct(concentrate, .)
nmod:poss(aim, my)
nsubj(be, aim)
mark(mention, in)
acl(aim, mention)
det(factor, this)
obj(mention, factor)
advmod(be, obviously)
root(ROOT, be)
advmod(be, not)
mark(give, to)
ccomp(be, give)
obj(give, license)
case(therapy, to)
punct(therapy, ``)
amod(therapy, wild)
obl(give, therapy)
punct(therapy, '')
cc(encourage, but)
cc(encourage, rather)
fixed(rather, to)
conj(give, encourage)
obj(encourage, we)
mark(use, to)
xcomp(encourage, use)
det(skill, the)
compound(honor, time)
punct(honor, -)
amod(skill, honor)
amod(skill, clinical)
compound(skill, casework)
obj(use, skill)
nsubj(possess, we)
advmod(possess, already)
acl:relcl(skill, possess)
punct(use, ,)
cc(use, and)
mark(use, to)
conj(use, use)
obj(use, they)
case(confidence, with)
amod(confidence, greater)
obl(use, confidence)
punct(precision, ,)
conj(confidence, precision)
punct(pride, ,)
cc(pride, and)
amod(pride, professional)
conj(confidence, pride)
punct(be, . )
mark(be, though)
expl(be, there)
advcl(document, be)
advmod(be, obviously)
amod(need, great)
nsubj(be, need)
case(experimentation, for)
amod(experimentation, continue)
nmod(need, experimentation)
case(type, with)
amod(type, various)
nmod(experimentation, type)
case(intervention, of)
amod(term, short)
punct(term, -)
compound(intervention, term)
nmod(type, intervention)
case(effort, to)
amod(effort, further)
nmod(intervention, effort)
mark(develop, in)
acl(effort, develop)
det(definition, a)
amod(definition, operational)
obj(develop, definition)
case(prevention, of)
nmod(definition, prevention)
case(secondary, at)
det(secondary, the)
nmod(definition, secondary)
punct(definition, --)
cc(level, or)
advmod(level, perhaps)
punct(level, ,)
case(instance, in)
det(instance, some)
nmod(level, instance)
punct(level, ,)
amod(level, primary)
punct(level, --)
conj(secondary, level)
punct(document, ,)
det(place, the)
nsubj:pass(document, place)
case(intervention, of)
amod(term, short)
punct(term, -)
compound(intervention, term)
nmod(place, intervention)
aux(document, have)
advmod(document, already)
aux:pass(document, be)
root(ROOT, document)
case(number, by)
det(number, a)
obl(document, number)
case(investigator, of)
nmod(number, investigator)
case(variety, in)
det(variety, a)
amod(variety, wide)
nmod(number, variety)
case(setting, of)
nmod(variety, setting)
punct(document, .)
nsubj(emphasize, Woodward)
punct(emphasize, ,)
case(example, for)
obl(emphasize, example)
punct(emphasize, ,)
aux(emphasize, have)
root(ROOT, emphasize)
det(need, the)
punct(need, ``)
obj(emphasize, need)
case(spectrum, for)
det(spectrum, a)
amod(spectrum, broad)
nmod(need, spectrum)
case(service, of)
nmod(spectrum, service)
punct(spectrum, ,)
case(service, include)
advmod(brief, very)
amod(service, brief)
nmod(spectrum, service)
case(connection, in)
nmod(service, connection)
case(situation, with)
amod(situation, critical)
nmod(connection, situation)
punct(service, '')
punct(emphasize, .)
advmod(arrive, ideally)
punct(arrive, ,)
amod(treatment, brief)
nsubj:pass(arrive, treatment)
aux(arrive, should)
aux:pass(arrive, be)
parataxis(emphasize, arrive)
case(treatment, at)
case(treatment, as)
det(treatment, a)
obl(arrive, treatment)
case(choice, of)
nmod(treatment, choice)
cc(treatment, rather)
fixed(rather, than)
fixed(rather, as)
det(treatment, a)
conj(treatment, treatment)
case(chance, of)
nmod(treatment, chance)
punct(treatment, .)
advmod(shortage, moreover)
punct(shortage, ,)
det(shortage, the)
appos(treatment, shortage)
case(resource, of)
compound(resource, treatment)
nmod(shortage, resource)
cc(shortage, and)
det(shortage, the)
advmod(persistent, chronically)
amod(shortage, persistent)
conj(shortage, shortage)
case(manpower, of)
amod(manpower, mental)
compound(manpower, health)
nmod(shortage, manpower)
acl:relcl(shortage, force)
obj(force, we)
mark(innovate, to)
xcomp(force, innovate)
amod(refinement, additional)
obj(innovate, refinement)
case(technique, of)
amod(technique, preventive)
compound(technique, intervention)
nmod(refinement, technique)
mark(make, to)
advcl(innovate, make)
obj(make, service)
advmod(widely, more)
advmod(available, widely)
xcomp(make, available)
punct(innovate, --)
cc(basis, and)
case(basis, on)
det(basis, a)
advmod(effective, more)
amod(basis, effective)
conj(make, basis)
case(people, to)
amod(people, more)
nmod(basis, people)
punct(emphasize, . )
amod(research, further)
root(ROOT, research)
case(meaning, in)
det(meaning, the)
nmod(research, meaning)
case(crise, of)
nmod(meaning, crise)
mark(experience, as)
acl(meaning, experience)
case(consumer, by)
det(consumer, the)
obl(experience, consumer)
case(service, of)
amod(service, traditional)
amod(service, social)
compound(service, casework)
nmod(consumer, service)
punct(consumer, --)
case(attempt, include)
nmod(consumer, attempt)
mark(develop, to)
acl(attempt, develop)
det(typology, a)
obj(develop, typology)
case(structure, of)
compound(structure, family)
nmod(typology, structure)
punct(problem, ,)
compound(problem, crisis)
conj(structure, problem)
punct(mechanism, ,)
compound(mechanism, reaction)
conj(structure, mechanism)
punct(approach, ,)
cc(approach, and)
amod(approach, differential)
compound(approach, treatment)
conj(structure, approach)
punct(approach, --)
cc(establishment, and)
det(establishment, the)
conj(approach, establishment)
case(program, of)
amod(program, new)
amod(program, experimental)
nmod(establishment, program)
cop(need, be)
amod(need, imperative)
amod(need, social)
nmod(establishment, need)
nsubj(command, which)
aux(command, should)
acl:relcl(need, command)
det(effort, the)
amod(effort, best)
obj(command, effort)
case(caseworker, of)
nmod(effort, caseworker)
case(collaboration, in)
nmod(effort, collaboration)
case(planner, with)
compound(planner, community)
nmod(collaboration, planner)
punct(need, .)
nmod:poss(literature, we)
nsubj(replete, literature)
cop(replete, be)
advmod(replete, already)
root(ROOT, replete)
case(number, with)
det(number, a)
amod(number, fantastic)
obl(replete, number)
case(suggestion, of)
nmod(number, suggestion)
case(programming, for)
amod(agency, preventive)
compound(programming, agency)
nmod(suggestion, programming)
acl(programming, range)
case(practical, from)
det(practical, the)
advmod(practical, immediately)
obl(range, practical)
case(utopian, to)
det(utopian, the)
advmod(utopian, globally)
obl(practical, utopian)
punct(replete, .)
advmod(have, probably)
punct(have, ,)
case(future, in)
det(future, the)
amod(future, immediate)
obl(have, future)
punct(have, ,)
nsubj(have, we)
aux(have, will)
root(ROOT, have)
mark(settle, to)
xcomp(have, settle)
case(effort, for)
amod(range, middle)
punct(range, -)
compound(effort, range)
obl(settle, effort)
nsubj(fall, that)
acl:relcl(effort, fall)
xcomp(fall, short)
case(model, of)
amod(model, utopian)
obl(short, model)
punct(have, .)
amod(experimentation, increase)
nsubj(hold, experimentation)
case(agency, with)
amod(agency, multipurpose)
nmod(experimentation, agency)
punct(experimentation, ,)
advmod(those, especially)
appos(experimentation, those)
nsubj(combine, that)
acl:relcl(those, combine)
case(function, afresh)
det(function, the)
amod(function, traditional)
obl(combine, function)
case(family, of)
nmod(function, family)
cc(service, and)
compound(welfare, child)
compound(service, welfare)
conj(family, service)
punct(hold, ,)
root(ROOT, hold)
amod(promise, rich)
obj(hold, promise)
case(future, for)
det(future, the)
nmod(promise, future)
punct(hold, .)
case(example, for)
obl(abound, example)
punct(abound, ,)
compound(experience, child)
compound(experience, welfare)
nsubj(abound, experience)
conj(hold, abound)
case(case, with)
obl(abound, case)
case(which, in)
obl(precipitate, which)
det(request, the)
amod(request, parental)
nsubj:pass(precipitate, request)
case(care, for)
compound(care, substitute)
nmod(request, care)
aux:pass(precipitate, be)
acl:relcl(case, precipitate)
case(event, by)
det(event, a)
compound(event, crisis)
obl(precipitate, event)
nsubj:pass(link, which)
aux:pass(link, be)
advmod(link, meaningfully)
acl:relcl(event, link)
case(problem, with)
det(problem, a)
amod(problem, fundamental)
amod(problem, unresolved)
obl(link, problem)
case(relationship, of)
compound(relationship, family)
nmod(problem, relationship)
punct(abound, .)
nsubj(process, sentiment)
punct(process, .)
compound(management, tension)
nsubj(process, management)
cc(communication, and)
conj(management, communication)
case(sentiment, of)
nmod(communication, sentiment)
cop(process, be)
det(process, the)
root(ROOT, process)
acl(process, involve)
case(function, in)
det(function, the)
obl(involve, function)
case(element, of)
det(element, the)
nmod(function, element)
case(sentiment, of)
nmod(element, sentiment)
cc(feeling, or)
conj(sentiment, feeling)
punct(process, .)
nsubj(mate, one)
case(device, of)
det(device, the)
nmod(one, device)
case(management, for)
compound(management, tension)
nmod(device, management)
cop(mate, be)
amod(mate, preferential)
root(ROOT, mate)
punct(mate, .)
det(mate, the)
amod(mate, preferential)
nsubj:pass(analyze, mate)
case(population, of)
det(population, this)
amod(population, particular)
nmod(mate, population)
aux(analyze, have)
aux:pass(analyze, be)
root(ROOT, analyze)
case(study, in)
det(study, a)
amod(study, separate)
obl(analyze, study)
punct(analyze, .)
det(isolation, the)
amod(isolation, relative)
amod(isolation, geographical)
nsubj(make, isolation)
case(population, of)
det(population, the)
compound(population, brandywine)
nmod(isolation, population)
root(ROOT, make)
case(choice, for)
det(choice, a)
amod(choice, limited)
obl(make, choice)
case(mate, in)
nmod(choice, mate)
punct(make, .)
nsubj(seem, it)
aux(seem, would)
root(ROOT, seem)
xcomp(seem, necessary)
mark(provide, that)
nsubj(provide, member)
case(population, of)
det(population, this)
nmod(member, population)
ccomp(necessary, provide)
obj(provide, support)
case(another, for)
nummod(another, one)
nmod(support, another)
mark(provide, since)
nsubj:pass(provide, it)
aux:pass(provide, be)
advmod(provide, not)
advcl(provide, provide)
case(society, by)
det(society, the)
amod(society, larger)
obl(provide, society)
punct(seem, .)
det(relation, the)
amod(relation, supportive)
nsubj:pass(achieve, relation)
aux(achieve, can)
advmod(achieve, apparently)
aux:pass(achieve, be)
root(ROOT, achieve)
case(isolation, in)
amod(isolation, geographical)
cc(social, and)
conj(geographical, social)
obl(achieve, isolation)
punct(achieve, .)
det(home, the)
compound(home, newlywed)
compound(home, building)
nsubj(illustrate, home)
case(land, on)
det(land, the)
amod(land, same)
nmod(home, land)
case(set, with)
cc:preconj(set, either)
nmod(home, set)
case(parent, of)
nmod(set, parent)
punct(use, ,)
cc(use, and)
det(use, the)
advmod(exclusive, almost)
amod(use, exclusive)
conj(home, use)
case(member, of)
nmod(use, member)
case(population, of)
det(population, the)
nmod(member, population)
case(sponsor, as)
nmod(member, sponsor)
case(baptism, for)
nmod(sponsor, baptism)
cc(wedding, and)
conj(baptism, wedding)
root(ROOT, illustrate)
det(relationship, this)
amod(relationship, supportive)
obj(illustrate, relationship)
punct(illustrate, .)
case(Loomis, as)
nsubj(remark, Loomis)
advcl(illustrate, remark)
punct(illustrate, ,)
punct(illustrate, ``)
case(pattern, in)
det(pattern, the)
amod(pattern, internal)
obl(be, pattern)
det(reason, the)
amod(reason, chief)
nsubj(be, reason)
case(interact, for)
nmod(reason, interact)
root(ROOT, be)
mark(communicate, to)
ccomp(be, communicate)
obj(communicate, like)
punct(friendship, ,)
conj(like, friendship)
punct(love, ,)
cc(love, and)
conj(like, love)
case(those, among)
nmod(like, those)
nsubj(stand, who)
acl:relcl(those, stand)
mark(support, in)
advcl(stand, support)
obj(support, relation)
case(another, to)
nummod(another, one)
nmod(relation, another)
cc(corresponding, and)
conj(support, corresponding)
amod(sentiment, negative)
obj(corresponding, sentiment)
case(those, to)
nmod(sentiment, those)
nsubj(stand, who)
acl:relcl(those, stand)
case(relation, in)
amod(relation, antagonistic)
obl(stand, relation)
punct(stand, '')
punct(achieve, .)
advcl(stand, achieve)
punct(achieve, . )
nsubj(seem, Maintenance)
case(quo, of)
det(quo, the)
compound(quo, status)
nmod(Maintenance, quo)
aux(seem, might)
root(ROOT, seem)
mark(goal, to)
cop(goal, be)
det(goal, the)
amod(goal, appropriate)
xcomp(seem, goal)
cc(objective, or)
conj(goal, objective)
case(population, of)
det(population, this)
nmod(objective, population)
obl:tmod(goal, today)
punct(seem, .)
cc(appear, yet)
punct(appear, ,)
det(object, the)
nsubj(appear, object)
case(element, of)
det(element, the)
nmod(object, element)
mark(achieve, of)
acl(element, achieve)
case(process, through)
det(process, the)
obl(achieve, process)
case(goal, of)
nmod(process, goal)
acl(goal, attain)
case(population, for)
det(population, this)
obl(attain, population)
root(ROOT, appear)
mark(change, to)
aux(change, have)
aux:pass(change, be)
xcomp(appear, change)
case(circumstance, by)
obl(change, circumstance)
acl(circumstance, bring)
compound:prt(bring, about)
case(war, by)
det(war, the)
obl(bring, war)
punct(War, .)
case(War, prior)
fixed(prior, to)
compound(War, World)
obl(be, War)
nummod(War, 2)
punct(be, ,)
expl(be, there)
parataxis(change, be)
det(percentage, a)
amod(percentage, higher)
nsubj(be, percentage)
case(marriage, of)
amod(marriage, endogamous)
nmod(percentage, marriage)
case(War, than)
case(War, after)
compound(War, World)
compound(Norms, War)
nummod(War, 2)
punct(Norms, .)
nmod(percentage, Norms)
punct(appear, .)
det(norm, the)
nsubj(refer, norm)
punct(norm, ,)
case(element, as)
obl(refer, element)
punct(refer, ,)
root(ROOT, refer)
case(criterion, to)
punct(criterion, ``)
det(criterion, all)
obl(refer, criterion)
mark(judge, for)
acl(criterion, judge)
det(character, the)
obj(judge, character)
cc(conduct, or)
conj(character, conduct)
case(action, of)
det(action, both)
amod(action, individual)
cc(group, and)
conj(individual, group)
nmod(character, action)
case(system, in)
det(system, any)
amod(system, social)
nmod(action, system)
punct(system, '')
punct(assign, .)
det(process, the)
nsubj(assign, process)
case(evaluation, of)
nmod(process, evaluation)
ccomp(refer, assign)
amod(positive, varying)
obj(assign, positive)
cc(negative, and)
conj(positive, negative)
obj(assign, priority)
cc(value, or)
conj(priority, value)
case(element, to)
nmod(value, element)
punct(assign, .)
det(element, the)
nsubj(become, element)
cc(process, and)
conj(element, process)
root(ROOT, become)
xcomp(become, evident)
case(study, in)
det(study, a)
obl(evident, study)
case(selection, of)
compound(selection, mate)
nmod(study, selection)
case(population, in)
det(population, this)
nmod(selection, population)
punct(evident, .)
case(evidence, from)
det(evidence, the)
root(ROOT, evidence)
punct(conjecture, ``)
nsubj:pass(conjecture, it)
aux(conjecture, may)
aux:pass(conjecture, be)
acl(evidence, conjecture)
mark(union, that)
amod(core, core)
punct(core, -)
amod(marriage, core)
nsubj(union, marriage)
cop(union, be)
det(union, the)
amod(union, prefer)
ccomp(conjecture, union)
case(male, for)
amod(male, core)
nmod(union, male)
cc(female, and)
conj(male, female)
punct(union, ;)
punct(union, ;)
amod(marginal, core)
punct(marginal, -)
amod(marriage, marginal)
nsubj(belong, marriage)
advmod(belong, still)
parataxis(union, belong)
case(category, in)
det(category, the)
obl(belong, category)
case(union, of)
amod(union, permissive)
nmod(category, union)
punct(belong, ;)
punct(belong, ;)
cc(proscribe, and)
amod(Negro, core)
punct(Negro, -)
amod(marriage, Negro)
nsubj:pass(proscribe, marriage)
aux:pass(proscribe, be)
conj(belong, proscribe)
case(member, for)
amod(member, core)
obl(proscribe, member)
punct(proscribe, '')
punct(status-role, .)
obj(proscribe, status-role)
punct(status-role, .)
det(element, the)
nsubj:pass(investigate, element)
case(role, of)
compound(role, status)
punct(role, -)
nmod(element, role)
cc(process, and)
amod(process, associate)
conj(role, process)
aux(investigate, have)
advmod(investigate, not)
aux:pass(investigate, be)
advmod(investigate, sufficiently)
root(ROOT, investigate)
case(population, for)
det(population, this)
obl(investigate, population)
mark(permit, to)
advcl(investigate, permit)
det(type, any)
obj(permit, type)
case(conjecture, of)
nmod(type, conjecture)
case(they, about)
nmod(conjecture, they)
punct(investigate, .)
root(ROOT, power)
punct(power, .)
expl(be, there)
root(ROOT, be)
det(indication, some)
nsubj(be, indication)
case(number, from)
det(number, a)
amod(number, limit)
nmod(indication, number)
case(interview, of)
nmod(number, interview)
case(member, with)
nmod(interview, member)
case(population, of)
det(population, the)
nmod(member, population)
mark(exert, that)
det(element, the)
nsubj:pass(exert, element)
case(power, of)
nmod(element, power)
punct(influence, ,)
advmod(influence, primarily)
det(influence, the)
amod(influence, voluntary)
appos(element, influence)
case(power, of)
amod(power, non-authoritative)
nmod(influence, power)
punct(exert, ,)
aux(exert, have)
aux:pass(exert, be)
acl(indication, exert)
case(actor, on)
obl(exert, actor)
case(system, in)
det(system, the)
nmod(actor, system)
punct(exert, ,)
advmod(regard, particularly)
case(regard, in)
obl(exert, regard)
case(selection, to)
compound(selection, mate)
nmod(regard, selection)
punct(be, .)
nsubj(seem, this)
aux(seem, would)
root(ROOT, seem)
mark(vary, to)
xcomp(seem, vary)
case(family, from)
obl(vary, family)
case(family, to)
obl(vary, family)
punct(vary, ,)
case(status, depend)
advmod(status, somewhat)
case(core, on)
det(status, the)
amod(status, core)
cc(marginal, or)
conj(core, marginal)
punct(status, ``)
obl(vary, status)
punct(status, '')
case(family, of)
det(family, that)
nmod(status, family)
punct(seem, .)
advmod(have, again)
punct(have, ,)
nsubj(have, size)
case(group, of)
det(group, the)
nmod(size, group)
aux(have, may)
root(ROOT, have)
det(influence, some)
obj(have, influence)
case(strength, on)
det(strength, the)
nmod(influence, strength)
case(controls, of)
compound(controls, group)
nmod(strength, controls)
punct(have, .)
root(ROOT, rank)
punct(rank, .)
nsubj:pass(attempt, interview)
case(member, with)
nmod(interview, member)
case(population, of)
det(population, the)
compound(population, brandywine)
nmod(member, population)
aux:pass(attempt, be)
root(ROOT, attempt)
mark(discover, in)
fixed(in, order)
mark(discover, to)
advcl(attempt, discover)
det(rank, the)
obj(discover, rank)
case(family, of)
det(family, the)
amod(family, various)
nmod(rank, family)
case(population, in)
det(population, the)
nmod(family, population)
punct(attempt, .)
det(majority, the)
amod(majority, large)
nsubj(place, majority)
case(interviewee, of)
det(interviewee, the)
nmod(majority, interviewee)
root(ROOT, place)
amod(family, core)
obj(place, family)
case(position, in)
det(position, the)
amod(position, upper)
obl(place, position)
punct(place, .)
nsubj(consider, Loomis)
root(ROOT, consider)
xcomp(consider, rank)
det(product, a)
obj(rank, product)
case(process, of)
det(process, the)
compound(process, evaluation)
nmod(product, process)
punct(consider, .)
punct(consider, ``)
det(standing, the)
nsubj:pass(determine, standing)
cc(rank, or)
conj(standing, rank)
case(actor, of)
det(actor, a)
nmod(standing, actor)
case(system, in)
det(system, a)
amod(system, give)
amod(system, social)
nmod(actor, system)
aux:pass(determine, be)
root(ROOT, determine)
case(evaluation, by)
det(evaluation, the)
obl(determine, evaluation)
acl(evaluation, place)
case(actor, upon)
det(actor, the)
obl(place, actor)
cc(act, and)
nmod:poss(act, he)
conj(actor, act)
case(accordance, in)
obl(place, accordance)
case(norm, with)
det(norm, the)
nmod(accordance, norm)
cc(standard, and)
conj(norm, standard)
case(system, of)
det(system, the)
nmod(norm, system)
punct(norm, '')
punct(norm, .)
case(rate, despite)
det(rate, the)
amod(rate, increase)
nmod(norm, rate)
case(marriage, of)
amod(marriage, exogamous)
nmod(rate, marriage)
punct(able, ,)
det(population, the)
nsubj(able, population)
aux(able, have)
cop(able, be)
acl:relcl(rate, able)
mark(sustain, to)
xcomp(able, sustain)
punct(sustain, ,)
case(least, at)
nmod(degree, least)
case(degree, to)
det(degree, some)
obl(sustain, degree)
punct(consciousness, ,)
det(consciousness, the)
obj(sustain, consciousness)
case(status, of)
nmod:poss(status, its)
amod(status, intermediate)
nmod(consciousness, status)
case(society, in)
nmod(status, society)
punct(determine, .)
case(extent, to)
det(extent, some)
obl(consider, extent)
det(system, the)
nsubj:pass(consider, system)
aux(consider, can)
aux:pass(consider, be)
root(ROOT, consider)
det(Gemeinschaft, a)
xcomp(consider, Gemeinschaft)
case(which, in)
obl(determine, which)
punct(determine, ``)
amod(role, social)
punct(role, -)
compound(occupancy, role)
nsubj:pass(determine, occupancy)
aux:pass(determine, be)
acl:relcl(Gemeinschaft, determine)
case(birth, by)
obl(determine, birth)
punct(determine, ,)
case(attribute, by)
obl(determine, attribute)
case(sex, such)
fixed(such, as)
nmod(attribute, sex)
cc(caste, or)
conj(sex, caste)
punct(sex, ,)
nsubj(immutable, which)
cop(immutable, be)
advmod(immutable, biologically)
cc(immutable, or)
advmod(immutable, socially)
acl:relcl(sex, immutable)
punct(immutable, '')
punct(adherence, .)
det(adherence, the)
appos(Gemeinschaft, adherence)
case(many, of)
nmod(adherence, many)
case(population, in)
det(population, the)
nmod(many, population)
case(background, to)
det(background, the)
amod(background, indian)
nmod(population, background)
case(pedigree, in)
nmod:poss(pedigree, they)
nmod(background, pedigree)
punct(emphasis, ,)
cc(emphasis, and)
conj(background, emphasis)
case(fact, upon)
det(fact, the)
nmod(emphasis, fact)
mark(slave, that)
nmod:poss(ancestor, they)
nsubj(slave, ancestor)
aux(slave, have)
advmod(slave, never)
cop(slave, be)
acl(fact, slave)
punct(become, ,)
conj(slave, become)
case(interest, of)
amod(interest, prime)
obl(become, interest)
mark(determine, in)
acl(interest, determine)
advmod(far, how)
advmod(promote, far)
det(element, these)
nsubj(promote, element)
ccomp(determine, promote)
det(image, the)
compound(image, self)
punct(image, -)
obj(promote, image)
case(status, of)
det(status, the)
amod(status, intermediate)
nmod(image, status)
case(group, of)
det(group, the)
nmod(status, group)
case(society, in)
nmod(group, society)
punct(consider, .)
root(ROOT, sanction)
punct(sanction, .)
det(sanction, the)
amod(sanction, negative)
nsubj(act, sanction)
acl(sanction, apply)
case(marriage, to)
amod(Negro, core)
punct(Negro, -)
amod(marriage, Negro)
obl(apply, marriage)
case(member, for)
amod(member, core)
nmod(marriage, member)
root(ROOT, act)
case(indicator, as)
obl(act, indicator)
case(adherence, of)
amod(adherence, expect)
nmod(indicator, adherence)
case(norm, to)
compound(norm, group)
nmod(adherence, norm)
punct(act, .)
advmod(enforce, however)
punct(enforce, ,)
case(law, because)
fixed(because, of)
compound(law, church)
obl(enforce, law)
punct(enforce, ,)
advmod(more, lately)
advmod(stringently, more)
advmod(enforce, stringently)
advcl(that, enforce)
punct(enforce, ,)
nsubj(forbid, which)
acl:relcl(enforce, forbid)
det(marriage, the)
obj(forbid, marriage)
case(cousin, of)
nmod(marriage, cousin)
advmod(relate, closely)
acl(cousin, relate)
advmod(relate, consanguineously)
punct(means, ,)
det(means, a)
nsubj(that, means)
mark(facilitate, of)
acl(means, facilitate)
det(goal, the)
obj(facilitate, goal)
case(relation, of)
case(group, in)
punct(group, -)
compound(relation, group)
nmod(goal, relation)
aux(that, may)
cop(that, be)
root(ROOT, that)
case(recourse, of)
nmod(that, recourse)
case(union, to)
amod(union, illegitimate)
nmod(recourse, union)
punct(that, . )
det(survey, a)
amod(survey, cursory)
nsubj(indicate, survey)
case(material, of)
amod(material, available)
nmod(survey, material)
root(ROOT, indicate)
det(rate, a)
amod(rate, high)
obj(indicate, rate)
case(birth, of)
amod(birth, illegitimate)
nmod(rate, birth)
acl(birth, occur)
case(parent, to)
obl(occur, parent)
nsubj(have, who)
acl:relcl(birth, have)
det(relationship, a)
amod(relationship, close)
amod(relationship, consanguineous)
obj(have, relationship)
punct(relationship, .)
appos(relationship, Subsystems)
det(process, the)
amod(process, comprehensive)
cc(master, or)
conj(comprehensive, master)
nsubj(activate, process)
acl:relcl(Subsystems, activate)
obj(activate, all)
cc(some, or)
conj(all, some)
case(element, of)
det(element, the)
nmod(all, element)
case(system, within)
det(system, the)
amod(system, social)
nmod(element, system)
cc(subsystem, and)
conj(system, subsystem)
punct(indicate, .)
case(system, within)
det(system, the)
amod(system, larger)
amod(system, social)
obl(subsystem, system)
cop(subsystem, be)
det(subsystem, the)
amod(subsystem, structural)
cc(functional, and)
conj(structural, functional)
root(ROOT, subsystem)
punct(subsystem, .)
det(subsystem, the)
amod(subsystem, structural)
nsubj(include, subsystem)
punct(subsystem, ,)
acl(subsystem, consist)
case(inter-relationships, of)
advmod(stable, relatively)
amod(inter-relationships, stable)
obl(consist, inter-relationships)
case(part, among)
nmod:poss(part, its)
nmod(inter-relationships, part)
punct(include, ,)
root(ROOT, include)
punct(include, :)
nummod(Subgroups, 1)
punct(Subgroups, .)
obj(include, Subgroups)
case(type, of)
amod(type, various)
nmod(Subgroups, type)
punct(Subgroups, ,)
acl(type, interconnect)
case(norm, by)
amod(norm, relational)
obl(interconnect, norm)
punct(include, . )
nummod(role, 2)
punct(2, .)
root(ROOT, role)
case(type, of)
amod(type, various)
nmod(role, type)
punct(role, ,)
case(system, within)
det(system, the)
amod(system, larger)
nmod(role, system)
cc(subgroup, and)
case(subgroup, within)
det(subgroup, the)
conj(system, subgroup)
nummod(., 3)
punct(norm, .)
compound(norm, Regulative)
root(ROOT, norm)
acl(norm, govern)
obj(govern, subgroup)
cc(role, and)
conj(subgroup, role)
punct(norm, . )
nummod(value, 4)
punct(4, .)
amod(value, cultural)
root(ROOT, value)
punct(value, .)
case(study, in)
det(study, the)
obl(produce, study)
case(pattern, of)
compound(pattern, marriage)
nmod(study, pattern)
case(group, for)
det(group, this)
nmod(pattern, group)
punct(produce, ,)
nsubj(produce, consanguinity)
root(ROOT, produce)
det(system, the)
amod(system, structural)
obj(produce, system)
punct(system, --)
det(system, a)
appos(system, system)
case(affinity, of)
nmod(system, affinity)
punct(system, --)
nsubj(maintain, which)
punct(maintain, ,)
case(turn, in)
obl(maintain, turn)
punct(maintain, ,)
acl:relcl(system, maintain)
det(system, the)
obj(maintain, system)
case(consanguinity, of)
nmod(system, consanguinity)
punct(produce, .)
nsubj:pass(find, Subgroups)
case(type, of)
amod(type, various)
nmod(Subgroups, type)
aux(find, have)
aux:pass(find, be)
root(ROOT, find)
case(system, within)
det(system, this)
obl(find, system)
punct(find, .)
det(line, each)
compound(line, family)
nsubj:pass(consider, line)
aux(consider, can)
aux:pass(consider, be)
root(ROOT, consider)
det(substructure, a)
xcomp(consider, substructure)
punct(consider, .)
expl(seem, there)
root(ROOT, seem)
mark(value, to)
cop(value, be)
det(value, a)
amod(value, imply)
amod(value, cultural)
nsubj(seem, value)
acl(value, attach)
case(fact, to)
det(fact, the)
obl(attach, fact)
case(status, of)
amod(status, core)
nmod(fact, status)
case(group, within)
det(group, the)
nmod(status, group)
punct(value, .)
advmod(seem, additionally)
punct(seem, ,)
det(proscription, the)
nsubj(seem, proscription)
case(marriage, of)
amod(Negro, core)
punct(Negro, -)
amod(marriage, Negro)
nmod(proscription, marriage)
case(family, for)
amod(family, core)
nmod(marriage, family)
punct(family, ,)
acl(family, discuss)
advmod(discuss, above)
punct(seem, ,)
aux(seem, would)
conj(seem, seem)
mark(act, to)
xcomp(seem, act)
case(norm, as)
det(norm, a)
amod(norm, regulative)
obl(act, norm)
acl(norm, govern)
obj(govern, subgroup)
cc(role, and)
conj(subgroup, role)
punct(seem, .)
det(scope, the)
nsubj(provide, scope)
case(study, of)
det(study, this)
nmod(scope, study)
aux(provide, do)
advmod(provide, not)
root(ROOT, provide)
case(study, for)
det(study, the)
obl(provide, study)
case(role, of)
nmod(study, role)
case(type, of)
amod(type, various)
nmod(role, type)
case(system, within)
det(system, the)
amod(system, larger)
nmod(type, system)
cc(subgroup, or)
case(subgroup, within)
det(subgroup, the)
conj(system, subgroup)
punct(provide, .)
advmod(presume, however)
punct(presume, ,)
nsubj:pass(presume, it)
aux(presume, can)
advmod(presume, not)
aux:pass(presume, be)
root(ROOT, presume)
punct(presume, ,)
xcomp(presume, informal)
mark(seem, though)
det(structure, the)
nsubj(seem, structure)
case(population, of)
det(population, the)
nmod(structure, population)
advcl(presume, seem)
punct(seem, ,)
mark(be, that)
expl(be, there)
ccomp(seem, be)
advmod(be, not)
advmod(define, well)
punct(define, -)
amod(role, define)
nsubj(be, role)
case(system, within)
det(system, the)
nmod(role, system)
punct(presume, .)
det(study, the)
amod(study, present)
nsubj(relate, study)
root(ROOT, relate)
case(theory, to)
det(theory, the)
obl(relate, theory)
case(system, of)
amod(system, functional)
nmod(theory, system)
punct(relate, .)
nsubj:pass(hypothesize, it)
aux:pass(hypothesize, be)
root(ROOT, hypothesize)
mark(function, that)
nsubj(function, fertility)
cop(function, be)
det(function, a)
ccomp(hypothesize, function)
case(system, of)
det(system, the)
amod(system, social)
nmod(function, system)
mark(consider, when)
det(population, the)
nsubj:pass(consider, population)
case(whole, as)
det(whole, a)
nmod(population, whole)
aux:pass(consider, be)
advcl(function, consider)
cc(function, and)
det(function, a)
conj(consider, function)
case(subsystem, of)
det(subsystem, the)
nmod(function, subsystem)
mark(consider, when)
det(division, the)
nummod(fold, two)
punct(fold, -)
amod(division, fold)
nsubj:pass(consider, division)
case(family, of)
amod(family, core)
nmod(division, family)
cc(family, and)
amod(family, marginal)
conj(family, family)
aux:pass(consider, be)
advcl(consider, consider)
punct(hypothesize, .)
det(problem, the)
nummod(problem, four)
amod(problem, functional)
nsubj(be, problem)
case(system, of)
det(system, a)
amod(system, social)
nmod(problem, system)
root(ROOT, be)
punct(be, ,)
case(extent, to)
det(extent, some)
obl(be, extent)
punct(be, ,)
advcl(be, solve)
case(subsystem, by)
det(subsystem, the)
obl(solve, subsystem)
case(population, within)
det(population, this)
nmod(subsystem, population)
punct(be, .)
case(means, by)
obl(foster, means)
case(isolation, of)
amod(isolation, geographical)
nmod(means, isolation)
cc(rate, and)
amod(fertility, high)
compound(rate, fertility)
conj(isolation, rate)
punct(foster, ,)
nsubj:pass(foster, inbreed)
aux(foster, can)
aux:pass(foster, be)
root(ROOT, foster)
cc(pattern, and)
det(pattern, the)
conj(foster, pattern)
case(isolation, of)
nmod(pattern, isolation)
case(society, from)
det(society, the)
amod(society, greater)
nmod(isolation, society)
acl(society, maintain)
punct(foster, .)
mark(attain, in)
fixed(in, order)
mark(attain, to)
advcl(provide, attain)
det(goal, the)
obj(attain, goal)
case(solidarity, of)
compound(solidarity, group)
nmod(goal, solidarity)
cc(relieve, and)
mark(relieve, to)
conj(attain, relieve)
obj(relieve, tension)
punct(provide, ,)
det(rate, the)
amod(rate, high)
compound(rate, fertility)
nsubj(provide, rate)
root(ROOT, provide)
amod(member, more)
compound(member, group)
obj(provide, member)
case(selection, for)
compound(selection, mate)
nmod(member, selection)
punct(foster, ,)
cc(foster, and)
det(cluster, the)
nsubj(foster, cluster)
case(member, of)
nmod(cluster, member)
case(group, in)
nmod(member, group)
conj(provide, foster)
obj(foster, acceptance)
case(controls, of)
compound(controls, group)
nmod(acceptance, controls)
punct(provide, .)
mark(maintain, to)
advcl(necessary, maintain)
nmod:poss(position, they)
amod(position, intermediate)
obj(maintain, position)
case(society, in)
det(society, the)
amod(society, larger)
obl(maintain, society)
punct(necessary, ,)
expl(necessary, it)
cop(necessary, be)
advmod(necessary, not)
advmod(necessary, only)
root(ROOT, necessary)
mark(visible, that)
nsubj(visible, member)
case(population, of)
det(population, this)
nmod(member, population)
cop(visible, be)
punct(visible, ``)
ccomp(necessary, visible)
punct(visible, '')
punct(great, ,)
cc(great, but)
mark(great, that)
nmod:poss(number, they)
nsubj(great, number)
cop(great, be)
conj(visible, great)
advmod(great, enough)
mark(recognize, to)
aux:pass(recognize, be)
advcl(enough, recognize)
case(group, as)
det(group, a)
amod(group, separate)
punct(group, ,)
amod(group, distinct)
obl(recognize, group)
cc(system, or)
conj(group, system)
case(society, in)
nmod(group, society)
punct(necessary, .)
mark(mention, as)
advcl(seem, mention)
advmod(mention, above)
punct(seem, ,)
advmod(concentrate, where)
nsubj:pass(concentrate, family)
aux:pass(concentrate, be)
ccomp(mention, concentrate)
case(number, in)
amod(number, larger)
obl(concentrate, number)
punct(seem, ,)
compound(controls, group)
nsubj(seem, controls)
root(ROOT, seem)
xcomp(seem, strongest)
cc(effective, and)
advmod(effective, most)
conj(strongest, effective)
punct(adaptation, .)
obj(seem, adaptation)
case(environment, to)
det(environment, the)
amod(environment, social)
cc(non-social, and)
conj(social, non-social)
nmod(adaptation, environment)
case(economy, through)
det(economy, the)
nmod(environment, economy)
aux(meet, have)
aux:pass(meet, be)
acl:relcl(adaptation, meet)
case(degree, to)
det(degree, a)
obl(meet, degree)
case(type, through)
det(type, a)
nmod(degree, type)
case(segregation, of)
amod(segregation, occupational)
nmod(type, segregation)
punct(seem, .)
nsubj(provide, this)
root(ROOT, provide)
det(contact, the)
amod(contact, necessary)
obj(provide, contact)
case(society, with)
det(society, the)
amod(society, larger)
nmod(contact, society)
punct(provide, ,)
mark(support, while)
advcl(provide, support)
det(type, a)
obj(support, type)
case(control, of)
nmod(type, control)
case(member, over)
nmod(control, member)
case(term, in)
nmod(type, term)
case(contact, of)
amod(contact, social)
nmod(term, contact)
punct(provide, .)
nsubj(have, Integration)
punct(have, ``)
root(ROOT, have)
mark(do, to)
xcomp(have, do)
case(inter-relation, with)
det(inter-relation, the)
obl(do, inter-relation)
case(part, of)
nmod(inter-relation, part)
punct(have, '')
punct(have, .)
det(problem, the)
nsubj(involve, problem)
case(solidarity, of)
nmod(problem, solidarity)
cc(morale, and)
conj(solidarity, morale)
advmod(involve, again)
conj(have, involve)
det(concept, the)
obj(involve, concept)
case(value, of)
nmod(concept, value)
punct(involve, .)
det(value, the)
nsubj(important, value)
acl(value, place)
case(population, by)
det(population, the)
compound(population, brandywine)
obl(place, population)
punct(value, ,)
mark(maintain, upon)
advcl(place, maintain)
det(homogeneity, a)
amod(homogeneity, certain)
obj(maintain, homogeneity)
punct(identity, ,)
det(identity, a)
amod(identity, certain)
amod(identity, separate)
amod(identity, racial)
conj(homogeneity, identity)
punct(status, ,)
cc(status, and)
advmod(status, therefore)
det(status, a)
amod(status, certain)
amod(status, separate)
amod(status, social)
conj(homogeneity, status)
punct(important, ,)
cop(important, be)
root(ROOT, important)
case(morale, for)
det(morale, the)
obl(important, morale)
case(system, of)
det(system, the)
nmod(morale, system)
punct(important, .)
mark(related, since)
nsubj(related, morale)
cop(related, be)
advmod(related, closely)
advcl(solve, related)
case(maintenance, to)
compound(maintenance, pattern)
obl(related, maintenance)
cc(integration, and)
conj(maintenance, integration)
punct(solve, ,)
mark(higher, the)
advmod(morale, higher)
det(morale, the)
conj(maintenance, morale)
cc(solidarity, and)
conj(morale, solidarity)
punct(solve, ,)
mark(better, the)
advmod(solve, better)
det(system, the)
nsubj(solve, system)
aux(solve, can)
root(ROOT, solve)
det(problem, the)
obj(solve, problem)
case(system, of)
det(system, the)
nmod(problem, system)
punct(solve, .)
case(respect, in)
det(respect, this)
obl(seem, respect)
expl(seem, it)
aux(seem, would)
root(ROOT, seem)
mark(possibility, that)
det(distance, the)
amod(distance, greater)
det(distance, the)
amod(distance, social)
nsubj(greater, distance)
case(population, between)
det(population, the)
compound(population, brandywine)
nmod(distance, population)
cc(population, and)
det(population, the)
amod(population, white)
cc(Negro, and)
conj(white, Negro)
conj(distance, population)
case(locality, within)
det(locality, the)
amod(locality, same)
amod(locality, general)
nmod(population, locality)
punct(greater, ,)
det(possibility, the)
advmod(possibility, greater)
det(possibility, the)
ccomp(seem, possibility)
case(morale, for)
amod(morale, higher)
nmod(possibility, morale)
cc(solidarity, and)
conj(morale, solidarity)
case(population, within)
det(population, the)
compound(population, brandywine)
nmod(morale, population)
punct(seem, .)
nsubj:pass(conceive, it)
aux:pass(conceive, be)
root(ROOT, conceive)
mark(that, that)
nsubj(that, one)
case(means, of)
det(means, the)
nmod(one, means)
mark(attain, to)
acl(means, attain)
det(distance, this)
amod(distance, social)
obj(attain, distance)
cop(that, be)
ccomp(conceive, that)
case(isolation, of)
amod(isolation, physical)
cc(social, and)
conj(physical, social)
nmod(that, isolation)
punct(conceive, .)
case(turn, in)
obl(provide, turn)
punct(provide, ,)
amod(rate, higher)
compound(rate, fertility)
nsubj(provide, rate)
case(population, for)
det(population, this)
nmod(rate, population)
root(ROOT, provide)
det(means, a)
obj(provide, means)
mark(increase, of)
acl(means, increase)
det(quantity, the)
amod(quantity, numerical)
obj(increase, quantity)
case(population, of)
det(population, the)
nmod(quantity, population)
punct(increase, ,)
advcl(increase, allow)
case(possibility, for)
det(possibility, the)
obl(allow, possibility)
case(stability, of)
amod(stability, greater)
nmod(possibility, stability)
cc(unity, and)
conj(stability, unity)
punct(provide, .)
det(population, the)
nsubj(replenish, population)
aux(replenish, can)
advmod(replenish, thereby)
root(ROOT, replenish)
obj(replenish, itself)
cc(grow, and)
advmod(grow, actually)
conj(replenish, grow)
xcomp(grow, larger)
punct(process, .)
compound(process, master)
obj(replenish, process)
case(utility, of)
amod(utility, particular)
nmod(process, utility)
case(analysis, in)
det(analysis, the)
nmod(process, analysis)
case(development, of)
det(development, the)
nmod(analysis, development)
punct(persistence, ,)
conj(development, persistence)
punct(change, ,)
cc(change, and)
conj(development, change)
case(system, of)
amod(system, social)
nmod(change, system)
aux(use, have)
cop(use, be)
det(use, the)
conj(replenish, use)
case(process, of)
det(process, the)
compound(process, master)
cc(comprehensive, or)
conj(master, comprehensive)
nmod(use, process)
punct(replenish, .)
nsubj(consider, Loomis)
root(ROOT, consider)
nummod(process, six)
amod(process, such)
obj(consider, process)
case(paradigm, in)
nmod:poss(paradigm, he)
nmod(process, paradigm)
punct(consider, . )
nummod(., 1)
punct(2, .)
compound(maintenance, communication)
nummod(maintenance, 2)
punct(2, .)
compound(maintenance, Boundary)
root(ROOT, maintenance)
nummod(linkage, 3)
punct(linkage, .)
compound(linkage, Systemic)
list(maintenance, linkage)
nummod(linkage, 4)
punct(socialization, .)
appos(linkage, socialization)
nummod(socialization, 5)
punct(socialization, .)
amod(control, social)
appos(linkage, control)
nummod(control, 6)
punct(institutionalization, .)
appos(control, institutionalization)
mark(operative, though)
advmod(operative, undoubtedly)
det(process, all)
nummod(process, six)
nsubj(operative, process)
cop(operative, be)
advcl(single, operative)
case(system, within)
det(system, the)
amod(system, whole)
amod(system, social)
obl(operative, system)
cc(subsystem, and)
nmod:poss(subsystem, its)
conj(system, subsystem)
punct(single, ,)
nummod(process, two)
nsubj:pass(single, process)
nsubj(importance, that)
cop(importance, be)
case(importance, of)
amod(importance, crucial)
acl:relcl(process, importance)
case(study, to)
det(study, this)
nmod(importance, study)
aux(single, will)
aux:pass(single, be)
root(ROOT, single)
compound:prt(single, out)
case(emphasis, for)
amod(emphasis, particular)
obl(single, emphasis)
punct(single, .)
root(ROOT, communication)
punct(communication, .)
mark(discuss, in)
advcl(define, discuss)
det(process, the)
obj(discuss, process)
case(communication, of)
nmod(process, communication)
punct(define, ,)
nsubj(define, Loomis)
root(ROOT, define)
obj(define, it)
case(process, as)
punct(process, ``)
det(process, the)
obl(define, process)
case(information, by)
det(information, which)
nmod(process, information)
punct(decision, ,)
conj(information, decision)
punct(directive, ,)
cc(directive, and)
conj(information, directive)
aux:pass(transmit, be)
acl:relcl(process, transmit)
case(actor, among)
obl(transmit, actor)
cc(way, and)
det(way, the)
conj(actor, way)
case(knowledge, in)
det(knowledge, which)
nmod(way, knowledge)
punct(opinion, ,)
conj(knowledge, opinion)
punct(attitude, ,)
cc(attitude, and)
conj(knowledge, attitude)
aux:pass(form, be)
acl:relcl(knowledge, form)
punct(modify, ,)
cc(modify, or)
conj(form, modify)
case(interaction, by)
obl(modify, interaction)
punct(modify, '')
punct(facilitate, .)
nsubj:pass(facilitate, communication)
aux(facilitate, may)
aux:pass(facilitate, be)
conj(form, facilitate)
case(means, by)
obl(facilitate, means)
case(visibility, of)
det(visibility, the)
amod(visibility, high)
nmod(means, visibility)
case(community, within)
det(community, the)
amod(community, larger)
nmod(visibility, community)
punct(facilitate, .)
amod(interaction, Intense)
nsubj(easier, interaction)
cop(easier, be)
root(ROOT, easier)
mark(mark, where)
amod(living, segregate)
nsubj(mark, living)
cc(segregation, and)
amod(segregation, occupational)
conj(living, segregation)
ccomp(easier, mark)
case(group, off)
det(group, a)
obl(mark, group)
case(rest, from)
det(rest, the)
obl(mark, rest)
case(community, of)
det(community, the)
nmod(rest, community)
punct(mark, ,)
case(case, as)
fixed(as, in)
det(case, the)
obl(mark, case)
case(population, of)
det(population, this)
nmod(case, population)
punct(easier, .)
advmod(situation, however)
punct(situation, ,)
det(factor, the)
nsubj(situation, factor)
case(isolation, of)
amod(isolation, physical)
nmod(factor, isolation)
cop(situation, be)
advmod(situation, not)
det(situation, a)
amod(situation, static)
root(ROOT, situation)
punct(situation, .)
mark(rural, although)
det(population, the)
compound(population, brandywine)
nsubj(rural, population)
cop(rural, be)
advmod(rural, still)
advmod(rural, predominantly)
advcl(appear, rural)
punct(be, ,)
punct(be, ``)
expl(be, there)
parataxis(rural, be)
nsubj(be, indication)
case(trend, of)
det(trend, a)
amod(trend, consistent)
cc(significant, and)
det(significant, a)
advmod(significant, statistically)
conj(consistent, significant)
nmod(indication, trend)
advmod(be, away)
case(community, from)
det(community, the)
amod(community, older)
cc(isolate, and)
advmod(isolate, relatively)
conj(older, isolate)
amod(community, rural)
obl(away, community)
punct(appear, .)
nsubj(appear, urbanization)
root(ROOT, appear)
mark(factor, to)
cop(factor, be)
det(factor, a)
amod(factor, important)
xcomp(appear, factor)
case(disintegration, in)
det(disintegration, the)
nmod(factor, disintegration)
case(group, of)
det(group, this)
nmod(disintegration, group)
punct(appear, .)
det(conclusion, this)
nsubj(over-simplification, conclusion)
cop(over-simplification, be)
punct(over-simplification, ,)
advmod(over-simplification, however)
punct(over-simplification, ,)
det(over-simplification, a)
root(ROOT, over-simplification)
punct(over-simplification, . )
det(analysis, a)
advmod(realistic, more)
amod(analysis, realistic)
nsubj(take, analysis)
aux(take, must)
root(ROOT, take)
case(account, into)
obl(take, account)
det(fact, the)
obj(take, fact)
mark(be, that)
compound(people, brandywine)
nsubj(be, people)
case(area, in)
det(area, the)
amod(fringe, urban)
punct(fringe, -)
compound(area, fringe)
nmod(people, area)
acl(fact, be)
punct(segregate, ,)
case(general, in)
obl(segregate, general)
punct(segregate, ,)
advmod(segregate, less)
acl(fact, segregate)
advmod(segregate, locally)
case(member, than)
compound(member, group)
obl(segregate, member)
case(area, in)
amod(area, rural)
nmod(member, area)
punct(take, .)
case(area, in)
det(area, the)
amod(area, urban)
obl(concentrate, area)
punct(concentrate, ,)
case(word, in)
amod(word, other)
obl(concentrate, word)
punct(concentrate, ,)
nsubj(concentrate, they)
punct(they, ,)
case(group, unlike)
det(group, some)
amod(group, urban)
amod(group, ethnic)
obl(concentrate, group)
punct(concentrate, ,)
aux(concentrate, do)
advmod(concentrate, not)
root(ROOT, concentrate)
case(colony, in)
compound(colony, ghetto)
obl(concentrate, colony)
punct(concentrate, .)
compound(pressure, group)
nsubj(slight, pressure)
case(conformity, toward)
nmod(pressure, conformity)
cop(slight, be)
parataxis(concentrate, slight)
cc(non-existent, or)
conj(slight, non-existent)
punct(incur, ,)
cc(incur, and)
amod(behavior, deviant)
nsubj(incur, behavior)
case(selection, in)
compound(selection, mate)
nmod(behavior, selection)
conj(slight, incur)
obj(incur, few)
mark(sanction, if)
det(sanction, any)
amod(sanction, social)
advcl(incur, sanction)
punct(concentrate, .)
case(contact, in)
det:predet(contact, such)
det(contact, a)
compound(contact, setting)
amod(contact, social)
nsubj(likely, contact)
cc(association, and)
conj(contact, association)
cop(likely, be)
root(ROOT, likely)
mark(heterogamous, to)
cop(heterogamous, be)
xcomp(likely, heterogamous)
punct(heterogamous, ,)
advcl(heterogamous, result)
case(change, in)
det(change, a)
obl(result, change)
case(value, of)
nmod(change, value)
cc(behavior, and)
punct(behavior, ,)
advmod(necessarily, almost)
advmod(behavior, necessarily)
punct(behavior, ,)
case(behavior, in)
compound(behavior, mate)
compound(behavior, selection)
nmod(change, behavior)
punct(likely, .)
case(extent, to)
det(extent, the)
obl(contribute, extent)
mark(contribute, that)
amod(life, urban)
nsubj(contribute, life)
acl(extent, contribute)
case(breakdown, to)
det(breakdown, the)
obl(contribute, breakdown)
case(pattern, of)
det(pattern, the)
compound(pattern, group)
nmod(breakdown, pattern)
case(isolation, of)
amod(isolation, residential)
nmod(pattern, isolation)
punct(contribute, ,)
case(extent, to)
det(extent, that)
obl(contribute, extent)
nsubj(contribute, it)
root(ROOT, contribute)
advmod(exogamy, directly)
case(exogamy, to)
amod(exogamy, increase)
obl(contribute, exogamy)
punct(exogamy, '')
punct(control, .)
amod(control, social)
obj(contribute, control)
punct(control, .)
det(process, the)
nsubj(operative, process)
case(control, of)
amod(control, social)
nmod(process, control)
cop(operative, be)
root(ROOT, operative)
advmod(operative, insofar)
mark(play, as)
nsubj(play, sanction)
advcl(operative, play)
det(part, a)
obj(play, part)
case(behavior, in)
det(individual, the)
nmod:poss(behavior, individual)
case(individual, 's)
nmod(part, behavior)
punct(behavior, ,)
cc(behavior, as)
fixed(as, well)
fixed(as, as)
det(group, the)
nmod:poss(behavior, group)
case(group, 's)
conj(behavior, behavior)
punct(operative, .)
case(means, by)
obl(eliminate, means)
case(control, of)
det(control, this)
amod(control, social)
nmod(means, control)
punct(eliminate, ,)
nsubj:pass(eliminate, deviance)
aux:pass(eliminate, be)
cc:preconj(eliminate, either)
root(ROOT, eliminate)
cc(make, or)
advmod(make, somehow)
conj(eliminate, make)
xcomp(make, compatible)
case(function, with)
det(function, the)
obl(compatible, function)
case(group, of)
det(group, the)
amod(group, social)
nmod(function, group)
punct(eliminate, .)
nsubj(indicate, example)
case(population, from)
det(population, this)
nmod(example, population)
root(ROOT, indicate)
mark(seem, that)
nsubj(seem, deviance)
ccomp(indicate, seem)
mark(sanction, to)
aux:pass(sanction, be)
xcomp(seem, sanction)
case(ostracism, by)
obl(sanction, ostracism)
case(group, from)
det(group, the)
nmod(ostracism, group)
punct(indicate, .)
root(ROOT, socialization)
punct(socialization, .)
expl(be, there)
root(ROOT, be)
det(tradition, a)
amod(tradition, oral)
nsubj(be, tradition)
case(member, among)
det(member, the)
nmod(tradition, member)
case(population, of)
det(population, the)
nmod(member, population)
case(regard, in)
nmod(member, regard)
case(origin, to)
det(origin, the)
nmod(regard, origin)
cc(status, and)
amod(status, subsequent)
amod(status, separate)
conj(origin, status)
case(group, of)
det(group, the)
nmod(status, group)
case(society, in)
det(society, the)
amod(society, larger)
nmod(status, society)
punct(be, .)
root(ROOT, confused)
cc(divide, and)
conj(confused, divide)
mark(be, though)
det(tradition, this)
nsubj(be, tradition)
aux(be, may)
advcl(confused, be)
punct(part, ,)
nsubj(part, it)
cop(part, be)
det(part, a)
amod(part, important)
parataxis(confused, part)
case(heritage, of)
det(heritage, the)
amod(heritage, social)
cc(cultural, and)
conj(social, cultural)
nmod(part, heritage)
case(group, of)
det(group, the)
nmod(heritage, group)
punct(act, ,)
cc(act, and)
conj(part, act)
case(means, as)
det(means, a)
obl(act, means)
case(socialization, of)
nmod(means, socialization)
punct(means, ,)
advmod(member, particularly)
case(member, for)
nmod(means, member)
case(community, of)
det(community, the)
amod(community, rural)
nmod(member, community)
punct(confused, .)
det(fact, the)
nsubj(distinction, fact)
case(ancestry, of)
amod(ancestry, indian)
nmod(fact, ancestry)
cc(status, and)
punct(status, ``)
amod(status, free)
punct(status, '')
conj(ancestry, status)
case(day, during)
det(day, the)
nmod(status, day)
case(slavery, of)
nmod(day, slavery)
punct(distinction, ,)
cop(distinction, be)
amod(distinction, important)
root(ROOT, distinction)
acl(distinction, make)
case(member, by)
obl(make, member)
case(group, of)
det(group, the)
nmod(member, group)
punct(distinction, .)
compound(maintenance, Boundary)
root(ROOT, maintenance)
punct(maintenance, .)
punct(maintenance, ``)
advmod(induce, culturally)
amod(cohesion, induce)
amod(cohesion, social)
nsubj(operative, cohesion)
acl(cohesion, result)
case(norm, from)
amod(norm, common)
obl(result, norm)
cc(value, and)
conj(norm, value)
acl(norm, internalize)
case(member, by)
obl(internalize, member)
case(group, of)
det(group, the)
nmod(member, group)
punct(operative, '')
cop(operative, be)
root(ROOT, operative)
case(maintenance, in)
det(maintenance, the)
compound(maintenance, boundary)
obl(operative, maintenance)
case(group, of)
det(group, the)
nmod(maintenance, group)
cc(process, as)
fixed(as, well)
fixed(as, as)
case(process, in)
det(process, the)
conj(maintenance, process)
case(socialization, of)
nmod(process, socialization)
punct(operative, .)
det(process, the)
nsubj(identify, process)
case(maintenance, of)
compound(maintenance, boundary)
nmod(process, maintenance)
root(ROOT, identify)
cc(preserve, and)
conj(identify, preserve)
det(system, the)
amod(system, social)
obj(preserve, system)
cc(subsystem, or)
conj(system, subsystem)
punct(maintain, ,)
cc(maintain, and)
det(interaction, the)
amod(interaction, characteristic)
nsubj:pass(maintain, interaction)
aux:pass(maintain, be)
conj(identify, maintain)
punct(identify, .)
mark(increase, as)
det(threat, the)
nsubj(increase, threat)
case(encroachment, of)
nmod(threat, encroachment)
case(system, on)
det(system, the)
nmod(encroachment, system)
advcl(increase, increase)
punct(increase, ,)
det(probability, the)
punct(probability, ``)
nsubj(increase, probability)
case(mechanism, of)
amod(mechanism, apply)
compound(maintenance, boundary)
compound(mechanism, maintenance)
nmod(probability, mechanism)
advcl(seem, increase)
punct(increase, '')
punct(seem, .)
det(pattern, the)
compound(rate, fertility)
compound(pattern, rate)
nsubj(seem, pattern)
aux(seem, would)
root(ROOT, seem)
mark(function, to)
cop(function, be)
det(function, a)
xcomp(seem, function)
punct(function, ,)
case(one, through)
det(one, a)
amod(one, latent)
obl(function, one)
punct(one, ,)
case(process, of)
det(process, the)
obl(function, process)
mark(maintain, of)
acl(process, maintain)
det(boundary, the)
obj(maintain, boundary)
punct(seem, .)
punct(seem, ``)
amod(maintenance, increase)
compound(maintenance, boundary)
nsubj:pass(achieve, maintenance)
aux(achieve, may)
aux:pass(achieve, be)
root(ROOT, achieve)
punct(achieve, ,)
case(example, for)
obl(achieve, example)
punct(achieve, ,)
mark(assign, by)
advcl(achieve, assign)
det(primacy, a)
amod(primacy, higher)
obj(assign, primacy)
cc(evaluation, or)
conj(primacy, evaluation)
case(activity, to)
nmod(primacy, activity)
amod(activity, characteristic)
case(pattern, of)
det(pattern, the)
amod(pattern, external)
obl(characteristic, pattern)
punct(achieve, .)
punct(achieve, '')
det(pattern, the)
amod(pattern, external)
compound(system, pattern)
cc(system, or)
amod(system, external)
nsubj:pass(consider, system)
aux(consider, can)
aux:pass(consider, be)
root(ROOT, consider)
case(behavior, as)
punct(behavior, ``)
compound(behavior, group)
obl(consider, behavior)
nsubj(enable, that)
acl:relcl(behavior, enable)
det(group, the)
obj(enable, group)
mark(survive, to)
acl(group, survive)
case(environment, in)
nmod:poss(environment, its)
obl(survive, environment)
punct(consider, .)
punct(consider, '')
amod(maintenance, Boundary)
nsubj(seem, maintenance)
case(group, for)
det(group, this)
nmod(maintenance, group)
aux(seem, would)
root(ROOT, seem)
mark(social, to)
cop(social, be)
advmod(social, primarily)
xcomp(seem, social)
punct(seem, ,)
mark(preference, as)
cop(preference, be)
det(preference, the)
advcl(social, preference)
case(endogamy, for)
nmod(preference, endogamy)
punct(seem, .)
nsubj:pass(express, it)
aux:pass(express, be)
advmod(express, also)
root(ROOT, express)
case(proscription, in)
det(proscription, the)
obl(express, proscription)
case(deviant, against)
nmod(proscription, deviant)
case(matter, in)
det(matter, the)
nmod(proscription, matter)
case(endogamy, of)
nmod(matter, endogamy)
punct(endogamy, ,)
advmod(area, particularly)
case(area, in)
amod(area, rural)
nmod(matter, area)
punct(express, .)
case(pattern, by)
nmod:poss(pattern, they)
obl(show, pattern)
case(endogamy, of)
nmod(pattern, endogamy)
cc(exogamy, and)
conj(endogamy, exogamy)
punct(show, ,)
det(family, the)
amod(family, core)
nsubj(show, family)
cc(family, and)
det(family, the)
amod(family, marginal)
conj(family, family)
root(ROOT, show)
amod(limit, distinct)
obj(show, limit)
case(contact, to)
det(contact, the)
amod(contact, intergroup)
nmod(limit, contact)
nsubj(maintain, they)
acl:relcl(contact, maintain)
punct(show, .)
compound(linkage, Systemic)
root(ROOT, linkage)
punct(linkage, .)
mark(describe, where)
amod(maintenance, boundary)
nsubj(describe, maintenance)
advcl(define, describe)
det(boundary, the)
obj(describe, boundary)
cc(limit, or)
conj(boundary, limit)
case(group, of)
det(group, the)
nmod(boundary, group)
punct(define, ,)
amod(linkage, systemic)
nsubj:pass(define, linkage)
aux:pass(define, be)
root(ROOT, define)
punct(define, ``)
case(process, as)
det(process, the)
obl(define, process)
case(one, whereby)
nmod(process, one)
cc(more, or)
conj(one, more)
case(element, of)
det(element, the)
nmod(one, element)
case(system, of)
case(least, at)
nmod(two, least)
nummod(system, two)
amod(system, social)
nmod(element, system)
aux:pass(articulate, be)
acl:relcl(element, articulate)
case(manner, in)
det:predet(manner, such)
det(manner, a)
obl(articulate, manner)
mark(view, that)
det(system, the)
nummod(system, two)
nsubj:pass(view, system)
case(way, in)
det(way, some)
nmod(system, way)
cc(occasion, and)
case(occasion, on)
det(occasion, some)
conj(way, occasion)
aux(view, may)
aux:pass(view, be)
acl(manner, view)
case(unit, as)
det(unit, a)
amod(unit, single)
obl(view, unit)
punct(define, . )
det(decree, a)
amod(decree, royal)
nsubj(prescribe, decree)
acl(decree, issue)
case(1910, in)
obl(issue, 1910)
punct(prescribe, ,)
nummod(year, two)
obl:tmod(assume, year)
mark(assume, after)
det(government, the)
amod(government, belgian)
nsubj(assume, government)
advcl(prescribe, assume)
obj(assume, authority)
case(administration, for)
det(administration, the)
nmod(authority, administration)
case(Congo, of)
det(Congo, the)
nmod(administration, Congo)
punct(prescribe, ,)
root(ROOT, prescribe)
det(registration, the)
obj(prescribe, registration)
case(male, of)
det(male, all)
amod(male, adult)
nmod(registration, male)
case(chiefdom, by)
nmod(male, chiefdom)
punct(prescribe, . )
amod(decree, further)
nsubj:pass(issue, decree)
case(line, along)
det(line, this)
nmod(decree, line)
aux:pass(issue, be)
root(ROOT, issue)
case(1916, in)
obl(issue, 1916)
cc(1919, and)
conj(1916, 1919)
punct(issue, .)
case(1922, in)
obl(institute, 1922)
det(registration, a)
amod(registration, continuous)
nsubj:pass(institute, registration)
case(population, of)
det(population, the)
amod(population, whole)
amod(population, indigenous)
nmod(registration, population)
aux:pass(institute, be)
root(ROOT, institute)
case(ordinance, by)
obl(institute, ordinance)
case(General, of)
det(General, the)
compound(General, Governor)
punct(General, -)
nmod(ordinance, General)
punct(order, ,)
cc(order, and)
det(compilation, the)
amod(compilation, periodic)
nsubj:pass(order, compilation)
case(record, of)
det(record, these)
nmod(compilation, record)
aux:pass(order, be)
conj(institute, order)
punct(institute, .)
cc(leave, but)
amod(procedure, specific)
nsubj:pass(leave, procedure)
mark(carry, for)
acl(procedure, carry)
compound:prt(carry, out)
det(plan, this)
obj(carry, plan)
aux:pass(leave, be)
root(ROOT, leave)
case(discretion, to)
det(discretion, the)
obl(leave, discretion)
case(governor, of)
det(governor, the)
amod(governor, provincial)
nmod(discretion, governor)
punct(leave, . )
det(set, a)
amod(set, unified)
nsubj:pass(issue, set)
case(regulation, of)
nmod(set, regulation)
punct(regulation, ,)
amod(regulation, applicable)
case(area, to)
det(area, all)
obl(applicable, area)
punct(issue, ,)
aux:pass(issue, be)
root(ROOT, issue)
case(1929, in)
obl(issue, 1929)
punct(institute, ,)
cc(institute, and)
det(series, a)
amod(series, complementary)
nsubj:pass(institute, series)
case(inquiry, of)
amod(inquiry, demographic)
nmod(series, inquiry)
case(area, in)
amod(area, select)
nmod(inquiry, area)
aux:pass(institute, be)
conj(issue, institute)
case(time, at)
det(time, the)
amod(time, same)
obl(institute, time)
punct(issue, .)
det(system, the)
amod(system, whole)
nsubj:pass(review, system)
aux:pass(review, be)
advmod(review, again)
root(ROOT, review)
cc(reorganize, and)
conj(review, reorganize)
case(1933, in)
obl(review, 1933)
punct(review, .)
amod(responsibility, general)
nsubj(rest, responsibility)
case(administration, for)
nmod:poss(administration, its)
nmod(responsibility, administration)
ccomp(review, rest)
case(division, with)
det(division, a)
obl(rest, division)
case(government, of)
det(government, the)
amod(government, colonial)
nmod(division, government)
amod(government, concerned)
case(supply, with)
compound(supply, labor)
obl(concerned, supply)
cc(affair, and)
amod(affair, native)
conj(supply, affair)
punct(indigene, ,)
compound(indigene, Service)
compound(affaire, des)
compound(indigene, affaire)
conj(supply, indigene)
amod(main-d'oeuvre, et)
compound(main-d'oeuvre, de)
compound(main-d'oeuvre, la)
conj(supply, main-d'oeuvre)
punct(AIMO, ()
appos(main-d'oeuvre, AIMO)
punct(direction, ,)
compound(direction, Af)
conj(AIMO, direction)
punct(Generale, ,)
compound(Generale, Af)
compound(Generale, direction)
conj(AIMO, Generale)
punct(Generale, ,)
compound(Generale, gouvernement)
conj(AIMO, Generale)
punct(Generale, ))
punct(authority, .)
amod(authority, tribal)
conj(AIMO, authority)
punct(chief, ,)
det(chief, the)
appos(authority, chief)
cc(secretary, and)
nmod:poss(secretary, they)
conj(chief, secretary)
punct(hold, ,)
aux:pass(hold, be)
acl:relcl(authority, hold)
xcomp(hold, responsible)
mark(maintain, for)
advcl(responsible, maintain)
det(register, the)
obj(maintain, register)
case(person, of)
amod(person, indigenous)
nmod(register, person)
case(territory, within)
nmod:poss(territory, they)
nmod(register, territory)
punct(maintain, ,)
case(supervision, under)
det(supervision, the)
amod(supervision, general)
obl(maintain, supervision)
case(official, of)
compound(official, district)
nmod(supervision, official)
punct(review, .)
det(official, the)
compound(official, district)
nsubj:pass(oblige, official)
punct(official, ,)
case(duty, along)
case(duty, with)
nmod:poss(duty, they)
amod(duty, other)
nmod(official, duty)
punct(oblige, ,)
aux:pass(oblige, be)
root(ROOT, oblige)
mark(organize, to)
xcomp(oblige, organize)
amod(inquiry, special)
amod(inquiry, demographic)
obj(organize, inquiry)
case(area, in)
amod(area, select)
nmod(inquiry, area)
cc(supervise, and)
mark(supervise, to)
conj(organize, supervise)
det(tabulation, the)
amod(tabulation, annual)
obj(supervise, tabulation)
case(statistic, of)
amod(statistic, demographic)
nmod(tabulation, statistic)
punct(oblige, .)
det(regulation, the)
nsubj(require, regulation)
root(ROOT, require)
det(inscription, the)
obj(require, inscription)
case(individual, of)
det(individual, each)
nmod(inscription, individual)
punct(male, ()
appos(individual, male)
cc(female, or)
conj(male, female)
punct(adult, ,)
conj(male, adult)
cc(child, or)
conj(adult, child)
punct(male, ))
case(card, on)
det(card, a)
amod(card, separate)
nmod(individual, card)
punct(fiche, ()
appos(card, fiche)
punct(fiche, ))
punct(require, .)
det(card, the)
nsubj:pass(keep, card)
punct(card, ,)
acl(card, file)
case(circonscription, by)
obl(file, circonscription)
punct(sub-chiefdom, ()
appos(circonscription, sub-chiefdom)
punct(village, ,)
cc(village, or)
conj(sub-chiefdom, village)
punct(sub-chiefdom, ))
punct(keep, ,)
aux:pass(keep, be)
root(ROOT, keep)
case(headquarters, in)
det(headquarters, the)
obl(keep, headquarters)
case(territoire, of)
det(territoire, each)
nmod(headquarters, territoire)
punct(chiefdom, ()
appos(territoire, chiefdom)
punct(chiefdom, ))
punct(keep, .)
det(card, each)
nsubj:pass(expect, card)
aux:pass(expect, be)
root(ROOT, expect)
mark(show, to)
xcomp(expect, show)
amod(information, certain)
obj(show, information)
case(individual, about)
det(individual, the)
nmod(information, individual)
amod(individual, concerned)
punct(individual, ,)
case(date, include)
nmod:poss(date, he)
cc(she, or)
conj(he, she)
nmod(information, date)
case(birth, of)
nmod(date, birth)
punct(age, ()
cc(age, or)
conj(birth, age)
case(time, at)
det(time, a)
amod(time, specify)
nmod(age, time)
punct(age, ))
punct(spouse, ,)
conj(date, spouse)
punct(child, ,)
cc(child, and)
conj(spouse, child)
punct(make, .)
amod(entry, additional)
nsubj:pass(make, entry)
aux(make, must)
aux:pass(make, be)
parataxis(spouse, make)
case(time, from)
obl(make, time)
case(time, to)
nmod(time, time)
punct(use, .)
amod(card, different)
nsubj:pass(use, card)
aux:pass(use, be)
conj(make, use)
case(male, for)
obl(use, male)
cc(female, and)
conj(male, female)
punct(clip, ,)
cc(clip, and)
det(corner, a)
nsubj:pass(clip, corner)
aux:pass(clip, be)
conj(use, clip)
case(card, from)
det(card, the)
obl(clip, card)
case(adult, of)
nmod(card, adult)
punct(child, ,)
cc(child, and)
case(child, of)
conj(adult, child)
mark(reach, when)
nsubj(reach, they)
acl:relcl(child, reach)
obj(reach, puberty)
punct(expect, .)
advmod(make, so)
det(count, a)
amod(count, quick)
nsubj:pass(make, count)
aux(make, could)
aux:pass(make, be)
root(ROOT, make)
case(time, at)
det(time, any)
obl(make, time)
punct(make, ,)
advmod(clerk, even)
case(clerk, by)
det(clerk, a)
amod(clerk, illiterate)
obl(make, clerk)
punct(make, ,)
case(number, of)
det(number, the)
obl(make, number)
case(person, of)
amod(person, register)
nmod(number, person)
case(class, in)
nummod(class, four)
compound(class, age)
punct(age, -)
cc(sex, and)
punct(sex, -)
conj(age, sex)
nmod(person, class)
punct(make, .)
amod(card, Personal)
compound(card, identification)
nsubj:pass(issue, card)
aux:pass(issue, be)
root(ROOT, issue)
case(male, to)
det(male, all)
amod(male, adult)
obl(issue, male)
case(which, on)
obl(record, which)
compound(payment, tax)
nsubj:pass(record, payment)
punct(inoculation, ,)
conj(payment, inoculation)
punct(period, ,)
conj(payment, period)
case(employment, of)
nmod(period, employment)
punct(change, ,)
cc(change, and)
conj(payment, change)
case(residence, of)
nmod(change, residence)
aux:pass(record, be)
acl:relcl(male, record)
punct(issue, .)
amod(card, Similar)
compound(card, identification)
nsubj:pass(issue, card)
aux:pass(issue, be)
root(ROOT, issue)
case(1959, in)
obl(issue, 1959)
case(female, to)
det(female, all)
amod(female, adult)
obl(issue, female)
punct(issue, .)
det(adult, each)
nsubj:pass(hold, adult)
aux:pass(hold, be)
root(ROOT, hold)
advmod(responsible, personally)
xcomp(hold, responsible)
mark(assure, for)
advcl(responsible, assure)
nmod:poss(inscription, he)
obj(assure, inscription)
cc(obtain, and)
conj(assure, obtain)
det(card, a)
compound(card, identification)
obj(obtain, card)
nsubj:pass(show, which)
aux(show, must)
aux:pass(show, be)
acl:relcl(card, show)
case(demand, on)
obl(show, demand)
punct(hold, .)
det(card, the)
compound(card, registration)
nsubj:pass(put, card)
case(person, of)
det(person, a)
nmod(card, person)
acl(person, leave)
nmod:poss(territory, he)
compound(territory, home)
obj(leave, territory)
case(period, for)
det(period, a)
amod(period, short)
obl(leave, period)
aux:pass(put, be)
root(ROOT, put)
case(file, into)
det(file, a)
amod(file, special)
obl(put, file)
case(person, for)
amod(person, absent)
nmod(file, person)
punct(put, .)
det(card, the)
nsubj(theory, card)
case(-migrant, of)
amod(-migrant, permanent)
compound(-migrant, out)
nmod(card, -migrant)
cop(theory, be)
punct(theory, ,)
case(theory, in)
root(ROOT, theory)
punct(theory, ,)
acl(theory, send)
case(office, to)
det(office, a)
obl(send, office)
case(place, in)
det(place, the)
nmod(office, place)
case(residence, of)
amod(residence, new)
nmod(place, residence)
punct(send, .)
advmod(make, finally)
punct(make, ,)
det(registration, the)
nsubj:pass(make, registration)
case(birth, of)
nmod(registration, birth)
cc(death, and)
conj(birth, death)
case(relative, by)
amod(relative, nearest)
nmod(birth, relative)
aux:pass(make, be)
conj(theory, make)
xcomp(make, compulsory)
case(region, in)
amod(region, most)
obl(make, region)
punct(make, .)
nsubj:pass(count, number)
case(person, of)
amod(person, register)
nmod(number, person)
case(class, in)
nummod(class, four)
compound(class, age)
punct(age, -)
cc(sex, and)
punct(sex, -)
conj(age, sex)
nmod(number, class)
aux:pass(count, be)
root(ROOT, count)
det(year, each)
obl:tmod(count, year)
punct(count, .)
case(addition, in)
obl(conduct, addition)
punct(conduct, ,)
amod(inquiry, demographic)
nsubj:pass(conduct, inquiry)
punct(inquiry, ,)
advmod(involve, supposedly)
acl(inquiry, involve)
compound(investigation, field)
obj(involve, investigation)
punct(conduct, ,)
aux:pass(conduct, be)
root(ROOT, conduct)
case(division, in)
amod(division, select)
amod(division, minor)
obl(conduct, division)
punct(circonscription, ()
appos(division, circonscription)
punct(circonscription, ))
advcl(conduct, contain)
advmod(3, about)
nummod(percent, 3)
obj(contain, percent)
case(population, of)
det(population, the)
amod(population, total)
nmod(percent, population)
punct(conduct, .)
det(result, the)
nsubj:pass(use, result)
case(inquiry, of)
det(inquiry, these)
nmod(result, inquiry)
aux:pass(use, be)
root(ROOT, use)
mark(adjust, to)
xcomp(use, adjust)
obj(adjust, compilation)
case(data, of)
nmod(compilation, data)
case(register, from)
det(register, the)
obl(adjust, register)
cc(provide, and)
mark(provide, to)
conj(adjust, provide)
amod(ratio, various)
obj(provide, ratio)
cc(rate, and)
conj(ratio, rate)
case(district, by)
obl(provide, district)
punct(ratio, ,)
case(rate, include)
compound(rate, birth)
cc(death, and)
conj(birth, death)
nmod(district, rate)
punct(rate, ,)
amod(rate, general)
compound(rate, fertility)
conj(rate, rate)
punct(distribution, ,)
conj(rate, distribution)
case(status, by)
amod(status, marital)
nmod(distribution, status)
punct(fertility, ,)
conj(ratio, fertility)
case(wife, of)
nmod(fertility, wife)
advmod(fertility, separately)
case(household, in)
amod(household, polygynous)
cc(non-polygynous, and)
conj(polygynous, non-polygynous)
nmod(fertility, household)
punct(mortality, ,)
compound(mortality, infant)
conj(household, mortality)
punct(migration, ,)
cc(migration, and)
conj(household, migration)
punct(use, .)
det(area, the)
nsubj:pass(select, area)
mark(examine, to)
aux:pass(examine, be)
acl(area, examine)
case(inquiry, in)
det(inquiry, these)
obl(examine, inquiry)
aux:pass(select, be)
root(ROOT, select)
case(official, by)
amod(official, local)
obl(select, official)
punct(select, ,)
advmod(representative, supposedly)
case(representative, as)
obl(select, representative)
case(population, of)
det(population, a)
amod(population, larger)
nmod(representative, population)
punct(select, .)
nsubj:pass(apply, average)
case(ratio, of)
det(ratio, the)
nmod(average, ratio)
acl(ratio, obtain)
case(area, in)
det(area, a)
amod(area, few)
amod(area, select)
obl(obtain, area)
aux:pass(apply, be)
root(ROOT, apply)
case(population, to)
det(population, the)
amod(population, larger)
obl(apply, population)
punct(apply, .)
det(scheme, the)
nsubj(adaptation, scheme)
punct(adaptation, ,)
case(theory, in)
obl(adaptation, theory)
punct(adaptation, ,)
cop(adaptation, be)
det(adaptation, a)
amod(adaptation, ingenious)
root(ROOT, adaptation)
case(system, of)
amod(system, european)
compound(system, registration)
nmod(adaptation, system)
case(condition, to)
det(condition, the)
nmod(adaptation, condition)
case(life, of)
amod(life, african)
nmod(condition, life)
punct(adaptation, .)
cc(place, but)
nsubj(place, it)
root(ROOT, place)
det(strain, a)
amod(strain, severe)
obj(place, strain)
case(resource, on)
det(resource, the)
amod(resource, administrative)
nmod(strain, resource)
punct(burden, ()
advmod(burden, already)
acl(resource, burden)
case(way, in)
amod(way, other)
obl(burden, way)
punct(burden, ))
case(population, of)
det(population, a)
advmod(disperse, widely)
amod(population, disperse)
punct(poor, ,)
conj(disperse, poor)
cc(illiterate, and)
advmod(illiterate, largely)
conj(disperse, illiterate)
nmod(resource, population)
punct(place, .)
det(program, the)
compound(program, sampling)
nsubj:pass(institute, program)
aux:pass(institute, be)
root(ROOT, institute)
mark(recognize, before)
det(principle, the)
nsubj:pass(recognize, principle)
case(sampling, of)
compound(sampling, probability)
nmod(principle, sampling)
aux:pass(recognize, be)
advmod(recognize, widely)
advcl(institute, recognize)
case(study, in)
compound(study, population)
obl(recognize, study)
punct(institute, .)
det(system, the)
nsubj:pass(adapt, system)
aux:pass(adapt, be)
advmod(adapt, not)
advmod(adapt, well)
root(ROOT, adapt)
case(condition, to)
obl(adapt, condition)
case(life, of)
nmod(condition, life)
case(center, in)
amod(center, urban)
obl(adapt, center)
punct(adapt, .)
det(distinction, the)
nsubj:pass(define, distinction)
mark(domicile, between)
acl(distinction, domicile)
punct(jure, ()
compound(jure, de)
appos(distinction, jure)
punct(jure, ))
cc(present, and)
conj(distinction, present)
punct(de, ()
appos(present, de)
advmod(de, facto)
punct(present, ))
nmod(distinction, population)
aux:pass(define, be)
advmod(define, not)
advmod(define, clearly)
root(ROOT, define)
punct(define, .)
advmod(subject, so)
det(result, the)
nsubj(subject, result)
cop(subject, be)
root(ROOT, subject)
case(confusion, to)
amod(confusion, considerable)
obl(subject, confusion)
punct(subject, .)
det(system, the)
nsubj(tend, system)
root(ROOT, tend)
mark(break, to)
xcomp(tend, break)
compound:prt(break, down)
case(war, during)
det(war, the)
obl(break, war)
punct(reactivate, ,)
cc(reactivate, but)
aux:pass(reactivate, be)
conj(tend, reactivate)
punct(tend, ;)
punct(tend, ;)
nsubj(reach, it)
aux(reach, have)
parataxis(tend, reach)
det(level, the)
amod(level, pre-war)
obj(reach, level)
case(efficiency, of)
nmod(level, efficiency)
case(1951, by)
obl(reach, 1951)
punct(tend, .)
case(spite, in)
obl(seem, spite)
case(defect, of)
det(defect, the)
nmod(spite, defect)
case(system, in)
det(system, this)
nmod(defect, system)
punct(seem, ,)
det(figure, the)
nsubj(seem, figure)
case(population, on)
amod(population, total)
nmod(figure, population)
case(1930', during)
det(1930', the)
amod(1930', late)
nmod(figure, 1930')
cc(seem, and)
advmod(seem, again)
case(1950, in)
det(1950, the)
amod(1950, early)
conj(1930', 1950)
case(1950, 's)
root(ROOT, seem)
mark(represent, to)
aux(represent, have)
xcomp(seem, represent)
amod(condition, actual)
obj(represent, condition)
case(district, in)
amod(district, most)
obl(represent, district)
case(fidelity, with)
amod(fidelity, approximate)
nmod(district, fidelity)
punct(seem, .)
cc(misleading, but)
det(information, the)
nsubj(misleading, information)
case(dynamics, on)
det(dynamics, the)
nmod(information, dynamics)
case(population, of)
nmod(dynamics, population)
cop(misleading, be)
advmod(misleading, often)
advmod(misleading, quite)
root(ROOT, misleading)
punct(misleading, .)
det(system, the)
amod(system, same)
nsubj:pass(develop, system)
punct(system, ,)
case(modification, with)
amod(modification, minor)
obl(develop, modification)
punct(develop, ,)
aux:pass(develop, be)
root(ROOT, develop)
case(Urundi, in)
obl(develop, ruanda)
punct(ruanda, -)
flat(ruanda, Urundi)
case(administration, under)
compound(administration, belgian)
obl(develop, administration)
punct(develop, .)
advmod(seem, here)
advmod(seem, again)
expl(seem, it)
root(ROOT, seem)
mark(obtain, that)
amod(approximation, useful)
nsubj:pass(obtain, approximation)
case(size, of)
det(size, the)
nmod(approximation, size)
cc(distribution, and)
amod(distribution, geographical)
conj(size, distribution)
case(population, of)
det(population, the)
nmod(distribution, population)
aux:pass(obtain, be)
ccomp(seem, obtain)
case(way, in)
det(way, this)
obl(obtain, way)
case(period, in)
det(period, the)
amod(period, late)
amod(period, pre-war)
cc(early, and)
conj(pre-war, early)
advmod(-war, post)
conj(pre-war, -war)
obl(obtain, period)
punct(seem, .)
mark(consider, before)
advcl(note, consider)
amod(activity, more)
amod(activity, recent)
obj(consider, activity)
punct(note, ,)
nsubj(note, we)
aux(note, should)
root(ROOT, note)
det(aspect, another)
amod(aspect, important)
obj(note, aspect)
case(demography, of)
nmod(aspect, demography)
case(Africa, in)
amod(Africa, belgian)
nmod(aspect, Africa)
punct(note, . )
det(number, a)
nsubj(conduct, number)
case(agency, of)
amod(agency, strong)
amod(agency, independent)
nmod(number, agency)
punct(agency, ,)
acl(agency, establish)
case(case, in)
det(case, some)
obl(establish, case)
case(support, with)
amod(support, governmental)
cc(royal, or)
conj(governmental, royal)
nmod(case, support)
punct(conduct, ,)
aux(conduct, have)
root(ROOT, conduct)
amod(operation, large)
amod(operation, medical)
punct(social, ,)
conj(medical, social)
punct(educational, ,)
conj(medical, educational)
cc(research, and)
conj(medical, research)
obj(conduct, operation)
case(part, in)
amod(part, particular)
obl(conduct, part)
case(Congo, of)
det(Congo, the)
nmod(part, Congo)
cc(ruanda, and)
conj(Congo, ruanda)
punct(ruanda, -)
conj(Congo, Urundi)
punct(conduct, .)
det(work, the)
nsubj(have, work)
case(Elisabeth, of)
compound(Elisabeth, fond)
compound(Elisabeth, Reine)
nmod(work, Elisabeth)
advcl(have, pour)
compound(indigene, l'assistance)
compound(indigene, Medicale)
compound(indigene, aux)
obj(pour, indigene)
compound(Belge, Du)
compound(Belge, Congo)
appos(indigene, Belge)
punct(FOREAMI, ()
appos(Belge, FOREAMI)
punct(FOREAMI, ))
root(ROOT, have)
amod(interest, special)
obj(have, interest)
case(respect, with)
nmod(interest, respect)
case(demography, to)
nmod(respect, demography)
punct(have, .)
det(agency, this)
nsubj(accept, agency)
root(ROOT, accept)
obj(accept, responsibility)
case(service, for)
amod(service, medical)
nmod(responsibility, service)
case(population, to)
det(population, a)
obl(accept, population)
acl(population, range)
case(person, from)
nummod(person, 638,560)
obl(range, person)
case(1941, in)
obl(range, 1941)
case(840,503, to)
obl(range, 840,503)
case(1956, in)
obl(range, 1956)
case(District, in)
det(District, the)
compound(District, Kwango)
obl(range, District)
cc(area, and)
amod(area, adjacent)
conj(District, area)
advmod(area, east)
case(Leopoldville, of)
nmod(area, Leopoldville)
punct(area, .)
det(year, each)
obl:tmod(conduct, year)
case(1941, from)
nmod(year, 1941)
obl(conduct, on)
punct(conduct, ,)
nmod:poss(staff, its)
amod(staff, medical)
nsubj(conduct, staff)
aux(conduct, have)
parataxis(accept, conduct)
amod(investigation, intensive)
compound(investigation, field)
obj(conduct, investigation)
mark(determine, to)
acl(investigation, determine)
obj(determine, change)
case(structure, in)
compound(structure, population)
nmod(change, structure)
cc(rate, and)
amod(rate, vital)
conj(structure, rate)
cc(incidence, and)
punct(incidence, ,)
case(objective, as)
nmod:poss(objective, its)
amod(objective, primary)
nmod(incidence, objective)
punct(incidence, ,)
det(incidence, the)
conj(change, incidence)
case(disease, of)
amod(disease, major)
nmod(incidence, disease)
punct(accept, .)
nmod:poss(finding, its)
nsubj:pass(report, finding)
aux:pass(report, be)
root(ROOT, report)
det(year, each)
obl:tmod(report, year)
case(rapport, in)
nmod:poss(rapport, its)
compound(Pendant, rapport)
compound(Pendant, Sur)
compound(Pendant, l'activite)
obl(report, Pendant)
appos(Pendant, annee)
punct(Bruxelles, ()
appos(annee, Bruxelles)
punct(Bruxelles, ))
punct(report, .)
advmod(similar, Somewhat)
amod(investigation, similar)
nsubj:pass(make, investigation)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
case(officer, by)
amod(officer, medical)
obl(make, officer)
case(area, in)
amod(area, other)
obl(make, area)
punct(make, .)
amod(agency, other)
amod(agency, independent)
punct(agency, ,)
cc(agency, or)
advmod(independent, partially)
amod(agency, independent)
nsubj(promote, agency)
punct(promote, ,)
aux(promote, have)
root(ROOT, promote)
obj(promote, investigation)
case(topic, on)
nmod(investigation, topic)
advmod(topic, directly)
cc(relate, or)
advmod(relate, indirectly)
conj(topic, relate)
case(demography, to)
obl(relate, demography)
punct(promote, .)
det(study, these)
nsubj(vary, study)
root(ROOT, vary)
advmod(vary, widely)
case(scope, in)
obl(vary, scope)
cc(precision, and)
conj(scope, precision)
punct(vary, .)
nsubj(pour, L'Institut)
parataxis(vary, pour)
compound(Recherche, La)
compound(centrale, Recherche)
compound(centrale, scientifique)
compound(centrale, En)
compound(centrale, afrique)
nsubj(sponsor, centrale)
punct(IRSAC, ()
appos(centrale, IRSAC)
punct(IRSAC, ))
aux(sponsor, have)
conj(vary, sponsor)
advmod(design, well)
punct(design, -)
amod(investigation, design)
compound(investigation, field)
obj(sponsor, investigation)
cc(cooperate, and)
aux(cooperate, have)
conj(sponsor, cooperate)
advmod(cooperate, closely)
case(government, with)
det(government, the)
obl(cooperate, government)
case(ruanda, of)
nmod(government, ruanda)
punct(ruanda, -)
flat(ruanda, Urundi)
case(development, in)
det(development, the)
obl(cooperate, development)
case(statistic, of)
nmod:poss(statistic, its)
amod(statistic, official)
nmod(development, statistic)
punct(vary, . )
det(investigation, a)
amod(investigation, massive)
nsubj:pass(carry, investigation)
case(characteristic, of)
det(characteristic, the)
nmod(investigation, characteristic)
case(migrant, of)
amod(migrant, in-)
nmod(characteristic, migrant)
cc(out-migrant, and)
amod(out-migrant, prospective)
conj(migrant, out-migrant)
case(ruanda, in)
nmod(out-migrant, ruanda)
punct(carry, -)
nsubj:pass(carry, Urundi)
aux(carry, be)
aux:pass(carry, be)
root(ROOT, carry)
advmod(carry, on)
case(J., by)
obl(carry, J.)
flat(J., J.)
flat(J., Maquet)
punct(J., ,)
amod(director, former)
appos(J., director)
case(branch, of)
det(branch, the)
compound(branch, Social)
compound(branch, Science)
nmod(director, branch)
case(IRSAC, of)
nmod(branch, IRSAC)
punct(professor, ,)
advmod(professor, now)
det(professor, a)
appos(J., professor)
case(Belge, at)
compound(officielle, l'Universite)
compound(Belge, officielle)
compound(Belge, Du)
compound(Belge, Congo)
nmod(professor, Belge)
compound(ruanda, et)
compound(ruanda, Du)
appos(Belge, ruanda)
punct(ruanda, -)
flat(ruanda, Urundi)
punct(carry, .)
det(schedule, some)
compound(complete, 30,000)
amod(schedule, complete)
nsubj:pass(tabulate, schedule)
case(item, with)
nummod(item, 20)
nmod(schedule, item)
punct(collect, ()
acl(item, collect)
case(-chiefs, by)
compound(-chiefs, sub)
obl(collect, -chiefs)
case(circumscription, in)
nummod(circumscription, 1,100)
obl(collect, circumscription)
punct(collect, ))
aux(tabulate, have)
aux:pass(tabulate, be)
root(ROOT, tabulate)
punct(tabulate, .)
det(result, the)
nsubj:pass(analyze, result)
aux(analyze, be)
advmod(analyze, now)
aux:pass(analyze, be)
root(ROOT, analyze)
punct(analyze, .)
nsubj:pass(recognize, Statistics)
aux(recognize, have)
aux:pass(recognize, be)
root(ROOT, recognize)
case(matter, as)
det(matter, a)
obl(recognize, matter)
case(importance, of)
amod(importance, strategic)
nmod(matter, importance)
case(Congo, in)
det(Congo, the)
nmod(importance, Congo)
cc(Urundi, and)
case(ruanda, in)
compound(Urundi, ruanda)
punct(ruanda, -)
conj(Congo, Urundi)
case(year, during)
det(year, the)
amod(year, post-war)
obl(recognize, year)
case(connection, in)
obl(recognize, connection)
case(program, with)
amod(term, long)
punct(term, -)
compound(program, term)
amod(program, economic)
cc(social, and)
conj(economic, social)
nmod(connection, program)
punct(recognize, .)
det(organization, the)
compound(organization, AIMO)
nsubj(retain, organization)
case(country, of)
det(country, both)
nmod(organization, country)
punct(country, ,)
nsubj(maintain, which)
acl:relcl(country, maintain)
amod(service, administrative)
obj(maintain, service)
case(territory, throughout)
det(territory, the)
obl(maintain, territory)
punct(retain, ,)
root(ROOT, retain)
amod(responsibility, immediate)
obj(retain, responsibility)
case(collection, for)
det(collection, the)
nmod(responsibility, collection)
cc(publication, and)
conj(collection, publication)
case(information, of)
amod(information, demographic)
nmod(collection, information)
punct(retain, .)
advmod(assign, however)
punct(assign, ,)
det(office, the)
amod(office, statistical)
nsubj:pass(assign, office)
case(government, of)
det(government, both)
nmod(office, government)
aux:pass(assign, be)
root(ROOT, assign)
xcomp(assign, responsibility)
case(planning, for)
det(planning, the)
nmod(responsibility, planning)
cc(analysis, and)
conj(planning, analysis)
case(statistic, of)
det(statistic, these)
nmod(planning, statistic)
punct(assign, . )
det(Bureau, a)
compound(Demographie, Bureau)
compound(Demographie, De)
compound(Demographie, La)
nsubj:pass(form, Demographie)
punct(A., ()
appos(Demographie, A.)
flat(A., Romaniuk)
punct(A., ,)
appos(A., Director)
punct(A., ))
aux:pass(form, be)
root(ROOT, form)
case(AIMO, under)
obl(form, AIMO)
case(Congo, in)
det(Congo, the)
obl(form, Congo)
punct(work, ,)
mark(work, to)
advcl(form, work)
case(rapport, in)
amod(rapport, close)
obl(work, rapport)
case(section, with)
det(section, the)
nmod(rapport, section)
flat(section, statistique)
case(General, of)
det(General, the)
compound(General, secretariat)
nmod(section, General)
punct(section, .)
advmod(responsibility, eventually)
appos(General, responsibility)
case(inquiry, for)
amod(inquiry, demographic)
nmod(responsibility, inquiry)
case(Congo, in)
det(Congo, the)
nmod(inquiry, Congo)
aux:pass(transfer, be)
acl:relcl(inquiry, transfer)
case(division, to)
det(division, the)
amod(division, demographic)
obl(transfer, division)
case(Office, of)
det(Office, the)
compound(Office, Central)
compound(Office, statistical)
nmod(division, Office)
punct(inquiry, .)
det(inquiry, the)
nummod(inquiry, 1952)
amod(inquiry, demographic)
nsubj:pass(direct, inquiry)
case(ruanda, in)
nmod(inquiry, ruanda)
punct(ruanda, -)
flat(ruanda, Urundi)
aux:pass(direct, be)
acl:relcl(division, direct)
case(V., by)
obl(direct, V.)
flat(V., Neesen)
punct(V., ,)
det(member, a)
appos(V., member)
case(staff, of)
det(staff, the)
compound(staff, IRSAC)
nmod(member, staff)
punct(V., ,)
mark(carry, though)
det(inquiry, the)
nsubj:pass(carry, inquiry)
aux:pass(carry, be)
advcl(direct, carry)
compound:prt(carry, out)
case(auspices, under)
det(auspices, the)
obl(carry, auspices)
case(AIMO, of)
nmod(auspices, AIMO)
punct(auspices, ,)
nsubj(continue, which)
aux(continue, have)
acl:relcl(auspices, continue)
obj(continue, responsibility)
case(statistic, for)
amod(statistic, demographic)
obl(continue, statistic)
case(territory, in)
det(territory, this)
nmod(statistic, territory)
punct(form, . )
det(member, a)
nsubj:pass(delegate, member)
case(staff, of)
det(staff, the)
compound(staff, IRSAC)
nmod(member, staff)
punct(E., ()
appos(staff, E.)
flat(E., Van)
flat(E., De)
flat(E., Walle)
punct(E., ))
aux:pass(delegate, be)
advmod(delegate, recently)
root(ROOT, delegate)
mark(cooperate, to)
xcomp(delegate, cooperate)
case(AIMO, with)
obl(cooperate, AIMO)
case(development, in)
det(development, the)
obl(cooperate, development)
case(statistic, of)
amod(statistic, demographic)
nmod(development, statistic)
case(territory, in)
det(territory, this)
nmod(statistic, territory)
punct(delegate, .)
det(initiation, the)
nsubj(advance, initiation)
mark(sampling, of)
acl(initiation, sampling)
obj(sampling, census)
case(ruanda, in)
obl(sampling, ruanda)
punct(ruanda, -)
flat(ruanda, Urundi)
punct(1952, ()
appos(ruanda, 1952)
punct(1952, ))
cc(Congo, and)
case(Congo, in)
det(Congo, the)
obl(advance, Congo)
punct(1955, ()
appos(Congo, 1955)
case(57, -)
nmod(1955, 57)
punct(1955, ))
cop(advance, be)
amod(advance, major)
root(ROOT, advance)
punct(advance, .)
nsubj(deal, we)
aux(deal, will)
root(ROOT, deal)
advmod(deal, first)
case(program, with)
det(program, the)
obl(deal, program)
case(Congo, in)
det(Congo, the)
obl(deal, Congo)
mark(put, though)
nsubj:pass(put, this)
aux:pass(put, be)
advcl(deal, put)
case(operation, into)
obl(put, operation)
advmod(put, later)
case(other, than)
det(other, the)
obl(later, other)
punct(deal, .)
det(nature, the)
amod(nature, radical)
nsubj:pass(emphasize, nature)
case(innovation, of)
det(innovation, the)
nmod(nature, innovation)
case(Congo, in)
det(Congo, the)
nmod(innovation, Congo)
aux:pass(emphasize, be)
advmod(emphasize, not)
root(ROOT, emphasize)
case(announcement, in)
det(announcement, the)
amod(announcement, official)
obl(emphasize, announcement)
punct(emphasize, .)
det(demographique, the)
compound(demographique, term)
compound(demographique, enquete)
nsubj:pass(use, demographique)
punct(demographique, ,)
advmod(use, previously)
acl(demographique, use)
case(investigation, for)
det(investigation, the)
amod(investigation, supplementary)
obl(use, investigation)
acl(investigation, carry)
compound:prt(carry, out)
case(connection, in)
obl(carry, connection)
case(census, with)
det(census, the)
amod(census, administrative)
nmod(connection, census)
punct(use, ,)
aux:pass(use, be)
root(ROOT, use)
case(investigation, for)
det(investigation, the)
amod(investigation, new)
obl(use, investigation)
punct(use, .)
advmod(fundamental, however)
punct(fundamental, ,)
det(difference, the)
nsubj(fundamental, difference)
case(procedure, in)
nmod(difference, procedure)
cop(fundamental, be)
root(ROOT, fundamental)
punct(fundamental, .)
nsubj(be, these)
root(ROOT, be)
mark(follow, as)
ccomp(be, follow)
punct(follow, :)
punct(1, ()
nummod(procedure, 1)
punct(1, ))
compound(procedure, field)
compound(procedure, work)
obj(follow, procedure)
punct(be, .)
compound(operation, field)
nsubj:pass(transfer, operation)
aux:pass(transfer, be)
root(ROOT, transfer)
case(personnel, from)
amod(personnel, administrative)
obl(transfer, personnel)
advmod(engage, primarily)
acl(personnel, engage)
case(task, in)
amod(task, other)
obl(engage, task)
case(team, to)
advmod(train, specially)
amod(team, train)
obl(engage, team)
case(investigator, of)
amod(time, full)
punct(time, -)
compound(investigator, time)
amod(investigator, african)
nmod(team, investigator)
punct(team, ()
nummod(team, three)
appos(investigator, team)
punct(team, ,)
det(team, each)
acl(team, work)
case(province, in)
nummod(province, two)
obl(work, province)
punct(team, ))
punct(transfer, .)
det(team, these)
nsubj(carry, team)
root(ROOT, carry)
compound:prt(carry, out)
det(operation, the)
amod(operation, same)
obj(carry, operation)
advmod(carry, successively)
case(area, in)
amod(area, different)
obl(carry, area)
obl(carry, . )
punct(2, ()
nummod(nature, 2)
punct(2, ))
parataxis(carry, nature)
case(sample, of)
det(sample, the)
nmod(nature, sample)
punct(carry, .)
compound(area, Sample)
nsubj:pass(select, area)
case(investigation, in)
det(investigation, the)
amod(investigation, new)
nmod(area, investigation)
aux:pass(select, be)
root(ROOT, select)
advmod(select, strictly)
case(application, by)
obl(select, application)
case(principle, of)
det(principle, the)
nmod(application, principle)
case(theory, of)
compound(theory, probability)
nmod(principle, theory)
punct(select, ,)
advmod(representative, so)
mark(representative, as)
mark(representative, to)
cop(representative, be)
advcl(select, representative)
case(population, of)
det(population, the)
amod(population, total)
obl(representative, population)
case(area, of)
amod(area, define)
nmod(population, area)
case(limit, within)
amod(limit, calculable)
nmod(area, limit)
punct(select, .)
case(short, in)
obl(introduce, short)
punct(introduce, ,)
amod(sampling, scientific)
nsubj:pass(introduce, sampling)
aux:pass(introduce, be)
root(ROOT, introduce)
case(place, in)
obl(introduce, place)
case(sampling, of)
amod(sampling, subjective)
nmod(place, sampling)
punct(introduce, .)
det(population, the)
nsubj:pass(stratify, population)
case(district, of)
det(district, the)
amod(district, various)
nmod(population, district)
punct(division, ,)
cc(division, or)
amod(division, other)
amod(division, major)
conj(district, division)
punct(stratify, ,)
aux:pass(stratify, be)
root(ROOT, stratify)
case(type, by)
obl(stratify, type)
case(community, of)
nmod(type, community)
punct(rural, ()
appos(type, rural)
punct(urban, ,)
conj(rural, urban)
punct(mix, ,)
conj(rural, mix)
punct(rural, ))
cc(appropriate, and)
punct(appropriate, ,)
advmod(appropriate, where)
conj(rural, appropriate)
punct(appropriate, ,)
case(affiliation, by)
amod(affiliation, ethnic)
obl(appropriate, affiliation)
cc(type, and)
case(type, by)
conj(affiliation, type)
case(economy, of)
nmod(type, economy)
punct(stratify, .)
compound(unit, Sample)
nsubj:pass(draw, unit)
punct(village, ()
appos(unit, village)
case(area, in)
amod(area, rural)
nmod(village, area)
punct(house, ,)
conj(village, house)
case(city, in)
nmod(house, city)
punct(house, ))
aux:pass(draw, be)
root(ROOT, draw)
advmod(draw, systematically)
case(strata, within)
det(. , these)
obl(draw, strata)
compound(size, . )
punct(3, ()
nummod(size, 3)
punct(3, ))
obl(draw, size)
case(sample, of)
det(sample, the)
nmod(size, sample)
punct(size, .)
amod(ratio, different)
compound(ratio, sampling)
nsubj:pass(apply, ratio)
aux:pass(apply, be)
parataxis(draw, apply)
case(condition, under)
amod(condition, different)
obl(apply, condition)
punct(draw, .)
amod(proportion, Higher)
nsubj:pass(sample, proportion)
aux:pass(sample, be)
root(ROOT, sample)
case(community, in)
amod(community, urban)
cc(mix, and)
conj(urban, mix)
obl(sample, community)
case(area, than)
case(area, in)
amod(area, rural)
obl(sample, area)
punct(sample, .)
advmod(11, about)
nummod(percent, 11)
nsubj:pass(cover, percent)
case(population, of)
det(population, the)
amod(population, total)
nmod(percent, population)
aux:pass(cover, be)
conj(sample, cover)
case(investigation, in)
det(investigation, the)
amod(investigation, new)
obl(cover, investigation)
punct(cover, ,)
mark(cover, as)
case(percent, compare)
case(percent, with)
advmod(3, about)
nummod(percent, 3)
obl(cover, percent)
case(inquiry, in)
det(inquiry, the)
amod(inquiry, previous)
nmod(percent, inquiry)
nmod(percent, . )
punct(4, ()
appos(. , 4)
punct(4, ))
appos(. , question)
cc(definition, and)
conj(question, definition)
punct(sample, .)
amod(question, Uniform)
nsubj:pass(enforce, question)
punct(definition, ,)
conj(question, definition)
punct(procedure, ,)
cc(procedure, and)
conj(question, procedure)
aux:pass(enforce, be)
root(ROOT, enforce)
case(country, throughout)
det(country, the)
amod(country, whole)
obl(enforce, country)
punct(enforce, .)
nsubj:pass(obtain, data)
aux:pass(obtain, be)
parataxis(enforce, obtain)
punct(obtain, ,)
advmod(obtain, separately)
punct(obtain, ,)
case(class, on)
nummod(class, three)
obl(obtain, class)
case(person, of)
nmod(class, person)
punct(enforce, :)
root(ROOT, ()
nummod(resident, a)
punct(a, ))
root(ROOT, resident)
punct(resident, ,)
amod(resident, present)
punct(resident, ;)
punct(resident, ;)
punct(b, ()
nummod(resident, b)
punct(resident, ))
list(resident, resident)
punct(absent, ,)
amod(resident, absent)
punct(resident, ;)
punct(resident, ;)
cc(c, and)
punct(c, ()
conj(resident, c)
punct(c, ))
appos(c, visitor)
punct(resident, .)
case(report, in)
det(report, the)
obl(give, report)
punct(give, ,)
compound(result, summary)
nsubj:pass(give, result)
aux:pass(give, be)
root(ROOT, give)
case(facto, for)
cc:preconj(facto, both)
det(facto, the)
compound(facto, de)
obl(give, facto)
punct(a, ()
appos(facto, a)
cc(c, and)
conj(a, c)
punct(a, ))
cc(jure, and)
amod(jure, de)
conj(facto, jure)
punct(a, ()
appos(jure, a)
cc(b, and)
conj(a, b)
punct(a, ))
nmod(jure, population)
punct(give, ;)
punct(give, ;)
cc(report, but)
det(analysis, the)
amod(analysis, subsequent)
nsubj:pass(report, analysis)
case(characteristic, of)
nmod(analysis, characteristic)
aux:pass(report, be)
conj(give, report)
advmod(population, only)
case(population, for)
det(population, the)
compound(jure, de)
compound(population, jure)
obl(report, population)
punct(population, ()
cc(population, or)
punct(population, ,)
case(district, in)
det(district, some)
obl(population, district)
punct(population, ,)
advmod(population, only)
det(population, the)
compound(population, de)
compound(population, facto)
conj(population, population)
punct(population, ))
punct(give, .)
det(change, these)
nsubj(represent, change)
root(ROOT, represent)
punct(represent, ,)
case(effect, in)
nmod(shift, effect)
punct(shift, ,)
det(shift, a)
ccomp(represent, shift)
case(compilation, from)
punct(1, ()
nummod(compilation, 1)
punct(1, ))
det(compilation, a)
amod(compilation, administrative)
nmod(shift, compilation)
case(data, of)
nmod(compilation, data)
acl(compilation, obtain)
case(procedure, through)
obl(obtain, procedure)
acl(procedure, design)
advmod(design, primarily)
mark(serve, to)
advcl(design, serve)
amod(objective, political)
cc(economic, and)
conj(political, economic)
obj(serve, objective)
case(census, to)
punct(2, ()
nummod(census, 2)
punct(2, ))
det(census, a)
amod(census, systematic)
compound(census, sampling)
nmod(objective, census)
case(population, of)
det(population, the)
amod(population, whole)
amod(population, african)
nmod(census, population)
punct(represent, .)
det(system, the)
compound(system, population)
compound(system, registration)
nsubj(have, system)
advmod(have, still)
root(ROOT, have)
amod(function, important)
obj(have, function)
punct(have, .)
nsubj(supply, it)
root(ROOT, supply)
amod(data, local)
obj(supply, data)
nsubj(useful, which)
cop(useful, be)
acl:relcl(data, useful)
case(administration, in)
obl(useful, administration)
cc(use, and)
nsubj:pass(use, which)
aux(use, can)
aux:pass(use, be)
acl:relcl(data, use)
case(basis, as)
det(basis, a)
obl(use, basis)
case(study, for)
amod(study, intensive)
nmod(basis, study)
case(situation, in)
amod(situation, particular)
nmod(study, situation)
punct(supply, .)
nsubj(provide, it)
root(ROOT, provide)
det(frame, a)
obj(provide, frame)
case(census, for)
det(census, the)
compound(census, sampling)
nmod(frame, census)
punct(provide, .)
nsubj(provide, it)
advmod(provide, also)
root(ROOT, provide)
det(frame, a)
obj(provide, frame)
case(which, within)
obl(gain, which)
det(registration, the)
nsubj(gain, registration)
case(event, of)
amod(event, vital)
nmod(registration, event)
aux(gain, be)
advmod(gain, gradually)
acl:relcl(frame, gain)
obj(gain, force)
punct(expect, ()
mark(expect, though)
nsubj(expect, one)
aux(expect, can)
advmod(expect, not)
advcl(gain, expect)
mark(obtain, to)
xcomp(expect, obtain)
amod(statistic, reliable)
amod(statistic, vital)
obj(obtain, statistic)
case(part, in)
amod(part, most)
nmod(statistic, part)
case(Congo, of)
det(Congo, the)
nmod(part, Congo)
case(source, from)
det(source, this)
nmod(part, source)
case(future, in)
det(future, the)
amod(future, near)
nmod(source, future)
punct(expect, ))
punct(provide, .)
nsubj:pass(use, it)
aux:pass(use, be)
advmod(use, still)
root(ROOT, use)
mark(make, in)
advcl(use, make)
amod(estimate, current)
compound(estimate, population)
obj(make, estimate)
case(year, in)
amod(year, post-census)
obl(make, year)
punct(make, ,)
mark(open, though)
det(value, the)
nsubj(open, value)
case(estimate, of)
det(estimate, these)
nmod(value, estimate)
cop(open, be)
advcl(make, open)
mark(question, to)
advcl(open, question)
punct(use, .)
advmod(have, finally)
punct(have, ,)
nsubj(have, it)
aux(have, may)
root(ROOT, have)
amod(value, certain)
advmod(important, very)
amod(value, important)
punct(value, ,)
advmod(obvious, less)
amod(value, obvious)
obj(have, value)
punct(have, .)
advmod(have, even)
mark(have, though)
det(register, the)
nsubj(have, register)
aux(have, may)
advcl(contain, have)
det(record, a)
amod(record, incomplete)
obj(have, record)
case(person, of)
nmod(record, person)
amod(person, present)
case(area, in)
det(area, a)
amod(area, particular)
obl(present, area)
cc(include, or)
conj(contain, include)
obj(include, person)
advmod(longer, no)
advmod(live, longer)
xcomp(include, live)
advmod(live, there)
punct(contain, ,)
nsubj(contain, they)
conj(have, contain)
amod(information, precise)
obj(contain, information)
case(age, on)
nmod(information, age)
punct(contain, ,)
case(date, by)
nmod(information, date)
case(birth, of)
nmod(date, birth)
punct(some, ,)
case(some, for)
nmod(information, some)
case(person, of)
det(person, the)
nmod(some, person)
amod(person, present)
punct(child, ()
advmod(child, especially)
parataxis(present, child)
case(community, in)
advmod(stable, relatively)
amod(community, stable)
nmod(child, community)
punct(child, ))
cc(information, and)
amod(information, supplementary)
conj(child, information)
punct(record, ()
case(record, such)
fixed(such, as)
nmod(information, record)
case(status, of)
amod(status, marital)
nmod(record, status)
punct(record, ))
case(other, for)
amod(other, many)
nmod(record, other)
punct(have, .)
det(quality, the)
nsubj:pass(improve, quality)
case(data, of)
det(data, the)
compound(data, census)
nmod(quality, data)
aux(improve, can)
punct(improve, ,)
advmod(improve, therefore)
punct(improve, ,)
aux:pass(improve, be)
advmod(improve, greatly)
root(ROOT, improve)
case(use, by)
det(use, the)
obl(improve, use)
case(record, of)
det(record, the)
compound(record, registration)
nmod(use, record)
case(conjunction, in)
nmod(record, conjunction)
case(inquiry, with)
det(inquiry, the)
compound(inquiry, field)
nmod(conjunction, inquiry)
punct(improve, . )
advmod(possible, furthermore)
punct(possible, ,)
expl(possible, it)
aux(possible, may)
cop(possible, be)
root(ROOT, possible)
mark(estimate, to)
csubj(possible, estimate)
det(error, the)
obj(estimate, error)
case(bias, due)
fixed(due, to)
obl(estimate, bias)
case(method, in)
nmod(bias, method)
punct(distinguished, ()
mark(distinguished, as)
acl(bias, distinguished)
case(error, from)
amod(error, sampling)
obl(distinguished, error)
punct(distinguished, ))
case(each, in)
obl(estimate, each)
case(source, of)
det(source, these)
nmod(each, source)
punct(subject, ,)
case(subject, on)
amod(subject, such)
obl(estimate, subject)
case(fertility, as)
nmod(subject, fertility)
punct(mortality, ,)
conj(fertility, mortality)
punct(migration, ,)
cc(migration, and)
conj(fertility, migration)
case(interval, during)
det(interval, a)
amod(interval, give)
nmod(subject, interval)
mark(use, by)
acl(interval, use)
obj(use, information)
case(source, from)
nummod(source, two)
advmod(independent, largely)
amod(source, independent)
obl(use, source)
case(conjunction, in)
nmod(source, conjunction)
punct(possible, .)
det(census, the)
amod(census, first)
compound(census, sampling)
nsubj(extend, census)
case(Congo, in)
det(Congo, the)
nmod(census, Congo)
root(ROOT, extend)
case(period, over)
det(period, a)
nummod(year, three)
punct(year, -)
compound(period, year)
obl(extend, period)
punct(period, ,)
appos(period, 1955)
case(57, -)
nmod(1955, 57)
punct(extend, ;)
punct(extend, ;)
det(result, the)
nsubj:pass(process, result)
aux(process, be)
advmod(process, still)
aux:pass(process, be)
parataxis(extend, process)
case(1959, in)
obl(process, 1959)
punct(extend, .)
nsubj:pass(plan, it)
aux:pass(plan, be)
root(ROOT, plan)
mark(double, to)
xcomp(plan, double)
det(number, the)
obj(double, number)
case(team, of)
nmod(number, team)
cc(make, and)
mark(make, to)
conj(double, make)
obj(make, use)
case(equipment, of)
amod(equipment, improve)
nmod(use, equipment)
case(inquiry, in)
det(inquiry, a)
amod(inquiry, second)
amod(inquiry, demographic)
obl(make, inquiry)
case(1960, in)
nmod(inquiry, 1960)
punct(make, ,)
mark(carry, so)
fixed(so, that)
det(inquiry, the)
nsubj:pass(carry, inquiry)
aux(carry, can)
aux:pass(carry, be)
advcl(make, carry)
advmod(carry, through)
case(year, in)
nummod(year, one)
obl(carry, year)
cc(publish, and)
det(result, the)
nsubj(publish, result)
conj(carry, publish)
advmod(expeditiously, more)
advmod(publish, expeditiously)
punct(plan, .)
nsubj:pass(propose, it)
aux:pass(propose, be)
root(ROOT, propose)
mark(carry, that)
case(census, in)
det(census, the)
amod(census, future)
amod(census, complete)
compound(census, sampling)
nsubj:pass(carry, census)
aux:pass(carry, be)
ccomp(propose, carry)
compound:prt(carry, out)
case(interval, at)
nummod(year, five)
punct(year, -)
compound(interval, year)
obl(carry, interval)
punct(propose, .)
nsubj:pass(issue, report)
advmod(issue, already)
root(ROOT, issue)
case(census, on)
det(census, the)
compound(census, sampling)
obl(issue, census)
punct(census, ,)
appos(census, 1955)
case(57, -)
nmod(1955, 57)
punct(issue, ,)
case(area, in)
amod(area, various)
obl(issue, area)
acl(area, run)
mark(follow, as)
advcl(run, follow)
punct(use, ()
advcl(follow, use)
cc:preconj(french, only)
det(french, the)
obj(use, french)
cc(omit, and)
conj(use, omit)
amod(title, corresponding)
amod(title, Flemish)
obj(omit, title)
punct(use, ))
punct(issue, .)
det(report, this)
nsubj(contain, report)
root(ROOT, contain)
amod(note, preliminary)
obj(contain, note)
cc(table, and)
nummod(table, 35)
conj(note, table)
punct(contain, .)
amod(report, other)
nsubj:pass(issue, report)
case(form, in)
amod(form, identical)
nmod(report, form)
punct(issue, ,)
cc(issue, but)
case(content, with)
advmod(varying, somewhat)
amod(content, varying)
obl(issue, content)
punct(issue, ,)
aux(issue, have)
aux:pass(issue, be)
root(ROOT, issue)
punct(issue, .)
det(report, these)
compound(report, area)
nsubj:pass(follow, report)
aux(follow, will)
aux:pass(follow, be)
root(ROOT, follow)
punct(follow, ,)
case(plan, accord)
fixed(accord, to)
amod(plan, present)
obl(follow, plan)
punct(follow, ,)
case(report, by)
det(report, a)
compound(report, summary)
obl(follow, report)
punct(report, ,)
nsubj(include, which)
aux(include, will)
acl:relcl(report, include)
det(statement, a)
amod(statement, detailed)
obj(include, statement)
case(method, on)
nmod(statement, method)
punct(follow, .)
case(evidence, with)
det(evidence, this)
obl(begin, evidence)
case(mind, in)
nmod(evidence, mind)
punct(begin, ,)
det(writer, the)
nsubj(begin, writer)
root(ROOT, begin)
mark(plan, to)
xcomp(begin, plan)
advmod(educate, how)
nsubj(educate, he)
aux(educate, might)
advmod(educate, more)
advmod(educate, effectively)
ccomp(plan, educate)
det(student, the)
amod(student, marry)
obj(educate, student)
case(class, in)
nmod:poss(class, he)
amod(class, functional)
obl(educate, class)
punct(begin, .)
case(end, toward)
det(end, the)
obl(interview, end)
case(work, of)
det(semester, the)
nmod:poss(work, semester)
case(semester, 's)
nmod(end, work)
punct(interview, ,)
nsubj(interview, he)
root(ROOT, interview)
det(member, every)
amod(member, marry)
compound(member, class)
obj(interview, member)
case(length, at)
amod(length, great)
obl(interview, length)
punct(interview, .)
nsubj(find, he)
root(ROOT, find)
punct(find, ,)
mark(suspect, as)
nsubj(suspect, he)
aux(suspect, have)
advcl(find, suspect)
punct(find, ,)
det(consensus, a)
amod(consensus, general)
obj(find, consensus)
mark(functional, that)
advmod(half, perhaps)
case(half, over)
nsubj(functional, half)
case(course, of)
det(course, the)
amod(course, present)
advmod(design, functionally)
amod(course, design)
nmod(half, course)
cop(functional, be)
advmod(functional, not)
advmod(functional, really)
acl(consensus, functional)
case(student, for)
det(student, these)
obl(functional, student)
punct(find, .)
advmod(admit, however)
punct(admit, ,)
nsubj(admit, all)
root(ROOT, admit)
mark(lose, that)
det(hindsight, the)
punct(hindsight, ``)
nsubj:pass(lose, hindsight)
punct(hindsight, '')
aux:pass(lose, be)
advmod(lose, not)
advmod(lose, altogether)
ccomp(admit, lose)
punct(admit, .)
case(word, in)
nmod:poss(word, they)
amod(word, own)
obl(aid, word)
punct(aid, ,)
nsubj(aid, it)
aux(aid, have)
root(ROOT, aid)
obj(aid, they)
mark(get, to)
xcomp(aid, get)
det(picture, a)
amod(picture, clearer)
obj(get, picture)
mark(get, of)
advmod(get, how)
nsubj(get, they)
aux(get, have)
acl(picture, get)
case(marriage, into)
nmod:poss(marriage, they)
obl(get, marriage)
punct(obtain, ,)
cc(obtain, and)
advmod(obtain, perhaps)
nsubj(obtain, they)
aux(obtain, have)
conj(aid, obtain)
det(insight, some)
obj(obtain, insight)
mark(appear, on)
advmod(appear, why)
amod(trouble, certain)
nsubj(appear, trouble)
acl(insight, appear)
case(time, from)
obl(appear, time)
case(time, to)
nmod(time, time)
punct(aid, .)
case(fact, in)
obl(go, fact)
punct(go, ,)
nsubj(go, they)
root(ROOT, go)
advmod(far, so)
advmod(go, far)
mark(caution, as)
mark(caution, to)
advcl(go, caution)
det(writer, the)
obj(caution, writer)
mark(be, that)
mark(attempt, if)
nsubj(attempt, he)
advcl(be, attempt)
mark(design, to)
xcomp(attempt, design)
det(section, a)
obj(design, section)
advmod(design, exclusively)
case(student, for)
amod(student, marry)
obl(design, student)
advmod(student, there)
aux(be, should)
conj(go, be)
punct(design, ,)
case(beginning, at)
det(beginning, the)
obl(be, beginning)
punct(study, ,)
det(study, some)
punct(hindsight, ``)
compound(study, hindsight)
punct(hindsight, '')
appos(beginning, study)
punct(study, ;)
punct(go, ;)
cc(hasten, but)
nsubj(hasten, they)
det(they, all)
conj(go, hasten)
mark(add, to)
xcomp(hasten, add)
mark(need, that)
advmod(less, certainly)
amod(time, less)
nsubj:pass(need, time)
aux:pass(need, be)
ccomp(add, need)
case(it, on)
obl(need, it)
mark(spend, than)
advmod(spend, presently)
advcl(need, spend)
punct(go, .)
nsubj(feel, all)
case(they, of)
nmod(all, they)
root(ROOT, feel)
det(need, a)
amod(need, compelling)
obj(feel, need)
case(coverage, for)
amod(coverage, more)
nmod(need, coverage)
case(area, on)
nmod(coverage, area)
nsubj:pass(touch, that)
aux(touch, could)
aux:pass(touch, be)
advmod(touch, only)
advmod(touch, lightly)
acl:relcl(area, touch)
obl(touch, upon)
case(course, in)
det(course, a)
amod(survey, general)
obl:npmod(functional, survey)
amod(course, functional)
obl(touch, course)
punct(feel, . )
det(few, a)
nsubj(doubtful, few)
cop(doubtful, be)
root(ROOT, doubtful)
case(merit, about)
det(merit, the)
obl(doubtful, merit)
case(section, of)
det(section, a)
amod(section, exclusive)
nmod(merit, section)
case(student, for)
amod(student, marry)
nmod(section, student)
punct(doubtful, .)
mark(express, as)
nsubj(express, one)
case(they, of)
nmod(one, they)
root(ROOT, express)
obj(express, it)
punct(express, ,)
punct(express, ``)
nsubj(do, it)
aux(do, have)
root(ROOT, do)
iobj(do, I)
det(world, a)
obj(do, world)
case(good, of)
nmod(world, good)
mark(listen, to)
acl(world, listen)
case(question, to)
det(question, the)
amod(question, naive)
obl(listen, question)
cc(comment, and)
conj(question, comment)
case(people, of)
det(people, these)
advmod(marry, not)
punct(marry, -)
advmod(marry, yet)
punct(marry, -)
amod(people, marry)
nmod(comment, people)
punct(do, . )
nsubj(see, I)
aux(see, can)
advmod(see, now)
advmod(see, better)
root(ROOT, see)
advmod(provoke, just)
det(process, what)
nsubj(provoke, process)
ccomp(see, provoke)
amod(action, certain)
obj(provoke, action)
case(I, from)
nmod(action, I)
case(past, in)
det(past, the)
obl(provoke, past)
punct(see, .)
aux(section, have)
nsubj(section, I)
cop(section, be)
case(section, in)
det(section, a)
det(marry, all)
punct(marry, -)
amod(section, marry)
root(ROOT, section)
nsubj(miss, I)
aux(miss, would)
aux(miss, have)
acl:relcl(section, miss)
obj(miss, this)
punct(believe, ,)
cc(believe, and)
nsubj(believe, I)
conj(section, believe)
mark(value, that)
det(aspect, this)
amod(aspect, single)
nsubj(value, aspect)
aux(value, have)
cop(value, be)
case(value, of)
amod(value, great)
amod(value, personal)
ccomp(believe, value)
case(I, to)
nmod(value, I)
punct(value, '')
punct(value, .)
det(comment, this)
nsubj(seem, comment)
cc(other, and)
conj(comment, other)
amod(comment, similar)
case(it, to)
obl(similar, it)
punct(seem, ,)
aux(seem, would)
ccomp(believe, seem)
mark(indicate, to)
xcomp(seem, indicate)
det(justification, a)
amod(justification, possible)
obj(indicate, justification)
mark(continue, for)
acl(justification, continue)
det(quo, the)
compound(quo, status)
obj(continue, quo)
punct(seem, .)
cc(direction, but)
det(weight, the)
nsubj(direction, weight)
case(feeling, of)
nmod(weight, feeling)
cop(direction, be)
advmod(direction, heavily)
case(direction, in)
det(direction, the)
amod(direction, opposite)
root(ROOT, direction)
punct(direction, .)
advmod(decide, thus)
punct(decide, ,)
det(writer, the)
nsubj(decide, writer)
root(ROOT, decide)
mark(hold, to)
xcomp(decide, hold)
nummod(section, one)
amod(section, experimental)
obj(hold, section)
case(preparation, of)
det(preparation, the)
amod(preparation, functional)
nmod(section, preparation)
case(course, for)
compound(course, marriage)
nmod(preparation, course)
case(semester, in)
det(semester, the)
compound(semester, spring)
obl(hold, semester)
case(1960, of)
nmod(semester, 1960)
advmod(semester, exclusively)
case(person, for)
nmod(semester, person)
advmod(marry, already)
acl(person, marry)
punct(decide, --)
nsubj(prerequisite, that)
cop(prerequisite, be)
punct(prerequisite, ,)
parataxis(decide, prerequisite)
punct(prerequisite, :)
punct(marriage, ``)
appos(prerequisite, marriage)
punct(marriage, '')
punct(mean, .)
nsubj(mean, this)
aux(mean, do)
advmod(mean, not)
parataxis(prerequisite, mean)
mark(enroll, that)
amod(student, marry)
nsubj(enroll, student)
aux(enroll, could)
advmod(enroll, not)
ccomp(mean, enroll)
case(section, in)
amod(section, other)
punct(section, ``)
amod(section, mix)
punct(section, '')
obl(enroll, section)
punct(some, ,)
cc(some, and)
conj(section, some)
case(they, of)
nmod(some, they)
punct(some, ,)
advmod(difficulty, largely)
case(difficulty, because)
fixed(because, of)
compound(difficulty, scheduling)
nmod(some, difficulty)
punct(do, ,)
acl:relcl(difficulty, do)
punct(decide, .)
cc(enroll, but)
advmod(those, only)
nsubj(enroll, those)
advmod(marry, already)
acl:relcl(those, marry)
aux(enroll, could)
root(ROOT, enroll)
case(section, in)
det(section, this)
nummod(section, one)
obl(enroll, section)
punct(enroll, .)
case(addition, in)
obl(note, addition)
punct(note, ,)
nummod(difference, two)
amod(difference, other)
nsubj:pass(note, difference)
case(type, in)
det(type, the)
nummod(type, two)
nmod(difference, type)
case(section, of)
nmod(type, section)
aux(note, must)
aux:pass(note, be)
root(ROOT, note)
punct(note, . )
punct(1, ()
nummod(allow, 1)
punct(1, ))
det(section, the)
amod(section, regular)
nsubj(allow, section)
aux(allow, do)
advmod(allow, not)
parataxis(note, allow)
obj(allow, freshmen)
punct(allow, ;)
punct(allow, ;)
det(one, this)
nsubj(do, one)
parataxis(allow, do)
punct(note, .)
det(action, this)
nsubj:pass(rationalize, action)
aux:pass(rationalize, be)
root(ROOT, rationalize)
case(basis, on)
det(basis, the)
obl(rationalize, basis)
case(survey, of)
det(survey, a)
amod(survey, small)
nmod(basis, survey)
nsubj(indicate, which)
acl:relcl(survey, indicate)
mark(become, that)
det(percentage, a)
amod(percentage, high)
nsubj(become, percentage)
case(freshmen, of)
amod(freshmen, marry)
nmod(percentage, freshmen)
nmod(percentage, woman)
case(campus, on)
nmod:poss(campus, we)
nmod(woman, campus)
advmod(become, never)
ccomp(indicate, become)
xcomp(become, sophomore)
punct(rationalize, .)
nsubj(appear, many)
case(they, of)
nmod(many, they)
root(ROOT, appear)
mark(drop, to)
xcomp(appear, drop)
compound:prt(drop, out)
punct(drop, ,)
case(reason, for)
nummod(reason, one)
obl(drop, reason)
cc(another, or)
conj(reason, another)
punct(appear, .)
mark(permit, by)
advcl(extend, permit)
compound(student, freshman)
obj(permit, student)
nsubj(extend, we)
aux(extend, might)
root(ROOT, extend)
det(opportunity, the)
obj(extend, opportunity)
case(course, for)
det:predet(course, such)
det(course, a)
nmod(opportunity, course)
case(individual, to)
det(individual, some)
nmod(course, individual)
nsubj(get, who)
advmod(get, otherwise)
aux(get, might)
advmod(get, never)
acl:relcl(individual, get)
mark(take, to)
xcomp(get, take)
obj(take, it)
punct(extend, .)
nsubj:pass(verify, this)
aux(verify, have)
advmod(verify, subsequently)
aux:pass(verify, be)
parataxis(extend, verify)
case(experience, by)
det(experience, the)
obl(verify, experience)
obl(verify, . )
punct(2, ()
nummod(encourage, 2)
punct(2, ))
nsubj:pass(encourage, auditor)
aux:pass(encourage, be)
conj(verify, encourage)
punct(extend, .)
case(section, in)
det(section, the)
amod(section, regular)
obl(more, section)
nsubj(more, they)
aux(more, have)
advmod(more, always)
cop(more, be)
root(ROOT, more)
cc(discouraged, or)
advmod(discouraged, less)
conj(more, discouraged)
punct(more, .)
det(philosophy, the)
nsubj(be, philosophy)
aux(be, have)
root(ROOT, be)
mark(encourage, that)
mark(find, if)
nsubj(find, they)
aux(find, could)
advcl(encourage, find)
det(time, the)
obj(find, time)
mark(attend, to)
acl(time, attend)
obj(attend, class)
advmod(encourage, why)
advmod(encourage, not)
ccomp(be, encourage)
obj(encourage, they)
mark(get, to)
xcomp(encourage, get)
det(credit, the)
obj(get, credit)
cc(provide, and)
advmod(provide, perhaps)
conj(get, provide)
det(incentive, a)
obj(provide, incentive)
mark(do, to)
acl(incentive, do)
det(work, the)
obj(do, work)
advmod(effectively, more)
advmod(do, effectively)
punct(be, .)
advmod(count, besides)
punct(count, ,)
nsubj(count, auditor)
aux(count, do)
advmod(count, not)
root(ROOT, count)
case(load, on)
compound(load, faculty)
obl(count, load)
case(weight, with)
det(weight, the)
amod(weight, same)
obl(count, weight)
mark(enrol, as)
advmod(enrol, regularly)
advcl(count, enrol)
obj(enrol, student)
punct(count, .)
cc(welcome, but)
case(section, in)
det(section, this)
nummod(section, one)
obl(welcome, section)
nsubj(welcome, we)
root(ROOT, welcome)
obj(welcome, auditor)
punct(welcome, .)
advmod(other, why)
punct(why, ?)
punct(why, ?)
case(reason, for)
det(reason, no)
amod(reason, particular)
obl(other, reason)
punct(other, ,)
root(ROOT, other)
mark(feel, than)
mark(feel, that)
det(writer, the)
nsubj(feel, writer)
advcl(other, feel)
nsubj(might, it)
ccomp(feel, might)
punct(feel, --)
advmod(might, just)
aux(encourage, might)
punct(encourage, --)
parataxis(feel, encourage)
det(mate, both)
obj(encourage, mate)
mark(attendance, to)
cop(attendance, be)
case(attendance, in)
xcomp(encourage, attendance)
punct(encourage, .)
nsubj(have, many)
case(man, of)
det(man, the)
nmod(many, man)
case(campus, on)
nmod:poss(campus, we)
nmod(man, campus)
root(ROOT, have)
det(curriculum, a)
advmod(set, pretty)
amod(curriculum, set)
obj(have, curriculum)
punct(curriculum, ,)
advmod(field, especially)
case(field, in)
det(field, the)
amod(field, various)
compound(field, engineering)
obl(have, field)
punct(have, ,)
case(elective, with)
amod(elective, few)
obl(have, elective)
case(year, till)
det(year, the)
amod(year, senior)
nmod(elective, year)
punct(have, .)
advmod(need, incidentally)
punct(need, ,)
nsubj(need, it)
root(ROOT, need)
mark(note, to)
aux:pass(note, be)
xcomp(need, note)
mark(begin, that)
mark(permit, because)
nsubj:pass(permit, auditor)
aux:pass(permit, be)
advcl(note, permit)
det(section, the)
nsubj(begin, section)
ccomp(permit, begin)
xcomp(begin, increase)
case(number, in)
obl(increase, number)
det(week, each)
obl:tmod(increase, week)
punct(begin, ,)
mark(swell, until)
case(last, at)
obl(swell, last)
nsubj(swell, it)
advcl(begin, swell)
case(proportion, to)
amod(proportion, such)
obl(swell, proportion)
mark(have, that)
det(policy, this)
punct(free, ``)
amod(policy, free)
punct(free, '')
compound(policy, audit)
nsubj(have, policy)
acl(proportion, have)
mark(retract, to)
aux:pass(retract, be)
xcomp(have, retract)
punct(need, .)
case(that, after)
obl(begin, that)
punct(begin, ,)
nsubj(begin, we)
root(ROOT, begin)
mark(get, to)
xcomp(begin, get)
punct(visitor, ``)
obj(get, visitor)
punct(visitor, '')
mark(class, to)
obl(get, class)
punct(begin, .)
det(class, this)
amod(class, experimental)
nsubj(represent, class)
parataxis(begin, represent)
det:predet(variety, quite)
det(variety, a)
obj(represent, variety)
case(student, of)
nmod(variety, student)
punct(begin, .)
nsubj(range, it)
root(ROOT, range)
case(woman, from)
det(woman, a)
amod(woman, freshman)
obl(range, woman)
punct(woman, ,)
advmod(marry, just)
acl(woman, marry)
punct(range, ,)
case(stage, through)
det(stage, the)
amod(stage, various)
amod(stage, academic)
compound(stage, growth)
obl(marry, stage)
punct(stage, ,)
case(student, include)
nummod(student, one)
amod(student, senior)
punct(graduate, -)
compound(student, graduate)
nmod(stage, student)
punct(student, ,)
case(member, to)
det(member, a)
amod(member, young)
compound(member, faculty)
nmod(student, member)
advmod(marry, recently)
acl(member, marry)
case(man, to)
det(man, a)
amod(man, senior)
obl(marry, man)
nsubj(attend, who)
advmod(attend, also)
acl:relcl(man, attend)
punct(range, .)
nsubj(range, it)
root(ROOT, range)
case(those, from)
obl(range, those)
case(child, with)
det(child, no)
nmod(those, child)
punct(those, ,)
case(student, through)
obl(range, student)
case(stage, in)
amod(stage, various)
obl(range, stage)
case(pregnancy, of)
nmod(stage, pregnancy)
punct(range, ,)
case(male, to)
nummod(male, one)
nummod(year, 44)
punct(year, -)
obl:npmod(old, year)
punct(old, -)
amod(male, old)
obl(range, male)
case(child, with)
nummod(child, four)
nmod(male, child)
punct(child, ,)
nsubj(teenager, three)
case(whom, of)
nmod(three, whom)
cop(teenager, be)
acl:relcl(child, teenager)
punct(range, .)
nsubj(range, it)
root(ROOT, range)
case(woman, from)
nummod(woman, two)
obl(range, woman)
obl(range, member)
nsubj(experience, who)
aux(experience, have)
acl:relcl(member, experience)
amod(pregnancy, premarital)
obj(experience, pregnancy)
case(couple, to)
nummod(couple, one)
compound(year, couple)
nummod(year, twelve)
obl:npmod(marry, year)
xcomp(experience, marry)
cc(unable, and)
advmod(unable, seemingly)
conj(experience, unable)
mark(conceive, to)
xcomp(unable, conceive)
punct(range, .)
nsubj(digress, one)
aux(digress, might)
root(ROOT, digress)
case(point, at)
det(point, this)
obl(digress, point)
cc(speculate, and)
conj(digress, speculate)
mark(wise, that)
mark(wise, if)
nsubj(wise, it)
cop(wise, be)
punct(wise, ``)
advcl(speculate, wise)
punct(wise, '')
mark(create, to)
advcl(wise, create)
amod(section, special)
obj(create, section)
case(status, for)
amod(status, special)
nmod(section, status)
punct(section, ,)
advmod(section, then)
advmod(section, why)
advmod(section, not)
det(section, a)
amod(section, special)
appos(section, section)
case(woman, for)
nmod(section, woman)
amod(section, pregnant)
case(marriage, before)
obl(pregnant, marriage)
punct(one, ,)
cc(one, and)
conj(section, one)
case(man, for)
nummod(year, 44)
punct(year, -)
obl:npmod(old, year)
punct(old, -)
amod(man, old)
nmod(one, man)
case(child, with)
compound(child, teenage)
nmod(man, child)
punct(on, ,)
cc(on, and)
advmod(on, so)
conj(man, on)
punct(on, .)
nsubj(have, some)
case(speculation, of)
det(speculation, these)
nmod(some, speculation)
aux(have, may)
parataxis(on, have)
det(merit, some)
obj(have, merit)
punct(ambiguous, ,)
nsubj(ambiguous, other)
cop(ambiguous, be)
advmod(ambiguous, somewhat)
conj(have, ambiguous)
punct(digress, .)
cc(dispute, but)
nsubj(dispute, few)
nsubj(experience, who)
aux(experience, have)
acl:relcl(few, experience)
obj(experience, marriage)
aux(dispute, can)
root(ROOT, dispute)
det(fact, the)
obj(dispute, fact)
mark(different, that)
det(focus, the)
nsubj(different, focus)
case(relationship, of)
amod(relationship, interpersonal)
nmod(focus, relationship)
cop(different, be)
acl(fact, different)
case(marriage, in)
obl(different, marriage)
case(situation, than)
case(situation, in)
det(situation, a)
amod(situation, pre-marital)
obl(different, situation)
punct(dispute, .)
det(writer, the)
nsubj(begin, writer)
root(ROOT, begin)
det(class, this)
amod(class, special)
obj(begin, class)
mark(explain, by)
advcl(begin, explain)
nmod:poss(background, he)
obj(explain, background)
xcomp(explain, think)
mark(create, for)
advcl(think, create)
det:predet(section, such)
det(section, a)
obj(create, section)
case(place, in)
det(place, the)
amod(place, first)
obl(create, place)
punct(begin, .)
nsubj(make, he)
root(ROOT, make)
expl(make, it)
xcomp(make, clear)
case(beginning, from)
det(beginning, the)
obl(clear, beginning)
mark(opportunity, that)
nsubj(opportunity, this)
cop(opportunity, be)
det(student, the)
nmod:poss(opportunity, student)
case(student, 's)
acl(beginning, opportunity)
punct(depend, ,)
cc(depend, and)
mark(depend, that)
det(destiny, the)
amod(destiny, future)
nsubj(depend, destiny)
case(group, of)
amod(group, such)
nmod(destiny, group)
conj(opportunity, depend)
case(result, on)
amod(result, favorable)
obl(depend, result)
case(one, from)
det(one, this)
obl(depend, one)
punct(make, .)
nsubj(build, he)
aux(build, do)
root(ROOT, build)
det(framework, a)
obj(build, framework)
case(respectability, of)
amod(respectability, academic)
punct(respectability, ``)
nmod(framework, respectability)
punct(respectability, '')
punct(one, ,)
cc(one, and)
conj(framework, one)
nsubj(encroach, which)
aux(encroach, do)
advmod(encroach, not)
acl:relcl(one, encroach)
case(sovereignty, upon)
det(sovereignty, the)
punct(sovereignty, ``)
amod(sovereignty, sacred)
obl(encroach, sovereignty)
punct(sovereignty, '')
case(course, of)
det(course, any)
amod(course, other)
amod(course, exist)
compound(course, campus)
nmod(sovereignty, course)
punct(build, .)
nsubj(be, this)
root(ROOT, be)
mark(say, to)
ccomp(be, say)
mark(course, that)
nsubj(course, this)
cop(course, be)
advmod(course, not)
det(course, a)
ccomp(say, course)
case(method, in)
amod(method, wise)
compound(method, buying)
cc(money, or)
conj(buying, money)
compound(method, spending)
nmod(course, method)
punct(course, ,)
cc(course, nor)
det(course, a)
conj(course, course)
mark(raise, in)
advmod(raise, how)
mark(raise, to)
acl(course, raise)
obj(raise, child)
punct(be, .)
nsubj(have, we)
advmod(have, already)
root(ROOT, have)
obj(have, course)
acl(course, cover)
det(problem, those)
obj(cover, problem)
punct(on, ,)
cc(on, and)
advmod(on, so)
conj(have, on)
punct(have, .)
cc(allow, but)
case(framework, within)
det(framework, that)
obl(allow, framework)
nsubj(allow, he)
conj(have, allow)
case(flexibility, for)
advmod(much, as)
amod(flexibility, much)
obl(allow, flexibility)
mark(possible, as)
advcl(as, possible)
punct(have, . )
det(committee, a)
compound(committee, steering)
nsubj:pass(organize, committee)
case(student, of)
nmod(committee, student)
aux:pass(organize, be)
root(ROOT, organize)
case(day, on)
det(day, the)
amod(day, first)
obl(organize, day)
nmod:poss(duty, whose)
nsubj(be, duty)
nsubj(be, it)
acl:relcl(day, be)
mark(alert, to)
cop(alert, be)
xcomp(be, alert)
cc(evaluate, and)
advmod(evaluate, constantly)
conj(alert, evaluate)
cc(re-evaluate, and)
conj(evaluate, re-evaluate)
det(direction, the)
obj(re-evaluate, direction)
cc(pace, and)
conj(direction, pace)
det(class, the)
nsubj(take, class)
aux(take, be)
acl:relcl(direction, take)
punct(organize, .)
det(writer, the)
nsubj(insist, writer)
punct(writer, ,)
cop(cognizant, be)
acl(writer, cognizant)
case(interview, through)
nmod:poss(interview, he)
obl(cognizant, interview)
case(reaction, of)
det(reaction, the)
nmod(interview, reaction)
case(student, of)
amod(student, previous)
amod(student, marry)
nmod(reaction, student)
punct(insist, ,)
aux(insist, do)
root(ROOT, insist)
case(there, on)
obl(insist, there)
aux:pass(include, be)
advcl(insist, include)
det(material, some)
punct(material, ``)
compound(material, hindsight)
punct(material, '')
obj(include, material)
punct(insist, .)
cc(center, but)
det(part, the)
amod(part, greater)
nsubj:pass(center, part)
case(time, of)
compound(time, semester)
nmod(part, time)
aux:pass(center, be)
advmod(center, actually)
root(ROOT, center)
case(attitude, around)
det(attitude, the)
obl(center, attitude)
punct(center, :)
punct(center, ``)
advmod(marry, so)
nsubj:pass(marry, we)
aux:pass(marry, be)
root(ROOT, marry)
punct(marry, --)
advmod(make, now)
advmod(make, how)
aux(make, do)
nsubj(make, we)
parataxis(marry, make)
det(best, the)
obj(make, best)
case(it, of)
obl(best, it)
punct(make, '')
punct(marry, ?)
punct(marry, ?)
cc(make, or)
punct(marry, ``)
advmod(enrich, how)
aux(enrich, do)
nsubj(enrich, we)
root(ROOT, enrich)
nmod:poss(marriage, we)
advmod(fine, already)
amod(marriage, fine)
obj(enrich, marriage)
punct(marriage, '')
punct(enrich, ?)
punct(enrich, ?)
nsubj:pass(use, film)
aux:pass(use, be)
parataxis(enrich, use)
punct(use, ,)
case(section, as)
fixed(as, with)
det(section, all)
obl(use, section)
punct(difference, ,)
cc(difference, but)
case(difference, with)
nummod(difference, one)
amod(difference, big)
conj(section, difference)
punct(enrich, .)
nmod:poss(campus, we)
nsubj(own, campus)
punct(own, ,)
advmod(own, unfortunately)
punct(own, ,)
root(ROOT, own)
det(film, no)
obj(own, film)
punct(own, .)
mark(rent, since)
nsubj:pass(rent, they)
aux:pass(rent, be)
advmod(rent, all)
cc:preconj(rent, either)
advcl(have, rent)
cc(borrow, or)
conj(rent, borrow)
punct(have, ,)
det(date, the)
amod(date, request)
nsubj(have, date)
case(use, for)
nmod:poss(use, they)
nmod(date, use)
root(ROOT, have)
mark(far, to)
cop(far, be)
xcomp(have, far)
case(advance, in)
obl(far, advance)
punct(have, .)
det(writer, the)
nsubj(know, writer)
advmod(know, never)
root(ROOT, know)
case(week, from)
obl(know, week)
case(week, to)
nmod(week, week)
advmod(where, just)
advcl(know, where)
det(section, the)
nsubj(be, section)
aux(where, might)
cop(where, be)
punct(know, .)
case(example, for)
obl(announce, example)
punct(announce, ,)
det(committee, the)
compound(committee, steering)
nsubj(announce, committee)
aux(announce, might)
parataxis(know, announce)
mark(feel, that)
det(group, the)
nsubj(feel, group)
ccomp(announce, feel)
det(topic, a)
nsubj:pass(drop, topic)
case(study, under)
nmod(topic, study)
aux(drop, should)
advmod(drop, not)
aux:pass(drop, be)
ccomp(feel, drop)
case(week, for)
det(week, a)
amod(week, additional)
obl(drop, week)
mark(be, as)
expl(be, there)
advcl(drop, be)
advmod(be, still)
advmod(much, too)
nsubj(be, much)
case(it, of)
obl(much, it)
amod(much, untouched)
punct(know, .)
mark(establish, since)
det(writer, the)
nsubj(establish, writer)
aux(establish, have)
advcl(have, establish)
det(procedure, this)
amod(procedure, democratic)
obj(establish, procedure)
case(beginning, in)
det(beginning, the)
obl(establish, beginning)
nsubj(have, he)
root(ROOT, have)
mark(go, to)
xcomp(have, go)
advmod(go, along)
case(decision, with)
nmod:poss(decision, they)
obl(go, decision)
punct(go, --)
fixed(of, after)
punct(point, ,)
advmod(point, of)
fixed(of, course)
punct(point, ,)
advcl(have, point)
compound:prt(point, out)
mark(think, whether)
nsubj(think, he)
ccomp(point, think)
nmod:poss(decision, they)
nsubj(wise, decision)
cop(wise, be)
det(one, a)
amod(one, wise)
cc(one, or)
det(one, a)
amod(one, unwise)
ccomp(think, one)
punct(have, .)
advmod(context, thus)
det(film, the)
nsubj(context, film)
acl(film, see)
mark(come, as)
nsubj(come, they)
advcl(see, come)
advmod(come, in)
punct(coordinate, ()
advcl(come, coordinate)
case(section, for)
det(section, the)
amod(section, regular)
obl(coordinate, section)
punct(coordinate, ))
punct(context, ,)
cop(context, be)
advmod(context, often)
case(context, out)
case(context, of)
root(ROOT, context)
punct(context, .)
advmod(experience, nevertheless)
punct(experience, ,)
det(writer, the)
nsubj(experience, writer)
aux(experience, have)
advmod(experience, never)
root(ROOT, experience)
amod(spontaneity, such)
obj(experience, spontaneity)
case(discussion, of)
nmod(spontaneity, discussion)
case(showing, after)
compound(showing, film)
obl(experience, showing)
punct(experience, .)
mark(become, though)
expl(become, it)
aux(become, do)
advmod(become, not)
advcl(sprung, become)
xcomp(become, know)
case(writer, to)
det(writer, the)
obl(know, writer)
case(time, for)
det(time, some)
obl(know, time)
punct(sprung, ,)
det(group, a)
compound(group, nucleus)
nsubj(sprung, group)
aux(sprung, have)
root(ROOT, sprung)
compound:prt(sprung, up)
case(class, within)
det(class, the)
obl(sprung, class)
punct(sprung, .)
nsubj(begin, they)
root(ROOT, begin)
mark(meet, to)
xcomp(begin, meet)
case(evening, in)
det(evening, the)
obl(meet, evening)
cc(carry, and)
conj(meet, carry)
amod(discussion, forward)
amod(discussion, various)
obj(carry, discussion)
nsubj(feel, they)
conj(begin, feel)
advmod(fully, not)
advmod(enough, fully)
advmod(cover, enough)
xcomp(feel, cover)
case(class, in)
obl(cover, class)
punct(begin, .)
case(student, from)
det(student, a)
amod(student, few)
obl(increase, student)
det(group, this)
nsubj(increase, group)
advmod(increase, gradually)
root(ROOT, increase)
mark(include, to)
xcomp(increase, include)
case(fourth, over)
nummod(fourth, three)
punct(fourth, -)
obj(include, fourth)
case(those, of)
nmod(fourth, those)
advmod(enrol, officially)
acl(those, enrol)
case(class, in)
det(class, the)
obl(enrol, class)
punct(outsider, ,)
cc(outsider, and)
amod(outsider, many)
conj(those, outsider)
advmod(outsider, as)
fixed(as, well)
punct(increase, .)
advmod(report, also)
punct(report, ,)
mark(acquainted, although)
advmod(few, only)
det(few, a)
nsubj(acquainted, few)
case(student, of)
det(student, the)
nmod(few, student)
cop(acquainted, be)
advmod(acquainted, intimately)
advcl(report, acquainted)
case(other, with)
det(other, each)
obl(acquainted, other)
case(beginning, in)
det(beginning, the)
obl(acquainted, beginning)
punct(report, ,)
advmod(report, most)
root(ROOT, report)
mark(member, that)
mark(end, when)
det(semester, the)
nsubj(end, semester)
advcl(report, end)
nmod:poss(dearest, they)
obj(end, dearest)
cc(closest, and)
conj(dearest, closest)
compound(friendship, campus)
nsubj(member, friendship)
cop(member, be)
case(member, with)
conj(end, member)
case(class, of)
det(class, that)
nmod(member, class)
punct(report, .)
case(fact, in)
obl(revamp, fact)
punct(revamp, ,)
nsubj(revamp, they)
advmod(revamp, often)
root(ROOT, revamp)
nmod:poss(activity, they)
amod(activity, social)
obj(revamp, activity)
mark(include, to)
advcl(revamp, include)
compound(member, class)
obj(include, member)
advmod(unknown, previously)
xcomp(include, unknown)
punct(revamp, .)
parataxis(revamp, Supplemental)
mark(handle, outside)
compound(report, reading)
nsubj:pass(handle, report)
aux:pass(handle, be)
acl(Supplemental, handle)
advmod(section, just)
case(section, as)
case(section, in)
det(section, the)
amod(section, other)
obl(handle, section)
punct(difference, ,)
det(difference, the)
amod(difference, major)
parataxis(revamp, difference)
acl(difference, be)
mark(be, that)
expl(be, there)
ccomp(be, be)
det(level, a)
advmod(deeper, noticeably)
amod(level, deeper)
nsubj(be, level)
case(report, in)
det(report, the)
acl(level, report)
mark(reading, outside)
obl(report, reading)
case(group, by)
det(group, the)
amod(group, marry)
obl(reading, group)
punct(revamp, .)
det(student, these)
nsubj(read, student)
punct(read, ,)
mark(read, although)
nsubj(read, they)
aux(read, might)
root(ROOT, read)
amod(article, various)
obj(read, article)
case(magazine, in)
amod(magazine, popular)
nmod(article, magazine)
punct(choose, ,)
advmod(often, more)
advmod(choose, often)
conj(read, choose)
mark(report, to)
xcomp(choose, report)
case(article, on)
obl(report, article)
acl(article, find)
case(journal, in)
det(journal, the)
obl(find, journal)
punct(choose, .)
case(addition, in)
obl(be, addition)
case(difference, to)
det(difference, the)
amod(difference, noticeable)
nmod(addition, difference)
case(article, in)
amod(article, outside)
nmod(difference, article)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(difference, a)
amod(difference, considerable)
nsubj(be, difference)
case(book, in)
det(book, the)
amod(book, outside)
nmod(difference, book)
nsubj(read, they)
acl:relcl(book, read)
punct(book, .)
mark(expect, whereas)
det(percentage, a)
amod(percentage, high)
nsubj:pass(expect, percentage)
case(student, of)
det(student, the)
amod(student, regular)
nmod(percentage, student)
aux(expect, can)
aux:pass(expect, be)
advcl(be, expect)
mark(read, to)
xcomp(expect, read)
amod(text, other)
obj(read, text)
nsubj(plow, which)
advmod(plow, more)
cc(less, or)
conj(more, less)
acl:relcl(text, plow)
det(ground, the)
amod(ground, same)
obj(plow, ground)
case(direction, in)
det(direction, a)
amod(direction, little)
amod(direction, different)
obl(plow, direction)
punct(choose, ,)
det(student, the)
amod(student, marry)
nsubj(choose, student)
parataxis(plow, choose)
amod(book, whole)
obj(choose, book)
case(area, on)
amod(area, specific)
nmod(book, area)
cc(go, and)
conj(choose, go)
case(detail, into)
advmod(greater, much)
amod(detail, greater)
obl(go, detail)
case(area, in)
nmod:poss(area, they)
obl(go, area)
case(interest, of)
nmod(area, interest)
punct(be, .)
mark(notice, since)
det(writer, the)
nsubj(notice, writer)
aux(notice, have)
advmod(notice, not)
advcl(conclude, notice)
det(characteristic, this)
obj(notice, characteristic)
case(student, in)
amod(student, marry)
obl(notice, student)
acl(student, scatter)
case(section, throughout)
det(section, the)
amod(section, various)
obl(scatter, section)
amod(section, previous)
case(experiment, to)
det(experiment, this)
obl(previous, experiment)
punct(matter, ,)
cc(matter, nor)
punct(matter, ,)
case(matter, as)
det(matter, a)
obl(notice, matter)
case(fact, of)
nmod(matter, fact)
punct(those, ,)
case(those, in)
nmod(matter, those)
nsubj(continue, who)
aux(continue, be)
acl:relcl(those, continue)
case(section, in)
punct(section, ``)
amod(section, single)
obl(continue, section)
punct(section, '')
punct(conclude, ,)
nsubj(conclude, he)
aux(conclude, can)
advmod(conclude, only)
root(ROOT, conclude)
mark(be, that)
expl(be, there)
aux(be, must)
aux(be, have)
ccomp(conclude, be)
nsubj(be, something)
punct(contagious, ``)
amod(something, contagious)
punct(contagious, '')
case(group, within)
det(group, the)
amod(group, specific)
obl(contagious, group)
nsubj(cause, which)
acl:relcl(group, cause)
obj(cause, this)
mark(occur, to)
xcomp(cause, occur)
punct(conclude, .)
case(main, in)
det(main, the)
obl(take, main)
punct(take, ,)
det(course, this)
nsubj(take, course)
root(ROOT, take)
det(road, the)
amod(road, follow)
amod(road, directional)
amod(road, high)
obj(take, road)
punct(take, . )
punct(1, ()
nummod(spend, 1)
punct(1, ))
det(deal, a)
amod(deal, great)
nsubj:pass(spend, deal)
case(time, of)
nmod(deal, time)
aux:pass(spend, be)
parataxis(take, spend)
case(process, on)
obl(spend, process)
mark(solving, for)
acl(process, solving)
amod(difference, marital)
obj(solving, difference)
punct(take, .)
nsubj(search, this)
cop(search, be)
advmod(search, not)
det(search, a)
root(ROOT, search)
case(formula, for)
det(formula, a)
punct(formula, ``)
compound(formula, magic)
nmod(search, formula)
punct(formula, '')
punct(examination, ,)
cc(examination, but)
cc(examination, rather)
det(examination, a)
conj(search, examination)
case(principle, of)
amod(principle, basic)
nmod(examination, principle)
acl(principle, pertain)
advmod(type, especially)
case(type, to)
det(type, all)
obl(pertain, type)
case(communication, of)
nmod(type, communication)
case(marriage, in)
nmod(communication, marriage)
punct(search, .)
case(short, in)
obl(center, short)
punct(center, ,)
nsubj:pass(center, it)
aux:pass(center, be)
root(ROOT, center)
mark(learn, around)
advcl(center, learn)
advmod(develop, how)
mark(develop, to)
ccomp(learn, develop)
det(empathy, a)
advmod(sensitive, more)
amod(empathy, sensitive)
obj(develop, empathy)
punct(center, .)
advmod(willing, not)
mark(satisfied, until)
det(group, the)
nsubj(satisfied, group)
cop(satisfied, be)
advcl(willing, satisfied)
case(area, in)
det(area, this)
obl(satisfied, area)
cop(willing, be)
nsubj(willing, they)
root(ROOT, willing)
mark(venture, to)
xcomp(willing, venture)
advmod(venture, further)
case(2, to)
punct(2, ()
obl(venture, 2)
punct(2, ))
punct(area, ,)
amod(area, Specific)
compound(area, adjustment)
obl(venture, area)
punct(area, ,)
case(sex, such)
fixed(such, as)
nmod(area, sex)
punct(sex, ,)
case(law, in)
punct(law, -)
conj(sex, law)
punct(religion, ,)
conj(sex, religion)
punct(finance, ,)
conj(sex, finance)
punct(on, ,)
cc(on, and)
advmod(on, so)
conj(sex, on)
punct(on, .)
case(here, from)
nmod(sex, here)
nsubj(proceed, they)
acl:relcl(here, proceed)
obl(proceed, to)
punct(3, ()
nummod(proceed, 3)
punct(3, ))
det(area, these)
amod(area, same)
nsubj(develop, area)
case(relation, in)
nmod(area, relation)
case(stage, to)
nmod:poss(stage, they)
amod(stage, own)
amod(stage, future)
compound(stage, family)
compound(stage, life)
nmod(relation, stage)
punct(develop, ,)
root(ROOT, develop)
obj(develop, these)
case(extent, to)
det(extent, the)
obl(develop, extent)
mark(examine, of)
acl(extent, examine)
amod(crise, various)
obj(examine, crise)
nsubj:pass(expect, which)
aux(expect, could)
aux:pass(expect, be)
acl:relcl(crise, expect)
mark(confront, to)
xcomp(expect, confront)
obj(confront, they)
case(time, at)
det(time, some)
obl(confront, time)
cc(other, or)
conj(time, other)
punct(develop, .)
case(example, as)
det(example, a)
obl(be, example)
case(facet, of)
det(facet, this)
amod(facet, last)
nmod(example, facet)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(discussion, some)
amod(discussion, lengthy)
nsubj(be, discussion)
acl(discussion, center)
case(bereavement, around)
obl(center, bereavement)
punct(concerned, .)
advmod(concerned, mainly)
nsubj(concerned, these)
cop(concerned, be)
parataxis(be, concerned)
case(possibility, with)
det(possibility, the)
obl(concerned, possibility)
case(death, of)
det(death, the)
nmod(possibility, death)
case(parent, of)
nummod(parent, one)
nmod(death, parent)
cc(complication, and)
det(complication, the)
conj(death, complication)
mark(live, of)
acl(complication, live)
case(survivor, with)
det(survivor, the)
obl(live, survivor)
advmod(live, afterward)
punct(overlook, ,)
cc(overlook, but)
det(death, the)
amod(death, possible)
nsubj:pass(overlook, death)
case(spouse, of)
nmod:poss(spouse, one)
case(one, 's)
amod(spouse, own)
nmod(death, spouse)
aux:pass(overlook, be)
advmod(overlook, not)
conj(concerned, overlook)
punct(be, .)
case(course, since)
det(course, the)
obl(lose, course)
punct(lose, ,)
nummod(member, one)
nsubj(lose, member)
aux(lose, have)
root(ROOT, lose)
nmod:poss(husband, she)
obj(lose, husband)
punct(lose, .)
nsubj(thing, this)
cop(thing, be)
advmod(thing, not)
det(thing, a)
advmod(shocking, particularly)
amod(thing, shocking)
cc(unexpected, or)
conj(shocking, unexpected)
root(ROOT, thing)
punct(thing, --)
nsubj:pass(know, it)
aux:pass(know, be)
advmod(know, previously)
parataxis(thing, know)
case(she, to)
obl(know, she)
mark(happen, that)
nsubj(happen, it)
aux(happen, might)
ccomp(know, happen)
punct(thing, .)
cc(happen, but)
advmod(unknown, just)
mark(unknown, when)
cop(unknown, be)
det(unknown, a)
advcl(happen, unknown)
punct(happen, ,)
cc(happen, and)
advmod(longer, of)
fixed(of, course)
mark(longer, the)
advmod(happen, longer)
nsubj(happen, it)
aux(happen, do)
advmod(happen, not)
advcl(stronger, happen)
punct(stronger, ,)
det(wish, the)
root(ROOT, stronger)
nmod:poss(wish, she)
nsubj(stronger, wish)
cc(belief, and)
conj(wish, belief)
mark(might, that)
nsubj(might, it)
advcl(stronger, might)
advmod(might, not)
punct(stronger, .)
mark(report, since)
nmod:poss(bereavement, she)
nsubj(report, bereavement)
det(individual, this)
nsubj(report, individual)
aux(report, have)
advcl(bring, report)
case(writer, to)
det(writer, the)
obl(report, writer)
case(occasion, on)
amod(occasion, numerous)
nmod(writer, occasion)
mark(helpful, about)
advmod(helpful, how)
advcl(report, helpful)
det(discussion, the)
compound(discussion, class)
nsubj(helpful, discussion)
cop(helpful, be)
case(she, to)
obl(helpful, she)
case(crisis, in)
det(crisis, this)
compound(crisis, adjustment)
nmod(she, crisis)
punct(bring, .)
det(member, Quite)
advmod(class, frequently)
compound(member, class)
nsubj(bring, member)
root(ROOT, bring)
obj(bring, question)
case(mate, from)
nmod:poss(mate, they)
obl(bring, mate)
case(home, at)
obl(bring, home)
punct(bring, .)
nsubj:pass(write, these)
aux:pass(write, be)
advmod(write, often)
advmod(write, carefully)
root(ROOT, write)
compound:prt(write, out)
case(deal, with)
det(deal, a)
amod(deal, great)
obl(write, deal)
mark(think, of)
acl(deal, think)
case(they, behind)
obl(think, they)
punct(write, .)
nsubj(add, this)
root(ROOT, add)
det(zest, a)
amod(zest, personal)
obj(add, zest)
case(discussion, to)
compound(discussion, class)
nmod(zest, discussion)
cc(participation, and)
conj(discussion, participation)
punct(add, .)
det(sex, both)
nsubj(report, sex)
root(ROOT, report)
mark(enlightening, that)
det(discussion, the)
nsubj(enlightening, discussion)
case(adjustment, on)
compound(adjustment, sex)
nmod(discussion, adjustment)
case(marriage, within)
nmod(adjustment, marriage)
cop(enlightening, be)
advmod(enlightening, extremely)
ccomp(report, enlightening)
punct(report, .)
det(writer, the)
nsubj(sense, writer)
root(ROOT, sense)
det(discussion, a)
advmod(freer, much)
amod(discussion, freer)
cc(more, and)
conj(freer, more)
compound(discussion, frank)
obj(sense, discussion)
punct(discussion, ,)
advmod(area, especially)
case(area, of)
det(area, this)
nummod(area, one)
obl(sense, area)
punct(sense, ,)
case(ever, than)
obl(sense, ever)
advmod(ever, before)
punct(sense, .)
nsubj(feel, he)
root(ROOT, feel)
xcomp(feel, certain)
case(time, for)
det(time, the)
amod(time, first)
obl(feel, time)
case(experience, in)
nmod:poss(experience, he)
compound(experience, teaching)
nmod(time, experience)
mark(understand, that)
det(man, the)
nsubj(understand, man)
case(class, in)
det(class, the)
nmod(man, class)
acl(experience, understand)
det(orgasm, that)
obj(understand, orgasm)
punct(understand, ,)
case(criterion, as)
det(criterion, a)
obl(understand, criterion)
punct(essential, ,)
cop(essential, be)
advmod(essential, not)
advmod(so, nearly)
advmod(essential, so)
conj(understand, essential)
case(experience, for)
det(experience, a)
amod(experience, satisfy)
amod(experience, female)
amod(experience, sexual)
obl(essential, experience)
mark(think, as)
amod(male, most)
nsubj(think, male)
aux(think, might)
advcl(essential, think)
punct(feel, .)
nsubj(meaningful, this)
cop(meaningful, be)
advmod(meaningful, probably)
advmod(more, much)
advmod(meaningful, more)
root(ROOT, meaningful)
mark(emphasize, because)
det:predet(woman, all)
det(woman, the)
nsubj(emphasize, woman)
case(class, in)
det(class, the)
nmod(woman, class)
advcl(meaningful, emphasize)
obj(emphasize, it)
obj(emphasize, time)
cc(again, and)
conj(time, again)
punct(meaningful, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(appear, hand)
punct(appear, ,)
det(member, the)
compound(member, woman)
compound(member, class)
nsubj(appear, member)
root(ROOT, appear)
mark(reach, to)
xcomp(appear, reach)
det(understanding, a)
advmod(greater, far)
amod(understanding, greater)
obj(reach, understanding)
mark(have, than)
advcl(reach, have)
compound(member, woman)
obj(have, member)
case(section, in)
amod(section, other)
obl(have, section)
mark(natural, that)
nsubj(natural, it)
cop(natural, be)
advmod(natural, more)
ccomp(have, natural)
case(male, for)
obl(natural, male)
case(group, as)
det(group, a)
obl(natural, group)
mark(view, to)
acl(group, view)
obj(view, sex)
case(sex, as)
obl(view, sex)
cc(associate, rather)
fixed(rather, than)
advmod(associate, always)
conj(view, associate)
obj(associate, it)
case(love, with)
obl(associate, love)
mark(seem, as)
amod(woman, most)
nsubj(seem, woman)
advcl(associate, seem)
mark(do, to)
xcomp(seem, do)
punct(appear, .)
case(area, in)
det(area, the)
amod(area, reproductive)
obl(observe, area)
nsubj:pass(observe, it)
aux(observe, could)
aux:pass(observe, be)
advmod(observe, readily)
root(ROOT, observe)
mark(feel, that)
nsubj(feel, all)
ccomp(observe, feel)
xcomp(feel, freer)
mark(discuss, to)
advcl(freer, discuss)
obj(discuss, thing)
mark(have, than)
nsubj(have, student)
aux(previously, have)
advmod(section, previously)
case(section, in)
punct(mix, ``)
amod(section, mix)
punct(mix, '')
amod(status, marital)
compound(section, status)
obl(discuss, section)
punct(observe, .)
advmod(related, perhaps)
nsubj(related, this)
cop(related, be)
root(ROOT, related)
case(fact, to)
det(fact, the)
obl(related, fact)
mark(in, that)
nsubj(in, all)
cop(in, be)
acl(fact, in)
case(it, on)
obl(in, it)
case(extent, to)
det(extent, some)
obl(in, extent)
punct(related, .)
advmod(be, never)
case(section, in)
amod(section, other)
obl(be, section)
aux(be, have)
expl(be, there)
root(ROOT, be)
det(opportunity, the)
nsubj(be, opportunity)
case(discussion, for)
det(discussion, the)
amod(discussion, genuine)
compound(discussion, down)
punct(earth, -)
case(earth, to)
punct(earth, -)
nmod(down, earth)
nmod(opportunity, discussion)
case(feeling, about)
det(feeling, the)
nmod(discussion, feeling)
case(spouse, of)
det(spouse, both)
nmod(feeling, spouse)
case(stage, during)
amod(stage, various)
nmod(feeling, stage)
case(pregnancy, of)
nmod(stage, pregnancy)
punct(be, .)
expl(be, there)
root(ROOT, be)
det(opportunity, a)
advmod(marvelous, particularly)
amod(opportunity, marvelous)
nsubj(be, opportunity)
case(study, for)
nmod(opportunity, study)
case(area, in)
det(area, this)
nmod(opportunity, area)
mark(represent, since)
advmod(stage, almost)
det(stage, every)
nsubj:pass(represent, stage)
case(pregnancy, of)
nmod(stage, pregnancy)
aux:pass(represent, be)
advcl(be, represent)
punct(represent, ,)
case(couple, from)
det(couple, a)
amod(couple, childless)
obl(represent, couple)
nmod(couple, to)
cc(include, and)
case(trimester, include)
det(trimester, every)
nmod(couple, trimester)
punct(be, .)
case(fact, in)
obl(have, fact)
punct(have, ,)
nsubj(have, we)
root(ROOT, have)
nummod(birth, one)
obj(have, birth)
case(end, before)
det(end, the)
obl(have, end)
case(course, of)
det(course, the)
nmod(end, course)
punct(have, ,)
cc(have, and)
det(student, another)
nsubj(have, student)
conj(have, have)
mark(take, to)
xcomp(have, take)
det(examiantion, the)
amod(examiantion, final)
obj(take, examiantion)
det(week, a)
obl:npmod(early, week)
advmod(take, early)
punct(take, ,)
advmod(side, just)
mark(side, to)
cop(side, be)
case(side, on)
det(side, the)
amod(side, safe)
advcl(take, side)
punct(have, .)
expl(be, there)
root(ROOT, be)
advmod(be, also)
nummod(abortion, one)
amod(abortion, spontaneous)
nsubj(be, abortion)
case(semester, during)
det(semester, the)
obl(be, semester)
punct(be, .)
advmod(reasonable, thus)
expl(reasonable, it)
cop(reasonable, be)
root(ROOT, reasonable)
mark(believe, to)
csubj(reasonable, believe)
mark(be, that)
expl(be, there)
ccomp(believe, be)
det(difference, a)
amod(difference, significant)
nsubj(be, difference)
case(group, between)
det(group, the)
nummod(group, two)
nmod(difference, group)
case(performance, in)
nmod:poss(performance, they)
nmod(group, performance)
case(task, on)
det(task, this)
nmod(performance, task)
case(experience, after)
det(experience, a)
amod(experience, brief)
punct(experience, ``)
compound(experience, structuring)
punct(experience, '')
obl(be, experience)
punct(reasonable, .)
nsubj:pass(predict, it)
aux:pass(predict, be)
root(ROOT, predict)
mark(adhere, that)
compound(subject, Kohnstamm)
punct(negative, -)
amod(subject, negative)
nsubj(adhere, subject)
aux(adhere, would)
ccomp(predict, adhere)
case(report, to)
advmod(liberal, more)
amod(report, liberal)
punct(report, ,)
amod(report, concretistic)
obl(adhere, report)
case(what, of)
nmod(report, what)
det(figure, the)
amod(figure, ambiguous)
nsubj(look, figure)
punct(look, ``)
acl:relcl(what, look)
mark(reflect, like)
punct(reflect, '')
mark(reflect, as)
advcl(look, reflect)
nmod:poss(hesitancy, they)
obj(reflect, hesitancy)
mark(take, about)
acl(hesitancy, take)
obj(take, chance)
punct(predict, .)
nsubj(true, this)
cop(true, be)
root(ROOT, true)
advmod(subject, mostly)
case(subject, of)
det(subject, those)
obl:npmod(negative, Kohnstamm)
punct(negative, -)
amod(subject, negative)
obl(true, subject)
nsubj(perceive, who)
aux(perceive, do)
advmod(perceive, not)
acl:relcl(subject, perceive)
det(figure, the)
amod(figure, ambiguous)
obj(perceive, figure)
case(people, as)
obl(perceive, people)
case(action, in)
nmod(people, action)
punct(true, .)
nsubj(characteristic, response)
case(rope, such)
fixed(such, as)
punct(rope, ``)
nmod(response, rope)
case(loop, with)
det(loop, a)
nmod(rope, loop)
case(it, in)
nmod(loop, it)
punct(loop, '')
punct(piece, ,)
cc(piece, and)
punct(piece, ``)
nummod(piece, two)
conj(rope, piece)
case(rope, of)
nmod(piece, rope)
punct(piece, '')
punct(characteristic, ,)
cop(characteristic, be)
advmod(characteristic, quite)
root(ROOT, characteristic)
punct(characteristic, .)
compound(Martin, Guilford)
punct(Martin, -)
compound(inventory, Martin)
compound(inventory, personality)
obj(characteristic, inventory)
punct(characteristic, .)
det(inventory, the)
nummod(inventory, three)
compound(inventory, personality)
nsubj:pass(fill, inventory)
punct(Guilford, ()
appos(inventory, Guilford)
punct(Guilford, ;)
punct(inventory, ;)
appos(Guilford, Guilford)
punct(inventory, -)
appos(inventory, Martin)
punct(Guilford, ;)
punct(Guilford, ;)
appos(Martin, Guilford)
punct(Guilford, -)
flat(Guilford, Martin)
punct(Guilford, ))
aux:pass(fill, be)
root(ROOT, fill)
compound:prt(fill, out)
case(12, by)
obl(fill, 12)
case(subject, of)
det(subject, the)
obl:npmod(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
nmod(12, subject)
cc(19, and)
conj(subject, 19)
case(subject, of)
det(subject, the)
obl:npmod(negative, Kohnstamm)
punct(negative, -)
amod(subject, negative)
nmod(19, subject)
punct(fill, .)
nsubj(subject, these)
cop(subject, be)
det(subject, the)
amod(subject, same)
root(ROOT, subject)
nsubj:pass(give, who)
aux:pass(give, be)
acl:relcl(subject, give)
det(test, the)
compound(test, Rorschach)
obj(give, test)
punct(subject, .)
det(prediction, some)
nsubj:pass(make, prediction)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
case(factor, concern)
obl(make, factor)
aux:pass(make, R)
punct(N, ,)
appos(factor, N)
punct(I, ,)
conj(N, I)
cc(co, and)
conj(N, co)
case(inventory, on)
det(inventory, these)
obl(make, inventory)
nsubj(appear, which)
acl:relcl(factor, appear)
mark(related, to)
cop(related, be)
advmod(related, directly)
xcomp(appear, related)
case(control, to)
obl(related, control)
cc(aspect, and)
compound(aspect, security)
conj(control, aspect)
case(function, of)
compound(function, personality)
nmod(aspect, function)
nsubj:pass(hypothesize, which)
aux:pass(hypothesize, be)
acl:relcl(function, hypothesize)
mark(importance, as)
cop(importance, be)
case(importance, of)
advcl(hypothesize, importance)
case(reactivity, in)
amod(reactivity, differential)
compound(reactivity, Kohnstamm)
nmod(importance, reactivity)
punct(make, .)
root(ROOT, only)
nsubj(differentiate, co)
root(ROOT, differentiate)
case(group, between)
det(group, the)
nummod(group, two)
obl(differentiate, group)
case(level, at)
advmod(level, less)
fixed(less, than)
det(level, the)
nummod(%, 5)
compound(level, %)
obl(differentiate, level)
punct(Af, ()
appos(level, Af)
punct(Af, ))
punct(differentiate, .)
nummod(prediction, one)
nsubj:pass(make, prediction)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
case(difference, about)
det(difference, the)
obl(make, difference)
case(security, in)
nmod(difference, security)
cc(confidence, or)
compound(confidence, self)
punct(confidence, -)
conj(security, confidence)
case(subject, between)
det(subject, those)
nmod(difference, subject)
nsubj(shift, who)
acl:relcl(subject, shift)
nmod:poss(reactivity, they)
compound(reactivity, Kohnstamm)
obj(shift, reactivity)
mark(inform, when)
advcl(shift, inform)
cc(those, and)
conj(inform, those)
nsubj(do, who)
acl:relcl(those, do)
advmod(do, not)
punct(make, .)
det(nonreactor, the)
nsubj:pass(separate, nonreactor)
aux(separate, have)
aux:pass(separate, be)
root(ROOT, separate)
case(group, into)
nummod(group, two)
obl(separate, group)
case(assumption, on)
det(assumption, this)
nmod(group, assumption)
case(nonreactor, with)
det(nonreactor, the)
advmod(secure, presumably)
punct(nonreactor, ``)
amod(nonreactor, secure)
punct(nonreactor, '')
nmod(group, nonreactor)
cc(reactor, and)
punct(reactor, ``)
amod(reactor, secure)
punct(reactor, '')
conj(nonreactor, reactor)
aux:pass(use, be)
acl(reactor, use)
case(group, as)
det(group, the)
obl(use, group)
case(study, for)
amod(study, comparative)
compound(study, personality)
nmod(group, study)
punct(separate, .)
nsubj:pass(predict, it)
aux:pass(predict, be)
root(ROOT, predict)
mark(differ, that)
nsubj(differ, those)
nsubj(shift, who)
acl:relcl(those, shift)
case(reactivity, in)
nmod:poss(reactivity, they)
amod(reactivity, Kohnstamm)
obl(shift, reactivity)
aux(differ, would)
ccomp(predict, differ)
advmod(differ, significantly)
case(those, from)
obl(differ, those)
nsubj(factor, who)
aux(factor, do)
advmod(factor, not)
case(factor, on)
det(factor, the)
acl:relcl(those, factor)
nsubj(refer, I)
obl(refer, which)
det(investigator, the)
nsubj(refer, investigator)
acl:relcl(factor, refer)
case(which, to)
case(the, as)
obl(refer, the)
punct(predict, ``)
compound(factor, inferiority)
punct(factor, '')
root(ROOT, factor)
punct(factor, .)
nsubj:pass(compare, all)
case(subject, of)
det(subject, the)
nmod(all, subject)
case(negative, in)
det(negative, the)
compound(negative, Kohnstamm)
punct(negative, -)
nmod(subject, negative)
cc(group, and)
obl:npmod(positive, Kohnstamm)
punct(positive, -)
amod(group, positive)
nmod(all, group)
punct(define, ()
mark(define, as)
acl(group, define)
case(purpose, for)
obl(define, purpose)
case(study, of)
det(study, the)
compound(study, personality)
nmod(purpose, study)
punct(define, ))
aux:pass(compare, be)
root(ROOT, compare)
case(subject, with)
det(subject, those)
obl(compare, subject)
nsubj(shift, who)
acl:relcl(subject, shift)
case(condition, in)
obl(shift, condition)
nummod(condition, 3)
punct(4, ,)
cc(4, or)
conj(condition, 4)
punct(compare, . )
det(test, a)
compound(test, t)
nsubj(give, test)
case(group, on)
det(group, these)
nummod(group, two)
nmod(test, group)
punct(group, ,)
appos(group, shifter)
case(nonshifter, vs.)
nmod(shifter, nonshifter)
punct(give, ,)
root(ROOT, give)
det(value, a)
punct(value, ``)
compound(value, t)
punct(value, '')
obj(give, value)
case(2.405, of)
nmod(value, 2.405)
nsubj(significant, which)
cop(significant, be)
acl:relcl(value, significant)
case(test, on)
det(test, the)
nummod(tail, two)
punct(tail, -)
compound(test, tail)
obl(significant, test)
case(level, at)
det(level, the)
nmod(test, level)
punct(difference, .)
compound(difference, discussion)
amod(difference, individual)
compound(difference, difference)
amod(difference, Individual)
nsubj:pass(find, difference)
case(reactivity, in)
compound(reactivity, Kohnstamm)
nmod(difference, reactivity)
case(situation, to)
amod(situation, control)
compound(situation, Kohnstamm)
nmod(reactivity, situation)
aux:pass(find, be)
parataxis(give, find)
case(subject, among)
det(subject, the)
obl(find, subject)
acl(subject, use)
case(study, in)
det(study, the)
obl(use, study)
punct(find, .)
advmod(%, only)
nummod(%, 27)
nsubj(give, %)
punct(subject, ()
nummod(subject, 11)
appos(%, subject)
punct(subject, ))
root(ROOT, give)
det(reaction, a)
amod(reaction, positive)
compound(reaction, Kohnstamm)
obj(give, reaction)
mark(naive, when)
advmod(naive, completely)
advcl(give, naive)
case(phenomenon, concern)
det(phenomenon, the)
obl(naive, phenomenon)
punct(give, .)
expl(be, there)
root(ROOT, be)
nummod(%, 49)
nsubj(be, %)
punct(subject, ()
nummod(subject, 20)
appos(%, subject)
punct(subject, ))
nsubj(give, who)
aux(give, do)
advmod(give, not)
acl:relcl(%, give)
det(reaction, a)
amod(reaction, positive)
obj(give, reaction)
advmod(inform, even)
mark(inform, after)
nsubj:pass(inform, they)
aux:pass(inform, be)
advcl(give, inform)
case(normalcy, of)
det(normalcy, the)
obl(inform, normalcy)
case(reaction, of)
det:predet(reaction, such)
det(reaction, a)
nmod(normalcy, reaction)
cc(give, and)
aux(give, have)
aux:pass(give, be)
conj(inform, give)
det(demonstration, a)
obj(give, demonstration)
punct(be, .)
expl(be, there)
root(ROOT, be)
nummod(%, 24)
nsubj(be, %)
punct(subject, ()
nummod(subject, 10)
appos(%, subject)
punct(subject, ))
nsubj(shift, who)
acl:relcl(%, shift)
case(negative, from)
det(negative, a)
obl(shift, negative)
case(reaction, to)
det(reaction, a)
amod(reaction, positive)
nmod(negative, reaction)
mark(reassure, after)
nsubj:pass(reassure, they)
aux:pass(reassure, be)
advcl(shift, reassure)
case(normalcy, as)
fixed(as, to)
det(normalcy, the)
obl(reassure, normalcy)
case(reaction, of)
det(reaction, the)
compound(positive, Kohnstamm)
punct(positive, -)
amod(reaction, positive)
nmod(normalcy, reaction)
punct(be, .)
case(group, among)
det(group, this)
amod(group, latter)
obl(be, group)
expl(be, there)
parataxis(be, be)
advmod(be, also)
nsubj(be, difference)
case(amount, in)
det(amount, the)
nmod(difference, amount)
cc(kind, and)
conj(amount, kind)
case(information, of)
nmod(kind, information)
amod(information, necessary)
mark(occur, before)
det(shift, a)
nsubj(occur, shift)
case(reaction, in)
nmod(shift, reaction)
advcl(necessary, occur)
punct(be, .)
nummod(subject, one)
nsubj(change, subject)
root(ROOT, change)
mark(give, when)
case(information, give)
advmod(information, only)
det(information, the)
obl(change, information)
obj(have, that)
det(people, some)
nsubj(have, people)
acl:relcl(information, have)
obj(have, something)
ccomp(have, happen)
case(arm, to)
nmod:poss(arm, they)
obl(happen, arm)
mark(relax, when)
nsubj(relax, they)
advcl(happen, relax)
punct(change, .)
nummod(subject, five)
nsubj(change, subject)
punct(%, ()
nummod(%, 12)
appos(subject, %)
punct(%, ))
aux(change, do)
advmod(change, not)
root(ROOT, change)
mark(tell, until)
nsubj:pass(tell, they)
aux(tell, have)
aux:pass(tell, be)
advcl(change, tell)
mark(have, that)
det(people, some)
nsubj(have, people)
ccomp(tell, have)
obj(have, something)
acl(something, happen)
case(arm, to)
nmod:poss(arm, they)
obl(happen, arm)
punct(what, ,)
parataxis(have, what)
mark(what, that)
nsubj(be, something)
cop(what, be)
punct(give, ,)
cc(give, and)
advmod(give, also)
aux:pass(give, be)
conj(what, give)
det(demonstration, a)
obj(give, demonstration)
punct(subject, .)
nummod(subject, four)
nsubj(change, subject)
punct(%, ()
nummod(%, 10)
appos(subject, %)
punct(%, ))
aux(change, do)
advmod(change, not)
appos(demonstration, change)
advmod(change, even)
advmod(change, then)
cc(need, but)
conj(change, need)
det(information, the)
amod(information, additional)
obj(need, information)
nsubj(reaction, that)
det(arm-elevation, a)
nsubj(reaction, arm-elevation)
case(circumstance, under)
det(circumstance, these)
nmod(arm-elevation, circumstance)
cop(reaction, be)
det(reaction, a)
advmod(normal, perfectly)
amod(reaction, normal)
compound(reaction, reflex)
acl:relcl(information, reaction)
obj(show, which)
det(people, some)
nsubj(show, people)
acl:relcl(reaction, show)
mark(do, while)
nsubj(do, other)
advcl(show, do)
advmod(do, not)
punct(change, .)
case(time, at)
det(time, no)
obl(imply, time)
cop(imply, be)
nsubj(imply, it)
root(ROOT, imply)
case(experimenter, by)
det(experimenter, the)
obl(imply, experimenter)
mark(deviant, that)
det(subject, the)
nmod:poss(reaction, subject)
case(subject, 's)
amod(reaction, initial)
nsubj(deviant, reaction)
cop(deviant, be)
acl(experimenter, deviant)
punct(imply, .)
det(subject, the)
nsubj:pass(give, subject)
aux:pass(give, be)
advmod(give, only)
root(ROOT, give)
obj(give, information)
case(possibility, about)
amod(possibility, other)
nmod(information, possibility)
case(reaction, of)
punct(reaction, ``)
amod(reaction, normal)
punct(reaction, '')
nmod(possibility, reaction)
punct(give, .)
nsubj(change, those)
nsubj(respond, who)
acl:relcl(those, respond)
case(arm-elevation, with)
det(arm-elevation, a)
obl(respond, arm-elevation)
case(state, in)
det(state, the)
amod(state, naive)
nmod(arm-elevation, state)
aux(change, do)
advmod(change, not)
root(ROOT, change)
nmod:poss(reaction, they)
obj(change, reaction)
mark(tell, when)
advcl(change, tell)
mark(be, that)
expl(be, there)
ccomp(tell, be)
det(people, some)
amod(people, normal)
nsubj(be, people)
nsubj(react, who)
aux(react, do)
advmod(react, not)
acl:relcl(people, react)
case(fashion, in)
det(fashion, this)
obl(react, fashion)
punct(change, .)
det(information, this)
nsubj:pass(accept, information)
aux:pass(accept, be)
root(ROOT, accept)
case(interpretation, with)
det(interpretation, the)
amod(interpretation, frequent)
obl(accept, interpretation)
mark(prevent, that)
det(person, those)
nsubj(prevent, person)
nsubj(show, who)
aux(show, do)
advmod(show, not)
acl:relcl(person, show)
obj(show, arm-levitation)
aux(prevent, must)
aux(prevent, be)
acl(interpretation, prevent)
obj(prevent, it)
punct(accept, .)
det(subject, these)
nsubj(imply, subject)
root(ROOT, imply)
mark(prevent, that)
nsubj(prevent, they)
advmod(prevent, too)
aux(prevent, could)
ccomp(imply, prevent)
nmod:poss(arm, they)
obj(prevent, arm)
mark(rise, from)
obl(prevent, rise)
mark(try, if)
nsubj(try, they)
advcl(prevent, try)
punct(imply, .)
det(reactivity, the)
amod(reactivity, positive)
amod(reactivity, Kohnstamm)
nsubj:pass(explain, reactivity)
case(condition, in)
nmod(reactivity, condition)
nummod(condition, 1)
punct(state, ()
punct(state, ()
det(state, the)
amod(state, naive)
appos(reactivity, state)
punct(state, ))
aux:pass(explain, be)
advmod(explain, not)
advmod(explain, adequately)
root(ROOT, explain)
case(concept, by)
det:predet(concept, such)
det(concept, a)
obl(explain, concept)
case(suggestibility, as)
nmod(concept, suggestibility)
punct(define, ()
mark(define, if)
nsubj:pass(define, suggestibility)
aux:pass(define, be)
advcl(explain, define)
case(influence, as)
det(influence, the)
obl(define, influence)
case(behavior, on)
nmod(influence, behavior)
case(cue, by)
amod(cue, verbal)
nmod(behavior, cue)
punct(define, ))
punct(explain, .)
case(way, in)
det(way, no)
obl(indicate, way)
punct(indicate, ,)
cc:preconj(verbally, either)
advmod(way, verbally)
cc(behaviorally, or)
conj(verbally, behaviorally)
punct(indicate, ,)
aux(indicate, do)
det(experimenter, the)
nsubj(indicate, experimenter)
root(ROOT, indicate)
case(subject, to)
det(subject, the)
obl(indicate, subject)
det(mode, any)
amod(mode, prefer)
appos(subject, mode)
mark(respond, of)
acl(mode, respond)
case(contraction, to)
det(contraction, the)
amod(contraction, voluntary)
obl(respond, contraction)
punct(indicate, . )
advmod(uninfluenced, moreover)
punct(uninfluenced, ,)
mark(inform, when)
det(experimenter, the)
nsubj(inform, experimenter)
aux(inform, do)
advcl(uninfluenced, inform)
det(subject, those)
obj(inform, subject)
mark(be, that)
expl(be, there)
acl(subject, be)
det(people, some)
amod(people, normal)
nsubj(be, people)
nsubj(have, who)
aux(have, do)
advmod(have, not)
acl:relcl(people, have)
nmod:poss(rise, they)
compound(rise, arm)
obj(have, rise)
mark(relaxed, once)
nsubj(relaxed, they)
advcl(have, relaxed)
punct(uninfluenced, ,)
det(subject, the)
compound(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
nsubj:pass(uninfluenced, subject)
aux:pass(uninfluenced, be)
root(ROOT, uninfluenced)
case(reaction, in)
nmod:poss(reaction, they)
amod(reaction, subsequent)
obl(uninfluenced, reaction)
case(situation, to)
det(situation, the)
compound(situation, Kohnstamm)
nmod(reaction, situation)
punct(uninfluenced, .)
nsubj(continue, they)
root(ROOT, continue)
mark(give, to)
xcomp(continue, give)
det(arm-elevation, a)
obj(give, arm-elevation)
punct(continue, . )
det(suggestibility, a)
amod(suggestibility, differential)
nsubj(have, suggestibility)
aux(have, would)
root(ROOT, have)
mark(invoke, to)
aux:pass(invoke, be)
xcomp(have, invoke)
mark(explain, to)
advcl(invoke, explain)
det(failure, the)
obj(explain, failure)
case(information, of)
det(information, this)
amod(information, additional)
nmod(failure, information)
mark(influence, to)
acl(information, influence)
det(reactor, the)
obl:npmod(positive, Kohnstamm)
punct(positive, -)
amod(reactor, positive)
obj(influence, reactor)
cc(attribute, and)
advmod(attribute, yet)
conj(influence, attribute)
nmod:poss(reactivity, they)
amod(reactivity, naive)
amod(reactivity, Kohnstamm)
obj(attribute, reactivity)
case(suggestion, to)
obl(attribute, suggestion)
punct(have, .)
nsubj(reaction, autosuggestibility)
punct(seem, ,)
det(reaction, the)
nsubj(seem, reaction)
case(subject, of)
det(subject, the)
nmod(reaction, subject)
case(way, in)
det:predet(way, such)
det(way, a)
nmod(subject, way)
mark(conform, as)
mark(conform, to)
acl(way, conform)
case(expectation, to)
nmod:poss(expectation, he)
amod(expectation, own)
obl(conform, expectation)
case(outcome, of)
det(outcome, the)
nmod(expectation, outcome)
punct(outcome, ()
advmod(reaction, i.e.)
punct(reaction, ,)
mark(reaction, that)
det(arm-rise, the)
nsubj(reaction, arm-rise)
cop(reaction, be)
det(reaction, a)
parataxis(conform, reaction)
case(pressure, to)
det(pressure, the)
nmod(reaction, pressure)
acl(pressure, exert)
case(contraction, in)
det(contraction, the)
amod(contraction, voluntary)
obl(exert, contraction)
punct(knowledge, ,)
case(knowledge, because)
fixed(because, of)
nmod:poss(knowledge, he)
obl(exert, knowledge)
mark(be, that)
punct(be, ``)
case(reaction, to)
det(reaction, every)
obl(be, reaction)
expl(be, there)
acl(knowledge, be)
det(reaction, a)
amod(reaction, equal)
cc(opposite, and)
conj(equal, opposite)
nsubj(be, reaction)
punct(reaction, '')
punct(reaction, ))
advmod(seem, also)
root(ROOT, seem)
xcomp(seem, inadequate)
case(explanation, as)
det(explanation, a)
obl(inadequate, explanation)
case(reason, for)
det(reason, the)
amod(reason, follow)
nmod(explanation, reason)
punct(explanation, :)
punct(1, ()
nummod(experience, 1)
punct(1, ))
det(subject, the)
nmod:poss(experience, subject)
case(subject, 's)
advmod(genuine, apparently)
amod(experience, genuine)
appos(reason, experience)
case(surprise, of)
nmod(experience, surprise)
mark(rise, when)
nmod:poss(arm, they)
nsubj(rise, arm)
advcl(experience, rise)
punct(manifestation, ,)
cc(manifestation, and)
punct(2, ()
nummod(manifestation, 2)
punct(2, ))
conj(rise, manifestation)
case(phenomenon, of)
det(phenomenon, the)
nmod(manifestation, phenomenon)
case(anticipation, despite)
nmod(phenomenon, anticipation)
case(something, of)
nmod(anticipation, something)
amod(something, else)
acl(something, happen)
punct(become, ()
advmod(become, e.g.)
punct(become, ,)
mark(become, of)
advcl(happen, become)
obj(become, dizzy)
cc(fall, and)
advmod(fall, maybe)
conj(become, fall)
punct(fall, ,)
det(expectation, a)
obj(fall, expectation)
advmod(volunteer, spontaneously)
acl(expectation, volunteer)
case(one, by)
obl(volunteer, one)
case(subject, of)
det(subject, the)
nmod(one, subject)
punct(volunteer, ))
punct(seem, . )
det(Hypothesis, a)
compound(Hypothesis, suggestion)
nsubj(seem, Hypothesis)
advmod(seem, also)
root(ROOT, seem)
xcomp(seem, inadequate)
case(explanation, as)
det(explanation, a)
obl(inadequate, explanation)
case(those, for)
nmod(explanation, those)
nsubj(shift, who)
acl:relcl(those, shift)
nmod:poss(reaction, they)
obj(shift, reaction)
mark(inform, after)
nsubj:pass(inform, they)
aux:pass(inform, be)
advcl(shift, inform)
case(possibility, of)
det(possibility, the)
obl(inform, possibility)
case(reaction, of)
punct(reaction, ``)
amod(reaction, normal)
punct(reaction, '')
nmod(possibility, reaction)
amod(reaction, different)
case(those, from)
obl(different, those)
obj(give, which)
nsubj(give, they)
acl:relcl(those, give)
punct(tell, .)
mark(tell, while)
nsubj:pass(tell, they)
aux:pass(tell, be)
advcl(inform, tell)
mark(be, that)
expl(be, there)
ccomp(tell, be)
det(people, some)
amod(people, normal)
nsubj(be, people)
nsubj(react, who)
acl:relcl(people, react)
advmod(react, differently)
mark(have, than)
nsubj(have, they)
advcl(react, have)
punct(inform, ,)
nsubj:pass(inform, they)
aux:pass(inform, be)
advmod(inform, also)
conj(be, inform)
mark(be, that)
expl(be, there)
ccomp(inform, be)
amod(normal, other)
nsubj(be, normal)
nsubj(react, who)
acl:relcl(normal, react)
mark(have, as)
nsubj(have, they)
advcl(react, have)
punct(seem, .)
expl(be, there)
root(ROOT, be)
det(implication, no)
nsubj(be, implication)
acl(implication, make)
mark(prefer, that)
nmod:poss(reaction, they)
amod(reaction, initial)
nsubj:pass(prefer, reaction)
punct(absence, ()
appos(reaction, absence)
case(elevation, of)
det(elevation, a)
compound(elevation, arm)
punct(elevation, -)
nmod(absence, elevation)
punct(absence, ))
aux:pass(prefer, be)
advmod(prefer, less)
ccomp(make, prefer)
case(presence, than)
det(presence, the)
obl(prefer, presence)
case(levitation, of)
nmod(presence, levitation)
punct(be, . )
det(explanation, a)
advmod(tenable, more)
amod(explanation, tenable)
nsubj(be, explanation)
case(change, for)
det(change, the)
nmod(explanation, change)
case(reaction, in)
nmod(change, reaction)
root(ROOT, be)
mark(make, that)
det(knowledge, the)
amod(knowledge, add)
nsubj(make, knowledge)
cc(familiarity, and)
amod(familiarity, increase)
conj(knowledge, familiarity)
case(situation, with)
det(situation, the)
amod(situation, total)
nmod(knowledge, situation)
ccomp(be, make)
obj(make, it)
xcomp(make, possible)
mark(guard, for)
det(subject, these)
nsubj:pass(guard, subject)
mark(guard, to)
aux:pass(guard, be)
advmod(guard, less)
advcl(possible, guard)
cc(relax, and)
mark(relax, to)
conj(guard, relax)
punct(seem, ,)
mark(seem, since)
det(reaction, any)
nsubj(seem, reaction)
advcl(guard, seem)
xcomp(seem, acceptable)
case(examiner, to)
det(examiner, the)
obl(acceptable, examiner)
case(normal, as)
punct(normal, ``)
nmod(examiner, normal)
punct(normal, '')
punct(normal, .)
det(state, the)
amod(state, naive)
nsubj:pass(view, state)
punct(state, ,)
appos(state, condition)
nummod(condition, 1)
punct(view, ,)
punct(view, ,)
aux(view, could)
advmod(view, therefore)
aux:pass(view, be)
conj(seem, view)
case(one, as)
det(one, a)
amod(one, inhibit)
obl(view, one)
case(%, for)
nummod(%, 24)
nmod(one, %)
case(subject, of)
det(subject, the)
nmod(%, subject)
case(study, in)
det(study, this)
nmod(subject, study)
punct(be, .)
nsubj(free, they)
cop(free, be)
advmod(free, not)
root(ROOT, free)
mark(themselves, to)
cop(themselves, be)
xcomp(free, themselves)
case(situation, in)
det(situation, this)
nmod(themselves, situation)
punct(free, ,)
det(one, a)
amod(one, interpersonal)
parataxis(free, one)
punct(one, ,)
advmod(be, where)
expl(be, there)
acl:relcl(one, be)
det(observer, a)
nsubj(be, observer)
case(reaction, of)
nmod:poss(reaction, they)
nmod(observer, reaction)
cc(have, and)
nsubj(have, they)
conj(be, have)
det(guide, no)
obj(have, guide)
case(behavior, for)
amod(behavior, acceptable)
nmod(guide, behavior)
punct(free, .)
nsubj(reassure, instruction)
mark(relax, to)
acl(instruction, relax)
punct(relax, ,)
advmod(spontaneous, i.e.)
punct(spontaneous, ,)
mark(spontaneous, to)
cop(spontaneous, be)
punct(spontaneous, ``)
xcomp(relax, spontaneous)
punct(spontaneous, '')
punct(react, ,)
cc(react, and)
conj(spontaneous, react)
advmod(react, immediately)
case(impulse, to)
det(impulse, whatever)
obl(react, impulse)
nsubj(have, they)
aux(have, might)
acl:relcl(impulse, have)
punct(reassure, ,)
cop(reassure, be)
advmod(reassure, not)
advmod(reassure, sufficiently)
root(ROOT, reassure)
mark(give, until)
det(idea, some)
nsubj:pass(give, idea)
case(possibility, of)
det(possibility, the)
nmod(idea, possibility)
case(reaction, of)
amod(reaction, normal)
nmod(possibility, reaction)
aux(give, have)
aux:pass(give, be)
advcl(reassure, give)
punct(reassure, .)
mark(effective, while)
amod(condition, other)
nsubj(effective, condition)
aux(effective, might)
cop(effective, be)
advmod(effective, even)
advmod(effective, more)
advcl(give, effective)
mark(bring, in)
advcl(effective, bring)
case(change, about)
det(change, a)
obl(bring, change)
case(immobility, from)
nmod(change, immobility)
case(mobility, to)
nmod(immobility, mobility)
case(reactivity, in)
compound(reactivity, Kohnstamm)
nmod(mobility, reactivity)
punct(hypothesis, ,)
nsubj(hypothesis, it)
cop(hypothesis, be)
nmod:poss(hypothesis, we)
parataxis(reassure, hypothesis)
mark(have, that)
det(condition, all)
amod(condition, such)
nsubj(have, condition)
aux(have, would)
acl:relcl(hypothesis, have)
case(factor, as)
det(factor, a)
amod(factor, common)
obl(have, factor)
det(capacity, the)
nmod:npmod(factor, capacity)
mark(induce, to)
acl(capacity, induce)
det(attitude, a)
obj(induce, attitude)
case(subject, in)
det(subject, the)
nmod(attitude, subject)
nsubj(enable, which)
acl:relcl(subject, enable)
obj(enable, he)
mark(divorce, to)
xcomp(enable, divorce)
obj(divorce, himself)
advmod(divorce, temporarily)
case(feeling, from)
obl(divorce, feeling)
case(responsibility, of)
nmod(feeling, responsibility)
case(behavior, for)
nmod:poss(behavior, he)
nmod(feeling, behavior)
punct(hypothesis, .)
compound(ingestion, Alcohol)
nsubj(succeed, ingestion)
root(ROOT, succeed)
mark(change, in)
advcl(succeed, change)
obj(change, immobility)
case(mobility, to)
obl(change, mobility)
advmod(strikingly, quite)
advmod(change, strikingly)
case(subject, in)
nummod(subject, one)
compound(subject, pilot)
obl(change, subject)
punct(one, ()
det(one, the)
amod(one, only)
appos(subject, one)
case(whom, with)
obl(try, whom)
det(technique, this)
nsubj:pass(try, technique)
aux:pass(try, be)
acl:relcl(one, try)
punct(one, ))
punct(succeed, .)
det(subject, this)
nsubj(give, subject)
punct(subject, ,)
nsubj(undergo, who)
aux(undergo, have)
aux(undergo, be)
acl:relcl(subject, undergo)
amod(psychotherapy, psychoanalytic)
obj(undergo, psychotherapy)
case(year, for)
nummod(year, five)
obl(undergo, year)
punct(give, ,)
aux(give, do)
advmod(give, not)
parataxis(succeed, give)
det(reaction, a)
amod(reaction, positive)
compound(reaction, Kohnstamm)
obj(give, reaction)
case(any, under)
nmod(reaction, any)
case(condition, of)
det(condition, the)
nummod(condition, four)
amod(condition, standardize)
nmod(any, condition)
acl(condition, use)
case(experiment, in)
det(experiment, this)
obl(use, experiment)
mark(sober, while)
advcl(use, sober)
punct(give, .)
case(drink, after)
nummod(drink, two)
obl(fly, drink)
acl(drink, contain)
obj(contain, alcohol)
punct(fly, ,)
nmod:poss(arm, she)
nsubj(fly, arm)
root(ROOT, fly)
advmod(fly, upward)
advmod(freely, very)
advmod(fly, freely)
punct(fly, .)
expl(be, there)
root(ROOT, be)
amod(delight, evident)
nsubj(be, delight)
case(part, on)
det(part, the)
nmod(delight, part)
case(subject, of)
det(subject, the)
nmod(part, subject)
case(response, in)
nmod(subject, response)
case(experience, to)
nmod:poss(experience, she)
nmod(response, experience)
case(freedom, of)
det(freedom, the)
nmod(experience, freedom)
case(movement, of)
nmod(freedom, movement)
punct(be, .)
nsubj(describe, she)
root(ROOT, describe)
obj(describe, herself)
mark(have, as)
advcl(describe, have)
det(kind, the)
amod(kind, same)
obj(have, kind)
case(feeling, of)
punct(feeling, ``)
amod(feeling, irresponsible)
punct(feeling, '')
nmod(kind, feeling)
mark(experience, as)
nsubj(experience, she)
aux(experience, have)
advmod(experience, once)
advcl(have, experience)
case(hypnosis, under)
obl(experience, hypnosis)
punct(describe, .)
nsubj(ascribe, she)
root(ROOT, ascribe)
nmod:poss(delight, she)
obj(ascribe, delight)
case(experience, with)
det(experience, both)
nmod(delight, experience)
case(effect, to)
det(effect, the)
nmod(experience, effect)
nsubj(seem, they)
acl:relcl(effect, seem)
mark(have, to)
xcomp(seem, have)
mark(remove, of)
advmod(remove, temporarily)
advcl(have, remove)
case(she, from)
obl(remove, she)
det(controls, the)
obj(remove, controls)
obj(feel, which)
nsubj(feel, she)
acl:relcl(controls, feel)
advmod(necessary, so)
advmod(necessary, compulsively)
amod(controls, necessary)
mark(maintain, to)
advcl(necessary, maintain)
advmod(seem, even)
mark(seem, when)
nsubj(seem, it)
aux(seem, might)
advcl(maintain, seem)
xcomp(seem, appropriate)
mark(relax, to)
advcl(appropriate, relax)
det(controls, these)
obj(relax, controls)
punct(ascribe, .)
amod(subject, many)
root(ROOT, subject)
acl(subject, attribute)
obj(attribute, difference)
case(reactivity, in)
compound(reactivity, Kohnstamm)
nmod(difference, reactivity)
case(difference, to)
nmod(difference, difference)
case(degree, in)
nmod(difference, degree)
case(control, of)
amod(control, subjective)
nmod(degree, control)
punct(difference, --)
amod(subject, voluntary)
mark(perceive, as)
det(subject, the)
compound(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
nsubj(perceive, subject)
advcl(voluntary, perceive)
obj(perceive, it)
cc(involuntary, and)
conj(perceive, involuntary)
mark(perceive, as)
det(subject, the)
compound(negative, Kohnstamm)
punct(negative, -)
amod(subject, negative)
nsubj(perceive, subject)
advcl(perceive, perceive)
obj(perceive, it)
punct(voluntary, .)
det(interpretation, these)
amod(interpretation, suggest)
nsubj:pass(give, interpretation)
aux:pass(give, be)
root(ROOT, give)
case(subject, by)
det(subject, the)
obl(give, subject)
advmod(give, spontaneously)
mark(tell, when)
nsubj:pass(tell, they)
aux:pass(tell, be)
advcl(give, tell)
mark(be, that)
expl(be, there)
ccomp(tell, be)
nsubj(be, people)
nsubj(react, who)
acl:relcl(people, react)
advmod(react, differently)
mark(have, than)
nsubj(have, they)
advcl(react, have)
punct(give, .)
det(subject, the)
obl:npmod(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
nsubj(describe, subject)
root(ROOT, describe)
det(experience, the)
amod(experience, vivid)
obj(describe, experience)
mark(have, of)
acl(experience, have)
nmod:poss(arm, they)
obj(have, arm)
xcomp(have, rise)
case(one, as)
obl(rise, one)
case(which, in)
obl(exercise, which)
nsubj(exercise, they)
acl:relcl(one, exercise)
det(control, no)
obj(exercise, control)
punct(describe, .)
nsubj(explain, they)
root(ROOT, explain)
nmod:poss(absence, its)
obj(explain, absence)
case(other, in)
nmod(absence, other)
case(basis, on)
det(basis, the)
obl(explain, basis)
case(intervention, of)
det(intervention, a)
nmod(basis, intervention)
case(factor, of)
compound(factor, control)
nmod(intervention, factor)
punct(explain, .)
nsubj(feel, they)
root(ROOT, feel)
mark(counteract, that)
nsubj(counteract, they)
advmod(counteract, too)
aux(counteract, could)
ccomp(feel, counteract)
det(movement, the)
amod(movement, upward)
compound(movement, arm)
obj(counteract, movement)
case(effort, by)
det(effort, a)
amod(effort, voluntary)
obl(counteract, effort)
mark(experience, after)
nsubj(experience, they)
aux(experience, have)
advmod(experience, once)
advcl(counteract, experience)
det(reaction, the)
obj(experience, reaction)
punct(feel, .)
nsubj(associate, some)
case(those, of)
nmod(some, those)
nsubj(react, who)
aux(react, do)
advmod(react, not)
advmod(react, initially)
acl:relcl(those, react)
case(arm-elevation, with)
det(arm-elevation, a)
obl(react, arm-elevation)
advmod(associate, also)
root(ROOT, associate)
nmod:poss(behavior, they)
obj(associate, behavior)
case(situation, in)
det(situation, the)
nmod(behavior, situation)
case(factor, with)
compound(factor, control)
nmod(situation, factor)
punct(factor, --)
det(inability, a)
appos(factor, inability)
mark(relinquish, to)
acl(inability, relinquish)
obj(relinquish, control)
advmod(relinquish, voluntarily)
punct(associate, .)
nummod(subject, one)
nsubj(ask, subject)
advmod(ask, spontaneously)
root(ROOT, ask)
punct(ask, ()
mark(risen, after)
nmod:poss(arm, she)
nsubj(risen, arm)
aux(risen, have)
advmod(risen, finally)
advcl(ask, risen)
punct(risen, ))
punct(ask, ,)
punct(ask, ``)
aux(suppose, do)
nsubj(suppose, you)
root(ROOT, suppose)
nsubj(keep, I)
aux(keep, be)
advmod(keep, unconsciously)
ccomp(suppose, keep)
obj(keep, it)
compound:prt(keep, down)
advmod(keep, before)
punct(suppose, '')
punct(suppose, ?)
punct(suppose, ?)
nsubj(say, another)
root(ROOT, say)
mark(go, that)
nmod:poss(arm, she)
nsubj(go, arm)
aux(go, do)
advmod(go, not)
ccomp(say, go)
compound:prt(go, up)
case(first, at)
obl(go, first)
punct(go, ``)
mark(let, because)
nsubj(let, I)
aux(let, would)
advmod(let, not)
advcl(go, let)
obj(let, it)
punct(say, ;)
punct(say, ;)
nsubj(think, I)
parataxis(say, think)
nsubj(suppose, it)
aux(suppose, be)
advmod(suppose, not)
ccomp(think, suppose)
mark(one, to)
punct(one, '')
punct(one, .)
det(subject, this)
nsubj(one, subject)
cop(one, be)
ccomp(think, one)
nsubj(give, who)
acl:relcl(one, give)
det(arm-elevation, a)
obj(give, arm-elevation)
case(trial, on)
det(trial, the)
amod(trial, second)
nmod(arm-elevation, trial)
case(state, in)
det(state, the)
amod(state, naive)
obl(give, state)
cc(first, but)
advmod(first, not)
case(first, in)
det(first, the)
conj(state, first)
punct(say, .)
nsubj(feel, she)
aux(feel, have)
root(ROOT, feel)
mark(want, that)
nmod:poss(arm, she)
nsubj(want, arm)
ccomp(feel, want)
mark(go, to)
xcomp(want, go)
advmod(go, up)
case(trial, in)
det(trial, the)
amod(trial, first)
obl(go, trial)
punct(prevent, ,)
cc(prevent, but)
aux(prevent, have)
advmod(prevent, consciously)
conj(feel, prevent)
obj(prevent, it)
mark(do, from)
advmod(do, so)
advcl(prevent, do)
punct(feel, .)
nsubj(explain, she)
root(ROOT, explain)
obj(explain, nonreactivity)
case(other, of)
nmod(nonreactivity, other)
mark(say, by)
advcl(explain, say)
mark(let, that)
nsubj(let, they)
aux(let, be)
punct(let, ``)
advmod(let, not)
ccomp(say, let)
obj(let, themselves)
xcomp(let, relax)
punct(let, '')
punct(explain, .)
mark(inform, when)
advcl(let, inform)
mark(be, that)
expl(be, there)
ccomp(inform, be)
det(person, some)
nsubj(be, person)
nsubj(have, who)
aux(have, do)
advmod(have, not)
acl:relcl(person, have)
nmod:poss(arm, they)
obj(have, arm)
xcomp(have, go)
compound:prt(go, up)
punct(comment, ,)
nsubj(comment, she)
parataxis(explain, comment)
punct(explain, ,)
punct(explain, ``)
nsubj(see, I)
aux(see, do)
advmod(see, not)
root(ROOT, see)
advmod(prevent, how)
nsubj(prevent, they)
aux(prevent, can)
ccomp(see, prevent)
obj(prevent, it)
punct(prevent, '')
punct(see, .)
case(contrast, in)
obl(prevent, contrast)
case(explanation, to)
det(explanation, this)
amod(control, voluntary)
punct(control, -)
compound(explanation, control)
nmod(contrast, explanation)
case(nonreactivity, for)
nmod(explanation, nonreactivity)
acl(explanation, give)
case(subject, by)
det(subject, the)
obl:npmod(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
obl(give, subject)
punct(offer, ,)
det(subject, the)
compound(negative, Kohnstamm)
punct(negative, -)
amod(subject, negative)
nsubj(offer, subject)
ccomp(see, offer)
det(hypothesis, a)
amod(control, involuntary)
punct(control, -)
compound(hypothesis, control)
obj(offer, hypothesis)
mark(explain, to)
acl(hypothesis, explain)
obj(explain, nonreactivity)
punct(see, .)
nsubj(feel, they)
root(ROOT, feel)
mark(relax, that)
nsubj(relax, they)
aux(relax, be)
ccomp(feel, relax)
advmod(much, as)
advmod(relax, much)
mark(could, as)
nsubj(could, they)
advcl(as, could)
cc(level, and)
mark(level, that)
det(factor, any)
compound(factor, control)
nsubj(level, factor)
nsubj(present, which)
aux(present, might)
cop(present, be)
acl:relcl(factor, present)
mark(prevent, to)
advcl(present, prevent)
obj(prevent, response)
aux(level, must)
cop(level, be)
case(level, on)
det(level, a)
amod(level, unconscious)
conj(feel, level)
punct(feel, .)
det(discussion, the)
amod(discussion, above)
nsubj(mean, discussion)
aux(mean, do)
advmod(mean, not)
root(ROOT, mean)
mark(imply, to)
xcomp(mean, imply)
mark(abeyance, that)
compound(factor, control)
nsubj(abeyance, factor)
cop(abeyance, be)
advmod(abeyance, completely)
case(abeyance, in)
ccomp(imply, abeyance)
case(subject, in)
det(subject, the)
compound(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
nmod(abeyance, subject)
punct(mean, ;)
punct(mean, ;)
cc(diminish, but)
advmod(diminish, rather)
fixed(rather, that)
nsubj:pass(diminish, they)
aux(diminish, could)
aux:pass(diminish, be)
conj(abeyance, diminish)
advmod(diminish, sufficiently)
advmod(interfere, not)
mark(interfere, to)
xcomp(diminish, interfere)
case(arm-levitation, with)
obl(interfere, arm-levitation)
punct(mean, .)
nummod(subject, one)
amod(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
root(ROOT, subject)
nsubj(have, who)
acl:relcl(subject, have)
cc:preconj(rise, both)
compound(rise, arm)
obj(have, rise)
mark(test, while)
aux:pass(test, be)
advcl(have, test)
case(condition, in)
det(condition, the)
amod(condition, naive)
obl(test, condition)
acl:relcl(subject, describe)
nmod:poss(experience, she)
amod(experience, subjective)
obj(describe, experience)
mark(follow, as)
advcl(describe, follow)
punct(describe, :)
punct(describe, ``)
nsubj(feel, you)
root(ROOT, feel)
nsubj(go, they)
aux(go, be)
ccomp(feel, go)
compound:prt(go, up)
cc(stage, and)
nsubj(stage, you)
cop(stage, be)
case(stage, on)
det(stage, a)
conj(feel, stage)
cc(right, and)
nsubj(right, it)
cop(right, be)
advmod(right, not)
conj(feel, right)
mark(do, for)
nsubj(do, they)
mark(do, to)
advcl(right, do)
advmod(do, so)
cc(think, and)
advmod(think, then)
nsubj(think, you)
conj(feel, think)
advmod(what, maybe)
nsubj(what, that)
cop(what, be)
ccomp(think, what)
aux(suppose, be)
acl:relcl(what, suppose)
mark(happen, to)
xcomp(suppose, happen)
punct(think, '')
punct(feel, .)
nsubj(describe, she)
advmod(describe, then)
root(ROOT, describe)
nmod:poss(experience, she)
obj(describe, experience)
case(one, as)
obl(describe, one)
case(which, in)
obl(have, which)
nsubj(have, she)
advmod(have, first)
acl:relcl(one, have)
obj(have, difficulty)
acl(difficulty, accept)
case(herself, for)
obl(accept, herself)
det(state, a)
obj(accept, state)
mark(which, of)
cop(which, be)
case(which, in)
obl(relinquished, which)
nsubj(relinquished, she)
acl(state, relinquished)
obj(relinquished, control)
punct(describe, .)
advmod(able, however)
punct(able, ,)
nsubj(able, she)
cop(able, be)
root(ROOT, able)
mark(relax, to)
xcomp(able, relax)
cc(yield, and)
conj(relax, yield)
case(moment, to)
det(moment, the)
obl(relax, moment)
punct(able, .)
expl(hypothesis, it)
cop(hypothesis, be)
nmod:poss(hypothesis, we)
root(ROOT, hypothesis)
mark(hesitant, that)
obl:npmod(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
nsubj(hesitant, subject)
cop(hesitant, be)
advmod(hesitant, less)
acl(hypothesis, hesitant)
mark(relinquish, about)
advcl(hesitant, relinquish)
obj(relinquish, control)
case(subject, than)
cop(subject, be)
compound(subject, Kohnstamm)
punct(negative, -)
amod(subject, negative)
obl(relinquish, subject)
punct(hypothesis, ;)
punct(hypothesis, ;)
mark(give, that)
nsubj(give, they)
aux(give, can)
parataxis(hesitant, give)
compound:prt(give, up)
nmod:poss(control, they)
obj(give, control)
cc(allow, and)
conj(give, allow)
obj(allow, themselves)
mark(reactor, to)
cop(reactor, be)
xcomp(allow, reactor)
cc(actor, rather)
fixed(rather, than)
conj(reactor, actor)
punct(hypothesis, .)
expl(be, it)
root(ROOT, be)
nmod:poss(belief, we)
nsubj(be, belief)
mark(evidence, that)
det(readiness, this)
nsubj:pass(evidence, readiness)
mark(relinquish, to)
acl(readiness, relinquish)
det(control, some)
obj(relinquish, control)
aux:pass(evidence, be)
acl(belief, evidence)
case(subject, by)
det(subject, the)
obl:npmod(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
obl(evidence, subject)
case(some, in)
nmod(subject, some)
case(situation, of)
det(situation, the)
amod(situation, other)
amod(situation, experimental)
nmod(some, situation)
mark(discuss, to)
aux:pass(discuss, be)
acl(situation, discuss)
advmod(discuss, below)
punct(belief, .)
advmod(appear, thus)
punct(appear, ,)
det(readiness, this)
nsubj(appear, readiness)
mark(relax, to)
acl(readiness, relax)
obj(relax, controls)
punct(controls, ,)
acl(controls, evidence)
case(situation, in)
det(situation, the)
compound(situation, Kohnstamm)
obl(evidence, situation)
punct(appear, ,)
root(ROOT, appear)
mark(factor, to)
cop(factor, be)
det(factor, a)
advmod(general, more)
amod(factor, general)
compound(factor, personality)
xcomp(appear, factor)
punct(factor, .)
compound(illusion, Aniseikonic)
nsubj(seem, illusion)
det(subject, the)
obl:npmod(positive, Kohnstamm)
punct(positive, -)
amod(subject, positive)
nsubj(seem, subject)
ccomp(appear, seem)
mark(freer, to)
cop(freer, be)
xcomp(seem, freer)
mark(experience, to)
advcl(freer, experience)
det(unusual, the)
obj(experience, unusual)
cc(impossible, and)
advmod(impossible, seemingly)
conj(unusual, impossible)
case(world, in)
det(world, the)
amod(world, external)
obl(experience, world)
punct(appear, .)
expl(be, there)
root(ROOT, be)
det(number, a)
advmod(greater, significantly)
amod(number, greater)
nsubj(be, number)
case(group, in)
det(group, this)
nmod(number, group)
nsubj(report, who)
acl:relcl(number, report)
det(desk, a)
obj(report, desk)
mark(position, as)
cop(position, be)
case(position, in)
det(position, a)
amod(position, tilt)
advcl(report, position)
mark(remain, while)
det(ball, a)
amod(ball, tennis)
nsubj(remain, ball)
acl(ball, rest)
mark(rest, on)
nsubj(remain, it)
advcl(report, remain)
xcomp(remain, stationary)
case(incline, on)
det(incline, the)
obl(stationary, incline)
punct(be, .)
nsubj(occur, this)
root(ROOT, occur)
case(spite, in)
obl(occur, spite)
case(awareness, of)
det(awareness, the)
amod(awareness, rational)
nmod(spite, awareness)
mark(go, that)
det(ball, the)
nsubj(go, ball)
aux(go, should)
aux(go, be)
acl(awareness, go)
advmod(go, downhill)
punct(occur, .)
nsubj(know, they)
root(ROOT, know)
mark(differ, that)
nmod:poss(experience, they)
amod(experience, perceptual)
nsubj(differ, experience)
ccomp(know, differ)
case(reality, from)
amod(reality, objective)
obl(differ, reality)
mark(see, since)
nsubj(see, they)
aux(see, have)
advcl(differ, see)
det(desk, the)
obj(see, desk)
cc(ball, and)
conj(desk, ball)
mark(put, prior)
fixed(prior, to)
advcl(see, put)
compound:prt(put, on)
det(lense, the)
amod(lense, aniseikonic)
obj(put, lense)
punct(know, .)
cc(bound, yet)
nsubj(bound, they)
cop(bound, be)
advmod(bound, not)
advmod(bound, so)
root(ROOT, bound)
case(experience, by)
amod(experience, past)
obl(bound, experience)
cc(constriction, and)
conj(experience, constriction)
mark(deny, as)
mark(deny, to)
advcl(bound, deny)
nmod:poss(perception, they)
amod(perception, immediate)
obj(deny, perception)
cc(dominate, and)
mark(dominate, to)
aux:pass(dominate, be)
conj(deny, dominate)
case(knowledge, by)
nmod:poss(knowledge, they)
obl(dominate, knowledge)
case(what, of)
nmod(knowledge, what)
det(experience, the)
nsubj(what, experience)
aux(what, should)
acl:relcl(what, be)
punct(bound, .)
det(change, the)
nsubj(suggest, change)
case(perception, in)
nmod(change, perception)
case(some, by)
nmod(change, some)
case(subject, of)
det(subject, the)
obl:npmod(negative, Kohnstamm)
punct(negative, -)
amod(subject, negative)
nmod(some, subject)
punct(change, ,)
mark(inform, after)
nsubj:pass(inform, they)
aux(inform, have)
aux:pass(inform, be)
advcl(suggest, inform)
case(possibility, of)
det(possibility, the)
obl(inform, possibility)
case(reaction, of)
amod(reaction, normal)
nmod(possibility, reaction)
punct(suggest, ,)
root(ROOT, suggest)
mark(associate, that)
nmod:poss(constriction, they)
nsubj:pass(associate, constriction)
cc(guardedness, and)
conj(constriction, guardedness)
aux:pass(associate, be)
ccomp(suggest, associate)
case(mode, with)
nmod:poss(mode, they)
amod(mode, general)
obl(associate, mode)
mark(respond, of)
acl(mode, respond)
case(situation, to)
amod(situation, strange)
cc(unknown, or)
conj(strange, unknown)
obl(respond, situation)
punct(suggest, .)
nsubj(able, they)
cop(able, be)
root(ROOT, able)
mark(experience, to)
xcomp(able, experience)
advmod(first, at)
advmod(experience, first)
punct(experience, ,)
case(term, in)
obl(experience, term)
case(conventionality, of)
amod(conventionality, past)
nmod(term, conventionality)
punct(experience, .)
mark(inform, when)
advcl(experience, inform)
case(possibility, as)
fixed(as, to)
det(possibility, the)
amod(possibility, various)
obl(inform, possibility)
case(reaction, of)
amod(reaction, normal)
nmod(possibility, reaction)
punct(able, ,)
nsubj(able, they)
cop(able, be)
advmod(able, then)
parataxis(able, able)
mark(experience, to)
xcomp(able, experience)
det(uniqueness, the)
obj(experience, uniqueness)
case(present, of)
det(present, the)
nmod(uniqueness, present)
punct(able, .)
nsubj:pass(postulate, it)
aux(postulate, might)
aux:pass(postulate, be)
root(ROOT, postulate)
mark(afraid, that)
det(subject, these)
nsubj(afraid, subject)
cop(afraid, be)
advmod(afraid, unduly)
ccomp(postulate, afraid)
mark(wrong, of)
cop(wrong, be)
advcl(afraid, wrong)
punct(postulate, ;)
punct(postulate, ;)
mark(perceive, that)
nsubj(perceive, they)
ccomp(afraid, perceive)
amod(situation, new)
amod(situation, internal)
cc(environmental, and)
conj(internal, environmental)
obj(perceive, situation)
case(threaten, as)
punct(threaten, ``)
obl(perceive, threaten)
punct(threaten, '')
mark(test, until)
nsubj:pass(test, they)
aux:pass(test, be)
advcl(perceive, test)
cc(prove, and)
conj(test, prove)
advmod(prove, otherwise)
punct(postulate, . )
mark(be, while)
det(interpretation, the)
nsubj(be, interpretation)
nsubj:pass(give, that)
aux(give, have)
aux:pass(give, be)
acl:relcl(interpretation, give)
advcl(gain, be)
nsubj(be, inference)
advmod(give, only)
punct(gain, ,)
nsubj(gain, they)
root(ROOT, gain)
obj(gain, support)
case(comment, from)
amod(comment, such)
nmod(support, comment)
case(follow, as)
det(follow, the)
nmod(comment, follow)
punct(gain, ,)
nsubj:pass(make, which)
aux:pass(make, be)
acl:relcl(support, make)
case(one, by)
obl(make, one)
case(subject, of)
det(subject, the)
obl:npmod(negative, Kohnstamm)
punct(negative, -)
amod(subject, negative)
nmod(one, subject)
nsubj(do, who)
aux(perceive, do)
advmod(perceive, not)
punct(perceive, ,)
case(trial, on)
det(trial, the)
amod(trial, first)
obl(perceive, trial)
punct(perceive, ,)
conj(make, perceive)
det(illusion, the)
compound(illusion, tilt)
obj(perceive, illusion)
punct(gain, .)
nsubj(desirable, control)
case(status, of)
amod(status, socioeconomic)
nmod(control, status)
nsubj(desirable, it)
aux(desirable, would)
aux(desirable, have)
cop(desirable, be)
root(ROOT, desirable)
case(community, for)
det(community, the)
nummod(community, two)
obl(desirable, community)
mark(differ, to)
aux(differ, have)
acl(community, differ)
advmod(respect, only)
case(respect, in)
obl(differ, respect)
case(variable, to)
det(variable, the)
nmod(respect, variable)
aux:pass(investigate, be)
acl(respect, investigate)
punct(investigate, :)
det(degree, the)
obj(investigate, degree)
case(structure, of)
nmod(degree, structure)
case(method, in)
compound(method, teaching)
nmod(degree, method)
punct(desirable, .)
det(school, the)
amod(school, structure)
nsubj(city, school)
cop(city, be)
case(city, in)
det(city, a)
amod(city, industrial)
root(ROOT, city)
punct(city, ,)
case(house, with)
nummod(family, three)
punct(family, -)
compound(house, family)
compound(house, tenement)
nmod(city, house)
amod(house, typical)
case(area, of)
det(area, the)
amod(area, residential)
obl(typical, area)
punct(section, ,)
cc(section, but)
case(section, with)
nummod(section, one)
advmod(sizable, rather)
conj(one, sizable)
conj(house, section)
case(home, of)
amod(class, middle)
punct(class, -)
compound(home, class)
nmod(section, home)
punct(city, .)
det(school, the)
amod(school, unstructure)
nsubj(community, school)
cop(community, be)
case(community, in)
det(community, a)
amod(community, large)
amod(community, suburban)
root(ROOT, community)
punct(community, ,)
advmod(middle, predominantly)
appos(community, middle)
punct(middle, -)
case(class, to)
amod(class, upper-middle)
obl(middle, class)
punct(fring, ,)
cc(fring, but)
conj(community, fring)
case(area, by)
det(area, a)
amod(area, industrial)
obl(fring, area)
punct(community, .)
mark(equate, in)
fixed(in, order)
mark(equate, to)
advcl(choose, equate)
det(samples, the)
obj(equate, samples)
case(status, on)
amod(status, socioeconomic)
nmod(samples, status)
punct(choose, ,)
nsubj(choose, we)
root(ROOT, choose)
obj(choose, school)
case(city, in)
det(city, both)
nmod(school, city)
case(basis, on)
det(basis, the)
nmod(city, basis)
case(status, of)
amod(status, socioeconomic)
nmod(basis, status)
case(neighborhood, of)
det(neighborhood, the)
nmod(status, neighborhood)
punct(choose, .)
compound(principal, school)
nsubj(make, principal)
cc(worker, and)
compound(worker, guidance)
conj(principal, worker)
root(ROOT, make)
obj(make, ratings)
case(neighborhood, of)
det(neighborhood, the)
amod(neighborhood, various)
nmod(ratings, neighborhood)
cc(team, and)
det(team, the)
compound(team, research)
conj(neighborhood, team)
conj(make, make)
amod(observation, independent)
obj(make, observation)
case(house, of)
nmod(observation, house)
cc(area, and)
compound(area, dwelling)
conj(house, area)
punct(make, .)
det(scale, a)
amod(scale, objective)
nsubj:pass(develop, scale)
aux:pass(develop, be)
root(ROOT, develop)
case(neighborhood, for)
compound(neighborhood, rating)
compound(neighborhood, school)
obl(develop, neighborhood)
case(data, from)
det(data, these)
nmod(neighborhood, data)
punct(develop, .)
amod(proportion, Equal)
nsubj:pass(draw, proportion)
case(child, of)
nmod(proportion, child)
case(city, in)
det(city, each)
nmod(proportion, city)
aux:pass(draw, be)
root(ROOT, draw)
case(upper-lower, from)
obl(draw, upper-lower)
cc(neighborhood, and)
amod(middle, lower)
punct(middle, -)
amod(class, middle)
compound(neighborhood, class)
obl(draw, neighborhood)
punct(draw, .)
nsubj(indicate, subject)
amod(difference, Individual)
nsubj(indicate, difference)
case(maturation, in)
nmod(difference, maturation)
cc(development, and)
det(development, the)
conj(difference, development)
case(readiness, of)
nmod(development, readiness)
mark(learn, for)
acl(development, learn)
mark(read, to)
xcomp(learn, read)
root(ROOT, indicate)
mark(have, that)
advmod(have, not)
mark(have, until)
det(grade, the)
amod(grade, third)
nsubj(have, grade)
ccomp(indicate, have)
amod(child, most)
nsubj(have, child)
ccomp(have, have)
amod(opportunity, ample)
obj(have, opportunity)
mark(demonstrate, to)
acl(opportunity, demonstrate)
nmod:poss(capacity, they)
obj(demonstrate, capacity)
case(achievement, for)
compound(achievement, school)
nmod(capacity, achievement)
punct(indicate, .)
advmod(choose, therefore)
punct(choose, ,)
amod(grade, third)
punct(grade, -)
compound(child, grade)
nsubj:pass(choose, child)
aux:pass(choose, be)
root(ROOT, choose)
case(subject, as)
obl(choose, subject)
case(study, for)
det(study, this)
nmod(subject, study)
punct(choose, .)
case(purpose, for)
obl(obtain, purpose)
case(selection, of)
compound(selection, sample)
nmod(purpose, selection)
advmod(give, only)
punct(give, ()
amod(test, individual)
nsubj:pass(give, test)
aux:pass(give, be)
acl:relcl(selection, give)
advmod(give, later)
punct(give, ))
nsubj(obtain, we)
root(ROOT, obtain)
compound(score, group)
compound(score, test)
obj(obtain, score)
mark(read, of)
acl(score, read)
obj(read, achievement)
cc(intelligence, and)
conj(achievement, intelligence)
case(record, from)
compound(record, school)
obl(read, record)
case(population, of)
det(population, the)
amod(population, entire)
amod(grade, third)
punct(grade, -)
compound(population, grade)
nmod(record, population)
case(system, in)
det(system, each)
compound(system, school)
nmod(population, system)
punct(obtain, .)
det(subject, the)
nsubj:pass(select, subject)
case(study, for)
det(study, this)
nmod(subject, study)
aux:pass(select, be)
advmod(select, randomly)
root(ROOT, select)
case(area, from)
amod(area, stratify)
obl(select, area)
case(distribution, of)
det(distribution, the)
nmod(area, distribution)
punct(third, ,)
compound(third, one)
punct(third, -)
amod(distribution, third)
case(underachiever, as)
obl(third, underachiever)
punct(medium, ,)
nummod(medium, one)
punct(third, -)
amod(medium, third)
conj(underachiever, medium)
punct(over-achievers, ,)
cc(over-achievers, and)
compound(third, one)
punct(third, -)
amod(over-achievers, third)
conj(Children, over-achievers)
punct(Children, .)
parataxis(select, Children)
nmod:poss(score, whose)
compound(score, reading)
nsubj(deviation, score)
cop(deviation, be)
case(least, at)
nmod(one, least)
nummod(deviation, one)
amod(deviation, standard)
acl:relcl(Children, deviation)
case(line, below)
det(line, the)
compound(line, regression)
nmod(deviation, line)
case(population, of)
det(population, each)
amod(population, total)
amod(grade, third)
punct(grade, -)
compound(population, grade)
compound(population, school)
nmod(line, population)
aux:pass(consider, be)
acl:relcl(deviation, consider)
xcomp(consider, under-achievers)
case(purpose, for)
det(purpose, the)
obl(consider, purpose)
case(selection, of)
compound(selection, sample)
nmod(purpose, selection)
punct(select, .)
nsubj(deviation, over-achievers)
cop(deviation, be)
case(least, at)
nmod(one, least)
nummod(deviation, one)
amod(deviation, standard)
root(ROOT, deviation)
case(line, above)
det(line, the)
compound(line, regression)
nmod(deviation, line)
case(system, in)
nmod:poss(system, they)
compound(system, school)
nmod(line, system)
punct(deviation, .)
det(sample, the)
amod(sample, final)
nsubj(different, sample)
cop(different, be)
advmod(different, not)
advmod(different, significantly)
root(ROOT, different)
case(distribution, from)
det(distribution, a)
amod(distribution, normal)
obl(different, distribution)
case(regard, in)
nmod(distribution, regard)
mark(read, to)
acl(regard, read)
obj(read, achievement)
cc(score, or)
compound(test, intelligence)
compound(score, test)
conj(achievement, score)
punct(different, .)
compound(four, twenty)
punct(four, -)
nummod(classroom, four)
root(ROOT, classroom)
case(school, in)
nummod(school, twelve)
amod(school, unstructure)
nmod(classroom, school)
acl(school, furnish)
nummod(case, 156)
obj(furnish, case)
punct(boy, ,)
nummod(boy, 87)
conj(classroom, boy)
cc(girl, and)
nummod(girl, 69)
conj(classroom, girl)
punct(classroom, .)
nummod(classroom, Eight)
nsubj(necessitate, classroom)
case(school, in)
nummod(school, three)
amod(school, structure)
nmod(classroom, school)
acl(school, furnish)
nummod(case, 72)
obj(furnish, case)
punct(boy, ,)
nummod(boy, 36)
conj(case, boy)
cc(girl, and)
nummod(girl, 36)
conj(boy, girl)
punct(girl, .)
amod(restriction, administrative)
nsubj(necessitate, restriction)
root(ROOT, necessitate)
det(size, the)
amod(size, smaller)
compound(size, sample)
obj(necessitate, size)
case(school, in)
det(school, the)
amod(school, structure)
nmod(size, school)
punct(necessitate, .)
nsubj:pass(assume, it)
aux:pass(assume, be)
root(ROOT, assume)
mark(random, that)
det(procedure, the)
compound(procedure, sampling)
nsubj(random, procedure)
cop(random, be)
advmod(random, purely)
ccomp(assume, random)
case(respect, with)
obl(random, respect)
case(variable, to)
det(variable, the)
compound(variable, personality)
nmod(respect, variable)
case(investigation, under)
nmod(variable, investigation)
punct(assume, .)
compound(scale, rating)
nsubj:pass(prepare, scale)
case(compulsivity, of)
nmod(scale, compulsivity)
det(schedule, a)
compound(schedule, interview)
nmod(scale, schedule)
case(question, of)
amod(end, open)
punct(end, -)
amod(question, end)
nmod(schedule, question)
cc(questionnaire, and)
det(questionnaire, a)
amod(choice, multiple)
punct(choice, -)
compound(questionnaire, choice)
conj(question, questionnaire)
aux:pass(prepare, be)
root(ROOT, prepare)
punct(see, ,)
cc(see, and)
nummod(parent, one)
nsubj:pass(see, parent)
case(each, of)
nmod(parent, each)
case(child, of)
det(child, the)
compound(child, sample)
nmod(each, child)
aux:pass(see, be)
conj(prepare, see)
case(home, in)
det(home, the)
obl(see, home)
punct(prepare, .)
det(parent, the)
nsubj:pass(ask, parent)
aux:pass(ask, be)
root(ROOT, ask)
mark(describe, to)
xcomp(ask, describe)
det(child, the)
nmod:poss(behavior, child)
case(child, 's)
amod(behavior, typical)
obj(describe, behavior)
case(situation, in)
amod(situation, certain)
amod(situation, standard)
nmod(behavior, situation)
case(which, in)
obl(be, which)
expl(be, there)
acl:relcl(situation, be)
det(opportunity, a)
nsubj(be, opportunity)
mark(observe, to)
acl(opportunity, observe)
obj(observe, tendency)
case(perfectionism, toward)
nmod(tendency, perfectionism)
case(demand, in)
nmod(tendency, demand)
case(self, upon)
nmod(demand, self)
cc(other, and)
conj(self, other)
punct(conformity, ,)
amod(conformity, irrational)
conj(self, conformity)
case(rule, to)
nmod(conformity, rule)
punct(orderliness, ,)
conj(rule, orderliness)
punct(punctuality, ,)
conj(rule, punctuality)
punct(need, ,)
cc(need, and)
conj(rule, need)
case(certainty, for)
nmod(rule, certainty)
punct(ask, .)
det(interviewer, the)
nsubj:pass(instruct, interviewer)
aux:pass(instruct, be)
root(ROOT, instruct)
advmod(suggest, not)
mark(suggest, to)
xcomp(instruct, suggest)
obj(suggest, answer)
cc(much, and)
punct(suggest, ,)
advmod(much, as)
advmod(suggest, much)
mark(possible, as)
advcl(much, possible)
punct(record, ,)
mark(record, to)
advcl(suggest, record)
det(parent, the)
nmod:poss(word, parent)
case(parent, 's)
amod(word, actual)
obj(record, word)
mark(describe, as)
nsubj(describe, they)
advcl(record, describe)
det(child, the)
nmod:poss(behavior, child)
case(child, 's)
obj(describe, behavior)
case(situation, in)
compound(situation, home)
nmod(behavior, situation)
punct(instruct, .)
det(scale, the)
compound(scale, rating)
nsubj:pass(construct, scale)
case(compulsivity, of)
nmod(scale, compulsivity)
aux:pass(construct, be)
root(ROOT, construct)
mark(peruse, by)
advmod(peruse, first)
advcl(construct, peruse)
det(record, the)
compound(record, interview)
obj(peruse, record)
punct(peruse, ,)
conj(peruse, categorizing)
det(evidence, all)
obj(categorizing, evidence)
acl(evidence, relate)
case(compulsivity, to)
obl(relate, compulsivity)
punct(arrange, ,)
advmod(arrange, then)
conj(categorizing, arrange)
det(distribution, a)
obj(arrange, distribution)
case(information, of)
amod(information, such)
nmod(distribution, information)
advmod(information, apart)
case(record, from)
det(record, the)
compound(record, case)
obl(apart, record)
punct(construct, .)
amod(ratings, final)
nsubj:pass(make, ratings)
aux:pass(make, be)
root(ROOT, make)
case(basis, on)
det(basis, the)
obl(make, basis)
case(system, of)
det(system, a)
compound(system, point)
nmod(basis, system)
nsubj:pass(develop, which)
aux:pass(develop, be)
acl:relcl(system, develop)
mark(study, after)
advcl(develop, study)
det(distribution, the)
obj(study, distribution)
case(behavior, of)
amod(behavior, actual)
nmod(distribution, behavior)
acl(behavior, record)
cc(assign, and)
conj(record, assign)
compound(value, weight)
obj(assign, value)
case(type, to)
det(type, each)
obl(assign, type)
case(behavior, of)
nmod(type, behavior)
nsubj(deviant, that)
cop(deviant, be)
acl:relcl(type, deviant)
case(norm, from)
det(norm, the)
amod(norm, discover)
obl(deviant, norm)
punct(Children, .)
nsubj(scoring, Children)
advcl(those, scoring)
advmod(scoring, high)
case(compulsivity, in)
obl(scoring, compulsivity)
cop(those, be)
parataxis(make, those)
nsubj(give, who)
acl:relcl(those, give)
obj(give, evidence)
case(tension, of)
nmod(evidence, tension)
cc(emotionality, or)
conj(tension, emotionality)
case(situation, in)
nmod(tension, situation)
advmod(be, where)
expl(be, there)
acl:relcl(situation, be)
nsubj(be, lack)
case(organization, of)
nmod(lack, organization)
cc(conformity, or)
conj(organization, conformity)
case(standard, to)
nmod(lack, standard)
cc(expectation, and)
conj(standard, expectation)
punct(make, ,)
cc(make, or)
nsubj(make, who)
conj(be, make)
amod(effort, exaggerate)
obj(make, effort)
mark(achieve, to)
acl(effort, achieve)
det(goal, these)
obj(achieve, goal)
punct(make, .)
det(child, the)
amod(child, low)
amod(child, compulsive)
nsubj(one, child)
cop(one, be)
root(ROOT, one)
nsubj(appear, who)
acl:relcl(one, appear)
advmod(unconcerned, relatively)
xcomp(appear, unconcerned)
case(matter, about)
amod(matter, such)
obl(unconcerned, matter)
punct(one, .)
case(instance, for)
obl(rate, instance)
punct(rate, ,)
det(statement, the)
amod(statement, follow)
nsubj:pass(rate, statement)
aux:pass(rate, be)
root(ROOT, rate)
advmod(rate, low)
case(compulsivity, in)
obl(rate, compulsivity)
punct(rate, ,)
punct(rate, ``)
nsubj(neat, she)
cop(neat, be)
advmod(neat, naturally)
advmod(neat, quite)
root(ROOT, neat)
case(thing, about)
obl(neat, thing)
punct(bother, ,)
cc(bother, but)
nsubj(bother, it)
aux(bother, do)
advmod(bother, not)
conj(neat, bother)
obj(bother, she)
case(all, at)
obl(bother, all)
mark(messy, if)
nmod:poss(room, she)
nsubj(get, room)
aux(messy, get)
advcl(bother, messy)
punct(neat, .)
cc(clean, but)
nsubj(clean, she)
root(ROOT, clean)
obj(clean, it)
compound:prt(clean, up)
advmod(well, very)
advmod(clean, well)
mark(remind, when)
nsubj(remind, I)
advcl(clean, remind)
obj(remind, she)
punct(measurement, '')
punct(clean, .)
parataxis(clean, measurement)
case(anxiety, of)
nmod(measurement, anxiety)
flat(anxiety, Castaneda)
punct(Castaneda, ,)
appos(Castaneda, et)
flat(Castaneda, al)
parataxis(measurement, revise)
det(Scale, the)
compound(Scale, Taylor)
compound(Scale, Anxiety)
obj(revise, Scale)
case(use, for)
obl(revise, use)
case(child, with)
nmod(use, child)
punct(revise, .)
det(Taylor, the)
nsubj:pass(adapt, Taylor)
flat(Taylor, Scale)
aux:pass(adapt, be)
root(ROOT, adapt)
case(inventory, from)
det(inventory, the)
compound(inventory, Minnesota)
compound(personality, Multiphastic)
compound(inventory, personality)
obl(adapt, inventory)
punct(inventory, ,)
case(selection, with)
compound(selection, item)
obl(adapt, selection)
case(definition, base)
case(definition, upon)
amod(definition, clinical)
nmod(selection, definition)
case(anxiety, of)
nmod(definition, anxiety)
punct(adapt, .)
expl(be, there)
root(ROOT, be)
amod(evidence, much)
compound(evidence, research)
nsubj(be, evidence)
mark(validate, to)
acl(evidence, validate)
det(use, the)
obj(validate, use)
case(instrument, of)
det(instrument, the)
nmod(use, instrument)
mark(differentiating, in)
acl(instrument, differentiating)
obj(differentiating, individual)
nsubj(likely, who)
cop(likely, be)
acl:relcl(individual, likely)
mark(manifest, to)
xcomp(likely, manifest)
obj(manifest, anxiety)
case(degree, in)
amod(degree, varying)
obl(manifest, degree)
punct(be, .)
nsubj(demonstrate, reliability)
cc(validation, and)
compound(work, validation)
conj(reliability, work)
case(Scale, with)
det(Children, the)
nmod:poss(Scale, Children)
case(Children, 's)
compound(Scale, Anxiety)
nmod(work, Scale)
case(Castaneda, by)
nmod(Scale, Castaneda)
punct(Castaneda, ,)
appos(Castaneda, et)
appos(Castaneda, al)
root(ROOT, demonstrate)
obj(demonstrate, result)
advmod(similar, closely)
amod(result, similar)
case(finding, to)
det(finding, the)
obl(similar, finding)
case(scale, with)
det(scale, the)
amod(scale, adult)
nmod(finding, scale)
punct(demonstrate, .)
mark(design, although)
det(Taylor, the)
nsubj:pass(design, Taylor)
flat(Taylor, Scale)
aux:pass(design, be)
advcl(administer, design)
case(device, as)
det(device, a)
compound(device, group)
compound(device, testing)
obl(design, device)
punct(administer, ,)
case(study, in)
det(study, this)
obl(administer, study)
nsubj:pass(administer, it)
aux:pass(administer, be)
advmod(administer, individually)
root(ROOT, administer)
case(worker, by)
advmod(train, psychologically)
amod(worker, train)
obl(administer, worker)
nsubj(establish, who)
acl:relcl(worker, establish)
obj(establish, rapport)
cc(assist, and)
conj(establish, assist)
det(child, the)
obj(assist, child)
mark(read, in)
advcl(assist, read)
det(item, the)
obj(read, item)
punct(administer, .)
nsubj:pass(raise, relationship)
case(Anxiety, of)
nmod(relationship, Anxiety)
case(compulsivity, to)
nmod(relationship, compulsivity)
det(question, the)
nsubj:pass(raise, question)
aux(raise, may)
aux:pass(raise, be)
root(ROOT, raise)
mark(deal, whether)
fixed(whether, or)
fixed(whether, not)
nsubj(deal, we)
aux(deal, be)
ccomp(raise, deal)
case(factor, with)
det(factor, a)
amod(factor, common)
obl(deal, factor)
case(anxiety, in)
nmod(factor, anxiety)
cc(compulsivity, and)
conj(anxiety, compulsivity)
punct(raise, .)
det(ratings, the)
nummod(ratings, two)
nsubj(yield, ratings)
root(ROOT, yield)
det(correlation, a)
obj(yield, correlation)
nmod(correlation, of)
punct(correlation, ,)
nsubj(different, which)
cop(different, be)
advmod(different, not)
advmod(different, significantly)
acl:relcl(correlation, different)
case(zero, from)
obl(different, zero)
punct(yield, ;)
punct(yield, ;)
advmod(measure, therefore)
punct(measure, ,)
nsubj(measure, we)
aux(measure, have)
parataxis(yield, measure)
nummod(characteristic, two)
amod(characteristic, different)
obj(measure, characteristic)
punct(yield, .)
case(theory, in)
obl(way, theory)
punct(way, ,)
amod(behavior, compulsive)
nsubj(way, behavior)
cop(way, be)
det(way, a)
root(ROOT, way)
mark(diminish, of)
acl(way, diminish)
obj(diminish, anxiety)
punct(expect, ,)
cc(expect, and)
nsubj(expect, one)
aux(expect, might)
conj(way, expect)
det(association, a)
amod(association, negative)
obj(expect, association)
case(possibility, except)
case(possibility, for)
det(possibility, the)
obl(expect, possibility)
mark(sufficient, that)
case(child, for)
amod(child, many)
obl(sufficient, child)
det(defense, the)
amod(compulsive, obsessive)
punct(compulsive, -)
amod(defense, compulsive)
nsubj(sufficient, defense)
cop(sufficient, be)
advmod(sufficient, not)
acl(possibility, sufficient)
mark(quell, to)
xcomp(sufficient, quell)
det(amount, the)
obj(quell, amount)
case(anxiety, of)
nmod(amount, anxiety)
nsubj(suffer, they)
acl:relcl(amount, suffer)
punct(way, .)
det(issue, the)
nsubj:pass(take, issue)
case(interaction, of)
nmod(issue, interaction)
case(anxiety, between)
nmod(interaction, anxiety)
cc(compulsivity, and)
conj(anxiety, compulsivity)
aux(take, will)
aux:pass(take, be)
root(ROOT, take)
compound:prt(take, up)
advmod(take, later)
punct(measurement, .)
compound(measurement, criterion)
obj(take, measurement)
case(grade, in)
det(grade, the)
amod(grade, primary)
nmod(measurement, grade)
punct(permeate, ,)
nsubj(permeate, reading)
acl:relcl(measurement, permeate)
advmod(aspect, almost)
det(aspect, every)
obj(permeate, aspect)
case(progress, of)
compound(progress, school)
nmod(aspect, progress)
punct(experience, ,)
cc(experience, and)
det(child, the)
nmod:poss(experience, child)
case(child, 's)
amod(experience, early)
conj(aspect, experience)
case(success, of)
nmod(experience, success)
cc(failure, or)
conj(success, failure)
mark(learn, in)
acl(experience, learn)
mark(read, to)
xcomp(learn, read)
advmod(set, often)
xcomp(read, set)
det(pattern, a)
obj(set, pattern)
case(achievement, of)
amod(achievement, total)
nmod(pattern, achievement)
nsubj(endure, that)
aux(endure, be)
advmod(endure, relatively)
acl:relcl(achievement, endure)
case(year, throughout)
det(year, the)
amod(year, follow)
obl(endure, year)
punct(take, .)
mark(establish, in)
advcl(think, establish)
compound(measurement, criterion)
obj(establish, measurement)
punct(think, ,)
nsubj:pass(think, it)
aux:pass(think, be)
advmod(think, therefore)
root(ROOT, think)
xcomp(think, best)
mark(broaden, to)
advcl(best, broaden)
det(scope, the)
obj(broaden, scope)
case(act, beyond)
det(act, the)
compound(act, reading)
nmod(scope, act)
nmod:npmod(act, itself)
punct(think, .)
det(effect, the)
amod(effect, predict)
compound(effect, interaction)
nsubj(extend, effect)
aux(extend, should)
punct(extend, ,)
mark(potent, if)
advcl(extend, potent)
punct(extend, ,)
root(ROOT, extend)
nmod:poss(influence, its)
obj(extend, influence)
case(achievement, over)
det(achievement, all)
amod(achievement, academic)
obl(extend, achievement)
punct(extend, .)
det(Test, the)
compound(achievement, Stanford)
compound(Test, achievement)
nsubj:pass(administer, Test)
punct(Test, ,)
compound(j, form)
appos(Test, j)
punct(administer, ,)
aux:pass(administer, be)
root(ROOT, administer)
case(teacher, by)
compound(teacher, classroom)
obl(administer, teacher)
punct(teacher, ,)
acl(teacher, consist)
case(battery, of)
det(battery, a)
obl(consist, battery)
case(sub-test, of)
nummod(sub-test, six)
nmod(battery, sub-test)
punct(meaning, :)
compound(meaning, paragraph)
appos(teacher, meaning)
punct(meaning, ,)
conj(meaning, Word)
conj(meaning, meaning)
punct(Spelling, ,)
conj(meaning, Spelling)
punct(Language, ,)
conj(meaning, Language)
punct(computation, ,)
compound(computation, Arithmetic)
conj(meaning, computation)
punct(reasoning, ,)
cc(reasoning, and)
compound(reasoning, Arithmetic)
conj(meaning, reasoning)
punct(reasoning, .)
nsubj(involve, all)
case(sub-test, of)
det(sub-test, these)
nmod(all, sub-test)
parataxis(reasoning, involve)
xcomp(involve, read)
case(computation, except)
compound(computation, Arithmetic)
obl(read, computation)
punct(administer, .)
nsubj:pass(state, Scores)
aux:pass(state, be)
root(ROOT, state)
case(equivalent, in)
compound(equivalent, grade)
punct(equivalent, -)
obl(state, equivalent)
case(norm, on)
det(norm, a)
amod(norm, national)
nmod(equivalent, norm)
punct(state, .)
det(equivalent, the)
compound(median, battery)
amod(equivalent, median)
compound(equivalent, grade)
punct(equivalent, -)
nsubj:pass(use, equivalent)
aux:pass(use, be)
root(ROOT, use)
case(analysis, in)
compound(analysis, data)
obl(use, analysis)
case(study, in)
det(study, this)
nmod(analysis, study)
punct(use, .)
det(Scale, the)
compound(Scale, Wechsler)
compound(Scale, Intelligence)
nsubj:pass(administer, Scale)
case(Children, for)
nmod(Scale, Children)
aux:pass(administer, be)
root(ROOT, administer)
case(child, to)
det(child, each)
compound(child, sample)
amod(grade, third)
punct(grade, -)
compound(child, grade)
obl(administer, child)
case(worker, by)
det(worker, a)
amod(worker, clinical)
obl(administer, worker)
punct(administer, .)
det(relationship, the)
nsubj(fact, relationship)
case(score, of)
compound(score, intelligence)
compound(score, test)
nmod(relationship, score)
case(achievement, to)
compound(achievement, school)
nmod(score, achievement)
cop(fact, be)
det(fact, a)
advmod(establish, well)
punct(establish, -)
amod(fact, establish)
root(ROOT, fact)
punct(Af, ()
case(case, in)
det(case, this)
obl(fact, case)
punct(Af, ,)
appos(case, Af)
punct(Af, ))
punct(fact, ;)
punct(fact, ;)
advmod(necessary, therefore)
punct(necessary, ,)
case(investigation, in)
det(investigation, the)
obl(necessary, investigation)
case(hypothesis, of)
det(hypothesis, the)
amod(hypothesis, present)
nmod(investigation, hypothesis)
punct(necessary, ,)
expl(necessary, it)
cop(necessary, be)
parataxis(fact, necessary)
mark(control, to)
csubj(necessary, control)
det(factor, this)
obj(control, factor)
punct(fact, .)
det(score, the)
compound(score, criterion)
nsubj(index, score)
acl(score, use)
case(analysis, in)
det(analysis, the)
amod(analysis, statistical)
obl(use, analysis)
cop(index, be)
det(index, a)
root(ROOT, index)
case(under-achievement, of)
advmod(or, over)
punct(or, -)
cc(under-achievement, or)
conj(index, under-achievement)
punct(index, .)
nsubj(discrepancy, it)
cop(discrepancy, be)
det(discrepancy, the)
root(ROOT, discrepancy)
case(score, between)
det(score, the)
amod(score, actual)
amod(score, attain)
compound(score, achievement)
compound(score, test)
nmod(discrepancy, score)
cc(score, and)
det(score, the)
conj(score, score)
nsubj:pass(predict, that)
aux(predict, would)
aux:pass(predict, be)
acl:relcl(score, predict)
case(I.Q., by)
det(I.Q., the)
obl(predict, I.Q.)
punct(predict, .)
case(example, for)
nmod(basis, example)
punct(basis, ,)
case(basis, on)
det(basis, the)
obl(predict, basis)
case(equation, of)
det(equation, the)
compound(equation, regression)
nmod(basis, equation)
punct(expect, ,)
det(child, a)
nsubj:pass(expect, child)
case(I.Q., with)
det(I.Q., a)
nmod(child, I.Q.)
case(120, of)
nmod(I.Q., 120)
case(sample, in)
det(sample, this)
nmod(I.Q., sample)
aux(expect, would)
aux:pass(expect, be)
acl:relcl(basis, expect)
mark(earn, to)
xcomp(expect, earn)
det(score, a)
compound(score, achievement)
compound(score, test)
obj(earn, score)
case(4.8, of)
nmod(score, 4.8)
punct(equivalent, ()
compound(equivalent, grade)
appos(score, equivalent)
punct(equivalent, ))
punct(discrepancy, .)
mark(score, if)
det(child, a)
nsubj(score, child)
case(I.Q., with)
det(I.Q., a)
nmod(child, I.Q.)
case(120, of)
nmod(I.Q., 120)
advcl(be, score)
obj(score, 5.5)
case(achievement, in)
obl(score, achievement)
punct(be, ,)
nmod:poss(score, he)
compound(score, discrepancy)
nsubj(be, score)
aux(be, would)
root(ROOT, be)
punct(be, ,)
advcl(be, represent)
case(year, of)
nummod(year, one)
obl(represent, year)
case(achievement, of)
case(achievement, over)
punct(achievement, -)
nmod(year, achievement)
punct(be, . )
det(child, a)
nsubj:pass(expect, child)
case(I.Q., with)
det(I.Q., a)
nmod(child, I.Q.)
case(98, of)
nmod(I.Q., 98)
aux(expect, would)
aux:pass(expect, be)
root(ROOT, expect)
mark(earn, to)
xcomp(expect, earn)
det(score, a)
compound(test, achievement)
compound(score, test)
obj(earn, score)
case(3.5, of)
nmod(score, 3.5)
punct(expect, .)
mark(score, if)
det:predet(child, such)
det(child, a)
nsubj(score, child)
advcl(-.5, score)
obj(score, 3.0)
punct(-.5, ,)
nmod:poss(score, he)
compound(score, discrepancy)
nsubj(-.5, score)
aux(-.5, would)
cop(-.5, be)
root(ROOT, -.5)
punct(-.5, ,)
advcl(-.5, represent)
case(year, of)
nummod(year, one)
obl(represent, year)
case(under-achievement, of)
nmod(year, under-achievement)
punct(-.5, .)
case(manner, in)
det(manner, this)
obl(control, manner)
punct(control, ,)
det(factor, the)
nsubj:pass(control, factor)
acl(factor, measure)
case(test, by)
det(test, the)
compound(test, intelligence)
obl(measure, test)
aux:pass(control, be)
root(ROOT, control)
punct(control, ,)
advcl(control, allow)
amod(difference, discover)
obj(allow, difference)
case(achievement, in)
nmod(difference, achievement)
mark(interpret, to)
aux:pass(interpret, be)
advcl(discover, interpret)
mark(result, as)
advcl(interpret, result)
case(variable, from)
amod(variable, other)
obl(result, variable)
punct(control, .)
compound(test, result)
nsubj(present, test)
case(interaction, of)
nmod(test, interaction)
case(compulsivity, of)
nmod(interaction, compulsivity)
cc(method, and)
conj(compulsivity, teaching)
compound(Tables, method)
nmod(test, Tables)
nummod(Tables, 1)
cc(2, and)
conj(1, 2)
root(ROOT, present)
det(result, the)
obj(present, result)
case(analysis, of)
det(analysis, the)
amod(analysis, statistical)
nmod(result, analysis)
case(data, of)
det(data, the)
nmod(analysis, data)
mark(use, when)
nsubj:pass(use, compulsivity)
aux:pass(use, be)
advcl(portray, use)
case(variable, as)
det(variable, the)
amod(variable, descriptive)
obl(use, variable)
punct(portray, .)
nsubj(portray, Figure)
nummod(Figure, 1)
parataxis(present, portray)
det(score, the)
compound(score, mean)
compound(score, achievement)
obj(portray, score)
case(-group, of)
det(-group, each)
compound(-group, sub)
nmod(score, -group)
advmod(portray, graphically)
punct(portray, .)
advmod(better, first)
case(all, of)
obl(first, all)
punct(better, ,)
mark(surmise, as)
nsubj(surmise, we)
aux(surmise, have)
advcl(better, surmise)
punct(better, ,)
det(child, the)
advmod(compulsive, highly)
amod(child, compulsive)
nsubj(better, child)
case(score, in)
det(score, the)
amod(score, structure)
compound(score, setting)
nmod(child, score)
advmod(better, significantly)
root(ROOT, better)
punct(Af, ()
appos(better, Af)
punct(Af, ))
case(achievement, on)
obl(better, achievement)
mark(do, than)
advcl(better, do)
amod(child, similar)
obj(do, child)
case(school, in)
det(school, the)
amod(school, unstructure)
obl(do, school)
punct(better, .)
expl(see, it)
aux(see, can)
aux:pass(see, be)
root(ROOT, see)
advmod(see, too)
mark(do, that)
mark(contrast, when)
nsubj(contrast, we)
advcl(do, contrast)
obj(contrast, level)
case(compulsivity, of)
nmod(level, compulsivity)
case(school, within)
det(school, the)
amod(school, structure)
obl(contrast, school)
punct(do, ,)
det(child, the)
amod(child, high)
amod(child, compulsive)
nsubj(do, child)
ccomp(see, do)
xcomp(do, better)
punct(Af, ()
xcomp(do, Af)
punct(Af, ))
punct(see, .)
det(difference, no)
amod(difference, significant)
nsubj:pass(find, difference)
aux:pass(find, be)
ccomp(see, find)
case(achievement, in)
obl(find, achievement)
case(child, between)
amod(child, high)
cc(low, and)
conj(high, low)
conj(high, compulsive)
nmod(achievement, child)
case(school, within)
det(school, the)
amod(school, unstructure)
nmod(child, school)
punct(see, .)
det(hypothesis, the)
nsubj:pass(support, hypothesis)
mark(interaction, of)
expl(interaction, there)
cop(interaction, be)
det(interaction, a)
nmod(hypothesis, interaction)
case(method, between)
compound(method, compulsivity)
cc(teaching, and)
conj(compulsivity, teaching)
nmod(interaction, method)
aux:pass(support, be)
root(ROOT, support)
punct(support, ,)
case(case, in)
det(case, this)
obl(support, case)
punct(support, ,)
case(level, at)
det(level, the)
obl(support, level)
punct(support, .)
mark(expect, while)
nsubj(expect, we)
aux(expect, have)
advcl(support, expect)
mark(have, that)
amod(child, compulsive)
nsubj(have, child)
case(setting, in)
det(setting, the)
amod(setting, unstructure)
compound(setting, school)
nmod(child, setting)
aux(have, would)
ccomp(expect, have)
obj(have, difficulty)
mark(compare, when)
case(those, compare)
case(those, to)
obl(have, those)
case(structure, in)
det(structure, the)
nmod(those, structure)
punct(surprised, ,)
nsubj(surprised, we)
cop(surprised, be)
conj(have, surprised)
mark(find, to)
xcomp(surprised, find)
mark(compare, that)
det(achievement, the)
nsubj(compare, achievement)
case(compulsive, of)
det(compulsive, the)
amod(compulsive, high)
nmod(achievement, compulsive)
case(school, within)
det(school, the)
nmod(compulsive, school)
advmod(use, where)
det(method, the)
amod(word, whole)
punct(word, -)
compound(method, word)
nsubj:pass(use, method)
aux:pass(use, be)
acl:relcl(school, use)
mark(begin, in)
advcl(use, begin)
obj(begin, reading)
ccomp(find, compare)
advmod(compare, favorably)
case(that, with)
obl(compare, that)
case(compulsive, of)
det(compulsive, the)
amod(compulsive, low)
nmod(that, compulsive)
punct(support, .)
advmod(better, indeed)
nmod:poss(score, they)
compound(score, achievement)
nsubj(better, score)
cop(better, be)
advmod(better, somewhat)
root(ROOT, better)
case(basis, on)
det(basis, a)
amod(basis, absolute)
obl(better, basis)
mark(significant, although)
det(difference, the)
nsubj(significant, difference)
cop(significant, be)
advmod(significant, not)
advcl(better, significant)
punct(better, .)
nsubj(speculate, we)
root(ROOT, speculate)
mark(strain, that)
nsubj(strain, compulsive)
case(school, in)
det(school, the)
amod(school, unstructure)
nmod(compulsive, school)
cop(strain, be)
case(strain, under)
amod(strain, greater)
ccomp(speculate, strain)
case(lack, because)
fixed(because, of)
det(lack, the)
obl(strain, lack)
case(systemization, of)
nmod(lack, systemization)
case(setting, in)
nmod:poss(setting, they)
compound(setting, school)
nmod(lack, setting)
punct(intense, ,)
cc(intense, but)
mark(intense, that)
nmod:poss(need, they)
nsubj(intense, need)
mark(organize, to)
acl(need, organize)
punct(comfort, ()
case(comfort, for)
obl(organize, comfort)
punct(intense, ))
cop(intense, be)
advmod(intense, so)
conj(speculate, intense)
mark(struggle, that)
nsubj(struggle, they)
ccomp(intense, struggle)
mark(induce, to)
xcomp(struggle, induce)
det(rule, the)
amod(rule, phonic)
obj(induce, rule)
cc(achieve, and)
conj(induce, achieve)
case(spite, in)
obl(achieve, spite)
case(lack, of)
det(lack, the)
nmod(spite, lack)
case(direction, of)
nmod(lack, direction)
case(environment, from)
det(environment, the)
nmod(direction, environment)
punct(speculate, .)
expl(interesting, it)
cop(interesting, be)
root(ROOT, interesting)
mark(note, to)
csubj(interesting, note)
mark(make, that)
amod(compulsive, medium)
nsubj(make, compulsive)
case(school, in)
det(school, the)
amod(school, unstructure)
nmod(compulsive, school)
ccomp(note, make)
det(score, the)
amod(score, lowest)
compound(score, achievement)
obj(make, score)
punct(lower, ()
mark(lower, although)
advmod(lower, not)
advmod(lower, significantly)
advcl(make, lower)
punct(lower, ))
punct(interesting, .)
advmod(strong, possibly)
nmod:poss(compulsivity, they)
nsubj(strong, compulsivity)
cop(strong, be)
advmod(strong, not)
root(ROOT, strong)
advmod(strong, enough)
mark(cause, to)
advcl(strong, cause)
obj(cause, they)
mark(build, to)
xcomp(cause, build)
nmod:poss(structure, they)
amod(structure, own)
obj(build, structure)
punct(strong, .)
nmod:poss(conjecture, we)
nsubj(be, conjecture)
root(ROOT, be)
punct(be, ,)
advmod(accentuate, then)
punct(be, ,)
mark(teach, that)
advmod(teach, regardless)
case(manner, of)
det(manner, the)
obl(regardless, manner)
case(lesson, in)
det(lesson, which)
compound(lesson, school)
nsubj:pass(teach, lesson)
aux:pass(teach, be)
advcl(accentuate, teach)
punct(accentuate, ,)
det(child, the)
amod(child, compulsive)
nsubj(accentuate, child)
ccomp(be, accentuate)
det(element, those)
obj(accentuate, element)
case(lesson, of)
det(lesson, each)
nmod(element, lesson)
nsubj(aid, that)
acl:relcl(lesson, aid)
obj(aid, he)
mark(systematize, in)
advcl(aid, systematize)
nmod:poss(work, he)
obj(systematize, work)
punct(systematize, .)
mark(help, when)
advcl(systematize, help)
case(degree, by)
det(degree, a)
amod(degree, high)
obl(help, degree)
case(structure, of)
nmod(degree, structure)
case(presentation, in)
compound(presentation, lesson)
nmod(degree, presentation)
punct(degree, ,)
advmod(attain, then)
punct(attain, ,)
cc(attain, and)
advmod(then, only)
advmod(attain, then)
punct(attain, ,)
aux(attain, do)
det:predet(child, such)
det(child, a)
nsubj(attain, child)
conj(help, attain)
amod(success, unusual)
obj(attain, success)
punct(be, .)
nsubj:pass(present, Test)
case(interaction, of)
nmod(Test, interaction)
case(anxiety, of)
nmod(interaction, anxiety)
cc(method, and)
compound(method, teaching)
conj(anxiety, method)
det(analysis, the)
amod(analysis, statistical)
nmod(Test, analysis)
case(achievement, of)
nmod(analysis, achievement)
case(relation, in)
nmod(analysis, relation)
case(anxiety, to)
nmod(relation, anxiety)
cc(method, and)
compound(method, teaching)
conj(anxiety, method)
cc(interaction, and)
det(interaction, the)
conj(analysis, interaction)
case(two, of)
det(two, the)
nmod(interaction, two)
aux:pass(present, be)
root(ROOT, present)
case(Tables, in)
obl(present, Tables)
nummod(Tables, 3)
cc(Figure, and)
nummod(Figure, 4)
punct(4, .)
conj(present, Figure)
obj(Figure, 2)
cop(graph, be)
det(graph, a)
ccomp(Figure, graph)
case(score, of)
det(score, the)
compound(achievement, mean)
compound(score, achievement)
nmod(graph, score)
case(group, of)
det(group, each)
nmod(score, group)
punct(present, .)
mark(predict, as)
advcl(score, predict)
punct(score, ,)
det(child, the)
advmod(anxious, highly)
amod(child, anxious)
nsubj(score, child)
case(school, in)
det(school, the)
amod(school, unstructure)
nmod(child, school)
root(ROOT, score)
advmod(poorly, more)
advmod(score, poorly)
punct(Af, ()
xcomp(score, Af)
punct(Af, ))
case(those, than)
obl(score, those)
case(school, in)
det(school, the)
amod(school, structure)
nmod(those, school)
punct(score, .)
det(effect, the)
compound(effect, interaction)
nsubj:pass(see, effect)
punct(effect, ,)
nsubj(significant, which)
cop(significant, be)
acl:relcl(effect, significant)
case(level, at)
det(level, the)
obl(significant, level)
punct(see, ,)
aux(see, can)
aux:pass(see, be)
root(ROOT, see)
xcomp(see, best)
case(contrast, in)
det(contrast, the)
obl(best, contrast)
case(score, of)
compound(score, mean)
nmod(contrast, score)
punct(see, .)
mark(achieve, while)
amod(child, high)
compound(child, anxiety)
nsubj(achieve, child)
advcl(see, achieve)
advmod(less, significantly)
advmod(well, less)
advmod(achieve, well)
punct(Af, ()
obj(achieve, Af)
punct(Af, ))
case(school, in)
det(school, the)
amod(school, unstructure)
obl(achieve, school)
mark(do, than)
advcl(achieve, do)
amod(child, low)
compound(child, anxiety)
obj(do, child)
punct(appear, ,)
nsubj(appear, they)
conj(see, appear)
mark(do, to)
xcomp(appear, do)
case(least, at)
fixed(as, least)
cc(average, as)
fixed(as, well)
fixed(as, as)
det(average, the)
obl(do, average)
case(classroom, in)
det(classroom, the)
amod(classroom, structure)
nmod(average, classroom)
punct(appear, .)
det(aspect, the)
advmod(strike, most)
amod(aspect, strike)
nsubj(decrement, aspect)
case(interaction, of)
det(interaction, the)
nmod(aspect, interaction)
acl(interaction, demonstrate)
cop(decrement, be)
det(decrement, the)
amod(decrement, mark)
root(ROOT, decrement)
case(performance, in)
nmod(decrement, performance)
acl(performance, suffer)
case(child, by)
det(child, the)
advmod(anxious, highly)
amod(child, anxious)
obl(suffer, child)
case(school, in)
amod(school, unstructure)
nmod(child, school)
punct(decrement, .)
case(theory, accord)
fixed(accord, to)
det(theory, the)
nmod(decrement, theory)
acl(theory, propose)
punct(consequence, ,)
nsubj(consequence, this)
cop(consequence, be)
det(consequence, a)
acl:relcl(theory, consequence)
case(condition, of)
det(condition, the)
amod(condition, severe)
nmod(consequence, condition)
case(threat, of)
amod(threat, perceive)
nmod(condition, threat)
nsubj(persist, that)
acl:relcl(threat, persist)
xcomp(persist, unabated)
case(child, for)
det(child, the)
amod(child, anxious)
obl(unabated, child)
case(sort, in)
det(sort, a)
amod(sort, ambiguous)
obl(persist, sort)
case(environment, of)
compound(environment, school)
nmod(sort, environment)
punct(decrement, .)
det(fact, the)
nsubj:pass(think, fact)
mark(potent, that)
amod(threat, such)
nsubj(potent, threat)
cop(potent, be)
acl(fact, potent)
case(lesson, in)
det(lesson, the)
compound(lesson, beginning)
compound(lesson, reading)
obl(potent, lesson)
aux:pass(think, be)
root(ROOT, think)
mark(factor, to)
cop(factor, be)
det(factor, a)
amod(factor, vital)
xcomp(think, factor)
case(pattern, in)
det(pattern, the)
amod(pattern, continue)
nmod(factor, pattern)
case(failure, of)
nmod(pattern, failure)
cc(under-achievement, or)
conj(factor, under-achievement)
det(exhibit, these)
obj(under-achievement, child)
obj(under-achievement, exhibit)
punct(think, .)
det(child, the)
nsubj(direct, child)
case(anxiety, with)
amod(anxiety, high)
nmod(child, anxiety)
aux(direct, may)
advmod(direct, first)
root(ROOT, direct)
nmod:poss(energy, he)
obl:npmod(release, anxiety)
punct(release, -)
amod(energy, release)
obj(direct, energy)
case(achievement, toward)
obl(direct, achievement)
punct(fail, ,)
cc(reduce, but)
mark(reduce, because)
nmod:poss(distress, he)
nsubj(reduce, distress)
advmod(reduce, severely)
advcl(fail, reduce)
det(ability, the)
obj(reduce, ability)
case(discrimination, of)
nmod(ability, discrimination)
cc(memorization, and)
conj(discrimination, memorization)
case(symbol, of)
amod(symbol, complex)
nmod(discrimination, symbol)
punct(fail, ,)
det(child, the)
nsubj(fail, child)
aux(fail, may)
conj(direct, fail)
case(attempt, in)
nmod:poss(attempt, he)
amod(attempt, initial)
obl(fail, attempt)
mark(master, to)
acl(attempt, master)
det(problem, the)
obj(master, problem)
punct(confirm, .)
nsubj(confirm, Failure)
conj(fail, confirm)
det(threat, the)
obj(confirm, threat)
punct(increase, ,)
cc(increase, and)
det(intensity, the)
nsubj:pass(increase, intensity)
case(anxiety, of)
nmod(intensity, anxiety)
aux:pass(increase, be)
conj(confirm, increase)
mark(become, as)
det(learning, the)
amod(learning, require)
nsubj(become, learning)
advcl(increase, become)
advmod(difficult, more)
xcomp(become, difficult)
punct(become, ,)
mark(pronounce, so)
fixed(so, that)
case(time, by)
det(time, the)
obl(reach, time)
det(child, the)
nsubj(reach, child)
advcl(difficult, reach)
det(grade, the)
amod(grade, third)
obj(reach, grade)
det(decrement, the)
nsubj:pass(pronounce, decrement)
case(performance, in)
nmod(decrement, performance)
aux:pass(pronounce, be)
advcl(reach, pronounce)
punct(direct, .)
det(individual, the)
nsubj(approach, individual)
case(anxiety, with)
amod(anxiety, high)
nmod(individual, anxiety)
case(classroom, in)
det(classroom, the)
amod(classroom, structure)
nmod(anxiety, classroom)
aux(approach, may)
root(ROOT, approach)
det(task, the)
compound(task, learning)
obj(approach, task)
case(power, with)
det(power, the)
amod(power, same)
amod(power, increase)
compound(power, energy)
cc(lower, and)
conj(energy, lower)
nmod(task, power)
case(discrimination, of)
nmod(power, discrimination)
punct(approach, .)
cc(simple, but)
det(symbol, the)
nsubj(simple, symbol)
nsubj:pass(ask, he)
aux:pass(ask, be)
acl:relcl(symbol, ask)
mark(learn, to)
xcomp(ask, learn)
cop(simple, be)
root(ROOT, simple)
punct(simple, .)
mark(show, as)
advcl(superior, show)
advmod(show, earlier)
punct(superior, ,)
det(individual, the)
advmod(anxious, highly)
amod(individual, anxious)
nsubj(superior, individual)
aux(superior, may)
cop(superior, be)
root(ROOT, superior)
case(memorize, in)
nmod:poss(memorize, he)
obl(superior, memorize)
case(element, of)
amod(element, simple)
nmod(memorize, element)
punct(superior, .)
nsubj(reduce, success)
root(ROOT, reduce)
det(prospect, the)
obj(reduce, prospect)
case(threat, of)
nmod(prospect, threat)
cc(improve, and)
nmod:poss(power, he)
nsubj:pass(improve, power)
case(discrimination, of)
nmod(power, discrimination)
aux:pass(improve, be)
conj(reduce, improve)
punct(reduce, .)
case(time, by)
det(time, the)
obl(attack, time)
det(child, the)
nsubj(attack, child)
advmod(attack, first)
root(ROOT, attack)
det(problem, the)
amod(problem, actual)
obj(attack, problem)
case(reading, of)
nmod(problem, reading)
punct(attack, ,)
nsubj(familiar, he)
cop(familiar, be)
advmod(familiar, completely)
parataxis(attack, familiar)
cc(ease, and)
case(ease, at)
conj(familiar, ease)
case(all, with)
nmod(ease, all)
case(element, of)
det(element, the)
nmod(all, element)
case(word, of)
nmod(element, word)
punct(familiar, .)
advmod(create, apparently)
amod(challenge, academic)
nsubj(create, challenge)
case(setting, in)
det(setting, the)
amod(setting, structure)
nmod(challenge, setting)
conj(attack, create)
det(optimum, a)
obj(create, optimum)
case(stress, of)
nmod(optimum, stress)
mark(able, so)
fixed(so, that)
det(child, the)
nsubj(able, child)
case(anxiety, with)
amod(anxiety, high)
nmod(child, anxiety)
cop(able, be)
advcl(create, able)
mark(achieve, to)
xcomp(able, achieve)
mark(arouse, because)
nsubj:pass(arouse, he)
aux:pass(arouse, be)
advcl(achieve, arouse)
case(state, to)
det(state, a)
amod(state, energetic)
obl(arouse, state)
mark(confused, without)
cop(confused, become)
advcl(arouse, confused)
cc(panick, or)
conj(confused, panick)
punct(attack, .)
nmod:poss(evidence, Sarason)
compound(Sarason, et)
compound(present, al)
amod(evidence, present)
root(ROOT, evidence)
mark(suffer, that)
det(child, the)
amod(child, anxious)
nsubj(suffer, child)
aux(suffer, will)
acl(evidence, suffer)
case(situation, in)
det(situation, the)
obl:npmod(like, test)
punct(like, -)
amod(situation, like)
obl(suffer, situation)
punct(impair, ,)
cc(impair, and)
mark(impair, that)
nmod:poss(performance, he)
nsubj:pass(impair, performance)
aux(impair, will)
aux:pass(impair, be)
conj(suffer, impair)
mark(receive, unless)
nsubj(receive, he)
advcl(impair, receive)
xcomp(receive, support)
cc(accept, and)
conj(support, accept)
obj(accept, treatment)
case(teacher, from)
det(teacher, the)
obl(accept, teacher)
punct(evidence, .)
mark(replication, although)
det(study, the)
amod(study, present)
nsubj(replication, study)
cop(replication, be)
advmod(replication, not)
det(replication, a)
amod(replication, direct)
advcl(confirm, replication)
case(investigation, of)
nmod:poss(investigation, they)
nmod(replication, investigation)
punct(confirm, ,)
det(result, the)
nsubj(confirm, result)
aux(confirm, do)
advmod(confirm, not)
root(ROOT, confirm)
nmod:poss(conclusion, they)
obj(confirm, conclusion)
punct(confirm, .)
nsubj(judge, observer)
punct(judge, ,)
case(system, in)
det(system, the)
nummod(system, two)
compound(system, school)
obl(judge, system)
acl(system, study)
advmod(study, here)
punct(judge, ,)
root(ROOT, judge)
det(teacher, the)
obj(judge, teacher)
case(school, in)
det(school, the)
amod(school, structure)
nmod(teacher, school)
mark(impersonal, to)
cop(impersonal, be)
advmod(impersonal, more)
xcomp(judge, impersonal)
cc(demand, and)
conj(impersonal, demand)
punct(judge, ,)
mark(judge, while)
det(atmosphere, the)
nsubj:pass(judge, atmosphere)
case(school, in)
det(school, the)
amod(school, unstructure)
nmod(atmosphere, school)
aux:pass(judge, be)
advcl(impersonal, judge)
mark(support, to)
aux(support, be)
advmod(support, more)
xcomp(judge, support)
cc(accept, and)
conj(support, accept)
punct(judge, .)
cc(suffer, yet)
det(child, the)
advmod(anxious, highly)
amod(child, anxious)
nsubj(suffer, child)
root(ROOT, suffer)
det(disadvantage, a)
amod(disadvantage, tremendous)
obj(suffer, disadvantage)
advmod(school, only)
case(school, in)
det(school, the)
amod(school, unstructure)
nmod(disadvantage, school)
punct(perform, ,)
cc(perform, and)
conj(suffer, perform)
advmod(perform, as)
fixed(as, well)
cc(better, or)
conj(as, better)
case(average, than)
obl(better, average)
case(setting, in)
det(setting, the)
amod(setting, structure)
obl(average, setting)
punct(mean, .)
compound(Analysis, Analysis)
nsubj(mean, Analysis)
parataxis(suffer, mean)
det(evaluation, the)
obj(mean, evaluation)
case(subpart, of)
nmod(evaluation, subpart)
punct(ratings, ,)
det(ratings, the)
amod(ratings, comparative)
conj(evaluation, ratings)
case(part, of)
nmod(ratings, part)
punct(comprehension, ,)
det(comprehension, the)
conj(ratings, comprehension)
case(meaning, of)
det(meaning, the)
nmod(comprehension, meaning)
case(element, of)
amod(element, isolate)
nmod(meaning, element)
punct(Analysis, .)
nsubj:pass(do, Analysis)
case(roleplay, in)
nmod(Analysis, roleplay)
aux:pass(do, be)
advmod(do, usually)
acl:relcl(evaluation, do)
case(purpose, for)
det(purpose, the)
obl(do, purpose)
case(point, of)
amod(point, understanding)
amod(point, strong)
cc(weak, and)
conj(strong, weak)
nmod(purpose, point)
case(individual, of)
det(individual, a)
nmod(point, individual)
cc(process, or)
case(process, as)
det(process, a)
conj(individual, process)
mark(eliminate, to)
acl(process, eliminate)
amod(part, weak)
obj(eliminate, part)
cc(strengthen, and)
conj(eliminate, strengthen)
amod(part, good)
obj(strengthen, part)
punct(suffer, .)
amod(purpose, Impersonal)
nsubj:pass(place, purpose)
advmod(purpose, up)
case(stress, to)
det(stress, this)
compound(stress, point)
nsubj:pass(place, stress)
aux(place, have)
aux:pass(place, be)
root(ROOT, place)
case(roleplay, on)
obl(place, roleplay)
case(term, in)
obl(place, term)
case(individual, of)
nmod(term, individual)
punct(place, .)
nsubj:pass(do, roleplay)
aux(do, can)
aux:pass(do, be)
root(ROOT, do)
case(purpose, for)
det:predet(purpose, quite)
det(purpose, a)
amod(purpose, different)
obl(do, purpose)
punct(do, :)
mark(evaluate, to)
advcl(do, evaluate)
obj(evaluate, procedure)
punct(procedure, ,)
advmod(evaluate, regardless)
case(individual, of)
nmod(procedure, individual)
punct(do, .)
case(example, for)
obl(analyze, example)
punct(analyze, :)
det(presentation, a)
compound(presentation, sale)
nsubj:pass(analyze, presentation)
aux(analyze, can)
aux:pass(analyze, be)
root(ROOT, analyze)
cc(evaluate, and)
conj(analyze, evaluate)
case(roleplay, through)
obl(analyze, roleplay)
punct(analyze, .)
nsubj(let, example)
root(ROOT, let)
obj(let, we)
advmod(put, now)
xcomp(let, put)
det(flesh, some)
obj(put, flesh)
case(bone, on)
det(bone, the)
amod(bone, theoretical)
obl(put, bone)
nsubj(assemble, we)
aux(assemble, have)
acl:relcl(bone, assemble)
mark(give, by)
advcl(assemble, give)
obj(give, illustration)
case(roleplay, of)
nmod(illustration, roleplay)
acl(roleplay, use)
case(evaluation, for)
obl(use, evaluation)
cc(analysis, and)
conj(evaluation, analysis)
punct(let, .)
nsubj(keep, one)
aux(keep, should)
root(ROOT, keep)
case(mind, in)
obl(keep, mind)
mark(unexplored, that)
nsubj(unexplored, many)
case(possiblity, of)
det(possiblity, the)
amod(possiblity, exciting)
nmod(many, possiblity)
case(roleplay, of)
nmod(possiblity, roleplay)
cop(unexplored, be)
advmod(unexplored, largely)
ccomp(keep, unexplored)
cc(use, and)
aux(use, have)
advmod(use, not)
aux:pass(use, be)
conj(unexplored, use)
case(industry, in)
obl(use, industry)
case(extent, to)
det(extent, the)
obl(use, extent)
mark(military, that)
nsubj(military, they)
aux(military, have)
cop(military, be)
case(area, in)
amod(area, military)
cc(other, and)
conj(military, other)
nmod(evaluation, area)
punct(evaluation, .)
nsubj(president, evaluation)
det(president, the)
nsubj(have, president)
case(firm, of)
det(firm, a)
amod(firm, small)
nmod(president, firm)
acl(firm, sell)
compound(product, restaurant)
obj(sell, product)
punct(have, ,)
conj(keep, have)
amod(difficulty, considerable)
obj(have, difficulty)
mark(find, in)
acl(difficulty, find)
amod(salesmen, suitable)
obj(find, salesmen)
case(business, for)
nmod:poss(business, he)
obl(find, business)
punct(keep, .)
csubj(expensive, interview)
punct(expensive, ,)
advcl(interview, check)
obj(check, reference)
punct(check, ,)
conj(check, train)
det(salesmen, the)
obj(train, salesmen)
punct(expensive, ,)
conj(train, have)
obj(have, they)
xcomp(have, go)
case(salesmen, with)
advmod(experience, more)
amod(salesmen, experience)
obl(go, salesmen)
cop(expensive, be)
root(ROOT, expensive)
punct(expensive, --)
cc(high, and)
det(rate, the)
nsubj(high, rate)
case(attrition, of)
nmod(rate, attrition)
case(resignation, due)
fixed(due, to)
nmod(rate, resignation)
cc(performance, or)
amod(performance, unsatisfactory)
conj(resignation, performance)
cop(high, be)
advmod(high, too)
conj(expensive, high)
punct(expensive, .)
expl(experience, it)
cop(experience, be)
nmod:poss(experience, he)
root(ROOT, experience)
mark(find, that)
advmod(salesman, only)
nummod(salesman, one)
amod(salesman, good)
nsubj:pass(find, salesman)
aux:pass(find, be)
csubj(experience, find)
case(hire, out)
case(hire, of)
det(hire, every)
compound(hire, seven)
xcomp(find, hire)
punct(experience, --)
cc(hire, and)
advmod(one, only)
nsubj:pass(hire, one)
aux:pass(hire, be)
conj(find, hire)
case(seven, out)
mark(interview, of)
det(seven, every)
compound(interview, seven)
advcl(hire, interview)
punct(experience, .)
nsubj:pass(offer, roleplay)
aux:pass(offer, be)
root(ROOT, offer)
case(solution, as)
det(solution, a)
obl(offer, solution)
punct(offer, --)
cc(work, and)
det(procedure, the)
nsubj(work, procedure)
conj(offer, work)
mark(follow, as)
advcl(work, follow)
punct(offer, :)
det(candidate, all)
nsubj:pass(invite, candidate)
aux:pass(invite, be)
parataxis(offer, invite)
case(room, to)
det(room, a)
compound(room, hotel)
compound(room, conference)
obl(invite, room)
punct(room, ,)
advmod(explain, where)
det(president, the)
nsubj(explain, president)
acl:relcl(room, explain)
det(difficulty, the)
obj(explain, difficulty)
nsubj(have, he)
acl:relcl(difficulty, have)
punct(seem, ,)
cc(seem, and)
advmod(unnecessary, how)
advmod(seem, unnecessary)
nsubj(seem, it)
conj(explain, seem)
case(he, to)
obl(seem, he)
mark(hire, to)
advcl(seem, hire)
obj(hire, people)
nsubj(work, who)
advmod(work, just)
aux(work, do)
advmod(work, not)
acl:relcl(people, work)
compound:prt(work, out)
punct(offer, .)
case(place, in)
obl(tell, place)
mark(ask, of)
acl(place, ask)
obj(ask, salesmen)
mark(fill, to)
xcomp(ask, fill)
obj(fill, questionnaire)
punct(check, ,)
conj(fill, check)
nmod:poss(reference, they)
obj(check, reference)
punct(check, ,)
conj(check, interview)
obj(interview, they)
punct(ask, ,)
conj(interview, ask)
obj(ask, they)
mark(try, to)
aux:pass(try, be)
xcomp(ask, try)
compound:prt(try, out)
punct(tell, ,)
nsubj(tell, he)
root(ROOT, tell)
obj(tell, they)
nsubj(prefer, he)
aux(prefer, would)
ccomp(tell, prefer)
mark(test, to)
xcomp(prefer, test)
obj(test, they)
punct(tell, .)
det(person, each)
nsubj(be, person)
root(ROOT, be)
mark(enter, to)
ccomp(be, enter)
det(room, the)
compound(room, testing)
obj(enter, room)
punct(enter, ,)
advcl(enter, carry)
det(suitcase, a)
obj(carry, suitcase)
case(samples, of)
nmod(suitcase, samples)
punct(be, .)
det(salesman, each)
nsubj(be, salesman)
root(ROOT, be)
mark(read, to)
ccomp(be, read)
det(sheet, a)
obj(read, sheet)
acl(sheet, contain)
det(description, a)
obj(contain, description)
case(product, of)
det(product, the)
nmod(description, product)
punct(be, .)
case(room, in)
det(room, the)
compound(room, testing)
obl(be, room)
nsubj(be, he)
root(ROOT, be)
mark(make, to)
ccomp(be, make)
punct(make, ,)
advmod(presentation, successively)
punct(presentation, ,)
nummod(presentation, three)
obj(make, presentation)
case(people, to)
nummod(people, three)
amod(people, different)
nmod(presentation, people)
punct(be, .)
case(room, in)
det(room, the)
compound(room, testing)
obl(serve, room)
punct(serve, ,)
nsubj(serve, three)
case(salesmen, of)
det(salesmen, the)
amod(salesmen, veteran)
nmod(three, salesmen)
root(ROOT, serve)
case(antagonist, as)
obl(serve, antagonist)
punct(serve, .)
nsubj(handle, one)
root(ROOT, handle)
det(salesman, the)
obj(handle, salesman)
case(manner, in)
det(manner, a)
amod(manner, friendly)
obl(handle, manner)
punct(handle, ,)
nsubj(manner, another)
case(manner, in)
det(manner, a)
amod(manner, rough)
obl(handle, manner)
punct(tell, ,)
cc(tell, and)
det(third, the)
nsubj:pass(tell, third)
case(manner, in)
det(manner, a)
compound(manner, hesitate)
nmod(third, manner)
punct(tell, .)
nsubj:pass(tell, each)
aux:pass(tell, be)
parataxis(handle, tell)
mark(purchase, to)
xcomp(tell, purchase)
obj(purchase, material)
mark(feel, if)
nsubj(feel, he)
advcl(purchase, feel)
case(it, like)
obl(feel, it)
punct(handle, .)
det(antagonist, the)
nsubj(come, antagonist)
root(ROOT, come)
advmod(come, in)
punct(one, ,)
parataxis(come, one)
case(time, at)
det(time, a)
nmod(one, time)
punct(see, ,)
cc(see, and)
aux(see, do)
advmod(see, not)
conj(come, see)
cc(hear, or)
conj(see, hear)
det(presentation, the)
amod(presentation, other)
obj(hear, presentation)
punct(come, .)
case(presentation, after)
det(presentation, each)
obl(write, presentation)
punct(write, ,)
det(antagonist, the)
nsubj(write, antagonist)
root(ROOT, write)
nmod:poss(judgment, he)
obj(write, judgment)
case(salesmen, of)
det(salesmen, the)
nmod(judgment, salesmen)
punct(write, ;)
punct(write, ;)
cc(test, and)
advmod(test, so)
aux(test, do)
det(observer, the)
nsubj:pass(test, observer)
acl(observer, consist)
case(president, of)
det(president, the)
obl(consist, president)
punct(three, ,)
appos(president, three)
case(salesmen, of)
nmod:poss(salesmen, he)
nmod(three, salesmen)
cc(psychologist, and)
det(psychologist, a)
conj(salesmen, psychologist)
punct(psychologist, .)
nummod(salesmen, ten)
nsubj:pass(test, salesmen)
aux:pass(test, be)
parataxis(write, test)
case(morning, in)
det(morning, the)
obl(test, morning)
cc(more, and)
nummod(more, ten)
conj(morning, more)
case(afternoon, in)
det(afternoon, the)
obl(more, afternoon)
punct(write, .)
det(procedure, this)
nsubj:pass(repeat, procedure)
aux:pass(repeat, be)
root(ROOT, repeat)
nummod(day, one)
obl:tmod(repeat, day)
det(month, a)
obl:tmod(repeat, month)
case(month, for)
nummod(month, four)
obl(repeat, month)
punct(repeat, .)
det(average, the)
compound(average, bat)
nsubj(increase, average)
case(success, of)
nummod(success, one)
nmod(average, success)
case(seven, out)
case(seven, of)
obl(increase, seven)
root(ROOT, increase)
case(one, to)
obl(increase, one)
case(three, out)
case(three, of)
nmod(one, three)
punct(increase, .)
det(president, the)
nsubj(feel, president)
case(firm, of)
det(firm, the)
nmod(president, firm)
punct(feel, ,)
acl(president, calculate)
obj(calculate, expense)
advmod(calculate, alone)
punct(feel, ,)
root(ROOT, feel)
nmod:poss(cost, he)
nsubj(drop, cost)
aux(drop, have)
ccomp(feel, drop)
nummod(half, one)
punct(half, -)
obj(drop, half)
mark(improve, while)
nsubj(improve, success)
case(selection, in)
nmod(success, selection)
aux(improve, have)
advcl(drop, improve)
case(hundred, over)
compound(hundred, one)
obj(improve, hundred)
case(cent, per)
nmod(hundred, cent)
punct(feel, .)
det(reason, the)
nsubj(be, reason)
case(value, for)
det(value, the)
nmod(reason, value)
case(procedure, of)
det(procedure, this)
nmod(value, procedure)
root(ROOT, be)
advmod(be, simply)
mark(test, that)
det(applicant, the)
nsubj:pass(test, applicant)
aux:pass(test, be)
ccomp(be, test)
punct(work, ``)
case(work, at)
obl(test, work)
punct(work, '')
case(situation, in)
amod(situation, different)
obl(test, situation)
case(judgment, by)
det(judgment, the)
obl(test, judgment)
case(number, of)
det(number, a)
nmod(judgment, number)
case(expert, of)
nmod(number, expert)
nsubj(see, who)
aux(see, could)
acl:relcl(number, see)
advmod(conduct, how)
det(salesmen, the)
nsubj(conduct, salesmen)
ccomp(see, conduct)
obj(conduct, themselves)
case(owner, with)
amod(owner, different)
punct(owner, ,)
cc(typical, but)
conj(different, typical)
compound(owner, restaurant)
obl(conduct, owner)
cc(manager, and)
conj(owner, manager)
punct(be, .)
nsubj(try, they)
aux(try, be)
punct(try, ,)
case(sense, in)
det(sense, a)
obl(try, sense)
punct(try, ,)
punct(try, ``)
root(ROOT, try)
compound:prt(try, out)
punct(try, '')
case(situation, in)
amod(situation, realistic)
obl(try, situation)
punct(try, .)
case(point, from)
det(point, the)
obl(waste, point)
case(view, of)
nmod(point, view)
case(applicant, of)
det(applicant, the)
nmod(view, applicant)
punct(waste, ,)
amod(time, less)
nsubj:pass(waste, time)
aux:pass(waste, be)
root(ROOT, waste)
mark(evaluate, in)
aux:pass(evaluate, be)
advcl(waste, evaluate)
punct(waste, --)
cc(get, and)
nsubj(get, they)
conj(waste, get)
det(meal, a)
obj(get, meal)
case(it, out)
case(it, of)
obl(get, it)
cc(insight, as)
fixed(as, well)
fixed(as, as)
det(insight, some)
obl(get, insight)
case(performance, into)
nmod:poss(performance, they)
nmod(insight, performance)
punct(waste, .)
det(use, another)
nsubj(illustrate, use)
case(roleplay, of)
nmod(use, roleplay)
case(evaluation, for)
nmod(roleplay, evaluation)
root(ROOT, illustrate)
advmod(use, how)
det(procedure, this)
nsubj:pass(use, procedure)
aux(use, can)
aux:pass(use, be)
ccomp(illustrate, use)
case(situation, in)
amod(situation, real)
compound(situation, life)
obl(use, situation)
case(equipment, without)
amod(equipment, special)
obl(use, equipment)
cc(assistant, or)
amod(assistant, special)
conj(equipment, assistant)
case(course, during)
det(course, the)
amod(course, daily)
nmod(equipment, course)
case(work, of)
nmod(course, work)
punct(illustrate, .)
det(position, the)
nsubj:pass(open, position)
case(receptionist, of)
nmod(position, receptionist)
aux:pass(open, be)
root(ROOT, open)
case(office, in)
det(office, a)
amod(office, large)
obl(open, office)
cc(make, and)
det(announcement, a)
nsubj:pass(make, announcement)
aux:pass(make, be)
conj(open, make)
case(girl, to)
det(girl, the)
amod(girl, other)
obl(make, girl)
advmod(work, already)
advcl(make, work)
mark(apply, that)
nsubj(apply, they)
aux(apply, could)
ccomp(work, apply)
case(job, for)
det(job, this)
obl(apply, job)
nsubj(have, which)
acl:relcl(job, have)
amod(prestige, higher)
obj(have, prestige)
cc(salary, and)
advmod(higher, slightly)
amod(salary, higher)
conj(prestige, salary)
case(position, than)
compound(position, type)
cc(clerk, and)
conj(type, clerk)
nmod(salary, position)
punct(open, .)
det(applicant, all)
nsubj(familiar, applicant)
cop(familiar, be)
advmod(familiar, generally)
root(ROOT, familiar)
case(work, with)
det(work, the)
obl(familiar, work)
case(receptionist, of)
det(receptionist, the)
nmod(work, receptionist)
punct(familiar, .)
case(end, at)
det(end, the)
obl(take, end)
case(work, of)
nmod(end, work)
nummod(day, one)
nmod:tmod(end, day)
punct(take, ,)
det(man, the)
compound(man, personnel)
nsubj(take, man)
root(ROOT, take)
det(applicant, the)
obj(take, applicant)
obj(take, one)
case(time, at)
det(time, a)
obl(take, time)
punct(ask, ,)
conj(take, ask)
obj(ask, they)
mark(sit, to)
xcomp(ask, sit)
case(desk, behind)
det(receptionist, the)
nmod:poss(desk, receptionist)
case(receptionist, 's)
obl(sit, desk)
cc(play, and)
nsubj(play, he)
advmod(play, then)
conj(take, play)
det(role, the)
obj(play, role)
case(number, of)
det(number, a)
nmod(role, number)
case(people, of)
nmod(number, people)
nsubj(come, who)
aux(come, might)
acl:relcl(people, come)
case(receptionist, to)
det(receptionist, the)
obl(come, receptionist)
case(number, with)
det(number, a)
obl(come, number)
case(query, of)
nmod(number, query)
cc(number, and)
case(number, for)
det(number, a)
conj(number, number)
case(purpose, of)
nmod(number, purpose)
punct(take, .)
det(girl, each)
nsubj:pass(test, girl)
aux:pass(test, be)
advmod(test, independently)
punct(test, ``)
root(ROOT, test)
punct(test, '')
case(man, by)
det(man, the)
compound(man, personnel)
obl(test, man)
punct(serve, ,)
cc(serve, and)
nsubj(serve, he)
conj(test, serve)
advmod(only, not)
cc:preconj(director, only)
case(director, as)
det(director, the)
obl(serve, director)
punct(antagonist, ,)
cc(antagonist, but)
case(antagonist, as)
det(antagonist, the)
conj(director, antagonist)
cc(observer, and)
det(observer, the)
conj(antagonist, observer)
punct(test, .)
advmod(surprise, Somewhat)
case(surprise, to)
nmod:poss(surprise, he)
obl(find, surprise)
nsubj(find, he)
root(ROOT, find)
mark(consider, that)
nummod(girl, one)
nsubj(find, girl)
punct(girl, ,)
obj(consider, whom)
nsubj(consider, he)
aux(consider, would)
advmod(consider, never)
aux(consider, have)
acl:relcl(girl, consider)
case(job, for)
det(job, the)
obl(consider, job)
mark(appear, since)
nsubj(appear, she)
aux(appear, have)
advcl(consider, appear)
advmod(mousy, somewhat)
xcomp(appear, mousy)
cc(office, and)
advmod(office, also)
aux(office, have)
cop(office, be)
case(office, in)
det(office, the)
conj(appear, office)
det(time, a)
advmod(short, relatively)
amod(time, short)
obl:tmod(office, time)
punct(do, ,)
conj(office, do)
det(job, the)
advmod(outstanding, most)
amod(job, outstanding)
obj(do, job)
mark(play, of)
acl(job, play)
det(role, the)
obj(play, role)
case(receptionist, of)
nmod(role, receptionist)
punct(play, ,)
conj(play, show)
obj(show, wit)
punct(sparkle, ,)
conj(wit, sparkle)
punct(aplomb, ,)
cc(aplomb, and)
conj(wit, aplomb)
punct(find, .)
nsubj:pass(hire, she)
aux:pass(hire, be)
root(ROOT, hire)
cc(find, and)
aux:pass(find, be)
conj(hire, find)
mark(satisfactory, to)
cop(satisfactory, be)
advmod(satisfactory, entirely)
xcomp(find, satisfactory)
mark(play, when)
nsubj(play, she)
advcl(satisfactory, play)
det(role, the)
obj(play, role)
nummod(hour, eight)
obl:tmod(play, hour)
det(day, a)
obl:tmod(play, day)
punct(hire, .)
root(ROOT, Analysis)
mark(consider, in)
acl(Analysis, consider)
obj(consider, roleplay)
case(analysis, for)
obl(consider, analysis)
nsubj(enter, we)
parataxis(Analysis, enter)
det(area, a)
advmod(complex, more)
amod(area, complex)
obj(enter, area)
punct(enter, ,)
mark(deal, since)
nsubj(deal, we)
aux(deal, be)
advmod(deal, now)
advmod(longer, no)
advmod(deal, longer)
advcl(enter, deal)
case(decision, with)
det(decision, a)
amod(decision, simple)
case(all, over)
punct(all, -)
det(decision, all)
obl(deal, decision)
cc(examination, but)
cc(examination, rather)
fixed(rather, with)
det(examination, the)
conj(decision, examination)
cc(evaluation, and)
conj(examination, evaluation)
case(element, of)
amod(element, many)
nmod(examination, element)
acl(element, see)
case(function, in)
amod(function, dynamic)
obl(see, function)
punct(Analysis, .)
det(case, some)
nsubj(help, case)
case(evidence, in)
nmod(case, evidence)
case(use, of)
det(use, the)
nmod(evidence, use)
case(roleplay, of)
nmod(use, roleplay)
case(analysis, for)
nmod(roleplay, analysis)
aux(help, may)
root(ROOT, help)
xcomp(help, explain)
det(procedure, the)
obj(explain, procedure)
punct(help, .)
det(engineer, a)
nsubj:pass(make, engineer)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
det(manager, the)
compound(manager, work)
obj(make, manager)
case(firm, of)
det(firm, a)
nmod(manager, firm)
punct(make, ,)
advcl(make, supplant)
det(employee, a)
amod(employee, retire)
obj(supplant, employee)
nsubj:pass(consider, who)
aux(consider, have)
aux:pass(consider, be)
acl:relcl(employee, consider)
advmod(successful, outstandingly)
xcomp(consider, successful)
punct(make, .)
det(engineer, the)
nsubj(have, engineer)
root(ROOT, have)
advmod(seven, more)
fixed(more, than)
nummod(year, seven)
obj(have, year)
case(experience, of)
nmod(year, experience)
case(firm, in)
det(firm, the)
nmod(experience, firm)
punct(train, ,)
aux:pass(train, be)
advmod(train, well)
parataxis(have, train)
punct(consider, ,)
aux:pass(consider, be)
conj(train, consider)
det(worker, a)
amod(worker, hard)
xcomp(consider, worker)
punct(respected, ,)
aux:pass(respected, be)
acl:relcl(worker, respected)
case(engineer, by)
nmod:poss(engineer, he)
amod(engineer, fellow)
obl(respected, engineer)
case(competence, for)
nmod:poss(competence, he)
amod(competence, technical)
nmod(engineer, competence)
cc(regard, and)
aux:pass(regard, be)
conj(respected, regard)
case(comer, as)
det(comer, a)
punct(comer, ``)
obl(regard, comer)
punct(comer, '')
punct(turn, .)
advmod(turn, however)
punct(turn, ,)
nsubj(turn, he)
parataxis(regard, turn)
compound:prt(turn, out)
mark(failure, to)
cop(failure, be)
det(failure, a)
amod(failure, complete)
xcomp(turn, failure)
case(position, in)
nmod:poss(position, he)
amod(position, new)
nmod(failure, position)
punct(have, .)
nsubj(seem, he)
root(ROOT, seem)
mark(antagonize, to)
xcomp(seem, antagonize)
obj(antagonize, everyone)
punct(seem, . )
compound(rate, turnover)
nsubj(go, rate)
case(personnel, of)
nmod(rate, personnel)
root(ROOT, go)
advmod(go, up)
punct(drop, ,)
nsubj(drop, production)
conj(go, drop)
punct(reduce, ,)
cc(reduce, and)
nsubj:pass(reduce, morale)
aux:pass(reduce, be)
advmod(reduce, visibly)
conj(go, reduce)
punct(go, .)
case(fact, despite)
det(fact, the)
obl(seem, fact)
mark(regard, that)
nsubj:pass(regard, he)
aux:pass(regard, be)
acl(fact, regard)
case(engineer, as)
det(engineer, a)
amod(engineer, outstanding)
obl(regard, engineer)
punct(seem, ,)
nsubj(seem, he)
root(ROOT, seem)
mark(administrator, to)
cop(administrator, be)
det(administrator, a)
advmod(poor, very)
amod(administrator, poor)
xcomp(seem, administrator)
punct(seem, ,)
mark(know, although)
det(one, no)
nsubj(know, one)
advmod(know, quite)
advcl(seem, know)
nsubj(wrong, what)
cop(wrong, be)
ccomp(know, wrong)
case(he, with)
obl(wrong, he)
punct(seem, .)
case(insistence, at)
det(insistence, the)
obl(enrol, insistence)
case(supervisor, of)
nmod:poss(supervisor, he)
amod(supervisor, own)
nmod(insistence, supervisor)
punct(supervisor, --)
det(president, the)
nsubj(enrol, president)
case(firm, of)
det(firm, the)
nmod(president, firm)
punct(enrol, --)
nsubj(enrol, he)
root(ROOT, enrol)
case(course, in)
det(course, a)
obl(enrol, course)
acl(course, design)
mark(develop, to)
advcl(design, develop)
obj(develop, leader)
punct(enrol, .)
nsubj(play, he)
root(ROOT, play)
det(number, a)
obj(play, number)
case(situation, of)
amod(situation, typical)
nmod(number, situation)
case(observer, before)
obl(play, observer)
punct(play, ,)
amod(supervisor, other)
parataxis(play, supervisor)
nsubj(keep, who)
acl:relcl(supervisor, keep)
obj(keep, note)
cc(explain, and)
advmod(explain, then)
conj(play, explain)
case(he, to)
obl(explain, he)
case(detail, in)
obl(explain, detail)
nsubj(wrong, what)
nsubj(think, he)
aux(think, do)
nsubj(think, they)
acl:relcl(what, think)
cop(wrong, be)
conj(play, wrong)
punct(play, .)
advmod(concerned, entirely)
root(ROOT, concerned)
case(efficiency, with)
obl(concerned, efficiency)
punct(concerned, ,)
nsubj(merciless, he)
cop(merciless, be)
parataxis(concerned, merciless)
mark(criticize, in)
advcl(merciless, criticize)
obj(criticize, people)
nsubj(make, who)
acl:relcl(people, make)
obj(make, mistake)
punct(make, ,)
advcl(make, condemn)
obj(condemn, they)
case(extent, to)
advmod(great, too)
amod(extent, great)
det(extent, a)
obl(condemn, extent)
punct(concerned, .)
nsubj(listen, he)
aux(listen, do)
advmod(listen, not)
advmod(listen, really)
root(ROOT, listen)
case(other, to)
obl(listen, other)
punct(have, ,)
conj(listen, have)
amod(interest, little)
obj(have, interest)
case(idea, in)
nmod:poss(idea, they)
nmod(interest, idea)
punct(want, ,)
cc(want, and)
conj(listen, want)
mark(have, to)
xcomp(want, have)
nmod:poss(way, he)
amod(way, own)
obj(have, way)
punct(way, --)
nsubj(way, which)
cop(way, be)
det(way, the)
amod(way, only)
amod(way, right)
acl:relcl(way, way)
punct(listen, .)
det(group, the)
amod(group, entire)
nsubj(explain, group)
case(manager, of)
nmod(group, manager)
root(ROOT, explain)
punct(explain, ,)
case(detail, in)
amod(detail, great)
obl(explain, detail)
punct(number, ,)
det(number, a)
ccomp(explain, number)
case(error, of)
amod(relation, human)
compound(error, relation)
nmod(number, error)
obj(make, that)
nsubj(make, he)
acl:relcl(error, make)
punct(explain, .)
nsubj:pass(discuss, one)
case(one, by)
nmod(one, one)
punct(discuss, ,)
det(error, these)
nsubj:pass(discuss, error)
aux:pass(discuss, be)
root(ROOT, discuss)
cc(one, and)
conj(discuss, one)
case(one, by)
nmod(one, one)
nsubj(reject, he)
acl:relcl(one, reject)
xcomp(reject, accept)
obj(accept, they)
case(error, as)
obl(accept, error)
punct(discuss, .)
nsubj(admit, he)
root(ROOT, admit)
nmod:poss(behavior, he)
obj(admit, behavior)
punct(defend, ,)
cc(defend, and)
conj(admit, defend)
obj(defend, it)
punct(admit, .)
nsubj(refuse, he)
root(ROOT, refuse)
mark(change, to)
xcomp(refuse, change)
nmod:poss(approach, he)
obj(change, approach)
punct(attack, ,)
cc(attack, and)
advmod(attack, instead)
nsubj(attack, he)
conj(refuse, attack)
advmod(attack, high)
cc(low, and)
conj(high, low)
punct(attack, --)
det(official, the)
nsubj(attack, official)
mark(back, for)
nsubj(back, they)
advmod(back, not)
acl(official, back)
obj(back, he)
punct(subordinate, ,)
cc(subordinate, and)
conj(back, subordinate)
case(laxness, for)
nmod:poss(laxness, they)
obl(back, laxness)
punct(stupidity, ,)
conj(laxness, stupidity)
punct(stubbornness, ,)
cc(stubbornness, and)
conj(laxness, stubbornness)
punct(refuse, .)
case(diagnose, after)
det(diagnose, the)
obl(leave, diagnose)
punct(leave, ,)
nsubj(leave, he)
root(ROOT, leave)
det(course, the)
obj(leave, course)
punct(convinced, ,)
conj(leave, convinced)
mark(do, that)
nsubj(do, it)
aux(do, could)
ccomp(convinced, do)
iobj(do, he)
det(good, no)
xcomp(do, good)
punct(leave, .)
nsubj(say, we)
aux(say, may)
root(ROOT, say)
mark(diagnose, that)
nmod:poss(problem, he)
nsubj:pass(diagnose, problem)
aux:pass(diagnose, be)
ccomp(say, diagnose)
cc(refuse, but)
mark(refuse, that)
nsubj(refuse, he)
conj(diagnose, refuse)
obj(refuse, treatment)
punct(say, .)
det(engineer, the)
nsubj(turn, engineer)
root(ROOT, turn)
compound(manager, work)
nsubj(have, manager)
ccomp(turn, have)
det(view, a)
amod(view, particular)
obj(have, view)
case(life, of)
nmod(view, life)
punct(have, --)
cc(refuse, and)
conj(have, refuse)
mark(change, to)
xcomp(refuse, change)
obj(change, it)
punct(turn, .)
nsubj(say, we)
aux(say, may)
root(ROOT, say)
mark(foolish, that)
nmod:poss(attitude, he)
nsubj(foolish, attitude)
cop(foolish, be)
ccomp(say, foolish)
punct(say, ,)
mark(success, since)
nsubj(success, he)
aux(success, may)
aux(success, have)
cop(success, be)
det(success, a)
advcl(foolish, success)
aux(learn, have)
nsubj(learn, he)
acl:relcl(success, learn)
det(skill, some)
amod(relation, human)
compound(skill, relation)
obj(learn, skill)
punct(say, ;)
punct(say, ;)
cc(say, or)
nsubj(say, we)
aux(say, may)
conj(say, say)
mark(commendable, that)
nmod:poss(attitude, he)
nsubj(commendable, attitude)
cop(commendable, be)
ccomp(say, commendable)
punct(commendable, ,)
advcl(commendable, show)
nmod:poss(independence, he)
obj(show, independence)
case(mind, of)
nmod(independence, mind)
punct(show, ,)
case(refusal, in)
nmod:poss(refusal, he)
obl(show, refusal)
mark(adjust, to)
acl(refusal, adjust)
case(opinion, to)
det(opinion, the)
obl(adjust, opinion)
case(other, of)
nmod(opinion, other)
punct(say, .)
case(case, in)
det(case, any)
obl(refuse, case)
punct(refuse, ,)
nsubj(refuse, he)
root(ROOT, refuse)
mark(accept, to)
xcomp(refuse, accept)
det(implication, the)
obj(accept, implication)
case(analysis, of)
det(analysis, the)
nmod(implication, analysis)
punct(accept, ,)
mark(need, that)
nsubj(need, he)
acl:relcl(analysis, need)
mark(make, to)
aux:pass(make, be)
xcomp(need, make)
compound:prt(make, over)
punct(give, .)
det(case, another)
nsubj:pass(give, case)
aux(give, may)
aux:pass(give, be)
parataxis(refuse, give)
case(illustration, in)
obl(give, illustration)
case(use, of)
det(use, a)
amod(use, successful)
nmod(illustration, use)
case(analysis, of)
nmod(use, analysis)
punct(employment, ,)
cc(employment, and)
advmod(employment, also)
case(employment, of)
det(employment, the)
conj(use, employment)
case(procedure, of)
det(procedure, a)
nmod(employment, procedure)
case(analysis, for)
amod(analysis, intensive)
nmod(procedure, analysis)
punct(refuse, .)
case(course, in)
det(course, a)
obl(find, course)
case(operator, for)
compound(operator, supermarket)
nmod(course, operator)
punct(find, ,)
det(manager, a)
compound(manager, district)
nsubj(find, manager)
nsubj:pass(appoint, who)
aux(appoint, have)
aux:pass(appoint, be)
advmod(appoint, recently)
acl:relcl(manager, appoint)
case(position, to)
nmod:poss(position, he)
obl(appoint, position)
mark(successful, after)
cop(successful, be)
advmod(successful, outstandingly)
advcl(appoint, successful)
case(manager, as)
det(manager, a)
compound(manager, store)
obl(successful, manager)
punct(find, ,)
root(ROOT, find)
mark(have, that)
mark(supervising, in)
advcl(have, supervising)
amod(manager, other)
obj(supervising, manager)
nsubj(have, he)
aux(have, be)
ccomp(find, have)
det(time, a)
amod(time, difficult)
obj(have, time)
punct(find, .)
mark(play, on)
advcl(show, play)
det(situation, some)
amod(situation, typical)
obj(play, situation)
case(jury, before)
det(jury, a)
obl(play, jury)
case(peer, of)
nmod:poss(peer, he)
nmod(jury, peer)
nsubj(show, he)
root(ROOT, show)
det(characteristic, some)
obj(show, characteristic)
acl(characteristic, rate)
advmod(unsatisfactory, as)
xcomp(rate, unsatisfactory)
punct(show, .)
nsubj:pass(tell, he)
aux:pass(tell, be)
root(ROOT, tell)
nsubj(display, he)
ccomp(tell, display)
punct(display, ,)
case(example, for)
nmod(sense, example)
punct(sense, ,)
det(sense, a)
obj(display, sense)
case(superiority, of)
nmod(sense, superiority)
punct(tell, --)
cc(answer, and)
nsubj(answer, he)
conj(tell, answer)
punct(tell, :)
punct(tell, ``)
discourse(suppose, well)
punct(suppose, ,)
nsubj(suppose, I)
aux(suppose, be)
root(ROOT, suppose)
mark(know, to)
xcomp(suppose, know)
det:predet(answer, all)
det(answer, the)
obj(know, answer)
punct(suppose, ,)
parataxis(suppose, be)
advmod(be, not)
nsubj(be, I)
punct(be, '')
punct(suppose, ?)
punct(suppose, ?)
nsubj:pass(criticize, he)
aux:pass(criticize, be)
root(ROOT, criticize)
case(curtness, for)
nmod:poss(curtness, he)
obl(criticize, curtness)
cc(abruptness, and)
conj(curtness, abruptness)
punct(criticize, --)
cc(answer, and)
nsubj(answer, he)
conj(criticize, answer)
punct(criticize, :)
punct(criticize, ``)
nsubj(work, I)
aux(work, be)
advmod(work, not)
root(ROOT, work)
mark(become, to)
xcomp(work, become)
xcomp(become, popular)
punct(popular, '')
punct(work, .)
mark(criticize, on)
aux:pass(criticize, be)
advcl(work, criticize)
case(behavior, for)
nmod:poss(behavior, he)
amod(behavior, arbitrary)
obl(criticize, behavior)
punct(work, --)
nsubj(answer, he)
parataxis(work, answer)
punct(work, :)
punct(work, ``)
nsubj(have, I)
root(ROOT, have)
mark(make, to)
xcomp(have, make)
obj(make, decision)
punct(have, .)
nsubj(job, that)
cop(job, be)
nmod:poss(job, my)
root(ROOT, job)
punct(job, '')
punct(job, .)
case(short, in)
obl(feel, short)
punct(job, ,)
mark(happen, as)
advmod(happen, frequently)
advcl(feel, happen)
case(analysis, in)
obl(happen, analysis)
punct(feel, ,)
det(individual, the)
nsubj(feel, individual)
parataxis(job, feel)
xcomp(feel, threaten)
cc(defend, and)
conj(feel, defend)
obj(defend, himself)
punct(job, .)
advmod(lead, however)
punct(lead, ,)
case(case, in)
det(case, this)
obl(lead, case)
det(manager, the)
compound(manager, district)
nsubj:pass(lead, manager)
aux:pass(lead, be)
root(ROOT, lead)
mark(see, to)
advcl(lead, see)
det(error, the)
obj(see, error)
case(way, of)
nmod:poss(way, he)
nmod(error, way)
punct(lead, .)
det(step, the)
amod(step, necessary)
nsubj(acceptance, step)
case(diagnosis, between)
nmod(step, diagnosis)
cc(training, and)
conj(diagnosis, training)
cop(acceptance, be)
root(ROOT, acceptance)
case(validity, of)
det(validity, the)
nmod(acceptance, validity)
case(criticism, of)
det(criticism, the)
nmod(validity, criticism)
punct(acceptance, .)
advmod(accomplish, how)
nsubj:pass(accomplish, this)
aux:pass(accomplish, be)
advcl(describe, accomplish)
aux(describe, may)
aux:pass(describe, be)
root(ROOT, describe)
punct(describe, ,)
mark(problem, since)
nsubj(problem, this)
advmod(problem, sometimes)
cop(problem, be)
det(problem, a)
amod(problem, crucial)
advcl(describe, problem)
punct(describe, .)
det(director, the)
nsubj(help, director)
root(ROOT, help)
compound(make, tailor)
punct(make, -)
xcomp(help, make)
det(list, a)
compound(list, check)
obj(make, list)
case(error, of)
det(manager, the)
compound(manager, district)
nmod:poss(error, manager)
case(manager, 's)
nmod(list, error)
mark(ask, by)
advcl(make, ask)
amod(observer, various)
obj(ask, observer)
mark(write, to)
xcomp(ask, write)
compound:prt(write, out)
obj(write, sentence)
acl(sentence, comment)
case(mistake, on)
det(mistake, the)
obl(comment, mistake)
nsubj(feel, they)
acl:relcl(mistake, feel)
nsubj(make, he)
ccomp(feel, make)
punct(help, .)
det(error, these)
nsubj:pass(collect, error)
aux:pass(collect, be)
advmod(collect, then)
root(ROOT, collect)
cc(write, and)
conj(collect, write)
case(blackboard, on)
det(blackboard, a)
obl(collect, blackboard)
punct(collect, ,)
advcl(collect, condense)
amod(idea, similar)
obj(condense, idea)
punct(collect, .)
nummod(error, Eighteen)
nsubj:pass(locate, error)
aux:pass(locate, be)
root(ROOT, locate)
punct(ask, ,)
cc(ask, and)
advmod(ask, then)
det(director, the)
nsubj(ask, director)
conj(locate, ask)
det(individual, each)
obj(ask, individual)
mark(vote, to)
acl(individual, vote)
mark(feel, whether)
fixed(whether, or)
fixed(whether, not)
nsubj(feel, they)
ccomp(vote, feel)
mark(make, that)
det(manager, this)
nsubj(make, manager)
aux(make, have)
ccomp(feel, make)
det(error, the)
amod(error, particular)
obj(make, error)
punct(locate, .)
nsubj:pass(ask, they)
aux:pass(ask, be)
root(ROOT, ask)
mark(vote, to)
xcomp(ask, vote)
punct(true, ``)
xcomp(vote, true)
punct(true, '')
mark(think, if)
nsubj(think, they)
advcl(vote, think)
nsubj(see, they)
aux(see, have)
ccomp(think, see)
nsubj(make, he)
xcomp(see, make)
det(error, the)
obj(make, error)
punct(false, ,)
punct(false, ``)
xcomp(make, false)
punct(false, '')
mark(think, if)
nsubj(think, they)
advcl(false, think)
nsubj(have, he)
ccomp(think, have)
advmod(have, not)
punct(think, ;)
punct(ask, ;)
cc(say, and)
punct(say, ``)
aux(say, can)
advmod(say, not)
conj(think, say)
punct(say, '')
mark(certain, if)
nsubj(certain, they)
cop(certain, be)
advmod(certain, not)
advcl(say, certain)
punct(ask, .)
det(manager, the)
nsubj(sit, manager)
root(ROOT, sit)
case(group, behind)
det(group, the)
obl(sit, group)
mark(see, so)
nsubj(see, he)
aux(see, could)
advcl(sit, see)
cc(count, and)
conj(see, count)
det(hand, the)
obj(count, hand)
nsubj(go, that)
acl:relcl(hand, go)
compound:prt(go, up)
punct(write, ,)
cc(write, and)
det(director, the)
nsubj(write, director)
conj(sit, write)
det(number, the)
obj(write, number)
case(blackboard, on)
det(blackboard, the)
obl(write, blackboard)
punct(sit, .)
det(comment, no)
nsubj:pass(make, comment)
aux:pass(make, be)
root(ROOT, make)
case(voting, during)
det(voting, the)
obl(make, voting)
punct(make, .)
det(result, the)
nsubj(look, result)
root(ROOT, look)
mark(follow, as)
advcl(look, follow)
punct(look, :)
nummod(duplicate, Af)
punct(Af, .)
det(eight, the)
amod(eight, first)
nsubj:pass(duplicate, eight)
case(statement, of)
det(statement, these)
nummod(statement, eighteen)
nmod(eight, statement)
punct(statement, ,)
nsubj(receive, which)
acl:relcl(statement, receive)
case(least, at)
nmod(one, least)
nummod(half, one)
punct(half, -)
obj(receive, half)
case(vote, of)
det(vote, the)
nmod(half, vote)
punct(duplicate, ,)
aux:pass(duplicate, be)
root(ROOT, duplicate)
mark(form, to)
advcl(duplicate, form)
det(checklist, a)
compound(checklist, analysis)
obj(form, checklist)
case(manager, for)
det(manager, the)
amod(manager, particular)
nmod(checklist, manager)
punct(check, ,)
cc(check, and)
mark(roleplay, when)
det(manager, this)
amod(manager, particular)
nsubj(roleplay, manager)
advcl(check, roleplay)
case(situation, in)
amod(situation, other)
obl(roleplay, situation)
punct(check, ,)
det(member, the)
nsubj(check, member)
conj(duplicate, check)
det(item, any)
obj(check, item)
nsubj(appear, that)
acl:relcl(item, appear)
punct(duplicate, .)
mark(prevent, to)
advcl(lengthy, prevent)
det(manager, the)
obj(prevent, manager)
mark(control, from)
advmod(control, deliberately)
advcl(prevent, control)
obj(control, himself)
advmod(session, only)
case(session, during)
det(session, the)
obl(control, session)
punct(lengthy, ,)
nsubj(lengthy, they)
cop(lengthy, be)
advmod(lengthy, rather)
root(ROOT, lengthy)
punct(minute, ()
advmod(twenty, about)
nummod(minute, twenty)
obl:tmod(lengthy, minute)
punct(minute, ))
punct(describe, ,)
det(situation, the)
nsubj:pass(describe, situation)
aux:pass(describe, be)
advmod(describe, imperfectly)
parataxis(lengthy, describe)
case(manager, to)
det(manager, the)
obl(describe, manager)
mark(know, so)
fixed(so, that)
nsubj(know, he)
aux(know, would)
advmod(know, not)
advcl(describe, know)
obj(expect, what)
mark(expect, to)
xcomp(know, expect)
punct(bring, ,)
amod(antagonist, new)
nsubj:pass(bring, antagonist)
aux:pass(bring, be)
ccomp(know, bring)
case(scene, on)
det(scene, the)
obl(bring, scene)
advmod(bring, unexpectedly)
punct(instruct, ,)
cc(instruct, and)
det(antagonist, the)
nsubj:pass(instruct, antagonist)
aux:pass(instruct, be)
conj(bring, instruct)
mark(behave, to)
advmod(behave, deliberately)
xcomp(instruct, behave)
case(way, in)
amod(way, such)
obl(behave, way)
mark(upset, as)
mark(upset, to)
advcl(behave, upset)
det(manager, the)
obj(upset, manager)
cc(get, and)
conj(upset, get)
obj(get, he)
mark(operate, to)
xcomp(get, operate)
case(manner, in)
det(manner, a)
obl(operate, manner)
case(which, for)
obl(criticize, which)
nsubj:pass(criticize, he)
aux(criticize, have)
aux:pass(criticize, be)
advmod(criticize, previously)
acl:relcl(manner, criticize)
punct(lengthy, .)
case(session, after)
det(session, every)
obl(total, session)
punct(total, ,)
det(mark, the)
compound(mark, check)
nsubj:pass(total, mark)
aux:pass(total, be)
root(ROOT, total)
compound:prt(total, up)
cc(graph, and)
conj(total, graph)
punct(chart, ,)
cc(chart, and)
case(way, in)
det(way, this)
obl(chart, way)
det(supervisor, the)
nmod:poss(progress, supervisor)
case(supervisor, 's)
nsubj:pass(chart, progress)
aux:pass(chart, be)
conj(total, chart)
punct(total, .)
root(ROOT, summary)
case(life, in)
nmod(summary, life)
nsubj(learn, we)
parataxis(summary, learn)
mark(play, to)
xcomp(learn, play)
nmod:poss(role, we)
obj(play, role)
cc(freeze, and)
nsubj(freeze, we)
punct(freeze, ``)
conj(summary, freeze)
punct(freeze, '')
case(pattern, into)
obl(freeze, pattern)
nsubj(become, which)
acl:relcl(pattern, become)
advmod(habitual, so)
xcomp(become, habitual)
mark(aware, that)
nsubj(aware, we)
cop(aware, be)
advmod(aware, not)
advmod(aware, really)
ccomp(habitual, aware)
case(what, of)
obl(aware, what)
nsubj(do, we)
acl:relcl(what, do)
punct(summary, .)
nsubj(see, we)
aux(see, can)
root(ROOT, see)
obj(see, other)
advmod(clearly, more)
advmod(see, clearly)
mark(see, than)
nsubj(see, we)
aux(see, can)
advcl(see, see)
obj(see, ourselves)
punct(see, ,)
cc(see, and)
nsubj(see, other)
aux(see, can)
conj(see, see)
obj(see, we)
xcomp(see, better)
mark(see, than)
nsubj(see, we)
advcl(better, see)
obj(see, ourselves)
punct(see, .)
mark(learn, to)
advcl(step, learn)
obj(learn, what)
nsubj(do, we)
acl:relcl(what, do)
cop(step, be)
det(step, the)
amod(step, first)
root(ROOT, step)
case(improvement, for)
nmod(step, improvement)
punct(step, .)
mark(accept, to)
advcl(step, accept)
det(validity, the)
obj(accept, validity)
case(judgment, of)
det(judgment, the)
nmod(validity, judgment)
case(other, of)
nmod(judgment, other)
cop(step, be)
det(step, the)
amod(step, second)
root(ROOT, step)
punct(step, . )
mark(want, to)
csubj(step, want)
mark(change, to)
xcomp(want, change)
cop(step, be)
det(step, the)
amod(step, third)
root(ROOT, step)
punct(step, .)
mark(practice, to)
acl(step, practice)
amod(procedure, new)
obj(practice, procedure)
case(supervision, under)
amod(supervision, guide)
nmod(procedure, supervision)
cc(step, and)
case(feedback, with)
amod(feedback, constant)
obl(step, feedback)
cop(step, be)
det(step, the)
amod(step, fourth)
conj(step, step)
punct(step, .)
mark(use, to)
advcl(step, use)
det(way, these)
amod(way, new)
obj(use, way)
case(life, in)
amod(life, daily)
nmod(way, life)
cop(step, be)
det(step, the)
amod(step, last)
root(ROOT, step)
punct(step, .)
nsubj(follow, roleplay)
acl(roleplay, use)
case(analysis, for)
obl(use, analysis)
root(ROOT, follow)
det(step, these)
amod(step, general)
obj(follow, step)
acl(step, lead)
case(training, to)
obl(lead, training)
punct(follow, .)
mark(set, when)
det(situation, a)
amod(situation, evaluative)
nsubj:pass(set, situation)
aux:pass(set, be)
advcl(follow, set)
compound:prt(set, up)
punct(be, ,)
cc(be, and)
det(concern, no)
nsubj(be, concern)
conj(set, be)
case(detail, with)
det(detail, the)
obl(be, detail)
nsubj(lead, that)
acl:relcl(detail, lead)
case(estimate, to)
det(estimate, a)
case(all, over)
punct(all, -)
det(estimate, all)
obl(lead, estimate)
punct(say, ,)
nsubj(say, we)
ccomp(be, say)
mark(use, that)
nsubj:pass(use, roleplay)
aux:pass(use, be)
ccomp(say, use)
case(evaluation, for)
obl(use, evaluation)
punct(follow, .)
nsubj(see, observer)
aux(see, can)
root(ROOT, see)
det(person, a)
obj(see, person)
acl(person, engage)
case(behavior, in)
amod(behavior, spontaneous)
obl(engage, behavior)
punct(watch, ,)
cc(watch, and)
conj(see, watch)
obj(watch, he)
xcomp(watch, operate)
case(fashion, in)
det(fashion, a)
amod(fashion, totalistic)
obl(operate, fashion)
punct(see, .)
det(behavior, this)
nsubj(veridical, behavior)
cop(veridical, be)
advmod(veridical, more)
punct(veridical, ``)
root(ROOT, veridical)
punct(veridical, '')
punct(veridical, --)
cc(true, or)
conj(veridical, true)
punct(veridical, --)
case(behavior, than)
amod(behavior, other)
compound(behavior, testing)
obl(veridical, behavior)
case(type, for)
det(type, some)
nmod(behavior, type)
case(evaluation, of)
nmod(type, evaluation)
punct(give, ,)
cc(give, and)
advmod(give, so)
aux(give, can)
conj(veridical, give)
obj(give, quick)
cc(accurate, and)
conj(quick, accurate)
obj(give, estimate)
case(function, of)
amod(function, complex)
nmod(estimate, function)
punct(estimate, .)
mark(understand, while)
nsubj:pass(understand, roleplay)
case(testing, for)
nmod(roleplay, testing)
aux:pass(understand, be)
advmod(understand, not)
advmod(well, too)
advmod(understand, well)
advcl(represent, understand)
case(time, at)
det(time, the)
amod(time, present)
obl(understand, time)
punct(represent, ,)
nsubj(represent, it)
parataxis(veridical, represent)
obj(represent, one)
case(use, of)
det(use, the)
amod(use, major)
nmod(one, use)
case(procedure, of)
det(procedure, this)
nmod(use, procedure)
punct(use, .)
appos(use, Chapter)
nummod(Chapter, 10)
punct(spontaneity, ,)
nsubj(Chapter, spontaneity)
acl(spontaneity, train)
det(objective, the)
obj(train, objective)
case(chapter, of)
det(chapter, this)
nmod(objective, chapter)
ccomp(train, be)
mark(clarify, to)
ccomp(be, clarify)
det(distinction, the)
obj(clarify, distinction)
case(theory, between)
compound(theory, spontaneity)
nmod(distinction, theory)
cc(concept, and)
amod(concept, other)
compound(concept, training)
conj(theory, concept)
punct(veridical, .)
case(addition, in)
obl(review, addition)
punct(review, ,)
det(approach, the)
amod(approach, basic)
nsubj:pass(review, approach)
acl(approach, utilized)
mark(apply, in)
advcl(utilized, apply)
obj(apply, roleplay)
aux(review, will)
aux:pass(review, be)
root(ROOT, review)
punct(review, .)
det(goal, the)
nsubj(be, goal)
aux(be, will)
root(ROOT, be)
mark(provide, to)
ccomp(be, provide)
det(reader, the)
obj(provide, reader)
case(rationale, with)
det(rationale, a)
amod(rationale, integrate)
obl(provide, rationale)
mark(aid, to)
acl(rationale, aid)
obj(aid, he)
mark(apply, in)
advcl(aid, apply)
compound(technique, roleplay)
obj(apply, technique)
case(area, in)
det(area, this)
amod(area, unique)
compound(area, training)
obl(apply, area)
punct(be, .)
det(reason, the)
nsubj(twofold, reason)
mark(extract, for)
acl(reason, extract)
det(application, this)
amod(application, particular)
compound(application, roleplay)
obj(extract, application)
case(discussion, from)
det(discussion, the)
amod(discussion, previous)
obl(extract, discussion)
case(training, of)
nmod(discussion, training)
cop(twofold, be)
root(ROOT, twofold)
punct(twofold, . )
nummod(unique, 1)
punct(1, .)
compound(theory, spontaneity)
compound(theory, training)
nsubj(unique, theory)
cop(unique, be)
root(ROOT, unique)
cc(new, and)
advmod(new, relatively)
conj(unique, new)
punct(unique, .)
expl(easy, it)
cop(easy, be)
advmod(easy, not)
root(ROOT, easy)
mark(discern, for)
det(therapist, the)
nsubj(discern, therapist)
mark(discern, to)
csubj(easy, discern)
mark(appear, when)
punct(appear, ,)
case(communicate, in)
det(patient, the)
nmod:poss(communicate, patient)
case(patient, 's)
obl(appear, communicate)
punct(appear, ,)
det(introject, a)
nsubj(appear, introject)
aux(appear, have)
csubj(easy, appear)
cc(hold, and)
aux(hold, be)
conj(appear, hold)
obj(hold, sway)
punct(easy, .)
nsubj(learn, one)
root(ROOT, learn)
mark(become, to)
xcomp(learn, become)
xcomp(become, alert)
case(change, to)
nmod(alert, change)
case(tone, in)
nmod:poss(tone, he)
amod(tone, vocal)
nmod(change, tone)
punct(alert, --)
case(voice, to)
nmod:poss(voice, he)
obl(shift, voice)
case(voice, 's)
advmod(shift, suddenly)
acl(alert, shift)
case(quality, to)
det(quality, a)
obl(shift, quality)
advmod(one, not)
case(one, like)
nmod:poss(one, he)
amod(one, usual)
nmod(quality, one)
punct(one, ,)
det(quality, a)
appos(one, quality)
nsubj(sound, which)
acl:relcl(quality, sound)
advmod(artificial, somehow)
xcomp(sound, artificial)
cc(like, or)
punct(like, ,)
case(instance, in)
det(instance, some)
obl(like, instance)
punct(like, ,)
compound(like, parrot)
punct(like, -)
conj(sound, like)
punct(learn, .)
det(content, the)
nsubj(lapse, content)
case(word, of)
nmod:poss(word, he)
nmod(content, word)
aux(lapse, may)
root(ROOT, lapse)
advmod(lapse, back)
case(repetition, into)
amod(repetition, monotonous)
obl(lapse, repetition)
punct(lapse, ,)
mark(stick, as)
mark(stick, if)
det(needle, a)
compound(needle, phonograph)
nsubj:pass(stick, needle)
aux:pass(stick, be)
advcl(lapse, stick)
case(groove, in)
nummod(groove, one)
obl(stick, groove)
punct(lapse, ;)
punct(lapse, ;)
advmod(seldom, only)
advmod(simple, seldom)
cop(simple, be)
nsubj(simple, it)
advmod(simple, so)
parataxis(lapse, simple)
mark(matter, as)
mark(matter, to)
cop(matter, be)
det(matter, a)
advcl(simple, matter)
mark(parroting, of)
nsubj(matter, he)
advmod(parroting, obviously)
acl(matter, parroting)
det(axiom, some)
amod(axiom, timeworn)
obj(parroting, axiom)
punct(axiom, ,)
amod(axiom, common)
case(culture, to)
nmod:poss(culture, we)
obl(common, culture)
punct(culture, ,)
obj(hear, which)
nsubj(hear, he)
aux(hear, have)
advmod(hear, evidently)
acl:relcl(culture, hear)
punct(over, ,)
advmod(hear, over)
cc(over, and)
conj(over, over)
punct(hear, ,)
case(parent, from)
det(parent, a)
obl(hear, parent)
mark(experience, until)
nsubj(experience, he)
advcl(hear, experience)
obj(experience, it)
case(part, as)
obl(experience, part)
case(he, of)
nmod(part, he)
punct(lapse, .)
nummod(woman, one)
amod(woman, hebephrenic)
nsubj(become, woman)
advmod(become, often)
root(ROOT, become)
xcomp(become, submerge)
case(what, in)
obl(submerge, what)
acl:relcl(what, feel)
case(I, to)
obl(feel, I)
case(experience, like)
det(experience, a)
advmod(phony, somehow)
amod(experience, phony)
obl(feel, experience)
case(pseudo-emotion, of)
nmod(experience, pseudo-emotion)
punct(experience, ,)
case(which, during)
obl(feel, which)
punct(feel, ,)
case(sob, despite)
nmod:poss(sob, she)
amod(sob, wracking)
obl(feel, sob)
cc(cheek, and)
compound(cheek, stream)
conj(sob, cheek)
punct(feel, ,)
nsubj(feel, I)
parataxis(become, feel)
advmod(annoyance, only)
det(annoyance, a)
amod(annoyance, cold)
obj(feel, annoyance)
case(she, with)
nmod(annoyance, she)
punct(become, .)
advmod(become, eventually)
amod(incident, such)
nsubj(become, incident)
root(ROOT, become)
advmod(sporadic, more)
xcomp(become, sporadic)
punct(demarcate, ,)
cc(demarcate, and)
advmod(sharply, more)
advmod(demarcate, sharply)
conj(sporadic, demarcate)
case(behavior, from)
nmod:poss(behavior, she)
compound(behavior, day)
punct(day, -)
case(day, after)
punct(day, -)
nmod(day, day)
obl(demarcate, behavior)
punct(demarcate, ,)
cc(go, and)
case(session, in)
nummod(session, one)
amod(session, particular)
nmod(minute, session)
punct(go, ,)
case(minute, after)
amod(minute, several)
obl(go, minute)
case(behavior, of)
amod(behavior, such)
nmod(minute, behavior)
punct(minute, --)
nsubj(go, which)
punct(go, ,)
case(usual, as)
obl(go, usual)
punct(go, ,)
conj(become, go)
advmod(go, on)
case(word, without)
det(word, any)
amod(word, accompany)
obl(go, word)
case(she, from)
nmod(word, she)
punct(ask, --)
nsubj(ask, she)
parataxis(go, ask)
punct(ask, ,)
advmod(ask, eagerly)
punct(become, ,)
punct(become, ``)
aux(see, do)
nsubj(see, you)
root(ROOT, see)
obj(see, Granny)
punct(see, '')
punct(see, ?)
punct(see, ?)
case(first, at)
obl(know, first)
nsubj(know, I)
aux(know, do)
advmod(know, not)
root(ROOT, know)
obj(mean, what)
nsubj(mean, she)
ccomp(know, mean)
punct(know, ;)
punct(know, ;)
nsubj(think, I)
parataxis(know, think)
nsubj(see, she)
aux(see, must)
aux(see, be)
ccomp(think, see)
obj(see, I)
case(one, as)
det(one, some)
obl(see, one)
nsubj(come, who)
aux(come, have)
advmod(come, just)
acl:relcl(one, come)
mark(see, from)
advcl(come, see)
nmod:poss(grandmother, she)
obj(see, grandmother)
punct(see, ,)
case(city, in)
nmod:poss(city, they)
amod(city, distant)
compound(city, home)
punct(city, -)
obl(see, city)
punct(realize, .)
advmod(realize, then)
nsubj(realize, I)
parataxis(know, realize)
mark(show, that)
nsubj(show, she)
aux(show, have)
aux(show, be)
advmod(show, deliberately)
ccomp(realize, show)
obj(show, I)
punct(show, ,)
det(time, this)
obl:tmod(show, time)
punct(what, ,)
appos(time, what)
nsubj(like, Granny)
cop(like, be)
case(what, like)
punct(show, ;)
punct(show, ;)
cc(corroborate, and)
mark(reply, when)
nsubj(reply, I)
advcl(corroborate, reply)
case(spirit, in)
det(spirit, this)
obl(reply, spirit)
punct(corroborate, ,)
nsubj(corroborate, she)
conj(know, corroborate)
nmod:poss(hunch, my)
obj(corroborate, hunch)
punct(know, .)
case(phase, at)
det(phase, another)
obl(mutter, phase)
case(therapy, in)
det(therapy, the)
nmod(phase, therapy)
punct(mutter, ,)
mark(begin, when)
det(introject, a)
amod(introject, pathogenic)
compound(introject, mother)
punct(introject, -)
nsubj(begin, introject)
advcl(mutter, begin)
mark(emerge, to)
xcomp(begin, emerge)
obj(emerge, more)
cc(more, and)
conj(more, more)
case(scene, upon)
det(scene, the)
amod(scene, investigative)
obl(emerge, scene)
punct(mutter, ,)
nsubj(mutter, she)
root(ROOT, mutter)
case(voice, in)
det(voice, a)
amod(voice, low)
cc(intense, but)
conj(low, intense)
obl(mutter, voice)
punct(mutter, ,)
case(herself, to)
obl(mutter, herself)
punct(mutter, ,)
punct(mutter, ``)
nsubj(hate, I)
root(ROOT, hate)
det(woman, that)
obj(hate, woman)
case(I, inside)
obl(hate, I)
punct(hate, '')
punct(hate, !)
punct(hate, ! )
nsubj(evoke, I)
aux(evoke, could)
root(ROOT, evoke)
det(elaboration, no)
amod(elaboration, further)
obj(evoke, elaboration)
case(she, from)
nmod(elaboration, she)
case(this, about)
obl(evoke, this)
punct(evoke, ;)
punct(evoke, ;)
cc(stand, but)
det(seconds, a)
amod(seconds, few)
obl:npmod(later, seconds)
advmod(stand, later)
nsubj(stand, she)
aux(stand, be)
conj(evoke, stand)
advmod(stand, directly)
case(room, across)
det(room, the)
obl(stand, room)
case(I, from)
obl(stand, I)
punct(look, ,)
advcl(stand, look)
obj(look, I)
case(eye, in)
det(eye, the)
obl(look, eye)
cc(say, and)
conj(look, say)
case(tone, in)
det(tone, a)
advmod(condemnatory, scathingly)
amod(tone, condemnatory)
obl(say, tone)
punct(evoke, ,)
punct(evoke, ``)
nmod:poss(father, you)
nsubj(despise, father)
root(ROOT, despise)
obj(despise, you)
punct(despise, '')
punct(despise, !)
punct(despise, !)
advmod(misconstrued, again)
punct(misconstrued, ,)
nsubj(misconstrued, I)
advmod(first, at)
advmod(misconstrued, first)
root(ROOT, misconstrued)
det(communication, this)
advmod(intense, disconcertingly)
amod(communication, intense)
obj(misconstrued, communication)
punct(cast, ,)
cc(cast, and)
nsubj(cast, I)
advmod(cast, quickly)
conj(misconstrued, cast)
case(mind, through)
nmod:poss(mind, my)
obl(cast, mind)
mark(account, to)
xcomp(cast, account)
mark(able, for)
nsubj(able, she)
cop(able, be)
advcl(account, able)
mark(speak, to)
xcomp(able, speak)
punct(speak, ,)
case(conviction, with)
amod(conviction, such)
amod(conviction, utter)
obl(speak, conviction)
punct(conviction, ,)
case(opinion, of)
det(opinion, a)
nmod(conviction, opinion)
acl(opinion, hold)
case(father, by)
nmod:poss(father, my)
obl(hold, father)
punct(father, ,)
advmod(decease, now)
amod(year, several)
obl:npmod(decease, year)
conj(hold, decease)
punct(misconstrued, .)
advmod(reply, then)
nsubj(reply, I)
root(ROOT, reply)
punct(reply, ,)
advmod(reply, coldly)
punct(reply, ,)
punct(reply, ``)
mark(despise, if)
nsubj(despise, you)
advcl(say, despise)
obj(despise, I)
punct(say, ,)
advmod(say, why)
aux(say, do)
advmod(say, not)
nsubj(say, you)
root(ROOT, say)
advmod(say, so)
punct(say, ,)
advmod(say, directly)
punct(say, '')
punct(say, ?)
punct(say, ?)
nsubj(look, she)
root(ROOT, look)
xcomp(look, confused)
case(this, at)
obl(confused, this)
punct(feel, ,)
cc(feel, and)
nsubj(feel, I)
conj(look, feel)
xcomp(feel, sure)
nsubj(response, it)
aux(response, have)
cop(response, be)
det(response, a)
amod(response, wrong)
ccomp(sure, response)
mark(make, for)
nsubj(make, I)
mark(make, to)
acl(response, make)
punct(look, .)
nsubj(occur, it)
advmod(occur, then)
root(ROOT, occur)
case(I, to)
obl(occur, I)
mark(ask, to)
advcl(occur, ask)
punct(occur, ,)
punct(occur, ``)
root(ROOT, be)
mark(tell, that)
obj(tell, what)
det(woman, that)
nsubj(tell, woman)
ccomp(be, tell)
obj(tell, you)
punct(be, '')
punct(be, ?)
punct(be, ?)
nsubj(agree, she)
advmod(agree, clearly)
root(ROOT, agree)
mark(case, that)
nsubj(case, this)
aux(case, have)
cop(case, be)
det(case, the)
ccomp(agree, case)
punct(agree, . )
nsubj(realize, I)
root(ROOT, realize)
punct(realize, ,)
advmod(realize, now)
punct(realize, ,)
mark(show, that)
nsubj(show, she)
aux(show, have)
aux(show, be)
ccomp(realize, show)
obj(show, I)
punct(show, ,)
case(what, in)
obl(show, what)
acl:relcl(what, impress)
obj(impress, I)
mark(way, as)
cop(way, be)
det(way, a)
advmod(accurate, very)
amod(way, accurate)
advcl(impress, way)
punct(something, ,)
parataxis(realize, something)
nmod:poss(mother, she)
nsubj(say, mother)
aux(say, have)
advmod(say, once)
acl:relcl(something, say)
case(she, to)
obl(say, she)
punct(realize, ;)
punct(realize, ;)
nsubj(be, it)
parataxis(realize, be)
mark(show, as)
mark(show, if)
nsubj(show, she)
aux(show, be)
advcl(be, show)
iobj(show, I)
obj(show, one)
case(reason, of)
det(reason, the)
nmod(one, reason)
advmod(hate, why)
nsubj(hate, she)
acl:relcl(reason, hate)
det(woman, that)
obj(hate, woman)
case(she, inside)
obl(hate, she)
punct(realize, .)
nsubj(introject, what)
aux(introject, have)
cop(introject, be)
det(introject, a)
advmod(powerful, unmanageably)
amod(introject, powerful)
root(ROOT, introject)
cop(charge, be)
advmod(introject, now)
punct(charge, ,)
case(charge, despite)
nmod:poss(charge, its)
amod(charge, continue)
obl(introject, charge)
case(energy, of)
nmod(charge, energy)
amod(charge, disconcerting)
case(I, to)
obl(disconcerting, I)
punct(charge, ,)
advmod(control, sufficiently)
case(control, within)
nmod(charge, control)
case(ego, of)
nmod:poss(ego, she)
nmod(control, ego)
mark(use, that)
nsubj(use, she)
aux(use, could)
acl:relcl(control, use)
obj(use, it)
mark(show, to)
xcomp(use, show)
iobj(show, I)
obj(show, what)
det(mother, this)
amod(mother, introject)
nsubj(like, mother)
cop(like, be)
case(what, like)
punct(charge, .)
advmod(fill, earlier)
punct(fill, ,)
det(woman, this)
nsubj:pass(fill, woman)
aux(fill, have)
aux:pass(fill, be)
advmod(fill, so)
root(ROOT, fill)
case(variety, with)
det(variety, a)
amod(variety, chaotic)
obl(fill, variety)
case(introject, of)
nmod(variety, introject)
nsubj(sound, that)
case(time, at)
obl(sound, time)
punct(sound, ,)
mark(room, when)
nsubj(room, she)
cop(room, be)
case(room, in)
nmod:poss(room, she)
advcl(sound, room)
advmod(room, alone)
punct(sound, ,)
nsubj(sound, it)
aux(sound, would)
conj(fill, sound)
case(passerby, to)
det(passerby, a)
obl(sound, passerby)
mark(be, as)
mark(be, though)
expl(be, there)
advcl(sound, be)
amod(person, several)
amod(person, different)
nsubj(be, person)
case(room, in)
det(room, the)
nmod(person, room)
punct(be, ,)
mark(vocalize, as)
nsubj(vocalize, she)
aux(vocalize, would)
advcl(be, vocalize)
case(kind, in)
amod(kind, various)
obl(vocalize, kind)
case(voice, of)
nmod(kind, voice)
punct(fill, . )
det(patient, a)
advmod(fragment, somewhat)
advmod(fragment, less)
amod(patient, fragment)
amod(patient, hebephrenic)
nsubj(sound, patient)
case(mine, of)
nmod(patient, mine)
punct(patient, ,)
nsubj(use, who)
acl:relcl(patient, use)
mark(seclude, to)
advmod(seclude, often)
xcomp(use, seclude)
obj(seclude, herself)
case(room, in)
nmod:poss(room, she)
obl(seclude, room)
punct(sound, ,)
advmod(sound, often)
root(ROOT, sound)
case(door, through)
det(door, the)
amod(door, close)
obl(sound, door)
punct(sound, --)
mark(find, as)
nsubj(find, I)
aux(find, would)
advcl(sound, find)
mark(pass, on)
advcl(find, pass)
obl(pass, by)
punct(pass, ,)
case(session, between)
nmod:poss(session, we)
obl(pass, session)
punct(pass, --)
case(world, for)
det:predet(world, all)
det(world, the)
nmod(session, world)
case(person, like)
nummod(person, two)
nmod(world, person)
punct(mother, ,)
det(mother, a)
compound(mother, scold)
conj(person, mother)
cc(child, and)
det(child, a)
amod(child, defensive)
conj(person, child)
punct(sound, .)
advmod(hard, particularly)
advmod(instance, hard)
mark(grasp, for)
det(therapist, the)
nsubj(grasp, therapist)
mark(grasp, to)
advcl(hard, grasp)
cop(instance, be)
det(instance, those)
root(ROOT, instance)
case(which, in)
obl(manifesting, which)
det(patient, the)
nsubj(manifesting, patient)
aux(manifesting, be)
acl:relcl(instance, manifesting)
det(introject, a)
obj(manifesting, introject)
xcomp(manifesting, traceable)
case(something, to)
obl(traceable, something)
case(therapist, in)
det(therapist, the)
nmod(something, therapist)
punct(instance, ,)
det(aspect, some)
appos(instance, aspect)
case(therapist, of)
det(therapist, the)
nmod(aspect, therapist)
case(which, of)
obl(himself, which)
det(latter, the)
nsubj(himself, latter)
cop(himself, be)
acl:relcl(therapist, himself)
advmod(aware, only)
advmod(aware, poorly)
amod(himself, aware)
punct(recognition, ,)
cc(recognition, and)
det(recognition, the)
conj(aware, recognition)
case(which, of)
nmod(part, which)
punct(recognition, ,)
case(part, as)
det(part, a)
nmod(recognition, part)
case(himself, of)
nmod(part, himself)
punct(find, ,)
nsubj(find, he)
acl:relcl(recognition, find)
advmod(unwelcome, distinctly)
xcomp(find, unwelcome)
punct(instance, . )
nsubj(find, I)
aux(find, have)
root(ROOT, find)
punct(find, ,)
obj(find, time)
cc(again, and)
advmod(time, again)
punct(find, ,)
mark(cease, that)
det(bit, some)
obl:tmod(cease, bit)
case(annoying, of)
advmod(annoying, particularly)
amod(behavior, annoying)
cc(intractable, and)
conj(annoying, intractable)
nmod(bit, behavior)
case(part, on)
det(part, the)
nmod(behavior, part)
case(patient, of)
det(patient, a)
nmod(part, patient)
acl(patient, rest)
punct(rest, ,)
case(analysis, in)
det(analysis, the)
amod(analysis, final)
obl(rest, analysis)
punct(analysis, ,)
case(basis, on)
det(basis, this)
nmod(analysis, basis)
punct(acknowledge, ;)
punct(find, ;)
cc(acknowledge, and)
advmod(acknowledge, only)
mark(acknowledge, when)
nsubj(acknowledge, I)
aux(acknowledge, can)
advcl(cease, acknowledge)
obj(acknowledge, this)
punct(acknowledge, ,)
case(myself, to)
obl(acknowledge, myself)
punct(acknowledge, ,)
mark(aspect, as)
cop(aspect, be)
advmod(aspect, indeed)
det(aspect, a)
advcl(cease, aspect)
case(personality, of)
nmod:poss(personality, my)
nmod(aspect, personality)
punct(cease, ,)
aux(cease, do)
nsubj(cease, it)
conj(find, cease)
mark(aspect, to)
cop(aspect, be)
det(aspect, a)
advmod(troublesome, prominently)
amod(aspect, troublesome)
xcomp(cease, aspect)
case(behavior, of)
det(patient, the)
nmod:poss(behavior, patient)
case(patient, 's)
nmod(aspect, behavior)
punct(find, .)
case(example, for)
obl(use, example)
punct(use, ,)
nummod(man, one)
amod(man, hebephrenic)
nsubj(use, man)
root(ROOT, use)
mark(annoy, to)
xcomp(use, annoy)
obj(annoy, I)
punct(annoy, ,)
obl:tmod(annoy, month)
case(month, after)
obl(annoy, month)
punct(annoy, ,)
mark(say, by)
advcl(annoy, say)
punct(say, ,)
advmod(get, whenever)
nsubj(get, I)
advcl(say, get)
compound:prt(get, up)
mark(leave, to)
xcomp(get, leave)
cc(make, and)
conj(get, make)
nmod:poss(comment, my)
advmod(steoreotype, fairly)
amod(comment, steoreotype)
obj(make, comment)
mark(see, that)
nsubj(see, I)
aux(see, would)
aux(see, be)
acl(comment, see)
obj(see, he)
case(day, on)
det(day, the)
amod(day, follow)
obl(see, day)
punct(whenever, ,)
cc(whenever, or)
conj(see, whenever)
punct(use, ,)
punct(use, ``)
nsubj(welcome, you)
cop(welcome, be)
root(ROOT, welcome)
punct(welcome, '')
punct(welcome, ,)
case(fashion, in)
det(fashion, a)
advmod(condescending, notably)
amod(fashion, condescending)
obl(welcome, fashion)
punct(welcome, --)
mark(he, as)
mark(he, though)
nsubj(he, it)
cop(he, be)
advcl(welcome, he)
mark(thank, due)
fixed(due, for)
nsubj(thank, I)
mark(thank, to)
advcl(he, thank)
obj(thank, he)
case(privilege, for)
det(privilege, the)
obl(thank, privilege)
mark(spend, of)
acl(privilege, spend)
det(hour, the)
obj(spend, hour)
case(he, with)
obl(spend, he)
punct(point, ,)
cc(point, and)
nsubj(point, he)
aux(point, be)
advmod(point, thus)
conj(welcome, point)
compound:prt(point, up)
nmod:poss(failure, my)
obj(point, failure)
mark(utter, to)
acl(failure, utter)
det(grateful, a)
advmod(grateful, humbly)
xcomp(thank, grateful)
punct(thank, ,)
punct(thank, ``)
conj(utter, thank)
obj(thank, you)
punct(thank, '')
case(he, to)
obl(thank, he)
case(end, at)
det(end, the)
obl(thank, end)
case(session, of)
det(session, each)
nmod(end, session)
punct(welcome, .)
advmod(become, eventually)
nsubj(become, it)
root(ROOT, become)
xcomp(become, clear)
case(I, to)
obl(clear, I)
punct(clear, ,)
advmod(clear, partly)
case(aid, with)
det(aid, the)
obl(clear, aid)
case(patient, of)
det(patient, another)
amod(patient, schizophrenic)
nmod(aid, patient)
nsubj(point, who)
aux(point, could)
acl:relcl(patient, point)
compound:prt(point, out)
nmod:poss(condescension, my)
obj(point, condescension)
case(I, to)
obl(point, I)
advmod(directly, somewhat)
advmod(directly, more)
advmod(point, directly)
punct(point, ,)
mark(condescending, that)
det(man, this)
nsubj(directly, man)
punct(man, ,)
case(condescending, with)
nmod:poss(condescending, he)
nmod(man, condescending)
punct(become, ,)
punct(become, ``)
nsubj(welcome, you)
cop(welcome, be)
root(ROOT, welcome)
punct(welcome, '')
punct(welcome, ,)
aux(personify, be)
advmod(accurately, very)
advmod(personify, accurately)
parataxis(welcome, personify)
det(element, a)
obj(personify, element)
case(condescension, of)
amod(condescension, obnoxious)
nmod(element, condescension)
nsubj(present, which)
aux(present, have)
cop(present, be)
acl:relcl(condescension, present)
case(demeanor, in)
nmod:poss(demeanor, my)
amod(demeanor, own)
obl(present, demeanor)
punct(present, ,)
case(month, over)
det(month, these)
obl(present, month)
punct(present, ,)
case(each, on)
obl(bid, each)
case(occasion, of)
det(occasion, these)
nmod(each, occasion)
mark(bid, when)
nsubj(bid, I)
aux(bid, have)
advcl(present, bid)
iobj(bid, he)
amod(bye, good)
punct(bye, -)
obj(bid, bye)
case(note, with)
det(note, the)
compound(note, consoling)
nmod(bye, note)
punct(note, ,)
det(time, each)
appos(note, time)
punct(stoop, ,)
mark(stoop, that)
det(Christ, the)
compound(Christ, healing)
nsubj(stoop, Christ)
aux(stoop, would)
aux(stoop, be)
acl:relcl(time, stoop)
mark(dispense, to)
xcomp(stoop, dispense)
det(succor, this)
obj(dispense, succor)
case(sufferer, to)
det(sufferer, the)
amod(sufferer, poor)
obl(dispense, sufferer)
advmod(dispense, again)
case(morrow, on)
det(morrow, the)
obl(dispense, morrow)
punct(welcome, .)
det(patient, another)
root(ROOT, patient)
punct(patient, ,)
det(woman, a)
amod(woman, paranoid)
appos(patient, woman)
punct(patient, ,)
case(month, for)
amod(month, many)
obl(infuriate, month)
acl(patient, infuriate)
advmod(only, not)
cc:preconj(I, only)
obj(infuriate, I)
cc(personnel, but)
det(personnel, the)
compound(personnel, ward)
punct(personnel, -)
conj(I, personnel)
cc(patient, and)
nmod:poss(patient, she)
amod(patient, fellow)
conj(personnel, patient)
mark(behave, by)
advmod(behave, arrogantly)
acl(patient, behave)
mark(own, as)
mark(own, though)
nsubj(own, she)
advcl(behave, own)
det(building, the)
amod(building, whole)
obj(own, building)
punct(own, ,)
mark(person, as)
mark(person, though)
nsubj(person, she)
cop(person, be)
det(person, the)
amod(person, only)
advcl(own, person)
case(it, in)
nmod(person, it)
nmod:poss(need, whose)
nsubj(be, need)
acl:relcl(person, be)
mark(meet, to)
aux:pass(meet, be)
xcomp(be, meet)
punct(patient, .)
det(behavior, this)
nsubj(subside, behavior)
case(part, on)
nmod:poss(part, she)
nmod(behavior, part)
root(ROOT, subside)
advmod(subside, only)
mark(come, after)
nsubj(come, I)
aux(come, have)
advcl(subside, come)
mark(see, to)
xcomp(come, see)
det(similarity, the)
advmod(close, uncomfortably)
amod(similarity, close)
obj(see, similarity)
case(hand, between)
punct(similarity, ,)
case(hand, on)
det(hand, the)
nummod(hand, one)
obl(arrange, hand)
punct(arrange, ,)
nsubj(arrange, she)
conj(see, arrange)
det(ventilation, the)
obj(arrange, ventilation)
case(room, of)
det(room, the)
amod(room, common)
compound(room, living)
nmod(ventilation, room)
case(like, to)
nmod:poss(like, she)
amod(like, own)
nmod(room, like)
punct(turn, ,)
cc(turn, or)
conj(arrange, turn)
det(television, the)
obj(turn, television)
compound:prt(turn, off)
cc(on, or)
conj(turn, on)
case(regard, without)
obl(turn, regard)
case(wish, to)
det(wish, the)
nmod(regard, wish)
case(other, of)
det(other, the)
nmod(wish, other)
punct(come, ,)
cc(come, and)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(come, hand)
punct(come, ,)
nmod:poss(own, my)
nsubj(come, own)
conj(regard, come)
advmod(come, stolidly)
case(room, into)
nmod:poss(room, she)
obl(come, room)
case(objection, despite)
nmod:poss(objection, she)
amod(objection, persistent)
cc(vociferous, and)
conj(persistent, vociferous)
nmod(room, objection)
punct(bring, ,)
advcl(come, bring)
nmod:poss(chair, my)
amod(chair, big)
amod(chair, easy)
obj(bring, chair)
case(I, with)
nmod(chair, I)
punct(shut, ,)
advmod(shut, usually)
advcl(bring, shut)
det(window, the)
obj(shut, window)
case(room, of)
nmod:poss(room, she)
nmod(window, room)
obj(prefer, which)
nsubj(prefer, she)
acl:relcl(room, prefer)
mark(keep, to)
xcomp(prefer, keep)
case(state, in)
det(state, a)
advmod(cold, very)
amod(state, cold)
obl(keep, state)
punct(plunking, ,)
cc(plunking, and)
conj(keep, plunking)
obj(plunking, myself)
compound:prt(plunking, down)
case(chair, in)
nmod:poss(chair, my)
obl(plunking, chair)
punct(plunking, --)
case(short, in)
obl(plunking, short)
punct(plunking, ,)
advcl(plunking, behave)
mark(own, as)
mark(own, if)
nsubj(own, I)
advcl(behave, own)
nmod:poss(room, she)
obj(own, room)
punct(subside, . )
nummod(condensation, 4)
punct(condensation, .)
root(ROOT, condensation)
punct(condensation, .)
advmod(concentrate, here)
det(variety, a)
nsubj:pass(concentrate, variety)
case(meaning, of)
nmod(variety, meaning)
cc(emotion, and)
conj(meaning, emotion)
aux:pass(concentrate, be)
root(ROOT, concentrate)
punct(reduce, ,)
cc(reduce, or)
conj(concentrate, reduce)
punct(concentrate, ,)
case(expression, in)
nmod:poss(expression, they)
amod(expression, communicative)
obl(concentrate, expression)
punct(concentrate, ,)
case(statement, to)
det(statement, some)
advmod(seem, comparatively)
compound(seem, simple)
punct(seem, -)
amod(statement, seem)
amod(statement, verbal)
cc(nonverbal, or)
conj(verbal, nonverbal)
obl(concentrate, statement)
punct(concentrate, .)
nsubj(find, one)
root(ROOT, find)
punct(find, ,)
case(example, for)
obl(find, example)
punct(find, ,)
mark(reveal, that)
det(expression, a)
amod(expression, terse)
cc(stereotype, and)
conj(terse, stereotype)
amod(expression, verbal)
nsubj(reveal, expression)
punct(expression, ,)
acl(expression, seem)
case(first, at)
advmod(seem, first)
mark(convention, to)
cop(convention, be)
det(convention, a)
amod(convention, mere)
amod(convention, hollow)
xcomp(seem, convention)
punct(reveal, ,)
ccomp(find, reveal)
obj(reveal, itself)
case(month, over)
det(month, the)
obl(reveal, month)
case(therapy, of)
nmod(month, therapy)
case(vehicle, as)
det(vehicle, the)
nmod(month, vehicle)
mark(express, for)
acl(vehicle, express)
det(feeling, the)
advmod(varied, most)
amod(feeling, varied)
cc(intense, and)
conj(varied, intense)
obj(express, feeling)
punct(unconventional, ,)
cc(unconventional, and)
det(unconventional, the)
advmod(unconventional, most)
conj(feeling, unconventional)
case(meaning, of)
obl(unconventional, meaning)
punct(find, .)
advmod(sense, more)
case(anything, than)
obl(more, anything)
punct(sense, ,)
nsubj(sense, it)
cop(sense, be)
det(therapist, the)
nmod:poss(sense, therapist)
case(therapist, 's)
amod(sense, intuitive)
root(ROOT, sense)
case(meaning, of)
det(meaning, these)
amod(meaning, latent)
nmod(sense, meaning)
case(stereotype, in)
det(stereotype, the)
nmod(meaning, stereotype)
nsubj(help, which)
acl:relcl(stereotype, help)
det(meaning, these)
obj(help, meaning)
mark(become, to)
xcomp(help, become)
xcomp(become, reveal)
punct(something, ,)
appos(sense, something)
case(deck, like)
det(deck, a)
compound(out, spread)
punct(out, -)
compound(deck, out)
nmod(something, deck)
case(card, of)
nmod(deck, card)
punct(deck, ,)
case(occasion, on)
amod(occasion, sporadic)
nmod(deck, occasion)
case(passage, over)
det(passage, the)
nmod(deck, passage)
case(patient, of)
det(patient, the)
nmod(passage, patient)
case(patient, 's)
cc(month, and)
nmod:poss(month, he)
conj(patient, month)
case(work, of)
nmod(month, work)
advmod(work, together)
punct(sense, .)
nsubj(assume, one)
aux(assume, can)
advmod(assume, not)
root(ROOT, assume)
punct(assume, ,)
advmod(assume, of)
fixed(of, course)
punct(assume, ,)
mark(inherent, that)
det:predet(meaning, all)
det(meaning, these)
amod(meaning, accumulate)
nsubj(inherent, meaning)
cop(inherent, be)
ccomp(assume, inherent)
case(stereotype, in)
det(stereotype, the)
obl(inherent, stereotype)
case(beginning, at)
det(beginning, the)
nmod(stereotype, beginning)
case(therapy, of)
det(therapy, the)
nmod(beginning, therapy)
punct(inherent, ,)
cc(correct, or)
case(time, at)
det(time, any)
nummod(time, one)
obl(later, time)
advmod(when, later)
mark(utter, on)
mark(utter, when)
det(stereotype, the)
nsubj:pass(utter, stereotype)
aux:pass(utter, be)
advcl(correct, utter)
punct(correct, ;)
punct(assume, ;)
advmod(correct, probably)
nsubj(correct, it)
cop(correct, be)
parataxis(assume, correct)
mark(think, to)
advcl(correct, think)
case(it, of)
obl(think, it)
case(matter, as)
det(matter, a)
obl(think, matter)
case(mode, of)
det(mode, a)
advmod(groove, well)
punct(groove, -)
amod(mode, groove)
punct(mode, ,)
amod(mode, stereotype)
nmod(matter, mode)
case(expression, of)
nmod(mode, expression)
punct(matter, --)
cc(no, and)
discourse(there, no)
punct(there, ,)
cc(groove, or)
cc(groove, but)
det(few, a)
amod(groove, few)
punct(groove, ,)
amod(groove, other)
amod(groove, communicational)
nsubj(there, groove)
punct(groove, ,)
advmod(there, as)
fixed(as, yet)
punct(there, --)
cop(there, be)
parataxis(correct, there)
punct(available, ,)
conj(there, available)
case(use, for)
det(patient, the)
nmod:poss(use, patient)
case(patient, 's)
obl(available, use)
punct(available, ,)
case(emotion, as)
advmod(emerge, newly)
punct(emerge, -)
amod(emotion, emerge)
obl(available, emotion)
cc(idea, and)
conj(emotion, idea)
advmod(up, well)
case(emotion, up)
case(he, in)
obl(up, he)
case(course, over)
det(course, the)
obl(up, course)
case(month, of)
nmod(course, month)
punct(assume, .)
cc(true, but)
expl(true, it)
cop(true, be)
root(ROOT, true)
mark(sense, that)
det(therapist, the)
nsubj(sense, therapist)
aux(sense, can)
csubj(true, sense)
punct(sense, ,)
mark(hear, when)
nsubj(hear, he)
advcl(sense, hear)
det(stereotype, this)
obj(hear, stereotype)
punct(be, ,)
mark(be, that)
expl(be, there)
ccomp(sense, be)
case(moment, at)
det(moment, this)
obl(be, moment)
amod(determinant, many)
amod(determinant, emotional)
nsubj(be, determinant)
case(work, at)
nmod(determinant, work)
case(it, in)
nmod(work, it)
punct(babel, ,)
det(babel, a)
amod(babel, blurred)
appos(determinant, babel)
case(voice, of)
amod(voice, indistinct)
nmod(babel, voice)
nsubj(have, which)
acl:relcl(voice, have)
advmod(have, yet)
mark(delineate, to)
xcomp(have, become)
advmod(delineate, clearly)
xcomp(become, delineate)
case(another, from)
nummod(another, one)
obl(delineate, another)
punct(true, .)
advmod(stereotype, sometimes)
nsubj(stereotype, it)
cop(stereotype, be)
advmod(stereotype, not)
det(stereotype, a)
amod(stereotype, verbal)
root(ROOT, stereotype)
punct(stereotype, --)
discourse(stereotype, a)
punct(stereotype, ``)
root(ROOT, how)
cop(how, be)
nsubj(now, you)
advmod(how, now)
punct(now, '')
punct(how, ?)
punct(how, ?)
cc(want, or)
mark(want, a)
punct(want, ``)
nsubj(want, I)
parataxis(now, want)
mark(go, to)
xcomp(want, go)
advmod(go, home)
punct(want, '')
punct(whatever, ,)
cc(whatever, or)
conj(want, whatever)
punct(whatever, --)
cc(one, but)
det(one, a)
amod(one, nonverbal)
nsubj(whatever, one)
nsubj(reveal, which)
acl:relcl(one, reveal)
obj(reveal, itself)
punct(reveal, ,)
advmod(reveal, gradually)
punct(reveal, ,)
case(expression, as)
det(expression, the)
amod(expression, condense)
obl(reveal, expression)
case(meaning, of)
advmod(one, more)
fixed(more, than)
nummod(meaning, one)
amod(meaning, latent)
nmod(expression, meaning)
punct(how, . )
det(man, a)
amod(man, hebephrenic)
nsubj(use, man)
root(ROOT, use)
mark(give, to)
xcomp(use, give)
det(wave, a)
amod(wave, repetitious)
obj(give, wave)
case(hand, of)
nmod:poss(hand, he)
nmod(wave, hand)
det(number, a)
obj(give, number)
case(time, of)
nmod(number, time)
case(hour, during)
nmod:poss(hour, he)
advmod(silent, largely)
punct(silent, -)
amod(hour, silent)
obl(give, hour)
case(therapist, with)
nmod:poss(therapist, he)
nmod(hour, therapist)
punct(use, .)
mark(come, when)
det(therapist, the)
nsubj(come, therapist)
root(ROOT, come)
mark(feel, to)
xcomp(come, feel)
case(ground, on)
advmod(sure, sufficiently)
amod(ground, sure)
obl(feel, ground)
case(he, with)
nmod(ground, he)
mark(ask, to)
advcl(feel, ask)
obj(ask, he)
punct(come, ,)
punct(come, ``)
obj(reply, what)
cop(what, be)
nsubj(what, that)
punct(that, ,)
appos(that, Bill)
punct(hello, --)
appos(that, hello)
cc(farewell, or)
conj(hello, farewell)
punct(hello, '')
punct(reply, ?)
punct(reply, ?)
punct(reply, ,)
det(patient, the)
nsubj(reply, patient)
root(ROOT, reply)
punct(reply, ,)
punct(reply, ``)
nsubj(form, both)
punct(form, ,)
nsubj(form, Dearie)
punct(Dearie, --)
appos(Dearie, two)
case(one, in)
nmod(two, one)
punct(two, '')
punct(form, .)
case(form, of)
det:predet(form, all)
det(form, the)
amod(form, possible)
root(ROOT, form)
case(expression, of)
amod(expression, nonverbal)
nmod(form, expression)
punct(expression, ,)
nsubj(seem, that)
nsubj(seem, which)
acl:relcl(expression, seem)
xcomp(seem, best)
mark(give, to)
advcl(best, give)
obj(give, release)
punct(expression, ,)
cc(expression, and)
amod(expression, communicational)
conj(release, expression)
punct(laughter, ,)
case(complex, to)
amod(feeling, complex)
cc(undifferentiate, and)
conj(complex, undifferentiate)
nsubj(laughter, feeling)
cop(laughter, be)
conj(form, laughter)
punct(laughter, .)
expl(coincidence, it)
cop(coincidence, be)
det(coincidence, no)
root(ROOT, coincidence)
mark(dedifferentiate, that)
det(patient, the)
amod(patient, hebephrenic)
nsubj(coincidence, patient)
punct(patient, ,)
det(dedifferentiate, the)
advmod(severely, most)
advmod(dedifferentiate, severely)
acl(patient, dedifferentiate)
case(patient, of)
det(patient, all)
amod(patient, schizophrenic)
obl(dedifferentiate, patient)
punct(show, ,)
conj(patient, show)
punct(patient, ,)
case(one, as)
nmod(patient, one)
case(symptom, of)
nmod:poss(symptom, he)
amod(symptom, characteristic)
nmod(one, symptom)
punct(symptom, ,)
conj(symptom, laughter)
punct(laughter, --)
conj(symptom, laughter)
nsubj(make, which)
advmod(make, now)
acl:relcl(laughter, make)
nummod(feel, one)
obj(make, feel)
xcomp(make, scorn)
cc(hate, or)
conj(scorn, hate)
punct(scorn, ,)
nsubj(make, which)
advmod(make, now)
acl:relcl(feel, make)
nummod(feel, one)
obj(make, feel)
mark(weep, like)
advcl(make, weep)
punct(give, ,)
cc(give, or)
nsubj(give, which)
advmod(give, now)
conj(make, give)
obj(give, one)
det(glimpse, a)
obj(give, glimpse)
case(expanse, of)
det(expanse, the)
amod(expanse, bleak)
cc(empty, and)
conj(bleak, empty)
nmod(glimpse, expanse)
case(despair, of)
nmod:poss(despair, man)
case(man, 's)
nmod(expanse, despair)
punct(glimpse, ;)
punct(glimpse, ;)
cc(convey, and)
nsubj(convey, which)
punct(convey, ,)
advmod(often, more)
advmod(convey, often)
case(these, than)
det:predet(these, all)
obl(convey, these)
punct(convey, ,)
parataxis(coincidence, convey)
det(welter, a)
obj(convey, welter)
case(feeling, of)
nmod(welter, feeling)
nsubj:pass(convey, which)
aux(convey, could)
case(way, in)
det(way, no)
obl(convey, way)
aux:pass(convey, be)
acl:relcl(feeling, convey)
case(number, by)
det(number, any)
obl(convey, number)
case(word, of)
nmod(number, word)
punct(word, ,)
appos(number, word)
nsubj(unlike, which)
cop(unlike, be)
advmod(unlike, so)
acl:relcl(word, unlike)
det(welter, this)
nsubj(unlike, welter)
mark(form, in)
aux:pass(form, be)
advcl(unlike, form)
cc(discrete, and)
conj(form, discrete)
case(another, from)
nummod(another, one)
obl(discrete, another)
punct(another, .)
case(extent, to)
det(extent, a)
advmod(less, much)
advmod(full, less)
amod(extent, full)
obl(have, extent)
punct(have, ,)
det(person, the)
amod(person, hebephrenic)
nmod:poss(belch, person)
case(person, 's)
nsubj(have, belch)
cc(flatus, or)
conj(belch, flatus)
parataxis(coincidence, have)
det(function, a)
amod(function, comparable)
amod(function, communicative)
obj(have, function)
punct(have, ;)
punct(have, ;)
mark(work, in)
acl(function, work)
case(patient, with)
det(patient, these)
obl(work, patient)
det(therapist, the)
nsubj(get, therapist)
advmod(get, eventually)
acl:relcl(patient, get)
mark(do, to)
xcomp(get, do)
det(private, some)
case(least, at)
obl(private, least)
amod(mull, private)
xcomp(do, mull)
case(meaning, over)
case(meaning, of)
det(meaning, the)
amod(meaning, possible)
obl(mull, meaning)
case(belch, of)
det(belch, a)
nmod(meaning, belch)
punct(passage, ,)
cc(passage, or)
det(passage, the)
conj(meaning, passage)
case(flatus, of)
nmod(passage, flatus)
punct(reduce, ,)
advmod(only, not)
advmod(reduce, only)
mark(reduce, because)
nsubj:pass(reduce, he)
aux:pass(reduce, be)
acl:relcl(passage, reduce)
case(this, to)
obl(reduce, this)
case(lack, for)
obl(reduce, lack)
case(anything, of)
nmod(lack, anything)
amod(anything, else)
mark(analyze, to)
acl(anything, analyze)
punct(learn, ,)
cc(learn, but)
advmod(learn, also)
mark(learn, because)
nsubj(learn, he)
advcl(analyze, learn)
mark(constitute, that)
advmod(constitute, even)
det(animal, these)
nsubj(constitute, animal)
punct(animal, -)
case(sound, like)
nmod(animal, sound)
ccomp(learn, constitute)
obj(constitute, form)
case(communication, of)
nmod(form, communication)
case(which, in)
obl(constitute, which)
punct(say, ,)
case(time, from)
obl(constitute, time)
case(time, to)
nmod(time, time)
punct(say, ,)
det(thing, quite)
amod(thing, different)
nsubj:pass(say, thing)
aux(say, be)
aux:pass(say, be)
conj(constitute, say)
punct(say, ,)
advmod(say, long)
mark(become, before)
det(patient, the)
nsubj(become, patient)
aux(become, can)
advcl(say, become)
advmod(aware, sufficiently)
xcomp(become, aware)
case(these, of)
obl(aware, these)
punct(aware, ,)
case(feeling, as)
amod(feeling, distinct)
obl(aware, feeling)
cc(concept, and)
conj(feeling, concept)
punct(say, ,)
mark(say, to)
acl(feeling, say)
obj(say, they)
case(word, in)
obl(say, word)
punct(coincidence, .)
mark(intimate, as)
nsubj(intimate, I)
aux(intimate, have)
aux(intimate, be)
advcl(phenomenon, intimate)
punct(intimate, ,)
case(schizophrenic, in)
det(schizophrenic, the)
obl(intimate, schizophrenic)
punct(schizophrenic, --)
cc(dream, and)
advmod(dream, perhaps)
advmod(dream, also)
case(dream, in)
det(dream, the)
conj(schizophrenic, dream)
case(neurotic, of)
det(neurotic, the)
nmod(dream, neurotic)
punct(question, ;)
punct(question, ;)
nsubj(question, this)
cop(question, be)
det(question, a)
parataxis(dream, question)
obj(have, which)
nsubj(have, I)
acl:relcl(question, have)
det(wish, no)
obj(have, wish)
mark(take, to)
acl(wish, take)
compound:prt(take, up)
punct(phenomenon, --)
nsubj(phenomenon, condensation)
cop(phenomenon, be)
det(phenomenon, a)
root(ROOT, phenomenon)
case(which, in)
obl(find, which)
nsubj(find, one)
acl:relcl(phenomenon, find)
advmod(expression, not)
det(expression, a)
amod(expression, condense)
obj(find, expression)
case(feeling, of)
amod(feeling, various)
nmod(expression, feeling)
cc(idea, and)
conj(feeling, idea)
nsubj(sort, which)
cop(level, be)
punct(sort, ,)
case(level, at)
det(level, a)
amod(level, unconscious)
obl(sort, level)
punct(sort, ,)
advmod(sort, well)
acl:relcl(feeling, sort)
compound:prt(sort, out)
punct(expression, ,)
cc(expression, but)
cc(expression, rather)
det(expression, a)
amod(expression, condense)
conj(sort, expression)
case(feeling, of)
nmod(expression, feeling)
cc(idea, and)
conj(feeling, idea)
nsubj(have, which)
punct(have, ,)
advmod(unconscious, even)
case(unconscious, in)
det(unconscious, the)
obl(have, unconscious)
punct(have, ,)
acl:relcl(feeling, have)
advmod(have, yet)
mark(differentiate, to)
xcomp(have, become)
advmod(differentiate, well)
xcomp(become, differentiate)
case(another, from)
nummod(another, one)
obl(differentiate, another)
punct(Freeman, .)
obl(differentiate, Freeman)
punct(Cameron, ,)
conj(Freeman, Cameron)
cc(McGhie, and)
conj(Cameron, McGhie)
punct(description, ,)
case(description, in)
nmod:poss(description, they)
nmod(Freeman, description)
case(disturbance, of)
det(disturbance, the)
nmod(description, disturbance)
mark(find, of)
obl(find, thinking)
acl(disturbance, find)
case(patient, in)
amod(patient, chronic)
amod(patient, schizophrenic)
obl(find, patient)
punct(say, ,)
conj(find, say)
punct(say, ,)
case(regard, in)
obl(say, regard)
case(condensation, to)
nmod(regard, condensation)
punct(say, ,)
mark(be, that)
punct(lack, ``)
det(lack, the)
nsubj(say, lack)
case(discrimination, of)
amod(discrimination, adequate)
nmod(lack, discrimination)
case(self, between)
det(self, the)
nmod(discrimination, self)
cc(environment, and)
det(environment, the)
conj(self, environment)
punct(object, ,)
cc(object, and)
det(object, the)
conj(lack, object)
acl(object, contain)
obl(contain, therein)
case(itself, in)
obl(contain, itself)
cop(condensation, be)
det(condensation, the)
amod(condensation, prototypical)
acl(object, condensation)
punct(condensation, '')
punct(condensation, .)
case(experience, in)
nmod:poss(experience, my)
obl(condensation, experience)
punct(be, ,)
det(many, a)
amod(many, great)
nsubj(be, many)
case(communication, of)
det(patient, the)
nmod:poss(communication, patient)
case(patient, 's)
advmod(puzzling, more)
amod(communication, puzzling)
amod(communication, verbal)
nmod(many, communication)
cop(condensation, be)
advmod(be, so)
case(reason, for)
det(reason, the)
obl(so, reason)
mark(become, that)
amod(meaning, concrete)
nsubj(become, meaning)
aux(become, have)
advmod(become, not)
acl(reason, become)
xcomp(become, differentiate)
case(meaning, from)
amod(meaning, figurative)
obl(differentiate, meaning)
case(experience, in)
nmod:poss(experience, he)
amod(experience, subjective)
obl(differentiate, experience)
punct(phenomenon, .)
advmod(refer, thus)
nsubj(refer, he)
aux(refer, may)
aux(refer, be)
root(ROOT, refer)
case(thing, to)
det(thing, some)
amod(thing, concrete)
obl(refer, thing)
punct(incident, ,)
cc(incident, or)
conj(thing, incident)
punct(refer, ,)
case(environment, in)
nmod:poss(environment, he)
amod(environment, immediate)
nmod(thing, environment)
case(sounding, by)
det(sounding, some)
amod(sounding, symbolic)
punct(sounding, -)
nmod(environment, sounding)
punct(reference, ,)
amod(reference, hyperbolic)
conj(thing, reference)
case(event, to)
amod(event, transcendental)
nmod(reference, event)
case(scene, on)
det(scene, the)
amod(scene, global)
nmod(event, scene)
punct(refer, .)
advmod(develop, recently)
punct(develop, ,)
case(example, for)
obl(develop, example)
punct(philosophizing, ,)
det(woman, a)
amod(woman, paranoid)
nmod:poss(philosophizing, woman)
case(woman, 's)
amod(scale, large)
punct(scale, -)
compound(philosophizing, scale)
root(ROOT, philosophizing)
punct(philosophizing, ,)
case(session, in)
det(session, the)
nmod(philosophizing, session)
punct(philosophizing, ,)
case(curiosity, about)
det(curiosity, the)
amod(curiosity, intrusive)
nmod(session, curiosity)
nsubj(become, which)
aux(become, have)
acl:relcl(curiosity, become)
punct(become, ,)
case(opinion, in)
nmod:poss(opinion, she)
nmod(characteristic, opinion)
punct(characteristic, ,)
det(characteristic, a)
amod(characteristic, deplorable)
obj(become, characteristic)
case(culture, of)
amod(century, mid-twentieth)
punct(century, -)
compound(culture, century)
amod(culture, human)
nmod(characteristic, culture)
punct(develop, ,)
acl:relcl(characteristic, develop)
obj(develop, itself)
punct(develop, ,)
case(end, before)
det(end, the)
obl(develop, end)
case(session, of)
det(session, the)
nmod(end, session)
punct(develop, ,)
case(suspicion, into)
det(suspicion, a)
obl(develop, suspicion)
mark(peek, that)
nsubj(peek, I)
aux(peek, be)
advmod(peek, surreptitiously)
acl(suspicion, peek)
case(breast, at)
nmod:poss(breast, she)
advmod(expose, partially)
amod(breast, expose)
obl(peek, breast)
punct(peek, ,)
mark(be, as)
advmod(be, indeed)
nsubj(be, I)
advcl(peek, be)
punct(develop, .)
cc(consist, or)
punct(consist, ,)
advmod(often, equally)
advmod(consist, often)
punct(consist, ,)
det(statement, a)
amod(seem, concretistic)
punct(seem, -)
amod(statement, seem)
punct(consist, ,)
amod(seem, particularistic)
punct(seem, -)
amod(statement, seem)
nsubj(consist, statement)
aux(consist, may)
root(ROOT, consist)
punct(consist, ,)
case(exterior, with)
nmod:poss(exterior, its)
amod(exterior, mundane)
obl(consist, exterior)
punct(exterior, ,)
case(form, in)
det(form, a)
nmod(exterior, form)
case(poetry, of)
nmod(form, poetry)
punct(full, --)
aux(full, may)
cop(full, be)
ccomp(consist, full)
case(meaning, of)
obl(full, meaning)
cc(emotion, and)
conj(meaning, emotion)
mark(interpret, when)
advcl(full, interpret)
case(expression, as)
det(expression, a)
amod(expression, figurative)
obl(interpret, expression)
punct(metaphor, :)
det(metaphor, a)
appos(expression, metaphor)
punct(smile, ,)
det(smile, a)
conj(metaphor, smile)
punct(allegory, ,)
det(allegory, a)
conj(metaphor, allegory)
punct(mode, ,)
cc(mode, or)
det(mode, some)
amod(mode, other)
amod(mode, symbolic)
conj(metaphor, mode)
mark(speak, of)
acl(mode, speak)
punct(consist, .)
case(meaning, of)
amod(meaning, such)
amod(meaning, hidden)
obl(be, meaning)
det(patient, the)
nsubj(be, patient)
nmod:npmod(patient, himself)
root(ROOT, be)
punct(be, ,)
advmod(often, more)
advmod(be, often)
mark(not, than)
advcl(often, not)
punct(unaware, ,)
advmod(unaware, entirely)
advcl(often, unaware)
punct(be, .)
nmod:poss(experience, he)
amod(experience, subjective)
nsubj(one, experience)
aux(one, may)
cop(one, be)
det(one, a)
advmod(concretistic, remarkably)
amod(one, concretistic)
root(ROOT, one)
punct(one, .)
nummod(woman, one)
amod(woman, hebephrenic)
nsubj(confide, woman)
root(ROOT, confide)
case(I, to)
obl(confide, I)
punct(confide, ,)
punct(live, ``)
nsubj(live, I)
ccomp(confide, live)
case(world, in)
det(world, a)
obl(live, world)
case(word, of)
nmod(world, word)
punct(live, '')
punct(live, ,)
mark(object, as)
mark(object, if)
punct(object, ,)
case(she, to)
obl(object, she)
punct(object, ,)
nsubj(object, word)
cop(object, be)
advmod(object, fully)
amod(object, concrete)
advcl(live, object)
punct(object, ;)
punct(object, ;)
nsubj(object, Burnham)
punct(object, ,)
case(article, in)
nmod:poss(article, he)
amod(article, excellent)
nmod(Burnham, article)
punct(1955, ()
appos(article, 1955)
punct(1955, ))
case(communication, concern)
amod(communication, schizophrenic)
nmod(article, communication)
punct(include, ,)
acl(article, include)
obj(include, mention)
case(material, of)
amod(material, similar)
amod(material, clinical)
nmod(mention, material)
punct(confide, . )
det(man, a)
amod(man, borderline)
amod(man, schizophrenic)
amod(man, young)
nsubj(tell, man)
root(ROOT, tell)
obj(tell, I)
mark(concept, that)
case(he, to)
nmod(concept, he)
det(concept, the)
amod(concept, various)
amod(concept, theoretical)
ccomp(tell, concept)
case(which, about)
obl(expound, which)
nsubj(expound, he)
aux(expound, have)
aux(expound, be)
acl:relcl(concept, expound)
punct(expound, ,)
case(fashion, in)
det(fashion, a)
advmod(articulate, most)
amod(fashion, articulate)
obl(expound, fashion)
punct(fashion, ,)
case(session, during)
nmod(fashion, session)
case(session, after)
nmod(session, session)
case(I, with)
nmod(session, I)
punct(cube, ,)
cop(cube, be)
case(cube, like)
amod(cube, great)
ccomp(tell, cube)
case(matter, of)
advmod(tangibly, almost)
advmod(solid, tangibly)
amod(matter, solid)
nmod(cube, matter)
advmod(matter, up)
case(air, in)
det(air, the)
nmod(matter, air)
case(he, above)
nmod(air, he)
punct(remind, ;)
punct(remind, ;)
mark(speak, as)
nsubj(speak, he)
advcl(remind, speak)
nsubj:pass(remind, I)
aux:pass(remind, be)
ccomp(tell, remind)
case(bale, of)
det(bale, the)
amod(bale, great)
obl(remind, bale)
case(cargo, of)
nmod(bale, cargo)
nsubj:pass(swing, which)
aux:pass(swing, be)
acl:relcl(bale, swing)
punct(high, ,)
conj(swing, high)
case(air, in)
det(air, the)
obl(high, air)
punct(swing, ,)
case(steamship, from)
det(steamship, a)
amod(steamship, dock)
obl(swing, steamship)
punct(tell, .)
det(technique, the)
amod(technique, many)
amod(technique, linguistic)
nsubj(organize, technique)
mark(reduce, for)
acl(technique, reduce)
det(amount, the)
obj(reduce, amount)
case(information, of)
compound(information, dictionary)
nmod(amount, information)
nsubj:pass(propose, that)
aux(propose, have)
aux:pass(propose, be)
acl:relcl(information, propose)
advmod(propose, all)
root(ROOT, organize)
det(dictionary, the)
nmod:poss(contents, dictionary)
case(dictionary, 's)
obj(organize, contents)
case(prefixe, around)
nmod(contents, prefixe)
punct(stem, ,)
conj(prefixe, stem)
punct(suffixe, ,)
conj(prefixe, suffixe)
punct(etc, ,)
conj(prefixe, etc)
punct(organize, .)
punct(organize, . )
det(reduction, a)
amod(reduction, significant)
nsubj:pass(realize, reduction)
case(voume, in)
det(voume, the)
nmod(reduction, voume)
case(information, of)
compound(information, store)
nmod(voume, information)
aux:pass(realize, be)
advmod(realize, thus)
root(ROOT, realize)
punct(realize, ,)
advmod(language, especially)
case(language, for)
det(language, a)
advmod(inflect, highly)
amod(language, inflect)
obl(realize, language)
case(russian, such)
fixed(such, as)
nmod(language, russian)
punct(realize, .)
case(English, for)
obl(strike, English)
det(reduction, the)
nsubj(strike, reduction)
case(size, in)
nmod(reduction, size)
aux(strike, be)
advmod(strike, less)
ccomp(realize, strike)
punct(realize, .)
det(approach, this)
nsubj(require, approach)
root(ROOT, require)
mark(separate, that)
punct(require, :)
punct(1, ()
nummod(separate, 1)
punct(1, ))
det(word, each)
compound(word, text)
nsubj:pass(separate, word)
aux:pass(separate, be)
ccomp(require, separate)
case(element, into)
amod(element, smaller)
obl(separate, element)
mark(establish, to)
advcl(separate, establish)
det(correspondence, a)
obj(establish, correspondence)
case(entry, between)
det(entry, the)
compound(entry, occurrence)
cc(dictionary, and)
conj(occurrence, dictionary)
nmod(correspondence, entry)
punct(synthesize, ,)
cc(synthesize, and)
punct(2, ()
nummod(synthesize, 2)
punct(2, ))
det(information, the)
nsubj:pass(synthesize, information)
acl(information, retrieve)
case(entry, from)
amod(entry, several)
obl(retrieve, entry)
case(dictionary, in)
det(dictionary, the)
nmod(entry, dictionary)
aux:pass(synthesize, be)
conj(separate, synthesize)
case(description, into)
det(description, a)
obl(synthesize, description)
case(word, of)
det(word, the)
amod(word, particular)
nmod(description, word)
punct(require, .)
det(scheme, the)
amod(scheme, logical)
root(ROOT, scheme)
acl(scheme, use)
mark(accomplish, to)
xcomp(use, accomplish)
det(influence, the)
amod(influence, former)
obj(accomplish, influence)
det(placement, the)
obj(accomplish, placement)
case(information, of)
nmod(placement, information)
case(file, in)
det(file, the)
compound(file, dictionary)
nmod(information, file)
punct(scheme, .)
nsubj(require, Implementation)
case(latter, of)
det(latter, the)
nmod(Implementation, latter)
root(ROOT, require)
obj(require, storage)
case(information, of)
nmod(storage, information)
acl(information, need)
advmod(synthesis, only)
case(synthesis, for)
obl(need, synthesis)
punct(require, .)
nsubj(suggest, we)
root(ROOT, suggest)
det(application, the)
obj(suggest, application)
case(technique, of)
amod(technique, certain)
compound(processing, data)
punct(processing, -)
compound(technique, processing)
nmod(application, technique)
case(solution, as)
det(solution, a)
nmod(application, solution)
case(problem, to)
det(problem, the)
nmod(solution, problem)
punct(suggest, .)
cc(define, but)
advmod(define, first)
punct(define, ,)
nsubj(define, we)
aux(define, must)
root(ROOT, define)
nummod(term, two)
obj(define, term)
mark(understand, so)
fixed(so, that)
nmod:poss(meaning, they)
nsubj:pass(understand, meaning)
aux(understand, will)
aux:pass(understand, be)
advmod(understand, clearly)
advcl(define, understand)
punct(form, :)
appos(understand, form)
punct(form, --)
det(sequence, any)
amod(sequence, unique)
appos(form, sequence)
case(character, of)
amod(character, alphabetic)
nmod(sequence, character)
nsubj(appear, that)
aux(appear, can)
acl:relcl(character, appear)
case(language, in)
det(language, a)
obl(appear, language)
acl(language, precede)
cc(follow, and)
conj(precede, follow)
case(space, by)
det(space, a)
obl(follow, space)
punct(occurrence, ;)
punct(occurrence, ;)
appos(language, occurrence)
punct(occurrence, --)
det(instance, a)
appos(occurrence, instance)
case(form, of)
det(form, a)
nmod(instance, form)
case(text, in)
nmod(form, text)
punct(define, .)
nsubj(propose, we)
root(ROOT, propose)
det(method, a)
obj(propose, method)
mark(select, for)
acl(method, select)
advmod(information, only)
compound(information, dictionary)
obj(select, information)
acl(information, require)
case(text, by)
det(text, the)
obl(require, text)
aux:pass(translate, be)
acl(text, translate)
cc(means, and)
det(means, a)
conj(translate, means)
mark(pass, for)
acl(means, pass)
det(information, the)
obj(pass, information)
advmod(pass, directly)
case(occurrence, to)
det(occurrence, the)
obl(pass, occurrence)
case(text, in)
nmod(occurrence, text)
punct(propose, .)
nsubj(accomplish, we)
root(ROOT, accomplish)
obj(accomplish, this)
mark(compile, by)
advcl(accomplish, compile)
det(list, a)
obj(compile, list)
case(form, of)
compound(form, text)
nmod(list, form)
mark(read, as)
nsubj:pass(read, text)
aux:pass(read, be)
advcl(compile, read)
case(computer, by)
det(computer, the)
obl(read, computer)
punct(accomplish, . )
det(scheme, a)
amod(storage, random)
punct(storage, -)
compound(scheme, storage)
nsubj(provide, scheme)
punct(scheme, ,)
case(spelling, base)
case(spelling, on)
det(spelling, the)
nmod(scheme, spelling)
case(form, of)
nmod(spelling, form)
punct(provide, ,)
root(ROOT, provide)
det(way, a)
amod(way, economical)
obj(provide, way)
mark(compile, to)
acl(way, compile)
det(list, this)
compound(form, text)
punct(form, -)
compound(list, form)
obj(compile, list)
punct(provide, .)
compound(form, dictionary)
nsubj:pass(mark, form)
acl(form, find)
case(form, to)
compound(form, match)
obl(find, form)
case(list, in)
det(list, the)
compound(list, text)
nmod(form, list)
aux:pass(mark, be)
root(ROOT, mark)
punct(mark, . )
det(location, a)
nsubj:pass(name, location)
case(store, in)
det(store, the)
compound(store, computer)
nmod(location, store)
aux:pass(name, be)
advmod(name, also)
root(ROOT, name)
case(form, for)
det(form, each)
amod(form, mark)
obl(name, form)
punct(name, ;)
punct(name, ;)
compound(information, dictionary)
nsubj:pass(retrieve, information)
case(form, about)
det(form, the)
nmod(information, form)
acl(information, store)
case(location, at)
det(location, this)
obl(store, location)
aux(retrieve, can)
aux:pass(retrieve, be)
conj(name, retrieve)
advmod(retrieve, directly)
case(occurrence, by)
obl(retrieve, occurrence)
case(form, of)
det(form, the)
nmod(occurrence, form)
case(text, in)
nmod(form, text)
punct(retrieve, .)
advmod(retrieve, finally)
punct(retrieve, ,)
nsubj:pass(retrieve, information)
aux:pass(retrieve, be)
parataxis(name, retrieve)
case(dictionary, from)
det(dictionary, the)
obl(retrieve, dictionary)
mark(require, as)
advcl(retrieve, require)
case(stage, by)
obl(require, stage)
case(process, of)
det(process, the)
compound(process, translation)
nmod(stage, process)
punct(description, --)
det(description, the)
amod(description, grammatical)
parataxis(retrieve, description)
case(determination, for)
compound(structure, sentence)
punct(structure, -)
compound(determination, structure)
nmod(description, determination)
punct(information, ,)
amod(choice, equivalent)
punct(choice, -)
compound(information, choice)
conj(description, information)
case(analysis, for)
amod(analysis, semantic)
nmod(information, analysis)
punct(equivalent, ,)
cc(equivalent, and)
compound(language, target)
punct(language, -)
compound(equivalent, language)
conj(determination, equivalent)
case(construction, for)
compound(construction, output)
nmod(equivalent, construction)
punct(name, .)
det(dictionary, the)
nsubj(dictionary, dictionary)
cop(dictionary, be)
det(dictionary, a)
compound(dictionary, form)
root(ROOT, dictionary)
punct(dictionary, ,)
case(sense, at)
fixed(at, least)
case(sense, in)
det(sense, the)
obl(dictionary, sense)
mark(use, that)
amod(form, complete)
nsubj:pass(use, form)
aux:pass(use, be)
acl(sense, use)
case(basis, as)
det(basis, the)
obl(use, basis)
mark(match, for)
acl(basis, match)
compound(occurrence, text)
obj(match, occurrence)
case(entry, with)
compound(entry, dictionary)
obl(match, entry)
punct(dictionary, .)
advmod(divide, also)
punct(divide, ,)
det(dictionary, the)
nsubj:pass(divide, dictionary)
aux:pass(divide, be)
root(ROOT, divide)
case(part, into)
case(least, at)
nmod(two, least)
nummod(part, two)
obl(divide, part)
punct(part, :)
det(list, the)
appos(part, list)
case(form, of)
compound(form, dictionary)
nmod(list, form)
cc(file, and)
det(file, the)
conj(list, file)
case(information, of)
nmod(file, information)
nsubj(pertain, that)
acl:relcl(information, pertain)
case(form, to)
det(form, these)
obl(pertain, form)
punct(divide, . )
det(description, a)
advmod(detailed, more)
amod(description, detailed)
nsubj(give, description)
case(operation, of)
compound(operation, dictionary)
nmod(description, operation)
punct(operation, --)
compound(lookup, text)
appos(description, lookup)
cc(modification, and)
compound(modification, dictionary)
conj(lookup, modification)
punct(give, --)
root(ROOT, give)
det(picture, a)
amod(picture, clearer)
obj(give, picture)
punct(give, .)
compound(lookup, text)
root(ROOT, lookup)
punct(lookup, ,)
mark(describe, as)
nsubj(describe, we)
aux(describe, will)
advcl(lookup, describe)
obj(describe, it)
punct(consist, ,)
parataxis(lookup, consist)
case(step, of)
nummod(step, three)
nmod(consist, step)
punct(lookup, .)
det(first, the)
nsubj(compile, first)
aux(compile, be)
root(ROOT, compile)
det(list, a)
obj(compile, list)
case(form, of)
compound(form, text)
nmod(list, form)
punct(compile, ,)
advcl(compile, assign)
det(cell, a)
compound(cell, information)
obj(assign, cell)
case(each, to)
obl(assign, each)
punct(replace, ,)
cc(replace, and)
conj(assign, replace)
compound(occurrence, text)
obj(replace, occurrence)
case(cell, with)
det(cell, the)
compound(cell, information)
obl(replace, cell)
acl(cell, assign)
case(form, to)
det(form, the)
obl(assign, form)
case(occurrence, of)
det(occurrence, each)
nmod(form, occurrence)
punct(compile, .)
case(step, for)
det(step, this)
obl(separate, step)
det(memory, the)
compound(memory, computer)
nsubj:pass(separate, memory)
aux:pass(separate, be)
root(ROOT, separate)
case(region, into)
nummod(region, three)
obl(separate, region)
punct(separate, :)
nsubj:pass(use, cell)
case(w-region, in)
det(w-region, the)
nmod(cell, w-region)
aux:pass(use, be)
ccomp(separate, use)
case(storage, for)
obl(use, storage)
case(form, of)
det(form, the)
nmod(storage, form)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
nmod(form, list)
punct(use, ;)
punct(separate, ;)
nsubj:pass(reserve, cell)
case(x-region, in)
det(x-region, the)
nmod(cell, x-region)
cc(region, and)
compound(region, y)
conj(x-region, region)
aux:pass(reserve, be)
conj(use, reserve)
case(cell, as)
compound(cell, information)
obl(reserve, cell)
case(form, for)
compound(form, text)
nmod(cell, form)
punct(separate, .)
root(ROOT, when)
det(occurrence, a)
nsubj(when, occurrence)
nsubj:pass(isolate, Af)
aux:pass(isolate, be)
root(ROOT, isolate)
case(reading, during)
compound(reading, text)
obl(isolate, reading)
punct(reading, ,)
det(address, a)
amod(address, random)
compound(address, memory)
appos(reading, address)
nsubj:pass(compute, Af)
punct(Af, ,)
det(address, the)
nsubj:pass(compute, address)
case(cell, of)
det(cell, a)
nmod(address, cell)
case(x-region, in)
det(x-region, the)
nmod(cell, x-region)
punct(compute, ,)
aux:pass(compute, be)
root(ROOT, compute)
case(form, from)
det(form, the)
obl(compute, form)
case(Af, of)
nmod(form, Af)
punct(let, .)
parataxis(compute, let)
obj(let, Af)
xcomp(let, denote)
det(form, the)
obj(denote, form)
case(Af, of)
nmod(form, Af)
punct(denote, .)
mark(assign, if)
compound(Af, cell)
nsubj:pass(assign, Af)
aux(assign, have)
advmod(assign, not)
advmod(assign, previously)
aux:pass(assign, be)
advcl(denote, assign)
case(cell, as)
det(cell, the)
compound(cell, information)
obl(assign, cell)
case(form, of)
det(form, a)
nmod(cell, form)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
nmod(form, list)
punct(assign, ,)
nsubj:pass(assign, it)
aux:pass(assign, be)
advmod(assign, now)
acl:relcl(list, assign)
case(cell, as)
det(cell, the)
compound(cell, information)
obl(assign, cell)
case(Af, of)
nmod(cell, Af)
punct(store, .)
det(form, the)
nsubj:pass(store, form)
nmod:npmod(form, itself)
aux:pass(store, be)
conj(assign, store)
case(cell, in)
det(cell, the)
amod(cell, next)
amod(cell, available)
obl(store, cell)
case(w-region, of)
det(w-region, the)
nmod(cell, w-region)
punct(cell, ,)
acl(cell, begin)
case(Af, in)
compound(Af, cell)
obl(begin, Af)
punct(Af, .)
det(Af, the)
compound(Af, address)
appos(cell, Af)
cc(number, and)
det(number, the)
conj(Af, number)
case(cell, of)
nmod(number, cell)
acl(cell, require)
mark(store, to)
xcomp(require, store)
det(form, the)
obj(store, form)
aux:pass(write, be)
ccomp(require, write)
case(Af, in)
obl(write, Af)
punct(write, ;)
punct(cell, ;)
det(cell, the)
compound(cell, information)
parataxis(write, cell)
nsubj:pass(save, Af)
aux:pass(save, be)
root(ROOT, save)
mark(represent, to)
advcl(save, represent)
det(occurrence, the)
compound(occurrence, text)
obj(represent, occurrence)
punct(save, .)
compound(reading, text)
nsubj(continue, reading)
root(ROOT, continue)
case(occurrence, with)
det(occurrence, the)
amod(occurrence, next)
obl(continue, occurrence)
punct(continue, .)
root(ROOT, let)
obj(let, we)
xcomp(let, assume)
mark(identical, that)
nsubj(identical, Af)
cop(identical, be)
ccomp(assume, identical)
case(form, to)
det(form, the)
obl(identical, form)
case(Af, of)
det(Af, a)
compound(Af, occurrence)
nmod(form, Af)
nsubj(precede, which)
acl:relcl(Af, precede)
obj(precede, Af)
case(text, in)
det(text, the)
obl(precede, text)
punct(precede, .)
mark(exist, when)
det(situation, this)
nsubj(exist, situation)
advcl(equal, exist)
punct(equal, ,)
det(Af, the)
compound(Af, address)
nsubj(equal, Af)
aux(equal, will)
parataxis(let, equal)
obj(equal, Af)
nsubj:pass(produce, which)
aux:pass(produce, be)
acl:relcl(Af, produce)
case(Af, from)
obl(produce, Af)
punct(equal, .)
mark(assign, if)
nsubj:pass(assign, Af)
aux:pass(assign, be)
advcl(produce, assign)
case(cell, as)
det(cell, the)
compound(cell, information)
obl(assign, cell)
case(Af, for)
nmod(cell, Af)
punct(detect, ,)
det(routine, the)
nsubj(detect, routine)
aux(detect, can)
parataxis(let, detect)
mark(identical, that)
nsubj(identical, Af)
cop(identical, be)
ccomp(detect, identical)
case(Af, to)
obl(identical, Af)
mark(compare, by)
advcl(identical, compare)
obj(compare, Af)
case(form, with)
det(form, the)
obl(compare, form)
acl(form, store)
case(Af, at)
compound(Af, location)
obl(store, Af)
punct(store, .)
det(Af, the)
compound(Af, address)
nsubj:pass(store, Af)
aux:pass(store, be)
acl:relcl(form, store)
case(Af, in)
det(Af, the)
compound(Af, cell)
obl(store, Af)
punct(store, .)
advmod(store, when)
punct(store, ,)
case(case, as)
case(case, in)
det(case, this)
obl(match, case)
punct(match, ,)
det(form, the)
nummod(form, two)
nsubj(match, form)
advcl(store, match)
punct(match, ,)
det(address, the)
obj(match, address)
nsubj:pass(save, Af)
aux:pass(save, be)
root(ROOT, save)
mark(represent, to)
advcl(save, represent)
det(occurrence, the)
obj(represent, occurrence)
advmod(represent, Af)
punct(save, .)
compound(reading, text)
nsubj(continue, reading)
parataxis(save, continue)
case(occurrence, with)
det(occurrence, the)
amod(occurrence, next)
obl(continue, occurrence)
punct(save, . )
det(situation, a)
amod(situation, third)
nsubj(possible, situation)
cop(possible, be)
root(ROOT, possible)
punct(possible, .)
det(formula, the)
nsubj(give, formula)
case(address, for)
compound(address, compute)
amod(address, random)
nmod(formula, address)
case(form, from)
det(form, the)
nmod(address, form)
case(occurrence, of)
det(occurrence, each)
nmod(form, occurrence)
aux(give, will)
advmod(give, not)
root(ROOT, give)
det(address, a)
amod(address, distinct)
obj(give, address)
case(form, for)
det(form, each)
amod(form, distinct)
obl(give, form)
punct(give, .)
advmod(create, thus)
punct(create, ,)
mark(lead, when)
advmod(lead, more)
mark(lead, than)
nummod(form, one)
amod(form, distinct)
nsubj(lead, form)
advcl(create, lead)
case(cell, to)
det(cell, a)
amod(cell, particular)
obl(lead, cell)
case(x-region, in)
det(x-region, the)
nmod(cell, x-region)
punct(create, ,)
det(chain, a)
nsubj:pass(create, chain)
case(cell, of)
compound(cell, information)
nsubj:pass(create, cell)
aux(create, must)
aux:pass(create, be)
root(ROOT, create)
mark(accommodate, to)
advcl(create, accommodate)
det(form, the)
obj(accommodate, form)
punct(form, ,)
nummod(cell, one)
appos(form, cell)
case(chain, in)
det(chain, the)
nmod(cell, chain)
case(form, for)
det(form, each)
nmod(cell, form)
punct(create, .)
mark(lead, if)
nsubj(lead, Af)
advcl(extend, lead)
case(Af, to)
det(Af, a)
compound(Af, address)
obl(lead, Af)
nsubj(equal, that)
cop(equal, be)
acl:relcl(Af, equal)
case(address, to)
det(address, the)
obl(equal, address)
acl(address, compute)
case(Af, from)
obl(compute, Af)
punct(equal, ,)
advmod(match, even)
mark(match, though)
nsubj(match, Af)
aux(match, do)
advmod(match, not)
advcl(extend, match)
obj(match, Af)
punct(extend, ,)
det(chain, the)
nsubj:pass(extend, chain)
case(information, of)
compound(cell, information)
nsubj:pass(extend, cell)
aux:pass(extend, be)
root(ROOT, extend)
case(Af, from)
obl(extend, Af)
mark(store, by)
advcl(extend, store)
det(address, the)
obj(store, address)
case(cell, of)
det(cell, the)
amod(cell, next)
amod(cell, available)
nmod(address, cell)
case(y-region, in)
det(y-region, the)
nmod(cell, y-region)
punct(Af, ,)
appos(cell, Af)
punct(Af, ,)
case(Af, in)
nmod(Af, Af)
punct(become, .)
det(Af, the)
compound(Af, cell)
nsubj(become, Af)
conj(extend, become)
det(cell, the)
amod(information, second)
compound(cell, information)
xcomp(become, cell)
case(chain, in)
det(chain, the)
nmod(cell, chain)
cc(assign, and)
aux:pass(assign, be)
conj(cell, assign)
case(cell, as)
det(cell, the)
compound(cell, information)
obl(assign, cell)
case(Af, of)
nmod(cell, Af)
punct(cell, . )
det(cell, a)
amod(cell, third)
nsubj:pass(add, cell)
aux(add, can)
aux:pass(add, be)
root(ROOT, add)
mark(store, by)
advcl(add, store)
det(address, the)
obj(store, address)
case(Y-cell, of)
det(Y-cell, another)
nmod(address, Y-cell)
case(Af, in)
nmod(Y-cell, Af)
punct(add, ;)
punct(add, ;)
advmod(add, similarly)
punct(add, ,)
mark(add, as)
amod(cell, many)
nsubj:pass(add, cell)
aux:pass(add, be)
advcl(store, add)
mark(require, as)
aux:pass(require, be)
advcl(add, require)
punct(add, .)
det(cell, each)
compound(cell, information)
nsubj(contain, cell)
case(chain, in)
det(chain, the)
nmod(cell, chain)
root(ROOT, contain)
det(address, the)
obj(contain, address)
case(Y-cell, of)
det(Y-cell, the)
nmod(address, Y-cell)
advmod(store, where)
det(form, the)
nsubj:pass(store, form)
case(which, to)
obl(assign, which)
nsubj:pass(assign, it)
aux:pass(assign, be)
acl:relcl(form, assign)
aux:pass(store, be)
conj(contain, store)
punct(contain, .)
det(cell, each)
nsubj(contain, cell)
case(last, except)
det(last, the)
nmod(cell, last)
case(chain, in)
det(chain, the)
nmod(last, chain)
advmod(contain, also)
root(ROOT, contain)
det(address, the)
obj(contain, address)
case(Y-cell, of)
det(Y-cell, the)
nmod(address, Y-cell)
nsubj(element, that)
cop(element, be)
det(element, the)
amod(element, next)
acl:relcl(Y-cell, element)
case(chain, of)
det(chain, the)
nmod(element, chain)
punct(contain, ;)
punct(contain, ;)
det(absence, the)
nsubj(indicate, absence)
case(link, of)
det:predet(link, such)
det(link, a)
nmod(absence, link)
case(cell, in)
det(cell, the)
amod(cell, last)
nmod(link, cell)
parataxis(contain, indicate)
det(end, the)
obj(indicate, end)
case(chain, of)
det(chain, the)
nmod(end, chain)
punct(contain, .)
advmod(inspect, hence)
punct(inspect, ,)
mark(compute, when)
det(Af, the)
compound(Af, address)
nsubj:pass(compute, Af)
aux:pass(compute, be)
advcl(inspect, compute)
case(Af, from)
obl(compute, Af)
punct(inspect, ,)
det(Af, the)
compound(Af, cell)
nsubj:pass(inspect, Af)
cc(Y-cells, and)
det(Y-cells, all)
conj(Af, Y-cells)
case(chain, in)
nmod:poss(chain, its)
nmod(Y-cells, chain)
aux(inspect, must)
aux:pass(inspect, be)
root(ROOT, inspect)
mark(determine, to)
advcl(inspect, determine)
mark(list, whether)
nsubj(list, Af)
cop(list, be)
advmod(list, already)
case(list, in)
det(list, the)
compound(list, form)
ccomp(determine, list)
cc(add, or)
mark(add, whether)
nsubj:pass(add, it)
aux(add, should)
aux:pass(add, be)
conj(list, add)
case(list, to)
det(list, the)
compound(list, form)
obl(add, list)
cc(chain, and)
det(chain, the)
conj(list, chain)
punct(add, .)
mark(determine, when)
det(cell, the)
compound(cell, information)
nsubj:pass(determine, cell)
case(Af, for)
nmod(cell, Af)
aux(determine, have)
aux:pass(determine, be)
advcl(add, determine)
punct(save, ,)
nsubj:pass(save, it)
aux:pass(save, be)
conj(determine, save)
case(representation, as)
det(representation, a)
obl(save, representation)
case(Af, of)
nmod(representation, Af)
punct(continue, .)
compound(reading, text)
nsubj(continue, reading)
conj(save, continue)
case(occurrence, with)
det(occurrence, the)
amod(occurrence, next)
obl(continue, occurrence)
punct(inspect, .)
compound(reading, text)
nsubj:pass(terminate, reading)
aux:pass(terminate, be)
root(ROOT, terminate)
mark(store, when)
det(number, a)
amod(number, pre-determined)
nsubj:pass(store, number)
case(form, of)
nmod(number, form)
aux(store, have)
aux:pass(store, be)
advcl(terminate, store)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
obl(store, list)
punct(terminate, .)
nsubj(initiate, this)
root(ROOT, initiate)
det(step, the)
amod(step, second)
obj(initiate, step)
case(lookup, of)
compound(lookup, glossary)
nmod(step, lookup)
punct(initiate, --)
advcl(initiate, connect)
det(cell, the)
compound(cell, information)
obj(connect, cell)
case(form, of)
nmod(cell, form)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
obl(connect, list)
case(form, to)
compound(form, dictionary)
nmod(list, form)
punct(initiate, .)
det(form, each)
nsubj:pass(look, form)
acl(form, represent)
case(dictionary, by)
det(dictionary, the)
obl(represent, dictionary)
aux:pass(look, be)
root(ROOT, look)
compound:prt(look, up)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
obl(look, list)
punct(look, .)
det(time, each)
obl:tmod(match, time)
det(form, a)
compound(form, dictionary)
nsubj(match, form)
root(ROOT, match)
det(form, a)
compound(form, text)
obj(match, form)
punct(save, ,)
det(cell, the)
compound(cell, information)
nsubj:pass(save, cell)
case(form, of)
det(form, the)
compound(form, matching)
compound(form, text)
nmod(cell, form)
aux:pass(save, be)
conj(match, save)
punct(match, .)
det(number, the)
nsubj:pass(save, number)
case(form, of)
compound(form, dictionary)
nmod(number, form)
acl(form, skip)
mark(match, since)
det(one, the)
amod(one, last)
nsubj:pass(save, one)
acl(one, match)
aux:pass(save, be)
advmod(save, also)
root(ROOT, save)
punct(save, .)
det(piece, these)
nummod(piece, two)
nsubj(constitute, piece)
case(information, of)
nmod(piece, information)
case(form, for)
det(form, each)
compound(form, dictionary)
nmod(piece, form)
nsubj:pass(match, that)
aux:pass(match, be)
acl:relcl(form, match)
case(form, by)
det(form, a)
compound(form, text)
obl(match, form)
root(ROOT, constitute)
det(table, the)
obj(constitute, table)
case(usage, of)
compound(usage, dictionary)
nmod(table, usage)
punct(constitute, .)
mark(mark, if)
det(form, each)
compound(form, text)
nsubj:pass(mark, form)
aux:pass(mark, be)
advcl(identify, mark)
mark(match, when)
advcl(mark, match)
case(form, with)
det(form, a)
compound(form, dictionary)
obl(match, form)
punct(identify, ,)
det(form, the)
compound(form, text)
nsubj:pass(identify, form)
advmod(contain, not)
acl(form, contain)
case(dictionary, in)
det(dictionary, the)
obl(contain, dictionary)
aux(identify, can)
aux:pass(identify, be)
root(ROOT, identify)
mark(read, when)
det(form, all)
compound(form, dictionary)
nsubj:pass(read, form)
aux(read, have)
aux:pass(read, be)
advcl(identify, read)
punct(identify, .)
det(action, the)
amod(action, appropriate)
nsubj:pass(take, action)
mark(handle, for)
acl(action, handle)
det(form, these)
obj(handle, form)
aux(take, can)
aux:pass(take, be)
root(ROOT, take)
case(time, at)
det(time, that)
obl(take, time)
punct(take, .)
det(form, each)
compound(form, dictionary)
nsubj:pass(look, form)
aux:pass(look, be)
root(ROOT, look)
compound:prt(look, up)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
obl(look, list)
case(method, by)
det(method, the)
amod(method, same)
obl(look, method)
acl(method, use)
mark(look, to)
xcomp(use, look)
compound:prt(look, up)
det(occurrence, a)
amod(occurrence, new)
compound(occurrence, text)
obj(look, occurrence)
case(list, in)
det(list, the)
compound(list, form)
nmod(occurrence, list)
case(reading, during)
compound(reading, text)
nmod(list, reading)
punct(look, . )
det(address, a)
amod(address, random)
root(ROOT, address)
nsubj:pass(compute, Af)
nsubj(lie, that)
acl:relcl(Af, lie)
case(x-region, within)
det(x-region, the)
obl(lie, x-region)
case(memory, of)
nmod(x-region, memory)
acl:relcl(x-region, mention)
advmod(compute, earlier)
aux:pass(compute, be)
root(ROOT, compute)
case(form, from)
det(form, the)
compound(th, i)
punct(th, -)
compound(form, th)
compound(form, dictionary)
obl(compute, form)
punct(compute, .)
mark(information, if)
compound(Af, cell)
nsubj(information, Af)
cop(information, be)
det(information, a)
compound(cell, information)
advcl(contain, cell)
punct(it, ,)
nsubj(contain, it)
cc(cell, and)
det(cell, any)
compound(cell, information)
conj(it, cell)
case(y-region, in)
det(y-region, the)
nmod(cell, y-region)
nsubj:pass(link, that)
aux(link, have)
aux:pass(link, be)
acl:relcl(y-region, link)
case(Af, to)
obl(link, Af)
nsubj(contain, each)
root(ROOT, contain)
det(address, a)
obj(contain, address)
case(w-region, in)
det(w-region, the)
nmod(address, w-region)
advmod(store, where)
det(form, a)
advmod(matching, potentially)
compound(form, matching)
nsubj:pass(store, form)
aux:pass(store, be)
acl:relcl(w-region, store)
punct(contain, .)
det(form, the)
compound(form, dictionary)
nsubj:pass(compare, form)
aux:pass(compare, be)
root(ROOT, compare)
case(each, with)
obl(compare, each)
case(form, of)
det(form, these)
compound(form, text)
nmod(each, form)
punct(compare, .)
mark(find, when)
det(match, a)
nsubj:pass(find, match)
aux:pass(find, be)
advcl(make, find)
punct(make, ,)
det(entry, a)
nsubj:pass(make, entry)
aux:pass(make, be)
root(ROOT, make)
case(table, in)
det(table, the)
obl(make, table)
case(usage, of)
compound(usage, dictionary)
nmod(table, usage)
punct(make, .)
mark(cell, if)
compound(Af, cell)
nsubj(cell, Af)
cop(cell, be)
advmod(cell, not)
det(cell, a)
compound(cell, information)
advcl(conclude, cell)
nsubj(conclude, we)
root(ROOT, conclude)
mark(list, that)
det(form, the)
compound(form, i)
punct(th, -)
compound(form, th)
compound(form, dictionary)
nsubj(list, form)
cop(list, be)
advmod(list, not)
case(list, in)
det(list, the)
compound(list, text)
ccomp(conclude, list)
punct(conclude, .)
det(step, these)
nummod(step, two)
nsubj(complete, step)
advmod(complete, essentially)
root(ROOT, complete)
det(operation, the)
compound(operation, lookup)
obj(complete, operation)
punct(complete, .)
det(step, the)
amod(step, final)
nsubj(use, step)
advmod(use, merely)
root(ROOT, use)
det(table, the)
obj(use, table)
case(usage, of)
compound(usage, dictionary)
nmod(table, usage)
mark(select, to)
advcl(use, select)
det(information, the)
compound(information, dictionary)
obj(select, information)
nsubj(pertain, that)
acl:relcl(information, pertain)
case(form, to)
det(form, each)
obl(pertain, form)
acl(form, match)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
obl(match, list)
punct(use, ,)
cc(use, and)
conj(use, use)
det(list, the)
obj(use, list)
case(cell, of)
compound(cell, information)
nmod(list, cell)
acl(cell, record)
case(text, in)
obl(record, text)
fixed(in, order)
mark(attach, to)
advcl(record, attach)
det(information, the)
amod(information, appropriate)
obj(attach, information)
case(occurrence, to)
det(occurrence, each)
nmod(information, occurrence)
case(text, in)
nmod(occurrence, text)
punct(use, .)
det(list, the)
nsubj:pass(require, list)
case(form, of)
compound(form, text)
nmod(list, form)
case(w-region, in)
det(w-region, the)
nmod(list, w-region)
case(memory, of)
nmod(w-region, memory)
cc(contents, and)
det(contents, the)
conj(list, contents)
case(cell, of)
det(cell, the)
compound(cell, information)
nmod(contents, cell)
case(x, in)
det(x, the)
nmod(cell, x)
cc(Y-regions, and)
conj(x, Y-regions)
aux:pass(require, be)
advmod(longer, no)
advmod(require, longer)
root(ROOT, require)
punct(require, .)
advmod(assignment, only)
det(assignment, the)
nsubj(important, assignment)
case(cell, of)
det(cell, the)
compound(cell, information)
nmod(assignment, cell)
cop(important, be)
root(ROOT, important)
punct(important, .)
det(stage, the)
amod(stage, first)
nsubj(analysis, stage)
case(translation, of)
nmod(stage, translation)
case(lookup, after)
compound(lookup, glossary)
nmod(stage, lookup)
cop(analysis, be)
amod(analysis, structural)
root(ROOT, analysis)
case(text, of)
det(text, the)
compound(text, input)
nmod(analysis, text)
punct(analysis, .)
det(description, the)
amod(description, grammatical)
nsubj:pass(retrieve, description)
case(occurrence, of)
det(occurrence, each)
nmod(description, occurrence)
case(text, in)
det(text, the)
nmod(occurrence, text)
aux(retrieve, must)
aux:pass(retrieve, be)
root(ROOT, retrieve)
case(dictionary, from)
det(dictionary, the)
obl(retrieve, dictionary)
mark(permit, to)
acl(dictionary, permit)
det:predet(analysis, such)
det(analysis, a)
obj(permit, analysis)
punct(retrieve, . )
det(description, a)
nsubj(serve, description)
case(process, of)
det(process, this)
nmod(description, process)
aux(serve, will)
root(ROOT, serve)
mark(illustrate, to)
xcomp(serve, illustrate)
advmod(retrieve, how)
det(type, any)
nsubj:pass(retrieve, type)
case(information, of)
nmod(type, information)
aux(retrieve, can)
aux:pass(retrieve, be)
ccomp(illustrate, retrieve)
case(dictionary, from)
det(dictionary, the)
obl(retrieve, dictionary)
cc(attach, and)
conj(dictionary, attach)
case(occurrence, to)
det(occurrence, each)
compound(occurrence, text)
obl(attach, occurrence)
punct(serve, .)
det(description, the)
amod(description, grammatical)
nsubj:pass(record, description)
case(form, of)
det(form, all)
nmod(description, form)
case(dictionary, in)
det(dictionary, the)
nmod(form, dictionary)
aux:pass(record, be)
root(ROOT, record)
case(part, in)
det(part, a)
amod(part, separate)
obl(record, part)
case(file, of)
det(file, the)
compound(file, dictionary)
nmod(part, file)
punct(record, .)
det(order, the)
nsubj(identical, order)
cop(identical, be)
root(ROOT, identical)
case(ordering, to)
det(ordering, the)
obl(identical, ordering)
case(form, of)
det(form, the)
nmod(ordering, form)
nsubj(describe, they)
acl:relcl(form, describe)
punct(identical, .)
mark(retrieve, when)
nsubj:pass(retrieve, entry)
aux(retrieve, be)
aux:pass(retrieve, be)
advcl(identical, retrieve)
case(file, from)
det(file, this)
obl(retrieve, file)
punct(indicate, ,)
det(table, the)
nsubj(indicate, table)
case(usage, of)
compound(usage, dictionary)
nmod(table, usage)
parataxis(identical, indicate)
nsubj(entry, which)
ccomp(indicate, entry)
mark(skip, to)
xcomp(entry, skip)
cc(entry, and)
nsubj(entry, which)
conj(skip, entry)
case(store, to)
obl(entry, store)
case(computer, in)
det(computer, the)
obl(entry, computer)
punct(identical, .)
det(process, this)
compound(rejection, selection)
punct(rejection, -)
compound(process, rejection)
nsubj(take, process)
root(ROOT, take)
obj(take, place)
mark(read, as)
det(file, the)
nsubj:pass(read, file)
aux:pass(read, be)
advcl(take, read)
punct(take, .)
det(entry, each)
nsubj:pass(write, entry)
nsubj:pass(select, that)
aux:pass(select, be)
acl:relcl(entry, select)
case(storage, for)
obl(select, storage)
aux:pass(write, be)
root(ROOT, write)
case(cell, into)
det(cell, the)
amod(cell, next)
amod(cell, available)
obl(write, cell)
case(Aj, of)
det(Aj, the)
nmod(cell, Aj)
punct(cell, .)
det(address, the)
nsubj:pass(write, address)
case(cell, of)
det(cell, the)
amod(cell, first)
nmod(address, cell)
cc(number, and)
det(number, the)
conj(address, number)
case(cell, of)
nmod(number, cell)
acl(cell, use)
aux:pass(write, be)
acl:relcl(number, write)
case(cell, in)
det(cell, the)
obl(write, information)
obl(write, cell)
case(form, for)
det(form, the)
obl(write, form)
punct(write, . )
root(ROOT, ()
det(address, the)
nsubj:pass(supply, address)
case(cell, of)
det(cell, the)
compound(cell, information)
nmod(address, cell)
aux:pass(supply, be)
advmod(supply, also)
root(ROOT, supply)
case(table, by)
det(table, the)
obl(supply, table)
case(usage, of)
compound(usage, dictionary)
nmod(table, usage)
punct(supply, .)
punct(supply, ))
mark(read, when)
det(file, the)
amod(file, complete)
nsubj:pass(read, file)
aux(read, have)
aux:pass(read, be)
advcl(store, read)
punct(store, ,)
det(description, the)
amod(description, grammatical)
nsubj:pass(store, description)
case(form, for)
det(form, all)
compound(form, text)
nmod(description, form)
acl(form, find)
case(dictionary, in)
det(dictionary, the)
obl(find, dictionary)
aux(store, have)
aux:pass(store, be)
root(ROOT, store)
case(w-region, in)
det(w-region, the)
obl(store, w-region)
punct(store, ;)
punct(store, ;)
det(information, the)
nsubj(contain, information)
nsubj(contain, cell)
acl(cell, assign)
case(form, to)
det(form, each)
compound(form, text)
obl(assign, form)
conj(store, contain)
det(address, the)
obj(contain, address)
case(description, of)
det(description, the)
amod(description, grammatical)
nmod(address, description)
case(form, of)
det(form, the)
nmod(description, form)
nsubj(represent, it)
acl:relcl(form, represent)
punct(store, .)
advmod(retrieve, hence)
punct(retrieve, ,)
det(description, the)
nsubj:pass(retrieve, description)
case(occurrence, of)
det(occurrence, each)
compound(occurrence, text)
nmod(description, occurrence)
aux(retrieve, can)
aux:pass(retrieve, be)
root(ROOT, retrieve)
mark(read, by)
advcl(retrieve, read)
det(list, the)
obj(read, list)
case(address, of)
obl:npmod(order, text)
punct(order, -)
amod(address, order)
compound(cell, information)
punct(cell, -)
compound(address, cell)
nmod(list, address)
cc(output, and)
conj(read, output)
det(description, the)
obj(output, description)
acl(description, indicate)
case(cell, by)
det(information, the)
obl(indicate, information)
obl(indicate, cell)
case(occurrence, for)
det(occurrence, each)
obl(indicate, occurrence)
punct(retrieve, .)
det(requirement, the)
amod(requirement, only)
nsubj(be, requirement)
case(information, on)
compound(information, dictionary)
nmod(requirement, information)
acl(information, make)
case(operation, by)
det(operation, the)
compound(lookup, text)
punct(lookup, -)
compound(operation, lookup)
obl(make, operation)
root(ROOT, be)
mark(available, that)
det(form, each)
nsubj(available, form)
acl(form, represent)
case(dictionary, by)
det(dictionary, the)
obl(represent, dictionary)
cop(available, be)
ccomp(be, available)
case(lookup, for)
obl(available, lookup)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
obl(available, list)
cc(available, and)
mark(available, that)
nsubj(available, information)
case(form, for)
det(form, each)
nmod(information, form)
cop(available, be)
conj(available, available)
case(sequence, in)
det(sequence, a)
obl(available, sequence)
amod(sequence, identical)
case(sequence, with)
det(sequence, the)
obl(identical, sequence)
case(form, of)
det(form, the)
nmod(sequence, form)
punct(be, .)
nsubj(leave, this)
root(ROOT, leave)
det(ordering, the)
obj(leave, ordering)
case(entry, of)
nmod(ordering, entry)
amod(entry, variable)
punct(leave, . )
punct(here, ()
root(ROOT, here)
det(entry, a)
nsubj(form, entry)
cop(form, be)
det(form, a)
nsubj(here, form)
cc(information, plus)
det(information, the)
conj(form, information)
nsubj(pertain, that)
acl:relcl(information, pertain)
case(it, to)
obl(pertain, it)
punct(here, .)
punct(here, ))
nummod(way, two)
advmod(useful, very)
amod(way, useful)
nsubj(addition, way)
mark(modify, for)
acl(way, modify)
det(dictionary, a)
compound(dictionary, form)
punct(dictionary, -)
obj(modify, dictionary)
cop(addition, be)
det(addition, the)
root(ROOT, addition)
case(dictionary, to)
det(dictionary, the)
nmod(addition, dictionary)
case(paradigm, of)
amod(paradigm, complete)
nmod(dictionary, paradigm)
cc(form, rather)
fixed(rather, than)
amod(form, single)
conj(dictionary, form)
cc(application, and)
det(application, the)
conj(form, application)
case(change, of)
det(change, a)
amod(change, single)
nmod(application, change)
case(form, to)
advmod(one, more)
fixed(more, than)
nummod(form, one)
compound(form, dictionary)
nmod(change, form)
punct(addition, .)
det(former, the)
nsubj:pass(intend, former)
aux:pass(intend, be)
root(ROOT, intend)
mark(decrease, to)
xcomp(intend, decrease)
det(amount, the)
obj(decrease, amount)
case(work, of)
nmod(amount, work)
amod(work, necessary)
mark(extend, to)
advcl(necessary, extend)
compound(coverage, dictionary)
obj(extend, coverage)
punct(intend, .)
det(latter, the)
nsubj(useful, latter)
cop(useful, be)
root(ROOT, useful)
mark(modify, for)
advcl(useful, modify)
obj(modify, information)
case(some, about)
det(form, some)
cc(all, or)
conj(some, all)
nmod(information, form)
case(word, of)
det(word, a)
nmod(form, word)
punct(modify, ,)
mark(reduce, hence)
advcl(modify, reduce)
det(work, the)
obj(reduce, work)
acl(work, require)
mark(improve, to)
xcomp(require, improve)
compound(contents, dictionary)
obj(improve, contents)
punct(apply, .)
conj(reduce, apply)
det(technique, the)
obj(apply, technique)
acl(technique, develop)
case(Harvard, at)
obl(develop, Harvard)
mark(generate, for)
advcl(develop, generate)
det(paradigm, a)
obj(generate, paradigm)
case(form, from)
det(form, a)
amod(form, representative)
nmod(paradigm, form)
cc(classification, and)
nmod:poss(classification, its)
conj(form, classification)
punct(add, ,)
nsubj(add, we)
aux(add, can)
parataxis(useful, add)
det(form, all)
obj(add, form)
case(word, of)
det(word, a)
nmod(form, word)
case(dictionary, to)
det(dictionary, the)
nmod(word, dictionary)
case(once, at)
nmod(dictionary, once)
punct(useful, .)
det(extension, a)
nsubj(permit, extension)
case(principle, of)
det(principle, the)
nmod(extension, principle)
aux(permit, would)
root(ROOT, permit)
xcomp(permit, enter)
det(description, a)
amod(description, grammatical)
obj(enter, description)
case(form, of)
det(form, each)
nmod(description, form)
punct(permit, .)
nsubj:pass(assign, equivalent)
aux(assign, could)
aux:pass(assign, be)
root(ROOT, assign)
case(paradigm, to)
det(paradigm, the)
obl(assign, paradigm)
advmod(time, either)
case(time, at)
det(time, the)
obl(add, time)
nsubj:pass(add, it)
aux:pass(add, be)
conj(assign, add)
case(dictionary, to)
det(dictionary, the)
obl(add, dictionary)
cc(study, or)
mark(study, after)
det(word, the)
nsubj:pass(study, word)
aux(study, have)
aux:pass(study, be)
conj(add, study)
case(context, in)
obl(study, context)
punct(assign, .)
advmod(think, thus)
punct(think, ,)
nsubj(think, one)
aux(think, can)
root(ROOT, think)
case(entry, of)
det(entry, a)
compound(entry, dictionary)
obl(think, entry)
case(word, as)
det(word, a)
nmod(entry, word)
cc(form, rather)
fixed(rather, than)
det(form, a)
conj(word, form)
punct(think, .)
mark(group, if)
det(form, all)
nsubj:pass(group, form)
case(paradigm, of)
det(paradigm, a)
nmod(form, paradigm)
aux:pass(group, be)
advcl(possible, group)
advmod(group, together)
case(dictionary, within)
det(dictionary, the)
obl(group, dictionary)
punct(possible, ,)
det(reduction, a)
amod(reduction, considerable)
nsubj(possible, reduction)
case(amount, in)
det(amount, the)
nmod(reduction, amount)
case(information, of)
nmod(amount, information)
acl(amount, require)
cop(possible, be)
root(ROOT, possible)
punct(possible, .)
case(example, for)
obl(represent, example)
punct(represent, ,)
det(form, the)
amod(form, inflect)
nsubj:pass(represent, form)
case(word, of)
det(word, a)
nmod(form, word)
aux(represent, can)
aux:pass(represent, be)
root(ROOT, represent)
punct(represent, ,)
advmod(allow, insofar)
mark(allow, as)
amod(inflection, regular)
nsubj(allow, inflection)
advcl(represent, allow)
punct(allow, ,)
case(stem, by)
det(stem, a)
obl(allow, stem)
cc(set, and)
det(set, a)
conj(stem, set)
case(ending, of)
nmod(set, ending)
mark(attach, to)
aux:pass(attach, be)
acl(set, attach)
punct(represent, . )
punct(replace, ()
advmod(replace, indeed)
punct(replace, ,)
det(set, the)
nsubj:pass(replace, set)
case(ending, of)
nmod(set, ending)
aux(replace, can)
aux:pass(replace, be)
root(ROOT, replace)
case(name, by)
det(name, the)
obl(replace, name)
case(set, of)
det(set, a)
nmod(name, set)
case(ending, of)
nmod(set, ending)
punct(replace, .)
punct(replace, ))
det(form, the)
amod(form, full)
nsubj:pass(derive, form)
aux(derive, can)
aux:pass(derive, be)
root(ROOT, derive)
case(information, from)
amod(information, such)
obl(derive, information)
advmod(lookup, just)
case(lookup, prior)
fixed(prior, to)
det(lookup, the)
obl(derive, lookup)
case(form, of)
det(form, the)
nmod(lookup, form)
case(list, in)
det(list, the)
compound(form, text)
punct(form, -)
compound(list, form)
nmod(form, list)
punct(derive, .)
advmod(enter, similarly)
punct(enter, ,)
mark(vary, if)
det(equivalent, the)
nsubj(vary, equivalent)
case(form, for)
det(form, the)
nmod(equivalent, form)
case(word, of)
det(word, a)
nmod(form, word)
aux(vary, do)
advmod(vary, not)
advcl(enter, vary)
punct(enter, ,)
det(equivalent, the)
nsubj:pass(enter, equivalent)
aux(enter, need)
aux:pass(enter, be)
root(ROOT, enter)
advmod(once, only)
advmod(enter, once)
case(indication, with)
det(indication, a)
obl(enter, indication)
obj(apply, that)
nsubj(apply, they)
acl:relcl(indication, apply)
case(form, to)
det(form, each)
obl(apply, form)
punct(enter, .)
det(system, the)
compound(system, dictionary)
nsubj(way, system)
cop(way, be)
case(way, in)
det(way, no)
root(ROOT, way)
amod(way, dependent)
case(summarization, upon)
amod(summarization, such)
obl(dependent, summarization)
cc(design, or)
conj(dependent, design)
case(it, around)
obl(design, it)
punct(way, .)
mark(prevent, when)
nsubj(prevent, irregularity)
cc(variation, and)
conj(irregularity, variation)
advcl(write, prevent)
obj(prevent, summarize)
punct(write, ,)
nsubj:pass(write, information)
aux:pass(write, be)
parataxis(way, write)
case(detail, in)
amod(detail, complete)
obl(write, detail)
punct(way, .)
nsubj:pass(summarize, entry)
aux:pass(summarize, be)
root(ROOT, summarize)
advmod(summarize, only)
mark(do, when)
mark(do, by)
advcl(reduce, do)
advmod(reduce, so)
det(amount, the)
nsubj:pass(reduce, amount)
case(information, of)
nmod(amount, information)
acl(amount, retain)
case(dictionary, in)
det(dictionary, the)
obl(retain, dictionary)
aux:pass(reduce, be)
ccomp(summarize, reduce)
cc(decrease, and)
det(time, the)
nsubj:pass(decrease, time)
acl(time, require)
case(operation, for)
compound(operation, dictionary)
obl(require, operation)
aux:pass(decrease, be)
conj(reduce, decrease)
punct(summarize, .)
case(sentence, in)
obl(determine, sentence)
punct(determine, ,)
nsubj:pass(determine, pattern)
case(stress, of)
nmod(pattern, stress)
aux:pass(determine, be)
root(ROOT, determine)
case(combination, by)
amod(combination, complex)
obl(determine, combination)
case(influence, of)
nmod(combination, influence)
nsubj:pass(suggest, that)
aux(suggest, can)
advmod(suggest, only)
aux:pass(suggest, be)
acl:relcl(influence, suggest)
advmod(suggest, here)
punct(determine, .)
det(tendency, the)
nsubj(be, tendency)
root(ROOT, be)
mark(put, toward)
advcl(be, put)
amod(stress, dominant)
obj(put, stress)
case(end, at)
det(end, the)
obl(put, end)
punct(be, .)
expl(be, there)
root(ROOT, be)
det(parallel, a)
nsubj(be, parallel)
case(tendency, to)
det(tendency, this)
nmod(parallel, tendency)
case(assignment, in)
det(assignment, the)
nmod(parallel, assignment)
case(time, of)
nmod(assignment, time)
case(tune, in)
advmod(know, long)
punct(know, -)
amod(tune, know)
compound(tune, hymn)
nmod(assignment, tune)
punct(be, .)
advmod(be, thus)
det(line, the)
amod(line, first)
nsubj(be, line)
case(one, of)
nmod(line, one)
case(hymn, of)
nmod:poss(hymn, Charles)
flat(Charles, Wesley)
case(Charles, 's)
nmod(one, hymn)
root(ROOT, be)
mark(follow, as)
advcl(be, follow)
punct(be, .)
punct(be, ``)
det(charge, a)
nsubj(have, charge)
mark(keep, to)
acl(charge, keep)
obj(keep, I)
root(ROOT, have)
punct(have, ,)
det(God, a)
nsubj(glorify, God)
mark(glorify, to)
xcomp(have, glorify)
punct(glorify, '')
punct(have, .)
case(tune, in)
det(tune, the)
obl(have, tune)
case(which, to)
obl(sung, which)
det(hymn, this)
nsubj:pass(sung, hymn)
aux:pass(sung, be)
advmod(often, most)
advmod(sung, often)
acl:relcl(tune, sung)
punct(have, ,)
punct(have, ``)
root(ROOT, Boylston)
punct(Boylston, '')
punct(have, ,)
det(syllable, the)
nsubj(have, syllable)
parataxis(Boylston, have)
cc(fy, and)
conj(have, fy)
punct(have, ,)
advcl(have, end)
nmod:poss(line, they)
obj(end, line)
punct(have, ,)
conj(have, have)
advmod(have, twice)
det(time, the)
obj(have, time)
det(syllable, any)
amod(syllable, other)
nsubj(have, syllable)
acl:relcl(time, have)
punct(have, .)
amod(stress, Dominant)
nsubj(more, stress)
cop(more, be)
advmod(more, of)
fixed(of, course)
conj(have, more)
case(duration, than)
amod(duration, extend)
obl(more, duration)
punct(center, ,)
cc(center, and)
advmod(center, normally)
conj(duration, center)
case(syllable, on)
nmod(center, syllable)
nsubj(have, that)
aux(have, would)
acl:relcl(center, have)
amod(stress, primary)
obj(have, stress)
cc(stress, or)
compound(stress, phrase)
conj(stress, stress)
mark(speak, if)
det(word, the)
nsubj:pass(speak, word)
cc(unit, or)
amod(unit, longer)
conj(word, unit)
nsubj(part, they)
cop(part, be)
acl:relcl(word, part)
nmod(part, of)
aux:pass(speak, be)
advcl(have, speak)
advmod(speak, alone)
punct(center, :)
det(stress, a)
amod(stress, dominant)
nsubj(center, stress)
acl(stress, give)
mark(glorify, to)
xcomp(give, glorify)
aux(center, would)
advmod(center, normally)
conj(speak, center)
case(syllable, on)
nmod:poss(syllable, its)
amod(syllable, first)
obl(center, syllable)
cc(last, rather)
fixed(rather, than)
nmod:poss(last, its)
conj(syllable, last)
punct(center, .)
cc(significant, but)
det(parallel, the)
nsubj(significant, parallel)
cop(significant, be)
root(ROOT, significant)
punct(significant, .)
root(ROOT, when)
det(answer, the)
nsubj(when, answer)
case(what, to)
nmod(answer, what)
cop(wrong, be)
acl:relcl(what, wrong)
advmod(wrong, now)
punct(when, ?)
punct(when, ?)
cop(chair, be)
nmod:poss(chair, Bill)
case(Bill, 's)
amod(chair, break)
det(chair, a)
root(ROOT, chair)
punct(chair, ,)
amod(stress, dominant)
nsubj(complement, stress)
aux(complement, will)
advmod(complement, usually)
cop(complement, be)
case(complement, on)
det(complement, the)
parataxis(chair, complement)
det(chair, a)
nmod:npmod(complement, chair)
punct(chair, .)
case(point, from)
det(point, the)
obl(predicator, point)
case(view, of)
nmod(point, view)
case(analysis, of)
amod(analysis, syntactic)
nmod(view, analysis)
det(word, the)
compound(word, head)
nsubj(predicator, word)
case(statement, in)
det(statement, the)
nmod(word, statement)
cop(predicator, be)
det(predicator, the)
root(ROOT, predicator)
aux(break, have)
acl(predicator, break)
punct(assign, ,)
cc(point, and)
case(point, from)
det(point, the)
obl(break, point)
case(view, of)
nmod(point, view)
mark(mean, of)
acl(point, mean)
nsubj(seem, it)
aux(seem, would)
ccomp(mean, seem)
mark(assign, that)
det(center, the)
compound(center, trouble)
nsubj(seem, center)
case(breaking, in)
det(breaking, the)
nmod(center, breaking)
punct(seem, ;)
punct(seem, ;)
cc(assign, but)
amod(stress, dominant)
nsubj:pass(assign, stress)
aux(assign, will)
aux:pass(assign, be)
conj(seem, assign)
case(break, to)
obl(assign, break)
advmod(version, only)
case(version, in)
advmod(exceptional, rather)
amod(version, exceptional)
obl(assign, version)
case(sentence, of)
det(sentence, the)
nmod(version, sentence)
punct(predicator, .)
mark(know, in)
nsubj(know, I)
advcl(complement, know)
nummod(thing, one)
obj(know, thing)
amod(stress, dominant)
nsubj(complement, stress)
aux(complement, will)
advmod(complement, usually)
cop(complement, be)
case(complement, on)
det(complement, the)
root(ROOT, complement)
nummod(thing, one)
obl:tmod(complement, thing)
punct(complement, ;)
punct(complement, ;)
case(thing, in)
nummod(thing, one)
obl(know, thing)
nsubj(know, I)
parataxis(complement, know)
nsubj(predicator, it)
aux(predicator, will)
advmod(predicator, usually)
cop(predicator, be)
case(predicator, on)
det(predicator, the)
ccomp(know, predicator)
obl:tmod(predicator, know)
punct(complement, .)
case(people, in)
amod(town, small)
punct(town, -)
compound(people, town)
nsubj(friendly, people)
cop(friendly, be)
advmod(friendly, very)
root(ROOT, friendly)
amod(stress, dominant)
nsubj(complement, stress)
aux(complement, will)
advmod(complement, generally)
cop(complement, be)
case(complement, on)
det(complement, the)
parataxis(friendly, complement)
advmod(friendly, very)
amod(complement, friendly)
punct(friendly, ;)
punct(friendly, ;)
case(sentence, in)
det(sentence, the)
amod(sentence, double)
obl(town, sentence)
mark(smaller, the)
advmod(town, smaller)
det(town, the)
parataxis(friendly, town)
punct(town, ,)
mark(friendlier, the)
parataxis(town, friendlier)
det(people, the)
nsubj(friendlier, people)
nsubj(subject, it)
aux(subject, will)
advmod(subject, generally)
cop(subject, be)
case(subject, on)
det(subject, the)
advcl(friendlier, subject)
det(town, the)
appos(subject, town)
cc(people, and)
det(people, the)
conj(town, people)
punct(friendly, .)
case(what, in)
root(ROOT, what)
cop(what, be)
det(linguist, a)
nsubj(what, linguist)
punct(what, ?)
punct(what, ?)
amod(stress, dominant)
nsubj(subject, stress)
aux(subject, will)
advmod(subject, generally)
cop(subject, be)
case(subject, on)
det(subject, the)
root(ROOT, subject)
det(linguist, a)
appos(subject, linguist)
punct(linguist, ;)
punct(linguist, ;)
mark(linguist, in)
nsubj(linguist, who)
cop(linguist, be)
det(linguist, a)
parataxis(linguist, linguist)
punct(linguist, ?)
nsubj(complement, it)
aux(complement, will)
advmod(complement, generally)
cop(complement, be)
case(complement, on)
det(complement, the)
root(ROOT, complement)
det(linguist, a)
appos(complement, linguist)
punct(linguist, .)
amod(stress, Dominant)
nsubj(luggage, stress)
cop(luggage, be)
case(luggage, on)
nmod:poss(luggage, she)
parataxis(linguist, luggage)
nsubj(luggage, both)
case(that, in)
obl(luggage, that)
cop(luggage, be)
nmod:poss(luggage, she)
conj(luggage, luggage)
punct(luggage, ,)
advmod(complement, where)
nmod:poss(luggage, she)
nsubj(complement, luggage)
cop(complement, be)
det(complement, the)
acl:relcl(luggage, complement)
punct(be, ,)
cc(be, and)
advmod(be, in)
expl(be, there)
conj(complement, be)
nmod:poss(luggage, she)
nsubj(be, luggage)
punct(luggage, ,)
advmod(subject, where)
nsubj(subject, it)
cop(subject, be)
det(subject, the)
acl:relcl(luggage, subject)
punct(subject, .)
compound(second, adverbial)
nsubj(complement, second)
parataxis(subject, complement)
punct(complement, ,)
advmod(likely, however)
punct(likely, ,)
cop(likely, be)
parataxis(complement, likely)
advmod(have, not)
mark(have, to)
xcomp(likely, have)
amod(stress, dominant)
obj(have, stress)
mark(terminate, when)
nsubj(terminate, they)
advcl(have, terminate)
obj(terminate, sentence)
punct(linguist, .)
case(what, if)
det(answer, the)
nsubj(what, answer)
case(what, to)
root(ROOT, what)
cop(what, be)
det(noise, that)
nsubj(what, noise)
punct(what, ?)
punct(what, ?)
root(ROOT, be)
nsubj(put, George)
root(ROOT, put)
det(cat, the)
obj(put, cat)
advmod(put, out)
punct(put, ,)
amod(stress, dominant)
nsubj(complement, stress)
aux(complement, will)
advmod(complement, ordinarily)
cop(complement, be)
case(complement, on)
det(complement, the)
amod(complement, first)
parataxis(put, complement)
punct(cat, ,)
det(cat, the)
conj(complement, cat)
punct(complement, ,)
cc(complement, not)
det(complement, the)
amod(complement, second)
conj(complement, complement)
advmod(complement, out)
punct(put, .)
amod(adjunct, final)
nsubj(have, adjunct)
aux(have, may)
cc(have, or)
aux(have, may)
advmod(have, not)
root(ROOT, have)
amod(stress, dominant)
obj(have, stress)
punct(have, .)
case(what, if)
det(answer, the)
nsubj(what, answer)
case(what, to)
root(ROOT, what)
cop(what, be)
det(noise, that)
nsubj(what, noise)
punct(what, ?)
punct(what, ?)
aux(read, be)
nsubj(read, George)
root(ROOT, read)
det(news, the)
obj(read, news)
advmod(read, emotionally)
punct(read, ,)
amod(stress, dominant)
nsubj(adjunct, stress)
aux(adjunct, may)
cc(adjunct, or)
aux(adjunct, may)
advmod(adjunct, not)
cop(adjunct, be)
case(adjunct, on)
det(adjunct, the)
conj(read, adjunct)
advmod(adjunct, emotionally)
punct(read, . )
mark(divide, when)
amod(complement, prepositional)
nsubj:pass(divide, complement)
aux:pass(divide, be)
root(ROOT, divide)
case(what, as)
fixed(as, in)
obl(divide, what)
aux(look, be)
nsubj(look, you)
acl:relcl(what, look)
obl(look, for)
punct(look, ?)
punct(look, ?)
nsubj(likely, they)
cop(likely, be)
root(ROOT, likely)
mark(lose, to)
xcomp(likely, lose)
amod(stress, dominant)
obj(lose, stress)
punct(likely, .)
nsubj(importance, context)
cop(importance, be)
case(importance, of)
amod(importance, extreme)
root(ROOT, importance)
punct(importance, .)
nsubj(likely, what)
cop(new, be)
csubj(likely, new)
case(context, in)
det(context, the)
obl(new, context)
cop(likely, be)
root(ROOT, likely)
mark(make, to)
aux:pass(make, be)
xcomp(likely, make)
advmod(prominent, more)
xcomp(make, prominent)
mark(be, than)
obl(prominent, what)
advcl(prominent, be)
advmod(be, not)
punct(likely, .)
advmod(context, thus)
case(context, in)
det(context, a)
obl(here, context)
case(which, in)
obl(be, which)
expl(be, there)
aux(be, have)
acl:relcl(context, be)
nsubj(be, discussion)
case(snow, of)
nmod(discussion, snow)
cc(new, but)
nsubj(new, mention)
case(condition, of)
amod(condition, local)
nmod(mention, condition)
cop(new, be)
conj(be, new)
punct(here, ,)
amod(stress, dominant)
nsubj(here, stress)
aux(here, will)
advmod(here, probably)
cop(here, be)
case(here, on)
root(ROOT, here)
mark(snow, in)
nsubj(snow, it)
advmod(snow, rarely)
advcl(here, snow)
advmod(snow, here)
punct(context, ,)
cc(context, but)
case(context, in)
det(context, a)
conj(snow, context)
case(which, in)
obl(be, which)
expl(be, there)
aux(be, have)
acl:relcl(context, be)
nsubj(be, discussion)
case(weather, of)
amod(weather, local)
nmod(discussion, weather)
cc(mention, but)
det(mention, no)
nsubj(snow, mention)
case(snow, of)
nmod(mention, snow)
punct(stress, ,)
amod(stress, dominant)
conj(snow, stress)
aux(snow, will)
advmod(snow, probably)
cop(snow, be)
case(snow, on)
conj(be, snow)
punct(here, .)
det(pronoun, the)
amod(pronoun, personal)
nsubj(unstress, pronoun)
cc(one, and)
compound(one, substitute)
conj(pronoun, one)
cop(unstress, be)
advmod(unstress, normally)
root(ROOT, unstress)
mark(refer, because)
nsubj(refer, they)
advcl(unstress, refer)
case(what, to)
obl(refer, what)
cop(prominent, be)
acl:relcl(what, prominent)
case(context, in)
det(context, the)
amod(context, immediate)
obl(prominent, context)
punct(unstress, .)
mark(go, in)
nsubj(go, I)
aux(go, will)
root(ROOT, go)
case(George, with)
obl(go, George)
amod(George, dominant)
nsubj(George, stress)
cop(George, be)
advmod(George, probably)
case(George, on)
parataxis(go, George)
punct(go, ;)
punct(go, ;)
cc(mention, but)
mark(mention, if)
nsubj:pass(mention, George)
aux(mention, have)
advmod(mention, just)
aux:pass(mention, be)
advcl(George, mention)
advmod(mention, prominently)
punct(mention, ()
cc(trip, and)
det(trip, the)
nsubj:pass(mention, trip)
mark(make, to)
aux:pass(make, be)
acl(trip, make)
aux(discussion, have)
cop(discussion, be)
case(discussion, under)
advcl(make, discussion)
punct(discussion, ))
punct(say, ,)
nsubj:pass(say, what)
aux:pass(say, be)
conj(discussion, say)
ccomp(say, be)
advmod(go, probably)
nsubj(go, I)
aux(go, will)
ccomp(be, go)
case(he, with)
obl(go, he)
punct(preposition, ,)
cc(preposition, and)
amod(stress, dominant)
nsubj(preposition, stress)
cop(preposition, be)
advmod(preposition, probably)
case(preposition, on)
det(preposition, the)
conj(go, preposition)
nmod(preposition, with)
punct(go, .)
mark(accompany, when)
det(gesture, a)
nsubj(accompany, gesture)
advcl(have, accompany)
nsubj(he, who)
cop(he, be)
ccomp(accompany, he)
punct(have, ?)
punct(have, ?)
det(pronoun, the)
amod(pronoun, personal)
nsubj(have, pronoun)
root(ROOT, have)
amod(stress, dominant)
obj(have, stress)
mark(mention, because)
punct(mention, ``)
nsubj:pass(mention, he)
punct(he, '')
aux(mention, have)
advmod(mention, not)
aux:pass(mention, be)
advcl(have, mention)
advmod(mention, previously)
punct(have, .)
mark(prominent, if)
cc:preconj(George, both)
nsubj(prominent, George)
cc(piece, and)
det(piece, a)
conj(George, piece)
case(information, of)
nmod(piece, information)
nsubj(prominent, George)
aux(prominent, do)
advmod(prominent, not)
aux(prominent, have)
cop(prominent, be)
advcl(tell, prominent)
case(context, in)
det(context, the)
obl(prominent, context)
punct(idea, ,)
cc(idea, but)
det(idea, the)
nsubj(tell, idea)
mark(tell, of)
acl(idea, tell)
obj(tell, George)
cop(new, be)
ccomp(tell, new)
punct(tell, ,)
advmod(tell, then)
amod(stress, dominant)
nsubj(tell, stress)
aux(tell, will)
advmod(tell, probably)
cop(tell, be)
advmod(tell, on)
root(ROOT, tell)
mark(tell, in)
advmod(tell, why)
advmod(tell, not)
advcl(tell, tell)
obj(tell, George)
punct(tell, ?)
punct(tell, ?)
cc(obvious, but)
mark(new, when)
nsubj(new, what)
cop(new, be)
advcl(obvious, new)
case(context, in)
det(context, a)
amod(context, particular)
obl(new, context)
cop(obvious, be)
advmod(obvious, also)
advmod(obvious, fairly)
root(ROOT, obvious)
punct(obvious, ,)
expl(be, there)
parataxis(obvious, be)
advmod(be, normally)
advmod(stress, only)
amod(stress, light)
nsubj(be, stress)
cc(stress, or)
det(stress, no)
conj(stress, stress)
case(all, at)
nmod(stress, all)
punct(be, .)
advmod(snow, thus)
det(it, the)
amod(it, unstress)
nsubj(snow, it)
case(it, of)
nsubj(snow, it)
advmod(snow, rarely)
root(ROOT, snow)
advmod(snow, here)
ccomp(snow, get)
expl(significance, it)
cop(significance, be)
ccomp(get, significance)
case(use, from)
nmod:poss(use, it)
case(it, 's)
nmod(significance, use)
case(snow, with)
nmod(use, snow)
punct(snow, :)
nsubj(snow, nothing)
aux(snow, can)
parataxis(snow, snow)
obj(snow, snow)
cc(it, but)
punct(it, ``)
conj(snow, it)
punct(it, '')
punct(be, .)
mark(be, in)
expl(be, there)
advcl(snow, be)
advmod(be, not)
amod(people, many)
amod(people, young)
nsubj(be, people)
case(neighborhood, in)
det(neighborhood, the)
nmod(people, neighborhood)
det(young, the)
compound(young, modifier)
nsubj(take, young)
acl:relcl(people, take)
amod(stress, dominant)
obj(take, stress)
advmod(take, away)
case(people, from)
nmod:poss(people, its)
compound(people, head)
obl(away, people)
punct(fact, :)
det(fact, the)
obj(take, fact)
mark(seem, that)
det(creature, the)
amod(creature, young)
nsubj(seem, creature)
case(interest, of)
nmod(creature, interest)
aux(seem, be)
nsubj(seem, people)
acl(fact, seem)
advmod(obvious, rather)
xcomp(seem, obvious)
punct(fact, .)
mark(replace, if)
nsubj(replace, woman)
advcl(have, replace)
obj(replace, people)
punct(have, ,)
nsubj(have, it)
aux(have, would)
advmod(have, normally)
root(ROOT, have)
amod(stress, dominant)
obj(have, stress)
punct(have, .)
mark(have, in)
nsubj(have, I)
advcl(make, have)
obj(have, thing)
mark(do, to)
acl(thing, do)
det(word, the)
obj(do, word)
nsubj(make, thing)
root(ROOT, make)
amod(contribution, little)
amod(contribution, real)
obj(make, contribution)
mark(mean, to)
acl(contribution, mean)
cc(have, and)
conj(mean, have)
amod(stress, weaker)
obj(have, stress)
mark(do, than)
acl(stress, do)
punct(make, .)
mark(substitute, if)
nsubj:pass(substitute, work)
aux:pass(substitute, be)
advcl(have, substitute)
case(thing, for)
obl(substitute, thing)
punct(contribution, ()
case(contribution, with)
advmod(exact, more)
amod(contribution, exact)
obl(substitute, contribution)
case(meaning, to)
nmod(contribution, meaning)
punct(contribution, ))
punct(have, ,)
nsubj(have, it)
aux(have, will)
root(ROOT, have)
amod(stress, dominant)
obj(have, stress)
punct(have, .)
advmod(know, in)
nsubj(know, I)
root(ROOT, know)
nummod(thing, one)
nsubj(likely, thing)
amod(stress, dominant)
nsubj(likely, stress)
cop(likely, be)
ccomp(know, likely)
mark(go, to)
xcomp(likely, go)
case(one, to)
obl(go, one)
cc(thing, rather)
fixed(rather, than)
fixed(rather, to)
advmod(pale, semantically)
amod(thing, pale)
obl(go, thing)
punct(know, .)
advmod(know, in)
nsubj(know, I)
root(ROOT, know)
obj(know, you)
mark(child, when)
nsubj(child, you)
cop(child, be)
det(child, a)
advcl(know, child)
punct(imply, ,)
cc(stress, and)
nsubj(stress, you)
cop(stress, be)
advmod(dominant, pretty)
advmod(dominant, then)
amod(stress, dominant)
nsubj(imply, stress)
case(stress, on)
advmod(imply, then)
conj(know, imply)
mark(speak, that)
det(woman, the)
amod(woman, young)
nsubj(speak, woman)
ccomp(imply, speak)
obl(speak, to)
cop(pretty, be)
advmod(pretty, still)
advmod(speak, pretty)
punct(stress, .)
amod(stress, Dominant)
conj(speak, stress)
mark(insulting, on)
advmod(insulting, pretty)
aux(insulting, would)
cop(insulting, be)
advmod(insulting, almost)
conj(stress, insulting)
advmod(insulting, here)
punct(know, .)
case(language, in)
det(language, the)
amod(language, write)
obl(underlined, language)
advmod(underlined, then)
aux(underlined, can)
aux:pass(underlined, be)
root(ROOT, underlined)
cc(italicize, or)
conj(underlined, italicize)
mark(guide, to)
advcl(underlined, guide)
det(reader, the)
obj(guide, reader)
advmod(guide, here)
punct(depend, ,)
cc(depend, but)
nsubj(depend, much)
case(time, of)
det(time, the)
obl(much, time)
det(language, the)
amod(language, write)
nsubj(depend, language)
advmod(depend, simply)
conj(underlined, depend)
case(alertness, on)
det(reader, the)
nmod:poss(alertness, reader)
case(reader, 's)
obl(depend, alertness)
punct(have, ,)
cc(have, and)
det(reader, a)
amod(reader, careless)
nsubj(have, reader)
aux(have, will)
conj(depend, have)
mark(back, to)
xcomp(have, back)
compound:prt(back, up)
cc(reread, and)
conj(back, reread)
punct(underlined, .)
advmod(indicate, often)
punct(indicate, ,)
amod(stress, dominant)
nsubj(indicate, stress)
advmod(indicate, simply)
root(ROOT, indicate)
det(center, a)
obj(indicate, center)
case(attention, of)
nmod(center, attention)
cc(emotion, or)
conj(attention, emotion)
punct(indicate, .)
advmod(likely, thus)
mark(incredible, in)
expl(incredible, it)
cop(incredible, be)
advcl(likely, incredible)
nsubj(incredible, what)
det(boy, that)
nsubj(eat, boy)
aux(eat, can)
acl:relcl(what, eat)
amod(stress, dominant)
obj(eat, stress)
cop(likely, be)
root(ROOT, likely)
mark(incredible, to)
cop(incredible, be)
case(incredible, on)
xcomp(likely, incredible)
punct(have, ,)
cc(have, and)
nsubj(have, eat)
aux(have, will)
conj(likely, have)
amod(stress, strong)
obj(have, stress)
advmod(have, also)
punct(likely, .)
mark(have, in)
nsubj(have, she)
advcl(in, have)
obj(have, it)
compound:prt(have, in)
case(stress, for)
nmod:poss(stress, George)
amod(George, dominant)
nsubj(in, stress)
aux(in, will)
advmod(in, ordinarily)
cop(in, be)
case(in, on)
root(ROOT, in)
punct(in, ,)
advmod(seem, where)
det(notion, the)
nsubj(seem, notion)
case(antipathy, of)
amod(antipathy, store)
punct(store, -)
compound(store, up)
nmod(notion, antipathy)
acl:relcl(in, seem)
mark(center, to)
advcl(seem, center)
punct(in, .)
mark(painting, in)
nsubj(painting, we)
aux(painting, be)
advcl(painting, painting)
case(stress, at)
nmod:poss(stress, we)
compound(stress, garage)
amod(stress, strong)
obl(painting, stress)
case(indicate, on)
case(indicate, at)
obl(painting, indicate)
mark(painting, that)
det(job, the)
nsubj(painting, job)
aux:pass(do, be)
acl(job, do)
cop(painting, be)
advmod(painting, not)
amod(painting, real)
root(ROOT, painting)
cc(effort, but)
advmod(effort, simply)
det(effort, a)
conj(painting, effort)
case(painting, at)
nmod(effort, painting)
punct(painting, .)
mark(be, where)
expl(be, there)
advcl(operate, be)
nsubj(be, comparison)
cc(contrast, or)
conj(comparison, contrast)
punct(operate, ,)
amod(stress, dominant)
nsubj(operate, stress)
advmod(operate, normally)
root(ROOT, operate)
case(attention, to)
compound(attention, center)
obl(operate, attention)
punct(operate, .)
advmod(stranger, thus)
case(friend, in)
nmod:poss(friend, he)
nmod(stranger, friend)
cop(stranger, be)
root(ROOT, stranger)
case(stress, than)
nmod:poss(sister, he)
nmod:poss(stress, sister)
case(sister, 's)
amod(stress, strong)
nsubj(normal, stress)
cop(normal, be)
parataxis(stranger, normal)
case(he, for)
obl(normal, he)
cc(sister, and)
conj(he, sister)
punct(sister, ')
punct(stranger, ,)
cc(stranger, but)
case(friend, in)
nmod:poss(friend, he)
obl(stranger, friend)
cop(stranger, be)
conj(normal, stranger)
case(sister, than)
nmod:poss(sister, he)
nmod(stranger, sister)
amod(stress, strong)
nsubj(normal, stress)
cop(normal, be)
conj(stranger, normal)
case(friend, for)
obl(normal, friend)
cc(sister, and)
conj(friend, sister)
punct(normal, .)
mark(hurt, in)
nsubj(hurt, he)
aux(hurt, be)
root(ROOT, hurt)
obj(hurt, himself)
obj(hurt, more)
mark(hurt, than)
nsubj(hurt, he)
aux(hurt, be)
advcl(more, hurt)
obj(hurt, you)
cc:preconj(himself, both)
obj(hurt, himself)
cc(have, and)
nsubj(have, you)
conj(hurt, have)
amod(stress, stronger)
obj(have, stress)
mark(have, than)
nsubj(have, they)
aux(have, would)
advmod(have, ordinarily)
acl(stress, have)
mark(be, if)
expl(be, there)
advcl(have, be)
det(contrast, no)
nsubj(be, contrast)
punct(hurt, .)
case(chinese, in)
cop(chinese, be)
nsubj(chinese, she)
root(ROOT, chinese)
cc(japanese, or)
conj(chinese, japanese)
punct(chinese, ?)
punct(chinese, ?)
det(desire, the)
nsubj(produce, desire)
mark(contrast, to)
acl(desire, contrast)
det(part, the)
amod(part, first)
obj(contrast, part)
case(word, of)
nmod(part, word)
nsubj(alike, which)
cop(alike, be)
acl:relcl(part, alike)
case(component, in)
nmod:poss(component, they)
amod(component, last)
obl(alike, component)
root(ROOT, produce)
det(disregard, a)
amod(disregard, exceptional)
obj(produce, disregard)
case(pattern, of)
det(pattern, the)
amod(pattern, normal)
nmod(disregard, pattern)
case(stress, of)
nmod(pattern, stress)
case(chinese, of)
nmod(stress, chinese)
cc(japanese, and)
conj(chinese, japanese)
punct(produce, .)
advmod(serve, sometimes)
amod(stress, strong)
nsubj(serve, stress)
root(ROOT, serve)
mark(focus, to)
xcomp(serve, focus)
det(relationship, a)
amod(relationship, important)
amod(relationship, secondary)
obj(focus, relationship)
punct(serve, .)
advmod(write, thus)
case(Mary, in)
obl(write, Mary)
parataxis(serve, write)
det(account, a)
obj(write, account)
case(trip, of)
det(trip, the)
nmod(account, trip)
advmod(stress, first)
amod(stress, strong)
appos(trip, stress)
case(Mary, on)
nmod(stress, Mary)
nmod(stress, mark)
nsubj(mark, Mary)
case(first, as)
det(first, the)
nmod(Mary, first)
case(series, in)
det(series, a)
nmod(first, series)
case(people, of)
nmod(series, people)
nsubj(write, who)
acl:relcl(people, write)
obj(write, account)
case(trip, of)
det(trip, the)
nmod(account, trip)
punct(stress, ,)
amod(stress, strong)
conj(trip, stress)
mark(write, on)
acl(stress, write)
root(ROOT, mark)
det(writing, the)
obj(mark, writing)
case(first, as)
det(first, the)
obl(mark, first)
case(series, of)
det(series, a)
nmod(first, series)
case(action, of)
nmod(series, action)
case(concerned, of)
obl(concerned, Mary)
case(Mary, 's)
amod(action, concerned)
case(account, with)
det(account, a)
obl(concerned, account)
case(trip, of)
nmod:poss(trip, she)
nmod(account, trip)
punct(account, ()
case(which, about)
obl(make, which)
nsubj(make, she)
aux(make, may)
advmod(make, later)
aux(make, have)
acl:relcl(trip, make)
obj(make, speech)
punct(make, ,)
case(example, for)
obl(make, example)
punct(make, ))
punct(make, ,)
cc(stress, and)
amod(stress, strong)
nsubj(make, stress)
case(trip, on)
nmod(stress, trip)
conj(make, make)
det(trip, the)
obj(make, trip)
det(first, the)
obj(make, first)
case(series, of)
det(series, a)
nmod(first, series)
case(subject, of)
nmod(series, subject)
case(which, about)
obl(write, which)
nsubj(write, Mary)
acl:relcl(subject, write)
obj(write, account)
punct(make, .)
case(hunger, in)
obl(stimulate, hunger)
advcl(similar, stimulate)
obj(stimulate, man)
advmod(similar, too)
det(situation, the)
nsubj(similar, situation)
cop(similar, be)
advmod(similar, very)
root(ROOT, similar)
punct(similar, .)
amod(stress, strong)
root(ROOT, stress)
case(treat, on)
compound(treat, hunger)
nmod(stress, treat)
nmod(stress, hunger)
case(stimulus, as)
det(stimulus, a)
amod(stimulus, additional)
nmod(stress, stimulus)
punct(stress, ,)
amod(stress, strong)
conj(stimulus, stress)
case(stimulate, on)
nmod(stress, stimulate)
parataxis(stress, treat)
obj(treat, stimulation)
case(effect, as)
det(effect, a)
amod(effect, additional)
obl(treat, effect)
case(hunger, of)
nmod(effect, hunger)
punct(stress, ,)
amod(stress, strong)
conj(hunger, stress)
case(man, on)
compound(treat, man)
compound(man, treat)
nmod(stress, man)
case(creature, as)
det(creature, a)
amod(creature, additional)
nmod(effect, creature)
nsubj(respond, who)
acl:relcl(creature, respond)
case(stimulation, to)
det(stimulation, the)
obl(respond, stimulation)
case(hunger, of)
nmod(stimulation, hunger)
punct(stress, .)
advmod(possible, here)
advmod(possible, again)
punct(possible, ,)
case(language, in)
det(language, the)
amod(language, write)
obl(possible, language)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(help, to)
csubj(possible, help)
det(reader, the)
nsubj(get, reader)
xcomp(help, get)
nmod:poss(stress, he)
obj(get, stress)
advmod(use, right)
mark(use, by)
advcl(get, use)
obj(use, underline)
cc(italic, or)
conj(underline, italic)
punct(be, ,)
cc(be, but)
advmod(be, much)
case(time, of)
det(time, the)
obl(much, time)
expl(be, there)
conj(possible, be)
advmod(be, simply)
nsubj(be, reliance)
case(understanding, on)
nmod:poss(understanding, he)
nmod(reliance, understanding)
case(light, in)
det(light, the)
nmod(understanding, light)
case(context, of)
nmod(light, context)
punct(reliance, .)
mark(represent, when)
det(word, a)
nsubj(represent, word)
advcl(have, represent)
det(construction, a)
amod(construction, larger)
obj(represent, construction)
case(which, of)
obl(part, which)
nsubj(part, it)
cop(part, be)
det(part, the)
advmod(express, only)
amod(part, express)
acl:relcl(construction, part)
punct(have, ,)
nsubj(have, it)
advmod(have, normally)
parataxis(possible, have)
amod(stress, more)
obj(have, stress)
mark(construction, than)
nsubj(construction, it)
aux(construction, would)
aux(construction, have)
case(construction, in)
advmod(express, fully)
amod(construction, express)
advcl(have, construction)
punct(possible, .)
advmod(have, thus)
mark(yes, when)
advcl(have, yes)
punct(have, ,)
nsubj(have, I)
root(ROOT, have)
aux(have, be)
det(response, the)
obj(have, response)
mark(finish, to)
aux(finish, have)
nsubj(finish, you)
acl(response, finish)
xcomp(finish, read)
det(paper, the)
obj(read, paper)
punct(have, ?)
punct(have, ?)
det(stress, the)
nsubj(strong, stress)
mark(have, on)
acl(stress, have)
punct(stress, ,)
nsubj(represent, which)
advmod(represent, here)
acl:relcl(stress, represent)
aux(finish, have)
ccomp(represent, finish)
xcomp(finish, read)
det(paper, the)
obj(read, paper)
punct(strong, ,)
cop(strong, be)
advmod(strong, quite)
root(ROOT, strong)
punct(strong, .)
case(leader, in)
nmod:poss(leader, mack)
case(mack, 's)
det(leader, the)
root(ROOT, leader)
case(camp, at)
nmod(leader, camp)
punct(here, ,)
cc(here, but)
nsubj(here, Jack)
cop(here, be)
conj(leader, here)
obj(represent, the)
cop(represent, be)
case(represent, of)
det(declarative, the)
amod(declarative, second)
amod(declarative, main)
nsubj(represent, declarative)
acl:relcl(leader, represent)
cop(leader, be)
det(leader, the)
acl:relcl(here, leader)
cc(have, and)
advmod(have, therefore)
conj(leader, have)
obj(have, stress)
punct(leader, .)
nsubj(leader, mack)
cop(leader, be)
det(leader, the)
conj(leader, leader)
case(camp, at)
nmod(leader, camp)
punct(here, ,)
cc(here, but)
nsubj(here, Jack)
case(Jack, 's)
conj(leader, here)
punct(here, ,)
case(this, with)
obl(deprive, this)
aux:pass(deprive, be)
advcl(here, deprive)
case(stress, of)
obl(deprive, stress)
punct(make, ,)
conj(deprive, make)
advmod(make, here)
det(complement, the)
obj(make, complement)
case(clause, in)
det(clause, the)
nmod(complement, clause)
punct(make, .)
case(suggestion, in)
case(suggestion, of)
det:predet(suggestion, all)
det(suggestion, the)
obl(silliest, suggestion)
nsubj:pass(make, that)
aux:pass(make, be)
acl:relcl(suggestion, make)
punct(silliest, ,)
nsubj(silliest, he)
cop(silliest, be)
det(silliest, the)
root(ROOT, silliest)
det(possessive, the)
nsubj(silliest, possessive)
nsubj(represent, he)
acl:relcl(possessive, represent)
nmod:poss(suggestion, he)
obj(represent, suggestion)
cc(stress, and)
aux:pass(stress, be)
conj(represent, stress)
punct(silliest, .)
mark(represent, when)
nsubj(represent, go)
advcl(go, represent)
obj(represent, itself)
cc(complement, and)
det(complement, a)
conj(itself, complement)
punct(equivalent, ()
cop(equivalent, be)
appos(complement, equivalent)
punct(say, ,)
parataxis(equivalent, say)
punct(say, ,)
mark(go, to)
xcomp(say, go)
case(martinique, to)
obl(go, martinique)
punct(say, ))
case(boat, in)
det(boat, which)
obl(go, boat)
aux(go, do)
nsubj(go, Jack)
root(ROOT, go)
obl(go, on)
punct(go, ?)
punct(go, ?)
nsubj(have, it)
root(ROOT, have)
amod(stress, strong)
obj(have, stress)
punct(have, ;)
punct(have, ;)
mark(represent, when)
nsubj(represent, it)
advcl(have, represent)
advmod(itself, only)
obj(represent, itself)
cc(complement, and)
case(which, on)
obl(complement, which)
cop(complement, be)
nmod:poss(complement, its)
conj(represent, complement)
punct(equivalent, ()
mark(go, so)
nsubj(go, that)
advcl(complement, go)
compound:prt(go, on)
cop(equivalent, be)
advmod(equivalent, semantically)
ccomp(go, equivalent)
case(board, to)
obl(equivalent, board)
punct(equivalent, ))
punct(have, ,)
advmod(have, on)
conj(have, have)
amod(stress, stronger)
obj(have, stress)
mark(go, than)
acl(stress, go)
xcomp(go, do)
punct(have, .)
nsubj(result, Omission)
case(pronoun, of)
det(pronoun, a)
compound(pronoun, subordinator)
nmod(Omission, pronoun)
punct(result, ,)
advmod(result, however)
punct(result, ,)
aux(result, do)
advmod(result, not)
root(ROOT, result)
case(increase, in)
det(increase, a)
obl(result, increase)
case(stress, in)
nmod(increase, stress)
case(adverb, on)
det(adverb, a)
amod(adverb, prepositional)
nmod(increase, adverb)
case(which, for)
obl(object, which)
det(pronoun, the)
compound(pronoun, subordinator)
nsubj(object, pronoun)
aux(object, would)
cop(object, be)
acl:relcl(adverb, object)
punct(result, .)
advmod(conclusion, thus)
mark(have, to)
advcl(conclusion, have)
compound(stress, light)
obj(have, stress)
det(stress, both)
case(that, in)
nmod(stress, that)
cop(conclusion, be)
det(conclusion, the)
root(ROOT, conclusion)
obl(come, that)
nsubj(come, I)
acl:relcl(conclusion, come)
case(that, to)
cc(conclusion, and)
case(that, in)
obl(conclusion, that)
cop(conclusion, be)
det(conclusion, the)
conj(conclusion, conclusion)
nsubj(come, I)
acl:relcl(conclusion, come)
obl(come, to)
punct(conclusion, .)
cc(moment, but)
mark(represent, when)
mark(represent, to)
advcl(moment, represent)
case(consciousness, to)
obl(represent, consciousness)
case(that, in)
obl(represent, that)
cop(moment, be)
det(moment, the)
root(ROOT, moment)
obj(come, that)
nsubj(come, I)
acl:relcl(moment, come)
obl(come, to)
punct(moment, ,)
cc(moment, and)
advmod(moment, similarly)
case(that, in)
obl(moment, that)
cop(moment, be)
det(moment, the)
conj(moment, moment)
nsubj(come, I)
acl:relcl(moment, come)
obl(come, to)
punct(be, ,)
expl(be, there)
conj(moment, be)
advmod(stronger, much)
amod(stress, stronger)
nsubj(be, stress)
case(to, on)
nmod(stress, to)
punct(moment, .)
advmod(want, in)
nsubj(want, I)
root(ROOT, want)
mark(tell, to)
xcomp(want, tell)
obj(tell, he)
punct(afraid, ,)
cc(afraid, but)
nsubj(afraid, I)
cop(afraid, be)
conj(want, afraid)
case(final, to)
det(final, the)
obl(stress, final)
case(final, to)
aux:pass(stress, be)
advmod(stress, lightly)
ccomp(afraid, stress)
mark(represent, because)
nsubj(represent, it)
advcl(stress, represent)
mark(tell, to)
xcomp(represent, tell)
obj(tell, he)
punct(want, .)
advmod(tell, in)
mark(tell, to)
advcl(equivalent, tell)
obj(tell, he)
punct(unstress, ,)
advmod(unstress, of)
fixed(of, course)
punct(unstress, ,)
mark(unstress, to)
cop(unstress, be)
advmod(unstress, normally)
root(ROOT, unstress)
punct(unstress, .)
mark(have, when)
nsubj(have, I)
advcl(equivalent, have)
obj(have, instruction)
mark(leave, to)
acl(instruction, leave)
cop(equivalent, be)
parataxis(unstress, equivalent)
mark(mean, in)
advcl(equivalent, mean)
mark(have, to)
nsubj(have, I)
advcl(mean, have)
obj(have, instruction)
obj(leave, that)
nsubj(leave, I)
aux(leave, be)
mark(leave, to)
acl(instruction, leave)
det(place, this)
obj(leave, place)
punct(leave, ,)
amod(stress, dominant)
nsubj(leave, stress)
cop(leave, be)
advmod(leave, ordinarily)
case(leave, on)
parataxis(equivalent, leave)
punct(leave, .)
mark(equivalent, when)
det(sequence, the)
amod(sequence, same)
nsubj(equivalent, sequence)
cop(equivalent, be)
advcl(leave, equivalent)
mark(mean, in)
advcl(equivalent, mean)
mark(have, to)
nsubj(have, I)
advcl(mean, have)
obj(have, instruction)
obj(leave, which)
nsubj(be, I)
aux(leave, be)
mark(leave, to)
acl(instruction, leave)
punct(instruction, ,)
amod(stress, dominant)
nsubj(instruction, stress)
cop(instruction, be)
advmod(instruction, ordinarily)
case(instruction, on)
conj(leave, instruction)
punct(leave, .)
expl(clear, it)
cop(clear, be)
root(ROOT, clear)
mark(show, that)
nsubj(show, pattern)
case(stress, of)
nmod(pattern, stress)
advmod(show, sometimes)
csubj(clear, show)
obj(show, construction)
advmod(show, unambiguously)
case(language, in)
det(language, the)
amod(language, speak)
obl(show, language)
advmod(ambiguous, where)
case(help, without)
det(help, the)
obl(ambiguous, help)
case(context, of)
nmod(help, context)
nsubj(ambiguous, it)
aux(ambiguous, would)
cop(ambiguous, be)
acl:relcl(language, ambiguous)
case(write, in)
det(write, the)
advcl(ambiguous, write)
punct(clear, .)
amod(example, other)
nsubj(follow, example)
root(ROOT, follow)
punct(follow, .)
punct(follow, ``)
nsubj(come, I)
aux(come, will)
root(ROOT, come)
case(Tuesday, by)
obl(come, Tuesday)
punct(come, . )
nsubj(happy, I)
aux(happy, can)
advmod(happy, not)
cop(happy, be)
root(ROOT, happy)
advmod(happy, long)
mark(drink, without)
advcl(happy, drink)
obj(drink, water)
punct(drink, '')
punct(happy, .)
case(first, in)
det(first, the)
obl(happy, first)
case(sentence, of)
det(sentence, these)
nmod(first, sentence)
mark(complement, if)
case(complement, by)
cop(complement, be)
det(complement, the)
advcl(happy, complement)
case(come, of)
nmod(complement, come)
cc(adjunct, and)
nsubj(adjunct, Tuesday)
cop(adjunct, be)
det(adjunct, a)
conj(complement, adjunct)
case(time, of)
nmod(adjunct, time)
amod(adjunct, equivalent)
obl(equivalent, to)
case(Tuesday, on)
obl(equivalent, Tuesday)
punct(be, ,)
expl(be, there)
aux(be, will)
conj(adjunct, be)
amod(stress, strong)
nsubj(be, stress)
case(language, on)
case(language, by)
case(language, in)
det(language, the)
amod(language, speak)
nmod(stress, language)
punct(be, ;)
punct(be, ;)
cc(imply, but)
mark(imply, if)
det(complement, a)
nsubj:pass(imply, complement)
case(come, for)
nmod(complement, come)
aux:pass(imply, be)
advcl(be, imply)
cc(unit, and)
case(Tuesday, by)
obl(unit, Tuesday)
cop(unit, be)
det(unit, a)
amod(unit, prepositional)
conj(imply, unit)
acl(unit, use)
case(adjunct, as)
det(adjunct, a)
obl(use, adjunct)
punct(unit, ,)
mark(unstress, by)
aux(unstress, will)
aux:pass(unstress, be)
advcl(unit, unstress)
cc(stress, or)
advmod(stress, lightly)
conj(unstress, stress)
case(most, at)
obl(stress, most)
punct(happy, .)
case(sentence, in)
det(sentence, the)
amod(sentence, second)
obl(be, sentence)
mark(clause, if)
compound(water, drinking)
nsubj(clause, water)
cop(clause, be)
det(clause, a)
amod(clause, gerundial)
acl(sentence, clause)
cc(equivalent, and)
mark(equivalent, without)
amod(water, drinking)
nsubj(equivalent, water)
cop(equivalent, be)
advmod(equivalent, roughly)
conj(clause, equivalent)
mark(mean, in)
advcl(equivalent, mean)
obl(mean, to)
mark(drink, unless)
nsubj(drink, I)
advcl(mean, drink)
obj(drink, water)
punct(be, ,)
expl(be, there)
aux(be, will)
root(ROOT, be)
amod(stress, stronger)
nsubj(be, stress)
case(water, on)
nmod(stress, water)
case(drinking, than)
case(drinking, on)
nmod(stress, drinking)
punct(be, ;)
punct(be, ;)
cc(noun, but)
mark(noun, if)
nsubj(noun, drinking)
cop(noun, be)
det(noun, a)
amod(noun, gerundial)
advcl(be, noun)
acl(noun, modify)
obj(modify, water)
cc(equivalent, and)
mark(equivalent, without)
amod(water, drinking)
nsubj(equivalent, water)
cop(equivalent, be)
advcl(be, equivalent)
obl(equivalent, to)
case(water, without)
obl(equivalent, water)
case(drinking, for)
obl(equivalent, drinking)
punct(be, ,)
expl(be, there)
aux(be, will)
conj(be, be)
amod(stress, stronger)
nsubj(be, stress)
mark(drink, on)
acl(stress, drink)
case(water, than)
case(water, on)
obl(drink, water)
punct(be, .)
cc(undermine, but)
det(use, the)
nsubj(undermine, use)
case(stress, of)
nmod(use, stress)
case(comparison, in)
nmod(use, comparison)
cc(contrast, and)
conj(comparison, contrast)
punct(undermine, ,)
case(example, for)
obl(undermine, example)
punct(undermine, ,)
aux(undermine, can)
root(ROOT, undermine)
obj(undermine, distinction)
case(these, such)
fixed(such, as)
nmod(distinction, these)
punct(undermine, .)
cc(unambiguous, and)
nsubj(unambiguous, pattern)
case(stress, of)
nmod(pattern, stress)
cop(unambiguous, be)
advmod(unambiguous, not)
advmod(unambiguous, always)
root(ROOT, unambiguous)
case(means, by)
det(means, any)
obl(unambiguous, means)
punct(unambiguous, .)
case(Steiners, in)
det(Steiners, the)
nsubj(have, Steiners)
root(ROOT, have)
amod(life, busy)
obj(have, life)
mark(visit, without)
advcl(have, visit)
obj(visit, relative)
amod(context, only)
obj(visit, context)
aux(indicate, can)
parataxis(have, indicate)
mark(equivalent, whether)
csubj(equivalent, visit)
obj(visit, relative)
cop(equivalent, be)
ccomp(indicate, equivalent)
mark(mean, in)
advcl(equivalent, mean)
mark(pay, to)
advcl(mean, pay)
obj(pay, visit)
case(relative, to)
nmod(visit, relative)
cc(relative, or)
case(relative, to)
conj(relative, relative)
nsubj(visit, who)
aux(visit, be)
acl:relcl(relative, visit)
obj(visit, they)
punct(look, ,)
cc(look, and)
mark(look, in)
nsubj(look, I)
conj(visit, look)
case(number, up)
det(number, the)
obl(look, number)
cc(look, and)
nsubj(look, I)
conj(look, look)
compound:prt(look, up)
det(chimney, the)
obj(look, chimney)
advmod(meaning, only)
det(meaning, the)
nsubj(make, meaning)
case(number, of)
nmod(meaning, number)
cc(chimney, and)
conj(number, chimney)
conj(look, make)
expl(make, it)
xcomp(make, clear)
mark(complement, that)
nsubj(complement, up)
cop(complement, be)
advmod(complement, syntactically)
det(complement, a)
amod(complement, second)
ccomp(clear, complement)
case(sentence, in)
det(sentence, the)
amod(sentence, first)
nmod(complement, sentence)
cc(preposition, and)
det(preposition, a)
conj(sentence, preposition)
acl(preposition, follow)
case(object, by)
nmod:poss(object, its)
obl(follow, object)
case(second, in)
det(second, the)
obl(follow, second)
punct(have, .)
root(ROOT, syllabification)
punct(syllabification, .)
punct(syllabification, --)
nsubj(unit, syllable)
cop(unit, be)
amod(unit, linguistic)
root(ROOT, unit)
acl(unit, center)
case(peak, in)
obl(center, peak)
nsubj(vocalic, which)
cop(vocalic, be)
advmod(vocalic, usually)
acl:relcl(peak, vocalic)
cc(consonantal, but)
punct(consonantal, ,)
mark(note, as)
aux(note, have)
aux:pass(note, be)
advcl(consonantal, note)
punct(consonantal, ,)
cop(consonantal, be)
conj(unit, consonantal)
case(circumstance, under)
amod(circumstance, certain)
obl(consonantal, circumstance)
punct(combine, ,)
cc(combine, and)
nsubj:pass(combine, which)
aux(combine, may)
cc(combine, or)
aux(combine, may)
advmod(combine, not)
aux:pass(combine, be)
conj(consonantal, combine)
case(consonant, with)
amod(consonant, precede)
cc(or, and)
punct(or, /)
cc(follow, or)
conj(precede, follow)
obl(combine, consonant)
cc(combination, or)
conj(consonant, combination)
case(consonant, of)
nmod(combination, consonant)
punct(unit, .)
nsubj(unit, syllable)
cop(unit, be)
amod(unit, genuine)
root(ROOT, unit)
punct(present, ,)
cc(present, but)
nsubj(present, division)
case(word, of)
nmod(division, word)
cc(sentence, and)
conj(word, sentence)
case(they, into)
nmod(sentence, they)
conj(unit, present)
amod(difficulty, great)
obj(present, difficulty)
punct(unit, .)
advmod(clear, sometimes)
advmod(number, even)
det(number, the)
nsubj(clear, number)
case(syllable, of)
nmod(number, syllable)
cop(clear, be)
advmod(clear, not)
root(ROOT, clear)
punct(clear, .)
nsubj(strongest, Doubt)
case(point, on)
det(point, this)
nmod(Doubt, point)
cop(strongest, be)
root(ROOT, strongest)
case(l, before)
punct(l, /)
obl(strongest, l)
punct(l, /)
cc(be, and)
conj(l, AAb)
punct(or, /)
cc(be, or)
punct(be, /)
conj(AAb, be)
punct(be, /)
punct(strongest, .)
case(point, from)
det(point, the)
obl(expect, point)
case(view, of)
nmod(point, view)
case(word, of)
nmod(view, word)
compound(real, formation)
nsubj:pass(expect, real)
aux(expect, might)
aux:pass(expect, be)
root(ROOT, expect)
mark(have, to)
xcomp(expect, have)
nummod(syllable, two)
obj(have, syllable)
punct(expect, .)
advmod(have, historically)
case(formative, re)
aux(have, be)
det(formative, the)
nsubj(have, formative)
nsubj:pass(employ, that)
aux:pass(employ, be)
acl:relcl(formative, employ)
advmod(employ, also)
case(republic, in)
obl(employ, republic)
punct(suffix, ,)
cc(suffix, and)
nsubj(suffix, al)
cop(suffix, be)
det(suffix, the)
amod(suffix, common)
conj(employ, suffix)
punct(suffix, .)
mark(add, when)
nsubj:pass(add, ity)
aux:pass(add, be)
advcl(have, add)
punct(have, ,)
nsubj(have, real)
advmod(have, clearly)
root(ROOT, have)
nummod(syllable, two)
obj(have, syllable)
punct(have, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
det(reason, every)
nsubj(be, reason)
mark(regard, to)
acl(reason, regard)
obj(regard, deal)
case(monosyllable, as)
det(monosyllable, a)
obl(regard, monosyllable)
punct(seem, ,)
cc(seem, and)
case(fact, because)
fixed(because, of)
det(fact, the)
obl(seem, fact)
mark(have, that)
nsubj(have, /l)
punct(/l, /)
advmod(have, commonly)
acl(fact, have)
det(quality, the)
obj(have, quality)
case(AAb, of)
nmod(quality, AAb)
cc(seem, /)
mark(follow, when)
nsubj(follow, it)
advcl(seem, follow)
compound(sound, vowel)
obj(follow, sound)
punct(seem, ,)
nsubj(seem, deal)
conj(be, seem)
mark(rhyme, to)
cop(rhyme, be)
det(rhyme, a)
advmod(satisfactory, perfectly)
amod(rhyme, satisfactory)
xcomp(seem, rhyme)
case(deal, with)
nmod(rhyme, deal)
punct(be, .)
expl(obvious, it)
cop(obvious, be)
root(ROOT, obvious)
advmod(obvious, enough)
mark(successful, that)
nsubj(successful, linguist)
case(general, in)
nmod(linguist, general)
aux(successful, have)
cop(successful, be)
advmod(successful, less)
ccomp(enough, successful)
mark(cope, in)
advcl(successful, cope)
case(system, with)
compound(system, tone)
obl(cope, system)
case(consonant, than)
case(consonant, with)
obl(cope, consonant)
cc(vowel, or)
conj(consonant, vowel)
punct(obvious, .)
det(explanation, no)
amod(explanation, single)
nsubj(adequate, explanation)
cop(adequate, be)
root(ROOT, adequate)
mark(account, to)
advcl(adequate, account)
case(this, for)
obl(account, this)
punct(adequate, .)
nsubj(urgent, improvement)
punct(urgent, ,)
advmod(urgent, however)
punct(urgent, ,)
cop(urgent, be)
root(ROOT, urgent)
punct(need, ,)
cc(need, and)
case(least, at)
nmod(three, least)
nummod(thing, three)
nsubj:pass(need, thing)
aux(need, will)
aux:pass(need, be)
conj(urgent, need)
punct(urgent, .)
det(first, the)
nsubj(sample, first)
cop(sample, be)
det(sample, a)
amod(range, wide)
punct(range, -)
amod(sample, range)
root(ROOT, sample)
case(analysis, of)
amod(analysis, successful)
amod(analysis, tonal)
nmod(sample, analysis)
punct(sample, .)
advmod(begin, even)
amod(student, begin)
nsubj:pass(make, student)
case(linguistic, in)
nmod(student, linguistic)
aux:pass(make, be)
parataxis(sample, make)
xcomp(make, familiar)
case(variety, with)
det(variety, a)
amod(variety, appreciable)
obl(familiar, variety)
case(system, of)
compound(system, consonant)
nmod(variety, system)
punct(variety, ,)
cc:preconj(outline, both)
case(outline, in)
nmod:poss(outline, they)
amod(outline, general)
nmod(variety, outline)
cc(detail, and)
case(detail, in)
amod(detail, many)
amod(detail, specific)
conj(outline, detail)
punct(sample, .)
det(student, a)
amod(student, advanced)
nsubj(read, student)
aux(read, have)
root(ROOT, read)
det(number, a)
amod(number, considerable)
obj(read, number)
case(description, of)
nmod(number, description)
case(system, of)
amod(system, consonantal)
nmod(description, system)
punct(number, ,)
case(some, include)
nmod(number, some)
case(type, of)
det(type, the)
advmod(unusual, more)
amod(type, unusual)
nmod(some, type)
punct(read, .)
case(contrast, by)
obl(know, contrast)
punct(know, ,)
advmod(experience, even)
advcl(know, experience)
nsubj(know, linguist)
advmod(know, commonly)
root(ROOT, know)
advmod(more, no)
obj(know, more)
case(range, of)
det(range, the)
obl(more, range)
case(possibility, of)
nmod(range, possibility)
case(system, in)
compound(system, tone)
nmod(possibility, system)
case(distinction, than)
det(distinction, the)
advmod(simple, over)
punct(simple, -)
amod(distinction, simple)
nmod(range, distinction)
case(language, between)
compound(language, register)
cc(contour, and)
conj(register, contour)
nmod(distinction, language)
punct(know, .)
det(familiarity, this)
amod(familiarity, limited)
nsubj(hamper, familiarity)
case(phenomena, with)
det(phenomena, the)
amod(phenomena, possible)
nmod(familiarity, phenomena)
aux(hamper, have)
advmod(hamper, severely)
root(ROOT, hamper)
obj(hamper, work)
case(tone, with)
obl(hamper, tone)
punct(hamper, .)
compound(analysis, Tone)
nsubj(continue, analysis)
aux(continue, will)
root(ROOT, continue)
mark(difficult, to)
cop(difficult, be)
xcomp(continue, difficult)
cc(unsatisfactory, and)
conj(difficult, unsatisfactory)
mark(familar, until)
det(selection, a)
advmod(representative, more)
amod(selection, representative)
nsubj(familar, selection)
case(system, of)
nmod(selection, system)
cop(familar, be)
advcl(difficult, familar)
case(linguist, to)
det(linguist, every)
compound(linguist, practice)
compound(linguist, field)
obl(familar, linguist)
punct(continue, .)
nsubj(contribute, paper)
case(four, like)
det(four, these)
nmod(paper, four)
punct(paper, ,)
mark(read, if)
advmod(read, widely)
advcl(contribute, read)
punct(contribute, ,)
aux(contribute, will)
root(ROOT, contribute)
advmod(contribute, importantly)
case(improvement, to)
obl(contribute, improvement)
case(work, of)
nmod:poss(work, we)
amod(work, analytic)
nmod(improvement, work)
punct(contribute, .)
det(need, the)
amod(need, second)
nsubj(technique, need)
cop(technique, be)
amod(technique, better)
compound(technique, field)
root(ROOT, technique)
punct(technique, .)
det(majority, the)
amod(majority, great)
nsubj(fall, majority)
case(linguist, of)
amod(day, present)
punct(day, -)
compound(linguist, day)
nmod(majority, linguist)
root(ROOT, fall)
case(one, into)
obl(fall, one)
cc(more, or)
conj(one, more)
case(number, of)
det(number, a)
obl(fall, number)
case(type, of)
amod(type, overlapping)
nmod(number, type)
punct(fall, :)
appos(number, those)
nsubj:pass(convinced, who)
aux:pass(convinced, be)
acl:relcl(those, convinced)
mark(analyse, that)
nsubj:pass(analyse, tone)
aux(analyse, can)
advmod(analyse, not)
aux:pass(analyse, be)
ccomp(convinced, analyse)
punct(those, ,)
nsubj:pass(analyse, those)
nsubj(scared, who)
cop(scared, be)
advmod(scared, personally)
acl:relcl(those, scared)
case(language, of)
obl(scared, tone)
cc(tone, and)
conj(tone, tone)
obl(scared, language)
advmod(convinced, generally)
punct(those, ,)
appos(language, those)
nsubj:pass(convinced, who)
aux:pass(convinced, be)
acl:relcl(those, convinced)
mark(feature, that)
nsubj(feature, tone)
cop(feature, be)
advmod(feature, merely)
det(feature, a)
amod(feature, unnecessary)
amod(feature, marginal)
ccomp(convinced, feature)
case(language, in)
det(language, those)
nmod(feature, language)
advmod(occur, where)
nsubj(occur, it)
acl:relcl(language, occur)
punct(those, ,)
obj(occur, those)
nsubj(have, who)
acl:relcl(those, have)
det(idea, no)
obj(have, idea)
advmod(proceed, how)
mark(proceed, to)
acl(idea, proceed)
case(analysis, with)
compound(analysis, tone)
obl(proceed, analysis)
punct(analysis, ,)
appos(analysis, those)
nsubj(take, who)
acl:relcl(those, take)
det(view, a)
amod(view, simplistic)
obj(take, view)
case(matter, of)
det(matter, the)
amod(matter, whole)
nmod(view, matter)
punct(fall, .)
det(result, the)
nsubj(neglect, result)
aux(neglect, have)
cop(neglect, be)
root(ROOT, neglect)
punct(fumble, ,)
conj(neglect, fumble)
conj(neglect, effort)
punct(treatment, ,)
cc(treatment, or)
amod(treatment, superficial)
conj(neglect, treatment)
punct(neglect, .)
mark(overlap, as)
det(malady, these)
nsubj(overlap, malady)
advcl(combat, overlap)
punct(overlap, ,)
advmod(overlap, so)
aux(combat, must)
det(cure, the)
nsubj(combat, cure)
punct(cure, .)
appos(cure, analysis)
mark(combat, such)
fixed(such, as)
det(four, these)
nsubj(combat, four)
aux(combat, will)
advmod(combat, simultaneously)
root(ROOT, combat)
det(assumption, the)
obj(combat, assumption)
mark(impossible, that)
nsubj(impossible, tone)
cop(impossible, be)
acl(assumption, impossible)
cc(simple, and)
mark(simple, that)
nsubj(simple, it)
cop(simple, be)
conj(impossible, simple)
punct(combat, .)
nsubj(give, they)
aux(give, will)
root(ROOT, give)
obj(give, suggestion)
nsubj:pass(work, that)
aux(work, can)
aux:pass(work, be)
acl:relcl(suggestion, work)
compound:prt(work, up)
case(procedure, into)
compound(procedure, field)
obl(work, procedure)
punct(give, .)
amod(technique, good)
compound(technique, field)
nsubj(equip, technique)
aux(equip, will)
advmod(equip, not)
advmod(equip, only)
root(ROOT, equip)
obj(equip, linguist)
case(work, for)
amod(work, better)
obl(equip, work)
punct(help, ,)
cc(help, but)
advmod(help, also)
conj(equip, help)
obj(help, they)
xcomp(help, overcome)
amod(attitude, negative)
obj(overcome, attitude)
punct(equip, .)
advmod(say, actually)
punct(say, ,)
nsubj(say, none)
case(papers, of)
det(papers, these)
nmod(none, papers)
root(ROOT, say)
advmod(directly, much)
advmod(say, directly)
case(technique, about)
compound(technique, field)
obl(say, technique)
punct(say, .)
cc(worth, but)
expl(worth, it)
cop(worth, be)
root(ROOT, worth)
xcomp(worth, ponder)
mark(publish, that)
advmod(little, very)
nsubj:pass(publish, little)
aux(publish, have)
aux:pass(publish, be)
ccomp(ponder, publish)
case(phase, on)
det(phase, any)
obl(publish, phase)
case(technique, of)
compound(technique, field)
nmod(phase, technique)
case(linguistic, in)
nmod(phase, linguistic)
punct(worth, .)
det(thing, these)
nsubj:pass(disseminate, thing)
aux(disseminate, have)
aux:pass(disseminate, be)
root(ROOT, disseminate)
case(means, by)
amod(means, other)
obl(disseminate, means)
punct(wake, ,)
cc(wake, but)
advmod(wake, always)
case(wake, in)
det(wake, the)
conj(disseminate, wake)
case(publication, of)
amod(publication, extensive)
nmod(wake, publication)
case(result, of)
amod(result, analytic)
nmod(publication, result)
punct(disseminate, .)
det(need, the)
amod(need, third)
nsubj(theory, need)
cop(theory, be)
case(theory, for)
amod(theory, better)
root(ROOT, theory)
punct(theory, .)
nsubj(expect, we)
aux(expect, should)
root(ROOT, expect)
mark(adequate, that)
amod(theory, general)
compound(theory, phonologic)
nsubj(adequate, theory)
aux(adequate, should)
cop(adequate, be)
advmod(adequate, as)
ccomp(expect, adequate)
case(tone, for)
obl(adequate, tone)
case(consonant, as)
case(consonant, for)
obl(adequate, consonant)
cc(vowel, and)
conj(consonant, vowel)
punct(be, ,)
cc(be, but)
nsubj(be, it)
aux(be, have)
advmod(be, not)
conj(adequate, be)
punct(expect, .)
nsubj(one, this)
aux(one, can)
advmod(one, only)
cop(one, be)
case(one, for)
root(ROOT, one)
case(reason, of)
nummod(reason, two)
nmod(one, reason)
punct(one, :)
cc:preconj(different, either)
det(two, the)
nsubj(different, two)
cop(different, be)
advmod(different, quite)
parataxis(one, different)
cc(require, and)
aux(require, will)
conj(different, require)
advmod(different, totally)
amod(theory, different)
obj(require, theory)
punct(theory, ()
cc(technique, and)
amod(technique, hence)
conj(theory, technique)
punct(technique, ))
punct(general, ,)
cc(general, or)
nmod:poss(theory, we)
amod(theory, exist)
nsubj(general, theory)
cop(general, be)
advmod(general, insufficiently)
conj(different, general)
punct(one, .)
mark(suspect, if)
punct(sort, ,)
mark(suspect, as)
nsubj(suspect, I)
advcl(sort, suspect)
punct(sort, ,)
det(problem, the)
nsubj(sort, problem)
cop(sort, be)
advmod(sort, largely)
case(sort, of)
det(sort, the)
amod(sort, second)
root(ROOT, sort)
punct(sort, ,)
advmod(result, then)
nsubj(result, development)
case(theory, of)
det(theory, a)
nmod(development, theory)
advmod(able, better)
acl:relcl(theory, able)
mark(handle, to)
xcomp(able, handle)
obj(handle, tone)
aux(result, will)
conj(sort, result)
advmod(result, automatically)
case(theory, in)
amod(theory, better)
obl(result, theory)
case(subsystem, for)
det(subsystem, all)
amod(subsystem, phonologic)
nmod(theory, subsystem)
punct(sort, .)
nummod(issue, one)
nsubj(difficulty, issue)
nsubj:pass(face, that)
aux(face, must)
aux:pass(face, be)
acl:relcl(issue, face)
cop(difficulty, be)
det(difficulty, the)
amod(difficulty, relative)
root(ROOT, difficulty)
case(analysis, of)
nmod(difficulty, analysis)
case(subsystem, of)
amod(subsystem, different)
amod(subsystem, phonologic)
nmod(analysis, subsystem)
punct(difficulty, .)
mark(comprise, since)
compound(system, tone)
nsubj(comprise, system)
advmod(comprise, typically)
advcl(expect, comprise)
amod(unit, fewer)
obj(comprise, unit)
case(system, than)
cc:preconj(consonant, either)
compound(system, consonant)
cc(vowel, or)
conj(consonant, vowel)
nmod(unit, system)
punct(expect, ,)
nsubj(expect, we)
aux(expect, might)
root(ROOT, expect)
mark(part, that)
nsubj(part, they)
aux(part, would)
cop(part, be)
det(part, the)
amod(part, easiest)
ccomp(expect, part)
case(analysis, of)
det(analysis, a)
amod(analysis, phonologic)
nmod(part, analysis)
punct(expect, .)
amod(practice, actual)
nsubj(work, practice)
aux(work, do)
advmod(work, not)
advmod(work, often)
root(ROOT, work)
compound:prt(work, out)
det(way, this)
obl:npmod(work, way)
punct(work, .)
compound(system, Tone)
nsubj(complex, system)
cop(complex, be)
advmod(complex, certainly)
advmod(complex, more)
root(ROOT, complex)
mark(suggest, than)
det(number, the)
nsubj(suggest, number)
case(unit, of)
nmod(number, unit)
aux(suggest, would)
advcl(complex, suggest)
punct(difficult, ,)
cc(difficult, and)
advmod(difficult, often)
advmod(more, analytically)
advmod(difficult, more)
conj(complex, difficult)
case(system, than)
advmod(larger, much)
amod(system, larger)
amod(system, consonantal)
obl(difficult, system)
punct(complex, .)
nsubj(suggest, Welmers)
aux(suggest, have)
root(ROOT, suggest)
nummod(explanation, one)
obj(suggest, explanation)
punct(suggest, .)
compound(language, Tone)
nsubj(use, language)
root(ROOT, use)
case(parameter, for)
amod(contrast, linguistic)
compound(parameter, contrast)
compound(parameter, speech)
obl(use, parameter)
nsubj(function, which)
advmod(function, also)
acl:relcl(parameter, function)
advmod(function, heavily)
case(use, in)
amod(use, nonlinguistic)
obl(function, use)
punct(use, .)
nsubj(divert, this)
aux(divert, may)
advmod(divert, both)
root(ROOT, divert)
det(attention, the)
obj(divert, attention)
case(uninitiate, of)
det(uninitiate, the)
nmod(attention, uninitiate)
cc(cause, and)
conj(divert, cause)
obj(cause, confusion)
case(knowledgeable, for)
det(knowledgeable, the)
advmod(knowledgeable, more)
obl(cause, knowledgeable)
punct(divert, .)
det(problem, the)
nsubj(be, problem)
root(ROOT, be)
mark(disentangle, to)
ccomp(be, disentangle)
det(feature, the)
amod(feature, linguistic)
obj(disentangle, feature)
case(pitch, of)
nmod(feature, pitch)
case(feature, from)
det(feature, the)
amod(feature, co-occur)
amod(feature, nonlinguistic)
obl(disentangle, feature)
punct(be, .)
advmod(occur, of)
fixed(of, course)
punct(occur, ,)
nsubj(occur, something)
case(sort, of)
det(sort, the)
amod(sort, same)
nmod(something, sort)
root(ROOT, occur)
case(sector, with)
amod(sector, other)
obl(occur, sector)
case(phonology, of)
det(phonology, the)
nmod(sector, phonology)
punct(occur, :)
amod(articulation, consonantal)
nsubj(have, articulation)
parataxis(occur, have)
cc:preconj(linguistic, both)
det(linguistic, a)
amod(component, linguistic)
cc(component, and)
conj(linguistic, a)
conj(linguistic, individual)
obj(have, component)
punct(occur, .)
cc(thing, but)
case(general, in)
obl(thing, general)
det(variation, the)
amod(variation, individual)
nsubj(thing, variation)
cop(thing, be)
det(thing, a)
amod(thing, small)
root(ROOT, thing)
acl(thing, add)
case(feature, onto)
amod(feature, basic)
amod(feature, linguistic)
obl(add, feature)
case(magnitude, of)
amod(magnitude, greater)
nmod(feature, magnitude)
punct(thing, .)
case(tone, with)
obl(greater, tone)
punct(greater, ,)
amod(difference, individual)
nsubj(greater, difference)
aux(greater, may)
cop(greater, be)
root(ROOT, greater)
case(contrast, than)
det(contrast, the)
amod(contrast, linguistic)
obl(greater, contrast)
nsubj:pass(superimpose, which)
aux:pass(superimpose, be)
acl:relcl(contrast, superimpose)
case(they, on)
obl(superimpose, they)
punct(greater, .)
compound(difference, Pitch)
nsubj(exceed, difference)
case(speaker, from)
nummod(speaker, one)
nmod(difference, speaker)
case(another, to)
nmod(speaker, another)
punct(state, ,)
cc(state, or)
case(state, from)
nummod(state, one)
amod(state, emotional)
conj(difference, state)
case(another, to)
nmod(state, another)
punct(exceed, ,)
aux(exceed, may)
advmod(exceed, far)
root(ROOT, exceed)
det(difference, the)
amod(difference, small)
obj(exceed, difference)
case(tone, between)
nmod(difference, tone)
punct(exceed, .)
advmod(account, however)
punct(account, ,)
det(account, any)
amod(account, such)
compound(account, suggestion)
root(ROOT, account)
case(some, for)
advmod(some, only)
nmod(account, some)
case(difficulty, of)
det(difficulty, the)
nmod(some, difficulty)
case(tone, in)
compound(tone, hearing)
nmod(difficulty, tone)
punct(develop, ,)
cc(develop, or)
mark(develop, in)
conj(some, develop)
det(attitude, a)
amod(attitude, realistic)
obj(develop, attitude)
case(tone, about)
nmod(attitude, tone)
punct(difficulty, ,)
cc(difficulty, but)
cc(difficulty, not)
case(difficulty, for)
det(difficulty, the)
amod(difficulty, analytic)
conj(attitude, difficulty)
nsubj(occur, that)
acl:relcl(difficulty, occur)
advmod(record, even)
mark(record, when)
nsubj:pass(record, tone)
aux:pass(record, be)
advmod(record, meticulously)
advcl(occur, record)
punct(account, . )
det(explanation, a)
amod(explanation, second)
nsubj:pass(suggest, explanation)
aux:pass(suggest, be)
root(ROOT, suggest)
case(material, by)
det(material, the)
obl(suggest, material)
acl(material, describe)
case(paper, in)
nmod:poss(paper, Rowlands)
case(Rowlands, 's)
obl(describe, paper)
punct(Tone, .)
nsubj(become, Tone)
cc(intonation, and)
conj(Tone, intonation)
advmod(become, often)
conj(suggest, become)
advmod(intermeshed, seriously)
xcomp(become, intermeshed)
punct(intermeshed, .)
cc(systematize, neither)
aux(systematize, can)
aux:pass(systematize, be)
advmod(systematize, adequately)
conj(become, systematize)
mark(able, until)
nsubj(able, we)
cop(able, be)
advcl(systematize, able)
mark(separate, to)
xcomp(able, separate)
det(two, the)
obj(separate, two)
cc(assign, and)
conj(separate, assign)
det(phenomena, the)
amod(phenomena, observe)
obj(assign, phenomena)
advmod(assign, individually)
case(one, to)
obl(assign, one)
cc(other, or)
det(other, the)
conj(one, other)
punct(suggest, .)
amod(pair, other)
nsubj(interact, pair)
case(subsystem, of)
amod(subsystem, phonologic)
nmod(pair, subsystem)
advmod(interact, also)
root(ROOT, interact)
cc(overlap, or)
conj(interact, overlap)
case(way, in)
det(way, this)
obl(interact, way)
punct(interact, ;)
punct(interact, ;)
case(example, for)
obl(figure, example)
punct(figure, ,)
nsubj(figure, duration)
advmod(figure, sometimes)
parataxis(interact, figure)
case(system, in)
cc:preconj(system, both)
det(system, the)
compound(system, vowel)
obl(figure, system)
cc(intonation, and)
det(intonation, the)
conj(system, intonation)
punct(interact, .)
det(feature, some)
amod(feature, phonetic)
nsubj(be, feature)
punct(be, ,)
case(example, for)
obl(be, example)
compound(catch, glottal)
nmod(feature, catch)
cc(murmur, or)
conj(catch, murmur)
punct(be, ,)
root(ROOT, be)
advmod(be, sometimes)
mark(assign, to)
aux:pass(assign, be)
xcomp(be, assign)
case(phonemics, to)
amod(phonemics, segmental)
obl(assign, phonemics)
cc(system, and)
advmod(system, sometimes)
case(system, to)
amod(system, accentual)
conj(phonemics, system)
punct(be, .)
cc(difficult, but)
det(system, no)
amod(system, other)
nummod(system, two)
amod(system, phonologic)
nsubj(difficult, system)
cop(difficult, be)
advmod(difficult, as)
root(ROOT, difficult)
mark(disentangle, to)
ccomp(difficult, disentangle)
mark(tone, as)
cop(tone, be)
advcl(disentangle, tone)
cc(intonation, and)
conj(tone, intonation)
case(language, in)
det(language, some)
nmod(tone, language)
punct(difficult, .)
det(explanation, this)
nsubj(apply, explanation)
case(difficulty, of)
compound(difficulty, tone)
nmod(explanation, difficulty)
punct(apply, ,)
advmod(apply, however)
punct(apply, ,)
aux(apply, do)
advmod(apply, not)
root(ROOT, apply)
case(language, in)
det(language, all)
obl(apply, language)
punct(apply, .)
case(some, in)
obl(restrict, some)
punct(type, ()
det(type, the)
compound(type, Ewe)
compound(interaction, type)
acl(type, mention)
advmod(mention, above)
punct(mention, ))
nsubj:pass(restrict, interaction)
case(tone, of)
nmod(interaction, tone)
cc(intonation, and)
conj(tone, intonation)
aux:pass(restrict, be)
root(ROOT, restrict)
case(end, to)
det(end, the)
obl(restrict, end)
case(span, of)
compound(span, intonation)
nmod(end, span)
punct(restrict, .)
case(many, in)
obl(ignore, many)
case(syllable, of)
det(syllable, the)
nmod(many, syllable)
punct(ignore, ,)
nsubj:pass(ignore, intonation)
aux(ignore, can)
aux:pass(ignore, be)
advmod(ignore, safely)
root(ROOT, ignore)
punct(do, ,)
cc(do, and)
nsubj:pass(do, much)
case(analysis, of)
det(analysis, the)
amod(analysis, tonal)
obl(much, analysis)
aux(do, can)
aux:pass(do, be)
conj(ignore, do)
case(study, without)
det(study, any)
obl(do, study)
case(intonation, of)
nmod(study, intonation)
punct(ignore, .)
advmod(simple, still)
punct(simple, ,)
advmod(language, even)
case(language, in)
amod(language, such)
obl(simple, language)
compound(analysis, tone)
nsubj(simple, analysis)
aux(simple, have)
advmod(simple, not)
cop(simple, be)
advmod(simple, as)
root(ROOT, simple)
mark(expect, as)
nsubj(expect, one)
aux(expect, might)
advcl(simple, expect)
punct(simple, . )
det(explanation, a)
amod(explanation, third)
nsubj:pass(suggest, explanation)
aux:pass(suggest, be)
root(ROOT, suggest)
case(analysis, by)
nmod:poss(analysis, Richardson)
case(Richardson, 's)
obl(suggest, analysis)
case(tone, of)
compound(tone, Sukuma)
nmod(analysis, tone)
punct(suggest, .)
advmod(see, there)
nsubj(see, we)
root(ROOT, see)
det(system, a)
advmod(simple, basically)
amod(system, simple)
amod(system, phonemic)
obj(see, system)
acl(system, enmesh)
case(system, in)
det(system, a)
advmod(complex, very)
amod(system, complex)
cc(puzzling, and)
conj(complex, puzzling)
amod(system, morphophonemic)
obl(enmesh, system)
punct(see, .)
mark(state, while)
det(phoneme, the)
nsubj:pass(state, phoneme)
aux(state, can)
aux:pass(state, be)
advmod(easily, very)
advmod(state, easily)
advcl(likely, state)
punct(likely, ,)
det(one, no)
nsubj(likely, one)
cop(likely, be)
parataxis(see, likely)
mark(satisfied, to)
cop(satisfied, be)
xcomp(likely, satisfied)
case(statement, with)
det(statement, the)
obl(satisfied, statement)
mark(related, until)
amod(occurrence, phonemic)
nsubj(related, occurrence)
aux(related, can)
cop(related, be)
advcl(satisfied, related)
case(way, in)
det(way, some)
obl(related, way)
mark(morphemic, to)
acl(way, morphemic)
obj(morphemic, unit)
punct(related, ,)
advmod(work, i.e.)
mark(work, until)
det(morphophonemics, the)
nsubj:pass(work, morphophonemics)
aux:pass(work, be)
advcl(related, work)
compound:prt(work, out)
punct(enough, ,)
cc(enough, or)
case(least, at)
obl(far, least)
advmod(enough, far)
conj(work, enough)
mark(seem, that)
expl(seem, it)
ccomp(enough, seem)
xcomp(seem, reasonable)
mark(expect, to)
advcl(reasonable, expect)
obj(expect, success)
punct(see, .)
case(language, in)
det(language, the)
punct(language, ``)
amod(tone, typical)
compound(language, tone)
obl(order, language)
punct(language, '')
punct(order, ,)
amod(morphophonemics, tonal)
nsubj(order, morphophonemics)
cop(order, be)
case(order, of)
det(order, the)
amod(order, same)
root(ROOT, order)
case(complexity, of)
nmod(order, complexity)
case(morphophonemics, as)
amod(morphophonemics, consonantal)
nmod(complexity, morphophonemics)
punct(order, .)
det(system, the)
amod(system, phonemic)
nsubj(different, system)
nsubj(support, which)
aux(support, must)
acl:relcl(system, support)
det(system, these)
amod(system, morphophonemic)
obj(support, system)
punct(different, ,)
advmod(different, however)
punct(different, ,)
cop(different, be)
advmod(different, very)
root(ROOT, different)
punct(different, .)
det(inventory, the)
nsubj(smaller, inventory)
case(tone, of)
nmod(inventory, tone)
cop(smaller, be)
advmod(smaller, much)
root(ROOT, smaller)
punct(range, ,)
cc(range, and)
advmod(range, commonly)
det(contrast, the)
nsubj(range, contrast)
conj(smaller, range)
case(dimension, along)
nummod(dimension, one)
amod(dimension, single)
obl(range, dimension)
punct(dimension, ,)
compound(level, pitch)
conj(dimension, level)
punct(smaller, .)
amod(system, consonantal)
nsubj(larger, system)
cop(larger, be)
advmod(larger, not)
advmod(larger, merely)
root(ROOT, larger)
punct(larger, ,)
nsubj(multidimensional, they)
cop(multidimensional, be)
parataxis(larger, multidimensional)
punct(larger, .)
amod(rule, Morphophonemic)
nsubj:pass(think, rule)
aux(think, may)
aux:pass(think, be)
parataxis(larger, think)
obl(think, of)
mark(join, as)
advcl(think, join)
amod(point, certain)
obj(join, point)
case(system, in)
det(system, the)
obl(join, system)
punct(larger, .)
det(possibility, the)
nsubj(numerous, possibility)
case(system, in)
det(system, the)
amod(system, consonantal)
nmod(possibility, system)
cop(numerous, be)
advmod(numerous, very)
root(ROOT, numerous)
punct(use, ,)
cc(use, and)
advmod(portion, only)
det(portion, a)
amod(portion, small)
nsubj:pass(use, portion)
case(they, of)
nmod(portion, they)
aux:pass(use, be)
advmod(use, actually)
conj(numerous, use)
punct(numerous, .)
nsubj(show, phoneme)
acl(phoneme, connect)
case(rule, by)
det(rule, a)
amod(rule, morphophonemic)
obl(connect, rule)
advmod(show, commonly)
root(ROOT, show)
det(bit, a)
amod(bit, good)
obj(show, bit)
case(similarity, of)
amod(similarity, phonetic)
nmod(bit, similarity)
punct(bit, ,)
amod(bit, possible)
case(dimension, because)
fixed(because, of)
det(dimension, the)
amod(dimension, several)
obl(show, dimension)
case(contrast, of)
nmod(dimension, contrast)
case(system, in)
det(system, the)
nmod(contrast, system)
punct(show, .)
amod(morphophonemics, tonal)
nsubj(do, morphophonemics)
punct(do, ,)
case(case, in)
det(case, a)
amod(case, common)
obl(do, case)
punct(do, ,)
aux(do, can)
root(ROOT, do)
obj(do, nothing)
cc(raise, but)
cc:preconj(raise, either)
conj(do, raise)
cc(lower, or)
conj(raise, lower)
det(tone, the)
obj(raise, tone)
punct(do, .)
det(possibility, the)
nsubj(few, possibility)
cop(few, be)
root(ROOT, few)
punct(greater, ,)
cc(greater, and)
det(number, the)
amod(number, total)
nsubj(greater, number)
case(rule, of)
nmod(number, rule)
aux(greater, may)
cop(greater, be)
advmod(greater, considerably)
conj(few, greater)
punct(few, .)
advmod(be, often)
punct(be, ,)
advmod(be, therefore)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(number, a)
nsubj(be, number)
case(rule, of)
nmod(number, rule)
acl(rule, have)
det(effect, the)
amod(effect, same)
obj(have, effect)
punct(set, ,)
cc(set, and)
advmod(set, commonly)
amod(set, other)
conj(effect, set)
case(rule, of)
nmod(set, rule)
advmod(have, as)
fixed(as, well)
punct(set, ,)
advcl(confusing, have)
det(effect, the)
amod(effect, opposite)
obj(have, effect)
punct(confusing, .)
amod(morphophonemics, tonal)
nsubj(confusing, morphophonemics)
cop(confusing, be)
advmod(more, much)
advmod(confusing, more)
parataxis(be, confusing)
case(analyst, to)
det(analyst, the)
compound(analyst, beginning)
obl(confusing, analyst)
case(morphophonemics, than)
amod(morphophonemics, consonantal)
obl(confusing, morphophonemics)
punct(confusing, ,)
advmod(greater, even)
mark(greater, when)
det(number, the)
amod(number, total)
nsubj(greater, number)
case(rule, of)
nmod(number, rule)
cop(greater, be)
advmod(greater, no)
advcl(confusing, greater)
punct(be, .)
det(difficulty, the)
nsubj(function, difficulty)
case(analysis, of)
nmod(difficulty, analysis)
case(subsystem, of)
det(subsystem, any)
nmod(analysis, subsystem)
case(phonology, in)
det(phonology, the)
nmod(subsystem, phonology)
cop(function, be)
det(function, a)
amod(function, inverse)
root(ROOT, function)
case(size, of)
det(size, the)
nmod(function, size)
punct(function, --)
amod(system, smaller)
nsubj(troublesome, system)
cop(troublesome, be)
advmod(troublesome, more)
parataxis(function, troublesome)
punct(troublesome, --)
case(degree, for)
det(degree, any)
amod(degree, give)
obl(troublesome, degree)
case(complexity, of)
amod(complexity, morphophonemic)
nmod(degree, complexity)
punct(function, .)
det(hypothesis, this)
nsubj(account, hypothesis)
aux(account, will)
root(ROOT, account)
case(part, for)
det(part, a)
amod(part, large)
obl(account, part)
case(difficulty, of)
det(difficulty, the)
nmod(part, difficulty)
case(analysis, of)
amod(analysis, tonal)
nmod(difficulty, analysis)
punct(fact, ,)
cc(fact, as)
fixed(as, well)
fixed(as, as)
det(fact, the)
conj(part, fact)
mark(puzzling, that)
compound(system, vowel)
nsubj(puzzling, system)
cop(puzzling, be)
advmod(puzzling, often)
advmod(puzzling, more)
acl(fact, puzzling)
case(system, than)
amod(system, consonantal)
obl(puzzling, system)
punct(account, .)
det(statement, the)
nsubj(matter, statement)
case(system, of)
det(system, the)
nmod(statement, system)
cop(matter, be)
det(matter, a)
amod(matter, different)
root(ROOT, matter)
punct(matter, .)
amod(system, Smaller)
nsubj:pass(state, system)
aux(state, can)
advmod(state, of)
fixed(of, course)
aux:pass(state, be)
parataxis(matter, state)
advmod(more, much)
advmod(succinctly, more)
advmod(state, succinctly)
punct(matter, . )
det(system, a)
amod(system, phonemic)
nsubj:pass(state, system)
aux(state, can)
aux:pass(state, be)
root(ROOT, state)
case(reference, without)
obl(state, reference)
case(morphophonemics, to)
obl(state, morphophonemics)
punct(find, ,)
cc(find, but)
nsubj:pass(find, it)
aux(find, can)
advmod(find, not)
advmod(find, always)
aux:pass(find, be)
conj(state, find)
case(morphophonemics, without)
obl(find, morphophonemics)
punct(state, .)
cc(analyse, and)
mark(complex, the)
amod(complex, more)
obl(analyse, complex)
det(system, the)
amod(system, morphophonemic)
nsubj(relation, system)
cop(relation, be)
case(relation, in)
ccomp(complex, relation)
case(base, to)
det(base, the)
amod(base, phonemic)
nmod(relation, base)
punct(analyse, ,)
det(system, the)
advmod(easily, less)
advmod(system, easily)
det(system, a)
amod(system, phonemic)
nsubj:pass(analyse, system)
aux(analyse, will)
aux:pass(analyse, be)
root(ROOT, analyse)
case(attention, without)
amod(attention, close)
obl(analyse, attention)
case(morphophonemics, to)
det(morphophonemics, the)
nmod(attention, morphophonemics)
punct(analyse, --)
advmod(satisfy, at)
fixed(at, least)
punct(satisfy, ,)
mark(satisfy, the)
advmod(satisfy, less)
nsubj(be, satisfy)
aux(be, will)
det(statement, a)
amod(statement, phonemic)
nsubj(be, statement)
parataxis(analyse, be)
mark(relate, if)
nsubj:pass(relate, it)
aux(relate, can)
advmod(relate, not)
aux:pass(relate, be)
advcl(be, relate)
case(rule, through)
amod(rule, morphophonemic)
obl(relate, rule)
case(structure, to)
advmod(meaningful, grammatically)
amod(structure, meaningful)
obl(relate, structure)
punct(analyse, .)
det(design, the)
nsubj(receive, design)
case(orthography, of)
nmod(design, orthography)
aux(receive, have)
root(ROOT, receive)
advmod(less, much)
amod(attention, less)
obj(receive, attention)
case(linguist, from)
obl(receive, linguist)
mark(deserve, than)
det(problem, the)
nsubj(deserve, problem)
advcl(less, deserve)
punct(receive, .)
expl(be, there)
aux(be, have)
root(ROOT, be)
det(tendency, a)
nsubj(be, tendency)
case(part, on)
det(part, the)
nmod(tendency, part)
case(linguist, of)
amod(linguist, many)
amod(linguist, american)
nmod(part, linguist)
mark(assume, to)
acl(part, assume)
mark(orthography, that)
det(transcription, a)
amod(transcription, phonemic)
nsubj(orthography, transcription)
aux(orthography, will)
advmod(orthography, automatically)
cop(orthography, be)
det(orthography, the)
amod(orthography, best)
amod(orthography, possible)
ccomp(assume, orthography)
cc(one, and)
mark(one, that)
det(problem, the)
amod(problem, only)
amod(problem, real)
nsubj(one, problem)
aux(one, will)
advmod(one, then)
cop(one, be)
det(one, the)
amod(one, social)
conj(orthography, one)
mark(secure, of)
advcl(one, secure)
obj(secure, acceptance)
punct(be, .)
nsubj(seem, this)
root(ROOT, seem)
xcomp(seem, naive)
punct(seem, .)
amod(other, most)
nsubj(content, other)
aux(content, have)
cop(content, be)
ccomp(seem, content)
mark(give, to)
csubj(content, give)
advmod(attention, only)
det(attention, the)
advmod(general, most)
amod(attention, general)
obj(give, attention)
case(feature, to)
det(feature, the)
amod(feature, broadest)
cc(obvious, and)
advmod(obvious, most)
conj(broadest, obvious)
obl(give, feature)
case(phonology, of)
det(phonology, the)
nmod(feature, phonology)
mark(design, when)
advcl(give, design)
obj(design, orthography)
punct(seem, .)
advmod(be, apparently)
det(feeling, the)
nsubj(be, feeling)
root(ROOT, be)
mark(involvement, that)
nsubj(involvement, anything)
amod(anything, more)
aux(involvement, would)
cop(involvement, be)
ccomp(be, involvement)
case(abstruseness, in)
amod(abstruseness, technical)
obl(involvement, abstruseness)
case(interest, of)
amod(interest, possible)
amod(interest, pedantic)
nmod(abstruseness, interest)
cc(significance, but)
case(significance, of)
det(significance, no)
amod(significance, visible)
conj(interest, significance)
case(affair, in)
amod(affair, practical)
nmod(significance, affair)
punct(be, .)
det(result, the)
nsubj(domination, result)
case(attitude, of)
det(attitude, this)
nmod(result, attitude)
aux(domination, have)
cop(domination, be)
det(domination, the)
root(ROOT, domination)
case(conference, of)
amod(conference, many)
compound(conference, orthography)
nmod(domination, conference)
case(consideration, by)
amod(consideration, such)
nmod(conference, consideration)
case(esthetics, as)
amod(esthetics, typographic)
punct(esthetics, ')
nmod(consideration, esthetics)
punct(esthetics, ')
punct(esthetics, ,)
nsubj(turn, which)
advmod(turn, usually)
acl:relcl(esthetics, turn)
compound:prt(turn, out)
mark(nothing, to)
cop(nothing, be)
xcomp(turn, nothing)
amod(nothing, more)
case(prejudice, than)
amod(prejudice, certain)
obl(more, prejudice)
acl:relcl(nothing, carry)
advmod(carry, over)
case(language, from)
amod(language, european)
obl(carry, language)
punct(domination, .)
nsubj(seem, many)
case(system, of)
det(system, the)
amod(system, suggest)
nmod(many, system)
root(ROOT, seem)
mark(have, to)
xcomp(seem, have)
advmod(relationship, only)
det(relationship, the)
advmod(tenuous, most)
amod(relationship, tenuous)
obj(have, relationship)
case(structure, to)
det(structure, the)
compound(structure, language)
nmod(relationship, structure)
obj(purport, that)
nsubj(purport, they)
acl:relcl(structure, purport)
mark(represent, to)
xcomp(purport, represent)
punct(seem, .)
nsubj(enlighten, Linguists)
aux(enlighten, have)
advmod(enlighten, not)
advmod(enlighten, always)
cop(enlighten, be)
advmod(enlighten, more)
root(ROOT, enlighten)
case(people, than)
punct(people, ``)
amod(people, practical)
obl(enlighten, people)
punct(people, '')
cc(insist, and)
advmod(insist, sometimes)
aux(insist, have)
conj(enlighten, insist)
case(point, on)
advmod(trivial, incredibly)
amod(point, trivial)
obl(insist, point)
mark(neglect, while)
advcl(insist, neglect)
obj(neglect, thing)
case(significance, of)
advmod(greater, much)
amod(significance, greater)
nmod(thing, significance)
punct(enlighten, .)
case(result, as)
det(result, a)
obl(confirm, result)
punct(confirm, ,)
amod(people, many)
nsubj:pass(confirm, people)
aux(confirm, have)
aux:pass(confirm, be)
root(ROOT, confirm)
case(conviction, in)
nmod:poss(conviction, they)
obl(confirm, conviction)
mark(activity, that)
compound(design, orthography)
nsubj(activity, design)
cop(activity, be)
advmod(activity, not)
det(activity, a)
acl(conviction, activity)
case(expert, to)
det(expert, which)
nsubj(contribute, expert)
aux(contribute, can)
acl:relcl(activity, contribute)
obj(contribute, anything)
case(confusion, but)
nmod(anything, confusion)
punct(confirm, . )
root(ROOT, A.)
flat(A., E.)
flat(A., sharp)
punct(A., ,)
case(Vowel, in)
nmod(A., Vowel)
punct(A., -)
list(A., length)
cc(syllabicity, and)
root(ROOT, syllabicity)
case(Kikuyu, in)
obl(examine, Kikuyu)
punct(examine, ,)
root(ROOT, examine)
nummod(set, one)
obj(examine, set)
case(question, of)
amod(question, related)
amod(question, orthographic)
nmod(set, question)
cc(background, and)
nmod:poss(background, its)
amod(background, phonologic)
conj(question, background)
case(detail, in)
nmod(background, detail)
punct(examine, .)
nmod:poss(objective, he)
nsubj(be, objective)
root(ROOT, be)
advmod(be, merely)
mark(determine, to)
ccomp(be, determine)
punct(determine, ``)
det(distinction, what)
nsubj(desirable, distinction)
case(length, of)
nmod(distinction, length)
cc(syllabicity, and)
conj(length, syllabicity)
nsubj(desirable, it)
aux(desirable, may)
cop(desirable, be)
ccomp(determine, desirable)
mark(make, to)
advcl(desirable, make)
obj(make, explicit)
case(orthography, in)
det(orthography, a)
amod(orthography, Kikuyu)
obl(make, orthography)
punct(orthography, '')
punct(59, ()
nummod(do, 59)
punct(59, ))
punct(59, .)
mark(do, to)
advcl(find, do)
advmod(do, so)
punct(find, ,)
nsubj(find, he)
parataxis(be, find)
expl(find, it)
xcomp(find, necessary)
mark(examine, to)
csubj(necessary, examine)
det(part, the)
amod(part, relevant)
obj(examine, part)
case(phonology, of)
det(phonology, the)
nmod(part, phonology)
advmod(examine, thoroughly)
cc(detail, and)
case(detail, in)
conj(thoroughly, detail)
punct(be, .)
case(process, in)
det(process, the)
obl(develop, process)
punct(develop, ,)
nsubj(develop, he)
root(ROOT, develop)
det(observation, some)
advmod(significant, very)
amod(observation, significant)
obj(develop, observation)
case(problem, about)
nmod(observation, problem)
case(sort, of)
det(sort, a)
nmod(problem, sort)
nsubj(difficult, that)
cop(difficult, be)
advmod(difficult, often)
acl:relcl(sort, difficult)
punct(develop, . )
det(few, a)
nsubj(interest, few)
case(example, of)
nmod:poss(example, he)
nmod(few, example)
cop(interest, be)
case(interest, of)
advmod(great, very)
amod(interest, great)
root(ROOT, interest)
punct(discussion, ,)
cc(discussion, and)
det(discussion, the)
amod(discussion, whole)
conj(interest, discussion)
case(importance, of)
det(importance, some)
nmod(discussion, importance)
case(theory, for)
nmod(importance, theory)
punct(interest, .)
nmod:poss(recommendation, he)
amod(recommendation, orthographic)
nsubj(be, recommendation)
root(ROOT, be)
det(acceptance, no)
amod(acceptance, simplistic)
nsubj(be, acceptance)
case(phonemics, of)
nmod(acceptance, phonemics)
case(hand, on)
det(hand, the)
nummod(hand, one)
nmod(acceptance, hand)
cc(superficiality, or)
case(superficiality, of)
conj(hand, superficiality)
case(other, on)
det(other, the)
nmod(superficiality, other)
punct(be, .)
advmod(weigh, Rather)
nsubj(weigh, he)
root(ROOT, weigh)
det(fact, each)
amod(fact, phonologic)
obj(weigh, fact)
case(light, in)
det(light, the)
obl(weigh, light)
case(usefulness, of)
nmod:poss(usefulness, its)
amod(usefulness, orthographic)
nmod(light, usefulness)
punct(weigh, .)
nsubj(conclude, he)
root(ROOT, conclude)
mark(make, that)
det(change, some)
nsubj:pass(make, change)
aux(make, can)
aux:pass(make, be)
ccomp(conclude, make)
case(orthography, in)
det(orthography, the)
amod(orthography, current)
obl(make, orthography)
nsubj(improve, which)
aux(improve, will)
advmod(improve, appreciably)
acl:relcl(orthography, improve)
nmod:poss(usefulness, its)
obj(improve, usefulness)
punct(hesitate, ,)
cc(hesitate, but)
conj(make, hesitate)
mark(suggest, to)
xcomp(hesitate, suggest)
amod(device, precise)
amod(device, graphic)
obj(suggest, device)
mark(effect, to)
advcl(suggest, effect)
det(change, these)
obj(effect, change)
punct(conclude, . )
nsubj(hope, I)
root(ROOT, hope)
nmod:poss(suggestion, he)
nsubj:pass(give, suggestion)
aux:pass(give, be)
ccomp(hope, give)
det(consideration, the)
obj(give, consideration)
nsubj(deserve, they)
acl:relcl(consideration, deserve)
case(circle, in)
amod(circle, Kikuyu)
obl(deserve, circle)
punct(hope, .)
nsubj(exhaust, this)
punct(exhaust, ,)
advmod(exhaust, however)
punct(exhaust, ,)
aux(exhaust, will)
advmod(exhaust, not)
root(ROOT, exhaust)
nmod:poss(usefulness, they)
amod(usefulness, practical)
obj(exhaust, usefulness)
punct(exhaust, ,)
mark(indicate, as)
nsubj(indicate, they)
advmod(indicate, rather)
advmod(indicate, clearly)
advcl(exhaust, indicate)
det(investigation, what)
amod(investigation, thorough)
amod(investigation, phonologic)
nsubj(contribute, investigation)
aux(contribute, can)
ccomp(indicate, contribute)
case(design, to)
compound(design, orthography)
obl(contribute, design)
punct(exhaust, .)
nsubj(need, we)
root(ROOT, need)
amod(study, many)
amod(study, more)
obj(need, study)
case(sort, of)
det(sort, this)
nmod(study, sort)
mark(be, if)
det(design, the)
nsubj(be, design)
case(language, of)
amod(language, write)
nmod(design, language)
advcl(need, be)
mark(put, to)
aux:pass(put, be)
xcomp(be, put)
case(basis, on)
det(basis, a)
compound(basis, sound)
obl(put, basis)
punct(need, .)
nummod(paper, one)
amod(paper, other)
nsubj(deal, paper)
root(ROOT, deal)
case(problem, with)
det(problem, a)
amod(problem, phonologic)
obl(deal, problem)
punct(deal, :)
compound(Harmony, Vowel)
root(ROOT, Harmony)
case(Igbo, in)
nmod(Harmony, Igbo)
punct(Harmony, ,)
case(J., by)
nmod(Harmony, J.)
flat(J., Carnochan)
punct(Harmony, .)
nsubj(restate, this)
root(ROOT, restate)
det(fact, the)
advmod(know, already)
advmod(know, widely)
amod(fact, know)
obj(restate, fact)
case(term, in)
nmod(fact, term)
case(prosody, of)
nmod(term, prosody)
punct(restate, .)
case(restatement, as)
det(restatement, a)
obl(make, restatement)
expl(make, it)
root(ROOT, make)
advmod(contribution, only)
det(contribution, a)
amod(contribution, small)
obj(make, contribution)
case(knowledge, to)
nmod(contribution, knowledge)
case(Igbo, of)
nmod(knowledge, Igbo)
punct(make, .)
cc(seem, but)
nsubj(seem, it)
aux(seem, would)
root(ROOT, seem)
advmod(intend, more)
xcomp(seem, intend)
case(tract, as)
det(tract, a)
obl(intend, tract)
acl(tract, advocate)
det(theory, the)
amod(theory, prosodic)
obj(advocate, theory)
case(paper, than)
det(paper, a)
nmod(theory, paper)
acl(paper, direct)
case(problem, to)
det(problem, the)
amod(problem, specific)
obl(direct, problem)
case(phonology, of)
amod(phonology, Igbo)
nmod(problem, phonology)
punct(seem, .)
det(paper, the)
nsubj(have, paper)
root(ROOT, have)
det(value, a)
amod(value, certain)
obj(have, value)
case(introduction, as)
det(introduction, a)
advmod(easy, comparatively)
amod(introduction, easy)
nmod(value, introduction)
case(approach, to)
det(approach, this)
nmod(introduction, approach)
punct(have, ,)
advmod(treat, particularly)
mark(treat, since)
nsubj(treat, it)
advcl(have, treat)
det(phenomenon, a)
advmod(simple, fairly)
amod(phenomenon, simple)
cc(straightforward, and)
conj(simple, straightforward)
obj(treat, phenomenon)
advmod(possible, where)
expl(possible, it)
cop(possible, be)
acl:relcl(phenomenon, possible)
mark(compare, to)
csubj(possible, compare)
obj(compare, it)
case(statement, with)
det(statement, a)
advmod(traditional, more)
amod(statement, traditional)
punct(structural, ()
mark(structural, though)
advmod(structural, not)
conj(traditional, structural)
punct(structural, ))
obl(compare, statement)
punct(have, .)
nsubj(show, it)
aux(show, do)
root(ROOT, show)
nummod(feature, one)
obj(show, feature)
case(system, of)
det(system, the)
nmod(feature, system)
nsubj:pass(describe, that)
aux(describe, have)
advmod(describe, not)
aux:pass(describe, be)
advmod(describe, previously)
acl:relcl(system, describe)
punct(show, .)
cc(demonstrate, but)
nsubj(do, it)
aux(demonstrate, do)
advmod(demonstrate, not)
punct(demonstrate, ,)
mark(claim, as)
nsubj(claim, it)
advcl(demonstrate, claim)
punct(demonstrate, ,)
root(ROOT, demonstrate)
mark(treat, that)
nsubj:pass(treat, this)
aux(treat, could)
advmod(treat, not)
aux:pass(treat, be)
ccomp(demonstrate, treat)
case(method, by)
amod(method, traditional)
obl(treat, method)
punct(demonstrate, .)
nsubj(seem, it)
root(ROOT, seem)
case(I, to)
obl(seem, I)
mark(can, that)
nsubj(can, it)
advmod(easily, rather)
advmod(can, easily)
ccomp(seem, can)
punct(seem, .)
nsubj(deal, five)
case(papers, of)
det(papers, the)
nmod(five, papers)
root(ROOT, deal)
case(problem, with)
amod(problem, grammatical)
obl(deal, problem)
punct(deal, .)
case(whole, on)
det(whole, the)
obl(maintain, whole)
nsubj(maintain, they)
root(ROOT, maintain)
advmod(maintain, much)
det(standard, the)
amod(standard, same)
amod(standard, high)
obj(maintain, standard)
punct(difficult, ,)
cc(difficult, but)
nsubj(difficult, they)
cop(difficult, be)
advmod(more, much)
advmod(difficult, more)
conj(maintain, difficult)
mark(discuss, to)
advcl(difficult, discuss)
case(detail, in)
obl(discuss, detail)
case(variety, because)
fixed(because, of)
nmod:poss(variety, they)
amod(variety, wider)
obl(discuss, variety)
case(matter, of)
amod(matter, subject)
nmod(variety, matter)
punct(maintain, .)
nmod:poss(comment, my)
nsubj(briefer, comment)
aux(briefer, must)
cop(briefer, be)
root(ROOT, briefer)
case(papers, than)
det(papers, the)
obl(briefer, papers)
advmod(briefer, deserve)
punct(briefer, .)
nsubj(write, W.)
flat(W., H.)
flat(W., Whiteley)
parataxis(briefer, write)
case(radical, on)
det(radical, the)
compound(radical, Verbal)
obl(write, radical)
case(Iraqw, in)
obl(write, Iraqw)
punct(write, .)
nsubj:pass(consider, this)
aux(consider, must)
aux:pass(consider, be)
root(ROOT, consider)
advmod(amendment, primarily)
det(amendment, a)
obj(consider, amendment)
cc(supplement, and)
conj(amendment, supplement)
case(description, to)
nmod:poss(description, he)
amod(description, early)
det(description, a)
amod(description, short)
nmod(amendment, description)
case(category, of)
compound(category, item)
punct(category, -)
nmod(description, category)
case(Iraqw, in)
nmod(description, Iraqw)
punct(consider, .)
nsubj(exhibit, it)
root(ROOT, exhibit)
advmod(exhibit, much)
det(technique, the)
amod(technique, same)
amod(technique, descriptive)
obj(exhibit, technique)
cc(open, and)
cop(open, be)
conj(exhibit, open)
case(criticism, to)
advmod(criticism, much)
det(criticism, the)
amod(criticism, same)
obl(open, criticism)
punct(exhibit, .)
det(treatment, the)
nsubj(seem, treatment)
root(ROOT, seem)
advmod(joint, unnecessarily)
amod(joint, loose)
punct(joint, -)
xcomp(seem, joint)
cc(complex, and)
conj(joint, complex)
punct(seem, ,)
advmod(lax, largely)
mark(lax, because)
det(method, the)
nsubj(lax, method)
cop(lax, be)
advcl(seem, lax)
cc(seem, and)
det(analysis, the)
nsubj(seem, analysis)
conj(lax, seem)
advmod(seem, never)
mark(push, to)
aux:pass(push, be)
xcomp(seem, push)
case(point, to)
det(point, a)
amod(point, satisfactory)
cc(even, or)
conj(satisfactory, even)
det(point, a)
amod(point, consistent)
compound(point, stop)
punct(point, -)
obl(push, point)
punct(seem, .)
expl(be, there)
root(ROOT, be)
amod(stem, more)
nsubj(be, stem)
case(item, per)
nmod(stem, item)
case(Athabascan, in)
nmod(stem, Athabascan)
punct(stem, ,)
nsubj(express, which)
acl:relcl(stem, express)
det(fact, the)
obj(express, fact)
mark(undergone, that)
det(language, the)
amod(language, Athabascan)
nsubj(undergone, language)
aux(undergone, have)
acl(fact, undergone)
advmod(more, somewhat)
amod(change, more)
obj(undergone, change)
mark(diverge, in)
acl(change, diverge)
case(proto-athabascan, from)
obl(diverge, proto-athabascan)
case(language, than)
det(language, the)
compound(language, Yokuts)
obl(diverge, language)
case(proto-yokut, from)
nmod(language, proto-yokut)
punct(be, .)
nsubj(be, this)
aux(be, may)
root(ROOT, be)
mark(begin, because)
det(divergence, the)
amod(divergence, Athabascan)
nsubj(begin, divergence)
advcl(be, begin)
advmod(begin, earlier)
punct(begin, ;)
punct(begin, ;)
cc(again, or)
advmod(spread, again)
mark(spread, because)
det(language, the)
amod(language, Athabascan)
nsubj(spread, language)
advcl(begin, spread)
case(territory, over)
det(territory, a)
advmod(much, very)
advmod(larger, much)
amod(territory, larger)
obl(spread, territory)
punct(area, ()
case(area, include)
nummod(area, three)
advmod(separate, wholly)
amod(area, separate)
nmod(territory, area)
punct(area, ))
punct(area, ;)
punct(area, ;)
cc(both, or)
conj(area, both)
punct(be, .)
det(differentiation, the)
nsubj(greater, differentiation)
punct(greater, ,)
advmod(greater, however)
punct(greater, ,)
cop(greater, be)
advmod(greater, not)
advmod(much, very)
advmod(greater, much)
root(ROOT, greater)
punct(greater, ,)
mark(show, as)
advcl(greater, show)
case(fact, by)
det(fact, the)
obl(show, fact)
mark(show, that)
nsubj(show, Athabascan)
acl(fact, show)
nummod(stem, 3.46)
obj(show, stem)
case(slot, per)
compound(slot, meaning)
nmod(stem, slot)
case(2.75, as)
fixed(as, against)
obl(show, 2.75)
case(Yokuts, for)
nmod(2.75, Yokuts)
punct(show, ,)
case(number, with)
det(number, a)
advmod(greater, slightly)
amod(number, greater)
obl(show, number)
case(language, of)
nmod(number, language)
acl(language, represent)
case(sample, in)
nmod:poss(sample, we)
obl(represent, sample)
punct(sample, :)
appos(sample, 24)
case(21, as)
case(21, against)
nmod(24, 21)
punct(greater, . )
punct(become, ()
case(deduction, on)
obl(become, deduction)
case(eighth, of)
nummod(eighth, one)
punct(eighth, -)
nmod(deduction, eighth)
case(3.46, from)
nmod(eighth, 3.46)
punct(become, ,)
det(rate, the)
compound(rate, stem)
cc(item, /)
conj(stem, item)
nsubj(become, rate)
root(ROOT, become)
obj(become, 3.03)
case(2.75, against)
nmod(3.03, 2.75)
case(number, in)
amod(number, equivalent)
obl(become, number)
case(language, of)
nmod(number, language)
punct(become, .)
punct(become, ))
det(fact, these)
amod(fact, general)
nsubj:pass(mention, fact)
aux:pass(mention, be)
root(ROOT, mention)
mark(make, to)
advcl(mention, make)
xcomp(make, clear)
mark(similar, that)
det(situation, the)
amod(situation, total)
nsubj(similar, situation)
case(family, in)
det(family, the)
nummod(family, two)
nmod(situation, family)
cop(similar, be)
ccomp(clear, similar)
advmod(similar, enough)
mark(warrant, to)
advcl(similar, warrant)
obj(warrant, comparison)
punct(mention, .)
det(difference, the)
amod(difference, greatest)
nsubj(difference, difference)
case(set, in)
det(set, the)
nummod(set, two)
nmod(difference, set)
case(figure, of)
nmod(set, figure)
cop(difference, be)
case(difference, due)
fixed(due, to)
root(ROOT, difference)
case(set, in)
det(set, the)
nummod(set, two)
nmod(difference, set)
case(list, of)
nmod(set, list)
acl(set, use)
punct(difference, .)
det(difference, these)
nsubj(fact, difference)
case(result, in)
compound(result, turn)
nmod(difference, result)
case(fact, from)
det(fact, the)
root(ROOT, fact)
mark(build, that)
nmod:poss(vocabulary, my)
compound(vocabulary, Yokuts)
nsubj:pass(build, vocabulary)
aux:pass(build, be)
acl(fact, build)
case(term, up)
case(term, of)
obl(build, term)
acl(term, select)
advmod(select, mainly)
mark(insure, to)
advcl(select, insure)
obj(insure, unambiguity)
case(meaning, of)
compound(meaning, English)
nmod(unambiguity, meaning)
case(informant, between)
amod(informant, illiterate)
nmod(meaning, informant)
cc(myself, and)
conj(informant, myself)
punct(informant, ,)
case(area, within)
det(area, a)
amod(area, compact)
cc(uniform, and)
conj(compact, uniform)
amod(area, territorial)
nmod(informant, area)
punct(base, ,)
cc(base, but)
mark(base, that)
nmod:poss(vocabulary, Hoijer)
case(Hoijer, 's)
nsubj:pass(base, vocabulary)
aux:pass(base, be)
conj(area, base)
case(list, on)
nmod:poss(list, swadesh)
case(swadesh, 's)
amod(list, second)
amod(list, glottochronological)
obl(base, list)
nsubj(aim, which)
acl:relcl(list, aim)
mark(eliminate, at)
advcl(aim, eliminate)
det(item, all)
obj(eliminate, item)
nsubj:pass(determine, which)
aux(determine, might)
aux:pass(determine, be)
advmod(determine, culturally)
cc(geographically, or)
conj(culturally, geographically)
acl:relcl(item, determine)
punct(fact, .)
nsubj(try, swadesh)
case(short, in)
nmod(swadesh, short)
aux(try, be)
root(ROOT, try)
mark(develop, to)
xcomp(try, develop)
det(list, a)
amod(list, basic)
obj(develop, list)
nsubj(universal, that)
cop(universal, be)
acl:relcl(list, universal)
punct(try, ;)
punct(try, ;)
nsubj(one, I)
punct(one, ,)
appos(list, one)
nsubj:pass(adapt, that)
aux:pass(adapt, be)
advmod(adapt, specifically)
acl:relcl(one, adapt)
case(Valley, to)
det(Valley, the)
compound(Valley, San)
flat(San, joaquin)
obl(adapt, Valley)
punct(try, .)
det(result, the)
nsubj(be, result)
root(ROOT, be)
mark(include, that)
nsubj(include, I)
ccomp(be, include)
nummod(name, 70)
compound(name, animal)
obj(include, name)
punct(swadesh, ,)
cc(4, but)
conj(name, swadesh)
advmod(4, only)
conj(swadesh, 4)
punct(include, ;)
punct(include, ;)
cc(plant, and)
advmod(similarly, somewhat)
advmod(plant, similarly)
case(plant, for)
conj(include, plant)
punct(16, ,)
conj(plant, 16)
case(4, as)
case(4, against)
nummod(swadesh, 4)
punct(swadesh, .)
nmod(plant, swadesh)
punct(feel, ,)
cc(Hoijer, and)
advmod(Hoijer, therefore)
nsubj(feel, Hoijer)
punct(feel, ,)
parataxis(be, feel)
xcomp(feel, compel)
mark(omit, to)
xcomp(compel, omit)
det(term, all)
obj(omit, term)
acl(term, denote)
obj(denote, species)
cc(genera, or)
advmod(genera, even)
conj(species, genera)
punct(ox, ()
appos(genera, ox)
punct(vulture, ,)
conj(ox, vulture)
punct(salmon, ,)
conj(ox, salmon)
punct(pine, ,)
amod(pine, yellow)
conj(ox, pine)
punct(manzanita, ,)
conj(ox, manzanita)
punct(ox, ))
punct(ox, ;)
punct(restrict, ;)
nmod:poss(class, they)
nsubj:pass(restrict, class)
case(term, of)
compound(term, animal)
cc(plant, and)
conj(animal, plant)
nmod(class, term)
aux:pass(restrict, be)
parataxis(be, restrict)
case(generalization, to)
obl(restrict, generalization)
cc(part, or)
amod(part, recurrent)
conj(generalization, part)
punct(fish, ()
appos(part, fish)
punct(bird, ,)
conj(fish, bird)
punct(tree, ,)
conj(fish, tree)
punct(grass, ,)
conj(fish, grass)
punct(horn, ,)
conj(fish, horn)
punct(tail, ,)
conj(fish, tail)
punct(bark, ,)
conj(fish, bark)
punct(root, ,)
conj(fish, root)
punct(root, ))
punct(be, .)
det(group, the)
nsubj(non-comparable, group)
cop(non-comparable, be)
advmod(non-comparable, therefore)
advmod(non-comparable, really)
root(ROOT, non-comparable)
case(content, in)
obl(non-comparable, content)
cc(size, as)
fixed(as, well)
fixed(as, as)
case(size, in)
conj(non-comparable, size)
punct(non-comparable, .)
amod(class, other)
nsubj:pass(include, class)
aux:pass(include, be)
root(ROOT, include)
advmod(myself, only)
case(myself, by)
obl(include, myself)
punct(interrogative, ()
appos(include, interrogative)
punct(adverb, ,)
conj(interrogative, adverb)
punct(interrogative, ))
cc(swadesh, or)
advmod(swadesh, only)
case(swadesh, by)
conj(interrogative, swadesh)
cc(Hoijer, and)
conj(swadesh, Hoijer)
punct(pronoun, ()
appos(swadesh, pronoun)
punct(pronoun, ,)
conj(pronoun, demonstrative)
punct(pronoun, ))
punct(include, .)
obj(leave, what)
nsubj(leave, we)
aux(leave, have)
csubj(class, leave)
mark(comparable, as)
advmod(comparable, reasonably)
advcl(leave, comparable)
cop(class, be)
nummod(class, four)
root(ROOT, class)
punct(class, :)
punct(1, ()
nummod(part, 1)
punct(1, ))
compound(part, body)
appos(class, part)
cc(product, and)
conj(part, product)
punct(part, ,)
nsubj(come, which)
case(representation, with)
det(representation, a)
advmod(even, proportionally)
advmod(even, nearly)
advmod(representation, even)
nmod(part, representation)
punct(term, ()
nummod(term, 51)
appos(representation, term)
case(253, out)
case(253, of)
nmod(term, 253)
punct(term, ,)
nummod(term, 25)
case(100, out)
case(100, of)
nmod(25, 100)
punct(25, ))
acl:relcl(representation, come)
advmod(come, out)
case(ratio, with)
advmod(even, nearly)
advmod(ratio, even)
obl(come, ratio)
punct(come, ;)
punct(come, ;)
nummod(ratio, 2.6)
cc(2.7, and)
conj(2.6, 2.7)
punct(Nature, ;)
punct(Nature, ;)
punct(2, ()
nummod(Nature, 2)
punct(2, ))
nsubj(come, Nature)
punct(term, ()
nummod(term, 29)
appos(Nature, term)
case(17, against)
nmod(term, 17)
punct(term, ))
punct(ratio, ,)
appos(Nature, ratio)
nummod(ratio, 3.3)
case(4.1, versus)
nmod(3.3, 4.1)
punct(ratio, ;)
punct(ratio, ;)
punct(adjective, ()
nummod(adjective, 3)
punct(adjective, ))
appos(Nature, adjective)
punct(16, ()
appos(adjective, 16)
punct(term, ,)
nummod(term, 15)
appos(adjective, term)
punct(term, ))
punct(ratio, ,)
appos(adjective, ratio)
nummod(ratio, 3.9)
case(4.7, versus)
nmod(3.9, 4.7)
punct(ratio, ;)
punct(ratio, ;)
punct(4, ()
nummod(verb, 4)
punct(4, ))
parataxis(adjective, verb)
punct(term, ()
nummod(term, 9)
punct(term, ,)
nummod(term, 22)
appos(verb, term)
punct(term, ))
punct(ratio, ,)
appos(verb, ratio)
nummod(ratio, 4.0)
punct(ratio, versus)
root(ROOT, 3.4)
punct(3.4, .)
expl(see, it)
aux(see, will)
aux:pass(see, be)
root(ROOT, see)
mark(come, that)
mark(similar, where)
det(scope, the)
nsubj(similar, scope)
cop(similar, be)
advcl(see, similar)
punct(come, ,)
det(ratio, the)
amod(ratio, Athabascan)
nsubj(come, ratio)
ccomp(see, come)
advmod(come, out)
advmod(higher, somewhat)
xcomp(come, higher)
punct(come, ()
mark(ought, as)
advmod(ought, indeed)
nsubj(ought, they)
advcl(come, ought)
case(ratio, to)
case(ratio, with)
det(ratio, a)
amod(ratio, total)
obl(come, ratio)
case(2.8, of)
nmod(ratio, 2.8)
case(3.5, as)
case(3.5, against)
nmod(ratio, 3.5)
cc(4, or)
conj(3.5, 4)
punct(3.5, :)
nummod(3.5, 5)
punct(5, ))
case(verb, except)
case(verb, for)
nmod(ratio, verb)
punct(verb, ,)
advmod(lower, where)
advmod(lower, alone)
det(ratio, the)
amod(ratio, Athabascan)
nsubj(lower, ratio)
cop(lower, be)
acl:relcl(verb, lower)
punct(see, .)
det(exception, this)
nsubj:pass(connect, exception)
aux(connect, may)
aux:pass(connect, be)
root(ROOT, connect)
case(use, with)
nmod:poss(use, Hoijer)
case(Hoijer, 's)
obl(connect, use)
case(percentage, of)
det(percentage, a)
advmod(higher, much)
amod(percentage, higher)
nmod(use, percentage)
case(verb, of)
nmod(percentage, verb)
punct(percentage, :)
nummod(%, 22)
appos(percentage, %)
case(list, of)
nmod:poss(list, he)
amod(list, total)
nmod(%, list)
case(%, as)
fixed(as, against)
nummod(%, 3.5)
nmod(%, %)
case(mine, in)
nmod(%, mine)
punct(connect, .)
cc(durability, or)
det(exception, the)
nsubj(durability, exception)
aux(durability, may)
cop(durability, be)
case(durability, due)
fixed(due, to)
det(durability, a)
amod(durability, particular)
root(ROOT, durability)
amod(durability, peculiar)
case(verb, to)
det(verb, the)
amod(verb, Athabascan)
obl(peculiar, verb)
punct(durability, .)
amod(word, more)
root(ROOT, word)
compound(ratio, class)
conj(word, ratio)
acl(ratio, determine)
case(language, in)
amod(language, more)
obl(determine, language)
aux(answer, will)
advmod(doubt, no)
obl:npmod(answer, doubt)
advmod(answer, ultimately)
parataxis(word, answer)
det(question, the)
obj(answer, question)
punct(answer, . )
nummod(conceivable, 5)
punct(5, .)
mark(differ, if)
nsubj(differ, word)
nsubj(differ, class)
advcl(conceivable, differ)
case(resistance, in)
nmod:poss(resistance, they)
obl(differ, resistance)
cc(liability, or)
conj(resistance, liability)
case(replacement, to)
compound(replacement, stem)
nmod(resistance, replacement)
case(slot, within)
compound(slot, meaning)
nmod(replacement, slot)
punct(conceivable, ,)
expl(conceivable, it)
cop(conceivable, be)
root(ROOT, conceivable)
mark(differ, that)
amod(meaning, individual)
nsubj(differ, meaning)
advmod(differ, also)
csubj(conceivable, differ)
case(tran, with)
amod(tran, fair)
compound(tran, consistence)
obl(differ, tran)
punct(tran, -)
advmod(differ, lingually)
punct(conceivable, .)
nmod:poss(Yokuts, Hoijer)
case(Hoijer, 's)
amod(Yokuts, Athabascan)
cc(my, and)
conj(Athabascan, my)
nsubj(share, Yokuts)
root(ROOT, share)
nummod(meaning, 71)
amod(meaning, identical)
obj(share, meaning)
punct(meaning, ()
case(allowance, with)
nmod(meaning, allowance)
case(synonym, for)
amod(synonym, several)
case(synonym, near)
punct(synonym, -)
nmod(allowance, synonym)
case(belly, like)
compound(belly, stomach)
punct(belly, -)
nmod(synonym, belly)
punct(big-large, ,)
conj(belly, big-large)
punct(belly, ,)
advmod(far, long)
punct(far, -)
conj(belly, far)
punct(much, ,)
amod(much, many)
punct(much, -)
conj(far, much)
punct(die, ,)
conj(much, die)
punct(dead, -)
amod(die, dead)
punct(say-speak, ,)
conj(dead, say-speak)
punct(say-speak, ))
punct(tabulate, .)
case(Yokuts, for)
obl(tabulate, Yokuts)
punct(tabulate, ,)
nsubj(tabulate, I)
parataxis(share, tabulate)
det(item, these)
nummod(item, 71)
obj(tabulate, item)
case(column, in)
nummod(column, five)
obl(tabulate, column)
punct(tabulate, ,)
mark(express, accord)
fixed(accord, as)
nsubj:pass(express, they)
aux:pass(express, be)
advcl(tabulate, express)
case(1, by)
obl(express, 1)
punct(2, ,)
conj(1, 2)
punct(3, ,)
conj(1, 3)
punct(4, ,)
conj(1, 4)
punct(stem, ,)
cc(stem, and)
advmod(4, more)
fixed(more, than)
nummod(stem, 4)
conj(1, stem)
punct(share, .)
det(total, the)
nsubj(uneven, total)
case(category, for)
det(category, these)
nummod(category, five)
nmod(total, category)
cop(uneven, be)
advmod(uneven, not)
advmod(uneven, too)
root(ROOT, uneven)
punct(uneven, ,)
advmod(20, namely)
appos(uneven, 20)
punct(20, ,)
conj(20, 15)
punct(11, ,)
conj(20, 11)
punct(16, ,)
conj(20, 16)
punct(respectively, ,)
compound(16, 9)
advmod(20, respectively)
punct(uneven, .)
case(Athabascan, for)
obl(uneven, Athabascan)
punct(uneven, ,)
case(range, with)
det(range, a)
amod(range, greater)
obl(identical, range)
case(stem, of)
nmod(range, stem)
punct(identical, ,)
det(two, the)
amod(two, first)
nsubj(identical, two)
case(column, of)
nummod(column, five)
amod(column, corresponding)
nmod(two, column)
cop(identical, be)
parataxis(uneven, identical)
punct(1, ,)
nummod(identical, 1)
cc(2, and)
conj(1, 2)
conj(identical, stem)
punct(identical, ;)
punct(identical, ;)
det(other, the)
nummod(other, three)
nsubj(have, other)
parataxis(identical, have)
mark(spread, to)
aux:pass(spread, be)
xcomp(have, spread)
advmod(spread, somewhat)
punct(head, ,)
cc(head, and)
aux:pass(head, be)
conj(have, head)
advmod(Af, respectively)
obj(head, Af)
punct(head, ;)
punct(head, ;)
appos(Af, Af)
punct(head, ;)
punct(stem, ;)
cc(stem, and)
compound(stem, Af)
conj(head, stem)
punct(uneven, . )
mark(seem, while)
det(limit, the)
amod(limit, particular)
nsubj(seem, limit)
case(grouping, of)
det(grouping, these)
nmod(limit, grouping)
aux(seem, may)
advcl(express, seem)
advmod(arbitrary, artificially)
xcomp(seem, arbitrary)
punct(express, ,)
nsubj(express, they)
aux(express, do)
advmod(express, fairly)
root(ROOT, express)
det(group, a)
amod(group, corresponding)
obj(express, group)
case(material, of)
advmod(variable, more)
amod(material, variable)
nmod(group, material)
punct(eventuate, ,)
cc(eventuate, and)
nsubj(eventuate, they)
conj(express, eventuate)
advmod(eventuate, also)
case(class, in)
nummod(class, five)
obl(eventuate, class)
punct(eventuate, ,)
case(scale, along)
det(scale, a)
amod(scale, similar)
obl(eventuate, scale)
punct(eventuate, ,)
advcl(eventuate, contain)
advmod(equal, approximately)
amod(number, equal)
obj(contain, number)
case(case, of)
nmod(number, case)
punct(number, ,)
advmod(19, namely)
appos(number, 19)
punct(19, ,)
compound(19, 14)
punct(19, ,)
compound(19, 15)
punct(15, ,)
compound(12, 11)
punct(12, ,)
conj(19, 12)
case(Athabascan, in)
nmod(12, Athabascan)
punct(12, .)
mark(count, when)
advmod(count, now)
nsubj(count, we)
advcl(contain, count)
det(frequency, the)
obj(count, frequency)
case(item, of)
det(item, the)
nummod(item, 71)
nmod(frequency, item)
case(family, in)
det(family, the)
nummod(family, two)
compound(family, language)
nmod(item, family)
acl(family, appear)
case(column, in)
det(column, the)
amod(column, same)
obl(appear, column)
cc(grade, or)
conj(column, grade)
punct(column, ,)
cc(column, or)
nummod(column, one)
conj(column, column)
cc(grade, or)
conj(column, grade)
advmod(column, apart)
punct(two, ,)
cc(three, or)
obl:npmod(apart, two)
cc(three, or)
conj(two, three)
cc(four, or)
conj(two, four)
punct(find, ,)
nsubj(find, we)
conj(apart, find)
det(difference, these)
obj(find, difference)
punct(find, :)
nummod(summarize, Af)
punct(Af, .)
det(distribution, this)
nsubj:pass(summarize, distribution)
aux(summarize, can)
aux:pass(summarize, be)
root(ROOT, summarize)
mark(average, by)
advcl(summarize, average)
det(distance, the)
obj(average, distance)
case(grade, in)
obl(average, grade)
advmod(average, apart)
punct(summarize, :)
root(ROOT, Af)
punct(Af, ;)
punct(Af, ;)
nsubj(divide, which)
punct(divide, ,)
parataxis(Af, divide)
obl(divide, by)
nsubj(give, Af)
root(ROOT, give)
det(mean, a)
obj(give, mean)
case(grade, of)
nummod(grade, 1.07)
nmod(mean, grade)
advmod(give, apart)
punct(give, .)
mark(concordant, if)
det(distribution, the)
nsubj(concordant, distribution)
case(item, of)
det(item, the)
nummod(item, 71)
nmod(distribution, item)
cop(concordant, be)
advmod(concordant, wholly)
advcl(0, concordant)
case(family, in)
det(family, the)
nummod(family, two)
obl(concordant, family)
punct(0, ,)
det(distance, the)
nsubj(0, distance)
aux(0, would)
advmod(0, of)
fixed(of, course)
cop(0, be)
root(ROOT, 0)
punct(0, .)
mark(random, if)
nsubj(random, it)
cop(random, be)
advmod(random, wholly)
advcl(2.0, random)
cc(unrelated, and)
conj(random, unrelated)
punct(2.0, ,)
nsubj(2.0, it)
aux(2.0, would)
cop(2.0, be)
root(ROOT, 2.0)
punct(2.0, ,)
advcl(2.0, assume)
det(class, the)
nummod(class, five)
nsubj(equal, class)
cop(equal, be)
ccomp(assume, equal)
case(n, in)
obl(equal, n)
punct(equal, ,)
nsubj(approximately, which)
advmod(equal, approximately)
nsubj(be, they)
cop(approximately, be)
punct(2.0, .)
det(mean, the)
amod(mean, actual)
nsubj(evident, mean)
case(1.07, of)
nmod(mean, 1.07)
cop(halfway, be)
advmod(halfway, about)
nmod(mean, halfway)
case(0, between)
nmod(halfway, 0)
case(correlation, of)
amod(correlation, complete)
nmod(0, correlation)
cc(2.0, and)
conj(correlation, 2.0)
case(correlation, of)
det(correlation, no)
nmod(2.0, correlation)
punct(evident, ,)
nsubj(evident, it)
cop(evident, be)
root(ROOT, evident)
mark(be, that)
expl(be, there)
ccomp(evident, be)
det(degree, a)
advmod(fair, pretty)
amod(degree, fair)
nsubj(be, degree)
case(similarity, of)
nmod(degree, similarity)
case(behavior, in)
det(behavior, the)
nmod(degree, behavior)
advmod(item, even)
case(item, of)
amod(item, particular)
amod(item, individual)
nmod(behavior, item)
mark(mean, of)
acl(item, mean)
case(regards, as)
obl(mean, regards)
amod(term, long)
punct(term, -)
compound(displacement, term)
compound(displacement, stem)
appos(regards, displacement)
compound(displacement, . )
nummod(. , 6)
punct(. , .)
case(1960, in)
obl(publish, 1960)
punct(publish, ,)
nsubj(publish, David)
flat(David, D.)
flat(David, Thomas)
parataxis(evident, publish)
compound(vocabulary, Basic)
obj(publish, vocabulary)
case(language, in)
det(language, some)
compound(language, Mon-Khmer)
root(ROOT, language)
punct(AL, ()
appos(language, AL)
nummod(AL, 2)
punct(AL, ,)
appos(AL, no.)
nummod(no., 3)
punct(no., ,)
appos(no., pp.)
nummod(pp., 7)
case(11, -)
nmod(7, 11)
punct(pp., ))
punct(compare, ,)
nsubj(compare, which)
acl:relcl(language, compare)
nummod(language, 8)
compound(language, Mon-Khmer)
obj(compare, language)
case(data, with)
det(data, the)
compound(data, i-)
compound(data, e)
compound(data, language)
nmod(language, data)
case(which, on)
obl(base, which)
nsubj(base, swadesh)
acl:relcl(data, base)
det(rate, the)
amod(rate, revise)
compound(rate, retention)
obj(base, rate)
punct(Af, ()
appos(rate, Af)
punct(Af, ))
case(place, in)
nmod(rate, place)
case(original, of)
nmod(place, original)
punct(Af, ()
appos(original, Af)
punct(Af, ))
punct(word, ,)
cc(word, and)
nmod:poss(word, he)
amod(word, revise)
nummod(word, 100)
conj(rate, word)
amod(list, basic)
amod(list, glottochronological)
nmod(word, list)
case(accuracy, in)
case(accuracy, towards)
compound(accuracy, Greater)
nmod(list, accuracy)
punct(IJAL, ()
appos(accuracy, IJAL)
nummod(IJAL, 21)
punct(IJAL, :)
punct(IJAL, :)
nummod(IJAL, 121)
case(137, -)
nmod(121, 137)
punct(137, ))
punct(finding, .)
nmod:poss(finding, Thomas)
case(Thomas, 's)
nsubj(be, finding)
cop(first, be)
punct(be, ,)
advmod(vary, first)
punct(vary, ,)
punct(vary, ``)
mark(vary, that)
det(item, the)
amod(item, individual)
nsubj(vary, item)
parataxis(word, vary)
advmod(vary, greatly)
cc(unpredictably, and)
conj(greatly, unpredictably)
case(persistence, in)
nmod:poss(persistence, they)
obl(vary, persistence)
punct(vary, '')
punct(vary, ;)
punct(vary, ;)
cc(unvary, but)
punct(unvary, ,)
advmod(unvary, second)
punct(unvary, ,)
punct(unvary, ``)
mark(unvary, that)
det(group, the)
amod(group, semantic)
nsubj(unvary, group)
cop(unvary, be)
advmod(unvary, surprisingly)
conj(vary, unvary)
case(persistence, in)
nmod:poss(persistence, they)
amod(persistence, average)
obl(unvary, persistence)
punct(unvary, '')
punct(k, ()
case(k, as)
fixed(as, between)
compound(k, M-)
obl(unvary, k)
cc(I, and)
conj(k, I)
punct(I, -)
appos(I, E)
punct(k, ))
punct(k, .)
nmod:poss(conclusion, he)
amod(conclusion, first)
nsubj(negative, conclusion)
punct(negative, ,)
case(behavior, on)
obl(negative, behavior)
case(item, of)
amod(item, individual)
nmod(behavior, item)
punct(negative, ,)
cop(negative, be)
root(ROOT, negative)
punct(negative, ,)
mark(positive, whereas)
nsubj(positive, mine)
punct(Ath., ()
case(Ath., on)
nmod(mine, Ath.)
cc(Yok., and)
conj(Ath., Yok.)
punct(Ath., ))
cop(positive, be)
advmod(positive, partially)
advcl(negative, positive)
punct(negative, .)
nmod:poss(conclusion, he)
amod(conclusion, second)
nsubj(agree, conclusion)
punct(conclusion, ,)
case(class, on)
amod(word, semantic)
compound(class, word)
nmod(conclusion, class)
punct(agree, ,)
root(ROOT, agree)
case(mine, with)
obl(agree, mine)
punct(agree, .)
det(conclusion, this)
amod(conclusion, second)
nsubj(present, conclusion)
punct(arrive, ,)
advmod(arrive, independently)
acl(conclusion, arrive)
obl(arrive, at)
case(study, by)
amod(study, independent)
obl(arrive, study)
case(material, of)
nmod(study, material)
case(pair, from)
nummod(pair, two)
nmod(study, pair)
case(family, of)
compound(family, language)
nmod(pair, family)
advmod(different, as)
amod(pair, different)
cc(remote, and)
conj(different, remote)
case(another, from)
nummod(another, one)
obl(different, another)
mark(ignore, as)
det(four, these)
nsubj(be, four)
aux:pass(ignore, be)
punct(ignore, ,)
aux(ignore, can)
advmod(ignore, not)
aux:pass(ignore, be)
advcl(present, ignore)
punct(present, .)
nsubj(present, Thomas)
advmod(present, also)
root(ROOT, present)
det(equation, a)
amod(equation, simple)
obj(present, equation)
mark(derive, for)
acl(equation, derive)
det(index, a)
obj(derive, index)
case(persistence, of)
nmod(index, persistence)
punct(index, ,)
nsubj(weight, which)
acl:relcl(index, weight)
advmod(only, not)
advmod(number, only)
det(number, the)
obj(weight, number)
case(stem, of)
nmod(number, stem)
punct(root, ()
punct(root, ')
appos(stem, root)
punct(root, ')
punct(root, ))
case(meaning, per)
obl(weight, meaning)
punct(frequency, ,)
cc(frequency, but)
nmod:poss(frequency, they)
amod(frequency, relative)
conj(root, frequency)
punct(present, .)
advmod(be, thus)
nmod:poss(value, he)
compound(value, persistence)
nsubj(be, value)
case(frequency, for)
det(frequency, some)
compound(frequency, stem)
nmod(value, frequency)
case(meaning, per)
nmod(frequency, meaning)
root(ROOT, be)
punct(be, :)
nsubj(identical, stem)
ccomp(be, identical)
case(language, in)
nummod(language, 8)
obl(identical, language)
punct(language, ,)
nummod(%, 100)
appos(language, %)
punct(identical, ;)
punct(identical, ;)
compound(frequency, stem)
conj(identical, frequency)
nummod(frequency, 7)
cc(1, and)
conj(frequency, 1)
punct(%, ,)
nummod(%, 86)
appos(frequency, %)
punct(frequency, ;)
punct(frequency, ;)
compound(frequency, stem)
parataxis(identical, frequency)
nummod(frequency, 4)
cc(4, and)
conj(frequency, 4)
punct(%, ,)
nummod(%, 64)
appos(frequency, %)
punct(frequency, ;)
punct(frequency, ;)
compound(frequency, stem)
appos(frequency, frequency)
nummod(frequency, 4)
punct(3, ,)
nummod(frequency, 3)
punct(%, ,)
cc(1, and)
conj(frequency, 1)
punct(%, ,)
nummod(%, 57)
appos(1, %)
punct(%, .)
nmod:poss(formula, he)
nsubj(have, formula)
aux(have, will)
parataxis(%, have)
mark(weigh, to)
aux:pass(weigh, be)
xcomp(have, weigh)
punct(alter, ,)
aux(alter, may)
aux:pass(alter, be)
conj(have, alter)
cc(improve, or)
conj(alter, improve)
punct(test, ,)
cc(test, and)
nsubj:pass(test, it)
aux(test, should)
aux:pass(test, be)
conj(alter, test)
case(body, on)
amod(body, additional)
obl(test, body)
case(material, of)
nmod(body, material)
punct(be, .)
cc(seem, but)
nsubj(seem, consideration)
case(frequency, of)
det(frequency, the)
nmod(consideration, frequency)
case(stem, of)
nmod(frequency, stem)
case(meaning, per)
amod(meaning, constant)
nmod(stem, meaning)
root(ROOT, seem)
mark(establish, to)
aux:pass(establish, be)
xcomp(seem, establish)
mark(have, as)
advcl(establish, have)
obj(have, significance)
case(situation, in)
amod(situation, comparative)
nmod(significance, situation)
case(relevance, with)
amod(relevance, diachronic)
cc(classificatory, and)
conj(diachronic, classificatory)
obl(have, relevance)
punct(seem, ;)
punct(seem, ;)
cc(way, and)
nsubj(way, Gleason)
advmod(way, presumably)
cop(way, be)
case(way, on)
det(way, the)
conj(seem, way)
case(contribution, with)
det(contribution, a)
amod(contribution, further)
nmod(way, contribution)
case(area, in)
det(area, this)
nmod(contribution, area)
punct(seem, .)
case(frequency, as)
fixed(as, to)
amod(frequency, relative)
obl(seem, frequency)
case(root, of)
amod(root, compete)
nmod(frequency, root)
punct(7, ()
appos(root, 7)
case(1, -)
nmod(7, 1)
case(4, vs.)
nmod(7, 4)
case(4, -)
nmod(4, 4)
punct(etc., ,)
conj(4, etc.)
punct(etc., ))
punct(seem, ,)
nsubj(seem, Thomas)
case(weight, with)
nmod:poss(weight, he)
punct(weight, ')
nmod(Thomas, weight)
punct(weight, ')
root(ROOT, seem)
mark(first, to)
cop(first, be)
det(first, the)
xcomp(seem, first)
mark(consider, to)
aux(consider, have)
advcl(first, consider)
det(significance, the)
obj(consider, significance)
nsubj(have, this)
aux(have, might)
acl:relcl(significance, have)
punct(seem, .)
det(problem, the)
nsubj(need, problem)
root(ROOT, need)
amod(exploration, further)
obj(need, exploration)
punct(need, . )
nsubj(conscious, I)
cop(conscious, be)
case(least, at)
obl(conscious, least)
root(ROOT, conscious)
case(distinction, of)
det(distinction, the)
obl(conscious, distinction)
case(presentation, in)
nmod:poss(presentation, my)
amod(presentation, full)
compound(presentation, Yokuts)
nmod(distinction, presentation)
nsubj(await, that)
acl:relcl(presentation, await)
obj(await, publication)
punct(publication, ,)
case(which, in)
obl(list, which)
punct(list, ,)
mark(list, in)
advcl(await, list)
punct(meaning, ')
nummod(stem, two)
punct(stem, -)
compound(meaning, stem)
obj(list, meaning)
punct(meaning, ')
punct(set, ,)
nsubj(set, I)
parataxis(conscious, set)
compound:prt(set, off)
case(asterisk, by)
obl(set, asterisk)
det(form, those)
obj(set, form)
case(which, in)
obl(Af, which)
nsubj(Af, N)
case(b, of)
compound(b, stem)
nmod(N, b)
cop(Af, be)
acl:relcl(form, Af)
case(a, of)
compound(a, stem)
nmod(Af, a)
case(3, /)
conj(a, 3)
punct(one, ,)
det(one, the)
amod(one, unasterisked)
conj(a, one)
acl(one, stand)
case(Af, for)
obl(stand, Af)
punct(one, ;)
punct(one, ;)
cc(Stems, or)
case(Stems, under)
punct(Stems, ')
nummod(Stems, four)
obl(set, Stems)
punct(Stems, ')
punct(set, ,)
nsubj(set, I)
parataxis(conscious, set)
compound:prt(set, off)
case(case, by)
compound(case, asterisk)
obl(set, case)
advmod(Af, where)
det(N, the)
amod(N, combine)
nsubj(Af, N)
case(stem, of)
nmod(N, stem)
nsubj(Af, Af)
cop(Af, be)
acl:relcl(case, Af)
punct(Af, .)
nummod(Af, 7)
punct(7, .)
det(finding, these)
parataxis(Af, finding)
punct(other, ,)
cc(other, and)
conj(finding, other)
nsubj:pass(develop, which)
aux(develop, will)
case(time, in)
obl(develop, time)
aux:pass(develop, be)
acl:relcl(other, develop)
punct(affect, ,)
aux(affect, will)
conj(develop, affect)
det(method, the)
obj(affect, method)
case(inquiry, of)
amod(inquiry, glottochronological)
nmod(method, inquiry)
punct(conscious, .)
mark(show, if)
amod(meaning, adjectival)
nsubj(show, meaning)
advcl(prove, show)
advmod(low, relatively)
amod(retentiveness, low)
obj(show, retentiveness)
case(stem, of)
nmod(retentiveness, stem)
punct(prove, ,)
mark(confident, as)
nsubj(confident, I)
cop(confident, be)
advcl(prove, confident)
aux(prove, will)
root(ROOT, prove)
mark(case, to)
cop(case, be)
det(case, the)
xcomp(prove, case)
case(language, in)
amod(language, most)
nmod(case, language)
case(world, of)
det(world, the)
nmod(language, world)
punct(include, ,)
advmod(include, why)
aux(include, should)
nmod:poss(list, we)
amod(list, basic)
nsubj(include, list)
parataxis(prove, include)
nummod(cent, 15)
compound(cent, per)
obj(include, cent)
case(form, of)
det(form, these)
amod(form, unstable)
nmod(cent, form)
punct(cent, ,)
cc(cent, but)
advmod(cent, only)
nummod(cent, 8)
compound(cent, per)
conj(cent, cent)
case(animal, of)
nmod(cent, animal)
cc(plant, and)
conj(animal, plant)
nsubj(replace, which)
acl:relcl(cent, replace)
advmod(more, much)
advmod(slowly, more)
advmod(replace, slowly)
punct(include, ?)
punct(include, ?)
aux(substitute, have)
nsubj(substitute, Hoijer)
advcl(lower, substitute)
case(slot, for)
nmod:poss(slot, he)
nummod(slot, 15)
amod(slot, adjectival)
obl(substitute, slot)
nummod(animal, 15)
amod(animal, good)
compound(item, animal)
cc(plant, and)
conj(animal, plant)
conj(slot, item)
punct(lower, ,)
nmod:poss(rate, he)
nsubj(lower, rate)
case(replacement, of)
compound(replacement, stem)
nmod(rate, replacement)
aux(lower, would)
aux(lower, have)
cop(lower, be)
root(ROOT, lower)
cc(age, and)
det(age, the)
conj(lower, age)
case(separation, of)
amod(language, Athabascan)
compound(separation, language)
nmod(age, separation)
conj(lower, smaller)
punct(lower, .)
cc(carry, and)
nsubj(carry, irrespective)
case(outcome, of)
det(outcome, the)
obl(irrespective, outcome)
case(century, in)
nmod(outcome, century)
acl(outcome, elapsed)
mark(split, since)
advcl(elapsed, split)
punct(carry, ,)
nsubj(carry, calculation)
advmod(carry, obviously)
root(ROOT, carry)
advmod(concordant, more)
amod(meaning, concordant)
cc(comparable, and)
conj(concordant, comparable)
obj(carry, meaning)
mark(deal, if)
nsubj(deal, they)
advcl(carry, deal)
case(unit, with)
det(unit, the)
advmod(stable, most)
amod(unit, stable)
obl(deal, unit)
case(one, than)
case(one, with)
advmod(unstable, variously)
amod(one, unstable)
nmod(unit, one)
punct(carry, .)
expl(evident, it)
cop(evident, be)
root(ROOT, evident)
mark(have, that)
nsubj(have, swadesh)
aux(have, have)
advmod(have, not)
advmod(have, only)
csubj(evident, have)
amod(experience, much)
obj(have, experience)
case(vocabulary, with)
amod(vocabulary, basic)
nmod(experience, vocabulary)
case(language, in)
amod(language, many)
nmod(vocabulary, language)
cc(acquire, but)
aux(acquire, have)
conj(have, acquire)
amod(tact, great)
obj(acquire, tact)
cc(feeling, and)
conj(tact, feeling)
case(behavior, for)
det(behavior, the)
amod(behavior, expectable)
obl(acquire, behavior)
case(item, of)
amod(item, lexical)
nmod(behavior, item)
punct(evident, .)
advmod(urge, why)
advmod(urge, then)
nsubj(urge, this)
root(ROOT, urge)
mark(include, to)
xcomp(urge, include)
amod(item, unstable)
obj(include, item)
case(list, in)
nmod:poss(list, he)
amod(list, basic)
obl(include, list)
punct(urge, ?)
punct(urge, ?)
expl(urge, it)
cop(urge, be)
det(urge, the)
root(ROOT, urge)
mark(obtain, to)
csubj(urge, obtain)
det(list, a)
obj(obtain, list)
case(free, as)
obl(obtain, free)
case(conditioning, of)
amod(conditioning, geographical)
cc(cultural, and)
conj(geographical, cultural)
obl(free, conditioning)
mark(possible, as)
advcl(free, possible)
punct(urge, .)
cc(why, and)
root(ROOT, why)
det(insistence, that)
nsubj(why, insistence)
punct(why, ?)
punct(why, ?)
nsubj(hope, it)
cop(hope, be)
det(hope, the)
root(ROOT, hope)
mark(attain, of)
acl(hope, attain)
det(list, a)
obj(attain, list)
case(item, of)
nmod(list, item)
case(occurrence, of)
amod(occurrence, universal)
nmod(item, occurrence)
punct(hope, .)
cc(become, but)
expl(become, it)
aux(become, be)
root(ROOT, become)
advmod(evident, increasingly)
xcomp(become, evident)
mark(snare, that)
det:predet(hope, such)
det(hope, a)
nsubj(snare, hope)
cop(snare, be)
det(snare, a)
ccomp(evident, snare)
punct(become, .)
root(ROOT, not)
mark(construct, that)
det:predet(list, such)
det(list, a)
nsubj:pass(construct, list)
aux(construct, can)
advmod(construct, not)
aux:pass(construct, be)
ccomp(not, construct)
punct(construct, ;)
punct(construct, ;)
cc(be, but)
mark(nearer, the)
advmod(come, nearer)
nsubj(come, it)
conj(construct, come)
mark(attain, to)
advcl(come, attain)
obj(attain, universality)
punct(significant, ,)
mark(significant, the)
advmod(significant, less)
parataxis(come, significant)
aux(linguistically, will)
nsubj(linguistically, it)
cop(linguistically, be)
advmod(significant, linguistically)
punct(not, .)
nsubj(tend, it)
aux(tend, be)
nsubj(tend, term)
aux(tend, will)
root(ROOT, tend)
mark(labile, to)
cop(labile, be)
xcomp(tend, labile)
cc(vague, or)
conj(labile, vague)
punct(fit, ,)
cc(fit, and)
nsubj(fit, they)
aux(fit, will)
conj(tend, fit)
amod(language, actual)
obj(fit, language)
advmod(fit, more)
cc(badly, and)
advmod(badly, more)
conj(more, badly)
punct(tend, .)
det(problem, the)
amod(problem, practical)
amod(problem, operational)
nsubj(establishment, problem)
case(lexicostatistatistics, of)
nmod(problem, lexicostatistatistics)
cop(establishment, be)
det(establishment, the)
root(ROOT, establishment)
case(list, of)
det(list, a)
amod(list, basic)
nmod(establishment, list)
case(item, of)
nmod(list, item)
mark(mean, of)
acl(item, mean)
case(which, against)
obl(match, which)
det(form, the)
amod(form, particular)
nsubj:pass(match, form)
cc(term, or)
conj(form, term)
case(language, of)
nmod(form, language)
aux(match, can)
aux:pass(match, be)
ccomp(mean, match)
case(medium, as)
det(medium, the)
obl(match, medium)
case(comparison, of)
nmod(medium, comparison)
punct(establishment, .)
det(quality, the)
advmod(important, most)
amod(quality, important)
nsubj(be, quality)
case(meaning, of)
det(meaning, the)
nmod(quality, meaning)
root(ROOT, be)
mark(definable, that)
nsubj(definable, they)
aux(definable, should)
cop(definable, be)
advmod(definable, as)
ccomp(be, definable)
mark(possible, as)
advcl(definable, possible)
punct(be, .)
case(proportion, in)
obl(rely, proportion)
mark(concrete, as)
nsubj(concrete, meaning)
cop(concrete, be)
advcl(rely, concrete)
punct(rely, ,)
nsubj(rely, we)
aux(rely, can)
advmod(rely, better)
root(ROOT, rely)
mark(insulate, on)
nsubj(insulate, they)
aux:pass(insulate, be)
advcl(rely, insulate)
cc(distinctive, and)
conj(insulate, distinctive)
punct(rely, .)
det(elephant, a)
nsubj(possess, elephant)
cc(fox, or)
det(fox, a)
conj(elephant, fox)
cc(swan, or)
det(swan, a)
conj(elephant, swan)
cc(cocopalm, or)
det(cocopalm, a)
conj(elephant, cocopalm)
cc(banana, or)
det(banana, a)
conj(cocopalm, banana)
root(ROOT, possess)
case(degree, in)
advmod(high, unusually)
amod(degree, high)
obl(possess, degree)
det(quality, this)
appos(degree, quality)
case(sense, of)
amod(sense, obvious)
punct(sense, ,)
amod(sense, common-)
nmod(quality, sense)
punct(identity, ,)
amod(identity, indubitable)
conj(sense, identity)
punct(possess, ,)
mark(do, as)
advcl(possess, do)
det(eye, a)
obj(do, eye)
cc(tooth, or)
conj(eye, tooth)
cc(nail, or)
conj(eye, nail)
punct(possess, .)
nsubj(isolate, they)
root(ROOT, isolate)
compound:prt(isolate, out)
advmod(isolate, easily)
punct(isolate, ,)
advmod(isolate, naturally)
punct(continuum, ,)
cc(unambiguously, and)
advmod(continuum, unambiguously)
case(continuum, from)
det(continuum, the)
obl(isolate, continuum)
case(nature, of)
nmod(continuum, nature)
cc(existence, and)
conj(nature, existence)
punct(isolate, ;)
punct(isolate, ;)
cc(give, and)
nsubj:pass(give, they)
aux(give, should)
aux:pass(give, be)
conj(isolate, give)
obj(give, priority)
case(list, in)
det(list, the)
amod(list, basic)
nmod(priority, list)
advmod(long, as)
advmod(give, long)
mark(continue, as)
nsubj(continue, they)
advcl(long, continue)
mark(show, to)
xcomp(continue, show)
det(quality, these)
obj(show, quality)
punct(isolate, .)
case(list, with)
det(list, the)
amod(list, universal)
obl(extend, list)
case(weapon, as)
nmod:poss(weapon, he)
nmod(list, weapon)
punct(extend, ,)
nsubj(extend, swadesh)
aux(extend, have)
root(ROOT, extend)
nmod:poss(march, he)
obj(extend, march)
case(conquest, of)
nmod(march, conquest)
advmod(extend, farther)
cc(back, and)
advmod(back, farther)
case(past, into)
det(past, the)
obl(back, past)
punct(back, ,)
nummod(millennia, eight)
punct(ten, ,)
conj(eight, ten)
punct(back, ,)
nummod(millennia, twelve)
obl:npmod(back, millennia)
conj(extend, back)
punct(extend, .)
cc(proclaim, and)
nsubj(proclaim, he)
aux(proclaim, have)
root(ROOT, proclaim)
amod(affiliation, greater)
cc(less, or)
conj(greater, less)
obj(proclaim, affiliation)
case(language, between)
det(language, all)
amod(language, western)
compound(language, hemisphere)
nmod(affiliation, language)
punct(proclaim, .)
nsubj(prove, some)
case(this, of)
nmod(some, this)
aux(prove, may)
root(ROOT, prove)
mark(true, to)
cop(true, be)
xcomp(prove, true)
punct(considerable, ,)
cc(considerable, or)
advmod(considerable, even)
conj(true, considerable)
case(it, of)
obl(considerable, it)
punct(considerable, ,)
mark(ramification, whether)
case(ramification, by)
amod(ramification, genetic)
obl(considerable, ramification)
cc(diffusion, or)
case(diffusion, by)
conj(ramification, diffusion)
cc(coalescence, and)
conj(diffusion, coalescence)
punct(prove, .)
cc(component, but)
det(farther, the)
amod(out, farther)
advmod(move, out)
nsubj(move, he)
root(ROOT, move)
punct(hold, ,)
det(thinner, the)
nsubj(hold, thinner)
aux(hold, will)
cop(hold, be)
nmod:poss(hold, he)
ccomp(move, hold)
case(evidence, on)
amod(evidence, conclusive)
nmod(hold, evidence)
punct(component, ,)
cc(component, and)
mark(larger, the)
amod(component, larger)
det(component, the)
amod(component, speculative)
conj(hold, component)
case(inference, in)
nmod:poss(inference, he)
nmod(component, inference)
punct(hold, .)
nsubj(traverse, he)
aux(traverse, have)
root(ROOT, traverse)
obj(traverse, province)
cc(kingdom, and)
conj(province, kingdom)
punct(consolidate, ,)
cc(consolidate, but)
nsubj(consolidate, he)
aux(consolidate, have)
advmod(consolidate, not)
conj(traverse, consolidate)
obj(consolidate, they)
case(he, behind)
obl(consolidate, he)
punct(control, ,)
cc(control, nor)
aux(control, do)
nsubj(control, he)
conj(consolidate, control)
obj(control, they)
punct(traverse, .)
nsubj(announce, he)
aux(announce, have)
root(ROOT, announce)
obj(announce, result)
case(Hokan, on)
nmod(result, Hokan)
punct(Penutian, ,)
conj(Hokan, Penutian)
punct(aztecan, ,)
compound(aztecan, Uto)
punct(aztecan, -)
conj(Hokan, aztecan)
punct(family, ,)
cc(family, and)
advmod(family, almost)
det(family, all)
amod(family, other)
amod(family, american)
conj(Hokan, family)
cc(phyla, and)
conj(family, phyla)
punct(diagrammed, ,)
cc(diagrammed, and)
aux(diagrammed, have)
conj(announce, diagrammed)
nmod:poss(degree, they)
obj(diagrammed, degree)
case(interrelation, of)
nmod(degree, interrelation)
punct(announce, ;)
punct(announce, ;)
cc(work, but)
nsubj(work, he)
aux(work, have)
advmod(work, not)
conj(announce, work)
compound:prt(work, out)
case(lexicostatistatistics, by)
obl(work, lexicostatistatistics)
nummod(classification, one)
advmod(complete, comprehensively)
amod(classification, complete)
obj(work, classification)
case(family, of)
advmod(family, even)
det(family, a)
amod(family, single)
nmod(classification, family)
amod(classification, other)
case(salish, than)
obl(other, salish)
punct(announce, .)
nsubj(privilege, that)
cop(privilege, be)
nmod:poss(privilege, he)
root(ROOT, privilege)
punct(privilege, .)
det(remote, the)
nsubj(have, remote)
punct(cloudy, ,)
conj(remote, cloudy)
punct(possible, ,)
conj(remote, possible)
root(ROOT, have)
obj(have, value)
case(own, of)
nmod:poss(own, its)
nmod(value, own)
punct(value, --)
appos(value, value)
case(scope, of)
nmod(value, scope)
punct(stimulus, ,)
conj(scope, stimulus)
punct(potential, ,)
conj(scope, potential)
punct(imagination, ,)
cc(imagination, and)
conj(scope, imagination)
punct(have, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
advmod(be, also)
det(aspect, a)
amod(aspect, firm)
nsubj(be, aspect)
case(lexicostatistatistics, to)
nmod(aspect, lexicostatistatistics)
punct(aspect, :)
det(aspect, the)
appos(aspect, aspect)
mark(learn, of)
acl(aspect, learn)
det(organization, the)
amod(organization, internal)
obj(learn, organization)
case(group, of)
amod(group, obvious)
amod(group, natural)
amod(group, genetic)
nmod(organization, group)
case(language, of)
nmod(group, language)
cc(link, as)
fixed(as, well)
fixed(as, as)
nmod:poss(link, they)
advmod(remote, more)
amod(link, remote)
cc(elusive, and)
conj(remote, elusive)
amod(link, external)
conj(organization, link)
punct(link, ;)
punct(link, ;)
case(classification, of)
nmod(link, classification)
advmod(classification, first)
punct(classification, ,)
case(age, with)
amod(age, elapsed)
nmod(by-product, age)
advmod(by-product, merely)
det(by-product, a)
conj(classification, by-product)
punct(by-product, ;)
punct(by-product, ;)
mark(acquire, of)
acl(by-product, acquire)
amod(knowledge, evidential)
obj(acquire, knowledge)
case(what, of)
nmod(knowledge, what)
acl:relcl(what, happen)
case(Athabascan, in)
obl(happen, Athabascan)
punct(happen, ,)
case(Yokuts, in)
obl(happen, Yokuts)
punct(happen, ,)
case(uto-aztecan, in)
obl(happen, uto-aztecan)
case(year, in)
det(year, the)
amod(year, last)
amod(year, few)
nummod(year, thousand)
obl(happen, year)
cc(forecast, as)
fixed(as, well)
fixed(as, as)
acl(year, forecast)
obj(happen, what)
advmod(anciently, more)
advmod(happen, anciently)
aux(happen, may)
aux(happen, have)
ccomp(forecast, happen)
case(they, between)
obl(happen, they)
punct(be, .)
nsubj(involve, this)
root(ROOT, involve)
compound(progress, step)
punct(step, -)
case(step, by)
punct(step, -)
compound(progress, step)
obj(involve, progress)
punct(have, ,)
cc(have, and)
nsubj(have, such)
aux(have, will)
conj(involve, have)
mark(work, to)
cop(work, be)
det(work, the)
compound(work, day)
punct(day, -)
case(day, by)
punct(day, -)
nmod(day, day)
xcomp(have, work)
case(lexicostatistatistics, of)
nmod(work, lexicostatistatistics)
case(body, as)
det(body, a)
amod(body, grow)
nmod(work, body)
case(inquiry, of)
amod(inquiry, scientific)
nmod(body, inquiry)
punct(involve, .)
mark(escape, if)
case(founder, of)
det(founder, the)
obl(escape, founder)
case(glottochronology, of)
nmod(founder, glottochronology)
nsubj(escape, swadesh)
aux(escape, have)
advcl(reason, escape)
nmod:poss(plodding, we)
amod(plodding, steady)
obj(escape, plodding)
punct(repudiate, ,)
cc(repudiate, and)
nsubj(repudiate, lee)
aux(repudiate, have)
conj(escape, repudiate)
nmod:poss(share, he)
amod(share, own)
obj(repudiate, share)
case(found, in)
det(found, the)
obl(repudiate, found)
punct(reason, ,)
nsubj(reason, that)
cop(reason, be)
det(reason, no)
root(ROOT, reason)
advmod(swerve, why)
nsubj(swerve, we)
aux(swerve, should)
acl:relcl(reason, swerve)
punct(reason, . )
nummod(be, 8)
punct(8, .)
expl(be, there)
root(ROOT, be)
det(reason, no)
amod(reason, apparent)
nsubj(be, reason)
advmod(feel, why)
nsubj(feel, we)
aux(feel, should)
acl:relcl(reason, feel)
xcomp(feel, bound)
case(rule, by)
nmod:poss(rule, swadesh)
case(swadesh, 's)
obl(bound, rule)
cc(procedure, and)
conj(rule, procedure)
mark(grow, since)
nmod:poss(predilection, he)
nsubj(grow, predilection)
cc(aim, and)
conj(predilection, aim)
aux(grow, have)
advcl(bound, grow)
advmod(vast, so)
xcomp(grow, vast)
punct(be, .)
nsubj(seem, it)
root(ROOT, seem)
obj(seem, time)
mark(consider, to)
acl(time, consider)
det(revision, a)
obj(consider, revision)
case(procedure, of)
amod(procedure, operational)
nmod(revision, procedure)
case(study, for)
amod(study, lexicostatistic)
nmod(procedure, study)
case(basis, on)
det(basis, a)
advmod(humble, more)
amod(basis, humble)
punct(solid, ,)
conj(humble, solid)
punct(limit, ,)
cc(limit, and)
conj(humble, limit)
obl(consider, basis)
punct(seem, . )
nsubj(propose, I)
aux(propose, would)
root(ROOT, propose)
punct(propose, ,)
advmod(propose, first)
punct(abandonment, ,)
det(abandonment, a)
obj(propose, abandonment)
case(attempt, of)
nmod(abandonment, attempt)
case(list, at)
det(list, a)
amod(list, universal)
amod(list, lexical)
nmod(attempt, list)
punct(propose, ,)
mark(unachievable, as)
advmod(unachievable, intrinsically)
advcl(abandonment, unachievable)
punct(inadequate, ,)
cc(inadequate, and)
advmod(inadequate, operationally)
conj(unachievable, inadequate)
case(proportion, in)
obl(inadequate, proportion)
mark(achieve, as)
nsubj:pass(achieve, it)
aux:pass(achieve, be)
advcl(inadequate, achieve)
punct(propose, . )
nsubj(propose, I)
aux(propose, would)
root(ROOT, propose)
punct(propose, ,)
advmod(propose, next)
punct(propose, ,)
case(requirement, as)
det(requirement, the)
amod(requirement, prime)
obl(propose, requirement)
case(constitution, for)
nmod(requirement, constitution)
case(list, of)
amod(list, new)
amod(list, basic)
nmod(constitution, list)
punct(list, ,)
conj(list, item)
nmod:poss(form, whose)
nsubj(show, form)
acl:relcl(item, show)
advmod(high, as)
xcomp(show, high)
det(rate, a)
amod(rate, empirical)
compound(rate, retention)
obj(show, rate)
mark(possible, as)
advcl(as, possible)
punct(propose, .)
expl(be, there)
aux(be, would)
root(ROOT, be)
det(sense, no)
amod(sense, conceivable)
nsubj(be, sense)
mark(go, in)
acl(sense, go)
case(extreme, to)
det(extreme, the)
amod(extreme, opposite)
obl(go, extreme)
mark(select, of)
acl(extreme, select)
obj(select, item)
nmod:poss(form, whose)
nsubj(unstable, form)
cop(unstable, be)
det(unstable, the)
advmod(unstable, most)
acl:relcl(item, unstable)
punct(be, .)
det(course, a)
amod(course, attempt)
amod(course, middle)
nsubj(lead, course)
aux(lead, might)
root(ROOT, lead)
case(device, to)
obl(lead, device)
case(dictionary, like)
det(dictionary, a)
nummod(word, 5000)
punct(word, -)
compound(dictionary, word)
amod(dictionary, alphabetize)
nmod(device, dictionary)
case(which, from)
obl(select, which)
det(word, every)
amod(word, fiftieth)
nsubj:pass(select, word)
aux:pass(select, be)
acl:relcl(dictionary, select)
punct(lead, .)
advmod(inevitable, doubtless)
expl(inevitable, it)
cop(inevitable, be)
root(ROOT, inevitable)
mark(arise, that)
nsubj(arise, difference)
case(opinion, of)
nmod(difference, opinion)
aux(arise, should)
csubj(inevitable, arise)
case(method, about)
det(method, the)
obl(arise, method)
mark(apply, for)
acl(method, apply)
det(policy, these)
obj(apply, policy)
punct(inevitable, .)
expl(incredible, it)
cop(incredible, be)
advmod(incredible, nevertheless)
advmod(incredible, almost)
root(ROOT, incredible)
mark(be, that)
nummod(year, four)
obl:tmod(be, year)
case(Yalta, after)
nmod(year, Yalta)
expl(be, there)
aux(be, should)
ccomp(incredible, be)
det(split, a)
amod(split, complete)
nsubj(be, split)
case(Germany, over)
obl(split, Germany)
punct(split, ,)
case(head, with)
amod(head, hot)
obl(split, head)
case(side, on)
det(side, both)
nmod(head, side)
acl(head, plan)
mark(use, to)
xcomp(plan, use)
det(Germans, the)
obj(use, Germans)
case(ally, against)
nmod:poss(ally, they)
amod(ally, former)
obl(use, ally)
punct(expect, ,)
cc(Germans, and)
case(Germans, with)
amod(Germans, Nazi-minded)
nsubj(expect, Germans)
conj(use, expect)
mark(recover, to)
xcomp(expect, recover)
nmod:poss(power, they)
obj(recover, power)
mark(fight, by)
advcl(recover, fight)
case(side, on)
nummod(side, one)
obl(fight, side)
cc(frontier, or)
det(frontier, the)
amod(frontier, other)
compound(frontier, . )
nummod(. , 5)
punct(frontier, .)
compound(frontier, Poland)
conj(side, frontier)
punct(incredible, .)
mark(open, when)
det(Conference, the)
compound(Conference, Yalta)
nsubj(open, Conference)
advcl(break, open)
punct(break, ,)
det(policy, the)
amod(policy, american)
nsubj(break, policy)
mark(postponing, of)
acl(policy, postponing)
det(discussion, all)
obj(postponing, discussion)
case(boundary, of)
nmod:poss(boundary, Russia)
case(Russia, 's)
amod(boundary, western)
nmod(discussion, boundary)
mark(break, until)
det(conference, the)
compound(conference, peace)
nsubj(break, conference)
aux(break, have)
root(ROOT, break)
compound:prt(break, down)
punct(break, .)
advcl(sweep, Starting)
case(force, in)
amod(force, great)
obl(Starting, force)
advmod(Starting, late)
case(December, in)
obl(Starting, December)
punct(sweep, ,)
case(line, from)
det(line, a)
obl(sweep, line)
acl(line, stretch)
case(Prussia, from)
compound(Prussia, East)
obl(stretch, Prussia)
case(budapest, to)
obl(stretch, budapest)
punct(sweep, ,)
det(army, the)
compound(army, Red)
nsubj(sweep, army)
aux(sweep, have)
root(ROOT, sweep)
nummod(mile, two)
nummod(mile, hundred)
obj(sweep, mile)
case(Poland, across)
obl(sweep, Poland)
case(oder, to)
det(oder, the)
obl(sweep, oder)
punct(mile, ,)
nummod(mile, thirty)
appos(oder, mile)
case(Berlin, from)
nmod(mile, Berlin)
punct(overrun, ,)
cc(overrun, and)
det(region, the)
compound(region, upper)
compound(region, Danube)
nsubj:pass(overrun, region)
aux(overrun, be)
aux:pass(overrun, be)
advmod(overrun, rapidly)
conj(sweep, overrun)
punct(overrun, ,)
mark(occupy, while)
det(Allies, the)
compound(Allies, Western)
nsubj(occupy, Allies)
aux(occupy, have)
advmod(occupy, not)
advmod(occupy, yet)
advcl(overrun, occupy)
obj(occupy, all)
case(bank, of)
det(bank, the)
amod(bank, left)
nmod(all, bank)
case(Rhine, of)
det(Rhine, the)
nmod(bank, Rhine)
punct(sweep, .)
det(delay, the)
amod(delay, long)
nsubj(work, delay)
mark(open, in)
acl(delay, open)
det(Front, the)
compound(Front, Second)
obj(open, Front)
aux(work, be)
advmod(work, now)
root(ROOT, work)
case(advantage, to)
nmod:poss(advantage, Russia)
case(Russia, 's)
obl(work, advantage)
punct(work, .)
det(West, the)
nsubj(glad, West)
cop(glad, be)
advmod(glad, now)
parataxis(work, glad)
mark(propose, to)
xcomp(glad, propose)
det(line, the)
nummod(line, 1919)
compound(line, Curzon)
obj(propose, line)
punct(line, ,)
nsubj(border, which)
cop(border, be)
advmod(border, substantially)
nmod:poss(border, Russia)
case(Russia, 's)
nummod(border, 1941)
acl:relcl(line, border)
punct(border, ,)
case(boundary, as)
det(boundary, the)
nmod(border, boundary)
case(Russia, between)
nmod(boundary, Russia)
cc(Poland, and)
conj(Russia, Poland)
punct(boundary, .)
mark(make, when)
det(proposal, this)
nsubj:pass(make, proposal)
aux:pass(make, be)
advcl(speak, make)
punct(speak, ,)
nsubj(speak, Stalin)
parataxis(work, speak)
case(emotion, with)
amod(emotion, stronger)
obl(speak, emotion)
case(time, than)
case(time, at)
det(time, any)
amod(time, other)
obl(speak, time)
case(Conference, during)
det(Conference, the)
nmod(time, Conference)
punct(speak, .)
nsubj(stand, he)
root(ROOT, stand)
compound:prt(stand, up)
mark(emphasize, to)
advcl(stand, emphasize)
nmod:poss(feeling, he)
amod(feeling, strong)
obj(emphasize, feeling)
case(subject, on)
det(subject, the)
obl(emphasize, subject)
punct(stand, .)
det(memory, the)
amod(memory, bitter)
nsubj(boil, memory)
case(exclusion, of)
nmod:poss(exclusion, Russia)
case(Russia, 's)
nmod(memory, exclusion)
case(Conference, from)
det(Conference, the)
compound(Conference, Paris)
compound(Conference, Peace)
nmod(exclusion, Conference)
cc(effort, and)
case(effort, of)
det(West, the)
nmod:poss(effort, West)
case(West, 's)
conj(Conference, effort)
mark(stamp, to)
acl(effort, stamp)
compound:prt(stamp, out)
obj(stamp, Bolshevism)
case(birth, at)
nmod:poss(birth, its)
obl(stamp, birth)
root(ROOT, boil)
compound:prt(boil, up)
case(he, within)
obl(boil, he)
punct(boil, .)
punct(boil, ``)
nsubj(drive, you)
aux(drive, would)
root(ROOT, drive)
obj(drive, we)
case(shame, into)
obl(drive, shame)
punct(drive, '')
punct(drive, ,)
nsubj(declare, he)
parataxis(drive, declare)
punct(declare, .)
det(Russians, the)
compound(Russians, White)
nsubj(say, Russians)
cc(Ukrainians, and)
det(Ukrainians, the)
conj(Russians, Ukrainians)
aux(say, would)
conj(drive, say)
mark(defender, that)
nsubj(defender, Stalin)
cc(Molotov, and)
conj(Stalin, Molotov)
cop(defender, be)
advmod(less, far)
advmod(reliable, less)
amod(defender, reliable)
ccomp(say, defender)
case(Russia, of)
nmod(defender, Russia)
case(Curzon, than)
nmod(defender, Curzon)
cc(Clemenceau, and)
conj(Curzon, Clemenceau)
punct(drive, .)
cc(agree, yet)
case(discussion, after)
amod(discussion, long)
cc(earnest, and)
conj(long, earnest)
obl(accept, discussion)
nsubj(accept, Stalin)
root(ROOT, accept)
det(line, the)
compound(line, Curzon)
obj(accept, line)
cc(agree, and)
advmod(agree, even)
conj(accept, agree)
advmod(agree, voluntarily)
mark(be, that)
expl(be, there)
aux(be, should)
ccomp(agree, be)
nsubj(be, digression)
case(line, from)
det(line, that)
nmod(digression, line)
case(kilometer, of)
nummod(kilometer, five)
case(eight, to)
nmod(five, eight)
nmod(line, kilometer)
case(favor, in)
nmod(kilometer, favor)
case(Poland, of)
nmod(favor, Poland)
case(region, in)
det(region, some)
nmod(favor, region)
punct(accept, .)
nsubj(mind, he)
aux(mind, do)
advmod(mind, not)
root(ROOT, mind)
det(line, the)
obj(mind, line)
nmod:npmod(line, itself)
punct(mind, ,)
obj(declare, which)
nsubj(declare, Churchill)
acl:relcl(line, declare)
case(House, in)
det(House, the)
obl(declare, House)
case(common, of)
nmod(House, common)
punct(declare, ,)
case(February, on)
obl(declare, February)
nummod(February, 27)
punct(February, ,)
nummod(February, 1945)
punct(mind, ,)
nsubj(believe, he)
aux(believe, have)
advmod(believe, always)
parataxis(mind, believe)
mark(be, to)
cop(just, be)
punct(just, ``)
advmod(believe, just)
cc(right, and)
conj(just, right)
punct(right, '')
punct(want, ,)
cc(want, but)
nsubj(want, he)
aux(want, do)
advmod(want, not)
conj(believe, want)
obj(want, it)
xcomp(want, call)
case(name, by)
det(name, a)
amod(name, hate)
obl(call, name)
punct(mind, .)
det(West, the)
nsubj(forget, West)
aux(forget, have)
advmod(forget, long)
advmod(forget, since)
root(ROOT, forget)
det(event, the)
obj(forget, event)
case(1919, of)
nmod(event, 1919)
punct(easy, ,)
cc(easy, but)
nsubj(easy, it)
cop(easy, be)
advmod(easy, not)
advmod(easy, so)
conj(forget, easy)
case(leader, for)
det(leader, the)
compound(leader, Red)
obl(easy, leader)
punct(leader, ,)
nsubj(feel, who)
acl:relcl(leader, feel)
mark(suffer, that)
nsubj(suffer, they)
aux(suffer, have)
ccomp(feel, suffer)
amod(injustice, great)
obj(suffer, injustice)
case(period, in)
det(period, that)
obl(suffer, period)
punct(forget, .)
case(memorandum, in)
det(memorandum, the)
compound(memorandum, Dunn)
punct(Dunn, -)
flat(Dunn, Atherton)
obl(expect, memorandum)
case(February, of)
nmod(memorandum, February)
nummod(February, 4)
punct(February, ,)
nummod(February, 1942)
punct(expect, ,)
det(Department, the)
compound(Department, State)
nsubj(expect, Department)
aux(expect, have)
root(ROOT, expect)
mark(able, to)
cop(able, be)
xcomp(expect, able)
mark(hold, to)
xcomp(able, hold)
obj(hold, Russia)
case(agreement, in)
compound(agreement, check)
case(agreement, by)
compound(agreement, withhold)
obl(hold, agreement)
case(boundary, to)
nmod:poss(boundary, she)
nummod(boundary, 1941)
nmod(agreement, boundary)
punct(make, .)
advmod(make, now)
nsubj(make, Stalin)
parataxis(expect, make)
obj(make, it)
xcomp(make, clear)
mark(mean, that)
nsubj(mean, he)
ccomp(clear, mean)
mark(move, to)
xcomp(mean, move)
nmod:poss(border, Poland)
case(Poland, 's)
amod(border, western)
obj(move, border)
advmod(Germany, deep)
case(Germany, into)
obl(move, Germany)
punct(move, ,)
advmod(move, back)
case(line, to)
det(line, the)
amod(line, western)
compound(oder, Neisse)
punct(oder, -)
compound(River, oder)
compound(line, River)
obl(back, line)
punct(take, ,)
acl(line, take)
advmod(only, not)
cc:preconj(Prussia, only)
compound(Prussia, East)
obj(take, Prussia)
cc(all, and)
conj(Prussia, all)
case(Silesia, of)
nmod(all, Silesia)
cc(Pomerania, but)
conj(Silesia, Pomerania)
cc(tip, and)
det(tip, the)
conj(Prussia, tip)
case(Brandenburg, of)
nmod(tip, Brandenburg)
punct(back, ,)
advmod(tip, back)
obl(back, to)
cc(Stettin, and)
case(Stettin, include)
obl(back, Stettin)
punct(include, .)
case(Germans, from)
nummod(Germans, six)
case(nine, to)
nmod(six, nine)
nummod(Germans, million)
amod(Germans, additional)
nsubj:pass(evict, Germans)
aux(evict, would)
aux:pass(evict, be)
acl:relcl(Stettin, evict)
punct(evict, ,)
mark(fleed, though)
nsubj(fleed, most)
aux(fleed, would)
aux(fleed, have)
advcl(evict, fleed)
punct(receive, ,)
cc(receive, and)
nsubj(receive, Poland)
aux(receive, would)
conj(fleed, receive)
advmod(more, far)
obj(receive, more)
case(Germany, from)
obl(more, Germany)
case(territory, than)
det(territory, the)
amod(territory, poor)
obl(more, territory)
punct(territory, ,)
case(Marshes, include)
det(Marshes, the)
amod(Marshes, great)
compound(Marshes, pripet)
nmod(territory, Marshes)
punct(Marshes, ,)
obj(lose, which)
nsubj(lose, she)
acl:relcl(Marshes, lose)
case(Russia, to)
obl(lose, Russia)
punct(declare, .)
nsubj(declare, Stalin)
parataxis(Marshes, declare)
mark(prefer, that)
nsubj(prefer, he)
ccomp(declare, prefer)
mark(continue, to)
xcomp(prefer, continue)
det(war, the)
obj(continue, war)
det(little, a)
obl:npmod(longer, little)
advmod(continue, longer)
punct(continue, ,)
punct(continue, ``)
mark(cost, although)
nsubj(cost, it)
advcl(continue, cost)
iobj(cost, we)
obj(cost, blood)
punct(cost, '')
punct(cost, ,)
mark(give, in)
fixed(in, order)
mark(give, to)
advcl(cost, give)
iobj(give, Poland)
obj(give, compensation)
case(West, in)
det(West, the)
nmod(compensation, West)
case(expense, at)
det(expense, the)
obl(give, expense)
case(Germans, of)
det(Germans, the)
nmod(expense, Germans)
punct(expect, .)
case(time, by)
det(time, this)
obl(cordial, time)
nsubj(cordial, Churchill)
cop(cordial, be)
advmod(cordial, not)
advmod(cordial, so)
root(ROOT, cordial)
mark(move, toward)
advcl(cordial, move)
obj(move, Poland)
advmod(move, westward)
mark(Teheran, as)
nsubj(Teheran, he)
aux(Teheran, have)
cop(Teheran, be)
case(Teheran, at)
advcl(move, Teheran)
punct(Teheran, ,)
advmod(approve, where)
nsubj(approve, he)
cc(Eden, and)
conj(he, Eden)
aux(approve, have)
cc:preconj(approve, both)
advmod(approve, heartily)
acl:relcl(Teheran, approve)
det(idea, the)
obj(approve, idea)
punct(cordial, .)
case(study, after)
punct(study, ``)
det(study, a)
amod(study, prolong)
nsubj(tell, study)
case(line, of)
det(line, the)
compound(line, oder)
nmod(study, line)
case(map, on)
det(map, a)
nmod(line, map)
punct(map, '')
punct(like, ,)
case(Teheran, at)
obl(like, Teheran)
punct(like, ,)
nsubj(like, Churchill)
punct(like, ``)
parataxis(tell, like)
det(picture, the)
obj(like, picture)
punct(like, '')
punct(tell, .)
nsubj(tell, he)
aux(tell, would)
root(ROOT, tell)
det(Poles, the)
obj(tell, Poles)
punct(tell, ,)
nsubj(say, he)
parataxis(tell, say)
punct(say, ,)
mark(give, that)
nsubj:pass(give, they)
aux(give, have)
aux:pass(give, be)
punct(give, ``)
ccomp(say, give)
det(place, a)
amod(place, fine)
obj(give, place)
mark(live, to)
acl(place, live)
obl(live, in)
punct(mile, ,)
advmod(three, more)
fixed(more, than)
nummod(mile, three)
nummod(mile, hundred)
obl(live, mile)
det(way, each)
nmod:npmod(mile, way)
punct(way, '')
punct(way, .)
case(Yalta, at)
obl(think, Yalta)
nsubj(think, he)
conj(give, think)
obj(think, more)
case(Germans, about)
det(Germans, the)
compound(million, six)
nummod(Germans, million)
obl(more, Germans)
nsubj(have, who)
aux(have, would)
acl:relcl(Germans, have)
mark(leave, to)
xcomp(have, leave)
punct(try, ,)
conj(leave, try)
mark(find, to)
xcomp(try, find)
obj(find, work)
case(Germany, in)
nmod(work, Germany)
punct(object, ,)
cc(object, and)
nsubj(object, Roosevelt)
conj(try, object)
case(River, to)
det(River, the)
amod(River, western)
compound(River, Neisse)
obl(choose, River)
aux:pass(choose, be)
advcl(object, choose)
case(south, in)
det(south, the)
obl(choose, south)
punct(choose, ,)
case(Neisse, instead)
fixed(instead, of)
det(Neisse, the)
compound(Neisse, Eastern)
obl(choose, Neisse)
punct(Neisse, ,)
appos(Neisse, both)
case(flow, of)
det(flow, which)
nmod(both, flow)
case(oder, into)
det(oder, the)
nmod(flow, oder)
punct(tell, .)
det(issue, the)
nsubj:pass(leave, issue)
aux:pass(leave, be)
root(ROOT, leave)
case(abeyance, in)
obl(leave, abeyance)
punct(leave, ,)
advmod(conference, presumably)
case(conference, for)
det(conference, the)
compound(conference, peace)
obl(leave, conference)
punct(leave, .)
advmod(be, however)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(question, no)
amod(question, real)
nsubj(be, question)
case(justice, of)
det(justice, the)
nmod(question, justice)
mark(create, of)
acl(justice, create)
det(Poland, a)
amod(Poland, strong)
obj(create, Poland)
punct(Poland, ,)
cc:preconj(industrially, both)
advmod(create, industrially)
cc(agriculturally, and)
conj(industrially, agriculturally)
punct(one, ,)
cc(one, and)
conj(Poland, one)
acl(one, unplague)
case(minority, by)
amod(minority, large)
obl(unplague, minority)
case(Germans, of)
nmod(minority, Germans)
cc(Russians, or)
conj(Germans, Russians)
punct(be, .)
det(moving, the)
root(ROOT, moving)
case(million, of)
nmod(moving, million)
case(race, of)
det(race, the)
amod(race, german)
compound(race, master)
punct(race, -)
nmod(million, race)
punct(moving, ,)
case(heart, from)
det(heart, the)
amod(heart, very)
nmod(moving, heart)
case(Junkerdom, of)
nmod(heart, Junkerdom)
punct(make, ,)
mark(make, to)
acl(heart, make)
obj(make, room)
case(Slavs, for)
det(Slavs, the)
amod(Slavs, polish)
nmod(room, Slavs)
obj(enslave, whom)
nsubj(enslave, they)
aux(enslave, have)
acl:relcl(Slavs, enslave)
cc(plan, and)
advmod(plan, openly)
conj(enslave, plan)
mark(exterminate, to)
xcomp(plan, exterminate)
cop(operation, be)
det(operation, a)
amod(operation, drastic)
ccomp(exterminate, operation)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(operation, be)
amod(doubt, little)
nsubj(be, doubt)
mark(justified, that)
nsubj:pass(justified, it)
aux:pass(justified, be)
advmod(justified, historically)
acl(doubt, justified)
punct(operation, .)
root(ROOT, government)
punct(government, .)
case(importance, of)
amod(importance, more)
obl(character, importance)
case(West, to)
det(West, the)
nmod(importance, West)
case(boundary, than)
nmod:poss(boundary, Poland)
case(Poland, 's)
nmod(importance, boundary)
cop(character, be)
det(character, the)
root(ROOT, character)
case(government, of)
nmod:poss(government, she)
nmod(character, government)
punct(character, .)
case(Yalta, at)
obl(believe, Yalta)
det(West, the)
nsubj(believe, West)
advmod(believe, still)
root(ROOT, believe)
mark(keep, that)
compound(Europe, Eastern)
nsubj:pass(keep, Europe)
aux(keep, could)
aux:pass(keep, be)
ccomp(believe, keep)
case(orbit, in)
nmod:poss(orbit, its)
obl(keep, orbit)
punct(keep, ,)
case(spite, in)
obl(keep, spite)
case(army, of)
det(army, the)
amod(army, onrush)
amod(army, Soviet)
nmod(spite, army)
punct(keep, .)
mark(practise, though)
amod(democracy, little)
nsubj:pass(practise, democracy)
aux(practise, have)
advmod(practise, ever)
aux:pass(practise, be)
advcl(keep, practise)
case(region, in)
det(region, this)
obl(practise, region)
punct(rule, ,)
cc(rule, and)
nsubj:pass(rule, much)
case(it, of)
nsubj:pass(rule, it)
aux:pass(rule, be)
advmod(rule, still)
conj(practise, rule)
case(means, by)
amod(means, feudalistic)
obl(rule, means)
punct(take, ,)
nsubj:pass(take, it)
aux:pass(take, be)
conj(rule, take)
mark(grant, for)
advcl(take, grant)
mark(establish, that)
advmod(establish, at)
fixed(at, least)
det(form, the)
nsubj:pass(establish, form)
case(democracy, of)
amod(democracy, western)
nmod(form, democracy)
aux(establish, would)
aux:pass(establish, be)
ccomp(grant, establish)
case(area, in)
det(area, this)
obl(establish, area)
cc(capitalism, and)
amod(capitalism, western)
conj(area, capitalism)
acl(area, preserve)
case(it, within)
obl(preserve, it)
punct(believe, .)
advcl(important, believe)
advmod(believe, devoutly)
mark(do, as)
nsubj(do, they)
advcl(believe, do)
case(institution, in)
compound(Saxon, Anglo)
punct(Saxon, -)
compound(institution, Saxon)
obl(believe, institution)
punct(important, ,)
expl(important, it)
cop(important, be)
root(ROOT, important)
case(Roosevelt, to)
cc:preconj(Roosevelt, both)
obl(important, Roosevelt)
cc(Churchill, and)
conj(Roosevelt, Churchill)
mark(have, that)
det(Poles, the)
nsubj(have, Poles)
aux(have, should)
csubj(important, have)
obj(have, they)
punct(important, .)
det(issue, the)
nsubj(acute, issue)
cop(acute, be)
root(ROOT, acute)
mark(compete, because)
det(government, the)
amod(government, exile)
compound(government, polish)
nsubj(compete, government)
case(London, in)
nmod(government, London)
punct(government, ,)
acl(government, support)
case(main, in)
det(main, the)
obl(support, main)
case(Britain, by)
obl(main, Britain)
punct(compete, ,)
aux(compete, be)
advmod(compete, still)
ccomp(acute, compete)
case(Government, with)
det(Government, the)
amod(Government, new)
compound(Government, Lublin)
obl(compete, Government)
acl(Government, form)
case(Army, behind)
det(Army, the)
compound(Army, Red)
obl(form, Army)
punct(acute, .)
amod(time, more)
nsubj:pass(spend, time)
aux:pass(spend, be)
root(ROOT, spend)
mark(try, in)
advcl(spend, try)
mark(marry, to)
xcomp(try, marry)
det(incompatible, these)
obj(marry, incompatible)
case(subject, than)
case(subject, over)
det(subject, any)
obl(marry, subject)
acl(subject, discuss)
case(Yalta, at)
obl(discuss, Yalta)
punct(spend, .)
det(result, the)
nsubj(agreement, result)
cop(agreement, be)
det(agreement, a)
root(ROOT, agreement)
mark(reorganize, that)
det(government, the)
compound(government, Lublin)
nsubj:pass(reorganize, government)
aux(reorganize, should)
aux:pass(reorganize, be)
punct(reorganize, ``)
acl(agreement, reorganize)
case(basis, on)
det(basis, a)
amod(basis, broader)
amod(basis, democratic)
obl(reorganize, basis)
case(inclusion, with)
det(inclusion, the)
nmod(basis, inclusion)
case(leader, of)
amod(leader, democratic)
nmod(inclusion, leader)
case(Poland, from)
nmod(inclusion, Poland)
nmod:npmod(Poland, itself)
cc(Poles, and)
case(Poles, from)
det(Poles, the)
conj(Poland, Poles)
advmod(Poles, abroad)
punct(Poles, '')
punct(pledge, ,)
cc(pledge, and)
conj(reorganize, pledge)
mark(hold, to)
xcomp(pledge, hold)
punct(election, ``)
amod(election, free)
cc(unfettered, and)
conj(free, unfettered)
obj(hold, election)
advmod(soon, as)
advmod(hold, soon)
mark(possible, as)
advcl(soon, possible)
case(basis, on)
det(basis, the)
obl(possible, basis)
case(suffrage, of)
amod(suffrage, universal)
nmod(basis, suffrage)
cc(ballot, and)
compound(ballot, secret)
conj(suffrage, ballot)
punct(suffrage, '')
punct(basis, .)
det(party, all)
punct(party, ``)
amod(party, democratic)
cc(anti-nazi, and)
conj(democratic, anti-nazi)
appos(suffrage, party)
punct(party, '')
acl:relcl(party, be)
mark(have, to)
ccomp(be, have)
det(right, the)
obj(have, right)
case(campaign, to)
nmod(right, campaign)
punct(agreement, .)
nsubj(act, Roosevelt)
root(ROOT, act)
case(moderator, as)
obl(act, moderator)
case(debate, of)
det(debate, the)
amod(debate, long)
nmod(moderator, debate)
case(issue, on)
det(issue, this)
obl(act, issue)
punct(act, .)
nsubj(matter, it)
cop(matter, be)
det(matter, a)
root(ROOT, matter)
case(principle, of)
nmod(matter, principle)
case(Churchill, with)
nmod(principle, Churchill)
punct(matter, ,)
mark(declare, since)
nsubj(declare, Britain)
aux(declare, have)
advcl(matter, declare)
obj(declare, war)
case(behalf, in)
obl(declare, behalf)
case(Poland, of)
nmod(behalf, Poland)
punct(matter, .)
case(Stalin, to)
obl(matter, Stalin)
nsubj(matter, it)
cop(matter, be)
det(matter, a)
parataxis(matter, matter)
case(life, of)
nmod(matter, life)
cc(death, and)
conj(life, death)
punct(matter, .)
nsubj(make, he)
root(ROOT, make)
obj(make, this)
advmod(clear, completely)
xcomp(make, clear)
punct(make, .)
advcl(say, speak)
case(earnestness, with)
punct(earnestness, ``)
amod(earnestness, great)
obl(speak, earnestness)
punct(earnestness, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
punct(say, :)
punct(say, ``)
case(people, for)
det(people, the)
amod(people, russian)
obl(question, people)
punct(question, ,)
det(question, the)
nsubj(question, question)
case(Poland, of)
nmod(question, Poland)
cop(question, be)
advmod(question, not)
advmod(question, only)
det(question, a)
root(ROOT, question)
case(honor, of)
nmod(question, honor)
cc(question, but)
advmod(question, also)
det(question, a)
conj(question, question)
case(security, of)
nmod(question, security)
punct(question, .)
case(history, throughout)
obl(corridor, history)
punct(corridor, ,)
nsubj(corridor, Poland)
aux(corridor, have)
cop(corridor, be)
det(corridor, the)
parataxis(question, corridor)
case(which, through)
obl(pass, which)
det(enemy, the)
nsubj(pass, enemy)
aux(pass, have)
acl:relcl(corridor, pass)
case(Russia, into)
obl(pass, Russia)
punct(pass, .)
advmod(year, twice)
case(year, in)
det(year, the)
amod(year, last)
nummod(year, thirty)
obl(pass, year)
nmod:poss(enemy, we)
nsubj(pass, enemy)
punct(enemy, ,)
det(Germans, the)
appos(enemy, Germans)
punct(pass, ,)
aux(pass, have)
parataxis(corridor, pass)
case(corridor, through)
det(corridor, this)
obl(pass, corridor)
punct(question, .)
expl(interest, it)
cop(interest, be)
case(interest, in)
nmod:poss(interest, Russia)
case(Russia, 's)
root(ROOT, interest)
mark(strong, that)
nsubj(strong, Poland)
aux(strong, should)
cop(strong, be)
acl(interest, strong)
cc(powerful, and)
conj(strong, powerful)
punct(strong, ,)
case(position, in)
det(position, a)
obl(strong, position)
mark(shut, to)
acl(position, shut)
det(door, the)
obj(shut, door)
case(corridor, of)
det(corridor, this)
nmod(door, corridor)
case(force, by)
nmod:poss(force, she)
amod(force, own)
obl(shut, force)
punct(interest, .)
expl(necessary, it)
cop(necessary, be)
root(ROOT, necessary)
mark(free, that)
nsubj(free, Poland)
aux(free, should)
cop(free, be)
ccomp(necessary, free)
punct(free, ,)
conj(free, independent)
case(power, in)
obl(independent, power)
punct(necessary, .)
advmod(question, therefore)
punct(question, ,)
nsubj(question, it)
cop(question, be)
advmod(question, not)
advmod(question, only)
det(question, a)
root(ROOT, question)
case(honor, of)
nmod(question, honor)
cc(life, but)
case(life, of)
conj(honor, life)
cc(death, and)
conj(life, death)
case(state, for)
det(state, the)
amod(state, Soviet)
nmod(death, state)
punct(question, '')
punct(question, .)
case(word, in)
amod(word, other)
obl(determined, word)
punct(determined, ,)
det(Union, the)
compound(Union, Soviet)
nsubj(determined, Union)
cop(determined, be)
root(ROOT, determined)
mark(create, to)
xcomp(determined, create)
det(Poland, a)
obj(create, Poland)
advmod(strong, so)
xcomp(create, strong)
mark(bulwark, as)
mark(bulwark, to)
cop(bulwark, be)
det(bulwark, a)
amod(bulwark, powerful)
advcl(create, bulwark)
case(Germany, against)
nmod(bulwark, Germany)
cc(tie, and)
advmod(tie, so)
advmod(tie, closely)
conj(determined, tie)
case(Russia, to)
obl(tie, Russia)
mark(be, that)
expl(be, there)
aux(be, would)
advmod(be, never)
ccomp(tie, be)
det(question, any)
nsubj(be, question)
case(she, of)
nmod(question, she)
acl(question, serve)
case(sanitaire, as)
det(sanitaire, a)
compound(sanitaire, cordon)
obl(serve, sanitaire)
case(Soviets, against)
det(Soviets, the)
nmod(sanitaire, Soviets)
cc(pose, or)
conj(serve, pose)
case(power, as)
det(power, a)
amod(power, independent)
punct(power, ,)
amod(power, balancing)
obl(pose, power)
case(Russia, in)
case(Russia, between)
nmod(power, Russia)
cc(Germany, and)
conj(Russia, Germany)
punct(determined, .)
nsubj(say, Byrnes)
root(ROOT, say)
mark(use, that)
advmod(use, invariably)
mark(use, thereafter)
det(Soviets, the)
nsubj(use, Soviets)
ccomp(say, use)
det(argument, the)
amod(argument, same)
compound(argument, security)
obj(use, argument)
mark(justify, to)
acl(argument, justify)
nmod:poss(course, they)
obj(justify, course)
case(Poland, in)
obl(justify, Poland)
punct(inevitable, .)
det(reasoning, this)
nsubj(inevitable, reasoning)
cop(inevitable, be)
advmod(inevitable, also)
advmod(inevitable, as)
ccomp(say, inevitable)
mark(be, as)
nsubj(be, anything)
aux(be, could)
advcl(inevitable, be)
punct(inevitable, .)
det(election, any)
amod(election, free)
nsubj(inevitable, election)
nsubj(be, that)
acl:relcl(election, be)
mark(hold, to)
aux:pass(hold, be)
xcomp(be, hold)
case(Poland, in)
obl(hold, Poland)
aux(have, would)
conj(be, have)
mark(produce, to)
xcomp(have, produce)
det(government, a)
obj(produce, government)
case(which, in)
obl(have, which)
nsubj(have, moscow)
acl:relcl(government, have)
amod(confidence, complete)
obj(have, confidence)
punct(meet, ,)
cc(meet, and)
det(pressure, all)
nsubj:pass(meet, pressure)
case(West, from)
det(West, the)
nmod(pressure, West)
case(voting, for)
amod(voting, free)
nmod(pressure, voting)
case(element, by)
amod(element, anti-soviet)
nmod(voting, element)
case(Poland, in)
nmod(element, Poland)
aux(meet, would)
aux:pass(meet, be)
conj(have, meet)
case(restriction, by)
obl(meet, restriction)
mark(voting, on)
acl(restriction, voting)
case(element, by)
det(element, these)
obl(voting, element)
punct(say, . )
nummod(Liberated, 6)
punct(6, .)
root(ROOT, Liberated)
obj(Liberated, Europe)
case(degree, in)
advmod(greater, even)
amod(degree, greater)
nmod(rule, degree)
det(rule, the)
amod(rule, same)
root(ROOT, rule)
acl(rule, apply)
case(remainder, to)
det(remainder, the)
obl(apply, remainder)
case(Europe, of)
compound(Europe, Eastern)
nmod(remainder, Europe)
punct(Europe, ,)
advmod(collaborate, where)
det(class, the)
amod(class, upper)
nsubj(collaborate, class)
aux(collaborate, have)
advmod(collaborate, generally)
acl:relcl(rule, collaborate)
case(Nazis, with)
det(Nazis, the)
obl(collaborate, Nazis)
punct(collaborate, ,)
advmod(extent, even)
case(extent, to)
det(extent, the)
obl(collaborate, extent)
mark(send, of)
acl(extent, send)
obj(send, million)
case(peasant, of)
nmod:poss(peasant, they)
nmod(million, peasant)
case(Russia, into)
obl(send, Russia)
case(part, as)
det(part, a)
obl(send, part)
case(army, of)
nmod:poss(army, Hitler)
case(Hitler, 's)
nmod(part, army)
punct(rule, .)
cc(merge, but)
case(Yalta, at)
obl(merge, Yalta)
det(expectation, the)
amod(expectation, conflict)
nsubj:pass(merge, expectation)
case(East, of)
nmod(expectation, East)
cc(West, and)
conj(East, West)
aux:pass(merge, be)
root(ROOT, merge)
case(agreement, into)
det(agreement, a)
obl(merge, agreement)
case(Three, by)
det(Three, the)
compound(Three, Big)
nmod(agreement, Three)
mark(assist, to)
acl(agreement, assist)
det(country, all)
amod(country, liberate)
obj(assist, country)
case(Europe, in)
nmod(country, Europe)
punct(create, ``)
mark(create, to)
acl(country, create)
amod(institution, democratic)
obj(create, institution)
case(choice, of)
nmod:poss(choice, they)
amod(choice, own)
nmod(institution, choice)
punct(choice, '')
punct(choice, .)
case(case, in)
det(case, any)
obl(here, case)
punct(here, ``)
advmod(choice, here)
mark(require, in)
nmod:poss(condition, they)
obl(require, judgment)
nsubj(require, condition)
advcl(here, require)
punct(require, '')
punct(italic, ()
obj(require, italic)
amod(italic, add)
punct(italic, ))
nsubj(form, they)
aux(form, would)
punct(form, ``)
ccomp(require, form)
amod(authority, interim)
amod(authority, governmental)
obj(form, authority)
advmod(representative, broadly)
obj(form, representative)
case(element, of)
det(element, all)
amod(element, democratic)
nmod(representative, element)
case(population, in)
det(population, the)
nmod(element, population)
cc(pledge, and)
conj(element, pledge)
case(establishment, to)
det(establishment, the)
amod(establishment, earliest)
amod(establishment, possible)
obl(pledge, establishment)
case(election, through)
amod(election, free)
nmod(establishment, election)
case(government, of)
nmod(election, government)
amod(government, responsive)
case(will, to)
det(will, the)
obl(responsive, will)
case(people, of)
det(people, the)
nmod(will, people)
punct(will, '')
punct(seem, .)
amod(affirmation, other)
amod(affirmation, similar)
nsubj(seem, affirmation)
case(declaration, in)
det(declaration, the)
nmod(affirmation, declaration)
case(Europe, on)
amod(Europe, Liberated)
nmod(declaration, Europe)
acl:relcl(establishment, seem)
mark(assure, to)
xcomp(seem, assure)
amod(institution, democratic)
obj(assure, institution)
case(model, on)
det(model, the)
amod(model, western)
nmod(institution, model)
punct(develop, .)
advmod(develop, later)
nsubj(develop, it)
parataxis(seem, develop)
mark(have, that)
det(Soviets, the)
nsubj(have, Soviets)
ccomp(develop, have)
det(interpretation, a)
advmod(different, very)
amod(interpretation, different)
obj(have, interpretation)
case(democracy, of)
nmod(interpretation, democracy)
punct(interpretation, ,)
nsubj:pass(discuss, which)
aux(discuss, will)
aux:pass(discuss, be)
acl:relcl(interpretation, discuss)
advmod(discuss, later)
punct(tell, ,)
cc(tell, and)
nmod:poss(judgment, they)
nsubj(tell, judgment)
advmod(tell, never)
conj(have, tell)
obj(tell, they)
mark(unite, that)
det(Three, the)
compound(Three, Big)
nsubj(unite, Three)
aux(unite, should)
ccomp(tell, unite)
mark(establish, in)
advcl(unite, establish)
amod(condition, democratic)
obj(establish, condition)
punct(unite, ,)
mark(understand, as)
nsubj(understand, we)
advcl(establish, understand)
obj(understand, they)
punct(understand, ,)
case(zone, within)
nmod:poss(zone, they)
obl(understand, zone)
case(influence, of)
nmod(zone, influence)
punct(merge, .)
nsubj(think, Professor)
flat(Professor, McNeill)
root(ROOT, think)
mark(realize, that)
case(Yalta, at)
obl(realize, Yalta)
punct(realize, ,)
nsubj(realize, Stalin)
aux(realize, do)
advmod(realize, not)
advmod(realize, fully)
ccomp(think, realize)
det(dilemma, the)
obj(realize, dilemma)
nsubj(face, which)
acl:relcl(dilemma, face)
obj(face, he)
punct(think, ,)
mark(think, that)
nsubj(think, he)
advcl(face, think)
det(exclusion, the)
nsubj:pass(resent, exclusion)
case(voter, of)
det(voter, the)
amod(voter, anti-soviet)
nmod(exclusion, voter)
case(election, from)
compound(election, East)
amod(election, european)
nmod(voter, election)
aux(resent, would)
advmod(resent, not)
aux:pass(resent, be)
advmod(resent, greatly)
ccomp(think, resent)
case(ally, by)
nmod:poss(ally, he)
obl(resent, ally)
punct(resent, ,)
mark(face, while)
advmod(Roosevelt, neither)
nsubj(face, Roosevelt)
cc(Churchill, nor)
conj(Roosevelt, Churchill)
advmod(face, frankly)
advcl(resent, face)
punct(face, ``)
det(fact, the)
obj(face, fact)
mark(return, that)
punct(return, ,)
case(Poland, in)
obl(return, Poland)
case(least, at)
obl(free, least)
punct(election, ,)
advmod(free, genuinely)
amod(election, free)
amod(election, democratic)
nsubj(return, election)
aux(return, would)
acl(fact, return)
obj(return, government)
amod(government, unfriendly)
case(Russia, to)
obl(unfriendly, Russia)
punct(return, '')
punct(return, ,)
case(definition, by)
det(definition, any)
obl(return, definition)
case(friendliness, of)
amod(friendliness, international)
nmod(definition, friendliness)
punct(propaganda, .)
advmod(obscure, also)
compound(time, war)
punct(time, -)
compound(propaganda, time)
nsubj(obscure, propaganda)
cc(cooperation, and)
conj(propaganda, cooperation)
aux(obscure, have)
punct(obscure, ``)
appos(fact, obscure)
det(difference, the)
obj(obscure, difference)
case(idea, between)
amod(idea, russian)
cc(western, and)
conj(russian, western)
nmod(difference, idea)
case(democracy, of)
nmod(idea, democracy)
punct(obscure, '')
punct(seem, ,)
cc(seem, and)
expl(seem, it)
conj(obscure, seem)
xcomp(seem, better)
mark(have, to)
advcl(better, have)
obj(have, they)
xcomp(have, cover)
case(formulae, by)
amod(formulae, verbal)
obl(cover, formulae)
mark(imperil, than)
mark(imperil, to)
advcl(cover, imperil)
det(victory, the)
amod(victory, military)
obj(imperil, victory)
case(Germany, over)
nmod(victory, Germany)
cc(Japan, and)
conj(Germany, Japan)
punct(think, .)
det(application, the)
nsubj(please, application)
case(formulae, of)
det(formulae, these)
nmod(application, formulae)
aux(please, could)
advmod(please, not)
discourse(think, please)
det(side, both)
obj(please, side)
punct(side, ,)
mark(attempt, for)
nsubj(attempt, they)
advmod(attempt, really)
advcl(side, attempt)
mark(marry, to)
xcomp(attempt, marry)
det(impossible, the)
obj(marry, impossible)
case(inevitable, to)
det(inevitable, the)
obl(impossible, inevitable)
punct(marry, .)
mark(oblige, while)
advcl(marry, oblige)
mark(concede, to)
xcomp(oblige, concede)
obj(concede, government)
case(Europe, in)
compound(Europe, East)
nmod(government, Europe)
acl(government, ally)
case(Union, with)
det(Union, the)
compound(Union, Soviet)
obl(ally, Union)
case(it, instead)
fixed(instead, of)
fixed(instead, oppose)
case(it, to)
obl(ally, it)
punct(think, ,)
nsubj(think, we)
root(ROOT, think)
nsubj(preserve, we)
aux(preserve, have)
ccomp(think, preserve)
nmod:poss(system, we)
amod(system, social)
cc(economic, and)
conj(social, economic)
obj(preserve, system)
case(Europe, in)
compound(Europe, East)
obl(preserve, Europe)
punct(think, .)
det(illusion, this)
nsubj:pass(describe, illusion)
aux:pass(describe, be)
root(ROOT, describe)
case(editorial, in)
det(editorial, a)
advmod(sight, far)
punct(sight, -)
amod(editorial, sight)
obl(describe, editorial)
case(Tribune, in)
det(Tribune, the)
compound(York, New)
compound(Tribune, York)
compound(Tribune, Herald)
nmod(editorial, Tribune)
punct(editorial, ,)
case(March, on)
obl(describe, March)
nummod(March, 5)
punct(March, ,)
nummod(March, 1947)
punct(describe, ,)
case(connection, in)
obl(describe, connection)
case(submission, with)
det(submission, the)
nmod(connection, submission)
case(treaty, of)
det(treaty, the)
amod(treaty, satellite)
compound(treaty, peace)
nmod(submission, treaty)
case(Senate, to)
det(Senate, the)
nmod(treaty, Senate)
punct(describe, .)
mark(do, in)
advcl(ask, do)
advmod(do, so)
nsubj(ask, Marshall)
cc(Byrnes, and)
conj(Marshall, Byrnes)
aux(ask, be)
punct(ask, ``)
root(ROOT, ask)
case(ratification, for)
det(ratification, the)
obl(ask, ratification)
case(lesson, of)
det(lesson, a)
amod(lesson, grim)
nmod(ratification, lesson)
case(fact, in)
det(fact, the)
obl(ask, fact)
case(life, of)
amod(life, international)
nmod(fact, life)
punct(ask, '')
punct(entertained, .)
nsubj(entertained, we)
aux(entertained, have)
parataxis(ask, entertained)
amod(idea, exaggerate)
obj(entertained, idea)
case(victory, about)
nmod:poss(victory, we)
nmod(idea, victory)
advmod(establish, automatically)
acl(victory, establish)
nmod:poss(system, we)
obj(establish, system)
case(world, throughout)
det(world, the)
obl(establish, world)
punct(entertained, .)
punct(entertained, ``)
nsubj:pass(troubled, we)
aux:pass(troubled, be)
root(ROOT, troubled)
case(fate, about)
det(fate, the)
obl(troubled, fate)
case(States, of)
det(States, the)
compound(States, Baltic)
nmod(fate, States)
punct(troubled, .)
nsubj(leave, Yalta)
parataxis(troubled, leave)
obj(leave, we)
case(illusion, with)
amod(illusion, comforting)
obl(leave, illusion)
case(economy, of)
det(economy, a)
amod(economy, western)
obl:npmod(democratic, capitalist)
punct(democratic, -)
amod(economy, democratic)
amod(economy, political)
nmod(illusion, economy)
acl(economy, reign)
amod(line, supreme)
case(line, up)
fixed(up, to)
det(line, the)
compound(line, Curzon)
obl(reign, line)
cc(border, and)
det(border, the)
conj(line, border)
case(Bessarabia, of)
nmod(border, Bessarabia)
punct(border, '')
punct(add, ()
nsubj(add, italic)
parataxis(border, add)
punct(add, ))
punct(description, .)
nsubj(description, this)
cop(description, be)
det(description, a)
amod(description, penetrate)
ccomp(add, description)
case(illusion, of)
nmod:poss(illusion, we)
amod(illusion, post-war)
nmod(description, illusion)
punct(illusion, ,)
nsubj(apply, which)
acl:relcl(illusion, apply)
case(area, to)
amod(area, other)
obl(apply, area)
case(Europe, than)
compound(Europe, East)
obl(apply, Europe)
punct(troubled, .)
det(editorial, the)
amod(editorial, same)
nsubj(continue, editorial)
root(ROOT, continue)
obj(continue, that)
punct(continue, ``)
nsubj(expect, we)
root(ROOT, expect)
mark(democratize, to)
xcomp(expect, democratize)
obj(democratize, Japan)
cc(Korea, and)
conj(Japan, Korea)
cc(see, and)
mark(see, to)
conj(democratize, see)
det(pattern, a)
amod(pattern, new)
compound(pattern, China)
obj(see, pattern)
obl:npmod(see, itself)
advmod(see, easily)
case(institution, on)
nmod:poss(institution, we)
obl(see, institution)
punct(expect, .)
nsubj(expect, we)
root(ROOT, expect)
punct(expect, ,)
case(short, in)
obl(expect, short)
punct(expect, ,)
mark(make, that)
nsubj(make, most)
case(world, of)
det(world, the)
nmod(most, world)
aux(make, would)
ccomp(expect, make)
obj(make, itself)
compound:prt(make, over)
case(image, in)
nmod:poss(image, we)
obl(make, image)
cc(simple, and)
mark(simple, that)
nsubj(simple, it)
aux(simple, would)
cop(simple, be)
advmod(simple, relatively)
conj(make, simple)
punct(simple, ,)
case(position, from)
det:predet(position, such)
det(position, a)
obl(simple, position)
punct(deal, ,)
mark(deal, to)
acl(position, deal)
case(aberration, with)
det(aberration, the)
amod(aberration, localize)
obl(deal, aberration)
case(Union, of)
det(Union, the)
compound(Union, Soviet)
nmod(aberration, Union)
punct(aberration, '')
punct(correspond, .)
cc(correspond, yet)
advmod(correspond, actually)
punct(correspond, ``)
det(image, the)
nsubj(correspond, image)
conj(simple, correspond)
case(way, in)
det(way, no)
obl(correspond, way)
case(actuality, to)
det(actuality, the)
nmod(way, actuality)
case(world, of)
det(world, the)
amod(world, post-war)
nmod(actuality, world)
punct(correspond, .)
cc(reach, neither)
nmod:poss(military, we)
nsubj(reach, military)
punct(military, ,)
nmod:poss(economic, we)
amod(military, economic)
cc(power, nor)
nmod:poss(power, we)
amod(power, ideological)
conj(military, power)
conj(correspond, reach)
advmod(enough, far)
advmod(reach, enough)
punct(reach, '')
mark(determine, to)
advcl(reach, determine)
det(fate, the)
obj(determine, fate)
case(Europe, of)
compound(Europe, East)
nmod(fate, Europe)
punct(add, .)
advmod(add, then)
det(editorial, the)
nsubj(add, editorial)
parataxis(expect, add)
advmod(add, prophetically)
punct(expect, :)
punct(expect, ``)
advmod(far, how)
advmod(reach, far)
nsubj(reach, they)
aux(reach, may)
csubj(undetermined, reach)
case(Asia, in)
obl(reach, Asia)
cop(undetermined, be)
advmod(undetermined, yet)
root(ROOT, undetermined)
punct(fall, ,)
cc(fall, but)
nsubj(fall, they)
conj(undetermined, fall)
advmod(short, far)
xcomp(fall, short)
case(dream, of)
nmod:poss(dream, we)
obl(short, dream)
case(conference, of)
det(conference, the)
compound(conference, war)
nmod(dream, conference)
punct(conference, '')
punct(here, .)
parataxis(fall, here)
cop(here, be)
det(explanation, the)
amod(explanation, best)
amod(explanation, short)
nsubj(here, explanation)
case(origin, of)
det(origin, the)
nmod(explanation, origin)
case(War, of)
det(War, the)
compound(War, Cold)
nmod(origin, War)
nsubj:pass(write, that)
aux(write, have)
aux:pass(write, be)
acl:relcl(War, write)
punct(fail, .)
advcl(write, fail)
mark(heed, to)
xcomp(fail, heed)
det(lesson, the)
obj(heed, lesson)
advmod(contain, so)
advmod(contain, clearly)
advcl(heed, contain)
case(treaty, in)
det(treaty, the)
amod(treaty, satellite)
obl(contain, treaty)
punct(re-declare, ,)
nsubj(re-declare, President)
flat(President, Truman)
advcl(contain, re-declare)
det(War, the)
compound(War, Cold)
obj(re-declare, War)
case(March, on)
obl(re-declare, March)
nummod(March, 12)
punct(March, ,)
nummod(March, 1947)
punct(March, ,)
case(Doctrine, in)
det(Doctrine, the)
compound(Doctrine, Truman)
nmod(March, Doctrine)
punct(Doctrine, ,)
advmod(week, exactly)
nummod(week, one)
nmod:npmod(Doctrine, week)
mark(write, after)
det(editorial, the)
compound(editorial, Herald)
compound(editorial, Tribune)
nsubj:pass(write, editorial)
aux:pass(write, be)
acl:relcl(week, write)
punct(announce, ,)
cc(year, and)
det(year, a)
obl:npmod(after, year)
mark(announce, after)
det(War, the)
compound(War, Cold)
nsubj:pass(announce, War)
aux(announce, have)
aux:pass(announce, be)
advcl(write, announce)
case(Churchill, by)
obl(announce, Churchill)
case(Fulton, at)
obl(announce, Fulton)
punct(Fulton, ,)
appos(Fulton, Missouri)
punct(Fulton, ,)
case(presence, in)
nmod:poss(presence, Truman)
case(Truman, 's)
obl(go, presence)
punct(go, .)
advmod(go, then)
nsubj(go, China)
advmod(go, promptly)
acl:relcl(Fulton, go)
obj(go, Communist)
punct(have, ,)
cc(have, and)
nsubj(have, Mr.)
flat(Mr., Truman)
conj(go, have)
mark(fight, to)
xcomp(have, fight)
det(war, the)
amod(war, interminable)
amod(war, Korean)
obj(fight, war)
case(democratization, for)
det(democratization, the)
nmod(war, democratization)
case(Korea, of)
nmod(democratization, Korea)
mark(learn, before)
nsubj(learn, we)
advcl(fight, learn)
advmod(far, how)
advmod(reach, far)
nmod:poss(writ, we)
nsubj(reach, writ)
aux(reach, do)
punct(reach, ``)
ccomp(learn, reach)
case(Asia, in)
obl(reach, Asia)
punct(reach, '')
punct(reach, .)
obl:tmod(reach, year)
case(war, of)
nmod(year, war)
punct(strain, ,)
conj(war, strain)
punct(hatred, ,)
cc(hatred, and)
conj(war, hatred)
punct(year, ;)
punct(year, ;)
case(expenditure, of)
amod(expenditure, heavy)
compound(expenditure, arm)
conj(war, expenditure)
cc(danger, and)
amod(danger, constant)
nsubj(have, danger)
case(war, of)
det(war, another)
compound(war, world)
nmod(danger, war)
acl:relcl(expenditure, have)
mark(ensue, to)
xcomp(have, ensue)
mark(bring, before)
det(States, the)
compound(States, United)
nsubj(bring, States)
aux(bring, could)
advcl(ensue, bring)
obj(bring, itself)
mark(accept, to)
xcomp(bring, accept)
det(result, the)
nummod(result, two)
amod(result, chief)
obj(accept, result)
case(War, of)
compound(War, World)
nmod(result, War)
nummod(War, 2)
punct(result, ,)
punct(accept, --)
compound(control, Communist)
appos(result, control)
case(Europe, of)
compound(Europe, East)
nmod(control, Europe)
cc(China, and)
conj(Europe, China)
punct(balance, --)
det(balance, a)
amod(balance, new)
appos(control, balance)
case(power, of)
nmod(balance, power)
punct(balance, .)
mark(rage, while)
det(War, the)
compound(War, Cold)
nsubj(rage, War)
advcl(balance, rage)
expl(easy, it)
cop(easy, be)
ccomp(rage, easy)
mark(blame, to)
csubj(easy, blame)
obj(blame, it)
det(it, all)
case(Yalta, on)
obl(blame, Yalta)
punct(undetermined, .)
cc(find, yet)
punct(find, ,)
mark(summarize, in)
advcl(find, summarize)
det(series, a)
obj(summarize, series)
case(essays, of)
amod(essays, careful)
nmod(series, essays)
case(Conference, on)
det(Conference, the)
compound(Conference, Yalta)
nmod(essays, Conference)
punct(find, ,)
nsubj(find, Forrest)
flat(Forrest, Pogue)
aux(find, could)
root(ROOT, find)
det(basis, no)
obj(find, basis)
case(Yalta, for)
nmod(basis, Yalta)
acl(basis, become)
punct(symbol, ``)
det(symbol, a)
xcomp(become, symbol)
case(betrayal, for)
nmod(symbol, betrayal)
cc(shibboleth, and)
det(shibboleth, a)
conj(betrayal, shibboleth)
case(opponent, for)
det(opponent, the)
nmod(shibboleth, opponent)
case(Roosevelt, of)
nmod(opponent, Roosevelt)
cc(cooperation, and)
amod(cooperation, international)
conj(Roosevelt, cooperation)
punct(Roosevelt, '')
punct(find, .)
mark(publish, when)
det(paper, the)
compound(paper, Yalta)
nsubj:pass(publish, paper)
aux:pass(publish, be)
advmod(publish, finally)
advcl(reveal, publish)
case(fanfare, with)
amod(fanfare, great)
obl(publish, fanfare)
nsubj(reveal, they)
aux(reveal, have)
parataxis(find, reveal)
det(betrayal, no)
obj(reveal, betrayal)
case(anyone, by)
nmod(betrayal, anyone)
punct(find, .)
det(analysis, a)
nsubj(fall, analysis)
case(election, of)
det(election, the)
nmod(analysis, election)
root(ROOT, fall)
advmod(fall, naturally)
case(part, in)
nummod(part, four)
obl(fall, part)
punct(fall, .)
advmod(process, first)
cop(process, be)
det(process, the)
amod(process, long)
cc(obscure, and)
advmod(obscure, still)
advmod(obscure, somewhat)
conj(long, obscure)
root(ROOT, process)
case(preparation, of)
nmod(process, preparation)
punct(planning, ,)
conj(preparation, planning)
cc(discussion, and)
conj(preparation, discussion)
punct(process, .)
nsubj(begin, preparation)
root(ROOT, begin)
advmod(more, slightly)
advmod(year, more)
fixed(more, than)
det(year, a)
obl:tmod(begin, year)
case(independence, after)
obl(begin, independence)
case(step, with)
det(step, the)
amod(step, first)
obl(begin, step)
mark(organize, to)
acl(step, organize)
amod(commune, rural)
obj(organize, commune)
punct(begin, .)
det(interest, all)
amod(interest, political)
nsubj(support, interest)
root(ROOT, support)
amod(planning, electoral)
obj(support, planning)
punct(support, ,)
mark(be, although)
expl(be, there)
advcl(support, be)
det(sign, some)
nsubj(be, sign)
obj(lead, that)
det(uncertainty, the)
amod(uncertainty, inherent)
nsubj(lead, uncertainty)
case(judgment, of)
det(judgment, a)
amod(judgment, popular)
nmod(uncertainty, judgment)
acl(sign, lead)
case(procrastination, to)
det(procrastination, some)
obl(lead, procrastination)
punct(support, .)
det(aspect, the)
amod(aspect, second)
amod(aspect, major)
nsubj(procedure, aspect)
case(election, of)
det(election, the)
nmod(aspect, election)
cop(procedure, be)
det(procedure, the)
amod(procedure, actual)
root(ROOT, procedure)
case(registration, of)
nmod(procedure, registration)
punct(nomination, ,)
conj(registration, nomination)
cc(voting, and)
conj(registration, voting)
punct(procedure, .)
amod(skill, considerable)
amod(skill, technical)
nsubj:pass(use, skill)
aux:pass(use, be)
root(ROOT, use)
cc(reproach, and)
det(administration, the)
nsubj(reproach, administration)
case(election, of)
det(election, the)
nmod(administration, election)
cop(reproach, be)
advmod(reproach, generally)
case(reproach, above)
conj(use, reproach)
punct(use, .)
advmod(evidence, however)
punct(evidence, ,)
det(result, the)
advmod(differentiate, regionally)
amod(result, differentiate)
nsubj(evidence, result)
punct(result, ,)
nsubj(appear, which)
acl:relcl(result, appear)
advmod(appear, below)
case(table, in)
obl(appear, table)
punct(evidence, ,)
cop(evidence, be)
amod(evidence, interesting)
root(ROOT, evidence)
case(problem, of)
det(problem, the)
nmod(evidence, problem)
mark(develop, of)
acl(problem, develop)
compound(government, self)
punct(government, -)
obj(develop, government)
case(circumstance, under)
advmod(circumstance, even)
det(circumstance, the)
advmod(favorable, most)
amod(circumstance, favorable)
obl(develop, circumstance)
punct(evidence, . )
det(aspect, a)
amod(aspect, third)
nsubj(result, aspect)
punct(one, ,)
cc(one, and)
advmod(one, probably)
det(one, the)
conj(aspect, one)
amod(one, open)
case(controversy, to)
amod(controversy, most)
obl(open, controversy)
punct(result, ,)
cop(result, be)
det(result, the)
root(ROOT, result)
case(election, of)
det(election, the)
nmod(result, election)
punct(result, .)
det(procedure, the)
amod(procedure, electoral)
nsubj(prevent, procedure)
root(ROOT, prevent)
det(identification, the)
amod(identification, ready)
obj(prevent, identification)
case(affiliation, of)
compound(affiliation, party)
nmod(identification, affiliation)
punct(engage, ,)
cc(engage, but)
advmod(vitally, all)
advmod(interested, vitally)
amod(party, interested)
conj(identification, party)
punct(party, ,)
case(government, include)
det(government, the)
nmod(party, government)
nmod:npmod(government, itself)
punct(engage, ,)
aux:pass(engage, be)
advmod(engage, busily)
conj(prevent, engage)
mark(determine, in)
advcl(engage, determine)
det(identification, the)
compound(identification, party)
obj(determine, identification)
case(candidate, of)
det(candidate, all)
amod(candidate, successful)
nmod(identification, candidate)
det(month, the)
obl:tmod(determine, month)
case(election, follow)
det(election, the)
nmod(candidate, election)
punct(prevent, .)
det(point, the)
amod(point, fourth)
cc(conclude, and)
conj(fourth, conclude)
nsubj(be, point)
aux(be, will)
root(ROOT, be)
mark(estimate, to)
ccomp(be, estimate)
det(significance, the)
compound(run, long)
punct(run, -)
amod(significance, run)
obj(estimate, significance)
case(election, of)
det(election, the)
nmod(significance, election)
cc(figure, and)
advmod(figure, how)
nsubj(figure, they)
conj(estimate, figure)
case(pattern, in)
det(pattern, the)
amod(pattern, current)
obl(figure, pattern)
case(politics, of)
amod(politics, internal)
nmod(pattern, politics)
punct(be, .)
nsubj(figure, election)
aux(figure, have)
root(ROOT, figure)
advmod(figure, prominently)
case(program, in)
advmod(program, nearly)
det(program, every)
compound(program, government)
obl(figure, program)
cc(address, and)
amod(address, official)
conj(program, address)
case(independence, since)
nmod(address, independence)
punct(figure, .)
nsubj:pass(stress, they)
aux:pass(stress, be)
root(ROOT, stress)
case(speech, in)
det(speech, the)
obl(stress, speech)
case(si, of)
nmod(speech, si)
flat(si, Mubarak)
flat(Mubarak, Bekkai)
mark(form, when)
det(Council, the)
amod(Council, first)
nsubj:pass(form, Council)
case(Ministers, of)
nmod(Council, Ministers)
aux:pass(form, be)
advcl(stress, form)
cc(again, and)
conj(form, again)
mark(take, when)
det(Istiqlal, the)
nsubj(take, Istiqlal)
advcl(form, take)
det(role, a)
amod(role, lead)
obj(take, role)
case(Council, in)
det(Council, the)
amod(Council, second)
nmod(role, Council)
punct(stress, .)
compound(Muhammad, King)
root(ROOT, Muhammad)
nummod(know, 5)
punct(know, ,)
aux:pass(know, be)
root(ROOT, know)
mark(sympathetic, to)
cop(sympathetic, be)
advmod(sympathetic, most)
xcomp(know, sympathetic)
case(formation, to)
det(formation, the)
obl(sympathetic, formation)
case(government, of)
amod(government, local)
compound(government, self)
punct(government, -)
nmod(formation, government)
cc(make, and)
conj(know, make)
det(promise, the)
amod(promise, first)
amod(promise, firm)
obj(make, promise)
case(election, of)
nmod(promise, election)
case(May, on)
obl(make, May)
nummod(May, Day)
punct(May, ,)
nummod(May, 1957)
punct(know, .)
expl(follow, there)
root(ROOT, follow)
det(discussion, a)
amod(discussion, long)
cc(bitter, and)
advmod(bitter, sometimes)
conj(long, bitter)
obj(follow, discussion)
case(feasibility, of)
det(feasibility, the)
nmod(discussion, feasibility)
case(election, of)
nmod(feasibility, election)
case(fall, for)
det(fall, the)
obl(follow, fall)
case(1957, of)
nmod(fall, 1957)
punct(follow, ,)
case(which, in)
obl(appear, which)
expl(appear, it)
acl:relcl(discussion, appear)
mark(take, that)
det(Minister, the)
nsubj(take, Minister)
case(Interior, of)
det(Interior, the)
nmod(Minister, Interior)
ccomp(appear, take)
det(view, the)
advmod(pessimistic, most)
amod(view, pessimistic)
obj(take, view)
cc(something, and)
mark(something, that)
det(Istiqlal, the)
nsubj(something, Istiqlal)
cop(something, be)
conj(take, something)
amod(something, less)
case(enthusiastic, than)
obl(less, enthusiastic)
punct(follow, .)
case(process, since)
det(process, the)
amod(process, complicated)
obl(begin, process)
mark(establish, of)
acl(process, establish)
amod(commune, new)
obj(establish, commune)
cc(review, and)
conj(establish, review)
det(plan, the)
amod(plan, rudimentary)
obj(review, plan)
acl(plan, leave)
case(French, by)
det(French, the)
obl(leave, French)
aux(begin, do)
advmod(begin, not)
advmod(begin, even)
root(ROOT, begin)
case(fall, until)
det(fall, the)
obl(begin, fall)
case(1957, of)
nmod(fall, 1957)
punct(appear, ,)
det(goal, this)
nsubj(appear, goal)
parataxis(begin, appear)
advmod(ambitious, somewhat)
xcomp(appear, ambitious)
punct(appear, . )
case(beginning, from)
det(beginning, the)
amod(beginning, very)
obl(type, beginning)
det(discussion, the)
amod(discussion, electoral)
nsubj(type, discussion)
acl(discussion, raise)
amod(issue, fundamental)
obj(raise, issue)
case(politics, in)
amod(politics, moroccan)
nmod(issue, politics)
punct(type, ,)
advmod(type, precisely)
det(type, the)
root(ROOT, type)
case(question, of)
nmod(type, question)
nsubj(difficult, that)
cop(difficult, be)
advmod(difficult, most)
acl:relcl(question, difficult)
mark(resolve, to)
advcl(difficult, resolve)
case(government, in)
det(government, the)
amod(government, new)
obl(resolve, government)
punct(type, .)
mark(issue, until)
det(Charter, the)
nsubj:pass(issue, Charter)
case(Liberties, of)
nmod(Charter, Liberties)
aux:pass(issue, be)
advcl(be, issue)
case(fall, in)
det(fall, the)
obl(issue, fall)
case(1958, of)
nmod(fall, 1958)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(guarantee, no)
nsubj(be, guarantee)
case(right, of)
det(right, the)
nmod(guarantee, right)
mark(assemble, to)
acl(right, assemble)
cc(organize, or)
mark(organize, to)
conj(assemble, organize)
case(purpose, for)
amod(purpose, political)
obl(organize, purpose)
punct(be, .)
det(Istiqlal, the)
nsubj(united, Istiqlal)
cop(united, be)
advmod(united, still)
advmod(united, firmly)
root(ROOT, united)
case(1957, in)
obl(united, 1957)
punct(object, ,)
cc(object, but)
det(p.d.i., the)
nsubj(object, p.d.i.)
punct(Parti, ()
appos(p.d.i., Parti)
compound(Independance, democratique)
compound(Independance, de)
compound(Independance, l')
appos(p.d.i., Independance)
punct(Independance, ))
punct(p.d.i., ,)
det(party, the)
advmod(important, most)
amod(party, important)
amod(party, minor)
appos(p.d.i., party)
case(time, at)
det(time, the)
nmod(party, time)
punct(object, ,)
conj(united, object)
case(predominance, to)
det(Istiqlal, the)
nmod:poss(predominance, Istiqlal)
case(Istiqlal, 's)
obl(object, predominance)
case(service, in)
det(service, the)
amod(service, civil)
nmod(predominance, service)
cc(influence, and)
conj(service, influence)
case(maroc, in)
compound(maroc, Radio)
nmod(influence, maroc)
punct(united, .)
expl(be, there)
root(ROOT, be)
nsubj(be, rumor)
mark(favor, that)
det(Ministry, the)
nsubj(favor, Ministry)
case(Interior, of)
det(Interior, the)
nmod(Ministry, Interior)
acl(rumor, favor)
det(process, a)
amod(process, arbitrary)
punct(process, ,)
punct(process, ``)
amod(process, non-political)
punct(process, '')
obj(favor, process)
punct(process, ,)
nsubj:pass(affirm, which)
aux:pass(affirm, be)
advmod(affirm, indirectly)
acl:relcl(process, affirm)
mark(intervened, when)
det(King, the)
nsubj(intervened, King)
advmod(intervened, personally)
advcl(affirm, intervened)
case(meeting, in)
det(meeting, the)
amod(meeting, plan)
obl(intervened, meeting)
punct(be, .)
det(day, the)
obl:tmod(issue, day)
case(intervention, follow)
nmod:poss(intervention, he)
nmod(day, intervention)
det(palace, the)
nsubj(issue, palace)
root(ROOT, issue)
det(statement, a)
obj(issue, statement)
acl(statement, reassure)
det(citizen, the)
obj(reassure, citizen)
mark(support, that)
punct(support, ``)
det(possibility, the)
nsubj:pass(support, possibility)
mark(introduce, of)
acl(possibility, introduce)
obj(introduce, appeal)
case(establishment, concern)
det(establishment, the)
nmod(appeal, establishment)
case(list, of)
amod(list, electoral)
nmod(establishment, list)
punct(list, ,)
conj(establishment, list)
case(candidate, of)
nmod(list, candidate)
cc(holding, and)
advmod(holding, finally)
det(holding, the)
conj(establishment, holding)
case(consultation, of)
det(consultation, the)
nmod(holding, consultation)
nmod:npmod(consultation, itself)
punct(holding, '')
aux(support, would)
aux:pass(support, be)
ccomp(issue, support)
case(King, by)
det(King, the)
obl(support, King)
obl(support, himself)
punct(issue, .)
det(crisis, the)
compound(crisis, Ifni)
nsubj(postpone, crisis)
case(fall, in)
det(fall, the)
nmod(crisis, fall)
case(1957, of)
nmod(fall, 1957)
root(ROOT, postpone)
amod(consideration, further)
obj(postpone, consideration)
case(election, of)
nmod(consideration, election)
punct(call, ,)
cc(call, but)
amod(consultant, french)
nsubj:pass(call, consultant)
aux:pass(call, be)
conj(postpone, call)
compound:prt(call, in)
cc(appear, and)
nsubj(appear, notice)
case(investigation, of)
amod(investigation, further)
nmod(notice, investigation)
conj(call, appear)
case(time, from)
obl(appear, time)
case(time, to)
nmod(time, time)
punct(postpone, .)
case(January, in)
obl(announce, January)
punct(January, ,)
nummod(January, 1958)
punct(announce, ,)
det(Minister, the)
nsubj(announce, Minister)
case(Interior, of)
det(Interior, the)
nmod(Minister, Interior)
root(ROOT, announce)
mark(ready, that)
det(law, a)
amod(law, election)
nsubj(ready, law)
cop(ready, be)
ccomp(announce, ready)
mark(submit, to)
aux:pass(submit, be)
xcomp(ready, submit)
case(King, to)
det(King, the)
obl(submit, King)
punct(appear, ,)
det(rumor, the)
nsubj(appear, rumor)
case(date, of)
amod(date, election)
nmod(rumor, date)
ccomp(announce, appear)
advmod(again, once)
advmod(appear, again)
punct(appear, ,)
advmod(spring, first)
case(spring, for)
obl(appear, spring)
case(1958, of)
nmod(spring, 1958)
cc(later, and)
conj(1958, later)
case(summer, for)
det(summer, the)
obl(later, summer)
punct(announce, .)
mark(prepare, although)
det(government, the)
nsubj:pass(prepare, government)
aux:pass(prepare, be)
advmod(prepare, probably)
advcl(make, prepare)
case(election, for)
obl(prepare, election)
case(mid-1958, by)
obl(prepare, mid-1958)
punct(make, ,)
det(decision, the)
amod(decision, first)
nsubj(make, decision)
aux(make, be)
det(doubt, no)
obl:npmod(make, doubt)
root(ROOT, make)
advmod(difficult, more)
xcomp(make, difficult)
case(strife, as)
compound(strife, party)
obl(difficult, strife)
acl(strife, multiply)
punct(make, .)
case(1957, in)
amod(1957, late)
obl(appear, 1957)
det(M.P., the)
nsubj(appear, M.P.)
punct(Populaire, ()
compound(Populaire, mouvement)
appos(M.P., Populaire)
punct(Populaire, ))
root(ROOT, appear)
cc(reveal, and)
case(spring, in)
det(spring, the)
obl(reveal, spring)
case(1958, of)
nmod(spring, 1958)
det(strain, the)
amod(strain, internal)
nsubj:pass(reveal, strain)
case(Istiqlal, of)
det(Istiqlal, the)
nmod(strain, Istiqlal)
aux:pass(reveal, be)
conj(appear, reveal)
mark(form, when)
det(Council, the)
amod(Council, third)
nsubj:pass(form, Council)
case(Government, of)
nmod(Council, Government)
case(Balafrej, under)
nmod(Council, Balafrej)
aux:pass(form, be)
advcl(reveal, form)
case(support, without)
obl(form, support)
case(element, from)
amod(element, progressive)
nmod(support, element)
case(party, in)
det(party, the)
nmod(element, party)
punct(appear, .)
det(party, the)
nsubj(unprepare, party)
cop(unprepare, be)
case(unprepare, on)
det(unprepare, the)
amod(unprepare, whole)
root(ROOT, unprepare)
case(election, for)
obl(unprepare, election)
punct(unprepare, ,)
mark(experience, while)
det(people, the)
nsubj(experience, people)
aux(experience, be)
advmod(experience, still)
advcl(unprepare, experience)
compound(independence, post)
punct(independence, -)
compound(down, independence)
compound(down, let)
punct(down, -)
compound:prt(experience, down)
cc(suffer, and)
conj(experience, suffer)
det(effect, the)
amod(effect, after-)
obj(suffer, effect)
case(harvest, of)
amod(harvest, poor)
nmod(effect, harvest)
case(1957, in)
nmod(harvest, 1957)
punct(effect, .)
case(crise, despite)
det(crise, the)
amod(crise, internal)
cc(international, and)
conj(internal, international)
obl(remain, crise)
nsubj(harass, that)
acl:relcl(crise, harass)
obj(harass, Morocco)
det(election, the)
nsubj(remain, election)
parataxis(unprepare, remain)
det(issue, a)
amod(issue, central)
xcomp(remain, issue)
punct(issue, .)
nsubj(figure, they)
parataxis(issue, figure)
advmod(figure, prominently)
case(Balafrej, in)
det(Balafrej, the)
obl(figure, Balafrej)
flat(Balafrej, government)
case(May, of)
nmod(government, May)
punct(May, ,)
nummod(May, 1958)
punct(Balafrej, ,)
obj(determined, which)
det(King, the)
nsubj(determined, King)
cop(determined, be)
advmod(determined, reportedly)
acl:relcl(Balafrej, determined)
mark(keep, to)
xcomp(determined, keep)
case(office, in)
obl(keep, office)
mark(hold, until)
nsubj:pass(hold, election)
aux(hold, could)
aux:pass(hold, be)
advcl(keep, hold)
punct(unprepare, .)
cc(seek, but)
nsubj(seek, the)
advmod(seek, eagerly)
root(ROOT, seek)
punct(homogeneity, ``)
obj(seek, homogeneity)
punct(homogeneity, '')
case(Council, of)
det(Council, the)
compound(Council, Balafrej)
nmod(homogeneity, Council)
case(Government, of)
nmod(Council, Government)
aux:pass(achieve, be)
advmod(achieve, never)
ccomp(seek, achieve)
mark(quarrel, as)
det(Istiqlal, the)
nsubj(quarrel, Istiqlal)
advcl(achieve, quarrel)
case(policy, over)
amod(policy, foreign)
obl(quarrel, policy)
punct(politics, ,)
compound(politics, labor)
conj(policy, politics)
cc(development, and)
amod(development, economic)
conj(policy, development)
punct(seek, .)
case(December, by)
obl(have, December)
punct(December, ,)
nummod(December, 1958)
punct(have, ,)
mark(become, when)
punct(become, ')
nsubj(become, Abdallah)
flat(Abdallah, Ibrahim)
advcl(have, become)
xcomp(become, President)
case(Council, of)
det(Council, the)
nmod(President, Council)
punct(have, ,)
nsubj(have, election)
root(ROOT, have)
advmod(greater, even)
amod(importance, greater)
obj(have, importance)
punct(have, .)
nsubj:pass(look, they)
aux:pass(look, be)
advmod(look, increasingly)
root(ROOT, look)
obl(look, upon)
case(means, as)
det(means, a)
obl(look, means)
mark(establish, of)
acl(means, establish)
det(commune, the)
amod(commune, new)
amod(commune, rural)
obj(establish, commune)
case(focus, as)
det(focus, the)
obl(establish, focus)
case(effort, of)
det(effort, a)
amod(effort, new)
punct(effort, ,)
amod(effort, constructive)
amod(effort, national)
nmod(focus, effort)
punct(look, .)
mark(minimize, to)
advcl(form, minimize)
det(chance, the)
obj(minimize, chance)
mark(repeat, of)
acl(chance, repeat)
det(debacle, the)
compound(debacle, Balafrej)
obj(repeat, debacle)
det(Ibrahim, the)
nsubj:pass(form, Ibrahim)
flat(Ibrahim, government)
aux:pass(form, be)
root(ROOT, form)
punct(form, . )
det(personnel, a)
compound(personnel, titre)
nsubj:pass(create, personnel)
cc(office, and)
det(office, a)
amod(office, special)
conj(personnel, office)
aux:pass(create, be)
root(ROOT, create)
case(Ministry, in)
det(Ministry, the)
obl(create, Ministry)
case(Interior, of)
det(Interior, the)
nmod(Ministry, Interior)
mark(plan, to)
advcl(create, plan)
cc(conduct, and)
mark(conduct, to)
conj(plan, conduct)
det(election, the)
obj(conduct, election)
punct(create, .)
case(time, by)
det(time, this)
obl(be, time)
expl(be, there)
root(ROOT, be)
amod(doubt, little)
nsubj(be, doubt)
cc(complete, but)
det(plan, what)
compound(plan, election)
nsubj(complete, plan)
cop(complete, be)
conj(be, complete)
punct(be, .)
expl(remain, there)
root(ROOT, remain)
advmod(task, only)
det(task, the)
amod(task, delicate)
nsubj(remain, task)
mark(maneuver, of)
acl(task, maneuver)
det(law, the)
obj(maneuver, law)
case(labyrinth, through)
det(labyrinth, the)
obl(maneuver, labyrinth)
case(politics, of)
compound(politics, Palace)
nmod(labyrinth, politics)
cc(make, and)
conj(maneuver, make)
det(number, a)
amod(number, small)
obj(make, number)
case(decision, of)
compound(decision, policy)
nmod(number, decision)
punct(remain, .)
case(history, from)
det(history, the)
advmod(tortuous, rather)
amod(history, tortuous)
obl(emerge, history)
case(planning, of)
amod(planning, electoral)
nmod(history, planning)
case(Morocco, in)
nmod(planning, Morocco)
det(point, a)
amod(point, important)
nsubj(emerge, point)
root(ROOT, emerge)
case(election, concern)
det(election, the)
amod(election, first)
obl(emerge, election)
case(country, in)
det(country, a)
compound(country, develop)
nmod(election, country)
cc(evaluate, and)
conj(emerge, evaluate)
nmod:poss(result, they)
obj(evaluate, result)
punct(emerge, .)
case(country, in)
det(country, the)
amod(country, new)
obl(consider, country)
det(process, the)
amod(process, electoral)
nsubj:pass(consider, process)
aux:pass(consider, be)
root(ROOT, consider)
case(means, as)
det(means, a)
obl(consider, means)
mark(resolve, of)
acl(means, resolve)
obj(resolve, fundamental)
punct(bitter, ,)
cc(bitter, and)
advmod(bitter, sometimes)
conj(resolve, bitter)
punct(difference, ,)
conj(bitter, difference)
case(leader, among)
nmod(difference, leader)
cc(source, and)
advmod(source, also)
case(source, as)
det(source, a)
conj(difference, source)
case(guidance, of)
compound(guidance, policy)
nmod(source, guidance)
punct(consider, .)
case(absence, in)
det(absence, the)
obl(hope, absence)
case(reservoir, of)
det(reservoir, a)
nmod(absence, reservoir)
case(consensus, of)
amod(consensus, political)
nmod(reservoir, consensus)
det(group, each)
amod(group, organized)
amod(group, political)
nsubj(hope, group)
root(ROOT, hope)
mark(give, that)
det(election, the)
nsubj(give, election)
aux(give, will)
ccomp(hope, give)
iobj(give, they)
amod(prominence, new)
obj(give, prominence)
punct(system, ,)
cc(system, but)
case(system, in)
det(system, a)
conj(give, system)
advmod(be, where)
expl(be, there)
acl:relcl(system, be)
case(place, as)
advmod(place, yet)
det(place, no)
obl(be, place)
case(prominent, for)
det(prominent, the)
advmod(prominent, less)
nmod(place, prominent)
punct(hope, .)
csubj(clamor, lack)
det(institution, the)
amod(institution, respected)
cc(effective, and)
conj(respected, effective)
obj(lack, institution)
obj(help, that)
nsubj(help, consensus)
acl:relcl(institution, help)
xcomp(help, provide)
punct(provide, ,)
amod(party, minority)
obj(provide, party)
punct(party, ,)
case(p.d.i., such)
fixed(such, as)
det(p.d.i., the)
nmod(party, p.d.i.)
case(1957, in)
nmod(p.d.i., 1957)
cc(faction, and)
det(faction, the)
amod(faction, progressive)
compound(faction, Istiqlal)
conj(party, faction)
case(1958, in)
nmod(faction, 1958)
punct(clamor, ,)
root(ROOT, clamor)
case(election, for)
obl(clamor, election)
mark(power, when)
case(power, out)
case(power, of)
advcl(clamor, power)
punct(certain, ,)
cc(certain, but)
cop(certain, be)
advmod(certain, not)
case(all, at)
obl(certain, all)
conj(clamor, certain)
nsubj(wish, they)
ccomp(certain, wish)
mark(control, to)
aux:pass(control, be)
xcomp(wish, control)
case(choice, by)
amod(choice, popular)
obl(control, choice)
mark(power, when)
case(power, in)
advcl(control, power)
punct(tend, .)
nsubj(tend, those)
case(power, in)
nmod(those, power)
advcl(control, tend)
mark(procrastinate, to)
xcomp(tend, procrastinate)
cc(repudiate, and)
advmod(repudiate, even)
mark(repudiate, to)
conj(procrastinate, repudiate)
det(process, the)
amod(process, electoral)
obj(repudiate, process)
punct(clamor, .)
det(tendency, the)
nsubj(have, tendency)
mark(treat, to)
acl(tendency, treat)
obj(treat, election)
case(instrument, as)
det(instrument, a)
obl(treat, instrument)
case(interest, of)
compound(interest, self)
punct(interest, -)
nmod(instrument, interest)
cc(instrument, rather)
fixed(rather, than)
det(instrument, a)
conj(instrument, instrument)
case(interest, of)
amod(interest, national)
nmod(instrument, interest)
root(ROOT, have)
nummod(effect, two)
amod(effect, important)
obj(have, effect)
case(planning, on)
amod(planning, electoral)
nmod(effect, planning)
case(Morocco, in)
nmod(planning, Morocco)
punct(have, .)
case(level, at)
det(level, the)
amod(level, central)
obl(select, level)
det(system, the)
amod(system, scrutin)
amod(system, uninominal)
compound(system, voting)
nsubj:pass(select, system)
aux:pass(select, be)
root(ROOT, select)
case(form, over)
det(form, some)
obl(select, form)
case(system, of)
det(system, the)
amod(system, scrutin)
nummod(liste, de)
compound(system, liste)
nmod(form, system)
punct(select, ,)
advmod(recommend, even)
mark(recommend, though)
det(latter, the)
nsubj:pass(recommend, latter)
aux(recommend, have)
aux:pass(recommend, be)
advcl(select, recommend)
case(Duverger, by)
obl(recommend, Duverger)
cc(favor, and)
conj(recommend, favor)
case(party, by)
det(party, all)
amod(party, political)
obl(favor, party)
punct(select, .)
det(choice, the)
nsubj:pass(dictate, choice)
case(district, of)
det(district, the)
amod(member, single)
compound(district, member)
nmod(choice, district)
aux:pass(dictate, be)
root(ROOT, dictate)
case(extent, to)
det(extent, a)
amod(extent, certain)
obl(dictate, extent)
case(problem, by)
obl(dictate, problem)
case(communication, of)
nmod(problem, communication)
cc(understanding, and)
conj(communication, understanding)
case(area, in)
det(area, the)
advmod(remote, more)
amod(area, remote)
nmod(problem, area)
case(country, of)
det(country, the)
nmod(area, country)
punct(serve, ,)
cc(serve, but)
nsubj(serve, it)
advmod(serve, also)
conj(dictate, serve)
mark(minimize, to)
xcomp(serve, minimize)
det(value, the)
amod(value, national)
amod(value, political)
obj(minimize, value)
case(election, of)
det(election, the)
nmod(value, election)
punct(dictate, .)
mark(official, although)
det(election, the)
nsubj(official, election)
cop(official, be)
case(official, for)
amod(official, local)
advcl(necessary, official)
punct(necessary, ,)
expl(necessary, it)
cop(necessary, be)
advmod(necessary, not)
root(ROOT, necessary)
mark(conduct, to)
csubj(necessary, conduct)
det(election, the)
obj(conduct, election)
mark(prevent, so)
fixed(so, as)
fixed(so, to)
advcl(conduct, prevent)
obj(prevent, party)
mark(identify, from)
advmod(identify, publicly)
advcl(prevent, identify)
nmod:poss(candidate, they)
obj(identify, candidate)
punct(necessary, .)
case(district, with)
amod(district, multiple)
compound(district, member)
obl(operate, district)
det(organization, the)
advmod(fragmentary, still)
amod(organization, fragmentary)
amod(organization, local)
compound(organization, party)
nsubj(operate, organization)
aux(operate, could)
aux(operate, have)
root(ROOT, operate)
advmod(effectively, more)
advmod(operate, effectively)
cc(encourage, and)
nsubj:pass(encourage, party)
aux(encourage, might)
aux(encourage, have)
aux:pass(encourage, be)
conj(operate, encourage)
mark(state, to)
xcomp(encourage, state)
nmod:poss(position, they)
obj(state, position)
advmod(clearly, more)
advmod(state, clearly)
punct(operate, .)
det(party, both)
nsubj(be, party)
cc(Ministry, and)
det(Ministry, the)
conj(party, Ministry)
case(Interior, of)
det(Interior, the)
nmod(Ministry, Interior)
root(ROOT, be)
advmod(be, busily)
case(work, at)
obl(be, work)
case(election, after)
det(election, the)
obl(be, election)
advcl(be, try)
mark(unearth, to)
xcomp(try, unearth)
det(affiliation, the)
amod(affiliation, political)
obj(unearth, affiliation)
case(candidate, of)
det(candidate, the)
amod(candidate, successful)
nmod(affiliation, candidate)
cc(give, and)
punct(give, ,)
advmod(give, thereby)
punct(give, ,)
conj(be, give)
det(election, the)
iobj(give, election)
det(degree, a)
amod(degree, confidential)
cc(know, but)
conj(confidential, know)
obj(give, degree)
case(significance, of)
amod(significance, national)
amod(significance, political)
nmod(degree, significance)
punct(be, .)
mark(avoid, since)
det(interpretation, a)
amod(interpretation, national)
nsubj:pass(avoid, interpretation)
aux(avoid, can)
advmod(avoid, not)
aux:pass(avoid, be)
advcl(unfortunate, avoid)
expl(unfortunate, it)
cop(unfortunate, be)
root(ROOT, unfortunate)
mark(hold, that)
det(election, the)
nsubj:pass(hold, election)
aux:pass(hold, be)
advmod(hold, not)
csubj(unfortunate, hold)
case(way, in)
det(way, a)
obl(hold, way)
mark(maximize, to)
acl(way, maximize)
compound(responsibility, party)
obj(maximize, responsibility)
cc(effect, and)
det(effect, the)
amod(effect, educational)
conj(responsibility, effect)
case(participation, of)
amod(participation, mass)
amod(participation, political)
nmod(effect, participation)
punct(unfortunate, .)
det(setting, the)
amod(setting, general)
nsubj(encourage, setting)
case(election, of)
det(election, the)
amod(election, moroccan)
nmod(setting, election)
aux(encourage, may)
advmod(encourage, also)
root(ROOT, encourage)
det(deterioration, the)
obj(encourage, deterioration)
case(organization, of)
amod(organization, local)
compound(organization, party)
nmod(deterioration, organization)
punct(encourage, .)
det(concentration, the)
nsubj(lead, concentration)
case(power, of)
amod(power, effective)
nmod(concentration, power)
case(Rabat, in)
nmod(power, Rabat)
root(ROOT, lead)
advmod(only, not)
advmod(party, only)
mark(party, to)
xcomp(lead, party)
obj(party, bicker)
punct(distraction, ,)
cc(distraction, but)
case(distraction, to)
conj(party, distraction)
case(activity, from)
amod(activity, local)
nmod(distraction, activity)
nsubj(have, that)
aux(have, might)
aux(have, have)
acl:relcl(distraction, have)
amod(benefit, many)
amod(benefit, auxiliary)
obj(have, benefit)
case(addition, in)
obl(have, addition)
mark(contribute, to)
acl(addition, contribute)
case(election, to)
advmod(meaningful, more)
amod(election, meaningful)
obl(contribute, election)
punct(lead, .)
amod(evidence, Interesting)
nsubj:pass(find, evidence)
aux(find, can)
aux:pass(find, be)
root(ROOT, find)
case(result, in)
det(result, the)
obl(find, result)
case(election, of)
det(election, the)
compound(election, Chamber)
case(commerce, of)
nmod(Chamber, commerce)
nmod(result, election)
punct(election, ,)
nsubj(take, which)
acl:relcl(result, take)
obj(take, place)
nummod(week, three)
obl:tmod(take, week)
case(election, before)
amod(election, national)
obl(take, election)
punct(find, .)
det(U.M.C.I.A., the)
obl:npmod(sponsor, Istiqlal)
punct(sponsor, -)
amod(U.M.C.I.A., sponsor)
nsubj:pass(oppose, U.M.C.I.A.)
punct(commercant, ()
compound(commercant, l'union)
compound(commercant, Marocaine)
compound(commercant, Des)
appos(U.M.C.I.A., commercant)
punct(Artisans, ,)
compound(Artisans, industrialist)
compound(Artisans, et)
appos(commercant, Artisans)
punct(commercant, ))
aux:pass(oppose, be)
root(ROOT, oppose)
case(candidate, by)
obl(oppose, candidate)
case(U.N.F.P., of)
det(U.N.F.P., the)
amod(U.N.F.P., new)
nmod(candidate, U.N.F.P.)
punct(Populaires, ()
compound(Populaires, l'union)
compound(Populaires, National)
compound(force, Des)
compound(Populaires, force)
appos(U.N.F.P., Populaires)
punct(Populaires, ))
case(center, in)
advmod(center, nearly)
det(center, all)
amod(center, urban)
obl(oppose, center)
punct(oppose, .)
case(group, as)
det(group, the)
advmod(conservative, more)
amod(group, conservative)
obl(favor, group)
case(back, with)
amod(back, strong)
nmod(group, back)
case(businessmen, from)
amod(businessmen, wealthy)
nmod(back, businessmen)
punct(favor, ,)
det(U.M.C.I.A., the)
nsubj:pass(favor, U.M.C.I.A.)
aux:pass(favor, be)
advmod(favor, generally)
root(ROOT, favor)
case(U.N.F.P., against)
det(U.N.F.P., the)
advmod(progressive, more)
amod(U.N.F.P., progressive)
punct(U.N.F.P., ,)
obl:npmod(base, labor)
punct(base, -)
amod(U.N.F.P., base)
obl(favor, U.N.F.P.)
punct(favor, .)
det(party, the)
amod(party, newer)
nsubj(campaign, party)
root(ROOT, campaign)
advmod(campaign, heavily)
punct(campaign, ,)
mark(expect, while)
det(party, the)
amod(party, older)
punct(party, ,)
advmod(confident, more)
amod(party, confident)
nsubj(expect, party)
advcl(campaign, expect)
det(merchant, the)
amod(merchant, moroccan)
obj(expect, merchant)
cc(businessmen, and)
amod(businessmen, small)
conj(merchant, businessmen)
mark(support, to)
advcl(expect, support)
obj(support, they)
mark(do, as)
nsubj(do, they)
aux(do, have)
advcl(support, do)
case(year, for)
amod(year, many)
obl(do, year)
punct(campaign, .)
det(Istiqlal, the)
amod(Istiqlal, local)
nsubj(campaign, Istiqlal)
cc(office, and)
compound(office, U.M.C.I.A.)
conj(Istiqlal, office)
aux(campaign, do)
advmod(campaign, not)
root(ROOT, campaign)
cc(lose, and)
conj(campaign, lose)
advmod(lose, heavily)
punct(campaign, .)
det(value, the)
nsubj:pass(lose, value)
case(election, of)
det(election, the)
nmod(value, election)
aux:pass(lose, be)
root(ROOT, lose)
punct(lose, ,)
cc:preconj(experiment, both)
case(experiment, as)
det(experiment, a)
obl(lose, experiment)
case(participation, in)
amod(participation, increase)
amod(participation, political)
nmod(experiment, participation)
cc(indicator, and)
case(indicator, as)
det(indicator, a)
amod(indicator, reliable)
conj(experiment, indicator)
case(interest, of)
amod(interest, commercial)
nmod(indicator, interest)
punct(indicator, ,)
mark(show, as)
acl(indicator, show)
case(table, in)
obl(show, table)
nummod(table, 1)
punct(show, .)
det(Chamber, the)
nsubj(event, Chamber)
case(election, of)
compound(election, commerce)
nmod(Chamber, election)
cop(event, be)
punct(event, ,)
advmod(event, of)
fixed(of, course)
punct(event, ,)
det(event, a)
amod(event, important)
parataxis(lose, event)
case(preparation, in)
det(preparation, the)
nmod(event, preparation)
case(election, for)
amod(election, rural)
compound(election, commune)
nmod(preparation, election)
punct(lose, .)
det(U.N.F.P., the)
nsubj(learn, U.N.F.P.)
root(ROOT, learn)
mark(effective, that)
nmod:poss(organization, its)
amod(organization, urban)
nsubj(effective, organization)
punct(organization, ,)
nsubj(depend, which)
acl:relcl(organization, depend)
advmod(depend, heavily)
case(support, on)
compound(support, U.M.T.)
obl(depend, support)
punct(effective, ,)
cop(effective, be)
advmod(effective, most)
ccomp(learn, effective)
punct(learn, .)
det(Istiqlal, the)
nsubj(find, Istiqlal)
root(ROOT, find)
mark(transpose, that)
det(solidarity, the)
amod(solidarity, spontaneous)
nsubj:pass(transpose, solidarity)
case(struggle, of)
det(struggle, the)
compound(struggle, independence)
nmod(solidarity, struggle)
aux:pass(transpose, be)
advmod(transpose, not)
advmod(transpose, easily)
ccomp(find, transpose)
case(problem, to)
det(problem, the)
advmod(concrete, more)
amod(problem, concrete)
punct(problem, ,)
amod(problem, precise)
obl(transpose, problem)
case(politics, of)
amod(politics, internal)
nmod(problem, politics)
punct(find, .)
det(effect, the)
amod(effect, overall)
nsubj(be, effect)
root(ROOT, be)
advmod(be, probably)
mark(stimulate, to)
ccomp(be, stimulate)
amod(activity, more)
compound(activity, party)
obj(stimulate, activity)
case(election, in)
det(election, the)
amod(election, communal)
obl(stimulate, election)
mark(take, than)
aux(take, might)
aux(take, have)
advmod(take, otherwise)
advcl(stimulate, take)
obj(take, place)
punct(be, . )
det(point, a)
amod(point, second)
amod(point, major)
nsubj(be, point)
case(essay, of)
det(essay, this)
nmod(point, essay)
root(ROOT, be)
mark(examine, to)
ccomp(be, examine)
det(arrangement, the)
amod(arrangement, formal)
obj(examine, arrangement)
case(election, for)
det(election, the)
nmod(arrangement, election)
punct(be, .)
case(subject, although)
det(subject, a)
advmod(technical, somewhat)
amod(subject, technical)
obl(have, subject)
punct(have, ,)
nsubj(have, it)
root(ROOT, have)
amod(implication, important)
amod(implication, political)
obj(have, implication)
case(discussion, as)
det(discussion, the)
amod(discussion, above)
nmod(implication, discussion)
case(system, of)
det(system, the)
compound(system, voting)
nmod(discussion, system)
acl(system, indicate)
punct(have, . )
advmod(value, furthermore)
punct(value, ,)
det(problem, the)
nsubj(value, problem)
cc(solution, and)
conj(problem, solution)
acl(problem, devise)
case(experience, in)
det(experience, the)
amod(experience, electoral)
obl(devise, experience)
case(country, of)
det(country, the)
advmod(changing, rapidly)
compound(country, changing)
nmod(experience, country)
cop(value, be)
advmod(value, often)
case(value, of)
amod(value, comparative)
root(ROOT, value)
cc(essential, and)
conj(value, essential)
mark(evaluate, to)
advcl(essential, evaluate)
amod(result, election)
obj(evaluate, result)
punct(value, .)
det(non, the)
compound(qua, sine)
compound(non, qua)
nsubj(procedure, non)
case(election, of)
det(election, the)
nmod(non, election)
cop(procedure, be)
advmod(procedure, naturally)
det(procedure, a)
amod(procedure, impartial)
cc(standardize, and)
conj(impartial, standardize)
root(ROOT, procedure)
punct(procedure, .)
mark(indicate, as)
det(discussion, the)
compound(discussion, background)
nsubj(indicate, discussion)
root(ROOT, indicate)
expl(be, there)
ccomp(indicate, be)
advmod(express, frequently)
nsubj(be, express)
obj(express, doubt)
mark(administer, that)
det(government, a)
nsubj(administer, government)
acl(government, dominate)
case(party, by)
det(party, either)
obl(dominate, party)
aux(administer, could)
advmod(administer, fairly)
acl(doubt, administer)
obj(administer, election)
punct(indicate, .)
det(p.d.i., the)
nsubj(protect, p.d.i.)
cc(Movement, and)
advmod(Movement, later)
det(Movement, the)
compound(Movement, popular)
conj(p.d.i., Movement)
root(ROOT, protect)
det(Istiqlal, the)
nmod:poss(position, Istiqlal)
case(Istiqlal, 's)
punct(position, ``)
amod(position, privileged)
obj(protect, position)
punct(position, '')
case(fall, until)
det(fall, the)
obl(protect, fall)
case(Balafrej, of)
nmod(fall, Balafrej)
punct(use, ,)
cc(use, and)
advmod(use, then)
det(Istiqlal, the)
nsubj(use, Istiqlal)
conj(protect, use)
det(argument, the)
amod(argument, same)
obj(use, argument)
punct(argument, ,)
obj(ignore, which)
nsubj(ignore, it)
aux(ignore, have)
advmod(ignore, previously)
acl:relcl(argument, ignore)
punct(ignore, ,)
case(tendency, against)
det(tendency, the)
compound(tendency, pro-u.n.f.p.)
obl(ignore, tendency)
case(Ibrahim, of)
det(Ibrahim, the)
nmod(tendency, Ibrahim)
flat(Ibrahim, government)
punct(protect, .)
det(bulk, the)
nsubj(have, bulk)
case(preparation, of)
det(preparation, the)
nmod(bulk, preparation)
root(ROOT, have)
punct(have, ,)
advmod(proceed, of)
fixed(of, course)
punct(proceed, ,)
conj(have, proceed)
case(supervision, under)
det(supervision, the)
obl(proceed, supervision)
case(Ministry, of)
det(Ministry, the)
nmod(supervision, Ministry)
case(Interior, of)
det(Interior, the)
nmod(Ministry, Interior)
punct(Ministry, ,)
nmod:poss(official, whose)
nsubj:pass(barred, official)
aux:pass(barred, be)
acl:relcl(Ministry, barred)
case(activity, from)
compound(activity, party)
obl(barred, activity)
cc(disinterested, and)
advmod(disinterested, probably)
advmod(disinterested, generally)
conj(barred, disinterested)
case(politics, in)
compound(politics, party)
obl(disinterested, politics)
punct(have, .)
advmod(be, apart)
case(area, from)
det(area, some)
obl(apart, area)
case(trouble, of)
amod(trouble, recurre)
nmod(area, trouble)
punct(trouble, ,)
case(Bani, like)
nmod(trouble, Bani)
flat(Bani, Mellal)
punct(Bani, ,)
advmod(appoint, where)
amod(official, inexperienced)
nsubj:pass(appoint, official)
aux(appoint, have)
aux:pass(appoint, be)
acl:relcl(Bani, appoint)
punct(be, ,)
expl(be, there)
root(ROOT, be)
amod(evidence, little)
nsubj(be, evidence)
mark(intervened, that)
amod(official, local)
nsubj(intervened, official)
acl(evidence, intervened)
case(process, in)
det(process, the)
amod(process, electoral)
obl(intervened, process)
punct(be, .)
advmod(complex, centrally)
punct(complex, ,)
advmod(complex, however)
punct(complex, ,)
det(problem, the)
amod(problem, administrative)
nsubj(complex, problem)
cop(complex, be)
advmod(complex, more)
root(ROOT, complex)
cc(advantage, and)
det(prestige, the)
amod(prestige, sheer)
nsubj(advantage, prestige)
case(office, of)
nmod(prestige, office)
cop(advantage, be)
advmod(advantage, very)
advmod(advantage, likely)
det(advantage, a)
amod(advantage, unfair)
conj(complex, advantage)
punct(complex, .)
det(King, the)
nsubj(decide, King)
parataxis(complex, decide)
mark(remove, to)
xcomp(decide, remove)
obj(remove, Ibrahim)
det(week, a)
obl:tmod(remove, week)
case(election, before)
obl(remove, election)
cc(institute, and)
mark(institute, to)
conj(remove, institute)
det(Council, a)
amod(Council, non-party)
obj(institute, Council)
case(government, of)
nmod(Council, government)
case(direction, under)
nmod:poss(direction, he)
amod(direction, personal)
obl(institute, direction)
punct(complex, .)
mark(assert, although)
det(monarch, the)
nsubj(assert, monarch)
aux(assert, have)
advmod(assert, frequently)
advcl(admission, assert)
mark(be, that)
det(election, the)
nsubj(be, election)
ccomp(assert, be)
mark(significance, to)
cop(significance, be)
case(significance, without)
compound(significance, party)
xcomp(be, significance)
punct(admission, ,)
nmod:poss(action, he)
nsubj(admission, action)
cop(admission, be)
det(admission, a)
amod(admission, implicit)
root(ROOT, admission)
mark(factor, that)
compound(identification, party)
nsubj(factor, identification)
cop(factor, be)
det(factor, a)
acl(admission, factor)
punct(admission, .)
det(Council, the)
amod(Council, new)
nsubj(meaning, Council)
cop(meaning, be)
nsubj(meaning, itself)
advmod(meaning, inescapably)
case(meaning, of)
amod(meaning, political)
root(ROOT, meaning)
punct(meaning, ,)
nsubj:pass(reveal, which)
aux:pass(reveal, be)
advmod(clearly, most)
advmod(reveal, clearly)
acl:relcl(meaning, reveal)
case(absence, in)
det(absence, the)
obl(reveal, absence)
case(member, of)
det(member, any)
compound(member, U.N.F.P.)
nmod(absence, member)
cc(presence, and)
det(presence, the)
conj(member, presence)
case(leader, of)
amod(leader, several)
compound(leader, Istiqlal)
nmod(presence, leader)
punct(meaning, .)
mark(settle, since)
det(detail, the)
nsubj:pass(settle, detail)
case(election, of)
det(election, the)
nmod(detail, election)
aux:pass(settle, be)
advcl(have, settle)
det(change, the)
nsubj(have, change)
case(government, of)
nmod(change, government)
advcl(begin, have)
det(effect, no)
amod(effect, direct)
obj(have, effect)
case(aspect, on)
det(aspect, the)
amod(aspect, technical)
nmod(effect, aspect)
case(election, of)
det(election, the)
nmod(aspect, election)
punct(important, ,)
cc(important, and)
aux(important, may)
aux(important, have)
cop(important, be)
advmod(important, more)
conj(have, important)
case(indication, as)
det(indication, a)
obl(important, indication)
case(displeasure, of)
amod(displeasure, royal)
nmod(indication, displeasure)
case(U.N.F.P, with)
det(U.N.F.P, the)
nmod(displeasure, U.N.F.P)
punct(begin, .)
punct(begin, .)
compound(preparation, Voting)
nsubj(begin, preparation)
root(ROOT, begin)
case(fall, in)
det(fall, the)
obl(begin, fall)
case(1959, of)
nmod(fall, 1959)
punct(begin, ,)
mark(complete, although)
det(demarcation, the)
amod(demarcation, actual)
nsubj:pass(complete, demarcation)
cc(planning, and)
conj(demarcation, planning)
case(commune, for)
det(commune, the)
amod(commune, rural)
nmod(demarcation, commune)
aux:pass(complete, be)
advcl(begin, complete)
case(1958, in)
obl(complete, 1958)
punct(begin, .)
expl(be, there)
root(ROOT, be)
nummod(task, three)
amod(task, major)
amod(task, administrative)
nsubj(be, task)
punct(task, :)
det(fixing, the)
appos(task, fixing)
case(district, of)
amod(district, electoral)
nmod(fixing, district)
punct(registration, ,)
det(registration, the)
conj(fixing, registration)
case(voter, of)
nmod(registration, voter)
cc(registration, and)
det(registration, the)
conj(voter, registration)
case(candidate, of)
nmod(registration, candidate)
punct(be, .)
compound(registration, voter)
nsubj(begin, registration)
root(ROOT, begin)
case(November, in)
amod(November, late)
obl(begin, November)
nummod(November, 1959)
cc(continue, and)
conj(begin, continue)
case(January, until)
amod(January, early)
obl(continue, January)
punct(January, ,)
nummod(January, 1960)
punct(begin, .)
det(government, the)
nsubj(anxious, government)
cop(anxious, be)
advmod(anxious, most)
root(ROOT, anxious)
mark(be, that)
expl(be, there)
ccomp(anxious, be)
det(response, a)
amod(response, respectable)
nsubj(be, response)
punct(anxious, .)
amod(bulletin, Periodic)
nsubj(make, bulletin)
case(accomplishment, of)
det(accomplishment, the)
nmod(bulletin, accomplishment)
case(province, in)
det(province, each)
nmod(accomplishment, province)
root(ROOT, make)
det(process, the)
compound(process, registration)
obj(make, process)
case(kind, into)
det(kind, a)
obl(make, kind)
case(competition, of)
nmod(kind, competition)
case(official, among)
amod(official, provincial)
nmod(competition, official)
punct(make, . )
det(goal, a)
nsubj:pass(fix, goal)
aux:pass(fix, be)
root(ROOT, fix)
punct(fix, ,)
mark(give, as)
advcl(fix, give)
case(table, in)
obl(give, table)
nummod(table, 2)
punct(attention, ,)
cc(attention, and)
conj(table, attention)
acl(attention, focus)
case(fulfillment, on)
nmod:poss(fulfillment, its)
obl(focus, fulfillment)
punct(fix, .)
det(qualification, the)
nsubj:pass(keep, qualification)
mark(vote, to)
acl(qualification, vote)
aux:pass(keep, be)
root(ROOT, keep)
advmod(simple, very)
xcomp(keep, simple)
punct(keep, .)
det(man, both)
nsubj(register, man)
cc(woman, and)
conj(man, woman)
case(year, of)
compound(one, twenty)
punct(one, -)
nummod(year, one)
nmod(man, year)
case(age, of)
nmod(year, age)
aux(register, could)
root(ROOT, register)
cc(vote, and)
conj(register, vote)
mark(present, upon)
advcl(register, present)
obj(present, proof)
case(residence, of)
nmod(proof, residence)
cc(identification, and)
conj(residence, identification)
punct(register, .)
expl(be, there)
root(ROOT, be)
amod(provision, liberal)
nsubj(be, provision)
case(dispensation, for)
nmod(provision, dispensation)
advmod(lack, where)
nsubj(lack, document)
cc(record, or)
conj(document, record)
aux(lack, be)
acl:relcl(provision, lack)
punct(be, .)
det(police, the)
nsubj:pass(disqualify, police)
aux:pass(disqualify, be)
root(ROOT, disqualify)
case(category, along)
case(category, with)
amod(category, certain)
obl(disqualify, category)
case(citizen, of)
amod(citizen, naturalize)
nmod(category, citizen)
punct(criminal, ,)
conj(citizen, criminal)
cc(those, and)
conj(citizen, those)
acl(those, punish)
case(activity, for)
compound(activity, protectorate)
obl(punish, activity)
punct(disqualify, .)
det(figure, the)
compound(figure, registration)
nsubj:pass(interpret, figure)
acl(figure, give)
case(table, in)
obl(give, table)
nummod(table, 2)
aux(interpret, must)
aux:pass(interpret, be)
root(ROOT, interpret)
case(caution, with)
obl(interpret, caution)
mark(make, since)
det(estimate, the)
nsubj:pass(make, estimate)
case(elector, for)
amod(elector, eligible)
nmod(estimate, elector)
aux:pass(make, be)
advcl(interpret, make)
case(benefit, without)
det(benefit, the)
obl(make, benefit)
case(census, of)
det(census, a)
amod(census, reliable)
nmod(benefit, census)
punct(interpret, .)
amod(worker, Unemployed)
amod(worker, older)
nsubj(able, worker)
nsubj(have, who)
acl:relcl(worker, have)
det(expectation, no)
obj(have, expectation)
mark(secure, of)
acl(expectation, secure)
obj(secure, employment)
case(occupation, in)
det(occupation, the)
obl(secure, occupation)
case(which, in)
obl(skill, which)
nsubj:pass(skill, they)
aux:pass(skill, be)
acl:relcl(occupation, skill)
aux(able, should)
cop(able, be)
root(ROOT, able)
mark(secure, to)
xcomp(able, secure)
obj(secure, counseling)
cc(retrain, and)
conj(counseling, retrain)
case(occupation, in)
det(occupation, a)
obl(secure, occupation)
case(future, with)
det(future, a)
nmod(occupation, future)
punct(able, .)
det(school, some)
amod(school, vocational)
compound(school, training)
nsubj(provide, school)
root(ROOT, provide)
amod(training, such)
obj(provide, training)
punct(exceed, ,)
cc(exceed, but)
det(need, the)
amod(need, current)
nsubj(exceed, need)
conj(provide, exceed)
det(facility, the)
obj(exceed, facility)
punct(provide, .)
amod(program, current)
nsubj(begin, program)
det(program, the)
amod(program, present)
amod(program, federal)
nsubj(begin, program)
case(education, of)
amod(education, vocational)
nmod(program, education)
root(ROOT, begin)
case(1917, in)
obl(begin, 1917)
case(passage, with)
det(passage, the)
obl(begin, passage)
case(Act, of)
det(Act, the)
compound(Act, Smith)
punct(Smith, -)
flat(Smith, Hughes)
nmod(passage, Act)
punct(Act, ,)
nsubj(provide, which)
acl:relcl(Act, provide)
det(appropriation, a)
amod(appropriation, continue)
amod(appropriation, annual)
obj(provide, appropriation)
case($, of)
nmod(appropriation, $)
compound(million, 7)
nummod($, million)
mark(support, to)
advcl(provide, support)
punct(support, ,)
case(basis, on)
det(basis, a)
compound(basis, matching)
obl(support, basis)
punct(program, ,)
obl:npmod(administer, state)
punct(administer, -)
amod(program, administer)
conj(basis, program)
case(education, of)
amod(education, vocational)
nmod(program, education)
case(agriculture, in)
nmod(education, agriculture)
punct(trade, ,)
conj(agriculture, trade)
punct(skill, ,)
amod(skill, industrial)
conj(agriculture, skill)
cc(economics, and)
compound(economics, home)
conj(agriculture, economics)
punct(begin, .)
case(1917, since)
obl(extend, 1917)
det(act, some)
nummod(supplementary, thirteen)
amod(act, supplementary)
cc(related, and)
conj(supplementary, related)
nsubj(extend, act)
aux(extend, have)
root(ROOT, extend)
det(program, this)
amod(program, federal)
obj(extend, program)
punct(extend, .)
det(Act, the)
compound(Act, George)
punct(George, -)
flat(George, Barden)
nsubj(raise, Act)
case(1946, of)
nmod(Act, 1946)
root(ROOT, raise)
det(increase, the)
amod(increase, previous)
obj(raise, increase)
case(authorization, in)
amod(authorization, annual)
nmod(increase, authorization)
case($, to)
nmod(authorization, $)
compound(million, 29)
nummod($, million)
case(addition, in)
obl(raise, addition)
case($, to)
det($, the)
nmod(addition, $)
compound(million, 7)
nummod($, million)
case(Act, under)
det(Act, the)
compound(Act, Smith)
nmod($, Act)
punct(add, .)
det(Act, the)
compound(amendment, Health)
compound(Act, amendment)
nsubj(add, Act)
case(1956, of)
nmod(Act, 1956)
parataxis(raise, add)
obj(add, $)
compound(million, 5)
nummod($, million)
case(training, for)
amod(training, practical)
compound(training, nurse)
obl(add, training)
punct(raise, .)
det(change, the)
amod(change, latest)
amod(change, major)
nsubj:pass(introduce, change)
case(program, in)
det(program, this)
nmod(change, program)
aux:pass(introduce, be)
root(ROOT, introduce)
case(Act, by)
det(Act, the)
compound(Act, National)
compound(Act, Defense)
compound(Act, Education)
obl(introduce, Act)
case(1958, of)
nmod(Act, 1958)
punct(Act, ,)
appos(Act, title)
nummod(title, 8)
punct(amend, ,)
case(which, of)
obl(amend, which)
acl:relcl(Act, amend)
det(Act, the)
compound(Act, George)
punct(Act, -)
compound(Act, Barden)
obj(amend, Act)
punct(amend, .)
compound(authorization, annual)
nsubj:pass(add, authorization)
case($, of)
nmod(authorization, $)
compound(million, 15)
nummod($, million)
aux:pass(add, be)
conj(amend, add)
case(program, for)
compound(program, area)
amod(education, vocational)
compound(program, education)
obl(add, program)
nsubj(meet, that)
acl:relcl(program, meet)
amod(need, national)
compound(need, defense)
obj(meet, need)
case(technician, for)
advmod(skilled, highly)
amod(technician, skilled)
obl(meet, technician)
punct(introduce, .)
det(program, the)
amod(program, federal)
nsubj(provide, program)
case(education, of)
amod(education, vocational)
nmod(program, education)
advmod(provide, merely)
root(ROOT, provide)
amod(aid, financial)
obj(provide, aid)
mark(encourage, to)
acl(aid, encourage)
det(establishment, the)
obj(encourage, establishment)
case(program, of)
amod(education, vocational)
compound(program, education)
nmod(establishment, program)
case(school, in)
amod(school, public)
nmod(program, school)
punct(provide, .)
det(initiative, the)
nsubj(remain, initiative)
punct(administration, ,)
conj(initiative, administration)
cc(control, and)
conj(administration, control)
root(ROOT, remain)
advmod(remain, primarily)
case(district, with)
det(district, the)
amod(district, local)
compound(district, school)
obl(remain, district)
punct(remain, .)
advmod(state, even)
det(state, the)
nsubj(remain, state)
root(ROOT, remain)
advmod(remain, primarily)
case(role, in)
det(role, a)
compound(role, assist)
obl(remain, role)
punct(remain, ,)
advcl(remain, provide)
obj(provide, leadership)
cc(training, and)
compound(training, teacher)
conj(leadership, training)
punct(limit, .)
amod(assistance, federal)
nsubj:pass(limit, assistance)
aux:pass(limit, be)
parataxis(remain, limit)
case(half, to)
obl(limit, half)
case(expenditure, of)
det(expenditure, the)
amod(expenditure, total)
nmod(half, expenditure)
punct(pay, ,)
cc(pay, and)
det(state, the)
nsubj(pay, state)
cc(district, or)
conj(state, local)
nsubj(pay, district)
aux(pay, must)
conj(limit, pay)
case(least, at)
nmod(half, least)
obj(pay, half)
punct(remain, .)
det(state, the)
nsubj(decide, state)
aux(decide, may)
root(ROOT, decide)
mark(encourage, to)
xcomp(decide, encourage)
amod(program, local)
obj(encourage, program)
mark(pay, by)
advcl(encourage, pay)
obj(pay, half)
case(cost, of)
det(cost, the)
nmod(half, cost)
punct(require, ,)
cc(require, or)
det(state, the)
nsubj(require, state)
aux(require, may)
conj(decide, require)
det(district, the)
amod(district, local)
obj(require, district)
mark(bear, to)
acl(district, bear)
det(half, this)
obj(bear, half)
cc(part, or)
det(part, some)
conj(half, part)
case(it, of)
nmod(part, it)
punct(part, .)
case(history, throughout)
det(history, the)
obl(bear, history)
case(program, of)
det(program, the)
nmod(history, program)
punct(match, ,)
compound(expenditure, state)
compound(expenditure, government)
nsubj(match, expenditure)
case(aggregate, in)
det(aggregate, the)
nmod(expenditure, aggregate)
aux(match, have)
advmod(match, usually)
parataxis(decide, match)
cc(exceed, or)
conj(match, exceed)
det(expenditure, the)
amod(expenditure, federal)
obj(match, expenditure)
punct(match, ,)
mark(spend, while)
amod(district, local)
nsubj(spend, district)
advmod(together, all)
advmod(spend, together)
aux(spend, have)
advcl(match, spend)
obj(spend, more)
fixed(more, than)
cc:preconj(government, either)
amod(government, federal)
cc(state, or)
conj(federal, state)
obj(spend, government)
punct(government, .)
nmod:tmod(account, today)
punct(account, ,)
amod(fund, federal)
compound(account, fund)
obj(spend, account)
case(fifth, for)
advmod(fifth, only)
nummod(fifth, one)
punct(fifth, -)
nmod(account, fifth)
case(expenditure, of)
det(nation, the)
nmod:poss(expenditure, nation)
case(nation, 's)
nmod(fifth, expenditure)
case(education, for)
amod(education, vocational)
nmod(expenditure, education)
punct(decide, .)
det(impact, the)
amod(impact, greatest)
nsubj(be, impact)
case(principle, of)
det(principle, the)
compound(fund, matching)
punct(fund, -)
compound(principle, fund)
nmod(impact, principle)
aux(be, have)
root(ROOT, be)
mark(encourage, in)
advmod(encourage, initially)
advcl(be, encourage)
det(state, the)
amod(state, poorest)
obj(encourage, state)
cc(district, and)
compound(district, school)
conj(state, district)
mark(spend, to)
advcl(encourage, spend)
obj(spend, enough)
mark(obtain, to)
advcl(spend, obtain)
nmod:poss(allocation, they)
amod(allocation, full)
obj(obtain, allocation)
case(fund, of)
amod(fund, outside)
nmod(allocation, fund)
punct(be, .)
amod(consideration, national)
compound(consideration, defense)
nsubj(reason, consideration)
aux(reason, have)
cop(reason, be)
det(reason, the)
amod(reason, major)
root(ROOT, reason)
case(expenditure, behind)
advmod(federal, most)
amod(expenditure, federal)
compound(expenditure, training)
nmod(reason, expenditure)
case(decade, in)
amod(decade, recent)
nmod(expenditure, decade)
punct(reason, .)
case(War, during)
compound(War, World)
nmod(reason, War)
nummod(War, 2)
punct(War, ,)
advmod(million, about)
compound(million, 7.5)
nummod(person, million)
nsubj:pass(enrol, person)
aux:pass(enrol, be)
parataxis(reason, enrol)
case(course, in)
obl(enrol, course)
acl(course, organize)
case(program, under)
nummod(program, two)
amod(program, special)
obl(organize, program)
acl(program, administer)
case(authority, by)
compound(authority, state)
cc(local, and)
conj(state, local)
compound(authority, school)
obl(administer, authority)
punct(authority, :)
punct(1, ()
nummod(Education, 1)
punct(1, ))
compound(Education, vocational)
appos(authority, Education)
case(Defense, for)
compound(Defense, National)
nmod(Education, Defense)
punct(2, ,)
cc(2, and)
punct(2, ()
conj(Education, 2)
punct(2, ))
compound(production, war)
compound(training, production)
root(ROOT, training)
punct(training, .)
det(cost, the)
amod(cost, total)
nsubj($, cost)
case(program, of)
det(program, the)
nummod(year, five)
punct(year, -)
compound(program, year)
nmod(cost, program)
cop($, be)
root(ROOT, $)
compound(million, 297)
nummod($, million)
punct($, .)
case(Smith, for)
det(Smith, the)
nmod($, Smith)
punct(Smith, -)
flat(Smith, Hughes)
punct(Smith, ,)
conj(Smith, George)
punct(George, -)
flat(George, Barden)
punct(Act, ,)
cc(Act, and)
compound(Act, National)
compound(Act, Defense)
conj(Smith, Act)
case(1958, of)
nmod(Act, 1958)
punct($, ,)
det(total, the)
amod(total, cumulative)
nsubj($, total)
case(expenditure, of)
amod(expenditure, federal)
nmod(total, expenditure)
case(year, in)
nummod(year, 42)
nmod(total, year)
cop($, be)
advmod($, only)
advmod($, about)
parataxis($, $)
compound(million, 740)
compound($, million)
punct($, .)
det(measure, no)
amod(measure, comparable)
nsubj(available, measure)
cop(available, be)
root(ROOT, available)
case(enrollment, of)
obl(available, enrollment)
cc(expenditure, and)
conj(enrollment, expenditure)
case(training, for)
amod(training, private)
amod(education, vocational)
compound(training, education)
nmod(enrollment, training)
punct(available, .)
expl(be, there)
root(ROOT, be)
det(number, a)
amod(number, great)
nsubj(be, number)
cc(variety, and)
conj(number, variety)
case(school, of)
amod(school, private)
amod(school, commercial)
nmod(number, school)
punct(school, ,)
compound(school, trade)
conj(school, school)
cc(school, and)
amod(school, technical)
conj(school, school)
punct(be, .)
case(addition, in)
obl(operate, addition)
punct(operate, ,)
amod(corporation, many)
amod(corporation, large)
nsubj(operate, corporation)
root(ROOT, operate)
nmod:poss(program, they)
amod(program, own)
amod(program, formal)
compound(program, training)
obj(operate, program)
punct(operate, . )
det(study, a)
amod(study, recent)
nsubj(indicate, study)
root(ROOT, indicate)
mark(conduct, that)
nummod(cent, 85)
compound(cent, per)
nsubj(conduct, cent)
case(corporation, of)
det(nation, the)
nmod:poss(corporation, nation)
case(nation, 's)
amod(corporation, largest)
nmod(cent, corporation)
ccomp(indicate, conduct)
amod(program, educational)
obj(conduct, program)
acl(program, involve)
det(meeting, some)
compound(meeting, class)
obj(involve, meeting)
cc(examination, and)
conj(meeting, examination)
punct(meeting, .)
advmod(skilled, most)
amod(worker, skilled)
amod(worker, industrial)
conj(meeting, worker)
punct(worker, ,)
advmod(acquire, nevertheless)
punct(acquire, ,)
advmod(acquire, still)
ccomp(indicate, acquire)
nmod:poss(skill, they)
obj(acquire, skill)
case(institution, outside)
case(institution, of)
amod(institution, formal)
compound(institution, training)
obl(acquire, institution)
punct(indicate, .)
det(Council, the)
compound(Manpower, National)
compound(Council, Manpower)
nsubj(estimate, Council)
case(University, of)
compound(University, Columbia)
nmod(Council, University)
aux(estimate, have)
root(ROOT, estimate)
mark(train, that)
nummod(worker, three)
case(five, out)
case(five, of)
nmod(three, five)
amod(worker, skill)
ccomp(estimate, worker)
cc(train, and)
nsubj:pass(train, one)
case(technician, out)
case(technician, of)
nummod(technician, five)
nmod(one, technician)
aux(train, have)
advmod(train, not)
aux:pass(train, be)
advmod(train, formally)
ccomp(estimate, train)
punct(estimate, .)
expl(be, there)
root(ROOT, be)
amod(doubt, little)
nsubj(be, doubt)
mark(benefit, that)
det(student, the)
nsubj(benefit, student)
acl(doubt, benefit)
case(education, from)
amod(education, vocational)
obl(benefit, education)
punct(be, .)
nsubj(prefer, employer)
root(ROOT, prefer)
mark(hire, to)
xcomp(prefer, hire)
obj(hire, youth)
case(training, with)
amod(training, such)
obl(hire, training)
cc(those, rather)
fixed(rather, than)
conj(youth, those)
nmod(those, without)
punct(go, ,)
cc(go, and)
amod(graduate, most)
nsubj(go, graduate)
case(training, of)
amod(training, vocational)
nmod(graduate, training)
conj(prefer, go)
mark(work, to)
xcomp(go, work)
case(job, in)
obl(work, job)
amod(job, related)
case(training, to)
nmod:poss(training, they)
obl(related, training)
punct(claim, .)
amod(educator, vocational)
nsubj(claim, educator)
aux(claim, do)
advmod(claim, not)
parataxis(prefer, claim)
mark(make, that)
compound(training, school)
nsubj(make, training)
advmod(training, alone)
ccomp(claim, make)
amod(worker, skilled)
obj(make, worker)
punct(provide, ,)
cc(provide, but)
nsubj(provide, it)
conj(make, provide)
det(groundwork, the)
amod(groundwork, essential)
obj(provide, groundwork)
mark(develop, for)
acl(groundwork, develop)
obj(develop, skill)
punct(prefer, .)
case(state, in)
amod(state, most)
obl(provide, state)
punct(provide, ,)
compound(training, trade)
cc(industrial, and)
conj(trade, industrial)
nsubj:pass(provide, training)
aux:pass(provide, be)
root(ROOT, provide)
case(minority, in)
det(minority, a)
obl(provide, minority)
case(school, of)
det(school, the)
amod(school, high)
nmod(minority, school)
punct(school, ,)
advmod(locate, usually)
acl(school, locate)
case(city, in)
det(city, the)
amod(city, larger)
obl(locate, city)
punct(provide, .)
case(Arkansas, in)
obl(offer, Arkansas)
amod(cent, fewer)
fixed(fewer, than)
nummod(cent, 6)
compound(cent, per)
nsubj(offer, cent)
case(school, of)
det(school, the)
amod(school, high)
nmod(cent, school)
root(ROOT, offer)
compound(course, trade)
cc(industrial, and)
conj(trade, industrial)
obj(offer, course)
punct(offer, .)
case(Illinois, in)
obl(have, Illinois)
advmod(13, about)
nummod(cent, 13)
compound(cent, per)
nsubj(have, cent)
case(school, of)
det(school, the)
nmod(cent, school)
root(ROOT, have)
obj(have, program)
punct(cent, ,)
cc(cent, and)
case(Pennsylvania, in)
compound(cent, Pennsylvania)
nummod(cent, 11)
compound(cent, per)
conj(program, cent)
punct(have, .)
det(trend, a)
amod(trend, important)
amod(trend, recent)
nsubj(development, trend)
cop(development, be)
det(development, the)
root(ROOT, development)
case(school, of)
compound(school, area)
amod(school, vocational)
nmod(development, school)
punct(development, .)
case(number, for)
det(number, a)
obl(build, number)
case(year, of)
nmod(number, year)
nsubj(build, Kentucky)
punct(build, ,)
nsubj(build, Louisiana)
cc(state, and)
amod(state, several)
amod(state, other)
conj(Louisiana, state)
aux(build, have)
aux(build, be)
root(ROOT, build)
compound(sponsor, state)
punct(sponsor, -)
amod(school, sponsor)
amod(school, vocational)
compound(school, education)
obj(build, school)
nsubj(serve, that)
acl:relcl(school, serve)
advmod(district, nearby)
compound(district, school)
obj(serve, district)
case(county, in)
amod(county, several)
obl(serve, county)
punct(build, .)
det(school, these)
nsubj:pass(intend, school)
aux:pass(intend, be)
root(ROOT, intend)
mark(provide, to)
xcomp(intend, provide)
det(facility, the)
obj(provide, facility)
cc(curriculum, and)
amod(curriculum, specialize)
conj(facility, curriculum)
nsubj(possible, that)
aux(possible, would)
advmod(possible, not)
cop(possible, be)
acl:relcl(facility, possible)
case(district, for)
advmod(small, very)
amod(district, small)
compound(district, school)
obl(possible, district)
punct(intend, .)
nsubj:pass(provide, transportation)
aux(provide, may)
aux:pass(provide, be)
parataxis(intend, provide)
case(district, from)
amod(district, nearby)
compound(district, school)
obl(provide, district)
punct(intend, .)
nsubj:pass(provide, course)
aux:pass(provide, be)
root(ROOT, provide)
advmod(provide, mainly)
case(program, for)
advmod(day, post)
amod(day, high)
compound(day, school)
compound(program, day)
obl(provide, program)
punct(provide, ;)
punct(provide, ;)
cc(make, but)
advmod(make, sometimes)
nsubj:pass(make, arrangement)
advmod(make, also)
aux:pass(make, be)
conj(provide, make)
case(student, for)
amod(student, high)
compound(student, school)
obl(make, student)
mark(attend, to)
advcl(make, attend)
punct(conduct, ,)
cc(conduct, and)
compound(course, evening)
compound(course, extension)
nsubj:pass(conduct, course)
advmod(conduct, also)
aux(conduct, may)
aux:pass(conduct, be)
conj(make, conduct)
punct(provide, .)
det(title, the)
nsubj(spur, title)
nummod(title, 8)
punct(title, ,)
appos(title, program)
case(Act, of)
det(Act, the)
compound(Act, National)
compound(Education, Defense)
compound(Act, Education)
nmod(program, Act)
case(1958, of)
nmod(Act, 1958)
cop(spur, be)
det(spur, a)
amod(spur, great)
root(ROOT, spur)
case(trend, to)
det(trend, this)
nmod(spur, trend)
case(school, toward)
compound(school, area)
nmod(trend, school)
punct(spur, .)
case(1960, by)
obl(be, 1960)
expl(be, there)
root(ROOT, be)
amod(school, such)
nsubj(be, school)
case(all, in)
nmod(school, all)
cc(state, but)
nummod(state, 4)
conj(school, state)
punct(be, .)
nsubj(operate, they)
aux(operate, be)
root(ROOT, operate)
case(10, in)
obl(operate, 10)
case(area, of)
det(area, the)
nummod(area, 17)
amod(area, major)
nmod(10, area)
case(surplus, of)
amod(surplus, chronic)
compound(surplus, labor)
nmod(area, surplus)
cc(10, and)
case(10, in)
conj(area, 10)
case(area, of)
det(area, the)
amod(area, minor)
nmod(10, area)
punct(operate, .)
det(extension, a)
nsubj:pass(undertake, extension)
case(program, of)
det(program, this)
nmod(extension, program)
case(area, into)
det(area, the)
amod(area, other)
amod(area, distress)
nmod(extension, area)
aux(undertake, should)
aux:pass(undertake, be)
root(ROOT, undertake)
punct(undertake, .)
nsubj:pass(relate, relation)
case(industry, to)
amod(industry, new)
nmod(relation, industry)
nmod(relation, some)
case(trend, of)
det(trend, this)
nmod(some, trend)
case(school, toward)
compound(school, area)
amod(school, vocational)
nmod(trend, school)
aux(relate, have)
aux:pass(relate, be)
root(ROOT, relate)
case(problem, to)
det(problem, the)
obl(relate, problem)
case(area, of)
amod(area, persistent)
compound(surplus, labor)
compound(area, surplus)
nmod(problem, area)
cc(desire, and)
nmod:poss(desire, they)
conj(area, desire)
mark(attract, to)
acl(desire, attract)
amod(industry, new)
obj(attract, industry)
punct(relate, .)
det(need, the)
amod(need, major)
compound(need, training)
nsubj(period, need)
case(plant, of)
det(plant, a)
amod(plant, new)
amod(plant, industrial)
nmod(need, plant)
cop(period, be)
det(period, a)
amod(period, short)
root(ROOT, period)
case(training, of)
amod(training, pre-employment)
nmod(period, training)
case(number, for)
det(number, a)
amod(number, large)
nmod(period, number)
case(operator, of)
amod(machine, semi-skill)
compound(operator, machine)
nmod(number, operator)
punct(period, . )
det(worker, a)
amod(worker, few)
amod(worker, key)
amod(worker, skilled)
nsubj:pass(bring, worker)
acl(worker, experience)
case(type, in)
det(company, the)
nmod:poss(type, company)
case(company, 's)
obl(experience, type)
case(work, of)
nmod(type, work)
advmod(bring, usually)
aux(bring, must)
aux:pass(bring, be)
root(ROOT, bring)
advmod(bring, in)
case(manager, with)
det(manager, the)
compound(manager, plant)
obl(bring, manager)
punct(hire, ,)
cc(hire, or)
conj(bring, hire)
advmod(hire, away)
case(plant, from)
det(plant, a)
amod(plant, similar)
obl(hire, plant)
advmod(hire, elsewhere)
punct(bring, . )
det(industry, a)
amod(industry, prospective)
nsubj(interested, industry)
advmod(interested, also)
aux(interested, may)
cop(interested, be)
root(ROOT, interested)
case(advantage, in)
det(advantage, the)
amod(run, long)
punct(run, -)
amod(advantage, run)
obl(interested, advantage)
case(program, of)
compound(program, training)
nmod(advantage, program)
case(area, in)
det(area, the)
nmod(advantage, area)
mark(supply, to)
advcl(interested, supply)
amod(worker, future)
amod(worker, skilled)
obj(supply, worker)
cc(provide, and)
conj(supply, provide)
amod(course, supplementary)
compound(course, extension)
obj(provide, course)
case(employee, for)
nmod:poss(employee, its)
nmod(course, employee)
punct(interested, .)
det(existence, the)
nsubj(provide, existence)
case(program, of)
det(program, a)
amod(school, public)
compound(program, school)
amod(training, vocational)
compound(program, training)
nmod(existence, program)
case(trade, in)
nmod(program, trade)
cc(industry, and)
conj(trade, industry)
root(ROOT, provide)
det(base, a)
obj(provide, base)
case(which, from)
obl(fill, which)
amod(need, such)
nsubj:pass(fill, need)
aux(fill, can)
aux:pass(fill, be)
acl:relcl(base, fill)
punct(provide, .)
amod(course, additional)
nsubj:pass(add, course)
aux(add, can)
advmod(add, readily)
aux:pass(add, be)
root(ROOT, add)
cc(work, and)
amod(program, special)
amod(program, cooperative)
nsubj(work, program)
conj(add, work)
advmod(work, out)
case(industry, with)
det(industry, any)
amod(industry, new)
obl(work, industry)
mark(be, if)
det(facility, the)
amod(facility, basic)
nsubj(be, facility)
punct(staff, ,)
conj(facility, staff)
cc(program, and)
conj(facility, program)
cop(be, be)
case(be, in)
advcl(work, be)
punct(add, .)
advmod(have, thus)
punct(have, ,)
case(training, besides)
det(training, the)
obl(have, training)
acl(training, provide)
case(youth, to)
obl(provide, youth)
case(school, in)
obl(provide, school)
punct(have, ,)
det(existence, the)
nsubj(have, existence)
case(program, of)
det(program, the)
compound(program, school)
nmod(existence, program)
aux(have, can)
root(ROOT, have)
amod(benefit, supplementary)
obj(have, benefit)
case(industry, to)
nmod(benefit, industry)
nsubj(make, which)
acl:relcl(benefit, make)
obj(make, it)
det(asset, a)
xcomp(make, asset)
case(effort, to)
amod(effort, industrial)
compound(effort, development)
nmod(asset, effort)
punct(make, .)
amod(state, few)
nsubj(make, state)
parataxis(have, make)
amod(use, effective)
obj(make, use)
case(program, of)
nmod:poss(program, they)
amod(program, exist)
amod(education, vocational)
compound(program, education)
nmod(use, program)
cc(fund, or)
conj(program, fund)
case(purpose, for)
det(purpose, the)
nmod(program, purpose)
mark(attract, of)
acl(purpose, attract)
amod(industry, new)
obj(attract, industry)
punct(have, .)
det(opportunity, the)
nsubj(exist, opportunity)
root(ROOT, exist)
case(state, for)
obl(exist, state)
mark(reserve, to)
advcl(exist, reserve)
obj(reserve, some)
case(fund, of)
nmod:poss(fund, they)
amod(fund, vocational)
compound(fund, education)
nmod(some, fund)
mark(apply, to)
advcl(reserve, apply)
case(basis, on)
det(basis, a)
compound(basis, ad)
amod(flexible, hoc)
amod(basis, flexible)
obl(apply, basis)
mark(subsidize, to)
advcl(apply, subsidize)
det(program, any)
amod(program, local)
compound(program, preemployment)
compound(program, training)
obj(subsidize, program)
nsubj:pass(set, that)
aux(set, may)
aux:pass(set, be)
advmod(set, quickly)
acl:relcl(program, set)
compound:prt(set, up)
case(community, in)
det(community, a)
obl(set, community)
mark(aid, to)
advcl(set, aid)
det(plant, a)
amod(plant, new)
amod(plant, industrial)
obj(aid, plant)
punct(exist, .)
amod(focus, local)
nsubj(focus, focus)
case(program, of)
nmod(focus, program)
det(weakness, the)
amod(weakness, major)
nsubj(focus, weakness)
case(program, of)
amod(program, vocational)
compound(program, training)
nmod(weakness, program)
case(area, in)
compound(area, labor)
compound(area, surplus)
nmod(program, area)
cop(focus, be)
nmod:poss(focus, they)
root(ROOT, focus)
mark(serve, on)
acl(focus, serve)
advmod(serve, solely)
amod(demand, local)
compound(demand, job)
obj(serve, demand)
punct(focus, .)
det(weakness, this)
nsubj(unique, weakness)
cop(unique, be)
advmod(unique, not)
root(ROOT, unique)
case(area, to)
compound(surplus, labor)
compound(area, surplus)
obl(unique, area)
punct(unique, ,)
mark(inherent, for)
nsubj(inherent, it)
cop(inherent, be)
advcl(unique, inherent)
case(system, in)
det(system, the)
obl(inherent, system)
case(district, of)
amod(district, local)
compound(district, school)
nmod(system, district)
case(country, in)
det(country, this)
nmod(district, country)
punct(unique, .)
nsubj(oriented, plan)
case(program, of)
amod(education, vocational)
compound(program, education)
nmod(plan, program)
cc(course, and)
conj(program, course)
cop(oriented, be)
root(ROOT, oriented)
case(need, to)
amod(need, local)
compound(need, employer)
obl(oriented, need)
case(worker, for)
amod(worker, train)
nmod(need, worker)
punct(oriented, .)
det:predet(manual, all)
det(manual, the)
nsubj(stress, manual)
mark(set, for)
acl(manual, set)
compound:prt(set, up)
amod(course, vocational)
obj(set, course)
root(ROOT, stress)
det(importance, the)
obj(stress, importance)
mark(make, of)
advmod(make, first)
acl(importance, make)
det(survey, a)
amod(survey, local)
obj(make, survey)
case(need, of)
compound(need, skill)
nmod(survey, need)
punct(make, ,)
mark(estimate, of)
advcl(make, estimate)
det(growth, the)
obj(estimate, growth)
case(job, of)
amod(job, local)
nmod(growth, job)
punct(consulting, ,)
cc(consulting, and)
case(consulting, of)
conj(job, consulting)
case(employer, with)
amod(employer, local)
nmod(consulting, employer)
case(type, on)
det(type, the)
nmod(employer, type)
case(course, of)
nmod(type, course)
cc(content, and)
nmod:poss(content, they)
conj(course, content)
punct(stress, . )
advmod(be, furthermore)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(conservatism, a)
amod(conservatism, cautious)
nsubj(be, conservatism)
case(part, on)
det(part, the)
nmod(conservatism, part)
case(those, of)
nmod(part, those)
acl(those, make)
amod(survey, local)
compound(survey, skill)
obj(make, survey)
punct(see, .)
amod(job, local)
nsubj:pass(see, job)
aux(see, can)
aux:pass(see, be)
acl:relcl(those, see)
cc(count, and)
conj(see, count)
punct(see, ,)
mark(regard, while)
nsubj:pass(regard, opportunity)
advmod(opportunity, elsewhere)
aux:pass(regard, be)
advcl(see, regard)
case(hypothetical, as)
advmod(hypothetical, more)
obl(regard, hypothetical)
punct(regard, .)
mark(have, while)
det(Department, the)
compound(Department, U.)
compound(Department, S.)
nsubj(have, Department)
case(Labor, of)
nmod(Department, Labor)
advcl(regard, have)
det(program, a)
obj(have, program)
case(trend, of)
amod(trend, project)
compound(trend, industry)
cc(occupational, and)
conj(industry, occupational)
compound(trend, employment)
nmod(program, trend)
cc(publish, and)
conj(have, publish)
amod(statement, current)
compound(statement, outlook)
obj(publish, statement)
punct(be, ,)
expl(be, there)
parataxis(be, be)
amod(evidence, little)
amod(evidence, tangible)
nsubj(be, evidence)
mark(use, that)
det(projection, these)
nsubj:pass(use, projection)
aux(use, have)
aux:pass(use, be)
acl(evidence, use)
advmod(use, extensively)
case(planning, in)
amod(planning, local)
compound(planning, curriculum)
obl(use, planning)
punct(be, .)
det(Office, the)
compound(Office, U.)
compound(Office, S.)
nsubj(continue, Office)
case(Education, of)
nmod(Office, Education)
root(ROOT, continue)
mark(stress, to)
xcomp(continue, stress)
amod(survey, local)
obj(stress, survey)
cc(survey, rather)
fixed(rather, than)
amod(survey, national)
conj(survey, survey)
punct(continue, .)
det(procedure, this)
nsubj(shortsight, procedure)
cop(shortsight, be)
advmod(shortsight, extremely)
root(ROOT, shortsight)
case(area, in)
amod(area, chronic)
compound(surplus, labor)
compound(area, surplus)
obl(shortsight, area)
case(history, with)
det(history, a)
amod(history, long)
obl(shortsight, history)
mark(decline, of)
acl(history, decline)
obj(decline, employment)
punct(shortsight, .)
amod(study, Elaborate)
nsubj:pass(make, study)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
case(area, in)
compound(area, labor)
compound(area, surplus)
obl(make, area)
mark(identify, in)
fixed(in, order)
mark(identify, to)
advcl(make, identify)
amod(number, sufficient)
obj(identify, number)
case(vacancy, of)
amod(vacancy, local)
compound(vacancy, job)
nmod(number, vacancy)
cc(need, and)
amod(need, future)
compound(need, replacement)
conj(vacancy, need)
case(skill, for)
amod(skill, certain)
nmod(vacancy, skill)
mark(justify, to)
acl(skill, justify)
compound(program, training)
obj(justify, program)
case(skill, for)
det(skill, those)
obl(justify, skill)
punct(make, .)
det(effort, no)
nsubj:pass(make, effort)
aux:pass(make, be)
root(ROOT, make)
case(study, in)
det(study, the)
amod(study, same)
obl(make, study)
mark(present, to)
acl(study, present)
obj(present, information)
case(trend, on)
amod(trend, regional)
cc(demand, or)
conj(regional, national)
compound(trend, demand)
nmod(information, trend)
case(skill, in)
det(skill, these)
nmod(trend, skill)
cc(consider, or)
mark(consider, to)
conj(present, consider)
mark(provide, whether)
amod(demand, regional)
cc(national, or)
conj(regional, national)
nsubj(provide, demand)
case(skill, for)
amod(skill, other)
nmod(demand, skill)
aux(provide, might)
ccomp(consider, provide)
advmod(better, much)
amod(opportunity, better)
obj(provide, opportunity)
mark(train, for)
det(youth, the)
nsubj:pass(train, youth)
mark(train, to)
aux:pass(train, be)
acl(opportunity, train)
punct(provide, .)
advmod(need, moreover)
punct(need, ,)
det(information, the)
amod(information, current)
nsubj(provide, information)
mark(need, on)
det(type, what)
nsubj:pass(need, type)
case(training, of)
nmod(type, training)
aux:pass(need, be)
acl(information, need)
cc(limited, and)
nsubj(limited, possible)
cop(limited, be)
advmod(limited, too)
conj(need, limited)
cc(fragmentary, and)
conj(limited, fragmentary)
punct(make, .)
expl(be, there)
advmod(be, simply)
root(ROOT, be)
advmod(be, not)
amod(material, enough)
nsubj(be, material)
amod(material, available)
case(type, on)
det(type, the)
obl(available, type)
case(skill, of)
compound(skill, job)
nmod(type, skill)
nsubj(demand, that)
cop(demand, be)
case(demand, in)
acl:relcl(skill, demand)
cc(type, and)
det(type, the)
conj(demand, type)
case(program, of)
compound(program, training)
nmod(type, program)
nsubj:pass(require, that)
aux:pass(require, be)
acl:relcl(program, require)
cc(suitable, or)
advmod(suitable, most)
conj(require, suitable)
punct(require, .)
nsubj(come, much)
case(information, of)
det(information, the)
amod(information, available)
obl(much, information)
conj(be, come)
advmod(come, not)
case(government, from)
det(government, the)
amod(government, federal)
obl(come, government)
cc(exchange, but)
case(exchange, from)
det(exchange, a)
conj(come, exchange)
case(experience, of)
nmod(exchange, experience)
case(state, among)
nmod(experience, state)
punct(be, .)
compound(state, proposal)
nsubj:pass(encourage, state)
cc(agency, and)
amod(agency, local)
conj(state, agency)
case(field, in)
det(field, the)
amod(field, vocational)
compound(field, education)
nmod(agency, field)
aux(encourage, must)
aux:pass(encourage, be)
root(ROOT, encourage)
mark(adopt, to)
xcomp(encourage, adopt)
det(outlook, a)
amod(outlook, wider)
obj(adopt, outlook)
case(opportunity, on)
amod(opportunity, future)
compound(opportunity, job)
nmod(outlook, opportunity)
punct(encourage, .)
expl(be, there)
root(ROOT, be)
det(need, a)
nsubj(be, need)
case(effort, for)
det(effort, a)
amod(effort, expand)
amod(effort, federal)
nmod(need, effort)
mark(provide, to)
acl(effort, provide)
obj(provide, research)
cc(information, and)
conj(research, information)
mark(help, to)
advcl(provide, help)
xcomp(help, guide)
compound(education, state)
compound(department, education)
obj(guide, department)
cc(board, and)
amod(board, local)
compound(board, school)
conj(department, board)
case(program, in)
amod(program, exist)
obl(guide, program)
punct(be, . )
det(question, a)
amod(question, related)
nsubj(be, question)
root(ROOT, be)
mark(motivate, whether)
amod(worker, unemployed)
nsubj:pass(motivate, worker)
aux(motivate, can)
aux:pass(motivate, be)
ccomp(be, motivate)
mark(take, to)
xcomp(motivate, take)
det(training, the)
obj(take, training)
xcomp(take, provide)
punct(be, .)
expl(be, there)
root(ROOT, be)
amod(evidence, little)
nsubj(be, evidence)
mark(have, that)
amod(program, exist)
amod(program, public)
cc(private, or)
conj(public, private)
compound(program, training)
nsubj(have, program)
acl(evidence, have)
det(difficulty, any)
amod(difficulty, great)
obj(have, difficulty)
acl(difficulty, get)
obj(get, student)
mark(enroll, to)
xcomp(get, enroll)
case(program, in)
nmod:poss(program, they)
obl(enroll, program)
punct(enroll, ,)
advmod(pay, even)
mark(pay, though)
nsubj(pay, they)
aux(pay, must)
advcl(have, pay)
obj(pay, tuition)
punct(receive, ,)
conj(pay, receive)
det(payment, no)
compound(payment, subsistence)
obj(receive, payment)
punct(guarantee, ,)
cc(guarantee, and)
aux:pass(guarantee, be)
advmod(guarantee, not)
conj(pay, guarantee)
det(job, a)
obj(guarantee, job)
punct(be, .)
advmod(be, however)
punct(be, ,)
expl(be, there)
advmod(be, always)
root(ROOT, be)
det(limit, some)
nsubj(be, limit)
case(number, to)
det(number, the)
nmod(limit, number)
nsubj(spend, who)
aux(spend, will)
acl:relcl(number, spend)
det(time, the)
obj(spend, time)
cc(effort, and)
conj(time, effort)
mark(acquire, to)
advcl(spend, acquire)
obj(acquire, training)
punct(be, .)
advmod(focus, again)
punct(focus, ,)
nummod(difficulty, one)
amod(difficulty, major)
nsubj(focus, difficulty)
cop(focus, be)
det(focus, the)
amod(focus, local)
root(ROOT, focus)
punct(focus, . )
det(program, a)
compound(program, training)
nsubj(have, program)
case(area, in)
det(area, a)
amod(area, depressed)
nmod(program, area)
aux(have, may)
root(ROOT, have)
amod(enrollee, few)
obj(have, enrollee)
mark(be, unless)
expl(be, there)
advcl(have, be)
det(prospect, some)
amod(prospect, apparent)
nsubj(be, prospect)
case(opportunity, for)
amod(opportunity, better)
compound(opportunity, employment)
nmod(prospect, opportunity)
advmod(be, afterwards)
punct(poor, ,)
cc(poor, and)
det(prospect, the)
nsubj(poor, prospect)
aux(poor, may)
cop(poor, be)
conj(have, poor)
mark(aim, if)
det(training, the)
nsubj:pass(aim, training)
aux:pass(aim, be)
advcl(poor, aim)
advmod(aim, solely)
case(job, at)
obl(aim, job)
case(community, in)
det(community, the)
amod(community, local)
obl(aim, community)
punct(have, .)
mark(be, if)
expl(be, there)
advcl(expect, be)
amod(information, adequate)
nsubj(be, information)
case(opportunity, on)
compound(opportunity, job)
nmod(information, opportunity)
case(job, for)
amod(job, skill)
nmod(opportunity, job)
advmod(job, elsewhere)
punct(expect, ,)
amod(worker, many)
amod(worker, more)
nsubj:pass(expect, worker)
aux(expect, can)
aux:pass(expect, be)
root(ROOT, expect)
mark(respond, to)
xcomp(expect, respond)
punct(be, .)
det(problem, another)
nsubj(be, problem)
parataxis(expect, be)
nsubj(pay, who)
aux(pay, will)
ccomp(be, pay)
case(training, for)
det(training, the)
obl(pay, training)
punct(be, .)
amod(district, local)
compound(district, school)
nsubj:pass(press, district)
aux:pass(press, be)
advmod(press, hard)
root(ROOT, press)
advmod(press, financially)
cc(unenthusiastic, and)
conj(financially, unenthusiastic)
case(training, about)
amod(training, vocational)
obl(unenthusiastic, training)
punct(press, .)
nsubj:pass(expand, program)
advmod(expand, usually)
aux:pass(expand, be)
root(ROOT, expand)
advmod(expand, only)
mark(available, when)
amod(fund, outside)
nsubj(available, fund)
cop(available, be)
advcl(expand, available)
cc(demand, or)
amod(leader, local)
compound(leader, business)
nsubj(demand, leader)
conj(available, demand)
obj(demand, it)
punct(expand, .)
advmod(leader, even)
amod(leader, industrial)
compound(leader, development)
nsubj(find, leader)
ccomp(expand, find)
obj(find, it)
advmod(find, hard)
mark(win, to)
xcomp(find, win)
amod(support, local)
obj(win, support)
case(training, for)
nmod(support, training)
mark(sight, unless)
det(industry, a)
amod(industry, new)
nsubj(sight, industry)
cop(sight, be)
case(sight, in)
advcl(win, sight)
cc(request, and)
conj(sight, request)
obj(request, it)
punct(expand, .)
compound(government, state)
nsubj(take, government)
aux(take, have)
aux(take, be)
root(ROOT, take)
det(lead, the)
obj(take, lead)
mark(establish, in)
advcl(take, establish)
compound(school, area)
amod(school, vocational)
obj(establish, school)
punct(opportunity, ,)
cc(opportunity, but)
nmod:poss(focus, they)
nsubj(opportunity, focus)
cop(opportunity, be)
advmod(opportunity, still)
case(opportunity, on)
compound(opportunity, area)
compound(opportunity, job)
conj(take, opportunity)
punct(take, .)
advmod(government, only)
det(government, the)
amod(government, federal)
nsubj(likely, government)
cop(likely, be)
root(ROOT, likely)
mark(able, to)
cop(able, be)
xcomp(likely, able)
mark(take, to)
xcomp(able, take)
det(run, a)
amod(run, long)
punct(run, -)
obj(take, run)
cc(view, and)
obl:npmod(wide, nation)
punct(wide, -)
amod(view, wide)
obj(take, view)
cc(pay, and)
mark(pay, to)
conj(take, pay)
case(training, for)
obl(pay, training)
mark(meet, to)
advcl(pay, meet)
amod(need, national)
amod(manpower, skilled)
compound(need, manpower)
obj(meet, need)
punct(likely, .)
mark(use, if)
advmod(fund, only)
compound(fund, state)
nsubj:pass(use, fund)
aux:pass(use, be)
advcl(argue, use)
mark(pay, to)
xcomp(use, pay)
case(education, for)
det(education, the)
amod(education, vocational)
obl(pay, education)
punct(argue, ,)
nsubj:pass(argue, it)
aux(argue, could)
aux:pass(argue, be)
root(ROOT, argue)
mark(have, that)
det(state, the)
nsubj(have, state)
aux(have, should)
advmod(have, not)
ccomp(argue, have)
mark(bear, to)
xcomp(have, bear)
det(cost, the)
obj(bear, cost)
case(training, of)
amod(training, vocational)
nmod(cost, training)
nsubj(benefit, which)
aux(benefit, would)
acl:relcl(cost, benefit)
obj(benefit, employer)
case(state, in)
amod(state, other)
obl(benefit, state)
punct(argue, .)
advmod(appropriate, however)
punct(appropriate, ,)
mark(use, if)
amod(fund, federal)
nsubj:pass(use, fund)
aux:pass(use, be)
advcl(appropriate, use)
punct(appropriate, ,)
expl(appropriate, it)
aux(appropriate, would)
cop(appropriate, be)
advmod(appropriate, entirely)
root(ROOT, appropriate)
mark(train, to)
csubj(appropriate, train)
obj(train, worker)
case(job, for)
nmod(worker, job)
nsubj:pass(obtain, which)
aux(obtain, could)
aux:pass(obtain, be)
acl:relcl(job, obtain)
advmod(obtain, elsewhere)
cc(job, as)
fixed(as, well)
fixed(as, as)
case(job, for)
obl(obtain, job)
case(area, in)
det(area, the)
nmod(job, area)
case(unemployment, of)
amod(unemployment, chronic)
nmod(area, unemployment)
punct(appropriate, .)
amod(training, such)
nsubj(increase, training)
aux(increase, would)
root(ROOT, increase)
det(tendency, the)
obj(increase, tendency)
case(worker, of)
nmod(tendency, worker)
mark(leave, to)
acl(worker, leave)
det(area, the)
obj(leave, area)
cc(find, and)
conj(leave, find)
obj(find, job)
case(locality, in)
amod(locality, other)
obl(find, locality)
punct(increase, . )
det(possibility, a)
amod(possibility, further)
nsubj:pass(suggest, possibility)
aux:pass(suggest, be)
root(ROOT, suggest)
case(example, by)
det(example, the)
obl(suggest, example)
case(bill, of)
det(bill, the)
compound(bill, G.)
flat(G., i.)
nmod(example, bill)
cc(trend, and)
advmod(trend, also)
case(trend, by)
det(trend, some)
amod(trend, recent)
conj(bill, trend)
case(attitude, in)
nmod(trend, attitude)
mark(improve, toward)
acl(attitude, improve)
compound(education, college)
obj(improve, education)
punct(be, :)
nsubj(be, that)
parataxis(suggest, be)
mark(provide, to)
ccomp(be, provide)
amod(assistance, financial)
obj(provide, assistance)
case(individual, to)
nmod(assistance, individual)
case(training, for)
amod(training, vocational)
nmod(individual, training)
mark(inadequate, when)
amod(facility, local)
nsubj(inadequate, facility)
cop(inadequate, be)
advcl(require, inadequate)
punct(require, .)
nsubj(require, this)
advmod(require, probably)
aux(require, would)
parataxis(suggest, require)
det(support, some)
obj(require, support)
case(subsistence, for)
nmod(support, subsistence)
cc(tuition, as)
fixed(as, well)
fixed(as, as)
case(tuition, for)
conj(support, tuition)
punct(greater, ,)
cc(greater, but)
det(total, the)
nsubj(greater, total)
aux(greater, would)
cop(greater, be)
advmod(greater, no)
conj(tuition, greater)
case(proposal, than)
case(proposal, for)
det(proposal, the)
obl(greater, proposal)
case(compensation, of)
amod(compensation, unemployment)
nmod(proposal, compensation)
cc(Corps, or)
det(Corps, a)
compound(Corps, Youth)
compound(Corps, conservation)
conj(compensation, Corps)
punct(proposal, .)
det(maximum, a)
nsubj(enable, maximum)
case($, of)
nmod(maximum, $)
nummod($, 600)
case(year, per)
nmod($, year)
case(student, per)
nmod($, student)
aux(enable, would)
parataxis(greater, enable)
obj(enable, many)
mark(take, to)
xcomp(enable, take)
xcomp(take, train)
advmod(train, away)
case(home, from)
obl(train, home)
punct(suggest, . )
det(program, a)
nsubj(permit, program)
case(assistance, of)
amod(assistance, financial)
nmod(program, assistance)
aux(permit, would)
root(ROOT, permit)
xcomp(permit, place)
obj(place, emphasis)
case(interest, on)
det(interest, the)
amod(interest, national)
obl(place, interest)
mark(train, in)
acl(interest, train)
advmod(skilled, highly)
amod(labor, skilled)
obj(train, labor)
punct(permit, .)
mark(limit, instead)
mark(limit, of)
aux:pass(limit, be)
advcl(able, limit)
case(facility, to)
det(facility, the)
amod(facility, poor)
compound(facility, training)
obl(limit, facility)
case(area, in)
amod(area, remote)
nmod(facility, area)
punct(able, ,)
det(student, the)
nsubj(able, student)
aux(able, would)
cop(able, be)
root(ROOT, able)
mark(move, to)
xcomp(able, move)
case(institution, to)
amod(institution, large)
obl(move, institution)
case(training, of)
amod(training, concentrate)
amod(training, specialize)
nmod(institution, training)
punct(able, .)
amod(institution, such)
amod(institution, specialize)
compound(institution, training)
nsubj:pass(locate, institution)
aux(locate, could)
aux:pass(locate, be)
root(ROOT, locate)
case(industry, near)
det(industry, the)
advmod(grow, most)
advmod(grow, rapidly)
amod(industry, grow)
obl(locate, industry)
punct(industry, ,)
advmod(exist, where)
det(equipment, the)
nsubj(exist, equipment)
cc(experience, and)
compound(experience, job)
conj(equipment, experience)
acl:relcl(industry, exist)
cc(locate, and)
advmod(locate, where)
det(opportunity, the)
amod(opportunity, future)
compound(opportunity, employment)
nsubj:pass(locate, opportunity)
aux:pass(locate, be)
conj(exist, locate)
punct(locate, .)
nsubj(heighten, this)
aux(heighten, would)
root(ROOT, heighten)
obj(heighten, possibility)
case(cooperative, for)
compound(time, part)
punct(time, -)
compound(cooperative, time)
nmod(possibility, cooperative)
punct(cooperative, ,)
case(job, on)
punct(job, -)
det(job, the)
punct(job, -)
nmod(cooperative, job)
cc(training, and)
compound(training, extension)
conj(job, training)
punct(heighten, .)
amod(assistance, Personal)
amod(assistance, financial)
nsubj(enable, assistance)
aux(enable, would)
root(ROOT, enable)
amod(emphasis, more)
obj(enable, emphasis)
mark(place, to)
aux:pass(place, be)
acl(emphasis, place)
case(interest, on)
det(interest, the)
obl(place, interest)
case(individual, of)
det(individual, the)
nmod(interest, individual)
punct(enable, .)
nmod:poss(aptitude, he)
nsubj:pass(give, aptitude)
cc(preference, and)
conj(aptitude, preference)
aux(give, could)
aux:pass(give, be)
root(ROOT, give)
amod(weight, more)
obj(give, weight)
mark(select, in)
acl(weight, select)
det(training, the)
amod(training, proper)
obj(select, training)
punct(give, .)
cc(examine, but)
advmod(examine, briefly)
punct(examine, ,)
det(configuration, the)
compound(configuration, top)
nsubj:pass(examine, configuration)
aux(examine, must)
aux:pass(examine, be)
root(ROOT, examine)
case(inference, for)
nmod:poss(inference, its)
obl(examine, inference)
punct(examine, .)
advmod(fact, then)
det(fact, the)
root(ROOT, fact)
mark(pierce, that)
det(line, the)
amod(line, lower)
compound(line, channel)
nsubj:pass(pierce, line)
aux:pass(pierce, be)
acl(fact, pierce)
acl(fact, have)
amod(significance, further)
compound(significance, forecast)
obj(have, significance)
punct(fact, .)
cc(give, and)
advmod(give, then)
det(application, the)
nsubj(give, application)
case(rule, of)
det(rule, the)
compound(rule, count)
nmod(application, rule)
case(width, to)
det(width, the)
nmod(rule, width)
punct(horizontally, ()
advmod(width, horizontally)
punct(horizontally, ))
case(configuration, of)
det(configuration, the)
nmod(width, configuration)
root(ROOT, give)
iobj(give, we)
det(estimate, a)
amod(estimate, intial)
obj(give, estimate)
case(depth, of)
det(depth, the)
amod(depth, probable)
nmod(estimate, depth)
case(decline, of)
det(decline, the)
nmod(depth, decline)
punct(give, .)
det(idea, the)
amod(idea, very)
nsubj(imply, idea)
case(there, of)
nmod(idea, there)
cop(rule, be)
punct(rule, ``)
compound(rule, count)
nmod(idea, rule)
punct(rule, '')
root(ROOT, imply)
mark(be, that)
expl(be, there)
ccomp(imply, be)
det(sort, some)
nsubj(be, sort)
case(proportion, of)
nmod(sort, proportion)
mark(expect, to)
aux:pass(expect, be)
acl(sort, expect)
case(amount, between)
det(amount, the)
obl(expect, amount)
case(activity, of)
amod(activity, congestive)
nmod(amount, activity)
cc(extent, and)
det(extent, the)
conj(amount, extent)
case(breakaway, of)
det(breakaway, the)
nmod(extent, breakaway)
punct(run, ()
parataxis(extent, run)
compound:prt(run, up)
cc(run, or)
conj(run, run)
compound:prt(run, down)
punct(run, ))
obj(run, movement)
punct(imply, .)
det(expectation, this)
nsubj(what, expectation)
cop(what, be)
root(ROOT, what)
advmod(sell, really)
punct(sell, ``)
amod(point, sell)
punct(sell, '')
nsubj(what, point)
cc(figure, and)
conj(what, figure)
punct(what, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
det(relationship, no)
amod(relationship, positive)
cc(demonstrable, and)
advmod(demonstrable, consistently)
conj(positive, demonstrable)
nsubj(be, relationship)
case(sense, in)
det(sense, the)
amod(sense, strictest)
nmod(relationship, sense)
punct(be, .)
nsubj(show, experience)
aux(show, will)
root(ROOT, show)
mark(apply, that)
advmod(generality, only)
det(generality, the)
amod(generality, vaguest)
nsubj(apply, generality)
ccomp(show, apply)
punct(dwell, ,)
cc(dwell, and)
case(fine, in)
obl(dwell, fine)
punct(dwell, ,)
nsubj(dwell, these)
advmod(dwell, merely)
conj(show, dwell)
case(relationship, upon)
det(relationship, a)
obl(dwell, relationship)
case(duration, between)
det(duration, the)
nmod(relationship, duration)
cc(intensity, and)
conj(duration, intensity)
case(event, of)
nmod(duration, event)
punct(show, .)
advmod(all, after)
advmod(happen, all)
punct(happen, ,)
advmod(much, too)
advmod(happen, much)
aux(happen, do)
advmod(happen, not)
root(ROOT, happen)
advmod(suddenly, too)
advmod(happen, suddenly)
punct(take, ,)
cc(take, nor)
aux(take, do)
advmod(little, very)
obl:npmod(take, little)
conj(happen, take)
advmod(take, long)
punct(happen, .)
det(advantage, the)
nsubj(remain, advantage)
cc(disadvantage, and)
conj(advantage, disadvantage)
case(type, of)
det(type, these)
nummod(type, two)
nmod(advantage, type)
case(chart, of)
nmod(type, chart)
punct(chart, ,)
compound(chart, bar)
conj(chart, chart)
cc(point, and)
conj(chart, point)
cc(chart, and)
compound(chart, figure)
conj(chart, chart)
punct(remain, ,)
root(ROOT, remain)
det(subject, the)
xcomp(remain, subject)
case(litigation, of)
advmod(nature, fairly)
amod(nature, good)
punct(nature, -)
amod(litigation, nature)
nmod(subject, litigation)
case(advocate, among)
nmod:poss(advocate, they)
amod(advocate, respective)
amod(advocate, professional)
nmod(litigation, advocate)
punct(litigation, ,)
case(method, with)
det(method, both)
nmod(subject, method)
acl(method, enjoy)
case(merit, in)
amod(merit, common)
punct(merit, ,)
nummod(merit, one)
amod(merit, irrevocable)
obl(enjoy, merit)
punct(subject, .)
nsubj(method, they)
cop(method, be)
det(method, both)
compound(follow, trend)
punct(follow, -)
amod(method, follow)
root(ROOT, method)
punct(method, .)
advmod(strip, even)
mark(strip, if)
nsubj(strip, we)
advcl(favor, strip)
nmod:poss(claim, they)
amod(claim, respective)
obj(strip, claim)
case(minimum, to)
det(minimum, the)
amod(minimum, barest)
nmod(claim, minimum)
punct(favor, ,)
det(odd, the)
punct(odd, ``)
nsubj(favor, odd)
punct(odd, '')
advmod(favor, still)
root(ROOT, favor)
obj(favor, they)
det(they, both)
punct(favor, ,)
case(trend, for)
det(trend, the)
obl(likely, trend)
case(effect, in)
nmod(trend, effect)
cop(likely, be)
advmod(likely, always)
advmod(likely, more)
conj(favor, likely)
mark(continue, to)
xcomp(likely, continue)
mark(reverse, than)
mark(reverse, to)
advcl(continue, reverse)
punct(likely, .)
advmod(chart, of)
fixed(of, course)
punct(chart, ,)
amod(thing, many)
amod(thing, more)
nsubj:pass(chart, thing)
aux:pass(chart, be)
root(ROOT, chart)
case(price, besides)
obl(chart, price)
punct(chart, .)
det(forego, the)
nsubj(method, forego)
aux(method, have)
cop(method, be)
root(ROOT, method)
mark(chart, of)
acl(method, chart)
obj(chart, price)
punct(let, ,)
cc(let, but)
advmod(let, now)
conj(method, let)
obj(let, we)
xcomp(let, look)
case(some, at)
obl(look, some)
case(index, of)
det(index, the)
amod(index, other)
nmod(some, index)
nsubj:pass(chart, that)
aux:pass(chart, be)
advmod(chart, customarily)
acl:relcl(index, chart)
punct(look, ,)
cc(look, and)
nsubj:pass(look, which)
aux:pass(look, be)
conj(chart, look)
obl(look, to)
case(ability, for)
nmod:poss(ability, they)
compound(ability, forecast)
obl(look, ability)
punct(method, .)
det(quest, the)
nsubj(ceaseless, quest)
case(method, for)
nmod(quest, method)
det(search, the)
nmod(quest, search)
case(formulae, for)
compound(formulae, forecast)
nmod(search, formulae)
cop(ceaseless, be)
root(ROOT, ceaseless)
punct(ceaseless, .)
nsubj:pass(work, correlation)
aux(work, have)
aux:pass(work, be)
root(ROOT, work)
compound:prt(work, up)
case(loading, between)
det(loading, the)
obl(work, loading)
case(car, of)
compound(car, freight)
nmod(loading, car)
cc(course, and)
det(course, the)
conj(loading, course)
case(price, of)
compound(price, stock)
nmod(course, price)
punct(work, .)
det(theory, the)
nsubj(fundamentalist, theory)
case(this, behind)
nmod(theory, this)
cop(fundamentalist, be)
punct(fundamentalist, ,)
advmod(fundamentalist, of)
fixed(of, course)
punct(fundamentalist, ,)
root(ROOT, fundamentalist)
case(character, in)
obl(fundamentalist, character)
punct(fundamentalist, .)
mark(take, as)
det(number, the)
nsubj:pass(take, number)
case(loading, of)
amod(loading, report)
compound(loading, freight)
compound(loading, car)
nmod(number, loading)
acl(loading, increase)
punct(take, ,)
nsubj:pass(take, this)
aux:pass(take, be)
root(ROOT, take)
mark(indicate, to)
xcomp(take, indicate)
amod(activity, increase)
amod(activity, industrial)
obj(indicate, activity)
punct(earning, ,)
cc(earning, and)
advmod(increase, consequently)
amod(earning, increase)
compound(earning, stock)
conj(activity, earning)
punct(imply, ,)
advcl(indicate, imply)
amod(dividend, fatter)
obj(imply, dividend)
punct(imply, ,)
cc(imply, and)
conj(imply, imply)
advmod(increase, therefore)
amod(price, increase)
compound(market, stock)
compound(price, market)
obj(imply, price)
punct(take, .)
nsubj(know, we)
advmod(know, now)
root(ROOT, know)
mark(work, that)
nsubj(work, thing)
advmod(work, rarely)
advmod(work, ever)
ccomp(know, work)
compound:prt(work, out)
case(fashion, in)
amod(fashion, such)
amod(fashion, cut)
amod(dry, -and)
punct(dry, -)
amod(fashion, dry)
obl(work, fashion)
punct(loading, ,)
cc(loading, and)
det(loading, that)
compound(loading, car)
conj(fashion, loading)
punct(formula, ,)
mark(enough, while)
advmod(enough, perhaps)
advmod(enough, interesting)
advcl(formula, enough)
punct(formula, ,)
cop(formula, be)
advmod(formula, nevertheless)
advmod(formula, not)
det(formula, the)
compound(formula, magic)
ccomp(know, formula)
nsubj(turn, that)
aux(turn, will)
advmod(turn, always)
acl:relcl(formula, turn)
case(price, before)
compound(price, stock)
obl(turn, price)
advcl(turn, turn)
punct(know, .)
cc(go, but)
det(quest, the)
nsubj(go, quest)
case(index, for)
det:predet(index, such)
det(index, a)
nmod(quest, index)
root(ROOT, go)
advmod(go, on)
advmod(go, ceaselessly)
punct(go, ,)
case(manner, with)
det(manner, all)
obl(go, manner)
case(investor, of)
nmod(manner, investor)
cc(speculator, and)
conj(investor, speculator)
acl(manner, participate)
punct(range, ,)
advcl(participate, range)
case(type, from)
det(type, the)
amod(type, sedate)
amod(type, institutional)
obl(range, type)
advmod(operator, virtually)
case(operator, to)
det(operator, the)
amod(operator, proverbial)
compound(string, shoe)
punct(string, -)
compound(operator, string)
nmod(type, operator)
punct(operator, ,)
advmod(seek, all)
acl(operator, seek)
advmod(seek, doggedly)
punct(seek, ,)
advmod(seek, studiously)
punct(seek, ,)
advmod(seek, daily)
punct(seek, --)
cc(nightly, and)
advmod(nightly, often)
conj(daily, nightly)
punct(nightly, --)
case(index, for)
det(index, the)
amod(index, enchant)
obl(nightly, index)
nsubj(foretell, that)
aux(foretell, will)
acl:relcl(index, foretell)
det(secret, the)
amod(secret, eternal)
obj(foretell, secret)
punct(go, :)
det(way, which)
obj(move, way)
aux(move, will)
det(market, the)
nsubj(move, market)
root(ROOT, move)
punct(move, --)
advmod(move, up)
cc(down, or)
conj(up, down)
punct(move, ?)
punct(move, ?)
nsubj(recall, it)
root(ROOT, recall)
mark(mind, to)
xcomp(recall, mind)
det(quest, the)
obj(mind, quest)
case(time, of)
amod(time, olden)
nmod(quest, time)
case(fountain, for)
det(fountain, the)
obl(mind, fountain)
case(youth, of)
nmod(fountain, youth)
punct(fountain, ,)
det(quest, a)
appos(fountain, quest)
advmod(invest, heavily)
acl(quest, invest)
obl(invest, in)
punct(invest, ,)
case(day, during)
det(day, the)
obl(invest, day)
case(ship, of)
compound(ship, wooden)
nmod(day, ship)
punct(recall, .)
advmod(invest, just)
mark(invest, as)
advmod(invest, heavily)
advcl(endeavor, invest)
cop(endeavor, be)
det(endeavor, the)
root(ROOT, endeavor)
case(multitude, of)
nmod(endeavor, multitude)
case(man, of)
amod(man, modern)
nmod(multitude, man)
nsubj(carry, who)
acl:relcl(man, carry)
case(quest, on)
det(quest, the)
obl(carry, quest)
case(index, for)
det(index, the)
amod(index, enchant)
nmod(quest, index)
punct(endeavor, .)
det(quest, the)
nsubj(offer, quest)
root(ROOT, offer)
obj(offer, career)
punct(offer, .)
nsubj(go, much)
case(this, of)
nmod(much, this)
ccomp(offer, go)
advmod(go, on)
case(office, in)
obl(go, office)
amod(office, high)
advmod(office, up)
case(tower, in)
compound(Street, Wall)
nmod:poss(tower, Street)
case(Street, 's)
amod(tower, lofty)
obl:npmod(sweep, wind)
punct(sweep, -)
amod(tower, sweep)
obl(go, tower)
punct(offer, .)
expl(sit, there)
root(ROOT, sit)
obj(sit, man)
nsubj(make, who)
acl:relcl(man, make)
xcomp(make, move)
obj(move, average)
case(volume, of)
amod(volume, weekly)
nmod(average, volume)
punct(average, ,)
amod(average, monthly)
conj(average, average)
case(ratio, of)
compound(earning, price)
punct(earning, -)
compound(ratio, earning)
nmod(average, ratio)
punct(ratio, ,)
conj(average, ratio)
case(number, of)
det(number, the)
nmod(ratio, number)
case(advance, of)
nmod(number, advance)
case(number, to)
det(number, the)
nmod(advance, number)
case(decline, of)
nmod(number, decline)
punct(ratio, ,)
conj(decline, ratio)
case(performance, of)
det(stock, a)
amod(stock, individual)
nmod:poss(performance, stock)
case(stock, 's)
nmod(ratio, performance)
case(performance, to)
amod(performance, overall)
compound(performance, market)
nmod(performance, performance)
punct(ratio, ,)
conj(performance, ratio)
case(volume, of)
amod(volume, rise)
compound(volume, price)
nmod(ratio, volume)
case(volume, to)
compound(volume, falling)
compound(volume, price)
nmod(volume, volume)
punct(index, ,)
amod(lot, odd)
punct(lot, -)
compound(index, lot)
conj(performance, index)
punct(what, ,)
cc(what, and)
conj(index, what)
advmod(what, not)
punct(sit, .)
nsubj(concerned, they)
cop(concerned, be)
root(ROOT, concerned)
case(thing, with)
det(thing, all)
obl(concerned, thing)
acl(thing, trade)
compound:prt(trade, in)
punct(security, ,)
conj(thing, security)
punct(bond, ,)
conj(security, bond)
punct(cocao, ,)
conj(security, cocao)
punct(coffee, ,)
conj(security, coffee)
punct(soybean, ,)
conj(thing, soybean)
punct(cotton, ,)
conj(thing, cotton)
punct(tin, ,)
conj(thing, tin)
punct(oat, ,)
conj(thing, oat)
punct(etc, ,)
conj(thing, etc)
punct(concerned, .)
punct(concerned, .)
cc(sit, and)
case(Boulevard, along)
nmod:poss(Boulevard, Chicago)
case(Chicago, 's)
compound(Boulevard, West)
compound(Boulevard, Jackson)
obl(sit, Boulevard)
punct(Street, ,)
compound(Street, La)
compound(Street, salle)
conj(Boulevard, Street)
punct(Plaza, ,)
cc(Plaza, and)
case(Plaza, around)
det(Plaza, the)
compound(Plaza, Merchandise)
compound(Plaza, Mart)
conj(Boulevard, Plaza)
expl(sit, there)
root(ROOT, sit)
obj(sit, man)
nsubj(chart, who)
acl:relcl(man, chart)
compound(report, crop)
obj(chart, report)
punct(report, ,)
nsubj(divide, who)
acl:relcl(report, divide)
det(number, the)
obj(divide, number)
case(bug, of)
amod(bug, report)
compound(bug, lady)
punct(bug, -)
nmod(number, bug)
case(number, by)
det(number, the)
nmod(number, number)
case(bug, of)
amod(bug, report)
amod(bug, green)
punct(bug, -)
nmod(number, bug)
punct(number, ,)
cc(number, and)
det(number, the)
conj(number, number)
case(hog, of)
nmod(number, hog)
case(amount, by)
det(amount, the)
nmod(number, amount)
case(corn, of)
nmod(amount, corn)
punct(sit, .)
nsubj(plot, they)
root(ROOT, plot)
det(curve, the)
amod(curve, open)
compound(curve, interest)
obj(plot, curve)
punct(curve, ,)
compound(curve, rainfall)
conj(curve, curve)
punct(divide, ,)
cc(divide, and)
nsubj(divide, they)
advmod(divide, even)
conj(plot, divide)
amod(congressme, democratic)
obj(divide, congressme)
case(congressme, by)
amod(congressme, republican)
obl(divide, congressme)
punct(plot, .)
det:predet(thing, all)
det(thing, these)
nsubj(enter, thing)
cc(countless, and)
conj(thing, countless)
advmod(enter, more)
root(ROOT, enter)
case(calculation, into)
nmod:poss(calculation, they)
obl(enter, calculation)
punct(remain, ,)
cc(remain, and)
advmod(remain, yet)
punct(remain, ,)
det(index, the)
amod(index, enchant)
nsubj(remain, index)
conj(enter, remain)
xcomp(remain, non-forthcoming)
punct(enter, . )
advmod(rate, not)
punct(sense, ,)
case(rate, at)
det(rate, any)
obl(sense, rate)
punct(sense, ,)
case(sense, in)
det(sense, the)
amod(sense, fuller)
root(ROOT, sense)
case(word, of)
det(word, the)
nmod(sense, word)
punct(not, .)
det(market, the)
nsubj(subtle, market)
cop(subtle, be)
advmod(subtle, far)
advmod(subtle, too)
root(ROOT, subtle)
punct(write, ,)
cc(write, and)
det(word, the)
amod(word, last)
nsubj:pass(write, word)
case(endeavor, in)
det(endeavor, these)
nmod(word, endeavor)
aux(write, will)
advmod(write, doubtless)
advmod(write, never)
aux:pass(write, be)
conj(subtle, write)
punct(nebulous, ,)
case(index, for)
det(index, the)
amod(index, enchant)
obl(nebulous, index)
cop(nebulous, be)
advmod(as, about)
advmod(nebulous, as)
conj(write, nebulous)
case(fountain, as)
det(fountain, the)
obl(nebulous, fountain)
case(youth, of)
nmod(fountain, youth)
punct(subtle, .)
cc(abandon, but)
mark(pursue, whereas)
amod(man, civilized)
nsubj(pursue, man)
advmod(longer, no)
advmod(pursue, longer)
advcl(abandon, pursue)
det(fountain, the)
obj(pursue, fountain)
punct(abandon, ,)
nsubj(abandon, they)
advmod(abandon, never)
root(ROOT, abandon)
nmod:poss(pursuit, they)
obj(abandon, pursuit)
case(index, of)
det(index, the)
amod(index, enchant)
nmod(pursuit, index)
punct(abandon, .)
nsubj(mention, we)
root(ROOT, mention)
amod(lot, odd)
punct(lot, -)
compound(index, lot)
obj(mention, index)
det(paragraph, a)
amod(paragraph, few)
obl:npmod(ago, paragraph)
advmod(mention, ago)
punct(mention, .)
case(market, in)
det(market, the)
compound(market, stock)
obl(share, market)
punct(share, ,)
det(package, the)
amod(package, normal)
compound(package, trading)
nsubj(share, package)
cop(share, be)
det(share, a)
nummod(share, hundred)
root(ROOT, share)
punct(share, ,)
advmod(bushel, just)
case(5,000, as)
nummod(bushel, 5,000)
nsubj(package, bushel)
cop(package, be)
det(package, the)
amod(package, standard)
compound(contract, grain)
compound(package, contract)
parataxis(share, package)
punct(share, . )
det(transaction, a)
compound(transaction, stock)
nsubj:pass(execute, transaction)
case(share, for)
advmod(hundred, less)
fixed(less, than)
det(hundred, a)
nummod(share, hundred)
nmod(transaction, share)
aux:pass(execute, be)
root(ROOT, execute)
case(broker, via)
det(broker, a)
amod(broker, special)
amod(lot, odd)
punct(lot, -)
compound(broker, lot)
obl(execute, broker)
case(floor, on)
det(floor, the)
nmod(broker, floor)
case(exchange, of)
det(exchange, the)
nmod(floor, exchange)
punct(execute, .)
det(result, this)
nsubj:pass(make, result)
case(record, in)
det(record, a)
amod(record, separate)
nmod(result, record)
aux:pass(make, be)
root(ROOT, make)
punct(distinguishing, ,)
advcl(make, distinguishing)
det(trade, these)
obj(distinguishing, trade)
case(volume, from)
det(volume, the)
amod(volume, overall)
obl(distinguishing, volume)
case(trading, of)
nmod(volume, trading)
punct(make, .)
case(theory, accord)
case(theory, to)
det(theory, the)
obl(trader, theory)
amod(index, underlying)
amod(lot, odd)
punct(lot, -)
compound(index, lot)
nmod(theory, index)
punct(trader, ,)
det(trader, the)
nsubj(trader, trader)
nsubj(trade, who)
acl:relcl(trader, trade)
amod(lot, odd)
obj(trade, lot)
cop(trader, be)
advmod(likely, most)
advmod(trader, likely)
det(trader, a)
amod(trader, small)
root(ROOT, trader)
punct(trader, ,)
nsubj(trader, one)
nsubj(afford, who)
aux(afford, can)
advmod(afford, not)
acl:relcl(one, afford)
mark(trade, to)
xcomp(afford, trade)
case(lot, round)
obl(trade, lot)
punct(trader, .)
cc(represent, or)
punct(represent, ,)
mark(use, to)
advcl(represent, use)
det(phraseology, the)
amod(phraseology, cynical)
obj(use, phraseology)
case(enthusiast, of)
nummod(enthusiast, one)
amod(lot, odd)
punct(lot, -)
compound(enthusiast, lot)
compound(enthusiast, index)
nmod(phraseology, enthusiast)
punct(represent, ,)
nsubj(represent, they)
root(ROOT, represent)
det(sampling, a)
obj(represent, sampling)
case(echelon, of)
det(echelon, the)
nmod(sophisticated, least)
amod(echelon, sophisticated)
nmod(sampling, echelon)
case(trader, of)
nmod(echelon, trader)
punct(represent, . )
advcl(afford, fall)
advmod(easily, most)
advmod(fall, easily)
obj(fall, prey)
case(movement, to)
det(movement, a)
amod(movement, adverse)
compound(movement, market)
nmod(prey, movement)
punct(afford, ,)
case(rank, for)
det(rank, this)
obl(afford, rank)
case(trader, of)
nmod(rank, trader)
aux(afford, can)
advmod(afford, least)
root(ROOT, afford)
mark(lose, to)
xcomp(afford, lose)
punct(afford, ,)
advmod(take, virtually)
obj(afford, anything)
det(trader, the)
amod(lot, odd)
punct(lot, -)
compound(trader, lot)
nsubj(do, trader)
acl:relcl(anything, do)
punct(do, ,)
advmod(take, marketwise)
punct(take, ,)
aux:pass(take, be)
conj(do, take)
mark(exemplify, to)
advcl(take, exemplify)
det(thing, the)
punct(thing, ``)
amod(thing, wrong)
punct(wrong, '')
obj(exemplify, thing)
mark(do, to)
acl(thing, do)
punct(take, . )
root(ROOT, figure)
xcomp(figure, report)
det(volume, the)
obj(report, volume)
case(purchase, of)
amod(lot, odd)
punct(lot, -)
compound(purchase, lot)
nmod(volume, purchase)
cc(sale, and)
amod(lot, odd)
punct(lot, -)
compound(sale, lot)
nsubj:pass(release, sale)
aux:pass(release, be)
conj(figure, release)
case(exchange, by)
det(exchange, the)
compound(exchange, stock)
obl(release, exchange)
cc(carry, and)
conj(release, carry)
case(newspaper, in)
det(newspaper, the)
obl(carry, newspaper)
punct(figure, .)
amod(lot, Odd)
punct(lot, -)
compound(observer, lot)
compound(observer, index)
nsubj(make, observer)
advmod(make, then)
root(ROOT, make)
obj(make, graph)
case(data, of)
det(data, the)
nmod(graph, data)
case(recipe, accord)
fixed(accord, to)
nmod:poss(recipe, they)
amod(recipe, particular)
amod(recipe, statistical)
obl(make, recipe)
punct(make, .)
nsubj(plot, they)
aux(plot, might)
punct(plot, ,)
case(example, for)
obl(plot, example)
punct(plot, ,)
root(ROOT, plot)
obj(plot, it)
advmod(be, exactly)
mark(be, as)
advcl(plot, be)
punct(make, ,)
cc(make, or)
nsubj(make, they)
aux(make, might)
conj(plot, make)
nummod(day, ten)
obj(make, day)
xcomp(make, move)
obj(move, average)
case(it, of)
nmod(average, it)
punct(move, ,)
cc(move, or)
advmod(move, longer)
conj(move, move)
obj(move, average)
punct(plot, ,)
cc(plot, or)
nsubj(plot, they)
aux(plot, might)
advmod(plot, simply)
conj(plot, plot)
det(ratio, the)
obj(plot, ratio)
case(purchase, of)
amod(lot, odd)
punct(lot, -)
compound(purchase, lot)
nmod(ratio, purchase)
case(sale, to)
amod(lot, odd)
punct(lot, -)
compound(sale, lot)
nmod(purchase, sale)
punct(plot, .)
det(recipe, the)
amod(recipe, particular)
nsubj(matter, recipe)
cop(matter, be)
det(matter, a)
root(ROOT, matter)
case(taste, of)
amod(taste, individual)
nmod(matter, taste)
punct(matter, .)
det(data, the)
nsubj:pass(interpret, data)
aux:pass(interpret, be)
advmod(interpret, now)
root(ROOT, interpret)
case(conjunction, in)
obl(interpret, conjunction)
case(chart, with)
det(chart, a)
compound(chart, price)
nmod(conjunction, chart)
punct(chart, ,)
advmod(average, usually)
case(average, of)
det(average, a)
amod(average, popular)
compound(average, stock)
nmod(chart, average)
punct(chart, .)
case(end, towards)
det(end, the)
obl(interpret, end)
case(rise, of)
det(rise, a)
amod(rise, intermediate)
cc(major, or)
conj(intermediate, major)
nmod(end, rise)
punct(observe, ,)
mark(form, while)
det(top, the)
nsubj(form, top)
aux(form, be)
advcl(observe, form)
case(chart, on)
det(chart, the)
compound(chart, price)
obl(form, chart)
punct(observe, ,)
nsubj:pass(observe, it)
aux:pass(observe, be)
advmod(observe, frequently)
conj(interpret, observe)
mark(increase, that)
det(increase, the)
amod(lot, odd)
punct(lot, -)
compound(increase, lot)
compound(increase, buying)
obj(observe, increase)
advmod(observe, sharply)
punct(interpret, .)
nsubj(warn, this)
root(ROOT, warn)
det(chartist, the)
obj(warn, chartist)
mark(likely, that)
det(formation, the)
nsubj(likely, formation)
case(progress, in)
nmod(formation, progress)
cop(likely, be)
advmod(likely, quite)
acl(chartist, likely)
mark(top, to)
cop(top, be)
det(top, a)
xcomp(likely, top)
punct(warn, .)
advmod(characteristic, similarly)
punct(characteristic, ,)
case(end, at)
det(end, the)
amod(end, opposite)
obl(characteristic, end)
case(cycle, of)
det(cycle, the)
compound(cycle, market)
nmod(end, cycle)
punct(end, ,)
case(end, towards)
det(end, the)
nmod(end, end)
case(decline, of)
det(decline, a)
amod(decline, intermediate)
cc(major, or)
conj(intermediate, major)
nmod(end, decline)
punct(characteristic, ,)
advmod(form, usually)
mark(form, while)
det(bottom, the)
nsubj:pass(form, bottom)
aux(form, be)
aux:pass(form, be)
advcl(characteristic, form)
case(chart, on)
det(chart, the)
compound(chart, price)
obl(form, chart)
punct(characteristic, ,)
expl(characteristic, it)
cop(characteristic, be)
root(ROOT, characteristic)
mark(notice, that)
det(increase, a)
nsubj:pass(notice, increase)
aux:pass(notice, be)
csubj(characteristic, notice)
case(lot, in)
amod(lot, odd)
punct(lot, -)
obl(notice, lot)
advcl(notice, sell)
advmod(alerting, again)
advcl(sell, alerting)
det(chartist, the)
obj(alerting, chartist)
mark(become, that)
det(bottom, a)
nsubj(become, bottom)
aux(become, be)
acl(chartist, become)
det(likelihood, a)
amod(likelihood, greater)
xcomp(become, likelihood)
punct(characteristic, .)
advmod(one, thus)
punct(one, ,)
case(aggregate, in)
det(aggregate, the)
obl(one, aggregate)
punct(one, ,)
det(trader, the)
amod(lot, odd)
punct(lot, -)
compound(trader, lot)
nsubj(one, trader)
cop(one, be)
root(ROOT, one)
nsubj(buys, who)
acl:relcl(one, buys)
case(top, at)
det(top, the)
obl(buys, top)
cc(sell, and)
conj(buys, sell)
case(bottom, at)
det(bottom, the)
obl(sell, bottom)
punct(bottom, ,)
advmod(exception, notwithstanding)
amod(exception, occasional)
amod(exception, individual)
conj(bottom, exception)
punct(one, .)
mark(know, while)
nsubj:pass(know, it)
aux(know, have)
advmod(know, long)
aux:pass(know, be)
advcl(put, know)
case(general, in)
obl(know, general)
punct(put, ,)
mark(wrong, that)
punct(wrong, ``)
det(public, the)
nsubj(wrong, public)
cop(wrong, be)
advmod(wrong, always)
ccomp(know, wrong)
punct(wrong, '')
punct(put, ,)
det(use, the)
nsubj(put, use)
case(index, of)
amod(lot, odd)
punct(lot, -)
compound(index, lot)
nmod(use, index)
advmod(put, now)
root(ROOT, put)
det(adage, the)
obj(put, adage)
case(basis, on)
det(basis, a)
amod(basis, statistical)
obl(put, basis)
punct(put, .)
nsubj(wonder, one)
aux(wonder, might)
advmod(wonder, well)
root(ROOT, wonder)
advmod(wrong, why)
det(public, the)
punct(wrong, ``)
nsubj(wrong, public)
cop(wrong, be)
advmod(wrong, always)
ccomp(wonder, wrong)
punct(wrong, '')
cc(awkward, and)
det(question, the)
nsubj(awkward, question)
acl(question, raise)
cop(awkward, be)
advmod(as, about)
advmod(awkward, as)
conj(wonder, awkward)
case(one, as)
det(one, the)
obl(awkward, one)
advcl(awkward, concerned)
case(chicken, with)
det(chicken, the)
obl(concerned, chicken)
cc(egg, and)
det(egg, the)
conj(chicken, egg)
punct(wonder, . )
nsubj(come, which)
root(ROOT, come)
advmod(come, first)
punct(come, ?)
punct(come, ?)
cop(really, be)
nsubj(really, it)
root(ROOT, really)
mark(buys, that)
det(public, the)
punct(public, ``)
nsubj(buys, public)
punct(public, '')
ccomp(really, buys)
case(top, at)
det(top, the)
obl(buys, top)
punct(top, ,)
cc(top, and)
advmod(top, not)
mark(top, that)
det(market, the)
nsubj(top, market)
conj(buys, top)
compound:prt(top, out)
mark(buys, when)
det(public, the)
punct(public, ``)
nsubj(buys, public)
punct(buys, '')
advcl(top, buys)
punct(really, ?)
punct(really, ?)
cc(converse, and)
det(converse, the)
root(ROOT, converse)
case(bottom, at)
nmod(converse, bottom)
punct(converse, .)
aux(sell, do)
det(public, the)
punct(public, ``)
nsubj(sell, public)
punct(public, '')
advmod(sell, usually)
root(ROOT, sell)
case(bottom, at)
obl(sell, bottom)
punct(bottom, ,)
cc(bottom, or)
aux(bottom, do)
det(market, the)
nsubj(bottom, market)
advmod(bottom, usually)
conj(sell, bottom)
compound:prt(bottom, out)
mark(sell, when)
det(public, the)
punct(public, ``)
nsubj(sell, public)
punct(sell, '')
advcl(bottom, sell)
punct(sell, ?)
punct(sell, ?)
nsubj(use, we)
aux(use, have)
aux(use, be)
root(ROOT, use)
det(word, the)
obj(use, word)
punct(public, ``)
amod(word, public)
punct(public, '')
case(mark, in)
compound(mark, quotation)
obl(use, mark)
punct(use, ,)
nsubj(connotation, that)
parataxis(use, be)
punct(use, ,)
case(connotation, in)
nmod:poss(connotation, its)
amod(connotation, vernacular)
obl(use, connotation)
case(reference, with)
nmod(connotation, reference)
case(theory, to)
det(theory, the)
amod(lot, odd)
punct(lot, -)
compound(theory, lot)
compound(theory, index)
nmod(reference, theory)
punct(use, .)
advmod(have, obviously)
nsubj(have, someone)
root(ROOT, have)
mark(sell, to)
xcomp(have, sell)
case(someone, in)
fixed(in, order)
case(someone, for)
obl(sell, someone)
mark(buy, to)
acl(someone, buy)
punct(versa, ,)
cc(versa, and)
advmod(versa, vice)
conj(buy, versa)
punct(have, .)
cc(member, and)
mark(concerned, while)
advmod(concerned, all)
advcl(member, concerned)
cop(member, be)
root(ROOT, member)
case(public, of)
det(public, the)
amod(public, literal)
nmod(member, public)
punct(member, ,)
advmod(less, somewhat)
advmod(concerned, less)
fixed(less, than)
obl(less, all)
amod(member, concerned)
punct(concerned, ,)
mark(majority, although)
advmod(majority, still)
det(majority, a)
advcl(form, majority)
punct(form, ,)
advcl(concerned, form)
det(quotation, the)
obj(form, quotation)
acl(quotation, mark)
punct(public, ``)
xcomp(mark, public)
punct(public, '')
punct(public, .)
cc(leave, and)
det(public, the)
nsubj(leave, public)
case(public, minus)
det(public, the)
punct(public, ``)
nmod(public, public)
punct(public, '')
conj(form, leave)
det(element, the)
advmod(call, so)
punct(call, -)
amod(element, call)
punct(element, ``)
amod(element, sophisticated)
punct(element, '')
obj(leave, element)
punct(element, --)
det(element, the)
appos(element, element)
case(end, on)
det(end, the)
amod(end, other)
nmod(element, end)
case(transaction, of)
det(transaction, the)
punct(transaction, ``)
nmod:poss(transaction, public)
case(public, 's)
punct(transaction, '')
nmod(end, transaction)
punct(element, .)
det(element, this)
nsubj:pass(call, element)
aux:pass(call, be)
advmod(call, often)
root(ROOT, call)
punct(hand, ``)
amod(hand, strong)
xcomp(call, hand)
punct(hand, '')
punct(call, .)
amod(hand, strong)
nsubj(differ, hand)
parataxis(call, differ)
case(hand, from)
punct(hand, ``)
amod(hand, weak)
obl(differ, hand)
punct(hand, '')
mark(mover, in)
fixed(in, that)
nmod:poss(operation, they)
nsubj(mover, operation)
cop(mover, be)
det(mover, the)
amod(mover, primary)
advcl(differ, mover)
punct(call, .)
nsubj(initiate, they)
root(ROOT, initiate)
obj(initiate, campaign)
punct(initiate, ,)
advmod(speak, so)
mark(speak, to)
advcl(initiate, speak)
punct(initiate, ,)
advmod(diffuse, even)
mark(diffuse, if)
det(initiation, this)
nsubj:pass(diffuse, initiation)
aux:pass(diffuse, be)
advcl(initiate, diffuse)
case(they, among)
obl(diffuse, they)
punct(organized, ,)
cc(action, and)
nmod:poss(action, they)
amod(action, concerted)
nsubj(organized, action)
advmod(organized, only)
advmod(organized, psychologically)
conj(diffuse, organized)
punct(initiate, .)
amod(hand, strong)
nsubj(act, hand)
root(ROOT, act)
punct(act, ;)
punct(act, ;)
amod(hand, weak)
nsubj(react, hand)
parataxis(act, react)
punct(act, .)
amod(hand, strong)
nsubj(move, hand)
root(ROOT, move)
advmod(move, first)
punct(move, ;)
punct(move, ;)
amod(hand, weak)
nsubj(ask, hand)
parataxis(move, ask)
punct(move, ,)
nsubj(go, what)
aux(go, be)
root(ROOT, go)
obl(go, on)
punct(go, ?)
punct(go, ?)
mark(buy, when)
amod(hand, strong)
nsubj(buy, hand)
advcl(able, buy)
punct(able, ,)
nsubj(able, they)
cop(able, be)
root(ROOT, able)
mark(buy, to)
xcomp(able, buy)
obj(buy, more)
punct(do, ,)
cc(do, and)
nsubj(do, they)
conj(able, do)
obj(do, it)
advmod(face, even)
case(face, in)
det(face, the)
obl(do, face)
case(report, of)
amod(report, bearish)
compound(report, news)
nmod(face, report)
punct(able, .)
nsubj(able, they)
cop(able, be)
root(ROOT, able)
mark(sit, to)
xcomp(able, sit)
advmod(patiently, more)
advmod(sit, patiently)
case(what, with)
obl(sit, what)
nsubj(buy, they)
aux(buy, have)
acl:relcl(what, buy)
punct(able, .)
advcl(eager, needless)
mark(say, to)
csubj(needless, say)
punct(eager, ,)
amod(hand, strong)
nsubj(eager, hand)
cop(eager, be)
advmod(eager, not)
root(ROOT, eager)
mark(join, to)
aux:pass(join, be)
xcomp(eager, join)
case(hand, by)
amod(hand, weak)
obl(join, hand)
punct(increase, ,)
case(this, for)
obl(increase, this)
conj(eager, increase)
det(risk, the)
obj(increase, risk)
mark(have, that)
nsubj(have, they)
aux(have, will)
acl(risk, have)
mark(absorb, to)
xcomp(have, absorb)
obj(unload, what)
det(hand, these)
amod(hand, weak)
nsubj(unload, hand)
ccomp(absorb, unload)
case(way, on)
det(way, the)
obl(unload, way)
advmod(unload, up)
punct(unload, ,)
case(price, at)
amod(price, higher)
obl(unload, price)
punct(unload, ,)
case(phase, during)
det(phase, the)
compound(up, run)
punct(up, -)
compound(phase, up)
obl(unload, phase)
case(campaign, of)
det(campaign, the)
nmod(phase, campaign)
punct(eager, .)
amod(critic, Certain)
amod(critic, badly)
amod(critic, disillusion)
compound(critic, market)
nsubj(apt, critic)
cop(apt, be)
advmod(apt, often)
root(ROOT, apt)
mark(feel, to)
advcl(apt, feel)
mark(be, that)
expl(be, there)
ccomp(feel, be)
nsubj(be, something)
advmod(unfair, somehow)
amod(something, unfair)
punct(dirty, ,)
conj(unfair, dirty)
punct(criminal, ,)
cc(criminal, or)
advmod(criminal, even)
advmod(criminal, thoroughly)
conj(unfair, criminal)
case(interplay, about)
det(interplay, this)
obl(criminal, interplay)
case(force, of)
amod(force, competitive)
nmod(interplay, force)
punct(apt, .)
cc(imagine, but)
advmod(all, after)
obl(imagine, all)
punct(imagine, ,)
aux(imagine, can)
nsubj(imagine, anyone)
root(ROOT, imagine)
det(market, a)
obj(imagine, market)
advmod(true, wherein)
det(reverse, the)
nsubj(true, reverse)
case(thing, of)
det(thing, these)
nmod(reverse, thing)
cop(true, be)
acl:relcl(market, true)
punct(imagine, ?)
punct(imagine, ?)
root(ROOT, try)
mark(imagine, to)
xcomp(try, imagine)
det(market, a)
obj(imagine, market)
case(which, in)
obl(lose, which)
advmod(minority, only)
det(minority, a)
nsubj(lose, minority)
case(trader, of)
nmod(minority, trader)
aux(lose, would)
acl:relcl(market, lose)
punct(make, ,)
cc(make, and)
det(majority, the)
nsubj(make, majority)
aux(make, would)
conj(lose, make)
amod(profit, consistent)
obj(make, profit)
punct(try, .)
advmod(much, how)
advmod(take, much)
cc(take, and)
advmod(many, how)
amod(profit, many)
obj(take, profit)
aux(take, could)
det(majority, a)
nsubj(take, majority)
root(ROOT, take)
case(loss, out)
case(loss, of)
det(loss, the)
obl(take, loss)
case(few, of)
det(few, a)
nmod(loss, few)
punct(take, ?)
punct(take, ?)
advmod(take, moreover)
punct(put, ,)
det(taunt, the)
nsubj:pass(put, taunt)
case(echelon, concern)
det(echelon, the)
punct(echelon, ``)
amod(echelon, sophisticated)
punct(echelon, '')
nmod(taunt, echelon)
cc(erudition, and)
nmod:poss(erudition, its)
amod(erudition, allege)
conj(echelon, erudition)
aux:pass(put, be)
conj(take, put)
mark(test, to)
xcomp(put, test)
case(campaign, during)
det(campaign, every)
obl(test, campaign)
punct(accrue, ,)
cc(accrue, and)
conj(put, accrue)
advmod(result, only)
case(result, upon)
obl(accrue, result)
punct(accrue, ;)
punct(accrue, ;)
advmod(before, not)
advmod(accrue, before)
punct(put, .)
nsubj(happen, it)
advmod(happen, quite)
advmod(happen, often)
root(ROOT, happen)
mark(go, that)
nsubj(go, campaign)
ccomp(happen, go)
advmod(go, askew)
punct(go, ,)
advcl(go, result)
case(deterioration, in)
det(deterioration, a)
advmod(unflattering, most)
amod(deterioration, unflattering)
obl(result, deterioration)
case(hand, of)
amod(hand, strong)
nmod(deterioration, hand)
case(hand, into)
amod(hand, play)
punct(play, -)
compound(play, out)
nmod(deterioration, hand)
punct(result, ,)
advmod(emerge, just)
mark(emerge, as)
det(member, a)
nsubj(emerge, member)
case(public, of)
det(campaign, a)
amod(campaign, former)
nmod:poss(public, campaign)
case(campaign, 's)
punct(public, ``)
nmod(member, public)
punct(public, '')
aux(emerge, may)
advcl(go, emerge)
advmod(emerge, flatteringly)
punct(right, ``)
advmod(emerge, right)
punct(right, '')
det(time, the)
amod(time, next)
obl:tmod(emerge, time)
punct(time, .)
nsubj(fluctuate, Membership)
case(echelon, in)
det(echelon, the)
nmod(Membership, echelon)
advcl(emerge, fluctuate)
advmod(fluctuate, too)
punct(happen, .)
det(study, the)
nsubj(akin, study)
case(index, of)
amod(lot, odd)
punct(lot, -)
compound(index, lot)
nmod(study, index)
cop(akin, be)
advmod(akin, somehow)
root(ROOT, akin)
case(spectacle, to)
det(spectacle, the)
obl(akin, spectacle)
case(man, of)
det(man, a)
nmod(spectacle, man)
acl(man, try)
mark(outfox, to)
xcomp(try, outfox)
nmod:poss(shadow, he)
amod(shadow, own)
obj(outfox, shadow)
punct(akin, ,)
parataxis(akin, what)
mark(try, with)
det(observer, all)
nsubj(try, observer)
advcl(what, try)
mark(get, to)
xcomp(try, get)
case(side, on)
det(side, the)
obl(get, side)
case(few, of)
det(few, the)
punct(few, ``)
nmod(side, few)
punct(few, '')
case(time, at)
det(time, the)
amod(time, same)
obl(get, time)
punct(akin, .)
det(usefulness, the)
nsubj(decline, usefulness)
case(study, of)
det(study, this)
nmod(usefulness, study)
cc(analysis, and)
case(analysis, of)
compound(analysis, configuration)
conj(study, analysis)
advmod(decline, as)
fixed(as, well)
punct(decline, ,)
root(ROOT, decline)
case(proportion, in)
amod(proportion, direct)
obl(decline, proportion)
case(dissemination, to)
det(dissemination, the)
nmod(proportion, dissemination)
case(use, of)
nmod:poss(use, its)
nmod(dissemination, use)
punct(decline, .)
nsubj(have, it)
root(ROOT, have)
mark(virtue, to)
punct(have, ,)
case(virtue, by)
obl(have, virtue)
case(definition, of)
det(definition, the)
amod(definition, very)
compound(definition, dictionary)
nmod(virtue, definition)
case(word, of)
det(word, the)
nmod(definition, word)
punct(few, ``)
appos(word, few)
punct(few, '')
punct(persist, .)
compound(opposition, Diametric)
nsubj(persist, opposition)
aux(persist, must)
ccomp(have, persist)
case(course, as)
fixed(as, to)
det(course, the)
amod(course, future)
obl(persist, course)
case(price, of)
nmod(course, price)
punct(persist, ,)
mark(be, if)
expl(be, there)
advcl(persist, be)
mark(persist, to)
ccomp(be, persist)
det(market, a)
obj(persist, market)
case(all, at)
nmod(market, all)
punct(have, .)
cc(win, and)
det(few, the)
nsubj(win, few)
aux(win, must)
root(ROOT, win)
obj(win, what)
det(many, the)
nsubj(lose, many)
ccomp(win, lose)
punct(win, ,)
case(arrangement, for)
det(arrangement, the)
amod(arrangement, opposite)
obl(support, arrangement)
aux(support, would)
advmod(support, not)
conj(win, support)
obj(support, market)
mark(know, as)
nsubj(know, we)
advcl(support, know)
obj(know, they)
case(all, at)
obl(know, all)
punct(unimaginable, ,)
cc(unimaginable, and)
cop(unimaginable, be)
punct(unimaginable, ,)
case(fact, in)
obl(unimaginable, fact)
punct(unimaginable, ,)
conj(support, unimaginable)
punct(win, .)
expl(be, there)
discourse(be, need)
root(ROOT, be)
det(squeamishness, no)
nsubj(be, squeamishness)
mark(admit, about)
acl(squeamishness, admit)
obj(admit, this)
punct(be, .)
nsubj(doub, anyone)
advmod(doub, still)
root(ROOT, doub)
mark(way, that)
nsubj(way, this)
cop(way, be)
det(way, the)
amod(way, only)
ccomp(doub, way)
nsubj:pass(invite, market)
aux(invite, can)
aux:pass(invite, be)
aux:pass(invite, be)
acl:relcl(way, invite)
mark(try, to)
xcomp(invite, try)
mark(imagine, to)
xcomp(try, imagine)
det(market, a)
obj(imagine, market)
obj(win, wherein)
det(majority, the)
nsubj(win, majority)
advmod(win, consistently)
acl:relcl(market, win)
obj(lose, what)
det(minority, the)
nsubj(lose, minority)
ccomp(win, lose)
punct(doub, .)
nsubj:pass(quote, Mr.)
flat(Mr., John)
flat(Mr., Magee)
punct(Mr., ,)
nmod:poss(work, whose)
nsubj:pass(discuss, work)
aux(discuss, have)
aux:pass(discuss, be)
acl:relcl(Mr., discuss)
case(chapter, in)
det(chapter, this)
obl(discuss, chapter)
punct(quote, ,)
aux:pass(quote, be)
root(ROOT, quote)
case(profile, in)
det(profile, a)
compound(Yorker, New)
compound(profile, Yorker)
compound(profile, Magazine)
obl(quote, profile)
mark(say, as)
advcl(quote, say)
punct(quote, :)
punct(quote, ``)
advmod(have, of)
fixed(of, course)
punct(have, ,)
nsubj(have, you)
root(ROOT, have)
mark(remember, to)
xcomp(have, remember)
nsubj(thing, it)
cop(thing, be)
det(thing, a)
amod(thing, good)
ccomp(remember, thing)
case(we, for)
nmod(thing, we)
nmod(thing, chartist)
mark(be, that)
expl(be, there)
acl:relcl(thing, be)
advmod(be, not)
nsubj(be, more)
case(we, of)
obl(more, we)
punct(have, .)
mark(get, if)
nsubj(get, you)
advcl(begin, get)
advmod(many, too)
amod(people, many)
obj(get, people)
acl(people, invest)
case(method, by)
det(method, this)
obl(invest, method)
punct(begin, ,)
nmod:poss(operation, they)
nsubj(begin, operation)
aux(begin, would)
root(ROOT, begin)
mark(affect, to)
xcomp(begin, affect)
compound(price, stock)
obj(affect, price)
punct(throw, ,)
cc(throw, and)
advmod(throw, thus)
conj(begin, throw)
det(chart, the)
obj(throw, chart)
compound:prt(throw, off)
punct(begin, .)
det(method, the)
nsubj(become, method)
aux(become, would)
root(ROOT, become)
compound(defeat, self)
punct(defeat, -)
xcomp(become, defeat)
punct(defeat, '')
punct(help, .)
nmod:poss(study, Mr.)
flat(Mr., Alexander)
flat(Mr., H.)
flat(Mr., wheelan)
case(Mr., 's)
nsubj(help, study)
ccomp(become, help)
case(point, in)
obl(help, point)
cc(tell, and)
compound(Technique, Figure)
compound(tell, Technique)
conj(point, tell)
det(reader, the)
root(ROOT, reader)
punct(reader, :)
punct(reader, ``)
nsubj(assure, we)
root(ROOT, assure)
obj(assure, you)
mark(portion, that)
det(number, the)
amod(number, total)
nsubj(portion, number)
case(people, of)
nmod(number, people)
acl(people, use)
det(method, this)
obj(use, method)
case(analysis, of)
compound(analysis, market)
nmod(method, analysis)
cop(portion, be)
det(portion, a)
advmod(small, very)
amod(portion, small)
ccomp(assure, portion)
case(total, of)
det(total, the)
compound(total, sum)
nmod(portion, total)
case(those, of)
nmod(total, those)
acl(those, operate)
case(security, in)
det(security, the)
obl(operate, security)
cc(market, and)
compound(market, commodity)
conj(security, market)
punct(what, '')
punct(what, .)
appos(portion, what)
case(trader, with)
nmod(what, trader)
acl(trader, trade)
case(objective, for)
advmod(many, so)
amod(objective, many)
amod(objective, different)
obl(trade, objective)
punct(what, ,)
cc(what, and)
conj(objective, what)
mark(there, with)
advmod(what, there)
cop(theory, be)
advmod(many, so)
amod(theory, many)
amod(theory, unique)
cc(individualize, and)
conj(unique, individualize)
compound(theory, market)
nmod(what, theory)
cc(technique, and)
compound(technique, trading)
conj(theory, technique)
case(use, in)
nmod(theory, use)
punct(come, ,)
cc(come, and)
advmod(come, more)
advcl(hard, come)
case(use, into)
obl(come, use)
det:predet(time, all)
det(time, the)
obl:tmod(come, time)
punct(hard, ,)
expl(hard, it)
cop(hard, be)
parataxis(assure, hard)
mark(imagine, to)
csubj(hard, imagine)
advmod(acquire, how)
det(theory, any)
amod(theory, particular)
nsubj(acquire, theory)
cc(technique, or)
conj(theory, technique)
aux(acquire, could)
ccomp(imagine, acquire)
amod(fan, enough)
punct(fan, ``)
obj(acquire, fan)
punct(fan, '')
mark(invalidate, to)
advcl(acquire, invalidate)
obj(invalidate, itself)
punct(assure, .)
advmod(lead, nevertheless)
punct(lead, ,)
det(theory, all)
nsubj(lead, theory)
cc(technique, and)
conj(theory, technique)
root(ROOT, lead)
cc(one, but)
case(one, to)
conj(lead, one)
case(mode, of)
nummod(mode, two)
amod(mode, possible)
nmod(one, mode)
case(expression, of)
nmod(mode, expression)
punct(lead, ,)
mark(lead, if)
nsubj(lead, they)
advcl(lead, lead)
case(committment, to)
det(committment, a)
compound(committment, market)
obl(lead, committment)
case(all, at)
nmod(committment, all)
punct(lead, .)
case(analysis, in)
det(analysis, the)
amod(analysis, final)
obl(become, analysis)
punct(become, ,)
advmod(become, then)
punct(become, ,)
det(user, the)
nsubj(become, user)
root(ROOT, become)
cc:preconj(bull, either)
det(bull, a)
obj(become, bull)
cc(bear, or)
det(bear, a)
conj(bull, bear)
case(instance, in)
det(instance, a)
amod(instance, give)
nmod(bull, instance)
punct(amount, ,)
advmod(amount, notwithstanding)
det(amount, any)
appos(bull, amount)
case(forethought, of)
nmod(amount, forethought)
cc(calculation, and)
conj(forethought, calculation)
punct(amount, ,)
advmod(elaborate, however)
amod(amount, elaborate)
punct(elaborate, .)
advmod(oversubscribe, thus)
mark(oversubscribe, while)
nmod:poss(theory, he)
nsubj:pass(oversubscribe, theory)
cc(technique, or)
conj(theory, technique)
aux(oversubscribe, may)
advmod(oversubscribe, not)
aux:pass(oversubscribe, be)
advcl(commonplace, oversubscribe)
punct(commonplace, ,)
nsubj(commonplace, it)
cop(commonplace, be)
parataxis(bull, commonplace)
case(position, for)
amod(position, bullish)
cc(bearish, and)
conj(bullish, bearish)
obl(commonplace, position)
mark(become, to)
acl(position, become)
advmod(subscribe, temporarily)
advmod(subscribe, over-)
xcomp(become, subscribe)
punct(subscribe, .)
mark(profound, though)
det(method, the)
nsubj(profound, method)
case(decide, of)
nmod(method, decide)
aux(profound, may)
cop(profound, be)
advcl(subscribe, profound)
cc(diverse, and)
conj(profound, diverse)
punct(remain, ,)
det(conclusion, the)
amod(conclusion, possible)
nsubj(remain, conclusion)
conj(profound, remain)
cc(Chapter, but)
nummod(Chapter, two)
punct(Chapter, .)
nsubj(remain, Chapter)
nummod(Chapter, 6)
punct(method, ,)
amod(method, more)
nsubj(Chapter, method)
det(hoax, the)
appos(method, hoax)
det(purpose, the)
appos(hoax, purpose)
acl(purpose, set)
advmod(set, forth)
case(beginning, at)
det(beginning, the)
obl(set, beginning)
case(book, of)
det(book, this)
nmod(beginning, book)
aux(introduce, be)
advmod(introduce, first)
mark(introduce, to)
acl(method, introduce)
det(reader, the)
obj(introduce, reader)
case(knowledge, to)
det(knowledge, a)
amod(knowledge, general)
compound(knowledge, background)
nmod(reader, knowledge)
case(type, of)
det(type, the)
amod(type, various)
nmod(knowledge, type)
cc(capability, and)
conj(type, capability)
case(method, of)
det(method, the)
compound(method, forecast)
nmod(type, method)
advmod(use, already)
case(use, in)
nmod(type, use)
punct(type, ,)
mark(position, so)
fixed(so, that)
nsubj(position, he)
aux(position, might)
advmod(position, then)
cop(position, be)
case(position, in)
det(position, a)
advcl(introduce, position)
mark(evaluate, to)
acl(position, evaluate)
case(himself, for)
obl(evaluate, himself)
det(validity, the)
obj(evaluate, validity)
case(correlation, of)
det(correlation, the)
advmod(astonishing, rather)
amod(correlation, astonishing)
amod(correlation, empirical)
nmod(validity, correlation)
nsubj(be, that)
acl:relcl(correlation, be)
mark(follow, to)
xcomp(be, follow)
punct(appraise, ,)
cc(appraise, and)
mark(appraise, to)
conj(follow, appraise)
det(forecast, the)
obj(appraise, forecast)
mark(suggest, that)
nmod:poss(interpretation, its)
nsubj(suggest, interpretation)
acl(forecast, suggest)
case(future, for)
det(future, the)
obl(suggest, future)
case(price, of)
compound(price, farm)
nmod(future, price)
case(year, over)
det(year, the)
obl(ahead, year)
advmod(ahead, immediately)
advmod(suggest, ahead)
punct(become, .)
mark(assess, in)
advcl(prospect, assess)
det(outlook, the)
obj(assess, outlook)
case(rate, for)
compound(rate, interest)
nmod(outlook, rate)
case(1961, in)
obl(assess, 1961)
punct(prospect, ,)
det(question, the)
nsubj(prospect, question)
punct(prospect, ,)
case(always, as)
obl(prospect, always)
punct(prospect, ,)
cop(prospect, be)
det(prospect, the)
root(ROOT, prospect)
case(activity, for)
amod(activity, general)
compound(activity, business)
nmod(prospect, activity)
punct(prospect, .)
mark(happen, by)
cc(large, and)
conj(by, large)
punct(happen, ,)
nsubj(happen, what)
root(ROOT, happen)
case(business, to)
obl(happen, business)
mark(govern, as)
det(whole, a)
nsubj(govern, whole)
aux(govern, will)
advcl(happen, govern)
det(relationship, the)
obj(govern, relationship)
case(demand, between)
nmod(relationship, demand)
cc(condition, and)
compound(condition, supply)
conj(demand, condition)
case(market, in)
det(market, the)
amod(market, capital)
nmod(demand, market)
cc(determine, and)
aux(determine, will)
advmod(determine, thus)
conj(govern, determine)
compound(rate, interest)
obj(determine, rate)
punct(happen, . )
advmod(exert, moreover)
punct(exert, ,)
det(trend, the)
nsubj(exert, trend)
case(activity, of)
amod(activity, general)
compound(activity, business)
nmod(trend, activity)
case(1961, in)
nmod(activity, 1961)
aux(exert, will)
root(ROOT, exert)
det(influence, a)
amod(influence, decisive)
obj(exert, influence)
case(fiscal, on)
nmod(influence, fiscal)
punct(monetary, ,)
conj(fiscal, monetary)
punct(policy, ,)
cc(policy, and)
amod(policy, other)
amod(policy, federal)
nmod(influence, policy)
nsubj(affect, which)
acl:relcl(policy, affect)
compound(rate, interest)
obj(affect, rate)
punct(rate, .)
compound(sixty, Nineteen)
punct(sixty, -)
nsubj(year, sixty)
aux(year, have)
cop(year, be)
det(year, a)
amod(year, baffling)
appos(rate, year)
case(analyst, for)
nmod(year, analyst)
case(activity, of)
amod(activity, general)
compound(activity, business)
nmod(analyst, activity)
punct(year, .)
case(much, during)
obl(year, much)
case(year, of)
det(year, the)
nmod(much, year)
det(level, the)
amod(level, general)
nsubj(move, level)
case(activity, of)
compound(activity, business)
nmod(level, activity)
aux(move, have)
acl:relcl(year, move)
advmod(move, along)
case(plateau, on)
det(plateau, a)
amod(high, record)
punct(high, -)
amod(plateau, high)
obl(move, plateau)
punct(be, ,)
cc(be, but)
expl(be, there)
aux(be, have)
conj(move, be)
amod(sign, persistent)
nsubj(be, sign)
case(slack, of)
nmod(sign, slack)
case(economy, in)
det(economy, the)
nmod(slack, economy)
punct(exert, .)
det(tendency, the)
nsubj(become, tendency)
case(activity, for)
amod(activity, general)
compound(activity, business)
nmod(tendency, activity)
mark(soften, to)
acl(tendency, soften)
advmod(soften, somewhat)
aux(become, be)
root(ROOT, become)
advmod(evident, more)
xcomp(become, evident)
punct(become, .)
mark(modest, although)
det(pause, the)
nsubj(modest, pause)
case(advance, in)
det(advance, the)
nmod(pause, advance)
case(activity, of)
amod(activity, general)
compound(activity, business)
nmod(advance, activity)
det(year, this)
nsubj(modest, year)
aux(modest, have)
advmod(far, thus)
advmod(modest, far)
cop(modest, be)
advmod(modest, quite)
advcl(hard, modest)
punct(hard, ,)
expl(hard, it)
cop(hard, be)
root(ROOT, hard)
mark(escape, to)
csubj(hard, escape)
det(conclusion, the)
obj(escape, conclusion)
mark(continue, that)
det(process, the)
compound(process, softening)
nsubj(continue, process)
aux(continue, will)
acl(conclusion, continue)
case(quarter, into)
det(quarter, the)
amod(quarter, first)
obl(continue, quarter)
case(1961, of)
nmod(quarter, 1961)
cc(longer, and)
advmod(longer, possibly)
advmod(longer, somewhat)
conj(continue, longer)
punct(hard, .)
expl(difficult, it)
cop(difficult, be)
root(ROOT, difficult)
mark(see, to)
csubj(difficult, see)
det(source, any)
amod(source, powerful)
obj(see, source)
case(strength, of)
nmod(source, strength)
case(horizon, on)
det(horizon, the)
nmod(source, horizon)
case(time, at)
det(time, this)
obl(see, time)
nsubj(give, which)
aux(give, would)
acl:relcl(source, give)
det(economy, the)
iobj(give, economy)
det(thrust, a)
amod(thrust, new)
amod(thrust, upward)
obj(give, thrust)
punct(difficult, .)
det(rate, the)
nsubj(seem, rate)
case(spending, of)
compound(spending, plant)
cc(equipment, and)
conj(plant, equipment)
nmod(rate, spending)
case(business, by)
nmod(spending, business)
cc(industry, and)
conj(business, industry)
advmod(seem, now)
root(ROOT, seem)
mark(top, to)
aux(top, be)
xcomp(seem, top)
compound:prt(top, out)
cc(face, and)
conj(top, face)
det(decline, some)
obj(face, decline)
punct(seem, .)
case(cycle, in)
amod(cycle, earlier)
compound(cycle, business)
obl(experience, cycle)
punct(experience, ,)
mark(occur, when)
nsubj(occur, this)
advcl(experience, occur)
det(country, the)
obj(occur, country)
advmod(experience, usually)
root(ROOT, experience)
det(upturn, a)
amod(upturn, sharp)
obj(experience, upturn)
case(construction, in)
amod(construction, residential)
nmod(upturn, construction)
mark(become, as)
compound(financing, mortgage)
nsubj(become, financing)
advcl(experience, become)
xcomp(become, easier)
mark(obtain, to)
advcl(easier, obtain)
punct(experience, .)
case(time, at)
det(time, this)
obl(be, time)
punct(be, ,)
advmod(be, however)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, sign)
nsubj(increase, that)
acl:relcl(sign, increase)
obj(increase, availability)
case(credit, of)
compound(credit, mortgage)
nmod(availability, credit)
aux(act, will)
advmod(act, not)
ccomp(increase, act)
case(speed, with)
det(speed, the)
amod(speed, usual)
obl(act, speed)
mark(stimulate, to)
acl(speed, stimulate)
det(rise, a)
amod(rise, sharp)
obj(stimulate, rise)
case(construction, in)
amod(construction, residential)
nmod(rise, construction)
punct(be, .)
det(sign, these)
nsubj(inventory, sign)
cop(inventory, be)
det(inventory, the)
root(ROOT, inventory)
case(house, of)
amod(house, unsold)
nmod(inventory, house)
case(area, in)
det(area, some)
nmod(inventory, area)
case(country, of)
det(country, the)
nmod(area, country)
cc(rise, and)
det(rise, the)
amod(rise, moderate)
conj(area, rise)
case(rate, in)
compound(rate, vacancy)
nmod(rise, rate)
case(apartment, for)
nmod(rate, apartment)
punct(%, ()
nummod(%, 7.6)
appos(apartment, %)
case(September, in)
nmod(%, September)
punct(%, ))
punct(inventory, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(receive, hand)
punct(receive, ,)
case(vein, in)
det(vein, a)
advmod(favorable, more)
amod(vein, favorable)
obl(receive, vein)
punct(receive, ,)
amod(activity, general)
compound(activity, business)
nsubj(receive, activity)
aux(receive, should)
root(ROOT, receive)
det(stimulus, some)
obj(receive, stimulus)
mark(rise, from)
acl(stimulus, rise)
amod(spending, federal)
obj(rise, spending)
punct(run, ,)
cc(run, and)
det(reduction, the)
nsubj(run, reduction)
case(inventory, in)
compound(inventory, business)
nmod(reduction, inventory)
aux(run, have)
advmod(run, probably)
conj(receive, run)
det(part, a)
amod(part, good)
obj(run, part)
case(course, of)
nmod:poss(course, its)
nmod(part, course)
punct(receive, .)
det(increase, the)
nummod(%, 2)
compound(increase, %)
nsubj(encourage, increase)
case(sale, in)
compound(sale, retail)
nmod(increase, sale)
case(October, in)
nmod(increase, October)
case(high, to)
det(high, a)
nummod(month, 4)
punct(month, -)
compound(high, month)
nmod(October, high)
aux(encourage, be)
root(ROOT, encourage)
case(connection, in)
det(connection, this)
obl(encourage, connection)
cc(survey, as)
fixed(as, well)
fixed(as, as)
det(survey, the)
advmod(recent, most)
amod(survey, recent)
compound(survey, consumer)
conj(encourage, survey)
case(Board, by)
det(Board, the)
compound(Board, National)
compound(Board, Industrial)
compound(Board, Conference)
nmod(survey, Board)
punct(Board, ,)
nsubj(show, which)
acl:relcl(Board, show)
det(pickup, a)
amod(pickup, decide)
obj(show, pickup)
case(plan, in)
compound(spending, consumer)
compound(plan, spending)
nmod(pickup, plan)
punct(encourage, .)
det(pattern, the)
nsubj(softening, pattern)
case(activity, of)
amod(activity, general)
compound(activity, business)
nmod(pattern, activity)
nsubj(lie, which)
advmod(lie, probably)
acl:relcl(activity, lie)
advmod(lie, ahead)
case(we, of)
obl(ahead, we)
cop(softening, be)
det(softening, a)
advmod(moderate, further)
amod(softening, moderate)
root(ROOT, softening)
case(spring, through)
det(spring, the)
nmod(softening, spring)
case(1961, of)
nmod(spring, 1961)
mark(get, before)
det(rise, a)
amod(rise, new)
nsubj(get, rise)
case(activity, in)
amod(activity, economic)
nmod(rise, activity)
advcl(softening, get)
case(way, under)
obl(get, way)
punct(softening, .)
det(recovery, the)
nsubj:pass(spark, recovery)
aux(spark, will)
advmod(spark, probably)
aux:pass(spark, be)
root(ROOT, spark)
case(rate, by)
det(rate, a)
amod(rate, rise)
obl(spark, rate)
case(start, of)
compound(start, housing)
nmod(rate, start)
amod(spring, next)
obl:tmod(spark, spring)
case(response, in)
obl(spark, response)
case(credit, to)
advmod(available, more)
advmod(available, readily)
amod(credit, available)
compound(credit, mortgage)
nmod(response, credit)
punct(expansion, ,)
cc(expansion, as)
fixed(as, well)
fixed(as, as)
case(expansion, by)
det(expansion, a)
conj(credit, expansion)
case(spending, of)
compound(spending, government)
nmod(expansion, spending)
punct(spending, ,)
advmod(sustain, well)
amod(spending, sustain)
compound(spending, consumer)
conj(spending, spending)
punct(rebuild, ,)
cc(rebuild, and)
det(rebuild, some)
conj(spending, rebuild)
case(inventory, of)
compound(inventory, business)
nmod(rebuild, inventory)
punct(spark, .)
amod(pressure, slight)
amod(pressure, downward)
root(ROOT, pressure)
obj(suggest, what)
aux(suggest, do)
det(outlook, the)
amod(outlook, general)
compound(outlook, business)
nsubj(suggest, outlook)
acl:relcl(pressure, suggest)
case(trend, about)
det(trend, the)
obl(suggest, trend)
case(rate, of)
amod(term, long)
punct(term, -)
compound(rate, term)
nmod(trend, rate)
case(1961, in)
obl(suggest, 1961)
punct(suggest, ?)
punct(suggest, ?)
nsubj(suggest, it)
root(ROOT, suggest)
mark(lower, that)
case(month, during)
det(month, the)
amod(month, next)
amod(month, several)
obl(lower, month)
punct(lower, ,)
case(spring, through)
det(spring, the)
obl(lower, spring)
case(1961, of)
nmod(spring, 1961)
punct(lower, ,)
det(demand, the)
nsubj(lower, demand)
case(fund, for)
amod(term, long)
punct(term, -)
compound(fund, term)
compound(fund, capital)
nmod(demand, fund)
aux(lower, may)
cop(lower, be)
advmod(lower, moderately)
ccomp(suggest, lower)
cc(tend, and)
mark(tend, that)
compound(rate, interest)
nsubj(tend, rate)
aux(tend, may)
conj(lower, tend)
mark(move, to)
xcomp(tend, move)
det(little, a)
obl:npmod(lower, little)
xcomp(move, lower)
punct(move, ,)
advmod(rate, especially)
det(rate, the)
obj(move, rate)
case(bond, on)
amod(bond, federal)
punct(state, ,)
conj(federal, state)
punct(local, ,)
cc(local, and)
conj(federal, local)
nmod(rate, bond)
punct(those, ,)
cc(those, as)
fixed(as, well)
fixed(as, as)
conj(rate, those)
case(bond, on)
advmod(offer, publicly)
amod(bond, offer)
amod(bond, corporate)
nmod(those, bond)
punct(suggest, .)
advmod(seem, however)
punct(seem, ,)
mark(witness, as)
advcl(seem, witness)
case(calendar, by)
det(calendar, the)
amod(calendar, large)
amod(calendar, corporate)
compound(calendar, bond)
obl(witness, calendar)
case(present, at)
nmod(calendar, present)
punct(amount, ,)
cc(amount, as)
fixed(as, well)
fixed(as, as)
det(amount, the)
amod(amount, record)
conj(calendar, amount)
case(issue, of)
amod(bond, municipal)
compound(issue, bond)
nmod(amount, issue)
acl(issue, approve)
case(voter, by)
obl(approve, voter)
punct(seem, ,)
det(demand, the)
advmod(all, over)
punct(all, -)
det(demand, all)
nsubj(seem, demand)
case(fund, for)
amod(fund, capital)
nmod(demand, fund)
root(ROOT, seem)
xcomp(seem, likely)
mark(remain, to)
xcomp(likely, remain)
xcomp(remain, high)
punct(remain, ,)
mark(great, so)
fixed(so, that)
det(pressure, any)
amod(pressure, downward)
nsubj(great, pressure)
case(rate, on)
nmod(pressure, rate)
case(demand, from)
amod(demand, reduce)
nmod(rate, demand)
aux(great, should)
advmod(great, not)
cop(great, be)
advcl(remain, great)
punct(seem, .)
nsubj(seem, it)
root(ROOT, seem)
xcomp(seem, likely)
punct(seem, ,)
advmod(seem, moreover)
punct(seem, ,)
mark(move, that)
case(increase, with)
det(increase, a)
obl(move, increase)
case(rate, in)
det(rate, the)
nmod(increase, rate)
mark(save, of)
acl(rate, save)
case(institution, in)
compound(institution, mortgage)
compound(institution, lend)
obl(save, institution)
punct(rate, ,)
compound(rate, interest)
conj(institution, rate)
case(mortgage, on)
amod(mortgage, residential)
nmod(rate, mortgage)
aux(move, may)
ccomp(likely, move)
advmod(lower, somewhat)
xcomp(move, lower)
case(spring, through)
det(spring, the)
obl(lower, spring)
case(year, of)
amod(year, next)
nmod(spring, year)
punct(move, ,)
mark(occur, although)
det(ease, the)
amod(ease, increase)
nsubj(occur, ease)
case(lend, in)
amod(lend, residential)
compound(lend, mortgage)
nmod(ease, lend)
aux(occur, may)
advcl(move, occur)
advmod(occur, primarily)
case(term, in)
amod(term, other)
obl(occur, term)
case(rate, than)
compound(rate, interest)
nmod(term, rate)
punct(rate, ,)
advmod(downpayment, e.g.)
punct(downpayment, ,)
amod(downpayment, easier)
compound(term, downpayment)
cc(term, and)
conj(downpayment, amortization)
conj(rate, term)
punct(seem, .)
mark(follow, if)
det(trend, the)
nsubj(follow, trend)
case(activity, of)
amod(activity, general)
compound(activity, business)
nmod(trend, activity)
advcl(likely, follow)
det(pattern, the)
obj(follow, pattern)
xcomp(follow, suggest)
advmod(suggest, here)
punct(likely, ,)
nsubj(likely, we)
cop(likely, be)
root(ROOT, likely)
mark(see, to)
xcomp(likely, see)
amod(step, additional)
obj(see, step)
case(authority, by)
det(authority, the)
amod(Reserve, federal)
compound(authority, Reserve)
nmod(step, authority)
mark(ease, to)
advcl(see, ease)
det(availability, the)
obj(ease, availability)
case(credit, of)
nmod(availability, credit)
punct(likely, .)
advmod(possibility, certainly)
det(reduction, a)
amod(reduction, further)
nsubj(possibility, reduction)
case(rate, in)
det(rate, the)
compound(rate, discount)
nmod(reduction, rate)
aux(possibility, would)
cop(possibility, be)
det(possibility, a)
amod(possibility, strong)
root(ROOT, possibility)
punct(position, ,)
cc(position, as)
fixed(as, well)
fixed(as, as)
det(position, a)
amod(position, easier)
compound(position, reserve)
conj(possibility, position)
case(system, for)
det(system, the)
compound(system, banking)
nmod(position, system)
punct(possibility, .)
advmod(continue, however)
punct(continue, ,)
det(authority, the)
compound(authority, monetary)
nsubj(continue, authority)
aux(continue, will)
root(ROOT, continue)
mark(require, to)
aux:pass(require, be)
xcomp(continue, require)
mark(pay, to)
xcomp(require, pay)
obj(pay, attention)
case(consequence, to)
det(consequence, the)
obl(pay, consequence)
case(action, of)
nmod:poss(action, they)
nmod(consequence, action)
case(respect, with)
nmod(action, respect)
case(balance, to)
nmod:poss(balance, we)
amod(balance, international)
nmod(respect, balance)
case(position, of)
compound(position, payment)
nmod(balance, position)
cc(outflow, and)
det(outflow, the)
conj(balance, outflow)
case(gold, of)
nmod(outflow, gold)
punct(regard, ,)
cc(regard, as)
fixed(as, well)
fixed(as, as)
case(regard, with)
nmod(outflow, regard)
mark(avoid, to)
acl(regard, avoid)
det(creation, the)
obj(avoid, creation)
case(liquidity, of)
amod(liquidity, excessive)
nmod(creation, liquidity)
case(economy, in)
det(economy, the)
nmod(liquidity, economy)
punct(economy, ,)
nsubj(delay, which)
aux(delay, would)
acl:relcl(liquidity, delay)
det(effectiveness, the)
obj(delay, effectiveness)
case(measure, of)
compound(measure, monetary)
compound(measure, policy)
nmod(effectiveness, measure)
case(phase, in)
det(phase, the)
amod(phase, next)
compound(phase, expansion)
obl(delay, phase)
case(cycle, of)
det(cycle, the)
compound(cycle, business)
nmod(phase, cycle)
punct(continue, .)
amod(policy, open)
compound(policy, market)
nsubj(be, policy)
nummod(policy, one)
case(question, of)
det(question, the)
advmod(intrigue, most)
amod(question, intrigue)
nmod(one, question)
root(ROOT, be)
mark(spread, whether)
det(departure, the)
amod(departure, recent)
nsubj(spread, departure)
case(authority, of)
det(authority, the)
compound(Reserve, Federal)
compound(authority, Reserve)
nmod(departure, authority)
mark(confine, from)
acl(departure, confine)
nmod:poss(operation, they)
amod(operation, open)
compound(operation, market)
obj(confine, operation)
case(bill, to)
compound(bill, Treasury)
obl(confine, bill)
aux(spread, will)
ccomp(be, spread)
case(security, into)
amod(term, longer)
punct(term, -)
compound(security, term)
compound(security, government)
obl(spread, security)
case(month, in)
det(month, the)
amod(month, next)
amod(month, few)
obl(spread, month)
punct(be, .)
case(extent, to)
det(extent, the)
obl(conduct, extent)
mark(have, that)
det(administration, the)
amod(administration, new)
nsubj(have, administration)
acl(extent, have)
nmod:poss(wish, its)
obj(have, wish)
punct(conduct, ,)
det(Reserve, the)
compound(Reserve, Federal)
nsubj(conduct, Reserve)
aux(conduct, would)
root(ROOT, conduct)
nmod:poss(operation, its)
amod(operation, open)
compound(operation, market)
obj(conduct, operation)
case(range, throughout)
det(range, the)
amod(range, entire)
compound(range, maturity)
obl(conduct, range)
case(security, of)
compound(security, government)
nmod(range, security)
cc(seek, and)
advmod(seek, aggressively)
conj(conduct, seek)
mark(force, to)
xcomp(seek, force)
compound:prt(force, down)
amod(term, long)
punct(term, -)
compound(rate, term)
compound(rate, interest)
obj(force, rate)
punct(conduct, .)
det(principle, the)
nsubj(seem, principle)
case(bill, of)
punct(bill, ``)
nmod(principle, bill)
advmod(bill, only)
punct(bill, '')
punct(bill, ,)
cc(bill, or)
punct(bill, ``)
conj(bill, bill)
advmod(bill, preferably)
punct(bill, '')
punct(seem, ,)
root(ROOT, seem)
advmod(strongly, so)
advmod(accept, strongly)
xcomp(seem, accept)
case(Reserve, by)
det(Reserve, the)
compound(Reserve, Federal)
obl(accept, Reserve)
mark(difficult, that)
expl(difficult, it)
cop(difficult, be)
ccomp(seem, difficult)
mark(envision, to)
csubj(difficult, envision)
obj(envision, condition)
nsubj(persuade, which)
aux(persuade, would)
acl:relcl(condition, persuade)
det(authority, the)
obj(persuade, authority)
mark(depart, to)
xcomp(persuade, depart)
advmod(depart, radically)
case(it, from)
obl(depart, it)
mark(extend, by)
advcl(depart, extend)
nmod:poss(purchase, they)
amod(purchase, open)
compound(purchase, market)
obj(extend, purchase)
advmod(extend, regularly)
case(security, into)
amod(term, long)
punct(term, -)
compound(security, term)
compound(security, government)
obl(extend, security)
punct(seem, .)
advmod(act, however)
punct(act, ,)
case(extent, to)
det(extent, the)
obl(act, extent)
mark(conduct, that)
det(authority, the)
compound(authority, monetary)
nsubj(conduct, authority)
punct(authority, ,)
case(effort, in)
nmod:poss(effort, they)
obl(conduct, effort)
mark(ease, to)
acl(effort, ease)
obj(ease, credit)
case(month, in)
det(month, the)
amod(month, next)
amod(month, several)
obl(ease, month)
punct(conduct, ,)
acl(extent, conduct)
nmod:poss(operation, they)
amod(operation, open)
compound(operation, market)
obj(conduct, operation)
case(bond, in)
advmod(term, longer)
punct(term, -)
compound(bond, term)
compound(bond, government)
nmod(operation, bond)
punct(act, ,)
nsubj(act, they)
aux(act, will)
advmod(act, certainly)
root(ROOT, act)
mark(accentuate, to)
xcomp(act, accentuate)
det(tendency, any)
obj(accentuate, tendency)
case(rate, for)
amod(term, long)
punct(term, -)
compound(rate, term)
compound(rate, interest)
nmod(tendency, rate)
mark(ease, to)
advcl(accentuate, ease)
case(result, as)
det(result, a)
obl(ease, result)
case(force, of)
compound(force, market)
nmod(result, force)
punct(act, .)
case(end, by)
det(end, the)
obl(begin, end)
case(spring, of)
det(spring, the)
nmod(end, spring)
case(1961, of)
nmod(spring, 1961)
punct(assume, ,)
advcl(begin, assume)
mark(get, that)
det(recovery, a)
amod(recovery, general)
compound(recovery, business)
nsubj(get, recovery)
ccomp(assume, get)
case(way, under)
obl(get, way)
punct(begin, ,)
compound(rate, interest)
nsubj(begin, rate)
aux(begin, should)
root(ROOT, begin)
mark(edge, to)
xcomp(begin, edge)
advmod(edge, upward)
advmod(edge, again)
punct(edge, ,)
case(vigor, depend)
case(vigor, upon)
det(vigor, the)
obl(edge, vigor)
case(recovery, of)
det(recovery, the)
nmod(vigor, recovery)
cc(determination, and)
det(determination, the)
conj(recovery, determination)
case(which, with)
obl(move, which)
det(authority, the)
compound(authority, monetary)
nsubj(move, authority)
acl:relcl(determination, move)
mark(restrain, to)
xcomp(move, restrain)
compound(availability, credit)
obj(restrain, availability)
punct(begin, .)
nmod:poss(guess, my)
nsubj(be, guess)
aux(be, would)
root(ROOT, be)
mark(decline, that)
compound(rate, interest)
nsubj(decline, rate)
aux(decline, will)
ccomp(be, decline)
advmod(decline, moderately)
case(spring, into)
det(spring, the)
obl(decline, spring)
case(1961, of)
nmod(spring, 1961)
cc(turn, and)
case(half, during)
det(half, the)
amod(half, second)
obl(turn, half)
case(year, of)
det(year, the)
nmod(half, year)
aux(turn, will)
conj(decline, turn)
compound:prt(turn, up)
advmod(turn, gradually)
mark(recover, to)
advcl(turn, recover)
det(ground, the)
obj(recover, ground)
acl(ground, lose)
case(downturn, during)
det(downturn, the)
obl(lose, downturn)
punct(be, .)
expl(pertinent, it)
cop(pertinent, be)
root(ROOT, pertinent)
mark(ask, to)
csubj(pertinent, ask)
det(question, the)
obj(ask, question)
punct(pertinent, :)
root(ROOT, have)
det(upsw, the)
amod(upsw, long)
obj(have, upsw)
case(rate, of)
compound(rate, interest)
nmod(upsw, rate)
case(year, during)
det(year, the)
amod(year, past)
nummod(year, 15)
obl(run, year)
advmod(run, just)
advmod(run, about)
parataxis(have, run)
nmod:poss(course, its)
obj(run, course)
punct(enter, ,)
cc(enter, and)
aux(enter, be)
nsubj(enter, we)
advmod(enter, now)
conj(run, enter)
det(period, a)
obj(enter, period)
case(which, in)
obl(produce, which)
det(force, both)
amod(force, capital)
compound(force, market)
nsubj(produce, force)
cc(policy, and)
amod(policy, federal)
conj(force, policy)
aux(produce, will)
acl:relcl(period, produce)
det(decline, a)
amod(decline, prolong)
obj(produce, decline)
case(rate, of)
compound(rate, interest)
nmod(decline, rate)
punct(have, ?)
punct(have, ?)
nmod:poss(answer, my)
nsubj(negative, answer)
cop(negative, be)
case(negative, in)
det(negative, the)
root(ROOT, negative)
mark(believe, because)
nsubj(believe, I)
advcl(negative, believe)
mark(continue, that)
amod(demand, total)
amod(demand, capital)
nsubj(continue, demand)
case(sixty, during)
det(sixty, the)
nmod(demand, sixty)
aux(continue, will)
ccomp(believe, continue)
mark(press, to)
xcomp(continue, press)
case(supplies, against)
amod(supplies, available)
obl(press, supplies)
punct(tend, ,)
cc(tend, and)
compound(rate, interest)
nsubj(tend, rate)
aux(tend, will)
advmod(tend, generally)
conj(continue, tend)
mark(firm, to)
cop(firm, be)
xcomp(tend, firm)
case(level, at)
amod(level, high)
nmod(firm, level)
punct(negative, .)
nummod(force, five)
amod(force, basic)
nsubj:pass(base, force)
det(view, this)
nsubj:pass(base, view)
aux:pass(base, be)
root(ROOT, base)
case(force, upon)
amod(force, several)
amod(force, basic)
amod(force, economic)
obl(base, force)
obj(believe, which)
nsubj(believe, I)
acl:relcl(force, believe)
aux(operate, will)
aux(operate, be)
ccomp(believe, operate)
case(sixty, in)
det(sixty, the)
obl(operate, sixty)
punct(operate, ,)
mark(follow, as)
advcl(operate, follow)
punct(follow, :)
punct(1, ()
nummod(confirm, 1)
punct(1, ))
amod(event, recent)
nsubj(confirm, event)
case(Assembly, in)
det(Assembly, the)
compound(Assembly, General)
nmod(event, Assembly)
case(Nations, of)
det(Nations, the)
compound(Nations, United)
nmod(Assembly, Nations)
ccomp(follow, confirm)
mark(remain, that)
det(war, the)
amod(war, cold)
nsubj(remain, war)
aux(remain, will)
ccomp(confirm, remain)
case(we, with)
obl(remain, we)
punct(intensify, ,)
cc(intensify, and)
advmod(intensify, probably)
conj(remain, intensify)
punct(intensify, ,)
case(future, for)
det(future, the)
amod(future, foreseeable)
obl(intensify, future)
punct(confirm, .)
nsubj(make, this)
root(ROOT, make)
expl(make, it)
xcomp(make, certain)
mark(likely, that)
amod(expenditure, federal)
nsubj(likely, expenditure)
case(preparedness, for)
amod(preparedness, military)
nmod(expenditure, preparedness)
cc(aid, and)
amod(aid, foreign)
amod(aid, economic)
conj(preparedness, aid)
cop(likely, be)
ccomp(certain, likely)
mark(rise, to)
xcomp(likely, rise)
advmod(rise, further)
case(year, in)
det(year, the)
amod(year, next)
amod(year, several)
obl(rise, year)
punct(make, .)
nsubj(begin, we)
aux(begin, be)
advmod(begin, just)
root(ROOT, begin)
det(task, the)
obj(begin, task)
mark(try, of)
acl(task, try)
mark(win, to)
xcomp(try, win)
cc(maintain, or)
conj(win, maintain)
det(friendship, the)
obj(win, friendship)
case(nation, of)
det(nation, the)
amod(nation, new)
amod(nation, african)
nmod(friendship, nation)
case(competition, against)
det(competition, the)
amod(competition, ruthless)
nmod(friendship, competition)
case(bloc, of)
det(bloc, the)
compound(bloc, Communist)
nmod(competition, bloc)
punct(begin, .)
nmod:poss(effort, we)
nsubj(bound, effort)
mark(overcome, to)
acl(effort, overcome)
det(lead, the)
obj(overcome, lead)
case(Russians, of)
det(Russians, the)
nmod(lead, Russians)
case(space, in)
nmod(Russians, space)
cop(bound, be)
root(ROOT, bound)
mark(mean, to)
advcl(bound, mean)
amod(spending, accelerate)
amod(spending, federal)
obj(mean, spending)
punct(bound, . )
advmod(likely, moreover)
punct(likely, ,)
expl(likely, it)
cop(likely, be)
root(ROOT, likely)
mark(aim, that)
amod(policy, federal)
nsubj(aim, policy)
ccomp(likely, aim)
mark(stimulate, at)
advcl(aim, stimulate)
det(rate, a)
amod(rate, faster)
obj(stimulate, rate)
case(growth, of)
amod(growth, economic)
nmod(rate, growth)
case(country, of)
det(country, the)
nmod(growth, country)
punct(keep, ,)
mark(keep, to)
advcl(stimulate, keep)
advmod(keep, ahead)
case(country, of)
det(country, the)
amod(country, communist)
obl(ahead, country)
cc(demonstrate, and)
mark(demonstrate, to)
conj(keep, demonstrate)
mark(better, that)
nmod:poss(system, we)
amod(system, free)
amod(system, economic)
nsubj(better, system)
cop(better, be)
ccomp(demonstrate, better)
case(theirs, than)
obl(better, theirs)
punct(lead, ,)
aux(lead, will)
ccomp(demonstrate, lead)
case(spending, to)
amod(spending, rise)
amod(spending, federal)
obl(lead, spending)
case(area, in)
amod(area, certain)
nmod(spending, area)
case(education, such)
fixed(such, as)
nmod(spending, education)
punct(housing, ,)
conj(education, housing)
punct(aid, ,)
amod(aid, medical)
conj(education, aid)
punct(like, ,)
cc(like, and)
det(like, the)
conj(education, like)
punct(likely, .)
expl(be, there)
root(ROOT, be)
amod(danger, serious)
nsubj(be, danger)
acl(danger, involve)
case(trend, in)
det(trend, this)
obl(involve, trend)
mark(rise, toward)
advcl(involve, rise)
amod(expenditure, federal)
obj(rise, expenditure)
punct(expenditure, ,)
case(which, of)
obl(take, which)
nsubj(take, I)
acl:relcl(expenditure, take)
det(view, a)
amod(view, dim)
obj(take, view)
punct(seem, ,)
cc(seem, but)
nsubj(seem, it)
conj(be, seem)
advmod(likely, very)
xcomp(seem, likely)
mark(occur, to)
xcomp(likely, occur)
obj(occur, . )
punct(2, ()
nummod(have, 2)
punct(2, ))
case(sixty, during)
det(sixty, the)
obl(have, sixty)
nsubj(have, we)
advcl(occur, have)
det(prospect, the)
obj(have, prospect)
case(step, of)
det(step, a)
amod(step, significant)
nmod(prospect, step)
nmod(prospect, up)
case(rate, in)
det(rate, the)
nmod(prospect, rate)
case(formation, of)
compound(formation, household)
nmod(rate, formation)
punct(formation, ,)
nsubj(contribute, which)
aux(contribute, should)
acl:relcl(formation, contribute)
case(volume, to)
det(volume, a)
amod(volume, rise)
obl(contribute, volume)
case(expenditure, of)
compound(expenditure, consumer)
nmod(volume, expenditure)
cc(building, and)
compound(building, home)
conj(expenditure, building)
punct(volume, .)
case(projection, accord)
fixed(accord, to)
det(projection, the)
amod(projection, latest)
nmod(volume, projection)
case(Bureau, of)
det(Bureau, the)
nmod(projection, Bureau)
case(Census, of)
det(Census, the)
nmod(Bureau, Census)
punct(increase, ,)
det(rate, the)
amod(rate, annual)
nsubj(increase, rate)
case(formation, of)
compound(formation, household)
nmod(rate, formation)
aux(increase, will)
acl:relcl(projection, increase)
case(year, for)
det(year, the)
amod(year, next)
nummod(year, 20)
obl(increase, year)
punct(be, .)
case(assumption, under)
det(assumption, the)
advmod(favorable, most)
amod(assumption, favorable)
obl(project, assumption)
case(increase, for)
nmod(assumption, increase)
punct(project, ,)
det(Bureau, the)
nsubj(project, Bureau)
case(Census, of)
det(Census, the)
nmod(Bureau, Census)
root(ROOT, project)
mark(rise, that)
det(rate, the)
amod(rate, annual)
nsubj(rise, rate)
case(formation, of)
compound(formation, household)
nmod(rate, formation)
aux(rise, will)
ccomp(project, rise)
case(883,000, from)
advmod(883,000, about)
obl(rise, 883,000)
case(year, in)
det(year, the)
amod(year, last)
nummod(year, two)
obl(rise, year)
case(fifty, of)
det(fifty, the)
nmod(year, fifty)
case(rate, to)
det(rate, a)
amod(rate, annual)
nmod(year, rate)
case(1,018,000, of)
advmod(1,018,000, about)
nmod(rate, 1,018,000)
case(year, in)
det(year, the)
amod(year, first)
nummod(year, five)
nmod(rate, year)
case(sixty, of)
det(sixty, the)
nmod(year, sixty)
punct(rate, ,)
cc(rate, and)
case(rate, to)
det(rate, a)
advmod(higher, slightly)
amod(rate, higher)
amod(rate, annual)
obl(show, rate)
case(1,083,000, of)
nmod(rate, 1,083,000)
case(half, in)
det(half, the)
amod(half, second)
nmod(rate, half)
case(decade, of)
det(decade, the)
nmod(half, decade)
punct(show, .)
case(seventy, during)
det(seventy, the)
obl(show, seventy)
det(projection, the)
nsubj(show, projection)
parataxis(project, show)
det(rise, a)
advmod(pronounce, more)
amod(rise, pronounce)
obj(show, rise)
case(rate, to)
det(rate, a)
amod(rate, annual)
nmod(rise, rate)
case(1,338,000, of)
nmod(rate, 1,338,000)
case(half, in)
det(half, the)
amod(half, second)
nmod(rate, half)
case(decade, of)
det(decade, that)
nmod(half, decade)
punct(rise, .)
advmod(enhance, accordingly)
punct(enhance, ,)
det(market, the)
amod(market, expand)
nsubj(enhance, market)
case(goods, for)
compound(goods, consumer)
nmod(market, goods)
cc(housing, and)
conj(goods, housing)
acl(market, occasion)
case(rate, by)
det(rate, the)
amod(rate, higher)
obl(occasion, rate)
case(formation, of)
compound(formation, household)
nmod(rate, formation)
aux(enhance, should)
conj(show, enhance)
det(prospect, the)
amod(prospect, general)
amod(prospect, economic)
obj(enhance, prospect)
case(sixty, of)
det(sixty, the)
nmod(prospect, sixty)
punct(project, .)
advmod(exaggerate, however)
punct(exaggerate, ,)
det(impact, the)
nsubj:pass(exaggerate, impact)
case(rate, of)
det(rate, a)
amod(rate, rise)
nmod(impact, rate)
case(formation, of)
compound(formation, household)
nmod(rate, formation)
det(decade, this)
nmod:tmod(rate, decade)
aux(exaggerate, should)
advmod(exaggerate, not)
aux:pass(exaggerate, be)
root(ROOT, exaggerate)
punct(exaggerate, .)
det(rate, the)
amod(rate, average)
amod(rate, annual)
nsubj(rate, rate)
case(1,083,000, of)
nmod(rate, 1,083,000)
case(half, in)
det(half, the)
amod(half, second)
nmod(rate, half)
case(sixty, of)
det(sixty, the)
nmod(half, sixty)
cop(rate, be)
advmod(rate, still)
advmod(rate, considerably)
case(rate, below)
det(rate, the)
amod(rate, annual)
root(ROOT, rate)
case(1,525,000, of)
nmod(rate, 1,525,000)
case(period, in)
det(period, the)
nummod(year, three)
punct(year, -)
compound(period, year)
nmod(rate, period)
case(April, from)
nmod(period, April)
nummod(April, 1947)
case(March, to)
nmod(April, March)
nummod(March, 1950)
punct(March, . )
punct(3, ()
nummod(expansion, 3)
punct(3, ))
case(expansion, with)
det(expansion, the)
nmod(period, expansion)
case(formation, of)
compound(formation, family)
nmod(expansion, formation)
case(sixty, in)
det(sixty, the)
nmod(formation, sixty)
punct(rise, ,)
det(rise, a)
amod(rise, continue)
amod(rise, substantial)
conj(expansion, rise)
case(expenditure, in)
nmod(rise, expenditure)
case(unit, by)
compound(unit, state)
cc(local, and)
conj(state, local)
compound(unit, government)
nsubj(seem, unit)
acl:relcl(rise, seem)
mark(indicate, to)
aux:pass(indicate, be)
xcomp(seem, indicate)
punct(seem, .)
nsubj(area, this)
cop(area, be)
det(area, a)
root(ROOT, area)
case(which, in)
obl(be, which)
expl(be, there)
acl:relcl(area, be)
advmod(be, still)
det(backlog, a)
amod(backlog, large)
nsubj(be, backlog)
case(demand, of)
nmod(backlog, demand)
punct(backlog, .)
compound(expenditure, state)
cc(local, and)
conj(state, local)
nsubj(increase, expenditure)
punct(term, ()
case(term, in)
amod(term, real)
nmod(expenditure, term)
punct(term, ))
conj(be, increase)
advmod(increase, persistently)
case($, from)
obl(increase, $)
nummod($, 26.5)
case(billion, -)
nmod(26.5, billion)
case(1949, in)
nmod($, 1949)
case($, to)
nmod($, $)
nummod($, 44.3)
case(billion, -)
nmod(44.3, billion)
case(1959, in)
nmod($, 1959)
punct(surprising, ,)
cc(surprising, and)
nsubj(surprising, it)
aux(surprising, would)
advmod(surprising, not)
cop(surprising, be)
conj(increase, surprising)
mark(show, if)
nsubj(show, they)
advcl(surprising, show)
det(increase, a)
amod(increase, comparable)
obj(show, increase)
case(decade, in)
det(decade, this)
nmod(increase, decade)
punct(increase, ,)
nsubj(carry, which)
aux(carry, would)
acl:relcl(increase, carry)
obj(carry, they)
case(neighborhood, to)
det(neighborhood, the)
obl(carry, neighborhood)
case($, of)
nmod(neighborhood, $)
compound($, 75)
case(billion, -)
nmod($, billion)
case(1970, by)
obl(carry, 1970)
punct(area, .)
advmod(seem, here)
aux(force, would)
cop(force, be)
det(force, a)
amod(force, powerful)
nsubj(seem, force)
mark(raise, for)
acl(force, raise)
compound(activity, business)
obj(raise, activity)
obj(raise, . )
punct(4, ()
nummod(seem, 4)
punct(4, ))
expl(seem, it)
root(ROOT, seem)
xcomp(seem, likely)
mark(continue, that)
case(force, with)
det(force, the)
nummod(force, three)
amod(force, precede)
obl(continue, force)
case(play, at)
nmod(force, play)
punct(continue, ,)
det(rate, the)
nsubj(continue, rate)
case(business, of)
nmod(rate, business)
cc(expenditure, and)
amod(plant, industrial)
compound(expenditure, plant)
cc(equipment, and)
conj(plant, equipment)
nmod(rate, expenditure)
aux(continue, should)
ccomp(likely, continue)
mark(move, to)
xcomp(continue, move)
advmod(move, upward)
case(level, from)
det(level, the)
obl(move, level)
case(fifty, of)
det(fifty, the)
nmod(level, fifty)
punct(seem, .)
advcl(rise, Spurred)
case(competition, by)
amod(competition, keen)
obl(Spurred, competition)
case(system, in)
nmod:poss(system, we)
amod(system, industrial)
nmod(competition, system)
punct(increase, ,)
cc(increase, and)
advmod(increase, still)
amod(increase, further)
conj(competition, increase)
case(fund, in)
det(fund, the)
nmod(increase, fund)
acl(fund, devote)
case(research, to)
amod(research, industrial)
obl(devote, research)
punct(expenditure, ,)
compound(expenditure, plant)
cc(equipment, and)
conj(plant, equipment)
conj(research, expenditure)
case(business, by)
nmod(expenditure, business)
cc(industry, and)
conj(business, industry)
aux(rise, should)
ccomp(suspect, rise)
case(. , during)
det(. , the)
compound(. , decade)
obl(rise, . )
punct(5, ()
nummod(rise, 5)
punct(5, ))
case(vein, in)
det(vein, a)
advmod(pessimistic, more)
amod(vein, pessimistic)
nmod(. , vein)
case(outlook, about)
det(outlook, the)
amod(outlook, economic)
nmod(vein, outlook)
punct(suspect, ,)
nsubj(suspect, I)
root(ROOT, suspect)
mark(process, that)
det(reservoir, the)
nsubj(process, reservoir)
case(demand, of)
nmod(reservoir, demand)
case(goods, for)
compound(goods, consumer)
nmod(demand, goods)
cc(housing, and)
conj(goods, housing)
nsubj:pass(dam, which)
aux:pass(dam, be)
acl:relcl(reservoir, dam)
punct(up, -)
compound:prt(dam, up)
case(Thirties, during)
det(Thirties, the)
obl(dam, Thirties)
cc(War, and)
compound(War, World)
conj(Thirties, War)
nummod(War, 2)
punct(process, ,)
cop(process, be)
advmod(process, finally)
case(process, in)
det(process, the)
ccomp(suspect, process)
mark(run, of)
advcl(process, run)
xcomp(run, dry)
punct(suspect, .)
expl(be, there)
root(ROOT, be)
det(evidence, some)
amod(cut, clear)
punct(cut, -)
amod(evidence, cut)
nsubj(be, evidence)
case(this, of)
nmod(evidence, this)
punct(be, .)
case(example, for)
obl(demand, example)
punct(demand, ,)
det(demand, the)
amod(demand, huge)
amod(demand, postwar)
nsubj(be, demand)
case(part, on)
det(part, the)
nmod(demand, part)
case(veterans, of)
nmod(part, veterans)
mark(seem, for)
nsubj(seem, housing)
case(program, under)
det(program, the)
compound(program, VA)
compound(loan, home)
compound(guaranty, loan)
compound(program, guaranty)
nmod(housing, program)
acl:relcl(demand, seem)
mark(exhaust, to)
aux(exhaust, have)
advmod(exhaust, largely)
xcomp(seem, exhaust)
obj(exhaust, itself)
punct(be, .)
advmod(signal, indeed)
punct(signal, ,)
det(failure, the)
nsubj(signal, failure)
case(building, of)
compound(building, home)
punct(building, -)
nmod(failure, building)
case(whole, as)
det(whole, a)
nmod(failure, whole)
mark(respond, to)
acl(whole, respond)
det(year, this)
obl:tmod(respond, year)
case(availability, to)
advmod(greater, somewhat)
amod(availability, greater)
obl(respond, availability)
case(financing, of)
compound(financing, mortgage)
nmod(availability, financing)
punct(report, ,)
cc(report, and)
det(report, the)
amod(report, increase)
conj(availability, report)
case(pocket, of)
nmod(report, pocket)
case(home, of)
amod(home, unsold)
nmod(pocket, home)
cc(rate, and)
amod(rate, rise)
compound(rate, vacancy)
conj(pocket, rate)
case(building, in)
compound(building, apartment)
nmod(rate, building)
punct(signal, ,)
aux(signal, may)
advmod(signal, also)
root(ROOT, signal)
case(part, in)
obl(signal, part)
mark(reach, that)
det(day, the)
amod(day, lush)
nsubj(reach, day)
case(demand, of)
amod(demand, big)
compound(demand, backlog)
nmod(day, demand)
case(housing, for)
nmod(demand, housing)
aux(reach, be)
acl(part, reach)
det(end, a)
obj(reach, end)
punct(signal, .)
case(way, in)
det(way, a)
obl(witness, way)
punct(witness, ,)
nsubj(witness, we)
aux(witness, may)
aux(witness, be)
root(ROOT, witness)
det(thing, the)
amod(thing, same)
obj(witness, thing)
case(sale, in)
det(sale, the)
obl(witness, sale)
case(automobile, of)
nmod(sale, automobile)
obl:tmod(witness, today)
mark(willing, as)
det(public, the)
nsubj(willing, public)
advmod(longer, no)
advmod(willing, longer)
cop(willing, be)
advcl(witness, willing)
mark(purchase, to)
xcomp(willing, purchase)
det(car, any)
obj(purchase, car)
xcomp(purchase, come)
case(market, on)
det(market, the)
obl(come, market)
cc(insistent, but)
cop(insistent, be)
advmod(insistent, more)
conj(willing, insistent)
case(car, on)
amod(car, compact)
obl(insistent, car)
amod(car, free)
case(frill, of)
det(frill, the)
obl(free, frill)
nsubj:pass(accept, which)
aux:pass(accept, be)
acl:relcl(frill, accept)
case(fifty, in)
det(fifty, the)
obl(accept, fifty)
punct(witness, .)
det(backlog, the)
amod(backlog, huge)
root(ROOT, backlog)
case(demand, of)
nmod(backlog, demand)
nsubj(evident, which)
cop(evident, be)
acl:relcl(demand, evident)
case(decade, in)
det(decade, the)
amod(decade, first)
obl(evident, decade)
cc(half, and)
det(half, a)
conj(decade, half)
mark(feed, after)
det(War, the)
nsubj:pass(feed, War)
aux:pass(feed, be)
advcl(evident, feed)
case(asset, by)
compound(asset, liquid)
obl(feed, asset)
acl(asset, accumulate)
case(public, by)
det(public, the)
obl(accumulate, public)
case(War, during)
det(War, the)
obl(accumulate, War)
punct(so, ,)
cc(so, and)
advmod(more, even)
advmod(so, more)
advmod(credit, so)
case(credit, by)
det(credit, the)
amod(credit, easier)
cc(easier, and)
conj(easier, easier)
obl(accumulate, credit)
case(field, in)
det(field, the)
compound(loan, consumer)
compound(field, loan)
cc(loan, and)
compound(loan, home)
compound(field, loan)
nmod(credit, field)
punct(backlog, .)
det(public, the)
amod(public, consume)
nsubj(use, public)
aux(use, have)
root(ROOT, use)
compound:prt(use, up)
det(part, a)
amod(part, good)
obj(use, part)
case(asset, of)
det(asset, these)
compound(asset, liquid)
nmod(part, asset)
punct(drain, ,)
cc(drain, or)
nsubj:pass(drain, they)
aux(drain, have)
aux:pass(drain, be)
conj(use, drain)
case(level, by)
det(level, the)
amod(level, rise)
compound(level, price)
obl(drain, level)
punct(get, ,)
cc(get, and)
nsubj(get, we)
aux(get, have)
advmod(get, apparently)
conj(use, get)
case(end, to)
det(end, the)
obl(get, end)
case(line, of)
det(line, the)
nmod(end, line)
mark(make, in)
acl(line, make)
obj(make, consumer)
cc(term, or)
compound(mortgage, home)
compound(term, mortgage)
conj(consumer, term)
xcomp(make, easier)
punct(use, .)
nsubj(be, this)
root(ROOT, be)
advmod(be, not)
mark(say, to)
ccomp(be, say)
mark(continue, that)
det(level, the)
nsubj(continue, level)
case(expenditure, of)
compound(expenditure, consumer)
nmod(level, expenditure)
aux(continue, will)
advmod(continue, not)
ccomp(say, continue)
mark(rise, to)
xcomp(continue, rise)
case(sixty, in)
det(sixty, the)
obl(rise, sixty)
punct(be, . )
nsubj(confident, I)
cop(confident, be)
root(ROOT, confident)
mark(will, that)
nsubj(will, it)
ccomp(confident, will)
punct(fortify, ,)
cc(fortify, but)
compound(spending, consumer)
nsubj:pass(fortify, spending)
case(sixty, in)
det(sixty, the)
nmod(spending, sixty)
aux(fortify, will)
advmod(fortify, not)
aux:pass(fortify, be)
conj(confident, fortify)
case(backlog, by)
det(backlog, the)
amod(backlog, great)
obl(fortify, backlog)
case(want, of)
nmod(backlog, want)
cc(desire, and)
conj(want, desire)
nsubj(characterize, which)
acl:relcl(want, characterize)
obj(characterize, most)
case(fifty, of)
det(fifty, the)
obl(most, fifty)
punct(become, .)
nsubj(become, Markets)
aux(become, should)
conj(characterize, become)
advmod(competitive, more)
xcomp(become, competitive)
mark(become, as)
nsubj(become, consumer)
advcl(competitive, become)
advmod(selective, more)
xcomp(become, selective)
punct(requirement, .)
nmod:poss(requirement, sixty)
case(sixty, 's)
compound(requirement, capital)
nsubj(selective, requirement)
advmod(requirement, accordingly)
punct(requirement, ,)
case(sixty, during)
det(sixty, the)
obl(likely, sixty)
nmod:poss(economy, we)
amod(economy, national)
nsubj(likely, economy)
cop(likely, be)
acl:relcl(requirement, likely)
mark(grow, to)
xcomp(likely, grow)
case(rate, at)
advmod(fast, as)
obl(grow, fast)
det(rate, a)
obl(grow, rate)
case(fifty, as)
case(fifty, in)
det(fifty, the)
nmod(rate, fifty)
cc(process, and)
punct(process, ,)
case(process, in)
det(process, the)
conj(fifty, process)
punct(require, ,)
mark(require, to)
advcl(grow, require)
amod(amount, enormous)
obj(require, amount)
case(fund, of)
amod(fund, capital)
nmod(amount, fund)
punct(confident, . )
compound(price, Wage)
punct(price, -)
compound(policy, price)
nsubj(result, policy)
case(industry, of)
nmod(policy, industry)
cop(result, be)
det(result, the)
root(ROOT, result)
case(complex, of)
det(complex, a)
nmod(result, complex)
case(force, of)
nmod(complex, force)
punct(result, --)
det(explanation, no)
amod(explanation, single)
nsubj:pass(find, explanation)
aux(find, have)
aux:pass(find, be)
parataxis(result, find)
nsubj(apply, which)
ccomp(find, apply)
case(case, to)
det(case, all)
obl(apply, case)
punct(result, .)
det(purpose, the)
nsubj(be, purpose)
case(paper, of)
det(paper, this)
nmod(purpose, paper)
root(ROOT, be)
mark(analyze, to)
ccomp(be, analyze)
nummod(force, one)
amod(force, possible)
obj(analyze, force)
nsubj:pass(treat, which)
aux(treat, have)
advmod(treat, not)
aux:pass(treat, be)
acl:relcl(force, treat)
case(literature, in)
det(literature, the)
obl(treat, literature)
punct(make, ,)
cc(make, but)
nsubj(make, which)
nsubj(believe, we)
parataxis(make, believe)
conj(be, make)
det(contribution, a)
amod(contribution, significant)
obj(make, contribution)
mark(explain, to)
acl(contribution, explain)
det(behavior, the)
compound(price, wage)
punct(price, -)
compound(behavior, price)
obj(explain, behavior)
case(industry, of)
det(industry, a)
amod(industry, few)
advmod(important, very)
amod(industry, important)
nmod(behavior, industry)
punct(industry, .)
mark(be, while)
expl(be, there)
aux(be, may)
advcl(make, be)
amod(industry, several)
amod(industry, such)
nsubj(be, industry)
case(which, to)
obl(applicable, which)
det(model, the)
nsubj(applicable, model)
case(paper, of)
det(paper, this)
nmod(model, paper)
cop(applicable, be)
acl:relcl(industry, applicable)
punct(make, ,)
det(author, the)
nsubj(make, author)
acl:relcl(industry, make)
amod(claim, particular)
obj(make, claim)
case(relevance, of)
nmod(claim, relevance)
case(explanation, to)
det(explanation, the)
nmod(claim, explanation)
case(course, of)
det(course, the)
nmod(explanation, course)
case(wage, of)
nmod(course, wage)
cc(price, and)
conj(wage, price)
case(industry, in)
det(industry, the)
compound(industry, steel)
nmod(course, industry)
case(States, of)
det(States, the)
compound(States, United)
nmod(industry, States)
case(War, since)
compound(War, World)
nmod(industry, War)
nummod(War, 2)
punct(be, .)
advmod(have, indeed)
punct(have, ,)
det(stiffen, the)
amod(stiffen, apparent)
nsubj(have, stiffen)
case(attitude, of)
det(industry, the)
nmod:poss(attitude, industry)
case(industry, 's)
nmod(stiffen, attitude)
case(strike, in)
det(strike, the)
amod(strike, recent)
compound(strike, steel)
nmod(attitude, strike)
root(ROOT, have)
det(explanation, a)
amod(explanation, direct)
obj(have, explanation)
case(term, in)
nmod(explanation, term)
case(model, of)
det(model, the)
nmod(term, model)
advmod(model, here)
acl(term, present)
punct(have, .)
det(model, the)
nsubj(consider, model)
case(paper, of)
det(paper, this)
nmod(model, paper)
root(ROOT, consider)
det(industry, a)
obj(consider, industry)
nsubj:pass(characterize, which)
aux:pass(characterize, be)
advmod(characterize, not)
acl:relcl(industry, characterize)
case(competition, by)
amod(competition, vigorous)
compound(competition, price)
obl(characterize, competition)
punct(basic, ,)
cc(basic, but)
nsubj(basic, which)
cop(basic, be)
advmod(basic, so)
conj(consider, basic)
mark(hold, that)
nmod:poss(policy, its)
compound(price, wage)
punct(price, -)
compound(policy, price)
nsubj:pass(hold, policy)
aux:pass(hold, be)
ccomp(basic, hold)
case(check, in)
obl(hold, check)
case(scrutiny, by)
amod(scrutiny, continuous)
amod(scrutiny, critical)
amod(scrutiny, public)
obl(hold, scrutiny)
punct(consider, .)
mark(keep, where)
det(industry, the)
nmod:poss(price, industry)
case(industry, 's)
compound(price, product)
nsubj:pass(keep, price)
aux(keep, have)
aux:pass(keep, be)
advcl(have, keep)
case(maximize, below)
det(maximize, the)
punct(maximize, ``)
compound(maximize, profit)
punct(maximize, -)
obl(keep, maximize)
punct(maximize, '')
cc(price, and)
punct(limiting, ``)
compound(limiting, entry)
punct(limiting, -)
amod(price, limiting)
punct(limiting, '')
conj(maximize, price)
case(fear, due)
fixed(due, to)
nmod(price, fear)
case(reaction, of)
amod(reaction, public)
nmod(fear, reaction)
punct(have, ,)
det(profit, the)
nsubj(have, profit)
acl(profit, seek)
obj(seek, producer)
root(ROOT, have)
det(interest, a)
obj(have, interest)
mark(offer, in)
acl(interest, offer)
amod(resistance, little)
amod(resistance, real)
obj(offer, resistance)
case(demand, to)
compound(demand, wage)
nmod(resistance, demand)
punct(have, .)
det(contribution, the)
nsubj(demonstration, contribution)
case(paper, of)
det(paper, this)
nmod(contribution, paper)
cop(demonstration, be)
det(demonstration, a)
root(ROOT, demonstration)
case(proposition, of)
det(proposition, this)
nmod(demonstration, proposition)
punct(exploration, ,)
cc(exploration, and)
det(exploration, a)
conj(demonstration, exploration)
case(some, of)
nmod(exploration, some)
case(implication, of)
nmod:poss(implication, its)
nmod(some, implication)
punct(demonstration, .)
mark(focus, in)
fixed(in, order)
mark(focus, to)
advcl(simplify, focus)
advmod(focus, clearly)
case(operation, upon)
det(operation, the)
obl(focus, operation)
case(force, of)
det(force, this)
nummod(force, one)
nmod(operation, force)
punct(force, ,)
obj(call, which)
nsubj(call, we)
aux(call, may)
acl:relcl(force, call)
det(effect, the)
obj(call, effect)
case(pricing, of)
punct(pricing, ``)
amod(limit, public)
punct(limit, -)
compound(pricing, limit)
nmod(effect, pricing)
punct(pricing, '')
case(bargain, on)
punct(bargain, ``)
amod(bargain, key)
punct(bargain, '')
compound(bargain, wage)
nmod(pricing, bargain)
punct(simplify, ,)
nsubj(simplify, we)
advmod(simplify, deliberately)
root(ROOT, simplify)
det(model, the)
obj(simplify, model)
case(abstract, by)
obl(simplify, abstract)
case(force, from)
amod(force, other)
nmod(abstract, force)
punct(force, ,)
case(power, such)
fixed(such, as)
compound(power, union)
nmod(abstract, power)
punct(power, ,)
nsubj(relevant, which)
aux(relevant, may)
cop(relevant, be)
acl:relcl(power, relevant)
case(situation, in)
det(situation, a)
amod(situation, actual)
obl(relevant, situation)
punct(relevant, .)
case(purpose, for)
amod(purpose, expository)
obl(treat, purpose)
punct(treat, ,)
nsubj:pass(treat, this)
aux:pass(treat, be)
advmod(treat, best)
parataxis(relevant, treat)
case(model, as)
det(model, a)
obl(treat, model)
nsubj(spell, which)
acl:relcl(model, spell)
compound:prt(spell, out)
det(condition, the)
obj(spell, condition)
case(which, under)
obl(affect, which)
det(industry, a)
amod(industry, important)
nsubj(find, industry)
acl(industry, affect)
case(interest, with)
det(interest, the)
amod(interest, public)
obl(affect, interest)
aux(find, would)
advcl(spell, find)
obj(find, it)
xcomp(find, profitable)
mark(raise, to)
advcl(profitable, raise)
obj(raise, wage)
advmod(absence, even)
case(absence, in)
det(absence, the)
obl(raise, absence)
case(union, of)
compound(pressure, union)
nmod(absence, pressure)
case(wage, for)
amod(wage, higher)
nmod(pressure, wage)
punct(find, .)
obl:tmod(describe, Part)
nummod(Part, 1)
punct(describe, ,)
advmod(describe, below)
root(ROOT, describe)
det(model, this)
compound(model, abstract)
obj(describe, model)
mark(spelling, by)
advcl(describe, spelling)
compound:prt(spelling, out)
nmod:poss(assumption, its)
obj(spelling, assumption)
punct(describe, .)
obl:tmod(discuss, Part)
nummod(Part, 2)
punct(discuss, ,)
root(ROOT, discuss)
det(operation, the)
obj(discuss, operation)
case(model, of)
det(model, the)
nmod(operation, model)
cc(derive, and)
conj(discuss, derive)
det(conclusion, some)
amod(conclusion, significant)
obj(derive, conclusion)
punct(discuss, .)
obl:tmod(discuss, Part)
nummod(Part, 3)
punct(discuss, ,)
root(ROOT, discuss)
det(relevance, the)
amod(relevance, empirical)
obj(discuss, relevance)
cc(implication, and)
compound(implication, policy)
conj(relevance, implication)
case(conclusion, of)
det(conclusion, the)
nmod(relevance, conclusion)
punct(discuss, .)
nsubj(summary, Part)
nummod(Part, 4)
punct(summary, ,)
cop(summary, be)
det(summary, a)
amod(summary, brief)
root(ROOT, summary)
punct(summary, .)
det(Appendix, the)
amod(Appendix, Mathematical)
nsubj(present, Appendix)
root(ROOT, present)
det(argument, the)
amod(argument, rigorous)
obj(present, argument)
punct(read, ,)
cc(read, but)
aux(read, be)
advmod(read, best)
conj(present, read)
case(Part, after)
obl(read, Part)
nummod(Part, 1)
punct(read, ,)
mark(explicit, in)
fixed(in, order)
mark(explicit, that)
det(assumption, the)
nsubj(explicit, assumption)
acl(assumption, underlying)
det(equation, the)
obj(underlying, equation)
aux(explicit, may)
cop(explicit, be)
ccomp(read, explicit)
punct(present, . )
nummod(industry, 1)
punct(industry, ,)
det(assumption, the)
nsubj(industry, assumption)
case(model, of)
det(model, the)
nmod(assumption, model)
nummod(industry, a)
punct(industry, .)
det(industry, the)
nsubj(industry, industry)
det(industry, the)
appos(industry, industry)
case(which, with)
obl(concerned, which)
det(model, this)
nsubj(concerned, model)
cop(concerned, be)
acl:relcl(industry, concerned)
cop(industry, be)
det(industry, a)
amod(industry, basic)
root(ROOT, industry)
punct(industry, ,)
acl(industry, produce)
det(share, a)
amod(share, substantial)
obj(produce, share)
case(product, of)
amod(product, gross)
amod(product, national)
nmod(share, product)
punct(industry, .)
compound(competition, price)
nsubj(lack, competition)
cop(lack, be)
root(ROOT, lack)
punct(lack, .)
case(purpose, for)
det(purpose, the)
obl(behave, purpose)
mark(set, of)
acl(purpose, set)
det(price, the)
compound(price, product)
obj(set, price)
punct(behave, ,)
det(industry, the)
nsubj(behave, industry)
root(ROOT, behave)
case(entity, as)
det(entity, a)
amod(entity, single)
obl(behave, entity)
punct(behave, .)
case(negotiation, in)
compound(negotiation, wage)
obl(b, negotiation)
punct(b, ,)
det(bargain, the)
compound(bargain, industry)
nsubj(b, bargain)
case(unit, as)
det(unit, a)
nmod(bargain, unit)
case(union, with)
det(union, a)
amod(union, single)
nmod(unit, union)
punct(b, .)
root(ROOT, b)
punct(b, .)
det(demand, the)
nsubj(concerned, demand)
case(product, for)
det(industry, the)
nmod:poss(product, industry)
case(industry, 's)
nmod(demand, product)
nsubj(concerned, we)
cop(concerned, be)
root(ROOT, concerned)
case(demand, with)
compound(demand, aggregate)
obl(concerned, demand)
case(product, for)
det(industry, the)
nmod:poss(product, industry)
case(industry, 's)
nmod(demand, product)
punct(concerned, .)
det(manner, the)
nsubj:pass(take, manner)
case(which, in)
obl(share, which)
nsubj:pass(share, this)
aux:pass(share, be)
acl:relcl(manner, share)
case(firm, among)
obl(share, firm)
aux:pass(take, be)
root(ROOT, take)
mark(give, as)
advcl(take, give)
punct(take, .)
case(period, in)
det(period, any)
amod(period, give)
compound(period, time)
obl(determine, period)
punct(determine, ,)
det(demand, the)
compound(demand, aggregate)
nsubj:pass(determine, demand)
case(product, for)
det(industry, the)
nmod:poss(product, industry)
case(industry, 's)
nmod(demand, product)
aux:pass(determine, be)
root(ROOT, determine)
case(thing, by)
nummod(thing, two)
obl(determine, thing)
punct(thing, :)
det(price, the)
nsubj:pass(determine, price)
acl(price, charge)
case(industry, by)
det(industry, the)
obl(charge, industry)
punct(level, ,)
cc(level, and)
det(level, the)
conj(price, level)
case(Aj, of)
nmod(level, Aj)
punct(level, .)
case(purpose, for)
det(purpose, the)
obl(encompass, purpose)
case(discussion, of)
det(discussion, this)
nmod(purpose, discussion)
punct(encompass, ,)
det(problem, the)
nsubj:pass(encompass, problem)
case(price, of)
amod(price, relative)
nmod(problem, price)
aux:pass(encompass, be)
conj(determine, encompass)
case(variable, in)
det(variable, these)
nummod(variable, two)
obl(encompass, variable)
punct(encompass, ,)
mark(include, since)
nsubj(include, gnp)
advcl(encompass, include)
amod(price, other)
obj(include, price)
punct(determine, . )
root(ROOT, ()
nsubj(abstract, we)
root(ROOT, abstract)
advmod(abstract, here)
case(progress, from)
amod(progress, technological)
obl(abstract, progress)
cc(assume, and)
conj(abstract, assume)
mark(change, that)
nsubj(change, price)
case(product, of)
det(product, all)
amod(product, other)
nmod(price, product)
ccomp(assume, change)
advmod(change, proportionately)
punct(abstract, .)
punct(abstract, ))
det(form, the)
nsubj(one, form)
case(function, of)
det(function, the)
compound(demand, industry)
compound(function, demand)
nmod(form, function)
cop(one, be)
root(ROOT, one)
nsubj(make, which)
acl:relcl(one, make)
obj(make, quantity)
xcomp(make, demand)
xcomp(make, vary)
advmod(vary, inversely)
case(price, with)
det(price, the)
compound(price, product)
obl(vary, price)
punct(vary, ,)
cc(vary, and)
conj(make, vary)
advmod(vary, directly)
case(level, with)
det(level, the)
obl(vary, level)
case(Aj, of)
nmod(level, Aj)
punct(c, .)
nmod(level, c)
punct(one, .)
compound(product, Industry)
compound(price, product)
compound(policy, price)
nsubj(important, policy)
det(industry, the)
nsubj(important, industry)
case(model, of)
det(model, this)
nmod(industry, model)
cop(important, be)
advmod(important, so)
root(ROOT, important)
mark(wage, that)
nsubj(wage, it)
cop(wage, be)
ccomp(important, wage)
cc(affect, and)
compound(policy, price)
nsubj:pass(affect, policy)
aux:pass(affect, be)
conj(wage, affect)
case(interest, with)
det(interest, a)
amod(interest, public)
obl(affect, interest)
punct(important, .)
case(importance, because)
fixed(because, of)
nmod:poss(importance, its)
obl(be, importance)
punct(be, ,)
cc(recognize, and)
mark(recognize, because)
det(lack, the)
nsubj:pass(recognize, lack)
case(competition, of)
compound(competition, price)
nmod(lack, competition)
aux:pass(recognize, be)
advmod(recognize, well)
advcl(be, recognize)
punct(be, ,)
det(industry, the)
nsubj(be, industry)
root(ROOT, be)
case(pressure, under)
amod(pressure, considerable)
amod(pressure, public)
obl(be, pressure)
advmod(raise, not)
mark(raise, to)
acl(pressure, raise)
nmod:poss(price, its)
obj(raise, price)
advmod(more, any)
advmod(raise, more)
mark(justified, than)
aux(justified, could)
aux:pass(justified, be)
advcl(more, justified)
case(increase, by)
compound(increase, cost)
obl(justified, increase)
punct(be, .)
det(threat, the)
nsubj(operate, threat)
case(action, of)
amod(action, effective)
amod(action, anti-trust)
nmod(threat, action)
punct(threat, ,)
acl(action, provoke)
mark(gouging, by)
punct(gouging, ``)
advcl(provoke, gouging)
det(public, the)
obj(gouging, public)
punct(gouging, '')
case(increase, through)
compound(increase, price)
obl(gouging, increase)
advmod(justified, not)
conj(gouging, justified)
case(increase, by)
compound(increase, cost)
obl(justified, increase)
punct(fear, ,)
cc(fear, and)
conj(threat, fear)
mark(endangering, of)
acl(fear, endangering)
obj(endangering, relation)
case(customer, with)
nmod(relation, customer)
punct(Congress, ,)
conj(customer, Congress)
punct(public, ,)
det(public, the)
amod(public, general)
conj(customer, public)
cc(press, and)
det(press, the)
conj(customer, press)
punct(operate, ,)
nsubj(operate, all)
root(ROOT, operate)
mark(keep, to)
xcomp(operate, keep)
compound(increase, price)
obj(keep, increase)
case(relation, in)
det(relation, some)
obl(keep, relation)
case(increase, to)
compound(increase, cost)
nmod(relation, increase)
punct(operate, .)
case(industry, for)
det(industry, the)
obl(be, industry)
case(model, of)
det(model, this)
nmod(industry, model)
punct(be, ,)
det(effect, the)
nsubj(be, effect)
case(pressure, of)
amod(pressure, such)
amod(pressure, public)
nmod(effect, pressure)
case(past, in)
det(past, the)
nmod(pressure, past)
aux(be, have)
root(ROOT, be)
mark(hold, to)
ccomp(be, hold)
det(price, the)
obj(hold, price)
advmod(hold, well)
case(price, below)
det(price, the)
amod(run, short)
punct(run, -)
compound(price, run)
compound(price, profit)
compound(price, -maximize)
obl(hold, price)
punct(price, ()
acl(price, give)
det(rate, the)
compound(rate, wage)
obj(give, rate)
cc(level, and)
det(level, the)
conj(rate, level)
case(gnp, of)
nmod(level, gnp)
punct(rate, ))
punct(price, ,)
cc(price, and)
advmod(price, even)
case(price, below)
det(price, the)
compound(limit, entry)
punct(limit, -)
amod(price, limit)
conj(rate, price)
punct(cost, ()
cc(cost, but)
advmod(cost, not)
case(cost, below)
amod(cost, average)
conj(price, cost)
punct(cost, ))
punct(be, .)
case(industry, for)
det:predet(industry, such)
det(industry, a)
obl(safe, industry)
punct(safe, ,)
nsubj(safe, it)
cop(safe, be)
advmod(safe, only)
punct(safe, ``)
root(ROOT, safe)
punct(safe, '')
mark(raise, to)
advcl(safe, raise)
obj(raise, it)
cop(price, be)
conj(safe, price)
mark(justified, if)
det:predet(increase, such)
det(increase, a)
nsubj:pass(justified, increase)
aux:pass(justified, be)
advmod(justified, manifestly)
punct(justified, ``)
advcl(price, justified)
punct(justified, '')
case(cost, by)
amod(cost, rise)
obl(justified, cost)
punct(wage, ()
case(wage, due)
fixed(due, to)
amod(wage, rise)
nmod(cost, wage)
punct(wage, ,)
advmod(wage, etc)
punct(wage, .)
punct(wage, ))
punct(safe, .)
advmod(function, thus)
punct(function, ,)
mark(set, if)
amod(pressure, public)
nsubj(set, pressure)
advcl(function, set)
det(limit, the)
amod(limit, effective)
obj(set, limit)
case(price, to)
det(price, the)
nmod(limit, price)
obj(charge, that)
det(industry, the)
nsubj(charge, industry)
aux(charge, may)
acl:relcl(price, charge)
punct(function, ,)
det(pressure, this)
nsubj(function, pressure)
cop(function, be)
nsubj(function, itself)
det(function, a)
root(ROOT, function)
case(rate, of)
det(rate, the)
compound(rate, wage)
nmod(function, rate)
punct(function, .)
case(model, in)
det(model, this)
obl(abstract, model)
punct(abstract, ,)
nsubj(abstract, we)
root(ROOT, abstract)
case(source, from)
det(source, all)
amod(source, non-wage)
obl(abstract, source)
case(change, of)
compound(change, cost)
nmod(source, change)
punct(abstract, ,)
mark(rise, so)
fixed(so, that)
det(price, the)
punct(price, ``)
amod(limit, public)
punct(limit, -)
compound(price, limit)
nsubj(rise, price)
punct(price, '')
advmod(rise, only)
advcl(abstract, rise)
mark(rise, as)
det(rate, the)
compound(rate, wage)
nsubj(rise, rate)
advcl(rise, rise)
punct(abstract, .)
case(circumstance, in)
amod(circumstance, such)
obl(advantage, circumstance)
punct(advantage, ,)
nsubj(advantage, it)
aux(advantage, may)
advmod(advantage, well)
cop(advantage, be)
case(advantage, to)
det(advantage, the)
root(ROOT, advantage)
case(industry, of)
det(industry, the)
nmod(advantage, industry)
mark(allow, to)
acl(advantage, allow)
det(increase, a)
obj(allow, increase)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(increase, rate)
punct(advantage, .)
mark(rise, since)
amod(cost, marginal)
nsubj(rise, cost)
advcl(rise, rise)
mark(rise, when)
det(rate, the)
compound(rate, wage)
nsubj(rise, rate)
advcl(rise, rise)
punct(rise, ,)
det(price, the)
compound(price, profit-maxizing)
nsubj(rise, price)
advmod(rise, also)
root(ROOT, rise)
mark(elevate, when)
det(price, the)
amod(limit, public)
punct(limit, -)
compound(price, limit)
nsubj:pass(elevate, price)
aux:pass(elevate, be)
advcl(rise, elevate)
punct(likely, ,)
cc(likely, and)
cop(likely, be)
conj(elevate, likely)
mark(remain, to)
xcomp(likely, remain)
advmod(remain, well)
case(latter, above)
det(latter, the)
obl(remain, latter)
punct(rise, .)
det(price, the)
compound(price, entry)
punct(limiting, -)
amod(price, limiting)
nsubj:pass(raise, price)
aux(raise, will)
advmod(raise, also)
aux:pass(raise, be)
root(ROOT, raise)
case(competition, for)
amod(competition, potential)
amod(competition, domestic)
obl(raise, competition)
punct(expect, ,)
cc(expect, but)
mark(permit, unless)
amod(inflation, general)
nsubj(permit, inflation)
advcl(expect, permit)
compound(margin, profit)
obj(permit, margin)
mark(increase, to)
advcl(permit, increase)
advmod(increase, proportionately)
case(economy, throughout)
det(economy, the)
obl(increase, economy)
punct(expect, ,)
nsubj(expect, we)
aux(expect, might)
conj(raise, expect)
det(price, the)
amod(limit, public)
punct(limit, -)
compound(price, limit)
obj(expect, price)
mark(approach, to)
acl(price, approach)
det(price, the)
compound(limit, entry)
punct(limit, -)
compound(price, limit)
obj(approach, price)
punct(raise, .)
det(price, the)
amod(entry, foreign)
punct(entry, -)
compound(limit, entry)
punct(limit, -)
compound(price, limit)
nsubj:pass(approach, price)
aux(approach, would)
aux:pass(approach, be)
root(ROOT, approach)
advmod(rapidly, more)
advmod(approach, rapidly)
punct(approach, ,)
mark(enter, since)
amod(rate, domestic)
compound(rate, wage)
punct(rate, -)
nsubj(enter, rate)
aux(enter, do)
advmod(enter, not)
advcl(approach, enter)
amod(cost, foreign)
obj(enter, cost)
advmod(enter, directly)
punct(approach, .)
mark(become, where)
det(approach, this)
nsubj(become, approach)
advcl(expect, become)
xcomp(become, critical)
punct(expect, ,)
det(industry, the)
nsubj:pass(expect, industry)
aux(expect, can)
aux:pass(expect, be)
root(ROOT, expect)
mark(put, to)
xcomp(expect, put)
amod(emphasis, much)
obj(put, emphasis)
case(this, on)
nmod(emphasis, this)
case(evidence, as)
obl(put, evidence)
case(sincerity, of)
nmod:poss(sincerity, its)
nmod(evidence, sincerity)
mark(resist, in)
punct(resist, ``)
acl(sincerity, resist)
punct(resist, '')
det(pressure, the)
compound(pressure, wage)
obj(resist, pressure)
case(union, of)
det(union, a)
amod(union, powerful)
nmod(pressure, union)
punct(put, ,)
advcl(put, request)
compound(relief, tariff)
obj(request, relief)
mark(acced, after)
nsubj(acced, it)
aux(acced, have)
punct(acced, ``)
advmod(acced, reluctantly)
punct(acced, '')
advcl(request, acced)
case(pressure, to)
det(pressure, the)
compound(pressure, union)
obl(acced, pressure)
punct(acced, .)
mark(interest, whether)
fixed(whether, or)
fixed(whether, not)
nsubj(interest, it)
cop(interest, be)
case(interest, in)
det(industry, the)
nmod:poss(interest, industry)
case(industry, 's)
obl(acced, interest)
mark(allow, to)
acl(interest, allow)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
obj(allow, rate)
mark(rise, to)
acl(rate, rise)
advmod(depend, obviously)
ccomp(allow, depend)
case(extent, upon)
det(extent, the)
obl(depend, extent)
case(which, to)
obl(rise, which)
det(price, the)
amod(limit, public)
punct(limit, -)
compound(price, limit)
nsubj(rise, price)
acl:relcl(extent, rise)
case(response, in)
obl(rise, response)
case(increase, to)
det(increase, a)
amod(increase, basic)
compound(increase, wage)
nmod(response, increase)
punct(relation, ,)
cc(relation, and)
det(relation, the)
conj(extent, relation)
case(response, of)
det(response, this)
nmod(relation, response)
case(increase, to)
det(increase, the)
nmod(response, increase)
case(cost, in)
nmod(increase, cost)
acl(cost, accompany)
det(increase, the)
compound(increase, wage)
obj(accompany, increase)
punct(expect, .)
det(extent, the)
nsubj(function, extent)
case(which, to)
obl(raise, which)
det(price, the)
amod(limit, public)
punct(limit, -)
compound(price, limit)
nsubj:pass(raise, price)
aux:pass(raise, be)
acl:relcl(extent, raise)
case(increase, by)
det(increase, a)
amod(increase, give)
obl(raise, increase)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(increase, rate)
cop(function, be)
nsubj(function, itself)
det(function, a)
root(ROOT, function)
case(thing, of)
nummod(thing, three)
nmod(function, thing)
punct(thing, :)
det(passage, the)
appos(function, passage)
case(time, of)
nmod(passage, time)
punct(level, ,)
det(level, the)
conj(passage, level)
case(gnp, of)
nmod(level, gnp)
punct(size, ,)
cc(size, and)
det(size, the)
conj(passage, size)
case(increase, of)
det(increase, the)
compound(increase, wage)
nmod(size, increase)
punct(function, .)
nsubj(abstract, we)
aux(abstract, be)
root(ROOT, abstract)
case(fact, from)
det(fact, the)
obl(abstract, fact)
case(strike, of)
nmod(fact, strike)
advmod(strike, here)
punct(obvious, ,)
cc(obvious, but)
expl(obvious, it)
aux(obvious, should)
cop(obvious, be)
conj(abstract, obvious)
mark(function, that)
det(extent, the)
nsubj(function, extent)
case(which, to)
obl(raise, which)
det(price, the)
amod(limit, public)
punct(limit, -)
compound(price, limit)
nsubj:pass(raise, price)
aux:pass(raise, be)
acl:relcl(extent, raise)
case(increase, by)
det(increase, a)
amod(increase, give)
obl(raise, increase)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(increase, rate)
cop(function, be)
advmod(function, also)
det(function, a)
ccomp(obvious, function)
case(show, of)
det(show, the)
nmod(function, show)
case(resistance, of)
nmod(show, resistance)
acl(show, put)
compound:prt(put, up)
case(industry, by)
det(industry, the)
obl(put, industry)
punct(abstract, .)
det(industry, the)
nsubj(take, industry)
aux(take, may)
advmod(take, deliberately)
root(ROOT, take)
det(strike, a)
obj(take, strike)
punct(take, ,)
advmod(put, not)
mark(put, to)
conj(take, put)
obj(put, pressure)
case(union, on)
det(union, the)
obl(put, union)
punct(educate, ,)
cc(educate, but)
mark(educate, in)
fixed(in, order)
mark(educate, to)
punct(educate, ``)
conj(put, educate)
punct(educate, '')
det(government, the)
obj(educate, government)
cc(customer, and)
det(customer, the)
conj(government, customer)
case(industry, of)
det(industry, the)
nmod(customer, industry)
punct(take, .)
mark(continue, as)
det(strike, a)
nsubj(continue, strike)
advcl(increase, continue)
punct(increase, ,)
det(party, these)
nsubj(increase, party)
root(ROOT, increase)
nmod:poss(pressure, they)
obj(increase, pressure)
case(industry, on)
det(industry, the)
nmod(pressure, industry)
mark(reach, to)
advcl(increase, reach)
det(agreement, a)
obj(reach, agreement)
punct(increase, .)
nsubj(become, they)
root(ROOT, become)
advmod(willing, increasingly)
xcomp(become, willing)
mark(accept, to)
xcomp(willing, accept)
det(increase, the)
compound(increase, price)
obj(accept, increase)
mark(claim, that)
det(industry, the)
nsubj(claim, industry)
acl:relcl(increase, claim)
det(bargain, the)
compound(bargain, wage)
nsubj(entail, bargain)
aux(entail, would)
ccomp(claim, entail)
punct(indignation, .)
amod(indignation, Public)
obj(entail, indignation)
cc(resistance, and)
conj(indignation, resistance)
case(increase, to)
compound(price, wage)
punct(price, -)
compound(increase, price)
nsubj(less, increase)
cop(less, be)
advmod(less, obviously)
advmod(less, much)
conj(become, less)
mark(order, when)
det(increase, the)
nsubj(order, increase)
cop(order, be)
case(order, on)
det(order, the)
advcl(less, order)
case(%, of)
nummod(%, 3)
nmod(order, %)
case(annum, per)
nmod(%, annum)
mark(order, than)
mark(order, when)
det(increase, the)
nsubj(order, increase)
cop(order, be)
case(order, on)
det(order, the)
advcl(order, order)
case(%, of)
nummod(%, 3)
nmod(order, %)
case(month, per)
nmod(%, month)
punct(become, .)
det(passage, the)
amod(passage, simple)
nsubj(make, passage)
case(time, of)
det(month, a)
amod(time, additional)
nummod(month, eleven)
nmod:poss(time, month)
case(month, 's)
nmod(passage, time)
root(ROOT, make)
det(boost, the)
amod(boost, second)
nummod(%, 3)
compound(boost, %)
obj(make, boost)
advmod(acceptable, more)
xcomp(make, acceptable)
punct(make, .)
advmod(raise, thus)
punct(raise, ,)
det(price, the)
amod(limit, public)
punct(limit, -)
compound(price, limit)
nsubj:pass(raise, price)
aux:pass(raise, be)
root(ROOT, raise)
advmod(raise, further)
case(increase, by)
det(increase, a)
amod(increase, give)
compound(increase, wage)
obl(raise, increase)
mark(longer, the)
advmod(raise, longer)
nsubj(increase, it)
aux(increase, have)
cop(increase, be)
case(increase, since)
det(increase, the)
amod(increase, previous)
compound(increase, price)
obl(raise, increase)
punct(raise, .)
root(ROOT, notice)
punct(notice, ,)
advmod(notice, however)
punct(notice, ,)
mark(permit, that)
det(passage, the)
nsubj(permit, passage)
case(time, of)
nmod(passage, time)
aux(permit, do)
advmod(permit, not)
appos(notice, permit)
det(raising, the)
obj(permit, raising)
case(price, of)
nmod(raising, price)
case(se, per)
nmod(price, se)
punct(permit, ,)
case(increase, without)
det(increase, a)
amod(increase, accompany)
compound(increase, wage)
obl(permit, increase)
punct(notice, .)
advmod(provide, similarly)
punct(provide, ,)
amod(level, higher)
nsubj(provide, level)
case(gnp, of)
nmod(level, gnp)
aux(provide, do)
advmod(provide, not)
punct(provide, ,)
case(themselves, in)
obl(provide, themselves)
punct(provide, ,)
root(ROOT, provide)
obj(provide, grounds)
mark(raise, for)
acl(grounds, raise)
obj(raise, price)
punct(relax, ,)
cc(relax, but)
nsubj(relax, they)
aux(relax, do)
conj(provide, relax)
obj(relax, some)
case(pressure, of)
det(pressure, the)
nmod(some, pressure)
case(industry, on)
det(industry, the)
nmod(pressure, industry)
mark(raise, so)
fixed(so, that)
nsubj(raise, it)
aux(raise, can)
advcl(relax, raise)
obj(raise, price)
xcomp(raise, higher)
case(increase, for)
det(increase, a)
amod(increase, give)
compound(increase, wage)
obl(raise, increase)
punct(provide, .)
nsubj:pass(extend, this)
aux:pass(extend, be)
advmod(extend, not)
root(ROOT, extend)
case(level, to)
amod(level, anticipate)
obl(extend, level)
case(gnp, of)
nmod(level, gnp)
punct(extend, ,)
advmod(affect, however)
punct(extend, --)
advmod(level, only)
det(level, the)
amod(level, current)
nsubj(affect, level)
case(gnp, of)
nmod(level, gnp)
parataxis(extend, affect)
det(pressure, the)
amod(pressure, public)
obj(affect, pressure)
case(increase, against)
compound(price, wage)
punct(price, -)
compound(increase, price)
nmod(pressure, increase)
punct(pressure, .)
advmod(require, finally)
punct(require, ,)
mark(require, since)
det(public, the)
nsubj(require, public)
advcl(affect, require)
det(restraint, some)
obj(require, restraint)
case(part, on)
det(part, the)
nmod(restraint, part)
case(company, of)
det(company, the)
nmod(part, company)
punct(call, ,)
amod(call, larger)
compound(increase, wage)
compound(call, increase)
conj(restraint, call)
case(increase, for)
advmod(larger, less)
fixed(less, than)
advmod(larger, proportionately)
amod(increase, larger)
compound(increase, price)
nmod(call, increase)
punct(allow, ()
advmod(allow, e.g.)
punct(allow, ,)
mark(allow, if)
det(increase, a)
compound(increase, wage)
nsubj(allow, increase)
case(%, of)
nummod(%, 5)
nmod(increase, %)
acl(increase, allow)
det(increase, a)
compound(increase, price)
obj(allow, increase)
case(%, of)
nummod(%, 7)
nmod(increase, %)
punct(allow, ,)
det(increase, a)
compound(increase, wage)
nsubj(allow, increase)
case(%, of)
nummod(%, 10)
nmod(increase, %)
parataxis(allow, allow)
det(increase, a)
compound(increase, price)
obj(allow, increase)
case(something, of)
nmod(increase, something)
advmod(%, less)
fixed(less, than)
nummod(%, 14)
nmod(something, %)
punct(allow, ))
punct(extend, . )
nsubj(cost, D)
punct(cost, .)
nsubj(cost, Industry)
root(ROOT, cost)
nsubj(assume, we)
ccomp(cost, assume)
mark(constant, that)
amod(cost, average)
amod(cost, total)
compound(cost, unit)
nsubj(constant, cost)
case(region, in)
det(region, the)
amod(region, relevant)
nmod(cost, region)
case(operation, of)
nmod(region, operation)
cop(constant, be)
ccomp(assume, constant)
case(respect, with)
obl(constant, respect)
case(quantity, to)
nmod(respect, quantity)
acl(respect, produce)
punct(horizontal, ()
det(curve, the)
amod(curve, average)
compound(curve, cost)
nsubj(horizontal, curve)
cop(horizontal, be)
parataxis(constant, horizontal)
punct(identical, ,)
cc(identical, and)
advmod(identical, therefore)
cop(identical, be)
conj(horizontal, identical)
case(curve, with)
det(curve, the)
amod(curve, marginal)
compound(curve, cost)
obl(identical, curve)
punct(identical, ))
punct(same, ,)
cc(same, and)
cop(same, be)
det(same, the)
conj(horizontal, same)
case(firm, for)
det(firm, every)
obl(same, firm)
punct(industry, ()
cc(industry, and)
advmod(industry, therefore)
case(industry, for)
det(industry, the)
conj(firm, industry)
punct(industry, ))
punct(cost, .)
det(level, the)
nsubj:pass(determine, level)
case(cost, of)
det(cost, this)
amod(cost, average)
nmod(level, cost)
aux:pass(determine, be)
root(ROOT, determine)
case(price, by)
compound(price, factor)
obl(determine, price)
punct(technology, ,)
conj(price, technology)
punct(forth, ,)
cc(forth, and)
advmod(forth, so)
conj(price, forth)
punct(determine, .)
mark(note, as)
nsubj(note, we)
aux(note, have)
advcl(abstract, note)
punct(abstract, ,)
advmod(abstract, however)
punct(abstract, ,)
nsubj(abstract, we)
aux(abstract, be)
root(ROOT, abstract)
case(change, from)
obl(abstract, change)
case(determinant, in)
det(determinant, all)
nmod(change, determinant)
case(level, of)
det(level, this)
nmod(determinant, level)
case(change, except)
case(change, for)
obl(abstract, change)
case(rate, in)
det(rate, the)
compound(rate, wage)
nmod(change, rate)
punct(abstract, .)
det(level, the)
nsubj(function, level)
case(cost, of)
amod(cost, average)
nmod(level, cost)
punct(equal, ()
amod(level, equal)
case(cost, to)
amod(cost, marginal)
obl(equal, cost)
punct(equal, ))
cop(function, be)
advmod(function, thus)
advmod(function, strictly)
det(function, a)
root(ROOT, function)
case(rate, of)
det(rate, the)
compound(rate, wage)
nmod(function, rate)
punct(function, .)
root(ROOT, e)
punct(e, .)
compound(policy, union)
nsubj(restrict, policy)
cc(issue, and)
amod(bargaining, collective)
compound(issue, bargaining)
conj(policy, issue)
det(union, the)
amod(union, single)
appos(policy, union)
nsubj(face, which)
acl:relcl(union, face)
det(industry, the)
obj(face, industry)
aux(restrict, do)
advmod(restrict, not)
root(ROOT, restrict)
nmod:poss(membership, its)
obj(restrict, membership)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(restrict, be)
det(supply, a)
amod(supply, adequate)
nsubj(be, supply)
case(labor, of)
nmod(supply, labor)
amod(supply, available)
case(firm, to)
det(firm, the)
obl(available, firm)
case(industry, of)
det(industry, the)
nmod(firm, industry)
case(rate, at)
det(rate, the)
compound(rate, go)
compound(rate, wage)
nmod(firm, rate)
punct(restrict, .)
det(union, the)
nsubj(regard, union)
aux(regard, do)
advmod(regard, not)
root(ROOT, regard)
obj(regard, unemployment)
case(member, of)
nmod:poss(member, its)
amod(member, own)
nmod(unemployment, member)
case(matter, as)
det(matter, a)
obl(regard, matter)
case(concern, of)
nmod(matter, concern)
mark(set, when)
acl(matter, set)
nmod:poss(policy, its)
amod(policy, own)
compound(policy, wage)
obj(set, policy)
punct(regard, --)
nmod:poss(concern, its)
nsubj(make, concern)
case(employment, with)
nmod(concern, employment)
parataxis(regard, make)
obj(make, itself)
xcomp(make, feel)
case(pressure, in)
obl(feel, pressure)
case(government, upon)
det(government, the)
nmod(pressure, government)
mark(maintain, to)
advcl(feel, maintain)
amod(employment, full)
obj(maintain, employment)
punct(regard, .)
det(union, the)
nsubj(demand, union)
advmod(demand, vigorously)
root(ROOT, demand)
compound(increase, wage)
obj(demand, increase)
case(increase, from)
compound(increase, productivity)
nmod(increase, increase)
punct(increase, ,)
cc(increase, and)
nsubj(increase, wage)
conj(demand, increase)
mark(offset, to)
xcomp(increase, offset)
compound(increase, cost)
amod(living, -of)
punct(living, -)
compound(increase, living)
obj(offset, increase)
punct(abstract, ,)
cc(abstract, but)
nsubj(abstract, we)
conj(demand, abstract)
case(force, from)
det(force, these)
obl(abstract, force)
advmod(abstract, here)
punct(demand, . )
case(purpose, for)
nmod:poss(purpose, we)
amod(purpose, present)
obl(assume, purpose)
nsubj(assume, we)
root(ROOT, assume)
mark(rate, that)
det(subject, the)
amod(subject, sole)
nsubj(rate, subject)
case(bargaining, of)
nmod(subject, bargaining)
cop(rate, be)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
ccomp(assume, rate)
punct(rate, ()
advmod(factor, not)
case(factor, include)
compound(factor, productivity)
compound(factor, improvement)
appos(rate, factor)
cc(cost, or)
conj(factor, cost)
case(living, -of)
punct(living, -)
compound(adjustment, living)
nmod(factor, adjustment)
punct(factor, ))
punct(rate, ,)
cc(rate, and)
nsubj(rate, it)
cop(rate, be)
det(rate, this)
amod(rate, basic)
compound(rate, wage)
conj(rate, rate)
nsubj(determine, which)
acl:relcl(rate, determine)
det(level, the)
obj(determine, level)
case(cost, of)
nmod(level, cost)
punct(assume, .)
nsubj(something, productivity)
cop(something, be)
root(ROOT, something)
case(concept, of)
det(concept, a)
amod(concept, amorphous)
nmod(something, concept)
cc(amount, and)
det(amount, the)
nsubj:pass(know, amount)
case(increase, of)
compound(increase, productivity)
nmod(amount, increase)
case(period, in)
det(period, a)
amod(period, give)
compound(period, time)
nmod(increase, period)
aux:pass(know, be)
advmod(know, not)
advmod(know, even)
advmod(know, well)
parataxis(something, know)
case(industry, to)
det(industry, the)
obl(know, industry)
punct(know, ,)
advmod(less, much)
amod(industry, less)
case(union, to)
det(union, the)
obl(less, union)
cc(public, or)
case(public, to)
det(public, the)
conj(union, public)
punct(disagreement, .)
conj(union, disagreement)
case(amount, on)
det(amount, the)
nmod(disagreement, amount)
case(increase, of)
compound(increase, productivity)
nmod(amount, increase)
acl:relcl(disagreement, exacerbate)
det(problem, the)
obj(exacerbate, problem)
mark(agree, of)
acl(problem, agree)
advmod(share, how)
det(increase, a)
nsubj:pass(share, increase)
case(margin, in)
compound(margin, profit)
nmod(increase, margin)
amod(increase, related)
case(increase, to)
det(increase, a)
compound(increase, productivity)
obl(related, increase)
aux(share, should)
aux:pass(share, be)
ccomp(agree, share)
punct(something, .)
det(existence, the)
nsubj(contradict, existence)
case(conflict, of)
nmod(existence, conflict)
cc(demand, and)
case(union, of)
amod(union, vigorous)
compound(demand, union)
nmod(existence, demand)
case(increase, for)
det(increase, a)
nmod(demand, increase)
case(money, in)
compound(wage, money)
nmod(increase, wage)
aux(contradict, do)
advmod(contradict, not)
root(ROOT, contradict)
det(assumption, the)
obj(contradict, assumption)
mark(willing, that)
det(union, the)
nsubj(willing, union)
cop(willing, be)
acl(assumption, willing)
mark(settle, to)
xcomp(willing, settle)
case(living, for)
obl(settle, cost)
punct(cost, -)
case(living, of)
punct(living, -)
nmod(cost, living)
cc(increase, and)
compound(share, productivity)
punct(share, -)
compound(increase, share)
conj(living, increase)
advmod(distinct, as)
advmod(settle, distinct)
case(increase, from)
det(increase, a)
compound(increase, cost-raising)
obl(distinct, increase)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(increase, rate)
punct(contradict, .)
nsubj(assume, we)
root(ROOT, assume)
advmod(assume, further)
mark(recognize, that)
det(union, the)
nsubj(recognize, union)
ccomp(assume, recognize)
det(possibility, the)
obj(recognize, possibility)
mark(offset, that)
compound(level, price)
punct(level, -)
compound(increase, level)
nsubj(offset, increase)
aux(offset, may)
acl(possibility, offset)
compound(rate, wage)
punct(rate, -)
compound(increase, rate)
obj(offset, increase)
punct(disregard, ,)
cc(disregard, and)
nsubj(disregard, it)
aux(disregard, do)
advmod(disregard, not)
advmod(disregard, entirely)
conj(offset, disregard)
det(effect, the)
obj(disregard, effect)
case(increase, of)
compound(increase, price)
nmod(effect, increase)
acl(increase, arise)
case(increase, from)
nmod:poss(increase, it)
case(it, 's)
amod(increase, own)
compound(increase, wage)
obl(arise, increase)
case(rate, upon)
det(rate, the)
punct(rate, ``)
amod(rate, real)
punct(rate, '')
compound(rate, wage)
nmod(increase, rate)
punct(rate, .)
case(reason, for)
amod(reason, internal)
amod(reason, political)
obl(ask, reason)
punct(ask, ,)
det(union, the)
nsubj(ask, union)
acl:relcl(rate, ask)
case(increase, for)
punct(ask, ()
cc(accept, and)
conj(ask, accept)
punct(accept, ))
obj(ask, increase)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(increase, rate)
punct(oppose, ,)
cc(oppose, and)
aux(oppose, would)
advmod(oppose, vigorously)
conj(ask, oppose)
det(reduction, a)
obj(oppose, reduction)
case(rate, in)
det(rate, this)
nmod(reduction, rate)
punct(be, ,)
cc(be, but)
det(adjustment, the)
nsubj(be, adjustment)
case(rate, of)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(adjustment, rate)
advmod(rate, upwards)
cop(discretion, be)
advmod(discretion, essentially)
case(discretion, up)
fixed(up, to)
det(discretion, the)
conj(oppose, discretion)
case(company, of)
det(company, the)
nmod(discretion, company)
case(industry, of)
det(industry, the)
nmod(company, industry)
punct(assume, .)
nsubj(cost-raising, change)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(change, rate)
aux(cost-raising, be)
root(ROOT, cost-raising)
punct(constitute, ,)
cc(constitute, and)
nsubj(constitute, they)
conj(cost-raising, constitute)
det(argument, a)
obj(constitute, argument)
mark(raise, for)
acl(argument, raise)
obj(raise, price)
punct(cost-raising, .)
advmod(know, however)
punct(know, ,)
nsubj:pass(know, it)
aux:pass(know, be)
advmod(know, not)
root(ROOT, know)
case(union, to)
cc:preconj(union, either)
det(union, the)
obl(know, union)
cc(public, or)
det(public, the)
conj(union, public)
advmod(cause, precisely)
advmod(much, how)
nsubj:pass(cause, much)
case(increase, of)
det(increase, a)
compound(increase, cost)
obl(much, increase)
aux:pass(cause, be)
ccomp(know, cause)
case(change, by)
det(change, a)
amod(change, give)
obl(cause, change)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(change, rate)
punct(cause, ,)
mark(presume, although)
det(company, the)
nsubj:pass(presume, company)
aux:pass(presume, be)
advcl(cause, presume)
mark(have, to)
xcomp(presume, have)
amod(estimate, reliable)
obj(have, estimate)
case(magnitude, of)
det(magnitude, this)
nmod(estimate, magnitude)
punct(know, .)
case(model, in)
det(model, this)
obl(presume, model)
punct(presume, ,)
advmod(presume, then)
punct(presume, ,)
det(industry, the)
nsubj:pass(presume, industry)
aux:pass(presume, be)
root(ROOT, presume)
mark(realize, to)
xcomp(presume, realize)
mark(resist, that)
nsubj(resist, they)
aux(resist, could)
advmod(resist, successfully)
ccomp(realize, resist)
det(change, a)
obj(resist, change)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
obl(resist, rate)
punct(means, ,)
cc(means, but)
mark(means, since)
det:predet(change, such)
det(change, a)
nsubj(means, change)
cop(means, be)
det(means, the)
advmod(effective, only)
amod(means, effective)
conj(resist, means)
mark(raise, to)
acl(means, raise)
obj(raise, price)
nsubj(may, they)
aux(means, may)
punct(means, ,)
case(circumstance, in)
obl(raise, circumstance)
mark(spell, to)
aux:pass(spell, be)
acl(circumstance, spell)
advmod(spell, out)
case(Part, in)
obl(spell, Part)
nummod(Part, 2)
punct(find, ,)
advmod(find, below)
punct(find, ,)
conj(spell, find)
obj(find, it)
case(advantage, to)
nmod:poss(advantage, they)
obl(find, advantage)
mark(allow, to)
acl(advantage, allow)
det(rise, the)
compound(rise, wage)
obj(allow, rise)
punct(rise, .)
advmod(change, thus)
punct(allow, ,)
case(change, for)
amod(change, non-negative)
nmod(rise, change)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(change, rate)
punct(become, ,)
det(industry, the)
nsubj(become, industry)
acl:relcl(change, become)
det(setter, the)
amod(setter, active)
compound(setter, wage)
punct(setter, -)
xcomp(become, setter)
punct(setter, ,)
mark(occur, since)
det(increase, any)
nsubj(occur, increase)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(increase, rate)
aux(occur, can)
advcl(setter, occur)
advmod(reason, only)
case(reason, by)
obl(occur, reason)
case(acquiescence, of)
compound(acquiescence, industry)
nmod(reason, acquiescence)
punct(setter, .)
det(presumption, the)
nsubj(appear, presumption)
case(literature, in)
det(literature, the)
nmod(presumption, literature)
aux(appear, would)
root(ROOT, appear)
mark(be, to)
xcomp(appear, be)
mark(unchanged, that)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nsubj:pass(unchanged, rate)
aux(unchanged, would)
aux:pass(unchanged, be)
ccomp(be, unchanged)
case(case, in)
det(case, this)
obl(unchanged, case)
punct(unchanged, ,)
case(grounds, on)
det(grounds, the)
obl(unchanged, grounds)
mark(interest, that)
nsubj(clearly, it)
cop(clearly, be)
punct(clearly, ``)
advmod(interest, clearly)
punct(interest, '')
advmod(interest, not)
case(interest, in)
det(interest, the)
acl(grounds, interest)
case(industry, of)
det(industry, the)
nmod(interest, industry)
mark(raise, to)
acl(interest, raise)
obj(raise, wage)
advmod(raise, gratuitously)
punct(appear, .)
case(presumption, from)
det(presumption, this)
obl(step, presumption)
expl(step, it)
cop(step, be)
det(step, a)
amod(step, easy)
root(ROOT, step)
case(conclusion, to)
det(conclusion, the)
nmod(step, conclusion)
mark(behavior, that)
det(increase, any)
amod(increase, observe)
nsubj(behavior, increase)
case(rate, in)
det(rate, the)
amod(rate, basic)
compound(rate, wage)
nmod(increase, rate)
aux(behavior, must)
cop(behavior, be)
case(behavior, due)
fixed(due, to)
compound(behavior, union)
acl(conclusion, behavior)
amod(behavior, different)
cc(aggressive, and)
advmod(aggressive, more)
conj(different, aggressive)
mark(assume, than)
advcl(aggressive, assume)
case(model, in)
nmod:poss(model, we)
obl(assume, model)
punct(step, .)
nsubj(conclusion, it)
cop(conclusion, be)
det(conclusion, this)
root(ROOT, conclusion)
obj(challenge, that)
nsubj(challenge, we)
acl:relcl(conclusion, challenge)
punct(conclusion, ;)
punct(conclusion, ;)
nsubj(do, we)
parataxis(conclusion, do)
advmod(do, so)
mark(disprove, by)
advcl(do, disprove)
det(presumption, the)
obj(disprove, presumption)
case(which, on)
obl(base, which)
nsubj:pass(base, it)
aux:pass(base, be)
acl:relcl(presumption, base)
punct(conclusion, . )
nummod(convenient, 2)
punct(convenient, ,)
det(operation, the)
nsubj(convenient, operation)
case(model, of)
det(model, the)
nmod(operation, model)
expl(convenient, it)
cop(convenient, be)
root(ROOT, convenient)
mark(assume, to)
csubj(convenient, assume)
mark(duration, that)
det(contract, the)
compound(industry, union)
punct(industry, -)
compound(contract, industry)
nsubj(duration, contract)
cop(duration, be)
case(duration, of)
nummod(year, one)
nmod:poss(duration, year)
case(year, 's)
ccomp(assume, duration)
punct(convenient, .)
case(century, in)
det(century, the)
obl(become, century)
case(1815, from)
nmod(century, 1815)
case(1914, to)
nmod(1815, 1914)
det(law, the)
nsubj(become, law)
case(nation, of)
nmod(law, nation)
root(ROOT, become)
amod(law, international)
xcomp(become, law)
punct(become, .)
amod(factor, several)
nsubj(contribute, factor)
root(ROOT, contribute)
case(change, to)
det(change, this)
obl(contribute, change)
punct(contribute, .)
det(Congress, the)
nsubj(point, Congress)
case(Vienna, of)
nmod(Congress, Vienna)
cop(point, be)
det(point, a)
amod(point, convenient)
compound(point, starting)
root(ROOT, point)
mark(epitomize, because)
nsubj(epitomize, it)
det(it, both)
advcl(point, epitomize)
cc(symbolize, and)
conj(epitomize, symbolize)
nsubj(be, what)
ccomp(symbolize, be)
mark(follow, to)
xcomp(be, follow)
punct(point, .)
root(ROOT, here)
case(1815, in)
obl(here, 1815)
det(nation, the)
amod(nation, great)
nsubj(here, nation)
acl(nation, assemble)
mark(legislate, to)
xcomp(assemble, legislate)
advmod(merely, not)
cc:preconj(Europe, merely)
case(Europe, for)
obl(legislate, Europe)
punct(world, ,)
cc(world, but)
case(world, for)
det(world, the)
conj(Europe, world)
punct(here, .)
advmod(mark, thus)
det(Congress, the)
nsubj(mark, Congress)
root(ROOT, mark)
det(recognition, a)
amod(recognition, formal)
obj(mark, recognition)
case(system, of)
det(system, the)
amod(system, political)
nmod(recognition, system)
nsubj(central, that)
cop(central, be)
acl:relcl(system, central)
case(politics, to)
compound(politics, world)
obl(central, politics)
case(century, for)
det(century, a)
obl(central, century)
punct(mark, .)
amod(law, international)
nsubj(have, law)
root(ROOT, have)
mark(fit, to)
xcomp(have, fit)
det(condition, the)
obj(fit, condition)
case(Europe, of)
nmod(condition, Europe)
punct(emerge, ,)
cc(emerge, and)
nsubj(emerge, nothing)
nsubj(fit, that)
aux(fit, could)
advmod(fit, not)
acl:relcl(nothing, fit)
det(system, this)
obj(fit, system)
punct(interest, ,)
cc(interest, or)
det(interest, the)
conj(nothing, interest)
case(nation, of)
det(nation, the)
amod(nation, great)
amod(nation, european)
nmod(interest, nation)
advmod(emerge, collectively)
punct(emerge, ,)
aux(emerge, could)
advmod(emerge, possibly)
conj(have, emerge)
case(law, as)
obl(emerge, law)
case(sense, in)
det(sense, any)
amod(sense, meaningful)
obl(emerge, sense)
punct(have, .)
advmod(impose, essentially)
nsubj(impose, this)
root(ROOT, impose)
nummod(condition, two)
obj(impose, condition)
punct(impose, :)
advmod(have, first)
punct(have, ,)
amod(law, international)
nsubj(have, law)
root(ROOT, have)
mark(recognize, to)
xcomp(have, recognize)
cc(compatible, and)
cop(compatible, be)
conj(recognize, compatible)
case(system, with)
det(system, a)
amod(system, international)
amod(system, political)
obl(compatible, system)
case(which, in)
obl(competitive, which)
det(number, a)
nsubj(competitive, number)
case(state, of)
nmod(number, state)
cop(competitive, be)
acl:relcl(system, competitive)
punct(suspicious, ,)
conj(competitive, suspicious)
punct(opportunistic, ,)
cc(opportunistic, and)
conj(competitive, opportunistic)
case(alignment, in)
nmod:poss(alignment, they)
amod(alignment, political)
obl(opportunistic, alignment)
case(another, with)
nummod(another, one)
nmod(alignment, another)
punct(have, ;)
punct(have, ;)
advmod(have, second)
punct(have, ,)
nsubj(have, it)
parataxis(have, have)
mark(compatible, to)
aux:pass(compatible, be)
xcomp(have, compatible)
case(system, with)
det(system, the)
compound(system, value)
obl(compatible, system)
obj(share, that)
nsubj(share, they)
acl:relcl(system, share)
punct(have, .)
case(respects, in)
det(respects, both)
obl(europeanize, respects)
punct(europeanize, ,)
amod(law, international)
nsubj(europeanize, law)
cop(europeanize, be)
root(ROOT, europeanize)
punct(europeanize, .)
expl(easy, it)
cop(easy, be)
advmod(easy, not)
advmod(easy, always)
root(ROOT, easy)
mark(develop, to)
csubj(easy, develop)
obj(develop, theory)
cc(doctrine, and)
conj(theory, doctrine)
nsubj(square, which)
aux(square, would)
acl:relcl(theory, square)
det(condition, the)
nummod(condition, two)
obj(square, condition)
punct(easy, .)
case(hand, on)
det(hand, the)
nummod(hand, one)
obl(have, hand)
punct(have, ,)
det(nation, the)
amod(nation, major)
amod(nation, european)
nsubj(have, nation)
root(ROOT, have)
mark(maintain, to)
xcomp(have, maintain)
obj(maintain, vis-a-vis)
det(other, each)
obj(maintain, other)
det(emphasis, a)
obj(maintain, emphasis)
case(sovereignty, upon)
nmod(emphasis, sovereignty)
punct(independence, ,)
conj(sovereignty, independence)
punct(equality, ,)
amod(equality, formal)
conj(sovereignty, equality)
punct(maintain, --)
advmod(insure, thus)
conj(maintain, insure)
case(themselves, for)
obl(insure, themselves)
advmod(insure, individually)
det(freedom, a)
amod(freedom, optimal)
obj(insure, freedom)
case(action, of)
nmod(freedom, action)
mark(maintain, to)
acl(freedom, maintain)
det(flexibility, the)
punct(flexibility, ``)
obj(maintain, flexibility)
case(alignment, of)
nmod(flexibility, alignment)
punct(flexibility, '')
mark(require, that)
det(system, the)
nsubj(require, system)
acl:relcl(flexibility, require)
cc(avoid, and)
mark(avoid, to)
conj(require, avoid)
obj(avoid, anything)
acl(anything, approach)
det(repetition, a)
obj(approach, repetition)
case(experience, of)
det(experience, the)
amod(experience, disastrous)
amod(experience, napoleonic)
nmod(repetition, experience)
punct(have, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
det(need, no)
compound(need, press)
nsubj(be, need)
mark(maintain, to)
acl(need, maintain)
det(standard, these)
amod(standard, same)
obj(maintain, standard)
case(regard, with)
obl(maintain, regard)
case(most, to)
nmod(regard, most)
case(rest, of)
det(rest, the)
nmod(most, rest)
case(world, of)
det(world, the)
nmod(rest, world)
punct(theory, .)
advmod(theory, thus)
punct(theory, ,)
parataxis(be, theory)
cc(doctrine, and)
conj(theory, doctrine)
amod(theory, applicable)
case(nation, among)
det(nation, the)
amod(nation, great)
obl(applicable, nation)
cc(state, and)
det(state, the)
amod(state, smaller)
amod(state, european)
nsubj(fit, state)
aux(fit, do)
advmod(fit, not)
advmod(fit, really)
advmod(fit, comfortably)
parataxis(theory, fit)
advmod(develop, less)
xcomp(fit, develop)
cc(powerful, and)
advmod(powerful, less)
amod(society, powerful)
obj(fit, society)
advmod(society, elsewhere)
punct(interference, .)
amod(interference, political)
appos(society, interference)
case(Africa, in)
nmod(interference, Africa)
cc(Asia, and)
conj(Africa, Asia)
cc(America, and)
advmod(America, even)
case(America, in)
compound(America, Latin)
conj(Africa, America)
punct(limit, ()
mark(limit, though)
acl(America, limit)
case(America, in)
compound(America, Latin)
obl(limit, America)
case(interest, by)
det(interest, the)
amod(interest, special)
obl(limit, interest)
case(States, of)
det(States, the)
compound(States, United)
nmod(interest, States)
mark(express, as)
acl(interest, express)
case(Doctrine, in)
det(Doctrine, the)
compound(Doctrine, Monroe)
obl(express, Doctrine)
punct(Doctrine, ,)
nmod:npmod(Doctrine, itself)
case(outset, from)
det(outset, the)
obl(express, outset)
amod(outset, related)
case(politics, to)
amod(politics, european)
obl(related, politics)
cc(dependent, and)
advmod(dependent, long)
conj(related, dependent)
case(balance, upon)
det(balance, the)
punct(balance, ``)
obl(dependent, balance)
case(system, of)
compound(system, power)
punct(system, '')
nmod(balance, system)
case(Europe, in)
nmod(system, Europe)
punct(necessary, ))
cop(necessary, be)
parataxis(dependent, necessary)
mark(preserve, in)
fixed(in, order)
mark(preserve, to)
advcl(necessary, preserve)
cc:preconj(value, both)
amod(value, common)
amod(value, economic)
obj(preserve, value)
cc(balance, and)
det(balance, the)
amod(balance, european)
punct(balance, ``)
conj(value, balance)
punct(balance, '')
nmod:npmod(balance, itself)
punct(be, . )
det(nation, a)
root(ROOT, nation)
mark(neutralize, such)
fixed(such, as)
nsubj:pass(neutralize, Switzerland)
aux(neutralize, could)
aux:pass(neutralize, be)
acl(nation, neutralize)
case(agreement, by)
obl(neutralize, agreement)
cc(rely, and)
aux(rely, could)
aux:pass(rely, be)
conj(neutralize, rely)
mark(protect, upon)
mark(protect, to)
advcl(rely, protect)
nmod:poss(neutrality, its)
obj(protect, neutrality)
punct(protect, ;)
punct(doubtful, ;)
advmod(doubtful, more)
parataxis(protect, doubtful)
punct(possible, ,)
cc(possible, but)
conj(doubtful, possible)
punct(assist, ,)
punct(assist, ()
case(assist, with)
det(assist, a)
nmod(neutralization, assist)
case(North, from)
det(North, the)
nmod(assist, North)
punct(assist, ))
cop(neutralization, be)
det(neutralization, the)
ccomp(possible, neutralization)
case(country, of)
det(country, the)
amod(country, latin)
amod(country, american)
nmod(neutralization, country)
punct(neutralization, ;)
punct(neutralization, ;)
case(question, out)
case(question, of)
det(question, the)
obl(neutralization, question)
cop(neutralization, be)
det(neutralization, the)
parataxis(neutralization, neutralization)
case(Asia, of)
nmod(neutralization, Asia)
cc(Africa, and)
conj(Asia, Africa)
punct(neutralization, .)
det(Europeanization, this)
nsubj:pass(make, Europeanization)
case(law, of)
det(law, the)
nmod(Europeanization, law)
aux:pass(make, be)
parataxis(neutralization, make)
xcomp(make, explicit)
case(number, by)
det(number, a)
obl(explicit, number)
case(scholar, of)
amod(century, 19th)
compound(scholar, century)
nmod(number, scholar)
punct(make, .)
amod(emphasis, more)
nsubj:pass(put, emphasis)
aux:pass(put, be)
root(ROOT, put)
case(fact, upon)
det(fact, the)
obl(put, fact)
mark(law, that)
amod(law, international)
nsubj(law, law)
cop(law, be)
det(law, the)
acl(fact, law)
case(nation, of)
punct(nation, ``)
amod(nation, civilized)
nmod(law, nation)
punct(nation, '')
punct(put, ;)
punct(put, ;)
appos(law, Kent)
cc(Story, and)
conj(Kent, Story)
punct(scholar, ,)
det(scholar, the)
amod(scholar, great)
amod(scholar, early)
amod(scholar, american)
appos(Kent, scholar)
punct(scholar, ,)
advmod(make, repeatedly)
acl:relcl(scholar, make)
obj(make, use)
case(phrase, of)
det(phrase, this)
nmod(use, phrase)
punct(nation, ,)
cc(nation, or)
case(nation, of)
punct(nation, ``)
compound(nation, Christian)
conj(phrase, nation)
punct(nation, '')
punct(nation, ,)
nsubj(equivalent, which)
cop(equivalent, be)
det(equivalent, a)
amod(equivalent, substantial)
acl:relcl(nation, equivalent)
punct(state, .)
nsubj(state, Wheaton)
ccomp(put, state)
mark(limit, that)
det(law, the)
amod(law, public)
nsubj:pass(limit, law)
aux:pass(limit, be)
advmod(limit, essentially)
punct(limit, ``)
ccomp(state, limit)
case(people, to)
det(people, the)
amod(people, civilized)
cc(christian, and)
conj(civilized, christian)
obl(limit, people)
case(Europe, of)
nmod(people, Europe)
cc(those, or)
case(those, to)
conj(people, those)
case(origin, of)
amod(origin, european)
nmod(those, origin)
punct(those, '')
punct(put, .)
advmod(origin, of)
fixed(of, course)
nsubj(origin, it)
aux(origin, have)
advmod(origin, always)
cop(origin, be)
case(origin, of)
amod(origin, european)
root(ROOT, origin)
case(fact, in)
obl(origin, fact)
punct(maintain, ,)
cc(maintain, but)
nsubj(maintain, it)
aux(maintain, have)
conj(origin, maintain)
det(outlook, a)
amod(outlook, universal)
obj(maintain, outlook)
case(theory, under)
det(theory, the)
amod(theory, natural)
compound(theory, law)
nmod(outlook, theory)
punct(outlook, .)
advmod(maintain, now)
punct(maintain, ,)
case(writer, with)
advmod(writer, virtually)
det(writer, every)
obl(maintain, writer)
punct(writer, ,)
advmod(only, not)
cc:preconj(origin, only)
cop(origin, be)
det(origin, the)
amod(origin, european)
conj(writer, origin)
case(law, of)
amod(law, public)
nmod(origin, law)
acl(origin, acknowledge)
case(phenomenon, as)
det(phenomenon, a)
amod(phenomenon, historical)
obl(acknowledge, phenomenon)
punct(be, ,)
cc(be, but)
det(rule, the)
nsubj(be, rule)
advmod(establish, thus)
acl(rule, establish)
case(civilization, by)
det(civilization, the)
amod(civilization, advanced)
obl(establish, civilization)
case(Europe, of)
nmod(civilization, Europe)
acl:relcl(origin, be)
mark(impose, to)
aux:pass(impose, be)
xcomp(be, impose)
case(other, on)
obl(impose, other)
punct(origin, .)
det(custom, the)
amod(custom, european)
nsubj(be, custom)
case(which, on)
obl(base, which)
amod(law, international)
nsubj:pass(base, law)
aux:pass(base, be)
acl:relcl(custom, base)
root(ROOT, be)
mark(become, to)
ccomp(be, become)
punct(become, ,)
case(force, by)
obl(become, force)
cc(fiat, and)
conj(force, fiat)
punct(become, ,)
det(custom, the)
nsubj(be, custom)
obj(be, that)
nsubj(be, other)
acl:relcl(custom, be)
mark(accept, to)
xcomp(be, accept)
case(law, as)
obl(accept, law)
mark(be, if)
nsubj(be, they)
advcl(accept, be)
mark(join, to)
xcomp(be, join)
det(community, this)
obj(join, community)
case(state, as)
amod(state, sovereign)
obl(join, state)
punct(be, .)
nsubj(explicit, Hall)
punct(explicit, ,)
case(example, for)
obl(explicit, example)
punct(explicit, ,)
cop(explicit, be)
advmod(explicit, quite)
root(ROOT, explicit)
case(point, on)
det(point, this)
obl(explicit, point)
mark(say, when)
nsubj(say, he)
advcl(explicit, say)
nsubj(enter, state)
case(civilization, outside)
amod(civilization, european)
nmod(state, civilization)
aux(enter, must)
advmod(enter, formally)
ccomp(say, enter)
case(circle, into)
det(circle, the)
obl(enter, circle)
case(country, of)
obl:npmod(govern, law)
punct(govern, -)
amod(country, govern)
nmod(circle, country)
punct(explicit, .)
nsubj(do, they)
aux(do, must)
root(ROOT, do)
obj(do, something)
case(acquiescence, with)
det(acquiescence, the)
nmod(something, acquiescence)
case(latter, of)
det(latter, the)
nmod(acquiescence, latter)
punct(some, ,)
cc(some, or)
conj(acquiescence, some)
case(they, of)
nmod(some, they)
punct(some, ,)
nsubj(amount, which)
acl:relcl(some, amount)
case(acceptance, to)
det(acceptance, a)
obl(amount, acceptance)
case(law, of)
det(law, the)
nmod(acceptance, law)
case(entirety, in)
nmod:poss(entirety, its)
nmod(acceptance, entirety)
case(possibility, beyond)
det(possibility, all)
nmod(entirety, possibility)
case(misconstruction, of)
nmod(possibility, misconstruction)
punct(possibility, '')
punct(protest, .)
case(century, during)
det(century, the)
amod(century, nineteenth)
obl(protest, century)
det(view, these)
nsubj:pass(protest, view)
aux:pass(protest, be)
parataxis(do, protest)
case(writer, by)
advmod(writer, virtually)
det:predet(writer, all)
det(writer, the)
amod(writer, latin)
amod(writer, american)
obl(protest, writer)
punct(writer, ,)
advmod(ineffectively, though)
advmod(protest, ineffectively)
punct(protest, ,)
advmod(protest, just)
mark(protest, as)
det(nation, the)
amod(nation, new)
nsubj(protest, nation)
case(Africa, of)
nmod(nation, Africa)
cc(Asia, and)
conj(Africa, Asia)
advcl(protest, protest)
obj(protest, they)
punct(protest, ,)
case(effect, with)
amod(effect, more)
obl(protest, effect)
punct(effect, ,)
obl:tmod(protest, today)
punct(do, . )
det(number, a)
root(ROOT, number)
case(development, of)
amod(development, other)
amod(century, nineteenth)
punct(century, -)
compound(development, century)
nmod(number, development)
acl(development, contribute)
case(transmutation, to)
det(transmutation, the)
obl(contribute, transmutation)
case(law, of)
det(law, the)
nmod(transmutation, law)
case(nation, of)
nmod(law, nation)
case(law, into)
amod(law, international)
nmod(law, law)
punct(number, ;)
punct(be, ;)
nsubj(be, that)
cop(aspect, be)
punct(aspect, ,)
case(aspect, from)
nmod(number, aspect)
case(system, of)
det(system, a)
amod(system, universal)
nmod(aspect, system)
case(justice, of)
nmod(system, justice)
case(rule, into)
amod(rule, particular)
nmod(system, rule)
acl(system, govern)
det(relation, the)
obj(govern, relation)
case(state, of)
amod(state, sovereign)
nmod(relation, state)
punct(be, .)
det(difference, the)
nsubj(important, difference)
cop(important, be)
root(ROOT, important)
punct(important, ,)
mark(cover, for)
mark(cover, although)
det(law, the)
amod(law, older)
nsubj(cover, law)
case(nation, of)
nmod(law, nation)
aux(cover, do)
advcl(important, cover)
obj(cover, relationship)
case(sovereign, among)
nmod(relationship, sovereign)
punct(important, ,)
nsubj(means, this)
cop(means, be)
case(means, by)
det(means, no)
parataxis(important, means)
nmod:poss(domain, its)
amod(domain, exclusive)
obj(means, domain)
punct(important, .)
det(law, the)
root(ROOT, law)
case(nature, of)
nmod(law, nature)
acl(law, govern)
obj(govern, sovereign)
case(relationship, in)
nmod:poss(relationship, they)
obl(govern, relationship)
case(citizen, to)
nmod:poss(citizen, they)
amod(citizen, own)
nmod(relationship, citizen)
punct(foreigner, ,)
case(foreigner, to)
nmod(relationship, foreigner)
punct(other, ,)
cc(other, and)
case(other, to)
det(other, each)
conj(foreigner, other)
case(system, in)
det(system, a)
advmod(unified, conceptually)
amod(system, unified)
nmod(other, system)
punct(law, .)
det(theory, the)
nsubj(break, theory)
case(law, of)
amod(law, international)
nmod(theory, law)
punct(law, ,)
nsubj(become, which)
case(century, in)
det(century, the)
amod(century, nineteenth)
obl(become, century)
root(ROOT, become)
xcomp(become, common)
case(writer, to)
advmod(writer, virtually)
det(writer, all)
obl(common, writer)
case(Europe, in)
nmod(writer, Europe)
cc(America, and)
conj(Europe, America)
punct(break, ,)
conj(common, break)
det(unity, this)
obj(break, unity)
cc(universality, and)
det(universality, this)
conj(unity, universality)
punct(break, .)
nsubj(lose, it)
root(ROOT, lose)
obj(lose, sight)
case(individual, of)
det(individual, the)
nmod(sight, individual)
advmod(entirely, almost)
advmod(lose, entirely)
cc(confine, and)
conj(lose, confine)
obj(confine, itself)
case(rule, to)
obl(confine, rule)
advcl(confine, limiting)
det(exercise, the)
obj(limiting, exercise)
case(power, of)
compound(power, state)
nmod(exercise, power)
case(reason, for)
obl(limiting, reason)
advmod(unconnected, essentially)
amod(reason, unconnected)
case(justice, with)
obl(unconnected, justice)
cc(save, or)
compound(save, morality)
conj(justice, save)
mark(affect, as)
det(value, these)
nsubj(affect, value)
aux(affect, might)
advcl(unconnected, affect)
amod(relation, international)
obj(affect, relation)
punct(lose, .)
advmod(longer, no)
advmod(look, longer)
aux(look, do)
det(sovereign, the)
nsubj(look, sovereign)
root(ROOT, look)
case(law, to)
det(law, the)
obl(look, law)
case(nation, of)
nmod(law, nation)
mark(determine, to)
advcl(look, determine)
obj(determine, what)
nsubj(ought, he)
acl:relcl(what, ought)
mark(do, to)
xcomp(ought, do)
punct(look, ;)
punct(look, ;)
nmod:poss(search, he)
nsubj(rule, search)
cop(rule, be)
advmod(rule, merely)
case(rule, for)
parataxis(look, rule)
nsubj(limit, that)
aux(limit, might)
acl:relcl(rule, limit)
nmod:poss(freedom, he)
obj(limit, freedom)
case(action, of)
nmod(freedom, action)
punct(look, .)
mark(appreciate, to)
advcl(relate, appreciate)
det(development, this)
obj(appreciate, development)
punct(relate, ,)
nsubj(relate, we)
aux(relate, must)
root(ROOT, relate)
obj(relate, it)
case(aspect, to)
amod(aspect, other)
obl(relate, aspect)
case(philosophy, of)
amod(century, nineteenth)
punct(century, -)
compound(philosophy, century)
nmod(aspect, philosophy)
punct(relate, .)
advmod(obvious, first)
punct(obvious, ,)
cc(obvious, and)
advmod(obvious, most)
amod(nationalism, obvious)
punct(nationalism, ,)
cop(nationalism, be)
det(nationalism, the)
amod(nationalism, grow)
root(ROOT, nationalism)
cc(tendency, and)
det(tendency, the)
conj(nationalism, tendency)
mark(regard, to)
acl(tendency, regard)
det(state, the)
obj(regard, state)
punct(identification, ,)
cc(identification, and)
det(individual, the)
nmod:poss(identification, individual)
case(individual, 's)
conj(state, identification)
case(state, with)
det(state, the)
nmod(identification, state)
punct(identification, ,)
mark(transcend, as)
advcl(regard, transcend)
amod(tie, other)
obj(transcend, tie)
case(solidarity, of)
amod(solidarity, social)
nmod(tie, solidarity)
punct(nationalism, .)
amod(identification, national)
nsubj(new, identification)
cop(new, be)
advmod(new, not)
root(ROOT, new)
punct(accelerate, ,)
cc(accelerate, but)
nsubj(accelerate, it)
aux(accelerate, be)
conj(new, accelerate)
case(intensity, in)
obl(accelerate, intensity)
cc(scope, and)
conj(intensity, scope)
case(Europe, throughout)
obl(accelerate, Europe)
mark(occur, as)
amod(unification, new)
nsubj(occur, unification)
advcl(accelerate, occur)
punct(new, .)
nsubj(reach, it)
root(ROOT, reach)
nmod:poss(statement, its)
amod(statement, ultimate)
amod(statement, philosophical)
obj(reach, statement)
case(notion, in)
nmod(statement, notion)
case(state, of)
punct(state, ``)
nsubj(will, state)
aux(put, will)
punct(put, '')
ccomp(reach, put)
advmod(put, forward)
case(Germans, by)
det(Germans, the)
obl(put, Germans)
punct(put, ,)
advmod(Hegel, especially)
case(Hegel, by)
obl(put, Hegel)
punct(put, ,)
mark(recognize, although)
amod(philosopher, political)
nsubj(recognize, philosopher)
aux(recognize, will)
advcl(put, recognize)
nmod:poss(origin, its)
obj(recognize, origin)
case(doctrine, in)
det(doctrine, the)
amod(doctrine, reject)
nmod(origin, doctrine)
case(Hobbes, of)
nmod(doctrine, Hobbes)
punct(reflect, .)
amod(identification, national)
nsubj:pass(reflect, identification)
aux:pass(reflect, be)
acl:relcl(doctrine, reflect)
advmod(reflect, jurisprudentially)
case(theory, in)
compound(theory, law)
obl(reflect, theory)
nsubj(incorporate, which)
acl:relcl(theory, incorporate)
det(abstraction, this)
amod(abstraction, hegelian)
obj(incorporate, abstraction)
cc(see, and)
conj(incorporate, see)
obj(see, law)
punct(domestic, ,)
conj(law, domestic)
cc(international, and)
conj(law, international)
punct(see, ,)
advmod(reflection, simply)
case(reflection, as)
nmod:poss(reflection, its)
amod(reflection, formal)
obl(see, reflection)
punct(reach, .)
case(community, in)
det(community, the)
amod(community, international)
nmod(law, community)
det(law, this)
amod(law, reduce)
root(ROOT, law)
case(auto-limitation, to)
nmod:poss(auto-limitation, Jellinek)
case(Jellinek, 's)
nmod(law, auto-limitation)
punct(law, . )
det(state, a)
nsubj:pass(subject, state)
punct(state, ,)
det(form, the)
amod(form, highest)
appos(state, form)
case(organization, of)
amod(organization, human)
nmod(form, organization)
case(fact, in)
nmod(form, fact)
cc(theory, and)
conj(fact, theory)
punct(subject, ,)
aux(subject, could)
aux:pass(subject, be)
root(ROOT, subject)
case(law, to)
obl(subject, law)
advmod(manifestation, only)
case(manifestation, by)
det(manifestation, a)
obl(subject, manifestation)
case(will, of)
compound(will, self)
punct(will, -)
nmod(manifestation, will)
punct(consent, ,)
cc(consent, or)
conj(will, consent)
punct(will, .)
case(theory, accord)
fixed(accord, to)
det(theory, the)
amod(theory, new)
nmod(manifestation, theory)
punct(sovereign, ,)
det(sovereign, the)
amod(century, nineteenth)
compound(sovereign, century)
amod(sovereign, corporate)
nsubj(sovereign, sovereign)
cop(sovereign, be)
punct(sovereign, ``)
acl:relcl(theory, sovereign)
punct(sovereign, '')
case(sense, in)
det(sense, a)
amod(sense, quite)
amod(sense, new)
cc(different, and)
conj(new, different)
nmod(sovereign, sense)
case(predecessor, from)
nmod:poss(predecessor, he)
amod(predecessor, historical)
nmod(sense, predecessor)
punct(subject, .)
nsubj(seek, he)
advmod(longer, no)
advmod(seek, longer)
root(ROOT, seek)
mark(find, to)
xcomp(seek, find)
det(law, the)
obj(find, law)
punct(seek, ;)
punct(seek, ;)
nsubj(make, he)
parataxis(seek, make)
obj(make, it)
punct(seek, ;)
punct(seek, ;)
nsubj:pass(subject, he)
aux(subject, could)
aux:pass(subject, be)
parataxis(seek, subject)
case(law, to)
obl(subject, law)
advmod(subject, only)
mark(agree, because)
nsubj(agree, he)
advcl(subject, agree)
mark(be, to)
xcomp(agree, be)
punct(seek, .)
expl(be, there)
root(ROOT, be)
det(law, no)
nsubj(be, law)
punct(domestic, ,)
conj(law, domestic)
cc(international, or)
conj(law, international)
punct(law, ,)
case(that, except)
nmod(law, that)
acl(law, will)
obl(will, by)
punct(acknowledge, ,)
conj(will, acknowledge)
obl(acknowledge, by)
punct(consent, ,)
cc(consent, or)
conj(acknowledge, consent)
obl(consent, to)
case(state, by)
obl(consent, state)
punct(be, .)
csubj(reason, hide)
case(abstraction, behind)
amod(abstraction, hegelian)
obl(hide, abstraction)
cop(reason, be)
advmod(practical, more)
amod(reason, practical)
root(ROOT, reason)
case(jurisprudence, for)
det(jurisprudence, a)
compound(jurisprudence, changing)
nmod(reason, jurisprudence)
punct(reason, .)
advcl(growth, related)
obl(related, to)
punct(growth, ,)
cc(distinguishable, but)
conj(related, distinguishable)
obl(distinguishable, from)
punct(growth, ,)
nsubj(growth, nationalism)
cop(growth, be)
det(growth, the)
root(ROOT, growth)
case(democracy, of)
nmod(growth, democracy)
case(form, in)
nummod(form, one)
nmod(growth, form)
cc(another, or)
conj(form, another)
punct(growth, .)
amod(participation, increase)
nsubj(have, participation)
case(politics, in)
nmod(participation, politics)
cc(demand, and)
det(demand, the)
conj(participation, demand)
case(group, of)
amod(group, various)
nmod(demand, group)
case(status, for)
nmod(group, status)
cc(recognition, and)
conj(status, recognition)
root(ROOT, have)
amod(effect, dramatic)
obj(have, effect)
case(institution, upon)
compound(institution, law)
nmod(effect, institution)
punct(have, .)
det(effort, the)
nsubj(lead, effort)
case(group, of)
amod(group, various)
compound(group, interest)
nmod(effort, group)
mark(control, to)
acl(group, control)
cc(influence, or)
conj(control, influence)
amod(decision, governmental)
obj(control, decision)
punct(control, ,)
advmod(take, particularly)
mark(take, when)
advcl(control, take)
case(conjunction, in)
obl(take, conjunction)
case(impact, with)
det(impact, the)
obl(take, impact)
case(industralization, of)
nmod(impact, industralization)
punct(lead, ,)
root(ROOT, lead)
case(concentration, to)
det(concentration, a)
obl(lead, concentration)
case(attention, of)
nmod(concentration, attention)
case(power, on)
det(power, the)
amod(power, legislative)
nmod(concentration, power)
cc(means, and)
det(means, the)
conj(concentration, means)
mark(formulate, whereby)
nsubj:pass(formulate, policy)
aux(formulate, could)
aux:pass(formulate, be)
acl(means, formulate)
cc(enforce, and)
conj(formulate, enforce)
case(law, as)
obl(enforce, law)
case(institution, through)
amod(institution, bureaucratic)
obl(enforce, institution)
punct(lead, .)
nsubj(become, law)
root(ROOT, become)
det(process, a)
amod(process, conscious)
xcomp(become, process)
punct(process, ,)
appos(process, something)
amod(something, more)
mark(do, than)
advmod(do, simply)
advcl(more, do)
obj(do, justice)
cc(look, and)
conj(do, look)
case(custom, to)
amod(custom, local)
obl(look, custom)
cc(morality, and)
det(morality, a)
amod(morality, common)
conj(custom, morality)
case(norm, for)
amod(norm, applicable)
nmod(morality, norm)
punct(process, .)
advmod(true, particularly)
cop(true, be)
nsubj(true, this)
root(ROOT, true)
mark(apply, when)
det(norm, the)
nsubj(apply, norm)
advmod(apply, previously)
advcl(satisfactory, apply)
cop(satisfactory, be)
advmod(longer, no)
advmod(satisfactory, longer)
ccomp(true, satisfactory)
case(many, to)
obl(satisfactory, many)
punct(satisfactory, ,)
mark(change, when)
nsubj(change, custom)
aux(change, be)
advmod(change, rapidly)
advcl(satisfactory, change)
mark(harness, as)
det(force, the)
nsubj:pass(harness, force)
case(productivity, of)
det(productivity, the)
amod(productivity, new)
nmod(force, productivity)
aux:pass(harness, be)
advcl(change, harness)
punct(true, .)
det(way, the)
amod(way, old)
nsubj(adequate, way)
mark(do, of)
acl(way, do)
obj(do, thing)
punct(thing, ,)
nsubj(depend, which)
acl:relcl(thing, depend)
case(community, on)
det(community, a)
advmod(stable, relatively)
amod(community, stable)
obl(depend, community)
case(idea, with)
amod(idea, stable)
nmod(community, idea)
acl(idea, deal)
case(situation, with)
amod(situation, familiar)
obl(deal, situation)
punct(adequate, ,)
cop(adequate, be)
advmod(longer, no)
advmod(adequate, longer)
root(ROOT, adequate)
case(task, to)
det(task, the)
obl(adequate, task)
punct(adequate, .)
advmod(period, first)
cop(period, be)
det(period, the)
parataxis(adequate, period)
case(codification, of)
nmod(period, codification)
mark(exist, of)
acl(codification, exist)
obj(exist, law)
punct(period, :)
det(Napoleon, the)
compound(Napoleon, code)
appos(period, Napoleon)
case(France, in)
nmod(Napoleon, France)
cc(codification, and)
det(codification, the)
amod(codification, peculiar)
conj(Napoleon, codification)
nsubj(result, that)
punct(result, ,)
case(fact, in)
obl(result, fact)
punct(result, ,)
acl:relcl(codification, result)
case(restatement, from)
nmod:poss(restatement, Austin)
case(Austin, 's)
obl(result, restatement)
cc(ordering, and)
conj(restatement, ordering)
case(Law, of)
det(Law, the)
compound(Law, common)
nmod(ordering, Law)
case(England, in)
nmod(restatement, England)
punct(period, .)
nsubj:pass(follow, codification)
aux:pass(follow, be)
root(ROOT, follow)
case(country, in)
det(country, all)
obl(follow, country)
case(amount, by)
det(amount, a)
amod(amount, grow)
obl(follow, amount)
case(legislation, of)
nmod(amount, legislation)
punct(changing, ,)
det(changing, some)
appos(legislation, changing)
cc(adjust, and)
conj(follow, adjust)
det(law, the)
amod(law, older)
obj(adjust, law)
punct(adjust, ,)
advmod(deal, much)
advcl(adjust, deal)
case(situation, with)
advmod(new, entirely)
amod(situation, new)
obl(deal, situation)
punct(follow, .)
det(mill, the)
amod(mill, legislative)
nsubj(grind, mill)
aux(grind, have)
aux(grind, be)
root(ROOT, grind)
advmod(grind, ever)
advmod(grind, since)
punct(delegate, ,)
cc(delegate, and)
mark(adequate, when)
nmod:poss(process, its)
amod(process, cumbersome)
nsubj(adequate, process)
cop(adequate, be)
advmod(longer, no)
advmod(adequate, longer)
advcl(delegate, adequate)
case(task, to)
det(task, the)
obl(adequate, task)
punct(delegate, ,)
det(authority, a)
amod(authority, limited)
amod(authority, legislative)
nsubj:pass(delegate, authority)
aux:pass(delegate, be)
conj(grind, delegate)
case(form, in)
nummod(form, one)
obl(delegate, form)
cc(another, or)
conj(form, another)
punct(delegate, ,)
case(executive, to)
det(executive, the)
nmod(form, executive)
punct(delegate, .)
mark(time, whereas)
det(century, the)
amod(century, eighteenth)
nsubj(time, century)
aux(time, have)
cop(time, be)
det(time, a)
advcl(delegate, time)
case(man, in)
det(man, which)
nsubj(seek, man)
acl:relcl(time, seek)
obj(seek, justice)
punct(century, ,)
det(nineteenth, the)
nsubj(century, nineteenth)
cc(twentieth, and)
conj(nineteenth, twentieth)
aux(century, have)
cop(century, be)
conj(seek, century)
case(man, in)
det(man, which)
nsubj(satisfied, man)
cop(satisfied, be)
conj(century, satisfied)
case(law, with)
obl(satisfied, law)
punct(grind, .)
advmod(become, indeed)
punct(become, ,)
case(positivism, with)
amod(positivism, develop)
obl(become, positivism)
punct(become, ,)
det(separation, the)
nsubj(become, separation)
case(law, of)
nmod(separation, law)
case(justice, from)
nmod(law, justice)
punct(morality, ,)
cc(morality, or)
case(morality, from)
conj(justice, morality)
advmod(morality, generally)
punct(become, ,)
root(ROOT, become)
advmod(specific, quite)
xcomp(become, specific)
punct(specific, .)
case(system, in)
amod(system, municipal)
obl(tend, system)
nsubj(tend, we)
root(ROOT, tend)
mark(view, to)
xcomp(tend, view)
nsubj:pass(call, what)
aux:pass(call, be)
ccomp(view, call)
xcomp(call, positivism)
case(movement, as)
advmod(movement, fundamentally)
det(movement, a)
obl(call, movement)
mark(democratize, to)
acl(movement, democratize)
obj(democratize, policy)
mark(increase, by)
advcl(democratize, increase)
det(power, the)
obj(increase, power)
case(parliament, of)
nmod(power, parliament)
punct(power, --)
det(representative, the)
amod(representative, elect)
appos(power, representative)
punct(representative, --)
case(expense, at)
det(expense, the)
nmod(representative, expense)
case(judiciary, of)
det(judiciary, the)
advmod(conservative, more)
amod(judiciary, conservative)
nmod(expense, judiciary)
punct(expense, .)
mark(make, when)
det(power, the)
nsubj:pass(make, power)
case(latter, of)
det(latter, the)
nmod(power, latter)
aux:pass(make, be)
acl:relcl(expense, make)
cc:preconj(limited, both)
xcomp(make, limited)
cc(explicit, and)
conj(limited, explicit)
punct(make, --)
mark(clarify, when)
nsubj:pass(clarify, norm)
aux:pass(clarify, be)
advcl(make, clarify)
cc(make, and)
conj(clarify, make)
advmod(precise, more)
xcomp(make, precise)
cc(place, and)
det(creation, the)
nsubj:pass(place, creation)
case(norm, of)
amod(norm, new)
nmod(creation, norm)
aux:pass(place, be)
conj(clarify, place)
advmod(place, exclusively)
case(hand, in)
amod(hand, parliamentary)
obl(place, hand)
punct(place, --)
nummod(purpose, two)
nsubj:pass(serve, purpose)
aux:pass(serve, be)
conj(place, serve)
punct(tend, :)
nsubj:pass(make, government)
aux:pass(make, be)
root(ROOT, make)
xcomp(make, subservient)
case(will, to)
det(will, a)
amod(will, institutionalize)
amod(will, popular)
obl(subservient, will)
punct(become, ,)
cc(become, and)
nsubj(become, law)
conj(make, become)
det(system, a)
amod(system, rational)
xcomp(become, system)
case(implement, for)
nmod(system, implement)
nsubj(will, that)
acl:relcl(implement, will)
punct(system, ,)
mark(serve, for)
advcl(will, serve)
amod(goal, conscious)
obj(serve, goal)
punct(serve, ,)
mark(embody, for)
advcl(serve, embody)
det(policy, the)
punct(policy, ``)
amod(policy, public)
obj(embody, policy)
punct(policy, '')
punct(make, .)
expl(true, it)
cop(true, be)
root(ROOT, true)
mark(be, that)
punct(be, ,)
advmod(be, initially)
punct(be, ,)
det(task, the)
nsubj(be, task)
ccomp(true, be)
mark(remove, to)
ccomp(be, remove)
obj(remove, restriction)
nsubj:pass(think, that)
punct(think, ,)
nsubj:pass(think, it)
aux:pass(think, be)
acl:relcl(restriction, think)
punct(inhibit, ,)
conj(think, inhibit)
det(flow, the)
amod(flow, free)
obj(inhibit, flow)
case(money, of)
nmod(flow, money)
punct(goods, ,)
conj(money, goods)
punct(labor, ,)
cc(labor, and)
conj(money, labor)
punct(flow, ;)
punct(flow, ;)
cc(policy, but)
advmod(faire, even)
compound(faire, laissez)
punct(faire, -)
nsubj(policy, faire)
cop(policy, be)
det(policy, a)
amod(policy, conscious)
conj(true, policy)
punct(true, .)
nsubj:pass(see, law)
aux:pass(see, be)
root(ROOT, see)
case(emanation, as)
det(emanation, a)
obl(see, emanation)
mark(will, of)
det(sovereign, the)
punct(will, ``)
nsubj(will, sovereign)
acl:relcl(emanation, will)
punct(will, '')
punct(see, .)
advmod(monarch, however)
punct(monarch, ,)
det(sovereign, the)
nsubj(monarch, sovereign)
cop(monarch, be)
advmod(monarch, not)
nmod:poss(monarch, Hobbes)
case(Hobbes, 's)
amod(monarch, absolute)
parataxis(see, monarch)
cc(sovereign, but)
advmod(sovereign, rather)
det(sovereign, the)
amod(sovereign, parliamentary)
conj(monarch, sovereign)
case(Austin, of)
nmod(sovereign, Austin)
punct(see, .)
nsubj(philosophy, it)
cop(philosophy, be)
punct(philosophy, ,)
advmod(philosophy, too)
punct(philosophy, ,)
det(philosophy, a)
amod(philosophy, optimistic)
root(ROOT, philosophy)
punct(means, ,)
cc(means, and)
punct(means, ,)
mark(separate, though)
nsubj(separate, it)
advcl(means, separate)
obj(separate, law)
case(morality, from)
obl(separate, morality)
punct(means, ,)
nsubj(means, it)
cop(means, be)
case(means, by)
det(means, no)
conj(philosophy, means)
det(one, a)
amod(one, immoral)
cc(amoral, or)
conj(immoral, amoral)
obj(means, one)
punct(philosophy, .)
nsubj(master, man)
punct(master, ,)
case(institution, through)
amod(institution, democratic)
obl(master, institution)
case(government, of)
nmod(institution, government)
cc(freedom, and)
amod(freedom, economic)
conj(government, freedom)
punct(master, ,)
cop(master, be)
root(ROOT, master)
case(destiny, of)
nmod:poss(destiny, he)
nmod(master, destiny)
punct(master, .)
det(theory, the)
nsubj(require, theory)
aux(require, do)
advmod(require, not)
root(ROOT, require)
punct(require, ,)
mark(acquire, though)
nsubj(acquire, it)
advmod(acquire, unfortunately)
aux(acquire, might)
advcl(require, acquire)
punct(acquire, ,)
det(mystique, a)
amod(mystique, hegelian)
obj(acquire, mystique)
punct(require, .)
nsubj(rationalization, it)
cop(rationalization, be)
advmod(rationalization, merely)
det(rationalization, a)
root(ROOT, rationalization)
cc(ordering, and)
conj(rationalization, ordering)
case(institution, of)
amod(institution, new)
nmod(rationalization, institution)
case(government, of)
amod(government, popular)
nmod(institution, government)
punct(rationalization, .)
nsubj:pass(oppose, it)
aux:pass(oppose, be)
advmod(oppose, not)
root(ROOT, oppose)
case(justice, to)
cc:preconj(justice, either)
obl(oppose, justice)
cc(morality, or)
conj(justice, morality)
punct(oppose, ;)
punct(oppose, ;)
nsubj(wish, it)
advmod(wish, merely)
parataxis(oppose, wish)
mark(minimize, to)
xcomp(wish, minimize)
amod(view, subjective)
obj(minimize, view)
case(official, of)
nmod(view, official)
nsubj(wield, who)
acl:relcl(official, wield)
amod(authority, public)
obj(wield, authority)
punct(oppose, .)
advmod(true, particularly)
cop(true, be)
nsubj(true, this)
root(ROOT, true)
mark(become, as)
compound(faire, laissez)
punct(faire, -)
compound(capitalism, faire)
nsubj(become, capitalism)
advcl(true, become)
det(credo, the)
amod(credo, dominant)
xcomp(become, credo)
case(society, of)
amod(society, western)
nmod(credo, society)
punct(true, .)
mark(free, to)
advcl(objective, free)
det(factor, the)
nsubj(objective, factor)
case(production, of)
nmod(factor, production)
cop(objective, be)
det(objective, a)
amod(objective, major)
root(ROOT, objective)
case(bourgeoisie, of)
det(bourgeoisie, the)
amod(bourgeoisie, rise)
nmod(objective, bourgeoisie)
punct(require, ,)
cc(require, and)
det(objective, this)
nsubj(require, objective)
conj(objective, require)
mark(limit, that)
amod(authority, governmental)
nsubj:pass(limit, authority)
punct(official, --)
amod(official, administrative)
conj(authority, official)
cc(judge, and)
conj(official, judge)
punct(limit, --)
aux:pass(limit, be)
ccomp(require, limit)
advmod(precisely, as)
advmod(limit, precisely)
cc(explicitly, and)
conj(precisely, explicitly)
mark(possible, as)
advcl(as, possible)
punct(limit, ;)
punct(limit, ;)
mark(abrogate, that)
amod(custom, old)
nsubj:pass(abrogate, custom)
nsubj(inhibit, which)
acl:relcl(custom, inhibit)
obj(inhibit, trade)
aux:pass(abrogate, be)
conj(limit, abrogate)
punct(free, ;)
punct(objective, ;)
mark(free, that)
nsubj(free, business)
cop(free, be)
conj(abrogate, free)
case(supervision, from)
amod(supervision, governmental)
obl(free, supervision)
cc(notion, and)
conj(supervision, notion)
case(morality, of)
nmod(supervision, morality)
nsubj(clog, which)
aux(clog, might)
acl:relcl(supervision, clog)
det(adjustment, the)
amod(adjustment, automatic)
obj(clog, adjustment)
case(market, of)
det(market, the)
amod(market, free)
nmod(adjustment, market)
punct(clog, ;)
punct(clog, ;)
mark(do, that)
nsubj(clog, obligation)
case(status, of)
nmod(obligation, status)
nsubj(inconsistent, that)
cop(inconsistent, be)
acl:relcl(obligation, inconsistent)
case(politics, with)
det(politics, the)
amod(politics, new)
obl(inconsistent, politics)
cc(economics, and)
det(economics, the)
amod(economics, new)
conj(politics, economics)
aux:pass(do, be)
conj(inconsistent, do)
advmod(do, away)
obl(away, with)
punct(objective, .)
nsubj(replace, contract)
punct(contract, --)
acl(contract, conceive)
case(bargain, as)
det(bargain, the)
amod(bargain, free)
obl(conceive, bargain)
case(equal, of)
amod(equal, formal)
nmod(bargain, equal)
punct(replace, --)
root(ROOT, replace)
det(obligation, the)
amod(obligation, imply)
obj(replace, obligation)
case(society, of)
det(society, a)
advmod(static, more)
amod(society, static)
cc(conscious, and)
obl:npmod(conscious, status)
punct(conscious, -)
conj(static, conscious)
nmod(obligation, society)
punct(replace, .)
advmod(theme, indeed)
punct(theme, ,)
nsubj(theme, contract)
cop(theme, be)
det(theme, the)
amod(theme, dominant)
amod(theme, legal)
root(ROOT, theme)
case(century, of)
det(century, the)
nmod(theme, century)
punct(theme, ,)
det(touchstone, the)
appos(theme, touchstone)
case(society, of)
det(society, the)
amod(society, free)
nmod(touchstone, society)
punct(theme, .)
nsubj:pass(base, government)
nmod:npmod(government, itself)
aux:pass(base, be)
root(ROOT, base)
case(contract, upon)
obl(base, contract)
punct(base, ;)
punct(base, ;)
compound(organization, business)
nsubj:pass(analyze, organization)
punct(organization, --)
det(corporation, the)
appos(organization, corporation)
punct(analyze, --)
aux:pass(analyze, be)
parataxis(base, analyze)
case(term, in)
amod(term, contractual)
obl(analyze, term)
punct(base, ;)
punct(base, ;)
nsubj:pass(base, trade)
aux:pass(base, be)
parataxis(base, base)
case(freedom, on)
obl(base, freedom)
case(contract, of)
nmod(freedom, contract)
punct(lean, ,)
cc(lean, and)
nsubj:pass(lean, money)
aux:pass(lean, be)
conj(base, lean)
cc(borrow, and)
conj(lean, borrow)
case(term, on)
amod(term, contractual)
obl(borrow, term)
punct(lean, ;)
punct(lean, ;)
advmod(marriage, even)
nsubj:pass(see, marriage)
cc(family, and)
det(family, the)
conj(marriage, family)
aux:pass(see, be)
conj(lean, see)
case(arrangement, as)
det(arrangement, a)
amod(arrangement, contractual)
obl(see, arrangement)
punct(base, .)
expl(surprising, it)
cop(surprising, be)
advmod(surprising, not)
root(ROOT, surprising)
mark(view, that)
det(obligation, the)
amod(obligation, international)
nsubj:pass(view, obligation)
case(state, of)
nmod(obligation, state)
aux:pass(view, be)
advmod(view, also)
csubj(surprising, view)
case(term, in)
obl(view, term)
case(contract, of)
nmod(term, contract)
punct(surprising, .)
case(fact, in)
obl(go, fact)
punct(go, ,)
nsubj(go, some)
punct(example, --)
nsubj(example, Anzilotti)
cop(example, be)
det(example, the)
compound(example, principle)
parataxis(go, example)
punct(go, --)
root(ROOT, go)
advmod(far, so)
advmod(go, far)
mark(say, as)
mark(say, to)
advcl(go, say)
mark(trace, that)
det(law, all)
amod(law, international)
nsubj:pass(trace, law)
aux(trace, could)
aux:pass(trace, be)
ccomp(say, trace)
case(norm, to)
det(norm, the)
amod(norm, single)
amod(norm, legal)
obl(trace, norm)
punct(norm, ,)
compound(sunt, Pacta)
appos(norm, sunt)
flat(sunt, Servanda)
punct(go, .)
det(displacement, the)
root(ROOT, displacement)
punct(displacement, ()
case(least, at)
nmod(extent, least)
case(extent, to)
det(extent, a)
amod(extent, considerable)
nmod(displacement, extent)
punct(extent, ))
case(jurisprudence, of)
det(jurisprudence, the)
amod(jurisprudence, ethical)
nmod(displacement, jurisprudence)
case(century, of)
det(century, the)
amod(century, seventeenth)
cc(eighteenth, and)
conj(seventeenth, eighteenth)
nmod(jurisprudence, century)
case(positivism, by)
nmod(century, positivism)
acl(positivism, reshape)
cc:preconj(theory, both)
amod(theory, international)
compound(theory, law)
obj(reshape, theory)
cc(doctrine, and)
conj(theory, doctrine)
punct(reshape, .)
case(place, in)
det(place, the)
amod(place, first)
obl(bring, place)
det(doctrine, the)
amod(doctrine, new)
nsubj(bring, doctrine)
root(ROOT, bring)
det(separation, a)
amod(separation, formal)
obj(bring, separation)
case(international, of)
nmod(separation, international)
case(law, from)
amod(law, municipal)
nmod(separation, law)
punct(bring, ,)
advcl(bring, reject)
det(view, the)
amod(view, earlier)
obj(reject, view)
mark(part, that)
nsubj(part, both)
cop(part, be)
acl(view, part)
case(system, of)
det(system, a)
amod(system, universal)
amod(system, legal)
nmod(part, system)
punct(bring, .)
nummod(result, one)
nsubj(be, result)
root(ROOT, be)
mark(nationalize, to)
ccomp(be, nationalize)
obj(nationalize, much)
nsubj:pass(regard, that)
aux(regard, have)
aux:pass(regard, be)
acl:relcl(much, regard)
case(law, as)
det(law, the)
obl(regard, law)
case(nation, of)
nmod(law, nation)
punct(be, .)
amod(law, admiralty)
nsubj:pass(sever, law)
punct(merchant, ,)
det(merchant, the)
compound(merchant, law)
conj(law, merchant)
punct(host, ,)
cc(host, and)
det(host, the)
conj(law, host)
case(problem, of)
nmod(host, problem)
nsubj(arise, which)
acl:relcl(problem, arise)
case(litigation, in)
amod(litigation, private)
obl(arise, litigation)
case(contact, because)
fixed(because, of)
det(contact, some)
obl(sever, contact)
case(country, with)
det(country, a)
amod(country, foreign)
nmod(contact, country)
aux:pass(sever, be)
advmod(sever, all)
root(ROOT, sever)
case(law, from)
det(law, the)
amod(law, older)
obl(sever, law)
case(Nations, of)
nmod(law, Nations)
cc(make, and)
conj(sever, make)
xcomp(make, dependent)
case(law, on)
det(law, the)
amod(law, several)
amod(law, national)
obl(dependent, law)
punct(sever, .)
amod(law, private)
amod(law, international)
nsubj:pass(segregate, law)
punct(law, ()
obj(call, which)
nsubj(call, Americans)
acl:relcl(law, call)
det(conflict, the)
punct(conflict, ``)
obj(call, conflict)
case(law, of)
nmod(conflict, law)
punct(conflict, '')
punct(conflict, ))
aux:pass(segregate, be)
advmod(segregate, thus)
root(ROOT, segregate)
case(law, from)
amod(law, international)
obl(segregate, law)
obl(segregate, proper)
punct(call, ,)
cc(call, or)
punct(segregate, ,)
mark(call, as)
nsubj:pass(call, it)
aux:pass(call, be)
advmod(call, often)
advcl(segregate, call)
punct(law, ,)
amod(law, public)
amod(law, international)
obj(call, law)
punct(segregate, .)
nsubj(free, States)
cop(free, be)
root(ROOT, free)
mark(enact, to)
advcl(free, enact)
punct(enact, ,)
case(broad, within)
obl(enact, broad)
punct(enact, ,)
advmod(limit, though)
punct(limit, ()
advmod(limit, perhaps)
punct(limit, ))
amod(limit, determinate)
obj(enact, limit)
punct(rule, ,)
nmod:poss(rule, they)
amod(rule, own)
conj(limit, rule)
case(application, as)
fixed(as, to)
det(application, the)
obl(enact, application)
case(law, of)
amod(law, foreign)
nmod(application, law)
case(court, by)
nmod:poss(court, they)
nmod(application, court)
punct(vary, ,)
mark(vary, to)
conj(enact, vary)
det(merchant, the)
compound(merchant, law)
obj(vary, merchant)
punct(enact, ,)
cc(enact, and)
mark(enact, to)
conj(vary, enact)
obj(enact, legislation)
case(regard, with)
obl(enact, regard)
case(claim, to)
amod(claim, many)
nmod(regard, claim)
acl(claim, arise)
case(seas, on)
det(seas, the)
amod(seas, high)
obl(arise, seas)
punct(free, .)
det(change, the)
nsubj(dramatic, change)
cop(dramatic, be)
advmod(dramatic, not)
advmod(dramatic, quite)
advmod(dramatic, so)
root(ROOT, dramatic)
mark(sound, as)
nsubj(sound, it)
advcl(dramatic, sound)
mark(continue, because)
case(fact, in)
obl(continue, fact)
amod(norm, common)
nsubj(continue, norm)
advcl(dramatic, continue)
mark(invoke, to)
aux:pass(invoke, be)
xcomp(continue, invoke)
case(court, by)
amod(court, municipal)
obl(invoke, court)
cc(change, and)
aux:pass(change, be)
advmod(change, only)
advmod(change, gradually)
conj(continue, change)
case(legislation, by)
obl(change, legislation)
punct(situation, ,)
cc(situation, and)
advmod(situation, then)
advmod(situation, largely)
case(situation, in)
amod(situation, marginal)
conj(legislation, situation)
punct(dramatic, .)
nsubj(one, Mr.)
flat(Mr., Justice)
flat(Mr., Black)
cop(one, be)
root(ROOT, one)
case(minority, of)
det(minority, the)
nmod(one, minority)
nsubj(rest, that)
acl:relcl(minority, rest)
case(article, on)
det(article, the)
obl(rest, article)
nummod(article, 1)
punct(article, ,)
appos(article, power)
punct(one, .)
case(view, in)
det(view, this)
obl(grant, view)
punct(grant, ,)
advcl(grant, support)
case(member, by)
advmod(member, only)
nummod(member, three)
obl(support, member)
case(Court, of)
det(Court, the)
nmod(member, Court)
punct(grant, ,)
det(power, a)
nsubj:pass(grant, power)
acl(power, deny)
case(provision, by)
det(provision, the)
amod(provision, specific)
obl(deny, provision)
case(article, of)
nmod(provision, article)
nummod(article, 3)
punct(grant, ,)
aux:pass(grant, be)
root(ROOT, grant)
case(generality, by)
det(generality, the)
obl(grant, generality)
case(article, of)
nmod(generality, article)
nummod(article, 1)
punct(grant, .)
mark(seem, if)
nsubj(seem, this)
advcl(be, seem)
xcomp(seem, arbitrary)
punct(be, ,)
nmod:poss(effect, its)
nsubj(be, effect)
root(ROOT, be)
mark(treat, to)
ccomp(be, treat)
obj(treat, citizen)
case(District, of)
det(District, the)
nmod(citizen, District)
case(Columbia, of)
nmod(District, Columbia)
advmod(treat, equally)
case(citizen, with)
obl(treat, citizen)
case(state, of)
det(state, the)
nmod(citizen, state)
punct(citizen, --)
case(expense, at)
det(expense, the)
obl(treat, expense)
mark(expand, of)
acl(expense, expand)
det(jurisdiction, a)
amod(jurisdiction, troublesome)
obj(expand, jurisdiction)
punct(jurisdiction, .)
amod(jurisdiction, federal)
compound(jurisdiction, question)
parataxis(be, jurisdiction)
case(year, for)
advmod(hundred, almost)
det(year, a)
nummod(year, hundred)
nmod(jurisdiction, year)
nsubj(rely, we)
acl:relcl(year, rely)
case(court, upon)
compound(court, state)
obl(rely, court)
punct(subject, ()
appos(court, subject)
case(review, to)
obl(subject, review)
case(Court, by)
det(Court, the)
compound(Court, Supreme)
nmod(review, Court)
punct(subject, ))
case(protection, for)
det(protection, the)
obl(subject, protection)
case(rights, of)
amod(rights, most)
nmod(protection, rights)
acl(protection, arise)
case(law, under)
amod(law, national)
obl(arise, law)
punct(arise, .)
advmod(1875, then)
case(1875, in)
nmod(response, 1875)
punct(response, ,)
advmod(response, apparently)
case(response, in)
obl(give, response)
case(influence, to)
det(influence, the)
compound(influence, nationalize)
nmod(response, influence)
case(War, of)
det(War, the)
compound(War, Civil)
nmod(influence, War)
punct(give, ,)
nsubj(give, Congress)
advmod(give, first)
parataxis(be, give)
det(court, the)
amod(court, lower)
amod(court, federal)
obj(give, court)
amod(authority, general)
obj(give, authority)
punct(authority, --)
advmod(tribunal, concurrently)
case(tribunal, with)
compound(tribunal, state)
nmod(authority, tribunal)
punct(give, --)
mark(decide, to)
advcl(give, decide)
obj(decide, case)
acl(case, involve)
amod(right, federal)
punct(right, -)
amod(question, right)
obj(involve, question)
punct(be, .)
nummod(purpose, one)
nsubj(be, purpose)
case(change, of)
det(change, the)
nmod(purpose, change)
root(ROOT, be)
mark(attain, to)
ccomp(be, attain)
amod(enforcement, sympathetic)
obj(attain, enforcement)
case(rights, of)
nmod(enforcement, rights)
acl(enforcement, insure)
case(amendment, by)
det(amendment, the)
amod(War, civil)
compound(amendment, War)
obl(insure, amendment)
case(interference, against)
compound(interference, state)
nmod(amendment, interference)
punct(be, .)
amod(difficulty, serious)
nsubj(arise, difficulty)
ccomp(be, arise)
case(advent, with)
det(advent, the)
obl(arise, advent)
case(process, of)
amod(process, substantive)
amod(process, due)
nmod(advent, process)
punct(arise, .)
det(amendment, a)
nsubj(become, amendment)
punct(amendment, ,)
advmod(design, presumably)
acl(amendment, design)
mark(deal, to)
xcomp(design, deal)
case(problem, with)
det(problem, the)
obl(deal, problem)
case(slave, of)
advmod(freed, newly)
amod(slave, freed)
nmod(problem, slave)
punct(become, ,)
root(ROOT, become)
det(limitation, a)
punct(faire, ``)
compound(faire, laissez)
punct(faire, -)
compound(limitation, faire)
punct(faire, '')
obj(become, limitation)
case(policy, upon)
compound(policy, state)
amod(policy, economic)
nmod(limitation, policy)
punct(become, . )
det(flood, a)
nsubj(impede, flood)
case(injunction, of)
amod(injunction, federal)
amod(injunction, lower)
compound(injunction, court)
nmod(flood, injunction)
advmod(impede, seriously)
root(ROOT, impede)
det(process, the)
obj(impede, process)
case(government, of)
amod(government, local)
nmod(process, government)
punct(impede, .)
nsubj(react, Congress)
root(ROOT, react)
case(series, with)
det(series, a)
obl(react, series)
case(measure, of)
nmod(series, measure)
acl(measure, modify)
case(way, in)
amod(way, various)
obl(modify, way)
obj(grant, what)
nsubj(grant, it)
aux(grant, have)
acl:relcl(way, grant)
case(1875, in)
obl(grant, 1875)
punct(react, .)
case(1910, in)
obl(require, 1910)
nsubj(require, it)
root(ROOT, require)
det(conven, the)
obj(require, conven)
case(court, of)
det(court, a)
amod(court, special)
nummod(judge, three)
punct(judge, -)
compound(court, judge)
nmod(conven, court)
case(issuance, for)
det(issuance, the)
nmod(conven, issuance)
case(injunction, of)
amod(injunction, certain)
nmod(issuance, injunction)
cc(allow, and)
conj(require, allow)
amod(appeal, direct)
obj(allow, appeal)
case(Court, to)
det(Court, the)
compound(Court, Supreme)
nmod(appeal, Court)
punct(Court, .)
amod(legislation, such)
nsubj:pass(clarify, legislation)
aux:pass(clarify, be)
parataxis(allow, clarify)
cc(extend, and)
conj(clarify, extend)
case(time, from)
obl(extend, time)
case(time, to)
nmod(time, time)
advmod(clarify, thereafter)
punct(require, .)
case(1913, in)
obl(make, 1913)
det(provision, a)
amod(provision, abortive)
nsubj:pass(make, provision)
aux:pass(make, be)
root(ROOT, make)
case(stay, for)
det(stay, the)
obl(make, stay)
case(proceedings, of)
amod(proceedings, federal)
compound(proceedings, injunction)
nmod(stay, proceedings)
case(institution, upon)
nmod(stay, institution)
case(case, of)
compound(court, state)
compound(case, court)
compound(case, test)
nmod(institution, case)
punct(make, .)
det(ineffectiveness, the)
amod(ineffectiveness, essential)
nsubj(result, ineffectiveness)
case(measure, of)
det(measure, these)
nmod(ineffectiveness, measure)
root(ROOT, result)
case(1934, in)
obl(result, 1934)
case(elimination, in)
amod(elimination, substantial)
obl(result, elimination)
case(jurisdiction, of)
amod(jurisdiction, federal)
nmod(elimination, jurisdiction)
mark(enjoin, to)
advcl(result, enjoin)
compound(order, state)
amod(order, public)
compound(rate, utility)
compound(order, rate)
obj(enjoin, order)
punct(result, .)
nummod(year, three)
obl:npmod(later, year)
advmod(impose, later)
amod(restraint, similar)
nsubj:pass(impose, restraint)
aux:pass(impose, be)
root(ROOT, impose)
case(injunction, upon)
obl(impose, injunction)
case(collection, against)
nmod(injunction, collection)
case(tax, of)
compound(tax, state)
nmod(collection, tax)
punct(impose, .)
nsubj(save, this)
root(ROOT, save)
case(adjudication, for)
compound(adjudication, state)
obl(save, adjudication)
punct(save, ,)
case(instance, in)
det(instance, the)
amod(instance, first)
nmod(area, instance)
punct(area, ,)
det(area, the)
nummod(area, two)
amod(area, major)
parataxis(save, area)
advmod(obnoxious, where)
amod(injunction, federal)
nsubj(obnoxious, injunction)
aux(obnoxious, have)
cop(obnoxious, be)
advmod(obnoxious, most)
acl:relcl(area, obnoxious)
punct(remain, ,)
cc(remain, but)
amod(area, other)
nsubj(remain, area)
conj(obnoxious, remain)
xcomp(remain, vulnerable)
punct(vulnerable, .)
advmod(show, meanwhile)
punct(Court, ,)
det(Court, the)
compound(Court, Supreme)
nsubj(show, Court)
punct(Court, ,)
case(Congress, like)
nmod(Court, Congress)
punct(show, ,)
conj(remain, show)
obj(show, misgiving)
case(aspect, concern)
det(aspect, this)
nmod(misgiving, aspect)
case(government, of)
nmod(aspect, government)
case(injunction, by)
nmod(aspect, injunction)
punct(save, .)
advcl(introduce, draw)
case(discretion, upon)
det(discretion, the)
amod(discretion, traditional)
obl(draw, discretion)
case(chancellor, of)
det(chancellor, the)
nmod(discretion, chancellor)
punct(introduce, ,)
nsubj(introduce, Mr.)
flat(Mr., Justice)
flat(Mr., Holmes)
root(ROOT, introduce)
det(series, a)
obj(introduce, series)
case(restraint, of)
obl:npmod(impose, self)
punct(impose, -)
amod(restraint, impose)
amod(restraint, judicial)
nmod(series, restraint)
nsubj(culminate, that)
acl:relcl(restraint, culminate)
case(doctrine, in)
nmod:poss(doctrine, Mr.)
flat(Mr., Justice)
flat(Mr., Frankfurter)
case(Mr., 's)
amod(doctrine, famous)
obl(culminate, doctrine)
case(abstention, of)
nmod(doctrine, abstention)
punct(turn, .)
mark(turn, whereas)
det(case, the)
amod(case, earlier)
nsubj(turn, case)
advcl(culminate, turn)
advmod(narrowly, rather)
advmod(turn, narrowly)
case(availability, upon)
det(availability, the)
obl(turn, availability)
case(remedy, of)
amod(remedy, adequate)
compound(remedy, state)
nmod(availability, remedy)
punct(nature, ,)
det(emphasis, the)
amod(emphasis, new)
nsubj(nature, emphasis)
cop(nature, be)
case(nature, upon)
det(nature, the)
conj(turn, nature)
case(policy, of)
det(policy, the)
compound(policy, state)
nmod(nature, policy)
case(issue, at)
nmod(policy, issue)
punct(introduce, .)
det(case, the)
amod(case, classic)
nsubj(v., case)
cop(Pullman, be)
compound(Commission, Railroad)
compound(v., Commission)
root(ROOT, v.)
flat(v., Pullman)
punct(Pullman, .)
det(commission, the)
nsubj(issue, commission)
aux(issue, have)
root(ROOT, issue)
det(order, a)
amod(order, administrative)
obj(issue, order)
nsubj:pass(challenge, which)
aux:pass(challenge, be)
acl:relcl(order, challenge)
case(discriminatory, as)
obl(challenge, discriminatory)
case(Negroes, against)
obl(challenge, Negroes)
punct(issue, .)
nmod:poss(enforcement, its)
nsubj:pass(enjoin, enforcement)
aux:pass(enjoin, be)
root(ROOT, enjoin)
case(court, by)
det(court, a)
amod(court, federal)
compound(court, trial)
obl(enjoin, court)
punct(enjoin, .)
case(review, on)
obl(find, review)
det(Court, the)
compound(Court, Supreme)
nsubj(find, Court)
punct(Court, ,)
case(Mr., via)
nmod(Court, Mr.)
flat(Mr., Justice)
flat(Mr., Frankfurter)
punct(find, ,)
root(ROOT, find)
amod(problem, southern)
amod(problem, racial)
obj(find, problem)
punct(problem, ``)
det(area, a)
amod(area, sensitive)
appos(problem, area)
case(policy, of)
amod(policy, social)
nmod(area, policy)
case(which, on)
obl(enter, which)
det(court, the)
amod(court, federal)
nsubj(enter, court)
aux(enter, ought)
advmod(enter, not)
mark(enter, to)
acl:relcl(area, enter)
mark(open, unless)
det(alternative, no)
nsubj(open, alternative)
case(adjudication, to)
nmod(alternative, adjudication)
cop(open, be)
advcl(enter, open)
punct(open, '')
punct(find, .)
det(alternative, a)
nsubj:pass(find, alternative)
aux:pass(find, be)
root(ROOT, find)
case(vagueness, in)
det(vagueness, the)
obl(find, vagueness)
case(law, of)
compound(law, state)
nmod(vagueness, law)
mark(authorize, as)
fixed(as, to)
mark(authorize, whether)
det(order, the)
compound(order, offend)
nsubj:pass(authorize, order)
aux(authorize, have)
case(fact, in)
obl(authorize, fact)
aux:pass(authorize, be)
advcl(find, authorize)
punct(find, .)
root(ROOT, Reluctant)
punct(Reluctant, ,)
case(usual, as)
obl(Reluctant, usual)
punct(Reluctant, ,)
mark(interpret, to)
advcl(Reluctant, interpret)
compound(legislation, state)
obj(interpret, legislation)
punct(Reluctant, --)
amod(interpretation, such)
nsubj(forecast, interpretation)
aux(forecast, can)
advmod(forecast, only)
cop(forecast, be)
det(forecast, a)
punct(forecast, ``)
parataxis(Reluctant, forecast)
cc(determination, rather)
fixed(rather, than)
det(determination, a)
conj(forecast, determination)
punct(forecast, '')
punct(Reluctant, --)
nsubj(lead, Mr.)
flat(Mr., Justice)
flat(Mr., Frankfurter)
root(ROOT, lead)
det(court, a)
amod(court, unanimous)
obj(lead, court)
mark(vacate, to)
advcl(lead, vacate)
det(injunction, the)
obj(vacate, injunction)
punct(lead, .)
cc(crucial, but)
expl(crucial, it)
cop(crucial, be)
root(ROOT, crucial)
mark(order, that)
advmod(order, here)
punct(order, ,)
case(Burford, unlike)
obl(order, Burford)
punct(order, ,)
det(court, the)
compound(court, trial)
nsubj:pass(order, court)
aux:pass(order, be)
csubj(crucial, order)
mark(retain, to)
xcomp(order, retain)
det(case, the)
obj(retain, case)
mark(have, until)
det(court, the)
compound(court, state)
nsubj(have, court)
aux(have, have)
advcl(retain, have)
det(opportunity, a)
amod(opportunity, reasonable)
obj(have, opportunity)
mark(settle, to)
acl(opportunity, settle)
det(question, the)
compound(law, state)
punct(law, -)
compound(question, law)
obj(settle, question)
punct(crucial, .)
punct(crucial, ``)
det(resource, the)
nsubj(equal, resource)
case(equity, of)
nmod(resource, equity)
cop(equal, be)
root(ROOT, equal)
case(adjustment, to)
det(adjustment, a)
obl(equal, adjustment)
nsubj(avoid, that)
aux(avoid, will)
acl:relcl(adjustment, avoid)
det(waste, the)
obj(avoid, waste)
case(decision, of)
det(decision, a)
amod(decision, tentative)
nmod(waste, decision)
cc(friction, as)
fixed(as, well)
fixed(as, as)
det(friction, the)
conj(waste, friction)
case(adjudication, of)
det(adjudication, a)
amod(adjudication, premature)
amod(adjudication, constitutional)
nmod(friction, adjudication)
punct(adjudication, '')
punct(abstention, .)
amod(abstention, temporary)
appos(friction, abstention)
punct(abstention, ,)
advmod(thing, i.e.)
punct(postponement, ,)
appos(abstention, postponement)
punct(thing, ,)
cop(thing, be)
nummod(thing, one)
parataxis(abstention, thing)
punct(thing, ;)
punct(thing, ;)
nsubj(another, refusal)
mark(adjudicate, to)
advcl(refusal, adjudicate)
cop(another, be)
parataxis(thing, another)
punct(another, .)
case(extent, to)
det(extent, the)
obl(available, extent)
mark(stand, that)
det(principle, the)
amod(principle, jurisdictional)
nsubj(stand, principle)
case(1875, of)
nmod(principle, 1875)
acl(extent, stand)
xcomp(stand, unmodified)
case(legislation, by)
amod(legislation, subsequent)
obl(unmodified, legislation)
punct(available, ,)
amod(relief, federal)
amod(relief, equitable)
nsubj(available, relief)
case(action, against)
compound(action, state)
nmod(relief, action)
aux(available, must)
cop(available, be)
root(ROOT, available)
punct(available, --)
cc(seem, or)
advmod(seem, so)
nsubj(seem, it)
conj(available, seem)
case(Mr., to)
obl(seem, Mr.)
flat(Mr., Justice)
flat(Mr., Frankfurter)
punct(available, .)
case(Commission, in)
compound(Commission, Alabama)
compound(Service, Public)
compound(Commission, Service)
obl(refuse, Commission)
punct(refuse, v.)
compound(Ry., Southern)
compound(Co., Ry.)
nsubj(refuse, Co.)
punct(refuse, ,)
det(commission, the)
nsubj(refuse, commission)
aux(refuse, have)
root(ROOT, refuse)
mark(permit, to)
xcomp(refuse, permit)
obj(permit, abandonment)
case(facility, of)
amod(facility, certain)
punct(facility, ``)
amod(facility, uneconomic)
punct(train, '')
compound(facility, train)
nmod(abandonment, facility)
punct(refuse, .)
det(railroad, the)
root(ROOT, railroad)
punct(railroad, ,)
acl(railroad, claim)
obj(claim, deprivation)
case(property, of)
nmod(deprivation, property)
case(process, without)
amod(process, due)
obl(claim, process)
case(law, of)
nmod(process, law)
punct(process, ,)
amod(relief, seek)
compound(relief, injunctive)
conj(process, relief)
punct(railroad, .)
det(Court, the)
nsubj(hold, Court)
root(ROOT, hold)
mark(exercise, that)
amod(jurisdiction, federal)
nsubj:pass(exercise, jurisdiction)
aux(exercise, should)
advmod(exercise, not)
aux:pass(exercise, be)
ccomp(hold, exercise)
mark(obstruct, lest)
det(policy, the)
amod(policy, domestic)
nsubj:pass(obstruct, policy)
case(state, of)
det(state, the)
nmod(policy, state)
aux:pass(obstruct, be)
advcl(exercise, obstruct)
punct(hold, ;)
punct(hold, ;)
nsubj(concur, this)
case(name, in)
det(name, the)
nmod(this, name)
case(discretion, of)
amod(discretion, equitable)
nmod(name, discretion)
punct(concur, .)
nsubj(concur, Justices)
flat(Justices, Frankfurter)
cc(Jackson, and)
conj(Justices, Jackson)
ccomp(hold, concur)
case(result, in)
det(Court, the)
nmod:poss(result, Court)
case(Court, 's)
obl(concur, result)
punct(concur, ,)
mark(find, for)
nsubj(find, they)
advcl(concur, find)
det(merit, no)
obj(find, merit)
case(claim, in)
det(railroad, the)
nmod:poss(claim, railroad)
case(railroad, 's)
nmod(merit, claim)
punct(hold, .)
cc(object, but)
nsubj(object, they)
root(ROOT, object)
advmod(object, vigorously)
case(proposition, to)
det(proposition, the)
obl(object, proposition)
obj(refuse, that)
amod(court, federal)
nsubj(refuse, court)
aux(refuse, may)
acl(proposition, refuse)
mark(exercise, to)
xcomp(refuse, exercise)
obj(exercise, jurisdiction)
acl(jurisdiction, confer)
case(act, in)
det(act, a)
amod(act, valid)
obl(confer, act)
case(Congress, of)
nmod(act, Congress)
punct(object, :)
punct(object, ``)
case(swoop, by)
nsubj(fall, one)
advcl(find, fall)
obj(fall, swoop)
det(Court, the)
nsubj(find, Court)
advmod(find, now)
root(ROOT, find)
mark(indulge, that)
nsubj(indulge, Congress)
ccomp(find, indulge)
case(legislation, in)
amod(legislation, needless)
obl(indulge, legislation)
case(act, in)
det(act, the)
obl(indulge, act)
case(1910, of)
nmod(act, 1910)
punct(1910, ,)
nummod(1910, 1913)
punct(1910, ,)
nummod(1910, 1925)
punct(1934, ,)
nmod:tmod(1910, 1934)
cc(1937, and)
conj(1934, 1937)
punct(find, .)
case(measure, by)
det(measure, these)
obl(decide, measure)
punct(decide, ,)
nsubj(decide, Congress)
punct(decide, ,)
advmod(decide, so)
det(Court, the)
nsubj(decide, Court)
punct(effect, ()
case(effect, in)
nmod(Court, effect)
punct(effect, ))
advmod(decide, now)
root(ROOT, decide)
punct(give, ,)
conj(decide, give)
advmod(only, not)
advmod(needless, only)
obj(give, needless)
cc(relief, but)
amod(relief, inadequate)
obj(give, relief)
punct(give, ,)
mark(appear, since)
nsubj(appear, it)
advmod(appear, now)
advcl(give, appear)
mark(have, that)
det(court, the)
amod(court, federal)
nsubj(have, court)
ccomp(appear, have)
amod(power, inherent)
obj(have, power)
mark(sterilize, to)
acl(power, sterilize)
det(act, the)
obj(sterilize, act)
case(1875, of)
nmod(act, 1875)
case(regulation, against)
det(proceedings, all)
compound(regulation, proceedings)
amod(regulation, challenging)
amod(regulation, local)
obl(sterilize, regulation)
punct(regulation, '')
punct(decide, . )
det(case, a)
advmod(revealing, most)
amod(case, revealing)
amod(case, recent)
nsubj(union, case)
cop(union, be)
compound(worker, textile)
compound(union, worker)
root(ROOT, union)
case(Mills, v.)
compound(Mills, Lincoln)
nmod(union, Mills)
punct(union, .)
det(taft, the)
root(ROOT, taft)
punct(taft, -)
flat(taft, Hartley)
nsubj(give, act)
root(ROOT, give)
det(jurisdiction, the)
amod(court, federal)
iobj(give, court)
obj(give, jurisdiction)
case(suit, over)
punct(suit, ``)
obl(give, suit)
case(violation, for)
nmod(suit, violation)
case(contract, of)
nmod(violation, contract)
case(employer, between)
det(employer, a)
nmod(contract, employer)
cc(organization, and)
det(organization, a)
compound(organization, labor)
conj(employer, organization)
acl(organization, represent)
obj(represent, employee)
case(industry, in)
det(industry, a)
obl(represent, industry)
acl(industry, affect)
obj(affect, commerce)
punct(affect, '')
punct(affect, .)
case(face, on)
nmod:poss(face, it)
case(it, 's)
obl(provide, face)
nsubj(provide, this)
advmod(provide, merely)
parataxis(give, provide)
det(forum, a)
amod(forum, federal)
obj(provide, forum)
punct(provide, ;)
punct(provide, ;)
nsubj(establish, it)
aux(establish, do)
advmod(establish, not)
parataxis(provide, establish)
det(law, any)
obj(establish, law)
punct(rights, ()
appos(law, rights)
punct(rights, ))
mark(enforce, for)
det(judge, the)
amod(judge, federal)
nsubj(enforce, judge)
mark(enforce, to)
advcl(establish, enforce)
punct(give, .)
advmod(exercise, how)
aux(exercise, can)
nsubj(exercise, judge)
root(ROOT, exercise)
obj(exercise, jurisdiction)
mark(enforce, to)
acl(jurisdiction, enforce)
amod(rights, national)
obj(enforce, rights)
mark(create, when)
nsubj(create, Congress)
aux(create, have)
advcl(enforce, create)
obj(create, none)
punct(exercise, ?)
punct(exercise, ?)
det(Court, the)
nsubj(hold, Court)
root(ROOT, hold)
mark(intend, that)
nsubj(intend, Congress)
aux(intend, have)
ccomp(hold, intend)
det(judiciary, the)
amod(judiciary, federal)
obj(intend, judiciary)
case(fashion, to)
punct(fashion, ``)
obl(intend, fashion)
punct(fashion, '')
det(law, a)
amod(law, appropriate)
obj(intend, law)
case(contract, of)
compound(management, labor)
punct(management, -)
compound(contract, management)
nmod(law, contract)
punct(hold, .)
case(short, in)
obl(broad, short)
punct(broad, ,)
amod(power, congressional)
nsubj(broad, power)
mark(grant, to)
acl(power, grant)
amod(question, federal)
punct(question, -)
compound(authority, question)
obj(grant, authority)
case(court, to)
amod(court, federal)
nmod(authority, court)
cop(broad, be)
advmod(broad, now)
advmod(broad, apparently)
advmod(broad, so)
root(ROOT, broad)
mark(create, that)
nsubj(create, Congress)
aux(create, need)
advmod(create, not)
ccomp(broad, create)
punct(specify, ,)
cc(specify, or)
conj(create, specify)
punct(right, ,)
det(right, the)
obj(create, right)
mark(enforce, to)
aux:pass(enforce, be)
acl(right, enforce)
punct(broad, .)
det(decision, the)
compound(decision, Lincoln)
compound(decision, Mills)
nsubj(authorize, decision)
root(ROOT, authorize)
det(body, a)
amod(body, whole)
amod(body, new)
obj(authorize, body)
case(law, of)
amod(law, federal)
punct(law, ``)
amod(law, common)
nmod(body, law)
punct(law, '')
nsubj(point, which)
punct(authorize, ,)
mark(point, as)
nsubj(point, Mr.)
flat(Mr., Justice)
flat(Mr., Frankfurter)
advcl(authorize, point)
compound:prt(point, out)
case(dissent, in)
obl(point, dissent)
punct(lead, ,)
conj(point, lead)
case(one, to)
obl(lead, one)
case(incongruity, of)
det(incongruity, the)
amod(incongruity, follow)
punct(incongruity, ``)
nmod(one, incongruity)
punct(incongruity, '')
punct(incongruity, :)
punct(conflict, ``)
punct(1, ()
punct(1, ()
nummod(conflict, 1)
punct(1, ))
appos(incongruity, conflict)
case(interpretation, in)
amod(interpretation, federal)
cc(state, and)
conj(federal, state)
conj(federal, court)
nmod(conflict, interpretation)
case(agreement, of)
amod(agreement, collective)
compound(agreement, bargaining)
nmod(interpretation, agreement)
punct(displacement, ;)
punct(displacement, ;)
punct(2, ()
nummod(displacement, 2)
punct(2, ))
conj(conflict, displacement)
case(law, of)
compound(law, state)
nmod(displacement, law)
case(law, by)
amod(law, federal)
nmod(displacement, law)
case(court, in)
compound(court, state)
nmod(law, court)
case(action, in)
det(action, all)
nmod(displacement, action)
case(agreement, regard)
amod(agreement, collective)
compound(agreement, bargaining)
nmod(action, agreement)
punct(exclusion, ;)
punct(exclusion, ;)
cc(exclusion, or)
punct(3, ()
nummod(exclusion, 3)
punct(3, ))
conj(agreement, exclusion)
case(jurisdiction, of)
compound(jurisdiction, state)
compound(jurisdiction, court)
nmod(exclusion, jurisdiction)
case(matter, over)
det(matter, these)
nmod(jurisdiction, matter)
punct(jurisdiction, '')
punct(examination, .)
det(Justice, the)
nmod:poss(examination, Justice)
case(Justice, 's)
amod(examination, elaborate)
nsubj(suggest, examination)
case(history, of)
det(history, the)
amod(history, legislative)
nmod(examination, history)
case(provision, of)
det(provision, the)
nmod(history, provision)
case(question, in)
nmod(provision, question)
parataxis(authorize, suggest)
mark(be, that)
nmod:poss(purpose, Congress)
case(Congress, 's)
nsubj(be, purpose)
ccomp(suggest, be)
advmod(make, merely)
mark(make, to)
xcomp(be, make)
obj(make, union)
advmod(make, suable)
punct(authorize, .)
case(exception, with)
det(exception, a)
amod(exception, few)
obl(seem, exception)
punct(seem, ,)
det(lawmaker, the)
nsubj(seem, lawmaker)
root(ROOT, seem)
xcomp(seem, unaware)
case(problem, of)
det(problem, the)
amod(problem, technical)
obl(unaware, problem)
case(jurisdiction, of)
amod(jurisdiction, federal)
nmod(problem, jurisdiction)
acl(jurisdiction, involve)
punct(seem, --)
mark(say, to)
advcl(unaware, say)
obj(say, nothing)
case(delegation, of)
det(delegation, the)
nmod(nothing, delegation)
mark(lawmake, of)
acl(delegation, lawmake)
obj(lawmake, power)
case(judge, to)
obl(lawmake, judge)
punct(seem, .)
mark(avoid, to)
advcl(prepare, avoid)
det(difficulty, these)
amod(difficulty, constitutional)
obj(avoid, difficulty)
punct(prepare, ,)
nsubj:pass(prepare, Mr.)
flat(Mr., Justice)
flat(Mr., Frankfurter)
aux:pass(prepare, be)
root(ROOT, prepare)
mark(read, to)
xcomp(prepare, read)
det(provision, the)
compound(Hartley, taft)
punct(Hartley, -)
compound(provision, Hartley)
obj(read, provision)
advmod(concerned, as)
xcomp(read, concerned)
case(diversity, with)
obl(concerned, diversity)
punct(question, ,)
cc(question, rather)
fixed(rather, than)
amod(question, federal)
conj(diversity, question)
punct(jurisdiction, ,)
conj(diversity, jurisdiction)
punct(prepare, .)
nsubj(satisfy, this)
aux(satisfy, would)
root(ROOT, satisfy)
obj(satisfy, what)
advmod(what, presumably)
cop(purpose, be)
nmod:poss(purpose, Congress)
case(Congress, 's)
amod(purpose, major)
obj(satisfy, purpose)
punct(purpose, --)
det(suability, the)
appos(purpose, suability)
case(union, of)
nmod(suability, union)
punct(satisfy, .)
nsubj(leave, it)
aux(leave, would)
advmod(leave, also)
root(ROOT, leave)
xcomp(leave, intact)
det(state, the)
nmod:poss(authority, state)
case(state, 's)
amod(authority, traditional)
obj(leave, authority)
case(realm, in)
det(realm, the)
nmod(authority, realm)
case(law, of)
compound(law, contract)
nmod(realm, law)
punct(leave, . )
punct(require, ()
mark(see, as)
nsubj(see, we)
aux(see, have)
advcl(require, see)
punct(require, ,)
det(decision, the)
compound(decision, Erie)
cc(York, and)
conj(Erie, York)
nsubj(require, decision)
root(ROOT, require)
amod(court, federal)
obj(require, court)
case(case, in)
compound(case, diversity)
obl(require, case)
mark(follow, to)
advcl(require, follow)
compound(rule, state)
amod(rule, decisional)
obj(follow, rule)
punct(require, .)
punct(require, ))
advmod(accept, here)
advmod(accept, again)
nsubj(accept, Mr.)
flat(Mr., Justice)
nsubj(accept, Frankfurter)
aux(accept, could)
advmod(accept, not)
advmod(accept, lightly)
root(ROOT, accept)
det(principle, the)
obj(accept, principle)
case(legislation, of)
amod(legislation, wholesale)
amod(legislation, judicial)
nmod(principle, legislation)
punct(accept, .)
mark(want, if)
nsubj(want, Congress)
advcl(accept, want)
mark(displace, to)
xcomp(want, displace)
det(state, the)
obj(displace, state)
case(area, from)
nmod(state, area)
obj(occupy, which)
nsubj(occupy, they)
aux(occupy, have)
advmod(occupy, customarily)
acl:relcl(area, occupy)
punct(let, ,)
conj(accept, let)
obj(let, it)
xcomp(let, do)
advmod(knowingly, so)
advmod(do, knowingly)
cc(explicitly, and)
conj(knowingly, explicitly)
punct(let, .)
cc(let, and)
root(ROOT, let)
obj(let, it)
xcomp(let, do)
nmod:poss(lawmake, its)
amod(lawmake, own)
obj(do, lawmake)
cc(leave, and)
advmod(leave, not)
conj(let, leave)
obj(leave, that)
case(judge, to)
amod(judge, federal)
obl(leave, judge)
punct(let, .)
root(ROOT, do)
nsubj(do, Lincoln)
nsubj(suggest, Mills)
root(ROOT, suggest)
mark(authorize, that)
mark(grant, if)
nsubj(grant, Congress)
advcl(authorize, grant)
obj(grant, jurisdiction)
case(case, over)
amod(case, interstate)
compound(case, divorce)
obl(grant, case)
punct(authorize, ,)
det(court, the)
amod(court, federal)
nsubj:pass(authorize, court)
aux(authorize, would)
aux:pass(authorize, be)
ccomp(suggest, authorize)
mark(fashion, to)
xcomp(authorize, fashion)
det(law, a)
amod(law, national)
obj(fashion, law)
case(dissolution, for)
det(dissolution, the)
obl(fashion, dissolution)
case(marriage, of)
nmod(dissolution, marriage)
punct(suggest, ?)
punct(suggest, ?)
expl(be, there)
root(ROOT, be)
det(problem, a)
amod(problem, common)
nsubj(be, problem)
case(most, behind)
nmod(problem, most)
case(question, of)
det(question, these)
amod(question, federal)
nmod(most, question)
cc(case, and)
compound(case, diversity)
conj(question, case)
punct(be, .)
nsubj(define, Congress)
aux(define, have)
advmod(define, not)
advmod(define, clearly)
root(ROOT, define)
det(bound, the)
obj(define, bound)
case(competence, between)
compound(competence, state)
cc(federal, and)
conj(state, federal)
compound(competence, court)
nmod(bound, competence)
punct(define, .)
nsubj(have, it)
root(ROOT, have)
det(power, the)
obj(have, power)
mark(do, to)
acl(power, do)
advmod(do, so)
cc(leave, but)
case(part, for)
det(part, the)
amod(part, most)
obl(leave, part)
aux(leave, have)
conj(have, leave)
det(matter, the)
obj(leave, matter)
case(solution, for)
obl(leave, solution)
case(judge, by)
obl(leave, judge)
case(basis, on)
det(basis, a)
compound(basis, case)
punct(case, -)
case(case, by)
punct(case, -)
nmod(case, case)
obl(leave, basis)
punct(have, . )
det(student, a)
amod(student, careful)
nsubj(suggest, student)
aux(suggest, have)
root(ROOT, suggest)
obj(suggest, that)
punct(suggest, ``)
case(revision, in)
det(revision, any)
amod(revision, new)
obl(do, revision)
punct(code, ()
case(code, of)
det(code, the)
amod(code, judicial)
nmod(revision, code)
punct(code, ))
det(legislator, the)
nsubj(do, legislator)
aux(do, would)
root(ROOT, do)
advmod(do, well)
mark(remember, to)
xcomp(do, remember)
mark(limit, that)
det(allocation, the)
nsubj:pass(limit, allocation)
case(power, of)
nmod(allocation, power)
case(court, to)
det(court, the)
amod(court, federal)
nmod(allocation, court)
aux(limit, should)
aux:pass(limit, be)
ccomp(remember, limit)
case(matter, to)
det(matter, those)
obl(limit, matter)
case(which, in)
obl(limit, which)
nmod:poss(expertise, they)
nsubj:pass(use, expertise)
case(law, in)
amod(law, federal)
nmod(expertise, law)
aux(use, might)
aux:pass(use, be)
acl:relcl(matter, use)
punct(leave, ,)
advcl(use, leave)
case(judiciary, to)
det(judiciary, the)
compound(judiciary, state)
obl(leave, judiciary)
det(obligation, the)
amod(obligation, primary)
appos(judiciary, obligation)
mark(pronouncing, of)
acl(obligation, pronouncing)
compound(law, state)
obj(pronouncing, law)
punct(obligation, '')
punct(obligation, .)
advmod(principle, obviously)
punct(principle, ,)
det(goal, the)
nsubj(principle, goal)
advmod(goal, here)
acl(goal, propose)
cop(principle, be)
det(principle, the)
compound(principle, guide)
conj(do, principle)
case(opinion, in)
nmod:poss(opinion, Mr.)
flat(Mr., Justice)
nmod:poss(opinion, Frankfurter)
case(Mr., 's)
nmod(principle, opinion)
punct(principle, --)
case(extent, to)
det(extent, the)
obl(principle, extent)
mark(leave, that)
nsubj(leave, Congress)
acl(extent, leave)
det(problem, the)
obj(leave, problem)
case(discretion, to)
amod(discretion, judicial)
obl(leave, discretion)
punct(do, .)
det(rule, the)
amod(rule, same)
nsubj(guide, rule)
case(specialization, of)
nmod(rule, specialization)
cc(division, and)
conj(specialization, division)
case(labor, of)
nmod(division, labor)
root(ROOT, guide)
obj(guide, he)
case(case, in)
det(case, the)
compound(case, FELA)
compound(case, certiorari)
obl(guide, case)
punct(guide, ,)
case(area, in)
det(area, the)
amod(area, administrative)
compound(area, law)
obl(guide, area)
punct(realm, ,)
cc(realm, and)
advmod(realm, indeed)
case(realm, in)
det(realm, the)
amod(realm, whole)
conj(guide, realm)
case(review, of)
amod(review, judicial)
nmod(realm, review)
punct(guide, .)
root(ROOT, Mr.)
flat(Mr., Justice)
amod(doubt, black)
det(doubt, no)
nsubj(concur, doubt)
root(ROOT, concur)
case(principle, in)
obl(concur, principle)
cc(apt, but)
cop(apt, be)
advmod(apt, more)
conj(concur, apt)
mark(make, to)
advcl(apt, make)
obj(make, exception)
mark(achieve, to)
xcomp(make, achieve)
det(result, a)
amod(result, generous)
cc(result, and)
punct(generous, ``)
advmod(result, just)
punct(result, '')
obj(achieve, result)
punct(concur, .)
nsubj:pass(fool, he)
aux(fool, will)
advmod(fool, not)
aux:pass(fool, be)
punct(fool, ``)
root(ROOT, fool)
case(technicality, by)
obl(fool, technicality)
punct(technicality, '')
punct(fool, .)
amod(review, federal)
parataxis(fool, review)
case(decision, of)
compound(decision, state)
nmod(review, decision)
case(exception, with)
amod(exception, few)
nmod(decision, exception)
punct(give, ,)
nsubj(give, Congress)
aux(give, have)
advmod(give, not)
acl:relcl(review, give)
amod(court, federal)
obj(give, court)
amod(authority, exclusive)
obj(give, authority)
mark(enforce, to)
acl(authority, enforce)
obj(enforce, rights)
acl(rights, arise)
case(law, under)
amod(law, federal)
obl(arise, law)
punct(fool, .)
mark(put, to)
advcl(have, put)
obj(put, it)
advmod(put, differently)
punct(have, ,)
compound(court, state)
cc(federal, and)
conj(state, federal)
nsubj(have, court)
root(ROOT, have)
amod(jurisdiction, concurrent)
obj(have, jurisdiction)
case(respect, with)
nmod(jurisdiction, respect)
case(claim, to)
amod(claim, most)
nmod(respect, claim)
case(right, of)
amod(right, federal)
nmod(claim, right)
punct(have, .)
mark(insure, to)
advcl(subject, insure)
obj(insure, uniformity)
case(meaning, in)
det(meaning, the)
nmod(uniformity, meaning)
case(law, of)
amod(law, national)
nmod(meaning, law)
punct(subject, ,)
advmod(subject, however)
punct(subject, ,)
compound(interpretation, state)
nsubj(subject, interpretation)
cop(subject, be)
root(ROOT, subject)
case(review, to)
compound(Court, Supreme)
compound(review, Court)
obl(subject, review)
punct(subject, .)
nsubj:pass(note, it)
aux(note, may)
aux:pass(note, be)
root(ROOT, note)
punct(note, ,)
advmod(note, parenthetically)
punct(note, ,)
mark(urge, that)
mark(evade, to)
advcl(note, evade)
punct(desegregation, ``)
obj(evade, desegregation)
punct(desegregation, '')
det(ex-Justice, a)
nsubj(urge, ex-Justice)
cc(governor, and)
amod(governor, former)
amod(governor, southern)
conj(ex-Justice, governor)
aux(urge, have)
ccomp(note, urge)
obj(urge, Congress)
mark(abolish, to)
xcomp(urge, abolish)
det(authority, this)
compound(authority, review)
obj(abolish, authority)
punct(note, .)
det(result, the)
nsubj(be, result)
punct(be, ,)
advmod(be, of)
fixed(of, course)
punct(be, ,)
aux(be, would)
root(ROOT, be)
mark(mean, that)
amod(law, federal)
nsubj(mean, law)
advmod(mean, inevitably)
aux(mean, would)
ccomp(be, mean)
amod(thing, different)
obj(mean, thing)
case(state, in)
amod(state, different)
obl(mean, state)
punct(be, .)
nsubj(mean, it)
aux(mean, would)
advmod(mean, also)
advmod(mean, probably)
root(ROOT, mean)
amod(thing, different)
obj(mean, thing)
case(state, within)
det(state, the)
amod(state, same)
nmod(thing, state)
punct(mean, --)
case(court, depend)
case(court, upon)
det(court, what)
compound(decision, court)
punct(state, ()
appos(court, state)
cc(federal, or)
conj(state, federal)
punct(state, ))
amod(decision, render)
obj(mean, decision)
punct(mean, .)
nsubj(consider, we)
root(ROOT, consider)
advmod(consider, here)
advmod(few, only)
det(few, a)
obj(consider, few)
case(problem, of)
amod(problem, many)
nmod(few, problem)
acl(problem, involve)
case(relationship, in)
det(relationship, this)
amod(relationship, crucial)
amod(state, federal)
punct(state, -)
compound(relationship, state)
obl(involve, relationship)
punct(consider, .)
det(first, the)
nsubj(be, first)
root(ROOT, be)
mark(raise, that)
nsubj(raise, enforcement)
case(law, of)
amod(law, national)
nmod(enforcement, law)
case(litigation, in)
compound(litigation, state)
nmod(law, litigation)
ccomp(be, raise)
mark(reverse, in)
advcl(raise, reverse)
det(puzzle, the)
amod(puzzle, old)
compound(puzzle, diversity)
obj(reverse, puzzle)
case(relation, of)
det(relation, the)
nmod(puzzle, relation)
case(procedure, of)
nmod(relation, procedure)
case(substance, to)
nmod(relation, substance)
punct(be, .)
root(ROOT, subject)
case(restraint, to)
amod(restraint, certain)
amod(restraint, constitutional)
nmod(subject, restraint)
case(favor, in)
nmod(subject, favor)
case(trial, of)
amod(trial, fair)
nmod(favor, trial)
punct(free, ,)
det(level, each)
nsubj(free, level)
case(government, of)
nmod(level, government)
cop(free, be)
parataxis(subject, free)
mark(devise, to)
advcl(free, devise)
nmod:poss(procedure, its)
amod(procedure, own)
amod(procedure, judicial)
obj(devise, procedure)
punct(subject, .)
nsubj(go, Litigants)
nsubj(choose, who)
acl:relcl(Litigants, choose)
mark(assert, to)
xcomp(choose, assert)
amod(claim, federal)
obj(assert, claim)
case(court, in)
det(court, a)
compound(court, state)
nmod(claim, court)
root(ROOT, go)
case(subject, into)
det(subject, that)
compound(subject, court)
obl(go, subject)
case(rule, to)
nmod:poss(rule, its)
obl(go, rule)
case(procedure, of)
nmod(rule, procedure)
punct(go, . )
det(canon, a)
amod(canon, similar)
nsubj(apply, canon)
root(ROOT, apply)
case(those, to)
obl(apply, those)
nsubj(press, who)
acl:relcl(those, press)
compound(claim, state)
obj(press, claim)
case(tribunal, in)
amod(tribunal, federal)
nmod(claim, tribunal)
punct(tribunal, ,)
advmod(tribunal, e.g.)
punct(press, ,)
case(case, in)
compound(case, diversity)
obl(press, case)
punct(apply, .)
case(controversy, in)
det(controversy, a)
compound(controversy, FELA)
obl(follow, controversy)
det(court, the)
compound(court, state)
nsubj(follow, court)
root(ROOT, follow)
xcomp(follow, establish)
compound(procedure, state)
obj(establish, procedure)
mark(construe, by)
advcl(establish, construe)
det(complaint, a)
amod(complaint, vague)
obj(construe, complaint)
punct(complainant, ``)
advmod(strongly, most)
advmod(complainant, strongly)
case(complainant, against)
punct(complainant, '')
det(complainant, the)
obl(construe, complainant)
punct(follow, .)
case(word, in)
amod(word, other)
nmod(burden, word)
det(burden, the)
root(ROOT, burden)
mark(rest, of)
nsubj(rest, plead)
advmod(rest, clearly)
acl(burden, rest)
case(pleader, upon)
det(pleader, the)
obl(rest, pleader)
case(law, by)
compound(law, state)
obl(rest, law)
punct(burden, .)
det(result, the)
nsubj(be, result)
root(ROOT, be)
mark(dismiss, that)
det(plaintiff, the)
nmod:poss(case, plaintiff)
case(plaintiff, 's)
nsubj:pass(dismiss, case)
aux:pass(dismiss, be)
ccomp(be, dismiss)
punct(be, .)
nsubj(lead, Mr.)
flat(Mr., Justice)
flat(Mr., Black)
ccomp(be, lead)
det(majority, a)
compound(majority, reverse)
obj(lead, majority)
punct(be, :)
punct(be, ``)
amod(rule, Strict)
amod(rule, local)
nsubj:pass(use, rule)
case(plead, of)
nmod(rule, plead)
aux(use, can)
advmod(use, not)
aux:pass(use, be)
root(ROOT, use)
mark(impose, to)
xcomp(use, impose)
amod(burden, unnecessary)
obj(impose, burden)
case(rights, upon)
nmod(burden, rights)
case(recovery, of)
nmod(rights, recovery)
acl(rights, authorize)
case(law, by)
amod(law, federal)
obl(authorize, law)
punct(authorize, '')
punct(use, .)
advmod(use, here)
punct(here, ,)
case(Byrd, as)
fixed(as, in)
det(Byrd, the)
obl(here, Byrd)
flat(Byrd, case)
punct(subsume, ,)
det(element, another)
nsubj:pass(subsume, element)
case(procedure, of)
compound(procedure, state)
nmod(element, procedure)
aux:pass(subsume, be)
acl:relcl(Byrd, subsume)
case(law, to)
amod(law, federal)
obl:npmod(make, judge)
punct(make, -)
amod(law, make)
obl(subsume, law)
punct(dissent, .)
nsubj(dissent, Justices)
nsubj(dissent, Frankfurter)
cc(Jackson, and)
conj(Frankfurter, Jackson)
conj(subsume, dissent)
punct(dissent, :)
punct(dissent, ``)
nummod(state, one)
nsubj(cherish, state)
aux(cherish, may)
root(ROOT, cherish)
obj(cherish, formality)
obj(cherish, more)
case(another, than)
obl(more, another)
punct(cherish, ,)
nummod(state, one)
nsubj(responsive, state)
aux(responsive, may)
cop(responsive, be)
advmod(responsive, more)
parataxis(cherish, responsive)
case(reform, than)
det(reform, another)
case(procedural, to)
amod(reform, procedural)
obl(responsive, reform)
punct(cherish, .)
mark(choose, if)
det(litigant, a)
nsubj(choose, litigant)
advcl(hear, choose)
mark(enforce, to)
xcomp(choose, enforce)
det(right, a)
amod(right, federal)
obj(enforce, right)
case(court, in)
det(court, a)
compound(court, state)
obl(enforce, court)
punct(hear, ,)
nsubj:pass(hear, he)
aux(hear, can)
advmod(hear, not)
aux:pass(hear, be)
root(ROOT, hear)
mark(object, to)
advcl(hear, object)
mark(treat, if)
nsubj:pass(treat, he)
aux:pass(treat, be)
advcl(object, treat)
advmod(treat, exactly)
mark(plaintiff, as)
cop(plaintiff, be)
nsubj:pass(treat, plaintiff)
nsubj(press, who)
acl:relcl(plaintiff, press)
case(claim, like)
obl(press, claim)
acl(claim, arise)
case(law, under)
compound(law, state)
obl(arise, law)
case(regard, with)
obl(arise, regard)
case(form, to)
det(form, the)
nmod(regard, form)
case(which, in)
obl(state, which)
det(claim, the)
nsubj:pass(state, claim)
aux(state, must)
aux:pass(state, be)
acl:relcl(form, state)
punct(particularity, --)
det(particularity, the)
nsubj:pass(state, particularity)
punct(particularity, ,)
case(instance, for)
nmod(particularity, instance)
punct(particularity, ,)
case(which, with)
obl(describe, which)
det(cause, a)
nsubj:pass(describe, cause)
case(action, of)
nmod(cause, action)
aux(describe, must)
aux:pass(describe, be)
acl:relcl(particularity, describe)
punct(describe, .)
amod(law, federal)
obj(describe, law)
punct(describe, ,)
mark(invoke, though)
advcl(describe, invoke)
case(court, in)
det(court, a)
compound(court, state)
obl(invoke, court)
punct(delimit, ,)
conj(invoke, delimit)
det(claim, the)
amod(claim, federal)
obj(delimit, claim)
punct(define, --)
parataxis(delimit, define)
nsubj(give, what)
ccomp(define, give)
det(right, a)
obj(give, right)
mark(recovery, to)
acl(right, recovery)
cc(go, and)
nsubj(go, what)
conj(recovery, go)
mark(prove, to)
xcomp(go, prove)
obj(prove, it)
punct(hear, .)
cc(different, but)
det(form, the)
nsubj(different, form)
case(which, in)
obl(state, which)
det(claim, the)
nsubj:pass(state, claim)
aux(state, must)
aux:pass(state, be)
acl:relcl(form, state)
aux(different, need)
advmod(different, not)
cop(different, be)
root(ROOT, different)
case(what, from)
obl(different, what)
det(State, the)
nsubj(exact, State)
acl:relcl(what, exact)
case(enforcement, in)
det(enforcement, the)
obl(exact, enforcement)
case(obligation, of)
case(obligation, like)
nmod(enforcement, obligation)
acl(obligation, create)
case(it, by)
obl(create, it)
punct(different, ,)
advmod(long, so)
advmod(different, long)
mark(add, as)
det(requirement, a)
nsubj(add, requirement)
aux(add, do)
advmod(add, not)
advcl(long, add)
mark(add, to)
punct(diminish, ,)
cc(diminish, or)
conj(add, diminish)
punct(right, ,)
det(right, the)
obj(diminish, right)
mark(define, as)
acl(right, define)
case(law, by)
amod(law, federal)
obl(define, law)
punct(burden, ,)
cc(burden, nor)
conj(define, burden)
det(realization, the)
obj(burden, realization)
case(right, of)
det(right, this)
nmod(realization, right)
case(actuality, in)
det(actuality, the)
nmod(right, actuality)
case(litigation, of)
nmod(actuality, litigation)
punct(actuality, '')
punct(actuality, .)
det(problem, another)
appos(right, problem)
case(area, in)
det(area, the)
nmod(problem, area)
case(relationship, of)
amod(state, federal)
punct(state, -)
compound(relationship, state)
nmod(area, relationship)
cop(this, be)
parataxis(problem, this)
punct(this, :)
nsubj(this, what)
acl:relcl(what, constitute)
amod(error, reversible)
obj(constitute, error)
case(decision, in)
det(decision, a)
compound(decision, state)
obl(constitute, decision)
punct(constitute, ?)
punct(involve, ?)
nsubj(involve, Terminiello)
punct(involve, v.)
nsubj(involve, Chicago)
parataxis(this, involve)
det(conviction, a)
obj(involve, conviction)
case(conduct, for)
amod(conduct, disorderly)
nmod(conviction, conduct)
case(ordinance, under)
det(ordinance, a)
amod(ordinance, local)
nmod(conduct, ordinance)
punct(involve, .)
det(conduct, the)
nsubj(speech, conduct)
case(question, in)
nmod(conduct, question)
cop(speech, be)
det(speech, a)
root(ROOT, speech)
punct(speech, .)
det(accuse, the)
nsubj(object, accuse)
aux(object, do)
advmod(object, not)
root(ROOT, object)
case(charge, to)
det(court, the)
compound(court, trial)
nmod:poss(charge, court)
case(court, 's)
obl(object, charge)
case(jury, to)
det(jury, the)
nmod(charge, jury)
mark(constitute, that)
nsubj(constitute, discourse)
punct(constitute, ``)
aux(constitute, may)
acl(jury, constitute)
det(breach, a)
obj(constitute, breach)
case(peace, of)
det(peace, the)
nmod(breach, peace)
mark(stir, if)
nsubj(stir, it)
advcl(constitute, stir)
det(public, the)
obj(stir, public)
mark(anger, to)
advcl(stir, anger)
punct(invite, ,)
conj(stir, invite)
obj(invite, dispute)
punct(bring, ,)
conj(invite, bring)
case(condition, about)
det(condition, a)
obl(bring, condition)
case(unrest, of)
nmod(condition, unrest)
punct(object, .)
punct(object, '')
case(purpose, for)
amod(purpose, present)
obl(assume, purpose)
nsubj:pass(assume, it)
aux(assume, may)
aux:pass(assume, be)
root(ROOT, assume)
mark(object, that)
det(charge, this)
nsubj(speech, charge)
advmod(narrowly, so)
advmod(limited, narrowly)
amod(speech, limited)
nsubj(violate, speech)
mark(violate, as)
mark(violate, to)
advcl(assume, violate)
det(constitution, the)
amod(constitution, federal)
obj(violate, constitution)
punct(assume, .)
mark(raise, though)
det(accuse, the)
nsubj(raise, accuse)
advcl(object, raise)
amod(objection, many)
amod(objection, other)
obj(raise, objection)
punct(object, ,)
nsubj(object, he)
aux(object, do)
advmod(object, not)
ccomp(assume, object)
case(point, on)
det(point, this)
amod(point, crucial)
obl(object, point)
case(stage, at)
det(stage, any)
obl(object, stage)
case(proceedings, of)
det(proceedings, the)
nmod(stage, proceedings)
punct(assume, .)
nsubj(claim, that)
advcl(claim, be)
punct(claim, ,)
nsubj(claim, he)
aux(claim, do)
advmod(claim, not)
root(ROOT, claim)
case(any, in)
obl(claim, any)
case(court, of)
det(court, the)
nummod(court, four)
nmod(any, court)
case(which, through)
obl(progress, which)
nmod:poss(case, he)
nsubj(progress, case)
acl:relcl(court, progress)
mark(deny, that)
det(charge, the)
compound(charge, jury)
nsubj(deny, charge)
aux(deny, have)
ccomp(progress, deny)
iobj(deny, he)
det(right, any)
amod(right, federal)
obj(deny, right)
punct(claim, .)
advmod(else, how)
advmod(explain, else)
aux(explain, can)
nsubj(explain, one)
root(ROOT, explain)
punct(explain, ,)
case(example, for)
obl(allow, example)
punct(allow, ,)
ccomp(explain, allow)
det(survival, the)
obj(allow, survival)
case(right, of)
det(right, the)
nmod(survival, right)
mark(amortize, to)
acl(right, amortize)
compound(discount, bond)
obj(amortize, discount)
cc(premium, and)
conj(discount, premium)
punct(section, ()
appos(discount, section)
nummod(section, 381)
punct(c, ()
appos(section, c)
punct(c, ))
punct(9, ()
nummod(c, 9)
punct(9, ))
punct(9, ))
punct(right, ,)
cc(right, but)
advmod(right, not)
det(right, the)
conj(discount, right)
mark(amortize, to)
acl(right, amortize)
compound(issue, bond)
compound(expense, issue)
obj(amortize, expense)
punct(right, ;)
punct(right, ;)
cc(allow, or)
conj(amortize, allow)
det(deduction, a)
obj(allow, deduction)
case(payment, for)
nmod(deduction, payment)
case(obligation, of)
amod(obligation, certain)
nmod(payment, obligation)
case(transferor, of)
det(transferor, a)
nmod(obligation, transferor)
acl(transferor, assume)
case(reorganization, in)
det(reorganization, the)
obl(assume, reorganization)
punct(section, ()
appos(reorganization, section)
compound(section, 381)
punct(c, ()
appos(section, c)
punct(c, ))
punct(16, ()
nummod(c, 16)
punct(16, ))
punct(16, ))
punct(deduction, ,)
cc(deduction, but)
advmod(deduction, not)
det(deduction, a)
conj(reorganization, deduction)
case(loss, for)
compound(loss, theft)
nmod(deduction, loss)
acl(loss, sustain)
case(transferor, by)
det(transferor, a)
obl(sustain, transferor)
case(reorganization, prior)
fixed(prior, to)
det(reorganization, a)
obl(sustain, reorganization)
cc(discover, but)
conj(sustain, discover)
case(it, after)
obl(discover, it)
punct(discover, ;)
punct(discover, ;)
cc(require, or)
conj(discover, require)
det(transferor, a)
obj(require, transferor)
mark(carry, to)
acl(transferor, carry)
compound:prt(carry, over)
nmod:poss(method, its)
obj(carry, method)
case(depreciation, of)
nmod(method, depreciation)
punct(section, ()
appos(method, section)
nummod(section, 381)
punct(c, ()
appos(section, c)
punct(c, ))
punct(6, ()
nummod(c, 6)
punct(6, ))
punct(6, ))
punct(allow, ,)
cc(allow, but)
advmod(allow, not)
conj(carry, allow)
amod(amortization, rapid)
obj(allow, amortization)
case(facility, of)
compound(facility, emergency)
nmod(amortization, facility)
acl(facility, transfer)
case(reorganization, in)
det(reorganization, a)
obl(transfer, reorganization)
punct(facility, ;)
punct(facility, ;)
cc(allow, or)
conj(transfer, allow)
obj(allow, survival)
case(carryover, of)
det(carryover, a)
compound(carryover, dividend)
nmod(survival, carryover)
case(company, to)
det(company, a)
amod(company, personal)
compound(company, holding)
nmod(carryover, company)
punct(section, ()
appos(company, section)
nummod(section, 381)
punct(c, ()
appos(section, c)
punct(c, ))
punct(14, ()
nummod(c, 14)
punct(14, ))
punct(14, ))
punct(carryover, ,)
cc(carryover, but)
advmod(carryover, not)
conj(company, carryover)
case(credit, of)
amod(credit, excess)
compound(credit, tax)
nmod(carryover, credit)
case(tax, for)
amod(tax, foreign)
nmod(credit, tax)
punct(14, ?)
punct(14, ?)
det(item, these)
nsubj(seem, item)
punct(most, ,)
cc(most, and)
conj(item, most)
case(other, of)
det(other, the)
nmod(most, other)
acl(other, list)
advmod(list, above)
punct(seem, ,)
root(ROOT, seem)
advmod(comparable, quite)
xcomp(seem, comparable)
case(item, to)
obl(comparable, item)
nmod:poss(right, whose)
nsubj:pass(provide, right)
case(survival, of)
nmod(right, survival)
aux:pass(provide, be)
acl:relcl(item, provide)
obl(provide, for)
case(section, in)
obl(provide, section)
nummod(section, 381)
punct(seem, .)
expl(seem, there)
aux(seem, do)
advmod(seem, not)
root(ROOT, seem)
mark(be, to)
xcomp(seem, be)
det(basis, any)
amod(basis, reasonable)
nsubj(be, basis)
case(distinction, for)
nmod(basis, distinction)
cc:preconj(term, either)
case(term, in)
nmod(basis, term)
case(nature, of)
det(nature, the)
nmod(term, nature)
case(attribute, of)
det(attribute, the)
compound(attribute, tax)
nmod(nature, attribute)
cc(term, or)
case(term, in)
conj(nature, term)
case(possibility, of)
compound(avoidance, tax)
punct(avoidance, -)
compound(possibility, avoidance)
nmod(term, possibility)
punct(seem, .)
case(respect, with)
obl(suggest, respect)
case(item, to)
nmod(respect, item)
case(provision, such)
fixed(such, as)
det(provision, these)
det(provision, the)
nmod(respect, provision)
case(section, of)
nmod(provision, section)
nummod(section, 381)
punct(c, ()
appos(section, c)
punct(c, ))
punct(provision, ,)
acl(provision, view)
case(perspective, in)
amod(perspective, historical)
obl(view, perspective)
punct(suggest, ,)
root(ROOT, suggest)
det(rule, a)
obj(suggest, rule)
acl(rule, require)
obj(require, survival)
punct(require, ,)
mark(beneficial, whether)
det(item, the)
nsubj(beneficial, item)
cop(beneficial, be)
ccomp(require, beneficial)
cc(detrimental, or)
conj(beneficial, detrimental)
case(corporation, to)
det(corporation, the)
amod(corporation, survive)
obl(beneficial, corporation)
punct(suggest, .)
case(extent, to)
det(extent, this)
obl(seem, extent)
det(stretch, some)
nsubj(seem, stretch)
case(meaning, of)
det(meaning, the)
amod(meaning, literal)
nmod(stretch, meaning)
case(report, of)
det(report, the)
compound(report, committee)
nmod(meaning, report)
root(ROOT, seem)
xcomp(seem, justified)
punct(justified, ,)
case(conflict, since)
det(conflict, the)
amod(conflict, literal)
compound(conflict, meaning)
obl(justified, conflict)
case(implication, with)
det(implication, the)
amod(implication, clear)
nmod(conflict, implication)
punct(implication, ,)
mark(language, if)
advmod(language, not)
det(language, the)
acl(implication, language)
punct(language, ,)
case(statute, of)
det(statute, the)
nmod(language, statute)
punct(seem, .)
nsubj:pass(contend, it)
aux:pass(contend, be)
advmod(contend, not)
root(ROOT, contend)
mark(prescribe, that)
nsubj(prescribe, section)
nummod(section, 381)
aux(prescribe, should)
ccomp(contend, prescribe)
det(survival, the)
obj(prescribe, survival)
case(all, of)
nmod(survival, all)
case(attribute, of)
det(transferor, the)
nmod:poss(attribute, transferor)
case(transferor, 's)
compound(attribute, tax)
nmod(all, attribute)
punct(contend, .)
det:predet(interpretation, such)
det(interpretation, a)
nsubj:pass(justified, interpretation)
aux(justified, could)
advmod(justified, not)
aux:pass(justified, be)
root(ROOT, justified)
case(construction, by)
det(construction, a)
obl(justified, construction)
case(statute, of)
det(statute, the)
nmod(construction, statute)
advmod(statute, alone)
punct(justified, ;)
punct(justified, ;)
nsubj(violate, it)
aux(violate, would)
advmod(violate, certainly)
parataxis(justified, violate)
det(intention, the)
obj(violate, intention)
case(Congress, of)
nmod(intention, Congress)
mark(express, as)
acl(intention, express)
case(report, in)
det(report, the)
compound(report, committee)
obl(express, report)
punct(violate, ;)
punct(violate, ;)
cc(instance, and)
case(instance, in)
case(least, at)
nmod(one, least)
nummod(instance, one)
obl(contrary, instance)
punct(instance, ,)
acl(instance, involve)
compound(claim, refund)
obj(involve, claim)
punct(contrary, ,)
nsubj(contrary, it)
aux(contrary, might)
cop(contrary, be)
parataxis(violate, contrary)
case(provision, to)
det(provision, another)
obl(contrary, provision)
case(code, of)
det(code, the)
compound(States, United)
compound(code, States)
nmod(provision, code)
punct(justified, .)
compound(claim, refund)
nsubj(void, claim)
nsubj(void, section)
nummod(section, 203)
case(code, of)
det(code, the)
compound(States, United)
compound(code, States)
nmod(section, code)
root(ROOT, void)
det(assignment, a)
obj(void, assignment)
case(claim, of)
det(claim, a)
nmod(assignment, claim)
case(government, against)
det(government, the)
nmod(claim, government)
mark(make, unless)
advcl(void, make)
mark(allow, after)
nsubj:pass(allow, it)
aux(allow, have)
aux:pass(allow, be)
advcl(make, allow)
punct(ascertain, ,)
det(amount, the)
nsubj:pass(ascertain, amount)
amod(amount, due)
aux(ascertain, have)
aux:pass(ascertain, be)
conj(allow, ascertain)
punct(issue, ,)
cc(issue, and)
det(warrant, a)
nsubj:pass(issue, warrant)
case(payment, for)
nmod:poss(payment, its)
nmod(warrant, payment)
aux(issue, have)
aux:pass(issue, be)
conj(ascertain, issue)
punct(void, .)
mark(development, if)
nsubj(development, it)
cop(development, be)
advmod(development, not)
case(development, for)
amod(development, judicial)
advcl(prohibit, development)
case(exception, of)
amod(exception, certain)
nmod(development, exception)
punct(prohibit, ,)
det(section, this)
nsubj(prohibit, section)
aux(prohibit, would)
root(ROOT, prohibit)
det(suit, a)
obj(prohibit, suit)
case(refund, for)
nmod(suit, refund)
case(corporation, by)
det(corporation, a)
compound(corporation, acquire)
nmod(refund, corporation)
case(tax, for)
nmod(corporation, tax)
acl(tax, pay)
case(corporation, by)
det(corporation, a)
compound(corporation, transferor)
obl(pay, corporation)
punct(meet, ,)
advmod(meet, even)
mark(meet, though)
det(reorganization, the)
nsubj(meet, reorganization)
advcl(merger, meet)
det(requirement, the)
obj(meet, requirement)
case(section, of)
nmod(requirement, section)
nummod(section, 381)
punct(a, ()
nummod(merger, a)
punct(a, ))
punct(a, .)
det(exception, a)
advmod(recognize, clearly)
amod(exception, recognize)
nsubj(merger, exception)
cop(merger, be)
det(merger, a)
amod(merger, statutory)
parataxis(prohibit, merger)
cc(consolidation, or)
conj(merger, consolidation)
punct(merger, .)
det(case, the)
amod(case, lead)
nsubj(hold, case)
punct(hold, ,)
compound(Railway, Seaboard)
compound(line, Air)
compound(Railway, line)
appos(case, Railway)
case(States, v.)
compound(States, United)
nmod(Railway, States)
punct(hold, ,)
root(ROOT, hold)
mark(sue, that)
det(transferee, the)
nsubj(sue, transferee)
aux(sue, could)
ccomp(hold, sue)
case(refund, for)
det(refund, a)
obl(sue, refund)
case(tax, of)
nmod(refund, tax)
acl(tax, pay)
case(transferor, by)
det(transferor, the)
obl(pay, transferor)
punct(follow, ,)
cc(follow, and)
nsubj:pass(follow, it)
aux(follow, have)
aux:pass(follow, be)
advmod(follow, consistently)
conj(sue, follow)
punct(hold, .)
det(Court, the)
nsubj(say, Court)
root(ROOT, say)
det(purpose, the)
nsubj(spare, purpose)
case(section, of)
det(section, the)
nmod(purpose, section)
aux(spare, be)
advmod(spare, principally)
mark(spare, to)
ccomp(say, spare)
det(government, the)
iobj(spare, government)
det(embarrassment, the)
obj(spare, embarrassment)
cc(trouble, and)
conj(embarrassment, trouble)
mark(deal, of)
acl(embarrassment, deal)
case(party, with)
amod(party, several)
obl(deal, party)
punct(one, ,)
nsubj(stranger, one)
case(they, of)
nmod(one, they)
det(stranger, a)
acl:relcl(party, stranger)
case(claim, to)
det(claim, the)
nmod(stranger, claim)
punct(prevent, ,)
cc(prevent, and)
mark(prevent, to)
conj(stranger, prevent)
obj(prevent, traffic)
case(claim, in)
obl(prevent, claim)
punct(claim, ,)
advmod(tenuous, particularly)
amod(claim, tenuous)
conj(claim, claim)
punct(claim, ,)
case(government, against)
det(government, the)
nmod(claim, government)
punct(government, .)
det(reason, neither)
nsubj(say, reason)
punct(say, ,)
acl:relcl(claim, say)
det(Court, the)
nsubj(apply, Court)
punct(apply, ,)
ccomp(say, apply)
case(case, to)
det(case, the)
obl(apply, case)
case(hand, at)
nmod(case, hand)
punct(say, ;)
punct(say, ;)
advmod(presume, furthermore)
punct(presume, ,)
nsubj:pass(presume, Congress)
aux(presume, could)
advmod(presume, not)
aux:pass(presume, be)
parataxis(apply, presume)
mark(intend, to)
aux(intend, have)
xcomp(presume, intend)
mark(obstruct, to)
xcomp(intend, obstruct)
obj(obstruct, merger)
acl(merger, approve)
case(state, by)
det(state, the)
obl(approve, state)
punct(say, .)
amod(exception, other)
nsubj(assignment, exception)
cop(assignment, be)
root(ROOT, assignment)
case(benefit, for)
det(benefit, the)
nmod(assignment, benefit)
case(creditor, of)
nmod(benefit, creditor)
punct(dissolution, ,)
amod(dissolution, corporate)
conj(creditor, dissolution)
punct(transfer, ,)
conj(creditor, transfer)
case(descent, by)
nmod(transfer, descent)
punct(transfer, ,)
cc(transfer, or)
conj(creditor, transfer)
case(subrogation, by)
nmod(transfer, subrogation)
punct(assignment, .)
nsubj:pass(classify, exception)
aux:pass(classify, be)
advmod(classify, often)
root(ROOT, classify)
case(transfer, as)
obl(classify, transfer)
case(operation, by)
punct(operation, ``)
nmod(transfer, operation)
case(law, of)
nmod(operation, law)
punct(operation, '')
punct(operation, .)
det(reorganization, a)
obl:npmod(free, tax)
punct(free, -)
amod(reorganization, free)
nsubj:pass(classify, reorganization)
advmod(comply, not)
acl(reorganization, comply)
case(merger, with)
det(merger, the)
obl(comply, merger)
cc(statute, or)
compound(statute, consolidation)
conj(merger, statute)
case(state, of)
det(state, the)
nmod(statute, state)
acl(state, involve)
cop(difficult, be)
conj(classify, difficult)
mark(fit, to)
xcomp(difficult, fit)
case(mold, into)
det(mold, a)
punct(operation, ``)
obl(fit, operation)
case(law, of)
nmod(operation, law)
punct(operation, '')
obl(fit, mold)
punct(classify, .)
mark(way, although)
nsubj(way, it)
cop(way, be)
case(way, in)
det(way, some)
advcl(hold, way)
amod(way, comparable)
case(sale, to)
det(sale, a)
amod(sale, voluntary)
obl(comparable, sale)
case(asset, of)
nmod(sale, asset)
case(cash, for)
nmod(asset, cash)
punct(apply, ,)
case(section, to)
det(section, which)
obl(apply, section)
nummod(section, 203)
advmod(apply, quite)
advmod(apply, clearly)
advcl(hold, apply)
punct(hold, ,)
det(court, the)
nsubj(hold, court)
cc(Treasury, and)
conj(court, Treasury)
aux(hold, have)
root(ROOT, hold)
mark(sue, that)
csubj(sue, acquire)
nsubj(sue, corporation)
case(type, in)
amod(type, several)
nmod(corporation, type)
case(reorganization, of)
amod(reorganization, non-taxable)
nmod(type, reorganization)
aux(sue, may)
ccomp(hold, sue)
case(refund, for)
obl(sue, refund)
case(tax, of)
nmod(refund, tax)
acl(refund, pay)
case(transferor, by)
obl(pay, transferor)
punct(hold, . )
det(case, a)
amod(case, recent)
nsubj(Canneries, case)
case(point, in)
nmod(case, point)
cop(Canneries, be)
compound(Canneries, Mitchell)
root(ROOT, Canneries)
case(States, v.)
compound(States, United)
nmod(Canneries, States)
punct(Canneries, ,)
case(which, in)
obl(transfer, which)
det(claim, a)
nsubj:pass(transfer, claim)
case(government, against)
det(government, the)
nmod(claim, government)
aux:pass(transfer, be)
acl:relcl(Canneries, transfer)
advmod(transfer, first)
case(corporation, from)
det(corporation, a)
obl(transfer, corporation)
case(partnership, to)
det(partnership, a)
nmod(corporation, partnership)
punct(partnership, ,)
nmod:poss(partner, whose)
nsubj(stockholder, partner)
cop(stockholder, be)
amod(stockholder, former)
acl:relcl(partnership, stockholder)
punct(corporation, ,)
cc(corporation, and)
advmod(corporation, then)
case(corporation, to)
det(corporation, another)
conj(stockholder, corporation)
acl(corporation, form)
case(partner, by)
det(partner, the)
obl(form, partner)
punct(Canneries, .)
advcl(cite, holding)
det(corporation, the)
amod(corporation, final)
obj(holding, corporation)
acl(corporation, entitle)
case(sue, to)
obl(entitle, sue)
case(claim, on)
det(claim, the)
obl(entitle, claim)
punct(cite, ,)
det(Court, the)
nsubj(cite, Court)
root(ROOT, cite)
det(Seaboard, the)
obj(cite, Seaboard)
punct(Trading, ,)
compound(Trading, Novo)
conj(Seaboard, Trading)
punct(case, ,)
cc(case, and)
compound(case, Roomberg)
conj(Seaboard, case)
case(proposition, for)
det(proposition, the)
obl(cite, proposition)
mark(assignment, that)
punct(transfer, ``)
nsubj(assignment, transfer)
case(operation, by)
nmod(transfer, operation)
case(law, of)
nmod(operation, law)
cc(conjunction, or)
case(conjunction, in)
conj(transfer, conjunction)
case(change, with)
nmod(conjunction, change)
case(structure, of)
amod(structure, corporate)
nmod(change, structure)
cop(assignment, be)
advmod(assignment, not)
acl(proposition, assignment)
acl(assignment, prohibit)
case(statute, by)
det(statute, the)
obl(prohibit, statute)
punct(assignment, '')
punct(assignment, .)
case(case, in)
det(case, a)
amod(case, earlier)
obl(form, case)
punct(Kingan, ,)
appos(case, Kingan)
cc(Co., &)
conj(Kingan, Co.)
case(States, v.)
compound(States, United)
nmod(Kingan, States)
punct(form, ,)
det(corporation, a)
amod(corporation, american)
nsubj:pass(form, corporation)
aux:pass(form, be)
acl(proposition, form)
case(purpose, for)
det(purpose, the)
obl(form, purpose)
mark(acquire, of)
acl(purpose, acquire)
det(stock, the)
obj(acquire, stock)
case(corporation, of)
det(corporation, a)
amod(corporation, british)
nmod(stock, corporation)
case(exchange, in)
obl(acquire, exchange)
case(stock, for)
nmod:poss(stock, its)
amod(stock, own)
nmod(exchange, stock)
cc(liquidate, and)
advmod(liquidate, then)
conj(acquire, liquidate)
det(corporation, the)
amod(corporation, british)
obj(liquidate, corporation)
punct(cite, .)
det(statute, the)
amod(statute, anti-assignment)
nsubj:pass(hold, statute)
aux:pass(hold, be)
root(ROOT, hold)
advmod(prevent, not)
mark(prevent, to)
xcomp(hold, prevent)
det(corporation, the)
amod(corporation, american)
obj(prevent, corporation)
mark(sue, from)
advcl(prevent, sue)
case(refund, for)
det(refund, a)
obl(sue, refund)
case(tax, of)
nmod(refund, tax)
acl(tax, pay)
case(corporation, by)
det(corporation, the)
amod(corporation, british)
obl(pay, corporation)
punct(hold, .)
det(transaction, the)
nsubj(qualify, transaction)
advmod(qualify, presumably)
aux(qualify, would)
aux(qualify, have)
root(ROOT, qualify)
case(section, under)
obl(qualify, section)
nummod(section, 368)
punct(a, ()
nummod(qualify, a)
punct(a, ))
punct(1, ()
compound(a, 1)
punct(1, ))
case(reorganization, as)
det(reorganization, a)
amod(reorganization, contractual)
obl(qualify, reorganization)
punct(reorganization, ,)
acl(reorganization, follow)
case(liquidation, by)
det(liquidation, a)
compound(liquidation, section)
nummod(section, 332)
obl(follow, liquidation)
punct(section, ,)
cc(section, but)
advmod(section, not)
case(section, under)
conj(liquidation, section)
nummod(section, 368)
punct(a, ()
compound(1, a)
punct(a, ))
punct(1, ()
nummod(merger, 1)
punct(1, ))
case(merger, as)
det(merger, a)
amod(merger, statutory)
nmod(section, merger)
case(consolidation, of)
nmod(merger, consolidation)
punct(qualify, .)
det(Court, the)
nsubj(rely, Court)
punct(rely, ,)
advmod(rely, nevertheless)
punct(rely, ,)
root(ROOT, rely)
case(case, on)
det(case, the)
compound(case, Seaboard)
obl(rely, case)
cc(mention, and)
advmod(mention, also)
conj(rely, mention)
mark(same, that)
det(shareholder, the)
nsubj(same, shareholder)
case(corporation, of)
det(corporation, the)
nummod(corporation, two)
nmod(shareholder, corporation)
cop(same, be)
det(same, the)
ccomp(mention, same)
punct(rely, .)
case(substance, in)
obl(say, substance)
punct(say, ,)
root(ROOT, say)
det(Court, the)
nsubj(be, Court)
punct(be, ,)
expl(be, there)
ccomp(say, be)
det(transfer, no)
nsubj(be, transfer)
case(title, of)
amod(title, equitable)
nmod(transfer, title)
punct(arrive, .)
det(Treasury, the)
nsubj(arrive, Treasury)
ccomp(say, arrive)
case(conclusion, at)
advmod(conclusion, substantially)
det(conclusion, the)
amod(conclusion, same)
obl(arrive, conclusion)
punct(skirt, ,)
cc(skirt, but)
conj(arrive, skirt)
det(problem, the)
obj(skirt, problem)
case(section, of)
nmod(problem, section)
nummod(section, 203)
case(code, of)
det(code, the)
compound(States, United)
compound(code, States)
nmod(section, code)
punct(say, .)
compound(ruling, Revenue)
nsubj(provide, ruling)
nummod(ruling, 54)
case(17, -)
nmod(54, 17)
root(ROOT, provide)
mark(liquidate, that)
mark(liquidate, if)
det(corporation, the)
nsubj:pass(liquidate, corporation)
case(which, against)
obl(assess, which)
det(tax, a)
nsubj:pass(assess, tax)
aux:pass(assess, be)
acl:relcl(corporation, assess)
aux(liquidate, have)
advmod(liquidate, since)
aux:pass(liquidate, be)
ccomp(provide, liquidate)
case(merger, by)
obl(liquidate, merger)
case(corporation, with)
det(corporation, a)
compound(corporation, successor)
nmod(merger, corporation)
punct(file, ,)
det(claim, a)
nsubj:pass(file, claim)
case(refund, for)
nmod(claim, refund)
aux(file, should)
aux:pass(file, be)
ccomp(provide, file)
case(successor, by)
det(successor, the)
obl(file, successor)
case(name, in)
det(name, the)
nmod(successor, name)
cc(behalf, and)
case(behalf, on)
conj(name, behalf)
case(corporation, of)
det(corporation, the)
nmod(behalf, corporation)
nsubj(pay, which)
acl:relcl(corporation, pay)
det(tax, the)
obj(pay, tax)
punct(pay, ,)
acl(tax, follow)
case(name, by)
det(name, the)
obl(follow, name)
case(corporation, of)
det(corporation, the)
compound(corporation, successor)
nmod(name, corporation)
punct(provide, .)
amod(evidence, Proper)
nsubj:pass(file, evidence)
case(liquidation, of)
det(liquidation, the)
nmod(evidence, liquidation)
cc(succession, and)
conj(liquidation, succession)
aux(file, must)
advmod(file, also)
aux:pass(file, be)
root(ROOT, file)
punct(file, .)
mark(matter, if)
det(succession, the)
nsubj(matter, succession)
cop(matter, be)
det(matter, a)
advcl(suffice, matter)
case(record, of)
amod(record, public)
nmod(matter, record)
punct(suffice, ,)
nsubj(suffice, certificate)
case(secretary, of)
det(secretary, the)
nmod(certificate, secretary)
case(State, of)
nmod(secretary, State)
cc(official, or)
amod(official, other)
amod(official, public)
nmod(secretary, official)
acl(certificate, have)
obj(have, custody)
case(document, of)
det(document, the)
nmod(custody, document)
aux(suffice, will)
root(ROOT, suffice)
punct(suffice, ;)
punct(suffice, ;)
mark(record, if)
det(succession, the)
nsubj(record, succession)
cop(record, be)
advmod(record, not)
case(record, of)
advcl(suffice, record)
punct(require, ,)
det(document, all)
nsubj:pass(require, document)
acl(document, relate)
case(succession, to)
amod(succession, such)
obl(relate, succession)
punct(certified, ,)
advmod(certified, properly)
acl(succession, certified)
punct(require, ,)
aux:pass(require, be)
ccomp(suffice, require)
punct(require, .)
det(proof, the)
amod(proof, former)
nsubj(seem, proof)
root(ROOT, seem)
xcomp(seem, applicable)
case(merger, to)
det(merger, a)
amod(merger, statutory)
obl(applicable, merger)
cc(consolidation, or)
conj(merger, consolidation)
punct(merger, ,)
det(latter, the)
appos(merger, latter)
case(acquisition, to)
det(acquisition, a)
amod(acquisition, contractual)
nmod(latter, acquisition)
punct(seem, .)
det(ruling, the)
nsubj(apply, ruling)
aux(apply, would)
advmod(apply, not)
punct(apply, ,)
advmod(apply, however)
punct(apply, ,)
root(ROOT, apply)
case(acquisition, to)
det(acquisition, a)
obl(apply, acquisition)
case(asset, of)
nmod(acquisition, asset)
case(cash, for)
nmod(acquisition, cash)
punct(apply, . )
det(ruling, a)
amod(ruling, recent)
nsubj(cite, ruling)
punct(ruling, ,)
mark(confusing, although)
advmod(confusing, rather)
advcl(cite, confusing)
punct(cite, ,)
root(ROOT, cite)
cc(follow, and)
conj(cite, follow)
root(ROOT, Rev.)
flat(Rev., Rul.)
list(Rev., 54)
case(17, -)
nmod(54, 17)
punct(Rev., .)
det(ruling, the)
nsubj(suggest, ruling)
root(ROOT, suggest)
advmod(suggest, also)
mark(apply, that)
nsubj(apply, it)
ccomp(suggest, apply)
case(reorganization, to)
cc:preconj(reorganization, either)
det(reorganization, a)
amod(reorganization, statutory)
cc(contractual, or)
conj(statutory, contractual)
obl(apply, reorganization)
punct(suggest, .)
advmod(appear, hence)
punct(appear, ,)
det(corporation, a)
compound(corporation, successor)
nsubj(appear, corporation)
case(reorganization, in)
det(reorganization, a)
compound(reorganization, C)
nmod(corporation, reorganization)
root(ROOT, appear)
xcomp(appear, entitle)
case(sue, to)
obl(entitle, sue)
case(refund, for)
det(refund, a)
obl(entitle, refund)
case(tax, of)
nmod(refund, tax)
acl(tax, pay)
case(corporation, by)
det(corporation, the)
amod(corporation, merge)
obl(pay, corporation)
case(section, despite)
obl(pay, section)
nummod(section, 203)
punct(appear, .)
case(reorganization, in)
det(reorganization, a)
compound(reorganization, b)
root(ROOT, reorganization)
punct(reorganization, ,)
acl(reorganization, follow)
case(liquidation, by)
det(liquidation, a)
compound(liquidation, section)
nummod(section, 332)
obl(follow, liquidation)
punct(case, ,)
det(case, those)
appos(liquidation, case)
nsubj(hold, which)
acl:relcl(case, hold)
mark(inapplicable, that)
nsubj(inapplicable, section)
nummod(section, 203)
cop(inapplicable, be)
ccomp(hold, inapplicable)
case(transfer, to)
obl(inapplicable, transfer)
case(appear, in)
compound(appear, liquidation)
nmod(transfer, appear)
mark(permit, to)
advcl(inapplicable, permit)
det(corporation, the)
compound(corporation, successor)
obj(permit, corporation)
case(sue, to)
obl(permit, sue)
case(refund, for)
obl(permit, refund)
case(tax, of)
nmod(refund, tax)
acl(tax, pay)
case(transferor, by)
det(transferor, the)
obl(pay, transferor)
punct(reorganization, .)
case(fact, in)
obl(way, fact)
punct(way, ,)
det(purchase, a)
compound(purchase, cash)
nsubj(way, purchase)
case(stock, of)
det(corporation, a)
nmod:poss(stock, corporation)
case(corporation, 's)
nmod(purchase, stock)
acl(stock, follow)
case(liquidation, by)
obl(follow, liquidation)
aux(way, might)
advmod(way, also)
cop(way, be)
det(way, a)
amod(way, effective)
root(ROOT, way)
mark(transfer, to)
acl(way, transfer)
det(claim, a)
obj(transfer, claim)
case(refund, for)
nmod(claim, refund)
mark(apply, if)
det(doctrine, the)
compound(Diamond, Kimbell)
punct(Diamond, -)
compound(doctrine, Diamond)
nsubj:pass(apply, doctrine)
aux:pass(apply, be)
advmod(apply, not)
advcl(transfer, apply)
mark(eliminate, to)
advcl(apply, eliminate)
det(step, the)
amod(step, intermediate)
obj(eliminate, step)
punct(way, .)
det(result, these)
nsubj(appear, result)
root(ROOT, appear)
obj(appear, sound)
punct(appear, .)
mark(state, as)
advcl(be, state)
case(Seaboard, in)
obl(state, Seaboard)
cc(case, and)
amod(case, numerous)
amod(case, other)
conj(Seaboard, case)
punct(be, ,)
det(reason, the)
nummod(reason, two)
amod(reason, primary)
nsubj(be, reason)
case(enactment, for)
det(enactment, the)
nmod(reason, enactment)
case(section, of)
nmod(enactment, section)
nummod(section, 203)
case(code, of)
det(code, the)
compound(States, United)
compound(code, States)
nmod(enactment, code)
root(ROOT, be)
mark(prevent, to)
ccomp(be, prevent)
det(government, the)
obj(prevent, government)
mark(have, from)
advcl(prevent, have)
mark(deal, to)
xcomp(have, deal)
case(claimant, with)
advmod(one, more)
fixed(more, than)
nummod(claimant, one)
obl(deal, claimant)
cc(prevent, and)
mark(prevent, to)
conj(deal, prevent)
det(assignment, the)
obj(prevent, assignment)
case(claim, of)
amod(claim, meretricious)
nmod(assignment, claim)
case(basis, on)
det(basis, a)
compound(fee, contingent)
punct(fee, -)
compound(basis, fee)
nmod(claim, basis)
punct(be, .)
det(case, the)
nsubj(allow, case)
aux(allow, have)
root(ROOT, allow)
obj(allow, transfer)
case(claim, of)
nmod(transfer, claim)
mark(change, if)
amod(ownership, beneficial)
nsubj:pass(change, ownership)
aux:pass(change, be)
advmod(change, not)
advcl(allow, change)
punct(allow, .)
det(reason, the)
amod(reason, first)
nsubj(apply, reason)
aux(apply, would)
advmod(apply, never)
root(ROOT, apply)
case(transfer, to)
det(transfer, a)
compound(transfer, reorganization)
obl(apply, transfer)
nsubj(meet, which)
acl:relcl(transfer, meet)
det(condition, the)
obj(meet, condition)
case(section, of)
nmod(condition, section)
compound(section, 381)
punct(a, ()
nummod(type, a)
punct(a, ))
punct(type, ,)
nsubj(type, which)
cop(type, be)
det(type, the)
amod(type, only)
acl:relcl(transfer, type)
advmod(type, presently)
case(discussion, under)
nmod(type, discussion)
punct(section, .)
obl:tmod(apply, section)
nummod(section, 381)
punct(a, ()
nummod(apply, a)
punct(a, ))
parataxis(apply, apply)
advmod(transfer, only)
case(transfer, to)
det(transfer, a)
obl(apply, transfer)
case(liquidation, by)
nmod(transfer, liquidation)
case(subsidiary, of)
det(subsidiary, a)
nmod(liquidation, subsidiary)
acl(subsidiary, own)
case(extent, to)
det(extent, the)
obl(own, extent)
case(cent, of)
case(least, at)
nmod(80, least)
nummod(cent, 80)
compound(cent, per)
nmod(extent, cent)
punct(cent, ,)
det(merger, a)
amod(merger, statutory)
conj(cent, merger)
cc(consolidation, or)
conj(merger, consolidation)
punct(acquisition, ,)
det(acquisition, a)
appos(cent, acquisition)
case(asset, of)
advmod(all, substantially)
det:predet(asset, all)
det(corporation, a)
nmod:poss(asset, corporation)
case(corporation, 's)
nmod(acquisition, asset)
advmod(exchange, solely)
case(exchange, in)
nmod(asset, exchange)
case(stock, for)
compound(stock, voting)
nmod(exchange, stock)
punct(change, ,)
cc(change, or)
det(change, a)
conj(asset, change)
case(identity, of)
nmod(change, identity)
punct(form, ,)
conj(identity, form)
punct(place, ,)
cc(place, or)
conj(identity, place)
case(organization, of)
nmod(place, organization)
punct(apply, .)
case(case, in)
advmod(case, virtually)
det(case, every)
obl(liquidate, case)
det(corporation, the)
compound(corporation, transferor)
nsubj:pass(liquidate, corporation)
aux:pass(liquidate, be)
root(ROOT, liquidate)
punct(have, ,)
cc(have, and)
nmod:poss(stockholder, its)
amod(stockholder, former)
conj(liquidate, stockholder)
cc:preconj(outright, either)
amod(outright, own)
amod(stockholder, outright)
punct(have, ,)
cc(have, or)
conj(liquidate, have)
det(interest, a)
amod(interest, continue)
compound(interest, stock)
obj(have, interest)
advmod(have, in)
punct(asset, ,)
det(asset, the)
conj(interest, asset)
nsubj(give, which)
acl:relcl(asset, give)
obj(give, rise)
case(tax, to)
det(tax, the)
obl(give, tax)
punct(liquidate, .)
case(circumstance, in)
det(circumstance, these)
obl(remote, circumstance)
det(possibility, the)
nsubj(remote, possibility)
case(claim, of)
amod(claim, multiple)
cc(conflict, or)
conj(multiple, conflict)
nmod(possibility, claim)
cop(remote, be)
advmod(remote, exceedingly)
root(ROOT, remote)
punct(remote, . )
advmod(greater, furthermore)
punct(greater, ,)
case(reorganization, in)
det(reorganization, a)
compound(reorganization, c)
obl(greater, reorganization)
det(interest, the)
amod(interest, continue)
nsubj(greater, interest)
case(stockholder, of)
nmod(interest, stockholder)
case(corporation, of)
det(corporation, the)
nmod(stockholder, corporation)
nsubj(pay, which)
acl:relcl(corporation, pay)
det(tax, the)
obj(pay, tax)
aux(greater, must)
cop(greater, be)
root(ROOT, greater)
mark(necessary, than)
cop(necessary, be)
advcl(greater, necessary)
case(merger, in)
det(merger, a)
amod(merger, statutory)
obl(necessary, merger)
punct(necessary, ,)
case(which, to)
obl(inapplicable, which)
det(statute, the)
nsubj(inapplicable, statute)
cop(inapplicable, be)
advmod(inapplicable, clearly)
acl:relcl(merger, inapplicable)
punct(greater, .)
cc(likely, nor)
cop(likely, be)
nsubj(likely, it)
case(all, at)
obl(likely, all)
root(ROOT, likely)
mark(assign, that)
det(claim, a)
punct(claim, ``)
amod(claim, desperate)
punct(claim, '')
nsubj:pass(assign, claim)
case(government, against)
det(government, the)
nmod(claim, government)
aux(assign, will)
aux:pass(assign, be)
csubj(likely, assign)
case(basis, on)
det(basis, a)
compound(fee, contingent)
punct(fee, -)
compound(basis, fee)
obl(assign, basis)
case(guise, in)
det(guise, the)
nmod(basis, guise)
case(reorganization, of)
det(reorganization, a)
obl:npmod(free, tax)
punct(free, -)
amod(reorganization, free)
nmod(guise, reorganization)
punct(likely, .)
mark(have, if)
det(transferor, the)
nsubj(have, transferor)
advcl(seem, have)
amod(asset, substantial)
obj(have, asset)
amod(asset, other)
case(claim, than)
det(claim, the)
obl(other, claim)
punct(seem, ,)
expl(seem, it)
root(ROOT, seem)
xcomp(seem, reasonable)
mark(assume, to)
advcl(reasonable, assume)
det(corporation, no)
nsubj(willing, corporation)
aux(willing, would)
cop(willing, be)
ccomp(assume, willing)
mark(acquire, to)
xcomp(willing, acquire)
obj(acquire, all)
case(property, of)
nmod:poss(property, its)
nmod(all, property)
case(hope, in)
det(hope, the)
amod(hope, dim)
obl(acquire, hope)
mark(collect, of)
acl(hope, collect)
det(claim, a)
obj(collect, claim)
case(refund, for)
nmod(claim, refund)
case(tax, of)
nmod(refund, tax)
punct(seem, .)
mark(be, if)
det:predet(transaction, such)
det(transaction, a)
amod(transaction, unlikely)
nsubj(be, transaction)
advcl(accomplish, be)
mark(take, to)
ccomp(be, take)
obj(take, place)
punct(accomplish, ,)
nsubj:pass(accomplish, it)
aux(accomplish, would)
advmod(logically, more)
advmod(accomplish, logically)
aux:pass(accomplish, be)
root(ROOT, accomplish)
case(purchase, by)
det(purchase, a)
compound(purchase, stock)
obl(accomplish, purchase)
punct(purchase, ,)
acl(purchase, follow)
case(prosecution, by)
det(prosecution, the)
obl(follow, prosecution)
case(claim, of)
det(claim, the)
nmod(prosecution, claim)
case(subsidiary, by)
det(subsidiary, the)
advmod(own, wholly)
punct(own, -)
amod(subsidiary, own)
nmod(claim, subsidiary)
punct(subsidiary, ,)
acl(subsidiary, follow)
case(liquidation, by)
obl(follow, liquidation)
punct(accomplish, .)
case(case, in)
det(case, the)
amod(case, rare)
obl(permit, case)
advmod(claim, where)
det(corporation, a)
nmod:poss(asset, corporation)
case(corporation, 's)
advmod(substantial, only)
amod(asset, substantial)
nsubj(claim, asset)
punct(one, ,)
cc(one, or)
nmod:poss(one, its)
advmod(important, most)
amod(one, important)
conj(asset, one)
punct(claim, ,)
cop(claim, be)
det(claim, a)
acl:relcl(case, claim)
case(refund, for)
nmod(claim, refund)
punct(claim, ,)
advmod(permit, perhaps)
nmod:poss(transfer, its)
nsubj:pass(permit, transfer)
aux(permit, should)
advmod(permit, not)
aux:pass(permit, be)
root(ROOT, permit)
punct(permit, ,)
mark(take, whether)
det(reorganization, the)
nsubj(take, reorganization)
ccomp(permit, take)
det(form, the)
obj(take, form)
case(merger, of)
det(merger, a)
amod(merger, statutory)
nmod(form, merger)
cc(acquisition, or)
case(acquisition, of)
det(acquisition, the)
conj(merger, acquisition)
case(asset, of)
nmod(acquisition, asset)
case(stock, for)
nmod(asset, stock)
punct(permit, .)
nsubj(appear, it)
root(ROOT, appear)
punct(appear, ,)
advmod(appear, then)
punct(appear, ,)
mark(deal, that)
mark(deal, although)
det(matter, the)
nsubj:pass(deal, matter)
aux:pass(deal, be)
advmod(deal, not)
advcl(appear, deal)
case(section, with)
case(section, in)
obl(deal, section)
nummod(section, 381)
punct(c, ()
appos(section, c)
punct(c, ))
punct(corporation, ,)
det(corporation, a)
compound(corporation, successor)
appos(section, corporation)
case(reorganization, in)
det(reorganization, a)
nmod(corporation, reorganization)
case(type, of)
det(type, a)
nmod(reorganization, type)
acl(type, specify)
case(section, in)
obl(specify, section)
nummod(section, 381)
punct(a, ()
nummod(entitle, a)
punct(a, ))
aux:pass(entitle, be)
acl:relcl(type, entitle)
case(sue, to)
obl(entitle, sue)
case(refund, for)
obl(entitle, refund)
case(tax, of)
nmod(refund, tax)
acl(tax, pay)
case(corporation, by)
det(corporation, a)
compound(corporation, transferor)
obl(pay, corporation)
punct(appear, .)
nsubj:pass(interpret, section)
nummod(section, 203)
case(code, of)
det(code, the)
compound(States, United)
compound(code, States)
nmod(section, code)
aux(interpret, have)
aux:pass(interpret, be)
root(ROOT, interpret)
mark(apply, as)
advmod(apply, not)
advcl(interpret, apply)
case(claim, to)
obl(apply, claim)
case(government, against)
det(government, the)
nmod(claim, government)
acl(government, transfer)
case(reorganization, in)
obl:npmod(free, tax)
punct(free, -)
amod(reorganization, free)
obl(transfer, reorganization)
punct(interpret, .)
det(corporation, the)
compound(corporation, successor)
nsubj:pass(hold, corporation)
aux(hold, have)
aux:pass(hold, be)
root(ROOT, hold)
xcomp(hold, entitle)
case(sue, to)
obl(entitle, sue)
case(claim, on)
amod(claim, such)
obl(entitle, claim)
punct(entitle, .)
amod(attribute, other)
compound(attribute, tax)
nsubj(be, attribute)
case(transferor, of)
det(transferor, the)
nmod(attribute, transferor)
expl(be, there)
root(ROOT, be)
amod(attribute, certain)
compound(attribute, tax)
nsubj(be, attribute)
case(corporation, of)
det(corporation, a)
nmod(attribute, corporation)
nmod:poss(nature, whose)
nsubj(depend, nature)
cc(effect, and)
conj(nature, effect)
aux(depend, might)
acl:relcl(corporation, depend)
case(fact, on)
det(fact, the)
obl(depend, fact)
case(reorganization, of)
det(reorganization, the)
amod(reorganization, particular)
nmod(fact, reorganization)
acl(reorganization, involve)
punct(be, .)
case(example, for)
obl(retain, example)
punct(property, ,)
nsubj(retain, property)
punct(property, ``)
acl(property, use)
case(trade, in)
det(trade, the)
obl(use, trade)
cc(business, or)
conj(trade, business)
punct(trade, '')
case(corporation, of)
det(corporation, a)
compound(corporation, transferor)
nmod(trade, corporation)
punct(retain, ,)
mark(define, as)
advcl(retain, define)
case(section, in)
obl(define, section)
nummod(section, 1231)
punct(retain, ,)
advmod(retain, presumably)
aux(retain, would)
advmod(retain, not)
root(ROOT, retain)
nmod:poss(status, its)
amod(status, special)
obj(retain, status)
case(reorganization, follow)
det(reorganization, a)
amod(reorganization, non-taxable)
obl(retain, reorganization)
mark(use, if)
nsubj:pass(use, it)
aux:pass(use, be)
advmod(use, not)
advmod(use, so)
advcl(retain, use)
case(business, in)
det(business, the)
obl(use, business)
case(corporation, of)
det(corporation, the)
compound(corporation, acquire)
nmod(business, corporation)
punct(retain, .)
det(parent, the)
nsubj:pass(treat, parent)
case(return, of)
det(filing, a)
compound(filing, group)
compound(return, filing)
amod(return, consolidate)
nmod(parent, return)
aux(treat, might)
aux:pass(treat, be)
root(ROOT, treat)
case(corporation, as)
det(corporation, the)
amod(corporation, same)
obl(treat, corporation)
case(reorganization, follow)
det(reorganization, a)
obl(treat, reorganization)
acl(reorganization, define)
case(section, in)
obl(define, section)
nummod(section, 368)
punct(a, ()
nummod(1, a)
punct(a, ))
punct(1, ()
nummod(section, 1)
punct(1, ))
punct(corporation, ,)
cc(corporation, but)
case(corporation, as)
det(corporation, a)
amod(corporation, different)
conj(section, corporation)
case(purpose, for)
det(purpose, this)
nmod(corporation, purpose)
case(acquisition, after)
det(acquisition, a)
obl:npmod(free, tax)
punct(free, -)
amod(acquisition, free)
nmod(corporation, acquisition)
case(corporation, by)
det(corporation, another)
nmod(acquisition, corporation)
nsubj(elect, which)
aux(elect, have)
advmod(elect, not)
punct(elect, ,)
case(example, for)
obl(elect, example)
punct(elect, ,)
acl(corporation, elect)
mark(file, to)
xcomp(elect, file)
amod(return, consolidate)
obj(file, return)
case(subsidiary, with)
nmod:poss(subsidiary, its)
amod(subsidiary, own)
nmod(return, subsidiary)
punct(treat, .)
amod(consideration, Similar)
nsubj(make, consideration)
advmod(make, presumably)
root(ROOT, make)
expl(make, it)
xcomp(make, difficult)
mark(prescribe, to)
xcomp(difficult, prescribe)
det(rule, a)
amod(rule, general)
obj(prescribe, rule)
advmod(have, where)
det(corporation, the)
amod(corporation, acquire)
cc(acquire, and)
conj(acquire, acquire)
nsubj(have, corporation)
acl:relcl(rule, have)
amod(method, different)
obj(have, method)
case(accounting, of)
nmod(method, accounting)
punct(section, ()
appos(method, section)
nummod(section, 381)
punct(c, ()
appos(section, c)
punct(c, ))
punct(4, ()
nummod(c, 4)
punct(4, ))
punct(4, ))
cc(depreciation, or)
conj(section, depreciation)
punct(section, ()
appos(depreciation, section)
nummod(section, 381)
punct(c, ()
appos(section, c)
punct(c, ))
punct(6, ()
appos(c, 6)
punct(6, ))
punct(c, ))
punct(make, .)
amod(section, other)
nsubj(provide, section)
case(code, of)
det(code, the)
nummod(code, 1954)
compound(code, Internal)
compound(code, Revenue)
nmod(section, code)
root(ROOT, provide)
case(survival, for)
obl(provide, survival)
case(certain, of)
nmod(survival, certain)
case(attribute, of)
det(transferor, a)
nmod:poss(attribute, transferor)
case(transferor, 's)
compound(attribute, tax)
obl(certain, attribute)
case(reorganization, follow)
det(reorganization, a)
obl:npmod(free, tax)
punct(free, -)
amod(reorganization, free)
nmod(attribute, reorganization)
punct(provide, .)
nsubj(require, section)
nummod(section, 362)
root(ROOT, require)
obj(require, carryover)
case(basis, of)
det(corporation, the)
compound(corporation, transferor)
nmod:poss(basis, corporation)
case(corporation, 's)
nmod(carryover, basis)
case(property, for)
nmod(basis, property)
acl(property, transfer)
punct(provide, ,)
cc(provide, and)
nsubj(provide, section)
nummod(section, 1223)
conj(require, provide)
mark(tack, for)
advcl(provide, tack)
case(period, on)
det(transferor, the)
nmod:poss(period, transferor)
case(transferor, 's)
compound(period, holding)
obl(tack, period)
case(property, for)
amod(property, such)
nmod(period, property)
case(that, to)
nmod(property, that)
case(transferee, of)
det(transferee, the)
nmod(that, transferee)
punct(require, .)
nsubj(permit, section)
nummod(section, 169)
root(ROOT, permit)
det(person, a)
obj(permit, person)
acl(person, acquire)
compound(storage, grain)
punct(storage, -)
compound(facility, storage)
obj(acquire, facility)
mark(elect, to)
xcomp(acquire, elect)
mark(continue, to)
advcl(elect, continue)
obj(continue, amortization)
case(period, over)
det(period, a)
nummod(month, 60)
punct(month, -)
compound(period, month)
obl(continue, period)
punct(permit, .)
advmod(provide, however)
punct(provide, ,)
det(privilege, a)
amod(privilege, similar)
nsubj:pass(provide, privilege)
aux:pass(provide, be)
advmod(provide, not)
advmod(provide, specifically)
root(ROOT, provide)
case(section, in)
obl(provide, section)
nummod(section, 168)
case(person, for)
det(person, a)
obl(provide, person)
acl(person, acquire)
compound(facility, emergency)
obj(acquire, facility)
punct(provide, .)
root(ROOT, attribute)
xcomp(attribute, similar)
case(carryover, to)
det(carryover, a)
compound(carryover, loss)
obl(attribute, carryover)
punct(attribute, .)
expl(be, there)
aux(be, may)
root(ROOT, be)
amod(item, certain)
nsubj(be, item)
nsubj(similar, which)
cop(similar, be)
advmod(similar, quite)
acl:relcl(item, similar)
case(carryover, to)
det(carryover, a)
compound(carryover, net)
compound(loss, operating)
compound(carryover, loss)
obl(similar, carryover)
cc(deficit, or)
compound(deficit, operating)
conj(carryover, deficit)
cc(subject, and)
nmod:poss(right, whose)
nsubj(subject, right)
mark(survive, to)
acl(right, survive)
det(reorganization, a)
obj(survive, reorganization)
aux(subject, should)
advmod(subject, perhaps)
cop(subject, be)
conj(be, subject)
case(condition, to)
det(condition, the)
obl(subject, condition)
amod(condition, applicable)
case(item, to)
det(item, those)
obl(applicable, item)
punct(be, .)
case(example, for)
obl(suppose, example)
punct(suppose, ,)
root(ROOT, suppose)
det(profit, another)
compound(profit, excess)
obj(suppose, profit)
nsubj:pass(enact, tax)
amod(profit, similar)
case(law, to)
amod(law, prior)
obl(similar, law)
aux:pass(enact, be)
ccomp(suppose, enact)
punct(suppose, ,)
advcl(enact, provide)
case(carryover, for)
obl(provide, carryover)
case(credit, of)
amod(profit, excess)
compound(credit, profit)
nmod(carryover, credit)
punct(suppose, .)
det(carryover, this)
nsubj(have, carryover)
advmod(have, right)
root(ROOT, have)
det(number, a)
obj(have, number)
case(thing, of)
nmod(number, thing)
case(common, in)
nmod(thing, common)
case(carryover, with)
det(carryover, a)
compound(carryover, net)
compound(loss, operating)
compound(carryover, loss)
obl(common, carryover)
punct(have, .)
expl(device, it)
cop(device, be)
det(device, a)
compound(device, average)
root(ROOT, device)
acl(device, intend)
mark(ease, to)
xcomp(intend, ease)
det(burden, the)
compound(burden, tax)
obj(ease, burden)
case(income, of)
amod(income, fluctuating)
nmod(burden, income)
punct(device, ;)
punct(device, ;)
nsubj(benefit, it)
cop(benefit, be)
det(benefit, a)
compound(benefit, tax)
parataxis(device, benefit)
nsubj(value, which)
aux(value, might)
cop(value, be)
case(value, of)
amod(value, substantial)
acl:relcl(benefit, value)
case(corporation, to)
det(corporation, a)
nmod(value, corporation)
nsubj(expect, which)
acl:relcl(corporation, expect)
mark(have, to)
xcomp(expect, have)
det(tax, a)
amod(profit, high)
compound(profit, excess)
compound(tax, profit)
obj(have, tax)
punct(device, .)
case(code, under)
det(code, the)
nummod(code, 1939)
obl(permit, code)
det(item, this)
nsubj:pass(permit, item)
aux:pass(permit, be)
root(ROOT, permit)
mark(survive, to)
xcomp(permit, survive)
det(reorganization, a)
obl:npmod(free, tax)
punct(free, -)
amod(reorganization, free)
obj(survive, reorganization)
case(case, in)
det(case, the)
compound(case, Stanton)
compound(case, Brewery)
nmod(reorganization, case)
punct(dissent, ,)
cc(dissent, but)
advmod(dissent, only)
case(dissent, over)
det(dissent, the)
conj(reorganization, dissent)
case(Judge, of)
nmod(dissent, Judge)
flat(Judge, Learned)
flat(Judge, Hand)
punct(dissent, ,)
nsubj(write, who)
acl:relcl(dissent, write)
det(opinion, the)
compound(opinion, majority)
obj(write, opinion)
case(case, in)
det(case, the)
compound(case, Sansome)
obl(write, case)
punct(case, ,)
det(case, a)
amod(case, lead)
obj(write, case)
acl(case, require)
obj(require, carryover)
case(earning, of)
nmod(carryover, earning)
cc(profit, and)
conj(earning, profit)
case(reorganization, in)
det(reorganization, a)
amod(reorganization, non-taxable)
obl(require, reorganization)
punct(permit, .)
mark(statute, since)
det(type, this)
nsubj(statute, type)
case(item, of)
nmod(type, item)
cop(statute, be)
advmod(statute, not)
case(statute, in)
det(statute, the)
advcl(say, statute)
mark(enact, when)
nsubj:pass(enact, section)
nummod(section, 381)
aux:pass(enact, be)
advcl(statute, enact)
case(1954, in)
obl(enact, 1954)
punct(say, ,)
nsubj(say, one)
aux(say, can)
advmod(say, not)
root(ROOT, say)
case(certainty, with)
obl(say, certainty)
det(effect, what)
obj(have, effect)
det(enactment, the)
nsubj(have, enactment)
case(section, of)
det(section, that)
nmod(enactment, section)
aux(have, should)
acl:relcl(certainty, have)
punct(say, .)
case(respect, with)
obl(apply, respect)
case(type, to)
det(type, this)
nmod(respect, type)
case(item, of)
nmod(type, item)
punct(apply, ,)
nsubj(apply, one)
aux(apply, might)
advmod(apply, properly)
root(ROOT, apply)
det(language, the)
obj(apply, language)
case(report, of)
det(report, the)
compound(report, committee)
nmod(language, report)
punct(report, ,)
acl(report, quote)
advmod(quote, above)
punct(report, ,)
nsubj(caution, which)
acl:relcl(report, caution)
mark(use, against)
advcl(caution, use)
obj(use, section)
nummod(section, 381)
case(basis, as)
det(basis, a)
obl(use, basis)
mark(treat, for)
acl(basis, treat)
amod(attribute, other)
compound(attribute, tax)
obj(treat, attribute)
advmod(mention, not)
xcomp(treat, mention)
advmod(mention, therein)
punct(appear, .)
advmod(appear, actually)
punct(appear, ,)
expl(appear, there)
aux(appear, do)
advmod(appear, not)
advmod(appear, presently)
parataxis(apply, appear)
mark(item, to)
cop(item, be)
xcomp(appear, item)
case(statute, in)
det(statute, the)
nmod(item, statute)
amod(statute, comparable)
case(carryover, to)
det(carryover, a)
compound(carryover, net)
compound(loss, operating)
compound(carryover, loss)
obl(comparable, carryover)
punct(appear, .)
advmod(opportunity, probably)
det(reason, the)
amod(reason, primary)
nsubj(opportunity, reason)
case(treatment, for)
amod(treatment, special)
nmod(reason, treatment)
case(carryover, of)
det(carryover, a)
amod(loss, net)
compound(loss, operating)
compound(carryover, loss)
nmod(reason, carryover)
cop(opportunity, be)
det(opportunity, the)
amod(opportunity, unique)
root(ROOT, opportunity)
nsubj(present, it)
acl:relcl(opportunity, present)
case(avoidance, for)
compound(avoidance, tax)
obl(present, avoidance)
punct(opportunity, . )
det(reason, a)
punct(reason, .)
nsubj(be, reason)
mark(select, for)
acl(reason, select)
compound(method, mail)
compound(method, questionnaire)
obj(select, method)
expl(be, there)
root(ROOT, be)
nummod(method, two)
nsubj(be, method)
nsubj:pass(use, that)
aux(use, could)
aux(use, have)
aux:pass(use, be)
acl:relcl(method, use)
mark(conduct, for)
advcl(use, conduct)
det(study, the)
obj(conduct, study)
case(resource, within)
det(resource, the)
nmod(study, resource)
amod(resource, available)
punct(resource, :)
punct(1, ()
nummod(interview, 1)
punct(1, ))
appos(study, interview)
case(depth, in)
nmod(interview, depth)
case(company, with)
det(company, a)
amod(company, few)
amod(company, select)
nmod(depth, company)
punct(interrogation, ,)
cc(interrogation, and)
punct(2, ()
nummod(interrogation, 2)
punct(2, ))
det(interrogation, the)
advmod(limited, more)
amod(interrogation, limited)
conj(interview, interrogation)
case(number, of)
det(number, a)
amod(number, large)
nmod(interrogation, number)
case(company, of)
nmod(number, company)
case(means, by)
nmod(number, means)
case(questionnaire, of)
det(questionnaire, a)
compound(questionnaire, mail)
nmod(means, questionnaire)
punct(be, . )
mark(appeal, while)
det(method, the)
nsubj(appeal, method)
mark(interview, of)
acl(method, interview)
det(number, a)
amod(number, small)
obj(interview, number)
case(company, of)
nmod(number, company)
cop(appeal, be)
advcl(involve, appeal)
case(opportunity, because)
fixed(because, of)
det(opportunity, the)
obl(appeal, opportunity)
nsubj(furnish, it)
aux(furnish, might)
aux(furnish, have)
acl:relcl(opportunity, furnish)
mark(probe, to)
xcomp(furnish, probe)
advmod(probe, fully)
det(reason, the)
obj(probe, reason)
cc(circumstance, and)
conj(reason, circumstance)
case(practice, of)
det(company, a)
nmod:poss(practice, company)
case(company, 's)
nmod(reason, practice)
cc(opinion, and)
conj(practice, opinion)
punct(involve, ,)
nsubj(involve, it)
advmod(involve, also)
root(ROOT, involve)
det(risk, the)
obj(involve, risk)
mark(pay, of)
acl(risk, pay)
amod(attention, undue)
obj(pay, attention)
case(problem, to)
det(problem, the)
amod(problem, unique)
cc(peculiar, and)
conj(unique, peculiar)
obl(pay, problem)
case(company, of)
advmod(company, just)
det(company, a)
amod(company, few)
amod(company, individual)
nmod(problem, company)
punct(involve, .)
case(result, as)
det(result, a)
obl(decide, result)
punct(decide, ,)
nsubj:pass(decide, it)
aux:pass(decide, be)
root(ROOT, decide)
mark(send, that)
det(questionnaire, a)
compound(questionnaire, mail)
nsubj(send, questionnaire)
ccomp(decide, send)
case(number, to)
det(number, a)
amod(number, large)
obl(send, number)
case(company, of)
nmod(number, company)
aux(effective, would)
cop(effective, be)
advmod(effective, more)
ccomp(decide, effective)
mark(determine, in)
advcl(effective, determine)
det(practice, the)
amod(practice, general)
obj(determine, practice)
cc(opinion, and)
conj(practice, opinion)
case(firm, of)
amod(firm, small)
nmod(practice, firm)
cc(highlight, and)
mark(highlight, in)
conj(determine, highlight)
obj(highlight, some)
case(problem, of)
det(problem, the)
amod(problem, fundamental)
cc(recurre, and)
conj(fundamental, recurre)
nmod(some, problem)
case(procurement, of)
compound(procurement, defense)
nmod(problem, procurement)
nsubj(concern, that)
acl:relcl(procurement, concern)
cc:preconj(industry, both)
obj(concern, industry)
cc(government, and)
conj(industry, government)
punct(decide, .)
nsubj:pass(hope, it)
aux:pass(hope, be)
advmod(hope, also)
root(ROOT, hope)
mark(suggest, that)
nsubj(suggest, response)
case(questionnaire, to)
det(questionnaire, a)
compound(questionnaire, mail)
nmod(response, questionnaire)
aux(suggest, would)
ccomp(hope, suggest)
amod(inquiry, fruitful)
obj(suggest, inquiry)
nsubj:pass(make, that)
aux(make, might)
aux:pass(make, be)
acl:relcl(inquiry, make)
case(study, in)
amod(study, subsequent)
obl(make, study)
case(nature, of)
det(nature, a)
advmod(detailed, more)
amod(nature, detailed)
nmod(study, nature)
punct(hope, .)
nsubj:pass(recognize, it)
aux:pass(recognize, be)
root(ROOT, recognize)
mark(have, that)
det(questionnaire, a)
compound(questionnaire, mail)
nsubj(have, questionnaire)
ccomp(recognize, have)
amod(limitation, inherent)
obj(have, limitation)
punct(recognize, .)
expl(be, there)
root(ROOT, be)
det(danger, the)
nsubj(be, danger)
mark(mean, that)
det(question, the)
nsubj(mean, question)
aux(mean, will)
acl(danger, mean)
amod(thing, different)
obj(mean, thing)
case(respondent, to)
amod(respondent, different)
obl(mean, respondent)
punct(be, .)
root(ROOT, simple)
punct(yes, ``)
discourse(simple, yes)
punct(yes, '')
cc(reveal, or)
punct(reveal, ``)
det(answer, no)
punct(reveal, '')
nsubj(reveal, answer)
aux(reveal, do)
advmod(reveal, not)
parataxis(simple, reveal)
det(shade, the)
amod(shade, different)
obj(reveal, shade)
case(opinion, of)
nmod(shade, opinion)
obj(have, that)
det(respondent, the)
amod(respondent, various)
nsubj(have, respondent)
aux(have, may)
acl:relcl(opinion, have)
punct(simple, . )
det(respondent, a)
nsubj(want, respondent)
aux(want, may)
root(ROOT, want)
mark(make, to)
xcomp(want, make)
amod(answer, alternative)
obj(make, answer)
mark(know, because)
nsubj(know, he)
aux(know, do)
advmod(know, not)
advcl(make, know)
det(circumstance, the)
amod(circumstance, precise)
nsubj(assume, circumstance)
ccomp(know, assume)
case(question, in)
det(question, the)
obl(assume, question)
punct(want, .)
expl(be, there)
root(ROOT, be)
advmod(be, also)
det(problem, the)
nsubj(be, problem)
case(frame, of)
det(respondent, the)
nmod:poss(frame, respondent)
case(respondent, 's)
nmod(problem, frame)
case(reference, of)
nmod(frame, reference)
punct(be, .)
aux(make, be)
det(respondent, the)
nsubj(make, respondent)
root(ROOT, make)
det(recommendation, a)
obj(make, recommendation)
case(benefit, for)
nmod:poss(benefit, he)
amod(benefit, own)
nmod(recommendation, benefit)
punct(recommendation, ,)
case(benefit, for)
det(benefit, the)
obl(make, benefit)
case(industry, of)
nmod:poss(industry, he)
nmod(benefit, industry)
punct(make, ,)
case(benefit, for)
det(benefit, the)
obl(make, benefit)
case(department, of)
det(department, a)
amod(department, specific)
compound(department, government)
nmod(benefit, department)
cc(service, or)
conj(department, service)
punct(department, ,)
case(benefit, for)
det(benefit, the)
nmod(department, benefit)
case(program, of)
det(program, the)
compound(program, defense)
nmod(benefit, program)
punct(benefit, ,)
case(benefit, for)
det(benefit, the)
nmod(benefit, benefit)
case(business, of)
amod(business, small)
nmod(benefit, business)
punct(benefit, ,)
cc(benefit, or)
case(benefit, for)
det(benefit, the)
conj(benefit, benefit)
case(taxpayer, of)
det(taxpayer, the)
nmod(benefit, taxpayer)
punct(make, ?)
punct(make, ?)
expl(be, there)
root(ROOT, be)
advmod(be, also)
det(question, the)
nsubj(be, question)
mark(base, of)
mark(base, whether)
det(respondent, the)
nsubj(base, respondent)
acl(question, base)
nmod:poss(answer, he)
obj(base, answer)
case(information, on)
amod(information, factual)
nmod(answer, information)
cc(consider, and)
advmod(consider, carefully)
conj(base, consider)
obj(consider, judgment)
punct(guess, ,)
cc(guess, or)
mark(guess, whether)
nmod:poss(answer, he)
nsubj(guess, answer)
cop(guess, be)
amod(guess, casual)
advcl(be, guess)
punct(be, .)
advmod(be, finally)
punct(be, ,)
expl(be, there)
parataxis(be, be)
det(question, the)
nsubj(be, question)
mark(hold, of)
advmod(hold, how)
advmod(hold, strongly)
det(opinion, a)
amod(opinion, express)
nsubj:pass(hold, opinion)
aux:pass(hold, be)
acl(question, hold)
punct(question, --)
mark(opinion, whether)
nsubj(opinion, it)
cop(opinion, be)
det(opinion, a)
amod(opinion, firm)
advcl(hold, opinion)
cc(one, or)
conj(opinion, one)
obj(favor, that)
det(respondent, the)
nsubj(favor, respondent)
acl:relcl(one, favor)
advmod(slightly, only)
advmod(favor, slightly)
case(alternative, over)
det(alternative, the)
obl(favor, alternative)
punct(be, .)
det(team, the)
compound(team, research)
nsubj(mindful, team)
cop(mindful, be)
advmod(mindful, very)
root(ROOT, mindful)
case(danger, of)
det(danger, these)
obl(mindful, danger)
cc(limitation, and)
conj(danger, limitation)
case(questionnaire, of)
det(questionnaire, a)
compound(questionnaire, mail)
nmod(danger, questionnaire)
punct(mindful, .)
case(circumstance, under)
det(circumstance, the)
obl(consider, circumstance)
punct(consider, ,)
advmod(consider, however)
punct(consider, ,)
det(team, the)
nsubj(consider, team)
root(ROOT, consider)
nsubj(provide, it)
aux(provide, would)
ccomp(consider, provide)
det(information, the)
advmod(useful, most)
amod(information, useful)
obj(provide, information)
case(point, at)
det(point, this)
nmod(information, point)
punct(consider, .)
case(preparation, in)
det(preparation, the)
obl(consider, preparation)
case(questionnaire, of)
det(questionnaire, the)
nmod(preparation, questionnaire)
det(problem, the)
nsubj(note, problem)
acl:relcl(questionnaire, note)
advmod(note, above)
aux:pass(consider, be)
advmod(consider, carefully)
root(ROOT, consider)
punct(design, ,)
cc(design, and)
det(structure, the)
nsubj:pass(design, structure)
cc(phraseology, and)
conj(structure, phraseology)
acl(structure, use)
aux:pass(design, be)
conj(consider, design)
mark(minimize, to)
advcl(design, minimize)
det(effect, the)
obj(minimize, effect)
case(limitation, of)
det(limitation, these)
nmod(effect, limitation)
punct(consider, . )
nummod(design, b)
punct(b, .)
nsubj:pass(design, design)
case(questionnaire, of)
det(questionnaire, the)
nmod(design, questionnaire)
det(questionnaire, the)
nsubj:pass(design, questionnaire)
aux:pass(design, be)
root(ROOT, design)
mark(elicit, to)
xcomp(design, elicit)
nummod(type, three)
obj(elicit, type)
case(information, of)
nmod(type, information)
punct(type, :)
punct(1, ()
nummod(fact, 1)
punct(1, ))
det(fact, the)
appos(type, fact)
case(characteristic, regard)
amod(characteristic, certain)
nmod(fact, characteristic)
case(respondent, of)
det(respondent, the)
nmod(characteristic, respondent)
punct(characteristic, ,)
case(experience, include)
nmod:poss(experience, they)
nmod(characteristic, experience)
nmod(experience, with)
punct(interest, ,)
cc(interest, and)
conj(experience, interest)
mark(secure, in)
punct(secure, ,)
acl(interest, secure)
compound(business, defense)
obj(secure, business)
punct(secure, ;)
punct(secure, ;)
punct(2, ()
nummod(practice, 2)
punct(2, ))
det(practice, the)
amod(practice, actual)
compound(practice, sell)
cc(buying, and)
conj(sell, buying)
conj(fact, practice)
case(respondent, of)
det(respondent, the)
nmod(practice, respondent)
punct(practice, ;)
punct(practice, ;)
cc(attitude, and)
punct(3, ()
nummod(attitude, 3)
punct(3, ))
det(attitude, the)
conj(practice, attitude)
cc(opinion, and)
conj(attitude, opinion)
case(respondent, of)
det(respondent, the)
nmod(attitude, respondent)
case(procedure, concern)
compound(procedure, bid)
nmod(respondent, procedure)
cc(method, and)
det(method, the)
conj(procedure, method)
mark(award, of)
acl(method, award)
compound(contract, defense)
obj(award, contract)
punct(design, .)
nsubj:pass(hope, it)
aux:pass(hope, be)
root(ROOT, hope)
mark(offer, that)
det(fact, the)
nsubj(offer, fact)
case(characteristic, concern)
det(characteristic, the)
nmod(fact, characteristic)
cc(practice, and)
conj(characteristic, practice)
case(respondent, of)
det(respondent, the)
nmod(characteristic, respondent)
aux(offer, would)
ccomp(hope, offer)
obj(offer, clue)
case(reason, to)
det(reason, the)
nmod(clue, reason)
advmod(take, why)
nsubj(take, they)
acl:relcl(reason, take)
det(position, the)
obj(take, position)
cc(make, and)
conj(take, make)
det(recommendation, the)
obj(make, recommendation)
obj(do, which)
nsubj(do, they)
acl:relcl(recommendation, do)
punct(hope, .)
det(section, the)
amod(section, major)
nsubj:pass(devote, section)
case(questionnaire, of)
det(questionnaire, the)
nmod(section, questionnaire)
punct(see, ()
parataxis(section, see)
compound(b, Appendix)
obj(see, b)
punct(see, ))
aux:pass(devote, be)
root(ROOT, devote)
case(1, to)
det(1, the)
amod(1, follow)
punct(1, :)
obl(devote, 1)
punct(devote, .)
root(ROOT, information)
case(respondent, for)
acl(respondent, classifying)
nmod(information, respondent)
punct(a, ()
compound(a, Part)
appos(respondent, a)
case(questionnaire, of)
det(questionnaire, the)
nmod(a, questionnaire)
punct(a, ))
nummod(Characteristics, 2)
punct(Characteristics, .)
nmod(information, Characteristics)
case(activity, of)
compound(sale, defense)
compound(activity, sale)
nmod(Characteristics, activity)
punct(b, ()
compound(b, Part)
appos(activity, b)
case(questionnaire, of)
det(questionnaire, the)
nmod(b, questionnaire)
punct(b, ))
nummod(practice, 3)
punct(practice, .)
nmod:poss(practice, respondent)
case(respondent, 's)
nmod(Characteristics, practice)
mark(participate, in)
acl(practice, participate)
case(bid, in)
amod(bid, advertise)
obl(participate, bid)
case(business, for)
compound(business, defense)
nmod(bid, business)
punct(c, ()
compound(c, Part)
appos(business, c)
case(questionnaire, of)
det(questionnaire, the)
nmod(c, questionnaire)
punct(c, ))
nummod(c, 4)
punct(practice, .)
nmod:poss(practice, respondent)
case(respondent, 's)
appos(4, practice)
mark(participate, in)
acl(practice, participate)
case(bid, in)
amod(bid, negotiate)
obl(participate, bid)
case(purpose, for)
compound(purpose, defense)
nmod(bid, purpose)
punct(D, ()
compound(D, Part)
appos(purpose, D)
case(questionnaire, of)
det(questionnaire, the)
nmod(D, questionnaire)
punct(D, ))
nummod(D, 5)
punct(D, .)
nmod:poss(opinion, respondent)
case(respondent, 's)
appos(5, opinion)
case(bid, regard)
amod(bid, advertise)
nmod(opinion, bid)
punct(e, ()
compound(e, Part)
appos(bid, e)
case(questionnaire, of)
det(questionnaire, the)
nmod(e, questionnaire)
punct(e, ))
nummod(e, 6)
punct(e, .)
nmod:poss(opinion, respondent)
case(respondent, 's)
appos(bid, opinion)
case(bid, regard)
amod(bid, negotiate)
nmod(opinion, bid)
punct(f, ()
compound(f, Part)
appos(bid, f)
case(questionnaire, of)
det(questionnaire, the)
nmod(f, questionnaire)
punct(f, ))
nummod(f, 7)
punct(f, .)
nmod:poss(preference, respondent)
case(respondent, 's)
nmod(opinion, preference)
case(method, regard)
det(method, the)
nmod(preference, method)
mark(award, of)
acl(method, award)
compound(contract, defense)
obj(award, contract)
punct(g, ()
compound(g, Part)
appos(contract, g)
case(questionnaire, of)
det(questionnaire, the)
nmod(g, questionnaire)
punct(g, ))
det(questionnaire, the)
nsubj(provide, questionnaire)
acl:relcl(preference, provide)
det(place, a)
obj(provide, place)
case(name, for)
det(name, the)
nmod(place, name)
case(respondent, of)
det(respondent, the)
nmod(name, respondent)
cc(state, but)
conj(provide, state)
mark(optional, that)
nsubj(optional, identification)
case(respondent, of)
det(respondent, the)
nmod(identification, respondent)
cop(optional, be)
ccomp(state, optional)
punct(provide, .)
det(questionnaire, the)
nsubj(state, questionnaire)
advmod(state, also)
root(ROOT, state)
mark(treat, that)
punct(treat, ,)
case(event, in)
det(event, any)
obl(treat, event)
punct(treat, ,)
det(reply, all)
nsubj:pass(treat, reply)
aux(treat, would)
aux:pass(treat, be)
ccomp(state, treat)
advmod(treat, confidentially)
punct(state, .)
expl(interesting, it)
cop(interesting, be)
root(ROOT, interesting)
mark(note, to)
csubj(interesting, note)
mark(identify, that)
nummod(cent, 75)
compound(cent, per)
nsubj(identify, cent)
case(those, of)
nmod(cent, those)
nsubj(return, who)
acl:relcl(those, return)
det(questionnaire, the)
obj(return, questionnaire)
ccomp(note, identify)
obj(identify, themselves)
punct(interesting, . )
nummod(preparation, c)
punct(c, .)
root(ROOT, preparation)
cc(pretest, and)
conj(preparation, pretest)
case(questionnaire, of)
det(questionnaire, the)
nmod(preparation, questionnaire)
det(team, the)
compound(team, research)
nsubj(prepare, team)
acl:relcl(questionnaire, prepare)
cc(revise, and)
advmod(revise, then)
conj(prepare, revise)
det(questionnaire, the)
obj(revise, questionnaire)
case(period, over)
det(period, a)
obl(revise, period)
case(month, of)
nummod(month, six)
nmod(period, month)
punct(prepare, .)
case(June, in)
obl(mail, June)
punct(June, ,)
nummod(June, 1960)
punct(mail, ,)
det(draft, a)
amod(draft, early)
nsubj:pass(mail, draft)
case(questionnaire, of)
det(questionnaire, the)
nmod(draft, questionnaire)
punct(draft, ,)
case(letter, along)
case(letter, with)
det(letter, a)
compound(letter, cover)
nmod(draft, letter)
punct(mail, ,)
aux:pass(mail, be)
root(ROOT, mail)
case(company, to)
nummod(company, fourteen)
obl(mail, company)
case(state, in)
det(state, the)
nmod(company, state)
case(Washington, of)
nmod(state, Washington)
punct(mail, .)
amod(day, several)
obl:tmod(receive, day)
mark(receive, after)
det(company, the)
nsubj(receive, company)
aux(receive, have)
advcl(contact, receive)
det(questionnaire, the)
obj(receive, questionnaire)
punct(contact, ,)
nsubj(contact, member)
case(team, of)
det(team, the)
compound(team, research)
nmod(member, team)
root(ROOT, contact)
det(president, the)
obj(contact, president)
case(eleven, of)
nmod(president, eleven)
case(company, of)
det(company, these)
nmod(eleven, company)
case(person, in)
nmod(eleven, person)
cc(phone, or)
case(phone, by)
conj(person, phone)
mark(discuss, to)
acl(phone, discuss)
det(ambiguity, any)
obj(discuss, ambiguity)
cc(difficulty, or)
conj(ambiguity, difficulty)
det(address, the)
nsubj(experience, address)
aux(experience, might)
aux(experience, have)
acl:relcl(ambiguity, experience)
mark(complete, in)
advcl(experience, complete)
det(questionnaire, the)
obj(complete, questionnaire)
punct(contact, .)
det(test, this)
nsubj(result, test)
root(ROOT, result)
case(revision, in)
amod(revision, further)
obl(result, revision)
case(questionnaire, of)
det(questionnaire, the)
nmod(revision, questionnaire)
punct(result, .)
det(team, the)
compound(team, research)
nsubj(concerned, team)
cop(concerned, be)
root(ROOT, concerned)
mark(typical, that)
nsubj(typical, response)
case(firm, from)
nmod(response, firm)
case(state, in)
det(state, the)
nmod(response, state)
case(Washington, of)
nmod(state, Washington)
aux(typical, might)
advmod(typical, not)
cop(typical, be)
ccomp(concerned, typical)
case(those, of)
obl(typical, those)
case(country, throughout)
det(country, the)
nmod(those, country)
punct(different, ,)
cc(different, or)
mark(different, that)
det(result, the)
nsubj(different, result)
aux(different, might)
cop(different, be)
conj(typical, different)
mark(make, when)
det(phone, no)
nsubj:pass(make, phone)
cc(up, or)
amod(up, personal)
compound(up, follow)
punct(up, -)
conj(phone, up)
aux:pass(make, be)
advcl(different, make)
punct(make, .)
advmod(make, accordingly)
punct(make, ,)
det(test, another)
nsubj:pass(make, test)
case(questionaire, of)
det(questionaire, the)
nmod(test, questionaire)
aux:pass(make, be)
advcl(different, make)
punct(concerned, .)
det(draft, the)
amod(draft, revise)
nsubj:pass(mail, draft)
aux:pass(mail, be)
root(ROOT, mail)
case(July, in)
obl(mail, July)
punct(July, ,)
nummod(July, 1960)
punct(mail, ,)
case(firm, to)
nummod(firm, 100)
obl(mail, firm)
case(States, throughout)
det(States, the)
compound(States, United)
nmod(firm, States)
punct(mail, .)
nsubj:pass(select, fifty)
case(firm, of)
det(firm, the)
nummod(firm, 100)
nmod(fifty, firm)
aux:pass(select, be)
conj(mail, select)
case(basis, on)
det(basis, a)
amod(basis, random)
obl(select, basis)
case(name, from)
nummod(name, 3,500)
nmod(basis, name)
acl(name, submit)
case(company, by)
compound(company, member)
obl(submit, company)
case(Association, of)
det(Association, the)
compound(Association, Aerospace)
compound(Association, industry)
nmod(company, Association)
punct(list, ()
compound(list, AIA)
appos(Association, list)
punct(list, ))
cc(select, and)
nsubj:pass(select, fifty)
aux:pass(select, be)
conj(select, select)
case(manner, in)
det(manner, a)
amod(manner, similar)
obl(select, manner)
case(list, from)
det(list, a)
nmod(manner, list)
case(name, of)
nummod(name, 1,500)
nmod(list, name)
acl(name, compile)
case(team, by)
det(team, the)
compound(team, research)
obl(compile, team)
case(Register, from)
det(Register, the)
compound(Register, Thomas)
nmod(team, Register)
punct(list, ()
compound(list, TR)
appos(Register, list)
punct(list, ))
punct(mail, .)
det(method, the)
nsubj:pass(describe, method)
mark(compile, of)
acl(method, compile)
det(list, the)
compound(list, AIA)
cc(TR, and)
conj(AIA, TR)
obj(compile, list)
aux(describe, will)
aux:pass(describe, be)
root(ROOT, describe)
advmod(describe, later)
punct(describe, .)
nummod(day, ten)
obl:tmod(describe, day)
mark(mail, after)
det(questionnaire, the)
nsubj:pass(mail, questionnaire)
aux:pass(mail, be)
advcl(describe, mail)
punct(send, ,)
conj(mail, follow)
punct(follow, -)
compound:prt(follow, up)
compound(postcard, airmail)
nsubj:pass(send, postcard)
aux:pass(send, be)
conj(describe, send)
advcl(send, urging)
det(company, those)
obj(urging, company)
nsubj(return, which)
aux(return, have)
advmod(return, not)
advmod(return, yet)
acl:relcl(company, return)
nmod:poss(questionnaire, they)
obj(return, questionnaire)
mark(do, to)
advcl(return, do)
advmod(do, so)
case(once, at)
obl(do, once)
punct(describe, .)
compound(eight, twenty)
punct(eight, -)
nummod(return, eight)
nsubj:pass(receive, return)
case(all, in)
nmod(return, all)
aux:pass(receive, be)
root(ROOT, receive)
punct(receive, .)
det(response, the)
nsubj:pass(check, response)
aux:pass(check, be)
advmod(check, carefully)
root(ROOT, check)
case(error, for)
amod(error, obvious)
obl(check, error)
case(answer, in)
det(answer, the)
nmod(error, answer)
cc(question, or)
case(question, for)
conj(answer, question)
nsubj:pass(understand, that)
aux:pass(understand, be)
advmod(understand, apparently)
advmod(understand, not)
acl:relcl(question, understand)
case(respondent, by)
det(respondent, the)
obl(understand, respondent)
punct(check, .)
det(letter, the)
compound(letter, cover)
nsubj:pass(revise, letter)
punct(questionnaire, ,)
conj(letter, questionnaire)
punct(postcard, ,)
cc(postcard, and)
compound(postcard, follow)
punct(follow, -)
compound:prt(follow, up)
conj(letter, postcard)
aux:pass(revise, be)
advmod(revise, then)
root(ROOT, revise)
case(form, into)
amod(form, final)
obl(revise, form)
punct(see, ()
parataxis(revise, see)
obj(see, appendix)
obj(see, a)
punct(b, ,)
conj(a, b)
punct(c, ,)
cc(c, and)
conj(a, c)
punct(see, ))
punct(revise, . )
nsubj(be, D)
punct(D, .)
nsubj(be, compilation)
mark(list, of)
nsubj(list, mailing)
acl:relcl(compilation, list)
det(objective, the)
obj(list, objective)
case(study, of)
det(study, the)
nmod(objective, study)
root(ROOT, be)
mark(determine, to)
ccomp(be, determine)
det(opinion, the)
obj(determine, opinion)
cc(practice, and)
conj(opinion, practice)
case(firm, of)
amod(firm, small)
nmod(opinion, firm)
acl(firm, sell)
case(program, to)
compound(program, defense)
obl(sell, program)
punct(be, .)
det(firm, the)
nsubj:pass(select, firm)
mark(receive, to)
acl(firm, receive)
det(questionnaire, the)
obj(receive, questionnaire)
aux:pass(select, be)
root(ROOT, select)
case(objective, with)
det(objective, this)
obl(select, objective)
case(mind, in)
nmod(objective, mind)
punct(select, .)
nummod(list, three)
nsubj:pass(make, list)
case(company, of)
nmod(list, company)
aux:pass(make, be)
root(ROOT, make)
cc(use, and)
conj(make, use)
case(study, in)
det(study, the)
obl(use, study)
punct(make, .)
det(first, the)
nsubj(list, first)
cop(list, be)
det(list, a)
root(ROOT, list)
case(company, of)
nummod(company, fourteen)
compound(company, manufacturing)
nmod(list, company)
acl(company, locate)
case(state, in)
det(state, the)
obl(locate, state)
case(Washington, of)
nmod(state, Washington)
nsubj:pass(know, which)
aux:pass(know, be)
advmod(know, personally)
acl:relcl(company, know)
case(team, to)
det(team, the)
compound(team, research)
obl(know, team)
mark(active, to)
cop(active, be)
advcl(know, active)
case(work, in)
compound(work, defense)
obl(active, work)
punct(list, .)
det(consideration, the)
amod(consideration, primary)
nsubj(convenience, consideration)
case(compilation, in)
det(compilation, the)
nmod(consideration, compilation)
case(list, of)
det(list, this)
nmod(compilation, list)
cop(convenience, be)
root(ROOT, convenience)
mark(discuss, in)
advcl(convenience, discuss)
det(questionnaire, the)
obj(discuss, questionnaire)
case(officer, with)
compound(officer, company)
nmod(questionnaire, officer)
punct(convenience, .)
det(list, the)
amod(list, second)
nsubj:pass(derive, list)
aux:pass(derive, be)
root(ROOT, derive)
case(group, from)
det(group, a)
obl(derive, group)
case(name, of)
advmod(8,000, approximately)
nummod(name, 8,000)
nmod(group, name)
acl(name, supply)
case(team, to)
det(team, the)
compound(team, research)
obl(supply, team)
case(Association, by)
det(Association, the)
compound(industry, Aerospace)
compound(Association, industry)
obl(supply, Association)
punct(derive, .)
det(name, these)
nsubj:pass(secure, name)
aux:pass(secure, be)
root(ROOT, secure)
case(company, from)
compound(company, member)
obl(secure, company)
case(Association, by)
det(Association, the)
nmod(company, Association)
case(source, from)
det(source, the)
compound(four, forty)
punct(four, -)
nummod(source, four)
nmod(Association, source)
acl(source, list)
case(Appendix, in)
obl(list, Appendix)
flat(Appendix, Aj)
punct(source, .)
det(source, each)
obl:npmod(secure, source)
acl(source, select)
case(list, from)
nmod:poss(list, its)
amod(list, approve)
compound(list, bidder)
obl(select, list)
advmod(200, about)
nummod(firm, 200)
appos(list, firm)
obj(believe, which)
nsubj(believe, it)
acl:relcl(firm, believe)
mark(business, to)
cop(business, be)
amod(business, small)
xcomp(believe, business)
nsubj(participate, that)
acl:relcl(business, participate)
case(production, in)
det(production, the)
obl(participate, production)
case(weapon, of)
nmod(production, weapon)
cc(support, and)
compound(support, weapon)
conj(weapon, support)
nmod(production, system)
punct(secure, .)
mark(possible, where)
advcl(supply, possible)
punct(supply, ,)
det(name, the)
nsubj:pass(supply, name)
case(executive, of)
det(executive, a)
nmod(name, executive)
aux:pass(supply, be)
root(ROOT, supply)
case(name, along)
case(name, with)
det(name, the)
compound(name, company)
obl(supply, name)
cc(address, and)
conj(name, address)
punct(supply, .)
det(list, the)
compound(four, forty)
punct(four, -)
nummod(list, four)
nsubj:pass(merge, list)
acl(list, supply)
case(company, by)
det(company, the)
compound(company, AIA)
compound(company, member)
obl(supply, company)
aux:pass(merge, be)
root(ROOT, merge)
cc(eliminate, and)
amod(name, duplicate)
nsubj:pass(eliminate, name)
aux:pass(eliminate, be)
conj(merge, eliminate)
punct(merge, .)
expl(be, there)
root(ROOT, be)
amod(elimination, further)
nsubj(be, elimination)
case(company, of)
det(company, all)
nmod(elimination, company)
nsubj:pass(accompany, that)
aux:pass(accompany, be)
advmod(accompany, not)
acl:relcl(company, accompany)
case(name, by)
det(name, the)
obl(accompany, name)
case(company, of)
det(company, a)
amod(company, responsible)
nmod(name, company)
nmod(name, executive)
punct(be, .)
det(name, the)
amod(name, remain)
nsubj:pass(check, name)
aux:pass(check, be)
advmod(check, then)
root(ROOT, check)
case(list, against)
det(list, the)
compound(list, Thomas)
compound(list, Register)
obl(check, list)
punct(see, ()
parataxis(check, see)
advmod(see, below)
punct(see, ))
cc(remove, and)
compound(name, duplicate)
nsubj:pass(remove, name)
aux:pass(remove, be)
conj(check, remove)
case(list, from)
det(list, the)
compound(list, AIA)
obl(remove, list)
punct(check, .)
case(step, by)
det(step, these)
obl(reduce, step)
det(list, the)
amod(list, final)
compound(list, AIA)
nsubj:pass(reduce, list)
aux:pass(reduce, be)
root(ROOT, reduce)
case(8,000, from)
obl(reduce, 8,000)
case(3,500, to)
nmod(8,000, 3,500)
punct(reduce, .)
det(list, the)
amod(list, third)
nsubj:pass(select, list)
aux:pass(select, be)
root(ROOT, select)
case(team, by)
det(team, the)
compound(team, research)
obl(select, team)
case(basis, on)
det(basis, a)
amod(basis, random)
obl(select, basis)
case(Register, from)
det(Register, the)
compound(Register, Thomas)
nmod(basis, Register)
punct(select, .)
nsubj:pass(compile, it)
aux:pass(compile, be)
root(ROOT, compile)
case(sample, as)
det(sample, a)
compound(sample, control)
obl(compile, sample)
mark(determine, to)
acl(sample, determine)
mark(different, if)
det(opinion, the)
nsubj(different, opinion)
cc(practice, and)
conj(opinion, practice)
case(company, of)
nmod(opinion, company)
case(list, on)
det(list, the)
nmod(opinion, list)
acl(list, submit)
case(member, by)
det(member, the)
obl(submit, member)
case(Association, of)
det(Association, the)
compound(industry, Aerospace)
compound(Association, industry)
nmod(member, Association)
cop(different, be)
advmod(different, materially)
ccomp(determine, different)
case(those, from)
obl(different, those)
case(firm, of)
amod(firm, other)
amod(firm, small)
nmod(those, firm)
acl(firm, sell)
case(program, to)
compound(program, defense)
obl(sell, program)
punct(compile, .)
det:predet(difference, such)
det(difference, a)
nsubj(result, difference)
aux(result, might)
aux(result, have)
root(ROOT, result)
case(1, from)
punct(1, :)
obl(result, 1)
punct(result, .)
det(fact, the)
nsubj(comprise, fact)
mark(comprise, that)
det(member, the)
compound(industry, Aerospace)
compound(member, industry)
compound(member, Association)
nsubj(comprise, member)
nmod:poss(list, whose)
nsubj:pass(use, list)
aux:pass(use, be)
acl:relcl(member, use)
aux(comprise, do)
advmod(comprise, not)
root(ROOT, comprise)
det(firm, all)
obj(comprise, firm)
acl(firm, engage)
case(program, in)
compound(program, defense)
obl(engage, program)
punct(comprise, . )
nummod(fact, 2)
punct(2, .)
det(fact, the)
root(ROOT, fact)
mark(participate, that)
nsubj(participate, company)
case(list, on)
det(list, the)
compound(list, AIA)
nmod(company, list)
aux(participate, be)
advmod(participate, already)
acl(fact, participate)
case(program, in)
det(program, the)
compound(program, defense)
obl(participate, program)
case(manner, because)
fixed(because, of)
det(manner, the)
obl(participate, manner)
case(selection, of)
nmod:poss(selection, they)
nmod(manner, selection)
punct(fact, .)
advmod(have, accordingly)
punct(have, ,)
case(group, as)
punct(group, ``)
case(group, in)
punct(group, -)
obl(have, group)
punct(group, '')
punct(have, ,)
nsubj(have, they)
aux(have, might)
root(ROOT, have)
amod(opinion, different)
obj(have, opinion)
cc(practice, and)
conj(opinion, practice)
case(group, than)
det(group, a)
punct(group, ``)
compound(group, out)
punct(group, -)
nmod(opinion, group)
punct(group, '')
acl(group, compose)
case(company, of)
det(company, those)
obl(compose, company)
advmod(participate, not)
advmod(participate, so)
conj(compose, participate)
cc(interested, but)
conj(participate, interested)
case(business, in)
compound(business, defense)
obl(interested, business)
punct(have, . )
nummod(fact, 3)
punct(3, .)
det(fact, the)
root(ROOT, fact)
mark(select, that)
compound(list, AIA)
nsubj:pass(select, list)
aux(select, might)
advmod(select, not)
aux(select, have)
aux:pass(select, be)
acl(fact, select)
case(basis, on)
det(basis, a)
amod(basis, random)
obl(select, basis)
punct(fact, .)
det(sample, the)
compound(sample, control)
nsubj:pass(select, sample)
aux:pass(select, be)
root(ROOT, select)
mark(take, by)
advcl(select, take)
det(name, the)
amod(name, bottom)
obj(take, name)
case(each, of)
nmod(name, each)
case(column, of)
det(column, the)
nummod(column, two)
nmod(each, column)
case(name, of)
nmod(column, name)
case(page, on)
det(page, each)
nmod(name, page)
case(list, of)
det(list, the)
amod(list, alphabetical)
nmod(page, list)
case(manufacturer, of)
nmod(list, manufacturer)
case(Register, in)
det(Register, the)
compound(Register, Thomas)
nmod(manufacturer, Register)
punct(select, .)
mark(have, if)
det(name, the)
amod(name, bottom)
nsubj(have, name)
case(column, in)
det(column, each)
nmod(name, column)
aux(have, do)
advmod(have, not)
advcl(substitute, have)
det(executive, a)
amod(executive, responsible)
amod(identify, executive)
xcomp(have, identify)
punct(substitute, ,)
det(name, the)
amod(name, next)
nsubj:pass(substitute, name)
case(which, above)
obl(identify, which)
acl:relcl(name, identify)
det:predet(executive, such)
det(executive, a)
amod(executive, responsible)
obj(identify, executive)
aux:pass(substitute, be)
root(ROOT, substitute)
punct(substitute, . )
compound(hundred, Fifteen)
nummod(name, hundred)
nsubj:pass(select, name)
aux:pass(select, be)
root(ROOT, select)
case(fashion, in)
det(fashion, this)
obl(select, fashion)
punct(select, .)
nummod(mail, e)
punct(e, .)
advcl(mail, mail)
det(questionnaire, the)
obj(mail, questionnaire)
det(questionnaire, each)
nsubj:pass(mail, questionnaire)
aux:pass(mail, be)
root(ROOT, mail)
case(letter, with)
det(letter, a)
compound(letter, cover)
obl(mail, letter)
acl(letter, address)
advmod(address, personally)
case(president, to)
det(president, the)
obl(address, president)
cc(executive, or)
amod(executive, other)
conj(president, executive)
case(firm, of)
det(firm, each)
obl(executive, firm)
punct(mail, .)
det(questionnaire, the)
nsubj:pass(mail, questionnaire)
aux:pass(mail, be)
root(ROOT, mail)
case(Seattle, in)
obl(mail, Seattle)
punct(Washington, ,)
conj(Seattle, Washington)
punct(send, ,)
cc(send, and)
conj(mail, send)
case(mail, by)
amod(mail, regular)
obl(send, mail)
case(address, to)
obl(send, address)
case(state, in)
det(state, the)
nmod(address, state)
case(Idaho, of)
nmod(state, Idaho)
punct(Montana, ,)
conj(Idaho, Montana)
punct(Oregon, ,)
conj(Idaho, Oregon)
punct(Washington, ,)
cc(Washington, and)
conj(Idaho, Washington)
punct(use, .)
nsubj:pass(use, airmail)
aux:pass(use, be)
parataxis(mail, use)
case(address, for)
det(address, the)
obl(use, address)
case(Northwest, outside)
det(Northwest, the)
compound(Northwest, Pacific)
nmod(address, Northwest)
punct(contain, .)
det(letter, each)
nsubj(contain, letter)
parataxis(use, contain)
det(envelope, a)
compound(prepay, postage)
punct(prepay, -)
amod(envelope, prepay)
compound(envelope, return)
obj(contain, envelope)
case(mail, by)
amod(mail, regular)
nmod(envelope, mail)
case(address, for)
nmod(envelope, address)
case(Northwest, in)
det(Northwest, the)
compound(Northwest, Pacific)
nmod(address, Northwest)
punct(airmail, ,)
cc(airmail, and)
case(airmail, by)
conj(Northwest, airmail)
case(those, for)
nmod(airmail, those)
case(Northwest, outside)
det(Northwest, the)
compound(Northwest, Pacific)
nmod(those, Northwest)
punct(those, .)
advmod(day, approximately)
nummod(day, ten)
obl:tmod(mail, day)
mark(mail, after)
det(questionnaire, the)
nsubj:pass(mail, questionnaire)
aux:pass(mail, be)
acl(airmail, mail)
punct(send, ,)
det(postcard, a)
compound(postcard, follow)
punct(follow, -)
compound(follow, up)
compound(postcard, airmail)
nsubj:pass(send, postcard)
aux:pass(send, be)
conj(mail, send)
case(each, to)
obl(send, each)
case(name, of)
det(name, the)
amod(name, original)
nmod(each, name)
punct(mail, .)
det(mailing, the)
amod(mailing, first)
compound(mailing, test)
nsubj:pass(make, mailing)
punct(mailing, ()
case(company, to)
nummod(company, 14)
nmod(mailing, company)
punct(company, ))
aux:pass(make, be)
root(ROOT, make)
case(June, in)
obl(make, June)
punct(June, ,)
nummod(June, 1960)
punct(make, .)
det(mailing, the)
amod(mailing, second)
compound(mailing, test)
nsubj:pass(make, mailing)
punct(mailing, ()
case(company, to)
nummod(company, 100)
nmod(mailing, company)
punct(company, ))
aux:pass(make, be)
root(ROOT, make)
case(July, in)
obl(make, July)
punct(July, ,)
nummod(July, 1960)
punct(make, .)
det(mailing, the)
amod(mailing, final)
nsubj:pass(make, mailing)
case(questionnaire, of)
det(questionnaire, the)
nmod(mailing, questionnaire)
aux:pass(make, be)
root(ROOT, make)
advmod(make, late)
case(August, in)
obl(make, August)
punct(August, ,)
nummod(August, 1960)
punct(make, ,)
case(firm, to)
nummod(firm, 4,900)
obl(make, firm)
acl(firm, consist)
case(3,450, of)
obl(consist, 3,450)
case(list, from)
det(list, the)
compound(list, AIA)
obl(consist, list)
cc(1,450, and)
conj(list, 1,450)
case(list, from)
det(list, the)
compound(list, TR)
nmod(1,450, list)
punct(make, . )
nsubj(receive, F)
punct(F, .)
nsubj(receive, return)
root(ROOT, receive)
advmod(1,000, over)
nummod(return, 1,000)
nsubj:pass(receive, return)
aux:pass(receive, be)
ccomp(receive, receive)
case(week, within)
nummod(week, two)
obl(receive, week)
mark(make, after)
det(mailing, the)
amod(mailing, final)
nsubj:pass(make, mailing)
aux:pass(make, be)
advcl(receive, make)
punct(receive, .)
nsubj(continue, they)
root(ROOT, continue)
mark(arrive, to)
xcomp(continue, arrive)
case(end, until)
det(end, the)
obl(arrive, end)
case(December, of)
nmod(end, December)
punct(December, ,)
nummod(December, 1960)
punct(arrive, ,)
case(time, by)
det(time, which)
obl(receive, time)
det(total, a)
nsubj:pass(receive, total)
case(return, of)
nummod(return, 1,343)
nmod(total, return)
aux:pass(receive, be)
ccomp(arrive, receive)
advcl(receive, represent)
nummod(cent, 26.8)
compound(cent, per)
obj(represent, cent)
case(questionnaire, of)
det(questionnaire, the)
nummod(questionnaire, 5,014)
nmod(cent, questionnaire)
acl(questionnaire, send)
compound:prt(send, out)
punct(questionnaire, .)
compound(seven, fifty)
punct(seven, -)
nummod(return, seven)
nsubj:pass(use, return)
aux(use, could)
advmod(use, not)
aux:pass(use, be)
conj(receive, use)
mark(incomplete, because)
nsubj(incomplete, they)
cop(incomplete, be)
advcl(use, incomplete)
cc(receive, or)
conj(incomplete, receive)
advmod(late, too)
advmod(receive, late)
mark(process, to)
aux:pass(process, be)
advcl(receive, process)
punct(continue, .)
det(return, the)
amod(return, remain)
nummod(return, 1,286)
nsubj(come, return)
nsubj:pass(process, that)
aux:pass(process, be)
acl:relcl(return, process)
root(ROOT, come)
case(category, from)
det(category, the)
obl(come, category)
case(Table, in)
nmod(category, Table)
nummod(Table, 2)
punct(come, . )
nummod(process, g)
punct(g, .)
root(ROOT, process)
det(return, the)
obj(process, return)
det(questionnaire, each)
nsubj:pass(audit, questionnaire)
aux:pass(audit, be)
acl:relcl(return, audit)
case(mistake, for)
amod(mistake, obvious)
obl(audit, mistake)
cc(comment, and)
case(comment, for)
conj(mistake, comment)
punct(identify, ,)
cc(identify, and)
aux:pass(identify, be)
conj(audit, identify)
case(number, by)
det(number, a)
compound(number, serial)
obl(identify, number)
punct(number, ,)
case(list, by)
det(list, the)
compound(list, source)
nmod(number, list)
case(which, from)
obl(select, which)
det(name, the)
compound(name, company)
nsubj:pass(select, name)
aux:pass(select, be)
acl:relcl(list, select)
punct(location, ,)
cc(location, and)
case(location, by)
det(location, the)
amod(location, geographical)
conj(select, location)
case(company, of)
det(company, the)
nmod(location, company)
mark(determine, as)
acl(location, determine)
case(postmark, by)
det(postmark, the)
obl(determine, postmark)
case(envelope, on)
det(envelope, the)
compound(envelope, return)
nmod(postmark, envelope)
punct(process, .)
det(response, all)
nsubj:pass(code, response)
punct(response, ,)
case(comment, except)
nmod(response, comment)
punct(code, ,)
aux:pass(code, be)
advmod(code, numerically)
root(ROOT, code)
case(use, to)
amod(use, permit)
obl(code, use)
case(equipment, of)
compound(processing, data)
punct(processing, -)
compound(equipment, processing)
nmod(use, equipment)
punct(code, .)
det(code, the)
nsubj:pass(punch, code)
aux:pass(punch, be)
advmod(punch, key)
punct(punch, -)
root(ROOT, punch)
case(card, into)
compound(card, IBM)
compound(card, punch)
obl(punch, card)
cc(verify, and)
conj(punch, verify)
punct(punch, .)
det(return, each)
root(ROOT, return)
acl(return, require)
nummod(card, three)
obj(require, card)
cc(key, and)
amod(key, involve)
conj(card, key)
acl(card, punch)
nummod(column, 228)
amod(column, digital)
obj(punch, column)
punct(return, .)
mark(able, in)
fixed(in, order)
mark(able, to)
cop(able, be)
advcl(identify, able)
mark(relate, to)
advmod(relate, properly)
xcomp(able, relate)
det(data, the)
obj(relate, data)
case(company, for)
det(company, a)
amod(company, single)
obl(relate, company)
nsubj:pass(identify, each)
case(card, of)
det(card, the)
nummod(card, three)
nmod(each, card)
acl(card, comprising)
det(set, the)
obj(comprising, set)
case(firm, for)
det(firm, each)
nmod(set, firm)
aux:pass(identify, be)
root(ROOT, identify)
case(number, with)
det(number, the)
amod(number, appropriate)
amod(number, serial)
obl(identify, number)
case(respondent, of)
det(respondent, the)
nmod(number, respondent)
punct(identify, .)
det(card, the)
nsubj:pass(process, card)
aux:pass(process, be)
advmod(process, then)
root(ROOT, process)
advcl(process, use)
amod(equipment, standard)
compound(card, IBM)
compound(card, punch)
compound(equipment, card)
obj(use, equipment)
punct(equipment, ,)
case(computer, include)
det(computer, a)
compound(computer, IBM)
nummod(computer, 650)
nmod(equipment, computer)
punct(process, .)
det(step, the)
amod(step, first)
nsubj(be, step)
case(processing, in)
nmod(step, processing)
root(ROOT, be)
mark(analyze, to)
ccomp(be, analyze)
det(return, the)
obj(analyze, return)
case(question, from)
nmod(return, question)
nummod(question, 1)
punct(2, ,)
nummod(question, 2)
punct(3, ,)
cc(3, and)
conj(question, 3)
mark(determine, to)
advcl(analyze, determine)
mark(business, whether)
det(respondent, the)
nsubj(business, respondent)
cop(business, be)
amod(business, large)
ccomp(determine, business)
cc(business, or)
amod(business, small)
conj(business, business)
punct(business, ,)
case(accordance, in)
obl(business, accordance)
case(definition, with)
det(definition, the)
nmod(accordance, definition)
acl(definition, contain)
case(section, in)
compound(section, aspr)
obl(contain, section)
nummod(section, 1-701)
punct(be, . )
punct(see, ()
root(ROOT, see)
obj(see, Chapter)
nummod(Chapter, 2)
punct(see, .)
punct(see, ))
det(result, the)
nsubj:pass(show, result)
aux:pass(show, be)
root(ROOT, show)
case(table, in)
obl(show, table)
nummod(table, 3)
punct(show, .)
det(return, the)
nsubj:pass(show, return)
case(company, from)
nmod(return, company)
acl(return, classify)
mark(set, as)
amod(business, large)
nsubj:pass(set, business)
aux:pass(set, be)
advcl(classify, set)
advmod(set, aside)
cc(use, and)
advmod(use, not)
conj(set, use)
mark(relevant, because)
nsubj(relevant, they)
cop(relevant, be)
advmod(relevant, not)
advcl(use, relevant)
case(study, to)
det(study, a)
obl(relevant, study)
case(opinion, of)
det(opinion, the)
nmod(study, opinion)
cc(practice, and)
conj(opinion, practice)
case(firm, of)
amod(firm, small)
nmod(opinion, firm)
punct(show, .)
det(step, the)
amod(step, second)
nsubj(be, step)
case(processing, in)
nmod(step, processing)
root(ROOT, be)
mark(compare, to)
ccomp(be, compare)
det(response, the)
obj(compare, response)
case(company, from)
nmod(response, company)
case(list, on)
det(list, the)
compound(list, AIA)
obl(compare, list)
case(those, with)
obl(compare, those)
case(company, from)
nmod(those, company)
case(list, on)
det(list, the)
compound(list, TR)
nmod(those, list)
mark(determine, in)
fixed(in, order)
mark(determine, to)
advcl(compare, determine)
mark(appropriate, whether)
expl(appropriate, it)
aux(appropriate, would)
cop(appropriate, be)
ccomp(determine, appropriate)
mark(merge, to)
csubj(appropriate, merge)
det(response, the)
obj(merge, response)
case(purpose, for)
det(purpose, the)
nmod(response, purpose)
case(study, of)
det(study, the)
nmod(purpose, study)
punct(be, .)
det(method, the)
nsubj:pass(describe, method)
cc(result, and)
conj(method, result)
case(analysis, of)
det(analysis, this)
amod(analysis, comparative)
nmod(method, analysis)
aux:pass(describe, be)
root(ROOT, describe)
case(Appendix, in)
obl(describe, Appendix)
obl(describe, Aj)
punct(describe, .)
nsubj:pass(conclude, it)
aux:pass(conclude, be)
root(ROOT, conclude)
mark(appropriate, that)
expl(appropriate, it)
aux(appropriate, would)
cop(appropriate, be)
ccomp(conclude, appropriate)
mark(process, to)
csubj(appropriate, process)
det(group, the)
nummod(group, two)
obj(process, group)
case(response, of)
nmod(group, response)
case(sample, as)
det(sample, a)
amod(sample, single)
obl(process, sample)
case(business, of)
det(business, all)
amod(business, small)
nmod(sample, business)
acl(business, engage)
obl(engage, in)
punct(wish, ,)
cc(wish, or)
conj(engage, wish)
mark(sell, to)
xcomp(wish, sell)
case(program, to)
punct(program, ,)
compound(program, defense)
obl(sell, program)
punct(conclude, .)
case(place, in)
det(place, the)
amod(place, first)
obl(have, place)
punct(have, ,)
det(group, the)
nummod(group, two)
nsubj(have, group)
case(firm, of)
nmod(group, firm)
punct(have, ,)
mark(combine, when)
advcl(have, combine)
punct(have, ,)
root(ROOT, have)
obj(have, characteristic)
cc(practice, and)
conj(characteristic, practice)
nsubj(representative, that)
cop(representative, be)
advmod(representative, more)
acl:relcl(characteristic, representative)
case(company, of)
nmod(representative, company)
nsubj(subject, that)
cop(subject, be)
det(subject, the)
acl:relcl(representative, subject)
case(study, of)
det(study, this)
nmod(subject, study)
mark(do, than)
aux(subject, do)
det(firm, the)
nsubj(do, firm)
case(list, from)
det(list, the)
compound(list, AIA)
nmod(firm, list)
advmod(list, alone)
punct(have, .)
det(Valley, the)
amod(Valley, vast)
compound(Valley, Central)
nsubj(one, Valley)
case(California, of)
nmod(Valley, California)
cop(one, be)
root(ROOT, one)
case(area, of)
det(area, the)
advmod(productive, most)
amod(area, productive)
amod(area, agricultural)
nmod(one, area)
case(world, in)
det(world, the)
nmod(area, world)
punct(one, .)
case(summer, during)
det(summer, the)
obl(become, summer)
case(1960, of)
nmod(summer, 1960)
punct(become, ,)
nsubj(become, it)
parataxis(one, become)
det(setting, the)
xcomp(become, setting)
case(struggle, for)
det(struggle, a)
amod(struggle, bitter)
cc(basic, and)
conj(bitter, basic)
compound(management, labor)
punct(management, -)
conj(bitter, management)
nmod(setting, struggle)
punct(one, .)
det(contestants, the)
nsubj(Committee, contestants)
case(struggle, in)
det(struggle, this)
amod(struggle, economic)
nmod(contestants, struggle)
cop(Committee, be)
det(Committee, the)
compound(worker, Agricultural)
compound(Committee, worker)
compound(Committee, organize)
root(ROOT, Committee)
punct(awoc, ()
appos(Committee, awoc)
punct(awoc, ))
case(cio, of)
det(cio, the)
compound(cio, afl)
punct(cio, -)
nmod(Committee, cio)
cc(employer, and)
det(employer, the)
amod(employer, agricultural)
conj(cio, employer)
case(State, of)
det(State, the)
nmod(employer, State)
punct(Committee, .)
case(virtue, by)
obl(find, virtue)
case(responsibility, of)
det(responsibility, the)
amod(responsibility, legal)
nmod(virtue, responsibility)
case(Department, of)
det(Department, the)
nmod(responsibility, Department)
case(employment, of)
nmod(Department, employment)
case(program, in)
det(program, the)
compound(placement, farm)
compound(program, placement)
nmod(Department, program)
punct(find, ,)
nsubj(find, we)
advmod(find, necessarily)
root(ROOT, find)
obj(find, ourselves)
case(middle, in)
det(middle, the)
obl(find, middle)
case(force, between)
det(force, these)
nummod(force, two)
nmod(middle, force)
punct(find, .)
nsubj(position, it)
cop(position, be)
advmod(position, not)
det(position, a)
amod(position, pleasant)
cc(easy, or)
conj(pleasant, easy)
root(ROOT, position)
punct(one, ,)
cc(one, but)
conj(position, one)
nsubj(endeavor, we)
aux(endeavor, have)
acl:relcl(one, endeavor)
mark(maintain, to)
xcomp(endeavor, maintain)
punct(position, .)
nsubj(seek, we)
aux(seek, have)
root(ROOT, seek)
mark(neutral, to)
cop(neutral, be)
advmod(neutral, strictly)
xcomp(seek, neutral)
case(party, as)
fixed(as, between)
det(party, the)
obl(neutral, party)
punct(require, ,)
cc(require, but)
case(time, at)
det(time, the)
amod(time, same)
obl(require, time)
nsubj:pass(require, we)
aux(require, have)
aux:pass(require, be)
conj(seek, require)
advmod(require, frequently)
mark(rule, to)
xcomp(require, rule)
case(issue, on)
amod(issue, specific)
obl(rule, issue)
cc(situation, or)
conj(issue, situation)
mark(arise, as)
nsubj(arise, they)
advcl(rule, arise)
punct(seek, .)
advmod(pleased, inevitably)
punct(pleased, ,)
nummod(side, one)
nsubj(pleased, side)
cop(pleased, be)
root(ROOT, pleased)
cc(displease, and)
det(displease, the)
amod(displease, other)
conj(pleased, displease)
punct(pleased, ,)
advmod(rule, regardless)
mark(rule, of)
advmod(rule, how)
nsubj(rule, we)
conj(pleased, rule)
punct(pleased, .)
advmod(interpret, often)
det(party, the)
amod(party, displease)
nsubj(interpret, party)
root(ROOT, interpret)
nmod:poss(decision, we)
obj(interpret, decision)
mark(imply, as)
advcl(interpret, imply)
obj(imply, favoritism)
case(other, toward)
det(other, the)
nmod(favoritism, other)
punct(interpret, .)
nsubj(consol, we)
aux(consol, have)
root(ROOT, consol)
obj(consol, ourselves)
case(thought, with)
det(thought, the)
obl(consol, thought)
mark(reaction, that)
nsubj(reaction, this)
cop(reaction, be)
det(reaction, a)
amod(reaction, normal)
amod(reaction, human)
acl(thought, reaction)
cc(one, and)
cop(one, be)
conj(reaction, one)
case(consequence, of)
det(consequence, the)
nmod(one, consequence)
case(decision, of)
det(decision, any)
nmod(consequence, decision)
case(proceeding, in)
det(proceeding, a)
compound(proceeding, adversary)
nmod(decision, proceeding)
punct(consol, .)
nsubj(disconcerting, it)
cop(disconcerting, be)
root(ROOT, disconcerting)
punct(disconcerting, ,)
advmod(disconcerting, nevertheless)
punct(disconcerting, ,)
mark(read, to)
csubj(disconcerting, read)
case(weekly, in)
det(weekly, a)
compound(weekly, labor)
obl(read, weekly)
punct(disconcerting, ,)
punct(disconcerting, ``)
compound(knuckle, perluss)
root(ROOT, knuckle)
advmod(knuckle, down)
case(grower, to)
obl(down, grower)
punct(knuckle, '')
punct(confront, ,)
cc(confront, and)
advmod(confront, then)
mark(confront, to)
aux:pass(confront, be)
conj(knuckle, confront)
case(publication, with)
det(grower, a)
nmod:poss(publication, grower)
case(grower, 's)
obl(confront, publication)
nsubj(state, which)
acl:relcl(publication, state)
punct(knuckle, ,)
punct(knuckle, ``)
nsubj(recognize, perluss)
root(ROOT, recognize)
advmod(recognize, obviously)
amod(strike, phony)
cc(trump, and)
conj(phony, trump)
punct(trump, -)
compound:prt(phony, up)
obj(recognize, strike)
case(fide, as)
amod(fide, bona)
nmod(strike, fide)
punct(strike, '')
punct(recognize, .)
case(number, for)
det(number, a)
obl(be, number)
case(year, of)
nmod(number, year)
punct(recognize, ,)
expl(be, there)
aux(be, have)
parataxis(recognize, be)
amod(attempt, sporadic)
nsubj(be, attempt)
case(California, in)
nmod(attempt, California)
mark(organize, to)
acl(attempt, organize)
compound(worker, farm)
obj(organize, worker)
punct(recognize, .)
det(attempt, these)
nsubj(meet, attempt)
root(ROOT, meet)
case(sucess, with)
amod(sucess, little)
obl(meet, sucess)
case(variety, for)
det(variety, a)
obl(meet, variety)
case(reason, of)
nmod(variety, reason)
punct(meet, .)
nsubj:pass(finance, they)
aux:pass(finance, be)
advmod(finance, inadequately)
root(ROOT, finance)
punct(finance, ,)
case(leadership, without)
amod(leadership, experience)
obl(finance, leadership)
punct(lack, ,)
cc(lack, and)
conj(finance, lack)
det(support, the)
amod(support, general)
obj(lack, support)
case(labor, of)
amod(labor, organized)
nmod(support, labor)
case(whole, as)
det(whole, a)
obl(lack, whole)
punct(finance, .)
det(year, this)
amod(year, past)
obl:tmod(different, year)
det(pattern, the)
nsubj(different, pattern)
aux(different, have)
cop(different, be)
root(ROOT, different)
punct(different, :)
det(program, the)
compound(program, organizing)
nsubj(have, program)
root(ROOT, have)
det(support, the)
amod(support, full)
obj(have, support)
case(cio, of)
det(cio, the)
compound(cio, afl)
punct(cio, -)
nmod(support, cio)
punct(cio, ,)
nsubj(supply, which)
acl:relcl(cio, supply)
obj(supply, staff)
cc(money, and)
conj(staff, money)
case(awoc, to)
det(awoc, the)
obl(supply, awoc)
punct(support, ,)
cc(support, as)
fixed(as, well)
fixed(as, as)
amod(support, moral)
conj(awoc, support)
punct(support, .)
nsubj:pass(experience, Leadership)
aux:pass(experience, be)
parataxis(have, experience)
cc(skillful, and)
conj(experience, skillful)
punct(significant, ,)
cc(significant, and)
amod(resource, financial)
nsubj(significant, resource)
cop(significant, be)
conj(experience, significant)
punct(have, .)
advmod(be, regardless)
case(where, of)
obl(regardless, where)
amod(sympathy, personal)
nsubj(lie, sympathy)
aux(lie, may)
acl:relcl(where, lie)
case(party, as)
fixed(as, between)
det(party, the)
obl(lie, party)
punct(be, ,)
nsubj(be, failure)
mark(recognize, to)
acl(failure, recognize)
det(condition, these)
amod(condition, change)
obj(recognize, condition)
aux(be, would)
root(ROOT, be)
mark(ignore, to)
ccomp(be, ignore)
det(fact, the)
obj(ignore, fact)
case(life, of)
nmod(fact, life)
punct(be, .)
case(result, as)
det(result, a)
obl(greater, result)
case(condition, of)
det(condition, these)
amod(condition, change)
nmod(result, condition)
punct(greater, ,)
det(impact, the)
nsubj(greater, impact)
case(effort, of)
det(effort, the)
amod(effort, organizational)
nmod(impact, effort)
case(relation, on)
amod(relation, agricultural)
compound(management, labor)
punct(management, -)
compound(relation, management)
nmod(effort, relation)
aux(greater, have)
cop(greater, be)
advmod(greater, much)
root(ROOT, greater)
case(past, than)
case(past, in)
det(past, the)
obl(greater, past)
punct(greater, .)
det(awoc, the)
nsubj(able, awoc)
aux(able, have)
cop(able, be)
root(ROOT, able)
mark(employ, to)
xcomp(able, employ)
det(weapon, the)
amod(weapon, traditional)
obj(employ, weapon)
case(labor, of)
nmod(weapon, labor)
punct(weapon, --)
det(strike, the)
appos(weapon, strike)
cc(line, and)
det(line, the)
compound(line, picket)
conj(strike, line)
punct(employ, --)
case(success, with)
amod(success, considerable)
obl(employ, success)
punct(employ, ,)
advmod(area, particularly)
case(area, in)
det(area, the)
obl(employ, area)
case(wage, of)
nmod(area, wage)
punct(able, .)
case(nature, by)
det(nature, the)
amod(nature, very)
obl(union, nature)
case(situation, of)
det(situation, the)
nmod(nature, situation)
punct(union, ,)
nsubj(union, it)
cop(union, be)
det(union, the)
root(ROOT, union)
nsubj(able, which)
aux(able, have)
cop(able, be)
acl:relcl(union, able)
mark(select, to)
xcomp(able, select)
det(time, the)
obj(select, time)
cc(place, and)
conj(time, place)
mark(bring, to)
advcl(select, bring)
obj(bring, pressure)
case(management, upon)
obl(bring, management)
punct(union, .)
case(date, to)
obl(selective, date)
punct(selective, ,)
advmod(selective, at)
fixed(at, least)
punct(selective, ,)
det(strategy, the)
nsubj(selective, strategy)
case(awoc, of)
det(awoc, the)
nmod(strategy, awoc)
aux(selective, have)
cop(selective, be)
root(ROOT, selective)
punct(selective, ;)
punct(selective, ;)
nsubj(be, that)
parataxis(selective, be)
mark(say, to)
ccomp(be, say)
punct(say, ,)
mark(concentrate, to)
xcomp(say, concentrate)
case(crop, on)
det(crop, a)
amod(crop, particular)
obl(concentrate, crop)
cc(activity, or)
conj(crop, activity)
case(area, in)
det(area, a)
amod(area, particular)
obl(concentrate, area)
case(time, at)
det(time, a)
amod(time, strategic)
nmod(area, time)
punct(engagement, ,)
cc(engagement, rather)
fixed(rather, than)
det(engagement, any)
amod(engagement, broadside)
conj(crop, engagement)
case(management, with)
nmod(engagement, management)
case(area, throughout)
det(area, a)
nmod(management, area)
cc(state, or)
det(state, the)
conj(area, state)
punct(become, .)
advmod(become, primarily)
punct(become, ,)
nsubj(become, we)
acl:relcl(engagement, become)
xcomp(become, involved)
case(dispute, in)
det(dispute, these)
obl(involved, dispute)
case(obligation, because)
fixed(because, of)
nmod:poss(obligation, we)
compound(obligation, referral)
obl(involved, obligation)
case(program, under)
nmod:poss(program, we)
compound(placement, farm)
compound(program, placement)
nmod(obligation, program)
punct(selective, .)
advmod(expect, normally)
punct(expect, ,)
mark(cover, because)
amod(labor, agricultural)
nsubj:pass(cover, labor)
aux:pass(cover, be)
advmod(cover, not)
advcl(expect, cover)
case(insurance, by)
amod(insurance, unemployment)
obl(cover, insurance)
punct(expect, ,)
nsubj(expect, we)
aux(expect, would)
advmod(expect, not)
root(ROOT, expect)
det(issue, any)
obj(expect, issue)
mark(arise, to)
acl(issue, arise)
case(payment, regard)
compound(payment, benefit)
obl(arise, payment)
case(provision, under)
det(provision, the)
compound(dispute, trade)
compound(provision, dispute)
nmod(payment, provision)
case(code, of)
det(code, the)
compound(code, unemployment)
compound(code, insurance)
nmod(provision, code)
punct(arise, ,)
mark(realm, although)
det:predet(situation, such)
det(situation, a)
nsubj(realm, situation)
cop(realm, be)
advmod(realm, quite)
case(realm, within)
det(realm, the)
advcl(arise, realm)
case(possibility, of)
nmod(realm, possibility)
punct(expect, .)
cc(arise, but)
det(issue, the)
amod(issue, current)
nsubj(arise, issue)
root(ROOT, arise)
case(Act, out)
case(Act, of)
det(Act, the)
compound(Act, Wagner)
punct(Act, -)
compound(Act, peyser)
obl(arise, Act)
case(referral, concern)
obl(arise, referral)
case(establishment, to)
det(establishment, a)
nmod(referral, establishment)
advmod(exist, where)
det(dispute, a)
compound(dispute, labor)
nsubj(exist, dispute)
acl:relcl(establishment, exist)
punct(Law, ,)
cc(Law, and)
case(Law, out)
case(Law, of)
amod(Law, Public)
obl(exist, Law)
nummod(Law, 78)
cc(agreement, and)
det(agreement, the)
compound(agreement, Migrant)
compound(agreement, Labor)
conj(Law, agreement)
mark(employ, if)
amod(national, mexican)
nsubj:pass(employ, national)
aux:pass(employ, be)
acl(agreement, employ)
case(ranch, at)
det(ranch, the)
obl(employ, ranch)
punct(remember, .)
nsubj(remember, most)
case(we, of)
nmod(most, we)
conj(employ, remember)
cc(think, and)
conj(remember, think)
case(Act, of)
det(Act, the)
compound(Act, Wagner)
punct(Act, -)
compound(Act, peyser)
obl(think, Act)
case(sense, in)
nmod:poss(sense, its)
amod(sense, historical)
obl(think, sense)
punct(think, ,)
case(milestone, as)
det(milestone, a)
amod(milestone, major)
obl(think, milestone)
case(development, in)
det(development, the)
nmod(milestone, development)
case(service, of)
amod(service, public)
compound(service, placement)
nmod(development, service)
punct(arise, .)
advmod(think, infrequently)
aux(think, do)
nsubj(think, we)
root(ROOT, think)
case(it, of)
obl(think, it)
case(living, as)
det(living, a)
obl(think, living)
punct(continue, ,)
conj(living, continue)
punct(control, ,)
compound(control, operating)
conj(living, control)
case(system, over)
det(system, the)
obl(think, system)
punct(think, .)
advmod(come, however)
punct(come, ,)
mark(arise, when)
compound(dispute, labor)
nsubj(arise, dispute)
advcl(come, arise)
punct(come, ,)
nmod:poss(provision, its)
nsubj(come, provision)
root(ROOT, come)
advmod(come, clearly)
case(play, into)
obl(come, play)
punct(come, .)
nsubj(accept, California)
aux(accept, have)
parataxis(come, accept)
det(provision, the)
obj(accept, provision)
case(act, of)
det(act, that)
nmod(provision, act)
punct(have, ()
mark(have, as)
advcl(accept, have)
det(States, all)
amod(States, other)
obj(have, States)
punct(have, ))
mark(enact, by)
advcl(have, enact)
case(code, into)
nmod:poss(code, we)
obl(enact, code)
punct(section, ()
appos(code, section)
nummod(section, 2051)
punct(section, ))
det(provision, a)
obj(enact, provision)
obj(accept, that)
det(state, the)
nsubj(accept, state)
case(California, of)
nmod(state, California)
acl:relcl(provision, accept)
det(provision, the)
obj(accept, provision)
case(Act, of)
det(Act, the)
compound(Act, Wagner)
punct(Act, -)
compound(Act, peyser)
nmod(provision, Act)
punct(observe, ,)
cc(observe, and)
aux(observe, will)
conj(accept, observe)
cc(comply, and)
conj(observe, comply)
case(requirement, with)
det(requirement, the)
obl(comply, requirement)
case(act, of)
det(act, that)
nmod(requirement, act)
punct(come, .)
case(respect, with)
obl(state, respect)
case(dispute, to)
compound(dispute, labor)
nmod(respect, dispute)
punct(state, ,)
det(Act, the)
compound(Act, Wagner)
punct(peyser, -)
compound(Act, peyser)
nsubj(state, Act)
root(ROOT, state)
advmod(state, only)
punct(state, ,)
mark(carry, in)
advcl(state, carry)
compound:prt(carry, out)
det(provision, the)
obj(carry, provision)
case(act, of)
det(act, this)
nmod(provision, act)
punct(authorize, ,)
det(Secretary, the)
nsubj:pass(authorize, Secretary)
aux:pass(authorize, be)
ccomp(state, authorize)
cc(direct, and)
conj(authorize, direct)
mark(provide, to)
xcomp(direct, provide)
case(give, for)
det(give, the)
obl(provide, give)
case(notice, of)
nmod(give, notice)
case(strike, of)
nmod(notice, strike)
cc(out, or)
compound(out, lock)
punct(out, -)
conj(strike, out)
case(applicant, to)
nmod(strike, applicant)
mark(refer, before)
nsubj:pass(refer, they)
aux:pass(refer, be)
advcl(provide, refer)
case(employment, to)
obl(refer, employment)
punct(state, .)
amod(provision, other)
nsubj(empower, provision)
case(Act, of)
det(Act, the)
nmod(provision, Act)
root(ROOT, empower)
det(Secretary, the)
obj(empower, Secretary)
mark(adopt, to)
xcomp(empower, adopt)
obj(adopt, regulation)
amod(regulation, necessary)
mark(carry, to)
advcl(necessary, carry)
compound:prt(carry, out)
nmod:poss(provision, its)
obj(carry, provision)
punct(do, ,)
cc(do, and)
nsubj(do, he)
aux(do, have)
conj(empower, do)
advmod(do, so)
punct(empower, .)
det(regulation, the)
amod(regulation, pertinent)
nsubj(section, regulation)
case(purpose, for)
nmod:poss(purpose, we)
nmod(regulation, purpose)
cop(section, be)
root(ROOT, section)
nummod(section, 602.2)
punct(section, ()
punct(section, ,)
punct(section, ))
punct(section, ,)
mark(follow, as)
advcl(section, follow)
punct(section, :)
root(ROOT, referral)
case(situation, in)
compound(dispute, labor)
compound(situation, dispute)
nmod(referral, situation)
punct(referral, .)
det(person, no)
nsubj:pass(refer, person)
aux(refer, shall)
aux:pass(refer, be)
root(ROOT, refer)
case(position, to)
det(position, a)
obl(refer, position)
det(fill, the)
appos(position, fill)
case(which, of)
nsubj(aid, which)
aux(aid, will)
acl:relcl(position, aid)
advmod(aid, directly)
cc(indirectly, or)
conj(directly, indirectly)
mark(fill, in)
advcl(aid, fill)
det(job, a)
obj(fill, job)
nsubj(vacant, which)
punct(1, ()
nummod(vacant, 1)
punct(1, ))
cop(vacant, be)
acl:relcl(job, vacant)
mark(strike, because)
det(occupant, the)
amod(occupant, former)
nsubj(strike, occupant)
cop(strike, be)
case(strike, on)
advcl(vacant, strike)
cc(lock, or)
aux(lock, be)
aux:pass(lock, be)
conj(strike, lock)
compound:prt(lock, out)
case(course, in)
det(course, the)
obl(lock, course)
case(dispute, of)
det(dispute, a)
compound(dispute, labor)
nmod(course, dispute)
punct(fill, ,)
cc(fill, or)
punct(2, ()
nummod(issue, 2)
punct(2, ))
det(fill, the)
nsubj(issue, fill)
case(which, of)
nmod(issue, which)
cop(issue, be)
det(issue, a)
acl:relcl(dispute, issue)
case(dispute, in)
det(dispute, a)
compound(dispute, labor)
nmod(issue, dispute)
punct(refer, .)
case(respect, with)
obl(refer, respect)
case(position, to)
nmod(respect, position)
advmod(cover, not)
acl(respect, cover)
case(subparagraph, by)
obl(cover, subparagraph)
punct(1, ()
nummod(subparagraph, 1)
punct(1, ))
cc(2, or)
punct(2, ()
conj(1, 2)
punct(2, ))
case(paragraph, of)
det(paragraph, this)
nmod(2, paragraph)
punct(refer, ,)
det(individual, any)
nsubj:pass(refer, individual)
aux(refer, may)
aux:pass(refer, be)
root(ROOT, refer)
case(place, to)
det(place, a)
obl(refer, place)
case(employment, of)
nmod(place, employment)
case(which, in)
obl(exist, which)
det(dispute, a)
compound(dispute, labor)
nsubj(exist, dispute)
acl:relcl(place, exist)
punct(provide, ,)
conj(exist, provide)
nsubj:pass(give, he)
aux:pass(give, be)
ccomp(provide, give)
amod(notice, write)
obj(give, notice)
case(dispute, of)
amod(dispute, such)
nmod(notice, dispute)
case(time, prior)
fixed(prior, to)
cc(time, or)
case(time, at)
det(time, the)
obl(give, time)
case(referral, of)
nmod:poss(referral, he)
nmod(time, referral)
punct(refer, .)
mark(analyze, in)
advcl(let, analyze)
det(regulation, this)
obj(analyze, regulation)
punct(let, ,)
root(ROOT, let)
obj(let, we)
xcomp(let, take)
det(sentence, the)
amod(sentence, last)
obj(take, sentence)
advmod(take, first)
punct(let, .)
nsubj(permit, it)
root(ROOT, permit)
obj(permit, referral)
case(circumstance, under)
amod(circumstance, certain)
nmod(referral, circumstance)
advmod(be, even)
mark(be, when)
expl(be, there)
advcl(permit, be)
det(dispute, a)
compound(dispute, labor)
nsubj(be, dispute)
punct(dispute, ,)
acl(dispute, provide)
det(individual, the)
nsubj:pass(give, individual)
aux:pass(give, be)
acl:relcl(dispute, give)
amod(notice, write)
obj(give, notice)
case(dispute, of)
det:predet(dispute, such)
det(dispute, a)
nmod(notice, dispute)
punct(permit, .)
root(ROOT, Assume)
punct(Assume, ,)
case(example, for)
nmod(situation, example)
punct(situation, ,)
det(situation, a)
parataxis(Assume, situation)
advmod(have, where)
det(farm, a)
nsubj(have, farm)
acl:relcl(situation, have)
det(shed, a)
compound(shed, packing)
obj(have, shed)
cc(field, and)
conj(shed, field)
punct(Assume, .)
det(worker, the)
compound(shed, packing)
compound(worker, shed)
nsubj(go, worker)
root(ROOT, go)
case(strike, on)
obl(go, strike)
punct(go, .)
expl(be, there)
root(ROOT, be)
det(dispute, no)
nsubj(be, dispute)
acl(dispute, involve)
obj(involve, fieldwork)
punct(be, .)
nsubj(conclude, we)
root(ROOT, conclude)
mark(refer, that)
nsubj(refer, we)
aux(refer, may)
ccomp(conclude, refer)
obj(refer, worker)
case(fieldwork, to)
det(fieldwork, the)
nmod(worker, fieldwork)
punct(fieldwork, ()
cc(work, but)
advmod(shed, not)
det(shed, the)
compound(shed, packing)
compound(work, shed)
conj(fieldwork, work)
punct(work, ))
ccomp(conclude, provide)
nsubj(give, we)
ccomp(provide, give)
iobj(give, they)
amod(notice, write)
obj(give, notice)
case(dispute, of)
det(dispute, the)
compound(shed, packing)
compound(dispute, shed)
nmod(notice, dispute)
punct(conclude, .)
advmod(far, so)
advmod(arise, far)
punct(arise, ,)
det(case, no)
amod(case, troublesome)
nsubj(arise, case)
aux(arise, have)
root(ROOT, arise)
case(provision, under)
det(provision, this)
obl(arise, provision)
punct(arise, .)
nsubj(part, it)
cop(part, be)
det(part, the)
amod(part, first)
root(ROOT, part)
case(Regulation, of)
det(Regulation, the)
nmod(part, Regulation)
nsubj(issue, that)
cop(issue, be)
advmod(issue, currently)
case(issue, at)
acl:relcl(Regulation, issue)
punct(part, .)
root(ROOT, note)
mark(prohibit, that)
nsubj(prohibit, it)
ccomp(note, prohibit)
obj(prohibit, referral)
case(condition, under)
det(condition, either)
nmod(referral, condition)
punct(1, ()
appos(condition, 1)
punct(1, ))
cc(condition, or)
conj(condition, condition)
punct(2, ()
nummod(contend, 2)
punct(2, ))
punct(2, .)
compound(representative, Employer)
nsubj(contend, representative)
aux(contend, have)
parataxis(note, contend)
mark(go, that)
det(Secretary, the)
nsubj(go, Secretary)
aux(go, have)
ccomp(contend, go)
case(authority, beyond)
nmod:poss(authority, he)
obl(go, authority)
case(prohibition, by)
det:predet(prohibition, such)
det(prohibition, a)
obl(go, prohibition)
punct(go, ,)
case(grounds, on)
det(grounds, the)
obl(go, grounds)
mark(require, that)
det(Act, the)
compound(peyser, Wagner)
punct(peyser, -)
compound(Act, peyser)
nsubj(require, Act)
acl(grounds, require)
advmod(notice, only)
amod(notice, write)
obj(require, notice)
case(worker, to)
det(worker, the)
amod(worker, prospective)
nmod(notice, worker)
obj(exist, that)
det(dispute, a)
nsubj(exist, dispute)
acl:relcl(worker, exist)
punct(note, .)
case(court, into)
obl(get, court)
det(matter, the)
nsubj(get, matter)
root(ROOT, get)
case(court, into)
det(court, the)
obl(get, court)
det(way, this)
obl:npmod(get, way)
punct(get, :)
nsubj(orchard, one)
case(strike, of)
det(strike, the)
amod(strike, early)
nmod(one, strike)
acl(strike, call)
case(awoc, by)
det(awoc, the)
obl(call, awoc)
cop(orchard, be)
case(orchard, at)
det(orchard, the)
compound(pear, DiGiorgio)
compound(orchard, pear)
root(ROOT, orchard)
case(County, in)
compound(County, Yuba)
nmod(orchard, County)
punct(orchard, .)
nsubj(find, we)
root(ROOT, find)
mark(exist, that)
det(dispute, a)
compound(dispute, labor)
nsubj(exist, dispute)
ccomp(find, exist)
punct(leave, ,)
cc(leave, and)
mark(leave, that)
det(worker, the)
nsubj(leave, worker)
aux(leave, have)
conj(exist, leave)
nmod:poss(job, they)
obj(leave, job)
punct(job, ,)
nsubj(vacant, which)
cop(vacant, be)
advmod(vacant, then)
acl:relcl(job, vacant)
case(dispute, because)
fixed(because, of)
det(dispute, the)
obl(vacant, dispute)
punct(vacant, .)
advmod(suspend, accordingly)
punct(suspend, ,)
case(clause, under)
obl(suspend, clause)
punct(1, ()
appos(clause, 1)
punct(1, ))
case(Regulation, of)
det(Secretary, the)
nmod:poss(Regulation, Secretary)
case(Secretary, 's)
nmod(clause, Regulation)
punct(suspend, ,)
nsubj(suspend, we)
ccomp(find, suspend)
obj(suspend, referral)
case(employer, to)
det(employer, the)
obl(suspend, employer)
punct(find, . )
punct(involved, ()
advmod(involved, incidentally)
punct(involved, ,)
det(national, no)
amod(national, mexican)
nsubj(involved, national)
cop(involved, be)
root(ROOT, involved)
punct(involved, .)
punct(involved, ))
det(employer, the)
nsubj(challenge, employer)
punct(employer, ,)
acl(employer, seek)
mark(continue, to)
xcomp(seek, continue)
nmod:poss(harvest, he)
obj(continue, harvest)
punct(challenge, ,)
root(ROOT, challenge)
nmod:poss(right, we)
obj(challenge, right)
mark(cease, to)
acl(right, cease)
obj(cease, referral)
case(he, to)
obl(cease, he)
punct(seek, ,)
cc(seek, and)
conj(challenge, seek)
obj(seek, relief)
case(Court, in)
det(Court, the)
compound(Court, Superior)
nmod(relief, Court)
case(County, of)
compound(County, Yuba)
nmod(Court, County)
punct(challenge, .)
det(court, the)
nsubj(issue, court)
root(ROOT, issue)
det(order, a)
amod(order, temporary)
compound(order, restraining)
obj(issue, order)
punct(issue, ,)
advcl(issue, direct)
obj(direct, we)
case(referral, to)
compound(referral, resume)
obl(direct, referral)
punct(issue, .)
nsubj(obey, we)
punct(obey, ,)
advmod(obey, of)
fixed(of, course)
punct(obey, ,)
root(ROOT, obey)
det(order, the)
compound(order, court)
obj(obey, order)
punct(obey, .)
advmod(seek, however)
punct(seek, ,)
det(General, the)
nsubj(seek, Attorney)
nsubj(seek, General)
case(California, of)
nmod(General, California)
punct(seek, ,)
case(request, at)
det(request, the)
obl(seek, request)
case(Secretary, of)
det(Secretary, the)
nmod(request, Secretary)
case(Labor, of)
nmod(Secretary, Labor)
punct(seek, ,)
root(ROOT, seek)
mark(have, to)
xcomp(seek, have)
det(jurisdiction, the)
obj(have, jurisdiction)
case(issue, over)
det(issue, the)
nmod(jurisdiction, issue)
acl(issue, remove)
case(Court, to)
det(Court, the)
compound(Court, Federal)
compound(Court, District)
obl(remove, Court)
punct(have, ,)
case(grounds, on)
obl(have, grounds)
mark(issue, that)
nsubj(issue, it)
cop(issue, be)
advmod(issue, predominantly)
det(issue, a)
amod(issue, federal)
acl(grounds, issue)
mark(challenge, since)
det(validity, the)
nsubj:pass(challenge, validity)
case(Regulation, of)
det(Secretary, the)
nmod:poss(Regulation, Secretary)
case(Secretary, 's)
nmod(validity, Regulation)
aux(challenge, be)
aux:pass(challenge, be)
advcl(issue, challenge)
punct(seek, .)
advmod(hold, however)
punct(hold, ,)
det(Court, the)
compound(Court, Federal)
nsubj(hold, Court)
root(ROOT, hold)
mark(accept, that)
mark(accept, since)
det(State, the)
nsubj(accept, State)
aux(accept, have)
advcl(hold, accept)
det(provision, the)
obj(accept, provision)
case(Act, of)
det(Act, the)
compound(Act, Wagner)
punct(Act, -)
compound(Act, peyser)
nmod(provision, Act)
case(code, into)
nmod:poss(code, its)
amod(code, own)
obl(accept, code)
punct(regulation, ,)
cc(regulation, and)
advmod(regulation, presumably)
advmod(regulation, therefore)
advmod(regulation, also)
det(regulation, the)
conj(code, regulation)
punct(matter, ,)
nsubj(matter, it)
cop(matter, be)
advmod(matter, now)
det(matter, a)
compound(matter, state)
acl:relcl(regulation, matter)
punct(hold, .)
nsubj(refuse, it)
advmod(refuse, accordingly)
root(ROOT, refuse)
mark(assume, to)
xcomp(refuse, assume)
obj(assume, jurisdiction)
punct(assume, ,)
mark(make, whereupon)
det(Court, the)
compound(Court, California)
compound(Court, Superior)
nsubj(make, Court)
advcl(assume, make)
det(order, the)
compound(order, restraining)
obj(make, order)
xcomp(make, permanent)
punct(refuse, .)
case(order, under)
det(order, that)
obl(continue, order)
punct(continue, ,)
nsubj(continue, we)
aux(continue, have)
root(ROOT, continue)
xcomp(continue, refer)
obj(refer, worker)
case(ranch, to)
det(ranch, the)
obl(refer, ranch)
punct(continue, . )
det(case, a)
amod(case, similar)
nsubj(arise, case)
root(ROOT, arise)
case(ranch, at)
det(ranch, the)
compound(ranch, Bowers)
obl(arise, ranch)
case(County, in)
compound(County, butte)
nmod(ranch, County)
punct(issue, ,)
cc(issue, and)
det(Court, the)
compound(Court, Superior)
nsubj(issue, Court)
case(county, of)
det(county, that)
nmod(Court, county)
conj(arise, issue)
amod(order, similar)
compound(order, restraining)
obj(issue, order)
punct(arise, .)
det(grower, the)
nsubj(argue, grower)
aux(argue, have)
advmod(argue, strenuously)
root(ROOT, argue)
mark(accept, that)
nsubj(accept, I)
aux(accept, should)
aux(accept, have)
ccomp(argue, accept)
det(decision, the)
compound(Court, Superior)
compound(decision, Court)
obj(accept, decision)
advmod(conclusive, as)
amod(decision, conclusive)
cc(issue, and)
conj(conclusive, issue)
amod(instruction, statewide)
obj(issue, instruction)
case(staff, to)
nmod:poss(staff, we)
nmod(instruction, staff)
mark(ignore, to)
advcl(issue, ignore)
det(provision, this)
obj(ignore, provision)
case(Regulation, in)
det(Secretary, the)
nmod:poss(Regulation, Secretary)
case(Secretary, 's)
obl(ignore, Regulation)
punct(argue, . )
nsubj(accept, I)
aux(accept, can)
advmod(accept, not)
root(ROOT, accept)
det(view, that)
obj(accept, view)
punct(accept, ,)
cc:preconj(lawyer, either)
case(lawyer, as)
det(lawyer, a)
obl(accept, lawyer)
cc(administrator, or)
case(administrator, as)
det(administrator, a)
conj(lawyer, administrator)
punct(accept, .)
amod(consideration, legal)
nsubj(let, consideration)
advmod(consideration, first)
punct(let, ,)
root(ROOT, let)
obj(let, we)
xcomp(let, examine)
advmod(some, briefly)
obj(examine, some)
case(consideration, of)
det(consideration, the)
amod(consideration, legal)
nmod(some, consideration)
acl(consideration, involve)
punct(let, .)
expl(principle, it)
cop(principle, be)
det(principle, a)
amod(principle, accept)
amod(principle, juridical)
root(ROOT, principle)
case(California, in)
nmod(principle, California)
mark(constitute, that)
det(decision, a)
compound(Court, Superior)
compound(decision, Court)
nsubj(constitute, decision)
aux(constitute, do)
advmod(constitute, not)
acl(principle, constitute)
det(precedent, a)
amod(precedent, bind)
amod(precedent, legal)
obj(constitute, precedent)
punct(principle, .)
nsubj(conclusive, it)
cop(conclusive, be)
root(ROOT, conclusive)
punct(conclusive, ,)
mark(appeal, unless)
advcl(conclusive, appeal)
punct(appeal, ,)
advmod(party, only)
case(party, upon)
det(party, the)
amod(party, particular)
obl(appeal, party)
case(action, to)
det(action, the)
amod(action, particular)
nmod(party, action)
nsubj:pass(hear, which)
aux:pass(hear, be)
acl:relcl(action, hear)
punct(conclusive, .)
nsubj(bind, it)
aux(bind, be)
advmod(bind, not)
root(ROOT, bind)
case(Court, upon)
det(Court, another)
compound(Court, Superior)
obl(bind, Court)
punct(Court, ,)
nsubj(rule, which)
aux(rule, could)
acl:relcl(Court, rule)
case(contrary, to)
det(contrary, the)
obl(rule, contrary)
punct(bind, .)
advmod(render, only)
mark(render, when)
det(decision, a)
nsubj:pass(render, decision)
aux:pass(render, be)
advcl(precedent, render)
case(Court, by)
det(Court, the)
compound(Court, District)
obl(render, Court)
case(appeal, of)
nmod(Court, appeal)
punct(Court, ()
cc(Court, or)
punct(Court, ,)
cc(Court, of)
fixed(of, course)
punct(Court, ,)
det(Court, the)
compound(Court, Supreme)
conj(Court, Court)
punct(Court, ))
cop(precedent, be)
det(precedent, a)
compound(precedent, bind)
root(ROOT, precedent)
acl(precedent, establish)
punct(precedent, .)
case(event, in)
det(event, that)
obl(say, event)
punct(say, ,)
nsubj(say, we)
aux(say, can)
advmod(say, correctly)
root(ROOT, say)
mark(receive, that)
nsubj(receive, we)
aux(receive, have)
ccomp(say, receive)
det(interpretation, a)
amod(interpretation, authoritative)
obj(receive, interpretation)
case(matter, of)
det(matter, the)
nmod(interpretation, matter)
punct(one, ,)
cc(one, and)
conj(interpretation, one)
obj(follow, which)
nsubj(follow, we)
aux(follow, can)
acl:relcl(one, follow)
obj(follow, statewide)
case(confidence, with)
obl(follow, confidence)
mark(overthrown, that)
det(policy, the)
nsubj:pass(overthrown, policy)
aux(overthrown, will)
advmod(overthrown, not)
aux:pass(overthrown, be)
ccomp(follow, overthrown)
case(court, in)
amod(court, other)
compound(court, Superior)
obl(overthrown, court)
punct(say, .)
cc(convinced, but)
advmod(convinced, over)
cc(beyond, and)
conj(over, beyond)
det(need, the)
amod(need, compelling)
obl(convinced, need)
case(decision, for)
det(decision, a)
compound(decision, bind)
compound(decision, precedent)
nmod(need, decision)
punct(convinced, ,)
nsubj:pass(convinced, I)
aux:pass(convinced, be)
root(ROOT, convinced)
mark(interpretation, that)
det(decision, the)
nsubj(interpretation, decision)
case(court, of)
det(court, the)
compound(court, Superior)
nmod(decision, court)
nsubj(nullify, which)
case(effect, in)
obl(nullify, effect)
acl:relcl(court, nullify)
det(Secretary, the)
nmod:poss(Regulation, Secretary)
case(Secretary, 's)
obj(nullify, Regulation)
cop(interpretation, be)
advmod(interpretation, not)
det(interpretation, a)
amod(interpretation, correct)
ccomp(convinced, interpretation)
case(power, of)
det(Secretary, the)
nmod:poss(power, Secretary)
case(Secretary, 's)
nmod(interpretation, power)
case(law, under)
det(law, the)
amod(law, federal)
nmod(power, law)
punct(convinced, . )
nsubj(believe, I)
root(ROOT, believe)
nsubj(company, I)
cop(company, be)
case(company, in)
amod(company, good)
ccomp(believe, company)
case(view, in)
det(view, this)
nmod(company, view)
punct(believe, .)
det(Attorney, the)
nsubj(concur, Attorney)
flat(Attorney, General)
case(California, of)
nmod(Attorney, California)
parataxis(believe, concur)
case(interpretation, in)
det(interpretation, this)
obl(concur, interpretation)
cc(file, and)
aux(file, have)
conj(concur, file)
det(appeal, a)
obj(file, appeal)
case(decision, from)
det(decision, these)
nmod(appeal, decision)
case(Court, to)
det(Court, the)
compound(Court, District)
nmod(decision, Court)
case(appeal, of)
nmod(Court, appeal)
punct(decision, .)
det(Attorney, the)
appos(Court, Attorney)
flat(Attorney, General)
case(States, of)
det(States, the)
compound(States, United)
nmod(Attorney, States)
punct(Attorney, ,)
mark(consider, in)
advcl(file, consider)
det(power, the)
obj(consider, power)
case(Secretary, of)
det(Secretary, the)
nmod(power, Secretary)
mark(issue, to)
acl(power, issue)
amod(regulation, similar)
obj(issue, regulation)
case(Act, under)
det(Act, the)
compound(Act, Wagner)
punct(Act, -)
compound(Act, peyser)
nmod(regulation, Act)
acl(Act, relate)
case(recruitment, to)
det(recruitment, the)
amod(recruitment, interstate)
obl(relate, recruitment)
case(worker, of)
compound(worker, farm)
nmod(recruitment, worker)
punct(render, ,)
aux(render, have)
parataxis(believe, render)
det(opinion, a)
obj(render, opinion)
acl(opinion, sustain)
nmod:poss(authority, he)
obj(sustain, authority)
punct(believe, . )
advmod(defeat, further)
punct(defeat, ,)
cc(evidence, and)
case(evidence, as)
det(evidence, a)
obl(defeat, evidence)
case(intent, of)
amod(intent, legislative)
nmod(evidence, intent)
advmod(defeat, only)
punct(defeat, ,)
det(Senate, the)
nsubj(defeat, Senate)
case(States, of)
det(States, the)
compound(States, United)
nmod(Senate, States)
advmod(defeat, recently)
root(ROOT, defeat)
case(majority, by)
det(majority, a)
amod(majority, substantial)
obl(defeat, majority)
det(amendment, the)
punct(amendment, ``)
compound(amendment, Holland)
appos(majority, amendment)
punct(amendment, '')
case(Act, to)
det(Act, the)
compound(Act, fair)
compound(Standards, Labor)
compound(Act, Standards)
nmod(amendment, Act)
punct(Act, ,)
nsubj(limit, which)
aux(limit, would)
aux(limit, have)
advmod(limit, specifically)
acl:relcl(Act, limit)
det(authority, the)
amod(authority, regulatory)
obj(limit, authority)
case(Secretary, of)
det(Secretary, the)
nmod(authority, Secretary)
case(matter, in)
det(matter, these)
obl(limit, matter)
punct(defeat, .)
advmod(let, next)
punct(let, ,)
root(ROOT, let)
obj(let, we)
xcomp(let, consider)
advmod(consider, briefly)
det(program, the)
obj(consider, program)
cc(implication, and)
amod(implication, administrative)
conj(program, implication)
case(failure, of)
det(failure, a)
nmod(implication, failure)
case(part, on)
nmod:poss(part, we)
nmod(failure, part)
mark(pursue, to)
acl(part, pursue)
nmod:poss(appeal, we)
obj(pursue, appeal)
punct(let, .)
expl(be, there)
root(ROOT, be)
advmod(much, far)
advmod(much, too)
nsubj(be, much)
case(stake, at)
obl(much, stake)
case(all, for)
obl(be, all)
case(party, of)
det(party, the)
nmod(all, party)
amod(party, concerned)
mark(leave, to)
advcl(concerned, leave)
det(matter, the)
obj(leave, matter)
acl(matter, hang)
case(midair, in)
obl(hang, midair)
punct(be, .)
det(ramification, the)
nsubj(enormous, ramification)
case(issue, of)
det(issue, the)
nmod(ramification, issue)
cop(enormous, be)
root(ROOT, enormous)
punct(enormous, . )
det(decision, a)
nsubj(have, decision)
mark(refer, to)
acl(decision, refer)
obj(refer, worker)
case(job, to)
obl(refer, job)
amod(job, vacant)
case(strike, because)
fixed(because, of)
det(strike, a)
obl(refer, strike)
aux(have, would)
root(ROOT, have)
mark(apply, to)
aux:pass(apply, be)
xcomp(have, apply)
advmod(apply, equally)
case(situation, to)
amod(situation, nonagricultural)
obl(apply, situation)
punct(place, ,)
cc(place, and)
aux(place, might)
case(effect, in)
obl(place, effect)
conj(have, place)
det(service, the)
amod(service, public)
compound(service, employment)
obj(place, service)
case(position, in)
det(position, the)
obl(place, position)
mark(act, of)
acl(position, act)
case(strikebreaker, as)
obl(act, strikebreaker)
punct(have, .)
det(interest, the)
amod(interest, public)
nsubj(dominant, interest)
cop(dominant, be)
advmod(dominant, so)
root(ROOT, dominant)
case(issue, in)
det:predet(issue, such)
det(issue, a)
obl(dominant, issue)
mark(presumptuous, that)
nsubj(presumptuous, I)
aux(presumptuous, can)
advmod(presumptuous, not)
cop(presumptuous, be)
advmod(presumptuous, so)
acl(issue, presumptuous)
mark(attempt, as)
mark(attempt, to)
advcl(presumptuous, attempt)
mark(settle, to)
xcomp(attempt, settle)
obj(settle, it)
case(order, by)
det(order, a)
amod(order, administrative)
obl(settle, order)
case(conclusion, base)
case(conclusion, upon)
obl(settle, conclusion)
acl(conclusion, reach)
case(action, in)
det(action, a)
compound(action, summary)
obl(reach, action)
case(court, in)
nummod(court, one)
cc(two, or)
conj(one, two)
amod(court, Superior)
nmod(action, court)
case(State, in)
det(State, the)
nmod(court, State)
punct(dominant, .)
nsubj(issue, it)
cop(issue, be)
det(issue, a)
root(ROOT, issue)
nsubj(reach, which)
aux(reach, may)
advmod(reach, well)
acl:relcl(issue, reach)
det(Court, the)
compound(Court, Supreme)
obj(reach, Court)
case(States, of)
det(States, the)
compound(States, United)
nmod(Court, States)
mark(achieve, before)
amod(finality, judicial)
nsubj:pass(achieve, finality)
aux:pass(achieve, be)
advcl(reach, achieve)
punct(issue, .)
case(administrator, as)
det(administrator, a)
obl(place, administrator)
punct(place, ,)
nsubj(place, I)
aux(place, can)
advmod(place, not)
root(ROOT, place)
det(service, the)
compound(service, employment)
obj(place, service)
case(California, in)
nmod(service, California)
case(jeopardy, in)
obl(place, jeopardy)
mark(compliance, of)
cop(compliance, be)
case(compliance, out)
case(compliance, of)
acl(jeopardy, compliance)
case(law, with)
det(law, the)
amod(law, federal)
nmod(compliance, law)
case(failure, by)
nmod:poss(failure, my)
nmod(law, failure)
mark(pursue, to)
acl(failure, pursue)
det(avenue, the)
obj(pursue, avenue)
case(appeal, of)
nmod(avenue, appeal)
amod(avenue, open)
case(I, to)
obl(open, I)
punct(place, .)
mark(apply, to)
aux(apply, have)
advcl(pursue, apply)
obj(apply, statewide)
det(decision, the)
obj(apply, decision)
case(case, of)
det(case, the)
nummod(case, two)
nmod(decision, case)
acl(case, hear)
case(Court, in)
compound(Court, Superior)
obl(hear, Court)
punct(place, ,)
case(opinion, in)
nmod:poss(opinion, my)
obl(place, opinion)
punct(place, ,)
aux(place, would)
aux(place, have)
acl:relcl(decision, place)
obj(place, we)
advmod(place, clearly)
case(compliance, out)
case(compliance, of)
obl(place, compliance)
case(Act, with)
det(Act, the)
compound(Act, Wagner)
punct(Act, -)
compound(Act, peyser)
nmod(compliance, Act)
cc(open, and)
aux(open, would)
aux(open, have)
advmod(open, immediately)
conj(place, open)
det(way, the)
obj(open, way)
case(Secretary, for)
det(Secretary, the)
nmod(way, Secretary)
case(Labor, of)
nmod(Secretary, Labor)
punct(inclined, ,)
cop(inclined, be)
nsubj(inclined, he)
advmod(inclined, so)
parataxis(open, inclined)
punct(inclined, ,)
mark(notify, to)
xcomp(inclined, notify)
det(Governor, the)
obj(notify, Governor)
case(noncompliance, of)
amod(noncompliance, such)
nmod(Governor, noncompliance)
punct(set, ,)
conj(notify, set)
det(date, a)
obj(set, date)
case(hearing, for)
nmod(date, hearing)
punct(issue, ,)
cc(issue, and)
conj(set, issue)
nmod:poss(finding, he)
obj(issue, finding)
punct(place, .)
det(impact, the)
nsubj(clear, impact)
case(noncompliance, of)
nmod(impact, noncompliance)
case(Act, under)
det(Act, the)
compound(Act, Wagner)
punct(peyser, -)
compound(Act, peyser)
nmod(noncompliance, Act)
cop(clear, be)
root(ROOT, clear)
punct(clear, :)
det(withdrawal, the)
nsubj(clear, withdrawal)
case($, of)
det($, some)
nmod(withdrawal, $)
compound(million, 11)
nummod($, million)
det(year, a)
appos(withdrawal, year)
case(fund, of)
amod(fund, administrative)
nmod(year, fund)
nsubj(finance, which)
acl:relcl(fund, finance)
nmod:poss(program, we)
compound(service, employment)
compound(program, service)
obj(finance, program)
cc(taking, or)
punct(taking, ,)
case(corollary, as)
det(corollary, a)
obl(taking, corollary)
punct(taking, ,)
det(taking, the)
conj(finance, taking)
advmod(taking, over)
case(government, by)
det(government, the)
amod(government, federal)
nmod(taking, government)
case(operation, of)
nmod:poss(operation, its)
nmod(government, operation)
punct(clear, .)
advmod(far, thus)
advmod(arise, far)
punct(arise, ,)
det(case, the)
nsubj(arise, case)
nsubj(come, which)
aux(come, have)
acl:relcl(case, come)
mark(involve, before)
det(court, the)
nsubj(involve, court)
aux(involve, have)
advcl(come, involve)
advmod(issue, only)
det(issue, the)
obj(involve, issue)
case(referral, of)
nmod(issue, referral)
advmod(vacant, where)
det(job, the)
nsubj(vacant, job)
cop(vacant, be)
acl:relcl(issue, vacant)
case(strike, due)
fixed(due, to)
det(strike, a)
obl(vacant, strike)
punct(strike, --)
appos(strike, condition)
punct(1, ()
nummod(condition, 1)
punct(1, ))
case(Regulation, in)
det(Regulation, the)
nmod(condition, Regulation)
case(Secretary, of)
det(Secretary, the)
nmod(Regulation, Secretary)
punct(arise, .)
nsubj(arise, none)
aux(arise, have)
advmod(arise, yet)
root(ROOT, arise)
case(condition, under)
obl(arise, condition)
punct(2, ()
appos(condition, 2)
punct(2, ))
punct(condition, ,)
advcl(arise, relate)
case(referral, to)
obl(relate, referral)
case(job, to)
obl(relate, job)
punct(fill, ``)
det(fill, the)
appos(job, fill)
case(which, of)
nmod(issue, which)
cop(issue, be)
det(issue, a)
acl:relcl(fill, issue)
case(dispute, in)
det(dispute, a)
compound(dispute, labor)
nmod(issue, dispute)
punct(issue, '')
punct(here, .)
advmod(issue, here)
det(problem, the)
nsubj(one, problem)
cop(one, be)
advmod(one, essentially)
parataxis(here, one)
mark(define, of)
acl(one, define)
det(word, the)
obj(define, word)
punct(fill, ``)
appos(word, fill)
punct(fill, '')
punct(define, .)
aux(define, should)
nsubj:pass(define, it)
aux:pass(define, be)
parataxis(one, define)
case(sense, in)
det(sense, a)
amod(sense, narrow)
obl(define, sense)
mark(include, to)
acl(sense, include)
advmod(element, only)
amod(element, such)
obj(include, element)
case(specification, as)
compound(specification, job)
nmod(element, specification)
punct(membership, ,)
compound(membership, union)
conj(specification, membership)
punct(union, ,)
compound(jurisdiction, union)
conj(specification, jurisdiction)
punct(like, ,)
cc(like, and)
det(like, the)
conj(specification, like)
punct(define, ?)
punct(define, ?)
cc(have, or)
aux(have, should)
nsubj(have, it)
root(ROOT, have)
det(connotation, a)
amod(connotation, broader)
obj(have, connotation)
mark(include, of)
case(demand, include)
compound(demand, wage)
nmod(connotation, demand)
cc(factor, and)
amod(factor, other)
conj(demand, factor)
advmod(associate, not)
advmod(associate, necessarily)
acl(demand, associate)
case(mechanic, with)
det(mechanic, the)
obl(associate, mechanic)
mark(fill, of)
punct(fill, ``)
acl(mechanic, fill)
punct(fill, '')
det(job, the)
obj(fill, job)
punct(have, .)
case(uncertainty, because)
fixed(because, of)
det(uncertainty, the)
obl(solicited, uncertainty)
case(definition, of)
det(definition, this)
nmod(uncertainty, definition)
punct(solicited, ,)
nsubj(solicited, I)
root(ROOT, solicited)
det(interpretation, the)
obj(solicited, interpretation)
case(Secretary, of)
det(Secretary, the)
nmod(interpretation, Secretary)
case(Labor, of)
nmod(Secretary, Labor)
punct(solicited, .)
nsubj(advise, he)
aux(advise, have)
root(ROOT, advise)
obj(advise, I)
mark(one, that)
det(interpretation, the)
amod(interpretation, narrower)
nsubj(one, interpretation)
cop(one, be)
det(one, the)
amod(one, proper)
ccomp(advise, one)
punct(advise, ;)
punct(advise, ;)
nsubj(be, that)
parataxis(advise, be)
punct(be, ,)
mark(issue, that)
mark(issue, if)
nsubj(issue, wage)
punct(issue, ,)
case(example, for)
obl(issue, example)
punct(issue, ,)
cop(issue, be)
det(issue, the)
amod(issue, only)
ccomp(be, issue)
case(dispute, in)
det(dispute, a)
compound(dispute, labor)
nmod(issue, dispute)
punct(leave, ,)
cc(leave, and)
det(worker, no)
nsubj(leave, worker)
aux(leave, have)
conj(issue, leave)
nmod:poss(job, they)
obj(leave, job)
case(dispute, because)
fixed(because, of)
det(dispute, the)
obl(leave, dispute)
punct(continue, ,)
nsubj(continue, we)
aux(continue, may)
parataxis(leave, continue)
mark(make, to)
xcomp(continue, make)
obj(make, referral)
punct(advise, . )
nummod(., 9)
punct(evidence, .)
nsubj(evidence, Martin)
cc(Stendler, and)
conj(Martin, Stendler)
amod(evidence, present)
root(ROOT, evidence)
mark(can, that)
nsubj(can, infant)
cc(child, and)
amod(child, young)
conj(infant, child)
aux(solve, can)
cc(solve, and)
aux(solve, do)
conj(evidence, solve)
amod(problem, many)
obj(solve, problem)
case(level, at)
det(level, a)
advmod(simple, relatively)
amod(level, simple)
amod(level, perceptual)
nmod(problem, level)
advmod(combine, simply)
mark(combine, by)
advcl(solve, combine)
obj(combine, object)
cc(count, and)
conj(combine, count)
obj(count, they)
punct(evidence, .)
mark(develop, after)
nsubj(develop, they)
aux(develop, have)
advcl(free, develop)
obj(develop, concept)
punct(free, ,)
nsubj(free, they)
cop(free, be)
root(ROOT, free)
case(necessity, from)
det(necessity, the)
obl(free, necessity)
mark(manipulate, of)
acl(necessity, manipulate)
obj(manipulate, object)
punct(free, ;)
punct(free, ;)
nsubj(do, they)
parataxis(free, do)
advmod(do, symbolically)
obj(have, what)
nsubj(have, they)
advmod(have, once)
ccomp(do, have)
mark(do, to)
xcomp(have, do)
advmod(do, concretely)
punct(free, .)
det(ability, the)
nsubj(seem, ability)
mark(think, to)
acl(ability, think)
root(ROOT, seem)
mark(increase, to)
xcomp(seem, increase)
advmod(increase, consistently)
case(age, with)
obl(increase, age)
punct(seem, .)
nummod(experiment, one)
nsubj(show, experiment)
root(ROOT, show)
det(difference, the)
amod(difference, greatest)
nummod(year, one)
punct(year, -)
compound(difference, year)
obj(show, difference)
acl(difference, occur)
case(year, between)
det(year, the)
amod(year, eleventh)
cc(twelfth, and)
conj(eleventh, twelfth)
obl(occur, year)
punct(show, .)
nummod(indicate, 10)
punct(10, .)
amod(study, many)
nsubj(indicate, study)
root(ROOT, indicate)
mark(cover, that)
amod(school, elementary)
punct(school, -)
compound(child, school)
nmod:poss(interest, child)
case(child, 's)
nsubj(cover, interest)
ccomp(indicate, cover)
det(field, the)
amod(field, whole)
obj(cover, field)
case(science, of)
nmod(field, science)
punct(indicate, ;)
punct(indicate, ;)
mark(indicate, that)
nmod:poss(question, they)
nsubj(indicate, question)
parataxis(cover, indicate)
det(interest, a)
amod(interest, genuine)
obj(indicate, interest)
case(process, in)
amod(process, social)
nmod(interest, process)
cc(event, and)
conj(process, event)
punct(indicate, ;)
punct(indicate, ;)
cc(change, and)
mark(mature, that)
mark(mature, as)
nsubj(mature, they)
advcl(indicate, mature)
nmod:poss(interest, they)
obj(mature, interest)
cc(capability, and)
conj(interest, capability)
conj(mature, change)
cc(broaden, and)
conj(change, broaden)
punct(indicate, .)
amod(characteristic, Emotional)
root(ROOT, characteristic)
advmod(feel, how)
det(child, a)
nsubj(feel, child)
acl:relcl(characteristic, feel)
case(himself, about)
obl(feel, himself)
punct(feel, ,)
case(people, about)
amod(people, other)
obl(feel, people)
punct(have, ,)
cc(have, and)
case(task, about)
det(task, the)
obl(have, task)
acl(task, confront)
obj(confront, he)
case(school, in)
obl(confront, school)
aux(have, may)
conj(characteristic, have)
advmod(much, as)
amod(influence, much)
obj(have, influence)
case(success, on)
nmod:poss(success, he)
nmod(influence, success)
case(school, in)
nmod(success, school)
case(characteristic, as)
nmod:poss(characteristic, he)
amod(characteristic, physical)
cc(intellectual, and)
conj(physical, intellectual)
nmod(success, characteristic)
punct(characteristic, . )
det(amount, a)
amod(amount, considerable)
nsubj(exist, amount)
case(evidence, of)
nmod(amount, evidence)
root(ROOT, exist)
mark(show, to)
xcomp(exist, show)
mark(likely, that)
det(child, a)
amod(child, unhappy)
cc(insecure, and)
conj(unhappy, insecure)
nsubj(likely, child)
cop(likely, be)
advmod(likely, not)
ccomp(show, likely)
mark(do, to)
xcomp(likely, do)
advmod(do, well)
case(subject, in)
compound(subject, school)
obl(do, subject)
punct(exist, .)
amod(maturity, Emotional)
nsubj(result, maturity)
cop(result, be)
det(result, the)
root(ROOT, result)
case(factor, of)
amod(factor, many)
nmod(result, factor)
punct(result, ,)
det(one, the)
amod(one, principal)
appos(factor, one)
cop(experience, be)
det(experience, the)
acl(one, experience)
case(year, of)
det(year, the)
amod(year, first)
amod(year, few)
nmod(experience, year)
case(life, of)
det(child, the)
nmod:poss(life, child)
case(child, 's)
nmod(year, life)
punct(result, .)
advmod(influential, however)
punct(influential, ,)
det(teacher, the)
nsubj(influential, teacher)
nsubj(understand, who)
acl:relcl(teacher, understand)
det(influence, the)
obj(understand, influence)
case(emotion, of)
nmod(influence, emotion)
case(behavior, on)
nmod(emotion, behavior)
aux(influential, may)
cop(influential, be)
advmod(influential, highly)
root(ROOT, influential)
mark(help, in)
advcl(influential, help)
obj(help, pupil)
xcomp(help, gain)
obj(gain, confidence)
punct(security, ,)
conj(confidence, security)
punct(satisfaction, ,)
cc(satisfaction, and)
conj(confidence, satisfaction)
punct(influential, .)
case(responsibility, concern)
det(responsibility, this)
obl(present, responsibility)
case(teacher, of)
det(teacher, the)
nmod(responsibility, teacher)
punct(present, ,)
nsubj:pass(present, suggestion)
mark(help, for)
acl(suggestion, help)
obj(help, child)
xcomp(help, gain)
amod(control, better)
obj(gain, control)
case(emotion, of)
det(emotion, the)
nmod(control, emotion)
aux:pass(present, be)
root(ROOT, present)
case(Chapter, in)
obl(present, Chapter)
nummod(Chapter, 11)
punct(present, .)
det(generalization, the)
amod(generalization, follow)
nsubj(helpful, generalization)
case(characteristic, about)
det(characteristic, the)
amod(characteristic, emotional)
nmod(generalization, characteristic)
case(child, of)
amod(school, elementary)
punct(school, -)
compound(child, school)
nmod(characteristic, child)
aux(helpful, may)
cop(helpful, be)
root(ROOT, helpful)
punct(helpful, . )
nummod(last, 1)
punct(1, .)
advmod(last, typically)
punct(last, ,)
det(child, the)
amod(child, young)
nmod:poss(reaction, child)
case(child, 's)
amod(reaction, emotional)
nsubj(last, reaction)
root(ROOT, last)
case(time, for)
det(time, a)
advmod(short, relatively)
amod(time, short)
obl(last, time)
punct(last, ,)
mark(contrast, as)
advcl(last, contrast)
case(those, to)
obl(contrast, those)
case(adult, of)
det(adult, a)
nmod(those, adult)
punct(last, . )
nummod(lead, 2)
punct(2, .)
mark(grow, as)
det(child, the)
nsubj(grow, child)
advcl(lead, grow)
xcomp(grow, older)
punct(lead, ,)
nmod:poss(reaction, he)
amod(reaction, emotional)
nsubj(lead, reaction)
root(ROOT, lead)
case(mood, to)
punct(mood, ``)
obl(lead, mood)
punct(mood, '')
punct(state, ,)
cc(state, or)
amod(state, emotional)
conj(mood, state)
acl(state, draw)
compound:prt(draw, out)
case(period, over)
det(period, a)
obl(draw, period)
case(time, of)
nmod(period, time)
cc(express, and)
conj(draw, express)
advmod(express, slowly)
punct(outburst, ,)
cc(outburst, rather)
fixed(rather, than)
fixed(rather, in)
amod(outburst, short)
punct(outburst, ,)
amod(outburst, abrupt)
obl(express, outburst)
punct(lead, . )
nummod(indicate, 3)
punct(3, .)
nsubj(indicate, Studies)
case(growth, of)
det(growth, the)
nmod(Studies, growth)
cc(decline, and)
conj(growth, decline)
case(fear, of)
nmod:poss(fear, child)
case(child, 's)
nmod(decline, fear)
root(ROOT, indicate)
mark(object, that)
obj(indicate, fear)
case(object, due)
fixed(due, to)
amod(object, strange)
nmod(fear, object)
punct(noise, ,)
conj(object, noise)
punct(fall, ,)
conj(object, fall)
punct(decline, ,)
cc(decline, and)
amod(decline, unexpected)
compound(decline, movement)
conj(object, decline)
case(year, during)
det(year, the)
amod(year, preschool)
nmod(decline, year)
punct(fear, ,)
cc(fear, but)
mark(alone, that)
conj(decline, fear)
case(dark, of)
det(dark, the)
nmod(fear, dark)
punct(alone, ,)
mark(alone, of)
cop(alone, be)
conj(dark, alone)
punct(creature, ,)
cc(creature, and)
case(creature, of)
amod(creature, imaginary)
conj(alone, creature)
cc(increase, or)
compound(increase, robber)
conj(creature, increase)
punct(indicate, . )
nummod(Ridiculing, 4)
punct(4, .)
advcl(be, Ridiculing)
det(child, a)
obj(Ridiculing, child)
mark(afraid, for)
cop(afraid, be)
advcl(Ridiculing, afraid)
cc(force, or)
conj(afraid, force)
obj(force, he)
mark(meet, to)
xcomp(force, meet)
det(situation, the)
amod(situation, fear)
obj(meet, situation)
advmod(be, alone)
root(ROOT, be)
amod(way, poor)
nsubj(be, way)
mark(deal, of)
acl(way, deal)
case(problem, with)
det(problem, the)
obl(deal, problem)
punct(be, ;)
punct(be, ;)
advmod(effective, more)
amod(solution, effective)
nsubj(include, solution)
parataxis(be, include)
obj(include, explanation)
punct(example, ,)
det(example, the)
conj(explanation, example)
case(child, of)
det(child, another)
nmod(example, child)
punct(conditioning, ,)
cc(conditioning, or)
conj(explanation, conditioning)
mark(associate, by)
acl(conditioning, associate)
det(object, the)
amod(object, fear)
obj(associate, object)
punct(place, ,)
conj(object, place)
punct(person, ,)
cc(person, or)
conj(object, person)
case(something, with)
nmod(object, something)
amod(something, pleasant)
punct(be, . )
nummod(need, 5)
punct(need, .)
nsubj(need, Children)
root(ROOT, need)
obj(need, help)
mark(learn, in)
acl(help, learn)
mark(control, to)
xcomp(learn, control)
nmod:poss(emotion, they)
obj(control, emotion)
punct(need, .)
det(child, the)
amod(child, young)
nsubj(learn, child)
root(ROOT, learn)
case(parent, from)
obl(learn, parent)
cc(teacher, and)
conj(parent, teacher)
nsubj(temper, that)
acl:relcl(parent, temper)
obj(temper, tantrum)
punct(scream, ,)
conj(temper, scream)
punct(kick, ,)
conj(temper, kick)
punct(get, ,)
cc(get, and)
nsubj(get, hit)
aux(get, will)
advmod(get, not)
conj(learn, get)
iobj(get, he)
obj(get, what)
nsubj(want, he)
acl:relcl(what, want)
punct(learn, ;)
punct(learn, ;)
det(child, the)
amod(child, older)
nsubj(learn, child)
parataxis(learn, learn)
mark(win, that)
amod(outburst, intense)
amod(outburst, emotional)
nsubj(win, outburst)
aux(win, will)
advmod(win, not)
ccomp(learn, win)
obj(win, approval)
case(peer, by)
nmod:poss(peer, he)
obl(win, peer)
punct(make, ,)
cc(make, and)
punct(make, ,)
advmod(make, therefore)
punct(make, ,)
conj(win, make)
det(effort, a)
amod(effort, real)
obj(make, effort)
mark(control, to)
acl(effort, control)
nmod:poss(emotion, he)
obj(control, emotion)
punct(learn, . )
nummod(differ, 6)
punct(6, .)
nsubj(differ, Children)
root(ROOT, differ)
advmod(differ, widely)
case(response, in)
nmod:poss(response, they)
amod(response, emotional)
obl(differ, response)
punct(differ, .)
case(infant, among)
obl(similar, infant)
det(pattern, the)
nsubj(similar, pattern)
case(response, of)
amod(response, emotional)
nmod(pattern, response)
cop(similar, be)
root(ROOT, similar)
punct(similar, ;)
punct(similar, ;)
mark(feel, as)
det(influence, the)
nsubj:pass(feel, influence)
case(learning, of)
nmod(influence, learning)
cc(environment, and)
conj(learning, environment)
aux:pass(feel, be)
advcl(become, feel)
punct(become, ,)
amod(behavior, emotional)
nsubj(become, behavior)
parataxis(similar, become)
xcomp(become, individualize)
punct(similar, .)
amod(characteristic, social)
root(ROOT, characteristic)
mark(exist, although)
det(norm, no)
amod(norm, national)
nsubj(exist, norm)
advcl(find, exist)
case(development, for)
det(development, the)
amod(development, social)
obl(exist, development)
case(child, of)
nmod(development, child)
punct(find, ,)
det(teacher, the)
nsubj(find, teacher)
aux(find, can)
parataxis(characteristic, find)
det(deal, a)
amod(deal, great)
obj(find, deal)
case(information, of)
nmod(deal, information)
case(type, concern)
nmod(information, type)
case(behavior, of)
amod(behavior, social)
nmod(type, behavior)
advmod(display, normally)
acl(type, display)
case(child, by)
obl(display, child)
case(level, at)
amod(level, various)
compound(level, age)
obl(display, level)
punct(characteristic, .)
det(summary, the)
amod(summary, follow)
nsubj(give, summary)
aux(give, will)
root(ROOT, give)
det(student, the)
iobj(give, student)
det(idea, some)
obj(give, idea)
case(characteristic, about)
det(characteristic, the)
amod(characteristic, social)
nmod(idea, characteristic)
case(child, of)
amod(school, elementary)
punct(school, -)
compound(child, school)
nmod(characteristic, child)
punct(give, ;)
punct(give, ;)
det(student, the)
nsubj(want, student)
aux(want, will)
advmod(want, certainly)
parataxis(give, want)
mark(explore, to)
xcomp(want, explore)
advmod(deeply, more)
advmod(explore, deeply)
case(study, into)
det(study, the)
amod(study, fascinating)
obl(explore, study)
case(individual, of)
amod(individual, immature)
nmod(study, individual)
punct(explore, ,)
advcl(explore, struggle)
mark(meet, to)
xcomp(struggle, meet)
nmod:poss(need, they)
amod(need, developmental)
obj(meet, need)
punct(time, ,)
cc(time, and)
case(time, at)
det(time, the)
amod(time, same)
conj(struggle, time)
acl(time, try)
mark(learn, to)
xcomp(try, learn)
det(rule, the)
obj(learn, rule)
case(game, of)
det(game, the)
nmod(rule, game)
case(number, in)
det(number, the)
advmod(expand, ever)
punct(expand, -)
amod(number, expand)
obl(learn, number)
case(group, of)
nmod(number, group)
case(which, in)
obl(hold, which)
nsubj(hold, they)
acl:relcl(group, hold)
obj(hold, membership)
punct(give, . )
nummod(interested, 1)
punct(1, .)
case(childhood, during)
amod(childhood, early)
obl(interested, childhood)
punct(interested, ,)
nsubj(interested, child)
cop(interested, be)
advmod(interested, more)
root(ROOT, interested)
case(approval, in)
det(approval, the)
obl(interested, approval)
case(parent, of)
nmod:poss(parent, they)
nmod(approval, parent)
cc(teacher, and)
conj(parent, teacher)
mark(approval, than)
nsubj(approval, they)
cop(approval, be)
case(approval, in)
det(approval, the)
advcl(interested, approval)
case(child, of)
amod(child, other)
nmod(approval, child)
punct(interested, ;)
punct(interested, ;)
mark(school, after)
nsubj(school, they)
aux(school, have)
cop(school, be)
case(school, in)
advcl(increase, school)
det(year, a)
amod(year, few)
obl:tmod(school, year)
punct(increase, ,)
nmod:poss(interest, they)
nsubj(increase, interest)
case(playmate, in)
nmod(interest, playmate)
case(age, of)
nmod:poss(age, they)
amod(age, own)
nmod(playmate, age)
parataxis(interested, increase)
punct(decrease, ,)
cc(decrease, and)
nmod:poss(interest, they)
nsubj(decrease, interest)
case(adult, in)
nmod(interest, adult)
conj(increase, decrease)
punct(increase, ;)
punct(increase, ;)
det(child, the)
nsubj(increase, child)
nsubj(consider, who)
aux(consider, have)
advmod(consider, once)
acl:relcl(child, consider)
obj(consider, it)
det(treat, a)
xcomp(consider, treat)
mark(accompany, to)
acl(treat, accompany)
nmod:poss(parent, he)
obj(accompany, parent)
case(picnic, on)
obl(accompany, picnic)
cc(gathering, and)
compound(gathering, family)
conj(picnic, gathering)
advmod(consider, now)
acl:relcl(treat, consider)
obj(consider, it)
det(bore, a)
xcomp(consider, bore)
punct(interested, .)
case(childhood, in)
amod(childhood, late)
obl(continue, childhood)
det(influence, the)
nsubj(continue, influence)
case(group, of)
det(group, the)
nmod(influence, group)
case(behavior, on)
det(behavior, the)
amod(behavior, social)
nmod(influence, behavior)
case(child, of)
det(child, the)
nmod(behavior, child)
root(ROOT, continue)
mark(increase, to)
xcomp(continue, increase)
punct(continue, ;)
punct(continue, ;)
det(group, the)
nsubj(set, group)
parataxis(continue, set)
det(style, the)
obj(set, style)
case(clothing, in)
nmod(style, clothing)
punct(kind, ,)
det(kind, the)
conj(clothing, kind)
case(play, of)
nmod(kind, play)
acl(kind, engage)
obl(engage, in)
punct(ideal, ,)
cc(ideal, and)
det(ideal, the)
conj(clothing, ideal)
case(behavior, of)
amod(behavior, right)
cc(wrong, and)
conj(right, wrong)
nmod(ideal, behavior)
punct(continue, . )
nummod(likely, 2)
punct(2, .)
case(childhood, in)
amod(childhood, early)
obl(likely, childhood)
det(choice, the)
nsubj(likely, choice)
case(companion, of)
det(companion, a)
nmod(choice, companion)
cop(likely, be)
root(ROOT, likely)
mark(child, to)
cop(child, be)
case(child, for)
det(child, another)
xcomp(likely, child)
case(age, of)
nmod:poss(age, he)
amod(age, own)
nmod(child, age)
cc(year, or)
det(year, a)
conj(age, year)
cc(older, or)
nummod(year, two)
amod(year, older)
punct(do, ,)
nsubj(do, who)
aux(do, can)
acl:relcl(older, do)
det(thing, the)
obj(do, thing)
nsubj(like, he)
acl:relcl(thing, like)
mark(do, to)
xcomp(like, do)
punct(factor, ;)
punct(factor, ;)
amod(factor, such)
appos(thing, factor)
case(sex, as)
nmod(factor, sex)
punct(intelligence, ,)
conj(sex, intelligence)
punct(status, ,)
cc(status, and)
conj(sex, status)
case(group, in)
det(group, the)
nmod(status, group)
aux(influence, do)
advmod(influence, not)
parataxis(factor, influence)
nmod:poss(choice, he)
obj(influence, choice)
advmod(influence, much)
case(time, at)
det(time, this)
obl(influence, time)
punct(likely, . )
nummod(replace, 3)
punct(3, .)
case(childhood, in)
amod(childhood, later)
obl(replace, childhood)
punct(replace, ,)
det(interest, a)
nsubj(replace, interest)
case(game, in)
compound(game, team)
nmod(interest, game)
root(ROOT, replace)
amod(play, individual)
obj(replace, play)
punct(replace, ;)
punct(replace, ;)
parataxis(replace, loyalty)
case(group, to)
det(group, the)
nmod(loyalty, group)
punct(feeling, ,)
det(feeling, a)
conj(loyalty, feeling)
case(superiority, of)
nmod(feeling, superiority)
case(those, over)
nmod(superiority, those)
nsubj(member, who)
cop(member, be)
advmod(member, not)
acl:relcl(those, member)
punct(unwillingness, ,)
cc(unwillingness, and)
conj(member, unwillingness)
mark(play, to)
acl(unwillingness, play)
case(member, with)
obl(play, member)
case(sex, of)
det(sex, the)
amod(sex, opposite)
nmod(member, sex)
acl:relcl(member, become)
amod(trait, dominant)
xcomp(become, trait)
punct(trait, . )
nummod(trait, 4)
punct(4, .)
case(childhood, during)
amod(childhood, early)
obl(tease, childhood)
nsubj(tease, boy)
acl:relcl(trait, tease)
cc(bully, and)
conj(tease, bully)
punct(tease, ,)
case(average, on)
det(average, the)
obl(bully, average)
punct(more, ,)
advmod(average, more)
case(girl, than)
obl(more, girl)
punct(more, ;)
punct(more, ;)
nsubj(more, those)
nsubj(feel, who)
acl:relcl(those, feel)
xcomp(feel, inferior)
cc(insecure, or)
conj(inferior, insecure)
conj(feel, engage)
case(activity, in)
det(activity, these)
obl(engage, activity)
advmod(engage, more)
mark(do, than)
advcl(more, do)
advmod(adjust, well)
punct(adjust, -)
amod(child, adjust)
obj(do, child)
punct(5, . )
appos(child, 5)
punct(child, .)
case(childhood, during)
amod(childhood, late)
obl(like, childhood)
nsubj(like, boy)
acl:relcl(child, like)
mark(tease, to)
xcomp(like, tease)
punct(jostle, ,)
conj(tease, jostle)
punct(talk, ,)
cc(talk, and)
conj(tease, talk)
xcomp(talk, smart)
case(girl, to)
obl(smart, girl)
punct(tease, ;)
punct(tease, ;)
nsubj(smart, girl)
punct(girl, ,)
nsubj(mature, who)
cop(mature, be)
advmod(mature, more)
acl:relcl(girl, mature)
case(boy, than)
obl(mature, boy)
punct(frow, ,)
conj(mature, frow)
case(antic, upon)
det(antic, the)
amod(antic, youthful)
obl(frow, antic)
case(boy, of)
nmod(antic, boy)
case(age, of)
nmod:poss(age, they)
amod(age, own)
nmod(boy, age)
punct(replace, . )
nummod(reach, 6)
punct(6, .)
case(time, by)
det(time, the)
obl(reach, time)
nsubj(reach, pupil)
advcl(develop, reach)
det(grade, the)
amod(grade, sixth)
obj(reach, grade)
punct(develop, ,)
nmod:poss(standard, they)
amod(standard, ethical)
cc(moral, and)
conj(ethical, moral)
nsubj:pass(develop, standard)
aux:pass(develop, be)
advmod(well, fairly)
advmod(develop, well)
root(ROOT, develop)
punct(develop, ;)
punct(develop, ;)
nsubj(exhibit, they)
parataxis(develop, exhibit)
det(interest, a)
amod(interest, keen)
obj(exhibit, interest)
case(problem, in)
amod(problem, social)
punct(political, ,)
conj(social, political)
punct(economic, ,)
cc(economic, and)
conj(social, economic)
nmod(interest, problem)
punct(have, ,)
cc(have, but)
nsubj(have, they)
advmod(have, frequently)
conj(exhibit, have)
amod(notion, vague)
cc(incorrect, and)
conj(vague, incorrect)
obj(have, notion)
case(term, about)
det(term, the)
nmod(notion, term)
nsubj(use, they)
acl:relcl(term, use)
cc(work, rather)
fixed(rather, glibly)
case(work, in)
nmod:poss(work, they)
compound(school, routine)
compound(work, school)
obl(use, work)
punct(develop, . )
nummod(noticeable, 7)
punct(7, .)
case(age, between)
det(age, the)
obl(noticeable, age)
case(year, of)
nummod(year, two)
cc(four, and)
conj(two, four)
nmod(age, year)
punct(noticeable, ,)
nsubj(noticeable, negativism)
cc(resistance, or)
conj(negativism, resistance)
case(authority, to)
amod(authority, adult)
nmod(negativism, authority)
cop(noticeable, be)
root(ROOT, noticeable)
punct(noticeable, ;)
punct(noticeable, ;)
case(year, after)
det(year, the)
amod(year, fourth)
obl(begin, year)
nsubj(begin, it)
parataxis(noticeable, begin)
mark(decline, to)
xcomp(begin, decline)
punct(noticeable, .)
advmod(begin, however)
punct(begin, ,)
mark(see, as)
nsubj(see, we)
aux(see, have)
advcl(begin, see)
punct(begin, ,)
case(childhood, in)
amod(childhood, later)
obl(begin, childhood)
det(child, the)
nsubj(begin, child)
root(ROOT, begin)
mark(substitute, to)
xcomp(begin, substitute)
det(standard, the)
obj(substitute, standard)
case(group, of)
det(group, the)
compound(group, peer)
nmod(standard, group)
case(those, for)
obl(substitute, those)
case(parent, of)
nmod(those, parent)
cc(teacher, and)
conj(parent, teacher)
punct(grow, . )
nummod(grow, 8)
punct(8, .)
det(child, the)
amod(school, elementary)
punct(school, -)
compound(child, school)
nsubj(grow, child)
parataxis(begin, grow)
advmod(grow, gradually)
case(ability, in)
nmod:poss(ability, he)
obl(grow, ability)
mark(work, to)
acl(ability, work)
case(group, in)
obl(work, group)
punct(begin, .)
det(child, the)
nsubj(play, child)
case(grade, in)
det(grade, the)
amod(grade, primary)
nmod(child, grade)
aux(play, can)
root(ROOT, play)
advmod(play, harmoniously)
case(companion, with)
nummod(companion, one)
obl(play, companion)
punct(get, ,)
cc(get, but)
nmod:poss(desire, he)
nsubj(get, desire)
mark(everything, to)
cop(everything, be)
advmod(everything, first)
case(everything, in)
nmod(desire, everything)
conj(play, get)
obj(get, he)
case(trouble, into)
obl(get, trouble)
mark(larger, when)
det(group, the)
nsubj(larger, group)
aux(larger, get)
advcl(get, larger)
punct(play, ;)
punct(play, ;)
nsubj(want, he)
parataxis(play, want)
mark(people, to)
cop(people, be)
case(people, with)
xcomp(want, people)
punct(learn, ,)
cc(learn, but)
nsubj(learn, he)
aux(learn, have)
advmod(learn, not)
advmod(learn, yet)
conj(want, learn)
mark(cooperate, to)
xcomp(learn, cooperate)
punct(play, .)
case(grade, in)
det(grade, the)
amod(grade, middle)
obl(begin, grade)
punct(begin, ,)
advmod(begin, however)
punct(begin, ,)
nsubj(begin, he)
root(ROOT, begin)
mark(participate, to)
xcomp(begin, participate)
advmod(effectively, more)
advmod(participate, effectively)
case(activity, in)
compound(activity, group)
obl(participate, activity)
mark(select, such)
fixed(such, as)
advcl(participate, select)
det(leader, a)
obj(select, leader)
punct(participate, ,)
conj(select, help)
mark(make, to)
xcomp(help, make)
obj(make, plan)
cc(carry, and)
conj(make, carry)
compound:prt(carry, on)
compound(activity, group)
obj(carry, activity)
punct(set, ,)
cc(set, and)
conj(carry, set)
compound:prt(set, up)
obj(set, rule)
acl(rule, govern)
det(enterprise, the)
obj(govern, enterprise)
punct(begin, .)
advmod(study, why)
det(teacher, the)
nsubj(study, teacher)
aux(study, should)
advcl(find, study)
det(pupil, the)
amod(pupil, individual)
obj(study, pupil)
amod(progress, much)
nsubj:pass(make, progress)
aux(make, have)
aux:pass(make, be)
ccomp(study, make)
case(decade, in)
det(decade, the)
amod(decade, last)
nummod(decade, two)
obl(make, decade)
mark(develop, in)
acl(decade, develop)
obj(develop, technique)
case(child, for)
amod(child, understanding)
nmod(technique, child)
punct(find, ,)
advmod(find, yet)
case(classroom, in)
advmod(classroom, almost)
det(classroom, any)
obl(find, classroom)
obl:tmod(find, today)
aux(find, can)
aux:pass(find, be)
root(ROOT, find)
obj(find, child)
nmod:poss(need, whose)
nsubj:pass(meet, need)
aux(meet, be)
advmod(meet, not)
aux:pass(meet, be)
acl:relcl(child, meet)
case(program, by)
det(program, the)
compound(program, school)
obl(meet, program)
punct(find, .)
nsubj(fail, some)
aux(fail, be)
root(ROOT, fail)
mark(achieve, to)
xcomp(fail, achieve)
advmod(much, as)
obj(achieve, much)
mark(permit, as)
nmod:poss(ability, they)
nsubj(permit, ability)
aux(permit, would)
advcl(as, permit)
punct(fail, ;)
punct(fail, ;)
nsubj(seem, other)
advmod(seem, never)
parataxis(fail, seem)
xcomp(seem, able)
mark(enter, to)
xcomp(able, enter)
advmod(enter, fully)
case(life, into)
det(life, the)
obl(enter, life)
case(classroom, of)
det(classroom, the)
nmod(life, classroom)
punct(fail, .)
det(child, these)
nsubj:pass(describe, child)
aux(describe, have)
aux:pass(describe, be)
root(ROOT, describe)
case(those, as)
obl(describe, those)
nsubj(try, who)
aux(try, be)
acl:relcl(those, try)
mark(say, to)
xcomp(try, say)
obj(say, something)
case(adult, to)
nmod(something, adult)
nsubj(understand, who)
aux(understand, do)
advmod(understand, not)
acl:relcl(adult, understand)
punct(describe, .)
amod(system, many)
compound(system, school)
nsubj(employ, system)
advmod(employ, now)
root(ROOT, employ)
compound(psychologist, school)
obj(employ, psychologist)
cc(specialist, and)
compound(guidance, child)
compound(specialist, guidance)
conj(psychologist, specialist)
punct(employ, .)
det(specialist, these)
nsubj(perform, specialist)
root(ROOT, perform)
amod(service, valuable)
obj(perform, service)
mark(help, by)
advcl(perform, help)
obj(help, teacher)
xcomp(help, learn)
mark(identify, to)
xcomp(learn, identify)
obj(identify, child)
nsubj(need, who)
acl:relcl(child, need)
amod(attention, special)
obj(need, attention)
punct(need, ,)
mark(suggest, by)
advcl(need, suggest)
obj(suggest, way)
mark(meet, of)
acl(way, meet)
det(need, the)
obj(meet, need)
case(child, of)
amod(child, individual)
nmod(need, child)
case(classroom, in)
det(classroom, the)
amod(classroom, regular)
nmod(child, classroom)
punct(provide, ,)
cc(provide, and)
mark(provide, by)
conj(meet, provide)
amod(service, clinical)
obj(provide, service)
case(child, for)
advmod(maladjust, severely)
amod(child, maladjust)
obl(provide, child)
punct(perform, .)
nsubj(teacher, it)
cop(teacher, be)
det(teacher, the)
compound(teacher, classroom)
root(ROOT, teacher)
punct(teacher, ,)
advmod(teacher, however)
punct(teacher, ,)
nsubj(have, who)
acl:relcl(teacher, have)
amod(contact, daily)
obj(have, contact)
case(pupil, with)
nmod(contact, pupil)
punct(position, ,)
cc(position, and)
nsubj(position, who)
cop(position, be)
case(position, in)
det(position, a)
amod(position, unique)
conj(have, position)
mark(put, to)
acl(position, put)
obj(put, sound)
amod(principle, psychological)
obj(put, principle)
case(practice, into)
obl(put, practice)
punct(teacher, .)
advmod(part, indeed)
punct(part, ,)
det(study, a)
nsubj(part, study)
case(child, of)
det(child, the)
amod(child, individual)
nmod(study, child)
cop(part, be)
det(part, a)
amod(part, integral)
root(ROOT, part)
case(work, of)
det(work, the)
nmod(part, work)
case(teacher, of)
det(teacher, the)
amod(school, elementary)
punct(school, -)
compound(teacher, school)
nmod(work, teacher)
punct(chore, ,)
cc(chore, rather)
fixed(rather, than)
advmod(chore, merely)
det(chore, a)
amod(chore, additional)
conj(teacher, chore)
punct(chore, .)
nsubj(assume, teacher)
cc(administrator, and)
conj(teacher, administrator)
case(school, in)
amod(school, many)
amod(school, elementary)
nmod(teacher, school)
aux(assume, have)
conj(part, assume)
mark(solve, that)
csubj(solve, divide)
det(pupil, the)
obj(divide, pupil)
case(grade, in)
det(grade, any)
obl(divide, grade)
case(group, into)
nmod(grade, group)
case(basis, on)
det(basis, the)
nmod(group, basis)
case(score, of)
compound(score, test)
nmod(basis, score)
ccomp(assume, solve)
det(problem, the)
obj(solve, problem)
mark(meet, of)
acl(problem, meet)
det(need, the)
obj(meet, need)
case(individual, of)
nmod(need, individual)
punct(part, .)
nsubj(be, what)
nsubj(recognize, they)
aux(recognize, should)
acl:relcl(what, recognize)
root(ROOT, be)
mark(differ, that)
nsubj(differ, child)
nsubj:pass(place, who)
aux(place, have)
aux:pass(place, be)
acl:relcl(child, place)
case(one, in)
obl(place, one)
case(group, of)
det(group, these)
nmod(one, group)
case(basis, on)
det(basis, a)
amod(basis, narrow)
amod(basis, academic)
nmod(one, basis)
advmod(differ, still)
ccomp(be, differ)
advmod(differ, widely)
case(attribute, in)
obl(differ, attribute)
nsubj(influence, that)
acl:relcl(attribute, influence)
obj(influence, success)
punct(treat, ,)
cc(treat, and)
mark(treat, that)
nsubj:pass(treat, they)
advmod(treat, still)
aux(treat, must)
aux:pass(treat, be)
conj(influence, treat)
case(individual, as)
obl(treat, individual)
punct(be, .)
mark(concerned, although)
det(teacher, the)
nsubj(concerned, teacher)
aux(concerned, must)
cop(concerned, be)
advcl(concerned, concerned)
case(standard, with)
advcl(concerned, maintain)
obj(maintain, standard)
punct(concerned, ,)
nsubj(concerned, he)
aux(concerned, must)
advmod(concerned, also)
cop(concerned, be)
root(ROOT, concerned)
case(difference, about)
amod(difference, understanding)
obl(concerned, difference)
case(ability, in)
nmod(difference, ability)
punct(background, ,)
conj(ability, background)
punct(experience, ,)
cc(experience, and)
conj(ability, experience)
punct(concerned, . )
nsubj(indicate, factor)
nsubj(inhibit, that)
acl:relcl(factor, inhibit)
xcomp(inhibit, learn)
cc(lead, and)
conj(learn, lead)
case(Studies, to)
amod(Studies, maladjustment)
obl(learn, Studies)
acl(Studies, conduct)
case(section, in)
amod(section, various)
obl(conduct, section)
case(States, of)
det(States, the)
compound(States, United)
nmod(section, States)
root(ROOT, indicate)
mark(maladjust, that)
amod(child, many)
nsubj(maladjust, child)
case(school, in)
amod(school, elementary)
nmod(child, school)
cop(maladjust, be)
ccomp(indicate, maladjust)
advmod(maladjust, emotionally)
punct(fail, ,)
cc(fail, and)
mark(fail, that)
nsubj(fail, many)
case(they, of)
nmod(many, they)
aux(fail, be)
conj(maladjust, fail)
mark(make, to)
xcomp(fail, make)
amod(progress, satisfactory)
obj(make, progress)
case(subject, in)
compound(subject, school)
nmod(progress, subject)
punct(indicate, .)
nummod(study, one)
nsubj(find, study)
punct(study, ,)
nsubj(involve, which)
acl:relcl(study, involve)
nummod(pupil, 1,524)
obj(involve, pupil)
case(grade, in)
obl(involve, grade)
nummod(grade, one)
case(six, to)
nmod(one, six)
punct(find, ,)
root(ROOT, find)
mark(maladjust, that)
nummod(percent, 12)
nsubj(maladjust, percent)
case(pupil, of)
det(pupil, the)
nmod(percent, pupil)
cop(maladjust, be)
advmod(maladjust, seriously)
ccomp(find, maladjust)
cc(read, and)
mark(read, that)
nummod(percent, 23)
nsubj(read, percent)
aux(read, be)
conj(maladjust, read)
det(year, a)
obl:tmod(read, year)
case(capacity, below)
nmod(year, capacity)
punct(find, .)
expl(apparent, it)
cop(apparent, be)
root(ROOT, apparent)
punct(apparent, ,)
advmod(apparent, therefore)
punct(apparent, ,)
mark(need, that)
det(teacher, the)
nsubj(need, teacher)
ccomp(apparent, need)
mark(know, to)
xcomp(need, know)
det(factor, what)
nsubj(have, factor)
ccomp(know, have)
det(bear, a)
amod(bear, vital)
obj(have, bear)
case(learning, on)
det(learning, the)
nmod(bear, learning)
cc(adjustment, and)
conj(learning, adjustment)
case(child, of)
nmod(learning, child)
punct(have, .)
mark(fail, when)
det(child, a)
nsubj(fail, child)
advcl(have, fail)
mark(meet, to)
xcomp(fail, meet)
det(standard, the)
obj(meet, standard)
case(school, of)
det(school, the)
nmod(standard, school)
case(rate, in)
nmod:poss(rate, he)
obl(meet, rate)
case(learning, of)
nmod(rate, learning)
punct(insecurity, ,)
conj(learning, insecurity)
punct(unhappiness, ,)
conj(learning, unhappiness)
punct(form, ,)
cc(form, and)
amod(form, other)
conj(learning, form)
case(maladjustment, of)
nmod(form, maladjustment)
advmod(follow, frequently)
acl:relcl(form, follow)
punct(apparent, .)
det(maladjustment, these)
nsubj(inhibit, maladjustment)
case(turn, in)
nmod(maladjustment, turn)
root(ROOT, inhibit)
obj(inhibit, learning)
punct(complete, ,)
cc(complete, and)
det(cycle, a)
amod(cycle, vicious)
nsubj:pass(complete, cycle)
aux:pass(complete, be)
conj(inhibit, complete)
punct(inhibit, .)
expl(easy, it)
cop(easy, be)
root(ROOT, easy)
mark(rationalize, for)
det(teacher, the)
nsubj(rationalize, teacher)
mark(rationalize, to)
csubj(easy, rationalize)
mark(lazy, that)
det(child, the)
nsubj(lazy, child)
nsubj(achieve, who)
aux(achieve, be)
advmod(achieve, not)
acl:relcl(child, achieve)
case(accordance, in)
obl(achieve, accordance)
case(ability, with)
nmod:poss(ability, he)
amod(ability, know)
obl(achieve, ability)
cop(lazy, be)
advmod(lazy, just)
advmod(lazy, plain)
ccomp(rationalize, lazy)
punct(delinquent, ,)
cc(delinquent, or)
mark(delinquent, that)
det(child, the)
nsubj(lazy, child)
nsubj(lack, who)
acl:relcl(child, lack)
obj(lack, interest)
case(school, in)
nmod(interest, school)
punct(dislike, ,)
nsubj(dislike, who)
acl:relcl(child, dislike)
det(teacher, the)
obj(dislike, teacher)
punct(overaggressive, ,)
cc(overaggressive, or)
nsubj(overaggressive, who)
cop(overaggressive, be)
conj(dislike, overaggressive)
cop(delinquent, be)
det(delinquent, a)
amod(delinquent, hopeless)
conj(overaggressive, delinquent)
punct(easy, .)
det(cause, the)
nsubj:pass(find, cause)
case(retardation, of)
nmod(cause, retardation)
cc(maladjustment, and)
conj(retardation, maladjustment)
aux(find, may)
aux:pass(find, be)
root(ROOT, find)
case(factor, in)
amod(factor, physical)
obl(find, factor)
punct(factor, ,)
case(speech, such)
fixed(such, as)
amod(speech, defective)
nmod(factor, speech)
cc(hearing, or)
conj(speech, hearing)
punct(vision, ,)
amod(vision, impair)
conj(speech, vision)
punct(coordination, ,)
amod(coordination, faulty)
compound(coordination, motor)
conj(speech, coordination)
punct(constitution, ,)
det(constitution, a)
amod(constitution, frail)
conj(speech, constitution)
punct(disease, ,)
compound(disease, chronic)
conj(speech, disease)
punct(malnutrition, ,)
conj(speech, malnutrition)
punct(malfunction, ,)
cc(malfunction, and)
amod(malfunction, glandular)
conj(speech, malfunction)
punct(find, .)
nsubj:pass(cause, they)
aux(cause, may)
aux:pass(cause, be)
root(ROOT, cause)
case(habit, by)
amod(habit, poor)
compound(habit, health)
obl(cause, habit)
punct(habit, ,)
case(eating, such)
fixed(such, as)
amod(eating, faulty)
compound(habit, eating)
cc(habit, and)
compound(habit, sleeping)
conj(habit, habit)
punct(cause, .)
nsubj(related, they)
aux(related, may)
cop(related, be)
root(ROOT, related)
case(immaturity, to)
amod(immaturity, mental)
obl(related, immaturity)
cc(lack, or)
conj(immaturity, lack)
case(aptitude, of)
nmod(lack, aptitude)
case(type, for)
amod(type, certain)
nmod(immaturity, type)
case(work, of)
compound(work, school)
nmod(type, work)
punct(related, .)
det(curriculum, the)
nsubj(difficult, curriculum)
aux(difficult, may)
cop(difficult, be)
advmod(difficult, too)
root(ROOT, difficult)
case(some, for)
obl(difficult, some)
cc(easy, and)
advmod(easy, too)
conj(some, easy)
case(other, for)
obl(easy, other)
punct(method, .)
compound(method, teach)
parataxis(difficult, method)
punct(material, ,)
amod(method, learn)
conj(method, material)
punct(inhibit, ,)
cc(inhibit, and)
compound(policy, promotion)
nsubj(inhibit, policy)
aux(inhibit, may)
conj(difficult, inhibit)
xcomp(inhibit, learn)
cc(lead, and)
conj(learn, lead)
case(maladjustment, to)
obl(lead, maladjustment)
case(child, for)
det(child, some)
obl(lead, child)
punct(difficult, .)
amod(relation, Unwholesome)
compound(relation, family)
nsubj(contribute, relation)
punct(home, ,)
amod(home, break)
conj(relation, home)
punct(influence, ,)
cc(influence, and)
amod(influence, undesirable)
compound(influence, community)
conj(relation, influence)
aux(contribute, may)
advmod(contribute, also)
aux(contribute, be)
root(ROOT, contribute)
obj(contribute, factor)
punct(contribute, .)
nsubj(list, this)
cop(list, be)
advmod(list, only)
det(list, a)
amod(list, minimum)
root(ROOT, list)
case(factor, of)
det(factor, the)
nmod(list, factor)
nsubj(inhibit, that)
acl:relcl(factor, inhibit)
xcomp(inhibit, learn)
cc(contribute, and)
conj(learn, contribute)
case(maladjustment, to)
obl(learn, maladjustment)
case(child, among)
nmod(maladjustment, child)
punct(list, . )
advmod(influence, moreover)
punct(influence, ,)
det(condition, these)
nsubj(influence, condition)
aux(influence, do)
advmod(influence, not)
root(ROOT, influence)
det(child, all)
obj(influence, child)
case(manner, in)
det(manner, the)
amod(manner, same)
obl(influence, manner)
punct(influence, . )
det(handicap, a)
compound(handicap, vision)
nsubj(spur, handicap)
nsubj(produce, that)
aux(produce, may)
acl:relcl(handicap, produce)
amod(tension, nervous)
obj(produce, tension)
cc(disability, and)
compound(disability, reading)
conj(tension, disability)
case(child, for)
nummod(child, one)
obl(produce, child)
aux(spur, may)
root(ROOT, spur)
det(child, another)
obj(spur, child)
advmod(spur, on)
case(achievement, to)
advmod(greater, even)
amod(achievement, greater)
obl(spur, achievement)
case(reading, in)
nmod(achievement, reading)
punct(spur, .)
det(home, a)
amod(home, impoverish)
nsubj(constitute, home)
nsubj(discourage, that)
aux(discourage, may)
acl:relcl(home, discourage)
nummod(child, one)
obj(discourage, child)
aux(constitute, may)
root(ROOT, constitute)
det(motivation, the)
obj(constitute, motivation)
acl(motivation, cause)
obj(cause, another)
mark(work, to)
xcomp(cause, work)
advmod(work, harder)
case(achievement, for)
amod(achievement, successful)
obl(work, achievement)
case(school, in)
nmod(achievement, school)
punct(constitute, .)
case(rate, at)
det(rate, any)
obl(do, rate)
punct(do, ,)
det(teacher, the)
nsubj(do, teacher)
nsubj(recognize, who)
acl:relcl(teacher, recognize)
amod(cause, common)
obj(recognize, cause)
case(retardation, of)
nmod(cause, retardation)
cc(maladjustment, and)
conj(retardation, maladjustment)
aux(do, can)
advmod(do, frequently)
root(ROOT, do)
det(deal, a)
amod(deal, great)
obj(do, deal)
mark(eliminate, to)
acl(deal, eliminate)
det(cause, the)
obj(eliminate, cause)
case(discouragement, of)
compound(discouragement, pupil)
nmod(cause, discouragement)
punct(failure, ,)
conj(discouragement, failure)
punct(maladjustment, ,)
cc(maladjustment, and)
conj(discouragement, maladjustment)
punct(do, .)
nsubj(involve, source)
case(information, of)
nmod(source, information)
case(child, about)
nmod(information, child)
amod(teaching, Successful)
nmod(information, teaching)
root(ROOT, involve)
xcomp(involve, get)
amod(information, enough)
obj(get, information)
case(pupil, about)
det(pupil, each)
nmod(information, pupil)
mark(understand, to)
advcl(get, understand)
advmod(behave, why)
nsubj(behave, he)
ccomp(understand, behave)
mark(do, as)
nsubj(do, he)
advcl(behave, do)
case(situation, in)
amod(situation, certain)
obl(do, situation)
cc(influence, and)
advmod(influence, how)
nmod:poss(achievement, he)
nsubj:pass(influence, achievement)
case(school, in)
nmod(achievement, school)
aux(influence, be)
aux:pass(influence, be)
conj(do, influence)
case(factor, by)
amod(factor, various)
obl(influence, factor)
case(environment, in)
nmod:poss(environment, he)
nmod(factor, environment)
punct(involve, .)
det(teacher, the)
compound(teacher, classroom)
nsubj:pass(expect, teacher)
aux(expect, can)
advmod(expect, not)
aux:pass(expect, be)
root(ROOT, expect)
mark(proficient, to)
cop(proficient, be)
advmod(proficient, as)
xcomp(expect, proficient)
case(use, in)
det(use, the)
obl(proficient, use)
case(technique, of)
det(technique, the)
nmod(use, technique)
case(study, of)
compound(study, child)
nmod(technique, study)
case(psychologist, as)
det(psychologist, the)
amod(psychologist, clinical)
nmod(technique, psychologist)
punct(expect, ;)
punct(expect, ;)
nsubj:pass(expect, he)
aux(expect, can)
advmod(expect, not)
aux:pass(expect, be)
parataxis(expect, expect)
mark(administer, to)
xcomp(expect, administer)
det:predet(test, all)
det(test, the)
obj(administer, test)
cc(gather, and)
conj(administer, gather)
det:predet(information, all)
det(information, the)
obj(gather, information)
acl(information, need)
case(child, about)
det(child, each)
obl(need, child)
case(classroom, in)
nmod:poss(classroom, he)
obl(need, classroom)
punct(expect, .)
nsubj:pass(expect, he)
aux(expect, can)
aux:pass(expect, be)
root(ROOT, expect)
punct(expect, ,)
advmod(expect, however)
punct(expect, ,)
mark(examine, to)
xcomp(expect, examine)
cc(interpret, and)
conj(examine, interpret)
det(information, the)
obj(examine, information)
advmod(available, already)
xcomp(examine, available)
punct(expect, ;)
punct(expect, ;)
mark(refine, to)
conj(examine, refine)
cc(extend, and)
conj(refine, extend)
nmod:poss(technique, he)
amod(technique, own)
obj(extend, technique)
mark(study, for)
acl(technique, study)
amod(child, individual)
obj(study, child)
punct(utilize, ;)
punct(utilize, ;)
cc(utilize, and)
mark(utilize, to)
conj(refine, utilize)
obj(utilize, opportunity)
punct(utilize, ,)
advcl(utilize, arise)
case(connection, in)
obl(arise, connection)
case(activity, with)
amod(activity, regular)
compound(activity, classroom)
nmod(connection, activity)
punct(arise, ,)
mark(gain, for)
advcl(arise, gain)
det(understanding, a)
amod(understanding, better)
obj(gain, understanding)
case(pupil, of)
nmod:poss(pupil, he)
nmod(understanding, pupil)
punct(expect, .)
det(section, this)
nsubj(deal, section)
root(ROOT, deal)
case(some, with)
obl(deal, some)
case(source, of)
det(source, the)
nmod(some, source)
case(information, of)
nmod(source, information)
nsubj:pass(tap, that)
aux(tap, can)
aux:pass(tap, be)
acl:relcl(information, tap)
case(teacher, by)
det(teacher, the)
compound(teacher, classroom)
obl(tap, teacher)
punct(deal, ;)
punct(deal, ;)
nsubj(provide, Chapter)
nummod(Chapter, 15)
parataxis(deal, provide)
advmod(detailed, more)
amod(information, detailed)
obj(provide, information)
case(technique, about)
amod(technique, specific)
nmod(information, technique)
acl(technique, use)
mark(evaluate, in)
advcl(use, evaluate)
compound(progress, pupil)
obj(evaluate, progress)
punct(deal, .)
amod(record, cumulative)
nsubj(maintain, record)
amod(system, most)
compound(system, school)
appos(record, system)
obl:tmod(maintain, today)
root(ROOT, maintain)
det(system, a)
obj(maintain, system)
case(record, of)
amod(record, cumulative)
nmod(system, record)
case(pupil, of)
nmod(record, pupil)
punct(maintain, .)
det(record, these)
nsubj(provide, record)
punct(provide, ,)
mark(maintain, when)
advmod(maintain, systematically)
advcl(provide, maintain)
punct(provide, ,)
root(ROOT, provide)
amod(information, much)
obj(provide, information)
case(child, about)
det(child, the)
nmod(information, child)
punct(child, ,)
obj(use, which)
det(teacher, the)
nsubj(use, teacher)
aux(use, can)
acl:relcl(child, use)
case(guidance, in)
obl(use, guidance)
punct(instruction, ,)
conj(guidance, instruction)
punct(group, ,)
conj(guidance, group)
punct(report, ,)
cc(report, and)
conj(guidance, report)
case(parent, to)
obl(report, parent)
punct(provide, .)
det(teacher, each)
nsubj(have, teacher)
root(ROOT, have)
case(classroom, in)
nmod:poss(classroom, he)
obl(have, classroom)
det(file, a)
compound(file, metal)
obj(have, file)
punct(file, ,)
acl(file, equip)
case(lock, with)
det(lock, a)
obl(equip, lock)
punct(lock, ,)
nsubj:pass(use, which)
aux:pass(use, be)
acl:relcl(lock, use)
mark(store, to)
xcomp(use, store)
amod(folder, cumulative)
compound(folder, record)
obj(store, folder)
punct(store, .)
case(period, during)
compound(period, summer)
compound(period, vacation)
obl(store, period)
det(record, these)
nsubj:pass(store, record)
aux:pass(store, be)
parataxis(have, store)
case(office, in)
det(office, the)
obl(store, office)
case(principal, of)
det(principal, the)
nmod(office, principal)
punct(have, .)
advmod(teacher, only)
det(teacher, the)
nsubj:pass(permit, teacher)
cc(personnel, and)
amod(personnel, other)
amod(personnel, professional)
conj(teacher, personnel)
aux:pass(permit, be)
root(ROOT, permit)
mark(see, to)
xcomp(permit, see)
cc(use, or)
conj(see, use)
det(record, these)
obj(see, record)
punct(permit, .)
det(teacher, each)
amod(teacher, new)
nsubj:pass(expect, teacher)
case(whom, to)
nmod(teacher, whom)
det(pupil, the)
nsubj(go, pupil)
acl:relcl(teacher, go)
aux:pass(expect, be)
root(ROOT, expect)
mark(study, to)
xcomp(expect, study)
det(information, the)
obj(study, information)
case(record, in)
det(record, the)
amod(record, cumulative)
obl(study, record)
cc(bring, and)
mark(bring, to)
conj(study, bring)
obj(bring, it)
compound:prt(bring, up)
case(date, to)
obl(bring, date)
punct(expect, .)
det(system, some)
compound(system, school)
nsubj(provide, system)
root(ROOT, provide)
amod(instruction, write)
obj(provide, instruction)
case(principal, to)
nmod(instruction, principal)
cc(teacher, and)
conj(principal, teacher)
advcl(provide, designate)
mark(be, when)
amod(information, certain)
nsubj(be, information)
advcl(designate, be)
mark(record, to)
aux:pass(record, be)
xcomp(be, record)
case(form, on)
amod(form, cumulative)
compound(form, record)
obl(record, form)
cc(explain, and)
conj(record, explain)
advmod(be, how)
det(information, the)
nsubj(be, information)
ccomp(explain, be)
mark(summarize, to)
aux:pass(summarize, be)
xcomp(be, summarize)
cc(use, and)
conj(summarize, use)
punct(provide, .)
det(report, the)
compound(report, summary)
nsubj(show, report)
case(Progress, on)
compound(Progress, desegregation)
nmod(report, Progress)
case(Education, in)
nmod(Progress, Education)
case(Region, in)
det(Region, the)
compound(South, Middle)
punct(South, -)
compound(Region, South)
nmod(report, Region)
punct(Region, ,)
appos(Region, 1959)
punct(Region, -)
appos(Region, 1960)
punct(show, '')
advmod(show, clearly)
root(ROOT, show)
nummod(piece, two)
obj(show, piece)
case(information, of)
nmod(piece, information)
punct(show, .)
det(report, the)
compound(report, summary)
nsubj(indicate, report)
punct(report, ,)
nsubj:pass(prepare, which)
aux:pass(prepare, be)
acl:relcl(report, prepare)
case(Conference, for)
det(Conference, this)
obl(prepare, Conference)
punct(indicate, ,)
root(ROOT, indicate)
punct(indicate, ,)
advmod(increase, first)
punct(increase, ,)
det(desegregation, that)
amod(desegregation, actual)
cc(pending, or)
conj(actual, pending)
compound(desegregation, school)
nsubj(increase, desegregation)
aux(increase, be)
ccomp(indicate, increase)
punct(indicate, ;)
punct(indicate, ;)
advmod(suggest, second)
punct(suggest, ,)
mark(be, that)
cc:preconj(actual, both)
amod(desegregation, actual)
cc(pending, and)
conj(actual, pending)
nsubj(be, desegregation)
cop(increase, be)
punct(product, ,)
case(exception, with)
amod(exception, few)
nmod(product, exception)
punct(product, ,)
det(product, the)
conj(desegregation, product)
cc(result, or)
conj(product, result)
case(order, of)
compound(order, court)
nmod(product, order)
punct(product, .)
det(report, the)
nsubj(suggest, report)
advmod(report, together)
case(information, with)
amod(information, other)
nmod(report, information)
acl:relcl(product, suggest)
mark(slow, that)
nsubj(slow, desegregation)
case(school, in)
det(school, the)
nmod(desegregation, school)
cop(slow, be)
ccomp(suggest, slow)
punct(indicate, .)
det(Region, the)
compound(South, Middle)
punct(South, -)
compound(Region, South)
nsubj(consist, Region)
punct(consist, ,)
mark(define, as)
advcl(consist, define)
case(Association, by)
det(Association, the)
compound(Association, National)
obl(define, Association)
case(Officials, of)
compound(relation, Intergroup)
compound(Officials, relation)
nmod(Association, Officials)
punct(NAIRO, ()
appos(Officials, NAIRO)
punct(NAIRO, ))
punct(consist, ,)
root(ROOT, consist)
case(state, of)
det(state, the)
obl(consist, state)
case(Kentucky, of)
nmod(state, Kentucky)
punct(Maryland, ,)
conj(Kentucky, Maryland)
punct(Tennessee, ,)
conj(Kentucky, Tennessee)
punct(Virginia, ,)
compound(Virginia, West)
conj(Kentucky, Virginia)
punct(Delaware, ,)
conj(Kentucky, Delaware)
punct(Virginia, ,)
conj(Kentucky, Virginia)
cc(District, and)
det(District, the)
conj(Kentucky, District)
case(Columbia, of)
nmod(District, Columbia)
punct(consist, .)
det(state, the)
nsubj(have, state)
cc(Capital, and)
det(Nation, the)
nmod:poss(Capital, Nation)
case(Nation, 's)
conj(state, Capital)
advmod(Capital, all)
root(ROOT, have)
det(desegregation, some)
obj(have, desegregation)
punct(desegregation, ,)
case(fact, in)
obl(back, fact)
det(dating, some)
obl:npmod(back, dating)
advmod(have, back)
case(1954, to)
obl(back, 1954)
punct(have, ;)
punct(have, ;)
cc(embrace, but)
det(region, the)
nsubj(embrace, region)
advmod(embrace, also)
conj(have, embrace)
obj(embrace, some)
case(opposition, of)
det(opposition, the)
amod(opposition, staunchest)
nmod(some, opposition)
punct(oppose, .)
nsubj:pass(oppose, desegregation)
aux(oppose, have)
aux:pass(oppose, be)
parataxis(embrace, oppose)
case(resistance, by)
amod(resistance, massive)
obl(oppose, resistance)
punct(interposition, ,)
conj(resistance, interposition)
punct(assignment, ,)
compound(assignment, pupil)
conj(resistance, assignment)
punct(assignment, ()
case(assignment, with)
det(assignment, no)
nmod(resistance, assignment)
case(child, of)
amod(child, Negro)
nmod(assignment, child)
punct(assignment, ))
punct(hate, ,)
cc(hate, and)
conj(assignment, hate)
obj(hate, bombing)
punct(hate, .)
compound(order, desegregation)
cc(court, and)
conj(desegregation, court)
nsubj(let, order)
advmod(let, now)
conj(hate, let)
obj(let, 's)
xcomp(let, look)
case(evidence, at)
det(evidence, the)
obl(look, evidence)
nsubj(show, that)
acl:relcl(evidence, show)
det(increase, the)
obj(show, increase)
case(desegregation, in)
nmod(increase, desegregation)
cc(increase, and)
amod(increase, such)
conj(desegregation, increase)
case(result, as)
det(result, a)
nmod(increase, result)
case(order, of)
compound(order, court)
nmod(result, order)
punct(have, .)
amod(Kentucky, first)
root(ROOT, Kentucky)
punct(Kentucky, .)
compound(school, Elementary)
compound(desegregation, school)
nsubj(come, desegregation)
root(ROOT, come)
case(county, to)
compound(county, Owen)
cc(Union, and)
conj(Owen, Union)
obl(come, county)
punct(county, ,)
nsubj(have, which)
advmod(have, already)
acl:relcl(county, have)
amod(desegregation, high)
compound(desegregation, school)
obj(have, desegregation)
punct(come, .)
det(action, the)
nsubj(result, action)
cop(result, be)
det(result, a)
root(ROOT, result)
case(order, of)
det(order, a)
compound(order, court)
nmod(result, order)
punct(take, ,)
det(citation, the)
nsubj:pass(take, citation)
case(which, for)
obl(take, which)
punct(action, ()
cc(action, and)
case(action, for)
amod(action, other)
compound(action, court)
nmod(citation, action)
acl(action, mention)
case(paper, in)
det(paper, this)
obl(mention, paper)
punct(mention, ))
aux:pass(take, be)
parataxis(result, take)
case(report, from)
det(report, the)
compound(report, summary)
obl(take, report)
case(conference, for)
det(conference, this)
nmod(report, conference)
punct(result, .)
case(Maryland, in)
obl(prepare, Maryland)
det(Board, the)
compound(County, Harford)
compound(Board, County)
nsubj(prepare, Board)
case(Education, of)
nmod(Board, Education)
aux(prepare, have)
root(ROOT, prepare)
det(plan, a)
compound(plan, desegregation)
obj(prepare, plan)
obj(approve, which)
det(Court, the)
nsubj(approve, Court)
acl:relcl(plan, approve)
cc(challenge, but)
obj(challenge, which)
det(plaintiff, a)
nsubj(challenge, plaintiff)
aux(challenge, have)
conj(approve, challenge)
punct(prepare, ;)
punct(prepare, ;)
advmod(join, thus)
punct(join, ,)
compound(school, county)
compound(board, school)
nsubj(join, board)
cc(court, and)
amod(court, federal)
conj(board, court)
conj(prepare, join)
obj(join, hand)
advmod(join, here)
mark(promote, to)
advcl(join, promote)
compound(desegregation, school)
obj(promote, desegregation)
punct(join, .)
amod(desegregation, additional)
compound(desegregation, school)
nsubj(result, desegregation)
case(Tennessee, in)
nmod(desegregation, Tennessee)
conj(join, result)
case(order, from)
det(order, a)
compound(order, court)
obl(result, order)
acl(order, open)
det(school, a)
obj(open, school)
acl(school, serve)
obj(serve, child)
case(personnel, of)
amod(personnel, military)
nmod(child, personnel)
punct(prepare, .)
advmod(come, similarly)
punct(come, ,)
amod(desegregation, further)
nsubj(come, desegregation)
aux(come, may)
root(ROOT, come)
case(suit, from)
obl(come, suit)
acl(suit, pend)
case(city, in)
nummod(city, three)
compound(city, Tennessee)
obl(pend, city)
punct(Chattanooga, ,)
conj(city, Chattanooga)
punct(Knoxville, ,)
conj(city, Knoxville)
punct(Memphis, ,)
cc(Memphis, and)
conj(city, Memphis)
punct(come, .)
case(Virginia, in)
compound(Virginia, West)
obl(increase, Virginia)
det(number, the)
nsubj(increase, number)
case(child, of)
amod(child, white)
cc(Negro, and)
conj(white, Negro)
nmod(number, child)
acl(child, attend)
det(school, the)
amod(school, same)
obj(attend, school)
aux(increase, have)
root(ROOT, increase)
advmod(twofold, almost)
xcomp(increase, twofold)
punct(increase, .)
expl(be, there)
root(ROOT, be)
det(decision, no)
compound(decision, court)
nsubj(be, decision)
advmod(be, here)
punct(be, .)
case(Maryland, as)
fixed(as, in)
obl(approve, Maryland)
punct(approve, ,)
det(court, a)
compound(court, District)
nsubj(approve, court)
aux(approve, have)
root(ROOT, approve)
det(plan, a)
amod(plan, official)
obj(approve, plan)
case(desegregation, of)
compound(desegregation, school)
nmod(plan, desegregation)
case(Delaware, in)
obl(approve, Delaware)
punct(approve, .)
case(result, as)
det(result, a)
obl(enter, result)
case(plan, of)
det(plan, the)
compound(Board, State)
compound(plan, Board)
case(Education, of)
nmod(Board, Education)
nmod(result, plan)
punct(enter, ,)
compound(child, Negro)
nsubj(enter, child)
root(ROOT, enter)
amod(school, heretofore)
amod(school, white)
amod(school, elementary)
obj(enter, school)
case(district, in)
nummod(district, five)
obl(enter, district)
punct(enter, .)
det(court, the)
amod(court, third)
compound(court, Circuit)
nsubj(review, court)
case(appeal, of)
nmod(court, appeal)
aux(review, be)
root(ROOT, review)
det(appeal, a)
obj(review, appeal)
case(plan, from)
det(plan, the)
nmod(appeal, plan)
punct(review, .)
case(order, in)
compound(order, Virginia)
compound(order, court)
obl(pend, order)
acl(order, lead)
case(desegregation, to)
obl(lead, desegregation)
case(Charlottesville, in)
obl(lead, Charlottesville)
cc(county, and)
compound(county, floyd)
conj(Charlottesville, county)
punct(pend, .)
nsubj(pend, desegregation)
case(County, in)
compound(County, Pulaski)
nmod(desegregation, County)
aux(pend, be)
root(ROOT, pend)
case(order, because)
fixed(because, of)
compound(order, court)
obl(pend, order)
punct(pend, ,)
mark(determine, although)
nsubj:pass(determine, date)
case(admission, of)
nmod(date, admission)
aux:pass(determine, be)
advmod(determine, not)
advmod(determine, yet)
advcl(pend, determine)
punct(pend, .)
amod(parent, Negro)
nsubj(file, parent)
aux(file, have)
root(ROOT, file)
obj(file, application)
case(admission, for)
nmod(application, admission)
case(child, of)
amod(child, additional)
nmod(admission, child)
case(school, to)
nmod(admission, school)
case(Alexandria, in)
nmod(school, Alexandria)
punct(Arlington, ,)
conj(Alexandria, Arlington)
punct(fairfax, ,)
conj(Alexandria, fairfax)
punct(county, ,)
cc(county, and)
compound(county, Warren)
conj(Alexandria, county)
punct(file, .)
nsubj(result, desegregation)
aux(result, can)
advmod(result, also)
parataxis(file, result)
case(suit, from)
amod(suit, additional)
obl(result, suit)
acl(suit, bring)
case(plaintiff, by)
compound(plaintiff, Negro)
obl(bring, plaintiff)
case(board, against)
compound(board, school)
obl(bring, board)
case(News, in)
compound(News, Newport)
nmod(board, News)
punct(County, ,)
compound(County, fairfax)
conj(News, County)
punct(County, ,)
compound(County, Arlington)
conj(News, County)
punct(Norfolk, ,)
cc(Norfolk, and)
conj(News, Norfolk)
punct(file, .)
case(district, as)
det(district, a)
compound(district, school)
obl(desegregate, district)
punct(desegregate, ,)
det(District, the)
nsubj(desegregate, District)
case(Columbia, of)
nmod(District, Columbia)
aux(desegregate, have)
aux(desegregate, have)
root(ROOT, desegregate)
obj(desegregate, school)
case(1954, since)
obl(desegregate, 1954)
punct(desegregate, ,)
advmod(desegregate, shortly)
case(decision, after)
det(decision, the)
compound(Court, Supreme)
compound(decision, Court)
obl(desegregate, decision)
punct(desegregate, .)
det(recapitulation, this)
nsubj(make, recapitulation)
root(ROOT, make)
expl(make, it)
xcomp(make, clear)
mark(continue, that)
compound(desegregation, school)
nsubj(continue, desegregation)
ccomp(clear, continue)
punct(continue, ,)
case(State, include)
det(State, the)
compound(State, old)
compound(State, Dominion)
obl(continue, State)
punct(continue, ,)
case(spite, in)
obl(continue, spite)
case(resistance, of)
nmod:poss(resistance, its)
compound(resistance, stern)
nmod(spite, resistance)
punct(make, .)
det(record, the)
nsubj(clear, record)
cop(clear, be)
root(ROOT, clear)
mark(come, that)
nsubj(come, increase)
case(desegregation, in)
compound(desegregation, school)
nmod(increase, desegregation)
amod(year, last)
obl:tmod(come, year)
ccomp(clear, come)
advmod(come, largely)
case(result, as)
det(result, a)
obl(come, result)
case(order, of)
det(order, a)
compound(order, court)
nmod(result, order)
punct(come, ;)
punct(come, ;)
mark(result, that)
case(horizon, on)
det(horizon, the)
amod(horizon, immediate)
obl(result, horizon)
punct(result, ,)
mark(come, if)
amod(scale, further)
amod(scale, large)
punct(scale, -)
nsubj(come, scale)
punct(speak, ()
advmod(speak, relatively)
amod(scale, speak)
punct(speak, ))
nsubj(come, desegregation)
advcl(result, come)
punct(result, ,)
nsubj(result, it)
aux(result, will)
parataxis(clear, result)
case(order, from)
compound(order, court)
obl(result, order)
case(suit, on)
nmod(order, suit)
acl(suit, file)
case(state, in)
amod(state, several)
compound(South, Middle)
punct(South, -)
compound(state, South)
obl(file, state)
punct(Knowledge, .)
appos(order, Knowledge)
mark(involved, that)
nsubj(involved, thousand)
case(district, of)
compound(district, school)
nmod(thousand, district)
cop(involved, be)
acl:relcl(Knowledge, involved)
cc(observation, and)
conj(involved, observation)
mark(occur, that)
compound(desegregation, school)
nsubj(occur, desegregation)
aux(occur, have)
conj(involved, occur)
case(handful, in)
advmod(handful, only)
det(handful, a)
obl(occur, handful)
case(lead, in)
nummod(lead, 1959)
case(1960, -)
nmod(1959, 1960)
nmod(handful, lead)
case(conclusion, to)
det(conclusion, a)
nmod(lead, conclusion)
mark(slow, that)
nsubj(slow, desegregation)
punct(desegregation, -)
case(order, from)
punct(order, -)
compound(order, court)
punct(order, -)
nmod(desegregation, order)
cop(slow, be)
acl(conclusion, slow)
punct(clear, .)
mark(turn, before)
advcl(wish, turn)
case(view, to)
nmod:poss(view, my)
obl(turn, view)
case(problem, as)
fixed(as, to)
det(problem, the)
obl(turn, problem)
cc(issue, and)
conj(problem, issue)
case(we, before)
nmod(problem, we)
case(Conference, at)
det(Conference, this)
compound(Conference, regional)
nmod(problem, Conference)
punct(wish, ,)
nsubj(wish, I)
root(ROOT, wish)
mark(note, to)
xcomp(wish, note)
det(item, a)
amod(item, small)
obj(note, item)
case(report, in)
det(report, the)
compound(report, summary)
nmod(item, report)
mark(refer, as)
nsubj(refer, it)
advcl(note, refer)
case(District, to)
det(District, the)
obl(refer, District)
case(Columbia, of)
nmod(District, Columbia)
punct(wish, .)
det(reference, that)
nsubj(continuation, reference)
case(report, in)
det(report, the)
nmod(reference, report)
cop(continuation, be)
punct(continuation, ``)
root(ROOT, continuation)
case(trend, of)
det(trend, the)
nmod(continuation, trend)
case(system, toward)
det(system, a)
det(Negro, all)
punct(Negro, -)
amod(system, Negro)
compound(system, school)
nmod(trend, system)
punct(continuation, '')
punct(continuation, ,)
det(remark, a)
appos(continuation, remark)
advmod(occasion, apparently)
acl(remark, occasion)
case(increase, by)
det(increase, the)
obl(occasion, increase)
case(population, of)
amod(population, Negro)
compound(population, school)
nmod(increase, population)
case(cent, from)
nummod(cent, 74.1)
compound(cent, per)
nmod(increase, cent)
case(cent, to)
nummod(cent, 76.)
nummod(cent, 7)
compound(cent, per)
nmod(cent, cent)
punct(continuation, . )
nsubj(see, I)
root(ROOT, see)
det(prospect, no)
amod(prospect, real)
obj(see, prospect)
case(population, for)
det(population, a)
det(Negro, all)
punct(Negro, -)
compound(population, Negro)
compound(population, school)
nmod(prospect, population)
punct(see, .)
nsubj(white, West)
case(Park, of)
compound(Park, rock)
compound(Park, Creek)
nmod(West, Park)
cop(white, be)
advmod(white, still)
advmod(white, monolithically)
root(ROOT, white)
cc(white, and)
cop(white, be)
case(fact, in)
obl(white, fact)
advmod(white, increasingly)
conj(white, white)
case(result, as)
det(result, a)
obl(white, result)
case(program, of)
nmod:poss(program, Georgetown)
case(Georgetown, 's)
compound(program, conversion)
punct(conversion, -)
case(renovation, by)
punct(renovation, -)
nmod(conversion, renovation)
compound(program, housing)
nmod(result, program)
punct(white, .)
compound(Foggy, Nearby)
root(ROOT, Foggy)
nsubj(ousting, bottom)
aux(ousting, be)
root(ROOT, ousting)
obj(ousting, Negroes)
punct(ousting, .)
det(acreage, the)
amod(acreage, large)
nsubj(beckon, acreage)
case(area, in)
det(area, the)
compound(area, Southwest)
compound(area, redevelopment)
nmod(acreage, area)
root(ROOT, beckon)
amod(people, white)
obj(beckon, people)
punct(people, --)
appos(people, what)
case(house, with)
amod(price, high)
punct(price, -)
amod(house, price)
compound(house, town)
nmod(what, house)
cc(apartment, and)
compound(apartment, elevator)
conj(house, apartment)
punct(beckon, .)
det(rehabilitation, the)
compound(rehabilitation, Capitol)
compound(rehabilitation, Hill)
nsubj(replace, rehabilitation)
punct(rehabilitation, ,)
case(bottom, like)
compound(bottom, Foggy)
nmod(rehabilitation, bottom)
punct(replace, ,)
root(ROOT, replace)
obj(replace, Negroes)
case(white, with)
obl(replace, white)
punct(replace, ()
cc(replace, but)
advmod(replace, also)
conj(replace, replace)
det(white, some)
obj(replace, white)
case(white, with)
amod(white, other)
nmod(white, white)
punct(replace, ))
punct(replace, .)
det(break, the)
amod(break, sharpest)
nsubj(come, break)
case(tradition, with)
nmod(break, tradition)
punct(break, ,)
det(past, the)
nmod:tmod(break, past)
cc(present, and)
conj(past, present)
case(Ring, of)
punct(Ring, ``)
compound(Ring, White)
obl(present, Ring)
case(core, around)
det(core, a)
compound(core, Black)
nmod(Ring, core)
punct(Ring, '')
punct(come, ,)
aux(come, may)
root(ROOT, come)
case(opening, with)
det(opening, the)
obl(come, opening)
case(suburb, of)
amod(suburb, nearby)
compound(County, Montgomery)
compound(suburb, County)
nmod(opening, suburb)
case(resident, to)
compound(resident, Negro)
nmod(suburb, resident)
cc(conclusion, and)
punct(conclusion, ,)
advmod(conclusion, presumably)
punct(conclusion, ,)
det(conclusion, the)
amod(conclusion, consequent)
conj(opening, conclusion)
case(white, of)
det(white, some)
nmod(conclusion, white)
obj(escape, that)
nsubj(escape, they)
aux(escape, can)
advmod(escape, not)
acl:relcl(white, escape)
det(Negro, the)
obj(escape, Negro)
mark(flee, by)
advcl(escape, flee)
case(suburb, to)
det(suburb, the)
obl(flee, suburb)
punct(come, .)
case(fact, in)
obl(have, fact)
punct(have, ,)
advmod(have, short)
mark(flee, of)
advcl(short, flee)
case(Warrenton, to)
obl(flee, Warrenton)
punct(Virginia, ,)
conj(Warrenton, Virginia)
punct(Rockville, ,)
cc(Rockville, or)
conj(Warrenton, Rockville)
punct(Rockville, ,)
conj(Warrenton, Maryland)
punct(have, ,)
amod(people, white)
nsubj(have, people)
aux(have, may)
root(ROOT, have)
mark(live, to)
xcomp(have, live)
case(Negroes, with)
obl(live, Negroes)
punct(have, .)
nsubj:pass(take, all)
case(this, of)
nmod(all, this)
aux(take, must)
aux:pass(take, be)
parataxis(have, take)
case(account, into)
obl(take, account)
mark(conjure, before)
det(image, the)
nsubj:pass(conjure, image)
case(system, of)
det(system, a)
punct(Negro, ``)
det(Negro, all)
punct(Negro, -)
nmod(image, Negro)
punct(Negro, '')
compound(system, D.C.)
amod(school, public)
compound(system, school)
nmod(image, system)
aux:pass(conjure, be)
advcl(take, conjure)
compound:prt(conjure, up)
punct(have, .)
nsubj(apparent, problem)
mark(solve, to)
acl(problem, solve)
case(report, from)
det(report, the)
compound(report, summary)
obl(solve, report)
case(we, before)
nmod(report, we)
case(Conference, at)
det(Conference, this)
obl(solve, Conference)
punct(apparent, ,)
det(number, a)
nsubj(apparent, number)
case(problem, of)
nmod(number, problem)
cop(apparent, be)
root(ROOT, apparent)
punct(apparent, .)
nsubj(vex, they)
root(ROOT, vex)
obj(vex, we)
cc(perplex, and)
conj(vex, perplex)
obj(perplex, we)
cc(divide, but)
advmod(divide, generally)
aux(divide, do)
advmod(divide, not)
conj(vex, divide)
obj(divide, we)
case(issue, like)
det(issue, the)
obl(divide, issue)
nsubj(follow, which)
acl:relcl(issue, follow)
det(problem, the)
obj(follow, problem)
punct(vex, .)
advmod(step, first)
punct(step, ,)
advmod(step, how)
aux(step, can)
nsubj(step, we)
root(ROOT, step)
compound:prt(step, up)
det(movement, the)
compound(movement, desegregation)
obj(step, movement)
punct(step, ?)
punct(step, ?)
nsubj(slow, it)
cop(slow, be)
root(ROOT, slow)
punct(slow, . )
nsubj(believe, I)
root(ROOT, believe)
nsubj(want, we)
det(we, all)
ccomp(believe, want)
amod(school, more)
obj(want, school)
advmod(can, where)
acl:relcl(school, white)
cc(Negro, and)
conj(white, Negro)
advmod(white, together)
advcl(more, can)
cc(attend, and)
aux(attend, do)
conj(want, attend)
punct(believe, . )
nsubj(believe, I)
root(ROOT, believe)
nsubj(want, we)
det(we, all)
ccomp(believe, want)
det(child, no)
obj(want, child)
xcomp(want, deny)
obj(deny, admission)
case(school, to)
det(school, a)
obl(deny, school)
case(account, on)
obl(deny, account)
case(color, of)
nmod:poss(color, he)
nmod(account, color)
punct(believe, .)
case(general, in)
obl(want, general)
punct(want, ,)
nsubj(want, member)
case(NAIRO, of)
nmod(member, NAIRO)
aux(want, would)
advmod(want, certainly)
root(ROOT, want)
det(child, a)
obj(want, child)
acl(child, admit)
case(nearest, to)
det(nearest, a)
compound(nearest, school)
obl(admit, nearest)
nmod:poss(residence, he)
obl(nearest, residence)
cc(zone, or)
case(zone, within)
nmod:poss(zone, he)
compound(zone, residence)
conj(residence, zone)
punct(want, .)
advmod(achieve, how)
mark(achieve, to)
csubj(problem, achieve)
det(objective, this)
obj(achieve, objective)
cop(problem, be)
det(problem, a)
root(ROOT, problem)
punct(divide, ,)
cc(divide, but)
nsubj:pass(divide, we)
aux:pass(divide, be)
advmod(divide, not)
conj(problem, divide)
case(what, on)
obl(divide, what)
nsubj(want, we)
acl:relcl(what, want)
punct(problem, .)
advmod(achieve, second)
punct(achieve, ,)
mark(increase, as)
nsubj(increase, we)
advcl(achieve, increase)
det(number, the)
obj(increase, number)
case(district, of)
amod(district, desegregate)
compound(district, school)
nmod(number, district)
cc(school, and)
conj(district, school)
nmod:npmod(school, themselves)
punct(achieve, ,)
advmod(achieve, how)
aux(achieve, can)
nsubj(achieve, we)
root(ROOT, achieve)
det(action, this)
obj(achieve, action)
case(action, through)
compound(action, school)
compound(action, board)
obl(achieve, action)
punct(achieve, ?)
punct(achieve, ?)
nsubj(board, it)
aux(board, may)
cop(board, be)
compound(board, county)
compound(board, school)
root(ROOT, board)
cc(action, or)
compound(school, state)
compound(action, school)
compound(action, board)
conj(board, action)
punct(that, ,)
cc(that, as)
fixed(as, well)
fixed(as, as)
conj(board, that)
case(board, of)
amod(board, municipal)
compound(board, school)
nmod(that, board)
punct(board, .)
advmod(reduce, correlatively)
punct(reduce, ,)
aux(reduce, can)
nsubj(reduce, we)
root(ROOT, reduce)
det(role, the)
obj(reduce, role)
case(court, of)
det(court, the)
compound(court, district)
nmod(role, court)
punct(reduce, ,)
mark(that, so)
fixed(so, that)
det(action, the)
nsubj(that, action)
cop(that, be)
advcl(reduce, that)
case(people, of)
det(people, the)
nmod(that, people)
case(community, of)
det(community, the)
nmod(people, community)
cc(district, or)
amod(district, other)
compound(district, school)
conj(community, district)
cc(that, and)
advmod(that, not)
conj(people, that)
case(court, of)
det(court, the)
compound(court, law)
nmod(that, court)
punct(reduce, ?)
punct(reduce, ?)
nsubj(problem, this)
cop(problem, be)
det(problem, a)
root(ROOT, problem)
punct(believe, ,)
cc(believe, and)
nsubj(believe, I)
conj(problem, believe)
expl(be, there)
ccomp(believe, be)
amod(difference, little)
nsubj(be, difference)
case(opinion, of)
nmod(difference, opinion)
mark(devise, that)
advmod(possible, wherever)
advmod(devise, possible)
det(board, a)
amod(board, local)
compound(board, school)
nsubj(devise, board)
aux(devise, should)
acl(opinion, devise)
cc(effect, and)
conj(devise, effect)
det(plan, a)
obj(effect, plan)
case(desegregation, of)
nmod(plan, desegregation)
punct(insure, .)
advmod(insure, third)
punct(insure, ,)
advmod(insure, how)
aux(insure, can)
nsubj(insure, we)
ccomp(believe, insure)
det(education, a)
amod(education, systematic)
cc(continue, and)
conj(systematic, continue)
compound(relation, group)
compound(education, relation)
obj(insure, education)
case(school, in)
det(school, the)
nmod(education, school)
punct(problem, ?)
punct(problem, ?)
advmod(simply, not)
advmod(program, simply)
det(program, a)
amod(program, brief)
root(ROOT, program)
mark(desegregate, when)
det(school, the)
nsubj:pass(desegregate, school)
aux:pass(desegregate, be)
advmod(desegregate, actually)
advcl(program, desegregate)
cc(program, but)
det(program, a)
compound(program, continue)
conj(desegregate, program)
nsubj(promote, that)
advmod(promote, also)
acl:relcl(program, promote)
obj(promote, integration)
punct(integration, ,)
nsubj(encourage, that)
acl:relcl(program, encourage)
det(child, the)
obj(encourage, child)
cc(teacher, and)
conj(child, teacher)
advmod(look, not)
mark(look, to)
xcomp(encourage, look)
case(other, at)
det(other, each)
obl(look, other)
case(white, as)
obl(look, white)
cc(Negro, or)
conj(white, Negro)
punct(being, ,)
cc(being, but)
case(being, as)
amod(being, human)
conj(white, being)
punct(program, .)
advmod(be, again)
det(problem, the)
nsubj(be, problem)
root(ROOT, be)
advmod(get, how)
mark(get, to)
ccomp(be, get)
obj(get, it)
xcomp(get, do)
cc(offer, and)
case(form, in)
det(form, what)
conj(get, form)
mark(offer, to)
acl(form, offer)
det(education, the)
compound(relation, group)
compound(education, relation)
obj(offer, education)
punct(get, ;)
punct(be, ;)
advmod(do, not)
mark(do, whether)
nsubj:pass(do, it)
aux(do, should)
aux:pass(do, be)
advcl(offer, do)
punct(be, . )
advmod(assure, Fourth)
punct(assure, ,)
case(system, in)
det(system, the)
amod(system, segregate)
compound(system, school)
obl(assure, system)
punct(assure, ,)
case(period, during)
det(period, the)
obl(assure, period)
case(desegregation, before)
nmod(period, desegregation)
punct(assure, ,)
advmod(assure, how)
aux(assure, can)
nsubj(assure, we)
root(ROOT, assure)
amod(opportunity, equal)
obj(assure, opportunity)
punct(assure, ?)
punct(assure, ?)
case(fact, in)
obl(assure, fact)
punct(assure, ,)
case(system, in)
det(system, the)
amod(system, desegregate)
compound(system, school)
nmod(fact, system)
nsubj(have, which)
aux(have, may)
acl:relcl(system, have)
det(school, a)
amod(school, good)
amod(school, many)
obj(have, school)
case(population, with)
det(population, all)
punct(Negro, -)
compound(population, Negro)
nmod(school, population)
punct(assure, ,)
advmod(assure, how)
aux(assure, can)
nsubj(assure, we)
root(ROOT, assure)
amod(opportunity, equal)
obj(assure, opportunity)
punct(assure, ?)
punct(assure, ?)
nsubj(problem, this)
cop(problem, be)
det(problem, a)
root(ROOT, problem)
punct(divide, ,)
cc(divide, but)
nsubj(divide, we)
cop(divide, be)
advmod(divide, not)
conj(problem, divide)
case(importance, over)
nmod:poss(importance, its)
obl(divide, importance)
cc(existence, or)
case(existence, by)
nmod:poss(existence, its)
conj(importance, existence)
punct(fifth, .)
appos(importance, fifth)
punct(fifth, ,)
case(system, in)
det(system, the)
amod(system, segregate)
compound(system, school)
nmod(fifth, system)
cc(school, or)
case(school, in)
det(school, the)
det(Negro, all)
punct(Negro, -)
amod(school, Negro)
cc(white, or)
det(white, all)
punct(white, -)
amod(school, white)
conj(system, school)
punct(encourage, ,)
advmod(encourage, how)
aux(encourage, can)
nsubj(encourage, we)
parataxis(school, encourage)
amod(relation, better)
compound(relation, group)
obj(encourage, relation)
cc(attitude, or)
det(attitude, a)
amod(attitude, improve)
conj(relation, attitude)
case(people, toward)
nmod(attitude, people)
nsubj(belong, who)
aux(belong, do)
advmod(belong, not)
acl:relcl(people, belong)
case(group, to)
det(group, the)
obl(belong, group)
punct(problem, ?)
punct(problem, ?)
aux(help, can)
nsubj(help, we)
root(ROOT, help)
obj(help, child)
xcomp(help, adjust)
case(image, to)
punct(image, ``)
obl(adjust, image)
case(child, of)
amod(child, other)
nmod(image, child)
punct(image, '')
mark(present, when)
det(latter, the)
nsubj(present, latter)
cop(present, be)
advmod(present, not)
advmod(present, actually)
advcl(adjust, present)
punct(present, .)
advmod(present, now)
punct(issue, ,)
det(issue, the)
nsubj(present, issue)
mark(have, if)
nsubj(have, we)
advcl(issue, have)
nummod(problem, five)
obj(have, problem)
nmod:poss(solution, whose)
obj(seek, solution)
nsubj(seek, we)
acl:relcl(problem, seek)
case(fashion, in)
advmod(united, relatively)
amod(fashion, united)
obl(seek, fashion)
punct(be, ,)
advmod(be, then)
expl(be, there)
acl:relcl(problem, be)
advmod(many, twice)
advmod(many, as)
amod(issue, many)
nsubj(be, issue)
obj(judge, which)
punct(judge, ,)
nsubj(judge, I)
acl:relcl(issue, judge)
punct(divide, ,)
advmod(divide, sharply)
conj(judge, divide)
obj(divide, we)
punct(practitioner, ,)
amod(relation, intergroup)
compound(practitioner, relation)
obj(divide, practitioner)
cc(lay, and)
conj(divide, lay)
obj(lay, people)
punct(help, .)
root(ROOT, Issue)
discourse(Issue, no)
punct(Issue, .)
nummod(assignment, 1)
punct(assignment, .)
compound(assignment, pupil)
root(ROOT, assignment)
punct(assignment, .)
mark(come, since)
case(hand, on)
det(desegregation, the)
nummod(hand, one)
compound(school, hand)
compound(desegregation, school)
nsubj(come, desegregation)
aux(come, have)
advcl(support, come)
case(hand, in)
compound(hand, Virginia)
obl(come, hand)
punct(hand, -)
case(glove, in)
punct(glove, -)
obl(come, glove)
case(assignment, with)
compound(assignment, pupil)
obl(come, assignment)
punct(support, ,)
aux(support, shall)
nsubj(support, we)
root(ROOT, support)
det(plan, the)
obj(support, plan)
punct(support, ?)
punct(support, ?)
case(basis, on)
det(basis, the)
obl(assign, basis)
case(criterion, of)
compound(assignment, pupil)
compound(criterion, assignment)
nmod(basis, criterion)
punct(assign, ,)
compound(albert, judge)
nsubj(assign, albert)
flat(albert, Bryan)
aux(assign, have)
root(ROOT, assign)
compound(child, Negro)
obj(assign, child)
case(school, to)
advmod(white, formerly)
amod(school, white)
obl(assign, school)
case(Arlington, in)
nmod(school, Arlington)
cc(Alexandria, and)
conj(Arlington, Alexandria)
punct(Arlington, ,)
appos(Arlington, Virginia)
punct(assign, .)
aux(support, shall)
nsubj(support, we)
root(ROOT, support)
compound(assignment, pupil)
obj(support, assignment)
punct(support, ?)
punct(support, ?)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(true, hand)
punct(true, ,)
advcl(true, look)
case(picture, at)
det(picture, the)
amod(picture, larger)
obl(look, picture)
punct(true, ,)
cop(true, be)
expl(true, it)
root(ROOT, true)
mark(cut, that)
compound(assignment, pupil)
nsubj(cut, assignment)
aux(cut, have)
advmod(cut, effectively)
ccomp(true, cut)
compound:prt(cut, off)
punct(block, ,)
conj(cut, block)
punct(desegregation, ,)
cc(desegregation, or)
amod(desegregation, reduce)
compound(desegregation, school)
conj(cut, desegregation)
case(trickle, to)
det(trickle, a)
punct(trickle, ``)
nmod(desegregation, trickle)
punct(trickle, '')
punct(true, ?)
punct(true, ?)
aux(oppose, shall)
nsubj(oppose, we)
advmod(oppose, therefore)
root(ROOT, oppose)
det(plan, the)
obj(oppose, plan)
punct(oppose, ?)
punct(oppose, ?)
det(question, this)
nsubj(issue, question)
cop(issue, be)
det(issue, a)
root(ROOT, issue)
mark(divide, because)
nsubj(divide, it)
advmod(divide, likely)
advcl(issue, divide)
obj(divide, we)
case(camp, into)
nummod(camp, two)
obl(divide, camp)
punct(camp, --)
appos(camp, those)
case(assignment, for)
cc(assignment, or)
conj(for, against)
compound(assignment, pupil)
nmod(those, assignment)
punct(issue, .)
root(ROOT, Issue)
discourse(Issue, no)
punct(Issue, .)
nummod(., 2)
punct(assignment, .)
compound(assignment, teacher)
root(ROOT, assignment)
mark(desegregate, in)
fixed(in, order)
mark(desegregate, to)
acl(assignment, desegregate)
punct(assignment, .)
case(city, in)
amod(city, large)
obl(extend, city)
case(Baltimore, like)
nmod(city, Baltimore)
punct(Louisville, ,)
conj(Baltimore, Louisville)
punct(Washington, ,)
cc(Washington, and)
conj(Baltimore, Washington)
punct(Washington, ,)
conj(Baltimore, D.C.)
punct(extend, ,)
aux(extend, should)
compound(desegregation, school)
nsubj:pass(extend, desegregation)
aux:pass(extend, be)
root(ROOT, extend)
case(Negro, to)
det(Negro, all)
punct(Negro, -)
obl(extend, Negro)
cc(school, and)
det(white, all)
punct(white, -)
amod(school, white)
conj(Negro, school)
mark(assign, by)
advcl(extend, assign)
amod(teacher, white)
cc(Negro, and)
conj(white, Negro)
obj(assign, teacher)
punct(assign, ,)
advmod(assign, respectively)
punct(extend, ?)
punct(extend, ?)
case(hand, on)
det(hand, the)
nummod(hand, one)
obl(argue, hand)
aux(argue, do)
nsubj(argue, we)
root(ROOT, argue)
det(decision, the)
compound(Court, Supreme)
compound(decision, Court)
obj(argue, decision)
acl(decision, require)
advmod(require, only)
mark(deny, that)
det(child, a)
nsubj:pass(deny, child)
advmod(deny, not)
aux:pass(deny, be)
ccomp(require, deny)
obj(deny, admission)
case(school, to)
det(school, a)
nmod(admission, school)
case(account, on)
nmod(school, account)
case(race, of)
nmod:poss(race, he)
nmod(account, race)
punct(argue, ?)
punct(argue, ?)
cc(argue, or)
aux(argue, should)
nsubj(argue, we)
root(ROOT, argue)
mark(provide, that)
mark(want, if)
nsubj(want, we)
advcl(provide, want)
obj(want, adjustment)
case(child, of)
nmod(adjustment, child)
case(child, to)
obl(want, child)
case(race, of)
amod(race, different)
nmod(child, race)
cc(impossible, and)
mark(impossible, that)
nsubj(impossible, that)
cop(impossible, be)
conj(want, impossible)
case(school, in)
det(school, a)
det(something, all)
punct(something, -)
compound(school, something)
punct(something, -)
cc(school, or)
punct(something, -)
det(other, the)
punct(other, -)
amod(school, other)
obl(impossible, school)
punct(provide, ,)
nsubj(provide, we)
aux(provide, must)
case(least, at)
advmod(provide, least)
ccomp(argue, provide)
iobj(provide, he)
det(opportunity, some)
obj(provide, opportunity)
mark(adjust, to)
acl(opportunity, adjust)
case(people, to)
obl(adjust, people)
case(race, of)
det(race, another)
nmod(people, race)
case(school, within)
det(school, the)
nmod(race, school)
punct(adjust, --)
advmod(teacher, namely)
punct(teacher, ,)
case(teacher, to)
det(teacher, a)
obl(adjust, teacher)
case(race, of)
det(race, another)
nmod(teacher, race)
punct(provide, .)
nsubj(argue, we)
aux(argue, can)
root(ROOT, argue)
mark(create, that)
advmod(make, where)
nsubj(make, residence)
advcl(create, make)
obl:npmod(impossible, pupil)
obl:npmod(impossible, desegregation)
amod(assignment, impossible)
compound(assignment, teacher)
nsubj(create, assignment)
aux(create, can)
ccomp(argue, create)
det(situation, a)
advmod(desegregate, partially)
amod(situation, desegregate)
obj(create, situation)
punct(argue, .)
root(ROOT, Issue)
discourse(Issue, no)
punct(Issue, .)
nummod(., 3)
punct(case, .)
det(plaintiff, the)
nsubj(case, plaintiff)
case(case, in)
compound(desegregation, school)
compound(case, desegregation)
root(ROOT, case)
punct(3, .)
det(part, the)
amod(part, earlier)
nsubj(deal, part)
case(statement, of)
nmod:poss(statement, my)
nmod(part, statement)
root(ROOT, deal)
case(order, with)
det(order, the)
compound(order, court)
obl(deal, order)
nsubj(result, that)
acl:relcl(order, result)
case(desegregation, in)
obl(result, desegregation)
punct(deal, .)
case(instance, in)
det(instance, each)
obl(citizen, instance)
det(plaintiff, the)
nsubj(citizen, plaintiff)
cop(citizen, be)
det(citizen, a)
amod(citizen, private)
root(ROOT, citizen)
punct(citizen, .)
case(thousand, in)
obl(come, thousand)
case(district, of)
compound(district, school)
nmod(thousand, district)
punct(come, ,)
advmod(come, indeed)
punct(come, ,)
case(state, in)
det(state, the)
amod(state, entire)
obl(come, state)
case(Mississippi, of)
nmod(state, Mississippi)
punct(come, ,)
det(plaintiff, no)
nsubj(come, plaintiff)
aux(come, have)
root(ROOT, come)
advmod(come, forth)
punct(come, .)
cc(establish, and)
nsubj(establish, I)
aux(establish, have)
root(ROOT, establish)
mark(small, that)
det(action, the)
nsubj(small, action)
case(county, of)
nmod(action, municipal)
punct(county, ,)
conj(municipal, county)
punct(board, ,)
cc(board, or)
compound(school, state)
compound(board, school)
conj(action, board)
cc(board, or)
conj(action, board)
case(education, of)
nmod(board, education)
cop(small, be)
ccomp(establish, small)
punct(small, ,)
advmod(small, infinitesimally)
conj(small, small)
case(comparison, in)
obl(small, comparison)
case(number, with)
det(number, the)
nmod(comparison, number)
case(district, of)
nmod(number, district)
punct(establish, .)
aux(authorize, be)
det(requirement, the)
nsubj(authorize, requirement)
mark(person, that)
det(plaintiff, the)
nsubj(person, plaintiff)
cop(person, be)
det(person, a)
acl(requirement, person)
advmod(deny, actually)
acl:relcl(person, deny)
obj(deny, admission)
case(school, to)
det(school, a)
obl(deny, school)
det(requirement, a)
compound(requirement, sound)
obj(deny, requirement)
punct(authorize, ?)
punct(authorize, ?)
aux(authorize, should)
nsubj(authorize, Congress)
root(ROOT, authorize)
det(Attorney, the)
obj(authorize, Attorney)
flat(Attorney, General)
mark(file, to)
xcomp(authorize, file)
obj(file, suit)
mark(accomplish, to)
advcl(file, accomplish)
obj(accomplish, admission)
case(child, of)
det(child, a)
nmod(admission, child)
case(school, to)
det(school, a)
obl(accomplish, school)
case(which, to)
obl(deny, which)
nsubj:pass(deny, he)
aux:pass(deny, be)
acl:relcl(school, deny)
xcomp(deny, entrance)
punct(authorize, ?)
punct(authorize, ?)
advmod(legislation, even)
mark(legislation, though)
case(legislation, in)
amod(rights, civil)
compound(legislation, rights)
obl(eliminate, legislation)
case(1957, in)
nmod(legislation, 1957)
cc(1960, and)
conj(1957, 1960)
det(provision, the)
nsubj:pass(eliminate, provision)
case(Attorney, for)
det(Attorney, the)
nmod(provision, Attorney)
flat(Attorney, General)
case(act, to)
nmod(provision, act)
aux:pass(eliminate, be)
advcl(support, eliminate)
punct(support, ,)
aux(support, should)
nsubj(support, we)
advmod(support, nevertheless)
root(ROOT, support)
det:predet(clause, such)
det(clause, a)
obj(support, clause)
punct(support, ?)
punct(support, ?)
nsubj(issue, this)
cop(issue, be)
det(issue, a)
root(ROOT, issue)
punct(issue, ,)
mark(divide, for)
nsubj(divide, it)
advcl(issue, divide)
obj(divide, people)
advmod(divide, rather)
fixed(rather, sharply)
punct(issue, .)
root(ROOT, Issue)
discourse(Issue, no)
punct(Issue, .)
nummod(., 4)
punct(withhold, .)
root(ROOT, withhold)
case(fund, of)
nmod(withhold, fund)
case(school, to)
nmod(fund, school)
nsubj(deny, that)
acl:relcl(withhold, deny)
obj(deny, child)
case(account, on)
obl(deny, account)
case(race, of)
nmod(account, race)
punct(withhold, .)
nsubj(amendment, this)
cop(amendment, be)
det(amendment, the)
compound(amendment, Powell)
root(ROOT, amendment)
punct(amendment, ,)
nsubj(divide, which)
case(1957, in)
obl(divide, 1957)
acl:relcl(amendment, divide)
advmod(group, even)
det(group, a)
punct(group, ``)
amod(group, liberal)
punct(group, '')
obj(divide, group)
case(Committee, like)
det(Committee, the)
compound(Committee, American)
compound(Committee, Veterans)
nmod(group, Committee)
punct(AVC, ()
appos(Committee, AVC)
punct(AVC, ))
punct(support, .)
aux(support, should)
nsubj(support, we)
parataxis(amendment, support)
det(clause, a)
obj(support, clause)
case(construction, in)
amod(construction, federal)
compound(construction, school)
nmod(clause, construction)
cc(legislation, or)
compound(assistance, school)
compound(legislation, assistance)
conj(construction, legislation)
nsubj(deny, that)
aux(deny, would)
acl:relcl(legislation, deny)
amod(fund, federal)
obj(deny, fund)
case(district, to)
det(district, a)
compound(district, school)
obl(deny, district)
nsubj(deny, that)
acl:relcl(district, deny)
obj(deny, admission)
case(child, to)
det(child, a)
nmod(admission, child)
case(account, on)
obl(deny, account)
case(race, of)
nmod:poss(race, he)
nmod(account, race)
punct(amendment, ?)
punct(amendment, ?)
nsubj(softer, this)
cop(softer, be)
root(ROOT, softer)
case(amendment, than)
amod(amendment, earlier)
compound(amendment, Powell)
obl(softer, amendment)
nsubj(deny, which)
aux(deny, would)
aux(deny, have)
acl:relcl(amendment, deny)
obj(deny, fund)
case(district, to)
det(district, all)
amod(district, segregate)
compound(district, school)
obl(deny, district)
punct(softer, .)
expl(be, there)
root(ROOT, be)
advmod(be, nonetheless)
amod(argument, considerable)
nsubj(be, argument)
case(clause, against)
det(clause, the)
nmod(argument, clause)
punct(be, ,)
acl(argument, soften)
mark(be, though)
nsubj(be, it)
advcl(soften, be)
punct(be, ,)
case(grounds, on)
det(grounds, the)
obl(be, grounds)
mark(necessary, that)
amod(aid, federal)
nsubj(necessary, aid)
cop(necessary, be)
advmod(necessary, so)
acl(grounds, necessary)
case(school, to)
det(school, the)
amod(school, public)
obl(necessary, school)
punct(be, .)
det(limitation, the)
amod(fund, federal)
compound(limitation, fund)
nsubj(enlist, limitation)
root(ROOT, enlist)
det(support, the)
obj(enlist, support)
case(many, of)
nmod(support, many)
punct(support, ,)
det(opposition, the)
conj(support, opposition)
case(few, of)
det:predet(few, quite)
det(few, a)
nmod(opposition, few)
punct(enlist, .)
root(ROOT, Issue)
discourse(Issue, no)
punct(Issue, .)
nummod(require, 5)
punct(5, .)
amod(education, require)
amod(education, public)
nsubj:pass(require, education)
punct(5, .)
aux(require, should)
det(subdivision, a)
amod(subdivision, political)
nsubj:pass(require, subdivision)
punct(state, ,)
conj(subdivision, state)
cc(county, or)
conj(subdivision, county)
cc(municipality, or)
conj(subdivision, municipality)
punct(require, ,)
aux:pass(require, be)
root(ROOT, require)
mark(furnish, to)
xcomp(require, furnish)
amod(education, public)
obj(furnish, education)
punct(require, ?)
root(ROOT, ?)
