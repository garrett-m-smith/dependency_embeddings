det(importance, the)
nsubj:pass(explain, importance)
case(5, of)
det(5, this)
nmod(importance, 5)
aux(explain, can)
advmod(explain, largely)
aux:pass(explain, be)
root(ROOT, explain)
case(property, by)
det(property, the)
amod(property, natural)
amod(property, mathematical)
obl(explain, property)
case(number, of)
det(number, the)
amod(number, middle)
nmod(property, number)
cc(relationship, and)
nmod:poss(relationship, its)
amod(relationship, special)
conj(number, relationship)
case(rest, to)
det:predet(rest, all)
det(rest, the)
nmod(relationship, rest)
case(number, of)
det(number, the)
nmod(rest, number)
punct(relationship, --)
advmod(apart, quite)
advmod(rest, apart)
case(consideration, from)
det(consideration, any)
amod(consideration, numerological)
obl(apart, consideration)
punct(consideration, ,)
nsubj(be, which)
acl:relcl(consideration, be)
mark(say, to)
ccomp(be, say)
punct(say, ,)
det(meaning, any)
amod(meaning, symbolic)
obj(say, meaning)
advmod(assign, arbitrarily)
acl(meaning, assign)
case(it, to)
obl(assign, it)
punct(explain, .)
advmod(number, indeed)
punct(number, ,)
advmod(speak, mathematically)
advcl(number, speak)
punct(number, ,)
nsubj(functionally, it)
cop(number, be)
advmod(functionally, both)
advmod(number, functionally)
cc(number, and)
advmod(number, symbolically)
det(number, the)
advmod(important, most)
amod(number, important)
root(ROOT, number)
case(diagram, in)
det(diagram, the)
amod(diagram, entire)
nmod(number, diagram)
punct(number, .)
mark(take, if)
nsubj(take, one)
advcl(15, take)
det(number, the)
amod(number, middle)
obj(take, number)
punct(5, ,)
appos(number, 5)
punct(multiply, ,)
cc(multiply, and)
conj(take, multiply)
obj(multiply, it)
case(3, by)
obl(multiply, 3)
punct(number, ()
det(number, the)
compound(number, base)
obj(multiply, number)
case(square, of)
det(square, the)
compound(square, magic)
nmod(number, square)
case(three, of)
nmod(square, three)
punct(number, ))
punct(15, ,)
det(result, the)
nsubj(15, result)
cop(15, be)
root(ROOT, 15)
punct(15, ,)
nsubj(sum, which)
cop(sum, be)
advmod(sum, also)
det(sum, the)
amod(sum, constant)
acl:relcl(15, sum)
case(row, of)
det:predet(row, all)
det(row, the)
nmod(sum, row)
punct(column, ,)
conj(row, column)
punct(diagonal, ,)
cc(diagonal, and)
nummod(diagonal, two)
amod(diagonal, main)
conj(row, diagonal)
punct(15, .)
advmod(45, then)
punct(45, ,)
mark(activate, if)
det(number, the)
amod(number, middle)
nsubj:pass(activate, number)
aux:pass(activate, be)
advcl(45, activate)
case(potential, to)
nmod:poss(potential, its)
amod(potential, greatest)
obl(activate, potential)
case(term, in)
nmod(potential, term)
case(square, of)
det(square, this)
nmod(term, square)
punct(multiply, ,)
mark(multiply, through)
advcl(activate, multiply)
obj(multiply, it)
case(number, by)
det(number, the)
amod(number, highest)
obl(multiply, number)
punct(number, ,)
appos(number, 9)
punct(square, ()
nsubj(square, which)
cop(square, be)
det(square, the)
acl:relcl(9, square)
case(number, of)
det(number, the)
compound(number, base)
nmod(square, number)
punct(square, ))
punct(45, ,)
det(result, the)
nsubj(45, result)
cop(45, be)
root(ROOT, 45)
punct(45, ;)
punct(45, ;)
cc(sum, and)
det(latter, the)
nsubj(sum, latter)
cop(sum, be)
det(sum, the)
amod(sum, total)
conj(45, sum)
case(number, of)
det:predet(number, all)
det(number, the)
nmod(sum, number)
case(square, in)
det(square, the)
nmod(number, square)
punct(sum, ,)
case(which, by)
obl(overshadowed, which)
det:predet(number, all)
det(number, the)
amod(number, other)
nsubj:pass(overshadowed, number)
aux:pass(overshadowed, be)
acl:relcl(number, overshadowed)
cc(say, and)
case(which, in)
obl(say, which)
nsubj:pass(say, they)
aux(say, may)
aux:pass(say, be)
conj(overshadowed, say)
mark(absorb, to)
aux:pass(absorb, be)
xcomp(say, absorb)
punct(45, . )
advmod(mean, furthermore)
punct(mean, ,)
det(number, the)
amod(number, middle)
nsubj(mean, number)
case(shu, of)
det(shu, the)
compound(shu, lo)
nmod(number, shu)
cop(mean, be)
advmod(mean, not)
advmod(mean, only)
det(mean, the)
amod(mean, physical)
root(ROOT, mean)
case(pair, between)
det(pair, every)
amod(pair, oppose)
nmod(mean, pair)
case(number, of)
det(number, the)
amod(number, other)
nmod(pair, number)
punct(mean, ,)
case(reason, by)
obl(mean, reason)
case(position, of)
nmod:poss(position, its)
amod(position, central)
nmod(reason, position)
punct(mean, ;)
punct(mean, ;)
nsubj(mean, it)
cop(mean, be)
advmod(mean, also)
nmod:poss(mean, they)
amod(mean, mathematical)
parataxis(mean, mean)
punct(mean, ,)
mark(equal, since)
nsubj(equal, it)
cop(equal, be)
advcl(mean, equal)
case(sum, to)
det:predet(sum, half)
det(sum, the)
obl(equal, sum)
case(pair, of)
det(pair, every)
amod(pair, oppose)
nmod(sum, pair)
punct(pair, ,)
appos(sum, all)
case(which, of)
nmod(all, which)
acl:relcl(all, equal)
obj(equal, 10)
punct(mean, .)
case(fact, in)
obl(have, fact)
punct(have, ,)
det(balance, the)
amod(balance, neat)
nsubj(have, balance)
case(pair, of)
det(pair, these)
nmod(balance, pair)
punct(equilibrium, ,)
cc(equilibrium, and)
nmod:poss(equilibrium, they)
amod(equilibrium, subtle)
conj(balance, equilibrium)
punct(have, ,)
aux(have, would)
aux(have, have)
root(ROOT, have)
amod(meaning, special)
obj(have, meaning)
case(mind, in)
det(mind, the)
obl(have, mind)
case(chinese, of)
det(chinese, the)
amod(chinese, old)
nmod(mind, chinese)
punct(have, .)
mark(consider, for)
nsubj(consider, they)
root(ROOT, consider)
det(number, the)
amod(number, odd)
obj(consider, number)
case(male, as)
nmod(number, male)
cc(one, and)
det(one, the)
amod(one, even)
conj(male, one)
case(female, as)
nmod(one, female)
punct(equate, ,)
advcl(consider, equate)
det(group, the)
nummod(group, two)
obj(equate, group)
case(principle, with)
det(principle, the)
compound(principle, Yang)
cc(yin, and)
conj(Yang, yin)
nmod(group, principle)
case(Nature, in)
nmod(principle, Nature)
punct(equate, ;)
punct(make, ;)
cc(make, and)
case(square, in)
det(square, this)
obl(make, square)
punct(make, ,)
det(pair, the)
amod(pair, respective)
nsubj(make, pair)
conj(consider, make)
compound:prt(make, up)
case(number, of)
amod(number, large)
cc(small, and)
conj(large, small)
amod(number, odd)
punct(Yang, ()
compound(number, Yang)
punct(Yang, ))
obl(make, number)
punct(equal, ,)
cc(equal, and)
nsubj(equal, those)
acl(those, compose)
case(large, of)
obl(compose, large)
cc(small, and)
conj(large, small)
advmod(yin, even)
punct(yin, ()
compound(number, yin)
punct(yin, ))
obl(compose, number)
punct(equal, ,)
cop(equal, be)
advmod(equal, all)
conj(make, equal)
case(other, to)
det(other, each)
obl(equal, other)
punct(consider, .)
advmod(level, thus)
det(difference, all)
nsubj:pass(level, difference)
aux:pass(level, be)
root(ROOT, level)
punct(symbolize, ,)
cc(symbolize, and)
det(contrast, all)
nsubj(symbolize, contrast)
acl(contrast, erase)
punct(erase, ,)
case(realm, in)
det(realm, a)
obl(erase, realm)
case(distinction, of)
det(distinction, no)
nmod(realm, distinction)
punct(symbolize, ,)
cc(symbolize, and)
det(balance, the)
amod(balance, harmonious)
nsubj(symbolize, balance)
case(square, of)
det(square, the)
compound(square, lo)
compound(square, shu)
nmod(balance, square)
aux(symbolize, could)
advmod(symbolize, effectively)
conj(level, symbolize)
det(world, the)
obj(symbolize, world)
case(harmony, in)
amod(harmony, balance)
obl(symbolize, harmony)
case(axis, around)
det(axis, a)
amod(axis, powerful)
amod(axis, central)
nmod(harmony, axis)
punct(level, .)
det(emphasis, the)
amod(emphasis, tremendous)
root(ROOT, emphasis)
case(5, on)
det(5, the)
nmod(emphasis, 5)
case(square, in)
det(square, the)
compound(square, lo)
compound(square, shu)
nmod(emphasis, square)
punct(square, --)
case(reason, for)
advmod(reason, purely)
amod(reason, mathematical)
nmod(square, reason)
punct(fact, --)
cc(fact, and)
det(fact, the)
conj(reason, fact)
mark(symbolize, that)
det(number, this)
nsubj(symbolize, number)
advmod(neatly, so)
advmod(symbolize, neatly)
acl(fact, symbolize)
det(heart, the)
obj(symbolize, heart)
cc(center, and)
conj(heart, center)
case(universe, of)
det(universe, the)
nmod(heart, universe)
punct(explain, ,)
aux(explain, could)
advmod(explain, well)
acl(fact, explain)
advmod(seem, why)
det(chinese, the)
amod(chinese, old)
nsubj(seem, chinese)
ccomp(explain, seem)
mark(rever, to)
aux(rever, have)
advmod(rever, so)
xcomp(seem, rever)
det(number, the)
obj(rever, number)
nummod(number, 5)
punct(put, ,)
cc(put, and)
advmod(put, why)
nsubj(put, they)
conj(seem, put)
advmod(much, so)
amod(stress, much)
obj(put, stress)
case(concept, on)
det(concept, the)
obl(put, concept)
case(centrality, of)
nmod(concept, centrality)
punct(explain, .)
det(tendency, these)
amod(tendency, twin)
nsubj(seem, tendency)
root(ROOT, seem)
mark(reach, to)
aux(reach, have)
xcomp(seem, reach)
nmod:poss(height, they)
obj(reach, height)
case(dynasty, in)
det(dynasty, the)
compound(dynasty, han)
obl(reach, dynasty)
punct(seem, .)
det(reverence, the)
amod(reverence, exist)
nsubj:pass(stimulate, reverence)
case(centrality, for)
nmod(reverence, centrality)
aux(stimulate, must)
aux(stimulate, have)
aux:pass(stimulate, be)
advmod(stimulate, still)
advmod(stimulate, further)
root(ROOT, stimulate)
case(close, toward)
det(close, the)
obl(stimulate, close)
case(century, of)
det(century, the)
amod(century, second)
nmod(close, century)
nmod(close, B.C.)
punct(stimulate, ,)
mark(order, when)
det(han, the)
compound(emperor, han)
compound(Wu, emperor)
compound(ti, Wu)
nsubj(order, ti)
advcl(stimulate, order)
det(color, the)
amod(color, dynastic)
obj(order, color)
xcomp(order, change)
case(yellow, to)
obl(change, yellow)
punct(change, --)
nsubj(symbolize, which)
acl:relcl(color, symbolize)
det(Center, the)
obj(symbolize, Center)
case(direction, among)
det(direction, the)
amod(direction, traditional)
nummod(direction, five)
nmod(Center, direction)
punct(symbolize, --)
cc(take, and)
conj(symbolize, take)
obj(take, 5)
case(number, as)
det(number, the)
compound(number, dynastic)
obl(take, number)
punct(take, ,)
advcl(take, believe)
mark(place, that)
nsubj(place, he)
aux(place, would)
advmod(place, thus)
ccomp(believe, place)
obj(place, himself)
punct(family, ,)
nmod:poss(family, he)
amod(family, imperial)
conj(himself, family)
punct(nation, ,)
cc(nation, and)
det(nation, the)
conj(himself, nation)
case(influence, under)
det(influence, the)
advmod(auspicious, most)
amod(influence, auspicious)
nmod(nation, influence)
punct(stimulate, .)
nmod:poss(motive, he)
amod(motive, immediate)
nsubj:pass(inspire, motive)
mark(do, for)
acl(motive, do)
obj(do, this)
aux(inspire, may)
advmod(inspire, not)
aux(inspire, have)
aux:pass(inspire, be)
advmod(inspire, directly)
root(ROOT, inspire)
case(lo, by)
det(lo, the)
obl(inspire, lo)
obl(inspire, shu)
punct(increase, ,)
cc(increase, but)
det(measure, this)
nsubj(increase, measure)
aux(increase, must)
advmod(increase, inevitably)
aux(increase, have)
conj(inspire, increase)
det(belief, the)
amod(belief, exist)
obj(increase, belief)
case(efficacy, in)
det(latter, the)
nmod:poss(efficacy, latter)
case(latter, 's)
nmod(belief, efficacy)
punct(inspire, .)
case(time, after)
det(time, this)
obl(emphasize, time)
punct(emphasize, ,)
nsubj(emphasize, inscription)
case(mirror, on)
det(mirror, the)
compound(mirror, han)
compound(mirror, bronze)
nmod(inscription, mirror)
punct(writings, ,)
cc(writings, as)
fixed(as, well)
fixed(as, as)
amod(writings, other)
conj(inscription, writings)
punct(emphasize, ,)
root(ROOT, emphasize)
det(desirability, the)
obj(emphasize, desirability)
mark(keep, of)
acl(desirability, keep)
nmod:poss(self, one)
case(one, 's)
obj(keep, self)
case(center, at)
det(center, the)
obl(keep, center)
case(universe, of)
det(universe, the)
nmod(center, universe)
punct(universe, ,)
advmod(strongest, where)
amod(force, cosmic)
nsubj(strongest, force)
cop(strongest, be)
acl:relcl(universe, strongest)
punct(emphasize, .)
advmod(see, later)
punct(see, ,)
nsubj(see, we)
aux(see, shall)
root(ROOT, see)
nsubj(happen, what)
ccomp(see, happen)
mark(take, when)
det(emperor, a)
nsubj(take, emperor)
advcl(happen, take)
det(idea, this)
obj(take, idea)
advmod(literally, too)
advmod(take, literally)
punct(see, .)
det:predet(emphasis, all)
det(emphasis, this)
nsubj(lead, emphasis)
case(centrality, on)
nmod(emphasis, centrality)
cc(number, and)
case(number, on)
det(number, the)
conj(emphasis, number)
nummod(number, 5)
case(expression, as)
det(expression, a)
amod(expression, symbolic)
nmod(number, expression)
case(Center, of)
det(Center, the)
nmod(expression, Center)
punct(expression, ,)
nsubj(seem, which)
acl:relcl(expression, seem)
mark(begin, to)
aux(begin, have)
xcomp(seem, begin)
advmod(far, as)
advmod(begin, far)
advmod(begin, back)
case(B.C., as)
nummod(B.C., 400)
obl(back, B.C.)
punct(lead, ,)
advmod(lead, also)
aux(lead, may)
advmod(lead, conceivably)
aux(lead, have)
root(ROOT, lead)
case(development, to)
det(development, the)
obl(lead, development)
case(school, of)
det(school, the)
nummod(Elements, five)
punct(Elements, -)
compound(school, Elements)
nmod(development, school)
cc(effort, and)
det(effort, the)
amod(effort, subsequent)
conj(school, effort)
mark(fit, to)
acl(effort, fit)
obj(fit, everything)
case(category, into)
amod(category, numerical)
obl(fit, category)
case(five, of)
nmod(category, five)
punct(lead, .)
nsubj(find, we)
root(ROOT, find)
punct(find, ,)
case(example, for)
nmod(grouping, example)
punct(grouping, ,)
amod(grouping, such)
obj(find, grouping)
case(Rulers, as)
det(Rulers, the)
nummod(Rulers, five)
amod(Rulers, ancient)
nmod(grouping, Rulers)
punct(Mountains, ,)
det(Mountains, the)
nummod(Mountains, five)
amod(Mountains, Sacred)
conj(Rulers, Mountains)
punct(direction, ,)
det(direction, the)
nummod(direction, five)
conj(grouping, direction)
punct(direction, ()
case(Center, with)
nmod(direction, Center)
punct(Center, ))
punct(Metals, ,)
det(Metals, the)
nummod(Metals, five)
conj(grouping, Metals)
punct(Colors, ,)
nummod(Colors, five)
conj(Metals, Colors)
punct(Tastes, ,)
nummod(Tastes, five)
conj(Metals, Tastes)
punct(odor, ,)
nummod(odor, five)
conj(grouping, odor)
punct(Notes, ,)
nummod(Notes, five)
amod(Notes, Musical)
conj(Metals, Notes)
punct(function, ,)
nummod(function, five)
compound(function, bodily)
conj(grouping, function)
punct(Viscera, ,)
nummod(Viscera, five)
conj(grouping, Viscera)
punct(other, ,)
cc(other, and)
amod(other, many)
conj(grouping, other)
punct(find, .)
det(trend, this)
nsubj:pass(ascribe, trend)
aux(ascribe, have)
advmod(ascribe, often)
aux:pass(ascribe, be)
root(ROOT, ascribe)
case(cult, to)
det(cult, the)
obl(ascribe, cult)
case(Elements, of)
det(Elements, the)
nummod(Elements, five)
nmod(cult, Elements)
nmod:npmod(Elements, itself)
punct(ascribe, ,)
mark(serve, as)
mark(serve, though)
nsubj(serve, they)
aux(serve, have)
advcl(ascribe, serve)
case(base, as)
det(base, the)
obl(serve, base)
case(rest, for)
det:predet(rest, all)
det(rest, the)
nmod(base, rest)
punct(ascribe, ;)
punct(ascribe, ;)
cc(postulate, but)
advmod(postulate, why)
aux(postulate, do)
det(chinese, the)
amod(chinese, old)
nsubj(postulate, chinese)
conj(ascribe, postulate)
nummod(element, five)
obj(postulate, element)
punct(element, ,)
mark(East, when)
det(East, the)
compound(East, ancient)
compound(East, Near)
nsubj(initiate, East)
punct(East, --)
nsubj(initiate, which)
aux(initiate, may)
aux(initiate, have)
acl:relcl(element, initiate)
det(idea, the)
obj(initiate, idea)
mark(exert, that)
amod(element, natural)
nsubj(exert, element)
acl(idea, exert)
obj(exert, influence)
case(life, in)
amod(life, human)
nmod(influence, life)
cc(activity, and)
conj(life, activity)
punct(exert, --)
advcl(exert, recognize)
advmod(four, only)
obj(recognize, four)
punct(ascribe, ?)
punct(ascribe, ?)
cc(begin, and)
advmod(begin, why)
aux(begin, do)
det(chinese, the)
nsubj(begin, chinese)
advmod(begin, suddenly)
root(ROOT, begin)
mark(talk, to)
xcomp(begin, talk)
case(direction, about)
det(direction, the)
nummod(direction, five)
obl(talk, direction)
punct(talk, ,)
mark(use, when)
det(animal, the)
nsubj(use, animal)
nsubj(use, they)
advcl(talk, use)
case(symbol, as)
obl(use, symbol)
case(direction, of)
det(direction, the)
nmod(symbol, direction)
acl(direction, designate)
advmod(four, only)
det(four, the)
amod(four, usual)
obj(designate, four)
punct(begin, ?)
punct(begin, ?)
advmod(cause, obviously)
punct(cause, ,)
nsubj(cause, something)
advmod(cause, suddenly)
root(ROOT, cause)
obj(cause, they)
mark(start, to)
xcomp(cause, start)
xcomp(start, think)
case(term, in)
obl(think, term)
case(fives, of)
nmod(term, fives)
punct(working, ,)
cc(working, and)
nsubj(working, that)
aux(working, may)
aux(working, have)
cop(working, be)
det(working, the)
conj(cause, working)
case(shu, of)
det(lo, the)
compound(shu, lo)
nmod(working, shu)
punct(have, .)
det(tendency, this)
amod(tendency, whole)
nsubj(have, tendency)
parataxis(working, have)
det(effect, a)
amod(effect, unfortunate)
obj(have, effect)
case(thinking, on)
amod(thinking, chinese)
nmod(effect, thinking)
punct(have, .)
mark(seem, whereas)
det(meaning, the)
amod(meaning, primary)
nsubj(seem, meaning)
case(diagram, of)
det(diagram, the)
compound(diagram, lo)
compound(diagram, shu)
nmod(meaning, diagram)
advcl(have, seem)
mark(base, to)
aux(base, have)
aux:pass(base, be)
xcomp(seem, base)
case(property, on)
nmod:poss(property, its)
amod(property, inner)
amod(property, mathematical)
obl(base, property)
punct(cause, --)
cc(see, and)
nsubj(see, we)
aux(see, shall)
conj(cause, see)
mark(rest, that)
advmod(meaning, even)
nmod:poss(meaning, its)
amod(meaning, secondary)
nsubj(rest, meaning)
ccomp(see, rest)
case(basis, on)
det(basis, some)
amod(basis, mathematical)
obl(rest, basis)
punct(rest, --)
det(desire, the)
amod(desire, urgent)
appos(basis, desire)
mark(place, to)
acl(desire, place)
obj(place, everything)
case(category, into)
obl(place, category)
case(fives, of)
nmod(category, fives)
acl(fives, lead)
case(grouping, to)
amod(grouping, other)
obl(lead, grouping)
case(number, base)
case(number, on)
amod(number, other)
obl(lead, number)
punct(pervaded, ,)
mark(pervaded, until)
det(emphasis, a)
amod(emphasis, exaggerate)
nsubj(pervaded, emphasis)
case(numerology, on)
amod(numerology, mere)
nmod(emphasis, numerology)
acl(number, pervaded)
amod(thought, chinese)
obj(pervaded, thought)
punct(make, .)
nsubj(make, Scholars)
parataxis(pervaded, make)
amod(set, number)
obj(make, set)
case(thing, of)
advmod(many, as)
amod(thing, many)
nmod(set, thing)
mark(possible, as)
acl(thing, possible)
case(Nature, in)
obl(possible, Nature)
punct(assign, ,)
cc(assign, or)
conj(possible, assign)
amod(number, arbitrary)
obj(assign, number)
case(thing, to)
amod(thing, individual)
nmod(number, thing)
punct(number, ,)
case(fashion, in)
det(fashion, a)
nmod(number, fashion)
nsubj(seem, that)
acl:relcl(fashion, seem)
case(mind, to)
det(mind, the)
amod(mind, modern)
amod(mind, scientific)
obl(seem, mind)
case(nonsensical, as)
advmod(nonsensical, downright)
amod(mind, nonsensical)
punct(idea, ,)
cc(philosophical, and)
amod(idea, philosophical)
nmod(mind, idea)
mark(tend, base)
case(all, upon)
det(this, all)
nsubj(tend, this)
acl:relcl(idea, tend)
mark(stifle, to)
xcomp(tend, stifle)
amod(thought, speculative)
obj(stifle, thought)
case(China, in)
obl(stifle, China)
case(century, for)
amod(century, many)
obl(stifle, century)
punct(cause, . )
nummod(., 3)
punct(yin, .)
root(ROOT, yin)
cc(Yang, and)
conj(yin, Yang)
case(the, in)
nmod(yin, the)
punct(yin, ``)
discourse(shu, lo)
compound(square, shu)
punct(shu, '')
nsubj(beginning, square)
mark(seem, although)
det(property, the)
amod(property, primary)
amod(property, mathematical)
nsubj(seem, property)
case(number, of)
det(number, the)
amod(number, middle)
nmod(property, number)
case(center, at)
det(center, the)
nmod(number, center)
case(shu, of)
det(lo, the)
nmod(center, lo)
nmod(center, shu)
punct(interrelation, ,)
cc(interrelation, and)
det(interrelation, the)
conj(property, interrelation)
case(number, of)
det:predet(number, all)
det(number, the)
amod(number, other)
nmod(interrelation, number)
case(it, to)
nmod(number, it)
punct(seem, ,)
aux(seem, might)
acl:relcl(square, seem)
xcomp(seem, enough)
mark(account, to)
advcl(enough, account)
case(fascination, for)
det(fascination, the)
amod(fascination, deep)
obl(account, fascination)
obj(hold, which)
det(shu, the)
nsubj(hold, lo)
nsubj(hold, shu)
acl:relcl(fascination, hold)
case(philosopher, for)
det(philosopher, the)
amod(philosopher, old)
amod(philosopher, chinese)
obl(hold, philosopher)
punct(beginning, ,)
nsubj(beginning, this)
cop(beginning, be)
advmod(beginning, actually)
advmod(beginning, only)
det(beginning, a)
root(ROOT, beginning)
case(wonder, of)
nmod(beginning, wonder)
punct(beginning, .)
case(square, for)
det(square, the)
compound(square, lo)
compound(square, shu)
nsubj(compendium, square)
cop(compendium, be)
det(compendium, a)
advmod(complete, remarkably)
amod(compendium, complete)
root(ROOT, compendium)
case(most, of)
nmod(compendium, most)
case(idea, of)
det(idea, the)
amod(idea, chief)
amod(idea, religious)
cc(philosophical, and)
conj(religious, philosophical)
nmod(most, idea)
case(time, of)
nmod:poss(time, its)
nmod(idea, time)
punct(compendium, .)
case(such, as)
obl(understand, such)
punct(understand, ,)
nsubj(understand, one)
aux(understand, can)
advmod(understand, not)
advmod(understand, fully)
root(ROOT, understand)
det(thought, the)
obj(understand, thought)
case(period, of)
det(period, the)
amod(period, pre-Han)
cc(han, and)
conj(pre-Han, han)
nmod(thought, period)
mark(know, without)
advcl(understand, know)
det(meaning, the)
obj(know, meaning)
amod(meaning, inherent)
case(shu, in)
det(shu, the)
compound(shu, lo)
obl(inherent, shu)
punct(understand, ;)
punct(understand, ;)
cc(begin, but)
punct(begin, ,)
advmod(begin, conversely)
punct(begin, ,)
nsubj(begin, one)
aux(begin, can)
advmod(begin, not)
parataxis(understand, begin)
mark(understand, to)
xcomp(begin, understand)
det(lo, the)
obj(understand, lo)
obj(understand, shu)
mark(know, without)
advcl(understand, know)
obj(know, something)
case(view, about)
det(view, the)
compound(view, world)
nmod(something, view)
case(chinese, of)
det(chinese, the)
amod(chinese, old)
nmod(view, chinese)
punct(chinese, ,)
obj(feel, which)
nsubj(feel, they)
acl:relcl(chinese, feel)
nsubj(express, they)
aux(express, see)
ccomp(feel, express)
case(it, in)
obl(express, it)
punct(view, .)
det(view, the)
amod(view, chinese)
compound(view, world)
obj(express, view)
case(dynasty, during)
det(dynasty, the)
compound(dynasty, han)
nmod(view, dynasty)
punct(view, ,)
mark(seem, when)
det(lo, the)
nsubj(seem, lo)
nsubj(seem, shu)
acl:relcl(view, seem)
mark(height, to)
aux(height, have)
cop(height, be)
case(height, at)
det(height, the)
xcomp(seem, height)
case(popularity, of)
nmod:poss(popularity, its)
nmod(height, popularity)
punct(base, ,)
aux:pass(base, be)
advcl(height, base)
case(part, in)
amod(part, large)
obl(base, part)
case(teaching, on)
det(teaching, the)
nmod(part, teaching)
case(Yang, of)
det(Yang, the)
nmod(teaching, yin)
punct(Yang, -)
flat(yin, Yang)
cc(School, and)
nummod(Elements, five)
punct(Elements, -)
compound(School, Elements)
conj(Yang, School)
punct(School, ,)
nsubj:pass(found, which)
aux:pass(found, be)
advmod(found, traditionally)
acl:relcl(School, found)
case(tsou, by)
obl(found, tsou)
flat(tsou, yen)
punct(found, .)
case(doctrine, accord)
fixed(accord, to)
det(doctrine, this)
obl(rule, doctrine)
punct(rule, ,)
det(universe, the)
nsubj:pass(rule, universe)
aux:pass(rule, be)
parataxis(understand, rule)
case(Heaven, by)
obl(rule, Heaven)
punct(Heaven, ,)
appos(Heaven, T'ien)
punct(Heaven, --)
case(force, as)
det(force, a)
amod(force, natural)
nmod(Heaven, force)
punct(personification, ,)
cc(personification, or)
case(personification, in)
det(personification, the)
conj(force, personification)
case(sky, of)
det(sky, a)
compound(sky, Supreme)
compound(god, sky)
punct(god, -)
nmod(personification, god)
punct(god, --)
acl(god, govern)
det(thing, all)
obj(govern, thing)
case(means, by)
nmod(thing, means)
case(process, of)
det(process, a)
nmod(means, process)
acl(process, call)
det(Tao, the)
obj(call, Tao)
punct(Tao, ,)
nsubj:pass(interpret, which)
aux(interpret, can)
aux:pass(interpret, be)
advmod(interpret, roughly)
acl:relcl(process, interpret)
case(Order, as)
punct(Order, ``)
det(Order, the)
obl(interpret, Order)
case(Universe, of)
det(Universe, the)
nmod(Order, Universe)
punct(Order, '')
cc(Way, or)
punct(Way, ``)
det(Way, the)
compound(Way, Universal)
conj(Order, Way)
punct(Way, '')
punct(Way, .)
appos(Way, Heaven)
punct(Heaven, ,)
acl(Heaven, act)
case(Tao, through)
det(Tao, the)
obl(act, Tao)
punct(express, ,)
acl(Tao, express)
obj(express, itself)
case(means, by)
obl(express, means)
case(working, of)
det(working, the)
nmod(means, working)
case(principle, of)
nummod(principle, two)
amod(principle, basic)
nmod(working, principle)
punct(yin, ,)
det(yin, the)
conj(principle, yin)
cc(Yang, and)
det(Yang, the)
conj(yin, Yang)
punct(yin, .)
det(Yang, the)
appos(principle, Yang)
punct(principle, ,)
cc(principle, or)
amod(principle, male)
conj(Yang, principle)
punct(source, ,)
cop(source, be)
det(source, the)
conj(Yang, source)
case(light, of)
nmod(source, light)
punct(heat, ,)
conj(light, heat)
punct(vitality, ,)
cc(vitality, and)
amod(vitality, dynamic)
conj(light, vitality)
punct(light, ,)
acl(light, associate)
case(Sun, with)
det(Sun, the)
obl(associate, Sun)
punct(light, ;)
punct(source, ;)
mark(flourish, while)
det(yin, the)
nsubj(flourish, yin)
punct(principle, ,)
cc(principle, or)
amod(principle, female)
conj(yin, principle)
punct(flourish, ,)
conj(source, flourish)
case(darkness, in)
obl(flourish, darkness)
punct(cold, ,)
conj(darkness, cold)
punct(inactivity, ,)
cc(quiet, and)
amod(inactivity, quiet)
conj(darkness, inactivity)
punct(associate, ,)
cc(associate, and)
aux:pass(associate, be)
conj(flourish, associate)
case(Moon, with)
det(Moon, the)
obl(associate, Moon)
punct(associate, .)
advmod(principle, together)
det(principle, these)
nummod(principle, two)
nsubj:pass(associate, principle)
acl(principle, influence)
det(thing, all)
obj(influence, thing)
punct(present, ,)
cc(present, and)
case(combination, in)
amod(combination, varying)
obl(present, combination)
nsubj(present, they)
cop(present, be)
acl:relcl(principle, present)
case(everything, in)
obl(present, everything)
punct(understand, .)
nsubj(see, we)
aux(see, have)
advmod(see, already)
root(ROOT, see)
mark(consider, that)
amod(number, odd)
nsubj:pass(consider, number)
aux:pass(consider, be)
ccomp(see, consider)
mark(Yang, as)
cop(Yang, be)
advcl(consider, Yang)
punct(consider, ,)
mark(yin, while)
det(number, the)
compound(number, even)
nsubj(yin, number)
cop(yin, be)
advcl(consider, yin)
punct(yin, ,)
mark(represent, so)
fixed(so, that)
det(number, the)
nummod(number, eight)
amod(number, outer)
nsubj(represent, number)
case(shu, of)
det(shu, the)
nmod(number, lo)
nmod(number, shu)
advcl(consider, represent)
det(principle, these)
nummod(principle, two)
obj(represent, principle)
case(equilibrium, in)
amod(equilibrium, balance)
nmod(principle, equilibrium)
case(center, around)
det(center, the)
amod(center, axial)
nmod(equilibrium, center)
punct(equilibrium, .)
case(dynasty, during)
det(dynasty, the)
compound(dynasty, han)
obl(apply, dynasty)
punct(apply, ,)
det(conception, another)
compound(conception, yin)
compound(conception, EYang)
nsubj:pass(apply, conception)
aux:pass(apply, be)
ccomp(see, apply)
case(lo, to)
det(lo, the)
obl(apply, lo)
flat(lo, shu)
punct(apply, ,)
advcl(apply, consider)
det(latter, the)
obj(consider, latter)
case(plan, as)
det(plan, a)
obl(consider, plan)
case(China, of)
compound(China, ancient)
nmod(plan, China)
punct(see, .)
mark(link, instead)
mark(link, of)
advcl(equate, link)
det(number, the)
nummod(number, nine)
obj(link, number)
case(diagram, of)
det(diagram, this)
nmod(number, diagram)
case(province, with)
det(province, the)
amod(province, traditional)
nummod(province, Nine)
nmod(diagram, province)
punct(equate, ,)
mark(do, as)
aux:pass(do, be)
advmod(do, usually)
advcl(equate, do)
punct(equate, ,)
nsubj(equate, this)
root(ROOT, equate)
det(number, the)
amod(number, odd)
punct(number, ,)
compound(number, Yang)
obj(equate, number)
case(mountain, with)
nmod(number, mountain)
punct(firm, ()
amod(number, firm)
cc(resistant, and)
conj(firm, resistant)
punct(firm, ,)
advmod(Yang, hence)
conj(firm, Yang)
punct(Yang, ))
cc(number, and)
det(number, the)
advmod(number, even)
conj(firm, number)
case(river, with)
nmod(number, river)
punct(sinuous, ()
appos(river, sinuous)
cc(yield, and)
conj(sinuous, yield)
punct(sinuous, ,)
advmod(yin, hence)
conj(sinuous, yin)
punct(sinuous, ))
punct(sinuous, ;)
punct(sinuous, ;)
conj(sinuous, take)
det(former, the)
obj(take, former)
case(Mountains, from)
det(Mountains, the)
nummod(Mountains, five)
compound(Mountains, Sacred)
obl(former, Mountains)
case(period, of)
det(period, the)
compound(period, han)
nmod(Mountains, period)
cc(latter, and)
det(latter, the)
conj(Mountains, latter)
case(system, from)
det(system, the)
amod(system, principal)
compound(system, river)
nmod(latter, system)
case(China, of)
compound(China, old)
nmod(system, China)
punct(equate, .)
advmod(number, thus)
det(number, the)
amod(number, middle)
root(ROOT, number)
punct(number, ,)
nummod(number, 5)
punct(number, ,)
amod(Shan, represent)
compound(Shan, Sung)
punct(Shan, -)
appos(number, Shan)
case(Honan, in)
nmod(Shan, Honan)
punct(Shan, ,)
compound(China, Central)
appos(Honan, China)
punct(Shan, ;)
punct(Shan, ;)
det(3, the)
nummod(Shan, 3)
punct(Shan, ,)
compound(Shan, T'ai-)
conj(Shan, Shan)
case(Shantung, in)
nmod(Shan, Shantung)
punct(China, ,)
compound(China, East)
appos(Shantung, China)
punct(Shan, ;)
punct(Shan, ;)
det(Shan, the)
nummod(Shan, 7)
punct(Shan, ,)
compound(Shan, hwa)
punct(Shan, -)
conj(number, Shan)
case(shensi, in)
nmod(Shan, shensi)
punct(China, ,)
compound(China, West)
appos(shensi, China)
punct(Shan, ;)
punct(Shan, ;)
det(Shan, the)
nummod(Shan, 1)
punct(Shan, ,)
compound(Shan, hang)
punct(Shan, -)
conj(number, Shan)
case(Hopei, in)
nmod(Shan, Hopei)
punct(China, ,)
compound(China, North)
conj(Hopei, China)
punct(China, ()
cc(mountain, or)
det(mountain, the)
conj(China, mountain)
case(name, with)
det(name, the)
amod(name, same)
nmod(mountain, name)
mark(neighbor, in)
acl(name, neighbor)
obj(neighbor, Shansi)
punct(neighbor, ))
punct(name, ;)
punct(name, ;)
cc(9, and)
det(9, the)
nummod(Shan, 9)
punct(9, ,)
compound(Shan, Huo)
punct(Shan, -)
conj(number, Shan)
case(Anhwei, in)
nmod(Shan, Anhwei)
punct(Shan, ,)
nsubj(Mountain, which)
cop(Mountain, be)
advmod(Mountain, then)
det(Mountain, the)
compound(Mountain, South)
compound(Mountain, Sacred)
acl:relcl(Shan, Mountain)
punct(Mountain, .)
case(river, for)
det(river, the)
obl(Mountain, river)
punct(represent, ,)
det(4, the)
nsubj(represent, 4)
parataxis(Mountain, represent)
det(Huai, the)
obj(represent, Huai)
punct(represent, ,)
case(then, to)
det(then, the)
punct(then, ()
advmod(represent, then)
punct(then, ))
root(ROOT, Southeast)
punct(Southeast, ;)
punct(Southeast, ;)
det(2, the)
appos(Southeast, 2)
punct(2, ,)
det(San, the)
appos(2, San)
flat(San, Kiang)
punct(river, ()
nummod(river, three)
appos(San, river)
punct(river, ))
case(the, in)
det(then, the)
punct(then, ()
parataxis(Southeast, then)
punct(river, ))
root(ROOT, Southwest)
punct(Southwest, ;)
punct(Southwest, ;)
det(8, the)
nummod(Chi, 8)
punct(Chi, ,)
det(Chi, the)
appos(Southwest, Chi)
case(Northeast, in)
det(Northeast, the)
nmod(Chi, Northeast)
punct(Southwest, ;)
punct(Southwest, ;)
cc(6, and)
det(6, the)
conj(Chi, 6)
punct(upper, ,)
det(upper, the)
punct(upper, ()
appos(6, upper)
punct(upper, ))
compound(River, yellow)
root(ROOT, River)
case(Northwest, in)
det(Northwest, the)
nmod(River, Northwest)
punct(River, .)
root(ROOT, note)
mark(upside, that)
case(standard, by)
amod(standard, western)
obl(upside, standard)
det(plan, this)
nsubj(upside, plan)
cop(upside, be)
punct(upside, ``)
ccomp(note, upside)
advmod(upside, down)
punct(upside, '')
punct(upside, ,)
mark(put, as)
nsubj(put, it)
advcl(upside, put)
obj(put, North)
case(bottom, at)
det(bottom, the)
obl(put, bottom)
cc(South, and)
conj(bottom, South)
case(top, at)
det(top, the)
obl(put, top)
punct(put, ,)
mark(alter, with)
det(direction, the)
amod(direction, other)
nsubj(alter, direction)
advmod(alter, correspondingly)
advcl(put, alter)
punct(note, ;)
punct(note, ;)
cc(follow, but)
case(respect, in)
det(respect, this)
obl(follow, respect)
nsubj(follow, it)
aux(follow, be)
advmod(follow, merely)
conj(note, follow)
det(convention, the)
amod(convention, accept)
amod(convention, chinese)
obj(follow, convention)
case(map, for)
det(map, all)
nmod(convention, map)
punct(note, .)
det(arrangement, the)
amod(arrangement, same)
nsubj:pass(use, arrangement)
aux:pass(use, be)
root(ROOT, use)
mark(equate, when)
det(shu, the)
nsubj:pass(equate, lo)
nsubj:pass(equate, shu)
aux:pass(equate, be)
advcl(use, equate)
case(province, with)
det(province, the)
nummod(province, Nine)
obl(equate, province)
punct(use, ;)
punct(use, ;)
cc(oriented, and)
mark(involve, whenever)
det(lo, the)
nsubj(involve, lo)
nsubj(involve, shu)
advcl(oriented, involve)
amod(symbolism, directional)
obj(involve, symbolism)
punct(oriented, ,)
nsubj(oriented, it)
cop(oriented, be)
conj(use, oriented)
case(fashion, in)
det(fashion, this)
amod(fashion, same)
obl(oriented, fashion)
punct(oriented, .)
amod(person, few)
nsubj(insincere, person)
nsubj(join, who)
acl:relcl(person, join)
det(Church, the)
obj(join, Church)
cop(insincere, be)
conj(oriented, insincere)
punct(use, .)
nsubj(desire, they)
advmod(desire, earnestly)
root(ROOT, desire)
mark(do, to)
xcomp(desire, do)
det(will, the)
obj(do, will)
case(God, of)
nmod(will, God)
punct(desire, .)
mark(fall, when)
nsubj(fall, they)
advcl(indictment, fall)
case(wayside, by)
det(wayside, the)
obl(fall, wayside)
cc(fail, and)
conj(fall, fail)
mark(achieve, to)
xcomp(fail, achieve)
amod(stature, christian)
obj(achieve, stature)
punct(indictment, ,)
nsubj(indictment, it)
cop(indictment, be)
det(indictment, a)
conj(desire, indictment)
case(Church, of)
det(Church, the)
nmod(indictment, Church)
punct(desire, .)
det(fatality, these)
nsubj(evidence, fatality)
cop(evidence, be)
amod(evidence, dramatic)
root(ROOT, evidence)
case(evangelism, of)
punct(evangelism, ``)
compound(evangelism, halfway)
nmod(evidence, evangelism)
punct(evangelism, '')
punct(evidence, ,)
det(failure, a)
appos(evidence, failure)
mark(follow, to)
acl(failure, follow)
advmod(follow, through)
punct(evidence, . )
det(program, a)
nsubj(end, program)
case(Evangelism, of)
compound(Evangelism, Lay)
compound(Evangelism, visitation)
nmod(program, Evangelism)
aux(end, can)
root(ROOT, end)
case(defeat, in)
amod(defeat, dismal)
obl(end, defeat)
case(member, with)
det:predet(member, half)
det(member, the)
amod(member, new)
obl(end, member)
acl(member, drift)
advmod(drift, away)
mark(make, unless)
amod(plan, practical)
nsubj:pass(make, plan)
cc(effort, and)
amod(effort, strenuous)
conj(plan, effort)
aux:pass(make, be)
advcl(end, make)
mark(keep, to)
xcomp(make, keep)
obj(keep, they)
case(fellowship, in)
det(fellowship, the)
amod(fellowship, active)
obl(keep, fellowship)
punct(end, .)
det(work, the)
nsubj:pass(complete, work)
case(Evangelism, of)
compound(Evangelism, Lay)
compound(Evangelism, visitation)
nmod(work, Evangelism)
aux:pass(complete, be)
advmod(complete, not)
root(ROOT, complete)
mark(interview, when)
nsubj:pass(interview, all)
case(person, of)
det(person, the)
nmod(all, person)
case(list, on)
det(list, the)
compound(list, responsibility)
nmod(person, list)
aux(interview, have)
aux:pass(interview, be)
advcl(complete, interview)
punct(complete, .)
case(situation, in)
det(situation, the)
amod(situation, average)
obl(follow, situation)
advmod(third, about)
nummod(third, one)
punct(third, -)
nmod(situation, third)
case(those, of)
nmod(third, those)
acl(those, visit)
xcomp(visit, make)
obj(make, commitment)
case(Christ, to)
nmod(commitment, Christ)
cc(Church, and)
det(Church, the)
conj(Christ, Church)
punct(follow, .)
det(pastor, the)
nsubj(follow, pastor)
cc(Committee, and)
det(preparation, the)
compound(preparation, Membership)
conj(pastor, preparation)
cc(Committee, and)
compound(Committee, assimilation)
conj(pastor, Committee)
aux(follow, must)
root(ROOT, follow)
advmod(follow, through)
advmod(follow, immediately)
case(program, with)
det(program, a)
advmod(plan, carefully)
amod(program, plan)
obl(follow, program)
punct(follow, .)
det(day, the)
amod(day, first)
nummod(day, thirty)
case(sixty, to)
nmod(thirty, sixty)
obl:tmod(make, day)
mark(make, after)
nsubj(make, individual)
advcl(mean, make)
nmod:poss(decision, they)
obj(make, decision)
aux(determine, will)
ccomp(make, determine)
nmod:poss(interest, they)
obj(determine, interest)
cc(participation, and)
conj(interest, participation)
case(life, in)
det(life, the)
nmod(interest, life)
case(church, of)
det(church, the)
nmod(life, church)
punct(mean, .)
nsubj(mean, Neglect)
root(ROOT, mean)
amod(paralysis, spiritual)
obj(mean, paralysis)
cc(death, or)
conj(paralysis, death)
punct(mean, .)
root(ROOT, preparation)
case(church, for)
compound(church, membership)
nmod(preparation, church)
nsubj(have, that)
acl:relcl(church, have)
det(program, a)
advmod(plan, carefully)
amod(program, plan)
obj(have, program)
case(preparation, of)
compound(preparation, membership)
nmod(program, preparation)
cc(assimilation, and)
conj(preparation, assimilation)
advmod(keep, often)
parataxis(preparation, keep)
nummod(cent, 85)
case(90, to)
nmod(85, 90)
compound(cent, per)
obj(keep, cent)
case(member, of)
nmod:poss(member, they)
amod(member, new)
nmod(cent, member)
amod(member, loyal)
cc(active, and)
conj(loyal, active)
punct(keep, .)
nsubj(answer, this)
cop(answer, be)
det(answer, the)
root(ROOT, answer)
case(problem, to)
det(problem, the)
nmod(answer, problem)
case(delinquency, of)
punct(delinquency, ``)
compound(delinquency, membership)
nmod(problem, delinquency)
punct(delinquency, '')
punct(answer, .)
expl(important, it)
cop(important, be)
root(ROOT, important)
mark(prepare, that)
nsubj:pass(prepare, person)
acl(person, desire)
mark(unite, to)
xcomp(desire, unite)
case(church, with)
det(church, the)
obl(unite, church)
aux:pass(prepare, be)
csubj(important, prepare)
case(experience, for)
det(experience, this)
obl(prepare, experience)
mark(meaningful, so)
fixed(so, that)
nsubj(meaningful, it)
aux(meaningful, may)
cop(meaningful, be)
advcl(prepare, meaningful)
cc(significant, and)
advmod(significant, spiritually)
conj(meaningful, significant)
punct(important, .)
nsubj(unfair, it)
cop(unfair, be)
root(ROOT, unfair)
cc(unchristian, and)
conj(unfair, unchristian)
mark(ask, to)
csubj(unfair, ask)
det(person, a)
obj(ask, person)
mark(take, to)
xcomp(ask, take)
det(vow, the)
amod(vow, sacred)
obj(take, vow)
case(membership, of)
compound(membership, church)
nmod(vow, membership)
mark(instruct, before)
nsubj:pass(instruct, he)
aux(instruct, have)
aux:pass(instruct, be)
advmod(instruct, carefully)
advcl(take, instruct)
case(implication, concern)
nmod:poss(implication, they)
obl(instruct, implication)
punct(unfair, .)
nsubj(begin, preparation)
case(membership, for)
compound(membership, church)
nmod(preparation, membership)
root(ROOT, begin)
advmod(begin, immediately)
mark(receive, after)
det(commitment, the)
nsubj:pass(receive, commitment)
aux:pass(receive, be)
advcl(begin, receive)
punct(begin, . )
nummod(write, 1)
punct(1, ))
det(pastor, the)
nsubj(write, pastor)
root(ROOT, write)
det(letter, a)
amod(letter, personal)
obj(write, letter)
case(individual, to)
det(individual, each)
obl(write, individual)
punct(write, ,)
advcl(write, express)
nmod:poss(joy, he)
obj(express, joy)
case(decision, over)
det(decision, the)
obl(express, decision)
punct(express, ,)
conj(express, assure)
obj(assure, he)
case(call, of)
det(call, a)
amod(call, pastoral)
obl(assure, call)
case(time, at)
det(time, the)
amod(time, earliest)
amod(time, convenient)
nmod(call, time)
punct(outlining, ,)
cc(outlining, and)
conj(assure, outlining)
det(plan, the)
obj(outlining, plan)
case(class, for)
compound(class, membership)
compound(class, preparation)
nmod(plan, class)
cc(Membership, and)
conj(class, Membership)
conj(class, Sunday)
punct(write, .)
det(pastor, some)
nsubj(write, pastor)
root(ROOT, write)
det(letter, a)
obj(write, letter)
det(night, the)
amod(night, same)
obl:tmod(write, night)
det(decision, the)
nsubj:pass(report, decision)
aux:pass(report, be)
acl:relcl(letter, report)
case(visitor, by)
det(visitor, the)
obl(report, visitor)
punct(write, .)
nsubj:pass(postpone, it)
aux(postpone, should)
advmod(postpone, not)
aux:pass(postpone, be)
root(ROOT, postpone)
advmod(postpone, later)
case(day, than)
det(day, the)
amod(day, next)
obl(postpone, day)
punct(postpone, . )
det(leaflet, a)
amod(leaflet, helpful)
nsubj:pass(enclose, leaflet)
aux(enclose, may)
aux:pass(enclose, be)
root(ROOT, enclose)
case(letter, in)
det(letter, the)
obl(enclose, letter)
punct(enclose, . )
nummod(call, 2)
punct(2, ))
det(pastor, the)
nsubj(call, pastor)
root(ROOT, call)
case(home, in)
det(home, the)
obl(call, home)
case(individual, of)
det(individual, each)
nmod(home, individual)
cc(family, or)
conj(individual, family)
case(conference, for)
det(conference, a)
amod(conference, spiritual)
compound(conference, guidance)
nmod(individual, conference)
punct(call, .)
mark(possible, if)
advcl(make, possible)
punct(make, ,)
nsubj(make, he)
aux(make, should)
root(ROOT, make)
det(appointment, a)
obj(make, appointment)
mark(present, in)
fixed(in, order)
mark(present, that)
det(person, all)
nsubj(involve, person)
advcl(present, involve)
aux(present, may)
cop(present, be)
ccomp(make, present)
punct(make, .)
nsubj(call, this)
cop(call, be)
advmod(call, not)
det(call, a)
amod(call, social)
root(ROOT, call)
punct(call, .)
nsubj(conference, it)
cop(conference, be)
advmod(conference, definitely)
det(conference, a)
punct(conference, ``)
amod(conference, spiritual)
compound(conference, guidance)
root(ROOT, conference)
punct(conference, '')
punct(conference, .)
nsubj(discuss, he)
aux(discuss, will)
parataxis(conference, discuss)
det(significance, the)
obj(discuss, significance)
case(commitment, of)
amod(commitment, christian)
nmod(significance, commitment)
punct(necessity, ,)
det(necessity, the)
conj(commitment, necessity)
case(religion, of)
compound(religion, family)
nmod(necessity, religion)
cc(devotion, and)
amod(devotion, private)
conj(religion, devotion)
punct(importance, ,)
cc(importance, and)
det(importance, the)
conj(commitment, importance)
case(session, of)
det(session, the)
compound(session, membership)
compound(session, preparation)
nmod(importance, session)
punct(conference, .)
expl(be, there)
aux(be, may)
root(ROOT, be)
nsubj(be, problem)
case(conduct, of)
nmod(problem, conduct)
cc(question, or)
conj(conduct, question)
case(belief, of)
nmod(question, belief)
nsubj(require, which)
aux(require, will)
acl:relcl(problem, require)
nmod:poss(counsel, he)
obj(require, counsel)
punct(be, .)
det(conference, each)
nsubj:pass(conclude, conference)
aux(conclude, should)
aux:pass(conclude, be)
root(ROOT, conclude)
advmod(conclude, naturally)
case(prayer, with)
obl(conclude, prayer)
punct(conclude, . )
det(piece, a)
nsubj:pass(leave, piece)
case(material, of)
amod(material, devotional)
nmod(piece, material)
punct(material, ,)
case(room, such)
fixed(such, as)
det(room, the)
compound(room, upper)
nmod(piece, room)
punct(leave, ,)
aux(leave, may)
aux:pass(leave, be)
root(ROOT, leave)
case(home, in)
det(home, each)
obl(leave, home)
punct(leave, . )
nummod(necessary, 3)
punct(3, ))
det(minimum, a)
nsubj(necessary, minimum)
case(session, of)
nummod(session, four)
nmod(minimum, session)
case(preparation, of)
nmod(session, preparation)
case(membership, for)
nmod(preparation, membership)
cop(necessary, be)
root(ROOT, necessary)
case(adult, for)
obl(necessary, adult)
punct(necessary, .)
det(church, some)
nsubj(require, church)
root(ROOT, require)
obj(require, more)
punct(require, .)
nsubj(ask, none)
aux(ask, should)
root(ROOT, ask)
obj(ask, less)
punct(ask, .)
nsubj(need, those)
nsubj(join, who)
acl:relcl(those, join)
det(Church, the)
obj(join, Church)
root(ROOT, need)
mark(instruct, to)
aux:pass(instruct, be)
xcomp(need, instruct)
case(faith, in)
det(faith, the)
obl(instruct, faith)
cc(meaning, and)
det(meaning, the)
conj(faith, meaning)
case(discipleship, of)
amod(discipleship, christian)
nmod(meaning, discipleship)
mark(take, before)
nsubj(take, they)
advcl(instruct, take)
det(vow, the)
amod(vow, sacred)
obj(take, vow)
punct(need, .)
nsubj(have, they)
aux(have, will)
root(ROOT, have)
det(appreciation, a)
amod(appreciation, greater)
obj(have, appreciation)
case(church, for)
det(church, the)
nmod(appreciation, church)
cc(devotion, and)
det(devotion, a)
amod(devotion, deeper)
conj(appreciation, devotion)
case(it, to)
nmod(devotion, it)
mark(require, if)
nsubj(require, membership)
advcl(have, require)
obj(require, something)
case(they, of)
nmod(something, they)
punct(have, .)
amod(church, many)
nsubj(find, church)
root(ROOT, find)
det(hour, the)
compound(hour, Sunday)
compound(hour, school)
obj(find, hour)
mark(time, to)
cop(time, be)
det(time, the)
advmod(practical, most)
amod(time, practical)
acl(hour, time)
case(class, for)
amod(preparation, adult)
compound(class, preparation)
nmod(time, class)
punct(find, .)
nsubj(meet, other)
root(ROOT, meet)
case(night, on)
compound(night, Sunday)
obl(meet, night)
punct(meet, ,)
case(service, at)
det(service, the)
compound(service, mid-week)
obl(meet, service)
punct(series, ,)
cc(series, or)
case(series, for)
det(series, a)
conj(service, series)
case(night, of)
nummod(night, four)
nmod(series, night)
punct(meet, .)
det(pastor, some)
nsubj(have, pastor)
root(ROOT, have)
nummod(session, two)
obj(have, session)
case(evening, in)
nummod(evening, one)
obl(have, evening)
punct(have, ,)
case(period, with)
det(period, a)
compound(period, refreshment)
obl(have, period)
nmod(period, between)
punct(have, .)
det(session, the)
nsubj(cover, session)
aux(cover, should)
root(ROOT, cover)
nummod(area, four)
amod(area, major)
obj(cover, area)
punct(area, :)
appos(area, A)
punct(cover, --)
det(Faith, the)
compound(Faith, Christian)
root(ROOT, Faith)
punct(Faith, ;)
punct(Faith, ;)
appos(Faith, B)
punct(Faith, --)
root(ROOT, history)
case(church, of)
det(church, the)
nmod(history, church)
punct(history, ;)
punct(history, ;)
parataxis(history, C)
punct(history, --)
root(ROOT, duty)
case(Membership, of)
compound(Membership, church)
nmod(duty, Membership)
punct(duty, ;)
punct(duty, ;)
parataxis(duty, D)
punct(duty, --)
det(church, the)
amod(church, local)
nsubj:pass(hand, church)
cc(program, and)
nmod:poss(program, its)
conj(church, program)
punct(church, .)
case(period, follow)
det(period, each)
compound(period, instruction)
nmod(church, period)
det(piece, a)
nsubj:pass(hand, piece)
case(literature, of)
nmod(piece, literature)
acl(piece, deal)
case(topic, with)
det(topic, the)
obl(deal, topic)
aux(hand, should)
aux:pass(hand, be)
root(ROOT, hand)
det(one, each)
obj(hand, one)
case(reading, for)
amod(reading, further)
obl(hand, reading)
case(week, during)
det(week, the)
nmod(reading, week)
punct(effective, .)
det(procedure, this)
nsubj(effective, procedure)
cop(effective, be)
advmod(more, much)
advmod(effective, more)
parataxis(hand, effective)
mark(give, than)
advcl(effective, give)
compound:prt(give, out)
det(packet, a)
compound(packet, membership)
obj(give, packet)
punct(session, .)
amod(session, Fourth)
appos(packet, session)
amod(pastor, important)
amod(pastor, most)
nsubj(find, pastor)
acl:relcl(session, find)
mark(take, that)
det(session, the)
amod(session, fourth)
nsubj(take, session)
aux(take, should)
ccomp(find, take)
case(least, at)
nmod(two, least)
nummod(hour, two)
obl:tmod(take, hour)
cc(hold, and)
advmod(hold, therefore)
conj(take, hold)
obj(hold, it)
case(night, on)
det(night, a)
compound(night, week)
obl(hold, night)
case(reception, prior)
fixed(prior, to)
obl(hold, reception)
obl(hold, Sunday)
punct(hand, .)
case(session, in)
det(session, this)
obl(provide, session)
det(person, the)
nsubj:pass(provide, person)
acl(person, seek)
obj(seek, membership)
aux:pass(provide, be)
root(ROOT, provide)
obj(provide, information)
case(work, concern)
det(work, the)
nmod(information, work)
case(denomination, of)
det(denomination, the)
nmod(work, denomination)
cc(program, as)
fixed(as, well)
fixed(as, as)
det(program, the)
conj(work, program)
cc(activity, and)
conj(program, activity)
case(church, of)
det(church, the)
amod(church, local)
nmod(activity, church)
punct(provide, .)
det(leadership, the)
amod(leadership, lay)
nsubj:pass(invite, leadership)
case(church, of)
det(church, the)
nmod(leadership, church)
aux(invite, may)
aux:pass(invite, be)
root(ROOT, invite)
mark(speak, to)
xcomp(invite, speak)
case(phase, on)
det(phase, the)
amod(phase, various)
obl(speak, phase)
case(life, of)
compound(life, church)
nmod(phase, life)
punct(opportunity, ,)
compound(opportunity, service)
conj(life, opportunity)
punct(school, ,)
det(school, the)
compound(school, church)
conj(life, school)
punct(mission, ,)
conj(life, mission)
punct(man, ,)
nmod:poss(work, man)
case(man, 's)
conj(phase, work)
punct(work, ,)
nmod:poss(work, woman)
case(woman, 's)
conj(work, work)
punct(program, ,)
compound(program, youth)
conj(life, program)
punct(activity, ,)
amod(activity, social)
conj(life, activity)
punct(finances, ,)
cc(finances, and)
conj(life, finances)
punct(invite, .)
det(budget, the)
nsubj:pass(present, budget)
case(church, of)
det(church, the)
nmod(budget, church)
aux(present, may)
aux:pass(present, be)
root(ROOT, present)
cc(pledge, and)
conj(present, pledge)
conj(present, solicited)
case(session, at)
det(session, this)
obl(solicited, session)
punct(present, .)
det(finder, a)
punct(finder, ``)
compound(finder, interest)
nsubj:pass(fill, finder)
punct(finder, '')
cc(sheet, or)
punct(sheet, ``)
compound(sheet, talent)
conj(finder, sheet)
punct(sheet, '')
aux(fill, may)
aux:pass(fill, be)
root(ROOT, fill)
compound:prt(fill, out)
case(person, by)
det(person, each)
obl(fill, person)
punct(fill, . )
root(ROOT, ()
root(ROOT, see)
obj(see, sample)
case(pp., on)
obl(see, pp.)
nummod(pp., 78)
case(79, -)
nmod(78, 79)
punct(see, .)
punct(see, ))
det(session, the)
amod(session, fourth)
nsubj:pass(conclude, session)
aux(conclude, may)
aux:pass(conclude, be)
root(ROOT, conclude)
case(tour, with)
det(tour, a)
obl(conclude, tour)
case(facility, of)
det(facility, the)
compound(facility, church)
nmod(tour, facility)
cc(refreshment, and)
conj(facility, refreshment)
punct(conclude, .)
det(time, the)
amod(time, social)
nsubj(give, time)
root(ROOT, give)
det(opportunity, a)
obj(give, opportunity)
case(leader, for)
compound(leader, church)
nmod(opportunity, leader)
mark(become, to)
advcl(give, become)
xcomp(become, acquainted)
case(member, with)
det(member, the)
amod(member, new)
obl(acquainted, member)
punct(give, .)
amod(suggestion, additional)
root(ROOT, suggestion)
case(preparation, for)
compound(preparation, membership)
nmod(suggestion, preparation)
mark(conduct, in)
acl(preparation, conduct)
det(inquirer, the)
compound(inquirer, Membership)
compound(inquirer, preparation)
punct(inquirer, -)
obj(conduct, inquirer)
punct(inquirer, ')
vocative(plan, Class)
punct(plan, ,)
det(pastor, the)
nsubj(plan, pastor)
aux(plan, should)
root(ROOT, plan)
det(variety, a)
obj(plan, variety)
case(technique, of)
compound(technique, teaching)
nmod(variety, technique)
mark(develop, in)
fixed(in, order)
mark(develop, to)
advcl(plan, develop)
amod(interest, greater)
obj(develop, interest)
case(part, on)
det(part, the)
nmod(interest, part)
case(class, of)
det(class, the)
nmod(part, class)
punct(plan, .)
det(follow, the)
nsubj:pass(find, follow)
aux(find, have)
aux:pass(find, be)
root(ROOT, find)
xcomp(find, effective)
punct(find, . )
nummod(extend, 1)
punct(1, ))
root(ROOT, extend)
det(number, the)
obj(extend, number)
case(class, of)
nmod(number, class)
punct(extend, .)
det(church, some)
nsubj(have, church)
root(ROOT, have)
nummod(session, six)
cc(more, or)
conj(six, more)
compound(session, training)
obj(have, session)
case(hour, of)
nummod(hour, two)
nmod(session, hour)
appos(session, each)
punct(have, ,)
advmod(hold, generally)
acl(session, hold)
case(night, on)
compound(night, Sunday)
obl(hold, night)
cc(week, or)
case(week, during)
det(week, the)
obl(give, week)
punct(give, .)
nsubj(give, this)
conj(have, give)
amod(opportunity, greater)
obj(give, opportunity)
case(process, for)
det(process, the)
compound(process, learning)
nmod(opportunity, process)
punct(2, . )
nummod(use, 2)
punct(2, ))
acl:relcl(process, use)
obj(use, dramatization)
punct(use, --)
case(example, for)
obl(use, example)
punct(use, ,)
mark(discuss, in)
advcl(use, discuss)
det(Lord, the)
nmod:poss(Supper, Lord)
case(Lord, 's)
obj(discuss, Supper)
cc(symbolism, or)
compound(symbolism, church)
conj(Supper, symbolism)
punct(have, . )
nummod(use, 3)
punct(3, ))
root(ROOT, use)
obl:npmod(visual, audio)
punct(visual, -)
amod(aid, visual)
obj(use, aid)
punct(use, .)
det(filmstrip, some)
amod(filmstrip, excellent)
nsubj:pass(secure, filmstrip)
case(recording, with)
nmod(filmstrip, recording)
cc(picture, and)
compound(picture, motion)
conj(recording, picture)
aux(secure, may)
aux:pass(secure, be)
root(ROOT, secure)
case(headquarters, from)
nmod:poss(headquarters, you)
amod(headquarters, denominational)
obl(secure, headquarters)
mark(enrich, to)
advcl(secure, enrich)
det(session, the)
compound(session, class)
obj(enrich, session)
punct(secure, . )
nummod(have, 4)
punct(4, ))
root(ROOT, have)
obj(have, a)
punct(have, ``)
compound(box, question)
root(ROOT, box)
punct(box, '')
punct(box, .)
det(member, some)
amod(member, new)
nsubj(hesitate, member)
aux(hesitate, will)
parataxis(box, hesitate)
mark(ask, to)
xcomp(hesitate, ask)
obj(ask, question)
advmod(ask, audibly)
punct(box, .)
root(ROOT, urge)
obj(urge, they)
mark(write, to)
xcomp(urge, write)
compound:prt(write, out)
nmod:poss(question, they)
obj(write, question)
case(box, for)
det(box, the)
obl(write, box)
punct(5, .)
nummod(use, 5)
punct(5, ))
parataxis(urge, use)
det(textbook, a)
obj(use, textbook)
case(reading, with)
amod(reading, assign)
nmod(textbook, reading)
det(week, each)
obl:tmod(use, week)
punct(urge, . )
nummod(Select, 6)
punct(6, ))
root(ROOT, Select)
compound(member, class)
obj(Select, member)
case(report, for)
nmod(member, report)
case(phase, on)
amod(phase, various)
obl(Select, phase)
case(study, of)
det(study, the)
nmod(phase, study)
punct(Select, . )
nummod(conduct, 7)
punct(7, ))
root(ROOT, conduct)
obj(conduct, examination)
punct(conduct, ,)
advcl(conduct, use)
det(sheet, a)
amod(false, true)
punct(false, -)
amod(sheet, false)
compound(sheet, check)
obj(use, sheet)
punct(conduct, . )
nummod(ask, 8)
punct(8, ))
root(ROOT, ask)
det(member, each)
obj(ask, member)
mark(write, to)
acl(member, write)
det(statement, a)
obj(write, statement)
case(topic, on)
amod(topic, such)
nmod(statement, topic)
nmod(topic, as)
punct(ask, :)
punct(ask, ``)
root(ROOT, what)
flat(what, Christ)
root(ROOT, means)
case(I, to)
obl(means, I)
punct(means, '')
punct(means, ,)
punct(means, ``)
obj(means, what)
det(church, the)
nsubj(means, church)
root(ROOT, means)
case(I, to)
obl(means, I)
punct(means, '')
punct(means, ,)
punct(means, ``)
advmod(Join, why)
root(ROOT, Join)
det(church, the)
obj(Join, church)
punct(Join, '')
punct(Join, ,)
punct(Join, ``)
det(duty, the)
nsubj(assign, duty)
case(member, of)
compound(member, church)
nmod(duty, member)
punct(member, '')
punct(etc., ,)
advmod(member, etc.)
punct(9, .)
nummod(assign, 9)
punct(9, ))
root(ROOT, assign)
det(series, a)
obj(assign, series)
case(question, of)
compound(question, catechism)
nmod(series, question)
mark(memorize, to)
aux:pass(memorize, be)
acl(question, memorize)
punct(assign, .)
nummod(invite, 10)
punct(10, ))
root(ROOT, invite)
compound(member, class)
obj(invite, member)
mark(share, to)
xcomp(invite, share)
case(period, in)
det(period, a)
amod(period, extra)
obl(share, period)
case(study, of)
compound(study, Bible)
nmod(period, study)
det(week, each)
obl:tmod(share, week)
punct(invite, .)
nummod(ask, 11)
punct(11, ))
root(ROOT, ask)
det(member, each)
amod(member, new)
obj(ask, member)
mark(bring, to)
acl(member, bring)
nmod:poss(Pledge, he)
obj(bring, Pledge)
case(Loyalty, of)
nmod(Pledge, Loyalty)
case(service, to)
det(service, the)
compound(service, reception)
obl(bring, service)
punct(ask, .)
root(ROOT, what)
case(transfer, about)
nmod(what, transfer)
punct(what, ?)
punct(what, ?)
expl(be, there)
root(ROOT, be)
det(conviction, a)
amod(conviction, grow)
nsubj(be, conviction)
case(pastor, among)
nmod(conviction, pastor)
cc(leader, and)
compound(leader, church)
conj(pastor, leader)
obj(need, that)
det:predet(those, all)
nsubj(need, those)
nsubj(come, who)
acl:relcl(those, come)
case(fellowship, into)
det(fellowship, the)
obl(come, fellowship)
case(Church, of)
det(Church, the)
nmod(fellowship, Church)
acl:relcl(conviction, need)
amod(training, preparatory)
obj(need, training)
punct(training, ,)
case(those, include)
nmod(training, those)
acl(those, come)
case(transfer, by)
obl(come, transfer)
case(membership, of)
nmod(transfer, membership)
punct(be, .)
nsubj(write, George)
flat(George, E.)
flat(George, Sweazey)
root(ROOT, write)
punct(write, :)
punct(write, ``)
expl(be, there)
root(ROOT, be)
nsubj(be, danger)
mark(try, in)
acl(danger, try)
mark(make, to)
xcomp(try, make)
obj(make, admission)
case(church, to)
det(church, the)
nmod(admission, church)
advmod(easy, so)
xcomp(make, easy)
cc(painless, and)
conj(easy, painless)
mark(know, that)
nsubj(know, people)
aux(know, will)
advmod(know, scarcely)
ccomp(easy, know)
mark(happen, that)
nsubj(happen, anything)
aux(happen, have)
ccomp(know, happen)
punct(happen, '')
punct(appreciate, .)
nsubj(appreciate, people)
ccomp(know, appreciate)
obj(appreciate, experience)
nsubj(demand, that)
acl:relcl(experience, demand)
obj(demand, something)
case(they, of)
nmod(something, they)
punct(be, .)
nsubj(exception, those)
nsubj(transfer, who)
acl:relcl(those, transfer)
nmod:poss(membership, they)
obj(transfer, membership)
cop(exception, be)
det(exception, no)
root(ROOT, exception)
case(rule, to)
det(rule, the)
nmod(exception, rule)
punct(exception, .)
case(most, for)
obl(experience, most)
case(they, of)
nmod(most, they)
punct(experience, ,)
nsubj(experience, it)
aux(experience, will)
cop(experience, be)
nmod:poss(experience, they)
amod(experience, first)
root(ROOT, experience)
case(training, in)
compound(training, membership)
nmod(experience, training)
punct(experience, ,)
mark(development, since)
nsubj(development, this)
cop(development, be)
det(development, a)
amod(development, recent)
advcl(experience, development)
case(church, in)
amod(church, many)
nmod(development, church)
punct(experience, .)
nsubj(welcome, those)
acl(those, come)
case(denomination, from)
amod(denomination, other)
obl(come, denomination)
aux(welcome, will)
root(ROOT, welcome)
det(opportunity, the)
obj(welcome, opportunity)
mark(become, to)
acl(opportunity, become)
xcomp(become, inform)
punct(welcome, .)
det(class, the)
amod(class, preparatory)
nsubj(group, class)
cop(group, be)
det(group, a)
amod(group, introductory)
compound(group, face)
punct(face, -)
case(face, to)
punct(face, -)
nmod(face, face)
root(ROOT, group)
case(which, in)
obl(become, which)
amod(member, new)
nsubj(become, member)
acl:relcl(group, become)
xcomp(become, acquainted)
case(another, with)
nummod(another, one)
obl(acquainted, another)
punct(group, .)
nsubj(provide, it)
root(ROOT, provide)
det(transition, a)
amod(transition, natural)
obj(provide, transition)
case(life, into)
det(life, the)
obl(provide, life)
case(church, of)
det(church, the)
amod(church, local)
nmod(life, church)
cc(organization, and)
nmod:poss(organization, its)
conj(church, organization)
punct(provide, .)
nsubj(reach, reception)
case(fellowship, into)
det(fellowship, the)
compound(fellowship, Church)
nmod(reception, fellowship)
det(process, the)
amod(process, total)
nsubj(reach, process)
case(evangelism, of)
nmod(process, evangelism)
root(ROOT, reach)
det(crescendo, the)
obj(reach, crescendo)
mark(stand, when)
det(group, the)
nsubj(stand, group)
case(member, of)
amod(member, new)
nmod(group, member)
advcl(reach, stand)
case(congregation, before)
det(congregation, the)
obl(stand, congregation)
mark(declare, to)
advcl(stand, declare)
advmod(declare, publicly)
nmod:poss(faith, they)
obj(declare, faith)
cc(receive, and)
mark(receive, to)
aux:pass(receive, be)
conj(declare, receive)
case(fellowship, into)
det(fellowship, the)
obl(receive, fellowship)
case(Church, of)
det(Church, the)
nmod(fellowship, Church)
punct(moment, .)
nsubj(moment, this)
aux(moment, should)
cop(moment, be)
det(moment, a)
amod(moment, high)
parataxis(reach, moment)
case(life, in)
nmod:poss(life, they)
nmod(moment, life)
punct(moment, ,)
det(experience, a)
advmod(experience, never)
punct(never, -)
case(be-, to)
punct(be-, -)
obl:npmod(forget, be-)
amod(experience, forget)
parataxis(moment, experience)
punct(reach, .)
nsubj(sense, they)
aux(sense, should)
root(ROOT, sense)
det(significance, the)
amod(significance, tremendous)
obj(sense, significance)
mark(join, of)
acl(significance, join)
det(succession, the)
amod(succession, spiritual)
obj(join, succession)
acl(succession, reach)
advmod(reach, back)
case(Christ, to)
obl(back, Christ)
nmod:poss(Lord, we)
obj(reach, Lord)
cc(forward, and)
conj(Lord, forward)
case(fellowship, to)
det(fellowship, a)
amod(fellowship, eternal)
obl(forward, fellowship)
case(saint, with)
det(saint, the)
nmod(fellowship, saint)
case(age, of)
det(age, the)
nmod(saint, age)
punct(sense, .)
det(detail, every)
nsubj(merit, detail)
case(service, of)
det(service, the)
nmod(detail, service)
root(ROOT, merit)
amod(attention, careful)
obj(merit, attention)
punct(attention, --)
det(hymn, the)
appos(attention, hymn)
punct(hymn, ,)
det(sermon, the)
conj(hymn, sermon)
punct(hymn, ,)
det(ritual, the)
conj(hymn, ritual)
punct(hymn, ,)
det(hand, the)
amod(hand, right)
conj(hymn, hand)
case(fellowship, of)
nmod(hand, fellowship)
punct(introduction, ,)
det(introduction, the)
conj(hymn, introduction)
case(congregation, to)
det(congregation, the)
nmod(introduction, congregation)
punct(introduction, ,)
det(welcome, the)
appos(introduction, welcome)
case(congregation, of)
det(congregation, the)
nmod(welcome, congregation)
punct(merit, .)
nsubj(part, this)
cop(part, be)
det(part, a)
amod(part, vital)
root(ROOT, part)
case(growth, of)
nmod:poss(growth, they)
amod(growth, spiritual)
nmod(part, growth)
cc(assimilation, and)
conj(growth, assimilation)
punct(part, .)
nsubj(help, it)
aux(help, will)
root(ROOT, help)
mark(determine, to)
xcomp(help, determine)
det(attitude, the)
obj(determine, attitude)
case(member, of)
det(member, the)
amod(member, new)
nmod(attitude, member)
case(Church, toward)
det(Church, the)
nmod(member, Church)
punct(help, .)
nsubj(mean, it)
aux(mean, can)
root(ROOT, mean)
det(difference, the)
obj(mean, difference)
case(participation, between)
nmod(difference, participation)
cc(inaction, and)
conj(participation, inaction)
punct(growth, ,)
amod(growth, spiritual)
conj(participation, growth)
cc(decay, and)
conj(participation, decay)
punct(mean, .)
det(service, the)
compound(service, worship)
nsubj(time, service)
cop(time, be)
det(time, the)
amod(time, natural)
cc(logical, and)
conj(natural, logical)
root(ROOT, time)
mark(receive, to)
acl(time, receive)
amod(member, new)
obj(receive, member)
case(Church, into)
det(Church, the)
obl(receive, Church)
punct(time, .)
det(atmosphere, the)
nsubj:pass(create, atmosphere)
case(experience, for)
det(experience, this)
amod(experience, momentous)
nmod(atmosphere, experience)
aux(create, can)
aux:pass(create, be)
root(ROOT, create)
advmod(effectively, most)
advmod(create, effectively)
case(experience, through)
det(experience, the)
compound(experience, worship)
obl(create, experience)
punct(create, .)
advmod(climax, psychologically)
det(reception, the)
nsubj(climax, reception)
aux(climax, should)
cop(climax, be)
det(climax, the)
root(ROOT, climax)
punct(climax, ,)
case(sermon, follow)
det(sermon, the)
nmod(climax, sermon)
punct(1, .)
nummod(ask, 1)
punct(1, ))
parataxis(climax, ask)
det(member, the)
amod(member, new)
obj(ask, member)
mark(meet, to)
xcomp(ask, meet)
nummod(minute, thirty)
obj(meet, minute)
case(service, before)
det(service, the)
obl(meet, service)
mark(complete, to)
advcl(meet, complete)
punct(sheet, ``)
compound(sheet, talent)
obj(complete, sheet)
punct(sheet, '')
cc(pledge, and)
conj(complete, pledge)
obj(pledge, card)
punct(ask, .)
det(denomination, some)
nsubj(ask, denomination)
root(ROOT, ask)
amod(member, new)
obj(ask, member)
mark(sign, to)
xcomp(ask, sign)
advmod(sign, personally)
det(register, the)
amod(register, chronological)
compound(register, membership)
obj(sign, register)
punct(ask, .)
root(ROOT, provide)
det(card, a)
compound(card, name)
obj(provide, card)
case(member, for)
det(member, each)
amod(member, new)
obl(provide, member)
punct(provide, .)
compound(plan, outline)
nsubj(Arrange, plan)
case(service, for)
det(service, the)
amod(service, entire)
nmod(plan, service)
punct(2, . )
nummod(Arrange, 2)
punct(2, ))
root(ROOT, Arrange)
det(section, a)
amod(section, reserve)
obj(Arrange, section)
case(sanctuary, in)
det(sanctuary, the)
nmod(section, sanctuary)
advmod(sit, where)
det(member, all)
amod(member, new)
nsubj(sit, member)
aux(sit, may)
acl:relcl(sanctuary, sit)
advmod(sit, together)
punct(Arrange, .)
nsubj(sit, sponsor)
aux(sit, may)
root(ROOT, sit)
case(they, with)
obl(sit, they)
advmod(sit, also)
punct(3, .)
nummod(invite, 3)
punct(3, ))
conj(sit, invite)
obj(invite, sponsor)
cc(Friends, or)
compound(Friends, fellowship)
conj(sponsor, Friends)
mark(stand, to)
advcl(invite, stand)
advmod(stand, back)
case(member, of)
det(member, the)
amod(member, new)
obl(back, member)
case(service, in)
det(service, the)
compound(service, reception)
nmod(member, service)
punct(sit, . )
nummod(give, 4)
punct(4, ))
root(ROOT, give)
det(member, each)
amod(member, new)
obj(give, member)
det(certificate, a)
obj(give, certificate)
case(membership, of)
nmod(certificate, membership)
punct(give, . )
nummod(introduce, 5)
punct(5, ))
root(ROOT, introduce)
det(member, each)
amod(member, new)
obj(introduce, member)
case(congregation, to)
det(congregation, the)
obl(introduce, congregation)
punct(introduce, ,)
advcl(introduce, ask)
obj(ask, he)
mark(face, to)
xcomp(ask, face)
det(congregation, the)
obj(face, congregation)
punct(introduce, . )
nummod(lead, 6)
punct(6, ))
root(ROOT, lead)
det(congregation, the)
obj(lead, congregation)
case(response, in)
det(response, a)
obl(lead, response)
case(welcome, of)
nmod(response, welcome)
punct(lead, . )
nummod(have, 7)
punct(7, ))
root(ROOT, have)
det(reception, a)
obj(have, reception)
case(member, for)
amod(member, new)
nmod(reception, member)
case(parlor, in)
det(parlor, the)
nmod(member, parlor)
cc(hall, or)
amod(hall, social)
conj(parlor, hall)
advmod(have, immediately)
case(service, after)
det(service, the)
obl(take, service)
punct(8, . )
nummod(take, 8)
punct(8, ))
parataxis(have, take)
det(picture, a)
obj(take, picture)
case(group, of)
det(group, the)
nmod(picture, group)
case(member, of)
amod(member, new)
nmod(group, member)
mark(put, to)
aux:pass(put, be)
acl(group, put)
case(paper, in)
det(paper, the)
compound(paper, church)
obl(put, paper)
cc(place, or)
conj(paper, place)
case(board, on)
det(board, the)
compound(board, bulletin)
obl(place, board)
punct(9, . )
nummod(have, 9)
punct(9, ))
parataxis(place, have)
det(luncheon, a)
compound(luncheon, fellowship)
obj(have, luncheon)
cc(dinner, or)
conj(luncheon, dinner)
case(member, with)
amod(member, new)
nmod(luncheon, member)
case(guest, as)
nmod(member, guest)
punct(guest, .)
compound(planning, Chapter)
nummod(Chapter, 6)
conj(luncheon, planning)
case(assimilation, for)
det(assimilation, the)
nmod(planning, assimilation)
cc(growth, and)
conj(assimilation, growth)
case(member, of)
amod(member, new)
nmod(assimilation, member)
det(church, the)
nsubj(family, church)
cop(family, be)
punct(family, ``)
det(family, the)
acl:relcl(member, family)
case(God, of)
nmod(family, God)
punct(family, '')
punct(have, .)
det(member, the)
nsubj:pass(draw, member)
case(family, of)
det(family, the)
punct(family, ``)
nmod(member, family)
punct(family, '')
aux:pass(draw, be)
root(ROOT, draw)
advmod(draw, together)
case(love, by)
det(love, a)
amod(love, common)
obl(draw, love)
case(Christ, for)
nmod(love, Christ)
cc(devotion, and)
det(devotion, a)
amod(devotion, sincere)
conj(love, devotion)
case(Kingdom, to)
nmod:poss(Kingdom, he)
nmod(devotion, Kingdom)
punct(draw, .)
det(member, every)
nsubj(have, member)
case(family, of)
det(family, the)
nmod(member, family)
aux(have, must)
root(ROOT, have)
det(place, a)
amod(place, vital)
obj(have, place)
case(life, in)
nmod:poss(life, its)
nmod(place, life)
punct(have, .)
nsubj(experience, this)
cop(experience, be)
det(experience, no)
compound(type, spectator)
punct(type, -)
compound(experience, type)
root(ROOT, experience)
punct(experience, ;)
punct(experience, ;)
nsubj(be, everyone)
parataxis(experience, be)
mark(participant, to)
cop(participant, be)
det(participant, a)
xcomp(be, participant)
punct(experience, .)
cc(right, yet)
det(problem, the)
advmod(difficult, most)
amod(problem, difficult)
nsubj(right, problem)
case(program, in)
det(church, the)
nmod:poss(program, church)
case(church, 's)
nmod(problem, program)
case(evangelism, of)
nmod(program, evangelism)
cop(right, be)
root(ROOT, right)
case(point, at)
det(point, this)
obl(right, point)
punct(right, --)
advcl(right, help)
amod(member, new)
obj(help, member)
mark(become, to)
xcomp(help, become)
xcomp(become, participate)
punct(part, ,)
amod(part, grow)
obj(participate, part)
case(fellowship, of)
det(fellowship, the)
nmod(part, fellowship)
punct(right, .)
advmod(easily, very)
advmod(neglect, easily)
nsubj:pass(neglect, they)
aux(neglect, may)
aux:pass(neglect, be)
root(ROOT, neglect)
cc(join, and)
advmod(join, eventually)
conj(neglect, join)
det(rank, the)
obj(join, rank)
case(unconcerned, of)
det(unconcerned, the)
nmod(rank, unconcerned)
cc(inactive, and)
conj(unconcerned, inactive)
punct(neglect, . )
det(study, a)
nsubj(reveal, study)
case(statistic, of)
amod(statistic, major)
amod(membership, denominational)
compound(statistic, membership)
nmod(study, statistic)
case(period, over)
det(period, a)
nummod(year, twenty)
punct(year, -)
compound(period, year)
nmod(statistic, period)
root(ROOT, reveal)
det(fact, the)
amod(fact, appal)
obj(reveal, fact)
mark(lose, that)
advmod(40, nearly)
nummod(cent, 40)
compound(cent, per)
nsubj:pass(lose, cent)
case(those, of)
nmod(cent, those)
nsubj(join, who)
acl:relcl(those, join)
det(Church, the)
obj(join, Church)
aux:pass(lose, be)
acl(fact, lose)
case(Church, to)
det(Church, the)
obl(lose, Church)
case(year, within)
nummod(year, seven)
obl(lose, year)
punct(reveal, .)
nummod(denomination, one)
nsubj(have, denomination)
root(ROOT, have)
det(membership, a)
obj(have, membership)
case(1,419,833, of)
nmod(membership, 1,419,833)
case(beginning, at)
det(beginning, the)
obl(have, beginning)
case(period, of)
det(period, the)
nmod(beginning, period)
case(study, under)
nmod(period, study)
punct(stand, ,)
cc(stand, and)
nummod(year, twenty)
obl:npmod(later, year)
advmod(stand, later)
nmod:poss(membership, its)
nsubj(stand, membership)
conj(have, stand)
case(1,541,991, at)
obl(stand, 1,541,991)
punct(stand, --)
det(growth, a)
amod(growth, net)
parataxis(stand, growth)
case(122,158, of)
advmod(122,158, only)
nmod(growth, 122,158)
punct(have, .)
cc(be, yet)
case(period, during)
det(period, the)
amod(period, same)
obl(be, period)
expl(be, there)
root(ROOT, be)
nummod(addition, 1,080,062)
nsubj(be, addition)
punct(be, .)
det(body, another)
amod(body, major)
compound(body, church)
nsubj(have, body)
root(ROOT, have)
nummod(member, 4,499,608)
obj(have, member)
cc(year, and)
nummod(year, twenty)
obl:npmod(later, year)
advmod(stand, later)
nmod:poss(membership, its)
nsubj(stand, membership)
parataxis(have, stand)
case(4,622,444, at)
obl(stand, 4,622,444)
punct(stand, .)
case(time, during)
det(time, this)
obl(bring, time)
nummod(member, 4,122,354)
amod(member, new)
nsubj:pass(bring, member)
aux:pass(bring, be)
conj(stand, bring)
case(fellowship, into)
det(fellowship, the)
obl(bring, fellowship)
punct(have, .)
advmod(have, still)
det(denomination, another)
nsubj(have, denomination)
root(ROOT, have)
nummod(member, 7,360,187)
obj(have, member)
nummod(year, twenty)
obl:npmod(ago, year)
advmod(have, ago)
punct(have, .)
case(period, during)
det(period, this)
obl(receive, period)
nummod(member, 7,484,268)
nsubj:pass(receive, member)
aux:pass(receive, be)
parataxis(have, receive)
punct(9,910,741, ,)
cc(9,910,741, yet)
det(membership, the)
amod(membership, net)
nsubj(9,910,741, membership)
advmod(9,910,741, now)
cop(9,910,741, be)
advmod(9,910,741, only)
conj(have, 9,910,741)
punct(have, .)
det(figure, these)
nsubj(indicate, figure)
root(ROOT, indicate)
mark(lose, that)
nsubj(lose, we)
aux(lose, be)
ccomp(indicate, lose)
advmod(many, almost)
advmod(many, as)
obj(lose, many)
mark(receive, as)
nsubj(receive, we)
aux(receive, be)
advcl(as, receive)
case(membership, into)
obl(receive, membership)
punct(indicate, .)
det(problem, this)
nsubj:pass(illustrate, problem)
aux:pass(illustrate, be)
root(ROOT, illustrate)
case(fact, by)
det(fact, the)
obl(illustrate, fact)
mark(drop, that)
amod(church, many)
amod(church, local)
nsubj(drop, church)
acl(fact, drop)
case(roll, from)
det(roll, the)
amod(roll, active)
compound(roll, membership)
obl(drop, roll)
det(year, each)
obl:tmod(drop, year)
advmod(many, as)
advmod(drop, many)
mark(receive, as)
nsubj(receive, they)
advcl(as, receive)
case(fellowship, into)
det(fellowship, the)
obl(receive, fellowship)
punct(illustrate, .)
nsubj(show, Studies)
case(trend, of)
compound(trend, membership)
nmod(Studies, trend)
punct(Studies, ,)
advmod(area, even)
case(area, in)
det(area, some)
nmod(Studies, area)
advmod(expand, where)
nsubj(expand, population)
aux(expand, be)
acl:relcl(area, expand)
punct(show, ,)
root(ROOT, show)
mark(have, that)
nsubj(have, number)
case(church, of)
nmod(number, church)
aux(have, have)
ccomp(show, have)
amod(increase, little)
amod(increase, net)
obj(have, increase)
punct(have, ,)
mark(receive, though)
amod(member, many)
amod(member, new)
nsubj:pass(receive, member)
aux:pass(receive, be)
advcl(have, receive)
punct(show, .)
nsubj(wrong, something)
cop(wrong, be)
root(ROOT, wrong)
mark(happen, when)
det(thing, these)
nsubj(happen, thing)
advcl(wrong, happen)
punct(wrong, .)
det(family, the)
amod(family, local)
punct(family, ``)
nsubj(fail, family)
case(God, of)
nmod(family, God)
punct(family, '')
aux(fail, have)
root(ROOT, fail)
nmod:poss(member, it)
case(it, 's)
amod(member, new)
obj(fail, member)
case(neglect, through)
nmod(member, neglect)
cc(unconcern, and)
conj(neglect, unconcern)
case(welfare, for)
nmod:poss(welfare, they)
amod(welfare, spiritual)
nmod(member, welfare)
punct(fail, .)
amod(need, Basic)
compound(member, need)
amod(member, new)
nsubj(become, member)
aux(become, can)
root(ROOT, become)
xcomp(become, participate)
punct(member, ,)
amod(member, grow)
obj(participate, member)
punct(become, .)
cc(happen, but)
nsubj(happen, this)
aux(happen, will)
advmod(happen, not)
root(ROOT, happen)
advmod(process, merely)
case(process, through)
det(process, the)
amod(process, natural)
obl(happen, process)
case(life, of)
amod(life, social)
nmod(process, life)
punct(happen, .)
nsubj:pass(plan, it)
aux(plan, must)
aux:pass(plan, be)
root(ROOT, plan)
cc(develop, and)
advmod(develop, carefully)
conj(plan, develop)
punct(plan, .)
det(membership, the)
amod(membership, entire)
nsubj:pass(alert, membership)
case(church, of)
det(church, the)
amod(church, local)
nmod(membership, church)
aux(alert, must)
aux:pass(alert, be)
root(ROOT, alert)
case(part, to)
nmod:poss(part, they)
obl(alert, part)
case(process, in)
det(process, this)
amod(process, dynamic)
nmod(part, process)
punct(alert, .)
mark(follow, if)
det(church, the)
nsubj(follow, church)
aux(follow, have)
advcl(way, follow)
det(plan, the)
obj(follow, plan)
case(cultivation, of)
nmod(plan, cultivation)
case(prospect, of)
nmod(cultivation, prospect)
cc(carry, and)
conj(follow, carry)
case(program, through)
det(program, a)
obl(carry, program)
case(preparation, of)
compound(preparation, membership)
nmod(program, preparation)
mark(outline, as)
advcl(carry, outline)
advmod(outline, earlier)
case(book, in)
det(book, this)
obl(outline, book)
punct(way, ,)
det(process, the)
nsubj(way, process)
case(assimilation, of)
nmod(process, assimilation)
cc(growth, and)
conj(assimilation, growth)
aux(way, will)
cop(way, be)
advmod(way, well)
case(way, under)
root(ROOT, way)
punct(way, .)
nsubj(step, those)
nsubj(enter, who)
acl:relcl(those, enter)
det(door, the)
amod(door, front)
obj(enter, door)
case(church, of)
det(church, the)
nmod(door, church)
advmod(enter, intelligently)
cc(dedication, and)
case(dedication, with)
amod(dedication, christian)
obl(step, dedication)
aux(step, will)
advmod(step, not)
advmod(step, so)
advmod(step, easily)
root(ROOT, step)
case(door, through)
det(door, the)
compound(door, back)
obl(step, door)
case(interest, because)
fixed(because, of)
amod(interest, lose)
obl(step, interest)
punct(step, .)
advmod(enough, however)
punct(enough, ,)
nsubj(enough, it)
cop(enough, be)
advmod(enough, not)
root(ROOT, enough)
mark(bring, to)
csubj(enough, bring)
obj(bring, person)
case(commitment, to)
amod(commitment, christian)
obl(bring, commitment)
cc(train, and)
conj(bring, train)
obj(train, they)
case(meaning, in)
det(meaning, the)
obl(train, meaning)
case(discipleship, of)
amod(discipleship, christian)
nmod(meaning, discipleship)
punct(enough, .)
mark(unite, when)
nsubj(unite, they)
advcl(find, unite)
case(Church, with)
det(Church, the)
obl(unite, Church)
nsubj(find, they)
aux(find, must)
parataxis(enough, find)
case(fellowship, in)
det(fellowship, this)
obl(find, fellowship)
det(satisfaction, the)
obj(find, satisfaction)
case(need, of)
nmod:poss(need, they)
amod(need, basic)
amod(need, spiritual)
nmod(satisfaction, need)
cc(mature, or)
nsubj(mature, they)
aux(mature, will)
advmod(mature, never)
conj(find, mature)
case(Christians, into)
amod(Christians, effective)
obl(mature, Christians)
punct(enough, .)
det(Church, the)
nsubj(expect, Church)
root(ROOT, expect)
amod(thing, certain)
obj(expect, thing)
case(those, of)
nmod(thing, those)
nsubj(become, who)
acl:relcl(those, become)
obj(become, member)
punct(expect, .)
det(member, the)
amod(member, new)
nsubj(expect, member)
advmod(expect, justifiably)
root(ROOT, expect)
det(thing, some)
obj(expect, thing)
case(family, from)
nmod:poss(family, they)
compound(family, church)
nmod(thing, family)
punct(expect, :)
punct(expect, --)
root(ROOT, welcome)
case(fellowship, into)
det(fellowship, the)
obl(welcome, fellowship)
punct(welcome, --)
amod(love, sincere)
amod(love, christian)
root(ROOT, love)
cc(understanding, and)
conj(love, understanding)
punct(love, --)
amod(experience, inspir)
cc(challenging, and)
conj(inspir, challenging)
compound(experience, worship)
root(ROOT, experience)
punct(experience, --)
amod(activity, social)
cc(recreational, and)
conj(social, recreational)
root(ROOT, activity)
punct(activity, --)
root(ROOT, Opportunities)
case(service, for)
amod(service, christian)
nmod(Opportunities, service)
punct(Opportunities, --)
root(ROOT, Opportunities)
case(study, for)
nmod(Opportunities, study)
case(faith, of)
det(faith, the)
amod(faith, christian)
nmod(study, faith)
cc(Bible, and)
det(Bible, the)
conj(faith, Bible)
punct(Opportunities, --)
amod(experience, Creative)
compound(experience, prayer)
root(ROOT, experience)
punct(experience, --)
nsubj(need, Guidance)
case(concern, in)
amod(concern, christian)
amod(concern, social)
nmod(Guidance, concern)
punct(need, .)
nsubj(need, Men)
root(ROOT, need)
obj(need, unity)
cc(need, and)
nsubj(need, they)
conj(need, need)
obj(need, God)
punct(need, .)
nsubj:pass(take, care)
aux(take, must)
aux:pass(take, be)
root(ROOT, take)
advmod(take, neither)
mark(confuse, to)
advcl(take, confuse)
obj(confuse, unity)
case(uniformity, with)
nmod(unity, uniformity)
cc(God, nor)
conj(uniformity, God)
case(idea, with)
nmod:poss(idea, we)
amod(idea, parochial)
obl(confuse, idea)
case(he, about)
nmod(idea, he)
punct(stand, ,)
cc(stand, but)
case(qualification, with)
det(qualification, these)
nummod(qualification, two)
obl(stand, qualification)
punct(stand, ,)
det(statement, the)
nsubj(stand, statement)
conj(take, stand)
punct(take, .)
det(statement, the)
nsubj(point, statement)
advmod(point, also)
root(ROOT, point)
case(paradox, to)
det(paradox, a)
amod(paradox, classic)
obl(point, paradox)
punct(point, :)
det(man, the)
amod(man, more)
nsubj(turn, man)
root(ROOT, turn)
case(God, toward)
obl(turn, God)
punct(God, ,)
nsubj(himself, who)
cop(himself, be)
advmod(only, not)
advmod(himself, only)
case(himself, in)
obl(paradigm, himself)
det(paradigm, the)
ccomp(turn, paradigm)
case(unity, of)
det(unity, all)
nmod(paradigm, unity)
cc(ground, but)
advmod(ground, also)
det(ground, the)
amod(ground, only)
conj(paradigm, ground)
case(which, on)
obl(establish, which)
amod(unity, human)
nsubj:pass(establish, unity)
aux(establish, can)
advmod(establish, ultimately)
aux:pass(establish, be)
acl:relcl(ground, establish)
punct(splinter, ,)
det(man, the)
amod(man, more)
nsubj(splinter, man)
ccomp(establish, splinter)
case(group, into)
obl(splinter, group)
cc(set, and)
conj(splinter, set)
obj(set, themselves)
advmod(set, apart)
case(another, from)
nummod(another, one)
obl(set, another)
punct(another, .)
mark(remind, to)
aux:pass(remind, be)
advcl(set, remind)
case(this, of)
obl(remind, this)
nsubj(need, we)
ccomp(remind, need)
advmod(glance, only)
obj(need, glance)
case(map, at)
det(map, the)
compound(map, world)
nmod(glance, map)
cc(note, and)
conj(need, note)
det(extent, the)
obj(note, extent)
case(which, to)
obl(compound, which)
amod(division, religious)
nsubj(compound, division)
aux(compound, have)
acl:relcl(extent, compound)
amod(one, political)
obj(compound, one)
punct(compound, ,)
case(fragmentation, with)
det(fragmentation, a)
amod(fragmentation, resultant)
obl(compound, fragmentation)
case(race, of)
det(race, the)
amod(race, human)
nmod(fragmentation, race)
punct(massacre, .)
nsubj(fragmentation, massacre)
acl(massacre, attend)
det(partition, the)
obj(attend, partition)
case(India, of)
nmod(partition, India)
cc(establishment, and)
det(establishment, the)
conj(partition, establishment)
case(State, of)
det(State, the)
nmod(establishment, State)
case(Israel, of)
nmod(State, Israel)
cop(evidence, be)
advmod(evidence, simply)
amod(evidence, recent)
amod(evidence, grim)
acl:relcl(establishment, evidence)
case(hostility, of)
det(hostility, the)
nmod(evidence, hostility)
amod(division, such)
nsubj(engender, division)
aux(engender, can)
acl:relcl(hostility, engender)
punct(turn, .)
det(word, the)
nsubj(come, word)
case(cardinal, of)
nmod(word, cardinal)
flat(cardinal, Newman)
root(ROOT, come)
advmod(come, forcibly)
mark(mind, to)
advcl(come, mind)
punct(come, :)
punct(come, ``)
discourse(hate, oh)
advmod(hate, how)
nsubj(hate, we)
root(ROOT, hate)
nummod(another, one)
obj(hate, another)
case(love, for)
det(love, the)
obl(hate, love)
case(God, of)
nmod(love, God)
punct(hate, '')
punct(hate, !)
punct(hate, !)
det(source, the)
nsubj(difficult, source)
case(paradox, of)
det(paradox, this)
nmod(source, paradox)
cop(difficult, be)
advmod(difficult, not)
root(ROOT, difficult)
mark(identify, to)
ccomp(difficult, identify)
punct(difficult, .)
nsubj(lie, it)
root(ROOT, lie)
case(institution, in)
obl(lie, institution)
punct(lie, .)
nsubj(require, institution)
root(ROOT, require)
obj(require, structure)
punct(form, ,)
conj(structure, form)
punct(definition, ,)
cc(definition, and)
conj(structure, definition)
punct(entail, ,)
cc(entail, and)
nsubj(entail, these)
case(turn, in)
nmod(these, turn)
conj(require, entail)
obj(entail, differentiation)
cc(exclusion, and)
conj(differentiation, exclusion)
punct(require, . )
det(institution, a)
advmod(amorphous, completely)
amod(institution, amorphous)
nsubj(contradiction, institution)
aux(contradiction, would)
cop(contradiction, be)
det(contradiction, a)
root(ROOT, contradiction)
case(term, in)
nmod(contradiction, term)
punct(contradiction, ;)
punct(contradiction, ;)
mark(escape, to)
advcl(rule, escape)
det(fate, this)
obj(escape, fate)
punct(rule, ,)
nsubj(rule, it)
aux(rule, must)
parataxis(contradiction, rule)
det(thing, some)
obj(rule, thing)
compound:prt(rule, out)
punct(contradiction, .)
case(criterion, for)
det(criterion, every)
obl(proclaim, criterion)
nsubj(define, which)
acl:relcl(criterion, define)
obj(define, what)
nsubj(what, something)
cop(what, be)
punct(proclaim, ,)
case(time, at)
det(time, the)
amod(time, same)
obl(proclaim, time)
root(ROOT, proclaim)
punct(proclaim, --)
advmod(openly, implicitly)
mark(openly, if)
advmod(openly, not)
advmod(what, openly)
punct(what, --)
parataxis(proclaim, what)
mark(be, that)
nsubj(be, something)
cop(what, be)
advmod(be, not)
punct(proclaim, .)
det(person, some)
nsubj(sensitive, person)
cop(sensitive, be)
advmod(sensitive, so)
root(ROOT, sensitive)
case(truth, to)
det(truth, this)
obl(sensitive, truth)
mark(propose, as)
mark(propose, to)
advcl(sensitive, propose)
mark(do, that)
nsubj(do, we)
ccomp(propose, do)
advmod(do, away)
case(institution, with)
obl(do, institution)
advmod(do, altogether)
punct(sensitive, ;)
punct(sensitive, ;)
case(context, in)
det(context, the)
amod(context, present)
obl(amount, context)
nsubj(amount, this)
parataxis(sensitive, amount)
case(advice, to)
det(advice, the)
obl(amount, advice)
mark(have, that)
mark(religious, while)
cop(religious, be)
nsubj(have, religious)
aux(have, may)
advcl(ought, have)
det(justification, a)
amod(justification, certain)
obj(have, justification)
punct(ought, ,)
nsubj(ought, we)
aux(dispense, ought)
mark(dispense, to)
acl(advice, dispense)
case(church, with)
obl(dispense, church)
punct(sensitive, .)
det(suggestion, the)
nsubj(naive, suggestion)
cop(naive, be)
root(ROOT, naive)
punct(naive, .)
nsubj(animal, man)
cop(animal, be)
case(animal, at)
advmod(animal, once)
det(animal, a)
amod(animal, gregarious)
parataxis(naive, animal)
cc(create, and)
det(create, a)
compound(create, form)
punct(create, -)
conj(animal, create)
acl(create, be)
punct(naive, .)
aux(commit, have)
advmod(commit, once)
advcl(create, commit)
obj(commit, himself)
case(ideal, to)
det(ideal, a)
obl(commit, ideal)
obj(consider, which)
nsubj(consider, he)
acl:relcl(ideal, consider)
xcomp(consider, worthwhile)
punct(create, ,)
nsubj(create, he)
advmod(create, inevitably)
root(ROOT, create)
obj(create, form)
case(expression, for)
nmod:poss(expression, its)
nmod(form, expression)
cc(institution, and)
conj(expression, institution)
case(continuance, for)
nmod:poss(continuance, its)
nmod(expression, continuance)
punct(create, .)
mark(propose, to)
advcl(be, propose)
mark(religious, that)
nsubj(religious, man)
cop(religious, be)
ccomp(propose, religious)
mark(have, without)
advcl(religious, have)
amod(institution, religious)
obj(have, institution)
root(ROOT, be)
mark(propose, like)
advcl(be, propose)
mark(learn, that)
nsubj:pass(learn, they)
aux:pass(learn, be)
ccomp(propose, learn)
mark(have, without)
advcl(learn, have)
obj(have, school)
punct(be, .)
det(eventuality, both)
nsubj(possible, eventuality)
cop(possible, be)
root(ROOT, possible)
advmod(possible, logically)
punct(impossible, ,)
cc(impossible, but)
advmod(impossible, practically)
nsubj(impossible, they)
cop(impossible, be)
conj(possible, impossible)
punct(possible, .)
advmod(much, as)
advmod(require, much)
mark(need, as)
nsubj(need, man)
advmod(need, intrinsically)
advcl(much, need)
det(unity, the)
obj(need, unity)
nsubj:pass(grounded, that)
aux:pass(grounded, be)
acl:relcl(unity, grounded)
case(God, in)
obl(grounded, God)
punct(require, ,)
nsubj(require, they)
advmod(require, instrumentally)
root(ROOT, require)
det(institution, the)
obj(require, institution)
nsubj(direct, that)
aux(direct, will)
acl:relcl(institution, direct)
nmod:poss(step, they)
obj(direct, step)
case(he, toward)
obl(direct, he)
punct(require, .)
cc(remain, yet)
det(fact, the)
nsubj(remain, fact)
root(ROOT, remain)
mark(set, that)
amod(institution, such)
nsubj(set, institution)
aux(set, do)
ccomp(remain, set)
obj(set, man)
case(odd, at)
obl(set, odd)
case(fellow, with)
nmod:poss(fellow, they)
obl(set, fellow)
punct(remain, .)
root(ROOT, be)
expl(be, there)
det(way, any)
nsubj(be, way)
case(predicament, out)
case(predicament, of)
det(predicament, the)
nmod(way, predicament)
punct(be, ?)
punct(be, ?)
det(way, the)
amod(way, only)
nsubj(communication, way)
obj(see, that)
nsubj(see, I)
aux(see, can)
acl:relcl(way, see)
cop(communication, be)
case(communication, through)
root(ROOT, communication)
punct(communication, .)
amod(communication, Interfaith)
nsubj:pass(regard, communication)
aux(regard, need)
advmod(regard, not)
aux:pass(regard, be)
root(ROOT, regard)
case(burden, as)
det(burden, a)
amod(burden, unfortunate)
obl(regard, burden)
acl(burden, visit)
case(we, upon)
obl(visit, we)
case(necessity, by)
det(necessity, the)
obl(visit, necessity)
mark(maintain, of)
acl(necessity, maintain)
amod(relation, diplomatic)
obj(maintain, relation)
case(adversary, with)
nmod:poss(adversary, we)
nmod(relation, adversary)
punct(regard, .)
advcl(art, approach)
advmod(approach, creatively)
punct(art, ,)
nsubj(art, it)
cop(art, be)
det(art, a)
amod(art, high)
root(ROOT, art)
punct(art, .)
expl(art, it)
cop(art, be)
det(art, the)
root(ROOT, art)
mark(relate, of)
acl(art, relate)
det(finite, the)
obj(relate, finite)
case(infinite, to)
det(infinite, the)
obl(relate, infinite)
punct(relate, ,)
mark(do, of)
advcl(relate, do)
nmod:poss(best, we)
obj(do, best)
mark(insure, to)
xcomp(do, insure)
mark(thwart, that)
det(requirement, the)
amod(requirement, particularistic)
nsubj(thwart, requirement)
case(institution, of)
amod(institution, religious)
nmod(requirement, institution)
aux(thwart, will)
advmod(thwart, not)
ccomp(insure, thwart)
nmod:poss(intent, God)
case(God, 's)
obj(thwart, intent)
case(unity, of)
nmod(intent, unity)
case(man, among)
nmod(unity, man)
amod(unity, more)
mark(necessary, than)
cop(necessary, be)
advmod(necessary, minimally)
advcl(more, necessary)
punct(art, .)
case(sense, in)
det(sense, a)
amod(sense, certain)
obl(parallel, sense)
punct(parallel, ,)
amod(communication, interfaith)
nsubj(parallel, communication)
root(ROOT, parallel)
amod(communication, diplomatic)
obj(parallel, communication)
case(state, among)
det(state, the)
compound(state, nation)
punct(state, -)
nmod(communication, state)
punct(parallel, .)
root(ROOT, what)
cop(what, be)
det(fact, the)
amod(fact, pertinent)
nsubj(what, fact)
acl(fact, affect)
amod(communication, such)
obj(affect, communication)
case(juncture, at)
det(juncture, the)
amod(juncture, present)
obl(affect, juncture)
case(history, of)
nmod(juncture, history)
punct(what, ?)
punct(what, ? )
nsubj(touch, I)
aux(touch, shall)
root(ROOT, touch)
compound:prt(touch, on)
nummod(area, three)
obj(touch, area)
punct(area, :)
appos(area, personal)
punct(national, ,)
conj(personal, national)
punct(theological, ,)
cc(theological, and)
conj(personal, theological)
punct(touch, . )
nummod(mean, 1)
punct(1, ))
case(factor, by)
amod(factor, personal)
obl(mean, factor)
nsubj(mean, I)
root(ROOT, mean)
obj(mean, those)
acl(those, root)
case(structure, in)
compound(structure, personality)
obl(root, structure)
punct(mean, .)
det(tension, some)
amod(tension, interfaith)
nsubj:pass(occasion, tension)
aux:pass(occasion, be)
advmod(occasion, not)
root(ROOT, occasion)
case(difference, by)
amod(difference, theological)
obl(occasion, difference)
case(all, at)
obl(occasion, all)
punct(rise, ,)
cc(rise, but)
case(need, by)
det(need, the)
obl(rise, need)
case(man, of)
nmod(need, man)
mark(have, to)
acl(need, have)
obj(have, person)
nsubj(blame, they)
aux(blame, can)
acl:relcl(person, blame)
punct(distrust, ,)
conj(blame, distrust)
punct(denounce, ,)
conj(blame, denounce)
punct(hate, ,)
cc(hate, and)
advmod(hate, even)
conj(blame, hate)
punct(rise, .)
amod(need, such)
nsubj(rise, need)
aux(rise, may)
conj(occasion, rise)
case(proportion, to)
amod(proportion, pathological)
obl(rise, proportion)
punct(occasion, . )
amod(psychology, modern)
nsubj(show, psychology)
aux(show, have)
root(ROOT, show)
mark(personality, that)
csubj(personality, paralleling)
punct(personality, ``)
det(personality, the)
amod(personality, authoritarian)
obj(paralleling, personality)
punct(personality, '')
cop(personality, be)
punct(personality, ``)
det(personality, the)
amod(personality, bigot)
ccomp(show, personality)
punct(personality, '')
case(insecurity, in)
det(insecurity, which)
nmod(personality, insecurity)
punct(inferiority, ,)
conj(insecurity, inferiority)
punct(suspicion, ,)
conj(insecurity, suspicion)
punct(distrust, ,)
cc(distrust, and)
conj(insecurity, distrust)
conj(personality, combine)
mark(provide, to)
xcomp(combine, provide)
det(target, a)
obj(provide, target)
case(antagonism, for)
nmod(target, antagonism)
advmod(indispensable, so)
amod(target, indispensable)
mark(manufacture, that)
nsubj:pass(manufacture, it)
aux(manufacture, will)
aux:pass(manufacture, be)
ccomp(indispensable, manufacture)
mark(exist, if)
nsubj(exist, it)
aux(exist, do)
advmod(exist, not)
advcl(manufacture, exist)
advmod(exist, naturally)
punct(show, . )
advmod(appear, fortunately)
det(number, the)
nsubj(appear, number)
case(bigot, of)
amod(bigot, pathological)
nmod(number, bigot)
root(ROOT, appear)
mark(small, to)
cop(small, be)
advmod(small, quite)
xcomp(appear, small)
punct(mistake, ,)
cc(mistake, but)
expl(mistake, it)
aux(mistake, would)
cop(mistake, be)
det(mistake, a)
conj(appear, mistake)
mark(think, to)
csubj(mistake, think)
mark(separate, that)
advmod(separate, more)
fixed(more, than)
det(matter, a)
obl(more, matter)
case(degree, of)
nmod(matter, degree)
ccomp(think, separate)
obj(separate, they)
case(rest, from)
det(rest, the)
obl(separate, rest)
case(we, of)
nmod(rest, we)
punct(separate, .)
case(extent, to)
det(extent, some)
nmod(inadequacy, extent)
det(inadequacy, the)
amod(inadequacy, personal)
nsubj(separate, inadequacy)
nsubj(prejudice, that)
acl:relcl(inadequacy, prejudice)
obj(prejudice, attempt)
mark(compensate, to)
acl(attempt, compensate)
obl(compensate, for)
advcl(prejudice, be)
mark(find, to)
aux:pass(find, be)
xcomp(be, find)
case(all, in)
obl(find, all)
case(we, of)
nmod(all, we)
punct(conflict, .)
amod(conflict, Interfaith)
nsubj(be, conflict)
nsubj(unfortunate, which)
nsubj(unfortunate, spring)
case(deficiency, from)
amod(deficiency, psychological)
nmod(spring, deficiency)
cop(unfortunate, be)
det(unfortunate, the)
advmod(unfortunate, most)
acl:relcl(conflict, unfortunate)
case(all, of)
obl(unfortunate, all)
punct(unfortunate, ,)
mark(have, for)
nsubj(have, they)
advcl(unfortunate, have)
det(feature, no)
compound(feature, redeem)
obj(have, feature)
advmod(have, whatsoever)
punct(appear, .)
expl(difficult, it)
cop(difficult, be)
root(ROOT, difficult)
mark(say, to)
csubj(difficult, say)
nsubj:pass(do, what)
aux(do, can)
aux:pass(do, be)
ccomp(say, do)
case(they, about)
obl(do, they)
mark(learn, except)
mark(learn, that)
nsubj(learn, we)
aux(learn, must)
advcl(do, learn)
mark(recognize, to)
xcomp(learn, recognize)
mark(they, when)
nsubj(they, it)
cop(when, be)
ccomp(recognize, they)
punct(pretext, ,)
cc(pretext, rather)
fixed(rather, than)
conj(they, pretext)
case(they, for)
nmod(pretext, they)
punct(pretext, ,)
nsubj(cause, that)
aux(cause, be)
acl:relcl(pretext, cause)
det(trouble, the)
obj(cause, trouble)
punct(do, ,)
cc(do, and)
conj(cause, do)
obj(do, everything)
amod(everything, possible)
mark(nurture, to)
advcl(possible, nurture)
det(personality, the)
amod(personality, healthy)
obj(nurture, personality)
nsubj(prevent, that)
aux(prevent, will)
acl:relcl(personality, prevent)
det(development, the)
obj(prevent, development)
case(deficiency, of)
amod(deficiency, such)
nmod(development, deficiency)
punct(difficult, . )
nummod(perennial, 2)
punct(2, ))
mark(perennial, while)
det(factor, the)
compound(factor, personality)
nsubj(perennial, factor)
nsubj(aggravate, that)
acl:relcl(factor, aggravate)
amod(conflict, interfaith)
obj(aggravate, conflict)
aux(perennial, may)
cop(perennial, be)
root(ROOT, perennial)
punct(variable, ,)
nsubj(variable, nationalism)
cop(variable, be)
advmod(variable, more)
parataxis(perennial, variable)
punct(perennial, .)
det(instance, the)
amod(instance, specific)
nsubj(version, instance)
nsubj(have, I)
acl:relcl(instance, have)
case(mind, in)
obl(have, mind)
cop(version, be)
det(version, the)
amod(version, afro-asian)
root(ROOT, version)
nsubj(gain, which)
aux(gain, have)
acl:relcl(version, gain)
obj(gain, prominence)
advmod(half, only)
case(half, in)
det(half, this)
amod(half, second)
obl(gain, half)
case(century, of)
det(century, the)
amod(century, twentieth)
nmod(half, century)
punct(version, .)
advcl(aflame, emerge)
case(century, from)
det(century, the)
nummod(century, two)
obl(emerge, century)
case(domination, of)
amod(domination, colonial)
nmod(century, domination)
punct(aflame, ,)
det(world, the)
amod(asian, Afro)
punct(asian, -)
amod(world, asian)
nsubj(aflame, world)
cop(aflame, be)
root(ROOT, aflame)
case(nationalism, with)
det(nationalism, a)
obl(aflame, nationalism)
nsubj(have, that)
acl:relcl(nationalism, have)
amod(empire, undone)
obj(have, empire)
punct(aflame, .)
advmod(less, no)
advmod(two, less)
fixed(less, than)
compound(two, twenty)
punct(two, -)
nummod(nation, two)
nsubj(achieve, nation)
aux(achieve, have)
advmod(achieve, already)
root(ROOT, achieve)
obj(achieve, independence)
case(War, since)
compound(War, World)
obl(achieve, War)
nummod(War, 2)
punct(grow, ,)
punct(grow, ,)
cc(grow, and)
det(number, the)
nsubj(grow, number)
aux(grow, be)
conj(achieve, grow)
case(year, by)
det(year, the)
obl(grow, year)
punct(achieve, .)
case(consequence, as)
det(consequence, a)
amod(consequence, obvious)
obl(grow, consequence)
punct(grow, ,)
nsubj(grow, obstacle)
case(communication, to)
amod(communication, genuine)
amod(communication, interfaith)
nmod(obstacle, communication)
aux(grow, have)
root(ROOT, grow)
advmod(formidable, more)
xcomp(grow, formidable)
case(area, in)
nummod(area, one)
amod(area, important)
obl(formidable, area)
punct(relation, :)
appos(formidable, relation)
case(Christians, between)
nmod(relation, Christians)
cc(non-Christians, and)
conj(Christians, non-Christians)
case(land, in)
det(land, these)
nmod(relation, land)
punct(grow, .)
nsubj(able, Colonialism)
advmod(Colonialism, alone)
aux(able, would)
aux(able, have)
cop(able, be)
root(ROOT, able)
mark(make, to)
xcomp(able, make)
det(difficulty, these)
obj(make, difficulty)
xcomp(make, serious)
punct(able, ,)
case(Christianity, for)
nsubj:pass(tie, Christianity)
aux:pass(tie, be)
advmod(closely, so)
advmod(tie, closely)
conj(able, tie)
case(colonialism, to)
obl(tie, colonialism)
case(mind, in)
det(mind, the)
obl(tie, mind)
case(people, of)
det(people, these)
nmod(mind, people)
mark(tend, that)
nsubj(tend, repudiation)
case(one, of)
det(one, the)
nmod(repudiation, one)
aux(tend, have)
acl(people, tend)
advmod(tend, automatically)
case(repudiation, toward)
det(repudiation, the)
obl(tend, repudiation)
case(other, of)
det(other, the)
nmod(repudiation, other)
punct(able, .)
advmod(turn, actually)
punct(turn, ,)
advmod(turn, however)
punct(turn, ,)
nsubj(turn, this)
root(ROOT, turn)
compound:prt(turn, out)
mark(part, to)
cop(part, be)
advmod(part, only)
xcomp(turn, part)
case(picture, of)
det(picture, the)
nmod(part, picture)
punct(turn, .)
nsubj(abet, Nationalism)
aux(abet, have)
root(ROOT, abet)
advmod(only, not)
advmod(repudiation, only)
det(repudiation, the)
obj(abet, repudiation)
case(religion, of)
amod(religion, foreign)
nmod(repudiation, religion)
cc(revival, but)
det(revival, the)
conj(repudiation, revival)
case(one, of)
amod(one, native)
nmod(revival, one)
punct(revival, ,)
nsubj(lie, some)
case(which, of)
obl(lie, which)
aux(lie, have)
aux(lie, be)
acl:relcl(one, lie)
case(slumber, in)
obl(lie, slumber)
case(century, for)
obl(lie, century)
punct(abet, .)
det(truth, the)
nsubj(be, truth)
root(ROOT, be)
mark(serve, that)
det(revival, any)
nsubj(serve, revival)
case(religion, of)
amod(religion, traditional)
cc(indigenous, and)
conj(traditional, indigenous)
nmod(revival, religion)
aux(serve, will)
ccomp(be, serve)
mark(promote, to)
xcomp(serve, promote)
det(sense, that)
obj(promote, sense)
case(identity, of)
nmod(sense, identity)
cc(Volksgeist, and)
conj(identity, Volksgeist)
obj(need, which)
det(nation, these)
amod(nation, young)
nsubj(need, nation)
advmod(much, very)
advmod(need, much)
acl:relcl(sense, need)
punct(be, .)
advmod(lead, Insofar)
mark(claim, as)
det(nation, these)
nsubj(claim, nation)
advcl(lead, claim)
case(tradition, to)
amod(tradition, incarnate)
obl(claim, tradition)
cc(way, and)
conj(tradition, way)
case(life, of)
nmod(way, life)
nsubj(constitute, which)
acl:relcl(tradition, constitute)
amod(justification, ultimate)
punct(justification, ,)
amod(justification, trans-)
amod(justification, political)
obj(constitute, justification)
case(existence, for)
nmod:poss(existence, they)
nmod(justification, existence)
punct(lead, ,)
amod(people, such)
nsubj:pass(lead, people)
aux:pass(lead, be)
advmod(lead, inevitably)
root(ROOT, lead)
mark(emphasize, to)
advcl(lead, emphasize)
det(way, the)
obj(emphasize, way)
case(which, in)
obl(theirs, which)
det(tradition, these)
nsubj(theirs, tradition)
cc(way, and)
conj(tradition, way)
cop(theirs, be)
acl:relcl(way, theirs)
cc(someone, rather)
fixed(rather, than)
conj(theirs, someone)
amod(someone, else)
case(someone, 's)
punct(lead, .)
det:predet(this, all)
nsubj(work, this)
root(ROOT, work)
advmod(work, severely)
case(kind, against)
det(kind, the)
obl(work, kind)
case(communication, of)
amod(communication, cross-cultural)
nmod(kind, communication)
case(which, for)
obl(stand, which)
amod(mission, christian)
nsubj(stand, mission)
acl:relcl(communication, stand)
punct(work, .)
nsubj(tend, Africans)
cc(asians, and)
conj(Africans, asians)
root(ROOT, tend)
mark(consider, to)
xcomp(tend, consider)
advmod(only, not)
cc:preconj(mission, only)
obj(consider, mission)
cc(church, but)
det(church, the)
amod(church, local)
conj(mission, church)
nsubj(produce, they)
aux(produce, have)
acl:relcl(church, produce)
case(center, as)
obl(produce, center)
cc(agent, and)
conj(center, agent)
case(culture, of)
amod(culture, western)
nmod(center, culture)
cc(ideology, and)
conj(culture, ideology)
mark(propaganda, if)
advmod(propaganda, not)
case(propaganda, of)
amod(propaganda, direct)
amod(propaganda, political)
conj(culture, propaganda)
punct(tend, .)
det(people, the)
nsubj(Christians, people)
amod(people, hardest)
acl(people, hit)
case(suspicion, by)
det(suspicion, this)
obl(hit, suspicion)
cop(Christians, be)
punct(Christians, ,)
advmod(Christians, of)
fixed(of, course)
punct(Christians, ,)
root(ROOT, Christians)
case(mainland, on)
det(mainland, the)
nmod(Christians, mainland)
case(China, of)
nmod(mainland, China)
punct(Christians, .)
cc(argue, but)
det(problem, the)
nsubj(extend, problem)
root(ROOT, extend)
advmod(extend, elsewhere)
punct(extend, .)
case(example, for)
obl(argue, example)
punct(argue, ,)
case(Burma, in)
obl(argue, Burma)
cc(Buddhists, and)
compound(Buddhists, Ceylon)
amod(Buddhists, many)
nsubj(argue, Buddhists)
conj(extend, argue)
mark(ought, that)
nsubj(ought, Buddhism)
ccomp(argue, ought)
mark(religion, to)
cop(religion, be)
det(religion, the)
amod(religion, official)
compound(religion, state)
xcomp(ought, religion)
punct(extend, .)
case(1960, in)
obl(nationalize, 1960)
nsubj(nationalize, Ceylon)
root(ROOT, nationalize)
nmod:poss(sectarian, its)
obj(nationalize, sectarian)
punct(sectarian, --)
advmod(Christian, preponderantly)
appos(sectarian, Christian)
punct(Christian, --)
appos(sectarian, school)
punct(school, ,)
case(rejoice, to)
det(rejoice, the)
obl(nationalize, rejoice)
case(most, of)
nmod(rejoice, most)
case(Buddhists, of)
nmod:poss(Buddhists, its)
nummod(Buddhists, 7,000,000)
nmod(most, Buddhists)
cc(lament, and)
det(lament, the)
conj(rejoice, lament)
case(Catholics, of)
nmod:poss(Catholics, its)
nummod(Catholics, 800,000)
compound(Catholics, Roman)
nmod(lament, Catholics)
punct(nationalize, .)
advmod(impose, again)
punct(impose, ,)
nsubj(impose, India)
aux(impose, have)
root(ROOT, impose)
amod(barrier, formidable)
obj(impose, barrier)
case(entrance, against)
det(entrance, the)
nmod(barrier, entrance)
case(missionary, of)
amod(missionary, additional)
nmod(entrance, missionary)
punct(expect, ,)
cc(expect, and)
amod(party, fanatical)
amod(party, hindu)
nsubj:pass(expect, party)
aux:pass(expect, be)
conj(impose, expect)
mark(seek, to)
xcomp(expect, seek)
amod(action, further)
obj(seek, action)
case(Christians, against)
nmod(action, Christians)
mark(make, once)
det(influence, the)
nsubj:pass(go, influence)
acl(influence, make)
case(tolerance, for)
obl(make, tolerance)
case(Nehru, due)
fixed(due, to)
obl(make, Nehru)
cc(follower, and)
nmod:poss(follower, he)
conj(Nehru, follower)
aux:pass(go, be)
advcl(seek, go)
punct(impose, .)
det(closing, the)
amod(closing, progressive)
nsubj:pass(epitomize, closing)
case(ear, of)
amod(asian, Afro)
punct(asian, -)
amod(ear, asian)
nmod(closing, ear)
case(message, to)
det(message, the)
amod(message, christian)
nmod(ear, message)
aux:pass(epitomize, be)
root(ROOT, epitomize)
case(conversation, in)
det(conversation, a)
obl(epitomize, conversation)
nsubj(have, I)
acl:relcl(conversation, have)
nummod(year, three)
obl:npmod(ago, year)
advmod(have, ago)
mark(fly, while)
advcl(have, fly)
case(Jerusalem, from)
obl(fly, Jerusalem)
case(Cairo, to)
obl(fly, Cairo)
punct(epitomize, . )
nsubj:pass(seat, I)
aux:pass(seat, be)
root(ROOT, seat)
advmod(seat, next)
case(director, to)
det(director, the)
obl(seat, director)
case(program, of)
det(adventist, the)
compound(Day, Seventh)
compound(adventist, Day)
nmod:poss(program, adventist)
case(adventist, 's)
compound(radio, world)
compound(program, radio)
nmod(director, program)
punct(seat, .)
nsubj(say, he)
root(ROOT, say)
mark(available, that)
case(tour, on)
nmod:poss(tour, he)
obl(available, tour)
det(year, the)
amod(year, precede)
obl:tmod(available, year)
det(number, a)
amod(number, considerable)
nsubj(available, number)
case(hour, of)
nmod(number, hour)
aux(available, would)
aux(available, have)
cop(available, be)
ccomp(say, available)
case(he, to)
obl(available, he)
case(network, on)
amod(network, japanese)
compound(network, radio)
obl(available, network)
punct(lack, ,)
cc(lack, but)
mark(lack, that)
nsubj(lack, he)
aux(lack, have)
advmod(lack, then)
conj(available, lack)
det(fund, the)
obj(lack, fund)
mark(contract, to)
acl(fund, contract)
case(they, for)
obl(contract, they)
punct(say, .)
mark(return, after)
advcl(discover, return)
case(States, to)
det(States, the)
compound(States, United)
obl(return, States)
cc(raise, and)
conj(return, raise)
det(money, the)
obj(raise, money)
punct(discover, ,)
nsubj(discover, he)
root(ROOT, discover)
mark(get, on)
advcl(discover, get)
advmod(get, back)
case(Japan, to)
obl(back, Japan)
mark(available, that)
det(hour, the)
nsubj(available, hour)
cop(available, be)
advmod(longer, no)
advmod(available, longer)
ccomp(discover, available)
punct(discover, .)
expl(be, it)
root(ROOT, be)
advmod(be, not)
mark(contract, that)
nsubj:pass(contract, they)
aux(contract, have)
aux:pass(contract, be)
ccomp(be, contract)
obl(contract, for)
case(interval, during)
det(interval, the)
obl(contract, interval)
punct(be, ;)
punct(be, ;)
nsubj:pass(purchase, they)
advmod(purchase, simply)
aux(purchase, could)
advmod(longer, no)
advmod(purchase, longer)
aux:pass(purchase, be)
parataxis(be, purchase)
case(purpose, for)
amod(purpose, missionary)
obl(purchase, purpose)
punct(be, .)
expl(unfair, it)
cop(unfair, be)
advmod(unfair, not)
root(ROOT, unfair)
mark(add, to)
csubj(unfair, add)
case(side, on)
det(side, the)
amod(side, other)
obl(add, side)
mark(contribute, that)
det(approach, the)
amod(approach, crude)
cc(vitriolic, and)
advmod(vitriolic, almost)
conj(crude, vitriolic)
nsubj(contribute, approach)
case(sect, of)
amod(sect, certain)
amod(sect, fundamentalist)
nmod(approach, sect)
case(culture, toward)
det(culture, the)
nmod(sect, culture)
cc(religion, and)
conj(culture, religion)
case(which, among)
obl(work, which)
nsubj(work, they)
acl:relcl(culture, work)
aux(contribute, have)
ccomp(add, contribute)
advmod(contribute, measurably)
case(heighten, to)
det(heighten, this)
obl(contribute, heighten)
case(sentiment, of)
amod(sentiment, anti-christian)
nmod(heighten, sentiment)
punct(unfair, .)
advmod(group, ironically)
punct(group, ,)
nsubj(group, these)
cop(group, be)
det(group, the)
root(ROOT, group)
nsubj(double, which)
aux(double, have)
acl:relcl(group, double)
cc(triple, or)
conj(double, triple)
nmod:poss(effort, they)
amod(effort, missionary)
obj(double, effort)
case(War, since)
compound(War, World)
nmod(effort, War)
nummod(War, 2)
punct(double, ,)
punct(double, ,)
mark(maintain, while)
det(denomination, the)
advmod(establish, more)
amod(denomination, establish)
nsubj(maintain, denomination)
aux(maintain, be)
advmod(maintain, barely)
advcl(double, maintain)
amod(staff, pre-war)
obj(maintain, staff)
punct(group, .)
mark(emphasize, although)
nsubj(emphasize, I)
aux(emphasize, have)
advcl(be, emphasize)
det(barrier, the)
obj(emphasize, barrier)
obj(raise, which)
det(nationalism, a)
amod(nationalism, arouse)
nsubj(raise, nationalism)
aux(raise, have)
acl:relcl(barrier, raise)
case(relation, against)
obl(raise, relation)
case(Christians, between)
nmod(relation, Christians)
cc(non-Christians, and)
conj(Christians, non-Christians)
case(Asia, in)
nmod(Christians, Asia)
punct(be, ,)
det(fact, the)
nsubj(be, fact)
root(ROOT, be)
mark(wide, that)
det(development, this)
nsubj(wide, development)
aux(wide, have)
advmod(wide, also)
ccomp(be, wide)
det(gulf, the)
obj(wide, gulf)
case(religion, between)
amod(religion, certain)
amod(religion, Afro)
amod(religion, -asian)
nmod(gulf, religion)
nmod:npmod(religion, themselves)
punct(be, .)
det(partition, the)
nsubj(improve, partition)
case(India, of)
nmod(partition, India)
aux(improve, have)
advmod(improve, hardly)
root(ROOT, improve)
obj(improve, relation)
case(Hindus, between)
nmod(relation, Hindus)
cc(Muslims, and)
conj(Hindus, Muslims)
punct(improve, ;)
punct(improve, ;)
advmod(have, neither)
parataxis(improve, have)
det(establishment, the)
obj(have, establishment)
case(state, of)
det(state, the)
nmod(establishment, state)
case(Israel, of)
nmod(state, Israel)
acl(state, foster)
obj(foster, harmony)
case(Muslims, between)
nmod(harmony, Muslims)
cc(Jews, and)
conj(Muslims, Jews)
punct(3, . )
nummod(turn, 3)
punct(3, ))
nsubj(turn, I)
parataxis(have, turn)
advmod(turn, finally)
case(development, to)
amod(development, several)
amod(development, theological)
obl(turn, development)
punct(reconsider, . )
nummod(reconsider, 1)
punct(reconsider, .)
nsubj(reconsider, theocracy)
parataxis(turn, reconsider)
punct(reconsider, .)
det(world, the)
amod(world, modern)
nsubj:pass(mark, world)
aux(mark, have)
aux:pass(mark, be)
root(ROOT, mark)
case(disaffection, by)
amod(disaffection, progressive)
obl(mark, disaffection)
case(claim, with)
obl(mark, claim)
case(sanction, to)
amod(sanction, divine)
nmod(claim, sanction)
case(state, for)
det(state, the)
nmod(sanction, state)
punct(state, ,)
appos(state, whatever)
nmod:poss(form, its)
amod(form, political)
nsubj(whatever, form)
punct(mark, .)
det(constitution, the)
amod(constitution, american)
nsubj(historic, constitution)
cop(historic, be)
root(ROOT, historic)
case(point, at)
det(point, this)
obl(historic, point)
mark(provide, in)
acl(point, provide)
obj(provide, that)
punct(historic, ``)
nsubj(make, Congress)
aux(make, shall)
root(ROOT, make)
det(law, no)
obj(make, law)
acl(law, respect)
det(establishment, a)
obj(respect, establishment)
case(religion, of)
nmod(establishment, religion)
cc(prohibiting, or)
conj(religion, prohibiting)
det(exercise, the)
amod(exercise, free)
obj(prohibiting, exercise)
advmod(prohibiting, thereof)
punct(exercise, '')
punct(make, .)
nsubj(go, one)
case(jurist, of)
nmod:poss(jurist, we)
amod(jurist, foremost)
nmod(one, jurist)
punct(jurist, ,)
appos(jurist, David)
flat(David, Dudley)
flat(David, field)
punct(go, ,)
aux(go, have)
parataxis(make, go)
advmod(far, so)
advmod(go, far)
mark(call, as)
mark(call, to)
advcl(go, call)
det(provision, this)
obj(call, provision)
punct(achievement, ``)
det(achievement, the)
amod(achievement, greatest)
nsubj(make, achievement)
advmod(make, ever)
acl:relcl(provision, make)
case(course, in)
det(course, the)
obl(make, course)
case(history, of)
amod(history, human)
nmod(course, history)
punct(make, '')
punct(make, .)
det(trend, the)
nsubj(recognition, trend)
case(religion, throughout)
det(world, the)
nmod:poss(religion, world)
case(world, 's)
nmod(trend, religion)
aux(recognition, have)
cop(recognition, be)
case(recognition, toward)
det(recognition, a)
parataxis(make, recognition)
case(validity, of)
case(least, at)
nmod(the, least)
det(validity, the)
amod(validity, practical)
nmod(recognition, validity)
case(enactment, of)
det(enactment, this)
amod(enactment, constitutional)
nmod(validity, enactment)
punct(create, .)
nsubj:pass(create, Pakistan)
aux:pass(create, be)
acl:relcl(validity, create)
case(1947, in)
obl(create, 1947)
advmod(create, expressly)
case(state, as)
det(state, a)
amod(state, muslim)
obl(create, state)
punct(do, ,)
cc(do, but)
mark(take, when)
det(army, the)
nsubj(take, army)
advcl(do, take)
advmod(eleven, over)
nummod(year, eleven)
obl:npmod(later, year)
advmod(do, later)
nsubj(do, it)
conj(create, do)
advmod(do, so)
case(wave, on)
det(wave, a)
obl(do, wave)
case(impatience, of)
amod(impatience, mass)
nmod(wave, impatience)
nsubj:pass(direct, which)
aux:pass(direct, be)
acl:relcl(wave, direct)
case(part, in)
obl(direct, part)
case(inability, against)
det(inability, the)
obl(direct, inability)
case(leader, of)
amod(leader, political)
cc(religious, and)
conj(political, religious)
nmod(inability, leader)
mark(think, to)
acl(inability, think)
nmod:poss(way, they)
obj(think, way)
advmod(meaning, through)
case(meaning, to)
det(meaning, the)
obl(think, meaning)
case(Islam, of)
nmod(meaning, Islam)
case(situation, for)
det(situation, the)
amod(situation, modern)
amod(situation, political)
nmod(meaning, situation)
punct(make, .)
punct(make, ``)
obj(report, what)
cop(what, be)
det(point, the)
nsubj(what, point)
punct(point, '')
punct(report, ,)
nsubj(report, Charles)
flat(Charles, Adams)
root(ROOT, report)
det(Pakistanis, the)
obj(report, Pakistanis)
mark(ask, as)
advcl(report, ask)
punct(report, ,)
punct(report, ``)
mark(demand, in)
advcl(ask, demand)
det(state, a)
amod(state, islamic)
obj(demand, state)
cc(society, and)
conj(state, society)
mark(say, if)
det(one, no)
nsubj(demand, one)
punct(one, ,)
advmod(even, not)
advmod(doctor, even)
det(doctor, the)
appos(one, doctor)
case(law, of)
det(law, the)
amod(law, sacred)
nmod(doctor, law)
nmod:npmod(law, themselves)
punct(say, ,)
aux(say, can)
acl:relcl(doctor, say)
advmod(say, clearly)
cc(what, and)
advmod(what, succinctly)
conj(say, what)
det(nature, the)
nsubj(what, nature)
case(state, of)
det:predet(state, such)
det(state, a)
nmod(nature, state)
cc(society, and)
conj(state, society)
cop(what, be)
punct(what, '')
punct(report, ?)
punct(report, ?)
det(regime, the)
amod(regime, current)
nsubj(secular, regime)
case(President, of)
nmod(regime, President)
flat(President, Mohammad)
flat(President, Ayub)
flat(President, Khan)
cop(secular, be)
advmod(secular, determinedly)
root(ROOT, secular)
punct(secular, .)
cc(name, and)
mark(name, while)
det(nation, the)
nsubj:pass(name, nation)
aux:pass(name, be)
advmod(name, formerly)
root(ROOT, name)
punct(name, ``)
det(Republic, the)
compound(Republic, Islamic)
nsubj(simply, Republic)
case(Pakistan, of)
nmod(Republic, Pakistan)
punct(Republic, '')
punct(Republic, ,)
nsubj(simply, it)
cop(simply, be)
advmod(simply, now)
root(ROOT, simply)
punct(simply, ``)
det(Republic, the)
nsubj:pass(note, Republic)
case(Pakistan, of)
nmod(Republic, Pakistan)
punct(Republic, '')
punct(Republic, .)
amod(trend, comparable)
nsubj:pass(note, trend)
aux(note, can)
aux:pass(note, be)
root(ROOT, note)
advmod(note, elsewhere)
punct(note, .)
det(regime, the)
amod(regime, new)
nsubj(muslim, regime)
case(Turkey, in)
nmod(regime, Turkey)
cop(muslim, be)
advmod(muslim, intentionally)
advmod(muslim, less)
root(ROOT, muslim)
case(predecessor, than)
nmod:poss(predecessor, its)
obl(muslim, predecessor)
punct(muslim, .)
det(party, the)
amod(party, religious)
nsubj(experience, party)
case(Israel, in)
nmod(party, Israel)
aux(experience, have)
root(ROOT, experience)
det(loss, a)
amod(loss, great)
obj(experience, loss)
case(prestige, of)
nmod(loss, prestige)
case(month, in)
amod(month, recent)
obl(experience, month)
punct(experience, .)
case(year, during)
det(year, the)
obl(experience, year)
mark(pass, when)
nsubj(pass, Israel)
aux(pass, be)
acl:relcl(year, pass)
case(crisis, from)
obl(pass, crisis)
case(crisis, to)
obl(pass, crisis)
punct(campaign, --)
det(campaign, the)
compound(campaign, Sinai)
appos(crisis, campaign)
punct(campaign, ,)
det(infusion, the)
appos(campaign, infusion)
case(multitude, of)
nmod(infusion, multitude)
case(immigrant, of)
amod(immigrant, penniless)
nmod(multitude, immigrant)
punct(experience, --)
nsubj:pass(feel, it)
aux:pass(feel, be)
parataxis(experience, feel)
mark(serve, that)
det(purpose, the)
nsubj:pass(serve, purpose)
case(unity, of)
amod(unity, national)
nmod(purpose, unity)
aux(serve, could)
aux:pass(serve, be)
advmod(serve, best)
ccomp(feel, serve)
mark(be, if)
det(majority, the)
amod(majority, secular)
nsubj(be, majority)
advcl(serve, be)
mark(yield, to)
xcomp(be, yield)
case(party, to)
det(party, the)
amod(party, religious)
obl(yield, party)
punct(experience, .)
advmod(dispose, now)
mark(enjoy, that)
nsubj(enjoy, Israel)
advcl(dispose, enjoy)
amod(prosperity, relative)
obj(enjoy, prosperity)
cc(reduction, and)
det(reduction, a)
conj(prosperity, reduction)
case(tension, of)
nmod(reduction, tension)
punct(dispose, ,)
det(secularist, the)
nsubj:pass(dispose, secularist)
aux:pass(dispose, be)
advmod(dispose, less)
root(ROOT, dispose)
mark(compromise, to)
xcomp(dispose, compromise)
punct(dispose, .)
cc(serve, and)
case(country, in)
det(country, this)
nmod:poss(delineation, country)
nmod:poss(delineation, Gustave)
flat(Gustave, Weigel)
case(Gustave, 's)
nsubj(serve, delineation)
case(line, of)
det(line, the)
nmod(delineation, line)
case(order, between)
det(order, the)
amod(order, sacral)
cc(secular, and)
conj(sacral, secular)
nmod(line, order)
case(campaign, during)
det(campaign, the)
amod(campaign, last)
amod(campaign, presidential)
nmod(order, campaign)
conj(dispose, serve)
mark(provide, to)
xcomp(serve, provide)
det(defense, a)
advmod(impressive, most)
amod(defense, impressive)
amod(defense, Roman)
amod(defense, Catholic)
obj(provide, defense)
case(autonomy, of)
det(autonomy, the)
amod(autonomy, practical)
nmod(defense, autonomy)
case(church, of)
cc:preconj(church, both)
nmod(autonomy, church)
cc(state, and)
conj(church, state)
punct(dispose, .)
det(failure, the)
nsubj(add, failure)
case(time, at)
det(time, that)
nmod(failure, time)
case(bishop, of)
det(bishop, the)
amod(bishop, Puerto)
amod(bishop, Rican)
nmod(time, bishop)
mark(control, to)
acl(bishop, control)
det(vote, the)
obj(control, vote)
case(people, of)
nmod:poss(people, they)
nmod(vote, people)
root(ROOT, add)
det(ring, a)
obj(add, ring)
case(sense, of)
amod(sense, good)
nmod(ring, sense)
case(argument, to)
nmod:poss(argument, Father)
flat(Father, Weigel)
case(Father, 's)
amod(argument, theological)
nmod(sense, argument)
punct(add, .)
advmod(seem, everywhere)
expl(seem, there)
root(ROOT, seem)
mark(recognition, to)
cop(recognition, be)
det(recognition, a)
amod(recognition, grow)
xcomp(seem, recognition)
case(fact, of)
det(fact, the)
nmod(recognition, fact)
mark(fallible, that)
nsubj(fallible, government)
cc(institution, and)
amod(institution, religious)
conj(government, institution)
amod(government, alike)
cop(fallible, be)
advmod(fallible, too)
acl(fact, fallible)
cc(corruptible, and)
conj(fallible, corruptible)
punct(fallible, --)
case(word, in)
det(word, a)
obl(fallible, word)
punct(human, ,)
advmod(human, too)
amod(word, human)
punct(human, --)
mark(warrant, to)
advcl(fallible, warrant)
det(claim, any)
obj(warrant, claim)
mark(maintain, of)
acl(claim, maintain)
obj(maintain, partnership)
case(divine, with)
det(divine, the)
obl(maintain, divine)
punct(seem, . )
nummod(reconsider, 2)
punct(2, .)
nsubj(reconsider, salvation)
root(ROOT, reconsider)
punct(reconsider, .)
nmod:poss(father, my)
nsubj(go, father)
root(ROOT, go)
case(missionary, as)
det(missionary, a)
obl(go, missionary)
case(China, to)
nmod(missionary, China)
case(generation, in)
det(generation, a)
obl(go, generation)
nsubj(respond, that)
acl:relcl(generation, respond)
case(speaker, to)
compound(speaker, Student)
compound(Movement, Volunteer)
compound(speaker, Movement)
obl(respond, speaker)
nsubj(hold, who)
acl:relcl(speaker, hold)
obj(hold, watch)
case(hand, in)
nmod:poss(hand, they)
obl(hold, hand)
cc(announce, and)
conj(hold, announce)
case(student, to)
det(student, the)
obl(announce, student)
case(audience, in)
nmod:poss(audience, they)
nmod(student, audience)
advmod(many, how)
amod(soul, many)
amod(soul, chinese)
nsubj(go, soul)
aux(go, be)
acl:relcl(audience, go)
case(hell, to)
obl(go, hell)
det(second, each)
obl:tmod(go, second)
mark(there, because)
det(student, these)
nsubj(there, student)
cop(there, be)
advmod(there, not)
case(there, over)
advcl(go, there)
advcl(there, save)
obj(save, they)
punct(go, .)
det(mention, that)
nsubj(bring, mention)
case(this, of)
nmod(mention, this)
aux(bring, should)
root(ROOT, bring)
obj(bring, smile)
case(lip, to)
nmod:poss(lip, we)
obl(bring, lip)
obl:tmod(clear, today)
cop(clear, be)
advmod(clear, as)
parataxis(bring, clear)
det(indication, a)
nsubj(clear, indication)
mark(wish, as)
nsubj(wish, we)
aux(wish, could)
advcl(clear, wish)
case(extent, of)
det(extent, the)
obl(wish, extent)
case(attitude, to)
det(attitude, which)
nsubj(change, attitude)
aux(change, have)
acl:relcl(extent, change)
punct(bring, . )
nsubj(mean, I)
aux(mean, do)
advmod(mean, not)
root(ROOT, mean)
mark(imply, to)
xcomp(mean, imply)
mark(adopt, that)
nsubj(adopt, Christians)
aux(adopt, have)
ccomp(imply, adopt)
det(assumption, the)
amod(assumption, liberal)
obj(adopt, assumption)
punct(adopt, ,)
advmod(prevalent, so)
parataxis(adopt, prevalent)
case(Hinduism, in)
obl(prevalent, Hinduism)
punct(prevalent, ,)
mark(path, that)
det(religion, all)
nsubj(path, religion)
cop(path, be)
advmod(path, merely)
amod(path, different)
ccomp(prevalent, path)
case(summit, to)
det(summit, the)
amod(summit, same)
nmod(path, summit)
punct(reflect, .)
nsubj(reflect, Leslie)
flat(Leslie, Newbiggin)
parataxis(mean, reflect)
det(position, the)
amod(position, dominant)
obj(reflect, position)
case(Council, within)
det(Council, the)
compound(Council, World)
nmod(position, Council)
case(church, of)
nmod(Council, church)
mark(say, when)
nsubj(say, he)
advcl(reflect, say)
punct(mean, ,)
punct(mean, ``)
nsubj(claim, we)
aux(claim, must)
root(ROOT, claim)
obj(claim, absoluteness)
cc(finality, and)
conj(absoluteness, finality)
case(Christ, for)
nmod(absoluteness, Christ)
cc(work, and)
nmod:poss(work, he)
amod(work, finish)
conj(Christ, work)
punct(forbid, ,)
cc(forbid, but)
mark(forbid, that)
advmod(claim, very)
nsubj(forbid, claim)
conj(claim, forbid)
obj(forbid, we)
mark(claim, to)
xcomp(forbid, claim)
obj(claim, absoluteness)
cc(finality, and)
conj(absoluteness, finality)
case(understanding, for)
nmod:poss(understanding, we)
obl(claim, understanding)
case(it, of)
nmod(understanding, it)
punct(understanding, '')
punct(qualification, .)
nmod:poss(qualification, Newbiggin)
case(Newbiggin, 's)
nsubj(significance, qualification)
case(claim, on)
det(claim, the)
amod(claim, christian)
nmod(qualification, claim)
cop(significance, be)
case(significance, of)
amod(significance, considerable)
conj(claim, significance)
punct(claim, .)
det(Church, the)
compound(Catholic, Roman)
compound(Church, Catholic)
nsubj(excommunicated, Church)
aux(excommunicated, have)
root(ROOT, excommunicated)
obj(excommunicated, one)
case(priest, of)
nmod:poss(priest, its)
nmod(one, priest)
punct(priest, ,)
appos(priest, Father)
flat(Father, Feeney)
punct(excommunicated, ,)
mark(insist, for)
advcl(excommunicated, insist)
mark(be, that)
expl(be, there)
ccomp(insist, be)
det(salvation, no)
nsubj(be, salvation)
case(church, outside)
det(church, the)
amod(church, visible)
nmod(salvation, church)
punct(excommunicated, .)
mark(mention, in)
root(ROOT, mention)
obj(mention, this)
case(reconsider, under)
punct(reconsider, ``)
compound(reconsider, salvation)
obl(mention, reconsider)
punct(reconsider, '')
nsubj(mean, I)
aux(mean, do)
advmod(mean, not)
root(ROOT, mean)
mark(imply, to)
xcomp(mean, imply)
mark(change, that)
amod(doctrine, Roman)
amod(doctrine, Catholic)
nsubj(change, doctrine)
aux(change, have)
ccomp(imply, change)
case(area, in)
det(area, this)
obl(change, area)
cc(become, but)
advmod(become, rather)
fixed(rather, that)
nsubj(become, it)
aux(become, have)
conj(change, become)
xcomp(become, clearer)
case(community, to)
det(community, the)
compound(community, world)
obl(clearer, community)
obj(be, what)
det(doctrine, that)
nsubj(be, doctrine)
acl:relcl(community, be)
punct(be, .)
mark(say, when)
nsubj(say, they)
advcl(be, say)
mark(right, that)
case(circumstance, under)
det(circumstance, no)
obl(right, circumstance)
aux(right, would)
nsubj(right, it)
advmod(right, ever)
cop(right, be)
ccomp(say, right)
mark(permit, to)
punct(permit, ``)
advcl(right, permit)
punct(permit, '')
det(termination, the)
obj(permit, termination)
case(race, of)
det(race, the)
amod(race, human)
nmod(termination, race)
case(action, by)
amod(action, human)
nmod(race, action)
punct(permit, ,)
mark(be, because)
expl(be, there)
aux(be, could)
advmod(be, not)
advmod(be, possibly)
advcl(permit, be)
det(reason, any)
amod(reason, proportionate)
compound(reason, grave)
nsubj(be, reason)
mark(justify, to)
acl(reason, justify)
det:predet(thing, such)
det(thing, a)
obj(justify, thing)
punct(know, ,)
nsubj(know, they)
parataxis(reason, know)
advmod(what, exactly)
obj(mean, what)
nsubj(mean, they)
ccomp(know, mean)
punct(mean, .)
advmod(forthcoming, of)
fixed(of, course)
punct(forthcoming, ,)
case(calculation, in)
amod(calculation, prudential)
obl(forthcoming, calculation)
punct(forthcoming, ,)
mark(balancing, in)
advcl(forthcoming, balancing)
det(good, the)
obj(balancing, good)
advmod(intend, directly)
xcomp(balancing, intend)
cc(do, and)
conj(intend, do)
case(unintended, against)
det(unintended, the)
compound(unintended, evil)
obl(do, unintended)
cc(do, and)
advmod(do, indirectly)
conj(unintended, do)
punct(forthcoming, ,)
det(precision, no)
amod(precision, greater)
nsubj(forthcoming, precision)
aux(forthcoming, can)
cop(forthcoming, be)
root(ROOT, forthcoming)
mark(allow, than)
det(subject, the)
nsubj(allow, subject)
advcl(forthcoming, allow)
punct(forthcoming, .)
cc(seem, yet)
expl(seem, it)
root(ROOT, seem)
xcomp(seem, clear)
mark(be, that)
expl(be, there)
aux(be, can)
ccomp(clear, be)
det(good, no)
amod(great, good)
advmod(great, sufficiently)
nsubj(be, great)
punct(evil, ,)
cc(evil, or)
conj(great, evil)
acl(evil, repel)
advmod(grave, sufficiently)
obj(repel, grave)
punct(be, ,)
mark(warrant, to)
advcl(be, warrant)
det(destruction, the)
obj(warrant, destruction)
case(mankind, of)
nmod(destruction, mankind)
case(action, by)
nmod:poss(action, man)
case(man, 's)
amod(action, own)
obl(warrant, action)
punct(seem, . )
nsubj(mean, I)
parataxis(talk, mean)
punct(talk, ,)
advmod(talk, however)
punct(talk, ,)
mark(know, that)
det(theologian, the)
amod(theologian, moral)
nsubj(know, theologian)
ccomp(mean, know)
obj(mean, what)
nsubj(mean, he)
ccomp(know, mean)
case(permit, by)
punct(permit, ``)
obl(mean, permit)
punct(permit, '')
punct(talk, .)
nsubj(talk, he)
aux(talk, be)
advmod(talk, not)
root(ROOT, talk)
case(main, in)
det(main, the)
obl(talk, main)
case(probability, about)
obl(main, probability)
punct(risk, ,)
conj(probability, risk)
cc(danger, and)
conj(probability, danger)
case(general, in)
nmod(probability, general)
punct(talk, .)
nsubj(talk, he)
aux(talk, be)
root(ROOT, talk)
case(action, about)
det(action, a)
obl(talk, action)
nsubj(do, which)
advmod(do, just)
mark(do, as)
advmod(do, efficaciously)
acl:relcl(action, do)
det(thing, a)
compound(thing, evil)
obj(do, thing)
punct(know, ()
cc(know, and)
aux:pass(know, be)
conj(do, know)
advmod(know, certainly)
cc(unavoidably, and)
advmod(lead, unavoidably)
mark(lead, to)
advcl(know, lead)
case(result, to)
det(result, this)
compound(result, evil)
obl(lead, result)
punct(lead, ))
mark(do, as)
nsubj(do, it)
advmod(do, efficaciously)
advcl(lead, do)
det(good, some)
obj(do, good)
punct(talk, .)
nsubj(talk, he)
aux(talk, be)
root(ROOT, talk)
case(effect, about)
amod(effect, double)
obl(talk, effect)
punct(effect, ,)
case(which, of)
obl(cause, which)
det(action, the)
amod(action, specific)
nsubj(cause, action)
acl:relcl(effect, cause)
advmod(one, directly)
det(one, the)
obj(cause, one)
cc(other, and)
advmod(other, indirectly)
det(other, the)
conj(one, other)
punct(cause, ,)
cc(cause, but)
conj(talk, cause)
obj(cause, both)
punct(cause, ;)
punct(talk, ;)
case(one, of)
det(one, which)
nsubj:pass(will, one)
aux:pass(will, be)
advmod(will, deliberately)
advcl(cause, will)
cc(intend, or)
conj(will, intend)
cc(intend, and)
det(other, the)
nsubj(intend, other)
advmod(intend, not)
conj(will, intend)
cc(intend, or)
advmod(intend, not)
advmod(intend, directly)
conj(intend, intend)
punct(do, ,)
cc(do, but)
advmod(do, still)
nsubj:pass(do, both)
aux:pass(do, be)
conj(intend, do)
punct(do, ,)
mark(be, while)
det(effect, the)
amod(effect, evil)
nsubj(be, effect)
advcl(do, be)
punct(do, ,)
case(consciousness, with)
amod(consciousness, equal)
obl(be, consciousness)
case(part, on)
det(part, the)
nmod(consciousness, part)
case(agent, of)
det(agent, the)
nmod(part, agent)
punct(foreknown, ,)
acl(part, foreknown)
mark(consequence, to)
cop(consequence, be)
case(consequence, among)
det(consequence, the)
xcomp(foreknown, consequence)
punct(talk, .)
nsubj(what, this)
cop(what, be)
ccomp(mean, what)
punct(what, ,)
case(sense, in)
det(sense, a)
amod(sense, technical)
obl(what, sense)
punct(what, ,)
mark(permit, to)
punct(permit, ``)
advmod(permit, only)
advcl(what, permit)
punct(permit, '')
det(result, a)
amod(result, evil)
obj(permit, result)
root(ROOT, mean)
punct(mean, .)
nsubj(mean, it)
root(ROOT, mean)
mark(do, to)
xcomp(mean, do)
obj(do, it)
cc(know, and)
mark(know, to)
conj(do, know)
nsubj(do, one)
aux(do, be)
ccomp(know, do)
obj(do, it)
punct(secondary, ,)
cc(secondary, but)
case(secondary, as)
advmod(secondary, only)
det(secondary, a)
conj(do, secondary)
mark(do, if)
amod(effect, certain)
nsubj(do, effect)
case(one, of)
det(one, the)
amod(one, good)
nmod(effect, one)
advmod(do, primarily)
advcl(secondary, do)
cc(intend, and)
conj(do, intend)
punct(mean, .)
advmod(impute, of)
fixed(of, course)
punct(impute, ,)
compound(guiltiness, grave)
nsubj:pass(impute, guiltiness)
aux(impute, may)
aux:pass(impute, be)
root(ROOT, impute)
case(action, to)
det(action, the)
amod(action, military)
obl(impute, action)
case(nation, of)
det(nation, any)
nmod(action, nation)
punct(action, ,)
cc(action, or)
case(action, to)
det(action, the)
conj(action, action)
case(leader, of)
det(leader, any)
nmod(action, leader)
cc(leader, or)
conj(leader, leader)
punct(leader, ,)
nsubj(permit, which)
mark(suppose, for)
det(suppose, any)
amod(permit, suppose)
amod(permit, good)
punct(permit, ``)
acl:relcl(leader, permit)
punct(permit, '')
punct(permit, ,)
case(sense, in)
det(sense, this)
obl(termination, sense)
punct(termination, ,)
det(termination, the)
conj(permit, termination)
case(race, of)
det(race, the)
amod(race, human)
nmod(termination, race)
case(action, by)
amod(action, human)
nmod(race, action)
punct(impute, .)
advmod(possible, certainly)
punct(possible, ,)
mark(analyze, in)
advcl(possible, analyze)
det(action, a)
obj(analyze, action)
nsubj(face, which)
advmod(face, truly)
acl:relcl(action, face)
amod(alternative, such)
obj(face, alternative)
punct(possible, ,)
punct(possible, ``)
expl(possible, it)
cop(possible, be)
advmod(possible, never)
root(ROOT, possible)
mark(preferable, that)
det(world, no)
nsubj(preferable, world)
aux(preferable, would)
cop(preferable, be)
ccomp(possible, preferable)
case(world, to)
det(world, some)
obl(preferable, world)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(possible, be)
case(truth, in)
obl(be, truth)
det(circumstance, no)
nsubj(be, circumstance)
case(which, in)
obl(present, which)
det(destruction, the)
nsubj(present, destruction)
case(life, of)
amod(life, human)
nmod(destruction, life)
acl:relcl(circumstance, present)
obj(present, itself)
case(alternative, as)
det(alternative, a)
amod(alternative, reasonable)
obl(present, alternative)
punct(alternative, '')
punct(alternative, .)
advmod(uncertain, naturally)
punct(alternative, ,)
advmod(uncertain, where)
nsubj(uncertain, one)
cc(other, or)
det(other, the)
conj(one, other)
case(effect, of)
det(effect, the)
nmod(other, effect)
case(action, of)
det(action, a)
nmod(effect, action)
cop(uncertain, be)
acl:relcl(circumstance, uncertain)
punct(have, ,)
nsubj(have, this)
parataxis(uncertain, have)
mark(take, to)
aux:pass(take, be)
xcomp(have, take)
case(account, into)
obl(take, account)
punct(have, .)
advmod(true, especially)
cop(true, be)
nsubj(true, this)
root(ROOT, true)
mark(remote, when)
punct(true, ,)
mark(remote, because)
det(effect, the)
amod(effect, good)
nsubj(remote, effect)
cop(remote, be)
advcl(true, remote)
cc(speculative, and)
conj(remote, speculative)
mark(certain, while)
det(evil, the)
nsubj(certain, evil)
cop(certain, be)
advcl(remote, certain)
cc(grave, and)
conj(certain, grave)
punct(prohibit, ,)
det(action, the)
nsubj:pass(prohibit, action)
aux:pass(prohibit, be)
parataxis(true, prohibit)
punct(true, .)
advmod(case, presumably)
punct(weigh, ,)
mark(case, if)
det(reverse, the)
nsubj(case, reverse)
cop(case, be)
det(case, the)
advcl(weigh, case)
cc(certain, and)
det(effect, the)
amod(effect, good)
nsubj(certain, effect)
cop(certain, be)
advmod(certain, more)
conj(case, certain)
case(result, than)
det(result, the)
compound(result, evil)
obl(certain, result)
nsubj(forthcoming, that)
aux(forthcoming, may)
cop(forthcoming, be)
acl:relcl(result, forthcoming)
punct(good, ,)
advmod(only, not)
cc:preconj(good, only)
aux(weigh, must)
det(good, the)
nsubj:pass(weigh, good)
cc(evil, and)
det(evil, the)
conj(good, evil)
aux:pass(weigh, be)
advmod(weigh, prudentially)
root(ROOT, weigh)
cc(find, and)
conj(weigh, find)
xcomp(find, proportionate)
punct(calculation, ,)
cc(calculation, but)
advmod(calculation, also)
nsubj:pass(weigh, calculation)
case(probability, of)
det(probability, the)
nmod(calculation, probability)
cc(degree, and)
case(degree, of)
det(degree, the)
conj(probability, degree)
case(certainty, of)
nmod(degree, certainty)
cc(uncertainty, or)
conj(certainty, uncertainty)
case(effect, in)
det(effect, the)
amod(effect, good)
cc(evil, or)
conj(good, evil)
nmod(certainty, effect)
aux(take, must)
aux:pass(take, be)
acl:relcl(degree, take)
case(account, into)
obl(take, account)
punct(weigh, .)
expl(greater, there)
aux(greater, must)
advmod(greater, not)
advmod(greater, only)
cop(greater, be)
root(ROOT, greater)
amod(greater, good)
case(evil, than)
obl(good, evil)
advmod(good, objectively)
case(view, in)
obl(good, view)
punct(probability, ,)
cc(probability, but)
advmod(probability, also)
amod(probability, greater)
conj(greater, probability)
mark(do, of)
advmod(do, actually)
acl(probability, do)
advmod(good, more)
xcomp(do, good)
case(harm, than)
obl(do, harm)
punct(greater, .)
mark(certain, if)
det(evil, a)
nsubj:pass(outweigh, evil)
nsubj(certain, which)
cop(certain, be)
acl:relcl(evil, certain)
cc(extensive, and)
conj(certain, extensive)
cc(immediate, and)
conj(certain, immediate)
aux(compensate, may)
advmod(compensate, rarely)
aux:pass(compensate, be)
conj(certain, compensate)
obl(compensate, for)
case(good, by)
det(good, a)
amod(good, problematic)
punct(speculative, ,)
amod(good, speculative)
punct(good, ,)
amod(good, future)
obl(compensate, good)
punct(take, ,)
case(take, by)
det(take, the)
amod(take, same)
obl(good, take)
advmod(present, not)
det(present, every)
amod(take, present)
punct(certain, ,)
conj(present, certain)
punct(good, ,)
cc(good, and)
amod(good, immediate)
conj(present, good)
punct(evil, ()
cc(lesser, or)
amod(evil, lesser)
conj(good, evil)
punct(evil, ))
nsubj(have, that)
aux(have, may)
acl:relcl(evil, have)
mark(do, to)
aux:pass(do, be)
xcomp(have, do)
aux(outweigh, will)
aux:pass(outweigh, be)
root(ROOT, outweigh)
case(evil, by)
det(evil, a)
amod(evil, problematic)
punct(speculative, ,)
conj(problematic, speculative)
punct(future, ,)
cc(future, and)
conj(problematic, future)
obl(outweigh, evil)
punct(outweigh, .)
advmod(begin, nevertheless)
punct(begin, ,)
case(theory, accord)
fixed(accord, to)
det(theory, the)
amod(theory, traditional)
obl(begin, theory)
punct(begin, ,)
det(man, a)
nsubj(begin, man)
root(ROOT, begin)
case(midst, in)
det(midst, the)
obl(begin, midst)
case(action, of)
nmod(midst, action)
cc(analyze, and)
nsubj(analyze, he)
conj(begin, analyze)
nmod:poss(nature, its)
obj(analyze, nature)
cc(consequence, and)
amod(consequence, immediate)
conj(nature, consequence)
advmod(analyze, before)
cc(put, or)
mark(put, while)
conj(analyze, put)
obj(put, it)
advmod(put, forth)
cc(cause, and)
conj(put, cause)
det(consequence, these)
obj(cause, consequence)
punct(begin, .)
nsubj(expect, he)
aux(expect, do)
advmod(expect, not)
root(ROOT, expect)
mark(able, to)
cop(able, be)
xcomp(expect, able)
mark(trammel, to)
xcomp(able, trammel)
compound:prt(trammel, up)
det:predet(consequence, all)
det(consequence, the)
amod(consequence, future)
obj(trammel, consequence)
case(action, of)
nmod:poss(action, he)
nmod(consequence, action)
punct(expect, .)
case(all, above)
obl(debate, all)
punct(debate, ,)
nsubj(debate, he)
aux(debate, do)
advmod(debate, not)
root(ROOT, debate)
amod(contingency, mere)
obj(debate, contingency)
punct(find, ,)
cc(find, and)
advmod(find, therefore)
punct(find, ,)
mark(dreadful, if)
nsubj(dreadful, these)
cop(dreadful, be)
advmod(dreadful, possibly)
advcl(find, dreadful)
punct(find, ,)
conj(debate, find)
obj(find, himself)
xcomp(find, force)
case(inaction, into)
obl(force, inaction)
punct(debate, .)
nsubj(do, he)
root(ROOT, do)
obj(do, what)
nsubj(can, he)
acl:relcl(what, can)
cc(may, and)
conj(can, may)
cc(must, and)
conj(may, must)
punct(do, ,)
mark(himself, without)
case(himself, regard)
obl(must, himself)
case(lord, as)
nmod(himself, lord)
case(future, of)
det(future, the)
nmod(lord, future)
cc(explain, or)
punct(lord, ,)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(cover, hand)
punct(cover, ,)
mark(cover, as)
advcl(explain, cover)
case(guilt, with)
obl(cover, guilt)
case(accident, by)
obl(cover, accident)
cc(consequence, or)
amod(consequence, unforeseen)
conj(accident, consequence)
cc(result, or)
case(result, by)
obl(permit, result)
nsubj(permit, he)
aux(permit, do)
advmod(permit, not)
punct(permit, ``)
conj(do, permit)
punct(permit, '')
case(sense, in)
det(sense, the)
nsubj(explain, sense)
advcl(permit, explain)
punct(do, .)
case(contrast, by)
obl(begin, contrast)
punct(begin, ,)
det(deal, a)
amod(deal, good)
nsubj(begin, deal)
case(pacifism, of)
amod(pacifism, nuclear)
nmod(deal, pacifism)
root(ROOT, begin)
case(contingency, with)
det(contingency, the)
obl(begin, contingency)
cc(probability, and)
det(probability, the)
conj(contingency, probability)
punct(nature, ,)
cc(nature, and)
advmod(nature, not)
case(nature, with)
det(nature, the)
amod(nature, moral)
conj(contingency, nature)
case(action, of)
det(action, the)
nmod(nature, action)
mark(do, to)
aux:pass(do, be)
acl(action, do)
punct(begin, ;)
punct(begin, ;)
cc(derive, and)
mark(derive, by)
advcl(do, derive)
amod(decision, legitimate)
obj(derive, decision)
advmod(derive, backward)
case(whatever, from)
obl(derive, whatever)
aux(conceivably, may)
advmod(whatever, conceivably)
cc(possibly, or)
conj(conceivably, possibly)
cc(result, or)
advmod(result, probably)
conj(conceivably, result)
punct(result, ,)
mark(do, whether)
mark(do, by)
nsubj(do, anyone)
aux(do, be)
advcl(find, do)
cc(accident, or)
case(accident, by)
conj(do, accident)
punct(find, ,)
nsubj(find, it)
ccomp(result, find)
obj(find, itself)
xcomp(find, drive)
case(inaction, to)
obl(drive, inaction)
punct(drive, ,)
case(action, to)
amod(action, non-political)
obl(drive, action)
case(politics, in)
nmod(action, politics)
cc(action, and)
amod(action, non-military)
conj(politics, action)
case(affair, in)
amod(affair, military)
nmod(action, affair)
punct(discovery, ,)
cc(discovery, and)
case(discovery, to)
det(discovery, the)
advmod(surprising, not)
advmod(surprising, very)
amod(discovery, surprising)
conj(find, discovery)
mark(be, that)
expl(be, there)
acl:relcl(discovery, be)
advmod(be, now)
det(distinction, no)
nsubj(be, distinction)
case(which, on)
obl(base, which)
det(defense, the)
nsubj:pass(base, defense)
case(justice, of)
nmod(defense, justice)
aux(base, can)
advmod(base, possibly)
aux:pass(base, be)
acl:relcl(distinction, base)
punct(write, .)
nsubj(write, Mr.)
flat(Mr., Philip)
flat(Mr., Toynbee)
parataxis(base, write)
punct(write, ,)
case(example, for)
obl(write, example)
punct(that, ,)
obj(write, that)
punct(write, ``)
case(term, in)
obl(likely, term)
case(probability, of)
nmod(term, probability)
expl(likely, it)
cop(likely, be)
advmod(likely, surely)
advmod(likely, as)
root(ROOT, likely)
mark(not, as)
advcl(likely, not)
mark(lead, that)
amod(fear, mutual)
nsubj(lead, fear)
aux(lead, will)
ccomp(likely, lead)
case(war, to)
amod(war, accidental)
obl(lead, war)
case(future, in)
det(future, the)
amod(future, near)
obl(lead, future)
mark(continue, if)
det(situation, the)
amod(situation, present)
nsubj(continue, situation)
advcl(lead, continue)
punct(likely, .)
mark(continue, if)
nsubj(continue, it)
advcl(certainty, continue)
advmod(continue, indefinitely)
nsubj(certainty, it)
cop(certainty, be)
advmod(certainty, nearly)
det(certainty, a)
amod(certainty, statistical)
ccomp(propose, certainty)
mark(make, that)
det(mistake, a)
nsubj:pass(make, mistake)
aux(make, will)
aux:pass(make, be)
acl(certainty, make)
cc(begin, and)
mark(begin, that)
det(devastation, the)
nsubj(begin, devastation)
aux(begin, will)
conj(make, begin)
punct(begin, '')
punct(begin, .)
case(termination, Against)
det:predet(termination, such)
det(termination, a)
obl(begin, termination)
case(life, of)
amod(life, human)
nmod(termination, life)
case(earth, on)
nmod(termination, earth)
case(action, by)
amod(action, human)
nmod(earth, action)
punct(propose, ,)
nsubj(propose, he)
advmod(propose, then)
root(ROOT, propose)
case(alternative, as)
det(alternative, a)
obl(propose, alternative)
mark(negotiate, that)
nsubj(negotiate, we)
aux(negotiate, ``)
acl(alternative, negotiate)
case(once, at)
obl(negotiate, once)
case(Russians, with)
det(Russians, the)
obl(negotiate, Russians)
cc(get, and)
conj(negotiate, get)
det(term, the)
amod(term, best)
obj(get, term)
nsubj(available, which)
cop(available, be)
acl:relcl(term, available)
punct(term, '')
punct(negotiate, ,)
mark(negotiate, that)
nsubj(negotiate, we)
advmod(negotiate, deliberately)
punct(negotiate, ``)
parataxis(available, negotiate)
case(weakness, from)
amod(weakness, comparative)
obl(negotiate, weakness)
punct(negotiate, '')
punct(negotiate, .)
nsubj(attempt, he)
advmod(attempt, bravely)
parataxis(negotiate, attempt)
mark(face, to)
xcomp(attempt, face)
det(alternative, this)
obj(face, alternative)
advmod(face, realistically)
punct(face, ,)
advmod(consider, i.e.)
punct(face, ,)
mark(consider, by)
advcl(face, consider)
det(outcome, the)
amod(outcome, worst)
amod(outcome, possible)
obj(consider, outcome)
punct(outcome, ,)
advmod(domination, namely)
punct(domination, ,)
det(domination, the)
amod(domination, total)
appos(outcome, domination)
case(world, of)
det(world, the)
nmod(domination, world)
case(Russia, by)
nmod(domination, Russia)
case(year, within)
det(year, a)
amod(year, few)
nmod(domination, year)
punct(domination, .)
nsubj(choice, this)
aux(choice, would)
cop(choice, be)
case(far, by)
obl(choice, far)
det(choice, the)
amod(choice, better)
root(ROOT, choice)
punct(choice, ,)
mark(question, when)
punct(question, ``)
expl(question, it)
cop(question, be)
det(question, a)
parataxis(choice, question)
mark(allow, of)
acl(question, allow)
det(race, the)
amod(race, human)
obj(allow, race)
mark(survive, to)
xcomp(allow, survive)
punct(survive, ,)
advmod(domination, possibly)
case(domination, under)
det(domination, the)
obl(survive, domination)
case(regime, of)
det(regime, a)
nmod(domination, regime)
obj(detest, which)
nsubj(detest, most)
case(we, of)
nmod(most, we)
acl:relcl(regime, detest)
punct(allow, ,)
cc(allow, or)
mark(allow, of)
conj(detest, allow)
obj(allow, it)
mark(destroy, to)
xcomp(allow, destroy)
obj(destroy, itself)
case(anguish, in)
amod(anguish, appal)
cc(prolong, and)
conj(appal, prolong)
obl(destroy, anguish)
punct(anguish, '')
punct(consequence, .)
advmod(qualified, nevertheless)
punct(qualified, ,)
det(consequence, the)
nsubj(qualified, consequence)
case(policy, of)
det(policy, the)
nmod(consequence, policy)
acl(consequence, propose)
cop(qualified, be)
advmod(qualified, everywhere)
advmod(qualified, subtly)
parataxis(choice, qualified)
punct(qualified, :)
nsubj(result, it)
cop(result, be)
punct(result, ``)
det(result, a)
amod(result, possible)
parataxis(qualified, result)
punct(result, ,)
advmod(improbable, however)
amod(result, improbable)
punct(improbable, '')
punct(result, ;)
punct(result, ;)
punct(worst, ``)
det(worst, the)
amod(result, worst)
punct(probable, ,)
cc(probable, and)
obl(probable, least)
conj(worst, probable)
punct(worst, '')
parataxis(result, result)
punct(result, ;)
punct(choice, ;)
punct(choice, ``)
mark(prevail, if)
nsubj(prevail, it)
aux(prevail, do)
advmod(prevail, not)
advcl(give, prevail)
obj(prevail, mankind)
aux(give, would)
advmod(give, still)
aux:pass(give, be)
root(ROOT, give)
det(opportunity, the)
obj(give, opportunity)
case(prevail, of)
nmod(opportunity, prevail)
punct(give, '')
punct(give, ;)
punct(give, ;)
mark(better, for)
punct(better, ``)
advmod(better, surely)
nsubj(better, anything)
cop(better, be)
advcl(give, better)
case(policy, than)
det(policy, a)
obl(better, policy)
nsubj(allow, which)
acl:relcl(policy, allow)
case(possibility, for)
det(possibility, the)
obl(allow, possibility)
case(war, of)
amod(war, nuclear)
nmod(possibility, war)
punct(better, '')
punct(give, .)
mark(think, if)
nsubj(think, we)
aux(think, have)
advmod(think, not)
advcl(need, think)
cc(make, and)
conj(think, make)
det(decision, a)
obj(make, decision)
advmod(term, entirely)
case(term, in)
det(term, these)
obl(make, term)
punct(need, ,)
advmod(need, then)
nsubj(need, we)
root(ROOT, need)
mark(submit, to)
xcomp(need, submit)
obj(submit, ourselves)
case(test, to)
det(test, the)
amod(test, follow)
punct(test, ``)
amod(test, simple)
obl(submit, test)
punct(test, '')
punct(need, :)
punct(need, ``)
aux(decide, have)
nsubj(decide, we)
root(ROOT, decide)
advmod(be, how)
nsubj(be, we)
ccomp(decide, be)
mark(kill, to)
ccomp(be, kill)
det(member, the)
amod(member, other)
obj(kill, member)
case(household, of)
nmod:poss(household, we)
nmod(member, household)
case(event, in)
det(event, the)
obl(kill, event)
mark(injure, of)
nsubj:pass(injure, we)
aux:pass(injure, be)
advmod(injure, less)
acl(event, injure)
mark(be, than)
nsubj(be, they)
advcl(injure, be)
punct(injure, '')
punct(decide, ?)
punct(decide, ?)
advmod(deduce, thus)
punct(deduce, ,)
amod(decision, moral)
nsubj:pass(deduce, decision)
aux(deduce, must)
aux:pass(deduce, be)
advmod(deduce, entirely)
root(ROOT, deduce)
advmod(deduce, backward)
case(eventuality, from)
det(eventuality, the)
amod(eventuality, likely)
obl(deduce, eventuality)
punct(deduce, ;)
punct(deduce, ;)
nsubj(longer, it)
cop(longer, be)
advmod(longer, no)
advmod(deduce, longer)
mark(formulate, to)
aux:pass(formulate, be)
advcl(longer, formulate)
case(term, in)
obl(formulate, term)
case(nature, of)
det(nature, the)
nmod(term, nature)
case(action, of)
amod(action, present)
nmod(nature, action)
nmod:npmod(action, itself)
punct(intention, ,)
nmod:poss(intention, its)
conj(nature, intention)
punct(effect, ,)
cc(effect, and)
amod(effect, proximate)
conj(nature, effect)
cc(thing, or)
det(thing, the)
conj(effect, thing)
mark(do, to)
aux:pass(do, be)
acl(thing, do)
punct(deduce, .)
nsubj(succeed, several)
case(reply, of)
det(reply, the)
nmod(several, reply)
case(Mr., to)
nmod(reply, Mr.)
flat(Mr., Toynbee)
punct(Mr., ,)
case(resort, without)
amod(resort, conscious)
nmod(several, resort)
case(terminology, to)
det(terminology, the)
amod(terminology, traditional)
nmod(resort, terminology)
case(regard, with)
nmod(terminology, regard)
case(permission, to)
det(permission, the)
nmod(regard, permission)
case(evil, of)
nmod(permission, evil)
punct(succeed, ,)
root(ROOT, succeed)
mark(restoring, in)
advcl(succeed, restoring)
det(context, the)
amod(context, actual)
obj(restoring, context)
case(which, in)
obl(make, which)
amod(decision, present)
amod(decision, moral)
cc(political, and)
conj(moral, political)
nsubj:pass(make, decision)
aux(make, must)
aux:pass(make, be)
acl:relcl(context, make)
punct(make, ,)
case(distinguishing, by)
obl(make, distinguishing)
mark(choose, between)
acl(distinguishing, choose)
det(evil, a)
amod(evil, great)
obj(choose, evil)
cc(choose, and)
conj(choose, choose)
case(danger, in)
obl(choose, danger)
case(evil, of)
det(evil, this)
nmod(danger, evil)
punct(succeed, .)
punct(succeed, ``)
expl(worse, it)
cop(worse, be)
root(ROOT, worse)
case(nation, for)
det(nation, a)
obl(worse, nation)
mark(give, to)
csubj(worse, give)
compound:prt(give, in)
case(evil, to)
obl(give, evil)
mark(run, than)
mark(run, to)
advcl(give, run)
det(risk, the)
obj(run, risk)
case(annihilation, of)
nmod(risk, annihilation)
punct(run, '')
punct(worse, .)
punct(worse, ``)
nsubj:pass(prepare, I)
aux:pass(prepare, be)
advmod(prepare, consciously)
root(ROOT, prepare)
mark(run, to)
xcomp(prepare, run)
det(risk, the)
amod(risk, continue)
obj(run, risk)
case(suicide, of)
punct(suicide, ')
compound(suicide, race)
nmod(risk, suicide)
case(accident, by)
nmod(suicide, accident)
punct(suicide, ')
cc(accept, rather)
fixed(rather, than)
conj(run, accept)
det(certainty, the)
amod(certainty, alternative)
obj(accept, certainty)
case(slavery, of)
compound(slavery, race)
nmod(certainty, slavery)
case(design, by)
obl(accept, design)
punct(prepare, .)
cc(make, but)
nsubj(make, I)
aux(make, can)
advmod(make, only)
root(ROOT, make)
det(choice, this)
obj(make, choice)
mark(believe, because)
nsubj(believe, I)
advcl(make, believe)
mark(increase, that)
det(risk, the)
nsubj(increase, risk)
aux(increase, need)
advmod(increase, not)
ccomp(believe, increase)
punct(reduce, ,)
cc(reduce, but)
aux(reduce, may)
aux:pass(reduce, be)
advmod(reduce, deliberately)
conj(increase, reduce)
punct(reduce, '')
punct(precaution, ()
case(precaution, by)
obl(reduce, precaution)
case(accident, against)
nmod(precaution, accident)
cc(limiting, or)
mark(limiting, by)
conj(precaution, limiting)
obj(limiting, war)
punct(make, ?)
punct(make, ?)
punct(precaution, ))
punct(make, ``)
advcl(say, quoting)
nmod:poss(phrase, Mr.)
flat(Mr., Kennan)
case(Mr., 's)
obj(quoting, phrase)
mark(better, that)
nsubj(better, anything)
aux(better, would)
cop(better, be)
acl(phrase, better)
case(policy, than)
det(policy, a)
obl(better, policy)
nsubj(lead, which)
acl:relcl(policy, lead)
advmod(lead, inevitably)
case(war, to)
amod(war, nuclear)
obl(lead, war)
punct(say, ,)
nsubj(say, he)
punct(Toynbee, ()
appos(he, Toynbee)
punct(Toynbee, ))
root(ROOT, say)
mark(better, that)
nsubj(better, anything)
cop(better, be)
ccomp(say, better)
case(policy, than)
det(policy, a)
obl(better, policy)
nsubj(allow, which)
acl:relcl(policy, allow)
case(possibility, for)
det(possibility, the)
obl(allow, possibility)
case(war, of)
amod(war, nuclear)
nmod(possibility, war)
punct(say, '')
punct(say, .)
punct(say, ``)
mark(ask, if)
advcl(choose, ask)
mark(choose, to)
xcomp(ask, choose)
case(probability, between)
det(probability, a)
amod(probability, terrible)
obl(choose, probability)
cc(possibility, and)
det(possibility, a)
advmod(terrible, more)
amod(possibility, terrible)
conj(probability, possibility)
punct(choose, ,)
amod(man, most)
nsubj(choose, man)
aux(choose, will)
root(ROOT, choose)
det(latter, the)
obj(choose, latter)
punct(choose, '')
punct(choose, .)
punct(choose, ``)
mark(claim, if)
nsubj(claim, Philip)
flat(Philip, Toynbee)
aux(claim, be)
advcl(think, claim)
mark(lie, that)
det(choice, the)
nsubj(lie, choice)
ccomp(claim, lie)
case(capitulation, between)
obl(lie, capitulation)
cc(risk, and)
det(risk, the)
conj(capitulation, risk)
case(war, of)
amod(war, nuclear)
nmod(risk, war)
punct(think, ,)
nsubj(think, I)
root(ROOT, think)
nsubj(right, he)
cop(right, be)
ccomp(think, right)
punct(think, . )
nsubj(accept, I)
aux(accept, do)
advmod(accept, not)
root(ROOT, accept)
mark(capitulation, that)
det(choice, the)
nsubj(capitulation, choice)
cop(capitulation, be)
case(capitulation, between)
ccomp(accept, capitulation)
cc(certainty, and)
det(certainty, the)
conj(capitulation, certainty)
case(war, of)
amod(war, nuclear)
nmod(certainty, war)
punct(capitulation, '')
punct(accept, .)
advmod(Professor, even)
conj(capitulation, Professor)
flat(Professor, Arnold)
flat(Professor, Toynbee)
punct(agree, ,)
acl(Professor, agree)
case(son, with)
nmod:poss(son, he)
obl(agree, son)
punct(do, ,)
advcl(agree, do)
advmod(do, so)
case(term, in)
det(term, these)
obl(do, term)
punct(accept, :)
punct(accept, ``)
mark(continue, compare)
mark(continue, to)
advcl(evil, continue)
mark(incur, to)
xcomp(continue, incur)
det(risk, a)
amod(risk, constant)
obj(incur, risk)
case(destruction, of)
det(destruction, the)
nmod(risk, destruction)
case(race, of)
det(race, the)
amod(race, human)
nmod(destruction, race)
punct(evil, ,)
det(evil, all)
amod(evil, other)
nsubj(evil, evil)
cop(evil, be)
amod(evil, lesser)
root(ROOT, evil)
punct(evil, .)
root(ROOT, let)
obj(let, we)
advmod(put, therefore)
xcomp(let, put)
amod(thing, first)
obj(put, thing)
advmod(put, first)
punct(make, ,)
cc(make, and)
conj(put, make)
xcomp(make, sure)
mark(preserve, of)
advcl(sure, preserve)
det(race, the)
amod(race, human)
obj(preserve, race)
case(whatever, at)
obl(preserve, whatever)
det(price, the)
amod(price, temporary)
nsubj(be, price)
aux(be, may)
cop(whatever, be)
punct(affirm, '')
punct(affirm, .)
nsubj(affirm, Mr.)
flat(Mr., Philip)
flat(Mr., Toynbee)
acl:relcl(whatever, affirm)
case(point, at)
nummod(point, one)
obl(affirm, point)
mark(share, that)
mark(share, if)
nsubj(share, he)
advcl(affirm, share)
det(anticipation, the)
obj(share, anticipation)
case(Orwell, of)
nmod(anticipation, Orwell)
case(Nineteen, in)
nmod(Orwell, Nineteen)
compound(four, eighty)
punct(four, -)
nummod(Nineteen, four)
punct(believe, ,)
mark(believe, if)
nsubj(believe, he)
advcl(share, believe)
nsubj(evil, Communism)
cop(evil, be)
advmod(evil, not)
advmod(evil, only)
ccomp(believe, evil)
cc(evil, but)
punct(evil, ``)
advmod(evil, also)
advmod(evil, irredeemably)
conj(evil, evil)
punct(evil, '')
punct(think, ,)
advmod(think, then)
nsubj(think, he)
aux(think, might)
punct(think, ``)
conj(evil, think)
obj(think, it)
advmod(do, right)
mark(do, to)
xcomp(think, do)
obj(do, anything)
cc(take, rather)
fixed(rather, than)
mark(take, to)
conj(do, take)
det(risk, the)
obj(take, risk)
case(world, of)
det(world, a)
amod(world, communist)
nmod(risk, world)
punct(let, .)
advmod(holocaust, even)
det(holocaust, a)
amod(holocaust, nuclear)
nsubj(frightful, holocaust)
cop(frightful, be)
det(little, a)
obl:npmod(less, little)
advmod(frightful, less)
root(ROOT, frightful)
mark(contemplate, to)
advcl(frightful, contemplate)
case(race, than)
det(race, a)
obl(contemplate, race)
case(human, of)
amod(human, dehumanise)
nmod(race, human)
acl(human, occupy)
det(earth, the)
obj(occupy, earth)
case(doomsday, until)
obl(occupy, doomsday)
punct(frightful, '')
punct(frightful, .)
det(order, no)
amod(order, political)
compound(system, order)
cc(system, or)
amod(system, economic)
nsubj(contrary, system)
cop(contrary, be)
advmod(contrary, so)
advmod(contrary, clearly)
root(ROOT, contrary)
case(nature, to)
obl(contrary, nature)
punct(contrary, .)
cc(have, but)
nsubj(have, one)
aux(have, do)
advmod(have, not)
root(ROOT, have)
mark(affirm, to)
xcomp(have, affirm)
det(existence, the)
obj(affirm, existence)
case(order, of)
det(order, a)
compound(order, evil)
nmod(existence, order)
amod(order, irredeemable)
case(sense, in)
det(sense, that)
obl(irredeemable, sense)
punct(order, ,)
cc(order, or)
det(order, a)
amod(order, static)
conj(existence, order)
case(which, in)
obl(take, which)
det(change, no)
nsubj(take, change)
aux(take, will)
acl:relcl(order, take)
obj(take, place)
case(time, in)
obl(take, time)
punct(take, ,)
mark(able, to)
cop(able, be)
advcl(take, able)
advmod(able, truthfully)
mark(affirm, to)
xcomp(able, affirm)
det(fact, the)
amod(fact, follow)
obj(affirm, fact)
punct(be, :)
expl(be, there)
aux(be, have)
advmod(be, never)
parataxis(have, be)
nsubj(be, justitia)
acl(justitia, imprint)
case(institution, in)
amod(institution, social)
obl(imprint, institution)
cc(relationship, and)
amod(relationship, social)
conj(institution, relationship)
case(context, except)
case(context, in)
det(context, the)
obl(imprint, context)
case(ordo, of)
det(ordo, some)
compound(ordo, pax)
punct(ordo, -)
nmod(context, ordo)
acl(ordo, preserve)
case(force, by)
amod(force, clothed)
cc(naked, or)
conj(clothed, naked)
obl(preserve, force)
punct(have, .)
case(way, on)
nmod:poss(way, they)
obl(make, way)
case(City, to)
det(City, the)
compound(City, heavenly)
nmod(way, City)
det(child, the)
nsubj(make, child)
case(God, of)
nmod(child, God)
root(ROOT, make)
obj(make, use)
case(ordo, of)
det(ordo, the)
compound(ordo, pax)
punct(ordo, -)
nmod(use, ordo)
case(city, of)
det(city, the)
amod(city, earthly)
nmod(ordo, city)
cc(acknowledge, and)
conj(make, acknowledge)
nmod:poss(share, they)
obj(acknowledge, share)
case(responsibility, in)
obl(acknowledge, responsibility)
case(preservation, for)
nmod:poss(preservation, its)
obl(acknowledge, preservation)
punct(make, .)
advmod(repel, not)
mark(repel, to)
advcl(mean, repel)
obj(repel, injury)
cc(uphold, and)
conj(repel, uphold)
cc(improve, and)
conj(uphold, improve)
compound(ordo, pax)
punct(ordo, -)
obj(uphold, ordo)
root(ROOT, mean)
advmod(simply, not)
advmod(accept, simply)
mark(accept, to)
xcomp(mean, accept)
det(order, the)
amod(order, misshapen)
obj(accept, order)
cc(injustice, and)
conj(order, injustice)
nsubj(challenge, that)
acl:relcl(order, challenge)
obj(challenge, it)
case(moment, at)
det(moment, the)
obl(challenge, moment)
punct(start, ,)
cc(start, but)
advmod(start, also)
mark(start, to)
conj(challenge, start)
compound:prt(start, down)
det(slope, the)
amod(slope, steep)
obj(start, slope)
case(which, along)
obl(find, which)
nsubj(find, justice)
aux(find, can)
acl:relcl(slope, find)
det(place, no)
obj(find, place)
advmod(stand, whereon)
mark(stand, to)
advcl(find, stand)
punct(mean, . )
nsubj(seem, Toynbee)
root(ROOT, seem)
mark(think, to)
xcomp(seem, think)
mark(be, that)
expl(be, there)
ccomp(think, be)
det(way, some)
amod(way, other)
nsubj(be, way)
mark(give, to)
acl(way, give)
compound(embodiment, justice)
amod(embodiment, social)
obj(give, embodiment)
punct(seem, .)
punct(seem, ``)
nsubj(die, I)
aux(die, would)
advmod(die, far)
advmod(die, rather)
root(ROOT, die)
case(occupation, after)
det(occupation, a)
amod(occupation, russian)
obl(die, occupation)
case(country, of)
det(country, this)
nmod(occupation, country)
punct(die, --)
case(act, by)
det(act, some)
amod(act, deliberate)
obl(die, act)
case(refusal, of)
nmod(act, refusal)
punct(die, --)
mark(die, than)
advcl(die, die)
advmod(die, uselessly)
case(atomisation, by)
obl(die, atomisation)
punct(die, '')
punct(die, .)
aux(useful, would)
det:predet(act, such)
det(act, a)
nsubj(useful, act)
case(refusal, of)
nmod(act, refusal)
cop(useful, be)
parataxis(die, useful)
punct(die, ?)
punct(die, ?)
nsubj(mean, he)
aux(mean, do)
advmod(mean, not)
root(ROOT, mean)
punct(mean, ,)
case(fact, in)
obl(address, fact)
nsubj(address, he)
ccomp(mean, address)
obj(address, himself)
advmod(address, specifically)
mark(reject, to)
xcomp(address, reject)
det(proposition, the)
obj(reject, proposition)
punct(reject, ,)
mark(begin, that)
punct(take, ``)
mark(take, if)
nsubj(take, we)
advcl(begin, take)
det(risk, the)
obj(take, risk)
case(surrender, of)
nmod(risk, surrender)
punct(begin, ,)
det(generation, a)
amod(generation, new)
nsubj(begin, generation)
case(Britain, in)
nmod(generation, Britain)
aux(begin, would)
advmod(begin, soon)
acl:relcl(proposition, begin)
mark(amass, to)
xcomp(begin, amass)
nmod:poss(strength, its)
obj(amass, strength)
case(secret, in)
obl(amass, secret)
mark(reverse, in)
fixed(in, order)
mark(reverse, to)
advcl(amass, reverse)
det(consequence, the)
obj(reverse, consequence)
case(surrender, of)
det(surrender, that)
nmod(consequence, surrender)
punct(want, '')
punct(want, .)
nsubj(want, he)
parataxis(mean, want)
mark(frank, to)
cop(frank, be)
punct(frank, ``)
advmod(frank, brutally)
xcomp(want, frank)
cc(say, and)
conj(frank, say)
mark(hopeless, that)
det(rebellion, these)
nsubj(hopeless, rebellion)
aux(hopeless, would)
cop(hopeless, be)
ccomp(say, hopeless)
punct(hopeless, --)
advmod(hopeless, far)
punct(hopeless, ,)
advmod(more, far)
advmod(hopeless, more)
parataxis(hopeless, hopeless)
mark(revolution, than)
cop(revolution, be)
det(revolution, the)
amod(revolution, Hungarian)
advcl(hopeless, revolution)
case(1956, of)
nmod(revolution, 1956)
punct(hopeless, '')
punct(project, .)
nsubj(project, this)
cop(project, be)
advmod(project, not)
det(project, a)
parataxis(hopeless, project)
mark(regain, for)
acl(project, regain)
det(ground, the)
obj(regain, ground)
case(war, for)
amod(war, limit)
obl(regain, war)
punct(regain, ,)
mark(create, by)
advcl(regain, create)
det(monopoly, a)
obj(create, monopoly)
case(power, in)
nummod(power, one)
obl(create, power)
case(arsenal, of)
det(world, the)
nmod:poss(arsenal, world)
case(world, 's)
nmod(power, arsenal)
case(weapon, of)
amod(weapon, unlimited)
nmod(arsenal, weapon)
punct(mean, .)
expl(proposal, it)
cop(proposal, be)
det(proposal, a)
root(ROOT, proposal)
mark(serve, that)
nsubj:pass(serve, justice)
advmod(serve, now)
aux:pass(serve, be)
csubj(proposal, serve)
case(means, by)
obl(serve, means)
amod(means, other)
case(those, than)
obl(other, those)
nsubj(precondition, that)
aux(precondition, have)
advmod(precondition, ever)
acl:relcl(those, precondition)
det(search, the)
obj(precondition, search)
case(it, for)
nmod(search, it)
punct(precondition, ,)
cc(precondition, or)
conj(precondition, precondition)
advmod(positive, more)
amod(means, positive)
obj(precondition, means)
mark(attain, for)
acl(means, attain)
obj(attain, it)
punct(attain, ,)
case(past, in)
det(past, the)
obl(attain, past)
punct(proposal, .)
punct(proposal, ``)
expl(good, it)
cop(good, be)
det(good, no)
root(ROOT, good)
csubj(good, recommend)
obj(recommend, surrender)
cc(warfare, rather)
fixed(rather, than)
amod(warfare, nuclear)
conj(surrender, warfare)
case(proviso, with)
det(proviso, the)
nmod(surrender, proviso)
mark(follow, that)
nsubj:pass(follow, surrender)
aux(follow, could)
aux:pass(follow, be)
acl(proviso, follow)
case(resistance, by)
det(resistance, the)
amod(resistance, effective)
amod(resistance, military)
obl(follow, resistance)
case(people, by)
amod(people, occupy)
nmod(resistance, people)
punct(good, .)
root(ROOT, hope)
case(future, for)
det(future, the)
obl(lie, future)
aux(lie, would)
ccomp(hope, lie)
case(longing, in)
det(longing, the)
amod(longing, natural)
obl(lie, longing)
case(race, of)
det(race, the)
amod(race, human)
nmod(longing, race)
case(freedom, for)
nmod(race, freedom)
cc(right, and)
det(right, the)
conj(freedom, right)
mark(develop, to)
acl(right, develop)
punct(be, '')
punct(be, .)
nsubj(be, this)
parataxis(hope, be)
mark(surrender, to)
ccomp(be, surrender)
case(advance, in)
obl(surrender, advance)
mark(mount, to)
det(attack, whatever)
nsubj:pass(mount, attack)
aux(mount, may)
advmod(mount, yet)
aux:pass(mount, be)
advcl(surrender, mount)
punct(mount, ,)
case(last, to)
det(last, the)
advmod(last, very)
obl(mount, last)
punct(surrender, ;)
punct(be, ;)
expl(be, it)
parataxis(be, be)
mark(stride, to)
ccomp(be, stride)
case(slope, along)
det(slope, the)
amod(slope, steep)
obl(stride, slope)
advmod(stride, downward)
punct(hope, .)
det(action, the)
amod(action, only)
amod(action, contrary)
nsubj(run, action)
punct(action, ,)
case(future, in)
det(future, the)
obl(run, future)
case(past, as)
case(past, in)
det(past, the)
obl(run, past)
punct(run, ,)
root(ROOT, run)
det(risk, the)
obj(run, risk)
case(war, of)
nmod(risk, war)
punct(run, ;)
punct(run, ;)
cc(run, and)
punct(run, ,)
advmod(run, now)
cc(in, and)
case(future, in)
det(future, the)
orphan(attempt, future)
case(past, unlike)
case(past, in)
det(past, the)
nmod(attempt, past)
punct(attempt, ,)
det(attempt, any)
conj(run, attempt)
mark(repel, to)
acl(attempt, repel)
obj(repel, injury)
cc(preserve, and)
mark(preserve, to)
conj(repel, preserve)
det(attainment, any)
amod(attainment, particular)
amod(attainment, civilized)
obj(preserve, attainment)
case(mankind, of)
nmod(attainment, mankind)
cc(justice, or)
nmod:poss(justice, its)
amod(justice, provisional)
conj(mankind, justice)
conj(preserve, run)
det(risk, some)
obj(run, risk)
case(warfare, of)
amod(warfare, nuclear)
nmod(risk, warfare)
cc(danger, and)
det(danger, the)
conj(risk, danger)
mark(will, that)
det(effect, a)
nsubj(will, effect)
case(it, of)
nmod(effect, it)
acl:relcl(danger, will)
punct(render, ,)
case(action, by)
amod(action, human)
obl(will, action)
punct(render, ,)
conj(will, render)
det(planet, this)
obj(render, planet)
advmod(habitable, less)
xcomp(render, habitable)
case(race, by)
det(race, the)
amod(race, human)
obl(habitable, race)
punct(run, .)
nsubj(why, that)
cop(why, be)
root(ROOT, why)
expl(important, it)
cop(important, be)
advmod(important, so)
advmod(important, very)
acl:relcl(why, important)
mark(keep, that)
amod(analysis, ethical)
nsubj(keep, analysis)
ccomp(important, keep)
xcomp(keep, clear)
det(problem, the)
obj(clear, problem)
case(decision, of)
nmod(problem, decision)
case(effect, as)
fixed(as, to)
punct(effect, ``)
amod(effect, permit)
punct(effect, '')
obl(clear, effect)
punct(draw, ,)
cc(draw, and)
advmod(draw, not)
conj(clear, draw)
advmod(draw, back)
case(fright, in)
obl(draw, fright)
case(contingency, from)
det(contingency, any)
amod(contingency, conceivable)
obl(draw, contingency)
cc(suffer, or)
conj(draw, suffer)
obj(suffer, paralysis)
case(action, of)
nmod(paralysis, action)
case(possibility, before)
obl(suffer, possibility)
cc(probability, or)
conj(possibility, probability)
amod(possibility, unrelated)
punct(related, ,)
cc(related, or)
advmod(directly, not)
advmod(related, directly)
advmod(related, morally)
conj(possibility, related)
punct(related, ,)
case(what, to)
obl(related, what)
nsubj(can, we)
acl:relcl(what, can)
cc(may, and)
conj(can, may)
cc(do, and)
aux(do, must)
conj(can, do)
advmod(long, as)
advmod(do, long)
mark(endure, as)
amod(history, human)
nsubj(endure, history)
advcl(as, endure)
punct(why, .)
advmod(say, finally)
punct(say, ,)
advmod(pose, just)
mark(pose, as)
det(issue, no)
amod(issue, different)
nsubj:pass(pose, issue)
aux:pass(pose, be)
advcl(say, pose)
case(analysis, for)
amod(analysis, thoughtful)
obl(pose, analysis)
case(foreshortening, by)
det(foreshortening, the)
nmod(analysis, foreshortening)
case(time, of)
nmod(foreshortening, time)
nsubj(pass, that)
aux(pass, may)
advmod(pass, yet)
acl:relcl(foreshortening, pass)
case(end, before)
det(end, the)
obl(pass, end)
case(life, of)
amod(life, human)
nmod(end, life)
case(earth, on)
det(earth, this)
nmod(end, earth)
punct(stimulation, ,)
cc(stimulation, but)
advmod(stimulation, only)
conj(earth, stimulation)
cc(alarm, and)
conj(stimulation, alarm)
case(imagination, to)
det(imagination, the)
nmod(stimulation, imagination)
punct(say, ,)
det(thing, the)
amod(thing, same)
nsubj:pass(say, thing)
aux(say, must)
aux:pass(say, be)
root(ROOT, say)
case(connection, in)
obl(say, connection)
case(question, with)
det(question, the)
nmod(connection, question)
case(what, of)
nmod(question, what)
nsubj(do, we)
aux(do, may)
advmod(do, perhaps)
advmod(do, already)
aux(do, be)
acl:relcl(what, do)
punct(do, ,)
case(action, by)
amod(action, human)
obl(do, action)
punct(accelerate, ,)
mark(accelerate, to)
advcl(do, accelerate)
det(end, this)
obj(accelerate, end)
punct(say, .)
nsubj(allow, we)
aux(allow, should)
advmod(allow, not)
root(ROOT, allow)
det(image, the)
obj(allow, image)
case(end, of)
det(end, a)
amod(end, immanent)
nmod(image, end)
acl(end, bring)
advmod(indirectly, about)
advmod(bring, indirectly)
case(action, by)
nmod:poss(action, we)
amod(action, own)
obl(bring, action)
case(struggle, in)
det(struggle, the)
amod(struggle, continue)
amod(struggle, human)
obl(bring, struggle)
case(order, for)
det(order, a)
advmod(endurable, just)
amod(order, endurable)
nmod(struggle, order)
case(existence, of)
nmod(order, existence)
mark(blind, to)
acl(order, blind)
obj(blind, we)
case(fact, to)
det(fact, the)
obl(blind, fact)
mark(consequence, that)
case(measure, in)
det(measure, some)
obl(consequence, measure)
acl(measure, accelerate)
det(end, the)
obj(accelerate, end)
case(lease, of)
nmod:poss(lease, we)
nmod(end, lease)
aux(consequence, may)
cop(consequence, be)
nummod(consequence, one)
acl(fact, consequence)
case(other, among)
nmod(consequence, other)
case(other, of)
amod(other, many)
nmod(other, other)
case(thrust, of)
nmod:poss(thrust, mankind)
case(mankind, 's)
nmod(other, thrust)
mark(know, toward)
nsubj(know, we)
advcl(consequence, know)
advmod(future, not)
det(future, what)
obj(know, future)
punct(allow, . )
advmod(more, much)
advmod(symbolize, more)
case(shelter, than)
obl(more, shelter)
punct(symbolize, ,)
nsubj(symbolize, housing)
root(ROOT, symbolize)
amod(status, social)
obj(symbolize, status)
punct(status, ,)
det(sense, a)
appos(status, sense)
case(belong, of)
punct(belong, ``)
nmod(sense, belong)
punct(belong, '')
punct(acceptance, ,)
conj(sense, acceptance)
case(group, within)
det(group, a)
amod(group, give)
nmod(acceptance, group)
cc(neighborhood, or)
conj(group, neighborhood)
punct(identification, ,)
conj(group, identification)
case(value, with)
amod(value, particular)
amod(value, cultural)
nmod(identification, value)
cc(institution, and)
amod(institution, social)
conj(value, institution)
punct(feeling, ,)
conj(value, feeling)
case(pride, of)
nmod(feeling, pride)
cc(worth, and)
amod(feeling, worth)
punct(aspiration, ,)
conj(worth, aspiration)
cc(hope, and)
conj(aspiration, hope)
amod(aspiration, basic)
case(be, to)
amod(be, human)
advmod(be, well)
punct(be, -)
obl(basic, be)
punct(sixth, .)
case(sixth, for)
advmod(one, almost)
nummod(sixth, one)
punct(sixth, -)
obl(be, sixth)
case(discrimination, of)
det(discrimination, the)
amod(population, national)
compound(discrimination, population)
nmod(sixth, discrimination)
case(selection, in)
det(selection, the)
amod(selection, free)
nmod(discrimination, selection)
case(residence, of)
nmod(selection, residence)
acl:relcl(sixth, cast)
det(shadow, a)
amod(shadow, considerable)
obj(cast, shadow)
case(value, upon)
det(value, these)
nmod(shadow, value)
acl(value, assume)
case(evident, as)
obl:npmod(evident, self)
punct(evident, -)
obl(assume, evident)
case(Americans, by)
amod(Americans, most)
obl(evident, Americans)
punct(evident, .)
amod(group, few)
compound(group, business)
nsubj(come, group)
case(year, in)
amod(year, recent)
nmod(group, year)
aux(come, have)
parataxis(cast, come)
case(pressure, under)
amod(pressure, heavier)
obl(come, pressure)
mark(face, to)
acl(pressure, face)
det(reality, these)
obj(face, reality)
case(broker, than)
amod(broker, real)
compound(broker, estate)
obl(face, broker)
cc(builder, and)
compound(builder, home)
conj(broker, builder)
punct(come, .)
det(pressure, this)
nsubj(urge, pressure)
aux(urge, have)
root(ROOT, urge)
obj(urge, re-evaluation)
case(assumption, of)
det(assumption, the)
nmod(re-evaluation, assumption)
acl(assumption, underlying)
nmod:poss(ethic, they)
amod(ethic, professional)
obj(underlying, ethic)
punct(urge, ;)
punct(urge, ;)
nsubj(seek, it)
aux(seek, have)
parataxis(urge, seek)
amod(sympathy, new)
obj(seek, sympathy)
case(aspiration, for)
det(aspiration, the)
amod(aspiration, human)
nmod(sympathy, aspiration)
case(group, of)
amod(group, racial)
compound(group, minority)
nmod(aspiration, group)
case(country, in)
det(country, this)
nmod(group, country)
punct(urge, .)
expl(surprising, it)
cop(surprising, be)
advmod(surprising, not)
root(ROOT, surprising)
mark(seek, that)
punct(surprising, ,)
case(spokesman, as)
obl(surprising, spokesman)
case(interest, for)
amod(interest, real)
compound(interest, estate)
nmod(spokesman, interest)
punct(Association, ,)
det(Association, the)
compound(Association, National)
conj(interest, Association)
case(board, of)
compound(Estate, Real)
compound(board, Estate)
nmod(Association, board)
punct(nareb, ()
appos(board, nareb)
punct(nareb, ))
cc(association, and)
nmod:poss(association, its)
amod(association, local)
nsubj(seek, association)
aux(seek, have)
csubj(surprising, seek)
mark(limit, to)
xcomp(seek, limit)
cc(ignore, and)
advmod(ignore, often)
conj(limit, ignore)
obj(ignore, much)
case(pressure, of)
det(pressure, this)
obl(much, pressure)
punct(surprising, .)
advmod(see, how)
aux(see, do)
det(realtor, the)
amod(realtor, local)
nsubj(see, realtor)
root(ROOT, see)
obj(see, himself)
case(context, in)
det(context, the)
obl(see, context)
case(restriction, of)
compound(restriction, housing)
nmod(context, restriction)
case(race, base)
case(race, on)
nmod(context, race)
punct(religion, ,)
conj(race, religion)
cc(attachment, or)
amod(attachment, ethnic)
conj(race, attachment)
punct(see, ?)
punct(see, ?)
obj(conceive, what)
aux(conceive, do)
nsubj(conceive, he)
root(ROOT, conceive)
nmod:poss(role, he)
obj(conceive, role)
mark(area, to)
cop(area, be)
case(area, in)
det(area, this)
acl(role, area)
case(unrest, of)
amod(unrest, social)
nmod(area, unrest)
punct(conceive, ?)
punct(conceive, ?)
nsubj(what, what)
aux(what, ought)
mark(be, to)
cop(what, be)
punct(what, ,)
root(ROOT, what)
cop(what, be)
nmod:poss(role, he)
amod(role, potential)
nsubj(what, role)
case(force, as)
det(force, a)
nmod(role, force)
case(change, for)
amod(change, constructive)
amod(change, social)
nmod(force, change)
punct(what, ?)
punct(what, ?)
det(insight, what)
amod(insight, social)
punct(ethical, ,)
conj(social, ethical)
cc(theological, and)
conj(social, theological)
obj(help, insight)
aux(help, can)
det(church, the)
nsubj(help, church)
cc(university, and)
conj(church, university)
root(ROOT, help)
obj(help, he)
xcomp(help, bring)
case(bear, to)
obl(bring, bear)
case(situation, upon)
nmod:poss(situation, he)
obl(bring, situation)
punct(help, ?)
punct(help, ?)
advmod(seek, recently)
punct(seek, ,)
det(group, a)
nsubj(seek, group)
case(faculty, of)
det(faculty, the)
nmod(group, faculty)
case(Center, at)
compound(University, wesleyan)
nmod:poss(Center, University)
case(University, 's)
compound(affair, Public)
compound(Center, affair)
nmod(faculty, Center)
root(ROOT, seek)
det(answer, some)
obj(seek, answer)
case(question, to)
det(question, these)
nmod(answer, question)
punct(seek, .)
amod(realtor, several)
compound(England, New)
compound(realtor, England)
nsubj:pass(invite, realtor)
aux:pass(invite, be)
root(ROOT, invite)
mark(participate, to)
xcomp(invite, participate)
case(colloquium, in)
det(colloquium, a)
amod(colloquium, small)
obl(participate, colloquium)
case(lawyer, of)
compound(lawyer, property)
nmod(colloquium, lawyer)
punct(scientist, ,)
amod(scientist, political)
conj(lawyer, scientist)
punct(economist, ,)
conj(lawyer, economist)
punct(psychologist, ,)
amod(psychologist, social)
conj(lawyer, psychologist)
punct(ethicist, ,)
amod(ethicist, social)
conj(lawyer, ethicist)
cc(theologian, and)
conj(lawyer, theologian)
punct(invite, .)
advmod(seek, here)
punct(seek, ,)
case(atmosphere, in)
det(atmosphere, a)
obl(seek, atmosphere)
case(criticism, of)
amod(criticism, forthrightness)
cc(mutual, and)
conj(forthrightness, mutual)
nmod(atmosphere, criticism)
punct(seek, ,)
nsubj(seek, each)
root(ROOT, seek)
mark(bring, to)
xcomp(seek, bring)
nmod:poss(insight, he)
amod(insight, particular)
obj(bring, insight)
mark(bear, to)
advcl(bring, bear)
case(question, upon)
det(question, the)
obl(bear, question)
case(discrimination, of)
nmod(question, discrimination)
case(housing, in)
nmod(discrimination, housing)
cc(part, and)
det(part, the)
conj(housing, part)
det(present, each)
compound(present, man)
nsubj(play, present)
acl:relcl(part, play)
case(it, in)
obl(play, it)
punct(play, .)
case(number, for)
det(number, a)
obl(draw, number)
case(year, of)
nmod(number, year)
punct(draw, ,)
nsubj(draw, wesleyan)
aux(draw, have)
aux(draw, be)
conj(seek, draw)
amod(group, varied)
obj(draw, group)
case(leader, of)
amod(leader, political)
cc(business, and)
conj(political, business)
nmod(group, leader)
case(discussion, into)
det(discussion, these)
amod(discussion, informal)
nmod(group, discussion)
case(member, with)
nmod(discussion, member)
case(faculty, of)
det(faculty, the)
nmod(member, faculty)
cc(body, and)
compound(body, student)
conj(faculty, body)
punct(member, ,)
acl(member, attempt)
mark(explore, to)
xcomp(attempt, explore)
cc(clarify, and)
conj(explore, clarify)
obj(clarify, aspect)
case(responsibility, of)
nmod:poss(responsibility, they)
nmod(aspect, responsibility)
case(policy, for)
amod(policy, public)
nmod(responsibility, policy)
punct(seek, .)
det(article, this)
nsubj(present, article)
root(ROOT, present)
nmod:poss(observation, we)
obj(present, observation)
case(session, of)
det(session, that)
nmod(observation, session)
punct(observation, ,)
case(realtor, of)
det(realtor, the)
nmod(observation, realtor)
mark(see, as)
nsubj(see, they)
advcl(present, see)
obj(see, themselves)
cc(see, and)
mark(see, as)
det(faculty, the)
nsubj(see, faculty)
cc(student, and)
conj(faculty, student)
advcl(reveal, see)
obj(see, they)
punct(reveal, .)
amod(conversation, such)
nsubj(reveal, conversation)
advmod(reveal, quickly)
parataxis(present, reveal)
det(ambivalence, a)
advmod(significant, ethically)
amod(ambivalence, significant)
obj(reveal, ambivalence)
case(image, in)
det(image, the)
compound(image, self)
punct(image, -)
nmod(ambivalence, image)
acl(image, hold)
case(realtor, by)
amod(realtor, most)
obl(hold, realtor)
punct(present, .)
case(membership, within)
det(membership, the)
obl(that, membership)
case(group, of)
det(group, this)
nmod(membership, group)
punct(membership, ,)
mark(find, as)
aux(find, have)
aux:pass(find, be)
acl(membership, find)
xcomp(find, true)
case(man, of)
obl(true, man)
case(association, in)
amod(association, other)
amod(association, professional)
cc(trade, or)
conj(professional, trade)
nmod(man, association)
punct(portrayal, ,)
det(portrayal, the)
advmod(ready, most)
amod(portrayal, ready)
nsubj(that, portrayal)
case(oneself, of)
nmod(portrayal, oneself)
case(public, to)
punct(public, ``)
det(public, the)
nmod(portrayal, public)
punct(public, '')
cop(that, be)
root(ROOT, that)
case(agent, of)
det(agent, a)
amod(agent, neutral)
nmod(that, agent)
advmod(serve, simply)
acl(agent, serve)
det(interest, the)
obj(serve, interest)
case(seller, of)
det(seller, a)
nmod(interest, seller)
cc(buyer, or)
conj(seller, buyer)
cc(mediate, and)
conj(seller, mediate)
case(they, between)
obl(mediate, they)
punct(serve, .)
amod(responsibility, professional)
nsubj:pass(see, responsibility)
aux:pass(see, be)
root(ROOT, see)
mark(consist, to)
xcomp(see, consist)
advmod(serve, largely)
mark(serve, in)
advcl(consist, serve)
det(wish, the)
obj(serve, wish)
case(client, of)
det(client, the)
nmod(wish, client)
advmod(serve, fairly)
cc(manner, and)
case(manner, in)
det(manner, a)
amod(manner, efficient)
conj(client, manner)
punct(see, .)
cc(emerge, but)
mark(go, as)
nsubj(go, conversation)
advcl(emerge, go)
advmod(go, on)
punct(emerge, ,)
advmod(realtor, particularly)
case(realtor, among)
det(realtor, the)
obl(go, realtor)
nmod:npmod(realtor, themselves)
punct(emerge, ,)
det(image, another)
nsubj(emerge, image)
root(ROOT, emerge)
punct(emerge, ,)
obj(emerge, that)
case(power, of)
amod(power, considerable)
nmod(that, power)
cc(influence, and)
conj(power, influence)
case(community, in)
det(community, the)
nmod(influence, community)
punct(emerge, .)
advmod(determine, obviously)
punct(determine, ,)
advmod(more, much)
advmod(determine, more)
case(expectation, than)
compound(expectation, customer)
obl(more, expectation)
aux(determine, be)
root(ROOT, determine)
det(realtor, the)
nmod:poss(role, realtor)
case(realtor, 's)
obj(determine, role)
punct(determine, . )
nsubj:pass(render, Judgments)
aux:pass(render, be)
advmod(render, continually)
root(ROOT, render)
case(income, regard)
det(buyer, the)
amod(buyer, potential)
nmod:poss(income, buyer)
case(buyer, 's)
obl(render, income)
punct(level, ,)
amod(level, educational)
conj(income, level)
cc(all, and)
case(all, above)
conj(level, all)
punct(extraction, ,)
amod(extraction, racial)
conj(all, extraction)
punct(render, ;)
punct(render, ;)
cc(qualify, and)
mark(qualify, whether)
nsubj(qualify, these)
aux(qualify, would)
conj(render, qualify)
obj(qualify, they)
case(relation, for)
punct(relation, ``)
amod(relation, congenial)
punct(congenial, '')
punct(relation, ,)
punct(relation, ``)
amod(relation, happy)
punct(relation, '')
obl(qualify, relation)
case(people, to)
amod(people, other)
nmod(relation, people)
case(area, in)
amod(area, certain)
compound(area, community)
nmod(people, area)
punct(professionalism, .)
det(professionalism, a)
amod(professionalism, narrow)
obl:npmod(render, professionalism)
advmod(evident, how)
amod(factor, explicit)
amod(factor, such)
nsubj(evident, factor)
aux(evident, have)
cop(evident, be)
advmod(evident, historically)
cop(evident, be)
acl:relcl(professionalism, evident)
case(chronology, in)
det(chronology, any)
obl(evident, chronology)
case(case, of)
amod(case, restrictive)
compound(case, covenant)
nmod(chronology, case)
cc(review, or)
case(review, in)
det(review, a)
conj(chronology, review)
case(code, of)
nmod:poss(code, nareb)
case(nareb, 's)
nmod(review, code)
case(ethic, of)
nmod(code, ethic)
nmod(code, article)
nummod(article, 34)
case(code, in)
det(code, the)
nmod(code, code)
punct(state, ,)
acl(code, adopt)
case(1924, in)
obl(adopt, 1924)
punct(state, ,)
advcl(adopt, state)
mark(instrumental, that)
punct(instrumental, ``)
det(realtor, a)
nsubj(instrumental, realtor)
aux(instrumental, should)
advmod(instrumental, never)
cop(instrumental, be)
ccomp(state, instrumental)
mark(introduce, in)
advcl(instrumental, introduce)
case(neighborhood, into)
det(neighborhood, a)
obl(introduce, neighborhood)
det(character, a)
obj(introduce, character)
case(property, of)
nmod(character, property)
cc(occupancy, or)
conj(property, occupancy)
punct(member, ,)
conj(character, member)
case(race, of)
det(race, any)
nmod(member, race)
cc(nationality, or)
conj(race, nationality)
cc(individual, or)
det(individual, any)
conj(race, individual)
nmod:poss(presence, whose)
nsubj(detrimental, presence)
aux(detrimental, will)
advmod(detrimental, clearly)
cop(detrimental, be)
acl:relcl(individual, detrimental)
case(value, to)
compound(value, property)
obl(detrimental, value)
case(neighborhood, in)
det(neighborhood, that)
nmod(value, neighborhood)
punct(detrimental, '')
punct(detrimental, .)
mark(stricken, though)
det(reference, the)
nsubj:pass(stricken, reference)
case(race, to)
nmod(reference, race)
aux:pass(stricken, be)
advcl(detrimental, stricken)
case(association, by)
det(association, the)
obl(stricken, association)
case(1950, in)
nmod(association, 1950)
punct(stricken, ,)
cop(agent, be)
det(agent, a)
advcl(stricken, agent)
case(influence, of)
amod(influence, such)
punct(influence, ``)
amod(influence, detrimental)
punct(influence, '')
nmod(agent, influence)
advmod(appear, still)
acl:relcl(agent, appear)
mark(see, as)
det(realtor, the)
amod(sin, cardinal)
compound(realtor, sin)
nsubj(see, realtor)
advcl(appear, see)
obj(see, themselves)
xcomp(see, committed)
mark(avoid, to)
advcl(committed, avoid)
punct(render, .)
det(rationale, the)
nsubj:pass(express, rationale)
case(avoidance, for)
det(avoidance, this)
nmod(rationale, avoidance)
aux:pass(express, be)
advmod(frequently, most)
advmod(express, frequently)
root(ROOT, express)
case(term, in)
amod(term, economic)
obl(express, term)
punct(express, ;)
punct(express, ;)
nsubj(fear, all)
parataxis(express, fear)
det(stigma, the)
amod(stigma, suppose)
obj(fear, stigma)
nsubj(believe, they)
acl:relcl(stigma, believe)
aux(attach, would)
advmod(attach, inevitably)
ccomp(believe, attach)
case(realtor, to)
det(realtor, any)
obl(attach, realtor)
nsubj(introduce, who)
advmod(introduce, openly)
acl:relcl(realtor, introduce)
xcomp(introduce, non-white)
punct(Negro, ,)
advmod(Negro, particularly)
conj(non-white, Negro)
punct(people, ,)
conj(non-white, people)
case(area, into)
det(white, all)
punct(white, -)
amod(area, white)
punct(area, ,)
amod(area, restrict)
obl(introduce, area)
punct(express, .)
nsubj(become, they)
aux(become, would)
root(ROOT, become)
xcomp(become, tag)
mark(interested, as)
nsubj(interested, man)
advmod(interested, not)
advcl(tag, interested)
mark(estate, in)
cop(estate, be)
advmod(estate, purely)
amod(estate, real)
advcl(interested, estate)
punct(professional, ``)
appos(estate, professional)
punct(professional, '')
cc(agitator, but)
conj(professional, agitator)
case(kind, for)
det(kind, some)
nmod(agitator, kind)
case(cause, of)
punct(cause, ``)
nmod(kind, cause)
punct(cause, '')
cc(reform, or)
punct(reform, ``)
conj(cause, reform)
punct(reform, '')
punct(longer, ,)
cc(longer, and)
nsubj(longer, this)
cop(longer, be)
advmod(longer, no)
advmod(pro, longer)
mark(pro, to)
cop(pro, be)
det(pro, a)
punct(pro, ``)
advcl(what, pro)
punct(pro, '')
punct(pro, .)
advmod(what, obviously)
nsubj(identification, what)
nsubj:pass(confront, we)
aux:pass(confront, be)
acl:relcl(what, confront)
case(here, with)
obl(confront, here)
cop(identification, be)
det(identification, the)
conj(become, identification)
case(professional, of)
punct(professional, ``)
nmod(identification, professional)
punct(professional, '')
case(skill, with)
amod(skill, narrow)
nmod(professional, skill)
cc(specialization, and)
conj(skill, specialization)
punct(service, ,)
det(service, the)
amod(service, effective)
conj(skill, service)
case(client, of)
det(client, a)
nmod(service, client)
punct(responsiveness, ,)
cc(responsiveness, rather)
fixed(rather, than)
conj(service, responsiveness)
case(meaning, to)
det(meaning, the)
amod(meaning, wider)
cc(deeper, and)
conj(wider, deeper)
nmod(responsiveness, meaning)
cc(association, and)
conj(meaning, association)
case(work, of)
nmod:poss(work, one)
case(one, 's)
nmod(association, work)
punct(become, .)
det(man, these)
nsubj(fit, man)
punct(man, --)
case(part, for)
det(part, the)
amod(part, most)
nmod(man, part)
acl(part, educated)
case(college, in)
nmod:poss(college, we)
punct(college, ``)
amod(college, best)
punct(college, '')
compound(England, New)
compound(college, England)
obl(educated, college)
punct(college, ,)
advmod(establish, well)
acl(college, establish)
advmod(establish, financially)
cc(socially, and)
conj(financially, socially)
case(community, in)
det(community, the)
obl(establish, community)
punct(reveal, --)
case(probing, under)
advmod(probing, kindly)
cc(insistent, but)
amod(probing, insistent)
obl(reveal, probing)
punct(reveal, ,)
conj(establish, reveal)
obj(reveal, little)
cc(no, or)
conj(objective, no)
amod(criterion, objective)
cc(explicit, or)
conj(objective, explicit)
obj(reveal, criterion)
cc(data, or)
conj(criterion, data)
case(generalization, for)
nmod:poss(generalization, they)
nmod(criterion, generalization)
case(interest, about)
det(interest, the)
nmod(generalization, interest)
cc(attitude, and)
conj(interest, attitude)
case(people, of)
det(people, the)
nmod(interest, people)
nsubj(claim, they)
acl:relcl(people, claim)
mark(serve, to)
xcomp(claim, serve)
punct(response, ,)
cc(response, or)
case(response, about)
det(response, the)
amod(response, public)
conj(interest, response)
nsubj(follow, that)
advmod(follow, actually)
acl:relcl(response, follow)
nmod:poss(breach, they)
amod(breach, occasional)
obj(follow, breach)
case(relationship, of)
det(relationship, a)
punct(relationship, ``)
compound(service, client)
punct(service, -)
compound(relationship, service)
nmod(breach, relationship)
punct(relationship, '')
punct(relationship, .)
det(professionalism, this)
amod(professionalism, narrow)
punct(professionalism, ``)
nsubj(fit, professionalism)
punct(professionalism, '')
aux(fit, do)
advmod(fit, not)
advmod(fit, even)
root(ROOT, fit)
det(reality, the)
amod(reality, present)
obj(fit, reality)
case(situation, of)
nmod:poss(situation, they)
nmod(reality, situation)
punct(fit, ,)
case(pressure, as)
det(pressure, the)
obl(fit, pressure)
case(minority, of)
nmod(pressure, minority)
cc(power, and)
det(power, the)
conj(minority, power)
cc(respectability, and)
conj(minority, respectability)
case(increase, of)
det(increase, the)
compound(increase, realtor)
nmod(respectability, increase)
punct(fit, .)
mark(continue, as)
nmod:poss(discussion, we)
nsubj(continue, discussion)
advcl(become, continue)
punct(become, ,)
det(inadequacy, the)
nsubj(become, inadequacy)
case(relationship, of)
det(relationship, the)
punct(relationship, ``)
compound(relationship, client)
nmod(inadequacy, relationship)
punct(relationship, '')
case(interpretation, as)
det(interpretation, a)
nmod(inadequacy, interpretation)
case(way, of)
nmod:poss(way, they)
punct(way, ``)
nmod(interpretation, way)
case(operating, of)
nmod(way, operating)
punct(way, '')
root(ROOT, become)
xcomp(become, evident)
punct(live, .)
nsubj(live, realtor)
ccomp(become, live)
case(community, in)
nmod:poss(community, they)
obl(live, community)
case(specialist, as)
obl(live, specialist)
case(area, in)
det(area, a)
amod(area, give)
obl(live, area)
case(work, of)
nmod(area, work)
punct(member, ,)
case(member, as)
nmod(area, member)
case(organization, of)
amod(organization, social)
cc(professional, and)
conj(social, professional)
nmod(member, organization)
punct(citizen, ,)
case(citizen, as)
nmod(organization, citizen)
cc(leader, and)
amod(leader, civic)
conj(citizen, leader)
punct(lay, ,)
case(lay, as)
compound(lay, church)
nmod(citizen, lay)
punct(lay, ,)
case(alumnus, as)
compound(alumnus, university)
nmod(lay, alumnus)
punct(alumnus, ,)
case(reader, as)
compound(reader, newspaper)
nmod(alumnus, reader)
punct(etc, ,)
advmod(reader, etc)
punct(live, .)
punct(live, .)
case(role, from)
amod(role, such)
amod(role, communal)
obl(find, role)
det(realtor, the)
nsubj(find, realtor)
root(ROOT, find)
det(substance, the)
obj(find, substance)
nsubj(shape, that)
acl:relcl(substance, shape)
nmod:poss(understanding, he)
amod(understanding, moral)
obj(shape, understanding)
punct(find, .)
nsubj(seem, it)
root(ROOT, seem)
case(we, to)
obl(seem, we)
mark(exercise, that)
nsubj(seem, choice)
acl(choice, exercise)
case(realtor, by)
obl(exercise, realtor)
case(center, in)
amod(situation, moral)
compound(center, situation)
obl(exercise, center)
case(area, in)
case(least, at)
nmod(three, least)
nummod(area, three)
obl(exercise, area)
punct(area, :)
punct(1, ()
nummod(way, 1)
punct(1, ))
det(way, the)
amod(way, various)
appos(area, way)
case(which, in)
obl(interpret, which)
nsubj(interpret, they)
acl:relcl(way, interpret)
det(issue, a)
amod(issue, particular)
amod(issue, social)
obj(interpret, issue)
punct(interpret, ;)
punct(pattern, ;)
punct(2, ()
nummod(pattern, 2)
punct(2, ))
nmod:poss(pattern, they)
conj(way, pattern)
case(involvement, of)
nmod(pattern, involvement)
case(process, in)
det(process, the)
amod(process, regular)
amod(process, legal)
cc(political, and)
conj(legal, political)
nmod(pattern, process)
punct(pattern, ;)
punct(pattern, ;)
cc(interpretation, and)
punct(interpretation, ,)
advmod(pervasively, most)
advmod(3, pervasively)
punct(3, ,)
punct(3, ()
nummod(interpretation, 3)
punct(3, ))
nmod:poss(interpretation, they)
conj(pattern, interpretation)
mark(pro, of)
nsubj(pro, who)
cop(pro, be)
det(pro, a)
punct(pro, ``)
amod(pro, real)
acl:relcl(interpretation, pro)
punct(pro, '')
punct(what, ,)
case(what, of)
obl(pro, what)
nsubj(mean, it)
acl:relcl(what, mean)
mark(man, to)
cop(man, be)
det(man, a)
amod(man, professional)
xcomp(mean, man)
case(society, in)
det(society, a)
amod(society, technical)
punct(fragment, ,)
amod(society, fragment)
nmod(man, society)
nmod(man, . )
punct(1, ()
nummod(. , 1)
punct(1, ))
nsubj(minimize, most)
case(realtor, of)
det(realtor, the)
nmod(most, realtor)
root(ROOT, minimize)
nmod:poss(understanding, they)
amod(understanding, own)
obj(minimize, understanding)
nmod(understanding, of)
cc(role, and)
conj(understanding, role)
case(issue, in)
det(issue, the)
amod(issue, racial)
obl(minimize, issue)
punct(minimize, ,)
advcl(minimize, plead)
mark(reflect, that)
nsubj(reflect, they)
advmod(reflect, only)
ccomp(plead, reflect)
det(attitude, the)
obj(reflect, attitude)
cc(intention, and)
conj(attitude, intention)
case(society, of)
nmod:poss(society, they)
nmod(attitude, society)
punct(minimize, .)
expl(be, there)
root(ROOT, be)
det(reality, some)
nsubj(be, reality)
case(this, to)
nmod(reality, this)
punct(be, ;)
punct(be, ;)
det(Commission, the)
nsubj(conclude, Commission)
case(Race, on)
nmod(Commission, Race)
cc(Housing, and)
conj(Race, Housing)
parataxis(be, conclude)
mark(be, that)
punct(be, ``)
expl(be, there)
ccomp(conclude, be)
det(reason, no)
nsubj(be, reason)
mark(believe, to)
acl(reason, believe)
mark(more, that)
amod(man, real)
compound(man, estate)
nsubj(more, man)
cop(more, be)
cc:preconj(more, either)
ccomp(believe, more)
cc(prejudice, or)
advmod(racially, less)
advmod(prejudice, racially)
conj(more, prejudice)
punct(prejudice, ,)
case(whole, on)
det(whole, the)
obl(prejudice, whole)
punct(segment, ,)
case(segment, than)
det(segment, any)
amod(segment, other)
obl(whole, segment)
case(population, of)
det(population, the)
amod(population, american)
nmod(segment, population)
punct(segment, '')
punct(obscure, .)
cc(obscure, but)
det:predet(reaction, such)
det(reaction, a)
nsubj(obscure, reaction)
conj(be, obscure)
det(effort, the)
amod(effort, powerful)
obj(obscure, effort)
acl(effort, make)
case(past, in)
det(past, the)
obl(make, past)
case(nareb, by)
cc:preconj(nareb, both)
obl(make, nareb)
cc(board, and)
nmod:poss(board, its)
amod(board, local)
conj(nareb, board)
case(maintenance, for)
det(maintenance, the)
obl(make, maintenance)
case(clause, of)
amod(clause, restrictive)
nmod(maintenance, clause)
cc(practice, and)
conj(clause, practice)
punct(be, .)
advmod(recognize, also)
punct(recognize, ,)
nsubj(recognize, it)
aux(recognize, do)
advmod(recognize, not)
root(ROOT, recognize)
det(element, the)
obj(recognize, element)
case(choice, of)
nmod(element, choice)
cc(judgment, and)
conj(choice, judgment)
advmod(employ, continually)
advcl(recognize, employ)
punct(recognize, .)
case(group, like)
compound(group, business)
cc(university, and)
conj(business, university)
obl(have, group)
advmod(have, generally)
punct(have, ,)
det(man, these)
nsubj(have, man)
root(ROOT, have)
advmod(limited, very)
amod(knowledge, limited)
obj(have, knowledge)
case(study, of)
amod(study, recent)
amod(study, sociological)
cc(psychological, and)
conj(sociological, psychological)
nmod(knowledge, study)
cc(finding, and)
conj(study, finding)
nsubj(illumine, that)
aux(illumine, might)
acl:relcl(study, illumine)
det(decision, the)
obj(illumine, decision)
nsubj(make, they)
acl:relcl(decision, make)
punct(realtor, .)
appos(decision, realtor)
punct(realtor, ,)
cc:preconj(generally, both)
advmod(realtor, generally)
cc(group, and)
case(group, in)
det(group, this)
obl(generally, group)
punct(equate, ,)
aux(equate, have)
advmod(equate, invariably)
conj(have, equate)
amod(integration, residential)
obj(equate, integration)
case(decline, with)
det(decline, a)
nmod(integration, decline)
case(value, in)
compound(value, property)
nmod(decline, value)
punct(circumstance, ,)
det(circumstance, a)
conj(decline, circumstance)
acl(circumstance, view)
case(apprehension, with)
amod(apprehension, considerable)
obl(view, apprehension)
punct(equate, .)
amod(study, recent)
nsubj(point, study)
case(Commission, by)
det(Commission, the)
nmod(study, Commission)
case(Race, on)
nmod(study, Race)
cc(Housing, and)
conj(Race, Housing)
cc(other, and)
conj(Race, other)
punct(point, ,)
advmod(point, however)
punct(point, ,)
root(ROOT, point)
case(complex, to)
det(complex, a)
amod(complex, vast)
obl(point, complex)
case(factor, of)
nmod(complex, factor)
nsubj(warrant, that)
advmod(warrant, often)
aux(warrant, do)
advmod(warrant, not)
acl:relcl(factor, warrant)
det(conclusion, this)
obj(warrant, conclusion)
punct(point, .)
expl(be, there)
root(ROOT, be)
amod(number, increase)
nsubj(be, number)
case(neighborhood, of)
nmod(number, neighborhood)
nsubj:pass(integrate, that)
aux:pass(integrate, be)
acl:relcl(neighborhood, integrate)
advmod(integrate, residentially)
case(loss, without)
amod(loss, great)
obl(integrate, loss)
case(value, of)
compound(value, property)
nmod(loss, value)
punct(take, ,)
det(population, the)
amod(population, white)
nsubj(take, population)
aux(take, have)
advcl(integrate, take)
det(initiative, the)
obj(take, initiative)
mark(prepare, in)
advcl(take, prepare)
det(area, the)
obj(prepare, area)
case(appreciation, for)
det(appreciation, a)
nmod(area, appreciation)
case(desire, of)
det(Negroes, the)
nmod:poss(desire, Negroes)
case(Negroes, 's)
nmod(appreciation, desire)
case(housing, for)
advmod(keep, well)
punct(keep, -)
amod(housing, keep)
nmod(desire, housing)
punct(privacy, ,)
conj(housing, privacy)
punct(etc, ,)
conj(housing, etc)
punct(housing, .)
punct(housing, .)
conj(housing, data)
case(decline, on)
det(decline, the)
nmod(data, decline)
case(value, of)
compound(value, property)
nmod(decline, value)
case(area, in)
det(area, a)
nmod(decline, area)
mark(enter, after)
det(group, a)
amod(group, new)
amod(group, racial)
nsubj(enter, group)
acl(area, enter)
nsubj(have, it)
ccomp(enter, have)
mark(assess, to)
aux:pass(assess, be)
xcomp(have, assess)
case(term, in)
obl(assess, term)
case(trend, of)
det(trend, the)
nmod(term, trend)
case(value, in)
compound(value, property)
nmod(trend, value)
mark(come, before)
det(group, the)
nsubj(come, group)
advcl(assess, come)
advmod(come, in)
punct(be, .)
advmod(able, often)
nsubj(able, they)
cop(able, be)
root(ROOT, able)
mark(get, to)
xcomp(able, get)
advmod(get, in)
advmod(get, only)
mark(decline, because)
det(area, the)
nsubj(decline, area)
aux(decline, be)
advcl(get, decline)
advmod(decline, economically)
punct(able, .)
advmod(familiar, significantly)
punct(familiar, ,)
det(realtor, no)
nsubj(familiar, realtor)
cc(few, and)
conj(realtor, few)
case(present, of)
det(present, the)
compound(present, faculty)
nmod(few, present)
cop(familiar, be)
root(ROOT, familiar)
case(any, with)
obl(familiar, any)
case(volume, of)
det(volume, the)
nummod(volume, six)
nmod(any, volume)
punct(publish, ()
acl(volume, publish)
case(University, by)
det(University, the)
obl(publish, University)
case(Press, of)
compound(Press, California)
nmod(University, Press)
punct(publish, ))
nsubj(present, that)
acl:relcl(volume, present)
det(commission, the)
nmod:poss(finding, commission)
case(commission, 's)
obj(present, finding)
punct(familiar, .)
det(one, no)
nsubj(anticipate, one)
root(ROOT, anticipate)
det(shift, any)
amod(shift, radical)
obj(anticipate, shift)
case(situation, in)
det(situation, this)
nmod(shift, situation)
punct(raise, ,)
cc(raise, but)
nsubj:pass(raise, question)
case(habit, concern)
compound(habit, reading)
nmod(question, habit)
punct(availability, ,)
det(availability, the)
conj(question, availability)
case(data, of)
amod(data, such)
nmod(availability, data)
cc(place, and)
det(place, the)
conj(data, place)
advmod(discuss, where)
nsubj:pass(discuss, it)
aux:pass(discuss, be)
acl:relcl(place, discuss)
aux(raise, must)
advmod(raise, surely)
aux:pass(raise, be)
conj(anticipate, raise)
punct(anticipate, .)
det(role, the)
root(ROOT, role)
case(church, of)
cc:preconj(church, both)
nmod(role, church)
cc(university, and)
conj(church, university)
case(source, as)
nmod(role, source)
case(information, of)
nmod(source, information)
cc(setting, and)
conj(information, setting)
case(which, within)
obl(explore, which)
det(implication, the)
nsubj:pass(explore, implication)
case(information, of)
amod(information, such)
nmod(implication, information)
aux(explore, may)
aux:pass(explore, be)
acl:relcl(source, explore)
compound(consideration, need)
obj(explore, consideration)
punct(role, .)
amod(fact, Relevant)
punct(fact, ``)
nsubj(extend, fact)
punct(fact, '')
punct(extend, ,)
advmod(extend, however)
punct(extend, ,)
root(ROOT, extend)
case(consideration, beyond)
obl(extend, consideration)
case(value, of)
compound(value, property)
nmod(consideration, value)
cc(maintenance, and)
conj(value, maintenance)
case(neighborhood, of)
punct(neighborhood, ``)
amod(neighborhood, harmonious)
punct(neighborhood, '')
nmod(maintenance, neighborhood)
punct(neighborhood, .)
nsubj(involve, discussion)
case(housing, of)
amod(housing, minority)
nmod(discussion, housing)
advmod(involve, necessarily)
parataxis(extend, involve)
amod(issue, such)
amod(issue, basic)
obj(involve, issue)
case(intensity, as)
det(intensity, the)
nmod(issue, intensity)
case(conviction, of)
nmod:poss(conviction, one)
case(one, 's)
amod(conviction, democratic)
nmod(intensity, conviction)
cc(belief, and)
amod(belief, religious)
conj(conviction, belief)
case(equality, concern)
nmod(belief, equality)
case(opportunity, of)
nmod(equality, opportunity)
punct(function, ,)
det(function, the)
conj(equality, function)
cc(limitation, and)
conj(function, limitation)
case(government, of)
nmod(limitation, government)
case(secure, in)
det(secure, the)
nmod(function, secure)
case(equality, of)
amod(equality, such)
nmod(secure, equality)
punct(spotlight, ,)
cc(spotlight, and)
det(spotlight, the)
conj(function, spotlight)
mark(play, that)
compound(opinion, world)
nsubj(play, opinion)
acl(spotlight, play)
case(incident, upon)
amod(incident, local)
obl(play, incident)
case(agitation, of)
amod(agitation, racial)
nmod(incident, agitation)
cc(strife, and)
conj(agitation, strife)
punct(extend, .)
punct(extend, ``)
case(grain, Against)
det(grain, the)
obl(realize, grain)
case(creation, of)
nmod(grain, creation)
punct(grain, '')
punct(2, ()
nummod(realize, 2)
punct(2, ))
nsubj(realize, realtor)
root(ROOT, realize)
punct(realize, ,)
advmod(involved, of)
fixed(of, course)
punct(realize, ,)
mark(involved, that)
nsubj(involved, they)
cop(involved, be)
ccomp(realize, involved)
case(system, in)
det(system, a)
advmod(complex, increasingly)
amod(system, complex)
amod(system, legal)
cc(political, and)
conj(legal, political)
obl(involved, system)
nsubj(open, that)
aux(open, be)
acl:relcl(system, open)
compound:prt(open, up)
obj(open, opportunity)
case(leverage, for)
nmod(opportunity, leverage)
case(relation, on)
nmod:poss(relation, they)
nmod(leverage, relation)
case(client, to)
nmod(relation, client)
cc(opportunity, as)
fixed(as, well)
fixed(as, as)
conj(relation, opportunity)
case(evasion, for)
nmod(opportunity, evasion)
case(responsibility, of)
nmod:poss(responsibility, they)
nmod(evasion, responsibility)
case(discrimination, for)
amod(discrimination, racial)
nmod(evasion, discrimination)
case(housing, in)
nmod(discrimination, housing)
punct(realize, .)
case(side, on)
det(side, the)
amod(side, positive)
obl(undermined, side)
punct(undermined, ,)
amod(action, recent)
amod(action, federal)
nsubj(undermined, action)
aux(undermined, have)
advmod(undermined, largely)
root(ROOT, undermined)
det(sanction, the)
amod(sanction, legal)
obj(undermined, sanction)
advmod(long, so)
advmod(enjoy, long)
acl(sanction, enjoy)
case(position, by)
det(position, the)
amod(position, segregationist)
obl(enjoy, position)
punct(undermined, ;)
punct(undermined, ;)
amod(statute, anti-discriminatory)
nsubj:pass(adopt, statute)
case(housing, in)
nmod(statute, housing)
aux(adopt, have)
advmod(adopt, now)
aux:pass(adopt, be)
parataxis(undermined, adopt)
case(state, by)
nummod(state, thirteen)
obl(adopt, state)
cc(varied, and)
punct(adopt, ,)
mark(varied, while)
amod(provision, specific)
nsubj(varied, provision)
aux(varied, have)
advcl(adopt, varied)
punct(be, ,)
det(tendency, the)
nsubj(be, tendency)
aux(expand, be)
advmod(expand, clearly)
mark(expand, toward)
advcl(varied, expand)
obj(expand, coverage)
punct(expand, .)
obj(expand, realtor)
case(attendance, in)
obl(expand, attendance)
case(interest, at)
det(interest, the)
compound(express, colloquium)
amod(interest, express)
nmod(attendance, interest)
punct(interest, ,)
case(example, for)
nmod(interest, example)
punct(interest, ,)
case(law, in)
nmod:poss(law, Connecticut)
case(Connecticut, 's)
amod(law, new)
compound(law, housing)
nmod(interest, law)
mark(set, as)
acl(law, set)
obj(set, standard)
case(equity, of)
nmod(standard, equity)
obj(like, that)
nsubj(like, they)
aux(like, would)
acl:relcl(equity, like)
punct(like, ``)
mark(have, to)
xcomp(like, have)
mark(obey, to)
xcomp(have, obey)
punct(have, '')
punct(willing, ,)
cc(willing, but)
case(support, in)
obl(willing, support)
case(none, of)
det(none, which)
nmod(support, none)
aux(willing, have)
cop(willing, be)
conj(have, willing)
mark(go, to)
xcomp(willing, go)
case(record, on)
amod(record, public)
obl(go, record)
punct(undermined, .)
advmod(far, as)
advmod(oppose, far)
mark(aware, as)
nsubj(aware, they)
cop(aware, be)
advcl(far, aware)
punct(oppose, ,)
det(Association, the)
compound(Association, Connecticut)
nsubj(oppose, Association)
case(board, of)
compound(board, Real)
compound(board, Estate)
nmod(Association, board)
aux(oppose, have)
advmod(oppose, not)
advmod(oppose, officially)
root(ROOT, oppose)
det(bill, the)
nmod:poss(passage, bill)
case(bill, 's)
obj(oppose, passage)
cc(lob, or)
conj(passage, lob)
case(support, in)
nmod:poss(support, its)
obl(lob, support)
punct(oppose, . )
punct(case, ()
nsubj(case, this)
aux(case, have)
advmod(case, not)
cop(case, be)
det(case, the)
root(ROOT, case)
advmod(case, everywhere)
punct(case, .)
case(1957, in)
obl(oppose, 1957)
punct(oppose, ,)
det(board, the)
compound(board, Real)
compound(board, Estate)
nsubj(oppose, board)
case(City, of)
compound(York, New)
compound(City, York)
nmod(board, City)
advmod(oppose, actively)
root(ROOT, oppose)
det(law, the)
advmod(pend, then)
xcomp(oppose, pend)
amod(law, private)
compound(law, housing)
amod(law, anti-discrimination)
obj(pend, law)
punct(oppose, .)
amod(reasoning, official)
root(ROOT, reasoning)
punct(reasoning, :)
det(bill, the)
nsubj(invasion, bill)
cop(invasion, be)
det(invasion, a)
punct(invasion, ``)
amod(invasion, wanton)
appos(reasoning, invasion)
case(rights, of)
amod(rights, basic)
compound(rights, property)
nmod(invasion, rights)
punct(invasion, '')
punct(reasoning, .)
punct(reasoning, ))
expl(be, there)
root(ROOT, be)
nsubj(be, sin)
case(omission, of)
nmod(sin, omission)
cc(commission, as)
fixed(as, well)
fixed(as, as)
conj(sin, commission)
punct(be, ;)
punct(be, ;)
det(attitude, the)
nsubj(play, attitude)
acl(attitude, adopt)
case(realtor, by)
obl(adopt, realtor)
cc(association, and)
nmod:poss(association, they)
conj(realtor, association)
punct(negative, ,)
cc:preconj(negative, either)
amod(attitude, negative)
cc(positive, or)
conj(negative, positive)
punct(play, ,)
conj(be, play)
det(part, a)
amod(part, large)
obj(play, part)
case(acceptance, in)
det(acceptance, the)
amod(acceptance, public)
nmod(part, acceptance)
case(measure, of)
amod(measure, such)
nmod(acceptance, measure)
cc(degree, and)
det(degree, the)
conj(measure, degree)
case(which, to)
obl(enforce, which)
nsubj:pass(enforce, they)
aux(enforce, may)
aux:pass(enforce, be)
advmod(enforce, effectively)
acl:relcl(degree, enforce)
punct(be, . )
amod(opinion, judicial)
nsubj(render, opinion)
case(decision, since)
det(decision, the)
compound(Court, Supreme)
compound(decision, Court)
nmod(opinion, decision)
case(Shelley, on)
nmod(decision, Shelley)
flat(Shelley, v.)
flat(Shelley, Kraemer)
punct(1948, ()
appos(Shelley, 1948)
punct(1948, ))
aux(render, have)
root(ROOT, render)
amod(covenant, racial)
amod(covenant, restrictive)
obj(render, covenant)
xcomp(render, unenforcible)
punct(render, .)
det:predet(decision, such)
det(decision, a)
nsubj(place, decision)
aux(place, should)
aux(place, have)
root(ROOT, place)
det(weapon, a)
amod(weapon, powerful)
obj(place, weapon)
case(hand, in)
det(hand, the)
obl(place, hand)
case(industry, of)
det(industry, the)
amod(industry, entire)
compound(industry, housing)
nmod(hand, industry)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(place, be)
amod(evidence, little)
nsubj(be, evidence)
mark(repudiate, that)
nsubj(repudiate, realtor)
punct(association, ,)
cc(association, or)
case(least, at)
nmod(association, least)
nmod:poss(association, they)
conj(realtor, association)
punct(repudiate, ,)
aux(repudiate, have)
acl(evidence, repudiate)
det(principle, the)
obj(repudiate, principle)
case(clause, in)
amod(clause, such)
obl(repudiate, clause)
punct(place, .)
case(state, in)
det(state, the)
obl(help, state)
nsubj(pass, that)
aux(pass, have)
acl:relcl(state, pass)
obj(pass, law)
acl(law, prevent)
obj(prevent, discrimination)
case(sale, in)
det(sale, the)
obl(prevent, sale)
cc(rental, or)
conj(sale, rental)
case(housing, of)
nmod(sale, housing)
punct(support, ,)
conj(sale, support)
case(association, by)
amod(association, real)
compound(association, estate)
nmod(support, association)
case(compliance, for)
nmod(association, compliance)
cc(coverage, and)
amod(coverage, broaden)
conj(compliance, coverage)
case(legislation, through)
amod(legislation, additional)
nmod(coverage, legislation)
aux(help, could)
root(ROOT, help)
xcomp(help, remove)
det(label, the)
obj(remove, label)
case(reformism, of)
punct(reformism, ``)
amod(reformism, social)
nmod(label, reformism)
punct(reformism, '')
mark(seem, that)
amod(realtor, most)
nsubj(seem, realtor)
advmod(seem, individually)
acl(label, seem)
xcomp(seem, determined)
mark(avoid, to)
xcomp(determined, avoid)
punct(help, .)
cc(willing, but)
advmod(willing, as)
fixed(as, yet)
punct(willing, ,)
det(board, no)
amod(board, real)
compound(board, estate)
nsubj(willing, board)
aux(willing, have)
cop(willing, be)
root(ROOT, willing)
advmod(willing, officially)
mark(support, to)
xcomp(willing, support)
amod(law, such)
obj(support, law)
cc(admit, or)
mark(admit, to)
conj(support, admit)
det(permissibility, the)
obj(admit, permissibility)
mark(introduce, of)
acl(permissibility, introduce)
amod(buyer, minority)
obj(introduce, buyer)
case(neighborhood, into)
det(white, all)
punct(white, -)
amod(neighborhood, white)
obl(introduce, neighborhood)
punct(willing, .)
nsubj(become, one)
case(role, of)
det(role, the)
nmod(one, role)
case(scientist, of)
det(scientist, the)
amod(scientist, social)
nmod(role, scientist)
punct(ethicist, ,)
appos(scientist, ethicist)
cc(theologian, or)
conj(ethicist, theologian)
case(discussion, in)
nmod:poss(discussion, we)
nmod(role, discussion)
case(realtor, with)
det(realtor, the)
nmod(discussion, realtor)
root(ROOT, become)
mark(encourage, that)
mark(encourage, of)
advcl(become, encourage)
amod(awareness, greater)
obj(encourage, awareness)
case(opportunity, of)
det(opportunity, the)
nmod(awareness, opportunity)
acl(opportunity, offer)
case(process, by)
det(process, the)
amod(process, legal)
cc(political, and)
conj(legal, political)
obl(offer, process)
case(exercise, for)
det(exercise, the)
obl(offer, exercise)
case(responsibility, of)
amod(responsibility, broad)
amod(responsibility, social)
nmod(exercise, responsibility)
case(work, in)
nmod:poss(work, they)
nmod(exercise, work)
punct(become, .)
cc(presume, but)
nsubj(presume, responsiveness)
case(opportunity, to)
det(opportunity, these)
nmod(responsiveness, opportunity)
root(ROOT, presume)
mark(judge, that)
nsubj(judge, all)
case(we, of)
nmod(all, we)
ccomp(presume, judge)
det(good, the)
obj(judge, good)
case(good, as)
det(good, a)
amod(good, human)
obl(judge, good)
cc(good, and)
advmod(simply, not)
advmod(good, simply)
case(good, as)
det(good, a)
amod(good, professional)
punct(white, ,)
conj(professional, white)
punct(good, ,)
amod(good, american)
conj(judge, good)
punct(presume, .)
amod(judgment, such)
nsubj(meaningful, judgment)
cop(meaningful, be)
root(ROOT, meaningful)
advmod(in, only)
advmod(meaningful, in)
advmod(far, so)
advmod(meaningful, far)
mark(member, as)
nsubj(member, person)
cop(member, be)
advcl(far, member)
case(world, of)
det(world, a)
nmod(member, world)
punct(let, ,)
parataxis(meaningful, let)
obj(let, we)
xcomp(let, say)
det(community, a)
obj(say, community)
punct(community, ,)
nsubj(embrace, that)
acl:relcl(community, embrace)
obj(embrace, Scarsdale)
cc(Yonkers, or)
conj(Scarsdale, Yonkers)
punct(richer, ,)
cc(richer, but)
cop(richer, be)
advmod(richer, also)
advmod(richer, infinitely)
conj(embrace, richer)
mark(inclusive, since)
nsubj(inclusive, it)
cop(inclusive, be)
advmod(inclusive, all)
punct(inclusive, -)
advcl(richer, inclusive)
punct(meaningful, .)
det(community, that)
nsubj(object, community)
case(creation, of)
det(creation, all)
nmod(community, creation)
cop(object, be)
punct(object, ,)
advmod(object, then)
punct(object, ,)
det(object, the)
amod(object, ultimate)
root(ROOT, object)
case(loyalty, of)
nmod:poss(loyalty, we)
nmod(object, loyalty)
cc(norm, and)
det(norm, the)
amod(norm, concrete)
conj(loyalty, norm)
case(judgment, of)
det(judgment, all)
amod(judgment, moral)
nmod(norm, judgment)
punct(object, .)
amod(discrimination, racial)
nsubj(wrong, discrimination)
cop(wrong, be)
root(ROOT, wrong)
punct(wrong, ,)
advmod(wrong, then)
punct(wrong, ,)
advmod(go, not)
mark(go, because)
nsubj(go, it)
advcl(wrong, go)
case(grain, against)
det(grain, the)
obl(go, grain)
case(member, of)
det(member, a)
compound(member, faculty)
nmod(grain, member)
acl(member, try)
mark(converse, to)
xcomp(try, converse)
case(realtor, with)
det(realtor, a)
amod(realtor, few)
obl(converse, realtor)
cc(go, but)
mark(go, because)
nsubj(go, it)
conj(go, go)
case(grain, against)
det(grain, the)
obl(go, grain)
case(creation, of)
nmod(grain, creation)
cc(will, and)
case(will, against)
det(will, the)
conj(grain, will)
case(creator, of)
det(creator, the)
nmod(will, creator)
punct(issue, .)
advmod(take, thus)
punct(take, ,)
amod(issue, moral)
nsubj(take, issue)
case(nature, concern)
det(nature, the)
nmod(issue, nature)
case(process, of)
det(process, the)
amod(process, legal)
cc(political, and)
conj(legal, political)
nmod(nature, process)
conj(wrong, take)
case(dimension, on)
amod(dimension, theological)
obl(take, dimension)
punct(wrong, . )
det(Society, a)
amod(Society, fragment)
nsubj(develop, Society)
punct(3, ()
nummod(develop, 3)
punct(3, ))
case(year, over)
det(year, the)
nmod(Society, year)
punct(develop, ,)
nsubj(develop, individual)
acl(individual, engage)
case(sale, in)
det(sale, the)
obl(engage, sale)
case(estate, of)
amod(estate, real)
nmod(sale, estate)
aux(develop, have)
root(ROOT, develop)
amod(unity, remarkable)
obj(develop, unity)
case(method, in)
det(method, the)
nmod(unity, method)
cc(practice, and)
conj(method, practice)
acl(method, employ)
punct(talk, .)
amod(realtor, most)
nsubj(talk, realtor)
cc(broker, and)
amod(broker, real)
compound(broker, estate)
conj(realtor, broker)
conj(develop, talk)
case(themselves, of)
obl(talk, themselves)
case(people, as)
punct(people, ``)
amod(people, professional)
obl(talk, people)
punct(people, '')
case(value, with)
det(value, the)
amod(value, cultural)
cc(moral, and)
conj(cultural, moral)
nmod(people, value)
acl(value, hold)
case(profession, by)
det(profession, the)
amod(profession, traditional)
obl(hold, profession)
punct(develop, .)
cc(attach, but)
det(significance, what)
nsubj(attach, significance)
root(ROOT, attach)
case(professional, to)
punct(professional, ``)
obl(attach, professional)
punct(professional, '')
punct(attach, ,)
case(sense, beyond)
det(sense, the)
amod(sense, narrow)
obl(attach, sense)
case(skillfulness, of)
nmod(sense, skillfulness)
mark(meet, in)
acl(sense, meet)
det(client, a)
nmod:poss(need, client)
case(client, 's)
amod(need, state)
obj(meet, need)
mark(note, as)
advmod(note, already)
advcl(meet, note)
punct(attach, ?)
punct(attach, ?)
nmod:poss(faculty, we)
nsubj(press, faculty)
cc(student, and)
conj(faculty, student)
root(ROOT, press)
det(issue, this)
obj(press, issue)
advmod(press, more)
case(other, than)
det(other, any)
obl(press, other)
punct(press, .)
mark(point, as)
det(theologian, a)
nsubj(point, theologian)
case(group, in)
det(group, the)
nmod(theologian, group)
advcl(be, point)
compound:prt(point, out)
punct(be, ,)
det(professional, a)
nsubj(period, professional)
root(ROOT, be)
punct(period, ,)
case(period, before)
det(period, the)
amod(period, modern)
obl(point, period)
case(specialization, of)
amod(specialization, technical)
nmod(period, specialization)
punct(period, ,)
appos(period, one)
nsubj(profess, who)
punct(profess, ``)
acl:relcl(one, profess)
punct(profess, '')
mark(bearer, to)
cop(bearer, be)
det(bearer, a)
xcomp(profess, bearer)
cc(critic, and)
conj(bearer, critic)
case(culture, of)
nmod:poss(culture, he)
nmod(critic, culture)
case(use, in)
det(use, the)
obl(bearer, use)
case(skill, of)
nmod:poss(skill, he)
amod(skill, particular)
nmod(use, skill)
punct(one, .)
mark(look, if)
nsubj(look, we)
advcl(see, look)
case(world, about)
det(world, the)
obl(look, world)
obl:tmod(look, today)
punct(see, ,)
nsubj(see, we)
aux(see, can)
root(ROOT, see)
advmod(see, clearly)
mark(be, that)
expl(be, there)
ccomp(see, be)
nummod(factor, two)
advmod(significant, especially)
amod(factor, significant)
nsubj(be, factor)
acl(factor, shape)
det(future, the)
obj(shape, future)
case(civilization, of)
nmod:poss(civilization, we)
nmod(future, civilization)
punct(science, :)
appos(civilization, science)
cc(religion, and)
conj(science, religion)
punct(science, .)
nsubj(place, Science)
aux(place, be)
ccomp(see, place)
case(hand, in)
nmod:poss(hand, we)
obl(place, hand)
det(power, the)
amod(power, ultimate)
obj(place, power)
case(universe, of)
det(universe, the)
nmod(power, universe)
punct(power, ,)
det(power, the)
appos(power, power)
case(atom, of)
det(atom, the)
nmod(power, atom)
punct(see, .)
nsubj(decide, Religion)
punct(lack, ,)
cc(lack, or)
det(lack, the)
conj(Religion, lack)
case(it, of)
nmod(lack, it)
punct(decide, ,)
aux(decide, will)
root(ROOT, decide)
mark(use, whether)
nsubj(use, we)
ccomp(decide, use)
det(power, this)
obj(use, power)
mark(build, to)
advcl(use, build)
det(world, a)
amod(world, brave)
amod(world, new)
obj(build, world)
case(peace, of)
nmod(world, peace)
cc(abundance, and)
conj(peace, abundance)
case(mankind, for)
det(mankind, all)
nmod(peace, mankind)
punct(misuse, ,)
cc(misuse, or)
mark(misuse, whether)
nsubj(misuse, we)
conj(use, misuse)
det(power, this)
obj(misuse, power)
mark(leave, to)
advcl(misuse, leave)
det(world, a)
obj(leave, world)
advmod(destroy, utterly)
xcomp(leave, destroy)
punct(decide, .)
advmod(have, how)
aux(have, can)
nsubj(have, we)
root(ROOT, have)
det(wisdom, the)
obj(have, wisdom)
mark(meet, to)
acl(wisdom, meet)
det:predet(challenge, such)
det(challenge, a)
amod(challenge, new)
cc(difficult, and)
conj(new, difficult)
obj(meet, challenge)
punct(have, ?)
punct(have, ?)
nsubj(feel, we)
aux(feel, may)
root(ROOT, feel)
xcomp(feel, pessimistic)
case(outlook, at)
det(outlook, the)
obl(pessimistic, outlook)
punct(feel, .)
cc(be, and)
cc(be, yet)
expl(be, there)
root(ROOT, be)
det(note, a)
nsubj(be, note)
case(hope, of)
nmod(note, hope)
punct(be, ,)
mark(give, because)
det(science, this)
amod(science, same)
nsubj(give, science)
nsubj(give, that)
aux(give, be)
acl:relcl(science, give)
iobj(give, we)
det(power, the)
obj(give, power)
case(atom, of)
det(atom, the)
nmod(power, atom)
aux(give, be)
advmod(give, also)
conj(be, give)
iobj(give, we)
amod(vision, atomic)
obj(give, vision)
punct(be, .)
nsubj(look, we)
aux(look, be)
root(ROOT, look)
case(atom, inside)
det(atom, the)
obl(look, atom)
cc(see, and)
conj(look, see)
obj(see, there)
det(universe, a)
obj(see, universe)
nsubj(material, which)
cop(material, be)
advmod(material, not)
acl:relcl(universe, material)
cc(something, but)
conj(universe, something)
case(material, beyond)
det(material, the)
nmod(something, material)
punct(universe, ,)
det(universe, a)
appos(something, universe)
nsubj(matter, that)
case(word, in)
det(word, a)
nmod(universe, word)
cop(matter, be)
advmod(matter, not)
acl:relcl(universe, matter)
cc(music, but)
conj(matter, music)
punct(look, .)
cc(vision, and)
nsubj(vision, it)
cop(vision, be)
case(vision, in)
det(vision, this)
amod(vision, new)
root(ROOT, vision)
case(atom, of)
det(atom, the)
nmod(vision, atom)
obj(find, that)
nsubj(find, we)
acl:relcl(atom, find)
det(affirmation, a)
obj(find, affirmation)
cc(invigoration, and)
det(invigoration, a)
conj(affirmation, invigoration)
case(faith, of)
nmod:poss(faith, we)
nmod(invigoration, faith)
punct(vision, .)
amod(energy, Atomic)
nsubj(need, energy)
mark(see, to)
acl(energy, see)
det(vision, this)
obj(see, vision)
case(perspective, in)
obl(see, perspective)
punct(need, ,)
nsubj(need, we)
root(ROOT, need)
advmod(need, first)
case(idea, of)
det:predet(idea, all)
det(idea, a)
amod(idea, clear)
obl(need, idea)
case(magnitude, of)
det(magnitude, the)
nmod(idea, magnitude)
case(power, of)
det(power, this)
amod(power, new)
nmod(magnitude, power)
case(atom, from)
det(atom, the)
nmod(power, atom)
punct(need, .)
nsubj(know, you)
root(ROOT, know)
mark(hold, that)
nsubj(hold, I)
aux(hold, could)
ccomp(know, hold)
advmod(here, right)
advmod(hold, here)
case(hand, in)
nmod:poss(hand, my)
obl(hold, hand)
det(chunk, the)
amod(chunk, little)
obj(hold, chunk)
case(metal, of)
compound(metal, uranium)
nmod(chunk, metal)
nsubj(heart, that)
cop(heart, be)
det(heart, the)
acl:relcl(chunk, heart)
case(bomb, of)
det(bomb, the)
nmod(heart, bomb)
nsubj(drop, that)
acl:relcl(bomb, drop)
case(Hiroshima, on)
obl(drop, Hiroshima)
punct(know, .)
nsubj(size, it)
cop(size, be)
advmod(size, only)
case(size, about)
det(size, the)
root(ROOT, size)
case(baseball, of)
det(baseball, a)
nmod(size, baseball)
punct(size, ;)
punct(size, ;)
cc(be, but)
conj(be, pack)
case(ball, in)
det(ball, that)
amod(ball, metallic)
obl(pack, ball)
expl(be, there)
conj(size, be)
det(force, the)
amod(force, explosive)
nsubj(be, force)
case(ton, of)
nummod(ton, 20,000)
nmod(force, ton)
case(Aj, of)
nmod(ton, Aj)
punct(tnt, .)
nsubj(tnt, that)
cop(tnt, be)
amod(tnt, enough)
parataxis(be, tnt)
mark(fill, to)
acl(tnt, fill)
det(tower, the)
obj(fill, tower)
case(Building, of)
det(Building, the)
compound(Building, Empire)
compound(Building, State)
nmod(tower, Building)
punct(fill, ;)
punct(fill, ;)
cc(become, and)
case(availability, with)
det(availability, the)
obl(become, availability)
case(bomb, of)
nmod(availability, bomb)
case(size, of)
det(size, that)
nmod(bomb, size)
punct(become, ,)
nsubj(become, war)
conj(tnt, become)
det(problem, a)
amod(problem, new)
xcomp(become, problem)
punct(size, .)
advmod(restrict, now)
nsubj(restrict, we)
aux(restrict, might)
aux(restrict, have)
root(ROOT, restrict)
det(use, the)
obj(restrict, use)
case(bomb, of)
compound(bomb, uranium)
nmod(use, bomb)
mark(control, by)
advcl(restrict, control)
det(source, the)
obj(control, source)
case(uranium, of)
nmod(source, uranium)
mark(find, because)
nsubj:pass(find, it)
aux:pass(find, be)
advcl(control, find)
case(place, in)
advmod(place, only)
det(place, a)
amod(place, few)
obl(find, place)
case(world, in)
det(world, the)
nmod(place, world)
punct(restrict, .)
cc(start, but)
nsubj(start, we)
aux(start, have)
advmod(start, hardly)
root(ROOT, start)
mark(adjust, to)
xcomp(start, adjust)
nmod:poss(thinking, we)
obj(adjust, thinking)
case(weapon, to)
det(weapon, this)
amod(weapon, new)
compound(weapon, uranium)
obl(adjust, weapon)
mark(face, when)
nsubj:pass(face, we)
aux:pass(face, be)
advcl(adjust, face)
case(bomb, with)
det(bomb, the)
compound(bomb, hydrogen)
obl(face, bomb)
punct(start, .)
nsubj(plentiful, Hydrogen)
cop(plentiful, be)
advmod(plentiful, just)
advmod(plentiful, as)
root(ROOT, plentiful)
mark(scarce, as)
nsubj(scarce, uranium)
cop(scarce, be)
advcl(plentiful, scarce)
punct(plentiful, .)
nsubj(know, we)
root(ROOT, know)
mark(have, that)
nsubj(have, we)
ccomp(know, have)
obj(have, hydrogen)
case(water, in)
obl(have, water)
punct(know, ;)
punct(know, ;)
nsubj(Af, water)
cop(Af, be)
parataxis(know, Af)
cc(stand, and)
det(h, the)
nsubj(stand, h)
conj(Af, stand)
case(hydrogen, for)
obl(stand, hydrogen)
punct(know, ;)
punct(know, ;)
expl(be, there)
parataxis(know, be)
advmod(be, also)
nsubj(be, hydrogen)
case(wood, in)
nmod(hydrogen, wood)
cc(hydrogen, and)
conj(wood, hydrogen)
case(body, in)
nmod:poss(body, we)
nmod(wood, body)
punct(know, . )
nsubj(calculate, I)
aux(calculate, have)
root(ROOT, calculate)
mark(explode, that)
mark(snap, if)
nsubj(snap, I)
aux(snap, could)
advcl(explode, snap)
nmod:poss(finger, my)
obj(snap, finger)
case(gesture, in)
nummod(gesture, one)
compound(gesture, magic)
obl(snap, gesture)
mark(release, to)
advcl(snap, release)
det(power, the)
obj(release, power)
case(hydrogen, of)
det:predet(hydrogen, all)
det(hydrogen, the)
nmod(power, hydrogen)
case(body, in)
nmod:poss(body, my)
nmod(hydrogen, body)
punct(explode, ,)
nsubj(explode, I)
aux(explode, would)
ccomp(calculate, explode)
case(force, with)
det(force, the)
obl(explode, force)
case(bomb, of)
det(bomb, a)
nummod(bomb, hundred)
nmod(force, bomb)
case(kind, of)
det(kind, the)
nmod(bomb, kind)
nsubj(fall, that)
acl:relcl(kind, fall)
case(Hiroshima, on)
obl(fall, Hiroshima)
punct(calculate, . )
nsubj(try, I)
aux(try, will)
advmod(try, not)
root(ROOT, try)
det(experiment, the)
obj(try, experiment)
punct(think, ,)
cc(think, but)
nsubj(think, I)
conj(try, think)
nsubj(see, you)
aux(see, can)
ccomp(think, see)
mark(be, that)
mark(know, if)
nsubj(know, we)
det(we, all)
advcl(be, know)
det(secret, the)
obj(know, secret)
cc(let, and)
nsubj(let, we)
aux(let, could)
advmod(let, all)
conj(see, let)
obj(let, ourselves)
xcomp(let, go)
punct(be, ,)
expl(be, there)
aux(be, would)
ccomp(see, be)
det:predet(explosion, quite)
det(explosion, a)
nsubj(be, explosion)
punct(try, .)
cc(think, and)
advmod(think, then)
root(ROOT, think)
advmod(little, how)
amod(hydrogen, little)
obj(have, hydrogen)
nsubj(have, we)
ccomp(think, have)
case(we, in)
obl(have, we)
case(hydrogen, compare)
case(hydrogen, with)
det(hydrogen, the)
obl(have, hydrogen)
case(Bay, in)
compound(Bay, Delaware)
nmod(hydrogen, Bay)
cc(ocean, or)
case(ocean, in)
det(ocean, the)
conj(hydrogen, ocean)
advmod(ocean, beyond)
punct(think, .)
compound(water, Salt)
nsubj(Af, water)
cop(Af, be)
advmod(Af, still)
root(ROOT, Af)
punct(Af, ,)
det(hydrogen, the)
amod(hydrogen, same)
nsubj(there, hydrogen)
cop(there, be)
parataxis(Af, there)
punct(Af, .)
cc(show, and)
det(size, the)
nsubj(show, size)
case(ocean, of)
det(ocean, the)
nmod(size, ocean)
root(ROOT, show)
iobj(show, we)
det(magnitude, the)
obj(show, magnitude)
case(power, of)
det(power, the)
amod(power, destructive)
nmod(magnitude, power)
nsubj(hold, we)
acl:relcl(power, hold)
case(hand, in)
nmod:poss(hand, we)
obl(hold, hand)
obl:tmod(hold, today)
punct(show, .)
advmod(be, of)
fixed(of, course)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(be, also)
det(side, a)
amod(side, optimistic)
nsubj(be, side)
case(picture, to)
det(picture, the)
nmod(side, picture)
punct(be, .)
mark(know, for)
mark(know, if)
nsubj(know, I)
advcl(rent, know)
det(secret, the)
obj(know, secret)
mark(let, of)
acl(secret, let)
det(power, this)
obj(let, power)
case(change, in)
nmod:poss(change, my)
compound(change, body)
obl(let, change)
advmod(let, directly)
case(electricity, into)
nmod(change, electricity)
punct(rent, ,)
nsubj(rent, I)
aux(rent, could)
parataxis(be, rent)
obj(rent, myself)
compound:prt(rent, out)
case(company, to)
det(company, the)
amod(company, electric)
obl(rent, company)
cc(power, and)
case(power, with)
advmod(power, just)
det(power, the)
obl(light, power)
case(body, in)
nmod:poss(body, my)
nmod(power, body)
nsubj(light, I)
aux(light, could)
conj(rent, light)
det:predet(light, all)
det(light, the)
obj(light, light)
cc(run, and)
conj(light, run)
det:predet(factory, all)
det(factory, the)
obj(run, factory)
case(States, in)
det(States, the)
amod(States, entire)
compound(States, United)
nmod(factory, States)
case(day, for)
det(day, some)
obl(run, day)
punct(be, .)
cc(think, and)
root(ROOT, think)
punct(think, ,)
mark(know, if)
nsubj(know, we)
det(we, all)
advcl(think, know)
det(secret, this)
obj(know, secret)
cc(pool, and)
nsubj(pool, we)
aux(pool, could)
conj(know, pool)
nmod:poss(power, we)
obj(pool, power)
punct(company, ,)
nsubj(company, what)
det(company, a)
amod(company, wonderful)
amod(company, public)
compound(company, utility)
ccomp(think, company)
nsubj(make, we)
aux(make, would)
acl:relcl(company, make)
punct(think, .)
case(hydrogen, with)
advmod(hydrogen, just)
det(hydrogen, the)
obl(run, hydrogen)
case(body, of)
nmod:poss(body, we)
nmod(hydrogen, body)
punct(run, ,)
nsubj(run, we)
aux(run, could)
root(ROOT, run)
det(world, the)
obj(run, world)
case(year, for)
obl(run, year)
punct(run, .)
advmod(think, then)
root(ROOT, think)
case(Bay, of)
compound(Bay, Delaware)
obl(think, Bay)
cc(ocean, and)
det(ocean, the)
conj(Bay, ocean)
cc(see, and)
nsubj(see, you)
conj(think, see)
mark(have, that)
nsubj(have, we)
ccomp(see, have)
det(supply, a)
obj(have, supply)
case(power, of)
nmod(supply, power)
case(million, for)
obl(have, million)
case(year, of)
nmod(million, year)
mark(come, to)
acl(million, come)
punct(think, .)
nsubj(power, it)
cop(power, be)
root(ROOT, power)
case(which, with)
obl(rebuild, which)
nsubj(rebuild, we)
aux(rebuild, can)
advmod(rebuild, literally)
acl:relcl(power, rebuild)
det(world, the)
obj(rebuild, world)
punct(provide, ,)
conj(rebuild, provide)
amod(housing, adequate)
obj(provide, housing)
punct(food, ,)
conj(housing, food)
punct(education, ,)
conj(housing, education)
punct(living, ,)
amod(living, abundant)
conj(housing, living)
case(everyone, for)
nmod(housing, everyone)
advmod(everyone, everywhere)
punct(power, .)
det(atom, a)
amod(atom, octillion)
nsubj(let, atom)
advmod(let, now)
root(ROOT, let)
obj(let, we)
xcomp(let, see)
advmod(come, where)
det(power, this)
nsubj(come, power)
advcl(see, come)
obl(come, from)
punct(come, .)
mark(grasp, to)
advcl(come, grasp)
nmod:poss(view, we)
amod(view, new)
obj(grasp, view)
case(atom, of)
det(atom, the)
nmod(view, atom)
punct(have, ,)
nsubj(have, we)
parataxis(let, have)
mark(appreciate, to)
xcomp(have, appreciate)
advmod(appreciate, first)
case(all, of)
obl(small, all)
advmod(small, how)
ccomp(appreciate, small)
det(atom, the)
nsubj(small, atom)
cop(small, be)
punct(let, . )
nsubj(try, I)
aux(try, have)
aux(try, be)
root(ROOT, try)
mark(make, to)
xcomp(try, make)
obj(make, this)
xcomp(make, clear)
case(class, to)
nmod:poss(class, my)
amod(class, own)
obl(clear, class)
case(chemistry, in)
obl(make, chemistry)
punct(try, .)
nummod(night, one)
obl:tmod(be, night)
expl(be, there)
root(ROOT, be)
det(peas, some)
amod(peas, dry)
nsubj(be, peas)
acl(peas, lie)
case(table, on)
nmod:poss(table, we)
compound(table, kitchen)
obl(lie, table)
punct(look, ,)
cc(look, and)
det(peas, these)
nsubj(look, peas)
conj(be, look)
case(I, to)
obl(look, I)
case(group, like)
det(group, a)
amod(group, little)
obl(look, group)
case(atom, of)
nmod(group, atom)
punct(look, ;)
punct(be, ;)
cc(ask, and)
nsubj(ask, I)
conj(be, ask)
iobj(ask, myself)
det(question, a)
obj(ask, question)
punct(be, :)
root(ROOT, suppose)
nsubj(have, I)
ccomp(suppose, have)
det(number, the)
amod(number, same)
obj(have, number)
case(peas, of)
nmod(number, peas)
mark(be, as)
expl(be, there)
advcl(have, be)
nsubj(be, atom)
case(body, in)
nmod:poss(body, my)
nmod(atom, body)
punct(large, ,)
advmod(large, how)
amod(area, large)
det(area, a)
obj(cover, area)
aux(cover, would)
nsubj(cover, they)
ccomp(calculate, cover)
punct(suppose, ?)
punct(suppose, ?)
nsubj(calculate, I)
parataxis(suppose, calculate)
advmod(calculate, first)
mark(be, that)
expl(be, there)
ccomp(calculate, be)
case(atom, about)
det(atom, a)
amod(atom, octillion)
nsubj(be, atom)
case(body, in)
det(body, the)
amod(body, average)
amod(body, human)
nmod(atom, body)
punct(suppose, ;)
punct(suppose, ;)
nsubj(one, that)
cop(one, be)
det(one, a)
compound(one, figure)
parataxis(suppose, one)
case(cipher, with)
nummod(cipher, 27)
nmod(one, cipher)
punct(cipher, ,)
det:predet(number, quite)
det(number, a)
amod(number, large)
appos(cipher, number)
punct(number, .)
advmod(calculate, then)
nsubj(calculate, I)
parataxis(suppose, calculate)
mark(fill, that)
det(peas, a)
nummod(peas, million)
nsubj(fill, peas)
aux(fill, would)
advmod(fill, just)
advmod(fill, about)
ccomp(calculate, fill)
det(refrigerator, a)
compound(refrigerator, household)
obj(fill, refrigerator)
punct(fill, ;)
punct(suppose, ;)
det(peas, a)
nummod(peas, billion)
nsubj(fill, peas)
aux(fill, would)
parataxis(suppose, fill)
det(house, a)
amod(house, small)
obj(fill, house)
case(cellar, from)
obl(fill, cellar)
case(attic, to)
nmod(cellar, attic)
punct(fill, ;)
punct(fill, ;)
det(peas, a)
nummod(peas, trillion)
nsubj(fill, peas)
aux(fill, would)
parataxis(suppose, fill)
det:predet(house, all)
det(house, the)
obj(fill, house)
case(town, in)
det(town, a)
obl(fill, town)
case(people, of)
advmod(ten, about)
compound(thousand, ten)
nummod(people, thousand)
nmod(town, people)
punct(fill, ;)
punct(fill, ;)
cc(fill, and)
det(peas, a)
compound(peas, quadrillion)
nsubj(fill, peas)
aux(fill, would)
conj(suppose, fill)
det:predet(building, all)
det(building, the)
obj(fill, building)
case(city, in)
det(city, the)
obl(fill, city)
case(Philadelphia, of)
nmod(city, Philadelphia)
punct(suppose, . )
nsubj(see, I)
root(ROOT, see)
mark(run, that)
nsubj(run, I)
aux(run, would)
advmod(run, soon)
ccomp(see, run)
case(building, out)
case(building, of)
obl(run, building)
case(rate, at)
det(rate, this)
obl(run, rate)
punct(decide, ,)
advmod(decide, so)
nsubj(decide, I)
conj(see, decide)
mark(take, to)
xcomp(decide, take)
det(measure, another)
obj(take, measure)
punct(measure, --)
det(state, the)
amod(state, whole)
appos(measure, state)
case(Pennsylvania, of)
nmod(state, Pennsylvania)
punct(see, .)
root(ROOT, imagine)
mark(be, that)
expl(be, there)
ccomp(imagine, be)
det(blizzard, a)
nsubj(be, blizzard)
case(Pennsylvania, over)
nmod(blizzard, Pennsylvania)
punct(snow, ,)
cc(snow, but)
case(snow, instead)
fixed(instead, of)
amod(snow, snow)
obl(snow, snow)
punct(snow, ,)
nsubj(snow, it)
conj(imagine, snow)
obj(snow, peas)
punct(imagine, ;)
punct(imagine, ;)
advmod(get, so)
nsubj(get, we)
parataxis(imagine, get)
det(state, the)
amod(state, whole)
obj(get, state)
xcomp(get, cover)
case(peas, with)
obl(cover, peas)
punct(cover, ,)
advmod(four, about)
nummod(foot, four)
obl:npmod(deep, foot)
advmod(cover, deep)
punct(imagine, .)
nsubj(imagine, you)
aux(imagine, can)
root(ROOT, imagine)
obj(look, what)
nsubj(look, it)
aux(look, would)
ccomp(imagine, look)
mark(go, like)
advcl(look, go)
advmod(go, out)
case(turnpike, on)
det(turnpike, the)
obl(go, turnpike)
case(peas, with)
det(peas, the)
obl(go, peas)
acl(peas, bank)
compound:prt(bank, up)
case(house, against)
det(house, the)
obl(bank, house)
cc(cover, and)
conj(bank, cover)
det(car, the)
obj(cover, car)
punct(imagine, ;)
punct(imagine, ;)
nsubj(blanket, Pennsylvania)
advmod(blanket, thus)
nsubj(contain, blanket)
aux(contain, would)
parataxis(imagine, contain)
case(peas, about)
det(peas, a)
amod(peas, quintillion)
obl(contain, peas)
punct(imagine, .)
cc(have, but)
nsubj(have, we)
advmod(have, still)
root(ROOT, have)
det(way, a)
amod(way, long)
obj(have, way)
mark(go, to)
acl(way, go)
punct(have, .)
advmod(imagine, next)
nsubj(imagine, we)
root(ROOT, imagine)
nmod:poss(blizzard, we)
obj(imagine, blizzard)
ccomp(imagine, rage)
case(area, over)
det:predet(area, all)
det(area, the)
compound(area, land)
obl(rage, area)
case(globe, of)
det(globe, the)
amod(globe, entire)
nmod(area, globe)
punct(area, --)
compound(America, North)
appos(area, America)
punct(America, ,)
compound(America, South)
conj(America, America)
punct(Europe, ,)
conj(America, Europe)
punct(Asia, ,)
conj(America, Asia)
punct(Africa, ,)
cc(Africa, and)
conj(America, Africa)
punct(cover, ,)
advmod(cover, all)
conj(America, cover)
case(peas, with)
obl(cover, peas)
nummod(foot, four)
obl:npmod(deep, foot)
xcomp(cover, deep)
punct(cover, ;)
punct(have, ;)
advmod(have, then)
nsubj(have, we)
parataxis(imagine, have)
amod(peas, sextillion)
obj(have, peas)
punct(imagine, .)
advmod(freeze, next)
nsubj(freeze, we)
root(ROOT, freeze)
case(ocean, over)
det(ocean, the)
obl(freeze, ocean)
cc(cover, and)
conj(freeze, cover)
det(earth, the)
amod(earth, whole)
obj(cover, earth)
case(peas, with)
obl(cover, peas)
punct(go, ,)
advmod(go, then)
nsubj(go, we)
conj(freeze, go)
advmod(go, out)
case(star, among)
det(star, the)
amod(star, neighbor)
obl(go, star)
punct(collect, ,)
conj(go, collect)
nummod(planet, 250)
obj(collect, planet)
det(size, each)
det(size, the)
obj(collect, size)
case(earth, of)
det(earth, the)
nmod(size, earth)
punct(cover, ,)
cc(cover, and)
advmod(cover, also)
conj(collect, cover)
obj(cover, each)
case(these, of)
nmod(each, these)
case(peas, with)
obl(cover, peas)
nummod(foot, four)
obl:npmod(deep, foot)
xcomp(cover, deep)
punct(cover, ;)
punct(freeze, ;)
cc(have, and)
advmod(have, then)
nsubj(have, we)
conj(freeze, have)
obj(have, septillion)
punct(freeze, .)
advmod(go, finally)
nsubj(go, we)
root(ROOT, go)
case(reach, into)
det(reach, the)
amod(reach, farthest)
obl(go, reach)
case(Way, of)
det(Way, the)
amod(Way, Milky)
nmod(reach, Way)
punct(go, ;)
punct(go, ;)
nsubj(get, we)
parataxis(go, get)
nummod(planet, 250,000)
obj(get, planet)
punct(go, ;)
punct(go, ;)
nsubj(cover, we)
parataxis(go, cover)
obj(cover, each)
case(these, of)
nmod(each, these)
case(blanket, with)
nmod:poss(blanket, we)
obl(cover, blanket)
case(peas, of)
nmod(blanket, peas)
cc(have, and)
advmod(have, then)
case(last, at)
obl(have, last)
nsubj(have, we)
conj(cover, have)
amod(peas, octillion)
obj(have, peas)
acl(peas, corresponding)
case(number, in)
obl(corresponding, number)
case(atom, to)
det(atom, the)
nmod(number, atom)
case(body, in)
det(body, the)
nmod(atom, body)
punct(go, .)
advmod(see, so)
nsubj(see, you)
root(ROOT, see)
advmod(small, how)
ccomp(see, small)
det(atom, a)
nsubj(small, atom)
cop(small, be)
cc(complicated, and)
advmod(complicated, how)
conj(small, complicated)
nsubj(complicated, you)
cop(complicated, be)
punct(see, . )
det(speck, a)
root(ROOT, speck)
punct(speck, --)
cc(space, and)
conj(speck, space)
advmod(speck, now)
mark(small, although)
det(atom, a)
nsubj(small, atom)
cop(small, be)
advcl(have, small)
punct(have, ,)
nsubj(have, we)
aux(have, can)
advmod(have, still)
case(imagination, in)
obl(have, imagination)
parataxis(speck, have)
det(look, a)
obj(have, look)
case(it, at)
nmod(look, it)
punct(let, .)
parataxis(have, let)
obj(let, we)
xcomp(let, focus)
case(atom, on)
det(atom, a)
obl(focus, atom)
case(calcium, of)
nmod(atom, calcium)
case(tip, from)
det(tip, the)
obl(focus, tip)
case(bone, of)
det(bone, the)
nmod(tip, bone)
case(finger, of)
nmod:poss(finger, my)
nmod(bone, finger)
cc(let, and)
conj(let, let)
obj(let, we)
xcomp(let, suppose)
mark(swallow, that)
nsubj(swallow, I)
ccomp(suppose, swallow)
det(magic, a)
obj(swallow, magic)
appos(magic, Alice)
case(pill, in)
compound(pill, wonderland)
amod(pill, grow)
obl(swallow, pill)
punct(speck, . )
nsubj(start, I)
root(ROOT, start)
xcomp(start, grow)
advmod(grow, rapidly)
cc(grow, and)
det(atom, this)
compound(atom, calcium)
nsubj(grow, atom)
conj(start, grow)
case(I, along)
case(I, with)
obl(grow, I)
punct(start, . )
nsubj(shoot, I)
root(ROOT, shoot)
compound:prt(shoot, up)
case(roof, through)
det(roof, the)
obl(shoot, roof)
punct(shoot, ,)
case(sky, into)
det(sky, the)
obl(shoot, sky)
punct(shoot, ,)
case(cloud, past)
det(cloud, the)
obl(shoot, cloud)
punct(shoot, ,)
case(stratosphere, through)
det(stratosphere, the)
nmod(cloud, stratosphere)
punct(out, ,)
advmod(stratosphere, out)
case(moon, beyond)
det(moon, the)
obl(out, moon)
punct(out, ,)
conj(out, out)
case(planet, among)
det(planet, the)
obl(out, planet)
punct(shoot, ,)
mark(long, until)
nsubj(long, I)
cop(long, be)
case(hundred, over)
det(hundred, a)
obl:npmod(long, hundred)
cc(fifty, and)
compound(million, fifty)
conj(hundred, million)
obl:npmod(long, mile)
advmod(out, long)
punct(shoot, .)
advmod(swell, then)
det(atom, this)
nsubj(swell, atom)
case(calcium, of)
nmod(atom, calcium)
aux(swell, will)
root(ROOT, swell)
case(something, to)
obl(swell, something)
case(balloon, like)
det(balloon, a)
amod(balloon, great)
nmod(something, balloon)
det(yard, a)
nummod(yard, hundred)
obl:npmod(across, yard)
advmod(swell, across)
punct(swell, ,)
det(balloon, a)
parataxis(swell, balloon)
amod(balloon, big)
amod(balloon, enough)
mark(put, to)
advcl(enough, put)
det(field, a)
compound(field, football)
obj(put, field)
advmod(put, inside)
punct(swell, .)
cc(see, and)
mark(step, if)
nsubj(step, you)
aux(step, should)
advcl(see, step)
advmod(step, inside)
case(atom, of)
det:predet(atom, such)
det(atom, a)
amod(atom, magnify)
obl(step, atom)
punct(step, ,)
case(physics, accord)
fixed(accord, to)
det(physics, the)
obl(step, physics)
case(year, of)
nummod(year, forty)
nmod(physics, year)
advmod(physics, ago)
punct(see, ,)
nsubj(see, you)
aux(see, would)
root(ROOT, see)
xcomp(see, circulate)
case(head, over)
nmod:poss(head, you)
obl(circulate, head)
punct(down, ,)
advmod(circulate, down)
case(side, at)
det(side, the)
obl(down, side)
punct(ball, ,)
cc(ball, and)
case(foot, under)
nmod:poss(foot, you)
nmod(ball, foot)
punct(ball, ,)
det(ball, some)
nummod(ball, twenty)
amod(ball, luminous)
conj(head, ball)
case(size, about)
det(size, the)
nmod(ball, size)
case(football, of)
nmod(size, football)
punct(see, .)
det(ball, these)
nsubj(move, ball)
aux(move, be)
root(ROOT, move)
case(circle, in)
amod(circle, great)
obl(move, circle)
cc(ellipse, and)
conj(circle, ellipse)
punct(electron, ,)
cc(electron, and)
cop(electron, be)
advmod(electron, of)
fixed(of, course)
punct(electron, ,)
det(electron, the)
conj(circle, electron)
punct(electron, ,)
det(particle, the)
appos(electron, particle)
case(electricity, of)
amod(electricity, negative)
nmod(particle, electricity)
nsubj(create, which)
case(action, by)
nmod:poss(action, they)
obl(create, action)
acl:relcl(particle, create)
det(force, the)
obj(create, force)
nsubj(tie, that)
acl:relcl(force, tie)
det(atom, this)
obj(tie, atom)
case(calcium, of)
nmod(atom, calcium)
case(atom, to)
det(atom, the)
amod(atom, neighbor)
obl(tie, atom)
case(oxygen, of)
nmod(atom, oxygen)
cc(make, and)
conj(tie, make)
compound:prt(make, up)
det(structure, the)
amod(structure, solid)
obj(make, structure)
case(bone, of)
nmod:poss(bone, my)
compound(bone, finger)
nmod(structure, bone)
punct(move, .)
mark(move, since)
det(electron, these)
nsubj(move, electron)
aux(move, be)
advcl(wonder, move)
case(planet, like)
obl(move, planet)
punct(wonder, ,)
nsubj(wonder, you)
aux(wonder, may)
root(ROOT, wonder)
mark(be, whether)
expl(be, there)
ccomp(wonder, be)
det(sun, a)
amod(sun, atomic)
nsubj(be, sun)
case(center, at)
det(center, the)
nmod(sun, center)
case(atom, of)
det(atom, the)
nmod(center, atom)
punct(wonder, .)
advmod(look, so)
nsubj(look, you)
root(ROOT, look)
advmod(there, down)
advmod(look, there)
cc(see, and)
nsubj(see, you)
conj(look, see)
det(point, a)
amod(point, tiny)
punct(point, ,)
compound(point, whirling)
obj(see, point)
case(size, about)
det(size, the)
nmod(point, size)
case(head, of)
det(head, the)
nmod(size, head)
case(pin, of)
det(pin, a)
nmod(head, pin)
punct(look, .)
nsubj(sun, this)
cop(sun, be)
det(sun, the)
amod(sun, atomic)
root(ROOT, sun)
punct(sun, ,)
det(nucleus, the)
amod(nucleus, atomic)
appos(sun, nucleus)
punct(sun, .)
advmod(enough, even)
mark(enough, if)
det(atom, the)
nsubj(enough, atom)
cop(enough, be)
amod(enough, big)
advcl(size, enough)
mark(hold, to)
advcl(enough, hold)
det(field, a)
compound(field, football)
obj(hold, field)
punct(size, ,)
det(nucleus, this)
nsubj(size, nucleus)
cop(size, be)
advmod(size, still)
advmod(size, only)
case(size, about)
det(size, the)
root(ROOT, size)
case(pinhead, of)
det(pinhead, a)
nmod(size, pinhead)
punct(size, .)
expl(nucleus, it)
cop(nucleus, be)
det(nucleus, this)
amod(nucleus, atomic)
root(ROOT, nucleus)
nsubj(contain, that)
acl:relcl(nucleus, contain)
det(charge, the)
amod(charge, positive)
obj(contain, charge)
case(electricity, of)
nmod(charge, electricity)
acl(charge, hold)
det(electron, these)
advmod(charge, negatively)
amod(electron, charge)
obj(hold, electron)
case(orbit, in)
nmod:poss(orbit, they)
obl(hold, orbit)
punct(nucleus, ;)
punct(nucleus, ;)
nsubj(contain, it)
advmod(contain, also)
parataxis(nucleus, contain)
advmod(mass, nearly)
det:predet(mass, all)
det(mass, the)
obj(contain, mass)
punct(energy, ,)
cc(energy, and)
det(energy, the)
amod(energy, atomic)
conj(mass, energy)
punct(nucleus, .)
nsubj(ask, you)
aux(ask, may)
root(ROOT, ask)
obj(ask, what)
amod(what, else)
expl(be, there)
acl:relcl(what, be)
punct(nothing, ,)
cc(nothing, and)
det(answer, the)
nsubj(nothing, answer)
cop(nothing, be)
conj(ask, nothing)
punct(nothing, --)
appos(nothing, nothing)
cc(space, but)
amod(space, empty)
conj(nothing, space)
punct(ask, .)
cc(nothing, and)
mark(make, since)
nsubj:pass(make, you)
aux:pass(make, be)
advcl(nothing, make)
case(atom, of)
obl(make, atom)
punct(nothing, ,)
nsubj(nothing, you)
cop(nothing, be)
root(ROOT, nothing)
amod(nothing, much)
cc(space, but)
amod(space, empty)
conj(nothing, space)
punct(nothing, ,)
advmod(nothing, too)
punct(nothing, .)
mark(put, if)
nsubj(put, I)
aux(put, could)
advcl(get, put)
nmod:poss(body, you)
obj(put, body)
case(press, in)
det(press, a)
amod(press, imaginary)
amod(press, atomic)
obl(put, press)
cc(squeeze, and)
conj(put, squeeze)
obj(squeeze, you)
compound:prt(squeeze, down)
punct(squeeze, ,)
conj(squeeze, squeeze)
det(hole, these)
obj(squeeze, hole)
case(you, out)
case(you, of)
obl(squeeze, you)
case(way, in)
det(way, the)
obl(squeeze, way)
nsubj(squeeze, we)
acl:relcl(way, squeeze)
det(hole, the)
obj(squeeze, hole)
case(sponge, out)
case(sponge, of)
det(sponge, a)
obl(squeeze, sponge)
punct(get, ,)
nsubj(get, you)
aux(get, would)
root(ROOT, get)
xcomp(get, smaller)
cc(smaller, and)
conj(smaller, smaller)
mark(go, until)
advmod(smaller, finally)
mark(go, when)
det(hole, the)
amod(hole, last)
nsubj:pass(go, hole)
aux:pass(go, be)
advcl(smaller, go)
punct(smaller, ,)
nsubj(smaller, you)
aux(smaller, would)
cop(smaller, be)
parataxis(get, smaller)
case(speck, than)
det(speck, the)
amod(speck, smallest)
obl(smaller, speck)
case(dust, of)
nmod(speck, dust)
obj(see, that)
nsubj(see, you)
aux(see, could)
acl:relcl(speck, see)
case(piece, on)
det(piece, this)
obl(see, piece)
case(paper, of)
nmod(piece, paper)
punct(get, .)
nsubj(remark, someone)
aux(remark, have)
root(ROOT, remark)
mark(ultimate, that)
nsubj(ultimate, this)
cop(ultimate, be)
advmod(ultimate, certainly)
det(ultimate, the)
ccomp(remark, ultimate)
mark(reduce, in)
advcl(ultimate, reduce)
punct(remark, .)
case(rate, at)
det(rate, any)
obl(show, rate)
punct(show, ,)
nsubj(show, it)
root(ROOT, show)
obj(show, we)
advmod(immaterial, how)
ccomp(show, immaterial)
nsubj(immaterial, we)
cop(immaterial, be)
punct(immaterial, .)
ccomp(show, music)
case(sphere, of)
det(sphere, the)
nmod(music, sphere)
advmod(picture, now)
det(view, this)
nummod(view, 1920)
nsubj(picture, view)
case(atom, of)
det(atom, the)
nmod(view, atom)
cop(picture, be)
case(picture, on)
det(picture, the)
amod(picture, whole)
det(picture, a)
amod(picture, discouraging)
ccomp(show, picture)
punct(show, .)
mark(believe, for)
nsubj(believe, we)
root(ROOT, believe)
mark(obey, that)
det(electron, the)
nsubj(obey, electron)
ccomp(believe, obey)
det(law, the)
obj(obey, law)
case(mechanic, of)
nmod(law, mechanic)
cc(electrodynamics, and)
conj(mechanic, electrodynamics)
punct(obey, ;)
punct(obey, ;)
cc(machine, and)
advmod(machine, therefore)
det(atom, the)
nsubj(machine, atom)
cop(machine, be)
advmod(machine, really)
advmod(machine, just)
det(machine, a)
amod(machine, little)
conj(obey, machine)
punct(machine, ;)
punct(machine, ;)
cc(more, and)
case(mechanic, in)
obl(more, mechanic)
det(whole, the)
nsubj(more, whole)
cop(more, be)
advmod(more, no)
conj(machine, more)
case(sum, than)
det(sum, the)
obl(more, sum)
case(part, of)
det(part, the)
nmod(sum, part)
punct(believe, .)
advmod(machine, so)
mark(make, if)
nsubj:pass(make, you)
aux:pass(make, be)
advcl(machine, make)
case(atom, of)
obl(make, atom)
punct(machine, ,)
nsubj(machine, you)
cop(machine, be)
advmod(machine, just)
det(machine, a)
amod(machine, big)
root(ROOT, machine)
punct(machine, ;)
punct(machine, ;)
cc(supermachine, and)
mark(make, since)
det(universe, the)
nsubj:pass(make, universe)
aux:pass(make, be)
advmod(make, also)
advcl(supermachine, make)
case(atom, of)
obl(make, atom)
punct(supermachine, ,)
nsubj(supermachine, it)
cop(supermachine, be)
advmod(supermachine, just)
det(supermachine, a)
conj(machine, supermachine)
punct(machine, .)
cc(mean, and)
nsubj(mean, this)
aux(mean, would)
root(ROOT, mean)
mark(live, that)
nsubj(live, we)
ccomp(mean, live)
case(universe, in)
det(universe, a)
amod(universe, mechanistic)
obl(live, universe)
punct(universe, ,)
acl(universe, govern)
case(law, by)
det(law, the)
obl(govern, law)
case(cause, of)
nmod(law, cause)
cc(effect, and)
conj(cause, effect)
punct(live, ,)
acl(universe, bound)
case(chain, in)
obl(bound, chain)
case(determinism, of)
nmod(chain, determinism)
nsubj(hold, that)
acl:relcl(chain, hold)
det(universe, the)
obj(hold, universe)
case(course, on)
det(course, a)
advmod(predetermine, completely)
amod(course, predetermine)
obl(hold, course)
case(which, in)
obl(be, which)
expl(be, there)
acl:relcl(course, be)
advmod(be, not)
nsubj(be, room)
case(soul, for)
nmod(room, soul)
cc(spirit, or)
conj(soul, spirit)
cc(freedom, or)
amod(freedom, human)
conj(soul, freedom)
punct(mean, .)
cc(why, and)
nsubj(why, this)
cop(why, be)
root(ROOT, why)
advmod(many, so)
amod(scientist, many)
nsubj(agnostic, scientist)
det(century, a)
det(century, half)
det(century, a)
obl:npmod(ago, century)
advmod(agnostic, ago)
cop(agnostic, be)
acl:relcl(why, agnostic)
cc(atheist, or)
conj(agnostic, atheist)
punct(why, .)
advmod(come, then)
root(ROOT, come)
det(revolution, the)
amod(revolution, scientific)
obj(come, revolution)
case(1920', in)
det(1920', the)
amod(1920', late)
obl(come, 1920')
punct(come, . )
det(suggestion, a)
nsubj(show, suggestion)
case(Louis, from)
nmod(suggestion, Louis)
flat(Louis, De)
flat(Louis, Broglie)
punct(Louis, ,)
det(physicist, a)
appos(Louis, physicist)
case(France, in)
nmod(physicist, France)
punct(show, ,)
root(ROOT, show)
obj(show, we)
mark(point, that)
det(electron, these)
nsubj(point, electron)
aux(point, be)
advmod(point, not)
ccomp(show, point)
obj(point, particle)
cc(wave, but)
conj(point, wave)
punct(point, .)
cc(see, and)
mark(see, to)
conj(point, see)
det(meaning, the)
obj(see, meaning)
case(picture, of)
det(picture, this)
amod(picture, new)
nmod(meaning, picture)
punct(imagine, ,)
advcl(see, imagine)
mark(put, that)
nsubj(put, you)
aux(put, can)
ccomp(imagine, put)
compound:prt(put, on)
advmod(powerful, more)
amod(glass, powerful)
obj(put, glass)
cc(go, and)
conj(put, go)
advmod(go, back)
case(atom, inside)
det(atom, the)
obl(go, atom)
cc(have, and)
conj(put, have)
det(look, a)
obj(have, look)
case(it, at)
nmod(look, it)
case(way, in)
det(way, the)
obl(have, way)
nsubj(view, we)
acl:relcl(way, view)
obj(view, it)
obl:tmod(view, today)
punct(show, .)
advmod(see, now)
mark(step, as)
nsubj(step, you)
advcl(see, step)
advmod(step, inside)
punct(see, ,)
mark(see, instead)
fixed(instead, of)
advcl(see, see)
obj(see, particle)
acl(particle, orbit)
advmod(orbit, around)
case(planet, like)
obl(orbit, planet)
punct(see, ,)
nsubj(see, you)
root(ROOT, see)
obj(see, wave)
cc(ripple, and)
conj(wave, ripple)
advmod(much, very)
advmod(see, much)
case(ripple, like)
det(ripple, the)
obl(see, ripple)
obj(get, that)
nsubj(get, you)
acl:relcl(ripple, get)
case(surface, on)
det(surface, the)
obl(get, surface)
case(pond, of)
det(pond, a)
nmod(surface, pond)
mark(drop, when)
nsubj(drop, you)
advcl(get, drop)
det(stone, a)
obj(drop, stone)
case(it, into)
obl(drop, it)
punct(see, .)
det(ripple, these)
nsubj(spread, ripple)
root(ROOT, spread)
compound:prt(spread, out)
case(pattern, in)
amod(pattern, symmetrical)
obl(spread, pattern)
case(window, like)
det(window, the)
amod(window, rise)
nmod(pattern, window)
case(cathedral, of)
det(cathedral, a)
amod(cathedral, great)
nmod(window, cathedral)
punct(spread, .)
cc(put, and)
mark(flow, as)
det(wave, the)
nsubj(flow, wave)
advcl(put, flow)
advmod(flow, back)
cc(forth, and)
conj(back, forth)
cc(merge, and)
conj(flow, merge)
case(wave, with)
det(wave, the)
obl(merge, wave)
case(atom, from)
det(atom, the)
amod(atom, neighbor)
nmod(wave, atom)
punct(put, ,)
nsubj(put, you)
aux(put, can)
root(ROOT, put)
case(aid, on)
det(aid, a)
compound(aid, magic)
compound(aid, hearing)
obl(put, aid)
cc(hear, and)
nsubj(hear, you)
conj(put, hear)
obj(hear, music)
punct(put, .)
nsubj(music, it)
cop(music, be)
det(music, a)
root(ROOT, music)
mark(organ, like)
det(music, the)
nmod(music, music)
case(organ, from)
det(organ, a)
amod(organ, great)
nmod(music, organ)
cc(orchestra, or)
det(orchestra, a)
amod(orchestra, vast)
conj(organ, orchestra)
acl(orchestra, play)
det(symphony, a)
obj(play, symphony)
punct(music, .)
nsubj(there, Harmony)
punct(melody, ,)
conj(Harmony, melody)
punct(structure, ,)
compound(structure, counterpoint)
amod(structure, symphonic)
conj(Harmony, structure)
cop(there, be)
root(ROOT, there)
punct(there, ;)
punct(there, ;)
cc(be, and)
mark(ebb, as)
det(music, this)
nsubj(ebb, music)
advcl(be, ebb)
cc(flow, and)
conj(ebb, flow)
punct(be, ,)
expl(be, there)
conj(there, be)
det(chorus, a)
amod(chorus, antiphonal)
nsubj(be, chorus)
case(atom, from)
det:predet(atom, all)
det(atom, the)
nmod(chorus, atom)
advmod(atom, outside)
punct(be, ,)
case(fact, in)
obl(be, fact)
case(atom, from)
det(atom, the)
nmod(fact, atom)
case(universe, of)
det(universe, the)
amod(universe, entire)
nmod(atom, universe)
punct(there, .)
cc(force, and)
advmod(force, so)
obl:tmod(force, today)
mark(examine, when)
nsubj(examine, we)
advcl(force, examine)
det(structure, the)
obj(examine, structure)
case(knowledge, of)
nmod:poss(knowledge, we)
nmod(structure, knowledge)
case(atom, of)
det(atom, the)
nmod(knowledge, atom)
cc(universe, and)
case(universe, of)
det(universe, the)
conj(atom, universe)
punct(force, ,)
nsubj:pass(force, we)
aux:pass(force, be)
root(ROOT, force)
mark(conclude, to)
xcomp(force, conclude)
mark(music, that)
det(word, the)
amod(word, best)
nsubj(music, word)
mark(describe, to)
acl(word, describe)
nmod:poss(universe, we)
obj(describe, universe)
cop(music, be)
ccomp(conclude, music)
punct(force, .)
det(Island, the)
nsubj(lie, Island)
case(Nantucket, of)
nmod(Island, Nantucket)
punct(Island, ,)
appos(Island, part)
case(State, of)
det(State, the)
nmod(part, State)
case(Massachusetts, of)
nmod(State, Massachusetts)
punct(lie, ,)
root(ROOT, lie)
advmod(one, about)
compound(one, thirty)
punct(one, -)
nummod(mile, one)
obl:npmod(southeast, mile)
advmod(lie, southeast)
case(State, of)
nmod:poss(State, its)
compound(State, mother)
obl(southeast, State)
punct(lie, .)
nsubj(sand, some)
case(Island, of)
det(Island, the)
nmod(some, Island)
cop(sand, be)
root(ROOT, sand)
cc(suitable, and)
cop(suitable, be)
advmod(suitable, not)
conj(sand, suitable)
mark(live, for)
advcl(suitable, live)
punct(sand, .)
det(folk, the)
compound(folk, Island)
nsubj(have, folk)
root(ROOT, have)
nmod:poss(living, they)
obj(have, living)
advmod(entirely, almost)
advmod(visitor, entirely)
case(visitor, from)
compound(visitor, summer)
obl(have, visitor)
punct(have, ;)
punct(have, ;)
det(rest, the)
nsubj:pass(obtain, rest)
aux:pass(obtain, be)
parataxis(have, obtain)
case(scallop, from)
compound(scallop, harbor)
obl(obtain, scallop)
punct(have, .)
case(month, during)
advmod(half, about)
nummod(month, three)
cc(a, and)
conj(three, a)
amod(month, half)
obl(be, month)
case(year, of)
det(year, the)
nmod(month, year)
punct(be, ,)
case(summer, in)
det(summer, the)
obl(be, summer)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nummod(boat, three)
nsubj(be, boat)
nsubj(run, that)
acl:relcl(boat, run)
case(mainland, from)
det(mainland, the)
obl(run, mainland)
case(Island, to)
det(Island, the)
obl(run, Island)
advcl(run, carry)
obj(carry, passenger)
punct(food, ,)
conj(passenger, food)
punct(car, ,)
cc(car, and)
conj(passenger, car)
punct(carry, ;)
punct(be, ;)
cc(need, but)
det(rest, the)
nsubj:pass(need, rest)
case(year, of)
det(year, the)
nmod(rest, year)
advmod(boat, only)
nummod(boat, one)
nmod(rest, boat)
aux:pass(need, be)
conj(be, need)
punct(need, ,)
nsubj(tie, which)
ccomp(need, tie)
compound:prt(tie, up)
case(night, at)
det(night, the)
compound(night, mainland)
obl(tie, night)
cc(make, and)
conj(tie, make)
det(trip, the)
obj(make, trip)
advmod(make, down)
case(Nantucket, to)
obl(down, Nantucket)
case(daytime, in)
det(daytime, the)
obl(make, daytime)
punct(be, .)
nsubj(trip, this)
cop(trip, be)
det(trip, a)
amod(trip, fine)
root(ROOT, trip)
punct(trip, ,)
advmod(trip, too)
punct(trip, ,)
case(day, on)
det(day, a)
amod(day, good)
obl(trip, day)
punct(trip, .)
case(Vineyard, with)
nmod:poss(Vineyard, Martha)
case(Martha, 's)
obl(make, Vineyard)
case(side, on)
nummod(side, one)
nmod(Vineyard, side)
cc(sea, and)
det(sea, the)
amod(sea, open)
conj(side, sea)
case(other, on)
det(other, the)
nmod(sea, other)
punct(make, ,)
nsubj(make, it)
root(ROOT, make)
det(trip, a)
amod(trip, excellent)
obj(make, trip)
case(hour, of)
advmod(three, about)
nummod(hour, three)
nmod(trip, hour)
punct(make, .)
case(extent, to)
det(extent, what)
obl(affect, extent)
cc(affect, and)
case(way, in)
det(way, what)
obj(affect, way)
aux(affect, do)
nsubj(affect, Christianity)
root(ROOT, affect)
det(States, the)
compound(States, United)
obj(affect, States)
case(America, of)
nmod(States, America)
case(century, in)
det(century, the)
amod(century, nineteenth)
obl(affect, century)
punct(affect, ?)
punct(affect, ?)
advmod(far, how)
advmod(modify, far)
cc(in, and)
case(fashion, in)
det(fashion, what)
obl(modify, fashion)
aux(modify, do)
nsubj(modify, it)
root(ROOT, modify)
det(nation, the)
amod(nation, new)
obj(modify, nation)
nsubj(emerge, which)
aux(emerge, be)
acl:relcl(nation, emerge)
case(midst, in)
det(midst, the)
obl(emerge, midst)
case(force, of)
det(force, the)
nmod(midst, force)
acl(force, shape)
det(age, the)
amod(age, revolutionary)
obj(shape, age)
punct(modify, ?)
punct(modify, ?)
case(extent, to)
det(extent, what)
obl(mould, extent)
aux(mould, do)
nsubj(mould, it)
root(ROOT, mould)
det(moral, the)
obj(mould, moral)
cc(life, and)
det(life, the)
amod(life, social)
punct(economic, ,)
conj(social, economic)
punct(political, ,)
cc(political, and)
conj(social, political)
conj(moral, life)
cc(institution, and)
conj(moral, institution)
case(country, of)
det(country, the)
nmod(institution, country)
punct(mould, ?)
punct(mould, ?)
det(picture, a)
amod(picture, complete)
nsubj(impossible, picture)
cop(impossible, be)
root(ROOT, impossible)
punct(impossible, --)
advmod(impossible, partly)
case(limitation, because)
fixed(because, of)
det(limitation, the)
obl(impossible, limitation)
case(space, of)
nmod(limitation, space)
punct(impossible, ,)
advmod(limitation, partly)
case(million, because)
fixed(because, for)
obl(unobtainable, million)
case(individual, of)
nmod(million, individual)
nsubj(profess, who)
acl:relcl(individual, profess)
obj(profess, allegiance)
case(data, to)
det(data, the)
amod(faith, christian)
compound(data, faith)
nmod(allegiance, data)
cop(unobtainable, be)
conj(impossible, unobtainable)
punct(impossible, .)
advmod(more, even)
nsubj(difficulty, more)
case(obstacle, of)
det(obstacle, a)
obl(more, obstacle)
cop(difficulty, be)
det(difficulty, the)
root(ROOT, difficulty)
mark(separate, of)
acl(difficulty, separate)
det(influence, the)
obj(separate, influence)
case(Christianity, of)
nmod(influence, Christianity)
case(factor, from)
amod(factor, other)
obl(separate, factor)
punct(difficulty, .)
mark(give, although)
det(picture, a)
amod(picture, complete)
nsubj:pass(give, picture)
aux(give, can)
advmod(give, not)
aux:pass(give, be)
advcl(indicate, give)
punct(indicate, ,)
nsubj(indicate, we)
aux(indicate, can)
root(ROOT, indicate)
det(aspect, some)
obj(indicate, aspect)
case(life, of)
nmod(aspect, life)
case(which, into)
obl(enter, which)
det(faith, the)
amod(faith, christian)
nsubj(enter, faith)
acl(aspect, enter)
case(factor, as)
case(least, at)
nmod(one, least)
nummod(factor, one)
amod(factor, creative)
obl(enter, factor)
punct(indicate, .)
case(time, at)
obl(say, time)
nsubj(say, we)
aux(say, can)
root(ROOT, say)
mark(factor, that)
nsubj(factor, it)
cop(factor, be)
det(factor, the)
amod(factor, major)
ccomp(say, factor)
punct(say, .)
nsubj(aspect, what)
case(way, in)
det(way, some)
nmod(what, way)
cop(aspect, be)
det(aspect, the)
advmod(important, most)
amod(aspect, important)
root(ROOT, aspect)
cop(impact, be)
det(impact, the)
nmod(aspect, impact)
advmod(million, individually)
case(million, on)
det(million, the)
nmod(impact, million)
nsubj(constitute, who)
acl:relcl(million, constitute)
det(nation, the)
obj(constitute, nation)
punct(impact, .)
mark(see, as)
nsubj(see, we)
aux(see, have)
advcl(member, see)
punct(member, ,)
det(proportion, a)
amod(proportion, grow)
nsubj(member, proportion)
punct(proportion, ,)
mark(minority, although)
case(1914, in)
nsubj(minority, 1914)
advmod(minority, still)
det(minority, a)
advcl(member, minority)
punct(member, ,)
cop(member, be)
root(ROOT, member)
case(church, of)
nmod(member, church)
punct(member, .)
advmod(feel, presumably)
nsubj(feel, those)
nsubj(have, who)
aux(have, do)
advmod(have, not)
acl:relcl(those, have)
det(connexion, a)
amod(connexion, formal)
compound(connexion, church)
obj(have, connexion)
aux(feel, have)
advmod(feel, also)
root(ROOT, feel)
det(influence, the)
obj(feel, influence)
case(Christianity, of)
nmod(influence, Christianity)
case(extent, to)
det(extent, a)
amod(extent, greater)
cc(lesser, or)
conj(greater, lesser)
obl(feel, extent)
punct(feel, .)
nsubj(member, many)
case(they, of)
nmod(many, they)
aux(member, have)
advmod(member, once)
cop(member, be)
root(ROOT, member)
case(church, of)
det(church, a)
nmod(member, church)
cc(give, or)
advmod(give, at)
fixed(at, least)
aux(give, have)
aux:pass(give, be)
conj(member, give)
obj(give, instruction)
case(Christianity, in)
nmod(instruction, Christianity)
cc(allow, but)
case(one, for)
obl(allow, one)
cc(reason, or)
det(reason, another)
conj(one, reason)
aux(allow, have)
conj(give, allow)
det(connexion, the)
obj(allow, connexion)
mark(lapse, to)
acl(connexion, lapse)
punct(member, .)
det(form, the)
nsubj(protestantism, form)
case(Christianity, of)
nmod(form, Christianity)
case(which, to)
obl(expose, which)
nsubj:pass(expose, they)
aux:pass(expose, be)
acl:relcl(form, expose)
cop(protestantism, be)
case(protestantism, for)
det(protestantism, some)
det(protestantism, the)
root(ROOT, protestantism)
case(stock, of)
det(stock, the)
amod(stock, older)
nmod(protestantism, stock)
punct(protestantism, ,)
case(other, for)
nmod(protestantism, other)
det(protestantism, the)
appos(other, protestantism)
case(immigration, of)
det(immigration, the)
amod(century, nineteenth)
punct(century, -)
compound(immigration, century)
nmod(protestantism, immigration)
punct(protestantism, ;)
punct(protestantism, ;)
case(other, for)
advmod(other, still)
nmod(immigration, other)
punct(other, ,)
advmod(immigration, mostly)
case(immigration, of)
det(immigration, the)
amod(century, nineteenth)
punct(century, -)
compound(immigration, century)
nmod(other, immigration)
punct(immigration, ,)
nsubj(Catholicism, it)
cop(Catholicism, be)
compound(Catholicism, Roman)
acl:relcl(immigration, Catholicism)
punct(minority, ,)
cc(minority, and)
case(minority, for)
det(minority, a)
amod(minority, small)
obl(orthodoxy, minority)
nsubj(orthodoxy, it)
cop(orthodoxy, be)
compound(orthodoxy, Eastern)
conj(Catholicism, orthodoxy)
punct(protestantism, .)
case(all, upon)
obl(play, all)
case(they, of)
nmod(all, they)
root(ROOT, play)
det(attitude, the)
amod(attitude, intellectual)
punct(social, ,)
conj(intellectual, social)
punct(political, ,)
conj(intellectual, political)
punct(economic, ,)
cc(economic, and)
conj(intellectual, economic)
obj(play, attitude)
punct(institution, ,)
conj(attitude, institution)
punct(custom, ,)
cc(custom, and)
conj(attitude, custom)
case(nation, of)
det(nation, the)
nmod(custom, nation)
punct(play, .)
case(most, upon)
obl(leave, most)
case(Christianity, of)
det(Christianity, these)
nmod(most, Christianity)
aux(leave, have)
root(ROOT, leave)
det(impress, a)
obj(leave, impress)
cc(have, and)
case(they, through)
nsubj(have, they)
aux(have, have)
conj(leave, have)
det(share, a)
obj(have, share)
mark(make, in)
acl(share, make)
det(individual, the)
obj(make, individual)
obj(make, what)
nsubj(be, he)
acl:relcl(what, be)
punct(leave, .)
advmod(impossible, yet)
mark(determine, to)
csubj(impossible, determine)
advmod(determine, precisely)
case(extent, to)
det(extent, what)
obl(determine, extent)
cc(what, and)
advmod(way, exactly)
case(way, in)
det(way, what)
obl(impossible, way)
det(individual, any)
nsubj(show, individual)
acl:relcl(way, show)
det(effect, the)
obj(show, effect)
case(Christianity, of)
nmod(effect, Christianity)
aux(impossible, would)
cop(impossible, be)
root(ROOT, impossible)
punct(impossible, .)
advmod(only, at)
nmod(only, best)
advmod(approximation, only)
det(approximation, a)
nsubj:pass(arrive, approximation)
aux(arrive, could)
aux:pass(arrive, be)
root(ROOT, arrive)
obl(arrive, at)
punct(arrive, .)
mark(generalize, to)
advcl(arrive, generalize)
case(nation, for)
det(nation, the)
amod(nation, entire)
obl(generalize, nation)
aux(absurd, would)
cop(absurd, be)
conj(arrive, absurd)
punct(absurd, .)
case(instance, for)
obl(know, instance)
punct(know, ,)
nsubj(know, we)
aux(know, can)
advmod(know, not)
parataxis(absurd, know)
mark(rise, whether)
advmod(member, even)
case(member, for)
compound(member, church)
obl(know, member)
det(degree, the)
appos(member, degree)
case(conformity, of)
nmod(degree, conformity)
case(standard, to)
amod(standard, christian)
nmod(conformity, standard)
case(morality, of)
nmod(standard, morality)
acl(standard, increase)
cc(decline, or)
conj(increase, decline)
case(proportion, as)
det(proportion, the)
obl(increase, proportion)
case(member, of)
compound(member, church)
nmod(proportion, member)
case(population, in)
det(population, the)
nmod(member, population)
ccomp(know, rise)
punct(arrive, .)
det(temptation, the)
nsubj(be, temptation)
root(ROOT, be)
mark(say, to)
ccomp(be, say)
mark(conformity, that)
punct(conformity, ,)
mark(mount, as)
det(percentage, the)
nsubj(conformity, percentage)
case(member, of)
compound(member, church)
nmod(percentage, member)
acl(percentage, mount)
punct(degree, ,)
det(degree, the)
conj(percentage, degree)
case(discipline, of)
nmod(degree, discipline)
acl(degree, exercise)
case(church, by)
det(church, the)
obl(exercise, church)
advcl(exercise, lessen)
cc(trend, and)
det(trend, the)
conj(lessen, trend)
cop(conformity, be)
case(conformity, towards)
ccomp(say, conformity)
case(level, to)
det(level, the)
amod(level, general)
nmod(conformity, level)
punct(be, .)
cc(prove, yet)
nsubj:pass(prove, this)
aux(prove, can)
advmod(prove, not)
aux:pass(prove, be)
root(ROOT, prove)
punct(prove, .)
nsubj(know, we)
root(ROOT, know)
mark(take, that)
case(part, in)
det(part, the)
amod(part, early)
obl(take, part)
case(century, of)
det(century, the)
nmod(part, century)
amod(congregation, many)
amod(congregation, Protestant)
nsubj(take, congregation)
ccomp(know, take)
amod(action, positive)
obj(take, action)
case(member, against)
nmod(action, member)
nsubj(transgress, who)
acl:relcl(member, transgress)
det(code, the)
amod(code, ethical)
obj(transgress, code)
case(which, to)
obl(subscribe, which)
det(majority, the)
nsubj(subscribe, majority)
acl:relcl(code, subscribe)
punct(take, .)
advmod(take, thus)
compound(church, baptist)
nsubj(take, church)
case(frontier, on)
det(frontier, the)
nmod(church, frontier)
ccomp(know, take)
obj(take, cognizance)
case(charge, of)
nmod(cognizance, charge)
case(member, against)
nmod:poss(member, they)
nmod(charge, member)
case(drunkenness, of)
nmod(member, drunkenness)
punct(fighting, ,)
conj(drunkenness, fighting)
punct(gossip, ,)
amod(gossip, malicious)
conj(drunkenness, gossip)
punct(lie, ,)
conj(drunkenness, lie)
punct(cheat, ,)
conj(drunkenness, cheat)
punct(irregularity, ,)
amod(irregularity, sexual)
conj(drunkenness, irregularity)
punct(gambling, ,)
conj(drunkenness, gambling)
punct(racing, ,)
compound(racing, horse)
conj(drunkenness, racing)
punct(failure, ,)
cc(failure, and)
conj(drunkenness, failure)
mark(pay, to)
acl(failure, pay)
advmod(debt, just)
obj(pay, debt)
punct(know, .)
mark(guilty, if)
advcl(exclude, guilty)
punct(exclude, ,)
det(offender, the)
nsubj:pass(exclude, offender)
aux(exclude, might)
aux:pass(exclude, be)
root(ROOT, exclude)
case(membership, from)
obl(exclude, membership)
punct(exclude, .)
mark(burgeon, as)
compound(membership, church)
nsubj(burgeon, membership)
advcl(fad, burgeon)
punct(fad, ,)
amod(measure, such)
nsubj(fad, measure)
root(ROOT, fad)
case(desuetude, into)
obl(fad, desuetude)
punct(fad, .)
cc(know, but)
mark(accompany, whether)
nsubj:pass(accompany, this)
aux:pass(accompany, be)
advcl(know, accompany)
case(lower, by)
det(lower, a)
amod(lower, general)
obl(accompany, lower)
case(life, of)
det(life, the)
amod(life, moral)
nmod(lower, life)
case(membership, of)
det(membership, the)
nmod(life, membership)
nsubj(know, we)
aux(know, do)
advmod(know, not)
root(ROOT, know)
punct(know, .)
nsubj(be, what)
nsubj(attempt, we)
aux(attempt, can)
acl:relcl(what, attempt)
case(hope, with)
det(hope, some)
obl(attempt, hope)
case(conclusion, of)
amod(conclusion, dependable)
nmod(hope, conclusion)
root(ROOT, be)
mark(point, to)
ccomp(be, point)
compound:prt(point, out)
det(manner, the)
obj(point, manner)
case(which, in)
obl(enter, which)
nsubj(enter, Christianity)
acl:relcl(manner, enter)
case(aspect, into)
amod(aspect, particular)
obl(enter, aspect)
case(life, of)
det(life, the)
nmod(aspect, life)
case(nation, of)
det(nation, the)
nmod(life, nation)
punct(be, .)
nsubj(hint, we)
aux(hint, have)
advmod(hint, already)
root(ROOT, hint)
case(fashion, at)
det(fashion, the)
obl(hint, fashion)
case(which, in)
obl(contribute, which)
nsubj(contribute, Christianity)
acl:relcl(fashion, contribute)
case(education, to)
obl(contribute, education)
cc(so, and)
advmod(life, so)
case(life, to)
amod(life, intellectual)
obl(contribute, life)
punct(hint, .)
nsubj(speak, we)
aux(speak, will)
advmod(speak, now)
root(ROOT, speak)
case(way, of)
det(way, the)
obl(speak, way)
case(which, in)
obl(help, which)
nsubj(help, it)
acl:relcl(way, help)
xcomp(help, shape)
det(ideal, the)
obj(shape, ideal)
case(country, of)
det(country, the)
nmod(ideal, country)
cc(manner, and)
case(manner, of)
det(manner, the)
conj(ideal, manner)
case(which, in)
obl(stimulate, which)
nsubj(stimulate, it)
acl:relcl(manner, stimulate)
obj(stimulate, effort)
mark(attain, to)
acl(effort, attain)
det(ideal, those)
obj(attain, ideal)
case(movement, through)
compound(movement, reform)
obl(attain, movement)
punct(programme, ,)
case(programme, through)
obl(attain, programme)
mark(bring, for)
acl(programme, bring)
det(life, the)
amod(life, collective)
obj(bring, life)
case(nation, to)
det(nation, the)
obl(bring, nation)
case(conformity, to)
obl(bring, conformity)
case(standard, to)
amod(standard, christian)
nmod(conformity, standard)
punct(leader, ,)
cc(leader, and)
case(leader, through)
conj(standard, leader)
case(government, in)
det(government, the)
nmod(leader, government)
punct(exert, .)
case(century, throughout)
det(century, the)
amod(century, nineteenth)
obl(exert, century)
nsubj(exert, Christianity)
conj(speak, exert)
nmod:poss(influence, its)
obj(exert, influence)
case(society, on)
amod(society, american)
nmod(influence, society)
case(protestantism, as)
det(whole, a)
amod(protestantism, whole)
advmod(protestantism, primarily)
case(protestantism, through)
det(protestantism, the)
obl(exert, protestantism)
case(stock, of)
det(stock, the)
amod(stock, older)
nmod(protestantism, stock)
punct(speak, .)
case(end, by)
det(end, the)
obl(begin, end)
case(century, of)
det(century, the)
nmod(end, century)
det(Church, the)
compound(Church, Roman)
compound(Church, Catholic)
nsubj(begin, Church)
aux(begin, be)
root(ROOT, begin)
mark(make, to)
xcomp(begin, make)
obj(make, itself)
xcomp(make, feel)
punct(feel, ,)
advmod(institution, mainly)
case(institution, through)
amod(institution, such)
obl(feel, institution)
case(hospital, as)
nmod(institution, hospital)
cc(attitude, but)
advmod(attitude, also)
case(attitude, through)
nmod:poss(attitude, its)
conj(hospital, attitude)
case(labour, towards)
amod(labour, organized)
nmod(attitude, labour)
punct(begin, .)
case(century, in)
det(century, the)
amod(century, twentieth)
obl(grow, century)
nmod:poss(influence, its)
nsubj(grow, influence)
root(ROOT, grow)
punct(grow, ,)
mark(do, as)
advcl(grow, do)
obj(do, that)
case(protestantism, of)
det(protestantism, the)
nmod(that, protestantism)
case(immigration, of)
det(immigration, the)
amod(century, nineteenth)
punct(century, -)
compound(immigration, century)
nmod(protestantism, immigration)
punct(grow, .)
det(dream, the)
amod(dream, american)
nsubj:pass(indebt, dream)
det(ideal, the)
nsubj:pass(indebt, ideal)
case(country, of)
det(country, the)
nmod(ideal, country)
aux:pass(indebt, be)
advmod(indebt, deeply)
root(ROOT, indebt)
case(protestantism, to)
det(protestantism, the)
obl(indebt, protestantism)
case(stock, of)
det(stock, the)
amod(stock, older)
nmod(protestantism, stock)
punct(indebt, . )
advmod(write, thus)
punct(America, ``)
nsubj:pass(write, America)
punct(America, '')
punct(America, ,)
det(sung, the)
advmod(widely, most)
advmod(sung, widely)
appos(America, sung)
case(song, of)
det(song, the)
amod(song, patriotic)
obl(sung, song)
punct(write, ,)
aux:pass(write, be)
root(ROOT, write)
case(clergyman, by)
det(clergyman, a)
compound(England, New)
compound(clergyman, England)
compound(clergyman, baptist)
obl(write, clergyman)
punct(clergyman, ,)
appos(clergyman, Samuel)
flat(Samuel, Francis)
flat(Samuel, Smith)
punct(1808, ()
appos(clergyman, 1808)
case(1895, -)
nmod(1808, 1895)
punct(1808, ))
punct(write, ,)
mark(student, while)
det(student, a)
advcl(write, student)
case(seminary, in)
compound(seminary, andover)
compound(seminary, theological)
nmod(student, seminary)
punct(write, .)
case(zeal, with)
nmod:poss(zeal, its)
obl(breathe, zeal)
case(liberty, for)
nmod(zeal, liberty)
cc(dependence, and)
nmod:poss(dependence, its)
conj(liberty, dependence)
case(God, on)
nmod(dependence, God)
nsubj(breathe, it)
root(ROOT, breathe)
det(spirit, the)
obj(breathe, spirit)
nsubj:pass(nourish, which)
aux(nourish, have)
aux:pass(nourish, be)
acl:relcl(spirit, nourish)
case(revival, on)
det(revival, the)
amod(revival, evangelical)
obl(nourish, revival)
punct(breathe, .)
det(seal, the)
amod(seal, great)
nsubj:pass(inspire, seal)
case(States, of)
det(States, the)
compound(States, United)
nmod(seal, States)
aux:pass(inspire, be)
advmod(inspire, obviously)
root(ROOT, inspire)
case(faith, by)
det(faith, the)
amod(faith, christian)
obl(inspire, faith)
punct(inspire, .)
root(ROOT, here)
cop(here, be)
nsubj(here, what)
aux:pass(call, be)
acl:relcl(what, call)
det(dream, the)
amod(dream, american)
obj(call, dream)
punct(dream, ,)
advmod(effort, namely)
punct(effort, ,)
det(effort, the)
appos(dream, effort)
mark(build, to)
acl(effort, build)
det(structure, a)
obj(build, structure)
nsubj(something, which)
aux(something, would)
cop(something, be)
acl:relcl(structure, something)
amod(something, new)
case(history, in)
obl(new, history)
cc(do, and)
mark(do, to)
conj(something, do)
advmod(do, so)
case(fashion, in)
amod(fashion, such)
obl(do, fashion)
mark(bless, that)
nsubj(bless, God)
aux(bless, could)
acl(fashion, bless)
obj(bless, it)
punct(bless, .)
advmod(find, later)
case(century, in)
det(century, the)
obl(find, century)
det(dream, the)
nsubj(find, dream)
advmod(find, again)
parataxis(here, find)
obj(find, expression)
case(line, in)
det(line, the)
obl(find, line)
case(Katherine, of)
nmod(line, Katherine)
flat(Katherine, Lee)
flat(Katherine, Bates)
punct(1859, ()
appos(Katherine, 1859)
case(1929, -)
nmod(1859, 1929)
punct(1859, ))
punct(daughter, ,)
conj(Katherine, daughter)
cc(granddaughter, and)
conj(daughter, granddaughter)
case(minister, of)
compound(England, New)
compound(minister, England)
compound(minister, congregational)
nmod(daughter, minister)
punct(minister, ,)
case(hymn, in)
nmod:poss(hymn, she)
advmod(sung, widely)
amod(hymn, sung)
nmod(minister, hymn)
punct(hymn, ,)
acl(hymn, write)
case(1893, in)
obl(write, 1893)
punct(find, ,)
punct(find, ``)
root(ROOT, America)
det(beautiful, the)
root(ROOT, beautiful)
punct(beautiful, '')
punct(beautiful, ,)
case(word, with)
det(word, the)
obl(beautiful, word)
punct(beautiful, ``)
case(beautiful, of)
obl(beat, beautiful)
case(foot, for)
compound(foot, pilgrim)
obl(beautiful, foot)
nmod:poss(stress, whose)
compound(stress, stern)
amod(stress, impassion)
nsubj(beat, stress)
det(thoroughfare, a)
appos(stress, thoroughfare)
case(freedom, for)
nmod(thoroughfare, freedom)
root(ROOT, beat)
case(wilderness, across)
det(wilderness, the)
obl(beat, wilderness)
punct(beat, .)
vocative(mend, America)
punct(mend, ,)
vocative(mend, America)
punct(mend, ,)
nsubj(mend, God)
root(ROOT, mend)
obj(mend, thy)
det(flaw, every)
obj(mend, flaw)
punct(confirm, ,)
conj(mend, confirm)
nmod:poss(soul, thy)
obj(confirm, soul)
case(control, in)
compound(control, self)
obl(confirm, control)
punct(control, ,)
det(liberty, the)
appos(control, liberty)
case(law, in)
nmod(liberty, law)
punct(mend, .)
case(beautiful, of)
obl(mend, beautiful)
case(dream, for)
amod(dream, patriot)
obl(beautiful, dream)
nsubj(see, that)
acl:relcl(dream, see)
case(year, beyond)
det(year, the)
obl(see, year)
nmod:poss(city, thine)
compound(city, alabaster)
nsubj(gleam, city)
acl:relcl(year, gleam)
xcomp(gleam, undimmed)
case(tear, by)
amod(tear, human)
obl(undimmed, tear)
punct(mend, .)
root(ROOT, America)
punct(America, ,)
appos(America, America)
punct(America, ,)
nsubj(shed, God)
parataxis(America, shed)
nmod:poss(grace, he)
nsubj:pass(compound, grace)
case(thee, on)
nmod(grace, thee)
punct(crown, ,)
cc(crown, and)
conj(grace, crown)
nmod:poss(good, thy)
obj(crown, good)
case(brotherhood, with)
obl(crown, brotherhood)
case(sea, from)
obl(crown, sea)
mark(shine, to)
advcl(crown, shine)
obj(shine, sea)
punct(shine, '')
punct(compound, .)
det(dream, the)
amod(dream, american)
nsubj:pass(compound, dream)
aux:pass(compound, be)
root(ROOT, compound)
case(strain, of)
amod(strain, many)
obl(compound, strain)
punct(compound, .)
nsubj(origin, some)
cop(origin, be)
advmod(origin, clearly)
case(origin, of)
amod(origin, christian)
root(ROOT, origin)
punct(origin, ,)
case(they, among)
obl(origin, they)
det(awaken, the)
amod(awaken, great)
appos(origin, awaken)
cc(revival, and)
amod(revival, other)
conj(awaken, revival)
nsubj(help, which)
acl:relcl(revival, help)
mark(make, to)
xcomp(help, make)
amod(liberty, christian)
obj(make, liberty)
punct(equality, ,)
compound(equality, Christian)
conj(liberty, equality)
punct(fraternity, ,)
cc(fraternity, and)
compound(fraternity, Christian)
conj(liberty, fraternity)
det(passion, the)
conj(liberty, passion)
case(land, of)
det(land, the)
nmod(passion, land)
punct(origin, .)
nsubj(see, some)
aux(see, have)
root(ROOT, see)
obj(see, revivalism)
cc(search, and)
det(search, the)
conj(revivalism, search)
case(perfection, for)
amod(perfection, christian)
nmod(search, perfection)
case(head, as)
det(head, the)
compound(head, fountain)
punct(head, -)
obl(see, head)
case(hope, of)
det(hope, the)
amod(hope, american)
nmod(head, hope)
punct(see, .)
advmod(place, here)
punct(place, ,)
advmod(place, too)
punct(place, ,)
aux(place, must)
aux:pass(place, be)
root(ROOT, place)
xcomp(place, Unitarianism)
cc(inspiration, and)
punct(place, ,)
advmod(obviously, less)
cc:preconj(inspiration, obviously)
case(inspiration, from)
compound(inspiration, Christian)
obl(place, inspiration)
punct(Emerson, ,)
conj(inspiration, Emerson)
punct(Transcendentalism, ,)
conj(inspiration, Transcendentalism)
punct(idealism, ,)
cc(idealism, and)
det(idealism, the)
conj(inspiration, idealism)
case(walt, of)
nmod(idealism, walt)
flat(walt, Whitman)
punct(place, .)
nsubj(remember, we)
aux(remember, must)
advmod(remember, also)
root(ROOT, remember)
obj(remember, those)
nsubj(react, who)
acl:relcl(those, react)
case(dream, against)
det(dream, the)
obl(react, dream)
case(kind, as)
det(kind, a)
obl(react, kind)
case(myth, of)
nmod(kind, myth)
punct(kind, --)
case(they, among)
nmod(kind, they)
appos(they, Melville)
punct(Hawthorne, ,)
conj(Melville, Hawthorne)
punct(Henry, ,)
cc(Henry, and)
conj(Melville, Henry)
flat(Henry, James)
det(elder, the)
appos(Henry, elder)
punct(kind, ,)
appos(elder, all)
case(they, of)
nmod(all, they)
case(background, out)
case(background, of)
det(background, a)
amod(background, christian)
nmod(all, background)
punct(remember, .)
compound(movement, Reform)
nsubj(surprising, movement)
case(arise, with)
det:predet(arise, such)
det(arise, a)
compound(arise, dream)
nmod(movement, arise)
punct(arise, ,)
case(least, at)
nmod(part, least)
case(part, in)
nmod(arise, part)
punct(arise, ,)
case(heritage, from)
det(heritage, the)
amod(heritage, Protestant)
nmod(arise, heritage)
case(States, of)
det(States, the)
compound(States, United)
nmod(heritage, States)
cc(build, and)
conj(heritage, build)
case(foundation, into)
det(foundation, the)
obl(build, foundation)
case(nation, of)
det(nation, the)
nmod(foundation, nation)
punct(surprising, ,)
expl(surprising, it)
cop(surprising, be)
advmod(surprising, not)
root(ROOT, surprising)
mark(make, that)
amod(effort, many)
nsubj:pass(make, effort)
aux:pass(make, be)
ccomp(surprising, make)
mark(give, to)
xcomp(make, give)
iobj(give, it)
amod(expression, concrete)
obj(give, expression)
punct(surprising, . )
det(number, a)
nsubj(nature, number)
cop(nature, be)
case(nature, in)
det(nature, the)
root(ROOT, nature)
case(movement, of)
nmod(nature, movement)
mark(relieve, to)
acl(movement, relieve)
cc(remove, or)
conj(relieve, remove)
amod(ill, social)
obj(relieve, ill)
punct(nature, .)
advmod(come, significantly)
punct(come, ,)
det(initiation, the)
nsubj(come, initiation)
cc(leadership, and)
conj(initiation, leadership)
case(proportion, of)
det(proportion, a)
amod(proportion, major)
nmod(initiation, proportion)
case(movement, of)
det(movement, the)
compound(movement, reform)
nmod(proportion, movement)
punct(proportion, ,)
advmod(those, especially)
appos(initiation, those)
case(half, in)
det(half, the)
amod(half, first)
nmod(those, half)
case(century, of)
det(century, the)
amod(century, nineteenth)
nmod(half, century)
punct(come, ,)
root(ROOT, come)
case(man, from)
obl(come, man)
cc(woman, and)
conj(man, woman)
case(birth, of)
compound(England, New)
compound(birth, England)
nmod(man, birth)
cc(parentage, or)
conj(birth, parentage)
cc(trinitarian, and)
case(trinitarian, from)
cc:preconj(trinitarian, either)
conj(birth, trinitarian)
cc(Congregationalism, or)
compound(Congregationalism, unitarian)
conj(trinitarian, Congregationalism)
punct(come, .)
nsubj:pass(give, several)
case(movement, of)
det(movement, the)
nmod(several, movement)
aux:pass(give, be)
root(ROOT, give)
det(impetus, a)
amod(impetus, mark)
obj(give, impetus)
case(revivalism, by)
nmod(impetus, revivalism)
punct(quaker, .)
appos(impetus, quaker)
punct(quaker, ,)
appos(quaker, some)
case(England, from)
compound(England, New)
nmod(some, England)
punct(have, ,)
conj(give, have)
det(share, a)
amod(share, larger)
obj(have, share)
mark(warrant, than)
nmod:poss(strength, they)
amod(strength, proportionate)
amod(strength, numerical)
nsubj(warrant, strength)
aux(warrant, would)
aux(warrant, have)
acl(share, warrant)
punct(give, .)
nsubj(do, we)
root(ROOT, do)
advmod(do, well)
mark(remind, to)
advcl(do, remind)
obj(remind, ourselves)
mark(issue, that)
case(man, from)
obl(issue, man)
cc(woman, and)
conj(man, woman)
case(ancestry, of)
compound(England, New)
compound(ancestry, England)
nmod(man, ancestry)
advmod(issue, also)
ccomp(remind, issue)
det(Church, the)
obj(issue, Church)
case(Jesus, of)
nmod(Church, Jesus)
nmod(Church, Christ)
case(Saints, of)
compound(Day, Latter)
compound(Saints, Day)
nmod(Christ, Saints)
punct(Saints, ,)
det(adventist, the)
compound(Day, Seventh)
compound(adventist, Day)
appos(Saints, adventist)
punct(adventist, ,)
compound(Science, Christian)
conj(adventist, Science)
punct(Board, ,)
det(Board, the)
compound(Board, American)
conj(Saints, Board)
case(commissioner, of)
nmod(Board, commissioner)
case(Missions, for)
amod(Missions, foreign)
nmod(Board, Missions)
punct(Society, ,)
det(Society, the)
compound(Society, American)
compound(Missionary, Home)
compound(Society, Missionary)
conj(Missions, Society)
punct(Society, ,)
det(Society, the)
compound(Society, American)
compound(Society, Bible)
conj(Society, Society)
punct(theology, ,)
cc(theology, and)
compound(England, New)
compound(theology, England)
conj(Saints, theology)
punct(do, .)
det(atmosphere, the)
nsubj(one, atmosphere)
cop(one, be)
root(ROOT, one)
case(optimism, of)
nmod(one, optimism)
punct(optimism, ,)
case(confidence, of)
nmod(optimism, confidence)
case(progress, in)
amod(progress, human)
nmod(confidence, progress)
punct(determination, ,)
cc(determination, and)
case(determination, of)
det(determination, a)
conj(one, determination)
mark(rid, to)
acl(determination, rid)
det(world, the)
obj(rid, world)
case(ill, of)
nmod:poss(ill, its)
nmod(world, ill)
punct(one, .)
det(benevolence, the)
compound(benevolence, hopkinsian)
amod(benevolence, universal)
amod(benevolence, disinterested)
nsubj(inspire, benevolence)
punct(inspire, ,)
mark(hold, although)
advcl(inspire, hold)
case(sin, to)
amod(sin, original)
obl(hold, sin)
cc(doctrine, and)
det(doctrine, the)
conj(sin, doctrine)
case(election, of)
nmod(doctrine, election)
punct(inspire, ,)
root(ROOT, inspire)
nmod:poss(adherent, its)
obj(inspire, adherent)
case(endeavour, to)
amod(endeavour, heroic)
obl(inspire, endeavour)
case(other, for)
nmod(endeavour, other)
punct(look, ,)
conj(inspire, look)
case(come, for)
det(come, the)
amod(come, early)
obl(look, come)
case(Millennium, of)
det(Millennium, the)
nmod(come, Millennium)
punct(parallel, ,)
cc(parallel, and)
aux:pass(parallel, be)
conj(look, parallel)
case(confidence, by)
det(confidence, the)
obl(parallel, confidence)
case(ability, in)
nmod:poss(ability, man)
case(man, 's)
nmod(confidence, ability)
acl(ability, cherish)
case(Unitarians, by)
det(Unitarians, the)
obl(cherish, Unitarians)
punct(Emerson, ,)
conj(Unitarians, Emerson)
punct(Transcendentalists, ,)
cc(Transcendentalists, and)
det(Transcendentalists, the)
conj(Unitarians, Transcendentalists)
punct(inspire, .)
nsubj(recall, we)
aux(recall, should)
root(ROOT, recall)
det(number, the)
obj(recall, number)
case(movement, of)
nmod(number, movement)
case(service, for)
det(service, the)
nmod(movement, service)
case(mankind, of)
nmod(service, mankind)
nsubj(arise, which)
acl:relcl(service, arise)
case(Evangelicalism, from)
det(Evangelicalism, the)
amod(Evangelicalism, kindred)
obl(arise, Evangelicalism)
case(Isles, of)
det(Isles, the)
compound(Isles, British)
nmod(Evangelicalism, Isles)
cc(Pietism, and)
det(Pietism, the)
conj(Evangelicalism, Pietism)
case(continent, of)
det(continent, the)
nmod(Pietism, continent)
case(Europe, of)
nmod(continent, Europe)
punct(Pietism, --)
case(they, among)
nmod(reform, they)
amod(reform, prison)
appos(Pietism, reform)
punct(measure, ,)
amod(measure, anti-slavery)
conj(reform, measure)
punct(legislation, ,)
conj(reform, legislation)
case(alleviation, for)
det(alleviation, the)
nmod(reform, alleviation)
case(condition, of)
nmod(alleviation, condition)
case(labour, of)
nmod(condition, labour)
punct(Mission, ,)
det(Mission, the)
compound(Mission, inner)
conj(labour, Mission)
punct(Cross, ,)
cc(Cross, and)
det(Cross, the)
compound(Cross, Red)
conj(labour, Cross)
punct(recall, .)
nsubj(take, we)
aux(take, can)
advmod(take, not)
root(ROOT, take)
det(space, the)
obj(take, space)
mark(record, to)
advcl(take, record)
det:predet(effort, all)
det(effort, the)
obj(record, effort)
case(removal, for)
det(removal, the)
nmod(effort, removal)
cc(alleviation, or)
conj(removal, alleviation)
case(ill, of)
amod(ill, collective)
nmod(removal, ill)
punct(take, . )
det(few, a)
nsubj(serve, few)
case(prominent, of)
det(prominent, the)
advmod(prominent, more)
nmod(few, prominent)
aux(serve, must)
root(ROOT, serve)
case(example, as)
obl(serve, example)
case(what, of)
nmod(example, what)
det(list, a)
amod(list, complete)
nsubj(disclose, list)
cc(description, and)
conj(list, description)
aux(disclose, would)
acl:relcl(what, disclose)
punct(serve, .)
nsubj:pass(bear, several)
aux:pass(bear, be)
root(ROOT, bear)
case(decade, in)
det(decade, the)
amod(decade, early)
obl(bear, decade)
cc(persist, and)
conj(bear, persist)
case(century, throughout)
det(century, the)
obl(persist, century)
punct(bear, .)
nsubj(ephemeral, other)
cop(ephemeral, be)
root(ROOT, ephemeral)
punct(ephemeral, .)
nsubj(disappear, some)
root(ROOT, disappear)
case(attainment, with)
det(attainment, the)
obl(disappear, attainment)
case(purpose, of)
nmod:poss(purpose, they)
nmod(attainment, purpose)
punct(disappear, .)
advmod(spring, still)
nsubj(spring, other)
parataxis(disappear, spring)
compound:prt(spring, up)
advmod(spring, late)
case(century, in)
det(century, the)
obl(spring, century)
mark(meet, to)
advcl(spring, meet)
obj(meet, condition)
nsubj(arise, which)
acl:relcl(condition, arise)
case(stage, from)
amod(stage, fresh)
obl(arise, stage)
case(age, of)
det(age, the)
amod(age, revolutionary)
nmod(stage, age)
punct(disappear, .)
det(movement, the)
amod(movement, anti-slavery)
nsubj(begin, movement)
det(movement, the)
appos(movement, movement)
mark(end, to)
acl(movement, end)
compound(slavery, Negro)
obj(end, slavery)
root(ROOT, begin)
case(1815, before)
obl(begin, 1815)
cc(mount, and)
conj(begin, mount)
case(year, after)
det(year, that)
obl(mount, year)
case(year, until)
punct(mount, ,)
case(result, as)
det(result, a)
obl(mount, result)
case(War, of)
det(War, the)
compound(War, Civil)
nmod(result, War)
punct(achieve, ,)
nsubj:pass(achieve, emancipation)
aux:pass(achieve, be)
acl:relcl(War, achieve)
punct(achieve, .)
advmod(achieve, long)
case(1815, before)
obl(achieve, 1815)
det(conscience, the)
amod(conscience, christian)
nsubj(lead, conscience)
aux(lead, be)
ccomp(achieve, lead)
obj(lead, some)
mark(declare, to)
xcomp(lead, declare)
obj(declare, slavery)
xcomp(declare, wrong)
cc(act, and)
mark(act, to)
conj(declare, act)
advmod(act, accordingly)
punct(act, .)
case(example, for)
obl(declare, example)
punct(declare, ,)
case(1693, in)
obl(declare, 1693)
det(meeting, the)
compound(meeting, Philadelphia)
compound(meeting, yearly)
nsubj(declare, meeting)
case(Friends, of)
nmod(meeting, Friends)
conj(begin, declare)
mark(emancipate, that)
nmod:poss(member, its)
nsubj(emancipate, member)
aux(emancipate, should)
ccomp(declare, emancipate)
nmod:poss(slave, they)
obj(emancipate, slave)
cc(determine, and)
case(1776, in)
obl(determine, 1776)
nsubj(determine, it)
conj(emancipate, determine)
mark(exclude, to)
xcomp(determine, exclude)
case(membership, from)
obl(exclude, membership)
det(membership, all)
nsubj(comply, who)
aux(comply, do)
advmod(comply, not)
acl:relcl(all, comply)
punct(begin, .)
case(year, in)
det(year, the)
amod(year, latter)
obl(ask, year)
nsubj(ask, Samuel)
flat(Samuel, hopkin)
punct(Samuel, ,)
case(whom, from)
obl(take, whom)
det(strain, the)
compound(strain, hopkinsian)
nsubj(take, strain)
case(theology, of)
compound(England, New)
compound(theology, England)
nmod(strain, theology)
acl:relcl(Samuel, take)
nmod:poss(name, its)
obj(take, name)
punct(ask, ,)
root(ROOT, ask)
det(Congress, the)
compound(Congress, Continental)
obj(ask, Congress)
mark(abolish, to)
xcomp(ask, abolish)
obj(abolish, slavery)
punct(ask, .)
mark(see, as)
nsubj(see, we)
aux(see, have)
advcl(take, see)
punct(take, ,)
nsubj(take, Methodism)
advmod(take, early)
root(ROOT, take)
det(stand, a)
obj(take, stand)
case(slavery, against)
obl(take, slavery)
punct(take, .)
csubj(condemned, beginning)
case(least, at)
obl(as, least)
advmod(far, as)
advmod(beginning, far)
advmod(beginning, back)
case(body, as)
nummod(body, 1789)
amod(body, various)
compound(body, baptist)
obl(back, body)
root(ROOT, condemned)
obj(condemned, slavery)
punct(condemned, .)
case(sentiment, after)
nummod(sentiment, 1815)
amod(sentiment, anti-slavery)
nsubj(mount, sentiment)
root(ROOT, mount)
punct(mount, ,)
advmod(Protestants, chiefly)
case(Protestants, among)
obl(mount, Protestants)
cc(those, and)
conj(Protestants, those)
case(background, of)
amod(background, Protestant)
nmod(those, background)
case(stock, of)
det(stock, the)
amod(stock, older)
nmod(background, stock)
punct(mount, .)
det(immigration, the)
amod(century, nineteenth)
punct(century, -)
compound(immigration, century)
nsubj(concerned, immigration)
punct(immigration, ,)
mark(concerned, whether)
nsubj(concerned, Protestant)
cc(Roman, or)
compound(Catholic, Roman)
conj(Protestant, Catholic)
punct(concerned, ,)
cop(concerned, be)
advmod(concerned, not)
advmod(much, so)
advmod(concerned, much)
root(ROOT, concerned)
punct(concerned, ,)
case(few, for)
advmod(few, very)
obl(concerned, few)
mark(hold, if)
nsubj(hold, any)
case(they, among)
nmod(any, they)
advcl(concerned, hold)
obj(hold, slave)
punct(concerned, :)
nsubj(state, they)
cop(state, be)
advmod(state, mostly)
case(state, in)
det(state, the)
amod(state, northern)
ccomp(hold, state)
advmod(disappear, where)
nsubj(disappear, slavery)
aux(disappear, have)
acl:relcl(state, disappear)
cc(way, or)
cop(way, be)
case(way, on)
det(way, the)
conj(disappear, way)
advmod(way, out)
punct(stricken, ,)
cc(stricken, or)
cop(stricken, be)
advmod(stricken, too)
obl:npmod(stricken, poverty)
punct(stricken, -)
conj(disappear, stricken)
case(slave, to)
amod(slave, own)
obl(stricken, slave)
punct(concerned, .)
det(movement, the)
amod(movement, anti-slavery)
nsubj(take, movement)
root(ROOT, take)
amod(form, many)
obj(take, form)
punct(take, .)
nsubj(pioneer, Benjamin)
flat(Benjamin, Lundy)
punct(1789, ()
nmod:npmod(Benjamin, 1789)
case(1839, -)
nmod(1789, 1839)
punct(1789, ))
punct(Quaker, ,)
det(Quaker, a)
appos(Benjamin, Quaker)
punct(pioneer, ,)
cop(pioneer, be)
det(pioneer, a)
root(ROOT, pioneer)
mark(prepare, in)
acl(pioneer, prepare)
det(way, the)
obj(prepare, way)
case(society, for)
amod(society, anti-slavery)
nmod(way, society)
punct(pioneer, .)
expl(be, it)
cop(be, be)
nsubj(be, he)
nsubj(turn, who)
acl:relcl(he, turn)
det(attention, the)
obj(turn, attention)
case(William, of)
nmod(attention, William)
flat(William, Lloyd)
flat(William, Garrison)
punct(1805, ()
appos(William, 1805)
case(1879, -)
nmod(1805, 1879)
punct(1805, ))
case(subject, to)
det(subject, the)
obl(turn, subject)
punct(Garrison, .)
conj(William, Garrison)
punct(Garrison, ,)
appos(Garrison, Massachusetts)
acl(Garrison, bear)
case(parentage, of)
compound(parentage, Nova)
amod(parentage, scotian)
obl(bear, parentage)
punct(temperament, ,)
root(ROOT, be)
case(temperament, by)
obl(be, temperament)
cc(conviction, and)
conj(temperament, conviction)
det(reformer, a)
appos(temperament, reformer)
punct(reformer, .)
advmod(remember, Chiefly)
parataxis(temperament, remember)
case(advocacy, because)
fixed(because, of)
nmod:poss(advocacy, he)
amod(advocacy, incessant)
obl(remember, advocacy)
case(abolition, of)
punct(immediate, ``)
amod(abolition, immediate)
cc(unconditional, and)
conj(immediate, unconditional)
nmod(advocacy, abolition)
punct(abolition, '')
punct(espouse, ,)
nsubj(espouse, he)
advmod(espouse, also)
parataxis(advocacy, espouse)
det(variety, a)
amod(variety, great)
obj(espouse, variety)
case(cause, of)
amod(cause, other)
nmod(variety, cause)
punct(cause, --)
case(they, among)
nmod(rights, they)
nmod:poss(rights, woman)
case(woman, 's)
nmod(cause, rights)
punct(prohibition, ,)
conj(rights, prohibition)
punct(justice, ,)
cc(justice, and)
conj(rights, justice)
case(Indians, to)
det(Indians, the)
nmod(rights, Indians)
punct(espouse, .)
advmod(optimistic, incurably)
root(ROOT, optimistic)
punct(dogmatic, ,)
conj(optimistic, dogmatic)
punct(fearless, ,)
cc(fearless, and)
advmod(fearless, utterly)
conj(optimistic, fearless)
punct(optimistic, ,)
case(youth, in)
nmod:poss(youth, he)
obl(baptist, youth)
det(baptist, a)
amod(baptist, devout)
conj(optimistic, baptist)
punct(optimistic, ,)
case(spite, in)
obl(attack, spite)
case(friendship, of)
nmod:poss(friendship, he)
nmod(spite, friendship)
case(poet, for)
det(poet, the)
compound(poet, Quaker)
nmod(friendship, poet)
appos(poet, John)
flat(John, Greenleaf)
flat(John, Whittier)
punct(1807, ()
appos(John, 1807)
case(1892, -)
nmod(1807, 1892)
punct(1807, ))
nsubj(attack, he)
advmod(attack, eventually)
parataxis(optimistic, attack)
det(church, the)
amod(church, orthodox)
obj(attack, church)
case(what, for)
nmod(church, what)
nsubj(deem, he)
acl:relcl(what, deem)
nmod:poss(compromise, they)
amod(compromise, cowardly)
obj(deem, compromise)
case(issue, on)
det(issue, the)
compound(issue, slavery)
nmod(compromise, issue)
cc(unorthodox, and)
case(manner, in)
nmod:poss(manner, he)
advmod(ardent, invariably)
amod(manner, ardent)
obl(unorthodox, manner)
cop(unorthodox, be)
advmod(unorthodox, emphatically)
conj(attack, unorthodox)
cc(deny, and)
conj(unorthodox, deny)
det(inspiration, the)
amod(inspiration, plenary)
obj(deny, inspiration)
case(Bible, of)
det(Bible, the)
nmod(inspiration, Bible)
punct(optimistic, . )
det(impulse, a)
amod(impulse, mark)
nsubj(come, impulse)
root(ROOT, come)
case(movement, to)
det(movement, the)
amod(movement, anti-slavery)
obl(come, movement)
case(Finney, through)
det(Finney, the)
nmod(movement, Finney)
flat(Finney, revival)
punct(Finney, .)
vocative(come, Finney)
nmod:npmod(Finney, himself)
punct(come, ,)
mark(slavery, while)
case(slavery, oppose)
case(slavery, to)
obl(place, slavery)
punct(place, ,)
conj(come, place)
nmod:poss(emphasis, he)
amod(emphasis, chief)
obj(place, emphasis)
case(evangelism, on)
obl(place, evangelism)
punct(active, ,)
cc(active, but)
case(convert, from)
nmod:poss(convert, he)
obl(active, convert)
acl(convert, issue)
obj(issue, much)
case(leadership, of)
det(leadership, the)
obl(much, leadership)
case(campaign, of)
det(campaign, the)
amod(campaign, anti-slavery)
nmod(leadership, campaign)
punct(Theodore, .)
nsubj(active, Theodore)
flat(Theodore, Dwight)
flat(Theodore, weld)
punct(1803, ()
appos(Theodore, 1803)
case(1895, -)
nmod(1803, 1895)
punct(1803, ))
cop(active, be)
advmod(active, especially)
conj(come, active)
punct(come, .)
nsubj(son, weld)
cop(son, be)
det(son, the)
root(ROOT, son)
cc(grandson, and)
conj(son, grandson)
case(minister, of)
compound(England, New)
compound(minister, England)
compound(minister, congregational)
nmod(son, minister)
punct(son, .)
case(youth, as)
det(youth, a)
obl(become, youth)
nsubj(become, he)
root(ROOT, become)
obj(become, one)
case(band, of)
nmod:poss(band, Finney)
case(Finney, 's)
nmod(one, band)
case(evangelist, of)
nmod(band, evangelist)
cc(give, and)
conj(become, give)
obj(give, himself)
mark(win, to)
advcl(give, win)
amod(man, young)
obj(win, man)
punct(become, . )
det(advocate, a)
amod(advocate, strong)
compound(advocate, temperance)
nsubj(devote, advocate)
punct(devote, ,)
case(influence, through)
det(influence, the)
obl(devote, influence)
case(teacher, of)
det(teacher, a)
amod(teacher, favorite)
nmod(influence, teacher)
punct(teacher, ,)
appos(teacher, Charles)
flat(Charles, Stewart)
punct(Charles, ,)
det(Finney, another)
nsubj(convert, Finney)
acl:relcl(advocate, convert)
punct(devote, ,)
nsubj(devote, he)
root(ROOT, devote)
obj(devote, himself)
case(cause, to)
det(cause, the)
amod(cause, anti-slavery)
obl(devote, cause)
punct(devote, . )
det(group, a)
root(ROOT, group)
case(man, of)
amod(man, young)
nmod(group, man)
acl(man, influence)
case(he, by)
obl(influence, he)
conj(influence, enrol)
case(seminary, in)
compound(seminary, Lane)
compound(seminary, theological)
obl(enrol, seminary)
cc(have, and)
conj(enrol, have)
mark(leave, to)
xcomp(have, leave)
case(position, because)
fixed(because, of)
nmod:poss(position, they)
amod(position, open)
amod(position, anti-slavery)
obl(leave, position)
punct(group, .)
det(majority, the)
nsubj(go, majority)
advmod(go, then)
root(ROOT, go)
case(Oberlin, to)
det(Oberlin, the)
compound(Oberlin, infant)
obl(go, Oberlin)
punct(go, .)
nsubj(employ, they)
cc(other, and)
conj(they, other)
parataxis(go, employ)
obj(employ, some)
case(technique, of)
nmod:poss(technique, Finney)
case(Finney, 's)
nmod(some, technique)
mark(seek, as)
nsubj(seek, they)
advcl(employ, seek)
mark(win, to)
xcomp(seek, win)
obj(win, adherent)
case(cause, to)
det(cause, the)
obl(win, cause)
punct(contribute, .)
nsubj(contribute, weld)
parataxis(go, contribute)
case(conviction, to)
det(conviction, the)
amod(conviction, anti-slavery)
obl(contribute, conviction)
case(man, of)
amod(man, such)
nmod(conviction, man)
case(Joshua, as)
nmod(man, Joshua)
flat(Joshua, R.)
flat(Joshua, gidding)
cc(Edwin, and)
conj(Joshua, Edwin)
flat(Edwin, M.)
flat(Edwin, Stanton)
punct(enlist, ,)
conj(Joshua, enlist)
obj(enlist, John)
flat(John, quincy)
flat(John, Adams)
punct(help, ,)
cc(help, and)
conj(enlist, help)
xcomp(help, provide)
obj(provide, idea)
nsubj(underlay, which)
acl:relcl(idea, underlay)
nmod:poss(Cabin, Harriet)
flat(Harriet, Beecher)
flat(Harriet, Stowe)
case(Harriet, 's)
nmod:poss(Cabin, uncle)
nmod:poss(Cabin, Tom)
case(Harriet, 's)
obj(underlay, Cabin)
punct(go, .)
nsubj(shun, he)
root(ROOT, shun)
obj(shun, publicity)
case(himself, for)
nmod(publicity, himself)
cc(seek, and)
conj(shun, seek)
mark(avoid, to)
xcomp(seek, avoid)
obj(avoid, fame)
punct(Wendell, .)
nsubj:pass(converted, Wendell)
flat(Wendell, Phillips)
punct(1811, ()
appos(Wendell, 1811)
case(1884, -)
nmod(1811, 1884)
punct(1811, ))
punct(Wendell, ,)
case(family, from)
det(family, a)
amod(family, prominent)
compound(family, Massachusetts)
obl(avoid, family)
punct(converted, ,)
case(teens, in)
nmod:poss(teens, he)
obl(converted, teens)
aux:pass(converted, be)
conj(shun, converted)
case(preach, under)
det(preach, the)
obl(converted, preach)
case(Lyman, of)
nmod(preach, Lyman)
flat(Lyman, Beecher)
punct(shun, .)
mark(break, although)
nsubj(break, he)
advmod(break, later)
advcl(remain, break)
case(church, with)
det(church, the)
obl(break, church)
mark(believe, because)
nsubj(believe, he)
advcl(break, believe)
mark(outspoken, that)
nsubj(outspoken, they)
cop(outspoken, be)
advmod(outspoken, insufficiently)
ccomp(believe, outspoken)
case(evil, against)
amod(evil, social)
obl(outspoken, evil)
punct(remain, ,)
nsubj(remain, he)
root(ROOT, remain)
det(Christian, a)
amod(Christian, devout)
xcomp(remain, Christian)
punct(remain, .)
nsubj:pass(remember, he)
aux:pass(remember, be)
root(ROOT, remember)
advmod(remember, chiefly)
case(advocacy, for)
nmod:poss(advocacy, he)
amod(advocacy, fearless)
obl(remember, advocacy)
case(abolition, of)
nmod(advocacy, abolition)
punct(stand, ,)
cc(stand, but)
nsubj(stand, he)
advmod(stand, also)
conj(remember, stand)
case(rights, for)
amod(rights, equal)
obl(stand, rights)
case(woman, for)
nmod(rights, woman)
punct(stand, ,)
case(opportunity, for)
obl(stand, opportunity)
case(freedmen, for)
det(freedmen, the)
nmod(opportunity, freedmen)
punct(prohibition, ,)
cc(prohibition, and)
case(prohibition, for)
conj(freedmen, prohibition)
punct(remember, .)
det(movement, the)
amod(movement, anti-slavery)
nsubj:pass(give, movement)
cc(reform, and)
amod(reform, other)
amod(reform, contemporary)
conj(movement, reform)
cc(philanthropy, and)
conj(reform, philanthropy)
aux:pass(give, be)
root(ROOT, give)
compound(undergird, leadership)
cc(financial, and)
conj(leadership, financial)
obj(give, undergird)
case(Arthur, by)
obl(give, Arthur)
flat(Arthur, Tappan)
punct(1786, ()
appos(Arthur, 1786)
case(1865, -)
nmod(1786, 1865)
punct(1786, ))
cc(brother, and)
nmod:poss(brother, he)
amod(brother, younger)
conj(Arthur, brother)
punct(brother, ,)
appos(brother, Lewis)
flat(Lewis, Tappan)
punct(1788, ()
appos(brother, 1788)
case(1873, -)
nmod(1788, 1873)
punct(1788, ))
punct(give, .)
nsubj:pass(transmute, individual)
acl(individual, possess)
amod(gift, unusual)
obj(possess, gift)
cc(power, and)
amod(power, great)
amod(power, personal)
conj(gift, power)
aux:pass(transmute, be)
root(ROOT, transmute)
case(death, at)
obl(transmute, death)
case(spirit, into)
amod(spirit, awesome)
obl(transmute, spirit)
punct(transmute, ;)
punct(transmute, ;)
nsubj:pass(worship, they)
cop(worship, be)
advmod(immediately, almost)
advmod(worship, immediately)
parataxis(transmute, worship)
case(ability, for)
det(ability, these)
amod(ability, newer)
punct(ability, ,)
advmod(more, even)
advmod(terrible, more)
amod(ability, terrible)
obl(worship, ability)
punct(inherite, .)
nmod:poss(descendant, they)
amod(descendant, direct)
nsubj(inherite, descendant)
conj(worship, inherite)
advmod(only, not)
cc:preconj(fortune, only)
nmod:poss(fortune, they)
amod(fortune, worldly)
obj(inherite, fortune)
punct(mandate, ,)
cc(mandate, but)
advmod(mandate, also)
det(mandate, the)
conj(fortune, mandate)
case(power, of)
nmod:poss(power, they)
amod(power, newfound)
nmod(mandate, power)
case(spirit, as)
nmod(power, spirit)
case(half, in)
det(half, the)
amod(half, other)
nmod(spirit, half)
case(universe, of)
det(universe, the)
nmod(half, universe)
punct(transmute, .)
compound(lineage, Royal)
nsubj:pass(base, lineage)
aux(base, could)
aux:pass(base, be)
root(ROOT, base)
case(achievement, on)
amod(achievement, extraordinary)
amod(achievement, worldly)
obl(base, achievement)
acl(achievement, translate)
case(power, into)
amod(power, eternal)
amod(power, otherworldly)
obl(translate, power)
punct(base, .)
advmod(draw, thus)
punct(draw, ,)
det(emperor, the)
nsubj(draw, emperor)
aux(draw, could)
root(ROOT, draw)
case(source, on)
obl(draw, source)
advmod(available, not)
xcomp(draw, available)
case(those, to)
obl(available, those)
case(ancestor, with)
amod(ancestor, less)
compound(ancestor, puissant)
nmod(those, ancestor)
punct(draw, .)
cc(responsibility, but)
det(eminence, this)
nsubj(responsibility, eminence)
cop(responsibility, be)
advmod(responsibility, not)
case(responsibility, without)
nmod:poss(responsibility, its)
amod(responsibility, weighty)
root(ROOT, responsibility)
punct(responsibility, .)
mark(possess, since)
nsubj(possess, he)
advcl(have, possess)
amod(power, more)
obj(possess, power)
case(universe, in)
det(universe, a)
amod(universe, interdependent)
obl(possess, universe)
case(being, of)
compound(being, living)
nmod(universe, being)
cc(spirit, and)
amod(spirit, dead)
conj(being, spirit)
punct(have, ,)
det(emperor, the)
nsubj(have, emperor)
root(ROOT, have)
mark(use, to)
xcomp(have, use)
obj(use, it)
case(benefit, for)
det(benefit, the)
obl(use, benefit)
case(living, of)
det(living, the)
nmod(benefit, living)
punct(have, .)
det(ritual, the)
compound(ritual, royal)
nsubj(generate, ritual)
root(ROOT, generate)
obj(generate, power)
case(world, into)
det(world, the)
amod(world, other)
obl(generate, world)
punct(generate, :)
nsubj(provide, it)
advmod(provide, also)
parataxis(generate, provide)
det(living, the)
obj(provide, living)
case(way, with)
det(way, a)
obl(provide, way)
mark(control, to)
acl(way, control)
det(spirit, the)
obj(control, spirit)
punct(bring, ,)
cc(bring, and)
conj(provide, bring)
nmod:poss(power, they)
obj(bring, power)
advmod(bring, directly)
mark(bear, to)
advcl(bring, bear)
case(affair, on)
det(affair, the)
amod(affair, everyday)
obl(bear, affair)
case(world, of)
det(world, the)
nmod(affair, world)
punct(generate, .)
amod(observance, Proper)
compound(observance, ritual)
nsubj(capable, observance)
case(level, at)
det(level, any)
nmod(observance, level)
case(society, of)
nmod(level, society)
cop(capable, be)
root(ROOT, capable)
mark(generate, of)
advcl(capable, generate)
obj(generate, power)
case(use, for)
obl(generate, use)
case(world, in)
det(world, the)
compound(world, spirit)
nmod(use, world)
punct(capable, ;)
punct(capable, ;)
cc(hold, but)
advmod(hold, naturally)
punct(hold, ,)
det(ritual, the)
amod(ritual, royal)
nsubj:pass(hold, ritual)
punct(ritual, ,)
nsubj(provide, which)
acl:relcl(ritual, provide)
amod(control, unusual)
obj(provide, control)
case(spirit, over)
advmod(spirit, already)
advmod(powerful, supremely)
amod(spirit, powerful)
amod(spirit, divine)
obl(provide, spirit)
punct(hold, ,)
aux:pass(hold, be)
conj(capable, hold)
xcomp(hold, responsible)
mark(regulate, for)
advcl(responsible, regulate)
det(universe, the)
obj(regulate, universe)
cc(insure, and)
conj(regulate, insure)
det(welfare, the)
obj(insure, welfare)
case(kingdom, of)
det(kingdom, the)
nmod(welfare, kingdom)
punct(capable, .)
nsubj(system, this)
cop(system, be)
det(system, the)
amod(system, familiar)
root(ROOT, system)
case(government, of)
punct(government, ``)
amod(government, cosmic)
nmod(system, government)
punct(government, '')
punct(government, .)
det(emperor, the)
amod(emperor, chinese)
appos(government, emperor)
punct(system, ,)
case(observance, by)
amod(observance, proper)
nmod(system, observance)
case(ritual, of)
nmod(observance, ritual)
punct(observance, ,)
acl(observance, manifest)
amod(power, divine)
obj(manifest, power)
punct(system, .)
nsubj(regulate, he)
root(ROOT, regulate)
det(duality, the)
obj(regulate, duality)
case(light, of)
nmod(duality, light)
cc(darkness, and)
conj(light, darkness)
punct(Yang, ,)
conj(light, Yang)
cc(yin, and)
conj(Yang, yin)
punct(duality, ,)
nsubj:pass(lock, which)
aux:pass(lock, be)
acl:relcl(duality, lock)
case(struggle, in)
amod(struggle, eternal)
obl(lock, struggle)
punct(regulate, .)
mark(sway, by)
advcl(effect, sway)
det(balance, the)
obj(sway, balance)
case(they, between)
nmod(balance, they)
punct(effect, ,)
nsubj(effect, he)
root(ROOT, effect)
det(alternation, the)
obj(effect, alternation)
case(season, of)
det(season, the)
nmod(alternation, season)
punct(effect, .)
nmod:poss(power, he)
nsubj(great, power)
cop(great, be)
advmod(great, so)
root(ROOT, great)
mark(promote, that)
nsubj(promote, he)
advmod(promote, even)
ccomp(great, promote)
cc(demote, and)
conj(promote, demote)
obj(demote, god)
mark(give, accord)
fixed(accord, to)
mark(give, whether)
nsubj(give, they)
aux(give, have)
advcl(promote, give)
obj(give, ear)
cc(deaf, or)
cop(deaf, be)
conj(give, deaf)
case(petition, to)
obl(deaf, petition)
punct(great, .)
case(system, in)
det(system, this)
obl(exempt, system)
punct(exempt, ,)
det(man, no)
nsubj(exempt, man)
cop(exempt, be)
root(ROOT, exempt)
case(obligation, from)
obl(exempt, obligation)
punct(exempt, . )
nsubj(offense, Failure)
case(duty, in)
amod(duty, daily)
amod(duty, moral)
cc(ethical, and)
conj(moral, ethical)
nmod(Failure, duty)
case(family, to)
nmod:poss(family, one)
case(one, 's)
nmod(duty, family)
punct(outrage, ,)
conj(family, outrage)
case(propriety, to)
compound(propriety, community)
nmod(outrage, propriety)
punct(departure, ,)
det(departure, any)
conj(Failure, departure)
case(standard, from)
amod(standard, rigid)
nmod(departure, standard)
case(excellence, of)
amod(excellence, moral)
nmod(standard, excellence)
cop(offense, be)
root(ROOT, offense)
case(dead, against)
det(dead, the)
nmod(offense, dead)
punct(offense, .)
cc(offend, and)
mark(offend, to)
conj(offense, offend)
det(dead, the)
obj(offend, dead)
xcomp(offend, mean)
mark(incur, to)
xcomp(mean, incur)
nmod:poss(wrath, they)
obj(incur, wrath)
punct(provoke, ,)
cc(provoke, and)
advmod(provoke, thus)
conj(incur, provoke)
det(unleashing, the)
obj(provoke, unleashing)
case(disaster, of)
compound(disaster, countrywide)
nmod(unleashing, disaster)
punct(offense, .)
det(home, the)
compound(home, family)
nsubj(temple, home)
cop(temple, be)
punct(temple, ,)
case(fact, in)
obl(temple, fact)
punct(temple, ,)
det(temple, a)
root(ROOT, temple)
punct(temple, ;)
punct(temple, ;)
cc(religious, and)
det(duty, the)
amod(duty, daily)
nsubj(religious, duty)
case(individual, of)
nmod(duty, individual)
cop(religious, be)
advmod(religious, basically)
conj(temple, religious)
case(nature, in)
obl(religious, nature)
punct(temple, .)
det(spirit, the)
amod(spirit, dead)
nsubj(occupy, spirit)
root(ROOT, occupy)
det(place, a)
amod(place, prominent)
obj(occupy, place)
case(hope, in)
det(hope, every)
obl(occupy, hope)
cc(fear, and)
case(fear, in)
det(fear, every)
conj(hope, fear)
punct(occupy, .)
det(belief, the)
amod(belief, common)
nsubj(be, belief)
root(ROOT, be)
mark(exist, that)
expl(exist, there)
ccomp(be, exist)
nummod(order, one)
amod(order, moral)
obj(exist, order)
punct(order, ,)
nsubj(include, which)
acl:relcl(order, include)
obj(include, everything)
punct(be, .)
det(dead, the)
nsubj(control, dead)
root(ROOT, control)
det(prosperity, the)
amod(prosperity, material)
obj(control, prosperity)
case(living, of)
det(living, the)
nmod(prosperity, living)
punct(living, ,)
cc(living, and)
det(living, the)
conj(prosperity, living)
acl(living, adhere)
case(code, to)
amod(code, strict)
obl(adhere, code)
case(conduct, of)
nmod(code, conduct)
mark(weaken, in)
fixed(in, order)
fixed(in, not)
mark(weaken, to)
advcl(adhere, weaken)
det(control, that)
obj(weaken, control)
punct(believe, .)
nsubj(believe, Men)
conj(control, believe)
nsubj(control, they)
aux(control, could)
ccomp(believe, control)
obj(control, nature)
mark(obey, by)
advcl(control, obey)
det(code, a)
amod(code, moral)
obj(obey, code)
punct(believe, .)
mark(flout, if)
det(code, the)
amod(code, moral)
nsubj:pass(flout, code)
aux:pass(flout, be)
advcl(upset, flout)
punct(upset, ,)
det(balance, the)
amod(balance, proper)
nsubj(upset, balance)
case(universe, of)
det(universe, the)
nmod(balance, universe)
aux(upset, would)
cop(upset, be)
root(ROOT, upset)
punct(flood, ,)
cc(flood, and)
det(result, the)
amod(result, disastrous)
nsubj(flood, result)
aux(flood, could)
cop(flood, be)
conj(upset, flood)
punct(plague, ,)
conj(flood, plague)
punct(famine, ,)
cc(famine, or)
conj(flood, famine)
punct(have, .)
amod(westerner, modern)
nsubj(have, westerner)
conj(upset, have)
obj(have, difficulty)
acl(difficulty, comprehending)
det(fusion, this)
obj(comprehending, fusion)
case(moral, of)
nmod(fusion, moral)
cc(material, and)
conj(moral, material)
punct(comprehending, ,)
advmod(be, largely)
mark(be, because)
case(West, in)
det(West, the)
obl(be, West)
det(trend, the)
amod(trend, historical)
nsubj(be, trend)
aux(be, have)
advcl(have, be)
mark(deny, to)
xcomp(be, deny)
det(connection, the)
obj(deny, connection)
punct(have, .)
advcl(find, live)
case(condition, in)
amod(condition, urban)
obl(live, condition)
punct(away, ,)
advmod(live, away)
case(deadweight, from)
det(deadweight, the)
obl(away, deadweight)
case(constraint, of)
compound(constraint, village)
nmod(deadweight, constraint)
cc(constriction, and)
det(constriction, the)
conj(deadweight, constriction)
case(view, of)
det(view, a)
amod(roof, thatch)
punct(roof, -)
compound(view, roof)
compound(view, world)
nmod(constriction, view)
punct(find, ,)
det(individual, the)
nsubj(find, individual)
aux(find, may)
root(ROOT, find)
obj(find, it)
xcomp(find, possible)
punct(say, ,)
conj(find, say)
punct(say, ,)
mark(commit, to)
xcomp(say, commit)
obj(commit, adultery)
advmod(only, not)
cc:preconj(misgiving, only)
case(misgiving, without)
amod(misgiving, personal)
obl(commit, misgiving)
punct(suffer, ,)
cc(suffer, but)
advmod(suffer, also)
mark(suffer, without)
advcl(commit, suffer)
det(effect, any)
amod(effect, adverse)
obj(suffer, effect)
case(fortune, in)
nmod:poss(fortune, he)
amod(fortune, worldly)
nmod(effect, fortune)
punct(find, .)
csubj(provide, base)
obj(base, action)
case(determination, on)
det(determination, the)
amod(determination, empirical)
obl(base, determination)
case(cause, of)
nmod(determination, cause)
cc(effect, and)
conj(cause, effect)
root(ROOT, provide)
det(toughness, a)
obj(provide, toughness)
cc(bravado, and)
conj(toughness, bravado)
mark(impart, that)
det(ancestor, no)
amod(ancestor, powerful)
amod(ancestor, otherworldly)
nsubj(impart, ancestor)
aux(impart, could)
advmod(impart, ever)
acl(toughness, impart)
punct(impart, --)
cc(liberation, plus)
det(liberation, the)
amod(liberation, add)
conj(toughness, liberation)
case(constraint, from)
det(constraint, the)
nmod(liberation, constraint)
case(urn, of)
amod(urn, silent)
compound(urn, burial)
nmod(constraint, urn)
punct(provide, .)
case(China, in)
obl(Taoism, China)
punct(Taoism, ,)
det(excellence, the)
amod(excellence, magical)
compound(par, system)
compound(excellence, par)
nsubj(Taoism, excellence)
cop(Taoism, be)
root(ROOT, Taoism)
punct(Taoism, .)
det(taoist, the)
nsubj(mystic, taoist)
cop(mystic, be)
compound(mystic, quietist)
parataxis(Taoism, mystic)
punct(mystic, ,)
nsubj(see, who)
acl:relcl(mystic, see)
det(unity, a)
amod(unity, unchanging)
obj(see, unity)
punct(unity, --)
det(Tao, the)
appos(unity, Tao)
punct(unity, --)
acl(unity, underlying)
det(phenomena, all)
obj(underlying, phenomena)
punct(Taoism, .)
nsubj(unity, it)
cop(unity, be)
det(unity, this)
amod(unity, timeless)
root(ROOT, unity)
nsubj(important, that)
cop(important, be)
advmod(important, all)
punct(important, -)
acl:relcl(unity, important)
punct(manifestation, ,)
cc(manifestation, and)
cc(manifestation, not)
nmod:poss(manifestation, its)
amod(manifestation, temporary)
conj(important, manifestation)
case(world, in)
det(world, the)
nmod(manifestation, world)
case(reality, of)
nmod(world, reality)
punct(unity, .)
det(taoist, the)
nsubj(believe, taoist)
root(ROOT, believe)
det(unity, the)
nsubj:pass(influence, unity)
aux(influence, could)
aux:pass(influence, be)
ccomp(believe, influence)
case(manipulation, by)
amod(manipulation, proper)
amod(manipulation, magical)
obl(influence, manipulation)
punct(believe, ;)
punct(believe, ;)
case(word, in)
amod(word, other)
obl(organization, word)
punct(organization, ,)
nsubj(organization, they)
cop(organization, be)
advmod(organization, actually)
det(organization, a)
parataxis(believe, organization)
case(magician, of)
nmod(organization, magician)
punct(exception, .)
compound(Buddhism, Mahayana)
nsubj(exception, Buddhism)
cop(exception, be)
det(exception, no)
parataxis(organization, exception)
case(concept, to)
det(concept, these)
amod(concept, prevail)
amod(concept, magical)
nmod(exception, concept)
punct(believe, .)
mark(introduce, after)
det(form, this)
nsubj:pass(introduce, form)
case(Buddhism, of)
compound(Buddhism, Indian)
nmod(form, Buddhism)
aux(introduce, have)
aux:pass(introduce, be)
advcl(underwent, introduce)
case(China, into)
obl(introduce, China)
punct(underwent, ,)
nsubj(underwent, it)
root(ROOT, underwent)
amod(change, extensive)
obj(underwent, change)
punct(change, .)
case(flower, during)
nmod:poss(flower, its)
obl(underwent, flower)
case(sixth, in)
det(sixth, the)
nmod(flower, sixth)
case(century, to)
det(century, the)
amod(century, eighth)
nmod(sixth, century)
punct(offer, ,)
nsubj(offer, Mahayana)
parataxis(underwent, offer)
det(package, a)
amod(package, supernatural)
obj(offer, package)
case(chinese, to)
det(chinese, the)
nmod(package, chinese)
nsubj(bear, which)
acl:relcl(chinese, bear)
det(resemblance, no)
obj(bear, resemblance)
case(morsel, to)
det(morsel, the)
advmod(digest, highly)
amod(morsel, digest)
amod(morsel, philosophical)
compound(morsel, Zen)
nmod(resemblance, morsel)
acl(morsel, offer)
case(reader, to)
det(reader, the)
amod(reader, modern)
amod(reader, western)
obl(offer, reader)
punct(have, .)
nsubj(have, Mahayana)
acl:relcl(morsel, have)
obj(have, god)
punct(magic, ,)
cc(magic, and)
conj(god, magic)
punct(pantheon, ,)
det(pantheon, a)
conj(god, pantheon)
punct(heaven, ,)
conj(pantheon, heaven)
cc(hell, and)
conj(god, hell)
punct(priest, ,)
cc(priest, and)
advmod(apparel, gorgeously)
amod(priest, apparel)
conj(god, priest)
punct(monk, ,)
conj(priest, monk)
punct(nun, ,)
cc(nun, and)
conj(priest, nun)
punct(wield, ,)
nsubj(wield, all)
case(whom, of)
nmod(all, whom)
acl:relcl(priest, wield)
obj(wield, power)
case(soul, over)
obl(wield, soul)
case(world, in)
det(world, the)
amod(world, other)
obl(wield, world)
punct(wield, .)
det(saint, the)
compound(realize, self)
punct(realize, -)
compound(saint, realize)
compound(saint, Mahayana)
nsubj(possess, saint)
root(ROOT, possess)
amod(power, superhuman)
obj(possess, power)
cc(magic, and)
conj(power, magic)
punct(possess, .)
det(Mahayana, the)
nsubj(religion, Mahayana)
nsubj(develop, that)
acl:relcl(Mahayana, develop)
case(north, in)
det(north, the)
obl(develop, north)
cop(religion, be)
det(religion, a)
root(ROOT, religion)
case(idolatry, of)
nmod(religion, idolatry)
cc(magic, and)
amod(magic, coarse)
conj(idolatry, magic)
punct(religion, ,)
nsubj(make, that)
acl:relcl(religion, make)
det(world, the)
obj(make, world)
case(garden, into)
det(garden, a)
amod(garden, huge)
amod(garden, magical)
obl(make, garden)
punct(religion, .)
case(form, in)
nmod:poss(form, its)
amod(form, monastic)
obl(organization, form)
punct(organization, ,)
nsubj(organization, Mahayana)
cop(organization, be)
advmod(organization, merely)
det(organization, a)
root(ROOT, organization)
case(monk, of)
obl:npmod(practice, magic)
punct(practice, -)
amod(monk, practice)
nmod(organization, monk)
punct(bonze, ()
appos(monk, bonze)
punct(bonze, ))
punct(monk, ,)
nsubj(cater, who)
acl:relcl(monk, cater)
case(faith, to)
det(faith, the)
amod(faith, chinese)
obl(cater, faith)
case(supernatural, in)
det(supernatural, the)
nmod(faith, supernatural)
punct(organization, .)
compound(Confucianism, nonmagical)
nsubj(philosophy, Confucianism)
cop(philosophy, be)
det(philosophy, a)
amod(philosophy, secular)
punct(rational, ,)
amod(philosophy, rational)
root(ROOT, philosophy)
punct(escape, ,)
cc(escape, but)
advmod(orientation, even)
case(orientation, with)
det(orientation, this)
amod(orientation, different)
obl(escape, orientation)
nsubj(escape, it)
aux(escape, could)
advmod(escape, not)
conj(philosophy, escape)
case(etho, from)
det(etho, the)
obl(escape, etho)
case(government, of)
det(government, a)
amod(government, cosmic)
nmod(etho, government)
punct(philosophy, .)
nsubj(have, Confucianism)
root(ROOT, have)
nmod:poss(magic, its)
amod(magic, own)
obj(have, magic)
case(idea, in)
det(idea, the)
obl(have, idea)
mark(have, that)
nsubj(have, virtue)
acl(idea, have)
obj(have, power)
punct(have, .)
mark(live, if)
det(man, a)
nsubj(live, man)
advcl(fear, live)
det(life, a)
amod(life, classical)
obj(live, life)
punct(fear, ,)
nsubj(fear, he)
aux(fear, need)
advmod(fear, not)
root(ROOT, fear)
det(spirit, the)
obj(fear, spirit)
punct(fear, --)
case(lack, for)
amod(lack, only)
obl(give, lack)
case(virtue, of)
nmod(lack, virtue)
conj(fear, give)
det(spirit, the)
obj(give, spirit)
obj(give, power)
case(he, over)
obl(give, he)
punct(fear, .)
cc(let, but)
root(ROOT, let)
obj(let, we)
advmod(mistaken, not)
cop(mistaken, be)
xcomp(let, mistaken)
case(virtue, about)
amod(virtue, confucian)
punct(virtue, ``)
obl(mistaken, virtue)
punct(virtue, '')
punct(let, ;)
punct(let, ;)
nsubj(virtue, this)
cop(virtue, be)
advmod(virtue, not)
parataxis(let, virtue)
mark(understand, as)
nsubj(understand, we)
advcl(virtue, understand)
det(word, the)
obj(understand, word)
obl:tmod(understand, today)
punct(mean, ,)
cc(mean, and)
nsubj(mean, it)
aux(mean, do)
advmod(mean, not)
conj(virtue, mean)
det(abandonment, a)
obj(mean, abandonment)
case(belief, of)
det(belief, the)
nmod(abandonment, belief)
case(manipulation, in)
compound(manipulation, magic)
nmod(belief, manipulation)
punct(let, .)
case(confucian, to)
det(confucian, the)
obl(mean, confucian)
punct(mean, ,)
punct(virtue, ``)
nsubj(mean, virtue)
punct(virtue, '')
advmod(mean, simply)
root(ROOT, mean)
obj(mean, mastery)
cc(observance, and)
amod(observance, correct)
conj(mastery, observance)
case(rule, of)
compound(hundred, three)
nummod(rule, hundred)
amod(rule, major)
nmod(mastery, rule)
case(ritual, of)
nmod(rule, ritual)
cc(one, and)
nummod(one, three)
nummod(one, thousand)
amod(one, minor)
conj(ritual, one)
punct(mean, .)
nsubj(synonymous, propriety)
cop(synonymous, be)
root(ROOT, synonymous)
case(observance, with)
compound(observance, ritual)
obl(synonymous, observance)
punct(observance, ,)
det(mark, the)
appos(observance, mark)
case(gentleman, of)
det(gentleman, a)
amod(gentleman, true)
nmod(mark, gentleman)
punct(observance, .)
mark(live, to)
advcl(synonymous, live)
advmod(live, correctly)
case(universe, in)
det(universe, a)
amod(universe, interdependent)
amod(universe, moral)
cc(material, and)
conj(moral, material)
obl(live, universe)
case(living, of)
nmod(universe, living)
cc(dead, and)
conj(living, dead)
cop(decisive, be)
conj(live, decisive)
case(fate, for)
nmod:poss(fate, man)
case(man, 's)
obl(decisive, fate)
punct(synonymous, .)
nsubj(background, this)
punct(background, ,)
case(brief, in)
obl(background, brief)
punct(background, ,)
cop(background, be)
det(background, the)
amod(background, historical)
root(ROOT, background)
case(which, out)
case(which, of)
obl(emerge, which)
nsubj(emerge, Zen)
acl:relcl(background, emerge)
punct(background, .)
nsubj(record, Promoters)
case(Zen, of)
nmod(Promoters, Zen)
case(West, to)
det(West, the)
nmod(Zen, West)
root(ROOT, record)
nmod:poss(ancestry, its)
obj(record, ancestry)
punct(recognize, ,)
cc(recognize, and)
conj(record, recognize)
mark(grow, that)
nsubj(grow, Zen)
ccomp(recognize, grow)
case(combination, out)
case(combination, of)
det(combination, a)
obl(grow, combination)
case(Taoism, of)
nmod(combination, Taoism)
cc(Buddhism, and)
amod(Buddhism, indian)
compound(Buddhism, Mahayana)
conj(Taoism, Buddhism)
punct(record, .)
cc(possess, but)
det(person, the)
punct(person, ``)
amod(person, marvelous)
nsubj(possess, person)
punct(person, '')
nsubj(suppose, that)
aux(suppose, be)
acl:relcl(person, suppose)
mark(result, to)
xcomp(suppose, result)
case(exhibit, from)
compound(exhibit, Zen)
obl(result, exhibit)
advmod(practicality, more)
amod(practicality, chinese)
obj(result, practicality)
case(speculation, than)
amod(speculation, indian)
nmod(practicality, speculation)
punct(possess, --)
nsubj(possess, he)
root(ROOT, possess)
amod(power, magical)
obj(possess, power)
punct(use, ,)
cc(use, and)
aux(use, can)
conj(possess, use)
obj(use, they)
mark(order, to)
xcomp(use, order)
obj(order, nature)
cc(redeem, and)
mark(redeem, to)
conj(order, redeem)
obj(redeem, soul)
punct(possess, .)
nsubj(emphasize, proponent)
case(Zen, of)
nmod(proponent, Zen)
case(West, to)
det(West, the)
nmod(Zen, West)
root(ROOT, emphasize)
advmod(emphasize, disproportionately)
det(amount, the)
obj(emphasize, amount)
case(Buddhism, of)
compound(Buddhism, Mahayana)
nmod(amount, Buddhism)
case(Zen, in)
nmod(amount, Zen)
punct(emphasize, ,)
advmod(dignify, probably)
mark(dignify, in)
fixed(in, order)
mark(dignify, to)
advcl(emphasize, dignify)
det(idea, the)
advmod(magical, indisputably)
amod(idea, magical)
compound(idea, Taoist)
obj(dignify, idea)
case(metaphysic, with)
advmod(respectable, more)
amod(metaphysic, respectable)
compound(metaphysic, Buddhist)
nmod(idea, metaphysic)
punct(emphasize, .)
cc(be, but)
case(mind, in)
det(mind, the)
amod(mind, chinese)
obl(be, mind)
punct(be, ,)
expl(be, there)
root(ROOT, be)
amod(difference, little)
nsubj(be, difference)
case(two, between)
det(two, the)
nmod(difference, two)
punct(be, --)
det(bonze, the)
nsubj(metaphysical, bonze)
cop(metaphysical, be)
advmod(more, no)
advmod(metaphysical, more)
parataxis(be, metaphysical)
mark(have, than)
det(magician, a)
nsubj(have, magician)
advcl(metaphysical, have)
mark(be, to)
xcomp(have, be)
punct(metaphysical, .)
advmod(owe, actually)
punct(owe, ,)
nsubj(owe, Zen)
parataxis(be, owe)
obj(owe, more)
case(quietism, to)
amod(quietism, chinese)
obl(more, quietism)
mark(do, than)
nsubj(do, it)
advcl(owe, do)
case(Buddhism, to)
compound(Buddhism, Mahayana)
obl(do, Buddhism)
punct(owe, .)
det(sect, the)
compound(sect, ch'an)
punct(Zen, ()
compound(sect, Zen)
punct(Zen, ))
nsubj(derive, sect)
aux(derive, may)
aux(derive, have)
root(ROOT, derive)
nmod:poss(metaphysic, its)
obj(derive, metaphysic)
case(Mahayana, from)
obl(derive, Mahayana)
punct(Taoist, ,)
cc(Taoist, but)
nmod:poss(psychology, its)
nsubj(Taoist, psychology)
cop(Taoist, be)
amod(Taoist, pure)
amod(Taoist, early)
conj(derive, Taoist)
punct(derive, .)
nsubj:pass(evidence, this)
aux:pass(evidence, be)
advmod(evidence, well)
parataxis(derive, evidence)
case(doctrine, by)
det(doctrine, the)
compound(doctrine, quietist)
obl(evidence, doctrine)
acl(doctrine, carry)
advmod(carry, over)
case(Zen, in)
obl(carry, Zen)
punct(idea, :)
det(idea, the)
appos(doctrine, idea)
case(turn, of)
det(turn, the)
amod(turn, inward)
nmod(idea, turn)
case(think, of)
nmod(turn, think)
punct(enjoinder, ,)
det(enjoinder, the)
conj(turn, enjoinder)
mark(put, to)
acl(enjoinder, put)
compound:prt(put, aside)
obj(put, desire)
cc(perturbation, and)
conj(desire, perturbation)
mark(effect, so)
fixed(so, that)
det(return, a)
nsubj:pass(effect, return)
case(purity, to)
nmod(return, purity)
punct(peace, ,)
conj(purity, peace)
punct(stillness, ,)
cc(stillness, and)
conj(purity, stillness)
punct(union, --)
det(union, a)
appos(purity, union)
case(infinite, with)
det(infinite, the)
nmod(union, infinite)
punct(union, ,)
case(Tao, with)
det(Tao, the)
nmod(infinite, Tao)
punct(effect, --)
aux(effect, could)
aux:pass(effect, be)
advcl(put, effect)
punct(derive, .)
case(fact, in)
obl(feature, fact)
punct(feature, ,)
det(antipathy, the)
nsubj(feature, antipathy)
case(ceremony, to)
amod(ceremony, outward)
nmod(antipathy, ceremony)
acl(ceremony, hail)
case(exponent, by)
amod(exponent, modern)
obl(hail, exponent)
case(characteristic, as)
advmod(characteristic, so)
advmod(characteristic, uniquely)
obl(hail, characteristic)
case(thinking, of)
det(thinking, the)
punct(thinking, ``)
amod(thinking, direct)
obl(characteristic, thinking)
punct(thinking, '')
flat(thinking, Zennist)
cop(feature, be)
det(feature, a)
root(ROOT, feature)
case(Taoism, of)
nmod(feature, Taoism)
punct(feature, .)
advmod(insistence, so)
punct(insistence, ,)
advmod(insistence, too)
punct(insistence, ,)
cop(insistence, be)
det(insistence, the)
nsubj(maintain, insistence)
case(relativity, on)
det(relativity, the)
nmod(insistence, relativity)
case(world, of)
det(world, the)
amod(world, external)
nmod(relativity, world)
punct(idea, ,)
cc(idea, and)
det(idea, the)
conj(insistence, idea)
mark(substitute, that)
nsubj(substitute, language)
cc(thing, and)
conj(language, thing)
acl(language, perceive)
case(consciousness, by)
obl(perceive, consciousness)
cop(substitute, be)
amod(substitute, poor)
acl(idea, substitute)
advmod(perception, indeed)
case(perception, for)
amod(perception, immediate)
nmod(substitute, perception)
case(spirit, by)
nmod(perception, pure)
punct(spirit, ,)
amod(spirit, indwelling)
nmod(perception, spirit)
punct(opposition, :)
det(opposition, the)
appos(spirit, opposition)
case(consciousness, of)
amod(consciousness, pure)
nmod(opposition, consciousness)
case(consciousness, to)
compound(consciousness, ratiocinate)
nmod(consciousness, consciousness)
punct(maintain, .)
nsubj(maintain, Zen)
root(ROOT, maintain)
mark(surface, that)
amod(thing, cognitive)
nsubj(surface, thing)
cop(surface, be)
advmod(surface, only)
det(surface, the)
ccomp(maintain, surface)
case(experience, of)
nmod(surface, experience)
punct(maintain, .)
nsubj(irreverence, one)
case(feature, of)
nmod:poss(feature, its)
nmod(one, feature)
amod(feature, attractive)
case(West, to)
det(West, the)
obl(attractive, West)
cop(irreverence, be)
nmod:poss(irreverence, its)
root(ROOT, irreverence)
case(tradition, for)
nmod(irreverence, tradition)
cc(dogma, and)
conj(tradition, dogma)
cc(text, and)
case(text, for)
amod(text, sacred)
conj(tradition, text)
punct(irreverence, .)
nummod(patriarch, one)
nsubj(suppose, patriarch)
aux(suppose, be)
root(ROOT, suppose)
mark(relegate, to)
aux(relegate, have)
xcomp(suppose, relegate)
amod(scripture, sacred)
obj(relegate, scripture)
case(use, for)
obl(relegate, use)
case(outhouse, in)
det(outhouse, a)
obl(relegate, outhouse)
punct(suppose, .)
cc(spirit, but)
nsubj(spirit, this)
cop(spirit, be)
advmod(spirit, not)
det(spirit, the)
root(ROOT, spirit)
case(freedom, of)
obl:npmod(reliant, self)
punct(reliant, -)
amod(freedom, reliant)
nmod(spirit, freedom)
case(action, of)
nmod(freedom, action)
case(which, for)
obl(mistake, which)
det(Westerner, the)
nsubj(mistake, Westerner)
acl:relcl(freedom, mistake)
obj(mistake, it)
punct(spirit, .)
nsubj(be, it)
root(ROOT, be)
advmod(be, simply)
mark(tradition, that)
case(tradition, in)
compound(tradition, Taoist)
obl(be, tradition)
punct(tradition, --)
case(mysticism, as)
case(mysticism, in)
det(mysticism, all)
amod(mysticism, good)
nmod(tradition, mysticism)
punct(mysticism, --)
appos(mysticism, book)
punct(word, ,)
conj(book, word)
punct(manifestation, ,)
cc(manifestation, or)
det(manifestation, any)
amod(manifestation, other)
conj(book, manifestation)
nsubj(belong, that)
acl:relcl(manifestation, belong)
case(state, to)
det(state, the)
amod(state, normal)
obl(belong, state)
case(consciousness, of)
nmod(state, consciousness)
aux:pass(consider, be)
advcl(belong, consider)
advmod(surface, only)
det(surface, the)
obj(consider, surface)
case(experience, of)
nmod(surface, experience)
punct(be, .)
det(truth, the)
nsubj(transmittable, truth)
punct(truth, --)
det(Truth, the)
compound(Truth, eternal)
appos(truth, Truth)
punct(truth, --)
cop(transmittable, be)
advmod(transmittable, not)
root(ROOT, transmittable)
case(word, by)
obl(transmittable, word)
punct(transmittable, .)
nsubj:pass(consider, reality)
aux:pass(consider, be)
root(ROOT, consider)
advmod(only, not)
advmod(irrelevant, only)
xcomp(consider, irrelevant)
case(acquisition, to)
det(acquisition, the)
obl(irrelevant, acquisition)
case(knowledge, of)
amod(knowledge, higher)
nmod(acquisition, knowledge)
punct(handicap, ,)
cc(handicap, but)
det(handicap, a)
amod(handicap, positive)
conj(acquisition, handicap)
punct(consider, .)
det(technique, the)
nsubj(originate, technique)
case(confusion, of)
compound(confusion, reality)
nmod(technique, confusion)
punct(technique, --)
det(use, the)
appos(technique, use)
case(paradox, of)
nmod(use, paradox)
cc(riddle, and)
conj(paradox, riddle)
mark(shake, to)
acl(use, shake)
det(mind, the)
nmod:poss(grip, mind)
case(mind, 's)
obj(shake, grip)
case(reality, on)
nmod(grip, reality)
punct(originate, --)
root(ROOT, originate)
case(quietism, with)
amod(century, fourth)
cc(third, and)
conj(fourth, third)
compound(quietism, century)
compound(quietism, B.C.)
compound(quietism, Chinese)
obl(originate, quietism)
punct(originate, :)
det(koan, the)
nsubj(device, koan)
cop(device, be)
advmod(device, not)
advmod(device, basically)
det(device, a)
amod(device, new)
parataxis(originate, device)
punct(originate, .)
expl(important, it)
cop(important, be)
root(ROOT, important)
case(understanding, for)
det(understanding, a)
obl(important, understanding)
case(Zen, of)
nmod(understanding, Zen)
mark(realize, to)
acl(understanding, realize)
mark(doctrine, that)
det(preoccupation, the)
amod(preoccupation, esoteric)
nsubj(doctrine, preoccupation)
case(few, of)
det(few, the)
amod(few, select)
nmod(preoccupation, few)
aux(doctrine, can)
advmod(doctrine, not)
cop(doctrine, be)
det(doctrine, the)
ccomp(realize, doctrine)
case(man, of)
det(man, the)
amod(man, common)
nmod(doctrine, man)
punct(important, .)
case(atmosphere, in)
det(atmosphere, the)
amod(atmosphere, supernatural)
obl(concerned, atmosphere)
case(government, of)
amod(government, cosmic)
nmod(atmosphere, government)
punct(concerned, ,)
advmod(elite, only)
det(elite, the)
compound(elite, ruling)
nsubj(concerned, elite)
cop(concerned, be)
advmod(concerned, ever)
root(ROOT, concerned)
case(ordering, with)
det(ordering, a)
obl:npmod(wide, kingdom)
punct(wide, -)
amod(ordering, wide)
obl(concerned, ordering)
case(nature, of)
nmod(ordering, nature)
punct(ordering, :)
amod(religion, popular)
appos(ordering, religion)
acl(religion, aim)
case(benefit, at)
amod(benefit, more)
amod(benefit, personal)
obl(aim, benefit)
case(power, from)
amod(power, magical)
nmod(benefit, power)
punct(concerned, .)
cc(natural, and)
nsubj(natural, this)
cop(natural, be)
advmod(natural, only)
root(ROOT, natural)
punct(natural, --)
parataxis(natural, witness)
det(haste, the)
obj(witness, haste)
case(which, with)
obl(gobble, which)
amod(man, modern)
nsubj(gobble, man)
acl:relcl(haste, gobble)
det(latest, the)
obj(gobble, latest)
punct(wonder, ``)
xcomp(gobble, wonder)
obj(wonder, drug)
punct(wonder, '')
punct(natural, .)
amod(anchoritism, early)
amod(anchoritism, chinese)
nsubj:pass(aim, anchoritism)
aux:pass(aim, be)
advmod(aim, theoretically)
root(ROOT, aim)
case(union, at)
det(union, a)
amod(union, mystic)
compound(union, pantheist)
obl(aim, union)
case(salvation, with)
det(salvation, the)
amod(salvation, divine)
punct(salvation, ,)
amod(salvation, personal)
nmod(union, salvation)
aux:pass(achieve, be)
acl(salvation, achieve)
mark(united, when)
det(united, the)
amod(recluse, mystical)
compound(united, recluse)
obl(achieve, united)
case(essence, with)
amod(essence, divine)
nmod(united, essence)
punct(aim, .)
cc(lose, but)
det(doctrine, this)
amod(doctrine, esoteric)
nsubj:pass(lose, doctrine)
aux:pass(lose, be)
root(ROOT, lose)
case(shuffle, in)
det(shuffle, the)
obl(lose, shuffle)
mark(acquire, to)
advcl(lose, acquire)
amod(power, special)
obj(acquire, power)
punct(lose, .)
det(anchorite, the)
nsubj(strove, anchorite)
root(ROOT, strove)
punct(strove, ,)
case(fact, in)
obl(influence, fact)
punct(influence, ,)
mark(influence, to)
advmod(influence, magically)
xcomp(strove, influence)
det(world, the)
obj(influence, world)
case(spirit, of)
nmod(world, spirit)
case(way, in)
det(way, the)
amod(way, same)
obl(influence, way)
mark(manifest, that)
det(emperor, the)
amod(emperor, divine)
nsubj(manifest, emperor)
acl:relcl(way, manifest)
nmod:poss(power, he)
obj(manifest, power)
punct(manifest, .)
advmod(distilled, thus)
punct(distilled, ,)
det(metaphysic, the)
compound(metaphysic, Mahayana)
nsubj:pass(distilled, metaphysic)
case(union, of)
amod(union, mystical)
nmod(metaphysic, union)
case(salvation, for)
nmod(metaphysic, salvation)
aux:pass(distilled, be)
conj(strove, distilled)
compound:prt(distilled, down)
case(seek, to)
det(seek, a)
amod(seek, bare)
compound(seek, self)
punct(seek, -)
obl(distilled, seek)
punct(remain, ,)
cc(remain, and)
case(reason, for)
det(reason, this)
obl(remain, reason)
punct(remain, ,)
det(mystic, the)
nsubj(remain, mystic)
case(Asia, in)
nmod(mystic, Asia)
aux(remain, do)
advmod(remain, not)
advmod(remain, long)
conj(distilled, remain)
case(contemplation, in)
amod(contemplation, isolate)
obl(remain, contemplation)
punct(strove, .)
mark(reveal, as)
det(literature, the)
compound(literature, Zen)
nsubj(reveal, literature)
advcl(call, reveal)
punct(call, ,)
advmod(soon, as)
advmod(call, soon)
mark(attain, as)
det(master, a)
amod(master, early)
compound(master, Zen)
nsubj(attain, master)
advcl(soon, attain)
obj(attain, fame)
case(seclusion, in)
obl(attain, seclusion)
punct(call, ,)
nsubj:pass(call, he)
aux:pass(call, be)
root(ROOT, call)
compound:prt(call, out)
case(world, into)
det(world, the)
obl(call, world)
mark(exercise, to)
advcl(call, exercise)
nmod:poss(power, he)
obj(exercise, power)
punct(call, .)
det(master, the)
amod(master, early)
compound(master, anchorite)
nsubj(attract, master)
root(ROOT, attract)
obj(attract, disciple)
case(ability, because)
fixed(because, of)
nmod:poss(ability, they)
amod(ability, presume)
obl(attract, ability)
mark(perform, to)
acl(ability, perform)
obj(perform, miracle)
punct(attract, .)
nsubj(insist, exponent)
case(Zen, of)
nmod(exponent, Zen)
advmod(insist, often)
root(ROOT, insist)
mark(oppose, that)
advmod(early, very)
amod(doctrine, early)
compound(doctrine, Zen)
nsubj(oppose, doctrine)
ccomp(insist, oppose)
det(supernaturalism, the)
amod(supernaturalism, rampant)
obj(oppose, supernaturalism)
case(China, of)
nmod(supernaturalism, China)
punct(propose, ,)
cc(propose, and)
conj(oppose, propose)
case(view, instead)
det(view, a)
advmod(mature, more)
amod(view, mature)
punct(view, ,)
advmod(credulous, less)
amod(view, credulous)
obl(propose, view)
case(universe, of)
det(universe, the)
nmod(view, universe)
punct(insist, .)
case(support, in)
obl(cite, support)
case(this, of)
nmod(support, this)
punct(cite, ,)
nsubj:pass(cite, story)
case(literature, from)
det(literature, the)
amod(literature, early)
nmod(story, literature)
aux:pass(cite, be)
root(ROOT, cite)
mark(show, to)
xcomp(cite, show)
mark(attack, that)
nsubj(attack, Zen)
ccomp(show, attack)
det(idea, the)
obj(attack, idea)
case(power, of)
amod(power, supernatural)
nmod(idea, power)
punct(cite, .)
cc(reveal, but)
advmod(reveal, actually)
det(account, these)
nsubj(reveal, account)
root(ROOT, reveal)
det(power, the)
amod(power, supernatural)
obj(reveal, power)
obj(suppose, that)
det(master, the)
nsubj(suppose, master)
aux(suppose, be)
case(fact, in)
obl(suppose, fact)
acl:relcl(power, suppose)
mark(possess, to)
xcomp(suppose, possess)
punct(degree, ,)
cc(degree, as)
fixed(as, well)
fixed(as, as)
det(degree, the)
amod(degree, extreme)
conj(power, degree)
case(credulity, of)
amod(credulity, popular)
nmod(degree, credulity)
punct(reveal, :)
punct(reveal, ``)
nsubj(meet, Hwang)
flat(Hwang, pah)
punct(Baku, ()
case(Baku, of)
nmod(Hwang, Baku)
punct(Baku, ))
punct(Hwang, ,)
nummod(day, one)
appos(Hwang, day)
acl(day, go)
case(Mount, up)
obl(go, Mount)
flat(Mount, Tien)
flat(Mount, Tai)
nsubj:pass(believe, which)
aux:pass(believe, be)
acl:relcl(day, believe)
mark(inhabit, to)
aux(inhabit, have)
aux:pass(inhabit, be)
xcomp(believe, inhabit)
case(Arhats, by)
obl(inhabit, Arhats)
case(power, with)
amod(power, supernatural)
obl(inhabit, power)
punct(meet, ,)
root(ROOT, meet)
case(monk, with)
det(monk, a)
obl(meet, monk)
nmod:poss(eye, whose)
nsubj(emit, eye)
acl:relcl(monk, emit)
amod(light, strange)
obj(emit, light)
punct(meet, .)
nsubj(go, they)
root(ROOT, go)
case(pass, along)
det(pass, the)
obl(go, pass)
advcl(go, talk)
case(other, with)
det(other, each)
obl(talk, other)
case(while, for)
det(while, a)
amod(while, short)
obl(talk, while)
mark(come, until)
nsubj(come, they)
advcl(go, come)
case(river, to)
det(river, a)
obl(come, river)
acl(river, roar)
case(torrent, with)
obl(roar, torrent)
punct(go, .)
expl(bridge, there)
cop(bridge, be)
det(bridge, no)
root(ROOT, bridge)
punct(bridge, ,)
det(master, the)
nsubj(have, master)
parataxis(bridge, have)
mark(stop, to)
xcomp(have, stop)
case(shore, at)
det(shore, the)
obl(stop, shore)
punct(bridge, ;)
punct(bridge, ;)
cc(cross, but)
nmod:poss(companion, he)
nsubj(cross, companion)
conj(bridge, cross)
det(river, the)
obj(cross, river)
xcomp(cross, walk)
case(water, on)
det(water, the)
obl(walk, water)
cc(beckone, and)
conj(cross, beckone)
case(Hwang, to)
obl(beckone, Hwang)
flat(Hwang, pah)
mark(follow, to)
advcl(beckone, follow)
obj(follow, he)
punct(say, .)
nsubj(say, thereupon)
flat(thereupon, Hwang)
flat(thereupon, pah)
parataxis(bridge, say)
punct(say, :)
punct(say, ``)
mark(know, if)
nsubj(know, I)
advcl(double, know)
nsubj(art, thou)
ccomp(know, art)
det(Arhat, a)
obj(art, Arhat)
punct(double, ,)
nsubj(double, I)
aux(double, would)
aux(double, have)
root(ROOT, double)
obj(double, you)
compound:prt(double, up)
mark(get, before)
nsubj(get, thou)
advcl(double, get)
advmod(there, over)
advmod(get, there)
punct(double, '')
punct(double, !)
punct(double, !)
det(monk, the)
nsubj(understand, monk)
advmod(understand, then)
root(ROOT, understand)
det(attainment, the)
amod(attainment, spiritual)
obj(understand, attainment)
case(Hwang, of)
nmod(attainment, Hwang)
flat(Hwang, pah)
punct(praise, ,)
cc(praise, and)
conj(understand, praise)
obj(praise, he)
case(. , as)
det(. , a)
amod(. , true)
compound(. , Mahayanist)
obl(praise, . )
punct(1, ()
nummod(show, 1)
punct(1, ))
punct(1, '')
det(tale, a)
amod(tale, second)
nsubj(show, tale)
parataxis(understand, show)
advmod(show, still)
advmod(clearly, more)
advmod(kind, clearly)
det(kind, the)
obj(show, kind)
case(power, of)
nmod(kind, power)
det(monk, a)
advmod(spiritual, truly)
amod(monk, spiritual)
nsubj(possess, monk)
aux(possess, could)
acl:relcl(kind, possess)
punct(understand, :)
punct(understand, ``)
case(occasion, on)
nummod(occasion, one)
obl(see, occasion)
nsubj(see, Yang)
flat(Yang, Shan)
punct(zan, ()
compound(zan, Kyo)
punct(zan, -)
appos(Yang, zan)
punct(zan, ))
root(ROOT, see)
det(monk, a)
compound(monk, stranger)
obj(see, monk)
acl(monk, fly)
case(air, through)
det(air, the)
obl(fly, air)
punct(see, .)
mark(come, when)
det(monk, that)
nsubj(come, monk)
advcl(ask, come)
advmod(come, down)
cc(approach, and)
conj(come, approach)
obj(approach, he)
case(salutation, with)
det(salutation, a)
amod(salutation, respectful)
obl(approach, salutation)
punct(ask, ,)
nsubj(ask, he)
parataxis(see, ask)
punct(see, :)
punct(see, ``)
root(ROOT, where)
nsubj(where, art)
nsubj(where, thou)
case(thou, from)
punct(where, '')
punct(where, ?)
punct(where, ?)
punct(where, ``)
advmod(morning, early)
det(morning, this)
obl:tmod(reply, morning)
punct(morning, '')
punct(reply, ,)
root(ROOT, reply)
det(other, the)
obj(reply, other)
punct(reply, ,)
punct(reply, ``)
nsubj(set, I)
root(ROOT, set)
compound:prt(set, out)
case(India, from)
obl(set, India)
punct(set, '')
punct(set, .)
punct(set, ``)
advmod(say, why)
punct(say, '')
punct(say, ,)
root(ROOT, say)
det(teacher, the)
nsubj(say, teacher)
punct(teacher, ,)
punct(thou, ``)
appos(teacher, art)
appos(teacher, thou)
advmod(late, so)
advmod(say, late)
punct(say, '')
punct(say, ?)
punct(say, ?)
punct(say, ``)
nsubj(stop, I)
root(ROOT, stop)
punct(stop, '')
punct(respond, ,)
parataxis(stop, respond)
det(man, the)
obj(respond, man)
punct(stop, ,)
punct(stop, ``)
amod(time, several)
obl:tmod(respond, time)
mark(look, to)
advcl(respond, look)
case(scenery, at)
amod(scenery, beautiful)
obl(look, scenery)
punct(stop, '')
punct(stop, .)
punct(stop, ``)
nsubj(have, thou)
aux(have, mayst)
root(ROOT, have)
amod(power, supernatural)
obj(have, power)
punct(have, '')
punct(exclaim, ,)
conj(have, exclaim)
obj(exclaim, Yang)
flat(Yang, Shan)
punct(give, ,)
punct(give, ``)
cc(give, yet)
nsubj(give, thou)
aux(give, must)
conj(have, give)
compound:prt(give, back)
det(Spirit, the)
obj(give, Spirit)
case(Buddha, of)
nmod(Spirit, Buddha)
case(I, to)
obl(give, I)
punct(give, '')
punct(give, .)
advmod(praise, then)
det(monk, the)
nsubj(praise, monk)
parataxis(have, praise)
obj(praise, Yang)
flat(Yang, Shan)
advcl(praise, say)
punct(praise, :)
punct(praise, ``)
nsubj(come, I)
aux(come, have)
root(ROOT, come)
advmod(come, over)
case(China, to)
obl(come, China)
mark(worship, in)
fixed(in, order)
mark(worship, to)
advcl(come, worship)
obj(worship, Manjucri)
punct(meet, ,)
cc(meet, and)
conj(come, meet)
advmod(meet, unexpectedly)
case(Minor, with)
obl(meet, Minor)
flat(Minor, Shakya)
punct(Minor, '')
punct(go, ,)
cc(go, and)
mark(give, after)
advcl(go, give)
det(master, the)
iobj(give, master)
det(leave, some)
compound(leave, palm)
obj(give, leave)
nsubj(bring, he)
acl:relcl(leave, bring)
case(India, from)
obl(bring, India)
punct(go, ,)
conj(come, go)
advmod(go, back)
case(. , through)
det(. , the)
compound(. , air)
obl(go, . )
punct(2, ()
nummod(go, 2)
punct(2, ))
punct(come, '')
case(mind, in)
det(mind, the)
amod(mind, popular)
amod(mind, chinese)
obl(be, mind)
punct(be, ,)
nsubj(be, ch'an)
punct(Zen, ()
appos(ch'an, Zen)
punct(Zen, ))
root(ROOT, be)
det(exception, no)
nsubj(be, exception)
case(idea, to)
det(idea, the)
nmod(exception, idea)
case(magic, of)
amod(magic, coarse)
nmod(idea, magic)
nsubj(dominate, that)
acl:relcl(magic, dominate)
punct(be, . )
det(look, a)
amod(look, closer)
nsubj(reveal, look)
case(Zen, at)
amod(Zen, modern)
nmod(look, Zen)
root(ROOT, reveal)
amod(carryover, many)
amod(carryover, magical)
obj(reveal, carryover)
nsubj(part, that)
cop(part, be)
advmod(part, still)
acl:relcl(carryover, part)
case(attitude, of)
amod(attitude, popular)
compound(attitude, Zen)
nmod(part, attitude)
punct(part, .)
case(monk, to)
det(monk, the)
compound(monk, Zen)
obl(reveal, monk)
det(universe, the)
nsubj:pass(populate, universe)
aux:pass(populate, be)
advmod(populate, still)
acl:relcl(monk, populate)
case(being, with)
punct(being, ``)
amod(being, spiritual)
obl(populate, being)
punct(being, '')
nsubj(have, who)
acl:relcl(being, have)
mark(appease, to)
aux:pass(appease, be)
xcomp(have, appease)
punct(reveal, .)
nsubj(consist, Part)
case(ritual, of)
det(ritual, the)
compound(ritual, mealtime)
nmod(Part, ritual)
case(Zendo, in)
det(Zendo, the)
nmod(ritual, Zendo)
root(ROOT, consist)
case(offering, in)
obl(consist, offering)
case(rice, of)
nmod(offering, rice)
case(being, to)
det(being, the)
amod(being, spiritual)
nmod(rice, being)
punct(being, '')
punct(consist, .)
amod(presentation, modern)
compound(presentation, Zen)
nsubj(insist, presentation)
case(West, to)
det(West, the)
nmod(presentation, West)
parataxis(consist, insist)
case(nature, on)
det(nature, the)
amod(nature, anti-authoritarian)
punct(nature, ,)
advmod(pragmatic, highly)
amod(nature, pragmatic)
obl(insist, nature)
case(belief, of)
det(belief, the)
compound(belief, Zen)
nmod(nature, belief)
punct(burn, --)
nsubj:pass(burn, scripture)
aux:pass(burn, be)
acl:relcl(belief, burn)
mark(make, to)
advcl(burn, make)
obj(make, fire)
punct(base, ,)
nsubj:pass(base, action)
aux:pass(base, be)
conj(burn, base)
case(confidence, on)
amod(confidence, direct)
compound(confidence, self)
punct(confidence, -)
obl(base, confidence)
punct(difficult, ,)
cc(difficult, and)
advmod(difficult, so)
case(confidence, on)
punct(difficult, .)
det(picture, this)
nsubj(difficult, picture)
case(individuation, of)
amod(individuation, extreme)
compound(reliant, self)
punct(reliant, -)
amod(individuation, reliant)
nmod(picture, individuation)
cop(difficult, be)
conj(on, difficult)
mark(reconcile, to)
xcomp(difficult, reconcile)
case(formula, with)
amod(formula, such)
compound(formula, Zendo)
obl(reconcile, formula)
nmod(formula, as)
punct(consist, :)
punct(consist, ``)
case(you, of)
obl(offer, you)
punct(demon, ,)
conj(you, demon)
cc(being, and)
amod(being, other)
amod(being, spiritual)
conj(demon, being)
punct(offer, ,)
nsubj(offer, I)
advmod(offer, now)
root(ROOT, offer)
obj(offer, this)
case(you, to)
obl(offer, you)
punct(fill, ,)
cc(fill, and)
aux(fill, may)
det(food, this)
nsubj(fill, food)
conj(offer, fill)
compound:prt(fill, up)
det(quarter, the)
nummod(quarter, ten)
obj(fill, quarter)
case(world, of)
det(world, the)
nmod(quarter, world)
cc(feed, and)
det:predet(demon, all)
det(demon, the)
nsubj:pass(feed, demon)
cc(being, and)
amod(being, other)
amod(being, spiritual)
conj(demon, being)
aux:pass(feed, be)
conj(fill, feed)
case(. , therewith)
obl(feed, . )
punct(3, ()
nummod(Leo, 3)
punct(3, ))
nsubj:pass(feed, Pope)
flat(Pope, Leo)
nummod(Leo, 13)
punct(Leo, ,)
case(day, on)
det(day, the)
amod(day, 13th)
obl(grant, day)
case(December, of)
nmod(day, December)
nummod(December, 1898)
punct(grant, ,)
conj(feed, grant)
det(indulgence, the)
amod(indulgence, follow)
obj(grant, indulgence)
punct(offer, :)
punct(offer, ``)
det(indulgence, a)
nsubj:pass(grant, indulgence)
case(day, of)
nummod(day, three)
nummod(day, hundred)
nmod(indulgence, day)
aux:pass(grant, be)
root(ROOT, grant)
case(faithful, to)
det:predet(faithful, all)
det(faithful, the)
obl(grant, faithful)
nsubj(read, who)
acl:relcl(faithful, read)
det(Gospels, the)
compound(Gospels, Holy)
obj(read, Gospels)
case(least, at)
nmod(quarter, least)
det(quarter, a)
obl:tmod(read, quarter)
case(hour, of)
det(hour, a)
nmod(quarter, hour)
punct(grant, . )
det(Indulgence, a)
compound(Indulgence, plenary)
nsubj:pass(grant, Indulgence)
case(condition, under)
det(condition, the)
amod(condition, usual)
nmod(Indulgence, condition)
aux:pass(grant, be)
root(ROOT, grant)
advmod(grant, once)
det(month, a)
obl:tmod(grant, month)
case(reading, for)
det(reading, the)
amod(reading, daily)
obl(grant, reading)
punct(reading, '')
punct(grant, .)
nsubj:pass(grant, Pope)
flat(Pope, pius)
det(Sixth, the)
appos(Pope, Sixth)
punct(Pope, ,)
case(Rome, at)
obl(grant, Rome)
punct(grant, ,)
case(April, in)
obl(write, April)
punct(April, ,)
nummod(April, 1778)
punct(write, ,)
advcl(grant, write)
obj(write, the)
obj(write, follow)
punct(write, :)
punct(write, ``)
det(faithful, the)
nsubj(excited, faithful)
aux(excited, should)
cop(excited, be)
root(ROOT, excited)
case(reading, to)
det(reading, the)
obl(excited, reading)
case(scripture, of)
det(scripture, the)
amod(scripture, holy)
nmod(reading, scripture)
punct(excited, :)
case(these, for)
nsubj(source, these)
cop(source, be)
det(source, the)
advmod(abundant, most)
amod(source, abundant)
root(ROOT, source)
nsubj:pass(leave, which)
aux(leave, ought)
mark(leave, to)
aux:pass(leave, be)
acl:relcl(source, leave)
xcomp(leave, open)
case(everyone, to)
obl(open, everyone)
punct(draw, ,)
mark(draw, to)
advcl(leave, draw)
case(they, from)
obl(draw, they)
obj(draw, purity)
case(moral, of)
nmod(purity, moral)
cc(doctrine, and)
case(doctrine, of)
conj(moral, doctrine)
punct(eradicate, ,)
mark(eradicate, to)
advcl(draw, eradicate)
obj(eradicate, error)
nsubj:pass(disseminate, which)
aux:pass(disseminate, be)
advmod(widely, so)
advmod(disseminate, widely)
acl:relcl(error, disseminate)
case(time, in)
det(time, these)
amod(time, corrupt)
obl(disseminate, time)
punct(disseminate, '')
punct(bishop, .)
det(bishop, the)
amod(bishop, american)
nsubj(urge, bishop)
acl(bishop, assemble)
case(Council, at)
det(Council, the)
compound(Council, third)
compound(Council, plenary)
obl(assemble, Council)
case(Baltimore, of)
nmod(Council, Baltimore)
parataxis(source, urge)
det(people, the)
amod(people, Catholic)
obj(urge, people)
mark(read, to)
acl(people, read)
det(Bible, the)
compound(Bible, Holy)
obj(read, Bible)
punct(urge, .)
punct(urge, ``)
nsubj(hope, we)
root(ROOT, hope)
punct(hope, '')
punct(hope, ,)
nsubj(say, they)
ccomp(hope, say)
punct(say, ,)
punct(say, ``)
mark(find, that)
det(family, no)
nsubj:pass(find, family)
aux(find, can)
aux:pass(find, be)
ccomp(say, find)
case(we, amongst)
obl(find, we)
case(version, without)
det(version, a)
amod(version, correct)
obl(find, version)
case(scripture, of)
det(scripture, the)
compound(scripture, Holy)
nmod(version, scripture)
punct(scripture, '')
punct(recommend, .)
nsubj(recommend, they)
parataxis(hope, recommend)
punct(recommend, ,)
advmod(recommend, also)
punct(recommend, ,)
mark(let, that)
punct(let, ``)
case(hour, at)
det(hour, a)
amod(hour, fix)
obl(let, hour)
punct(let, ,)
ccomp(recommend, let)
det(family, the)
amod(family, entire)
obj(let, family)
aux:pass(assemble, be)
xcomp(let, assemble)
case(prayer, for)
compound(prayer, night)
obl(assemble, prayer)
punct(prayer, ,)
acl(prayer, follow)
case(reading, by)
det(reading, a)
amod(reading, short)
obl(follow, reading)
case(scripture, of)
det(scripture, the)
compound(scripture, Holy)
nmod(reading, scripture)
punct(reading, '')
punct(follow, .)
mark(express, since)
det(Church, the)
compound(Church, Catholic)
nsubj(express, Church)
advcl(let, express)
amod(desire, such)
obj(express, desire)
mark(read, that)
det(scripture, the)
compound(scripture, Sacred)
nsubj:pass(read, scripture)
aux:pass(read, be)
acl(desire, read)
punct(prove, ,)
det(follow, the)
nsubj(take, follow)
advcl(read, take)
case(Bible, from)
det(Bible, the)
compound(Bible, Holy)
obl(take, Bible)
punct(Edition, ()
compound(Edition, New)
compound(Edition, Catholic)
appos(Bible, Edition)
punct(Edition, ))
aux(prove, will)
acl(desire, prove)
det(means, a)
obj(prove, means)
case(grace, of)
nmod(means, grace)
cc(source, and)
det(source, a)
conj(grace, source)
case(bless, of)
amod(bless, great)
amod(bless, spiritual)
nmod(source, bless)
punct(hope, .)
det(need, the)
nsubj(wonder, need)
case(birth, of)
det(birth, the)
amod(birth, new)
nmod(need, birth)
aux(wonder, do)
advmod(wonder, not)
root(ROOT, wonder)
mark(say, that)
nsubj(say, I)
ccomp(wonder, say)
case(thee, to)
obl(say, thee)
punct(wonder, ,)
punct(wonder, ``)
nsubj:pass(bear, you)
aux(bear, must)
aux:pass(bear, be)
root(ROOT, bear)
advmod(bear, again)
punct(bear, '')
punct(bear, .)
appos(bear, St.)
flat(St., John)
nummod(St., 3)
punct(St., :)
nummod(necessary, 7)
punct(7, .)
det(birth, the)
amod(birth, new)
nsubj(necessary, birth)
cop(necessary, be)
parataxis(bear, necessary)
mark(holy, because)
nsubj(holy, god)
cop(holy, be)
advcl(necessary, holy)
punct(bear, .)
cc(holy, but)
case(one, as)
det(one, the)
obl(holy, one)
nsubj(call, who)
acl:relcl(one, call)
obj(call, you)
cop(holy, be)
xcomp(call, holy)
punct(holy, ,)
cop(holy, be)
nsubj(holy, you)
advmod(holy, also)
root(ROOT, holy)
case(behavior, in)
det:predet(behavior, all)
nmod:poss(behavior, you)
obl(holy, behavior)
punct(holy, ;)
punct(holy, ;)
mark(write, for)
nsubj:pass(write, it)
aux:pass(write, be)
advcl(holy, write)
punct(holy, ,)
nsubj(holy, you)
aux(holy, shall)
cop(holy, be)
conj(holy, holy)
punct(holy, ,)
mark(holy, because)
nsubj(holy, I)
cop(holy, be)
amod(. , holy)
advcl(holy, . )
nummod(. , 1)
punct(. , ,)
appos(. , St.)
flat(St., Peter)
nummod(St., 15)
punct(St., ,)
amod(St., 16)
punct(. , .)
appos(. , holiness)
case(which, without)
obl(see, which)
det(man, no)
nsubj(see, man)
aux(see, will)
acl:relcl(holiness, see)
obj(see, God)
punct(see, .)
obj(see, Hebrews)
nummod(Hebrews, 14)
punct(Hebrews, .)
det(birth, the)
amod(birth, new)
nsubj(necessary, birth)
cop(necessary, be)
parataxis(see, necessary)
mark(sin, because)
nsubj(sin, all)
aux(sin, have)
advcl(necessary, sin)
punct(holy, .)
mark(write, as)
nsubj:pass(write, it)
aux:pass(write, be)
advcl(be, write)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(be, not)
nummod(man, one)
advmod(man, just)
nsubj(be, man)
punct(be, ;)
punct(be, ;)
expl(be, there)
parataxis(be, be)
nsubj(be, none)
nsubj(understand, who)
acl:relcl(none, understand)
punct(be, ;)
punct(be, ;)
expl(be, there)
parataxis(be, be)
nsubj(be, none)
nsubj(seek, who)
acl:relcl(none, seek)
case(God, after)
obl(seek, God)
punct(be, .)
nsubj(go, all)
aux(go, have)
root(ROOT, go)
advmod(go, astray)
advmod(go, together)
punct(go, ;)
punct(go, ;)
nsubj(sin, all)
aux(sin, have)
root(ROOT, sin)
cc(have, and)
conj(sin, have)
obj(have, need)
case(glory, of)
det(glory, the)
nmod(need, glory)
case(God, of)
nmod(glory, God)
punct(Romans, .)
parataxis(sin, Romans)
nummod(Romans, 3)
punct(Romans, :)
nummod(Romans, 10-12)
punct(10-12, ,)
nummod(10-12, 23)
punct(sin, .)
det(birth, the)
amod(birth, new)
nsubj(necessary, birth)
cop(necessary, be)
root(ROOT, necessary)
mark(dead, because)
det(man, the)
amod(man, natural)
nsubj(dead, man)
cop(dead, be)
advmod(dead, spiritually)
advcl(necessary, dead)
cc(blind, and)
conj(dead, blind)
punct(necessary, .)
advmod(sin, therefore)
case(sin, as)
case(sin, through)
nummod(sin, one)
compound(sin, man)
root(ROOT, sin)
acl(sin, enter)
case(world, into)
det(world, the)
obl(enter, world)
cc(death, and)
case(death, through)
compound(death, sin)
conj(world, death)
punct(pass, ,)
cc(pass, and)
advmod(pass, thus)
nsubj(pass, death)
aux(pass, have)
conj(sin, pass)
case(man, unto)
det(man, all)
obl(pass, man)
mark(sin, because)
nsubj(sin, all)
aux(sin, have)
advcl(pass, sin)
punct(pass, .)
compound(12, Romans)
nummod(you, 12)
punct(12, .)
root(ROOT, you)
advmod(you, also)
punct(you, ,)
mark(dead, when)
nsubj(dead, you)
cop(dead, be)
advcl(you, dead)
case(reason, by)
obl(dead, reason)
case(offense, of)
nmod:poss(offense, you)
nmod(reason, offense)
cc(sin, and)
conj(offense, sin)
punct(you, .)
root(ROOT, Ephesians)
nummod(Ephesians, 2)
punct(Ephesians, :)
nummod(veil, 1)
punct(1, .)
cc(veil, and)
mark(veil, if)
nmod:poss(gospel, we)
nsubj(veil, gospel)
advmod(veil, also)
cop(veil, be)
advcl(veil, veil)
punct(veil, ,)
nsubj(veil, it)
cop(veil, be)
parataxis(Ephesians, veil)
advmod(those, only)
case(those, to)
obl(veil, those)
nsubj(perish, who)
aux(perish, be)
acl:relcl(those, perish)
punct(Ephesians, .)
case(case, in)
nmod:poss(case, they)
obl(blinded, case)
punct(blinded, ,)
det(god, the)
nsubj(blinded, god)
case(world, of)
det(world, this)
nmod(god, world)
punct(Satan, ()
appos(world, Satan)
punct(Satan, ))
aux(blinded, have)
root(ROOT, blinded)
nmod:poss(mind, they)
amod(mind, unbelieving)
obj(blinded, mind)
punct(blinded, ,)
mark(see, that)
nsubj(see, they)
aux(see, should)
advmod(see, not)
ccomp(blinded, see)
det(light, the)
obj(see, light)
case(gospel, of)
det(gospel, the)
nmod(light, gospel)
case(glory, of)
det(glory, the)
nmod(gospel, glory)
case(Christ, of)
nmod(glory, Christ)
punct(glory, ,)
nsubj(image, who)
cop(image, be)
det(image, the)
acl:relcl(glory, image)
case(God, of)
nmod(image, God)
punct(blinded, . )
nummod(Corinthians, 2)
punct(Corinthians, ,)
root(ROOT, Corinthians)
nummod(Corinthians, 4)
punct(Corinthians, :)
nummod(Corinthians, 3)
punct(4, ,)
nummod(be, 4)
punct(4, .)
case(workmanship, for)
nmod:poss(workmanship, he)
obl(be, workmanship)
nsubj(be, we)
parataxis(Corinthians, be)
punct(be, ,)
advcl(be, create)
case(Jesus, in)
compound(Jesus, Christ)
obl(create, Jesus)
punct(Corinthians, .)
nsubj:pass(effect, Ephesians)
nummod(effect, 10)
punct(10, .)
det(birth, the)
amod(birth, new)
nsubj:pass(effect, birth)
aux:pass(effect, be)
root(ROOT, effect)
case(word, through)
det(word, the)
obl(effect, word)
case(God, of)
nmod(word, God)
punct(effect, .)
mark(reborn, for)
nsubj(reborn, you)
aux(reborn, have)
cop(reborn, be)
advcl(effect, reborn)
punct(seed, ,)
advmod(seed, not)
case(seed, from)
amod(seed, corruptible)
conj(reborn, seed)
cc(word, but)
case(incorruptible, from)
conj(seed, incorruptible)
punct(word, ,)
case(word, through)
det(word, the)
conj(reborn, word)
case(God, of)
nmod(word, God)
punct(effect, . )
nummod(begotten, 1)
nsubj(begotten, St.)
flat(St., Peter)
nummod(St., 23)
punct(St., .)
case(own, of)
nmod:poss(own, he)
obl(begotten, own)
aux(begotten, will)
nsubj(begotten, he)
aux(begotten, have)
root(ROOT, begotten)
obj(begotten, we)
case(word, by)
det(word, the)
obl(begotten, word)
case(truth, of)
nmod(word, truth)
punct(begotten, .)
nsubj(say, St.)
flat(St., James)
nummod(St., 18)
punct(St., .)
discourse(say, amen)
punct(say, ,)
discourse(say, amen)
punct(say, ,)
nsubj(say, I)
root(ROOT, say)
case(thee, to)
obl(say, thee)
punct(say, ,)
mark(bear, unless)
det(man, a)
nsubj:pass(bear, man)
aux:pass(bear, be)
advcl(say, bear)
advmod(bear, again)
case(water, of)
obl(bear, water)
punct(symbol, ()
parataxis(bear, symbol)
case(Word, of)
det(Word, the)
nmod(symbol, Word)
case(God, of)
nmod(Word, God)
punct(see, ,)
parataxis(symbol, see)
obj(see, Ephesians)
nummod(Ephesians, 26)
punct(see, ))
cc(Spirit, and)
det(Spirit, the)
conj(Ephesians, Spirit)
punct(enter, ,)
nsubj(enter, he)
aux(enter, can)
advmod(enter, not)
ccomp(say, enter)
case(kingdom, into)
det(kingdom, the)
obl(enter, kingdom)
case(God, of)
nmod(kingdom, God)
punct(enter, .)
nsubj(flesh, that)
nsubj:pass(bear, which)
aux:pass(bear, be)
acl:relcl(that, bear)
case(flesh, of)
det(flesh, the)
obl(bear, flesh)
cop(flesh, be)
root(ROOT, flesh)
punct(flesh, ;)
punct(flesh, ;)
cc(spirit, and)
mark(bear, that)
nsubj:pass(bear, which)
aux:pass(bear, be)
advcl(spirit, bear)
case(Spirit, of)
det(Spirit, the)
obl(bear, Spirit)
cop(spirit, be)
conj(flesh, spirit)
punct(flesh, .)
root(ROOT, St.)
flat(St., John)
nummod(St., 3)
punct(St., :)
appos(St., 5)
punct(St., ,)
compound(5, 6)
punct(St., .)
parataxis(St., evidence)
case(birth, of)
det(birth, the)
amod(birth, new)
nmod(evidence, birth)
mark(bear, if)
nsubj:pass(bear, we)
aux:pass(bear, be)
advcl(have, bear)
case(god, of)
obl(bear, god)
nsubj(have, we)
parataxis(St., have)
obj(have, faith)
case(Christ, in)
nmod(faith, Christ)
case(saviour, as)
det(saviour, the)
amod(saviour, only)
obl(have, saviour)
punct(St., .)
nsubj:pass(bear, everyone)
nsubj(believe, who)
acl:relcl(everyone, believe)
mark(bear, that)
nsubj(Christ, Jesus)
cop(Christ, be)
det(Christ, the)
ccomp(believe, Christ)
aux:pass(bear, be)
root(ROOT, bear)
case(God, of)
obl(bear, God)
punct(bear, . )
nummod(St., 1)
root(ROOT, St.)
flat(St., John)
nummod(John, 5)
punct(St., :)
nummod(bear, 1)
punct(1, .)
advmod(many, as)
nsubj:pass(bear, many)
mark(receive, as)
advcl(many, receive)
obj(receive, he)
aux:pass(bear, be)
parataxis(St., bear)
case(God, of)
obl(bear, God)
punct(St., .)
nsubj:pass(bear, St.)
flat(St., John)
nummod(St., 12)
punct(St., ,)
nummod(St., 13)
punct(St., .)
mark(bear, if)
nsubj:pass(bear, we)
aux:pass(bear, be)
advcl(practice, bear)
case(God, of)
obl(bear, God)
nsubj(practice, we)
aux(practice, do)
advmod(practice, not)
parataxis(St., practice)
obj(practice, sin)
case(habit, as)
det(habit, a)
obl(practice, habit)
punct(St., . )
nsubj:pass(bear, whoever)
aux:pass(bear, be)
csubj(commit, bear)
case(God, of)
obl(bear, God)
aux(commit, do)
advmod(commit, not)
root(ROOT, commit)
obj(commit, sin)
punct(be, ()
nsubj(be, that)
parataxis(commit, be)
punct(be, ,)
nsubj(practice, he)
aux(practice, do)
advmod(practice, not)
ccomp(be, practice)
obj(practice, sin)
punct(commit, .)
root(ROOT, cf.)
nummod(St., 1)
flat(cf., St.)
flat(cf., John)
nummod(John, 2)
punct(cf., :)
nummod(. , 1)
punct(1, ))
list(cf., . )
nummod(. , 1)
appos(. , St.)
flat(St., John)
nummod(John, 3)
punct(cf., :)
nummod(know, 9)
punct(know, .)
nsubj(know, we)
parataxis(cf., know)
mark(commit, that)
det(one, no)
nsubj(commit, one)
nsubj:pass(bear, who)
aux:pass(bear, be)
acl:relcl(one, bear)
case(God, of)
obl(bear, God)
ccomp(know, commit)
obj(commit, sin)
punct(know, . )
nummod(St., 1)
nsubj(divine, St.)
flat(St., John)
amod(John, 18)
flat(St., . )
punct(nature, ()
det(nature, the)
amod(nature, new)
appos(St., nature)
punct(nature, ,)
acl(nature, receive)
case(time, at)
det(time, the)
obl(receive, time)
case(regeneration, of)
nmod(time, regeneration)
punct(divine, ,)
cop(divine, be)
root(ROOT, divine)
cc(holy, and)
conj(divine, holy)
punct(practice, ,)
cc(practice, and)
mark(live, as)
det(believer, the)
nsubj(live, believer)
advcl(practice, live)
case(power, under)
det(power, the)
obl(live, power)
case(nature, of)
det(nature, this)
amod(nature, new)
nmod(power, nature)
nsubj(practice, he)
aux(practice, do)
advmod(practice, not)
conj(divine, practice)
obj(practice, sin)
punct(divine, .)
punct(divine, ))
mark(bear, if)
nsubj:pass(bear, we)
aux:pass(bear, be)
advcl(practice, bear)
case(god, of)
obl(bear, god)
nsubj(practice, we)
root(ROOT, practice)
obj(practice, righteousness)
punct(practice, .)
mark(know, if)
nsubj(know, you)
advcl(know, know)
mark(righteous, that)
nsubj(righteous, he)
punct(God, ()
appos(he, God)
punct(God, ))
cop(righteous, be)
advmod(righteous, just)
punct(righteous, ()
ccomp(know, righteous)
punct(righteous, ))
punct(know, ,)
root(ROOT, know)
mark(bear, that)
nsubj:pass(bear, everyone)
advmod(what, also)
nsubj(what, who)
aux(what, do)
acl:relcl(everyone, what)
cop(righteous, be)
advmod(righteous, just)
punct(righteous, ()
amod(what, righteous)
punct(righteous, ))
aux(bear, have)
aux:pass(bear, be)
ccomp(know, bear)
case(he, of)
obl(bear, he)
punct(know, . )
nummod(love, 1)
nsubj(love, St.)
flat(St., John)
nummod(John, 29)
punct(St., .)
mark(bear, if)
nsubj:pass(bear, we)
aux:pass(bear, be)
advcl(love, bear)
case(God, of)
obl(bear, God)
nsubj(love, we)
root(ROOT, love)
obj(love, God)
punct(love, .)
nsubj(love, everyone)
nsubj(love, who)
acl:relcl(everyone, love)
aux:pass(bear, be)
acl:relcl(everyone, bear)
case(God, of)
obl(bear, God)
punct(know, ,)
cc(know, and)
conj(bear, know)
obj(know, God)
punct(love, . )
nummod(St., 1)
root(ROOT, St.)
flat(St., John)
nummod(John, 4)
punct(St., :)
nummod(love, 7)
punct(7, .)
mark(bear, if)
nsubj:pass(bear, we)
aux:pass(bear, be)
advcl(love, bear)
case(God, of)
obl(bear, God)
nsubj(love, we)
parataxis(St., love)
det(brethren, the)
obj(love, brethren)
punct(love, .)
nsubj(know, we)
root(ROOT, know)
mark(pass, that)
nsubj(pass, we)
aux(pass, have)
ccomp(know, pass)
case(death, from)
obl(pass, death)
case(life, to)
obl(pass, life)
punct(pass, ,)
mark(love, because)
nsubj(love, we)
advcl(pass, love)
det(brethren, the)
obj(love, brethren)
punct(know, .)
nsubj(abide, he)
nsubj(love, who)
aux(love, do)
advmod(love, not)
acl:relcl(he, love)
root(ROOT, abide)
case(death, in)
obl(abide, death)
punct(abide, . )
nummod(overcome, 1)
nsubj(overcome, St.)
flat(St., John)
nummod(John, 14)
punct(St., .)
mark(bear, if)
nsubj:pass(bear, we)
aux:pass(bear, be)
advcl(overcome, bear)
case(God, of)
obl(bear, God)
nsubj(overcome, we)
root(ROOT, overcome)
det(world, the)
obj(overcome, world)
punct(overcome, .)
nsubj(overcome, all)
nsubj:pass(bear, that)
aux:pass(bear, be)
acl:relcl(all, bear)
case(God, of)
obl(bear, God)
root(ROOT, overcome)
det(world, the)
obj(overcome, world)
punct(overcome, ;)
punct(overcome, ;)
cc(victory, and)
nsubj(victory, this)
cop(victory, be)
det(victory, the)
conj(overcome, victory)
nsubj(overcome, that)
acl:relcl(victory, overcome)
det(world, the)
obj(overcome, world)
punct(world, ,)
nmod:poss(faith, we)
conj(world, faith)
punct(overcome, . )
nummod(St., 1)
root(ROOT, St.)
flat(St., John)
nummod(John, 5)
punct(St., :)
nummod(grow, 4)
punct(4, .)
mark(bear, if)
nsubj:pass(bear, we)
aux:pass(bear, be)
advcl(grow, bear)
case(God, of)
obl(bear, God)
nsubj(grow, we)
parataxis(St., grow)
advmod(grow, in)
punct(into, ()
advmod(into, not)
parataxis(grow, into)
punct(in, ,)
cc(in, but)
conj(into, in)
punct(into, ))
conj(grow, grace)
punct(St., .)
cc(grow, but)
root(ROOT, grow)
case(grace, in)
obl(grow, grace)
cc(knowledge, and)
conj(grace, knowledge)
case(Lord, of)
nmod:poss(Lord, we)
nmod(grace, Lord)
cc(Savior, and)
conj(Lord, Savior)
punct(Lord, ,)
appos(Lord, Jesus)
flat(Jesus, Christ)
punct(grow, . )
nummod(persevere, 2)
nsubj(persevere, St.)
flat(St., Peter)
nummod(St., 18)
punct(2, .)
mark(bear, if)
nsubj:pass(bear, we)
aux:pass(bear, be)
advcl(persevere, bear)
case(God, of)
obl(bear, God)
nsubj(persevere, we)
root(ROOT, persevere)
case(end, unto)
det(end, the)
obl(persevere, end)
punct(persevere, . )
nsubj(convinced, I)
cop(convinced, be)
root(ROOT, convinced)
case(this, of)
obl(convinced, this)
punct(convinced, ,)
mark(bring, that)
nsubj(bring, he)
nsubj(begin, who)
aux(begin, have)
acl:relcl(he, begin)
det(work, a)
amod(work, good)
obj(begin, work)
case(you, in)
nsubj(bring, you)
aux(bring, will)
ccomp(convinced, bring)
obj(bring, it)
case(perfection, to)
obl(bring, perfection)
case(day, until)
det(day, the)
obl(bring, day)
case(Christ, of)
nmod(day, Christ)
flat(Christ, Jesus)
punct(convinced, .)
root(ROOT, Philippians)
nummod(Philippians, 1)
punct(Philippians, :)
nummod(now, 6)
punct(6, .)
advmod(Philippians, now)
case(he, to)
obl(now, he)
nsubj(able, who)
cop(able, be)
acl:relcl(now, able)
mark(preserve, to)
xcomp(able, preserve)
obj(preserve, you)
case(sin, without)
obl(preserve, sin)
cc(set, and)
mark(set, to)
conj(preserve, set)
obj(set, you)
case(presence, before)
det(presence, the)
obl(set, presence)
case(glory, of)
nmod:poss(glory, he)
nmod(presence, glory)
punct(presence, ,)
case(blemish, without)
nmod(presence, blemish)
punct(gladness, ,)
case(gladness, in)
nmod(blemish, gladness)
punct(God, ,)
case(God, to)
det(God, the)
amod(God, only)
nmod(gladness, God)
nmod:poss(Savior, we)
appos(God, Savior)
punct(Jesus, ,)
case(Jesus, through)
nmod(God, Jesus)
flat(Jesus, Christ)
nmod:poss(Lord, we)
appos(Jesus, Lord)
punct(belong, ,)
conj(God, belong)
obj(belong, glory)
cc(majesty, and)
conj(glory, majesty)
punct(dominion, ,)
conj(glory, dominion)
cc(authority, and)
conj(glory, authority)
punct(belong, ,)
case(time, before)
det(time, all)
obl(belong, time)
punct(now, ,)
cc(now, and)
conj(time, now)
punct(forever, ,)
cc(forever, and)
conj(now, forever)
punct(Philippians, .)
nsubj(necessary, St.)
flat(St., Jude)
nummod(St., 24)
punct(St., .)
det(birth, the)
amod(birth, new)
nsubj(necessary, birth)
cop(necessary, be)
root(ROOT, necessary)
mark(require, because)
det(kingdom, the)
amod(kingdom, spiritual)
nsubj(require, kingdom)
advcl(necessary, require)
det(nature, a)
amod(nature, spiritual)
obj(require, nature)
punct(necessary, .)
nsubj(answer, Jesus)
parataxis(necessary, answer)
cc(say, and)
conj(answer, say)
case(he, to)
obl(say, he)
punct(Nicodemus, ()
appos(say, Nicodemus)
punct(Nicodemus, ))
punct(necessary, ``)
discourse(say, amen)
punct(say, ,)
discourse(say, amen)
punct(say, ,)
nsubj(say, I)
root(ROOT, say)
case(thee, to)
obl(say, thee)
punct(see, ,)
mark(bear, unless)
det(man, a)
nsubj:pass(bear, man)
aux:pass(bear, be)
advcl(see, bear)
advmod(bear, again)
punct(see, ,)
nsubj(see, he)
aux(see, can)
advmod(see, not)
ccomp(say, see)
det(kingdom, the)
obj(see, kingdom)
case(God, of)
nmod(kingdom, God)
punct(see, '')
punct(say, .)
punct(say, ``)
discourse(say, amen)
punct(say, ,)
discourse(say, amen)
punct(say, ,)
nsubj(say, I)
root(ROOT, say)
case(thee, to)
obl(say, thee)
punct(say, ,)
mark(bear, unless)
det(man, a)
nsubj:pass(bear, man)
aux:pass(bear, be)
advcl(enter, bear)
advmod(bear, again)
case(water, of)
obl(bear, water)
cc(Spirit, and)
det(Spirit, the)
conj(water, Spirit)
punct(enter, ,)
nsubj(enter, he)
aux(enter, can)
advmod(enter, not)
ccomp(say, enter)
case(kingdom, into)
det(kingdom, the)
obl(enter, kingdom)
case(God, of)
nmod(kingdom, God)
punct(say, .)
nsubj(flesh, that)
nsubj:pass(bear, which)
aux:pass(bear, be)
acl:relcl(that, bear)
case(flesh, of)
det(flesh, the)
obl(bear, flesh)
cop(flesh, be)
root(ROOT, flesh)
punct(flesh, ;)
punct(flesh, ;)
cc(spirit, and)
mark(bear, that)
nsubj:pass(bear, which)
aux:pass(bear, be)
advcl(spirit, bear)
case(Spirit, of)
det(Spirit, the)
obl(bear, Spirit)
cop(spirit, be)
conj(flesh, spirit)
punct(flesh, .)
aux(wonder, do)
advmod(wonder, not)
root(ROOT, wonder)
mark(say, that)
nsubj(say, I)
ccomp(wonder, say)
case(thee, to)
obl(say, thee)
punct(wonder, ,)
punct(wonder, ')
nsubj:pass(bear, you)
aux(bear, must)
aux:pass(bear, be)
root(ROOT, bear)
advmod(bear, again)
punct(bear, ')
punct(bear, '')
punct(St., .)
appos(bear, St.)
flat(St., John)
nummod(St., 3)
punct(St., :)
nummod(St., 3)
punct(3, ,)
compound(3, 5)
case(7, -)
nmod(5, 7)
punct(St., .)
det(nature, the)
appos(St., nature)
case(birth, of)
det(birth, the)
amod(birth, new)
nmod(nature, birth)
det(birth, the)
amod(birth, new)
nsubj(creation, birth)
cop(creation, be)
det(creation, a)
amod(creation, new)
acl:relcl(birth, creation)
punct(creation, .)
case(Christ, for)
case(Christ, in)
compound(Jesus, Christ)
nmod(creation, Jesus)
cc(circumcision, neither)
conj(Jesus, circumcision)
cc(uncircumcision, nor)
conj(circumcision, uncircumcision)
cc(account, but)
det(creation, a)
amod(creation, new)
nsubj(account, creation)
cop(account, be)
case(account, of)
det(account, any)
nmod(circumcision, account)
punct(account, .)
appos(account, Galatians)
nummod(Galatians, 15)
punct(Galatians, .)
mark(Christ, if)
advmod(Christ, then)
det(man, any)
nsubj(Christ, man)
cop(Christ, be)
case(Christ, in)
advcl(creature, Christ)
punct(creature, ,)
nsubj(creature, he)
cop(creature, be)
det(creature, a)
amod(creature, new)
parataxis(Galatians, creature)
punct(creature, ()
advmod(creature, literally)
punct(bear, ,)
punct(bear, ``)
nsubj(creation, he)
cop(creation, be)
det(creation, a)
amod(creation, new)
root(ROOT, creation)
punct(creation, ))
punct(creation, ,)
det(thing, the)
amod(thing, former)
nsubj(pass, thing)
aux(pass, have)
parataxis(creation, pass)
compound:prt(pass, away)
punct(creation, ;)
punct(creation, ;)
discourse(make, behold)
punct(make, ,)
nsubj:pass(make, they)
aux:pass(make, be)
parataxis(pass, make)
xcomp(make, new)
punct(creation, !)
punct(creation, ! )
nummod(save, 2)
nsubj:pass(save, Corinthians)
nummod(save, 17)
punct(17, .)
case(grace, for)
case(grace, by)
obl(save, grace)
nsubj:pass(save, you)
aux(save, have)
aux:pass(save, be)
root(ROOT, save)
case(faith, through)
obl(save, faith)
punct(save, ;)
punct(save, ;)
cc(yourselves, and)
mark(yourselves, that)
advmod(yourselves, not)
case(yourselves, from)
obl(gift, yourselves)
punct(gift, ,)
mark(gift, for)
nsubj(gift, it)
cop(gift, be)
det(gift, the)
conj(save, gift)
case(God, of)
nmod(gift, God)
punct(gift, ;)
punct(gift, ;)
advmod(outcome, not)
case(outcome, as)
det(outcome, the)
conj(gift, outcome)
case(work, of)
nmod(outcome, work)
punct(outcome, ,)
mark(boast, lest)
nsubj(boast, anyone)
aux(boast, may)
advcl(outcome, boast)
punct(save, .)
case(workmanship, for)
nmod:poss(workmanship, he)
obl(be, workmanship)
nsubj(be, we)
root(ROOT, be)
punct(be, ,)
ccomp(be, create)
case(Jesus, in)
compound(Jesus, Christ)
obl(create, Jesus)
punct(be, .)
root(ROOT, Ephesians)
nummod(Ephesians, 2)
punct(Ephesians, :)
nummod(implantation, 8-10)
punct(8-10, .)
det(birth, the)
amod(birth, new)
nsubj(implantation, birth)
cop(implantation, be)
det(implantation, the)
parataxis(Ephesians, implantation)
case(life, of)
det(life, a)
amod(life, new)
nmod(implantation, life)
punct(Ephesians, . )
nsubj(come, I)
root(ROOT, come)
mark(have, that)
nsubj(have, they)
aux(have, may)
ccomp(come, have)
obj(have, life)
punct(come, .)
root(ROOT, St.)
flat(St., John)
nummod(St., 10)
punct(St., .)
appos(St., he)
nsubj(have, who)
acl:relcl(he, have)
det(Son, the)
obj(have, Son)
ccomp(have, have)
det(life, the)
obj(have, life)
punct(St., .)
nsubj(life, he)
nsubj(Son, who)
aux(Son, have)
advmod(Son, not)
det(Son, the)
acl:relcl(he, Son)
aux(life, have)
advmod(life, not)
det(life, the)
root(ROOT, life)
punct(he, . )
nummod(everlast, 1)
nsubj(everlast, St.)
flat(St., John)
nummod(John, 12)
punct(St., .)
nsubj(everlast, he)
nsubj(believe, who)
acl:relcl(he, believe)
case(Son, in)
det(Son, the)
obl(believe, Son)
punct(Jesus, ()
appos(Son, Jesus)
flat(Jesus, Christ)
punct(Son, ,)
det(Son, the)
appos(Jesus, Son)
case(God, of)
nmod(Son, God)
punct(Son, ))
punct(everlast, ,)
aux(everlast, have)
root(ROOT, everlast)
obj(everlast, life)
punct(everlast, .)
nsubj(impartation, St.)
flat(St., John)
nummod(St., 36)
punct(St., .)
det(birth, the)
amod(birth, new)
nsubj(impartation, birth)
cop(impartation, be)
det(impartation, the)
root(ROOT, impartation)
case(nature, of)
det(nature, the)
amod(nature, divine)
nmod(impartation, nature)
punct(impartation, .)
case(which, through)
obl(grant, which)
nsubj(grant, he)
aux(grant, have)
acl:relcl(nature, grant)
iobj(grant, we)
det(promise, the)
advmod(great, very)
amod(promise, great)
cc(precious, and)
conj(great, precious)
obj(grant, promise)
punct(become, ,)
advmod(become, so)
nsubj(become, that)
case(they, through)
nmod(that, they)
nsubj(become, you)
aux(become, may)
conj(grant, become)
xcomp(become, partaker)
case(nature, of)
det(nature, the)
amod(nature, divine)
nmod(partaker, nature)
punct(impartation, . )
root(ROOT, 2)
appos(2, St.)
flat(St., Peter)
nummod(St., 1)
punct(St., :)
nummod(Christ, 4)
punct(4, .)
det(birth, the)
amod(birth, new)
nsubj(Christ, birth)
cop(Christ, be)
parataxis(St., Christ)
acl(Christ, live)
case(you, in)
obl(live, you)
case(faith, by)
obl(live, faith)
punct(Christ, .)
root(ROOT, Christ)
case(you, in)
nmod(Christ, you)
punct(Christ, ,)
nmod:poss(hope, you)
parataxis(Christ, hope)
case(glory, of)
nmod(hope, glory)
punct(Christ, .)
compound(27, Colossians)
nummod(I, 27)
punct(27, .)
nsubj(I, it)
cop(I, be)
advmod(I, now)
advmod(longer, no)
advmod(I, longer)
root(ROOT, I)
nsubj(live, that)
acl:relcl(I, live)
punct(live, ,)
cc(live, but)
nsubj(live, Christ)
conj(live, live)
case(I, in)
obl(live, I)
punct(live, .)
cc(live, and)
det(life, the)
nsubj(live, life)
obj(live, that)
nsubj(live, I)
advmod(live, now)
acl:relcl(life, live)
case(flesh, in)
det(flesh, the)
obl(live, flesh)
punct(live, ,)
nsubj(live, I)
conj(I, live)
case(faith, in)
det(faith, the)
obl(live, faith)
case(Son, of)
det(Son, the)
nmod(faith, Son)
case(God, of)
nmod(Son, God)
punct(Son, ,)
nsubj(love, who)
acl:relcl(Son, love)
obj(love, I)
cc(give, and)
conj(love, give)
obj(give, himself)
compound:prt(give, up)
case(I, for)
obl(give, I)
punct(Galatians, .)
obj(give, Galatians)
nummod(Galatians, 20)
punct(Galatians, .)
mark(have, to)
advcl(give, have)
obj(have, Christ)
xcomp(have, dwelling)
case(faith, through)
obl(dwelling, faith)
case(heart, in)
nmod:poss(heart, you)
obl(dwelling, heart)
punct(I, .)
nsubj(miraculous, Ephesians)
nummod(miraculous, 17)
punct(17, .)
det(birth, the)
amod(birth, new)
nsubj(miraculous, birth)
cop(miraculous, be)
root(ROOT, miraculous)
cc(mysterious, and)
conj(miraculous, mysterious)
punct(miraculous, .)
det(wind, the)
nsubj(blow, wind)
root(ROOT, blow)
advmod(will, where)
nsubj(will, it)
ccomp(blow, will)
punct(sound, ,)
cc(hearest, and)
nsubj(hearest, thou)
conj(blow, hearest)
nsubj(sound, it)
aux(sound, be)
conj(blow, sound)
cc(know, but)
nsubj(know, dost)
advmod(know, not)
conj(blow, know)
mark(come, where)
nsubj(come, it)
advcl(know, come)
obl(come, from)
cc(go, or)
advmod(go, where)
nsubj(go, it)
conj(come, go)
punct(blow, .)
root(ROOT, so)
cop(so, be)
nsubj(so, everyone)
nsubj:pass(bear, who)
aux:pass(bear, be)
acl:relcl(everyone, bear)
case(Spirit, of)
det(Spirit, the)
obl(bear, Spirit)
punct(so, .)
root(ROOT, St.)
flat(St., John)
nummod(St., 3)
punct(St., :)
nummod(immediate, 8)
punct(8, .)
det(birth, the)
amod(birth, new)
nsubj(immediate, birth)
cop(immediate, be)
parataxis(St., immediate)
cc(instantaneous, and)
conj(immediate, instantaneous)
punct(St., .)
discourse(say, amen)
punct(say, ,)
discourse(say, amen)
punct(say, ,)
nsubj(say, I)
root(ROOT, say)
case(you, to)
obl(say, you)
punct(say, ,)
nsubj(say, he)
nsubj(hear, who)
acl:relcl(he, hear)
nmod:poss(word, my)
obj(hear, word)
punct(believe, ,)
cc(believe, and)
conj(say, believe)
obj(believe, he)
nsubj(send, who)
acl:relcl(he, send)
obj(send, I)
punct(have, ,)
conj(send, have)
compound(everlast, life)
obj(have, everlast)
punct(come, ,)
cc(come, and)
aux(come, do)
advmod(come, not)
conj(send, come)
case(judgment, to)
obl(come, judgment)
punct(pass, ,)
cc(pass, but)
aux(pass, have)
conj(come, pass)
case(death, from)
obl(pass, death)
case(life, to)
obl(pass, life)
punct(say, .)
nsubj(work, St.)
flat(St., John)
nummod(St., 24)
punct(St., .)
det(means, the)
nsubj(work, means)
case(birth, of)
det(birth, the)
amod(birth, new)
nmod(means, birth)
det(birth, the)
amod(birth, new)
appos(birth, birth)
cop(work, be)
det(work, a)
root(ROOT, work)
case(god, of)
nmod(work, god)
punct(work, .)
cc(give, but)
case(many, to)
advmod(many, as)
obl(give, many)
mark(receive, as)
advcl(many, receive)
obj(receive, he)
nsubj(give, he)
root(ROOT, give)
det(power, the)
obj(give, power)
mark(become, of)
acl(power, become)
obj(become, son)
case(God, of)
nmod(son, God)
punct(give, ;)
punct(give, ;)
case(those, to)
obl(give, those)
nsubj(believe, who)
acl:relcl(those, believe)
case(name, in)
nmod:poss(name, he)
obl(believe, name)
punct(give, :)
nsubj:pass(bear, who)
aux:pass(bear, be)
root(ROOT, bear)
advmod(blood, not)
case(blood, of)
obl(bear, blood)
punct(will, ,)
cc(will, nor)
case(will, of)
det(will, the)
conj(blood, will)
case(flesh, of)
det(flesh, the)
nmod(will, flesh)
punct(will, ,)
cc(will, nor)
case(will, of)
det(will, the)
conj(flesh, will)
case(man, of)
nmod(will, man)
punct(will, ,)
cc(St., but)
case(God, of)
nmod(St., God)
punct(St., .)
appos(will, St.)
flat(St., John)
nummod(St., 12)
punct(St., ,)
nummod(St., 13)
punct(13, .)
det(word, a)
amod(word, final)
appos(St., word)
nsubj(religious, you)
aux(religious, may)
cop(religious, be)
advmod(religious, very)
acl:relcl(word, religious)
punct(member, ,)
det(member, a)
amod(member, good)
compound(member, church)
conj(religious, member)
punct(person, ,)
det(person, a)
amod(person, upright)
punct(honest, ,)
amod(person, honest)
cc(sincere, and)
conj(upright, sincere)
conj(member, person)
punct(baptize, ;)
punct(bear, ;)
nsubj:pass(baptize, you)
aux(baptize, may)
aux:pass(baptize, be)
parataxis(person, baptize)
punct(confirm, ,)
conj(baptize, confirm)
punct(reverent, ,)
conj(baptize, reverent)
cc(worshipful, and)
conj(baptize, worshipful)
punct(baptize, ;)
punct(bear, ;)
nsubj(attend, you)
aux(attend, may)
parataxis(baptize, attend)
obj(attend, mass)
punct(do, ,)
conj(attend, do)
obj(do, penance)
punct(say, ,)
conj(attend, say)
obj(say, prayer)
cc(keep, and)
advmod(keep, zealously)
conj(attend, keep)
det:predet(sacrament, all)
det(sacrament, the)
obj(keep, sacrament)
cc(ceremony, and)
conj(sacrament, ceremony)
case(church, of)
det(church, the)
nmod(sacrament, church)
punct(keep, ;)
punct(bear, ;)
nsubj(have, you)
aux(have, may)
parataxis(bear, have)
det(unction, the)
amod(unction, final)
cc(extreme, and)
conj(final, extreme)
obj(have, unction)
cc(lose, but)
mark(bear, if)
nsubj:pass(bear, you)
aux:pass(bear, be)
advmod(bear, not)
advcl(lose, bear)
advmod(bear, again)
nsubj:pass(lose, you)
aux:pass(lose, be)
conj(have, lose)
cc(head, and)
conj(lose, head)
case(hell, for)
obl(head, hell)
cc(punishment, and)
amod(punishment, eternal)
conj(hell, punishment)
punct(bear, .)
nsubj:pass(save, you)
aux(save, can)
advmod(save, not)
aux:pass(save, be)
root(ROOT, save)
punct(save, ;)
punct(save, ;)
nsubj(go, you)
aux(go, can)
advmod(go, not)
parataxis(save, go)
case(heaven, to)
obl(go, heaven)
mark(bear, unless)
nsubj:pass(bear, you)
aux:pass(bear, be)
advcl(go, bear)
advmod(bear, again)
punct(save, .)
nmod:poss(Lord, we)
amod(Lord, bless)
nsubj(say, Lord)
appos(Lord, Jesus)
flat(Jesus, Christ)
punct(Lord, ,)
det(Son, the)
amod(Son, sinless)
appos(Lord, Son)
case(God, of)
nmod(Son, God)
punct(Lord, ,)
nsubj(lie, who)
aux(lie, could)
advmod(lie, not)
acl:relcl(Lord, lie)
punct(say, ,)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
discourse(say, amen)
punct(say, ,)
discourse(say, amen)
punct(say, ,)
nsubj(say, I)
root(ROOT, say)
case(thee, to)
obl(say, thee)
punct(see, ,)
mark(bear, unless)
det(man, a)
nsubj:pass(bear, man)
aux:pass(bear, be)
advcl(see, bear)
advmod(bear, again)
punct(see, ,)
nsubj(see, he)
aux(see, can)
advmod(see, not)
ccomp(say, see)
det(kingdom, the)
obj(see, kingdom)
case(God, of)
nmod(kingdom, God)
punct(see, '')
punct(St., ()
root(ROOT, St.)
flat(St., John)
nummod(St., 3)
punct(St., :)
list(St., 3)
punct(3, ))
punct(St., .)
punct(St., ``)
nsubj:pass(bear, you)
aux(bear, must)
aux:pass(bear, be)
root(ROOT, bear)
advmod(bear, again)
punct(bear, '')
punct(St., ()
appos(bear, St.)
flat(St., John)
nummod(St., 3)
punct(St., :)
nummod(St., 7)
punct(St., ))
punct(bear, .)
aux:pass(convinced, be)
advcl(bear, convinced)
mark(alone, that)
nsubj(alone, salvation)
cop(alone, be)
ccomp(convinced, alone)
mark(accept, by)
advcl(alone, accept)
obj(accept, Christ)
case(saviour, as)
obl(accept, saviour)
punct(convict, ,)
cc(convict, and)
aux:pass(convict, be)
conj(accept, convict)
case(Spirit, by)
det(Spirit, the)
compound(Spirit, Holy)
obl(convict, Spirit)
case(condition, of)
nmod:poss(condition, my)
amod(condition, lose)
nmod(Spirit, condition)
punct(repent, ,)
nsubj(repent, I)
aux(repent, do)
conj(bear, repent)
case(effort, of)
det(effort, all)
obl(repent, effort)
mark(save, to)
aux:pass(save, be)
acl(effort, save)
case(form, by)
det(form, any)
obl(save, form)
case(work, of)
amod(work, good)
nmod(form, work)
punct(receive, ,)
cc(receive, and)
advmod(receive, just)
advmod(receive, now)
conj(repent, receive)
obj(receive, Jesus)
case(saviour, as)
nmod:poss(saviour, my)
amod(saviour, personal)
obl(receive, saviour)
cc(salvation, and)
conj(saviour, salvation)
case(gift, as)
det(gift, a)
amod(gift, free)
nmod(saviour, gift)
case(he, from)
nmod(gift, he)
punct(bear, .)
nsubj(do, you)
aux(do, may)
root(ROOT, do)
mark(please, as)
nsubj(please, you)
advcl(do, please)
case(God, with)
obl(please, God)
advmod(please, now)
punct(do, .)
nsubj:pass(permit, it)
aux:pass(permit, be)
root(ROOT, permit)
punct(permit, .)
nsubj(place, God)
ccomp(permit, place)
obj(place, Himself)
case(hand, in)
nmod:poss(hand, man)
case(man, 's)
obl(place, hand)
mark(send, when)
nsubj(send, he)
advcl(place, send)
obj(send, Jesus)
flat(Jesus, Christ)
case(world, into)
det(world, the)
obl(send, world)
case(God, as)
amod(God, perfect)
obl(send, God)
cc(man, and)
amod(man, perfect)
conj(God, man)
case(one, in)
nmod(man, one)
acl:relcl(one, be)
punct(permit, .)
nsubj(hand, he)
cop(hand, be)
advmod(hand, then)
case(hand, in)
nmod:poss(hand, man)
case(man, 's)
root(ROOT, hand)
punct(hand, .)
nsubj(curse, they)
root(ROOT, curse)
obj(curse, he)
punct(curse, .)
nsubj:pass(permit, it)
aux:pass(permit, be)
root(ROOT, permit)
punct(permit, .)
nsubj(spit, Men)
ccomp(permit, spit)
case(he, on)
obl(spit, he)
punct(permit, .)
nsubj(allow, God)
parataxis(spit, allow)
obj(allow, it)
punct(allow, .)
nsubj(call, they)
ccomp(allow, call)
obj(call, he)
det(devil, a)
obj(call, devil)
punct(permit, .)
nsubj(withheld, God)
parataxis(call, withheld)
nmod:poss(wrath, he)
obj(withheld, wrath)
punct(arrest, .)
advmod(arrest, finally)
nsubj(arrest, man)
parataxis(withheld, arrest)
obj(arrest, he)
punct(give, ,)
conj(arrest, give)
iobj(give, he)
det(trial, a)
amod(trial, mock)
obj(give, trial)
punct(flog, ,)
conj(arrest, flog)
obj(flog, he)
punct(nail, ,)
list(flog, nail)
obj(nail, he)
case(cross, on)
det(cross, a)
obl(nail, cross)
cc(hang, and)
conj(arrest, hang)
obj(hang, he)
case(earth, between)
obl(hang, earth)
cc(heaven, and)
conj(earth, heaven)
punct(hang, ;)
punct(allow, ;)
cc(allow, and)
nsubj(allow, God)
conj(permit, allow)
obj(allow, it)
punct(permit, .)
nsubj(do, you)
aux(do, can)
root(ROOT, do)
advmod(do, likewise)
mark(present, though)
nsubj(present, Christ)
cop(present, be)
advmod(present, not)
obl:npmod(present, bodily)
advcl(do, present)
punct(do, .)
nsubj(ignore, you)
aux(ignore, can)
root(ROOT, ignore)
obj(ignore, he)
punct(ignore, .)
nsubj(ignore, you)
aux(ignore, can)
root(ROOT, ignore)
nmod:poss(Book, he)
obj(ignore, Book)
punct(Bible, ,)
det(Bible, the)
conj(Book, Bible)
punct(church, ,)
cc(church, and)
nmod:poss(church, he)
conj(Book, church)
punct(ignore, .)
nsubj(laugh, you)
aux(laugh, can)
root(ROOT, laugh)
case(salvation, at)
nmod:poss(salvation, he)
compound(buy, blood)
punct(buy, -)
amod(salvation, buy)
obl(laugh, salvation)
punct(curse, ,)
conj(laugh, curse)
nmod:poss(follower, he)
obj(curse, follower)
punct(laugh, ,)
cc(laugh, and)
conj(laugh, laugh)
case(hell, at)
obl(laugh, hell)
punct(laugh, .)
nsubj:pass(permit, it)
aux:pass(permit, be)
root(ROOT, permit)
punct(permit, .)
det(Christ, the)
amod(Christ, eternal)
nsubj(knock, Christ)
aux(knock, may)
root(ROOT, knock)
case(door, at)
nmod:poss(soul, you)
nmod:poss(door, soul)
case(soul, 's)
obl(knock, door)
punct(knock, ,)
advcl(knock, call)
obj(call, you)
mark(give, to)
xcomp(call, give)
compound:prt(give, up)
obj(give, sin)
cc(prepare, and)
conj(give, prepare)
case(heaven, for)
obl(prepare, heaven)
punct(knock, .)
nsubj(refuse, you)
aux(refuse, may)
root(ROOT, refuse)
obj(refuse, he)
punct(refuse, ,)
conj(refuse, spit)
case(he, on)
obl(spit, he)
punct(refuse, ,)
conj(refuse, call)
obj(call, he)
det(devil, a)
obj(call, devil)
punct(refuse, ,)
list(call, curse)
obj(curse, he)
punct(refuse, .)
nsubj:pass(permit, it)
aux:pass(permit, be)
root(ROOT, permit)
punct(permit, .)
nsubj(take, you)
aux(take, may)
root(ROOT, take)
nmod:poss(name, he)
root(ROOT, name)
case(lip, upon)
nmod:poss(lip, you)
nmod(name, lip)
case(oath, in)
nmod(name, oath)
cc(curse, and)
conj(oath, curse)
mark(choose, if)
nsubj(choose, you)
advmod(choose, so)
advcl(name, choose)
punct(name, .)
nsubj(hand, he)
cop(hand, be)
case(hand, in)
nmod:poss(hand, you)
root(ROOT, hand)
punct(hand, --)
advmod(hand, now)
punct(hand, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(seek, hand)
punct(seek, ,)
nsubj(seek, you)
aux(seek, may)
root(ROOT, seek)
nmod:poss(favor, he)
nsubj(humble, favor)
punct(humble, ,)
root(ROOT, humble)
obj(humble, yourself)
case(he, before)
obl(humble, he)
cc(beg, and)
conj(humble, beg)
nmod:poss(mercy, he)
obj(beg, mercy)
punct(implore, ,)
conj(humble, implore)
nmod:poss(forgiveness, he)
root(ROOT, forgiveness)
punct(forsake, ,)
conj(forgiveness, forsake)
nmod:poss(sin, you)
obj(forsake, sin)
punct(abandon, ,)
cc(abandon, and)
conj(forsake, abandon)
nmod:poss(life, you)
amod(life, whole)
obj(abandon, life)
case(he, to)
obl(abandon, he)
punct(forsake, .)
nsubj(say, he)
aux(say, have)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
discourse(stand, behold)
punct(stand, ,)
nsubj(stand, I)
root(ROOT, stand)
case(door, at)
det(door, the)
obl(stand, door)
punct(knock, ,)
cc(knock, and)
conj(stand, knock)
punct(knock, :)
mark(hear, if)
det(man, any)
nsubj(hear, man)
advcl(knock, hear)
nmod:poss(voice, my)
obj(hear, voice)
punct(open, ,)
cc(open, and)
conj(hear, open)
det(door, the)
obj(open, door)
punct(come, ,)
nsubj(come, I)
aux(come, will)
conj(stand, come)
advmod(come, in)
case(he, to)
obl(come, he)
punct(sup, ,)
cc(sup, and)
aux(sup, will)
conj(come, sup)
case(he, with)
obl(sup, he)
punct(he, ,)
cc(he, and)
nsubj(sup, he)
case(I, with)
nmod(he, I)
punct(he, '')
punct(revelation, ()
appos(I, revelation)
nummod(revelation, 3:20)
punct(revelation, :)
punct(revelation, :)
nummod(up, 20)
punct(20, ))
punct(20, .)
det(choice, the)
nsubj(up, choice)
cop(up, be)
parataxis(revelation, up)
case(you, to)
obl(up, you)
punct(revelation, .)
det(latch, the)
nsubj(side, latch)
cop(side, be)
case(side, on)
nmod:poss(side, you)
root(ROOT, side)
case(door, of)
det(door, the)
nmod(side, door)
punct(side, .)
det(choice, the)
nsubj(yours, choice)
cop(yours, be)
root(ROOT, yours)
punct(yours, :)
det(revelling, the)
appos(yours, revelling)
cc(banquetings, and)
conj(revelling, banquetings)
case(world, of)
det(world, this)
nmod(revelling, world)
cc(communion, or)
amod(communion, quiet)
conj(revelling, communion)
case(God, with)
nmod(communion, God)
punct(yours, ;)
punct(revelling, ;)
det(lust, the)
advmod(burn, ever)
amod(lust, burn)
conj(revelling, lust)
case(flesh, of)
det(flesh, the)
nmod(lust, flesh)
cc(victory, or)
det(victory, the)
amod(victory, powerful)
conj(flesh, victory)
case(discipline, of)
compound(Spirit, Holy)
compound(discipline, Spirit)
nmod(victory, discipline)
punct(yours, .)
det(choice, the)
nsubj(yours, choice)
cop(yours, be)
root(ROOT, yours)
punct(yours, :)
nsubj(hand, God)
cop(hand, be)
case(hand, in)
nmod:poss(hand, you)
root(ROOT, hand)
punct(hand, ,)
advmod(set, now)
punct(hand, .)
nsubj(set, God)
aux(set, have)
advmod(set, already)
parataxis(hand, set)
det(day, the)
obl:tmod(set, day)
mark(hand, when)
nsubj(hand, you)
aux(hand, will)
cop(hand, be)
case(hand, in)
nmod:poss(hand, he)
advcl(set, hand)
punct(hand, .)
nsubj(depend, what)
nsubj(do, he)
acl:relcl(what, do)
case(you, with)
obl(do, you)
advmod(depend, then)
root(ROOT, depend)
case(what, on)
obl(depend, what)
nsubj(do, you)
acl:relcl(what, do)
case(he, with)
obl(do, he)
advmod(do, now)
punct(depend, .)
advmod(thing, then)
expl(thing, it)
aux(thing, will)
cop(thing, be)
det(thing, a)
punct(thing, ``)
amod(thing, fearful)
root(ROOT, thing)
mark(fall, to)
acl(thing, fall)
case(hand, into)
det(hand, the)
obl(fall, hand)
case(God, of)
det(God, the)
amod(God, live)
nmod(hand, God)
punct(thing, '')
mark(abuse, if)
nsubj(abuse, you)
aux(abuse, have)
advcl(fall, abuse)
obj(abuse, he)
case(hand, in)
nmod:poss(hand, you)
obl(abuse, hand)
punct(thing, . )
nsubj(magazine, I)
cop(magazine, be)
det(magazine, a)
root(ROOT, magazine)
punct(magazine, ;)
punct(magazine, ;)
nmod:poss(name, my)
nsubj(guidepost, name)
cop(guidepost, be)
parataxis(magazine, guidepost)
punct(magazine, ;)
punct(magazine, ;)
det(issue, this)
nsubj(mark, issue)
obj(read, that)
nsubj(read, you)
aux(read, be)
acl:relcl(issue, read)
parataxis(guidepost, mark)
nmod:poss(anniversary, my)
amod(anniversary, 15th)
obj(mark, anniversary)
punct(magazine, .)
mark(come, when)
nsubj(come, I)
advcl(have, come)
mark(ago, into)
cop(ago, be)
punct(ago, ,)
nummod(year, 15)
obl:npmod(ago, year)
advmod(come, ago)
punct(have, ,)
nsubj(have, I)
root(ROOT, have)
nummod(purpose, one)
amod(purpose, primary)
obj(have, purpose)
punct(purpose, :)
mark(help, to)
xcomp(have, help)
obj(help, man)
cc(woman, and)
conj(man, woman)
advmod(help, everywhere)
mark(know, to)
advcl(help, know)
obj(know, God)
advmod(know, better)
punct(know, ,)
cc(know, and)
mark(know, through)
conj(know, know)
obj(know, he)
xcomp(know, better)
mark(become, to)
advcl(better, become)
xcomp(become, happier)
cc(people, and)
advmod(effective, more)
conj(happier, effective)
conj(happier, people)
punct(have, .)
det(purpose, that)
nsubj(change, purpose)
aux(change, have)
advmod(change, never)
root(ROOT, change)
punct(change, .)
mark(read, when)
nsubj(read, you)
advcl(hold, read)
obj(read, I)
punct(hold, ,)
nsubj(hold, you)
aux(hold, be)
root(ROOT, hold)
compound:prt(hold, in)
nmod:poss(hand, you)
obj(hold, hand)
det(product, the)
obj(hold, product)
case(mind, of)
amod(mind, many)
nmod(product, mind)
cc(heart, and)
conj(mind, heart)
punct(hold, .)
nsubj(famous, some)
case(people, of)
det(people, the)
nmod(some, people)
nsubj(speak, who)
acl:relcl(people, speak)
case(page, through)
nmod:poss(page, my)
obl(speak, page)
cop(famous, be)
root(ROOT, famous)
punct(famous, ;)
punct(famous, ;)
nsubj(unknown, other)
parataxis(famous, unknown)
punct(famous, .)
det(work, some)
root(ROOT, work)
case(hand, with)
nmod:poss(hand, they)
nmod(work, hand)
punct(work, .)
nsubj(walk, some)
aux(walk, have)
root(ROOT, walk)
case(pain, through)
obl(walk, pain)
cc(sorrow, and)
conj(pain, sorrow)
mark(bring, to)
advcl(walk, bring)
iobj(bring, you)
nmod:poss(message, they)
obj(bring, message)
case(hope, of)
nmod(message, hope)
punct(walk, .)
nsubj:pass(fill, some)
aux:pass(fill, be)
advmod(fill, so)
root(ROOT, fill)
case(gratitude, with)
obl(fill, gratitude)
punct(gratitude, ,)
case(gift, for)
det(gift, the)
obl(fill, gift)
case(life, of)
nmod(gift, life)
cc(love, and)
det(love, the)
conj(gift, love)
case(God, of)
nmod(love, God)
punct(fill, ,)
mark(spill, that)
nmod:poss(joy, they)
nsubj(spill, joy)
ccomp(fill, spill)
compound:prt(spill, out)
case(paper, on)
det(paper, the)
obl(spill, paper)
cc(brightens, and)
conj(spill, brightens)
det(life, the)
obj(brightens, life)
case(thousand, of)
nmod(life, thousand)
obj(know, whom)
nsubj(know, they)
aux(know, have)
advmod(know, never)
acl:relcl(thousand, know)
punct(see, ,)
cc(see, and)
aux(see, will)
advmod(see, never)
conj(know, see)
punct(see, .)
nummod(year, Fifteen)
obl:npmod(ago, year)
advmod(see, ago)
punct(be, ,)
expl(be, there)
parataxis(see, be)
det(guidepost, no)
nsubj(be, guidepost)
case(all, at)
nmod(guidepost, all)
punct(fill, .)
det(month, this)
obl:tmod(circulate, month)
det(guidepost, a)
nummod(month, million)
nsubj(circulate, guidepost)
aux(circulate, will)
root(ROOT, circulate)
advmod(world, all)
case(world, over)
det(world, the)
obl(circulate, world)
punct(circulate, .)
nsubj(consider, expert)
case(field, in)
det(field, the)
compound(field, publish)
nmod(expert, field)
root(ROOT, consider)
obj(consider, this)
xcomp(consider, astounding)
punct(consider, .)
nsubj(understand, they)
aux(understand, do)
advmod(understand, not)
root(ROOT, understand)
advmod(achieve, how)
det(magazine, a)
amod(magazine, small)
nsubj(achieve, magazine)
case(advertising, with)
det(advertising, no)
nmod(magazine, advertising)
cc(sale, and)
det(sale, no)
compound(sale, newsstand)
conj(advertising, sale)
aux(achieve, could)
aux(achieve, have)
ccomp(understand, achieve)
det:predet(a, such)
det(follow, a)
obj(achieve, follow)
punct(understand, .)
case(I, to)
obl(simple, I)
punct(simple, ,)
det(explanation, the)
nsubj(simple, explanation)
cop(simple, be)
advmod(simple, very)
root(ROOT, simple)
punct(simple, . )
nsubj(do, I)
aux(do, be)
advmod(do, not)
root(ROOT, do)
obj(do, anything)
punct(anything, ,)
case(myself, of)
nmod(anything, myself)
punct(do, . )
nsubj(channel, I)
cop(channel, be)
advmod(channel, merely)
det(channel, a)
root(ROOT, channel)
case(something, for)
nmod(channel, something)
punct(channel, .)
root(ROOT, what)
cop(what, be)
nsubj(something, this)
nsubj(what, something)
punct(what, ?)
punct(what, ? )
nsubj(define, I)
aux(define, can)
advmod(define, not)
root(ROOT, define)
obj(define, it)
advmod(define, fully)
punct(define, .)
nsubj(force, it)
cop(force, be)
det(force, the)
root(ROOT, force)
case(universe, in)
det(universe, the)
nmod(force, universe)
nsubj(make, that)
acl:relcl(universe, make)
obj(make, man)
xcomp(make, love)
obj(love, goodness)
punct(love, ,)
advmod(turn, even)
mark(turn, when)
nsubj(turn, they)
advcl(love, turn)
advmod(turn, away)
case(it, from)
obl(turn, it)
punct(force, .)
nsubj(power, it)
cop(power, be)
det(power, the)
root(ROOT, power)
nsubj(hold, that)
acl:relcl(power, hold)
det(star, the)
obj(hold, star)
case(orbit, in)
nmod:poss(orbit, they)
obl(hold, orbit)
punct(allow, ,)
cc(allow, but)
conj(power, allow)
det(wind, the)
obj(allow, wind)
mark(bend, to)
xcomp(allow, bend)
det(blade, a)
obj(bend, blade)
case(grass, of)
nmod(blade, grass)
punct(power, .)
nsubj(whisper, it)
cop(whisper, be)
det(whisper, the)
root(ROOT, whisper)
case(heart, in)
det(heart, the)
nmod(whisper, heart)
nsubj(urge, that)
acl:relcl(heart, urge)
det(one, each)
obj(urge, one)
mark(better, to)
cop(better, be)
xcomp(urge, better)
mark(be, than)
nsubj(be, he)
advcl(better, be)
punct(whisper, .)
nsubj(yearn, it)
cop(yearn, be)
nmod:poss(yearn, mankind)
case(mankind, 's)
amod(yearn, wistful)
root(ROOT, yearn)
case(world, for)
det(world, a)
nmod(yearn, world)
case(justice, of)
nmod(world, justice)
cc(peace, and)
conj(justice, peace)
punct(yearn, .)
det(thing, all)
nsubj(possible, thing)
cop(possible, be)
root(ROOT, possible)
case(God, to)
obl(possible, God)
punct(choose, ,)
cc(choose, but)
nsubj(choose, he)
conj(possible, choose)
punct(choose, --)
advmod(choose, usually)
punct(choose, --)
mark(work, to)
advcl(choose, work)
case(people, through)
obl(work, people)
punct(possible, .)
advmod(sense, sometimes)
amod(people, such)
nsubj(sense, people)
root(ROOT, sense)
mark(use, that)
nsubj:pass(use, they)
aux(use, be)
aux:pass(use, be)
ccomp(sense, use)
punct(use, ;)
punct(use, ;)
advmod(ago, sometimes)
advmod(ago, not)
punct(not, .)
nummod(year, Fifteen)
obl:tmod(ago, year)
advmod(troubled, ago)
punct(troubled, ,)
conj(use, troubled)
case(tide, by)
det(tide, the)
amod(tide, rise)
obl(troubled, tide)
case(materialism, of)
nmod(tide, materialism)
case(world, in)
det(world, the)
amod(world, post-war)
nmod(materialism, world)
punct(ask, ,)
det(businessman, a)
nsubj(ask, businessman)
cc(minister, and)
det(minister, a)
conj(businessman, minister)
conj(sense, ask)
obj(ask, themselves)
mark(be, if)
expl(be, there)
aux(be, might)
advmod(be, not)
advcl(ask, be)
det(place, a)
nsubj(be, place)
case(magazine, for)
det(magazine, a)
amod(magazine, small)
nmod(place, magazine)
case(which, in)
obl(set, which)
nsubj(set, man)
cc(woman, and)
conj(man, woman)
punct(man, ,)
advmod(creed, regardless)
case(creed, of)
nmod(man, creed)
cc(color, or)
conj(creed, color)
punct(set, ,)
aux(set, could)
acl:relcl(magazine, set)
compound:prt(set, forth)
advmod(conviction, boldly)
nmod:poss(conviction, they)
amod(conviction, religious)
obj(set, conviction)
cc(bear, and)
conj(set, bear)
obj(bear, witness)
case(power, to)
det(power, the)
obl(bear, power)
case(faith, of)
nmod(power, faith)
mark(solve, to)
advcl(bear, solve)
det(problem, the)
amod(problem, endless)
obj(solve, problem)
case(living, of)
nmod(problem, living)
punct(sense, .)
det(businessman, the)
nsubj(Raymond, businessman)
cop(Raymond, be)
root(ROOT, Raymond)
flat(Raymond, Thornburg)
punct(Raymond, .)
det(minister, the)
nsubj(Norman, minister)
cop(Norman, be)
root(ROOT, Norman)
flat(Norman, Vincent)
flat(Norman, Peale)
punct(Norman, .)
cc(have, neither)
conj(Norman, have)
det(experience, any)
compound(experience, publish)
obj(have, experience)
punct(have, ,)
cc(have, but)
nsubj(have, they)
conj(Norman, have)
obj(have, faith)
case(idea, in)
nmod:poss(idea, they)
obl(have, idea)
punct(Norman, .)
nsubj(borrow, they)
root(ROOT, borrow)
det(typewriter, a)
obj(borrow, typewriter)
punct(raise, ,)
conj(borrow, raise)
advmod($, about)
obj(raise, $)
nummod($, 2,000)
case(contribution, in)
obl(raise, contribution)
punct(hire, ,)
conj(borrow, hire)
det(secretary, a)
obj(hire, secretary)
punct(persuade, ,)
conj(borrow, persuade)
det(couple, a)
obj(persuade, couple)
case(man, of)
amod(man, young)
nmod(couple, man)
mark(join, to)
advcl(persuade, join)
obj(join, they)
case(pay, for)
advmod(pay, almost)
det(pay, no)
obl(join, pay)
cc(begin, and)
conj(join, begin)
xcomp(begin, mailing)
compound:prt(mailing, out)
det(collection, a)
obj(mailing, collection)
case(leaflet, of)
amod(leaflet, unstapl)
nmod(collection, leaflet)
obj(call, that)
nsubj(call, they)
acl:relcl(leaflet, call)
obj(call, guidepost)
punct(borrow, .)
case(magazine, compare)
case(magazine, to)
det(magazine, the)
amod(magazine, big)
punct(magazine, ,)
amod(magazine, establish)
obl(seem, magazine)
punct(seem, ,)
nmod:poss(effort, my)
amod(effort, first)
nsubj(seem, effort)
root(ROOT, seem)
xcomp(seem, feeble)
advmod(seem, indeed)
punct(seem, .)
cc(have, but)
case(start, from)
det(start, the)
obl(have, start)
nsubj(have, they)
root(ROOT, have)
nummod(ingredient, two)
amod(ingredient, important)
obj(have, ingredient)
punct(ingredient, :)
appos(ingredient, sincerity)
cc(realism, and)
conj(sincerity, realism)
punct(have, .)
det(people, the)
nsubj(sincere, people)
nsubj(tell, who)
acl:relcl(people, tell)
det(story, the)
obj(tell, story)
cop(sincere, be)
root(ROOT, sincere)
punct(sincere, .)
cc(true, and)
det(story, the)
nsubj(true, story)
nsubj(tell, they)
acl:relcl(story, tell)
cop(true, be)
root(ROOT, true)
punct(true, .)
case(example, for)
obl(true, example)
punct(true, ,)
advmod(example, early)
case(life, in)
nmod:poss(life, my)
obl(early, life)
punct(true, ,)
mark(want, when)
nsubj(want, one)
case(worker, of)
nmod:poss(worker, my)
amod(worker, editorial)
nmod(one, worker)
advcl(true, want)
mark(find, to)
xcomp(want, find)
compound:prt(find, out)
advmod(meet, how)
nsubj(meet, church)
cc(organization, and)
amod(organization, philanthropic)
conj(church, organization)
ccomp(find, meet)
det(need, the)
obj(meet, need)
case(York, of)
compound(York, New)
nmod(need, York)
case(York, 's)
case(outer, down)
punct(outer, -)
cc(outer, and)
punct(outer, -)
nmod(need, outer)
punct(ask, ,)
nsubj(ask, he)
aux(ask, do)
advmod(ask, not)
advmod(ask, just)
parataxis(meet, ask)
obj(ask, question)
punct(true, .)
nsubj(go, Len)
flat(Len, LeSourd)
root(ROOT, go)
cc(live, and)
conj(go, live)
case(slum, in)
det(slum, the)
obl(live, slum)
case(sidewalk, as)
det(sidewalk, a)
obl(live, sidewalk)
amod(sidewalk, derelict)
case(day, for)
nummod(day, ten)
obl(derelict, day)
punct(go, .)
nsubj(ago, that)
cop(ago, be)
advmod(13, nearly)
nummod(year, 13)
obl:npmod(ago, year)
root(ROOT, ago)
punct(ago, .)
nsubj(editor, Len)
flat(Len, LeSourd)
cop(editor, be)
nmod:poss(editor, my)
amod(editor, executive)
root(ROOT, editor)
obl:tmod(editor, today)
punct(editor, .)
nsubj(familiar, many)
case(you, of)
nmod(many, you)
cop(familiar, be)
root(ROOT, familiar)
punct(familiar, ,)
nsubj(sure, I)
cop(sure, be)
parataxis(familiar, sure)
punct(sure, ,)
case(story, with)
det(story, the)
obl(sure, story)
case(struggle, of)
nmod:poss(struggle, my)
amod(struggle, early)
nmod(story, struggle)
punct(story, :)
det(fire, the)
nsubj(destroy, fire)
case(January, in)
nmod(fire, January)
punct(January, ,)
nummod(January, 1947)
punct(destroy, ,)
nsubj(destroy, that)
parataxis(familiar, destroy)
obj(destroy, everything)
punct(everything, --)
advmod(list, even)
nmod:poss(list, we)
amod(list, precious)
appos(everything, list)
case(subscriber, of)
nmod(list, subscriber)
punct(familiar, .)
det(help, the)
root(ROOT, help)
cc(sympathy, and)
conj(help, sympathy)
nsubj(forthcoming, that)
cop(forthcoming, be)
acl:relcl(help, forthcoming)
case(everywhere, from)
obl(forthcoming, everywhere)
punct(help, .)
det(crisis, the)
nsubj(seem, crisis)
advmod(crisis, later)
mark(seem, on)
mark(seem, when)
nsubj(seem, debt)
root(ROOT, seem)
advmod(seem, about)
mark(overwhelm, to)
xcomp(seem, overwhelm)
obj(overwhelm, I)
punct(on, .)
nsubj(when, that)
cop(when, be)
root(ROOT, when)
det(woman, a)
amod(woman, remarkable)
nsubj(come, woman)
punct(woman, ,)
appos(woman, Teresa)
flat(Teresa, Durlach)
punct(come, ,)
advcl(when, come)
case(aid, to)
nmod:poss(aid, my)
obl(come, aid)
punct(aid, --)
advmod(much, not)
advmod(much, so)
parataxis(come, much)
case(money, with)
obl(much, money)
punct(much, ,)
case(wisdom, as)
fixed(as, with)
obl(much, wisdom)
cc(courage, and)
conj(wisdom, courage)
punct(when, .)
punct(when, ``)
nsubj(live, you)
aux(live, be)
advmod(live, not)
root(ROOT, live)
compound:prt(live, up)
case(principle, to)
nmod:poss(principle, you)
amod(principle, own)
obl(live, principle)
punct(live, '')
punct(live, ,)
nsubj(tell, she)
parataxis(live, tell)
nmod:poss(people, my)
amod(people, discourage)
obj(tell, people)
punct(live, .)
punct(live, ``)
nsubj(preoccupy, you)
cop(preoccupy, be)
advmod(preoccupy, so)
root(ROOT, preoccupy)
mark(let, that)
nsubj(let, you)
aux(let, have)
ccomp(preoccupy, let)
nmod:poss(faith, you)
obj(let, faith)
xcomp(let, grow)
xcomp(grow, dim)
punct(preoccupy, .)
obj(want, what)
aux(want, do)
nsubj(want, you)
root(ROOT, want)
punct(want, --)
det(subscriber, a)
compound(thousand, hundred)
nummod(subscriber, thousand)
obj(want, subscriber)
punct(want, ?)
punct(want, ?)
root(ROOT, visualize)
obj(visualize, they)
punct(visualize, ,)
advmod(visualize, then)
punct(believe, ,)
parataxis(visualize, believe)
nsubj(get, you)
aux(get, be)
ccomp(believe, get)
obj(get, they)
punct(have, ,)
cc(have, and)
nsubj(have, you)
aux(have, will)
conj(visualize, have)
obj(have, they)
punct(visualize, '')
punct(visualize, !)
punct(visualize, !)
cc(become, and)
det(subscriber, the)
nummod(subscriber, 100,000)
nsubj(become, subscriber)
root(ROOT, become)
det(reality, a)
xcomp(become, reality)
punct(reality, .)
cc(500,000, and)
advmod(500,000, then)
root(ROOT, 500,000)
punct(500,000, .)
cc(circulation, and)
advmod(circulation, now)
det(guidepost, a)
nummod(January, million)
compound(guidepost, January)
nsubj(circulation, guidepost)
cop(circulation, be)
case(circulation, in)
root(ROOT, circulation)
punct(circulation, .)
case(growth, with)
nmod:poss(growth, we)
obl(come, growth)
root(ROOT, come)
obj(come, expansion)
case(field, into)
amod(field, new)
obl(come, field)
case(service, of)
nmod(field, service)
punct(come, . )
obl:tmod(distribute, today)
advmod(thousand, more)
fixed(more, than)
det(thousand, a)
nummod(industry, thousand)
nsubj(distribute, industry)
root(ROOT, distribute)
obj(distribute, I)
case(employee, to)
nmod:poss(employee, they)
obl(distribute, employee)
punct(distribute, .)
nsubj(say, they)
root(ROOT, say)
det(personnel, all)
nsubj(have, personnel)
ccomp(say, have)
amod(need, spiritual)
obj(have, need)
obj(help, which)
nsubj(help, guidepost)
acl:relcl(need, help)
mark(meet, to)
xcomp(help, meet)
punct(say, .)
nsubj(make, hundred)
case(club, of)
amod(club, civic)
nmod(hundred, club)
punct(firm, ,)
compound(firm, business)
conj(club, firm)
cc(individual, and)
conj(club, individual)
root(ROOT, make)
obj(make, I)
xcomp(make, available)
case(teacher, to)
compound(teacher, school)
obl(available, teacher)
case(land, throughout)
det(land, the)
nmod(teacher, land)
punct(make, .)
nsubj(say, they)
root(ROOT, say)
nsubj(help, it)
ccomp(say, help)
obj(help, they)
xcomp(help, bring)
advmod(bring, back)
case(school, into)
obl(bring, school)
det(value, the)
amod(value, spiritual)
cc(moral, and)
conj(spiritual, moral)
obj(bring, value)
case(which, on)
obl(build, which)
det(country, this)
nsubj:pass(build, country)
aux:pass(build, be)
acl:relcl(value, build)
punct(say, .)
nsubj:pass(send, thousand)
case(copy, of)
amod(copy, free)
nmod(thousand, copy)
aux:pass(send, be)
parataxis(say, send)
det(month, each)
obl:tmod(send, month)
case(chaplain, to)
obl(send, chaplain)
case(force, in)
det(force, the)
amod(force, armed)
nmod(chaplain, force)
punct(library, ,)
case(library, to)
compound(library, prison)
nmod(force, library)
cc(hospital, and)
case(hospital, to)
conj(library, hospital)
advmod(hospital, everywhere)
punct(say, .)
amod(people, Bedridden)
nsubj(say, people)
root(ROOT, say)
nsubj(easy, I)
cop(easy, be)
ccomp(say, easy)
mark(hold, to)
advcl(easy, hold)
punct(say, --)
cc(read, and)
conj(easy, read)
punct(read, .)
nummod(year, three)
obl:tmod(ago, year)
advmod(become, ago)
nsubj(become, it)
parataxis(say, become)
xcomp(become, possible)
mark(finance, to)
advcl(possible, finance)
det(edition, a)
compound(edition, Braille)
obj(finance, edition)
case(reader, for)
amod(reader, blind)
nmod(edition, reader)
punct(edition, .)
case(year, throughout)
det(year, these)
amod(year, exciting)
obl(fortunate, year)
nsubj(fortunate, I)
aux(fortunate, have)
cop(fortunate, be)
parataxis(say, fortunate)
obl(fortunate, for)
punct(fortunate, ,)
mark(offer, although)
nsubj(offer, I)
aux(offer, have)
advmod(offer, never)
advcl(find, offer)
amod(inducement, great)
amod(inducement, financial)
obj(offer, inducement)
punct(find, ,)
nsubj(find, talent)
aux(find, have)
parataxis(say, find)
nmod:poss(way, its)
obj(find, way)
case(I, to)
nmod(way, I)
punct(find, :)
obj(find, William)
flat(William, Boal)
nsubj(organize, who)
advmod(organize, so)
advmod(organize, ably)
acl:relcl(William, organize)
compound(operation, business)
obj(organize, operation)
punct(say, ;)
punct(say, ;)
root(ROOT, John)
root(ROOT, Beach)
nsubj(guide, who)
acl:relcl(Beach, guide)
obj(guide, circulation)
punct(Beach, ;)
punct(Beach, ;)
appos(Beach, irve)
flat(irve, Granville)
cc(Nelson, and)
conj(irve, Nelson)
flat(Nelson, rector)
nsubj(travel, who)
acl:relcl(irve, travel)
advmod(call, widely)
advcl(travel, call)
case(firm, on)
compound(firm, business)
obl(call, firm)
punct(Beach, .)
advcl(cover, search)
case(best, for)
det(best, the)
obl(search, best)
case(story, in)
amod(story, spiritual)
obl(best, story)
punct(cover, ,)
nmod:poss(editor, my)
compound(editor, rove)
nsubj(cover, editor)
root(ROOT, cover)
advmod(only, not)
cc:preconj(country, only)
det(country, the)
obj(cover, country)
punct(world, ,)
cc(world, but)
det(world, the)
amod(world, whole)
conj(country, world)
punct(cover, .)
nsubj(twice, Glenn)
flat(Glenn, Kittler)
aux(twice, have)
cop(twice, be)
root(ROOT, twice)
case(Africa, to)
obl(twice, Africa)
punct(twice, ,)
mark(spend, once)
advcl(twice, spend)
det(week, a)
obl:tmod(spend, week)
case(Dr., with)
obl(spend, Dr.)
flat(Dr., albert)
flat(Dr., Schweitzer)
punct(Dr., .)
amod(summer, last)
obl:tmod(Alaska, summer)
nsubj(Alaska, John)
cc(Elizabeth, and)
conj(John, Elizabeth)
flat(Elizabeth, Sherrill)
cop(Alaska, be)
case(Alaska, in)
advcl(return, Alaska)
punct(return, .)
nsubj(return, Van)
flat(Van, Varner)
advmod(return, recently)
parataxis(twice, return)
case(Russia, from)
obl(return, Russia)
punct(return, .)
advmod(month, twice)
det(month, a)
obl:tmod(meet, month)
det(staff, the)
amod(staff, editorial)
nsubj(meet, staff)
parataxis(return, meet)
case(York, in)
compound(York, New)
obl(meet, York)
case(supper, for)
det(supper, a)
amod(supper, early)
obl(meet, supper)
punct(supper, ,)
advmod(evening, then)
det(evening, a)
amod(evening, long)
appos(supper, evening)
case(idea-exchange, of)
nmod(evening, idea-exchange)
punct(meet, .)
case(table, around)
det(table, the)
obl(sit, table)
root(ROOT, sit)
xcomp(sit, Protestant)
punct(Catholic, ,)
conj(Protestant, Catholic)
punct(Jew, ,)
cc(Jew, and)
conj(Protestant, Jew)
punct(sit, .)
nsubj(contribute, each)
parataxis(sit, contribute)
obj(contribute, something)
amod(something, different)
punct(something, ,)
cc(something, and)
conj(contribute, something)
amod(something, important)
punct(sit, :)
root(ROOT, Ruth)
flat(Ruth, Peale)
punct(Ruth, ,)
nmod:poss(experience, she)
amod(experience, wide)
appos(Ruth, experience)
case(work, in)
compound(work, church)
nmod(experience, work)
punct(experience, ;)
punct(experience, ;)
compound(field, Sidney)
root(ROOT, field)
punct(field, ,)
appos(field, year)
case(experience, of)
nmod(year, experience)
case(columnist, as)
det(columnist, a)
compound(York, New)
compound(columnist, York)
nmod(field, columnist)
punct(field, ;)
punct(field, ;)
nsubj(perception, Catherine)
flat(Catherine, Marshall)
flat(Catherine, LeSourd)
punct(Catherine, ,)
det(insight, the)
appos(Catherine, insight)
nsubj(make, that)
aux(make, have)
acl:relcl(insight, make)
nmod:poss(book, she)
obj(make, book)
obl:npmod(famous, world)
punct(famous, -)
xcomp(make, famous)
cc(norm, and)
conj(famous, norm)
flat(norm, Mullendore)
punct(perception, ,)
det(perception, the)
amod(perception, keen)
root(ROOT, perception)
case(executive, of)
det(executive, a)
compound(executive, advertising)
nmod(perception, executive)
punct(perception, .)
expl(be, there)
root(ROOT, be)
nsubj(be, people)
nsubj(travel, who)
acl:relcl(people, travel)
amod(distance, long)
obj(travel, distance)
mark(assure, to)
advcl(travel, assure)
nmod:poss(existence, my)
amod(existence, continue)
obj(assure, existence)
punct(be, .)
nsubj(fly, Elaine)
flat(Elaine, St.)
flat(Elaine, Johns)
aux(fly, may)
root(ROOT, fly)
advmod(fly, in)
case(Coast, from)
det(Coast, the)
compound(Coast, West)
obl(fly, Coast)
case(meeting, for)
det(meeting, the)
amod(staff, editorial)
compound(meeting, staff)
obl(fly, meeting)
punct(fly, .)
nsubj(get, Starr)
flat(Starr, Jones)
root(ROOT, get)
compound:prt(get, up)
det(morning, every)
obl:tmod(get, morning)
case(o'clock, at)
nummod(o'clock, five)
obl(get, o'clock)
punct(milk, ,)
conj(get, milk)
nmod:poss(cow, he)
compound(cow, family)
obj(milk, cow)
punct(attend, ,)
conj(get, attend)
case(chore, to)
compound(chore, farm)
obl(attend, chore)
punct(take, ,)
cc(take, and)
advmod(take, then)
conj(get, take)
det(trip, a)
nummod(hour, two)
punct(hour, -)
compound(trip, hour)
compound(trip, train)
obj(take, trip)
case(York, to)
compound(York, New)
nmod(trip, York)
punct(get, .)
nsubj(come, Arthur)
flat(Arthur, Gordon)
root(ROOT, come)
advmod(come, once)
det(month, a)
obl:tmod(come, month)
det:predet(way, all)
det(way, the)
obl:tmod(come, way)
case(Georgia, from)
obl(come, Georgia)
punct(come, .)
nsubj(see, we)
aux(see, have)
advmod(see, also)
root(ROOT, see)
det(power, the)
obj(see, power)
case(faith, of)
nmod(power, faith)
case(work, at)
nmod(power, work)
case(we, among)
nmod(work, we)
punct(see, .)
parataxis(see, rose)
flat(rose, weiss)
punct(rose, ,)
nsubj(handle, who)
acl:relcl(rose, handle)
det:predet(request, all)
det(request, the)
compound(request, prayer)
punct(request, -)
obj(handle, request)
obj(receive, that)
nsubj(receive, we)
acl:relcl(request, receive)
punct(answer, ,)
advcl(receive, answer)
det(letter, each)
obj(answer, letter)
advmod(answer, personally)
punct(have, ,)
conj(see, have)
det(selflessness, the)
amod(selflessness, serene)
obj(have, selflessness)
nsubj(come, that)
acl:relcl(selflessness, come)
mark(suffer, from)
advcl(come, suffer)
punct(have, :)
nsubj(have, she)
aux(have, have)
parataxis(come, have)
amod(operation, many)
amod(operation, major)
obj(have, operation)
punct(get, ,)
cc(get, and)
advmod(get, now)
conj(have, get)
advmod(get, about)
case(way, in)
det(way, a)
amod(way, limited)
obl(get, way)
case(brace, on)
nmod(way, brace)
cc(crutch, and)
conj(brace, crutch)
punct(see, .)
advmod(stricken, recently)
punct(stricken, ,)
nsubj(stricken, John)
flat(John, Sherrill)
cop(stricken, be)
root(ROOT, stricken)
case(one, with)
obl(stricken, one)
case(form, of)
det(form, the)
amod(form, deadliest)
nmod(one, form)
case(cancer, of)
nmod(form, cancer)
punct(stricken, .)
nsubj(pray, we)
root(ROOT, pray)
case(John, for)
obl(pray, John)
punct(pray, ,)
case(surgery, during)
obl(pray, surgery)
punct(pray, ,)
nsubj(ask, we)
parataxis(pray, ask)
obj(ask, other)
mark(pray, to)
xcomp(ask, pray)
punct(pray, ;)
punct(pray, ;)
nsubj:pass(throw, all)
case(country, over)
det(country, the)
nmod(all, country)
det(shield, a)
amod(shield, massive)
nsubj:pass(throw, shield)
case(prayer, of)
nmod(shield, prayer)
aux:pass(throw, be)
parataxis(pray, throw)
case(he, around)
obl(throw, he)
punct(pray, .)
obl:tmod(go, today)
det(cancer, the)
nsubj:pass(go, cancer)
aux:pass(go, be)
root(ROOT, go)
punct(go, .)
advmod(fair, perhaps)
expl(fair, it)
cop(fair, be)
advmod(fair, not)
root(ROOT, fair)
mark(mention, to)
csubj(fair, mention)
det(people, some)
obj(mention, people)
mark(mention, without)
advcl(mention, mention)
obj(mention, all)
punct(fair, .)
cc(resent, but)
punct(see, ,)
nsubj(see, you)
parataxis(resent, see)
punct(resent, ,)
nsubj(resent, those)
nsubj:pass(mention, who)
aux:pass(mention, be)
advmod(mention, not)
acl:relcl(those, mention)
aux(resent, will)
advmod(resent, not)
root(ROOT, resent)
obj(resent, it)
punct(resent, .)
nsubj(kind, that)
cop(kind, be)
det(kind, the)
root(ROOT, kind)
case(people, of)
nmod(kind, people)
nsubj(be, they)
acl:relcl(people, be)
punct(kind, .)
advmod(think, perhaps)
nsubj(think, you)
root(ROOT, think)
det(meeting, the)
amod(meeting, editorial)
nsubj(affair, meeting)
cop(affair, be)
amod(affair, solemn)
ccomp(think, affair)
punct(affair, ,)
det(little, a)
obl:npmod(sanctimonious, little)
appos(affair, sanctimonious)
punct(think, ?)
punct(think, ?)
advmod(so, not)
advmod(serious, so)
punct(so, .)
root(ROOT, serious)
punct(serious, ,)
discourse(serious, yes)
punct(laughter, ,)
cc(laughter, but)
advmod(laughter, also)
amod(laughter, much)
conj(serious, laughter)
punct(laughter, .)
amod(division, sharp)
conj(serious, division)
case(opinion, of)
nmod(division, opinion)
punct(too, ,)
conj(opinion, too)
punct(debate, ,)
cc(debate, and)
amod(debate, strenuous)
conj(opinion, debate)
punct(division, .)
expl(be, there)
root(ROOT, be)
compound(wracking, brain)
punct(wracking, -)
amod(search, wracking)
nsubj(be, search)
case(word, for)
det(word, the)
amod(word, right)
nmod(search, word)
punct(search, ,)
det(phrase, the)
amod(phrase, best)
appos(search, phrase)
punct(phrase, ,)
det(idea, the)
advmod(helpful, most)
amod(idea, helpful)
appos(phrase, idea)
punct(be, .)
cc(be, and)
expl(be, there)
root(ROOT, be)
advmod(be, also)
nsubj(be, something)
amod(something, intangible)
nsubj(hover, that)
acl:relcl(something, hover)
case(table, around)
det(table, the)
obl(hover, table)
punct(be, . )
det(word, a)
amod(word, good)
root(ROOT, word)
case(fellowship, for)
nsubj(fellowship, it)
cop(fellowship, be)
nmod(word, fellowship)
punct(word, . )
det(word, a)
amod(word, shorter)
nsubj(be, word)
root(ROOT, be)
punct(be, .)
det(meeting, each)
nsubj(start, meeting)
ccomp(be, start)
case(prayer, with)
det(prayer, a)
obl(start, prayer)
punct(prayer, ,)
acl(prayer, offer)
advmod(offer, spontaneously)
case(member, by)
nummod(member, one)
obl(offer, member)
case(group, of)
det(group, the)
nmod(member, group)
punct(be, .)
nsubj(take, it)
root(ROOT, take)
amod(form, many)
obj(take, form)
punct(form, ,)
det(prayer, this)
appos(form, prayer)
punct(request, ,)
cc(request, but)
case(essence, in)
obl(request, essence)
nsubj(request, it)
cop(request, be)
advmod(request, always)
det(request, a)
conj(take, request)
case(guidance, for)
nmod(request, guidance)
punct(request, ,)
case(mind, for)
amod(mind, open)
nmod(request, mind)
cc(heart, and)
amod(heart, gentle)
conj(mind, heart)
punct(honesty, ,)
case(honesty, for)
nmod(request, honesty)
cc(sincerity, and)
conj(honesty, sincerity)
punct(wisdom, ,)
case(wisdom, for)
det(wisdom, the)
nmod(honesty, wisdom)
cc(insight, and)
det(insight, the)
conj(wisdom, insight)
nsubj(help, that)
aux(help, will)
acl:relcl(insight, help)
nmod:poss(reader, guidepost)
case(guidepost, 's)
obj(help, reader)
punct(take, .)
case(you, for)
nmod(reader, you)
punct(reader, ,)
nsubj(part, reader)
punct(reader, ,)
cop(part, be)
det(part, a)
det(important, all)
punct(important, -)
amod(part, important)
root(ROOT, part)
case(experiment, of)
det(experiment, the)
amod(experiment, spiritual)
nmod(part, experiment)
nsubj(guidepost, that)
cop(guidepost, be)
acl:relcl(experiment, guidepost)
punct(part, . )
nsubj(need, I)
root(ROOT, need)
nmod:poss(support, you)
obj(need, support)
punct(support, ,)
nmod:poss(criticism, you)
conj(support, criticism)
punct(support, ,)
nmod:poss(encouragement, you)
conj(support, encouragement)
punct(support, ,)
nmod:poss(prayer, you)
conj(support, prayer)
punct(need, . )
nsubj(magazine, I)
cop(magazine, be)
det(magazine, a)
root(ROOT, magazine)
punct(magazine, ;)
punct(magazine, ;)
nmod:poss(name, my)
nsubj(guidepost, name)
cop(guidepost, be)
parataxis(magazine, guidepost)
punct(magazine, .)
nmod:poss(message, my)
nsubj(same, message)
punct(same, ,)
obl:tmod(same, today)
punct(same, ,)
cop(same, be)
det(same, the)
root(ROOT, same)
mark(ago, as)
nsubj(ago, it)
cop(ago, be)
nummod(year, 15)
obl:npmod(ago, year)
advcl(same, ago)
punct(same, :)
mark(be, that)
expl(be, there)
parataxis(same, be)
nsubj(be, goodness)
case(people, in)
nmod(goodness, people)
punct(strength, ,)
cc(strength, and)
conj(goodness, strength)
cc(love, and)
conj(strength, love)
case(God, in)
nmod(strength, God)
punct(same, .)
root(ROOT, May)
nsubj(bless, he)
root(ROOT, bless)
obj(bless, you)
det(you, all)
punct(bless, .)
nsubj:pass(fill, Havana)
aux:pass(fill, be)
root(ROOT, fill)
case(excitement, with)
det(excitement, a)
obl(fill, excitement)
obj(see, which)
nsubj(see, you)
aux(see, could)
acl:relcl(excitement, see)
case(brightness, in)
det(brightness, the)
obl(see, brightness)
case(eye, of)
nmod:poss(eye, man)
case(man, 's)
nmod(brightness, eye)
cc(hear, and)
conj(see, hear)
case(pitch, in)
det(pitch, the)
obl(hear, pitch)
case(voice, of)
nmod:poss(voice, they)
nmod(pitch, voice)
punct(fill, .)
det(dictator, the)
amod(dictator, hate)
nsubj(fly, dictator)
nsubj(fleed, Batista)
aux(fleed, have)
acl:relcl(dictator, fleed)
punct(fly, .)
nsubj(fly, Rumors)
root(ROOT, fly)
case(lip, from)
obl(fly, lip)
case(lip, to)
obl(fly, lip)
mark(way, that)
nsubj(way, Fidel)
flat(Fidel, Castro)
cop(way, be)
case(way, on)
nmod:poss(way, he)
ccomp(fly, way)
case(Havana, to)
nmod(way, Havana)
punct(way, ,)
acl(way, come)
case(mountain, from)
det(mountain, the)
obl(come, mountain)
advmod(fight, where)
nsubj(fight, he)
aux(fight, have)
acl:relcl(mountain, fight)
obj(fight, Batista)
case(year, for)
nummod(year, five)
obl(fight, year)
punct(fly, .)
advmod(fill, already)
det(city, the)
nsubj:pass(fill, city)
aux:pass(fill, be)
root(ROOT, fill)
case(Barbudos, with)
obl(fill, Barbudos)
punct(Barbudos, ,)
det(revolutionary, the)
amod(revolutionary, beard)
punct(revolutionary, ,)
obl:npmod(dirty, war)
punct(dirty, -)
amod(revolutionary, dirty)
appos(Barbudos, revolutionary)
punct(Barbudos, ,)
advcl(fill, carry)
obj(carry, carbine)
punct(wave, ,)
advcl(carry, wave)
case(crowd, to)
det(crowd, the)
obl(wave, crowd)
nsubj(line, that)
acl:relcl(crowd, line)
det(Prado, the)
obj(line, Prado)
punct(line, .)
cc(come, and)
advmod(come, then)
nsubj(come, Castro)
nmod:npmod(Castro, himself)
aux(come, do)
conj(fill, come)
punct(come, ,)
xcomp(come, bearded)
punct(smile, ,)
conj(come, smile)
punct(come, ;)
punct(come, ;)
cc(see, yet)
mark(look, if)
nsubj(look, you)
advcl(see, look)
advmod(look, closely)
nsubj(see, you)
aux(see, would)
conj(fill, see)
mark(pick, that)
nmod:poss(eye, he)
nsubj(pick, eye)
aux(pick, do)
advmod(pick, not)
ccomp(see, pick)
compound:prt(pick, up)
det(smile, the)
obj(pick, smile)
case(lip, on)
nmod:poss(lip, he)
obl(pick, lip)
punct(fill, .)
case(first, at)
obl(happy, first)
nsubj(happy, I)
cop(happy, be)
root(ROOT, happy)
mark(throw, to)
xcomp(happy, throw)
det(support, the)
obj(throw, support)
case(newspaper, of)
nmod:poss(newspaper, we)
nmod(support, newspaper)
case(man, behind)
det(man, this)
obl(throw, man)
punct(happy, . )
nsubj(sure, I)
cop(sure, be)
root(ROOT, sure)
mark(happy, that)
nsubj(happy, Castro)
cop(happy, be)
ccomp(sure, happy)
punct(happy, ,)
advmod(happy, too)
punct(happy, ,)
case(support, about)
det(support, that)
obl(happy, support)
punct(sure, .)
root(ROOT, Diario)
compound(Marina, De)
compound(Marina, La)
nsubj(paper, Marina)
cop(paper, be)
det(paper, the)
amod(paper, oldest)
cc(influential, and)
advmod(influential, most)
conj(oldest, influential)
root(ROOT, paper)
case(Cuba, in)
nmod(paper, Cuba)
punct(paper, ,)
case(reputation, with)
det(reputation, a)
nmod(paper, reputation)
mark(speak, for)
acl(reputation, speak)
compound:prt(speak, out)
case(tyranny, against)
obl(speak, tyranny)
punct(paper, .)
nmod:poss(grandfather, my)
nsubj:pass(stone, grandfather)
aux(stone, have)
aux:pass(stone, be)
root(ROOT, stone)
case(editorial, because)
fixed(because, of)
nmod:poss(editorial, he)
obl(stone, editorial)
punct(stone, .)
nmod:poss(memory, my)
amod(memory, own)
amod(memory, earliest)
nsubj(exile, memory)
cop(exile, be)
case(exile, of)
root(ROOT, exile)
punct(exile, :)
nmod:poss(brother, my)
nummod(brother, three)
nsubj(take, brother)
cc(take, and)
nsubj:pass(take, I)
aux:pass(take, be)
parataxis(exile, take)
advmod(take, often)
case(States, to)
det(States, the)
compound(States, United)
obl(take, States)
punct(take, ``)
mark(visit, to)
advcl(take, visit)
obj(visit, relative)
punct(visit, '')
mark(stay, while)
nmod:poss(father, my)
nsubj(stay, father)
advcl(visit, stay)
advmod(stay, on)
mark(fight, to)
advcl(stay, fight)
det(dictator, the)
obj(fight, dictator)
obj(fight, Machado)
punct(stay, .)
mark(turn, when)
nsubj(turn, it)
cop(turn, be)
nmod:poss(turn, my)
advcl(print, turn)
punct(turn, ,)
nsubj(print, I)
punct(print, ,)
advmod(print, too)
punct(print, ,)
parataxis(exile, print)
det(truth, the)
obj(print, truth)
mark(know, as)
nsubj(know, I)
advcl(print, know)
obj(know, it)
case(Batista, about)
obl(know, Batista)
punct(rejoice, ,)
cc(rejoice, and)
conj(know, rejoice)
mark(see, to)
xcomp(rejoice, see)
nmod:poss(regime, he)
obj(see, regime)
xcomp(see, topple)
punct(exile, .)
nsubj(aware, none)
case(we, of)
nmod(none, we)
cop(aware, be)
root(ROOT, aware)
mark(ahead, that)
det(fight, the)
amod(fight, biggest)
nsubj(ahead, fight)
cop(ahead, be)
advmod(ahead, still)
ccomp(aware, ahead)
punct(aware, . )
nsubj(full, I)
cop(full, be)
root(ROOT, full)
case(hope, of)
obl(full, hope)
mark(come, as)
nsubj(come, Fidel)
flat(Fidel, Castro)
advcl(full, come)
case(Havana, into)
obl(come, Havana)
punct(full, .)
case(week, within)
det(week, a)
obl(come, week)
punct(begin, ,)
advmod(begin, however)
punct(begin, ,)
nsubj(begin, I)
parataxis(full, begin)
mark(suspect, to)
xcomp(begin, suspect)
mark(wrong, that)
nsubj(wrong, something)
cop(wrong, be)
ccomp(suspect, wrong)
punct(bring, .)
case(Castro, for)
nsubj(bring, Castro)
aux(bring, be)
ccomp(suspect, bring)
obj(bring, Cuba)
advmod(freedom, not)
obj(bring, freedom)
punct(hatred, ,)
cc(hatred, but)
conj(bring, hatred)
punct(full, .)
nsubj(spend, he)
root(ROOT, spend)
amod(hour, long)
obj(spend, hour)
mark(spitting, before)
det(tv, the)
nsubj(spitting, tv)
advcl(spend, spitting)
compound:prt(spitting, out)
obj(spitting, promise)
case(revenge, of)
nmod(promise, revenge)
punct(spend, .)
nsubj(show, he)
root(ROOT, show)
obj(show, we)
advmod(deal, how)
nsubj(deal, he)
ccomp(show, deal)
case(enemy, with)
nmod:poss(enemy, he)
obl(deal, enemy)
punct(show, :)
nsubj(execute, he)
parataxis(show, execute)
obj(execute, they)
case(camera, before)
compound(camera, tv)
obl(execute, camera)
punct(show, .)
case(set, on)
compound(set, home)
obl(watch, set)
nsubj(watch, child)
aux(watch, be)
root(ROOT, watch)
det(throe, the)
compound(throe, death)
obj(watch, throe)
case(man, of)
nmod(throe, man)
nsubj:pass(shoot, who)
aux:pass(shoot, be)
acl:relcl(man, shoot)
case(paredon, before)
det(paredon, the)
obl(shoot, paredon)
punct(paredon, ,)
det(wall, the)
compound(wall, fire)
appos(paredon, wall)
punct(reform, .)
nmod:poss(reform, Castro)
case(Castro, 's)
appos(paredon, reform)
punct(watch, ?)
punct(watch, ?)
nsubj(seem, he)
root(ROOT, seem)
xcomp(seem, bent)
mark(couple, on)
advcl(bent, couple)
obj(couple, they)
case(vengeance, with)
obl(couple, vengeance)
punct(seem, .)
amod(school, new)
nsubj(rise, school)
aux(rise, be)
root(ROOT, rise)
punct(go, ,)
cc(go, but)
case(this, with)
nsubj(go, this)
conj(rise, go)
det(proclamation, a)
amod(proclamation, harsh)
obj(go, proclamation)
punct(rise, :)
det(degree, any)
amod(degree, academic)
nsubj(earn, degree)
parataxis(rise, earn)
case(regime, during)
nmod:poss(regime, Batista)
case(Batista, 's)
obl(earn, regime)
cop(invalid, be)
ccomp(earn, invalid)
punct(rise, .)
amod(aid, Economic)
root(ROOT, aid)
punct(aid, ?)
punct(aid, ?)
nsubj(promise, he)
aux(promise, have)
root(ROOT, promise)
amod(housing, cheaper)
obj(promise, housing)
punct(promise, :)
advmod(cut, arbitrarily)
nsubj(cut, he)
parataxis(promise, cut)
det(rent, all)
obj(cut, rent)
case(half, in)
obl(cut, half)
punct(cut, ,)
mark(speculator, whether)
det(landlord, the)
nsubj(speculator, landlord)
cop(speculator, be)
det(speculator, a)
compound(speculator, millionaire)
advcl(cut, speculator)
cc(widow, or)
det(widow, a)
conj(speculator, widow)
nmod:poss(income, whose)
amod(income, only)
nsubj(rental, income)
cop(rental, be)
det(rental, the)
acl:relcl(widow, rental)
case(room, of)
det(room, a)
compound(room, spare)
nmod(rental, room)
punct(promise, .)
case(law, under)
det(law, another)
obl(seize, law)
punct(seize, ,)
nsubj:pass(seize, hundred)
case(farm, of)
nmod(hundred, farm)
aux:pass(seize, be)
root(ROOT, seize)
punct(seize, .)
compound(worker, farm)
nsubj(have, worker)
parataxis(seize, have)
nmod:poss(wage, they)
obj(have, wage)
xcomp(have, cut)
advmod(half, almost)
case(half, in)
obl(cut, half)
punct(seize, .)
case(this, of)
obl(pay, this)
punct(pay, ,)
advmod(cent, only)
nummod(cent, 50)
nsubj:pass(pay, cent)
det(day, a)
nmod:tmod(cent, day)
aux:pass(pay, be)
root(ROOT, pay)
case(cash, in)
obl(pay, cash)
punct(pay, ,)
det(rest, the)
nsubj:pass(pay, rest)
case(script, in)
nmod(rest, script)
amod(rest, usable)
advmod(Stores, only)
case(Stores, in)
punct(Stores, ``)
nmod:poss(Stores, People)
case(People, 's)
obl(usable, Stores)
punct(Stores, '')
punct(pay, . )
det(suspicion, a)
nsubj(grow, suspicion)
aux(grow, be)
root(ROOT, grow)
mark(Communist, that)
nsubj(Communist, Fidel)
flat(Fidel, Castro)
cop(Communist, be)
det(Communist, a)
ccomp(grow, Communist)
punct(grow, .)
case(mind, in)
nmod:poss(mind, my)
obl(begin, mind)
punct(begin, ,)
nsubj(begin, I)
root(ROOT, begin)
mark(review, to)
xcomp(begin, review)
punct(review, :)
nmod:poss(use, he)
obj(review, use)
case(hate, of)
nmod(use, hate)
mark(gain, to)
acl(use, gain)
obj(gain, support)
punct(use, ;)
punct(use, ;)
nmod:poss(people, he)
nmod:poss(court, people)
case(people, 's)
appos(use, court)
punct(begin, ;)
punct(court, ;)
nmod:poss(division, he)
appos(court, division)
case(society, of)
nmod(division, society)
case(class, into)
nummod(class, two)
nmod(division, class)
punct(class, ,)
nummod(hero, one)
det(hero, the)
appos(class, hero)
punct(hero, ,)
det(villain, the)
amod(villain, other)
det(villain, the)
appos(hero, villain)
punct(begin, .)
cc(adviser, but)
advmod(disturbing, most)
amod(adviser, disturbing)
case(all, of)
obl(disturbing, all)
cop(adviser, be)
det(adviser, the)
root(ROOT, adviser)
nsubj(call, he)
acl:relcl(adviser, call)
mark(sit, to)
xcomp(call, sit)
case(he, with)
obl(sit, he)
case(Palace, in)
det(Palace, the)
obl(sit, Palace)
punct(adviser, ;)
punct(come, ;)
nsubj(come, many)
parataxis(adviser, come)
case(country, from)
amod(country, communist)
obl(come, country)
punct(adviser, .)
obj(do, what)
aux(do, should)
nsubj(do, I)
root(ROOT, do)
case(it, about)
obl(do, it)
punct(do, ,)
nsubj(ask, I)
parataxis(do, ask)
obj(ask, myself)
punct(ask, ?)
punct(do, ? )
nsubj(watch, I)
aux(watch, have)
root(ROOT, watch)
obj(watch, Castro)
xcomp(watch, handle)
nmod:poss(enemy, he)
obj(handle, enemy)
case(paredon, before)
det(paredon, the)
obl(handle, paredon)
punct(watch, .)
expl(be, there)
root(ROOT, be)
det(doubt, no)
nsubj(be, doubt)
case(mind, in)
nmod:poss(mind, my)
nmod(doubt, mind)
mark(appear, that)
mark(cross, if)
nsubj(cross, I)
advcl(appear, cross)
obj(cross, he)
punct(appear, ,)
nsubj(appear, mob)
aux(appear, would)
conj(be, appear)
case(shout, outside)
nmod:poss(window, we)
compound(shout, window)
obl(appear, shout)
punct(be, ``)
root(ROOT, paredon)
punct(paredon, !)
punct(paredon, !)
list(paredon, paredon)
punct(paredon, !)
punct(paredon, !)
punct(paredon, '')
obj(do, what)
aux(do, should)
nsubj(do, I)
root(ROOT, do)
punct(do, ?)
punct(do, ? )
nsubj(proud, I)
cop(proud, be)
root(ROOT, proud)
case(building, of)
det(building, the)
amod(building, new)
obl(proud, building)
nsubj(house, which)
acl:relcl(building, house)
obj(house, Diario)
advmod(house, now)
punct(rotogravure, :)
det(rotogravure, the)
obj(house, rotogravure)
punct(rotogravure, ,)
acl(rotogravure, gleam)
case(door, behind)
compound(door, glass)
obl(gleam, door)
punct(rotogravure, ;)
punct(thump, ;)
det(thump, the)
appos(rotogravure, thump)
cc(whir, and)
conj(thump, whir)
case(press, of)
nmod:poss(press, we)
amod(press, new)
nmod(thump, press)
punct(proud, .)
root(ROOT, here)
cop(here, be)
det(medium, a)
amod(medium, powerful)
punct(medium, ,)
amod(make, ready)
punct(make, -)
amod(medium, make)
nsubj(here, medium)
punct(speak, ,)
cc(speak, but)
nsubj(speak, it)
aux(speak, could)
conj(here, speak)
advmod(speak, only)
mark(tell, if)
nsubj(tell, I)
advcl(speak, tell)
obj(tell, it)
xcomp(tell, to)
punct(tell, .)
advmod(day, then)
nummod(day, one)
obl:tmod(tell, day)
punct(sit, ,)
advmod(January, early)
case(January, in)
obl(sit, January)
punct(January, ,)
nummod(January, 1960)
punct(sit, ,)
nsubj(sit, I)
parataxis(speak, sit)
advmod(sit, down)
case(desk, at)
nmod:poss(desk, my)
obl(sit, desk)
punct(aware, ,)
cc(aware, and)
advmod(aware, suddenly)
nsubj(aware, I)
cop(aware, be)
conj(sit, aware)
case(crucifix, of)
det(crucifix, the)
obl(aware, crucifix)
punct(here, .)
nsubj(crucifix, it)
cop(crucifix, be)
det(crucifix, a)
amod(crucifix, simple)
compound(crucifix, ivory)
root(ROOT, crucifix)
obj(give, which)
nmod:poss(mother, my)
nsubj(give, mother)
aux(give, have)
acl:relcl(crucifix, give)
obj(give, I)
punct(crucifix, . )
nsubj(mount, I)
aux(mount, have)
root(ROOT, mount)
obj(mount, it)
case(velvet, on)
obl(mount, velvet)
cc(hang, and)
conj(mount, hang)
obj(hang, it)
compound:prt(hang, over)
nmod:poss(desk, my)
obj(hang, desk)
mark(remind, to)
advcl(hang, remind)
obj(remind, I)
advmod(remind, always)
mark(use, to)
xcomp(remind, use)
det(power, the)
obj(use, power)
case(paper, of)
det(paper, the)
nmod(power, paper)
case(manner, in)
det(manner, a)
amod(manner, christian)
obl(use, manner)
punct(mount, .)
advmod(seem, now)
nsubj(seem, it)
root(ROOT, seem)
advmod(seem, almost)
mark(look, as)
mark(look, if)
nsubj(look, Jesus)
aux(look, be)
advcl(seem, look)
advmod(look, down)
case(I, at)
obl(look, I)
case(sadness, with)
obl(look, sadness)
case(eye, in)
nmod:poss(eye, he)
nmod(sadness, eye)
punct(seem, ,)
advcl(look, say)
punct(seem, :)
punct(seem, ``)
nsubj(lose, you)
aux(lose, will)
root(ROOT, lose)
det(paper, the)
obj(lose, paper)
punct(lose, .)
nsubj(lose, you)
aux(lose, may)
root(ROOT, lose)
nmod:poss(life, you)
obj(lose, life)
punct(lose, .)
cc(have, but)
aux(have, do)
nsubj(have, you)
root(ROOT, have)
det(choice, any)
obj(have, choice)
punct(have, '')
punct(have, ?)
punct(have, ? )
nsubj(know, I)
root(ROOT, know)
case(moment, in)
det(moment, that)
obl(know, moment)
mark(have, that)
nsubj(have, I)
aux(have, do)
advmod(have, not)
acl(moment, have)
det(choice, any)
obj(have, choice)
punct(choice, .)
case(day, from)
det(day, that)
obl(begin, day)
advmod(day, on)
nsubj(begin, I)
parataxis(have, begin)
mark(write, to)
xcomp(begin, write)
obj(write, editorial)
case(thing, about)
det(thing, the)
nmod(editorial, thing)
nsubj(think, I)
aux(think, do)
advmod(think, not)
acl:relcl(thing, think)
xcomp(think, correct)
case(regime, in)
nmod:poss(regime, Fidel)
flat(Fidel, Castro)
case(Fidel, 's)
obl(correct, regime)
punct(have, .)
advmod(often, too)
advmod(have, often)
det(bodybuilder, a)
compound(bodybuilder, beginning)
nsubj(have, bodybuilder)
parataxis(know, have)
mark(do, to)
xcomp(have, do)
nmod:poss(training, he)
obj(do, training)
advmod(do, secretly)
advmod(do, either)
mark(want, because)
nmod:poss(parent, he)
nsubj(want, parent)
aux(want, do)
advmod(want, not)
advcl(do, want)
compound(boy, sonny)
punct(boy, -)
obj(want, boy)
mark(lift, to)
punct(lift, ``)
xcomp(want, lift)
det:predet(thing, all)
det(thing, those)
amod(thing, old)
compound(thing, barbell)
obj(lift, thing)
punct(lift, '')
mark(stunt, because)
punct(stunt, ``)
nsubj(stunt, you)
aux(stunt, will)
advcl(lift, stunt)
nmod:poss(growth, you)
obj(stunt, growth)
punct(stunt, '')
cc(taunt, or)
mark(taunt, because)
amod(taunt, childish)
conj(stunt, taunt)
case(schoolmate, from)
nmod:poss(schoolmate, he)
nmod(taunt, schoolmate)
punct(taunt, ,)
nmod(taunt, like)
punct(know, ``)
discourse(go, hey)
punct(Mr., lookit)
nsubj(go, Mr.)
flat(Mr., America)
punct(Mr., ;)
punct(go, ;)
nsubj(go, whaddya)
root(ROOT, go)
mark(do, to)
xcomp(go, do)
case(muscle, with)
det:predet(muscle, all)
det(muscle, those)
obl(do, muscle)
punct(have, ()
case(which, of)
obl(have, which)
nsubj(have, he)
acl:relcl(muscle, have)
obj(have, none)
case(time, at)
det(time, the)
nmod(none, time)
punct(have, ))
punct(have, '')
punct(go, ?)
punct(go, ?)
advmod(all, after)
advmod(get, all)
punct(get, ,)
det(guy, a)
nsubj(get, guy)
case(guy, 's)
root(ROOT, get)
mark(have, to)
xcomp(get, have)
det(ego, a)
amod(ego, little)
obj(have, ego)
punct(get, !)
punct(get, !)
advmod(pleasure, therefore)
expl(pleasure, it)
cop(pleasure, be)
det(pleasure, a)
amod(pleasure, genuine)
root(ROOT, pleasure)
mark(tell, to)
csubj(pleasure, tell)
obj(tell, you)
case(bodybuilder, about)
det(bodybuilder, a)
advmod(happy, entirely)
amod(bodybuilder, happy)
obl(tell, bodybuilder)
nsubj(have, who)
aux(have, have)
advmod(have, never)
acl:relcl(bodybuilder, have)
mark(train, to)
xcomp(have, train)
case(secret, in)
obl(train, secret)
aux(hear, have)
advmod(hear, never)
conj(pleasure, hear)
nummod(word, one)
amod(word, unkind)
obj(hear, word)
case(parent, from)
nmod:poss(parent, he)
nmod(word, parent)
cc(taunt, and)
advmod(taunt, never)
aux(taunt, have)
aux:pass(taunt, be)
conj(hear, taunt)
case(schoolmate, by)
nmod:poss(schoolmate, he)
obl(taunt, schoolmate)
punct(pleasure, !)
punct(pleasure, !)
det(lad, this)
amod(lad, happy)
punct(lad, ,)
advmod(smile, always)
amod(lad, smile)
nsubj(Mr., lad)
case(disposition, with)
det(disposition, the)
amod(disposition, sunny)
nmod(lad, disposition)
cop(Mr., be)
nmod:poss(Mr., we)
amod(Mr., new)
compound(Mr., Junior)
root(ROOT, Mr.)
flat(Mr., Canada)
punct(Mr., --)
appos(Mr., Henri)
flat(Henri, De)
flat(Henri, courcy)
punct(Henri, .)
advmod(urge, far)
mark(discourage, from)
advcl(far, discourage)
obj(discourage, Henri)
punct(urge, ,)
nmod:poss(parent, he)
nsubj(urge, parent)
conj(Mr., urge)
obj(urge, he)
case(accomplishment, on)
case(accomplishment, to)
amod(accomplishment, greater)
cc(greater, and)
conj(greater, greater)
obl(urge, accomplishment)
punct(urge, .)
mark(admonish, instead)
mark(admonish, of)
advcl(take, admonish)
obj(admonish, he)
mark(let, to)
advcl(admonish, let)
det(weight, the)
obj(let, weight)
advmod(let, alone)
nsubj(take, they)
advmod(take, personally)
root(ROOT, take)
obj(take, he)
case(authority, to)
det(authority, that)
compound(authority, master)
compound(authority, Montreal)
compound(authority, bodybuilding)
obl(take, authority)
punct(authority, ,)
appos(authority, Professor)
flat(Professor, Roland)
flat(Professor, Claude)
punct(take, .)
cc(entrust, and)
nsubj(entrust, they)
aux(entrust, could)
advmod(entrust, not)
aux(entrust, have)
root(ROOT, entrust)
obj(entrust, Henri)
case(hand, to)
amod(hand, better)
obl(entrust, hand)
mark(know, because)
punct(professeur, ``)
compound(professeur, le)
nsubj(know, professeur)
punct(professeur, '')
advcl(entrust, know)
nmod:poss(muscle, he)
obj(know, muscle)
case(mastoideus, from)
det(mastoideus, the)
compound(cleido, sterno)
punct(cleido, -)
amod(mastoideus, cleido)
obl(know, mastoideus)
case(neck, of)
det(neck, the)
nmod(mastoideus, neck)
advmod(down, right)
advmod(mastoideus, down)
case(anticus, to)
det(anticus, the)
compound(anticus, tibialis)
obl(down, anticus)
case(leg, of)
det(leg, the)
nmod(anticus, leg)
cc(know, and)
advmod(know, better)
advmod(know, still)
punct(know, ,)
nsubj(know, he)
conj(entrust, know)
advmod(what, just)
obj(work, what)
nsubj(work, exercise)
ccomp(know, work)
advmod(work, best)
case(they, for)
obl(best, they)
cc(what, and)
conj(they, what)
nsubj(principle, Weider)
acl:relcl(what, principle)
mark(combine, to)
xcomp(principle, combine)
obj(combine, they)
obl(combine, with)
case(growth, for)
amod(growth, fast)
punct(growth, ,)
amod(growth, fast)
compound(growth, muscle)
obl(combine, growth)
punct(be, .)
nsubj(be, that)
parataxis(entrust, be)
mark(teach, because)
det(professor, the)
amod(professor, good)
nsubj(teach, professor)
advcl(be, teach)
advmod(method, only)
compound(method, Weider)
obj(teach, method)
case(Studio, at)
nmod:poss(Studio, he)
amod(Studio, famous)
compound(Studio, Montreal)
compound(Studio, Health)
nmod(method, Studio)
nsubj:pass(locate, which)
aux:pass(locate, be)
acl:relcl(Studio, locate)
case(East, at)
nummod(East, 1821)
compound(East, Mt.)
compound(East, Royal)
obl(locate, East)
case(Montreal, in)
obl(locate, Montreal)
punct(entrust, .)
advmod(read, undoubtedly)
nsubj(read, you)
aux(read, have)
root(ROOT, read)
det(history, the)
compound(history, case)
obj(read, history)
case(some, of)
nmod(history, some)
case(pupil, of)
nmod:poss(pupil, he)
compound(win, prize)
punct(win, -)
compound(pupil, win)
nmod(some, pupil)
punct(have, ()
det(pupil, every)
nsubj(have, pupil)
parataxis(pupil, have)
det(title, a)
compound(title, physique)
obj(have, title)
case(kind, of)
det(kind, some)
nmod(title, kind)
cc(other, or)
conj(kind, other)
punct(have, ))
punct(read, .)
expl(be, there)
parataxis(read, be)
nsubj(be, Gaetan)
flat(Gaetan, D'Amours)
nsubj(Mr., who)
cop(Mr., be)
nmod:poss(Mr., we)
amod(Mr., newest)
acl:relcl(Gaetan, Mr.)
flat(Mr., Canada)
punct(Jean, ;)
punct(Gaetan, ;)
appos(Gaetan, Jean)
punct(Jean, -)
flat(Jean, Paul)
flat(Jean, Senesac)
punct(Jean, ,)
nmod:poss(story, whose)
nsubj(appear, story)
acl:relcl(Jean, appear)
advmod(appear, here)
nummod(issue, two)
obj(appear, issue)
advmod(appear, ago)
punct(read, ;)
punct(appear, ;)
nsubj(appear, Jack)
flat(Jack, boissoneault)
punct(Jack, ,)
nsubj(be, who)
cop(we, be)
case(we, with)
acl:relcl(Jack, we)
amod(month, last)
obl:tmod(be, month)
punct(Jack, ;)
punct(win, ;)
appos(Jack, Charles)
flat(Charles, harve)
punct(Charles, ,)
nsubj(win, who)
advmod(win, recently)
acl:relcl(Charles, win)
det(award, the)
punct(man, ``)
advmod(Muscular, most)
compound(man, Muscular)
compound(award, man)
punct(man, '')
compound(award, subdivision)
obj(win, award)
case(event, in)
det(event, the)
compound(event, Mr.)
flat(Mr., Canada)
nmod(award, event)
punct(award, ;)
punct(host, ;)
cc(host, and)
det(host, a)
conj(award, host)
case(other, of)
nmod(host, other)
punct(read, .)
vocative(know, Yesiree)
punct(know, ,)
det(professor, the)
nsubj(know, professor)
root(ROOT, know)
nmod:poss(muscle, he)
obj(know, muscle)
punct(know, !)
punct(know, !)
advmod(4, now)
mark(12, when)
nsubj(12, Henri)
cop(12, be)
advmod(12, just)
advcl(4, 12)
nsubj(4, he)
cop(4, be)
advmod(4, only)
root(ROOT, 4)
punct(4, ')
compound(4, 10)
punct(4, '')
punct(4, '')
parataxis(4, tall)
cc(weigh, and)
conj(4, weigh)
det(pound, a)
amod(pound, astounding)
nummod(pound, 72)
obj(weigh, pound)
punct(be, ,)
cc(be, and)
nmod:poss(desire, he)
amod(desire, greatest)
nsubj(be, desire)
conj(4, be)
mark(pack, to)
ccomp(be, pack)
case(weight, on)
det(weight, some)
obl(pack, weight)
punct(pack, .)
case(time, about)
det(time, that)
obl(be, time)
nsubj(begin, he)
acl:relcl(time, begin)
xcomp(begin, read)
obj(read, Mr.)
flat(Mr., America)
cc(Builder, and)
compound(Builder, Muscle)
conj(Mr., Builder)
cc(learn, and)
nsubj(learn, he)
conj(begin, learn)
case(way, of)
det(way, the)
amod(way, famous)
compound(way, Weider)
obl(learn, way)
case(weight, to)
amod(weight, fast)
nmod(way, weight)
acl(way, gain)
punct(tall, .)
advcl(decide, see)
advmod(many, so)
amod(illustration, many)
obj(see, illustration)
cc(read, and)
conj(see, read)
advmod(many, so)
amod(testimonial, many)
obj(read, testimonial)
case(value, to)
det(value, the)
nmod(testimonial, value)
case(wate, of)
compound(wate, Quick)
punct(wate, -)
nmod(value, wate)
cc(Protein, and)
compound(Protein, Super)
punct(Protein, -)
conj(wate, Protein)
punct(supplement, ,)
det(supplement, those)
nummod(supplement, two)
compound(work, wonder)
punct(work, -)
amod(supplement, work)
compound(food, Weider)
compound(supplement, food)
appos(value, supplement)
punct(decide, ,)
nsubj(decide, he)
root(ROOT, decide)
mark(try, to)
xcomp(decide, try)
obj(try, they)
cc(see, and)
conj(try, see)
obj(do, what)
nsubj(do, they)
aux(do, could)
ccomp(see, do)
case(he, for)
obl(do, he)
punct(decide, .)
discourse(great, well)
punct(great, ,)
advmod(great, sir)
nsubj(great, they)
aux(great, do)
advmod(great, real)
root(ROOT, great)
punct(great, !)
punct(great, !)
case(time, for)
case(time, in)
advmod(less, almost)
amod(time, less)
obl(increase, time)
mark(take, than)
nsubj(take, it)
acl:relcl(time, take)
mark(tell, to)
xcomp(take, tell)
obj(tell, it)
punct(increase, ,)
nmod:poss(bodyweight, Henri)
case(Henri, 's)
nsubj(increase, bodyweight)
aux(increase, be)
parataxis(great, increase)
advmod(increase, rapidly)
punct(great, .)
advmod(do, of)
fixed(of, course)
nsubj(do, he)
root(ROOT, do)
det(exercise, some)
obj(do, exercise)
punct(do, .)
nsubj(crazy, he)
cop(crazy, be)
root(ROOT, crazy)
case(ski, about)
compound(ski, water)
obl(crazy, ski)
cc(swim, and)
conj(ski, swim)
cc(exercise, and)
det(exercise, this)
amod(exercise, vigorous)
conj(ski, exercise)
case(conjunction, in)
nmod(exercise, conjunction)
case(supplement, with)
det(supplement, the)
amod(supplement, add)
compound(supplement, food)
nmod(ski, supplement)
amod(pound, pack)
nmod(supplement, pound)
case(muscle, of)
amod(muscle, solid)
nmod(pound, muscle)
case(frame, on)
nmod:poss(frame, he)
amod(frame, skinny)
nmod(muscle, frame)
punct(crazy, .)
nsubj(have, Henri)
aux(have, have)
advmod(have, always)
root(ROOT, have)
advmod(leg, shapely)
obj(have, leg)
case(swim, from)
obl(have, swim)
cc(ski, and)
compound(ski, water)
conj(swim, ski)
cc(have, and)
advmod(have, really)
aux(have, do)
advmod(have, not)
conj(have, have)
mark(work, to)
xcomp(have, work)
obj(work, they)
advmod(much, very)
advmod(work, much)
punct(have, .)
cc(dissatisfied, but)
nsubj(dissatisfied, he)
cop(dissatisfied, be)
advmod(dissatisfied, totally)
root(ROOT, dissatisfied)
case(body, with)
nmod:poss(body, he)
amod(body, upper)
obl(dissatisfied, body)
punct(dissatisfied, .)
nsubj(muscular, it)
cop(muscular, be)
root(ROOT, muscular)
cc(symmetrical, but)
nsubj(symmetrical, it)
cop(symmetrical, be)
advmod(symmetrical, not)
conj(muscular, symmetrical)
punct(muscular, .)
punct(muscular, ``)
det(torso, a)
amod(torso, real)
punct(torso, ')
compound(torso, nothing)
punct(nothing, ')
nsubj(say, torso)
punct(torso, '')
punct(say, ,)
root(ROOT, say)
nsubj(say, Henri)
punct(say, .)
punct(say, ``)
nsubj(seem, it)
advmod(seem, never)
root(ROOT, seem)
mark(widen, to)
xcomp(seem, widen)
punct(seem, .)
nsubj(get, it)
advmod(get, just)
root(ROOT, get)
advmod(get, longer)
cc(longer, and)
conj(longer, longer)
punct(get, '')
punct(get, .)
nsubj(when, that)
parataxis(get, be)
mark(go, when)
nsubj(go, he)
advcl(be, go)
case(Professor, to)
obl(go, Professor)
flat(Professor, Claude)
punct(get, .)
cc(see, and)
advmod(see, at)
mark(see, once)
nsubj(see, Claude)
conj(get, see)
obj(see, what)
det(trouble, the)
nsubj(be, trouble)
cop(what, be)
cc(know, and)
nsubj(know, he)
conj(see, know)
advmod(correct, just)
advmod(correct, how)
mark(correct, to)
ccomp(know, correct)
obj(correct, it)
punct(get, .)
case(gym, in)
nmod:poss(gym, he)
obl(have, gym)
det(professor, the)
nsubj(have, professor)
root(ROOT, have)
obj(have, some)
case(equipment, of)
det(equipment, the)
advmod(knock, most)
punct(knock, ``)
amod(equipment, knock)
compound(knock, out)
punct(equipment, '')
nmod(some, equipment)
case(Vic, since)
nmod(equipment, Vic)
flat(Vic, Tanny)
punct(have, .)
nsubj(specialist, Mr.)
flat(Mr., Claude)
cop(specialist, be)
det(specialist, a)
parataxis(have, specialist)
case(development, in)
compound(development, torso)
nmod(specialist, development)
cc(favor, and)
nsubj(favor, he)
aux(favor, have)
advmod(favor, long)
conj(specialist, favor)
det(technique, the)
advmod(famous, now)
punct(famous, -)
amod(technique, famous)
compound(technique, Weider)
compound(pull, push)
punct(pull, -)
compound(technique, pull)
advmod(set, super)
punct(set, -)
amod(technique, set)
obj(favor, technique)
case(which, in)
obl(press, which)
nummod(exercise, one)
nsubj(press, exercise)
case(set, of)
det(set, the)
compound(set, Super)
punct(set, -)
nmod(exercise, set)
cop(press, be)
det(press, a)
acl:relcl(technique, press)
cc(movement, or)
punct(movement, ``)
compound(movement, push)
punct(movement, '')
conj(press, movement)
nsubj(accent, which)
acl:relcl(movement, accent)
nummod(sector, one)
obj(accent, sector)
case(group, of)
det(group, a)
compound(group, muscle)
nmod(sector, group)
case(way, in)
det(way, a)
amod(way, specific)
obl(accent, way)
punct(sector, ,)
acl(sector, follow)
case(exercise, by)
det(exercise, a)
punct(exercise, ``)
compound(exercise, pull)
punct(exercise, '')
obl(follow, exercise)
nsubj(work, which)
acl:relcl(exercise, work)
det(sector, the)
amod(sector, oppose)
obj(work, sector)
case(group, of)
det(group, the)
amod(group, same)
compound(group, muscle)
nmod(sector, group)
punct(have, .)
advmod(introduce, so)
advmod(away, right)
advmod(introduce, away)
nsubj(introduce, Claude)
root(ROOT, introduce)
obj(introduce, Henri)
case(bench, to)
nmod:poss(bench, he)
amod(bench, famous)
punct(bench, ``)
compound(bench, moon)
punct(bench, '')
obl(introduce, bench)
cc(proceed, and)
conj(introduce, proceed)
mark(teach, to)
xcomp(proceed, teach)
iobj(teach, he)
nmod:poss(pull, he)
amod(pull, first)
compound(pull, push)
punct(pull, -)
obj(teach, pull)
advmod(set, super)
punct(set, -)
obj(pull, set)
xcomp(pull, consist)
case(grip, of)
det(grip, the)
amod(grip, wide)
punct(grip, -)
compound(pullover, grip)
compound(Arm, Straight)
punct(Arm, -)
compound(pullover, Arm)
obl(consist, pullover)
punct(part, ()
det(part, the)
punct(pull, ``)
compound(part, pull)
punct(pull, '')
appos(pullover, part)
case(set, of)
det(set, the)
compound(pull, push)
punct(set, -)
compound(set, pull)
compound(set, Super)
punct(set, -)
nmod(part, set)
punct(set, ))
nsubj(widen, which)
advmod(widen, dramatically)
acl:relcl(set, widen)
det(ribcage, the)
obj(widen, ribcage)
cc(affect, and)
advmod(affect, strongly)
conj(widen, affect)
det(muscle, the)
obj(affect, muscle)
case(back, of)
det(back, the)
amod(back, upper)
nmod(muscle, back)
cc(chest, and)
conj(back, chest)
cc(Press, and)
det(Press, the)
compound(Press, collar)
punct(collar, -)
case(collar, to)
punct(collar, -)
compound(Press, collar)
compound(Press, Bench)
conj(back, Press)
nsubj(work, which)
advmod(work, specifically)
acl:relcl(Press, work)
case(chest, on)
det(chest, the)
obl(work, chest)
mark(build, to)
advcl(work, build)
det(pec, those)
amod(pec, wide)
punct(pec, ,)
compound(type, Reeves)
punct(type, -)
compound(pec, type)
punct(gladiator, ``)
compound(pec, gladiator)
punct(gladiator, '')
obj(build, pec)
punct(build, ,)
mark(stimulate, while)
advcl(build, stimulate)
det(lat, the)
amod(lat, upper)
obj(stimulate, lat)
cc(deltoid, and)
amod(deltoid, frontal)
conj(lat, deltoid)
punct(introduce, .)
mark(see, as)
nsubj(see, you)
aux(see, can)
advcl(pull, see)
punct(pull, ,)
mark(pull, in)
det(pull, this)
compound(pull, push)
punct(pull, -)
root(ROOT, pull)
advmod(pull, super)
csubj(exercise, set)
det(area, the)
amod(area, entire)
compound(area, chest)
punct(chest, -)
case(shoulder, back)
punct(shoulder, -)
compound(area, shoulder)
obj(set, area)
aux:pass(exercise, be)
advmod(exercise, vigorously)
root(ROOT, exercise)
case(sector, in)
amod(sector, alternate)
obl(exercise, sector)
case(exercise, by)
amod(exercise, alternate)
obl(exercise, exercise)
advmod(remain, so)
det(torso, the)
amod(torso, complete)
nsubj(remain, torso)
conj(exercise, remain)
xcomp(remain, pump)
punct(pump, -)
compound:prt(pump, up)
det:predet(time, all)
det(time, the)
obl:tmod(pump, time)
punct(exercise, !)
punct(exercise, !)
advmod(allow, now)
mark(complete, when)
nsubj(complete, Henri)
aux(complete, have)
advcl(allow, complete)
nummod(push, four)
amod(push, complete)
compound(pull, push)
punct(pull, -)
compound(Sets, pull)
compound(Sets, Super)
punct(Sets, -)
compound(no., Sets)
obl:tmod(complete, no.)
nummod(no., 1)
punct(allow, ,)
det(professor, the)
nsubj(allow, professor)
root(ROOT, allow)
obj(allow, he)
case(period, about)
det(period, a)
nummod(minute, five)
punct(minute, -)
compound(period, minute)
compound(period, rest)
obl(allow, period)
mark(start, before)
acl(period, start)
obj(start, he)
case(Sets, on)
nummod(push, four)
amod(push, complete)
compound(pull, push)
punct(pull, -)
compound(Sets, pull)
compound(Sets, Super)
punct(Sets, -)
obl(start, Sets)
appos(Sets, no.)
nummod(no., 2)
punct(Sets, .)
advmod(set, super)
punct(set, -)
nsubj:pass(make, set)
compound(set, no.)
nummod(no., 2)
aux:pass(make, be)
acl:relcl(Sets, make)
compound:prt(make, up)
case(exercise, of)
amod(exercise, similar)
obl(make, exercise)
punct(make, ,)
cc(do, but)
det(time, this)
obl:tmod(make, time)
acl(time, do)
case(dumbbell, with)
obl(do, dumbbell)
punct(use, ,)
cc(use, and)
conj(do, use)
cc:preconj(moon, both)
punct(moon, ``)
obj(use, moon)
punct(moon, '')
cc(bench, and)
amod(bench, flat)
conj(moon, bench)
punct(allow, .)
det(exercise, the)
punct(push, ``)
compound(exercise, push)
punct(push, ')
punct(exercise, ')
nsubj(Press, exercise)
case(set, of)
det(set, this)
compound(pull, push)
punct(pull, -)
compound(set, pull)
advmod(set, super)
punct(set, -)
nmod(exercise, set)
cop(Press, be)
det(Press, the)
compound(Press, Bench)
root(ROOT, Press)
acl(Press, do)
case(elbow, with)
obl(do, elbow)
advmod(pull, well)
advcl(do, pull)
advmod(pull, back)
cc(stretch, and)
case(stretch, with)
det(stretch, a)
amod(stretch, greater)
amod(stretch, downward)
conj(pull, stretch)
case(pectoral, of)
det(pectoral, the)
nmod(stretch, pectoral)
advmod(possible, not)
amod(stretch, possible)
case(variation, with)
det(variation, the)
compound(variation, barbell)
obl(possible, variation)
punct(Press, .)
nsubj(need, you)
root(ROOT, need)
det(variation, the)
compound(variation, barbell)
obj(need, variation)
mark(build, to)
acl(variation, build)
obj(build, width)
cc(mass, and)
conj(width, mass)
case(pec, in)
det(pec, the)
obl(build, pec)
punct(need, .)
det(variation, the)
compound(variation, dumbbell)
nsubj(develop, variation)
root(ROOT, develop)
det(outline, a)
advmod(classically, most)
advmod(sculpture, classically)
amod(outline, sculpture)
obj(develop, outline)
case(Aj, to)
det(Aj, the)
nmod(outline, Aj)
punct(outline, .)
det(exercise, the)
punct(pull, ``)
compound(exercise, pull)
punct(pull, ')
punct(exercise, ')
nsubj(pullover, exercise)
case(set, in)
det(set, this)
compound(set, Super)
punct(set, -)
nmod(exercise, set)
cop(pullover, be)
det(pullover, the)
nummod(dumbbell, one)
punct(dumbbell, -)
compound(pullover, dumbbell)
compound(Arm, Bent)
punct(Arm, -)
compound(pullover, Arm)
parataxis(develop, pullover)
punct(develop, . )
punct(note, ()
root(ROOT, note)
advmod(strongly, how)
advmod(work, strongly)
det(lat, the)
amod(lat, upper)
nsubj:pass(work, lat)
cc(serratus, and)
conj(lat, serratus)
aux:pass(work, be)
ccomp(note, work)
case(exercise, in)
det(exercise, this)
amod(exercise, fine)
obl(work, exercise)
case(concentration, because)
fixed(because, of)
det(concentration, the)
amod(concentration, pin-point)
obl(work, concentration)
case(force, of)
nmod(concentration, force)
obj(afford, which)
det(variation, the)
compound(variation, dumbbell)
nsubj(afford, variation)
acl:relcl(force, afford)
punct(afford, ))
punct(note, .)
mark(set, in)
det(exercise, the)
amod(pull, third)
compound(pull, push)
punct(pull, -)
compound(set, pull)
compound(pull, Super)
punct(set, -)
advcl(Pushup, set)
det(exercise, the)
punct(push, ``)
compound(exercise, push)
punct(push, '')
nsubj(Pushup, exercise)
cop(Pushup, be)
det(Pushup, the)
compound(Pushup, widegrip)
root(ROOT, Pushup)
case(Bars, between)
nmod(Pushup, Bars)
punct(Pushup, ,)
mark(raise, while)
det(exercise, the)
punct(exercise, ``)
compound(exercise, pull)
punct(exercise, '')
nsubj(raise, exercise)
cop(raise, be)
det(Lateral, the)
compound(Bench, moon)
compound(Lateral, Bench)
nsubj(raise, Lateral)
advcl(Pushup, raise)
case(arm, with)
amod(arm, bent)
obl(raise, arm)
punct(Pushup, .)
det(Pushup, the)
nsubj(stretcher, Pushup)
acl(Pushup, do)
case(manner, in)
det(manner, this)
obl(do, manner)
cop(stretcher, be)
det(stretcher, the)
amod(stretcher, greatest)
amod(ribcage, pectoral)
punct(ribcage, -)
compound(stretcher, ribcage)
root(ROOT, stretcher)
advmod(invent, ever)
acl(stretcher, invent)
punct(stretcher, !)
punct(stretcher, !)
nsubj(true, this)
cop(true, be)
root(ROOT, true)
advmod(true, only)
mark(use, if)
det(grip, a)
advmod(wide, very)
amod(grip, wide)
nsubj:pass(use, grip)
aux:pass(use, be)
advcl(true, use)
cc(achieve, and)
advmod(achieve, only)
mark(achieve, when)
det(stretch, the)
amod(stretch, greatest)
amod(stretch, possible)
nsubj:pass(achieve, stretch)
aux:pass(achieve, be)
advcl(use, achieve)
punct(true, .)
nsubj(know, you)
aux(know, will)
root(ROOT, know)
mark(make, when)
nsubj(make, you)
aux(make, have)
advcl(know, make)
det(stretch, the)
amod(stretch, greatest)
obj(make, stretch)
mark(touch, because)
nmod:poss(blade, you)
compound(blade, shoulder)
nsubj(touch, blade)
aux(touch, will)
advcl(make, touch)
punct(know, !)
punct(know, !)
mark(see, as)
nsubj(see, you)
advcl(design, see)
punct(design, ,)
det(professor, the)
nsubj(design, professor)
aux(design, have)
root(ROOT, design)
det(piece, a)
obj(design, piece)
case(apparatus, of)
nmod(piece, apparatus)
nsubj(force, that)
acl:relcl(piece, force)
det(bodybuilder, the)
obj(force, bodybuilder)
mark(use, to)
xcomp(force, use)
det(grip, a)
case(i-, with)
punct(i-, -)
compound(grip, i-)
compound(grip, d)
compound(grip, -e)
obj(use, grip)
punct(design, .)
nsubj(have, he)
root(ROOT, have)
xcomp(have, to)
punct(have, ;)
punct(have, ;)
nsubj(do, he)
advmod(do, just)
aux(do, can)
advmod(do, not)
parataxis(have, do)
obj(do, anything)
case(it, about)
nmod(anything, it)
case(all, at)
obl(do, all)
punct(have, !)
punct(have, !)
cc(exercise, but)
mark(see, as)
nsubj(see, you)
aux(see, can)
advmod(see, also)
advcl(exercise, see)
punct(exercise, ,)
nsubj(exercise, it)
cop(exercise, be)
advmod(exercise, not)
det(exercise, a)
amod(exercise, painful)
root(ROOT, exercise)
case(all, at)
obl(exercise, all)
punct(exercise, ,)
mark(look, because)
nsubj(look, Henri)
flat(Henri, De)
flat(Henri, courcy)
punct(Henri, --)
det(bodybuilder, the)
punct(bodybuilder, ``)
amod(bodybuilder, happy)
punct(bodybuilder, '')
appos(Henri, bodybuilder)
punct(look, --)
advcl(exercise, look)
mark(have, as)
mark(have, though)
nsubj(have, he)
aux(have, be)
advcl(look, have)
det(time, the)
obj(have, time)
case(life, of)
nmod:poss(life, he)
nmod(time, life)
punct(exercise, !)
punct(exercise, !)
det(exercise, the)
amod(exercise, last)
nsubj(exercise, exercise)
case(program, of)
nmod:poss(program, Roland)
flat(Roland, Claude)
case(Roland, 's)
amod(program, prescribe)
nmod(exercise, program)
case(Henri, for)
nmod(program, Henri)
cop(exercise, be)
det(exercise, a)
amod(exercise, single)
root(ROOT, exercise)
punct(exercise, ,)
acl(exercise, do)
case(set, in)
amod(set, individual)
obl(do, set)
case(pause, with)
det(bit, a)
obl:npmod(longer, bit)
amod(pause, longer)
obl(do, pause)
case(set, between)
nmod(pause, set)
punct(exercise, .)
case(time, by)
det(time, this)
obl(pump, time)
nmod:poss(area, Henri)
case(Henri, 's)
amod(area, entire)
compound(area, chest)
punct(chest, -)
case(shoulder, back)
punct(shoulder, -)
compound(shoulder, lat)
punct(shoulder, -)
compound(area, shoulder)
nsubj:pass(pump, area)
aux:pass(pump, be)
root(ROOT, pump)
punct(up, -)
advmod(pump, up)
case(point, to)
advmod(burst, almost)
amod(point, burst)
obl(pump, point)
punct(take, ,)
cc(take, and)
nsubj(take, Claude)
conj(pump, take)
obj(take, time)
mark(do, to)
acl(time, do)
det(bit, a)
obl:npmod(more, bit)
advmod(front, more)
amod(front, pectoral)
punct(front, -)
amod(work, front)
compound(work, deltoid)
compound(work, shape)
obj(do, work)
punct(pump, .)
nsubj(do, he)
aux(do, have)
nsubj(do, Henri)
root(ROOT, do)
case(set, from)
nummod(set, four)
case(six, to)
nmod(four, six)
obl(do, set)
case(Press, of)
det(Press, the)
compound(Press, incline)
compound(Press, Bench)
nmod(set, Press)
punct(note, ()
parataxis(do, note)
det(incline, the)
amod(incline, high)
obj(note, incline)
punct(note, ))
punct(do, .)
nsubj(give, this)
root(ROOT, give)
det(flare, a)
amod(flare, wide)
obj(give, flare)
case(pec, to)
det(pec, the)
obl(give, pec)
punct(give, ,)
advcl(give, cause)
obj(cause, they)
mark(flow, to)
xcomp(cause, flow)
advmod(flow, dramatically)
advmod(flow, upward)
case(deltoid, into)
obl(flow, deltoid)
cc(downward, and)
advmod(downward, dramatically)
advmod(flow, downward)
case(serratus, into)
det(serratus, the)
obl(downward, serratus)
cc(Aj, and)
conj(serratus, Aj)
punct(give, .)
nsubj(kind, this)
cop(kind, be)
det(kind, the)
parataxis(give, kind)
case(chest, of)
nmod(kind, chest)
nsubj(win, that)
advmod(win, invariably)
acl:relcl(kind, win)
obj(win, contest)
punct(kind, ;)
punct(kind, ;)
det(rock, that)
compound(edg, steel)
punct(edg, -)
amod(rock, edg)
punct(carve, ``)
amod(rock, carve)
punct(carve, -)
compound(rock, out)
punct(carve, -)
case(solid, of)
punct(solid, -)
nmod(out, solid)
nsubj(look, rock)
punct(rock, '')
parataxis(kind, look)
case(champion, of)
det(champion, the)
amod(champion, great)
obl(look, champion)
punct(give, .)
advmod(see, so)
case(Sets, with)
nummod(Sets, four)
amod(Sets, complete)
compound(pull, push)
punct(pull, -)
compound(Sets, pull)
compound(Sets, Super)
punct(Sets, -)
obl(so, Sets)
appos(Sets, no.)
nummod(no., 1)
punct(no., ,)
nummod(no., four)
case(no., of)
nmod(four, no.)
nummod(no., 2)
punct(no., ,)
nummod(no., four)
case(no., of)
nmod(four, no.)
nummod(no., 3)
cc(set, and)
nummod(set, four)
case(six, to)
nmod(four, six)
conj(four, set)
case(Press, of)
det(Press, the)
compound(Press, incline)
compound(Press, Bench)
nmod(set, Press)
punct(see, ,)
nsubj(see, you)
aux(see, can)
root(ROOT, see)
mark(have, that)
nsubj(have, Henri)
flat(Henri, De)
flat(Henri, courcy)
aux(have, have)
ccomp(see, have)
det(workout, a)
amod(building, terrific)
compound(building, mass)
punct(building, -)
obj(have, building)
punct(building, ,)
compound(shape, muscle)
punct(shape, -)
compound(workout, shape)
punct(workout, ,)
compound(define, torso)
punct(define, -)
amod(workout, define)
obj(have, workout)
nsubj:pass(improve, that)
aux(improve, can)
advmod(improve, not)
aux:pass(improve, be)
acl:relcl(workout, improve)
obl(improve, upon)
punct(see, .)
compound(contest, physique)
nsubj:pass(win, contest)
aux:pass(win, be)
advmod(win, rarely)
root(ROOT, win)
case(size, on)
compound(size, muscle)
obl(win, size)
advmod(win, alone)
punct(win, .)
amod(Mr., Rarer)
advmod(Rarer, still)
cop(Rarer, be)
det(Mr., a)
root(ROOT, Mr.)
flat(Mr., America)
cc(Mr., or)
conj(Mr., Mr.)
flat(Mr., Universe)
case(build, of)
amod(build, true)
amod(build, herculean)
nmod(Mr., build)
punct(Rarer, .)
det(aspect, the)
nsubj(symmetry, aspect)
case(development, of)
amod(development, physical)
nmod(aspect, development)
nsubj(catch, that)
acl:relcl(development, catch)
det(judge, the)
nmod:poss(eye, judge)
case(judge, 's)
obj(catch, eye)
cc(influence, and)
nsubj(influence, which)
advmod(influence, rightfully)
conj(catch, influence)
nmod:poss(decision, they)
obj(influence, decision)
cop(symmetry, be)
root(ROOT, symmetry)
cc(hallmark, and)
det(hallmark, that)
conj(symmetry, hallmark)
case(champion, of)
det(champion, the)
amod(champion, true)
nmod(hallmark, champion)
punct(definition, --)
amod(definition, superior)
appos(symmetry, definition)
case(muscle, of)
det(muscle, the)
nmod(definition, muscle)
punct(symmetry, .)
advmod(definition, now)
amod(definition, good)
root(ROOT, definition)
cop(definition, be)
nummod(thing, one)
nsubj(definition, thing)
obj(acquire, that)
nsubj(acquire, all)
case(we, of)
nmod(all, we)
aux(acquire, can)
acl:relcl(thing, acquire)
case(rep, with)
amod(rep, occasional)
amod(set, high)
punct(set, -)
amod(rep, set)
punct(rep, ,)
amod(rep, high)
punct(rep, -)
obl(acquire, rep)
punct(workout, ,)
compound(weight, light)
punct(weight, -)
compound(workout, weight)
conj(rep, workout)
punct(definition, .)
cc(something, but)
compound(definition, contest)
root(ROOT, definition)
punct(definition, --)
det(separation, that)
amod(separation, dramatic)
amod(separation, muscular)
appos(definition, separation)
case(group, of)
det(group, every)
compound(group, muscle)
nmod(separation, group)
nsubj(seem, that)
acl:relcl(separation, seem)
mark(carve, as)
mark(carve, though)
nsubj:pass(carve, it)
aux(carve, must)
aux(carve, have)
aux:pass(carve, be)
advcl(seem, carve)
case(chisel, by)
det(sculptor, a)
nmod:poss(chisel, sculptor)
case(sculptor, 's)
obl(carve, chisel)
punct(something, --)
cop(something, be)
parataxis(carve, something)
advmod(different, quite)
amod(something, different)
punct(something, .)
nsubj(come, this)
root(ROOT, come)
advmod(alone, not)
advmod(come, alone)
case(set, from)
amod(set, high)
punct(set, -)
amod(training, set)
punct(training, ,)
amod(rep, high)
punct(rep, -)
compound(training, rep)
obl(come, training)
punct(exercise, ,)
cc(exercise, but)
case(exercise, from)
amod(exercise, certain)
compound(specialization, definition)
punct(specialization, -)
compound(exercise, specialization)
conj(come, exercise)
obj(select, which)
det(champion, the)
nsubj(select, champion)
acl:relcl(exercise, select)
case(himself, for)
obl(select, himself)
case(knowledge, with)
det(knowledge, the)
obl(select, knowledge)
case(what, of)
advmod(what, exactly)
nmod(knowledge, what)
acl:relcl(what, work)
xcomp(work, best)
case(he, for)
obl(best, he)
punct(come, .)
advmod(work, often)
det(exercise, these)
nsubj(work, exercise)
root(ROOT, work)
advmod(work, well)
case(bodybuilder, for)
det(bodybuilder, some)
obl(work, bodybuilder)
cc(other, but)
advmod(spectacularly, less)
advmod(other, spectacularly)
case(other, for)
conj(work, other)
punct(work, .)
mark(exercise, because)
nsubj(exercise, they)
cop(exercise, be)
punct(exercise, ``)
amod(exercise, minority)
punct(exercise, '')
advcl(find, exercise)
cc(have, and)
conj(exercise, have)
cc(find, but)
det(appeal, a)
amod(appeal, limited)
nsubj(find, appeal)
nsubj(find, they)
advmod(find, soon)
root(ROOT, find)
obj(find, themselves)
case(limbo, in)
det(limbo, the)
obl(find, limbo)
case(forget, of)
det(forget, the)
nmod(limbo, forget)
punct(find, .)
advmod(reacquaint, only)
mark(discover, when)
det(Mr., the)
amod(Mr., newest)
nsubj(discover, Mr.)
flat(Mr., America)
cc(Mr., or)
conj(Mr., Mr.)
flat(Mr., Universe)
advcl(reacquaint, discover)
obj(discover, they)
cc(put, and)
conj(discover, put)
obj(put, they)
case(practice, into)
obl(put, practice)
cop(reacquaint, be)
nsubj(reacquaint, we)
root(ROOT, reacquaint)
case(they, with)
obl(reacquaint, they)
cc(see, and)
advmod(see, once)
advmod(see, again)
conj(reacquaint, see)
advmod(effective, how)
ccomp(see, effective)
nsubj(effective, they)
advmod(effective, really)
cop(effective, be)
punct(reacquaint, .)
det(exercise, the)
nsubj(Lunge, exercise)
nsubj(discuss, I)
aux(discuss, shall)
acl:relcl(exercise, discuss)
case(this, in)
obl(discuss, this)
punct(exercise, --)
det(first, the)
appos(exercise, first)
case(series, of)
det(series, a)
amod(series, new)
nmod(first, series)
case(article, of)
nmod(series, article)
case(definition, on)
compound(definition, muscle)
nmod(article, definition)
punct(series, -)
appos(first, specialization)
case(part, of)
det(part, a)
amod(part, particular)
compound(part, body)
nmod(specialization, part)
punct(Lunge, --)
cop(Lunge, be)
det(Lunge, the)
nummod(Lunge, one)
compound(Lunge, Leg)
root(ROOT, Lunge)
punct(Lunge, .)
advmod(forget, why)
nsubj:pass(forget, it)
aux:pass(forget, be)
advmod(forget, ever)
advcl(say, forget)
case(moment, for)
advmod(moment, even)
det(moment, a)
obl(forget, moment)
nsubj(say, I)
aux(say, can)
advmod(say, not)
root(ROOT, say)
mark(work, because)
nsubj(work, it)
advcl(say, work)
advmod(work, perfectly)
case(everyone, for)
obl(work, everyone)
punct(matter, ,)
advmod(matter, no)
parataxis(say, matter)
mark(have, whether)
nsubj(have, he)
acl(matter, have)
amod(length, short)
cc(long, or)
conj(short, long)
compound(bone, thigh)
punct(bone, -)
conj(short, bone)
obj(have, length)
punct(matter, !)
punct(matter, !)
expl(exercise, it)
cop(exercise, be)
det(exercise, the)
nummod(exercise, one)
root(ROOT, exercise)
nsubj(influence, that)
advmod(influence, drastically)
acl:relcl(exercise, influence)
det(definition, the)
obj(influence, definition)
case(thigh, of)
det(thigh, the)
nmod(definition, thigh)
case(hipline, at)
det(hipline, the)
nmod(thigh, hipline)
punct(thigh, --)
det(mark, that)
appos(definition, mark)
case(champion, of)
det(champion, the)
nmod(mark, champion)
nsubj(set, that)
acl:relcl(champion, set)
obj(set, he)
advmod(set, apart)
case(bodybuilder, from)
det(bodybuilder, all)
amod(bodybuilder, other)
obl(set, bodybuilder)
punct(criterion, ;)
punct(criterion, ;)
det(criterion, a)
appos(exercise, criterion)
case(muscle, of)
compound(drama, muscle)
punct(drama, ``)
nmod(criterion, drama)
punct(drama, '')
nsubj(unforgettable, that)
cop(unforgettable, be)
acl:relcl(drama, unforgettable)
case(judge, to)
obl(unforgettable, judge)
cc(audience, and)
conj(judge, audience)
amod(judge, alike)
punct(unforgettable, ;)
punct(criterion, ;)
det(facet, the)
nsubj(definition, facet)
case(development, of)
amod(development, muscular)
nmod(facet, development)
nsubj(win, that)
acl:relcl(facet, win)
obj(win, prize)
punct(win, .)
nsubj:pass(see, definition)
case(thigh, of)
det(thigh, the)
nmod(definition, thigh)
case(part, at)
det(part, the)
amod(part, uppermost)
nmod(thigh, part)
aux:pass(see, be)
advmod(commonly, quite)
advmod(see, commonly)
parataxis(criterion, see)
case(lifter, in)
amod(lifter, most)
compound(lifter, championship)
compound(lifter, Olympic)
obl(see, lifter)
nsubj(understandable, which)
cop(understandable, be)
advmod(understandable, easily)
acl:relcl(lifter, understandable)
punct(exercise, .)
det(Lunge, the)
nummod(Lunge, one)
compound(Lunge, Leg)
nsubj(split, Lunge)
cop(split, be)
det(split, a)
root(ROOT, split)
cc(practice, and)
det(lifter, all)
nsubj(practice, lifter)
conj(split, practice)
obj(practice, this)
case(workout, in)
nmod:poss(workout, they)
amod(workout, regular)
obl(practice, workout)
punct(split, .)
cc(need, but)
case(purpose, for)
amod(purpose, purely)
compound(purpose, definition)
obl(need, purpose)
punct(purpose, --)
acl(purpose, use)
case(conjunction, in)
obl(use, conjunction)
case(squat, with)
nmod:poss(squat, you)
amod(squat, regular)
obl(use, squat)
punct(curling, ,)
compound(curling, Leg)
conj(squat, curling)
punct(program, ,)
compound(extensor, Leg)
compound(program, extensor)
conj(squat, program)
punct(need, --)
det(weight, a)
amod(weight, heavy)
nsubj:pass(need, weight)
aux:pass(need, be)
advmod(need, not)
root(ROOT, need)
punct(need, .)
advmod(work, indeed)
punct(work, ,)
det(weight, a)
amod(weight, lighter)
nsubj(work, weight)
root(ROOT, work)
advmod(better, much)
xcomp(work, better)
mark(perform, because)
det(split, a)
amod(split, greater)
punct(split, ,)
advmod(extensive, more)
amod(split, extensive)
nsubj:pass(perform, split)
aux(perform, can)
aux:pass(perform, be)
advcl(work, perform)
punct(work, .)
advcl(long, use)
case(set, in)
amod(set, several)
obl(use, set)
case(rep, of)
amod(rep, high)
nmod(set, rep)
advmod(use, once)
cc(twice, or)
conj(once, twice)
det(week, each)
obl:npmod(once, week)
nsubj(long, it)
aux(long, will)
advmod(long, not)
cop(long, be)
root(ROOT, long)
mark(take, before)
nmod:poss(leg, you)
amod(leg, entire)
amod(leg, upper)
nsubj(take, leg)
advcl(long, take)
compound:prt(take, on)
det(definition, a)
obl:npmod(sharp, razor)
punct(sharp, -)
amod(definition, sharp)
obj(take, definition)
case(which, in)
obl(look, which)
det(muscle, the)
nsubj(look, muscle)
acl:relcl(definition, look)
case(cable, like)
compound(cable, wire)
obl(look, cable)
advcl(look, writh)
cc(twist, and)
conj(writh, twist)
case(skin, under)
det(skin, the)
obl(twist, skin)
punct(long, !)
punct(long, !)
advmod(be, really)
expl(be, there)
root(ROOT, be)
det(reason, no)
nsubj(be, reason)
advmod(find, why)
det(exercise, this)
amod(exercise, fine)
nsubj(find, exercise)
aux(find, should)
advmod(find, not)
acl(reason, find)
nmod:poss(way, its)
obj(find, way)
case(program, into)
nmod:poss(program, you)
compound(program, leg)
obl(find, program)
case(time, at)
det(time, all)
obl(find, time)
punct(show, ,)
case(suggestion, for)
det(suggestion, the)
amod(suggestion, follow)
obl(show, suggestion)
advcl(find, show)
advmod(effective, why)
nsubj(effective, it)
cop(effective, be)
advmod(effective, so)
ccomp(show, effective)
punct(effective, :)
obj(effective, 1)
punct(be, .)
nsubj(exercise, it)
cop(exercise, be)
det(exercise, a)
amod(exercise, complete)
compound(exercise, thigh)
compound(extension, contraction)
punct(extension, -)
compound(exercise, extension)
root(ROOT, exercise)
punct(exercise, . )
nummod(place, 2)
punct(2, .)
nsubj(place, it)
root(ROOT, place)
amod(tension, terrific)
obj(place, tension)
case(muscle, on)
det(muscle, the)
compound(muscle, leg)
nmod(tension, muscle)
case(start, from)
obl(place, start)
case(finish, to)
nmod(start, finish)
case(repetition, of)
det(repetition, each)
nmod(finish, repetition)
punct(place, . )
nummod(improve, 3)
punct(3, .)
nsubj(improve, it)
root(ROOT, improve)
case(all, over)
punct(all, -)
det(balance, all)
obj(improve, balance)
cc(control, and)
conj(balance, control)
case(bodybuilder, for)
det(bodybuilder, the)
nmod(balance, bodybuilder)
punct(help, ,)
cc(help, and)
conj(improve, help)
mark(make, to)
xcomp(help, make)
obj(make, Squats)
advmod(easily, more)
advmod(make, easily)
cc(perform, and)
advmod(perform, more)
advmod(perform, correctly)
conj(make, perform)
punct(improve, . )
nummod(increase, 4)
punct(4, .)
nsubj(increase, it)
root(ROOT, increase)
obj(increase, flexibility)
case(leg, of)
det(leg, the)
nmod(flexibility, leg)
punct(increase, . )
nummod(speed, 5)
punct(5, .)
nsubj(speed, it)
parataxis(increase, speed)
compound(growth, muscle)
obj(speed, growth)
cc(development, and)
compound(development, power)
conj(growth, development)
advmod(bodybuilder, even)
case(bodybuilder, for)
det(bodybuilder, the)
amod(bodybuilder, advanced)
obl(speed, bodybuilder)
mark(exercise, because)
det(hip, each)
nsubj:pass(exercise, hip)
cc(leg, and)
conj(hip, leg)
aux:pass(exercise, be)
advcl(speed, exercise)
advmod(exercise, separately)
punct(exercise, ,)
advmod(enable, thus)
advcl(exercise, enable)
det(effort, a)
amod(effort, massive)
punct(effort, ,)
amod(effort, concentrate)
obj(enable, effort)
mark(focus, to)
aux:pass(focus, be)
acl(effort, focus)
case(each, on)
obl(focus, each)
punct(increase, .)
nsubj(need, you)
aux(need, will)
root(ROOT, need)
nmod:poss(Stands, you)
compound(Stands, Weider)
compound(Stands, Power)
obj(need, Stands)
case(exercise, for)
det(exercise, this)
amod(exercise, fine)
obl(need, exercise)
cc(here, and)
conj(need, here)
cop(here, be)
det(way, the)
nsubj(here, way)
nsubj:pass(do, it)
aux:pass(do, be)
acl:relcl(way, do)
punct(1, :)
obj(do, 1)
punct(need, .)
root(ROOT, place)
nmod:poss(power, you)
obj(place, power)
xcomp(place, Stands)
case(position, in)
obl(Stands, position)
cc(adjust, and)
conj(place, adjust)
nmod:poss(height, they)
obj(adjust, height)
mark(correspond, so)
fixed(so, that)
nsubj(correspond, this)
aux(correspond, will)
advcl(adjust, correspond)
case(height, to)
det(height, the)
obl(correspond, height)
case(shoulder, of)
nmod:poss(shoulder, you)
nmod(height, shoulder)
mark(be, when)
nsubj(be, you)
advcl(correspond, be)
case(leg, in)
det(leg, a)
amod(leg, deep)
obl(be, leg)
advcl(be, split)
case(clean, as)
case(clean, for)
det(clean, a)
amod(clean, heavy)
obl(split, clean)
punct(place, . )
nummod(place, 2)
punct(2, .)
root(ROOT, place)
det(barbell, a)
advmod(load, suitably)
punct(load, -)
amod(barbell, load)
obj(place, barbell)
case(they, across)
obl(place, they)
punct(place, ;)
punct(place, ;)
parataxis(place, grasp)
det(bar, the)
obj(grasp, bar)
punct(rest, ()
nsubj(rest, which)
aux(rest, will)
acl:relcl(bar, rest)
case(back, against)
det(back, the)
obl(rest, back)
case(neck, of)
nmod:poss(neck, you)
nmod(back, neck)
punct(rest, ))
punct(place, ;)
punct(place, ;)
parataxis(place, extend)
nmod:poss(foot, you)
obj(extend, foot)
advmod(extend, forward)
cc(backward, and)
conj(forward, backward)
mark(split, until)
nsubj(split, you)
cop(split, be)
case(leg, in)
det(leg, a)
amod(leg, deep)
nsubj(split, leg)
advcl(extend, split)
punct(place, .)
advmod(raise, now)
root(ROOT, raise)
det(weight, the)
obj(raise, weight)
mark(straightening, by)
advcl(raise, straightening)
nmod:poss(leg, you)
amod(leg, front)
obj(straightening, leg)
punct(raise, ,)
mark(move, without)
advcl(straightening, move)
nmod:poss(foot, you)
obj(move, foot)
punct(raise, .)
mark(straight, when)
det(knee, the)
amod(knee, front)
nsubj(straight, knee)
cop(straight, be)
advcl(allow, straight)
cc(lock, and)
conj(straight, lock)
punct(allow, ,)
root(ROOT, allow)
obj(allow, it)
mark(bend, to)
xcomp(allow, bend)
advmod(bend, again)
mark(feel, until)
nsubj(feel, you)
advcl(bend, feel)
det(bar, the)
nsubj(come, bar)
ccomp(feel, come)
advmod(come, lightly)
case(contact, into)
obl(come, contact)
case(side, with)
det(side, the)
nmod(contact, side)
case(Stands, of)
det(Stands, the)
compound(Stands, power)
nmod(side, Stands)
punct(allow, .)
nummod(take, 3)
punct(3, .)
mark(take, after)
nsubj(take, you)
aux(take, have)
advcl(allow, take)
det(breather, a)
obj(take, breather)
punct(reverse, ,)
conj(take, reverse)
det(position, the)
obj(reverse, position)
case(leg, of)
nmod:poss(leg, you)
nmod(position, leg)
mark(now, so)
fixed(so, that)
det(thigh, the)
amod(thigh, front)
nsubj(now, thigh)
case(exercise, of)
det(exercise, the)
amod(exercise, previous)
nmod(thigh, exercise)
cop(now, be)
advmod(reverse, now)
case(rear, to)
det(rear, the)
obl(now, rear)
punct(thigh, ,)
cc(thigh, and)
det(thigh, the)
compound(thigh, rear)
conj(rear, thigh)
advmod(thigh, now)
case(front, to)
det(front, the)
nmod(thigh, front)
punct(perform, ,)
cc(perform, and)
conj(thigh, perform)
det(movement, the)
amod(movement, same)
obj(perform, movement)
case(manner, in)
det(manner, the)
amod(manner, same)
obl(perform, manner)
punct(Lunge, .)
nsubj(Lunge, that)
cop(Lunge, be)
det(Lunge, the)
nummod(Leg, one)
punct(Leg, -)
compound(Lunge, Leg)
parataxis(perform, Lunge)
case(nutshell, in)
det(nutshell, a)
nmod(Lunge, nutshell)
punct(allow, .)
nsubj(have, you)
aux(have, should)
root(ROOT, have)
det(couple, a)
obj(have, couple)
case(partner, of)
compound(partner, training)
nmod(couple, partner)
mark(stand, to)
xcomp(have, stand)
obl(stand, by)
mark(make, when)
nsubj(make, you)
advcl(stand, make)
nmod:poss(experiment, you)
amod(experiment, first)
obj(make, experiment)
advmod(safety, just)
case(safety, for)
obl(make, safety)
punct(have, .)
nsubj(begin, you)
aux(begin, should)
advmod(begin, also)
root(ROOT, begin)
det(exercise, this)
obj(begin, exercise)
case(barbell, with)
det(barbell, a)
advmod(light, very)
amod(barbell, light)
obl(begin, barbell)
mark(become, until)
nsubj(become, you)
advcl(begin, become)
xcomp(become, accustom)
case(it, to)
obl(accustom, it)
obl:npmod(wise, balance)
punct(wise, -)
advmod(accustom, wise)
punct(begin, .)
discourse(wobble, oh)
punct(wobble, ,)
nsubj(wobble, you)
aux(wobble, will)
root(ROOT, wobble)
cc(weave, and)
conj(wobble, weave)
det:predet(bit, quite)
det(bit, a)
obj(weave, bit)
case(first, at)
obl(weave, first)
punct(wobble, .)
cc(worry, but)
aux(worry, do)
advmod(worry, not)
root(ROOT, worry)
punct(worry, .)
mark(end, before)
nmod:poss(experiment, you)
amod(experiment, first)
compound(experiment, training)
nsubj(end, experiment)
aux(end, have)
advcl(improvement, end)
advmod(end, there)
aux(improvement, will)
cop(improvement, be)
det(improvement, a)
amod(improvement, big)
root(ROOT, improvement)
cc(raise, and)
advmod(know, almost)
mark(know, before)
nsubj(know, you)
advcl(raise, know)
obj(know, it)
nsubj(raise, you)
aux(raise, will)
aux(raise, be)
conj(improvement, raise)
cc(lower, and)
conj(raise, lower)
obj(lower, yourself)
advmod(veteran, just)
case(veteran, like)
det(veteran, a)
obl(lower, veteran)
punct(improvement, !)
punct(improvement, !)
mark(suggest, although)
nsubj(suggest, I)
advcl(be, suggest)
mark(hold, that)
nsubj(hold, you)
ccomp(suggest, hold)
det(bar, the)
obj(hold, bar)
case(back, at)
det(back, the)
obl(hold, back)
case(neck, of)
det(neck, the)
nmod(back, neck)
expl(be, there)
root(ROOT, be)
det(reason, no)
nsubj(be, reason)
advmod(make, why)
nsubj(make, you)
aux(make, should)
advmod(make, not)
acl(reason, make)
det(experiment, some)
obj(make, experiment)
case(bar, with)
det(bar, the)
nmod(experiment, bar)
acl(bar, hold)
case(front, in)
obl(hold, front)
case(neck, of)
det(neck, the)
nmod(front, neck)
punct(lifter, .)
compound(style, Squat)
punct(style, -)
compound(lifter, style)
nsubj(benefit, lifter)
cc(lifter, and)
compound(lifter, leg-split)
conj(lifter, lifter)
aux(benefit, would)
advmod(benefit, both)
parataxis(be, benefit)
advmod(benefit, enormously)
mark(practice, by)
advcl(benefit, practice)
det(variation, those)
obj(practice, variation)
acl(variation, provide)
mark(remember, that)
nsubj(remember, they)
ccomp(provide, remember)
mark(make, to)
xcomp(remember, make)
amod(set, alternate)
obj(make, set)
case(leg, with)
det(leg, the)
amod(leg, left)
cc(right, and)
conj(left, right)
nmod(set, leg)
case(front, to)
det(front, the)
obl(make, front)
punct(benefit, .)
det(bed, the)
advmod(beautiful, most)
amod(bed, beautiful)
nsubj(yard, bed)
case(pansy, of)
nmod(bed, pansy)
nsubj(see, I)
aux(see, have)
acl:relcl(pansy, see)
cop(yard, be)
case(yard, in)
det(yard, a)
compound(yard, South)
compound(yard, Dakota)
root(ROOT, yard)
case(day, on)
det(day, a)
amod(day, sizzling)
obl(yard, day)
punct(yard, .)
nsubj(suppose, pansy)
aux(suppose, be)
parataxis(yard, suppose)
mark(like, to)
xcomp(suppose, like)
obj(like, it)
xcomp(like, cool)
punct(healthy, ,)
cc(healthy, but)
det(flower, those)
amod(flower, great)
amod(flower, velvety)
nsubj(healthy, flower)
cop(healthy, be)
conj(suppose, healthy)
cc(perky, and)
conj(healthy, perky)
case(sun, in)
det(sun, the)
amod(sun, glaring)
obl(healthy, sun)
punct(yard, . )
nsubj(seek, I)
root(ROOT, seek)
compound:prt(seek, out)
det(gardener, the)
obj(seek, gardener)
cc(ask, and)
conj(seek, ask)
obj(ask, he)
obj(produce, what)
nsubj(do, he)
acl:relcl(what, do)
mark(produce, to)
advcl(ask, produce)
amod(beauty, such)
obj(produce, beauty)
case(weather, in)
det(weather, that)
obl(produce, weather)
punct(seek, .)
nsubj(seem, he)
root(ROOT, seem)
xcomp(seem, puzzle)
case(question, by)
nmod:poss(question, my)
obl(puzzle, question)
punct(seem, .)
punct(seem, ``)
nsubj(love, I)
advmod(love, just)
ccomp(say, love)
obj(love, they)
punct(say, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
punct(say, .)
det(more, the)
nsubj(convinced, more)
nsubj(talk, I)
acl:relcl(more, talk)
case(he, with)
obl(talk, he)
punct(convinced, ,)
mark(convinced, the)
advmod(convinced, more)
root(ROOT, convinced)
nsubj(become, I)
ccomp(convinced, become)
mark(secret, that)
nsubj(secret, that)
cop(secret, be)
det(secret, the)
ccomp(become, secret)
case(bloom, of)
nmod:poss(bloom, they)
amod(bloom, riotous)
nmod(secret, bloom)
punct(convinced, .)
advmod(express, of)
fixed(of, course)
nmod:poss(love, he)
nsubj:pass(express, love)
aux:pass(express, be)
root(ROOT, express)
case(care, in)
amod(care, intelligent)
obl(express, care)
punct(express, .)
nsubj(plant, he)
root(ROOT, plant)
det(seed, the)
compound(seed, pansy)
obj(plant, seed)
obl:npmod(plant, himself)
punct(plant, ,)
advcl(plant, buy)
obj(buy, they)
case(specialist, from)
det(specialist, a)
amod(specialist, pansy)
obl(buy, specialist)
punct(plant, .)
det(specialist, these)
nsubj(do, specialist)
punct(learn, ,)
nsubj(learn, I)
parataxis(specialist, learn)
punct(do, ,)
aux(do, have)
root(ROOT, do)
det(deal, a)
amod(deal, great)
obj(do, deal)
case(work, of)
nmod(deal, work)
mark(improve, to)
advcl(do, improve)
det(size, the)
obj(improve, size)
cc(health, and)
conj(size, health)
case(plant, of)
det(plant, the)
nmod(size, plant)
cc(flower, and)
det(flower, the)
amod(flower, result)
conj(plant, flower)
punct(do, .)
nmod:poss(seed, they)
nsubj(produce, seed)
root(ROOT, produce)
amod(plant, vigorous)
compound(plant, bloom)
obj(produce, plant)
det:predet(size, half)
advmod(produce, again)
det(size, the)
obj(produce, size)
case(strain, of)
det(strain, the)
amod(strain, unimprove)
nmod(size, strain)
punct(produce, . )
nsubj(ask, I)
root(ROOT, ask)
obj(ask, he)
mark(take, if)
nsubj(take, he)
advcl(ask, take)
obj(take, seed)
case(plant, from)
nmod:poss(plant, he)
amod(plant, own)
obl(take, plant)
punct(ask, .)
advmod(do, occasionally)
punct(do, ,)
mark(have, when)
nsubj(have, he)
advcl(do, have)
det(flower, a)
amod(flower, unusual)
obj(have, flower)
obj(want, that)
nsubj(want, he)
acl:relcl(flower, want)
obj(want, more)
mark(do, of)
nsubj(do, he)
root(ROOT, do)
punct(do, ;)
punct(do, ;)
cc(tell, but)
compound(seed, pansy)
nsubj(tell, seed)
punct(tell, ,)
nsubj(tell, he)
parataxis(do, tell)
obj(tell, I)
punct(tell, ,)
advmod(run, soon)
punct(run, ``)
parataxis(tell, run)
advmod(run, down)
punct(run, '')
punct(tell, .)
expl(best, it)
cop(best, be)
root(ROOT, best)
mark(buy, to)
csubj(best, buy)
obj(buy, they)
advmod(buy, fresh)
case(dealer, from)
det(dealer, a)
obl(buy, dealer)
nsubj(work, who)
aux(work, be)
acl:relcl(dealer, work)
mark(improve, to)
xcomp(work, improve)
obj(improve, they)
punct(best, .)
nmod:poss(soil, he)
nsubj(nothing, soil)
cop(nothing, be)
punct(nothing, ``)
root(ROOT, nothing)
amod(nothing, special)
punct(nothing, '')
punct(nothing, ,)
advmod(land, just)
amod(land, prairie)
appos(nothing, land)
punct(harrow, ,)
cc(harrow, but)
nsubj(harrow, he)
aux(harrow, have)
conj(nothing, harrow)
case(compost, in)
obl(harrow, compost)
mark(loose, until)
nsubj(loose, it)
cop(loose, be)
advcl(harrow, loose)
punct(spongy, ,)
conj(loose, spongy)
cc(black, and)
amod(black, brown)
punct(black, -)
conj(loose, black)
punct(nothing, . )
nsubj(finger, I)
root(ROOT, finger)
obj(finger, it)
cc(have, and)
conj(finger, have)
det(feeling, the)
obj(have, feeling)
case(adequacy, of)
nmod(feeling, adequacy)
nsubj(come, that)
acl:relcl(feeling, come)
case(texture, with)
det(texture, the)
amod(texture, right)
obl(come, texture)
punct(tilth, ,)
conj(texture, tilth)
cc(body, and)
conj(texture, body)
punct(finger, .)
expl(easy, it)
cop(easy, be)
advmod(easy, not)
root(ROOT, easy)
mark(describe, to)
csubj(easy, describe)
obj(describe, it)
punct(know, ,)
cc(know, but)
det(gardener, every)
nsubj(know, gardener)
conj(easy, know)
obj(know, it)
mark(touch, when)
nmod:poss(finger, he)
nsubj(touch, finger)
advcl(know, touch)
amod(soil, such)
obj(touch, soil)
punct(easy, .)
nsubj(easier, nothing)
cop(easier, be)
root(ROOT, easier)
mark(grow, to)
xcomp(easier, grow)
case(seed, from)
obl(grow, seed)
case(pansy, than)
obl(grow, pansy)
punct(easier, .)
nsubj(germinate, they)
root(ROOT, germinate)
advmod(germinate, quickly)
punct(germinate, ,)
det(plant, the)
amod(plant, tiny)
parataxis(germinate, plant)
acl(plant, appear)
case(week, in)
det(week, a)
obl(appear, week)
punct(grow, ,)
cc(grow, and)
conj(germinate, grow)
advmod(grow, along)
advmod(grow, lustily)
punct(germinate, .)
nsubj(matter, it)
aux(matter, do)
advmod(matter, not)
advmod(matter, really)
root(ROOT, matter)
det(month, which)
obj(matter, month)
case(year, of)
det(year, the)
nmod(month, year)
nsubj(sow, you)
acl:relcl(year, sow)
obj(sow, they)
punct(germinate, ,)
cc(germinate, but)
nsubj(germinate, they)
conj(matter, germinate)
xcomp(germinate, best)
mark(have, when)
nsubj(have, they)
advcl(germinate, have)
det(variation, a)
amod(variation, wide)
obj(have, variation)
case(temperature, of)
nmod(variation, temperature)
punct(warm, ,)
advmod(warm, very)
amod(variation, warm)
advcl(warm, follow)
case(cool, by)
obl(follow, cool)
case(hour, in)
det(hour, the)
amod(hour, same)
nummod(hour, 24)
obl(follow, hour)
punct(matter, . )
nsubj(like, I)
root(ROOT, like)
mark(make, to)
xcomp(like, make)
det(seed, a)
obj(make, seed)
advmod(open, right)
case(open, in)
det(open, the)
obl(make, open)
punct(make, ,)
mark(start, though)
amod(people, many)
nsubj(start, people)
advcl(make, start)
obj(start, they)
advmod(start, successfully)
case(frame, in)
amod(frame, cold)
obl(start, frame)
punct(like, .)
nsubj(have, pansy)
aux(have, do)
advmod(have, not)
root(ROOT, have)
mark(coddled, to)
aux:pass(coddled, be)
xcomp(have, coddled)
punct(have, ;)
punct(have, ;)
nsubj(have, they)
aux(have, would)
advmod(have, rather)
parataxis(have, have)
obj(have, thing)
amod(thing, rug)
punct(thing, ,)
case(protection, with)
advmod(protection, only)
amod(protection, moderate)
obl(have, protection)
case(day, on)
det(day, the)
amod(day, coldest)
nmod(protection, day)
punct(have, .)
mark(use, if)
nsubj(use, you)
aux(use, do)
advcl(sure, use)
det(frame, a)
amod(frame, cold)
obj(use, frame)
cop(sure, be)
root(ROOT, sure)
mark(adequate, that)
nsubj(adequate, it)
cop(adequate, be)
nsubj(adequate, ventilation)
cop(adequate, be)
ccomp(sure, adequate)
punct(adequate, .)
case(seed, for)
nmod:poss(seed, my)
obl(use, seed)
nsubj(use, I)
parataxis(sure, use)
amod(soil, good)
compound(soil, garden)
obj(use, soil)
case(sand, with)
det(sand, a)
amod(sand, little)
obl(use, sand)
acl(sand, add)
mark(encourage, to)
advcl(add, encourage)
xcomp(encourage, root)
punct(sure, . )
nsubj(dig, I)
root(ROOT, dig)
obj(dig, it)
punct(rake, ,)
conj(dig, rake)
obj(rake, it)
xcomp(rake, smooth)
punct(sow, ,)
conj(dig, sow)
det(seed, the)
obj(sow, seed)
cc(wet, and)
conj(dig, wet)
obj(wet, they)
compound:prt(wet, down)
case(spray, with)
det(spray, a)
compound(spray, fog)
obl(wet, spray)
punct(dig, .)
advmod(cover, then)
nsubj(cover, I)
root(ROOT, cover)
det(sow, the)
obj(cover, sow)
case(board, with)
det(board, a)
obl(cover, board)
punct(cover, .)
nsubj(keep, this)
root(ROOT, keep)
obj(keep, it)
xcomp(keep, cool)
cc(moist, and)
conj(cool, moist)
cc(protect, and)
conj(keep, protect)
obj(protect, it)
case(bird, from)
obl(protect, bird)
punct(keep, .)
nsubj(carry, ant)
root(ROOT, carry)
compound:prt(carry, away)
det(seed, the)
obj(carry, seed)
advmod(sure, so)
advmod(sure, better)
cop(sure, be)
conj(carry, sure)
mark(be, that)
expl(be, there)
ccomp(sure, be)
det(hill, no)
compound(hill, ant)
nsubj(be, hill)
advmod(be, nearby)
punct(carry, .)
mark(appear, when)
det(sprinkling, the)
amod(sprinkling, first)
nsubj(appear, sprinkling)
case(green, of)
nmod(sprinkling, green)
root(ROOT, appear)
nsubj(remove, I)
ccomp(appear, remove)
det(board, the)
obj(remove, board)
punct(remove, . )
det(light, a)
nsubj(keep, light)
punct(mulch, ,)
amod(mulch, porous)
conj(light, mulch)
acl(mulch, apply)
advmod(keep, now)
root(ROOT, keep)
det(root, the)
obj(keep, root)
xcomp(keep, cool)
cc(soft, and)
det(soil, the)
nsubj(soft, soil)
conj(keep, soft)
case(day, during)
det(day, these)
amod(day, early)
obl(soft, day)
case(growth, of)
nmod(day, growth)
punct(keep, . )
nsubj(like, I)
root(ROOT, like)
obj(like, sawdust)
case(this, for)
obl(like, this)
punct(hay, ,)
cc(hay, or)
conj(sawdust, hay)
punct(like, .)
mark(have, when)
nsubj(have, they)
advcl(time, have)
nummod(leave, 4)
case(6, to)
nmod(4, 6)
obj(have, leave)
cc(plant, and)
cop(plant, be)
amod(plant, thrifty)
amod(plant, little)
conj(have, plant)
punct(time, ,)
nsubj(time, it)
cop(time, be)
root(ROOT, time)
mark(set, to)
acl(time, set)
obj(set, they)
compound:prt(set, out)
mark(remain, where)
nsubj(remain, they)
aux(remain, be)
mark(remain, to)
advcl(set, remain)
punct(time, .)
det(time, every)
obl:tmod(cause, time)
nsubj(transplant, you)
acl:relcl(time, transplant)
det(pansy, a)
obj(transplant, pansy)
nsubj(cause, you)
root(ROOT, cause)
nsubj(flower, it)
cop(flower, be)
ccomp(cause, flower)
mark(become, to)
acl(flower, become)
xcomp(become, smaller)
punct(cause, .)
det(moral, the)
nsubj(be, moral)
root(ROOT, be)
punct(be, :)
aux(transplant, do)
advmod(transplant, not)
ccomp(be, transplant)
obj(transplant, it)
advmod(oftener, any)
advmod(transplant, oftener)
mark(must, than)
nsubj(must, you)
advcl(oftener, must)
punct(be, .)
advmod(soon, as)
advmod(put, soon)
mark(large, as)
nsubj(large, they)
cop(large, be)
advcl(soon, large)
advmod(large, enough)
mark(move, to)
advcl(large, move)
punct(put, ,)
nsubj(put, I)
root(ROOT, put)
obj(put, mine)
nummod(inch, 9)
obl:npmod(apart, inch)
advmod(put, apart)
mark(bloom, where)
nsubj(bloom, they)
advcl(apart, be)
mark(bloom, to)
xcomp(be, bloom)
punct(put, . )
nsubj(put, I)
root(ROOT, put)
det(scoop, a)
amod(scoop, little)
obj(put, scoop)
case(rock, of)
amod(rock, pulverize)
compound(rock, phosphate)
nmod(scoop, rock)
cc(meal, or)
amod(meal, steam)
compound(meal, bone)
conj(rock, meal)
case(hole, into)
det(hole, each)
obl(put, hole)
case(plant, with)
det(plant, the)
nmod(hole, plant)
punct(put, .)
nsubj(encourage, that)
root(ROOT, encourage)
xcomp(encourage, root)
punct(develop, ,)
cc(develop, and)
det(better, the)
advmod(develop, better)
conj(encourage, develop)
det(root, the)
obj(develop, root)
punct(larger, ,)
det(larger, the)
amod(root, larger)
cc(plentiful, and)
advmod(plentiful, more)
conj(larger, plentiful)
det(flower, the)
conj(larger, flower)
punct(encourage, .)
nsubj(glutton, pansy)
cop(glutton, be)
root(ROOT, glutton)
punct(glutton, . )
nsubj(doubt, I)
root(ROOT, doubt)
mark(possible, if)
expl(possible, it)
cop(possible, be)
advcl(doubt, possible)
mark(overfee, to)
csubj(possible, overfee)
obj(overfee, they)
punct(doubt, . )
nsubj(spade, I)
root(ROOT, spade)
obj(spade, lot)
case(compost, of)
nmod(lot, compost)
case(bed, into)
nmod:poss(bed, they)
obl(spade, bed)
punct(spade, ;)
punct(spade, ;)
advcl(spade, lack)
mark(fine, that)
punct(fine, ,)
amod(spread, decay)
compound(spread, manure)
nsubj(fine, spread)
case(bed, over)
det(bed, the)
nmod(spread, bed)
cop(fine, be)
ccomp(lack, fine)
punct(spade, .)
nummod(year, one)
obl:tmod(set, year)
nsubj(set, I)
advmod(set, simply)
root(ROOT, set)
det(plant, the)
obj(set, plant)
case(remains, in)
det(remains, the)
obl(set, remains)
case(pile, of)
det(pile, a)
compound(pile, compost)
nmod(remains, pile)
punct(set, ,)
case(which, to)
obl(add, which)
det(sand, a)
amod(sand, little)
nsubj:pass(add, sand)
aux(add, have)
aux:pass(add, be)
acl:relcl(pile, add)
punct(have, ,)
cc(have, and)
nsubj(have, I)
conj(set, have)
det(pansy, the)
advmod(beautiful, most)
amod(pansy, beautiful)
obj(have, pansy)
case(my, in)
nmod:poss(any, my)
punct(any, ,)
cc(any, or)
conj(pansy, any)
case(experience, of)
nmod:poss(neighbor, my)
nmod:poss(experience, neighbor)
case(neighbor, 's)
nmod(any, experience)
punct(set, .)
case(addition, in)
obl(benefit, addition)
case(soil, to)
det(soil, the)
amod(soil, rich)
nmod(addition, soil)
nsubj(benefit, they)
root(ROOT, benefit)
case(feeding, by)
obl(benefit, feeding)
case(water, of)
compound(water, manure)
nmod(feeding, water)
det(week, every)
amod(week, other)
obl:tmod(benefit, week)
punct(benefit, ,)
advcl(benefit, dilut)
case(color, to)
det(color, the)
obl(dilut, color)
case(tea, of)
amod(tea, weak)
nmod(color, tea)
punct(benefit, .)
case(substitute, as)
det(substitute, a)
obl(use, substitute)
case(this, for)
nmod(substitute, this)
punct(use, ,)
amod(fertilizer, organic)
nsubj:pass(use, fertilizer)
acl(fertilizer, dissolve)
case(water, in)
obl(dissolve, water)
case(strength, to)
det:predet(strength, half)
det(strength, the)
obl(dissolve, strength)
case(direction, in)
det(direction, the)
nmod(strength, direction)
punct(use, ,)
aux(use, may)
aux:pass(use, be)
root(ROOT, use)
punct(use, .)
nsubj(need, they)
root(ROOT, need)
obj(need, mulch)
punct(need, .)
nsubj(put, we)
root(ROOT, put)
det(mulch, a)
compound(mulch, light)
obj(put, mulch)
case(seedling, over)
det(seedling, the)
obl(put, seedling)
punct(put, ;)
punct(put, ;)
advmod(use, now)
nsubj(use, we)
aux(use, must)
parataxis(put, use)
det(one, a)
amod(one, heavy)
obj(use, one)
punct(put, .)
nummod(inch, three)
nsubj(do, inch)
case(material, of)
amod(material, porous)
nmod(inch, material)
aux(do, will)
root(ROOT, do)
det(job, a)
amod(job, good)
obj(do, job)
mark(keep, of)
acl(job, keep)
obj(keep, weed)
compound:prt(keep, down)
cc(moist, and)
det(soil, the)
nsubj(moist, soil)
conj(do, moist)
cc(cool, and)
conj(moist, cool)
punct(do, .)
mark(come, when)
nsubj(come, winter)
advcl(moist, come)
cop(ready, be)
xcomp(come, ready)
case(mulch, with)
amod(mulch, additional)
obl(ready, mulch)
punct(do, . )
nsubj(like, I)
root(ROOT, like)
obj(like, hay)
case(this, for)
obl(like, this)
cc(apply, and)
conj(like, apply)
obj(apply, it)
mark(show, so)
fixed(so, that)
advmod(top, only)
det(top, the)
nsubj(show, top)
case(plant, of)
det(plant, the)
nmod(top, plant)
advcl(apply, show)
advmod(frost, right)
case(frost, after)
det(frost, a)
amod(frost, good)
obl(show, frost)
punct(like, .)
nsubj(keep, that)
root(ROOT, keep)
case(cold, in)
det(cold, the)
obl(keep, cold)
punct(retain, ,)
conj(keep, retain)
obj(retain, moisture)
cc(prevent, and)
conj(keep, prevent)
det(heave, the)
obj(prevent, heave)
case(freezing, of)
amod(freezing, alternate)
nmod(heave, freezing)
cc(thaw, and)
conj(freezing, thaw)
punct(keep, .)
aux(miss, do)
advmod(miss, not)
root(ROOT, miss)
det(pansy, the)
obj(miss, pansy)
nsubj(appear, that)
acl:relcl(pansy, appear)
case(time, from)
obl(appear, time)
case(time, to)
nmod(time, time)
case(winter, through)
det(winter, the)
obl(appear, winter)
punct(miss, .)
mark(be, whenever)
expl(be, there)
advcl(miss, be)
det(thaw, a)
nsubj(be, thaw)
cc(day, or)
det(day, a)
amod(day, few)
amod(day, sunny)
conj(thaw, day)
punct(likely, ,)
nsubj(likely, you)
aux(likely, will)
cop(likely, be)
parataxis(miss, likely)
mark(find, to)
xcomp(likely, find)
det(blossom, a)
amod(blossom, brave)
amod(blossom, little)
obj(find, blossom)
cc(two, or)
conj(blossom, two)
punct(miss, .)
mark(enough, if)
nsubj(enough, those)
cop(enough, be)
advmod(enough, not)
advcl(grow, enough)
case(you, for)
obl(enough, you)
punct(grow, ,)
advmod(grow, why)
advmod(grow, not)
root(ROOT, grow)
obj(grow, some)
advmod(bloom, just)
case(winter, for)
compound(bloom, winter)
advcl(grow, bloom)
punct(grow, ?)
punct(grow, ?)
det(pansy, the)
nsubj(bloom, pansy)
nsubj(cherish, I)
acl:relcl(pansy, cherish)
advmod(bloom, most)
root(ROOT, bloom)
case(I, for)
obl(bloom, I)
case(February, in)
obl(bloom, February)
case(winter, during)
det(winter, a)
advmod(cold, particularly)
amod(winter, cold)
obl(bloom, winter)
punct(bloom, . )
nsubj(start, I)
root(ROOT, start)
det(seed, the)
obj(start, seed)
case(flat, in)
det(flat, a)
obl(start, flat)
case(June, in)
obl(start, June)
cc(set, and)
conj(start, set)
compound:prt(set, out)
det(pansy, the)
amod(pansy, little)
obj(set, pansy)
case(frame, in)
det(frame, a)
amod(frame, cold)
obl(set, frame)
punct(start, . )
punct(better, ()
det(greenhouse, a)
amod(greenhouse, unheated)
nsubj(better, greenhouse)
aux(better, would)
aux(better, have)
cop(better, be)
root(ROOT, better)
punct(better, ,)
mark(have, if)
nsubj(have, I)
aux(have, have)
advcl(better, have)
obj(have, one)
punct(better, .)
punct(better, ))
det(plant, the)
nsubj(take, plant)
root(ROOT, take)
amod(night, zero)
obj(take, night)
case(stride, in)
nmod:poss(stride, they)
obl(take, stride)
punct(take, ,)
case(nothing, with)
obl(take, nothing)
cc(mat, but)
det(mat, a)
conj(nothing, mat)
case(straw, of)
nmod(mat, straw)
case(glass, over)
det(glass, the)
nmod(mat, glass)
mark(protect, to)
acl(mat, protect)
obj(protect, they)
punct(take, .)
case(response, in)
obl(budd, response)
case(day, to)
det(day, the)
amod(day, lengthening)
nmod(response, day)
case(February, of)
nmod(day, February)
nsubj(budd, they)
root(ROOT, budd)
punct(budd, ,)
advmod(bloom, then)
conj(budd, bloom)
nmod:poss(flower, they)
nummod(inch, 4)
punct(inch, -)
compound(flower, inch)
amod(flower, velvety)
obj(bloom, flower)
punct(budd, .)
det(frame, that)
amod(frame, cold)
nsubj(builder, frame)
cop(builder, be)
nmod:poss(builder, my)
compound(builder, morale)
root(ROOT, builder)
punct(builder, ;)
punct(builder, ;)
nsubj(mass, it)
cop(mass, be)
parataxis(builder, mass)
case(bloom, of)
amod(bloom, bright)
nmod(mass, bloom)
acl(mass, set)
case(border, in)
det(border, a)
obl(set, border)
case(snow, of)
nmod(border, snow)
parataxis(builder, make)
nmod:poss(spirit, my)
obj(make, spirit)
xcomp(make, rise)
det(time, every)
obl:tmod(rise, time)
nsubj(look, I)
acl:relcl(time, look)
case(it, at)
obl(look, it)
punct(builder, .)
case(strawberry, like)
obl(exciting, strawberry)
case(December, in)
nmod(strawberry, December)
punct(exciting, ,)
nsubj(exciting, pansy)
cop(exciting, be)
advmod(more, far)
advmod(exciting, more)
root(ROOT, exciting)
case(February, in)
obl(exciting, February)
case(May, than)
case(May, in)
obl(exciting, May)
punct(exciting, .)
parataxis(exciting, try)
det(pickup, that)
amod(pickup, late)
compound(pickup, winter)
obj(try, pickup)
mark(tired, when)
nsubj(tired, you)
cop(tired, be)
advmod(tired, so)
advcl(try, tired)
case(cold, of)
obl(tired, cold)
cc(snow, and)
conj(cold, snow)
mark(feel, that)
nsubj(feel, you)
advcl(tired, feel)
nsubj(take, you)
advmod(take, just)
aux(take, can)
advmod(take, not)
ccomp(feel, take)
det(day, another)
obj(take, day)
case(it, of)
nmod(day, it)
punct(exciting, .)
det(day, the)
nsubj(come, day)
aux(come, will)
root(ROOT, come)
punct(come, ,)
case(midsummer, in)
obl(come, midsummer)
punct(come, ,)
mark(find, when)
nsubj(find, you)
advcl(come, find)
nmod:poss(plant, you)
obj(find, plant)
xcomp(find, become)
punct(leggy, ``)
obj(become, leggy)
punct(leggy, '')
punct(become, ,)
conj(become, run)
case(foliage, to)
amod(grow, tall)
punct(grow, -)
amod(foliage, grow)
obl(run, foliage)
case(expense, at)
det(expense, the)
nmod(foliage, expense)
case(blossom, of)
nmod(expense, blossom)
punct(try, .)
parataxis(come, try)
xcomp(try, pegg)
compound:prt(pegg, down)
det(branch, each)
amod(branch, separate)
obj(pegg, branch)
case(earth, to)
det(earth, the)
obl(pegg, earth)
punct(pegg, ,)
advcl(pegg, use)
det(pin, a)
compound(pin, bobby)
obj(use, pin)
mark(hold, to)
acl(pin, hold)
obj(hold, it)
advmod(hold, there)
punct(come, .)
root(ROOT, Pick)
det(flower, the)
obj(Pick, flower)
punct(keep, ,)
conj(Pick, keep)
det(soil, the)
obj(keep, soil)
xcomp(keep, dampen)
punct(take, ,)
cc(take, and)
nsubj(take, each)
case(branch, of)
det(branch, the)
amod(branch, peg)
punct(peg, -)
compound:prt(peg, down)
nmod(each, branch)
aux(take, will)
conj(Pick, take)
obj(take, root)
cc(become, and)
conj(take, become)
det(plant, a)
amod(plant, little)
xcomp(become, plant)
cc(go, and)
conj(become, go)
mark(bloom, on)
advcl(go, bloom)
case(rest, for)
det(rest, the)
obl(bloom, rest)
case(season, of)
det(season, the)
nmod(rest, season)
punct(Pick, .)
advmod(soon, as)
advmod(cut, soon)
mark(assure, as)
det(tug, a)
amod(tug, experimental)
nsubj(assure, tug)
advcl(soon, assure)
obj(assure, you)
mark(take, that)
nsubj(take, root)
aux(take, have)
ccomp(assure, take)
advmod(take, over)
punct(cut, ,)
root(ROOT, cut)
obj(cut, it)
compound:prt(cut, off)
case(plant, from)
det(plant, the)
compound(plant, mother)
obl(cut, plant)
punct(cut, . )
det(practice, a)
amod(practice, second)
cc(good, and)
advmod(good, also)
amod(practice, good)
nsubj(be, practice)
root(ROOT, be)
mark(shear, to)
ccomp(be, shear)
compound:prt(shear, off)
det(top, the)
obj(shear, top)
punct(shear, ,)
advcl(shear, leave)
det(stub, a)
compound(stub, inch)
amod(stub, high)
obj(leave, stub)
case(leaf, with)
advmod(leaf, just)
det(leaf, a)
obl(leave, leaf)
cc(two, or)
conj(leaf, two)
case(branch, on)
det(branch, each)
nmod(leaf, branch)
punct(be, .)
det(plant, these)
amod(plant, cut-down)
nsubj(bud, plant)
aux(bud, will)
root(ROOT, bud)
cc(blossom, and)
conj(bud, blossom)
case(time, in)
amod(time, record)
obl(bud, time)
cc(behave, and)
aux(behave, will)
conj(bud, behave)
advmod(do, just)
mark(do, as)
nsubj(do, they)
aux(spring, do)
case(spring, in)
amod(spring, early)
advcl(behave, spring)
punct(bud, . )
nsubj(like, I)
root(ROOT, like)
mark(shear, to)
xcomp(like, shear)
det:predet(plant, half)
nmod:poss(plant, my)
obj(shear, plant)
case(time, at)
det(time, a)
obl(shear, time)
punct(shear, ,)
advcl(shear, leave)
nummod(half, one)
obj(leave, half)
case(they, of)
nmod(half, they)
mark(blossom, to)
xcomp(leave, blossom)
mark(start, while)
det(half, the)
amod(half, second)
nsubj:pass(start, half)
aux(start, be)
aux:pass(start, get)
advcl(blossom, start)
case(round, on)
nmod:poss(round, its)
amod(round, new)
obl(start, round)
case(bloom, of)
nmod(round, bloom)
punct(like, .)
advmod(need, probably)
det(one, no)
nsubj(need, one)
root(ROOT, need)
mark(tell, to)
xcomp(need, tell)
obj(tell, you)
mark(be, that)
det(way, the)
nsubj(be, way)
mark(stop, to)
acl(way, stop)
det(bloom, all)
obj(stop, bloom)
ccomp(tell, be)
mark(let, to)
ccomp(be, let)
det(blossom, the)
obj(let, blossom)
xcomp(let, go)
case(seed, to)
obl(go, seed)
punct(need, .)
nmod:poss(aim, Nature)
case(Nature, 's)
nsubj(be, aim)
punct(aim, ,)
amod(aim, different)
case(ours, from)
obl(different, ours)
punct(be, ,)
root(ROOT, be)
mark(provide, to)
ccomp(be, provide)
case(generation, for)
det(generation, the)
compound(generation, come)
obl(provide, generation)
punct(be, .)
nsubj(do, that)
advcl(accomplish, do)
punct(accomplish, ,)
nmod:poss(work, she)
nsubj:pass(accomplish, work)
aux:pass(accomplish, be)
root(ROOT, accomplish)
cc(ignore, and)
nsubj(ignore, she)
conj(accomplish, ignore)
det(plant, the)
obj(ignore, plant)
punct(accomplish, .)
root(ROOT, here)
cop(here, be)
det(word, a)
nsubj(here, word)
case(advice, of)
nmod(word, advice)
mark(go, when)
nsubj(go, you)
advcl(word, go)
xcomp(go, shop)
case(seed, for)
nmod:poss(seed, you)
compound(seed, pansy)
obl(shop, seed)
punct(here, .)
root(ROOT, go)
case(grower, to)
det(grower, a)
amod(grower, reputable)
obl(go, grower)
punct(grower, ,)
advmod(specialist, preferably)
det(specialist, a)
amod(specialist, pansy)
appos(grower, specialist)
punct(go, .)
expl(harder, it)
cop(harder, be)
advmod(harder, no)
root(ROOT, harder)
mark(raise, to)
csubj(harder, raise)
amod(plant, big)
punct(healthy, ,)
conj(big, healthy)
punct(plant, ,)
amod(plant, bloom)
obj(raise, plant)
case(thing, than)
amod(thing, weak)
punct(thing, ,)
advmod(little, sickly)
amod(thing, little)
obl(raise, thing)
punct(harder, ;)
punct(harder, ;)
case(fact, in)
obl(easier, fact)
nsubj(easier, it)
cop(easier, be)
parataxis(harder, easier)
punct(harder, .)
cc(get, but)
nsubj(get, you)
aux(get, will)
advmod(get, never)
root(ROOT, get)
amod(flower, better)
obj(get, flower)
case(seed, than)
det(seed, the)
obl(get, seed)
nsubj(grow, you)
acl:relcl(seed, grow)
punct(get, .)
amod(people, many)
nsubj(think, people)
root(ROOT, think)
mark(last, that)
nsubj(last, pansy)
ccomp(think, last)
advmod(week, only)
det(week, a)
amod(week, few)
obl:tmod(last, week)
punct(over, ,)
advmod(over, then)
nmod:poss(period, they)
nsubj(over, period)
case(growth, of)
nmod(period, growth)
cc(bloom, and)
conj(growth, bloom)
cop(over, be)
ccomp(think, over)
punct(think, .)
nsubj(true, that)
cop(true, be)
advmod(true, not)
root(ROOT, true)
punct(true, .)
mark(care, if)
det(plant, the)
nsubj:pass(care, plant)
aux:pass(care, be)
advcl(prolific, care)
obl(care, for)
cc(protect, and)
conj(care, protect)
case(winter, over)
det(winter, the)
obl(protect, winter)
punct(prolific, ,)
det(year, the)
amod(year, second)
nsubj(prolific, year)
cop(prolific, be)
advmod(prolific, more)
root(ROOT, prolific)
case(first, than)
det(first, the)
obl(prolific, first)
punct(prolific, .)
aux(like, would)
nsubj(like, you)
root(ROOT, like)
mark(grow, to)
xcomp(like, grow)
compound(pansy, exhibition)
obj(grow, pansy)
punct(like, ?)
punct(like, ?)
root(ROOT, remove)
advmod(half, about)
det:predet(branch, half)
det(branch, the)
obj(remove, branch)
case(plant, from)
det(plant, each)
obl(remove, plant)
punct(remove, ,)
advcl(remove, leave)
advmod(strongest, only)
det(strongest, the)
obj(leave, strongest)
case(bud, with)
det(bud, the)
amod(bud, largest)
obl(strongest, bud)
punct(remove, .)
det(flower, the)
nsubj(huge, flower)
aux(huge, will)
cop(huge, be)
root(ROOT, huge)
punct(huge, .)
nsubj(have, pansy)
parataxis(huge, have)
obj(have, character)
punct(huge, .)
nsubj(stick, they)
root(ROOT, stick)
case(principle, to)
nmod:poss(principle, they)
obl(stick, principle)
punct(insist, ,)
conj(stick, insist)
case(due, upon)
nmod:poss(due, they)
obl(insist, due)
punct(grow, ,)
cc(grow, but)
conj(stick, grow)
cc(bloom, and)
conj(grow, bloom)
case(regularity, with)
amod(regularity, dependable)
obl(bloom, regularity)
mark(give, if)
advcl(bloom, give)
obj(give, it)
punct(stick, .)
root(ROOT, treat)
obj(treat, they)
advmod(treat, right)
cc(make, and)
nsubj(make, they)
aux(make, will)
conj(treat, make)
det(show, a)
xcomp(make, show)
det(month, every)
obl:tmod(show, month)
case(year, in)
det(year, the)
obl(show, year)
case(one, except)
det(one, the)
amod(one, frigid)
obl(show, one)
punct(treat, .)
root(ROOT, give)
iobj(give, they)
obj(give, food)
punct(shade, ,)
det(shade, some)
conj(food, shade)
punct(mulch, ,)
conj(food, mulch)
punct(water, ,)
conj(food, water)
cc(food, and)
amod(food, more)
conj(food, food)
punct(repay, ,)
cc(repay, and)
nsubj(repay, they)
aux(repay, will)
conj(give, repay)
nmod:poss(solicitude, you)
obj(repay, solicitude)
case(beauty, with)
obl(repay, beauty)
punct(give, . )
det(salad, a)
nsubj(addition, salad)
case(green, with)
nmod(salad, green)
cc(tomato, and)
conj(green, tomato)
cop(addition, be)
det(addition, a)
amod(addition, popular)
cc(healthful, and)
advmod(healthful, wonderfully)
conj(popular, healthful)
root(ROOT, addition)
case(meal, to)
det(meal, a)
nmod(addition, meal)
punct(add, ,)
cc(add, but)
conj(addition, add)
det(avocado, a)
obj(add, avocado)
cc(have, and)
nsubj(have, you)
conj(add, have)
obj(have, something)
advmod(special, really)
amod(something, special)
punct(addition, .)
det(fruit, this)
amod(fruit, delightful)
amod(fruit, tropical)
nsubj(become, fruit)
aux(become, have)
root(ROOT, become)
advmod(know, well)
punct(know, -)
xcomp(become, know)
case(year, in)
det(year, the)
amod(year, past)
nummod(year, thirty)
obl(know, year)
mark(make, because)
amod(method, modern)
compound(method, transportation)
nsubj(make, method)
aux(make, have)
advcl(become, make)
expl(make, it)
xcomp(make, possible)
mark(ship, to)
csubj(possible, ship)
obj(ship, avocado)
advmod(ship, anywhere)
case(States, in)
det(States, the)
compound(States, United)
obl(ship, States)
punct(become, .)
nsubj(have, it)
root(ROOT, have)
det(asset, a)
amod(asset, great)
amod(asset, many)
obj(have, asset)
mark(recommend, to)
acl(asset, recommend)
obj(recommend, it)
cc(should, and)
mark(make, if)
nsubj(make, you)
aux(make, have)
advmod(make, not)
advcl(should, make)
obj(make, avocado)
det(part, a)
obj(make, part)
case(diet, of)
nmod:poss(diet, you)
nmod(part, diet)
advmod(should, yet)
punct(should, ,)
nsubj(should, you)
advmod(should, really)
conj(have, should)
punct(have, .)
nsubj(find, you)
aux(find, will)
root(ROOT, find)
mark(fruit, that)
nsubj(fruit, avocado)
cop(fruit, be)
case(fruit, unlike)
det(fruit, any)
amod(fruit, other)
ccomp(find, fruit)
nsubj(taste, you)
aux(taste, have)
advmod(taste, ever)
acl:relcl(fruit, taste)
punct(find, .)
nsubj:pass(shape, it)
aux:pass(shape, be)
advmod(shape, roughly)
root(ROOT, shape)
case(pear, like)
det(pear, a)
amod(pear, large)
obl(shape, pear)
punct(dark, ,)
cc(dark, and)
mark(ripe, when)
advmod(ripe, properly)
advcl(dark, ripe)
punct(dark, ,)
nsubj(dark, it)
cop(dark, be)
conj(shape, dark)
amod(skin, green)
nsubj(cover, skin)
conj(dark, cover)
det(pulp, a)
amod(pulp, meaty)
punct(pulp, ,)
obl:npmod(like, melon)
punct(like, -)
amod(pulp, like)
obj(cover, pulp)
nsubj(have, that)
acl:relcl(pulp, have)
case(consistency, about)
det(consistency, the)
obl(have, consistency)
case(pear, of)
det(pear, a)
amod(pear, ripe)
compound(pear, Bartlett)
nmod(consistency, pear)
punct(oily, ,)
cc(oily, but)
conj(pear, oily)
punct(shape, .)
det(avocado, the)
nsubj(have, avocado)
aux(have, should)
root(ROOT, have)
det(give, a)
punct(give, ``)
obj(have, give)
punct(give, '')
case(it, to)
obl(have, it)
punct(have, ,)
mark(hold, as)
nsubj(hold, you)
advcl(have, hold)
obj(hold, it)
punct(have, ,)
mark(ripe, when)
nsubj(ripe, it)
cop(ripe, be)
advcl(hold, ripe)
punct(have, .)
det(flavor, the)
nsubj(sweet, flavor)
cop(sweet, be)
advmod(sweet, neither)
root(ROOT, sweet)
punct(sweet, ,)
case(pear, like)
det(pear, a)
obl(sweet, pear)
punct(tart, ,)
cc(tart, nor)
conj(pear, tart)
case(orange, like)
det(orange, a)
nmod(tart, orange)
punct(sweet, ;)
punct(sweet, ;)
nsubj(subtle, it)
cop(subtle, be)
parataxis(sweet, subtle)
cc(bland, and)
advmod(bland, rather)
conj(subtle, bland)
punct(like, ,)
compound(like, nut)
punct(like, -)
conj(subtle, like)
punct(sweet, .)
nsubj(flavor, it)
cop(flavor, be)
det(flavor, a)
root(ROOT, flavor)
nsubj(take, that)
aux(take, might)
acl:relcl(flavor, take)
det(little, a)
obj(take, little)
aux:pass(use, get)
xcomp(take, use)
obl(use, to)
punct(flavor, --)
advmod(unpleasant, not)
mark(unpleasant, because)
nsubj(unpleasant, it)
cop(unpleasant, be)
advcl(take, unpleasant)
punct(hard, ,)
cc(hard, but)
mark(hard, because)
det(flavor, the)
nsubj(hard, flavor)
cop(hard, be)
conj(unpleasant, hard)
mark(define, to)
advcl(hard, define)
case(light, in)
det(light, the)
obl(define, light)
case(experience, of)
nmod:poss(experience, we)
nmod(light, experience)
case(fruit, with)
amod(fruit, other)
nmod(experience, fruit)
punct(flavor, .)
advmod(take, sometimes)
nsubj(take, it)
root(ROOT, take)
amod(eatings, several)
punct(eatings, ``)
obj(take, eatings)
punct(eatings, '')
case(avocado, of)
nmod(eatings, avocado)
mark(catch, to)
csubj(take, catch)
det(quality, that)
amod(quality, delightful)
obj(catch, quality)
case(taste, in)
nmod(quality, taste)
nsubj(make, that)
aux(make, have)
acl:relcl(quality, make)
obj(make, it)
det:predet(favorite, such)
det(favorite, a)
obj(make, favorite)
case(world, throughout)
det(world, the)
nmod(favorite, world)
punct(take, .)
mark(become, once)
nsubj(become, you)
advcl(look, become)
det(fan, a)
compound(fan, avocado)
xcomp(become, fan)
punct(look, ,)
nsubj(look, you)
aux(look, will)
root(ROOT, look)
advmod(look, forward)
case(season, to)
det(season, the)
obl(look, season)
det(year, each)
obl:tmod(look, year)
case(anticipation, with)
amod(anticipation, eager)
obl(look, anticipation)
punct(look, .)
advmod(dormant, naturally)
advcl(make, dormant)
cc(danger, and)
det(danger, no)
compound(danger, spray)
conj(dormant, danger)
obl:tmod(dormant, today)
punct(make, ,)
amod(carrier, refrigerate)
nsubj(make, carrier)
aux(make, have)
root(ROOT, make)
det(shipping, the)
obj(make, shipping)
case(avocado, of)
nmod(shipping, avocado)
amod(shipping, possible)
case(place, to)
det(place, any)
obl(possible, place)
case(world, in)
det(world, the)
nmod(place, world)
punct(make, .)
det(fruit, the)
nsubj:pass(allow, fruit)
aux:pass(allow, be)
root(ROOT, allow)
mark(mature, to)
xcomp(allow, mature)
case(tree, on)
det(tree, the)
obl(mature, tree)
punct(firm, ,)
cc(firm, but)
nsubj(firm, it)
cop(firm, be)
advmod(firm, still)
conj(allow, firm)
case(point, at)
det(point, this)
obl(firm, point)
punct(allow, .)
nsubj:pass(bring, it)
aux:pass(bring, be)
root(ROOT, bring)
case(house, to)
compound(house, packing)
obl(bring, house)
punct(clean, ,)
conj(house, clean)
cc(grade, and)
conj(clean, grade)
case(size, as)
fixed(as, to)
obl(grade, size)
cc(quality, and)
conj(size, quality)
punct(pack, ,)
cc(pack, and)
conj(size, pack)
case(excelsior, in)
amod(excelsior, protective)
obl(pack, excelsior)
punct(bring, .)
det(fruit, the)
nsubj:pass(cool, fruit)
aux:pass(cool, be)
advmod(cool, then)
root(ROOT, cool)
case(F., to)
nummod(degree, 42)
punct(degree, -)
compound(F., degree)
punct(F., -)
obl(cool, F.)
punct(temperature, ,)
det(temperature, a)
parataxis(cool, temperature)
case(which, at)
obl(lapse, which)
nsubj(lapse, it)
acl:relcl(temperature, lapse)
case(sort, into)
det(sort, a)
obl(lapse, sort)
case(state, of)
amod(state, dormant)
nmod(sort, state)
punct(cool, .)
det(cool, this)
nsubj(change, cool)
aux(change, do)
advmod(change, not)
root(ROOT, change)
det(avocado, the)
obj(change, avocado)
case(way, in)
det(way, any)
obl(change, way)
punct(change, ,)
nsubj(delay, it)
advmod(delay, just)
parataxis(change, delay)
det(softening, the)
amod(softening, natural)
obj(delay, softening)
case(fruit, of)
det(fruit, the)
nmod(softening, fruit)
case(temperature, until)
det(temperature, a)
amod(temperature, grovelike)
obl(delay, temperature)
punct(temperature, ()
compound(temperature, room)
appos(temperature, temperature)
punct(temperature, ))
aux:pass(restore, be)
advcl(delay, restore)
punct(change, .)
nsubj(happen, this)
root(ROOT, happen)
case(shelf, on)
det(grocer, the)
nmod:poss(shelf, grocer)
case(grocer, 's)
obl(happen, shelf)
cc(kitchen, or)
case(kitchen, in)
nmod:poss(kitchen, you)
conj(shelf, kitchen)
punct(happen, .)
nsubj(be, one)
case(thing, of)
det(thing, the)
advmod(attractive, most)
amod(thing, attractive)
nmod(one, thing)
case(avocado, about)
nmod(thing, avocado)
root(ROOT, be)
mark(require, that)
nsubj(require, they)
aux(require, do)
advmod(require, not)
ccomp(be, require)
obj(require, processing)
case(kind, of)
det(kind, any)
nmod(processing, kind)
punct(be, .)
expl(be, there)
root(ROOT, be)
det(dye, no)
nsubj(be, dye)
cc(waxing, or)
conj(dye, waxing)
cc(gass, or)
conj(dye, gass)
acl(dye, need)
punct(be, .)
mark(control, if)
det(temperature, the)
nsubj:pass(control, temperature)
aux:pass(control, be)
advcl(delay, control)
advmod(control, properly)
punct(delay, ,)
det(avocado, the)
nsubj(delay, avocado)
aux(delay, will)
root(ROOT, delay)
nsubj(ripen, it)
aux(ripen, be)
ccomp(delay, ripen)
mark(need, until)
advcl(ripen, need)
punct(delay, .)
cc(eat, and)
case(fruit, unlike)
amod(fruit, other)
obl(eat, fruit)
punct(eat, ,)
nsubj(eat, one)
aux(eat, can)
advmod(eat, not)
root(ROOT, eat)
det(skin, the)
obj(eat, skin)
case(avocado, of)
det(avocado, the)
nmod(skin, avocado)
punct(eat, .)
nsubj(thick, it)
cop(thick, be)
root(ROOT, thick)
punct(thick, ,)
advmod(thick, much)
case(skin, like)
det(plant, a)
compound(plant, egg)
nmod:poss(skin, plant)
case(plant, 's)
obl(thick, skin)
punct(thick, ,)
mark(present, so)
fixed(so, that)
compound(spray, poison)
nsubj(present, spray)
punct(present, ,)
mark(use, if)
nsubj:pass(use, they)
aux:pass(use, be)
advcl(present, use)
punct(present, ,)
parataxis(thick, present)
det(hazard, no)
obj(present, hazard)
case(consumer, to)
det(consumer, the)
nmod(hazard, consumer)
punct(thick, .)
amod(reducer, Nutritious)
cc(reducer, and)
conj(Nutritious, a)
compound(reducer, cholesterol)
root(ROOT, reducer)
amod(taste, good)
conj(reducer, taste)
cc(versatility, and)
conj(taste, versatility)
punct(enough, ,)
cc(enough, plus)
nsubj(enough, safety)
case(poison, from)
compound(poison, spray)
nmod(safety, poison)
aux(enough, would)
cop(enough, be)
conj(reducer, enough)
mark(recommend, to)
advcl(enough, recommend)
det(use, the)
amod(use, frequent)
obj(recommend, use)
case(fruit, of)
det:predet(fruit, such)
det(fruit, a)
nmod(use, fruit)
punct(recommend, ,)
advmod(limit, even)
mark(limit, if)
nsubj:pass(limit, it)
aux:pass(limit, be)
amod(value, nutritional)
nsubj:pass(limit, value)
aux:pass(limit, be)
advcl(recommend, limit)
punct(Nutritious, .)
nsubj(rich, avocado)
punct(rich, ,)
advmod(rich, however)
punct(rich, ,)
cop(rich, be)
advmod(rich, very)
root(ROOT, rich)
case(nutrient, in)
obl(rich, nutrient)
punct(rich, .)
nmod:poss(asset, they)
amod(asset, main)
nsubj(abundance, asset)
cop(abundance, be)
det(abundance, a)
root(ROOT, abundance)
case(acid, of)
amod(acid, unsaturated)
compound(acid, fatty)
nmod(abundance, acid)
punct(abundance, ,)
advmod(necessary, so)
amod(abundance, necessary)
mark(maintain, for)
advcl(necessary, maintain)
det(health, the)
amod(health, good)
obj(maintain, health)
case(system, of)
det(system, the)
amod(system, circulatory)
nmod(health, system)
punct(abundance, .)
advmod(contain, aside)
case(this, from)
obl(aside, this)
punct(contain, ,)
det(portion, the)
amod(portion, average)
nsubj(contain, portion)
root(ROOT, contain)
det(protein, some)
obj(contain, protein)
punct(protein, ,)
det(amount, a)
amod(amount, appreciable)
conj(protein, amount)
case(vitamin, of)
nmod(amount, vitamin)
appos(amount, a)
cc(c, and)
conj(a, c)
punct(protein, --)
advmod(tenth, about)
nummod(tenth, one)
punct(tenth, -)
appos(protein, tenth)
case(requirement, of)
det(requirement, the)
amod(requirement, minimum)
amod(requirement, daily)
nmod(tenth, requirement)
punct(third, ,)
cc(third, and)
advmod(third, about)
det(third, a)
conj(protein, third)
case(requirement, of)
det(requirement, the)
amod(requirement, official)
compound(e, vitamin)
compound(requirement, e)
nmod(third, requirement)
punct(contain, .)
det(vitamin, the)
compound(vitamin, b)
nsubj:pass(represent, vitamin)
aux:pass(represent, be)
advmod(represent, well)
root(ROOT, represent)
punct(represent, ,)
advmod(thiamin, especially)
appos(represent, thiamin)
cc(riboflavin, and)
conj(thiamin, riboflavin)
punct(represent, .)
nsubj(present, Calcium)
punct(phosphorus, ,)
conj(Calcium, phosphorus)
cc(iron, and)
conj(Calcium, iron)
cop(present, be)
conj(represent, present)
case(amount, in)
amod(amount, worthwhile)
obl(present, amount)
punct(find, ,)
cc(find, and)
nummod(mineral, eleven)
amod(mineral, other)
nsubj:pass(find, mineral)
advmod(find, also)
aux(find, have)
aux:pass(find, be)
conj(present, find)
case(amount, in)
amod(amount, varying)
compound(amount, trace)
obl(find, amount)
punct(represent, .)
nsubj:pass(destroy, none)
case(value, of)
det(value, these)
nmod(none, value)
aux:pass(destroy, be)
root(ROOT, destroy)
punct(destroy, ,)
advmod(significantly, not)
advmod(alter, significantly)
conj(destroy, alter)
case(storage, by)
compound(storage, refrigeration)
obl(alter, storage)
punct(destroy, .)
nsubj(set, Dr.)
flat(Dr., Wilson)
flat(Dr., C.)
flat(Dr., grant)
punct(Dr., ,)
case(Hospital, of)
det(Veterans, the)
nmod:poss(Hospital, Veterans)
case(Veterans, 's)
compound(Hospital, Administration)
nmod(Dr., Hospital)
punct(Gables, ,)
compound(Gables, coral)
conj(Hospital, Gables)
punct(Florida, ,)
appos(Gables, Florida)
punct(University, ,)
cc(University, and)
det(University, the)
conj(Dr., University)
case(School, of)
compound(School, Miami)
nmod(University, School)
case(Medicine, of)
nmod(School, Medicine)
punct(set, ,)
root(ROOT, set)
compound:prt(set, out)
mark(discover, to)
xcomp(set, discover)
mark(reduce, if)
nsubj(reduce, avocado)
punct(avocado, ,)
case(content, because)
fixed(because, of)
nmod:poss(content, they)
amod(content, high)
obl(discover, content)
case(acid, of)
amod(acid, unsaturated)
compound(acid, fatty)
nmod(content, acid)
punct(reduce, ,)
aux(reduce, would)
ccomp(discover, reduce)
det(cholesterol, the)
obj(reduce, cholesterol)
case(blood, of)
det(blood, the)
nmod(cholesterol, blood)
case(patient, in)
amod(patient, select)
nmod(blood, patient)
punct(set, .)
det(study, the)
nsubj(comprise, study)
root(ROOT, comprise)
nummod(patient, 16)
amod(patient, male)
obj(comprise, patient)
punct(patient, ,)
acl(patient, range)
case(age, in)
obl(range, age)
case(27, from)
nmod(age, 27)
case(72, to)
nmod(27, 72)
punct(comprise, .)
nsubj:pass(put, they)
aux:pass(put, be)
parataxis(comprise, put)
case(diet, on)
compound(diet, control)
obl(put, diet)
mark(determine, to)
advcl(put, determine)
advmod(accurately, as)
advmod(determine, accurately)
mark(possible, as)
advcl(as, possible)
punct(level, ,)
det(level, the)
amod(level, normal)
compound(level, cholesterol)
obj(determine, level)
case(blood, of)
nmod:poss(blood, they)
nmod(level, blood)
punct(comprise, .)
advmod(give, then)
nsubj:pass(give, they)
aux:pass(give, be)
root(ROOT, give)
nummod(avocado, 1)
punct(2, /)
nmod(1, 2)
case(1, to)
nmod(1, 1)
case(1, -)
nmod(1, 1)
punct(2, /)
nummod(avocado, 2)
obj(give, avocado)
case(day, per)
nmod(avocado, day)
case(substitute, as)
det(substitute, a)
obl(give, substitute)
case(part, for)
nmod(substitute, part)
case(consumption, of)
nmod:poss(consumption, they)
compound(consumption, dietary)
amod(consumption, fat)
nmod(part, consumption)
punct(give, .)
nummod(fire, five)
punct(five, ,)
appos(five, four)
punct(three, ,)
parataxis(five, three)
punct(five, ,)
nmod:tmod(five, two)
punct(fire, ,)
nummod(fire, one)
punct(fire, ,)
root(ROOT, fire)
punct(fire, !)
punct(fire, !)
det(energy, the)
amod(energy, tremendous)
nsubj:pass(feel, energy)
acl(energy, release)
case(engines, by)
amod(engines, giant)
compound(engines, rocket)
obl(release, engines)
advmod(feel, perhaps)
aux(feel, can)
aux:pass(feel, be)
root(ROOT, feel)
advmod(better, much)
xcomp(feel, better)
mark(hear, than)
nsubj:pass(hear, it)
aux(hear, can)
aux:pass(hear, be)
advcl(better, hear)
punct(feel, .)
det(vibration, the)
amod(vibration, pulsate)
root(ROOT, vibration)
case(clutch, of)
compound(clutch, energy)
nmod(vibration, clutch)
case(pit, at)
det(pit, the)
nmod(vibration, pit)
case(stomach, of)
nmod:poss(stomach, you)
nmod(pit, stomach)
punct(vibration, .)
advmod(fearsome, never)
mark(have, before)
advcl(fearsome, have)
det(introduction, the)
obj(have, introduction)
case(weapon, of)
det(weapon, a)
nmod(introduction, weapon)
acl(weapon, cause)
advmod(much, so)
amod(apprehension, much)
obj(cause, apprehension)
cc(fear, and)
conj(apprehension, fear)
punct(fearsome, .)
amod(weapon, nuclear)
nsubj(fearsome, weapon)
cop(fearsome, be)
root(ROOT, fearsome)
punct(give, ,)
cc(give, but)
det(missile, the)
amod(range, long)
punct(range, -)
compound(missile, range)
amod(missile, ballistic)
nsubj(give, missile)
conj(fearsome, give)
iobj(give, they)
det(swiftness, a)
amod(swiftness, stealth)
cc(merciless, and)
conj(stealth, merciless)
obj(give, swiftness)
nsubj(terrifying, which)
cop(terrifying, be)
advmod(more, much)
advmod(terrifying, more)
acl:relcl(swiftness, terrifying)
punct(fearsome, . )
det(writer, a)
amod(writer, great)
amod(writer, many)
nsubj:pass(bewitch, writer)
aux:pass(bewitch, be)
root(ROOT, bewitch)
case(advantage, by)
det(advantage, the)
advmod(overwhelming, apparently)
amod(advantage, overwhelming)
obl(bewitch, advantage)
det(attacker, a)
nsubj(have, attacker)
aux(have, would)
acl:relcl(advantage, have)
mark(be, if)
nsubj(be, he)
advcl(have, be)
mark(strike, to)
xcomp(be, strike)
case(surprise, with)
amod(surprise, complete)
obl(strike, surprise)
acl(surprise, use)
amod(rocket, nuclear)
obj(use, rocket)
punct(bewitch, .)
expl(easy, it)
cop(easy, be)
advmod(easy, relatively)
root(ROOT, easy)
mark(go, to)
csubj(easy, go)
det(step, a)
obj(go, step)
advmod(go, further)
cc(reason, and)
conj(go, reason)
mark(destroy, that)
det(attacker, a)
nsubj(destroy, attacker)
punct(attacker, ,)
case(possession, in)
obl(destroy, possession)
case(power, of)
amod(power, such)
amod(power, absolute)
nmod(possession, power)
punct(destroy, ,)
aux(destroy, would)
advmod(destroy, simultaneously)
acl(reason, destroy)
nmod:poss(opponent, he)
nmod:poss(city, opponent)
case(opponent, 's)
obj(destroy, city)
cc(people, and)
conj(city, people)
punct(easy, .)
mark(defenseless, with)
det(nation, a)
nsubj(defenseless, nation)
advcl(spare, defenseless)
case(it, before)
obl(defenseless, it)
punct(spare, ,)
advmod(spare, why)
aux(spare, would)
det(attacker, the)
nsubj(spare, attacker)
root(ROOT, spare)
det(victim, the)
nmod:poss(people, victim)
case(victim, 's)
obj(spare, people)
punct(spare, ?)
punct(spare, ?)
aux(act, would)
advmod(act, not)
det(destruction, the)
amod(destruction, wanton)
nsubj(act, destruction)
case(city, of)
nmod(destruction, city)
cc(people, and)
conj(city, people)
cop(act, be)
det(act, the)
amod(act, logical)
root(ROOT, act)
case(subjugation, of)
amod(subjugation, complete)
nmod(act, subjugation)
punct(act, ?)
punct(act, ?)
det(nation, the)
nsubj:pass(devastate, nation)
aux(devastate, would)
aux:pass(devastate, be)
advmod(devastate, utterly)
root(ROOT, devastate)
punct(devastate, .)
det(will, the)
nsubj:pass(break, will)
case(people, of)
nmod:poss(people, its)
nmod(will, people)
punct(will, ,)
advmod(crucial, so)
amod(will, crucial)
case(time, in)
obl(crucial, time)
case(peril, of)
nmod(time, peril)
punct(break, ,)
aux(break, would)
aux:pass(break, be)
advcl(give, break)
punct(break, .)
amod(weapon, nuclear)
nsubj(give, weapon)
aux(give, have)
root(ROOT, give)
det(world, the)
iobj(give, world)
det(means, the)
obj(give, means)
case(destruction, for)
compound(destruction, self)
punct(destruction, -)
nmod(means, destruction)
case(hour, in)
nmod(means, hour)
cc(day, or)
conj(hour, day)
punct(give, ;)
punct(give, ;)
cc(give, and)
advmod(give, now)
nsubj(give, rocket)
aux(give, have)
conj(give, give)
iobj(give, it)
det(means, the)
obj(give, means)
mark(destroy, to)
acl(means, destroy)
obj(destroy, itself)
case(minute, in)
obl(destroy, minute)
punct(give, .)
case(point, at)
det(point, this)
obl(obvious, point)
expl(obvious, it)
aux(obvious, should)
cop(obvious, be)
advmod(obvious, painfully)
root(ROOT, obvious)
mark(suite, that)
nsubj:pass(suite, city)
punct(soft, ,)
cop(soft, be)
punct(soft, ``)
amod(city, soft)
punct(soft, '')
punct(suite, ,)
cc(suite, and)
det(people, the)
nsubj:pass(suite, people)
case(they, within)
nmod(people, they)
aux:pass(suite, be)
advmod(suite, ideally)
conj(obvious, suite)
case(destruction, to)
obl(suite, destruction)
case(weapon, by)
amod(weapon, nuclear)
nmod(destruction, weapon)
punct(obvious, .)
advmod(advantage, however)
punct(advantage, ,)
mark(mutual, because)
det(vulnerability, this)
nsubj(mutual, vulnerability)
cop(mutual, be)
advcl(advantage, mutual)
punct(advantage, ,)
nsubj(advantage, it)
cop(advantage, be)
case(advantage, to)
det(advantage, the)
root(ROOT, advantage)
case(side, of)
det(side, neither)
nmod(advantage, side)
mark(destroy, to)
acl(advantage, destroy)
det(opponent, the)
nmod:poss(city, opponent)
case(opponent, 's)
obj(destroy, city)
punct(destroy, ,)
case(least, at)
obl(long, least)
advmod(long, so)
advmod(destroy, long)
mark(have, as)
det(opponent, the)
nsubj(have, opponent)
advcl(long, have)
amod(weapon, nuclear)
obj(have, weapon)
case(which, with)
obl(have, which)
case(reprisal, to)
compound(reprisal, effect)
nmod(which, reprisal)
punct(advantage, .)
expl(apparent, it)
aux(apparent, should)
cop(apparent, be)
advmod(apparent, appallingly)
root(ROOT, apparent)
mark(tactic, that)
compound(trading, city)
punct(trading, -)
nsubj(tactic, trading)
cop(tactic, be)
advmod(tactic, not)
det(tactic, a)
amod(tactic, profitable)
amod(tactic, military)
ccomp(apparent, tactic)
punct(apparent, .)
nsubj(give, icbm)
aux(give, have)
root(ROOT, give)
iobj(give, we)
det(capability, a)
obj(give, capability)
nsubj:pass(use, which)
aux(use, could)
aux:pass(use, be)
acl:relcl(capability, use)
case(way, in)
nummod(way, two)
amod(way, different)
obl(use, way)
punct(give, .)
nsubj:pass(use, they)
aux(use, could)
aux:pass(use, be)
root(ROOT, use)
mark(attack, to)
xcomp(use, attack)
det(nation, a)
nmod:poss(people, nation)
case(nation, 's)
obj(attack, people)
punct(mean, ()
nsubj(mean, which)
aux(mean, would)
advmod(mean, inevitably)
acl:relcl(people, mean)
det(loss, the)
obj(mean, loss)
case(people, of)
det(attacker, the)
nmod:poss(people, attacker)
case(attacker, 's)
amod(people, own)
nmod(loss, people)
punct(mean, ))
punct(use, ,)
cc(use, or)
nsubj:pass(use, they)
aux(use, could)
aux:pass(use, be)
conj(use, use)
case(discrimination, with)
obl(use, discrimination)
mark(destroy, to)
advcl(use, destroy)
det(enemy, the)
nmod:poss(force, enemy)
case(enemy, 's)
amod(force, military)
obj(destroy, force)
punct(use, .)
mark(lie, if)
nmod:poss(interest, we)
amod(interest, national)
nsubj(lie, interest)
advcl(take, lie)
mark(able, in)
cop(able, be)
advcl(lie, able)
mark(fight, to)
xcomp(able, fight)
cc(win, and)
conj(fight, win)
det(war, a)
obj(fight, war)
cc(commit, rather)
fixed(rather, than)
conj(fight, commit)
amod(suicide, national)
obj(commit, suicide)
punct(take, ,)
advmod(take, then)
nsubj(take, we)
aux(take, must)
root(ROOT, take)
det(look, a)
advmod(more, much)
advmod(penetrate, more)
amod(look, penetrate)
obj(take, look)
case(missile, at)
amod(missile, ballistic)
nmod(look, missile)
punct(take, .)
nsubj(determine, we)
aux(determine, must)
root(ROOT, determine)
mark(win, whether)
nsubj(win, missile)
aux(win, can)
ccomp(determine, win)
det(war, a)
obj(win, war)
advmod(win, all)
case(themselves, by)
obl(win, themselves)
punct(determine, .)
nsubj(make, we)
aux(make, must)
root(ROOT, make)
xcomp(make, certain)
mark(finish, that)
det(aircraft, the)
nsubj:pass(finish, aircraft)
aux:pass(finish, be)
ccomp(certain, finish)
mark(give, before)
nsubj(give, we)
advcl(finish, give)
det(job, the)
amod(job, entire)
obj(give, job)
case(missile, to)
det(missile, the)
obl(give, missile)
punct(make, .)
nsubj(weapon, Missiles)
cop(weapon, be)
advmod(valuable, very)
amod(weapon, valuable)
parataxis(make, weapon)
punct(have, ,)
cc(have, but)
nsubj(have, they)
advmod(have, also)
conj(weapon, have)
nmod:poss(limitation, they)
advmod(little, too)
advmod(know, little)
amod(limitation, know)
obj(have, limitation)
punct(make, .)
case(trajectory, because)
fixed(because, of)
det(missile, a)
nmod:poss(trajectory, missile)
case(missile, 's)
amod(trajectory, ballistic)
obl(know, trajectory)
punct(know, ,)
det(location, the)
nsubj:pass(know, location)
case(target, of)
det(target, a)
amod(target, fix)
nmod(location, target)
aux(know, must)
aux:pass(know, be)
root(ROOT, know)
advmod(accurately, quite)
advmod(know, accurately)
punct(know, .)
csubj(provide, place)
obj(place, missile)
case(submarine, in)
obl(place, submarine)
punct(place, ,)
case(barge, on)
obl(place, barge)
punct(railroad, ,)
conj(barge, railroad)
punct(highway, ,)
conj(barge, highway)
punct(vessel, ,)
compound(vessel, surface)
conj(barge, vessel)
cc(air, and)
case(air, in)
det(air, the)
nsubj(provide, air)
root(ROOT, provide)
obj(provide, they)
case(protection, with)
amod(protection, passive)
obl(provide, protection)
mark(take, by)
advcl(provide, take)
obj(take, advantage)
case(weakness, of)
det(weakness, the)
amod(weakness, gravest)
nmod(advantage, weakness)
case(missile, of)
amod(range, long)
punct(range, -)
compound(missile, range)
amod(missile, ballistic)
nmod(weakness, missile)
obl:tmod(take, today)
punct(difficulty, --)
det(difficulty, the)
amod(difficulty, extreme)
appos(weakness, difficulty)
mark(destroy, of)
acl(difficulty, destroy)
det(mobile, a)
obj(destroy, mobile)
cc(target, or)
compound(target, moving)
conj(mobile, target)
case(weapon, with)
amod(weapon, such)
obl(destroy, weapon)
punct(difficulty, .)
nsubj(detect, one)
aux(detect, must)
advmod(detect, first)
root(ROOT, detect)
det(mobile, a)
amod(mobile, fleeting)
obj(detect, mobile)
cc(target, or)
compound(target, moving)
conj(mobile, target)
punct(decide, ,)
conj(detect, decide)
mark(worthy, that)
nsubj(worthy, it)
cop(worthy, be)
ccomp(decide, worthy)
case(destruction, of)
obl(worthy, destruction)
punct(select, ,)
conj(worthy, select)
det(missile, the)
obj(select, missile)
mark(fire, to)
aux:pass(fire, be)
xcomp(select, fire)
case(target, against)
det(target, the)
obl(fire, target)
punct(compute, ,)
conj(fire, compute)
obj(compute, ballistic)
case(flight, for)
det(flight, the)
obl(compute, flight)
punct(prepare, ,)
cc(prepare, and)
conj(fire, prepare)
det(missile, the)
obj(prepare, missile)
case(fire, for)
obl(prepare, fire)
punct(detect, .)
advmod(perform, even)
mark(perform, if)
det:predet(operation, all)
det(operation, these)
nsubj:pass(perform, operation)
aux(perform, could)
aux:pass(perform, be)
advcl(have, perform)
advmod(perform, instantaneously)
punct(have, ,)
det(ICBM, the)
nsubj(have, ICBM)
advmod(have, still)
root(ROOT, have)
det(time, a)
obj(have, time)
case(flight, of)
nmod(time, flight)
case(target, to)
det(target, the)
nmod(time, target)
case(minute, of)
advmod(30, about)
nummod(minute, 30)
nmod(target, minute)
punct(have, .)
advmod(lower, therefore)
punct(lower, ,)
mark(change, if)
det(target, the)
nsubj(change, target)
aux(change, can)
advmod(change, significantly)
advcl(lower, change)
nmod:poss(location, its)
obj(change, location)
case(something, in)
obl(change, something)
advmod(30, less)
fixed(less, than)
nummod(minute, 30)
obl(change, minute)
punct(lower, ,)
det(probability, the)
nsubj:pass(lower, probability)
mark(destroy, of)
aux(destroy, have)
acl(probability, destroy)
nsubj:pass(lower, it)
aux:pass(lower, be)
advmod(lower, drastically)
root(ROOT, lower)
punct(lower, .)
case(this, because)
fixed(because, of)
obl(appear, this)
punct(appear, ,)
expl(appear, it)
aux(appear, would)
root(ROOT, appear)
xcomp(appear, inevitable)
mark(seek, that)
det(percentage, a)
amod(percentage, increase)
nsubj(seek, percentage)
case(missile, of)
amod(missile, strategic)
nmod(percentage, missile)
aux(seek, will)
ccomp(inevitable, seek)
compound(protection, self)
punct(protection, -)
obj(seek, protection)
case(mobility, in)
obl(seek, mobility)
punct(seek, --)
advmod(perfect, at)
fixed(at, least)
mark(perfect, until)
compound(defense, missile)
nsubj:pass(perfect, defense)
aux:pass(perfect, be)
advcl(seek, perfect)
nsubj(have, which)
ccomp(perfect, have)
det(probability, a)
advmod(high, exceedingly)
amod(probability, high)
compound(probability, kill)
obj(have, probability)
punct(appear, .)
mark(destroy, in)
fixed(in, order)
mark(destroy, to)
advcl(have, destroy)
det(enemy, the)
nmod:poss(mobile, enemy)
case(enemy, 's)
obj(destroy, mobile)
punct(move, ,)
conj(mobile, move)
punct(force, ,)
cc(locate, or)
advmod(locate, imprecisely)
amod(force, locate)
amod(force, strategic)
obj(move, force)
punct(have, ,)
nsubj(have, we)
aux(have, must)
root(ROOT, have)
det(capability, a)
compound(killer, hunter)
punct(killer, -)
compound(capability, killer)
obj(have, capability)
case(addition, in)
obl(have, addition)
case(missile, to)
nmod:poss(missile, we)
nmod(addition, missile)
punct(have, .)
mark(perform, until)
det(operation, this)
obl:npmod(killer, hunter)
punct(killer, -)
amod(operation, killer)
nsubj:pass(perform, operation)
aux(perform, can)
aux:pass(perform, be)
advcl(appear, perform)
case(spacecraft, by)
obl(perform, spacecraft)
punct(appear, ,)
amod(aircraft, manned)
nsubj(appear, aircraft)
root(ROOT, appear)
mark(means, to)
cop(means, be)
det(means, the)
amod(means, only)
xcomp(appear, means)
amod(means, available)
case(we, to)
obl(available, we)
punct(appear, .)
expl(seem, it)
root(ROOT, seem)
xcomp(seem, reasonable)
mark(have, that)
mark(act, if)
amod(war, general)
amod(war, nuclear)
nsubj(act, war)
cop(act, be)
advmod(act, not)
mark(act, to)
cop(act, be)
nummod(act, one)
amod(act, cataclysmic)
advcl(have, act)
mark(burn, of)
advcl(act, burn)
det(other, each)
nmod:poss(citizen, other)
case(other, 's)
obj(burn, citizen)
case(cinder, to)
obl(burn, cinder)
punct(have, ,)
nsubj(have, we)
aux(have, must)
ccomp(seem, have)
det(force, a)
amod(force, manned)
amod(force, strategic)
obj(have, force)
case(aircraft, of)
amod(endurance, long)
punct(endurance, -)
compound(aircraft, endurance)
nmod(force, aircraft)
amod(aircraft, capable)
mark(go, of)
advcl(capable, go)
case(China, into)
obl(go, China)
cc(Russia, or)
conj(China, Russia)
mark(find, to)
advcl(go, find)
cc(destroy, and)
conj(find, destroy)
nmod:poss(force, they)
amod(force, strategic)
obj(destroy, force)
nsubj(continue, which)
acl:relcl(force, continue)
mark(threaten, to)
xcomp(continue, threaten)
obj(threaten, we)
punct(let, .)
parataxis(seem, let)
obj(let, we)
xcomp(let, suppose)
det(Russians, the)
nsubj(decide, Russians)
ccomp(suppose, decide)
mark(build, to)
xcomp(decide, build)
det(force, a)
compound(mobile, rail)
punct(mobile, -)
compound(force, mobile)
compound(force, ICBM)
obj(build, force)
punct(seem, .)
expl(feasible, it)
cop(feasible, be)
advmod(feasible, entirely)
root(ROOT, feasible)
mark(employ, to)
csubj(feasible, employ)
obj(employ, aircraft)
case(operation, such)
fixed(such, as)
det(operation, the)
compound(operation, b)
punct(b, -)
nummod(b, 52)
cc(B, or)
conj(b, B)
case(70, -)
nmod(B, 70)
case(operation, in)
compound(killer, hunter)
punct(killer, -)
compound(operation, killer)
obl(employ, operation)
case(missile, against)
amod(missile, Soviet)
obl:npmod(base, railway)
punct(base, -)
amod(missile, base)
nmod(operation, missile)
punct(feasible, .)
mark(stop, if)
nsubj(stop, we)
advcl(seem, stop)
xcomp(stop, think)
case(term, in)
obl(think, term)
case(weapon, of)
amod(weapon, tremendous)
compound(weapon, multimegaton)
amod(weapon, nuclear)
nmod(term, weapon)
cc(consider, and)
conj(stop, consider)
xcomp(consider, employ)
advmod(smaller, much)
amod(weapon, smaller)
amod(weapon, nuclear)
obj(employ, weapon)
nsubj(appropriate, which)
aux(appropriate, may)
cop(appropriate, be)
advmod(appropriate, more)
acl:relcl(weapon, appropriate)
case(target, for)
advmod(important, most)
amod(target, important)
amod(target, military)
obl(appropriate, target)
punct(seem, ,)
expl(seem, it)
aux(seem, would)
root(ROOT, seem)
mark(carry, that)
det(b, the)
nsubj(carry, b)
punct(b, -)
nummod(b, 52)
cc(B, or)
compound(70, B)
punct(70, -)
nummod(b, 70)
aux(carry, could)
ccomp(seem, carry)
det(weapon, a)
amod(weapon, great)
amod(weapon, many)
amod(weapon, small)
amod(weapon, nuclear)
obj(carry, weapon)
punct(seem, .)
det(aircraft, a)
nsubj:pass(give, aircraft)
case(load, with)
det(load, a)
nmod(aircraft, load)
case(weapon, of)
amod(weapon, small)
amod(weapon, nuclear)
nmod(load, weapon)
aux(give, could)
advmod(conceivably, very)
advmod(give, conceivably)
aux:pass(give, be)
root(ROOT, give)
det(mission, a)
obj(give, mission)
mark(suppress, to)
acl(mission, suppress)
det(train, all)
obj(suppress, train)
acl(train, operate)
case(area, within)
det(area, a)
amod(area, specify)
amod(area, geographic)
obl(operate, area)
case(Russia, of)
nmod(area, Russia)
punct(provide, --)
parataxis(give, provide)
mark(use, that)
nsubj(use, we)
aux(use, have)
ccomp(provide, use)
obj(use, some)
case(icbm, of)
nmod:poss(icbm, we)
nmod(some, icbm)
mark(degrade, to)
advcl(use, degrade)
nmod:poss(defense, Russia)
case(Russia, 's)
compound(defense, air)
obj(degrade, defense)
mark(get, before)
nmod:poss(bomber, we)
nsubj(get, bomber)
advcl(degrade, get)
advmod(get, there)
punct(give, .)
det(aircraft, the)
nsubj:pass(use, aircraft)
aux(use, could)
aux:pass(use, be)
root(ROOT, use)
mark(destroy, to)
xcomp(use, destroy)
amod(target, other)
amod(target, mobile)
punct(fleeting, ,)
conj(mobile, fleeting)
punct(target, ,)
cc(locate, and)
advmod(locate, imprecisely)
conj(mobile, locate)
obj(destroy, target)
cc(target, as)
fixed(as, well)
fixed(as, as)
det(target, the)
amod(target, know)
punct(fix, ,)
conj(know, fix)
cc(harden, and)
conj(know, harden)
conj(target, target)
nsubj:pass(destroy, which)
aux(destroy, can)
advmod(destroy, also)
aux:pass(destroy, be)
acl:relcl(target, destroy)
case(missile, by)
obl(destroy, missile)
punct(use, .)
advmod(plan, why)
punct(plan, ,)
advmod(plan, then)
punct(plan, ,)
aux(plan, be)
advmod(plan, not)
nsubj(plan, we)
root(ROOT, plan)
det(role, a)
amod(role, larger)
punct(role, ,)
advmod(important, more)
amod(role, important)
obj(plan, role)
case(aircraft, for)
amod(aircraft, manned)
amod(aircraft, military)
nmod(role, aircraft)
punct(plan, ?)
punct(plan, ?)
root(ROOT, be)
expl(be, there)
det(way, any)
amod(way, other)
nsubj(be, way)
mark(do, to)
acl(way, do)
det(job, the)
obj(do, job)
punct(be, ?)
punct(be, ?)
nsubj(mean, survivability)
case(force, of)
nmod:poss(force, we)
amod(force, strategic)
nmod(survivability, force)
punct(Polaris, ()
appos(force, Polaris)
punct(mobile, ,)
conj(Polaris, mobile)
cc(Minuteman, and)
amod(Minuteman, harden)
conj(Polaris, Minuteman)
punct(Atlas, ,)
amod(Atlas, harden)
conj(Polaris, Atlas)
cc(Titan, and)
conj(Atlas, Titan)
punct(Skybolt, ,)
cc(Skybolt, and)
amod(Skybolt, airborne)
conj(Atlas, Skybolt)
punct(Skybolt, ))
root(ROOT, mean)
mark(take, that)
nsubj(take, it)
aux(take, will)
ccomp(mean, take)
det(time, some)
obj(take, time)
punct(take, ,)
advmod(week, perhaps)
obl:tmod(take, week)
punct(take, ,)
mark(destroy, to)
advcl(take, destroy)
det(force, a)
amod(force, strategic)
obj(destroy, force)
punct(mean, .)
nsubj(exchange, war)
punct(exchange, ,)
case(circumstance, under)
det(circumstance, these)
obl(exchange, circumstance)
punct(exchange, ,)
aux(exchange, can)
advmod(exchange, not)
cop(exchange, be)
nummod(exchange, one)
amod(exchange, massive)
root(ROOT, exchange)
case(devastation, of)
amod(devastation, nuclear)
nmod(exchange, devastation)
punct(exchange, .)
nsubj(survive, force)
aux(survive, will)
parataxis(exchange, survive)
det(attack, a)
compound(attack, surprise)
obj(survive, attack)
punct(give, ,)
cc(give, and)
det(force, these)
nsubj(give, force)
aux(give, will)
conj(survive, give)
obj(give, depth)
punct(duration, ,)
cc(duration, or)
amod(duration, considerable)
conj(depth, duration)
punct(give, ,)
case(conflict, to)
det(conflict, the)
obl(give, conflict)
punct(exchange, .)
det(force, the)
nsubj:pass(find, force)
nsubj(survive, which)
acl:relcl(force, survive)
det(attack, the)
amod(attack, initial)
obj(survive, attack)
aux(find, must)
aux:pass(find, be)
root(ROOT, find)
cc(destroy, and)
conj(find, destroy)
punct(find, .)
advmod(force, even)
amod(force, mobile)
nsubj:pass(find, force)
aux(find, must)
aux:pass(find, be)
root(ROOT, find)
cc(destroy, and)
conj(find, destroy)
punct(find, .)
cc(go, but)
punct(go, ,)
advmod(go, how)
aux(go, do)
nsubj(go, one)
root(ROOT, go)
case(job, about)
det(job, the)
obl(go, job)
mark(find, of)
acl(job, find)
cc(destroy, and)
conj(find, destroy)
amod(force, mobile)
obj(find, force)
punct(go, ?)
punct(go, ?)
nsubj(susceptible, they)
cop(susceptible, be)
advmod(susceptible, not)
root(ROOT, susceptible)
case(destruction, to)
amod(destruction, wholesale)
obl(susceptible, destruction)
case(missile, by)
amod(missile, ballistic)
obl(susceptible, missile)
punct(susceptible, .)
det(day, some)
obl:tmod(able, day)
punct(able, ,)
amod(year, many)
obl:tmod(able, year)
case(future, in)
det(future, the)
nmod(year, future)
punct(able, ,)
amod(spacecraft, true)
nsubj(able, spacecraft)
aux(able, will)
cop(able, be)
root(ROOT, able)
mark(find, to)
xcomp(able, find)
cc(destroy, and)
conj(find, destroy)
amod(target, mobile)
obj(find, target)
punct(able, .)
cc(manned, but)
mark(have, until)
nsubj(have, we)
advcl(manned, have)
det(spacecraft, a)
amod(spacecraft, effective)
obj(have, spacecraft)
punct(manned, ,)
det(answer, the)
nsubj:pass(manned, answer)
case(problem, to)
det(problem, the)
compound(killer, hunter)
punct(killer, -)
compound(problem, killer)
nmod(answer, problem)
aux:pass(manned, be)
root(ROOT, manned)
xcomp(manned, aircraft)
punct(manned, .)
advmod(tie, however)
punct(tie, ,)
det(aircraft, the)
nsubj:pass(tie, aircraft)
obj(have, which)
nsubj(have, we)
acl:relcl(aircraft, have)
obl:tmod(have, today)
aux:pass(tie, be)
root(ROOT, tie)
case(airfield, to)
amod(airfield, large)
punct(airfield, ,)
punct(airfield, ``)
amod(airfield, soft)
punct(airfield, '')
obl(tie, airfield)
punct(tie, .)
amod(rocket, nuclear)
nsubj(destroy, rocket)
aux(destroy, can)
parataxis(tie, destroy)
obj(destroy, airfield)
case(ease, with)
obl(destroy, ease)
punct(tie, .)
root(ROOT, here)
advmod(here, then)
cop(here, be)
nmod:poss(problem, we)
nsubj(here, problem)
punct(here, :)
nsubj(vital, aircraft)
cop(vital, be)
parataxis(problem, vital)
mark(win, to)
advcl(vital, win)
det(war, a)
obj(win, war)
obl:tmod(win, today)
mark(perform, because)
nsubj(perform, they)
aux(perform, can)
advcl(vital, perform)
det(mission, those)
obj(perform, mission)
obj(incapable, which)
det(missile, a)
nsubj(incapable, missile)
cop(incapable, be)
advmod(incapable, totally)
acl:relcl(mission, incapable)
mark(perform, of)
advcl(incapable, perform)
punct(perform, ;)
punct(perform, ;)
cc(doom, but)
det(airfield, the)
nsubj:pass(doom, airfield)
punct(airfield, ,)
case(which, on)
obl(dependent, which)
det(aircraft, the)
nsubj(dependent, aircraft)
cop(dependent, be)
advmod(dependent, completely)
acl:relcl(airfield, dependent)
punct(doom, ,)
aux:pass(doom, be)
conj(incapable, doom)
case(missile, by)
det(missile, the)
obl(doom, missile)
punct(here, .)
nsubj(make, this)
root(ROOT, make)
nmod:poss(aircraft, today)
case(today, 's)
obj(make, aircraft)
det(shot, a)
nummod(shot, one)
punct(shot, -)
appos(aircraft, shot)
punct(mission, ,)
cc(mission, or)
nummod(mission, one)
conj(aircraft, mission)
punct(weapon, ,)
obj(make, weapon)
punct(make, .)
nsubj(expensive, aircraft)
cop(expensive, be)
advmod(expensive, mighty)
root(ROOT, expensive)
mark(use, if)
nsubj(use, you)
aux(use, can)
advcl(expensive, use)
obj(use, they)
advmod(once, only)
advmod(use, once)
punct(expensive, .)
nsubj(point, this)
cop(point, be)
det(point, the)
root(ROOT, point)
case(which, on)
obl(write, which)
advmod(many, so)
amod(people, many)
nsubj(write, people)
aux(write, have)
acl:relcl(point, write)
compound:prt(write, off)
det(aircraft, the)
obj(write, aircraft)
case(favor, in)
obl(write, favor)
case(missile, of)
det(missile, the)
nmod(favor, missile)
punct(point, .)
cc(remember, but)
root(ROOT, remember)
obj(remember, this)
punct(remember, --)
nsubj(aircraft, it)
cop(aircraft, be)
advmod(aircraft, not)
det(aircraft, the)
ccomp(remember, aircraft)
nsubj(vulnerable, which)
cop(vulnerable, be)
acl:relcl(aircraft, vulnerable)
case(rocket, to)
amod(rocket, nuclear)
obl(vulnerable, rocket)
punct(remember, ,)
nsubj(airfield, it)
cop(airfield, be)
det(airfield, the)
parataxis(aircraft, airfield)
punct(remember, .)
root(ROOT, Eliminate)
det(vulnerability, the)
obj(Eliminate, vulnerability)
case(aircraft, of)
nmod(vulnerability, aircraft)
case(ground, on)
det(ground, the)
obl(Eliminate, ground)
cc(eliminate, and)
nsubj(eliminate, you)
aux(eliminate, have)
advmod(eliminate, essentially)
conj(Eliminate, eliminate)
nmod:poss(vulnerability, its)
obj(eliminate, vulnerability)
case(missile, to)
amod(range, long)
punct(range, -)
compound(missile, range)
amod(missile, ballistic)
obl(eliminate, missile)
punct(Eliminate, .)
expl(be, there)
root(ROOT, be)
nummod(way, four)
advmod(obvious, rather)
amod(way, obvious)
nsubj(be, way)
mark(reduce, to)
acl(way, reduce)
cc(eliminate, or)
conj(reduce, eliminate)
det(vulnerability, the)
obj(reduce, vulnerability)
case(aircraft, of)
nmod(vulnerability, aircraft)
case(ground, on)
det(ground, the)
nmod(vulnerability, ground)
punct(be, :)
parataxis(be, put)
obj(put, aircraft)
case(hangar, in)
punct(proof, ``)
compound(proof, bomb)
punct(proof, -)
compound(hangar, proof)
punct(proof, '')
obl(put, hangar)
mark(ground, when)
nsubj(ground, they)
cop(ground, be)
case(ground, on)
det(ground, the)
advcl(build, ground)
punct(build, .)
conj(put, build)
amod(range, long)
punct(range, -)
compound(aircraft, range)
obj(build, aircraft)
nsubj(take, which)
aux(take, can)
acl:relcl(aircraft, take)
compound:prt(take, off)
case(airfield, from)
amod(airfield, small)
punct(foot, ()
nummod(foot, 3,000)
punct(foot, -)
compound(airfield, foot)
punct(foot, ))
obl(take, airfield)
case(runways, with)
nmod(airfield, runways)
punct(be, .)
mark(use, if)
nsubj(use, we)
aux(use, could)
advcl(disperse, use)
det:predet(airfield, all)
det(airfield, the)
amod(airfield, small)
obj(use, airfield)
nsubj(have, we)
acl:relcl(airfield, have)
case(country, in)
det(country, this)
obl(have, country)
punct(disperse, ,)
nsubj(disperse, we)
aux(disperse, could)
root(ROOT, disperse)
nmod:poss(aircraft, we)
amod(aircraft, strategic)
obj(disperse, aircraft)
case(factor, by)
det(factor, a)
obl(disperse, factor)
case(10, of)
nmod(factor, 10)
cc(more, or)
conj(10, more)
punct(disperse, .)
root(ROOT, use)
amod(propulsion, nuclear)
obj(use, propulsion)
mark(keep, to)
advcl(use, keep)
nmod:poss(aircraft, we)
amod(range, long)
punct(range, -)
compound(aircraft, range)
amod(aircraft, military)
obj(keep, aircraft)
case(air, in)
det(air, the)
obl(keep, air)
case(majority, for)
det(majority, the)
obl(keep, majority)
case(life, of)
nmod:poss(life, they)
amod(life, useful)
nmod(majority, life)
punct(use, .)
root(ROOT, use)
advmod(high, very)
amod(engines, high)
compound(engines, thrust)
punct(thrust, -)
case(weight, to)
punct(weight, -)
compound(ratio, weight)
compound(engines, ratio)
obj(use, engines)
punct(develop, ,)
conj(use, develop)
det(aircraft, a)
amod(takeoff, vertical)
punct(takeoff, -)
compound(landing, takeoff)
punct(takeoff, -)
cc(landing, and)
punct(landing, -)
compound(vtol, landing)
punct(vtol, ()
compound(aircraft, vtol)
punct(vtol, ))
amod(range, long)
punct(range, -)
compound(aircraft, range)
amod(aircraft, military)
obj(develop, aircraft)
punct(use, .)
nsubj(have, we)
root(ROOT, have)
det(technology, the)
obj(have, technology)
obl:tmod(have, today)
case(which, with)
obl(build, which)
mark(build, to)
advcl(have, build)
compound(shelter, aircraft)
obj(build, shelter)
nsubj(withstand, which)
aux(withstand, could)
acl:relcl(shelter, withstand)
case(least, at)
nmod(200, least)
nummod(Aj, 200)
obj(withstand, Aj)
punct(have, .)
nsubj(put, we)
aux(put, could)
parataxis(have, put)
det(portion, a)
obj(put, portion)
case(bomber, of)
nmod:poss(bomber, we)
amod(bomber, strategic)
nmod(portion, bomber)
case(shelter, in)
amod(shelter, such)
obl(put, shelter)
punct(have, .)
amod(bomber, large)
punct(develop, ,)
amod(range, long)
punct(range, -)
compound(bomber, range)
nsubj:pass(develop, bomber)
aux(develop, can)
aux:pass(develop, be)
root(ROOT, develop)
nsubj(have, which)
aux(have, would)
ccomp(develop, have)
det(capability, the)
obj(have, capability)
mark(take, to)
acl(capability, take)
compound:prt(take, off)
case(runways, from)
nummod(foot, 3,000)
punct(foot, -)
compound(runways, foot)
obl(take, runways)
punct(require, ,)
cc(require, but)
nsubj(require, they)
aux(require, would)
conj(develop, require)
advmod(powerful, more)
amod(engines, powerful)
obj(require, engines)
mark(have, than)
nsubj(have, we)
advcl(require, have)
obl:tmod(have, today)
punct(develop, .)
expl(be, there)
root(ROOT, be)
amod(enthusiasm, little)
nsubj(be, enthusiasm)
mark(spend, for)
acl(enthusiasm, spend)
obj(spend, money)
mark(develop, to)
xcomp(spend, develop)
advmod(powerful, more)
amod(engines, powerful)
obj(develop, engines)
case(belief, because)
fixed(because, of)
det(belief, the)
amod(belief, erroneous)
obl(develop, belief)
mark(make, that)
det(aircraft, the)
nsubj:pass(make, aircraft)
aux(make, have)
aux:pass(make, be)
acl(belief, make)
xcomp(make, obsolete)
case(missile, by)
det(missile, the)
obl(obsolete, missile)
punct(be, .)
det(preoccupation, this)
amod(preoccupation, same)
nsubj(result, preoccupation)
case(missile, with)
nmod(preoccupation, missile)
case(expense, at)
det(expense, the)
nmod(preoccupation, expense)
case(aircraft, of)
nmod(expense, aircraft)
aux(result, have)
root(ROOT, result)
case(effort, in)
nmod:poss(effort, we)
advmod(heart, half)
punct(heart, -)
amod(effort, heart)
obl(result, effort)
mark(develop, to)
acl(effort, develop)
amod(propulsion, nuclear)
obj(develop, propulsion)
case(aircraft, for)
obl(develop, aircraft)
punct(result, .)
nsubj(hear, one)
advmod(hear, seldom)
root(ROOT, hear)
det(analogy, the)
obj(hear, analogy)
punct(do, ``)
amod(propulsion, nuclear)
nsubj(do, propulsion)
aux(do, will)
appos(analogy, do)
case(aircraft, for)
det(aircraft, the)
obl(do, aircraft)
obj(do, what)
nsubj(do, it)
aux(do, have)
advmod(do, already)
acl:relcl(aircraft, do)
case(submarine, for)
det(submarine, the)
obl(do, submarine)
punct(hear, '')
punct(hear, .)
mark(go, if)
punct(turn, ,)
case(reason, for)
det(reason, some)
obl(go, reason)
case(economy, such)
fixed(such, as)
nmod(reason, economy)
punct(go, ,)
nsubj(go, we)
aux(go, be)
advmod(go, not)
advcl(turn, go)
mark(develop, to)
xcomp(go, develop)
amod(propulsion, aircraft)
amod(propulsion, nuclear)
obj(develop, propulsion)
case(sense, with)
det(sense, a)
obl(develop, sense)
case(urgency, of)
amod(urgency, national)
nmod(sense, urgency)
punct(turn, ,)
advmod(turn, then)
nsubj(turn, we)
aux(turn, should)
root(ROOT, turn)
nmod:poss(effort, we)
obj(turn, effort)
mark(develop, to)
acl(effort, develop)
compound(engines, jet)
obj(develop, engines)
case(ratio, with)
det(ratio, a)
compound(ratio, thrust)
punct(thrust, -)
case(weight, to)
punct(weight, -)
nmod(thrust, weight)
obl(develop, ratio)
case(12, of)
nmod(ratio, 12)
cc(15, or)
conj(12, 15)
case(one, to)
nmod(12, one)
punct(turn, .)
case(powerplant, with)
obl(build, powerplant)
case(these, such)
fixed(such, as)
det(takeoff, these)
punct(build, ,)
amod(takeoff, vertical)
nsubj:pass(build, takeoff)
cc(aircraft, and)
compound(combat, landing)
compound(aircraft, combat)
conj(takeoff, aircraft)
aux(build, could)
aux:pass(build, be)
root(ROOT, build)
punct(build, .)
case(example, for)
obl(power, example)
punct(power, ,)
det(engine, a)
nummod(engine, 12)
punct(12, -)
case(one, to)
punct(one, -)
nmod(12, one)
nsubj(power, engine)
aux(power, would)
root(ROOT, power)
det(fighter, a)
amod(fighter, supersonic)
compound(fighter, vtol)
obj(power, fighter)
punct(power, .)
case(engine, with)
det(engine, a)
nummod(engine, 15)
punct(15, -)
case(one, to)
punct(one, -)
nmod(15, one)
obl(rise, engine)
punct(rise, ,)
det(aircraft, a)
amod(aircraft, supersonic)
nsubj(rise, aircraft)
acl(aircraft, weigh)
nummod(pound, 300,000)
obj(weigh, pound)
aux(rise, could)
root(ROOT, rise)
advmod(rise, vertically)
punct(rise, .)
det(reason, the)
nsubj(be, reason)
mark(go, that)
nsubj(go, we)
aux(go, be)
advmod(go, not)
acl(reason, go)
advmod(go, ahead)
amod(speed, full)
obj(go, speed)
mark(develop, to)
advcl(go, develop)
amod(thrust, high)
obj(develop, thrust)
punct(thrust, -)
case(weight, to)
punct(weight, -)
compound(engines, weight)
obj(develop, engines)
root(ROOT, be)
mark(cost, that)
nsubj(cost, it)
aux(cost, would)
ccomp(be, cost)
advmod(dollar, perhaps)
det(dollar, a)
nummod(dollar, billion)
obj(cost, dollar)
punct(be, --)
cc(spend, and)
nsubj(spend, you)
aux(spend, do)
advmod(spend, not)
conj(cost, spend)
det(sort, that)
obj(spend, sort)
case(money, of)
nmod(sort, money)
mark(obsolete, if)
nsubj(obsolete, aircraft)
cop(obsolete, be)
advcl(spend, obsolete)
punct(spend, .)
mark(helpless, when)
nsubj(helpless, aircraft)
cop(helpless, be)
advmod(longer, no)
advmod(helpless, longer)
advcl(obsolete, helpless)
case(airfield, on)
obl(helpless, airfield)
punct(vulnerable, ,)
nsubj(vulnerable, they)
cop(vulnerable, be)
advmod(longer, no)
advmod(vulnerable, longer)
conj(helpless, vulnerable)
case(Aj, to)
obl(vulnerable, Aj)
punct(be, .)
mark(capable, if)
nmod:poss(bomber, we)
compound(bomber, sac)
nsubj(capable, bomber)
cop(capable, be)
punct(capable, ,)
obl:tmod(capable, today)
punct(capable, ,)
root(ROOT, capable)
mark(survive, of)
advcl(capable, survive)
det(attack, a)
compound(attack, surprise)
compound(attack, missile)
obj(survive, attack)
cc(have, and)
case(dispersion, because)
fixed(because, of)
amod(dispersion, infinite)
obl(have, dispersion)
cc(endurance, or)
amod(endurance, long)
conj(dispersion, endurance)
conj(capable, have)
det(capability, the)
obj(have, capability)
mark(strike, to)
acl(capability, strike)
case(Russia, at)
obl(strike, Russia)
advmod(strike, again)
punct(assure, ,)
cc(again, and)
advmod(assure, again)
punct(assure, ,)
cc(assure, and)
advmod(assure, again)
punct(assure, ,)
det(bomber, those)
nsubj(assure, bomber)
aux(assure, would)
advmod(assure, unquestionably)
conj(have, assure)
nmod:poss(dominance, we)
amod(dominance, military)
obj(assure, dominance)
punct(assure, .)
nsubj(have, we)
aux(have, would)
root(ROOT, have)
det(means, the)
obj(have, means)
mark(seek, to)
acl(means, seek)
compound:prt(seek, out)
cc(destroy, and)
conj(seek, destroy)
det(enemy, the)
nmod:poss(force, enemy)
case(enemy, 's)
obj(destroy, force)
punct(have, --)
mark(fix, whether)
nsubj:pass(fix, it)
aux:pass(fix, be)
acl:relcl(force, fix)
cc(mobile, or)
conj(fix, mobile)
punct(have, .)
case(force, with)
det:predet(force, such)
det(force, a)
obl(bring, force)
case(bomber, of)
amod(bomber, manned)
nmod(force, bomber)
nsubj(bring, we)
aux(bring, could)
root(ROOT, bring)
amod(pressure, enormous)
obj(bring, pressure)
mark(bear, to)
acl(pressure, bear)
case(enemy, on)
det(enemy, a)
obl(bear, enemy)
punct(selective, ,)
cc(selective, and)
det(pressure, this)
nsubj(selective, pressure)
aux(selective, would)
cop(selective, be)
conj(bring, selective)
cc(discriminating, and)
advmod(discriminating, extremely)
conj(selective, discriminating)
punct(bring, .)
det(need, no)
root(ROOT, need)
mark(kill, to)
acl(need, kill)
det(city, a)
amod(city, entire)
obj(kill, city)
cc(people, and)
det:predet(people, all)
nmod:poss(people, its)
conj(city, people)
mark(lack, because)
nsubj(lack, we)
advcl(kill, lack)
det(precision, the)
obj(lack, precision)
cc(reconnaissance, and)
conj(precision, reconnaissance)
mark(disarm, to)
advmod(disarm, selectively)
advcl(lack, disarm)
det(enemy, the)
nmod:poss(force, enemy)
case(enemy, 's)
amod(force, military)
obj(disarm, force)
punct(need, .)
nmod:poss(necessity, we)
amod(necessity, first)
nsubj(reconnaissance, necessity)
punct(necessity, ,)
case(outset, at)
det(outset, the)
amod(outset, very)
obl(reconnaissance, outset)
case(war, of)
nmod(outset, war)
punct(reconnaissance, ,)
cop(reconnaissance, be)
compound(attack, post)
punct(attack, -)
compound(reconnaissance, attack)
root(ROOT, reconnaissance)
punct(reconnaissance, .)
case(year, in)
det(year, a)
amod(year, few)
obl(have, year)
nsubj(have, we)
aux(have, will)
root(ROOT, have)
obj(have, SAMOS)
punct(system, ()
amod(system, semiautomatic)
compound(observation, missile)
compound(system, observation)
appos(SAMOS, system)
punct(system, ))
punct(have, .)
cc(be, but)
case(case, in)
det(case, the)
obl(what, case)
case(target, of)
acl(case, move)
obj(move, target)
punct(target, ,)
cc(target, and)
conj(target, target)
nsubj(have, which)
acl:relcl(target, have)
amod(mobility, limit)
obj(have, mobility)
punct(what, ,)
root(ROOT, what)
aux(be, will)
nmod:poss(location, they)
nsubj(be, location)
cop(what, be)
mark(time, when)
nsubj(time, it)
cop(time, be)
advcl(be, time)
mark(destroy, to)
acl(time, destroy)
obj(destroy, they)
punct(be, ?)
punct(be, ?)
det(target, what)
obj(knock, target)
aux(knock, have)
nsubj(knock, we)
advmod(knock, successfully)
root(ROOT, knock)
compound:prt(knock, out)
punct(knock, ?)
punct(knock, ?)
det(missile, a)
amod(missile, ballistic)
nsubj(can, missile)
parataxis(knock, can)
advmod(can, not)
punct(tell, ,)
obl:tmod(tell, today)
punct(tell, ,)
parataxis(knock, tell)
obj(tell, you)
mark(successful, if)
nsubj(successful, it)
cop(successful, be)
advcl(tell, successful)
cc(unsuccessful, or)
conj(successful, unsuccessful)
punct(knock, .)
det(target, what)
nsubj(remain, target)
advmod(remain, still)
root(ROOT, remain)
mark(hit, to)
aux:pass(hit, be)
xcomp(remain, hit)
punct(remain, ?)
punct(remain, ?)
det(question, these)
amod(question, crucial)
nsubj:pass(answer, question)
aux(answer, must)
aux:pass(answer, be)
root(ROOT, answer)
case(reconnaissance, by)
compound(reconnaissance, post)
compound(reconnaissance, -attack)
obl(answer, reconnaissance)
punct(answer, .)
nsubj:pass(put, SAMOS)
aux(put, will)
aux:pass(put, be)
advmod(put, hard)
parataxis(answer, put)
mark(see, to)
xcomp(put, see)
case(cloud, through)
obl(see, cloud)
punct(see, --)
cc(see, and)
mark(see, to)
conj(see, see)
case(dark, in)
det(dark, the)
obl(see, dark)
punct(answer, .)
advmod(day, even)
mark(day, if)
nsubj(day, this)
cop(day, be)
det(day, some)
advcl(remain, day)
amod(day, possible)
punct(remain, ,)
expl(remain, there)
root(ROOT, remain)
det(time, the)
nummod(minute, 30)
punct(minute, -)
compound(time, minute)
nsubj(remain, time)
case(flight, of)
nmod(time, flight)
case(missile, of)
det(missile, a)
nmod(flight, missile)
case(target, to)
nmod:poss(target, its)
amod(target, overseas)
nmod(flight, target)
punct(remain, .)
mark(change, if)
det(target, the)
nsubj(change, target)
aux(change, can)
advcl(reduce, change)
nmod:poss(position, its)
obj(change, position)
advmod(change, significantly)
case(minute, during)
det(minute, the)
nummod(minute, 30)
obl(change, minute)
det(missile, the)
nsubj(be, missile)
acl:relcl(minute, be)
case(air, in)
det(air, the)
obl(be, air)
case(way, on)
nmod:poss(way, its)
obl(air, way)
punct(reduce, ,)
det(probability, the)
nsubj:pass(reduce, probability)
case(missile, of)
det(missile, the)
nmod(probability, missile)
acl(missile, destroy)
det(target, the)
obj(destroy, target)
aux:pass(reduce, be)
advmod(reduce, drastically)
root(ROOT, reduce)
punct(reduce, .)
compound(reconnaissance, pre-attack)
nsubj(vital, reconnaissance)
cop(vital, be)
root(ROOT, vital)
cc(allow, but)
advmod(reconnaissance, only)
compound(-attack, post)
compound(reconnaissance, -attack)
nsubj(allow, reconnaissance)
aux(allow, will)
conj(vital, allow)
obj(allow, we)
mark(terminate, to)
xcomp(allow, terminate)
det(war, the)
obj(terminate, war)
advmod(terminate, favorably)
punct(vital, .)
expl(priceless, it)
aux(priceless, would)
cop(priceless, be)
root(ROOT, priceless)
mark(have, to)
csubj(priceless, have)
det(aircraft, a)
obj(have, aircraft)
mark(gather, to)
acl(aircraft, gather)
det(reconnaissance, that)
compound(-attack, post)
compound(reconnaissance, -attack)
obj(gather, reconnaissance)
punct(priceless, .)
nsubj(operate, it)
aux(operate, could)
root(ROOT, operate)
case(cloud, under)
det(cloud, the)
obl(operate, cloud)
cc(perform, and)
conj(operate, perform)
amod(photography, infrare)
obj(perform, photography)
case(cloud, through)
obl(perform, cloud)
cc(night, and)
case(night, at)
conj(cloud, night)
punct(operate, .)
nsubj(valuable, it)
aux(valuable, would)
cop(valuable, be)
advmod(more, even)
advmod(valuable, more)
root(ROOT, valuable)
mark(destroy, because)
det(aircraft, that)
amod(aircraft, same)
nsubj(destroy, aircraft)
aux(destroy, could)
advmod(destroy, immediately)
advcl(valuable, destroy)
det(target, any)
obj(destroy, target)
nsubj(discover, it)
acl:relcl(target, discover)
punct(discover, --)
det(need, no)
obj(discover, need)
mark(wait, to)
acl(need, wait)
case(missile, for)
det(missile, a)
obl(wait, missile)
mark(come, to)
advcl(wait, come)
det:predet(way, all)
det(way, the)
obj(come, way)
case(States, from)
det(States, the)
compound(States, United)
nmod(way, States)
case(chance, with)
det(chance, the)
obl(come, chance)
mark(go, that)
det(target, the)
nsubj:pass(go, target)
punct(go, ,)
mark(mobile, if)
nsubj(mobile, it)
cop(mobile, be)
advcl(go, mobile)
punct(go, ,)
aux(go, would)
aux:pass(go, be)
acl(chance, go)
punct(valuable, . )
det(aircraft, a)
amod(aircraft, large)
nsubj(carry, aircraft)
punct(aircraft, ,)
case(b, such)
fixed(such, as)
det(b, the)
nmod(aircraft, b)
punct(b, -)
nummod(b, 52)
cc(B, or)
conj(b, B)
case(70, -)
nmod(B, 70)
punct(carry, ,)
aux(carry, could)
root(ROOT, carry)
advmod(weapon, perhaps)
nummod(weapon, 50)
cc(100, or)
conj(50, 100)
amod(weapon, small)
amod(weapon, nuclear)
obj(carry, weapon)
punct(realize, .)
amod(people, few)
nsubj(realize, people)
parataxis(carry, realize)
mark(create, that)
nummod(kiloton, one)
nsubj(create, kiloton)
case(power, of)
amod(power, nuclear)
amod(power, explosive)
nmod(kiloton, power)
aux(create, will)
ccomp(realize, create)
nummod(overpressure, 1,000)
compound(overpressure, psi)
obj(create, overpressure)
case(foot, at)
nummod(foot, 100)
obl(create, foot)
punct(realize, .)
cc(put, or)
root(ROOT, put)
det(way, another)
obj(put, way)
punct(put, ,)
det(site, the)
amod(site, hardest)
compound(site, missile)
nsubj:pass(destroy, site)
acl(site, plan)
obl:tmod(plan, today)
aux(destroy, could)
aux:pass(destroy, be)
parataxis(put, destroy)
mark(place, by)
advcl(destroy, place)
det(warhead, a)
nummod(kiloton, one)
punct(kiloton, -)
compound(warhead, kiloton)
obj(place, warhead)
punct(1/20th, ()
appos(warhead, 1/20th)
det(size, the)
appos(warhead, size)
case(those, of)
nmod(size, those)
acl(those, use)
case(Hiroshima, in)
obl(use, Hiroshima)
cc(Nagasaki, and)
conj(Hiroshima, Nagasaki)
punct(size, ))
case(foot, within)
nummod(foot, 100)
case(200, to)
nmod(100, 200)
obl(use, foot)
case(target, of)
det(target, the)
nmod(foot, target)
punct(put, !)
punct(put, !)
nsubj(lack, it)
cop(lack, be)
nmod:poss(lack, we)
root(ROOT, lack)
case(accuracy, of)
amod(accuracy, extreme)
nmod(lack, accuracy)
nsubj(force, which)
acl:relcl(accuracy, force)
det(use, the)
obj(force, use)
case(weapon, of)
advmod(large, very)
amod(weapon, large)
compound(weapon, yield)
amod(weapon, nuclear)
nmod(use, weapon)
punct(lack, .)
obl:tmod(have, today)
nsubj(have, we)
parataxis(lack, have)
compound(look, side)
punct(look, -)
compound(radar, look)
obj(have, radar)
nsubj(have, which)
acl:relcl(radar, have)
amod(resolution, such)
amod(resolution, high)
obj(have, resolution)
obj(show, that)
det(picture, the)
compound(picture, radar)
nsubj(show, picture)
advmod(show, clearly)
acl:relcl(resolution, show)
amod(building, individual)
obj(show, building)
punct(runways, ,)
list(building, runways)
punct(way, ,)
amod(way, taxi-)
list(building, way)
punct(span, ,)
amod(span, separate)
list(building, span)
case(bridge, of)
nmod(span, bridge)
punct(etc, ,)
list(building, etc)
punct(lack, .)
punct(lack, .)
case(eye, with)
det(eye, these)
amod(eye, keen)
punct(eye, ``)
obl(attack, eye)
punct(eye, '')
cc(weapon, and)
amod(weapon, small)
amod(weapon, nuclear)
conj(eye, weapon)
acl(weapon, deliver)
case(accuracy, with)
obl(deliver, accuracy)
punct(attack, ,)
amod(force, military)
nsubj:pass(attack, force)
aux(attack, can)
aux:pass(attack, be)
advmod(attack, directly)
root(ROOT, attack)
case(damage, with)
amod(damage, minimum)
obl(attack, damage)
case(area, to)
amod(area, urban)
nmod(damage, area)
punct(attack, .)
mark(fail, if)
nsubj(fail, we)
advcl(frightening, fail)
mark(develop, to)
xcomp(fail, develop)
det(means, the)
obj(develop, means)
mark(hunt, to)
acl(means, hunt)
compound:prt(hunt, down)
cc(destroy, and)
conj(hunt, destroy)
det(enemy, the)
nmod:poss(force, enemy)
case(enemy, 's)
amod(force, military)
obj(hunt, force)
case(care, with)
amod(care, extreme)
nmod(force, care)
cc(precision, and)
conj(care, precision)
punct(frightening, ,)
cc(come, and)
mark(come, if)
nsubj(come, war)
advcl(frightening, come)
case(spite, in)
obl(come, spite)
case(desire, of)
nmod:poss(desire, we)
advmod(ardent, most)
amod(desire, ardent)
nmod(spite, desire)
case(peace, for)
nmod(desire, peace)
punct(frightening, ,)
nmod:poss(choice, we)
nsubj(frightening, choice)
case(alternative, of)
nmod(choice, alternative)
aux(frightening, will)
cop(frightening, be)
advmod(frightening, truly)
root(ROOT, frightening)
punct(frightening, .)
det(beauty, the)
compound(beauty, lyric)
nsubj(make, beauty)
case(Quintet, of)
nmod:poss(Quintet, Schubert)
case(Schubert, 's)
compound(Quintet, Trout)
nmod(beauty, Quintet)
punct(Quintet, --)
nmod:poss(rhythm, its)
amod(rhythm, elemental)
appos(beauty, rhythm)
cc(melody, and)
amod(melody, infectious)
conj(rhythm, melody)
punct(make, --)
root(ROOT, make)
obj(make, it)
det(source, a)
xcomp(make, source)
case(pleasure, of)
amod(pleasure, pure)
nmod(source, pleasure)
case(listener, for)
advmod(listener, almost)
det(listener, all)
compound(listener, music)
nmod(source, listener)
punct(make, .)
cc(present, but)
case(student, for)
obl(present, student)
case(form, of)
amod(form, musical)
nmod(student, form)
cc(classifier, and)
aux(classifier, would)
punct(classifier, -)
cop(classifier, be)
advcl(present, classifier)
punct(present, ,)
det(work, the)
nsubj(present, work)
root(ROOT, present)
nmod:poss(problem, its)
obj(present, problem)
punct(present, .)
mark(require, since)
nsubj(require, it)
advcl(seem, require)
advmod(player, only)
nummod(player, five)
obj(require, player)
punct(seem, ,)
nsubj(seem, it)
aux(seem, would)
root(ROOT, seem)
mark(fall, to)
xcomp(seem, fall)
case(category, into)
det(category, the)
obl(fall, category)
case(music, of)
compound(music, chamber)
nmod(category, music)
punct(seem, --)
cc(call, yet)
nsubj(call, it)
conj(seem, call)
case(bass, for)
det(bass, a)
amod(bass, double)
obl(call, bass)
punct(bass, ,)
det(instrument, a)
appos(bass, instrument)
advmod(regard, generally)
acl(instrument, regard)
case(symphonic, as)
obl(regard, symphonic)
punct(regard, .)
advmod(write, moreover)
punct(write, ,)
det(piece, the)
nsubj:pass(write, piece)
aux:pass(write, be)
parataxis(call, write)
case(movement, in)
nummod(movement, five)
obl(write, movement)
punct(write, ,)
cc(four, rather)
fixed(rather, than)
det(four, the)
amod(four, conventional)
conj(movement, four)
case(quintet, of)
amod(quintet, most)
nmod(four, quintet)
punct(give, ,)
cc(give, and)
nsubj(give, this)
conj(write, give)
det(opus, the)
obj(give, opus)
det(flavor, a)
compound(flavor, serenade)
cc(divertimento, or)
conj(serenade, divertimento)
obj(give, flavor)
punct(seem, .)
det(performance, the)
amod(performance, many)
cc(frequent, and)
conj(many, frequent)
nsubj(serve, performance)
case(Trout, of)
det(Trout, the)
nmod(performance, Trout)
root(ROOT, serve)
mark(emphasize, to)
xcomp(serve, emphasize)
det(nature, the)
amod(nature, dual)
obj(emphasize, nature)
case(writing, of)
nmod:poss(writing, its)
nmod(nature, writing)
punct(serve, .)
det(rendition, some)
nsubj(dimension, rendition)
cop(dimension, be)
case(dimension, of)
amod(dimension, symphonic)
root(ROOT, dimension)
punct(dimension, ,)
case(rein, with)
det(contrabass, the)
compound(rein, contrabass)
case(rein, give)
amod(rein, free)
obl(dimension, rein)
punct(dimension, .)
amod(interpretation, other)
nsubj(present, interpretation)
root(ROOT, present)
det(music, the)
obj(present, music)
case(creation, as)
det(creation, a)
advmod(intimate, essentially)
amod(creation, intimate)
obl(present, creation)
punct(present, .)
case(reading, in)
det(reading, these)
obl(keep, reading)
punct(keep, ,)
det(bass, the)
amod(bass, double)
nsubj:pass(keep, bass)
aux:pass(keep, be)
cc:preconj(keep, either)
root(ROOT, keep)
advmod(keep, discreetly)
case(background, in)
det(background, the)
obl(keep, background)
punct(dress, ,)
cc(dress, or)
nsubj:pass(dress, it)
aux:pass(dress, be)
conj(keep, dress)
case(attire, in)
nmod:poss(attire, clown)
case(clown, 's)
obl(dress, attire)
punct(attire, --)
det(equivalent, the)
amod(equivalent, musical)
appos(attire, equivalent)
case(bull, of)
det(bull, a)
nmod(equivalent, bull)
case(shop, in)
det(shop, a)
compound(shop, china)
nmod(bull, shop)
punct(keep, .)
advmod(strike, recently)
nsubj:pass(strike, I)
aux:pass(strike, be)
root(ROOT, strike)
advmod(strike, anew)
case(approach, by)
det(approach, the)
amod(approach, divergent)
obl(strike, approach)
punct(strike, ,)
mark(listen, when)
case(course, in)
det(course, the)
obl(listen, course)
case(afternoon, of)
nummod(afternoon, one)
nmod(course, afternoon)
cc(evening, and)
conj(afternoon, evening)
nsubj(listen, I)
conj(strike, listen)
case(performance, to)
advmod(fewer, no)
advmod(ten, fewer)
fixed(fewer, than)
nummod(performance, ten)
amod(performance, different)
obl(listen, performance)
punct(strike, .)
det(occasion, the)
root(ROOT, occasion)
case(marathon, for)
det(marathon, this)
nmod(occasion, marathon)
punct(occasion, :)
nmod:poss(reissue, angel)
case(angel, 's)
compound(await, long)
punct(await, -)
amod(reissue, await)
root(ROOT, reissue)
case(its, in)
nmod(reissue, its)
punct(reissue, ``)
amod(Recordings, great)
root(ROOT, Recordings)
case(Century, of)
det(Century, the)
nmod(series, Century)
punct(series, '')
root(ROOT, series)
case(version, of)
det(version, the)
compound(version, Schnabel)
punct(Arte, -)
compound(Arte, pro)
compound(version, Arte)
nmod(series, version)
punct(series, .)
root(ROOT, let)
obj(let, I)
xcomp(let, say)
case(outset, at)
det(outset, the)
obl(say, outset)
mark(sound, that)
det(music, the)
nsubj(sound, music)
acl(outset, sound)
mark(sparkling, as)
advcl(sound, sparkling)
case(playing, on)
det(playing, the)
amod(playing, last)
obl(sparkling, playing)
mark(first, as)
nsubj(first, it)
aux(first, do)
case(first, on)
det(first, the)
advcl(sparkling, first)
punct(sound, .)
mark(consider, whether)
advcl(first, consider)
advmod(consider, alone)
cc(relation, or)
case(relation, in)
conj(consider, relation)
case(edition, to)
amod(edition, other)
nmod(relation, edition)
punct(document, ,)
nsubj(document, COLH)
nummod(COLH, 40)
cop(document, be)
det(document, a)
acl:relcl(relation, document)
case(importance, of)
amod(importance, prime)
nmod(document, importance)
punct(one, .)
nsubj(one, Artur)
flat(Artur, Schnabel)
cop(one, be)
conj(document, one)
case(player, of)
det(player, the)
amod(player, greatest)
compound(Mozart, Schubert)
punct(Mozart, -)
compound(Mozart, beethoven)
punct(Mozart, -)
compound(player, Mozart)
nmod(one, player)
case(time, of)
det(time, all)
nmod(player, time)
punct(valuable, ,)
cc(valuable, and)
det(commentary, any)
nsubj(valuable, commentary)
case(repertory, of)
nmod:poss(repertory, he)
case(repertory, on)
det(repertory, this)
nmod(commentary, repertory)
cop(valuable, be)
conj(one, valuable)
punct(let, .)
cc(teacher, but)
nsubj(teacher, Schnabel)
cop(teacher, be)
det(teacher, a)
amod(teacher, great)
root(ROOT, teacher)
case(addition, in)
obl(teacher, addition)
mark(performer, to)
cop(performer, be)
det(performer, a)
amod(performer, great)
advcl(teacher, performer)
punct(fact, ,)
cc(fact, and)
det(fact, the)
conj(teacher, fact)
mark(shed, that)
nsubj(pupil, four)
case(version, of)
det(version, the)
nummod(version, ten)
nmod(four, version)
nsubj(listen, I)
acl:relcl(version, listen)
obl(listen, to)
cop(pupil, be)
case(pupil, by)
compound(pupil, Schnabel)
acl(fact, pupil)
punct(Clifford, ()
appos(pupil, Clifford)
flat(Clifford, Curzon)
punct(Frank, ,)
conj(Clifford, Frank)
flat(Frank, Glazer)
punct(adrian, ,)
conj(Clifford, adrian)
flat(adrian, Aeschbacher)
punct(Victor, ,)
cc(Victor, and)
conj(Clifford, Victor)
flat(Victor, Babin)
punct(Victor, ))
advmod(shed, also)
acl(fact, shed)
obj(shed, light)
case(skill, on)
det(master, the)
nmod:poss(skill, master)
case(master, 's)
amod(skill, pedagogical)
obl(shed, skill)
punct(teacher, .)
amod(trait, Certain)
amod(trait, pianistic)
nsubj(common, trait)
cop(common, be)
root(ROOT, common)
case(rendition, to)
det(rendition, all)
nummod(rendition, five)
compound(rendition, schnabelian)
obl(common, rendition)
punct(rendition, ,)
advmod(notably, most)
advmod(the, notably)
parataxis(common, the)
punct(common, ``)
compound(trill, Schnabel)
root(ROOT, trill)
punct(trill, '')
punct(differ, ()
nsubj(differ, which)
acl:relcl(trill, differ)
case(trill, from)
det(trill, the)
amod(trill, conventional)
obl(differ, trill)
mark(strike, in)
fixed(in, that)
det(note, the)
nummod(note, two)
nsubj:pass(strike, note)
aux:pass(strike, be)
advcl(differ, strike)
advmod(strike, simultaneously)
punct(trill, ))
punct(trill, .)
cc(testimony, but)
det(testimony, the)
advmod(impressive, most)
amod(testimony, impressive)
nsubj(tend, testimony)
case(distinction, to)
nmod:poss(distinction, Schnabel)
case(Schnabel, 's)
nmod(testimony, distinction)
mark(reflect, as)
det(teacher, a)
nsubj:pass(reflect, teacher)
aux:pass(reflect, be)
advcl(testimony, reflect)
case(individuality, by)
det(individuality, the)
obl(reflect, individuality)
nsubj(mark, which)
acl:relcl(individuality, mark)
det(student, each)
nmod:poss(approach, student)
case(student, 's)
obj(mark, approach)
mark(own, as)
advmod(own, distinctly)
nmod:poss(own, he)
amod(emphasis, own)
punct(emphasis, .)
nmod:poss(emphasis, Schnabel)
case(Schnabel, 's)
obj(mark, emphasis)
case(clarity, on)
amod(clarity, structural)
nmod(emphasis, clarity)
punct(vibrancy, ,)
nmod:poss(vibrancy, he)
amod(vibrancy, innate)
amod(vibrancy, rhythmic)
conj(clarity, vibrancy)
punct(intensity, ,)
cc(intensity, and)
amod(intensity, impetuous)
conj(vibrancy, intensity)
advmod(intensity, all)
root(ROOT, tend)
mark(stamp, to)
xcomp(tend, stamp)
nmod:poss(reading, he)
obj(stamp, reading)
case(one, as)
det(one, a)
amod(one, symphonic)
obl(stamp, one)
punct(tend, .)
cc(have, yet)
det(detail, no)
nsubj(small, detail)
cop(small, be)
advmod(small, too)
root(ROOT, small)
mark(receive, to)
advcl(small, receive)
obj(receive, attention)
case(master, from)
det(master, this)
obl(receive, master)
punct(have, ,)
cc(have, and)
case(result, as)
det(result, a)
obl(have, result)
det(playing, the)
nsubj(have, playing)
advmod(playing, here)
conj(small, have)
obj(have, humor)
punct(delicacy, ,)
conj(humor, delicacy)
punct(humanity, ,)
cc(humanity, and)
amod(humanity, radiant)
conj(humor, humanity)
punct(small, .)
nsubj(interpretation, this)
cop(interpretation, be)
det(interpretation, a)
amod(minded, serious)
punct(minded, -)
amod(interpretation, minded)
root(ROOT, interpretation)
punct(lace, ,)
cc(lace, but)
nsubj(lace, it)
cop(lace, be)
advmod(lace, never)
amod(lace, strait)
punct(lace, -)
conj(interpretation, lace)
punct(interpretation, .)
cc(faithful, and)
mark(bristle, although)
nmod:poss(pianism, Schnabel)
case(Schnabel, 's)
nsubj(bristle, pianism)
advcl(faithful, bristle)
case(excitement, with)
obl(bristle, excitement)
punct(faithful, ,)
nsubj(faithful, it)
cop(faithful, be)
advmod(faithful, meticulously)
root(ROOT, faithful)
case(marking, to)
nmod:poss(marking, Schubert)
case(Schubert, 's)
amod(marking, dynamic)
obl(faithful, marking)
cc(indication, and)
compound(indication, phrase)
conj(marking, indication)
punct(faithful, .)
det(performance, the)
compound(performance, piano)
nsubj(one, performance)
case(Trout, on)
det(Trout, this)
nmod(performance, Trout)
cop(one, be)
root(ROOT, one)
nsubj(demand, that)
advmod(demand, really)
acl:relcl(one, demand)
det(search, a)
obj(demand, search)
case(superlative, for)
nmod(search, superlative)
punct(one, .)
case(contribution, about)
det(Arte, the)
compound(Arte, pro)
nmod:poss(contribution, Arte)
case(Arte, 's)
obl(demand, contribution)
nsubj(happy, I)
cop(happy, be)
advmod(happy, less)
acl:relcl(contribution, happy)
punct(one, . )
nsubj(regret, I)
punct(regret, ,)
case(one, for)
obl(regret, one)
punct(regret, ,)
advmod(regret, rather)
root(ROOT, regret)
mark(collaborate, that)
nsubj(collaborate, Schnabel)
aux(collaborate, do)
advmod(collaborate, not)
ccomp(regret, collaborate)
case(Quartet, with)
det(Quartet, the)
compound(Quartet, budapest)
obl(collaborate, Quartet)
punct(Quartet, ,)
nmod:poss(playing, whose)
amod(playing, rug)
punct(playing, ,)
amod(playing, athletic)
nsubj(deal, playing)
cop(deal, be)
det(deal, a)
amod(deal, good)
acl:relcl(Quartet, deal)
advmod(deal, closer)
case(outlook, to)
det(pianist, this)
nmod:poss(outlook, pianist)
case(pianist, 's)
amod(outlook, interpretative)
obl(closer, outlook)
case(style, than)
det(style, the)
nmod(outlook, style)
case(group, of)
det(group, the)
amod(group, belgian)
nmod(style, group)
punct(regret, .)
case(standpoint, from)
det(standpoint, a)
amod(standpoint, technical)
obl(good, standpoint)
punct(good, ,)
det(playing, the)
compound(playing, string)
nsubj(good, playing)
cop(good, be)
root(ROOT, good)
punct(fail, ,)
cc(fail, but)
det(people, the)
compound(people, pro)
compound(people, Arte)
nsubj(fail, people)
conj(good, fail)
mark(enter, to)
xcomp(fail, enter)
case(spirit, into)
det(spirit, the)
obl(enter, spirit)
case(thing, of)
nmod(spirit, thing)
advmod(thing, here)
punct(good, .)
det(violinist, the)
nsubj(indulgent, violinist)
punct(indulgent, ,)
case(particular, in)
obl(indulgent, particular)
punct(indulgent, ,)
cop(indulgent, be)
advmod(indulgent, very)
root(ROOT, indulgent)
case(swoops, with)
obl(indulgent, swoops)
cc(slide, and)
conj(swoops, slide)
punct(pinch, ,)
cc(pinch, and)
nmod:poss(tone, he)
nsubj:pass(pinch, tone)
aux:pass(pinch, be)
conj(indulgent, pinch)
cc(edgy, and)
conj(pinch, edgy)
punct(indulgent, .)
det(recording, the)
nummod(year, twenty)
punct(year, -)
nummod(year, five)
punct(year, -)
obl:npmod(old, year)
punct(old, -)
amod(recording, old)
nsubj(offer, recording)
root(ROOT, offer)
advmod(fad, rather)
amod(tone, fad)
compound(tone, string)
obj(offer, tone)
punct(good, ,)
cc(good, but)
det(balance, the)
nsubj(good, balance)
case(instrument, between)
det(instrument, the)
nmod(balance, instrument)
cop(good, be)
conj(offer, good)
cc(quiet, and)
det(transfer, the)
nsubj(quiet, transfer)
cop(quiet, be)
advmod(quiet, very)
conj(good, quiet)
punct(offer, .)
expl(be, there)
root(ROOT, be)
det(break, a)
nsubj(be, break)
case(continuity, in)
nmod(break, continuity)
advmod(variation, just)
case(variation, before)
det(variation, the)
amod(variation, fourth)
obl(be, variation)
case(the, in)
nmod(variation, the)
punct(be, ``)
compound(movement, Forellen)
punct(movement, '')
root(ROOT, movement)
punct(suspect, ,)
cc(suspect, and)
nsubj(suspect, I)
conj(movement, suspect)
mark(splicing, that)
nsubj(splicing, this)
cop(splicing, be)
case(splicing, due)
fixed(due, to)
amod(splicing, imperfect)
ccomp(suspect, splicing)
case(side, between)
nmod(splicing, side)
case(Aj, of)
det(Aj, the)
amod(Aj, original)
nmod(side, Aj)
punct(splicing, .)
advcl(splicing, turn)
case(version, to)
det(version, the)
advmod(modern, more)
amod(version, modern)
obl(turn, version)
punct(version, ,)
appos(version, Curzon)
case(Curzon, 's)
punct(London, ()
appos(version, London)
punct(London, ))
conj(turn, offer)
det(work, the)
advmod(sophisticated, most)
amod(work, sophisticated)
compound(work, keyboard)
obj(offer, work)
punct(offer, .)
det(detail, every)
nsubj:pass(think, detail)
case(interpretation, in)
nmod:poss(interpretation, he)
nmod(detail, interpretation)
aux(think, have)
aux:pass(think, be)
advmod(think, beautifully)
root(ROOT, think)
compound:prt(think, out)
punct(cite, ,)
cc(cite, and)
case(these, of)
obl(cite, these)
nsubj(cite, I)
aux(cite, would)
advmod(cite, especially)
conj(think, cite)
det(touch, the)
amod(touch, delicious)
compound(touch, laendler)
obj(cite, touch)
det(pianist, the)
nsubj(bring, pianist)
acl:relcl(touch, bring)
case(variation, to)
det(variation, the)
amod(variation, fifth)
obl(bring, variation)
punct(indication, ()
det(indication, a)
amod(indication, obvious)
appos(variation, indication)
mark(play, that)
nsubj(play, he)
aux(play, be)
acl(indication, play)
case(musician, with)
amod(musician, viennese)
obl(play, musician)
punct(play, ))
punct(shad, ,)
cc(shad, and)
det(gossamer, the)
nsubj(shad, gossamer)
conj(play, shad)
advmod(shad, throughout)
punct(think, .)
nsubj(strike, some)
case(playing, of)
nmod:poss(playing, Curzon)
case(Curzon, 's)
nmod(some, playing)
root(ROOT, strike)
obj(strike, I)
advmod(finicky, as)
xcomp(strike, finicky)
punct(strike, ,)
advmod(favor, however)
punct(strike, .)
advmod(favor, why)
punct(favor, ,)
case(example, for)
obl(favor, example)
punct(favor, ,)
aux(favor, do)
nsubj(favor, he)
parataxis(strike, favor)
nummod(tempos, two)
obj(favor, tempos)
punct(favor, ,)
cc(one, rather)
fixed(rather, than)
conj(tempos, one)
punct(favor, ,)
case(movement, for)
det(movement, the)
amod(movement, third)
obl(favor, movement)
punct(strike, ?)
punct(strike, ?)
det(musician, the)
compound(musician, assist)
nsubj(lack, musician)
case(Octet, from)
det(Octet, the)
compound(Octet, Vienna)
nmod(musician, Octet)
cop(lack, be)
advmod(lack, somewhat)
root(ROOT, lack)
case(expertise, in)
obl(lack, expertise)
punct(rustic, ,)
cc(rustic, but)
nmod:poss(contribution, they)
nsubj(rustic, contribution)
cop(rustic, be)
conj(lack, rustic)
cc(appeal, and)
conj(rustic, appeal)
punct(lack, . )
punct(compliment, ()
amod(compliment, special)
root(ROOT, compliment)
case(playing, to)
det(playing, the)
amod(playing, double)
compound(playing, bass)
nmod(compliment, playing)
case(Johann, of)
nmod(playing, Johann)
flat(Johann, Krumpp)
punct(compliment, :)
nmod:poss(sound, he)
amod(sound, scrawny)
punct(sound, ,)
amod(sound, totter)
nsubj(add, sound)
parataxis(compliment, add)
det(hilarity, a)
amod(hilarity, delightful)
obj(add, hilarity)
case(performance, to)
det(performance, the)
nmod(hilarity, performance)
punct(compliment, .)
punct(compliment, ))
det(edition, the)
compound(edition, Glazer)
punct(Fine, -)
compound(Arts, Fine)
compound(edition, Arts)
nsubj(model, edition)
punct(Disc, ()
compound(Disc, concert)
punct(Disc, -)
appos(edition, Disc)
punct(Disc, ))
cop(model, be)
det(model, a)
root(ROOT, model)
case(lucidity, of)
nmod(model, lucidity)
cc(organization, and)
conj(lucidity, organization)
punct(model, .)
nsubj(effort, it)
cop(effort, be)
punct(effort, ,)
advmod(effort, moreover)
punct(effort, ,)
det(effort, a)
advmod(integrate, perfectly)
amod(effort, integrate)
compound(effort, ensemble)
root(ROOT, effort)
punct(effort, .)
cc(find, but)
aux(live, have)
advcl(find, live)
case(disc, with)
det(disc, the)
obl(live, disc)
case(time, for)
det(time, some)
obl(live, time)
advmod(live, now)
punct(find, ,)
nsubj(find, I)
root(ROOT, find)
det(performance, the)
obj(find, performance)
advmod(exciting, less)
xcomp(find, exciting)
case(Schnabel, than)
cc:preconj(Schnabel, either)
obl(exciting, Schnabel)
case(Schnabel, 's)
cc(Fleisher, or)
conj(Schnabel, Fleisher)
case(Fleisher, 's)
punct(performance, ()
nmod:poss(performance, whose)
amod(performance, superb)
nsubj(have, performance)
case(Quartet, with)
det(Quartet, the)
compound(Quartet, budapest)
nmod(performance, Quartet)
ccomp(find, have)
advmod(have, still)
mark(record, to)
aux:pass(record, be)
xcomp(have, record)
punct(have, ))
cc(deal, and)
det(deal, a)
amod(deal, good)
conj(have, deal)
advmod(fill, less)
acl(deal, fill)
case(humor, with)
obl(fill, humor)
case(Curzon, than)
nmod(humor, Curzon)
case(Curzon, 's)
punct(find, .)
nmod:poss(work, Aeschbacher)
case(Aeschbacher, 's)
nsubj(akin, work)
cop(akin, be)
advmod(much, very)
advmod(akin, much)
root(ROOT, akin)
case(Schnabel, to)
obl(akin, Schnabel)
case(Schnabel, 's)
punct(date, ,)
cc(date, but)
det(sound, the)
nsubj:pass(date, sound)
case(disc, on)
nmod:poss(disc, he)
compound(disc, Decca)
nmod(sound, disc)
aux:pass(date, be)
conj(akin, date)
punct(have, ,)
cc(have, and)
nsubj(have, you)
aux(have, will)
conj(date, have)
det(time, a)
amod(time, hard)
obj(have, time)
acl(time, locate)
det(copy, a)
obj(locate, copy)
case(it, of)
nmod(copy, it)
punct(Quartet, .)
det(Quartet, the)
compound(Quartet, Hephzibah)
compound(amadeus, Menuhin)
punct(amadeus, -)
compound(Quartet, amadeus)
appos(copy, Quartet)
punct(angel, ()
appos(Quartet, angel)
punct(angel, ))
cc(Victor, and)
conj(Quartet, Victor)
flat(Victor, Babin)
punct(Victor, -)
compound(Quartet, Festival)
appos(Victor, Quartet)
punct(Victor, ()
compound(Victor, RCA)
appos(Quartet, Victor)
punct(Victor, ))
nsubj(give, edition)
parataxis(akin, give)
iobj(give, we)
amod(playing, superlative)
compound(playing, string)
obj(give, playing)
punct(playing, ()
cc:preconj(playing, both)
case(style, in)
amod(style, symphonic)
nmod(playing, style)
punct(playing, ))
acl(playing, crippled)
case(playing, by)
amod(playing, unimaginative)
compound(playing, piano)
obl(crippled, playing)
punct(akin, . )
punct(acquire, ()
nsubj(acquire, Babin)
aux(acquire, have)
root(ROOT, acquire)
obj(acquire, some)
case(manner, of)
nmod:poss(manner, Schnabel)
case(Schnabel, 's)
compound(manner, keyboard)
nmod(some, manner)
punct(insight, ,)
cc(insight, but)
nmod:poss(playing, he)
nsubj(insight, playing)
cop(insight, be)
case(insight, of)
amod(insight, limited)
conj(acquire, insight)
punct(acquire, .)
punct(acquire, ))
root(ROOT, Badura)
punct(Badura, -)
flat(Badura, Skoda)
punct(Badura, -)
compound(Konzerthaus, Vienna)
appos(Badura, Konzerthaus)
punct(Westminster, ()
appos(Konzerthaus, Westminster)
punct(Westminster, ))
cc(Demus, and)
conj(Konzerthaus, Demus)
punct(Konzerthaus, -)
compound(Quartet, Schubert)
conj(Konzerthaus, Quartet)
punct(Grammophon, ()
compound(Grammophon, Deutsche)
appos(Quartet, Grammophon)
punct(Grammophon, ))
cop(tone, be)
cc:preconj(tone, both)
amod(tone, warm)
punct(tone, -)
parataxis(Badura, tone)
punct(lyrical, ,)
advmod(lyrical, pleasantly)
conj(tone, lyrical)
punct(slack, ,)
cc(slack, but)
advmod(slack, rather)
conj(tone, slack)
cc(tensionless, and)
conj(slack, tensionless)
punct(tone, .)
nsubj(give, Helmut)
flat(Helmut, Roloff)
punct(Helmut, ,)
acl(Helmut, play)
case(group, with)
det(group, a)
obl(play, group)
case(musician, of)
nmod(group, musician)
case(ensemble, from)
det(ensemble, the)
compound(ensemble, Bayreuth)
nmod(musician, ensemble)
punct(give, ,)
root(ROOT, give)
det(reading, a)
amod(reading, sturdy)
obj(give, reading)
punct(reading, ,)
case(vein, in)
advmod(vein, much)
det(vein, the)
amod(vein, same)
nmod(reading, vein)
case(that, as)
nmod(vein, that)
case(pianist, of)
det(pianist, the)
amod(mention, last)
punct(mention, -)
amod(pianist, mention)
nmod(that, pianist)
punct(accord, .)
nsubj(accord, telefunken)
aux(accord, have)
parataxis(give, accord)
iobj(accord, he)
amod(sound, beautiful)
obj(accord, sound)
punct(worthy, ,)
cc(worthy, and)
det(disc, this)
compound(price, bargain)
punct(price, -)
amod(disc, price)
nsubj(worthy, disc)
punct(sell, ()
nsubj(sell, it)
acl:relcl(disc, sell)
case($, for)
obl(sell, $)
nummod($, 2.98)
punct(sell, ))
cop(worthy, be)
conj(accord, worthy)
case(consideration, of)
obl(worthy, consideration)
punct(give, .)
advcl(beguiled, return)
advmod(again, once)
advmod(return, again)
case(Schnabel, to)
det(Schnabel, the)
obl(return, Schnabel)
flat(Schnabel, reissue)
punct(beguiled, ,)
nsubj:pass(beguiled, I)
aux:pass(beguiled, be)
root(ROOT, beguiled)
advmod(beguiled, anew)
case(magnificence, by)
det(magnificence, the)
obl(beguiled, magnificence)
case(penetration, of)
det(pianist, this)
nmod:poss(penetration, pianist)
case(pianist, 's)
amod(penetration, musical)
nmod(magnificence, penetration)
punct(beguiled, .)
root(ROOT, here)
cop(here, be)
advmod(here, truly)
nsubj(here, a)
punct(here, ``)
amod(Recording, great)
root(ROOT, Recording)
case(century, of)
det(century, the)
nmod(Recording, century)
punct(Recording, '')
punct(be, ,)
cc(be, and)
nsubj(greatness, it)
cop(greatness, be)
conj(Recording, greatness)
conj(Recording, be)
case(means, by)
det(means, no)
obl(be, means)
acl(means, diminish)
case(fact, by)
det(fact, the)
obl(diminish, fact)
mark(perfect, that)
nsubj(perfect, it)
cop(perfect, be)
advmod(perfect, not)
advmod(perfect, quite)
acl(fact, perfect)
punct(Recording, .)
det(recording, this)
nsubj(belong, recording)
advmod(belong, surely)
root(ROOT, belong)
case(collection, in)
nmod:poss(collection, everyone)
case(everyone, 's)
obl(belong, collection)
punct(belong, .)
aux(sound, must)
nsubj(sound, record)
advmod(sound, always)
root(ROOT, sound)
case(record, like)
obl(sound, record)
punct(sound, ?)
punct(sound, ?)
case(beginning, from)
det(beginning, the)
obl(put, beginning)
case(recording, of)
amod(recording, commercial)
nmod(beginning, recording)
punct(put, ,)
amod(disc, new)
nsubj:pass(put, disc)
acl(disc, purport)
mark(indistinguishable, to)
cop(indistinguishable, be)
xcomp(purport, indistinguishable)
case(thing, from)
det(thing, the)
compound(thing, Real)
obl(indistinguishable, thing)
aux(put, have)
advmod(put, regularly)
aux:pass(put, be)
root(ROOT, put)
case(circulation, in)
obl(put, circulation)
punct(put, .)
advcl(have, see)
case(perspective, in)
obl(see, perspective)
punct(have, ,)
nsubj(have, many)
case(release, of)
det(release, these)
nmod(many, release)
root(ROOT, have)
det(claim, a)
amod(claim, genuine)
obj(have, claim)
mark(milestone, to)
cop(milestone, be)
acl(claim, milestone)
punct(have, .)
mark(lack, although)
advcl(supply, lack)
amod(verisimilitude, absolute)
obj(lack, verisimilitude)
punct(supply, ,)
nsubj(supply, they)
root(ROOT, supply)
det(ear, the)
obj(supply, ear)
cc(imagination, and)
det(imagination, the)
conj(ear, imagination)
case(material, with)
det(material, all)
amod(material, necessary)
nmod(imagination, material)
case(re-creation, for)
nmod(material, re-creation)
case(original, of)
det(original, the)
nmod(re-creation, original)
punct(supply, .)
case(basis, on)
det(basis, the)
obl(know, basis)
case(what, of)
nmod(basis, what)
nsubj(give, they)
acl:relcl(what, give)
iobj(give, we)
nsubj(know, we)
aux(know, can)
root(ROOT, know)
advmod(sang, how)
det(Caruso, the)
amod(Caruso, young)
nsubj(sang, Caruso)
ccomp(know, sang)
punct(appreciate, ,)
conj(know, appreciate)
det(quality, the)
amod(quality, distinctive)
obj(appreciate, quality)
case(Parsifal, of)
nmod(quality, Parsifal)
case(baton, under)
nmod:poss(baton, Karl)
flat(Karl, Muck)
case(Karl, 's)
nmod(quality, baton)
punct(sense, ,)
cc(sense, or)
conj(appreciate, sense)
det(type, the)
obj(sense, type)
case(ensemble, of)
nmod(type, ensemble)
nsubj(create, toscanini)
acl:relcl(ensemble, create)
case(year, in)
nmod:poss(year, he)
obl(create, year)
case(Philharmonic, with)
det(Philharmonic, the)
compound(York, New)
compound(Philharmonic, York)
obl(create, Philharmonic)
punct(know, .)
mark(become, since)
det(concept, the)
nsubj(become, concept)
case(fidelity, of)
amod(fidelity, high)
nmod(concept, fidelity)
advcl(multiply, become)
xcomp(become, important)
det(year, some)
nummod(year, dozen)
obl:npmod(ago, year)
advmod(important, ago)
punct(multiply, ,)
det(claim, the)
nsubj(multiply, claim)
case(improvement, of)
amod(improvement, technical)
nmod(claim, improvement)
aux(multiply, have)
root(ROOT, multiply)
obj(multiply, tenfold)
punct(multiply, .)
case(case, in)
amod(case, many)
obl(offer, case)
det(production, the)
amod(production, revolutionary)
nsubj(offer, production)
aux(offer, have)
root(ROOT, offer)
advmod(more, no)
advmod(sensational, more)
fixed(more, than)
amod(effect, sensational)
obj(offer, effect)
punct(offer, :)
det(hearing, the)
amod(hearing, first)
nsubj(fascinating, hearing)
cop(fascinating, be)
parataxis(offer, fascinating)
cc(disillusioning, and)
det(disillusioning, the)
amod(disillusioning, second)
conj(fascinating, disillusioning)
mark(become, as)
det(gap, the)
nsubj(become, gap)
case(sound, between)
nmod(gap, sound)
cc(substance, and)
conj(sound, substance)
conj(fascinating, become)
xcomp(become, clearer)
punct(offer, .)
amod(innovation, other)
nsubj(survive, innovation)
case(claim, with)
amod(claim, better)
nmod(innovation, claim)
case(interest, to)
amod(interest, musical)
nmod(claim, interest)
root(ROOT, survive)
obj(survive, rehearing)
mark(acquire, to)
acl(rehearing, acquire)
case(time, in)
obl(acquire, time)
det(status, the)
obj(acquire, status)
case(classic, of)
nmod(status, classic)
punct(survive, .)
mark(return, if)
nsubj(return, we)
advcl(have, return)
case(they, to)
obl(return, they)
obl:tmod(return, today)
punct(have, ,)
nsubj(have, we)
root(ROOT, have)
det(difficulty, no)
obj(have, difficulty)
acl(difficulty, spot)
nmod:poss(weakness, they)
obj(spot, weakness)
cc(find, but)
nsubj(find, we)
conj(have, find)
obj(find, they)
advmod(pleasing, still)
xcomp(find, pleasing)
punct(have, .)
nsubj(sound, record)
root(ROOT, sound)
case(record, like)
obl(sound, record)
mark(provide, because)
nsubj(provide, they)
advcl(sound, provide)
det(sort, a)
amod(sort, different)
obj(provide, sort)
case(experience, of)
nmod(sort, experience)
case(music, than)
amod(music, live)
nmod(sort, music)
punct(sound, .)
det(difference, this)
nsubj:pass(make, difference)
aux:pass(make, be)
root(ROOT, make)
compound:prt(make, up)
case(factor, of)
amod(factor, many)
obl(make, factor)
punct(make, .)
nsubj(obvious, some)
case(they, of)
nmod(some, they)
cop(obvious, be)
root(ROOT, obvious)
punct(obvious, ,)
case(fact, such)
fixed(such, as)
det(fact, the)
obl(obvious, fact)
mark(associate, that)
nsubj(associate, we)
acl(fact, associate)
xcomp(associate, record)
cc(live, and)
conj(record, live)
obj(record, music)
case(response, with)
nmod:poss(response, we)
obl(record, response)
cc(behavior, and)
conj(response, behavior)
case(type, in)
amod(type, different)
nmod(response, type)
case(environment, of)
nmod(type, environment)
cc(setting, and)
amod(setting, social)
conj(environment, setting)
punct(obvious, . )
punct(sound, ()
nsubj(sound, music)
advmod(sound, often)
root(ROOT, sound)
xcomp(sound, best)
case(I, to)
obl(best, I)
mark(dress, when)
nsubj(dress, I)
aux(dress, can)
advcl(sound, dress)
advmod(dress, informally)
cc(sit, and)
conj(dress, sit)
case(something, in)
obl(sit, something)
advmod(comfortable, more)
amod(something, comfortable)
case(seat, than)
det(seat, a)
compound(seat, theatre)
obl(comfortable, seat)
punct(sound, .)
punct(sound, ))
case(standpoint, from)
det(standpoint, the)
amod(standpoint, technical)
obl(differ, standpoint)
punct(differ, ,)
nsubj(differ, record)
root(ROOT, differ)
case(music, from)
amod(music, live)
obl(differ, music)
case(degree, to)
det(degree, the)
obl(differ, degree)
obj(fail, that)
nsubj(fail, they)
acl:relcl(degree, fail)
mark(convey, to)
xcomp(fail, convey)
det(color, the)
amod(color, true)
obj(convey, color)
punct(texture, ,)
conj(color, texture)
punct(complexity, ,)
conj(color, complexity)
punct(range, ,)
conj(color, range)
punct(intensity, ,)
conj(color, intensity)
punct(pulse, ,)
conj(color, pulse)
punct(pitch, ,)
cc(pitch, and)
conj(color, pitch)
case(original, of)
det(original, the)
nmod(pitch, original)
punct(differ, .)
det(alteration, any)
nsubj(distortion, alteration)
case(one, of)
nmod(alteration, one)
case(factor, of)
det(factor, these)
nmod(one, factor)
cop(distortion, be)
root(ROOT, distortion)
punct(distortion, ,)
mark(use, although)
nsubj(use, we)
advmod(use, generally)
advcl(distortion, use)
det(word, that)
obj(use, word)
advmod(effect, only)
case(effect, for)
obl(use, effect)
advmod(pronounce, so)
acl(effect, pronounce)
mark(state, that)
nsubj:pass(state, they)
aux(state, can)
aux:pass(state, be)
ccomp(pronounce, state)
advmod(state, quantitatively)
case(basis, on)
det(basis, the)
obl(state, basis)
case(test, of)
amod(test, standard)
nmod(basis, test)
punct(distortion, .)
cc(accumulation, yet)
nsubj(accumulation, it)
cop(accumulation, be)
det(accumulation, the)
root(ROOT, accumulation)
case(distortion, of)
nmod(accumulation, distortion)
punct(distortion, ,)
det(fitting, the)
appos(accumulation, fitting)
advmod(fitting, together)
case(bit, of)
amod(bit, fractional)
nmod(fitting, bit)
mark(reach, until)
det(total, the)
nsubj(reach, total)
advcl(accumulation, reach)
det(threshold, the)
obj(reach, threshold)
case(awareness, of)
nmod:poss(awareness, we)
nmod(threshold, awareness)
punct(awareness, ,)
nsubj(make, that)
acl:relcl(awareness, make)
obj(make, record)
xcomp(make, sound)
case(record, like)
obl(sound, record)
punct(accumulation, .)
det(sound, the)
nsubj(good, sound)
aux(good, may)
cop(good, be)
root(ROOT, good)
punct(good, ;)
punct(good, ;)
cc(know, but)
mark(know, if)
nsubj(know, you)
conj(good, know)
det(Real, the)
root(ROOT, Real)
root(ROOT, thing)
punct(thing, ,)
nsubj(know, you)
parataxis(thing, know)
mark(imitation, that)
obj(hear, what)
nsubj(hear, you)
aux(hear, be)
ccomp(know, hear)
cop(imitation, be)
advmod(imitation, only)
det(imitation, a)
amod(imitation, clever)
ccomp(know, imitation)
punct(know, .)
nmod:poss(Second, Command)
case(Command, 's)
amod(Second, new)
compound(Second, Brahms)
nsubj(effort, Second)
cop(effort, be)
det(effort, a)
amod(effort, major)
root(ROOT, effort)
mark(make, to)
csubj(effort, make)
det(record, a)
obj(make, record)
nsubj(sound, that)
acl:relcl(record, sound)
case(orchestra, like)
det(orchestra, a)
amod(orchestra, real)
obl(sound, orchestra)
cc(copy, rather)
fixed(rather, than)
det(copy, a)
conj(orchestra, copy)
case(one, of)
nmod(copy, one)
punct(effort, .)
case(Scheherazade, like)
det(Scheherazade, the)
amod(Scheherazade, recent)
obl(successful, Scheherazade)
case(London, from)
nmod(Scheherazade, London)
punct(Fidelity, ()
compound(Fidelity, High)
appos(London, Fidelity)
punct(Fidelity, ,)
appos(Fidelity, Sept.)
nummod(Sept., 1961)
punct(Fidelity, ))
punct(successful, ,)
nsubj(successful, it)
cop(successful, be)
root(ROOT, successful)
mark(place, because)
nsubj:pass(place, emphasis)
aux(place, have)
aux:pass(place, be)
advcl(successful, place)
case(practice, on)
amod(practice, good)
compound(practice, musical)
cc(engineering, and)
conj(musical, engineering)
obl(place, practice)
cc(create, rather)
fixed(rather, than)
mark(create, on)
conj(place, create)
amod(effect, sensational)
obj(create, effect)
punct(successful, .)
case(this, because)
fixed(because, of)
obl(able, this)
punct(able, ,)
advmod(those, only)
nsubj(able, those)
case(equipment, with)
advmod(equipment, truly)
amod(equipment, fine)
nmod(those, equipment)
aux(able, will)
cop(able, be)
root(ROOT, able)
mark(appreciate, to)
xcomp(able, appreciate)
det(degree, the)
amod(degree, exact)
obj(appreciate, degree)
case(triumph, of)
det(engineer, the)
nmod:poss(triumph, engineer)
case(engineer, 's)
nmod(degree, triumph)
punct(able, .)
det(way, the)
amod(way, easiest)
nsubj(be, way)
mark(describe, to)
acl(way, describe)
det(release, this)
obj(describe, release)
root(ROOT, be)
mark(say, to)
ccomp(be, say)
mark(reproduce, that)
nsubj(reproduce, it)
ccomp(say, reproduce)
det(performance, a)
amod(performance, interesting)
cc(effective, and)
conj(interesting, effective)
compound(performance, Steinberg)
obj(reproduce, performance)
case(alteration, with)
amod(alteration, minimal)
nmod(performance, alteration)
case(value, of)
nmod:poss(value, its)
amod(value, musical)
nmod(alteration, value)
punct(be, .)
det(engineering, the)
nsubj(obtrude, engineering)
mark(obtrude, as)
nsubj(obtrude, such)
advmod(obtrude, never)
root(ROOT, obtrude)
case(consciousness, upon)
nmod:poss(consciousness, you)
obl(obtrude, consciousness)
punct(engineering, .)
det(effect, the)
nsubj(open, effect)
case(recording, of)
det(recording, the)
nmod(effect, recording)
cop(open, be)
advmod(open, very)
root(ROOT, open)
cc(natural, and)
conj(open, natural)
punct(open, ,)
case(emphasis, with)
det(emphasis, the)
compound(emphasis, frequency)
obl(open, emphasis)
advmod(what, exactly)
obj(expect, what)
nsubj(expect, you)
aux(expect, would)
acl:relcl(emphasis, expect)
case(performance, from)
det(performance, a)
amod(performance, live)
obl(expect, performance)
punct(open, .)
det(absence, this)
nsubj(produce, absence)
case(high, of)
amod(high, peaky)
nmod(absence, high)
cc(bass, and)
amod(bass, beef)
punct(beef, -)
compound:prt(beef, up)
conj(absence, bass)
advmod(only, not)
cc:preconj(produce, only)
root(ROOT, produce)
amod(fidelity, greater)
obj(produce, fidelity)
punct(eliminate, ,)
cc(eliminate, but)
nsubj(eliminate, it)
conj(produce, eliminate)
compound(fatigue, listener)
obj(eliminate, fatigue)
punct(produce, . )
det(factor, a)
compound(factor, contribute)
nsubj(perspective, factor)
cop(perspective, be)
det(perspective, the)
root(ROOT, perspective)
punct(perspective, ,)
det(distance, the)
amod(distance, uniform)
amod(distance, aesthetic)
appos(perspective, distance)
nsubj:pass(maintain, which)
aux:pass(maintain, be)
acl:relcl(distance, maintain)
punct(perspective, .)
det(orchestra, the)
nsubj(away, orchestra)
cop(away, be)
advmod(away, far)
advmod(away, enough)
root(ROOT, away)
case(you, from)
obl(away, you)
mark(miss, that)
nsubj(miss, you)
advcl(away, miss)
det(scrape, the)
compound(scrape, bow)
obj(miss, scrape)
punct(click, ,)
compound(click, valve)
conj(scrape, click)
punct(noise, ,)
cc(noise, and)
amod(noise, other)
conj(scrape, noise)
amod(noise, incidental)
mark(play, to)
advcl(incidental, play)
punct(away, .)
cc(have, yet)
nsubj(feel, you)
root(ROOT, feel)
det(orchestra, the)
nsubj(near, orchestra)
cop(near, be)
ccomp(feel, near)
case(hand, at)
obl(near, hand)
punct(have, ,)
cc(have, and)
det(instrument, the)
amod(instrument, individual)
nsubj(have, instrument)
conj(feel, have)
det(presence, the)
amod(presence, same)
compound(presence, firm)
obj(have, presence)
acl(presence, associate)
mark(listen, with)
advcl(associate, listen)
case(seat, from)
det(seat, a)
amod(seat, good)
obl(listen, seat)
case(hall, in)
det(hall, a)
advmod(perfect, acoustically)
amod(hall, perfect)
nmod(seat, hall)
punct(feel, .)
nsubj(achieve, Command)
aux(achieve, have)
root(ROOT, achieve)
det(amount, the)
amod(amount, ideal)
obj(achieve, amount)
case(reverberation, of)
nmod(amount, reverberation)
punct(achieve, .)
det(music, the)
nsubj:pass(allow, music)
aux:pass(allow, be)
advmod(allow, always)
root(ROOT, allow)
det(space, the)
compound(space, living)
obj(allow, space)
acl(space, need)
mark(attain, to)
xcomp(need, attain)
nmod:poss(sonority, its)
amod(sonority, full)
obj(attain, sonority)
punct(allow, ;)
punct(allow, ;)
cc(intrude, yet)
det(hall, the)
nsubj(intrude, hall)
advmod(intrude, never)
conj(allow, intrude)
case(quasi-performer, as)
det(quasi-performer, a)
obl(intrude, quasi-performer)
punct(allow, .)
det(timbre, the)
nsubj(remain, timbre)
root(ROOT, remain)
mark(instrument, that)
case(instrument, of)
det(instrument, the)
obl(remain, instrument)
acl(instrument, unclouded)
case(resonance, by)
obl(unclouded, resonance)
punct(remain, .)
nsubj:pass(waste, all)
case(this, of)
nmod(all, this)
aux(waste, would)
aux:pass(waste, be)
root(ROOT, waste)
punct(waste, ,)
advmod(lack, of)
fixed(of, course)
punct(waste, ,)
mark(lack, if)
det(performance, the)
nsubj(lack, performance)
advcl(waste, lack)
obj(lack, authority)
cc(distinction, and)
amod(distinction, musical)
conj(authority, distinction)
punct(waste, .)
case(I, for)
obl(have, I)
nsubj(have, it)
root(ROOT, have)
obj(have, more)
case(element, of)
det(element, both)
obl(more, element)
case(majority, than)
det(majority, the)
nmod(element, majority)
case(competitor, of)
nmod:poss(competitor, its)
nmod(majority, competitor)
punct(have, .)
nsubj(seem, Steinberg)
root(ROOT, seem)
mark(go, to)
aux(go, have)
xcomp(seem, go)
advmod(back, directly)
advmod(go, back)
case(score, to)
det(score, the)
obl(back, score)
punct(discounting, ,)
conj(go, discounting)
obj(discounting, tradition)
punct(build, ,)
cc(build, and)
aux(build, have)
conj(seem, build)
nmod:poss(performance, he)
obj(build, performance)
case(intention, on)
det(intention, the)
obl(build, intention)
mark(reproduce, to)
acl(intention, reproduce)
advmod(faithfully, as)
advmod(reproduce, faithfully)
mark(possible, as)
advcl(as, possible)
advmod(what, exactly)
obj(set, what)
nsubj(set, Brahms)
ccomp(possible, set)
compound:prt(set, down)
case(paper, on)
obl(set, paper)
punct(seem, .)
nsubj:pass(expect, those)
amod(those, accustom)
case(broader, to)
amod(statement, broader)
punct(statement, ,)
advmod(romantic, more)
amod(statement, romantic)
obl(accustom, statement)
case(symphony, of)
det(symphony, the)
nmod(statement, symphony)
aux(expect, can)
aux:pass(expect, be)
root(ROOT, expect)
mark(react, to)
xcomp(expect, react)
advmod(react, strongly)
mark(hear, when)
nsubj(hear, they)
advcl(react, hear)
det(one, this)
obj(hear, one)
punct(expect, .)
mark(lose, without)
advcl(firm, lose)
det(undertow, the)
amod(undertow, distinctive)
obj(lose, undertow)
case(rhythm, of)
compound(rhythm, brahmsian)
nmod(undertow, rhythm)
punct(firm, ,)
det(pace, the)
nsubj(firm, pace)
cop(firm, be)
root(ROOT, firm)
cc(over, and)
mark(over, the)
conj(firm, over)
punct(firm, -)
det(performance, all)
nsubj(have, performance)
parataxis(firm, have)
det(quality, a)
advmod(knit, tightly)
compound(quality, knit)
obj(have, quality)
nsubj(make, that)
acl:relcl(quality, make)
case(effect, for)
amod(effect, maximum)
amod(effect, cumulative)
obl(make, effect)
punct(firm, .)
det(assai, the)
compound(assai, Presto)
compound(assai, ma)
compound(assai, non)
nsubj:pass(take, assai)
case(trio, of)
det(trio, the)
amod(trio, first)
nmod(assai, trio)
case(scherzo, of)
det(scherzo, the)
nmod(trio, scherzo)
aux:pass(take, be)
root(ROOT, take)
advmod(take, literally)
cc(shock, and)
aux(shock, may)
conj(take, shock)
obj(shock, you)
punct(shock, ,)
mark(likely, as)
det(con, the)
amod(con, real)
compound(con, Allegro)
nsubj(likely, con)
nsubj(likely, Spirito)
case(finale, of)
det(finale, the)
nmod(Spirito, finale)
cop(likely, be)
advcl(shock, likely)
mark(bring, to)
xcomp(likely, bring)
obj(bring, you)
case(foot, to)
nmod:poss(foot, you)
obl(bring, foot)
punct(take, .)
case(end, in)
det(end, the)
obl(way, end)
punct(way, ,)
advmod(way, however)
punct(way, ,)
det(thing, the)
nsubj(way, thing)
case(performance, about)
det(performance, this)
nmod(thing, performance)
nsubj(strike, that)
aux(strike, be)
advmod(strike, most)
acl:relcl(performance, strike)
cop(way, be)
det(way, the)
root(ROOT, way)
nsubj(sing, it)
acl:relcl(way, sing)
punct(way, .)
nsubj(conclude, Steinberg)
advmod(conclude, obviously)
aux(conclude, have)
root(ROOT, conclude)
mark(element, that)
nsubj(element, it)
cop(element, be)
det(element, the)
compound(element, lyric)
ccomp(conclude, element)
nsubj(dominate, which)
aux(dominate, must)
acl:relcl(element, dominate)
case(score, in)
det(score, this)
obl(dominate, score)
punct(manage, ,)
cc(manage, and)
nsubj(manage, he)
conj(conclude, manage)
case(time, at)
obl(manage, time)
mark(create, to)
advcl(manage, create)
det(effect, the)
obj(create, effect)
case(orchestra, of)
det(orchestra, the)
amod(orchestra, whole)
nmod(effect, orchestra)
acl(orchestra, burst)
case(song, into)
obl(burst, song)
punct(conclude, .)
det(engineering, the)
nsubj(provide, engineering)
root(ROOT, provide)
advmod(support, exactly)
det(support, the)
obj(provide, support)
acl(support, need)
case(result, for)
det:predet(result, such)
det(result, a)
obl(need, result)
punct(provide, .)
advmod(many, too)
amod(record, many)
nsubj(seem, record)
parataxis(provide, seem)
mark(reduce, to)
xcomp(seem, reduce)
det(work, a)
obj(reduce, work)
case(complexity, of)
amod(complexity, symphonic)
nmod(work, complexity)
case(melody, to)
det(melody, a)
obl(reduce, melody)
cc(accompaniment, and)
nmod:poss(accompaniment, its)
conj(melody, accompaniment)
punct(provide, .)
det(technique, the)
compound(technique, Command)
nsubj(invite, technique)
root(ROOT, invite)
obj(invite, you)
mark(listen, to)
xcomp(invite, listen)
case(depth, to)
det(depth, the)
obl(listen, depth)
case(orchestration, of)
det(orchestration, the)
nmod(depth, orchestration)
punct(invite, .)
nmod:poss(ear, you)
nsubj(take, ear)
root(ROOT, take)
obj(take, you)
case(ensemble, into)
det(ensemble, the)
obl(take, ensemble)
punct(become, ,)
cc(become, and)
nsubj(become, you)
aux(become, may)
advmod(become, well)
conj(take, become)
xcomp(become, aware)
case(detail, of)
amod(detail, instrumental)
obl(aware, detail)
nsubj(apparent, which)
advmod(apparent, previously)
cop(apparent, be)
acl:relcl(detail, apparent)
advmod(score, only)
case(score, in)
det(score, the)
obl(apparent, score)
punct(take, .)
nsubj(sort, it)
cop(sort, be)
det(sort, this)
root(ROOT, sort)
case(experience, of)
nmod(sort, experience)
nsubj(make, that)
acl:relcl(experience, make)
det(concept, the)
obj(make, concept)
case(fidelity, of)
amod(fidelity, high)
nmod(concept, fidelity)
case(significance, of)
amod(significance, real)
amod(significance, musical)
nmod(fidelity, significance)
case(listener, for)
det(listener, the)
compound(listener, home)
compound(listener, music)
nmod(significance, listener)
punct(sort, .)
det(stereo, the)
amod(stereo, first)
advmod(complete, substantially)
amod(stereo, complete)
nsubj(afraid, stereo)
appos(stereo, Giselle)
punct(Giselle, ()
cc(one, and)
det(one, the)
amod(one, only)
conj(stereo, one)
case(scope, of)
nmod:poss(scope, its)
nmod(one, scope)
case(edition, since)
nmod:poss(edition, Feyer)
case(Feyer, 's)
compound(sided, four)
punct(sided, -)
amod(edition, sided)
compound(edition, lp)
nmod(one, edition)
case(1958, of)
nmod(edition, 1958)
case(angel, for)
nmod(1958, angel)
punct(edition, ))
punct(be, ,)
det(set, this)
nsubj(be, set)
cop(afraid, be)
punct(afraid, ,)
nsubj(afraid, I)
cop(afraid, be)
root(ROOT, afraid)
punct(afraid, ,)
xcomp(afraid, likely)
mark(provide, to)
xcomp(likely, provide)
advmod(horrid, more)
amod(fascination, horrid)
obj(provide, fascination)
case(enjoyment, than)
nmod(fascination, enjoyment)
punct(afraid, .)
det(charm, the)
advmod(fad, already)
amod(charm, fad)
amod(charm, pastel)
nsubj(vanish, charm)
case(music, of)
det(music, the)
amod(music, naive)
nmod(charm, music)
nmod:npmod(music, itself)
root(ROOT, vanish)
advmod(contrast, entirely)
case(contrast, in)
nmod:poss(contrast, Fistoulari)
case(Fistoulari, 's)
amod(contrast, melodramatic)
obl(vanish, contrast)
case(power, between)
amod(power, ultravehement)
compound(power, brute)
nmod(contrast, power)
cc(chilly, and)
conj(power, chilly)
punct(vanish, ,)
mark(suave, if)
amod(sentimentality, suave)
punct(sentimentality, ,)
conj(power, sentimentality)
punct(vanish, .)
cc(sound, and)
case(attempt, in)
nmod:poss(engineer, its)
nmod:poss(attempt, engineer)
case(engineer, 's)
amod(attempt, frantic)
obl(sound, attempt)
mark(achieve, to)
acl(attempt, achieve)
amod(impact, maximum)
amod(impact, dynamic)
obj(achieve, impact)
cc(brilliance, and)
compound(brilliance, earsplit)
conj(impact, brilliance)
punct(sound, ,)
det(recording, the)
nsubj(sound, recording)
root(ROOT, sound)
mark(doctore, as)
mark(doctore, though)
nsubj:pass(doctore, it)
aux(doctore, have)
aux:pass(doctore, be)
punct(doctore, ``)
advcl(sound, doctore)
case(fidelity, for)
advmod(high, super)
punct(high, -)
amod(fidelity, high)
obl(doctore, fidelity)
punct(doctore, '')
punct(overpower, .)
det(listener, the)
compound(listener, home)
nsubj(overpower, listener)
cop(overpower, be)
ccomp(sound, overpower)
punct(right, ,)
advmod(right, all)
conj(overpower, right)
punct(far, ,)
cc(far, but)
det(experience, the)
nsubj(far, experience)
cop(far, be)
det(far, a)
advmod(one, far)
case(one, from)
amod(one, pleasant)
conj(overpower, one)
punct(sound, .)
case(release, as)
case(release, with)
det(release, the)
amod(release, penultimate)
compound(release, Giselle)
obl(find, release)
punct(abridgment, ()
nmod:poss(abridgment, Wolff)
case(Wolff, 's)
appos(release, abridgment)
case(RCA, for)
nmod(abridgment, RCA)
nmod(abridgment, Victor)
punct(abridgment, ))
nsubj(find, I)
root(ROOT, find)
det(version, the)
amod(version, cleaner)
punct(version, ,)
advmod(edg, less)
amod(edg, razor)
punct(edg, -)
amod(version, edg)
amod(version, monophonic)
obj(find, version)
punct(version, ,)
case(lack, for)
det:predet(lack, all)
nmod:poss(lack, its)
nmod(version, lack)
case(spaciousness, of)
amod(stage, big)
punct(stage, -)
compound(spaciousness, stage)
nmod(lack, spaciousness)
punct(spaciousness, ,)
mark(tolerable, the)
advmod(aurally, more)
advmod(tolerable, aurally)
amod(spaciousness, tolerable)
punct(tolerable, --)
cc(result, but)
nsubj(result, this)
aux(result, may)
cop(result, be)
det(result, the)
conj(tolerable, result)
mark(process, of)
acl(result, process)
obj(process, defect)
case(copy, in)
nmod:poss(copy, my)
compound(copy, SD)
obl(process, copy)
punct(find, .)
case(show, at)
det(show, the)
compound(show, Westminster)
compound(Dog, KC)
compound(show, Dog)
obl(bring, show)
case(Garden, in)
compound(Garden, Madison)
compound(Garden, Square)
nmod(show, Garden)
punct(Garden, ,)
compound(York, New)
appos(Garden, York)
case(day, on)
det(day, the)
amod(day, second)
nmod(Garden, day)
punct(bring, ,)
det(Finals, the)
nsubj(bring, Finals)
case(Class, of)
det(Class, the)
compound(Class, Junior)
nmod(Finals, Class)
root(ROOT, bring)
compound:prt(bring, out)
det(competition, the)
advmod(competitive, most)
amod(competition, competitive)
obj(bring, competition)
case(history, in)
det(history, the)
nmod(competition, history)
case(Class, of)
det(Class, this)
nmod(history, Class)
punct(bring, .)
det(Class, the)
nsubj(have, Class)
root(ROOT, have)
obj(have, entry)
case(west, from)
advmod(far, as)
advmod(west, far)
advmod(have, west)
case(Wisconsin, as)
obl(west, Wisconsin)
cc(south, and)
advmod(far, as)
advmod(south, far)
conj(have, south)
case(Kentucky, as)
obl(south, Kentucky)
punct(have, .)
det(year, this)
obl:tmod(enter, year)
amod(entry, several)
nsubj:pass(enter, entry)
case(Canada, from)
nmod(entry, Canada)
aux:pass(enter, be)
root(ROOT, enter)
nsubj(make, which)
ccomp(enter, make)
det(International, the)
compound(International, Junior)
compound(International, Class)
obj(make, International)
punct(International, .)
nummod(six, Forty)
punct(six, -)
appos(International, six)
case(Juniors, of)
det(Juniors, the)
nummod(Juniors, 53)
nmod(six, Juniors)
nsubj(mail, who)
acl:relcl(Juniors, mail)
case(entry, in)
obl(mail, entry)
cop(present, be)
conj(enter, present)
punct(enter, .)
expl(interesting, it)
cop(interesting, be)
root(ROOT, interesting)
mark(note, to)
csubj(interesting, note)
mark(show, that)
nsubj(show, many)
case(Juniors, of)
det(Juniors, these)
nmod(many, Juniors)
aux(show, be)
ccomp(note, show)
obj(show, dog)
case(class, in)
amod(class, various)
amod(class, other)
obl(show, class)
case(show, at)
det(show, the)
obl(show, show)
case(Finals, prior)
fixed(prior, to)
det(Finals, the)
obl(show, Finals)
case(Class, of)
det(Class, the)
compound(Class, Junior)
nmod(Finals, Class)
punct(interesting, .)
mark(custom, as)
aux(custom, have)
cop(custom, be)
det(custom, the)
advcl(arrange, custom)
case(year, for)
det(year, the)
amod(year, past)
amod(year, several)
nmod(custom, year)
punct(John, ,)
nsubj(attend, John)
flat(John, Cross)
punct(John, ,)
flat(John, Jr.)
punct(John, ,)
compound(show, Bench)
appos(John, show)
appos(John, Chmn.)
case(Westminster, of)
nmod(Chmn., Westminster)
punct(John, ,)
acl(John, arrange)
case(meeting, for)
det(Juniors, the)
nmod:poss(meeting, Juniors)
case(Juniors, 's)
obl(arrange, meeting)
case(Class, before)
det(Class, the)
nmod(meeting, Class)
punct(invite, ,)
cc(invite, and)
conj(arrange, invite)
nummod(speaker, two)
obj(invite, speaker)
case(world, from)
det(world, the)
compound(world, dog)
nmod(speaker, world)
mark(address, to)
advcl(invite, address)
obj(address, they)
punct(Juniors, .)
advmod(60, over)
nummod(Juniors, 60)
nsubj(attend, Juniors)
punct(parent, ,)
conj(Juniors, parent)
cc(guest, and)
conj(Juniors, guest)
root(ROOT, attend)
punct(attend, .)
nsubj(speak, Mrs.)
flat(Mrs., William)
flat(Mrs., H.)
flat(Mrs., Long)
punct(speak, ,)
nsubj(speak, Jr.)
advcl(introduce, speak)
mark(welcome, after)
det(Juniors, the)
nsubj:pass(welcome, Juniors)
aux:pass(welcome, be)
advcl(speak, welcome)
cc(congratulate, and)
conj(welcome, congratulate)
case(qualify, for)
obl(congratulate, qualify)
case(Finals, for)
det(Finals, the)
nmod(qualify, Finals)
case(Class, of)
det(Class, the)
compound(Class, Junior)
nmod(Finals, Class)
punct(Mrs., ,)
appos(Class, Mrs.)
flat(Mrs., William)
flat(William, H.)
flat(William, Long)
punct(introduce, ,)
nsubj:pass(introduce, Jr.)
aux:pass(introduce, be)
root(ROOT, introduce)
case(speaker, as)
det(speaker, the)
amod(speaker, first)
obl(introduce, speaker)
punct(introduce, .)
case(remark, in)
nmod:poss(remark, she)
amod(remark, open)
obl(welcome, remark)
nsubj(welcome, Mrs.)
nsubj(welcome, Long)
advmod(welcome, also)
root(ROOT, welcome)
det(Juniors, the)
obj(welcome, Juniors)
cc(state, and)
conj(welcome, state)
punct(welcome, ,)
punct(welcome, ``)
expl(be, there)
root(ROOT, be)
advmod(be, not)
det(show, any)
amod(show, other)
nsubj(be, show)
advmod(Westminster, quite)
case(Westminster, like)
nmod(show, Westminster)
punct(be, . )
nsubj(know, I)
root(ROOT, know)
mark(year, because)
nsubj(year, this)
cop(year, be)
nmod:poss(year, my)
amod(year, 37th)
advcl(know, year)
case(break, with)
advmod(break, hardly)
det(break, a)
nmod(year, break)
punct(know, .)
parataxis(know, Mrs.)
advmod(feel, long)
advmod(feel, still)
root(ROOT, feel)
det(spirit, the)
amod(spirit, same)
amod(spirit, unique)
obj(feel, spirit)
case(Westminster, of)
nmod(spirit, Westminster)
obj(state, which)
nsubj(state, she)
acl:relcl(spirit, state)
det(Juniors, the)
amod(Juniors, present)
nsubj(experience, Juniors)
aux(experience, will)
ccomp(state, experience)
obl:tmod(experience, today)
cc(appreciate, but)
advmod(appreciate, probably)
aux(appreciate, will)
advmod(appreciate, not)
conj(feel, appreciate)
case(full, in)
obl(appreciate, full)
case(number, for)
det(number, a)
obl(appreciate, number)
case(year, of)
nmod(number, year)
punct(feel, .)
nummod(year, twenty)
obl:npmod(ago, year)
advmod(win, ago)
nmod:poss(daughter, she)
nsubj(win, daughter)
compound(Long, Betsey)
nsubj(win, Long)
punct(Long, ,)
advmod(year, then)
nummod(year, 13)
appos(Long, year)
case(age, of)
nmod(year, age)
punct(win, ,)
root(ROOT, win)
det(Trophy, the)
compound(Challenge, Grand)
compound(Trophy, Challenge)
obj(win, Trophy)
punct(Trophy, ,)
nmod:poss(Class, Children)
case(Children, 's)
compound(Class, handle)
appos(Trophy, Class)
punct(call, ()
mark(call, as)
nsubj:pass(call, they)
aux:pass(call, be)
advcl(win, call)
advmod(call, then)
punct(call, ))
case(Westminster, at)
obl(call, Westminster)
punct(win, .)
advmod(sooner, no)
advmod(have, sooner)
root(ROOT, have)
nsubj(come, Betsey)
xcomp(have, come)
case(ring, out)
case(ring, of)
det(ring, the)
obl(come, ring)
mark(walk, than)
nsubj(walk, Mrs.)
flat(Mrs., Long)
advcl(come, walk)
case(competition, into)
det(competition, the)
amod(competition, work)
obl(walk, competition)
case(Cadet, with)
compound(Cadet, Ch.)
nmod(competition, Cadet)
cc(Noranda, or)
conj(Cadet, Noranda)
punct(product, ,)
det(product, another)
obl:npmod(breed, home)
punct(breed, -)
amod(product, breed)
appos(Cadet, product)
punct(win, ,)
cc(win, and)
conj(walk, win)
punct(have, !)
punct(have, !)
advcl(advise, speak)
case(year, from)
amod(year, long)
obl(speak, year)
case(experience, of)
nmod(year, experience)
punct(advise, ,)
nsubj(advise, Mrs.)
flat(Mrs., Long)
root(ROOT, advise)
det(Juniors, the)
obj(advise, Juniors)
punct(advise, :)
punct(advise, ``)
mark(show, when)
advcl(stop, show)
obj(show, dog)
advcl(stop, cease)
mark(fun, to)
cop(fun, be)
xcomp(cease, fun)
cc(excitement, and)
conj(fun, excitement)
punct(stop, ,)
root(ROOT, stop)
punct(stop, !)
punct(stop, !)
nsubj(have, dog)
root(ROOT, have)
det(way, a)
obj(have, way)
mark(sense, of)
acl(way, sense)
nmod:poss(feeling, we)
obj(sense, feeling)
punct(have, !)
punct(have, !)
mark(step, when)
nsubj(step, you)
cc(dog, and)
nmod:poss(dog, you)
conj(you, dog)
advcl(be, step)
case(ring, into)
det(ring, the)
compound(ring, Junior)
obl(step, ring)
punct(be, ,)
nsubj(be, it)
aux(be, should)
root(ROOT, be)
advmod(what, just)
ccomp(be, what)
det(dog, the)
nsubj(want, dog)
acl:relcl(what, want)
mark(do, to)
xcomp(want, do)
advmod(much, as)
obj(do, much)
mark(want, as)
obl(much, what)
nsubj(want, you)
acl:relcl(what, want)
obj(want, he)
mark(do, to)
xcomp(want, do)
punct(be, .)
mark(walk, if)
nsubj(walk, you)
advcl(feel, walk)
case(ring, into)
det(ring, the)
obl(walk, ring)
mark(fun, because)
expl(fun, it)
cop(fun, be)
advcl(walk, fun)
mark(show, to)
csubj(fun, show)
nmod:poss(dog, you)
obj(show, dog)
punct(feel, ,)
nsubj(feel, he)
aux(feel, will)
root(ROOT, feel)
obj(feel, it)
cc(give, and)
conj(feel, give)
iobj(give, you)
det(performance, a)
amod(performance, good)
obj(give, performance)
punct(feel, !)
punct(feel, !)
nsubj(know, he)
root(ROOT, know)
nmod:poss(signal, you)
obj(know, signal)
punct(signal, ,)
nsubj:pass(expect, what)
aux:pass(expect, be)
acl:relcl(signal, expect)
case(he, of)
obl(expect, he)
cc(way, and)
det(way, the)
conj(signal, way)
det(Class, the)
nsubj:pass(conduct, Class)
aux:pass(conduct, be)
acl:relcl(way, conduct)
punct(conduct, ,)
advmod(up, right)
advmod(conduct, up)
case(bulb, through)
det(bulb, the)
compound(bulb, flash)
punct(bulb, -)
obl(up, bulb)
case(photographer, of)
det(photographer, the)
nmod(bulb, photographer)
punct(bulb, '')
punct(essential, .)
amod(attitude, right)
nsubj(essential, attitude)
parataxis(bulb, essential)
punct(know, !)
punct(know, !)
punct(know, ``)
root(ROOT, take)
compound:prt(take, away)
nmod:poss(attitude, you)
obj(take, attitude)
punct(take, '')
punct(say, ,)
parataxis(take, say)
nsubj(say, Mrs.)
flat(Mrs., Long)
punct(say, ,)
punct(say, ``)
cc(leave, and)
obj(leave, what)
aux(leave, have)
nsubj(leave, you)
conj(take, leave)
punct(take, ?)
punct(take, ?)
cc:preconj(dog, either)
det(dog, a)
amod(dog, nervous)
root(ROOT, dog)
mark(livid, because)
nsubj(livid, you)
cop(livid, be)
advcl(dog, livid)
case(rage, with)
obl(livid, rage)
punct(dog, --)
det(sign, a)
amod(sign, sure)
parataxis(dog, sign)
mark(take, that)
nsubj(take, you)
aux(take, be)
acl(sign, take)
obj(take, thing)
advmod(seriously, too)
advmod(take, seriously)
cc(have, and)
conj(take, have)
amod(stop, better)
obj(have, stop)
punct(sign, !)
punct(sign, !)
cc(dog, or)
det(dog, a)
amod(dog, bored)
root(ROOT, dog)
mark(interested, because)
nsubj(interested, you)
cop(interested, be)
advmod(interested, more)
advcl(dog, interested)
case(something, in)
obl(interested, something)
amod(something, else)
punct(dog, --)
advmod(way, maybe)
det(way, the)
appos(dog, way)
nsubj(look, you)
acl:relcl(way, look)
punct(date, ,)
cc(date, or)
det(date, the)
conj(way, date)
nsubj(have, you)
acl:relcl(date, have)
case(Class, after)
det(Class, the)
obl(have, Class)
punct(do, ,)
cc(do, or)
nsubj(do, you)
aux(do, be)
advmod(do, just)
conj(have, do)
obj(do, this)
case(parent, to)
discourse(do, please)
det(parent, the)
obl(do, parent)
punct(dog, .)
punct(dog, ``)
det(reason, the)
nsubj(be, reason)
nsubj(ring, you)
cop(ring, be)
case(ring, in)
det(ring, the)
acl:relcl(reason, ring)
obl:tmod(ring, today)
root(ROOT, be)
mark(show, to)
ccomp(be, show)
nmod:poss(ability, you)
obj(show, ability)
mark(present, to)
acl(ability, present)
case(judge, to)
det(judge, any)
obl(present, judge)
det(picture, the)
advmod(attractive, most)
amod(picture, attractive)
obj(present, picture)
case(dog, of)
nmod:poss(dog, you)
nmod(picture, dog)
mark(produce, that)
det(use, the)
amod(use, skillful)
nsubj(produce, use)
case(aid, of)
nmod:poss(aid, you)
nmod(use, aid)
aux(produce, can)
acl:relcl(picture, produce)
punct(be, .)
nsubj(sound, aids)
root(ROOT, sound)
advmod(sound, more)
case(club, like)
det(club, a)
compound(club, Pony)
obl(sound, club)
punct(class, ,)
cc(class, or)
compound(class, horsemanship)
conj(club, class)
punct(sound, --)
advcl(sound, ride)
det(horse, a)
obj(ride, horse)
cc(similar, and)
conj(ride, show)
det(dog, a)
obj(show, dog)
cop(similar, be)
advmod(similar, very)
conj(sound, similar)
punct(sound, !)
punct(sound, !)
punct(sound, ``)
nmod:poss(aid, you)
nsubj(attitude, aid)
cop(attitude, be)
nmod:poss(attitude, you)
root(ROOT, attitude)
punct(attitude, ,)
nsubj(come, which)
acl:relcl(attitude, come)
case(voice, through)
nmod:poss(voice, you)
obl(come, voice)
punct(hand, ,)
nmod:poss(hand, you)
conj(voice, hand)
cc(leg, and)
conj(voice, leg)
punct(attitude, --)
parataxis(attitude, voice)
mark(encourage, to)
acl(voice, encourage)
punct(discourage, ,)
conj(encourage, discourage)
cc(whatever, or)
conj(encourage, whatever)
det(need, the)
nsubj(whatever, need)
aux(be, may)
cop(whatever, be)
punct(whatever, ;)
punct(whatever, ;)
appos(whatever, hand)
mark(guide, to)
acl(hand, guide)
cc(restrain, or)
conj(guide, restrain)
punct(guide, ;)
punct(leg, ;)
nsubj(produce, leg)
mark(produce, to)
conj(guide, produce)
obj(produce, motion)
cc(rate, and)
conj(motion, rate)
case(speed, of)
nmod(motion, speed)
punct(attitude, .)
case(attitude, without)
amod(attitude, right)
obl(wish, attitude)
det(aid, the)
amod(aid, other)
nsubj(work, aid)
advmod(work, just)
aux(work, do)
advmod(work, not)
parataxis(wish, work)
advmod(work, right)
punct(work, '')
punct(wish, .)
nsubj(wish, Mrs.)
flat(Mrs., Long)
root(ROOT, wish)
det:predet(luck, all)
det(luck, the)
compound(luck, Juniors)
obj(wish, luck)
case(Class, in)
det(Class, the)
nmod(luck, Class)
cc(state, and)
conj(wish, state)
punct(wish, ,)
punct(wish, ``)
root(ROOT, have)
obj(have, fun)
punct(have, !)
punct(have, !)
cc(continue, and)
aux(continue, may)
nsubj(continue, you)
det(you, all)
root(ROOT, continue)
mark(show, to)
xcomp(continue, show)
case(Westminster, at)
obl(show, Westminster)
case(year, in)
det(year, the)
obl(show, year)
mark(come, to)
advcl(show, come)
punct(continue, '')
punct(continue, !)
punct(continue, !)
nsubj(Harvey, Harvey)
flat(Harvey, Barcus)
punct(Harvey, ,)
amod(speaker, second)
appos(Harvey, speaker)
det(speaker, the)
amod(speaker, second)
appos(speaker, speaker)
cop(Harvey, be)
root(ROOT, Harvey)
flat(Harvey, Barcus)
punct(Harvey, ,)
appos(Harvey, President)
case(Writers, of)
det(Writers, the)
compound(Writers, Dog)
compound(Ass'n, Writers)
nmod(President, Ass'n)
case(America, of)
nmod(Ass'n, America)
punct(Harvey, .)
nsubj(speak, Mr.)
flat(Mr., Barcus)
parataxis(Harvey, speak)
case(subject, on)
det(subject, the)
obl(speak, subject)
case(scholarship, of)
nmod(subject, scholarship)
case(Juniors, for)
nmod(scholarship, Juniors)
punct(subject, --)
case(which, with)
obl(familiar, which)
nsubj(familiar, he)
cop(familiar, be)
advmod(familiar, very)
acl:relcl(boy, familiar)
punct(familiar, .)
amod(year, last)
obl:tmod(familiar, year)
det(boy, a)
nsubj(win, boy)
nsubj(know, he)
acl:relcl(boy, know)
cc(help, and)
conj(know, help)
case(Journalism, in)
obl(help, Journalism)
conj(speak, win)
det(scholarship, the)
compound(scholarship, Thoroughbred)
compound(scholarship, racing)
compound(scholarship, Ass'n)
obj(win, scholarship)
nsubj(worth, which)
cop(worth, be)
acl:relcl(scholarship, worth)
obj(worth, $)
compound($, 10,000)
punct(Harvey, .)
nsubj(give, he)
root(ROOT, give)
det(resume, a)
obj(give, resume)
case(step, of)
det(step, the)
nmod(resume, step)
acl(step, take)
case(boy, in)
fixed(in, order)
case(boy, for)
det(boy, the)
obl(take, boy)
nsubj(sponsor, he)
acl:relcl(boy, sponsor)
mark(win, to)
advcl(sponsor, win)
det(scholarship, the)
obj(win, scholarship)
punct(give, .)
punct(give, ``)
compound(showmanship, Junior)
nsubj(project, showmanship)
cop(project, be)
det(project, a)
advmod(worthy, extremely)
amod(project, worthy)
root(ROOT, project)
cc(encourage, and)
aux(encourage, should)
aux:pass(encourage, be)
advmod(encourage, earnestly)
conj(project, encourage)
punct(encourage, '')
punct(project, !)
punct(project, !)
cop(one, be)
root(ROOT, one)
case(belief, of)
nmod:poss(belief, Mr.)
flat(Mr., Barcus)
case(Mr., 's)
amod(belief, strong)
nmod(one, belief)
punct(one, .)
nsubj(feel, he)
root(ROOT, feel)
advmod(forcibly, very)
advmod(feel, forcibly)
mark(take, that)
det(Club, the)
compound(Club, American)
compound(Club, Kennel)
nsubj(take, Club)
aux(take, should)
ccomp(feel, take)
det(part, a)
advmod(active, more)
amod(part, active)
obj(take, part)
mark(encourage, in)
acl(part, encourage)
det(division, the)
compound(division, Junior)
obj(encourage, division)
punct(feel, !)
punct(feel, !)
case(closing, in)
obl(wish, closing)
punct(wish, ,)
nsubj(wish, Mr.)
flat(Mr., Barcus)
advmod(wish, also)
root(ROOT, wish)
det:predet(luck, all)
det(luck, the)
compound(luck, Juniors)
obj(wish, luck)
case(Class, in)
nmod:poss(Class, they)
nmod(luck, Class)
punct(luck, .)
compound(Notes, Westminster)
compound(Notes, show)
appos(luck, Notes)
case(a.m., instead)
fixed(instead, of)
nummod(a.m., 3)
obl(wish, a.m.)
case(past, in)
det(past, the)
nmod(a.m., past)
punct(hold, ,)
det(Class, the)
compound(Class, Juniors)
nsubj:pass(hold, Class)
case(Westminster, at)
nmod(Class, Westminster)
aux:pass(hold, be)
parataxis(wish, hold)
case(p.m, at)
nummod(p.m, 4:45)
obl(hold, p.m)
punct(hold, .)
punct(hold, .)
nsubj(give, this)
root(ROOT, give)
det(Juniors, the)
iobj(give, Juniors)
det(use, the)
obj(give, use)
case(ring, of)
det(ring, the)
amod(ring, entire)
nmod(use, ring)
case(show, at)
det(show, the)
obl(give, show)
punct(advantage, --)
det(advantage, a)
amod(advantage, great)
parataxis(give, advantage)
case(they, to)
nmod(advantage, they)
punct(give, !)
punct(give, !)
mark(enter, before)
det(Juniors, the)
nsubj(enter, Juniors)
advcl(announce, enter)
det(ring, the)
obj(enter, ring)
det(Steward, the)
nsubj(announce, Steward)
root(ROOT, announce)
mark(relax, that)
mark(move, after)
det(Juniors, all)
nsubj(move, Juniors)
aux(move, have)
advcl(relax, move)
nmod:poss(dog, they)
obj(move, dog)
case(ring, around)
det(ring, the)
obl(move, ring)
cc(set, and)
conj(move, set)
obj(set, they)
compound:prt(set, up)
punct(relax, ,)
nsubj(relax, they)
aux(relax, could)
ccomp(announce, relax)
case(dog, with)
nmod:poss(dog, they)
obl(relax, dog)
punct(announce, .)
case(there, from)
obl(go, there)
advmod(go, on)
punct(go, ,)
det(Junior, each)
nsubj(go, Junior)
aux(go, be)
root(ROOT, go)
mark(judge, to)
aux:pass(judge, be)
xcomp(go, judge)
advmod(judge, individually)
punct(go, .)
det(gesture, this)
amod(gesture, thoughtful)
nsubj:pass(receive, gesture)
aux:pass(receive, be)
advmod(receive, well)
root(ROOT, receive)
case(Juniors, by)
det(Juniors, the)
obl(receive, Juniors)
mark(have, as)
det(Class, the)
nsubj(have, Class)
advcl(receive, have)
det(entry, a)
obj(have, entry)
case(Juniors, of)
nummod(Juniors, 46)
nmod(entry, Juniors)
cc(take, and)
nsubj(take, it)
conj(receive, take)
advmod(one, approximately)
nummod(hour, one)
obj(take, hour)
punct(take, ,)
nummod(minute, 45)
obl:tmod(take, minute)
mark(judge, to)
advcl(take, judge)
det(Class, the)
obj(judge, Class)
punct(receive, .)
nsubj(judge, Anne)
flat(Anne, Hone)
flat(Anne, Rogers)
root(ROOT, judge)
amod(final, 28th)
obj(judge, final)
det(year, this)
obl:tmod(judge, year)
nsubj(judge, Anne)
flat(Anne, Hone)
flat(Anne, Rogers)
punct(Handler, ,)
amod(Handler, outstanding)
appos(Anne, Handler)
punct(judge, ,)
conj(judge, judge)
det(Class, the)
obj(judge, Class)
punct(judge, .)
nsubj(time, this)
cop(time, be)
det(time, the)
amod(time, third)
root(ROOT, time)
case(year, in)
nummod(year, 28)
nmod(time, year)
case(showmanship, of)
compound(showmanship, Junior)
nmod(year, showmanship)
case(Westminster, at)
nmod(time, Westminster)
mark(judge, that)
det(lady, a)
nsubj(judge, lady)
nsubj(judge, Handler)
aux(judge, have)
acl:relcl(time, judge)
det(Class, the)
obj(judge, Class)
punct(time, .)
mark(enter, as)
det(Juniors, the)
nsubj(enter, Juniors)
advcl(state, enter)
det(ring, the)
obj(enter, ring)
punct(state, ,)
nsubj(state, Mr.)
flat(Mr., Spring)
punct(Mr., ,)
det(announcer, the)
appos(Mr., announcer)
punct(state, ,)
root(ROOT, state)
case(system, over)
det(system, the)
amod(address, public)
punct(address, -)
compound(system, address)
obl(state, system)
mark(year, that)
nsubj(year, this)
cop(year, be)
det(year, the)
amod(year, 28th)
acl:relcl(system, year)
obj(hold, that)
nsubj(hold, Westminster)
aux(hold, have)
acl:relcl(year, hold)
det(Finals, the)
obj(hold, Finals)
case(competition, of)
det(competition, the)
compound(competition, Junior)
nmod(Finals, competition)
punct(compete, .)
nsubj(compete, Juniors)
ccomp(state, compete)
amod(year, last)
obl:tmod(compete, year)
case(Club, at)
compound(Club, American)
compound(Club, Kennel)
obl(compete, Club)
cc(Club, and)
compound(Club, Canadian)
compound(Club, Kennel)
conj(Club, Club)
punct(show, ,)
amod(show, recognize)
conj(Club, show)
mark(eligible, to)
cop(eligible, be)
acl(show, eligible)
mark(compete, to)
advcl(eligible, compete)
case(Class, in)
det(Class, this)
obl(compete, Class)
punct(Finals, --)
det(Finals, the)
obj(compete, Finals)
case(year, for)
det(year, the)
nmod(Finals, year)
punct(state, . )
det(Junior, a)
nsubj(eligible, Junior)
nsubj(win, who)
acl:relcl(Junior, win)
nummod(win, two)
cc(more, or)
conj(two, more)
obj(win, win)
case(Class, in)
det(Class, the)
compound(Class, open)
nmod(win, Class)
cop(eligible, be)
root(ROOT, eligible)
punct(eligible, . )
punct(be, ()
det(purpose, the)
nsubj(be, purpose)
case(competition, of)
det(competition, the)
compound(competition, Junior)
compound(competition, showmanship)
nmod(purpose, competition)
root(ROOT, be)
mark(teach, to)
ccomp(be, teach)
cc(encourage, and)
conj(teach, encourage)
obj(encourage, Juniors)
mark(become, to)
xcomp(encourage, become)
amod(sportsman, good)
obj(become, sportsman)
punct(be, .)
amod(adult, many)
nsubj(product, adult)
acl(adult, show)
case(Westminster, at)
obl(show, Westminster)
obl:tmod(show, today)
cop(product, be)
root(ROOT, product)
case(Class, of)
det(Class, this)
nmod(product, Class)
punct(product, .)
punct(product, ))
nsubj(seem, it)
root(ROOT, seem)
det(job, a)
advmod(impossible, almost)
amod(job, impossible)
obj(seem, job)
case(miss, for)
nmod(job, miss)
flat(miss, Rogers)
mark(select, to)
csubj(seem, select)
nummod(winner, 4)
obj(select, winner)
case(Juniors, from)
det(Juniors, the)
nummod(Juniors, 46)
nsubj(enter, Juniors)
xcomp(select, enter)
punct(seem, . )
det(number, a)
amod(number, large)
nsubj(have, number)
case(Juniors, of)
det(Juniors, these)
nmod(number, Juniors)
root(ROOT, have)
nummod(win, 7)
cc(8, and)
conj(7, 8)
obj(have, win)
case(credit, to)
nmod:poss(credit, they)
nmod(win, credit)
cc(campaigner, and)
cop(campaigner, be)
amod(campaigner, season)
conj(have, campaigner)
punct(have, .)
mark(move, after)
det(judge, the)
nsubj(move, judge)
advcl(select, move)
det:predet(dog, all)
det(dog, the)
obj(move, dog)
advmod(move, individually)
punct(select, ,)
nsubj(select, she)
root(ROOT, select)
obj(select, several)
case(group, from)
det(group, the)
obl(select, group)
cc(place, and)
conj(select, place)
obj(place, they)
case(center, in)
det(center, the)
obl(place, center)
case(ring, of)
det(ring, the)
nmod(center, ring)
punct(select, .)
nsubj(go, she)
advmod(go, then)
root(ROOT, go)
case(they, over)
obl(go, they)
advmod(give, thoroughly)
advcl(go, give)
det(test, each)
det(test, a)
amod(test, strenuous)
obj(give, test)
case(showmanship, in)
obl(give, showmanship)
punct(go, .)
amod(Champion, international)
nsubj:pass(choose, Champion)
case(year, of)
det(year, the)
nmod(Champion, year)
nsubj:pass(choose, Betty)
flat(Betty, Lou)
flat(Betty, Ham)
punct(Betty, ,)
appos(Betty, age)
nummod(age, 16)
punct(Betty, ,)
appos(Betty, holyoke)
punct(Betty, ,)
appos(holyoke, Mass.)
punct(show, ,)
acl(Champion, show)
det(Setter, a)
amod(Setter, irish)
obj(show, Setter)
punct(choose, ,)
aux:pass(choose, be)
root(ROOT, choose)
case(Champion, as)
compound(Champion, International)
obl(choose, Champion)
case(year, of)
det(year, the)
nmod(Champion, year)
punct(choose, .)
nsubj:pass(award, she)
aux:pass(award, be)
root(ROOT, award)
det(Handlers, the)
amod(Handlers, professional)
obj(award, Handlers)
punct(Ass'ns, ')
appos(Handlers, Ass'ns)
punct(Ass'ns, ')
appos(Ass'ns, Leonard)
flat(Leonard, Brumby)
punct(Leonard, ,)
compound(Trophy, sr.)
compound(Trophy, memorial)
appos(Leonard, Trophy)
punct(name, ()
acl(Handlers, name)
case(originator, for)
det(originator, the)
compound(originator, founder)
punct(originator, -)
obl(name, originator)
case(class, of)
det(class, the)
compound(class, Junior)
nmod(originator, class)
punct(award, .)
punct(award, ))
nsubj(year, Betty)
cop(year, be)
nummod(year, 16)
root(ROOT, year)
case(age, of)
nmod(year, age)
cc(have, and)
conj(year, have)
amod(win, several)
obj(have, win)
case(credit, to)
nmod:poss(credit, she)
nmod(win, credit)
amod(year, last)
obl:tmod(have, year)
punct(year, .)
case(addition, in)
obl(score, addition)
mark(show, to)
acl(addition, show)
det(Setter, a)
amod(Setter, irish)
obj(show, Setter)
case(year, throughout)
det(year, the)
obl(show, year)
punct(score, ,)
nsubj(score, she)
advmod(score, also)
root(ROOT, score)
case(afghan, with)
det(afghan, a)
obl(score, afghan)
punct(score, .)
amod(winner, other)
nsubj(2nd, winner)
appos(winner, Sydney)
flat(Sydney, Le)
flat(Le, Blanc)
punct(Le, ,)
appos(Le, age)
nummod(age, 15)
punct(Le, ,)
compound(Island, Staten)
appos(Sydney, Island)
punct(Island, ,)
appos(Island, N.Y.)
punct(Sydney, ,)
acl(Island, show)
det(Pinscher, a)
compound(Pinscher, doberman)
obj(show, Pinscher)
punct(2nd, ,)
cop(2nd, be)
root(ROOT, 2nd)
punct(2nd, .)
nsubj(2nd, Susan)
flat(Susan, Hackmann)
punct(Susan, ,)
appos(Susan, age)
nummod(age, 14)
punct(Susan, ,)
case(Baltimore, from)
nmod(Susan, Baltimore)
punct(Baltimore, ,)
appos(Baltimore, Md.)
punct(Baltimore, ,)
acl(Baltimore, show)
det(Dachshund, a)
obj(show, Dachshund)
punct(3rd, ,)
cop(3rd, be)
parataxis(Dachshund, 3rd)
punct(year, .)
amod(year, last)
obl:tmod(3rd, year)
nsubj(place, Susan)
advmod(place, also)
acl:relcl(year, place)
obj(place, 3rd)
case(Finals, in)
det(Finals, the)
obl(place, Finals)
case(Westminster, at)
nmod(Finals, Westminster)
punct(place, .)
case(record, from)
det(record, the)
obl(place, record)
nsubj(keep, we)
acl:relcl(record, keep)
punct(Junior, --)
nsubj(Junior, Susan)
cop(Junior, be)
det(Junior, the)
amod(Junior, only)
acl:relcl(record, Junior)
nsubj(place, who)
aux(place, have)
acl:relcl(Junior, place)
case(class, in)
det(class, the)
compound(class, Junior)
obl(place, class)
case(States, in)
cc:preconj(States, both)
compound(States, United)
obl(place, States)
cc(Canada, and)
conj(States, Canada)
punct(Junior, .)
nsubj(4th, Karen)
flat(Karen, Marcmann)
punct(Karen, ,)
appos(Karen, age)
nummod(age, 16)
punct(Karen, ,)
appos(Karen, Trapp)
punct(Trapp, ,)
appos(Trapp, Penna)
punct(Trapp, .)
punct(4th, ,)
csubj(4th, show)
det(Keeshond, a)
obj(show, Keeshond)
cop(4th, be)
root(ROOT, 4th)
punct(4th, . )
amod(Juniors, most)
nsubj(campaigner, Juniors)
nsubj:pass(enter, who)
aux:pass(enter, be)
acl:relcl(Juniors, enter)
case(Finals, in)
det(Finals, the)
obl(enter, Finals)
cop(campaigner, be)
amod(campaigner, season)
root(ROOT, campaigner)
cc(show, and)
advmod(only, not)
advmod(show, only)
conj(campaigner, show)
cc(win, and)
conj(show, win)
case(class, in)
compound(class, Junior)
obl(win, class)
cc(score, but)
conj(class, score)
case(class, in)
det(class, the)
compound(class, Breed)
nmod(score, class)
advmod(score, as)
fixed(as, well)
punct(campaigner, .)
nsubj(be, entry)
acl(entry, increase)
punct(entry, --)
appos(entry, requirement)
acl(requirement, raise)
case(1960, in)
obl(raise, 1960)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nummod(entry, 7287)
nsubj(be, entry)
case(class, in)
det(class, the)
compound(class, Junior)
nmod(entry, class)
punct(class, .)
det(year, each)
obl:tmod(increase, year)
det(show, these)
nsubj(increase, show)
aux(increase, have)
parataxis(be, increase)
case(entry, in)
obl(increase, entry)
punct(be, .)
amod(year, next)
obl:tmod(raise, year)
nummod(year, 1962)
punct(raise, ,)
case(Westminster, at)
obl(raise, Westminster)
punct(raise, ,)
det(Committee, the)
compound(show, Bench)
compound(Committee, show)
nsubj(raise, Committee)
aux(raise, have)
root(ROOT, raise)
det(requirement, the)
obj(raise, requirement)
mark(win, so)
fixed(so, that)
det(junior, a)
nsubj(win, junior)
aux(win, must)
advcl(raise, win)
nummod(class, 3)
cc(more, or)
conj(3, more)
compound(class, Junior)
obj(win, class)
case(division, in)
det(division, the)
amod(division, open)
obl(win, division)
advmod(qualify, only)
mark(qualify, to)
acl(division, qualify)
case(Westminster, for)
obl(qualify, Westminster)
punct(raise, .)
nsubj(show, percy)
flat(percy, Roberts)
punct(percy, ,)
det(judge, a)
compound(judge, lead)
appos(percy, judge)
aux(show, will)
advmod(show, not)
cop(show, be)
case(show, at)
det(show, the)
compound(show, International)
root(ROOT, show)
det(year, this)
obl:tmod(show, year)
case(Contest, for)
det(Contest, the)
compound(Contest, Junior)
compound(Contest, judge)
nmod(show, Contest)
mark(invite, as)
nsubj:pass(invite, he)
aux(invite, have)
aux:pass(invite, be)
advcl(show, invite)
mark(judge, to)
xcomp(invite, judge)
case(Australia, in)
obl(judge, Australia)
case(March, in)
obl(judge, March)
punct(judge, .)
advcl(judge, judge)
obj(judge, class)
case(intermediate, for)
obl(judge, intermediate)
acl(intermediate, propose)
nsubj:pass(suggest, it)
aux(suggest, have)
aux:pass(suggest, be)
ccomp(propose, suggest)
amod(time, many)
obl:tmod(suggest, time)
mark(set, that)
det(Class, a)
nsubj:pass(set, Class)
aux:pass(set, be)
ccomp(suggest, set)
compound:prt(set, up)
case(Juniors, for)
det(Juniors, the)
obl(set, Juniors)
nsubj(overage, who)
cop(overage, be)
acl:relcl(Juniors, overage)
cc(enter, and)
aux(enter, can)
advmod(enter, not)
conj(overage, enter)
det(class, the)
compound(class, Junior)
obj(enter, class)
punct(show, .)
case(time, for)
det(time, some)
obl(suggest, time)
det(writer, this)
nsubj(suggest, writer)
aux(suggest, have)
aux(suggest, be)
root(ROOT, suggest)
det(Class, a)
compound(Class, Junior)
compound(Class, judge)
obj(suggest, Class)
case(intermediate, for)
nmod(Class, intermediate)
case(16, over)
obl(suggest, 16)
cc(year, and)
case(year, under)
nummod(year, 20)
obl(suggest, year)
case(age, of)
nmod(year, age)
nsubj(ineligible, who)
cop(ineligible, be)
acl:relcl(year, ineligible)
mark(compete, to)
xcomp(ineligible, compete)
case(Class, in)
det(Class, the)
compound(Class, Junior)
obl(compete, Class)
punct(try, .)
det:predet(Class, such)
det(Class, a)
nsubj:pass(try, Class)
aux:pass(try, be)
parataxis(suggest, try)
compound:prt(try, out)
advmod(try, successfully)
case(show, at)
det(show, the)
compound(show, Westchester)
compound(show, KC)
obl(try, show)
advmod(try, recently)
punct(suggest, .)
advmod(only, not)
cc:preconj(pleased, only)
cop(pleased, be)
det(contestants, the)
nsubj(pleased, contestants)
root(ROOT, pleased)
case(Class, with)
det(Class, the)
obl(pleased, Class)
punct(arouse, ,)
cc(arouse, but)
nsubj(arouse, it)
conj(pleased, arouse)
det(interest, the)
obj(arouse, interest)
case(all, of)
nmod(interest, all)
case(attendance, in)
nmod(all, attendance)
det(day, that)
obl:tmod(arouse, day)
punct(arouse, .)
det(intermediate, the)
nsubj:pass(ask, intermediate)
case(Class, in)
det(Class, the)
nmod(intermediate, Class)
case(Judge, with)
det(Judge, the)
nmod(intermediate, Judge)
aux:pass(ask, be)
parataxis(arouse, ask)
mark(pick, to)
xcomp(ask, pick)
nummod(winner, 4)
obj(pick, winner)
cc(give, and)
conj(pick, give)
nmod:poss(reason, they)
obj(give, reason)
cc(affect, but)
nmod:poss(decision, they)
nsubj(affect, decision)
aux(affect, do)
advmod(affect, not)
conj(ask, affect)
det(choice, the)
obj(affect, choice)
case(judge, of)
det(judge, the)
nmod(choice, judge)
punct(pleased, .)
nsubj(suggest, we)
root(ROOT, suggest)
det(Class, this)
obj(suggest, Class)
case(world, in)
det(world, the)
compound(world, horse)
obl(suggest, world)
cc(accept, and)
nsubj:pass(accept, it)
aux:pass(accept, be)
conj(suggest, accept)
advmod(accept, immediately)
cc(include, and)
conj(accept, include)
case(program, in)
det(program, the)
obl(include, program)
case(show, of)
compound(show, horse)
nmod(program, show)
punct(suggest, .)
case(convention, at)
det(convention, the)
amod(convention, recent)
compound(show, horse)
compound(convention, show)
obl(state, convention)
case(York, in)
compound(York, New)
nmod(convention, York)
nsubj:pass(state, it)
aux:pass(state, be)
root(ROOT, state)
mark(meet, that)
det(Class, this)
compound(Class, Intermediate)
compound(Class, judge)
nsubj(meet, Class)
aux(meet, be)
ccomp(state, meet)
case(success, with)
amod(success, great)
obl(meet, success)
cc(help, and)
aux(help, will)
cop(help, be)
det(help, a)
amod(help, great)
conj(meet, help)
case(judge, to)
amod(judge, future)
nmod(help, judge)
case(world, in)
det(world, the)
compound(world, horse)
nmod(judge, world)
punct(state, .)
det(Class, this)
nsubj(successful, Class)
aux(successful, can)
cop(successful, be)
advmod(successful, just)
advmod(successful, as)
root(ROOT, successful)
case(world, in)
det(world, the)
compound(world, dog)
obl(successful, world)
mark(give, if)
nsubj:pass(give, it)
aux:pass(give, be)
advcl(successful, give)
det(chance, a)
obj(give, chance)
punct(give, .)
amod(year, last)
obl:tmod(give, year)
appos(year, Robert)
flat(Robert, Harris)
punct(Robert, ,)
det(Handler, a)
amod(Handler, lead)
compound(Handler, Junior)
nsubj(enter, Handler)
acl:relcl(Robert, enter)
det(Contest, the)
compound(Contest, Dog)
compound(Contest, judge)
obj(enter, Contest)
punct(Junior, ()
appos(Contest, Junior)
punct(Junior, ))
case(KC, at)
det(KC, the)
compound(KC, International)
obl(enter, KC)
case(show, of)
compound(show, Chicago)
nmod(KC, show)
cc(have, and)
conj(enter, have)
det(score, the)
amod(score, highest)
obj(have, score)
mark(judge, in)
acl(score, judge)
case(Junior, of)
det(Junior, any)
obl(judge, Junior)
case(Class, since)
det(Class, the)
obl(judge, Class)
punct(inception, ')
appos(Class, inception)
punct(inception, .)
appos(inception, Juniors)
nsubj(attend, who)
acl:relcl(Juniors, attend)
det(show, this)
compound(show, Chicago)
obj(attend, show)
aux(make, should)
ccomp(attend, make)
det(point, a)
obj(make, point)
mark(enter, to)
acl(point, enter)
det(Class, this)
obj(enter, Class)
mark(help, as)
nsubj(help, it)
aux(help, would)
cop(help, be)
case(help, of)
amod(help, great)
advcl(enter, help)
case(they, to)
nmod(help, they)
punct(successful, .)
amod(handler, more)
compound(handler, volunteer)
nsubj(become, handler)
acl(handler, need)
mark(judge, to)
xcomp(need, judge)
obj(judge, superintentent)
case(state, at)
compound(show, dog)
compound(state, show)
obl(judge, state)
nsubj(become, it)
aux(become, be)
root(ROOT, become)
advmod(difficult, more)
xcomp(become, difficult)
mark(obtain, to)
advcl(difficult, obtain)
det(Handler, a)
amod(Handler, license)
obj(obtain, Handler)
case(competition, to)
compound(competition, Judge)
flat(Judge, Junior)
compound(competition, showmanship)
nmod(Handler, competition)
punct(difficult, .)
det(founder, the)
nsubj(Handler, founder)
case(competition, of)
det(competition, the)
compound(competition, Junior)
compound(competition, showmanship)
nmod(founder, competition)
det(Leonard, the)
amod(Leonard, late)
nmod(founder, Leonard)
flat(Leonard, Brumby)
punct(Leonard, ,)
appos(Leonard, sr.)
punct(sr., ()
case(whom, for)
obl(name, whom)
det(trophy, the)
nsubj:pass(name, trophy)
aux:pass(name, be)
acl:relcl(Leonard, name)
case(Westminster, after)
case(Westminster, at)
obl(name, Westminster)
punct(name, ))
cop(Handler, be)
det(Handler, a)
amod(Handler, outstanding)
root(ROOT, Handler)
cc(believe, and)
conj(Handler, believe)
det(Junior, a)
nsubj(have, Junior)
aux(have, should)
ccomp(believe, have)
det(opportunity, a)
obj(have, opportunity)
mark(exhibit, to)
acl(opportunity, exhibit)
case(show, in)
det(show, a)
compound(show, dog)
obl(exhibit, show)
acl(show, start)
case(division, with)
det(division, the)
compound(division, Junior)
compound(division, showmanship)
obl(start, division)
punct(Handler, .)
det(year, some)
obl:npmod(ago, year)
advmod(judge, ago)
det(Class, this)
nsubj:pass(judge, Class)
aux:pass(judge, be)
root(ROOT, judge)
case(celebrity, by)
obl(judge, celebrity)
nsubj(know, who)
acl:relcl(celebrity, know)
obj(know, nothing)
case(what, of)
nmod(nothing, what)
aux:pass(require, be)
acl:relcl(what, require)
case(ability, of)
det(Junior, a)
nmod:poss(ability, Junior)
case(Junior, 's)
obl(require, ability)
mark(show, to)
acl(ability, show)
det(dog, a)
obj(show, dog)
punct(judge, .)
mark(overcome, to)
advcl(require, overcome)
det(judge, this)
amod(judge, unfair)
obj(overcome, judge)
punct(require, ,)
det(a.k.c., the)
nsubj(require, a.k.c.)
root(ROOT, require)
mark(present, that)
det(Handler, a)
amod(Handler, license)
nsubj(present, Handler)
cop(present, be)
ccomp(require, present)
mark(judge, to)
xcomp(present, judge)
det(Class, the)
obj(judge, Class)
punct(require, .)
mark(receive, if)
det(superintentent, the)
nsubj(receive, superintentent)
aux(receive, do)
advmod(receive, not)
advcl(suggest, receive)
amod(cooperation, more)
obj(receive, cooperation)
case(Handlers, from)
nmod(cooperation, Handlers)
punct(suggest, ,)
nsubj:pass(suggest, it)
aux(suggest, have)
aux:pass(suggest, be)
root(ROOT, suggest)
mark(qualified, that)
amod(judge, license)
nsubj(qualified, judge)
advmod(qualified, also)
cop(qualified, be)
ccomp(suggest, qualified)
mark(judge, to)
xcomp(qualified, judge)
det(Class, this)
obj(judge, Class)
punct(suggest, .)
mark(recognize, by)
advcl(help, recognize)
cc(help, and)
conj(recognize, help)
obj(help, Juniors)
advcl(help, get)
xcomp(get, interested)
case(world, in)
det(world, the)
compound(world, dog)
obl(interested, world)
punct(help, ,)
nsubj(help, all)
aux(help, will)
aux(help, be)
root(ROOT, help)
mark(create, to)
xcomp(help, create)
amod(owner, future)
compound(owner, dog)
obj(create, owner)
punct(help, .)
amod(award, other)
nsubj(have, award)
case(Juniors, for)
nmod(award, Juniors)
det(Club, the)
compound(Club, airedale)
compound(Club, Terrier)
nmod(award, Club)
case(America, of)
nmod(Club, America)
cc(Club, and)
det(Club, the)
compound(Club, Kerry)
flat(Kerry, Blue)
compound(Club, Terrier)
conj(Club, Club)
case(America, of)
nmod(Club, America)
root(ROOT, have)
case(consideration, under)
obl(have, consideration)
acl(consideration, donate)
obj(donate, trophy)
case(boy, to)
det(boy, the)
nmod(trophy, boy)
cc(girl, or)
conj(boy, girl)
nsubj(win, who)
acl:relcl(boy, win)
case(breed, with)
nmod:poss(breed, they)
obl(win, breed)
case(competition, in)
compound(competition, Junior)
compound(competition, showmanship)
nmod(breed, competition)
case(show, at)
det(show, any)
nmod(competition, show)
punct(competition, .)
det(City, the)
compound(City, Kansas)
appos(competition, City)
cc(KCs, and)
det(KCs, the)
compound(KCs, Topeka)
conj(City, KCs)
aux(arrange, be)
conj(City, arrange)
mark(qualified, that)
nsubj(qualified, Juniors)
nsubj(win, who)
acl:relcl(Juniors, win)
case(show, at)
nmod:poss(show, they)
obl(win, show)
aux(qualified, will)
cop(qualified, be)
ccomp(arrange, qualified)
mark(win, to)
xcomp(qualified, win)
obj(win, point)
case(Westminster, for)
nmod(point, Westminster)
punct(arrange, .)
det(KC, the)
compound(KC, Rio)
compound(KC, Grande)
nsubj(consider, KC)
aux(consider, be)
advmod(consider, also)
root(ROOT, consider)
xcomp(consider, have)
nmod:poss(class, they)
compound(class, Junior)
obj(have, class)
xcomp(have, set)
compound:prt(set, up)
mark(qualify, so)
fixed(so, that)
nsubj(qualify, Juniors)
aux(qualify, can)
advcl(set, qualify)
case(point, with)
obl(qualify, point)
case(Westminster, for)
nmod(point, Westminster)
punct(qualify, .)
det(Club, the)
compound(Club, American)
compound(Club, Pointer)
nsubj(continue, Club)
aux(continue, be)
advmod(continue, still)
parataxis(qualify, continue)
mark(donate, to)
xcomp(continue, donate)
obj(donate, trophy)
case(Juniors, to)
nmod(trophy, Juniors)
nsubj(win, who)
acl:relcl(Juniors, win)
case(class, at)
compound(class, Junior)
compound(class, showmanship)
obl(win, class)
case(Pointers, with)
obl(win, Pointers)
punct(win, .)
advcl(win, travel)
case(South, through)
det(South, the)
obl(travel, South)
punct(travel, --)
advmod(16,000, over)
nummod(mile, 16,000)
obl:tmod(travel, mile)
punct(mile, --)
case(Danes, with)
nummod(Danes, two)
amod(Danes, great)
nmod(mile, Danes)
punct(afghan, ,)
det(afghan, a)
conj(Danes, afghan)
punct(kitten, ,)
cc(kitten, and)
det(kitten, a)
amod(kitten, Persian)
conj(Danes, kitten)
punct(work, ,)
nsubj(work, we)
aux(work, have)
parataxis(kitten, work)
compound:prt(work, up)
det(routine, a)
amod(routine, regular)
obj(work, routine)
case(acceptance, for)
nmod(routine, acceptance)
case(motel, at)
nmod(acceptance, motel)
punct(consider, .)
nmod:poss(husband, my)
nsubj(enter, husband)
root(ROOT, enter)
det(office, the)
compound(office, motel)
obj(enter, office)
punct(sign, ,)
conj(enter, sign)
compound:prt(sign, up)
case(room, for)
det(room, a)
obl(sign, room)
punct(ask, ,)
cc(ask, and)
advmod(ask, then)
advmod(ask, solemnly)
conj(enter, ask)
det(proprieter, the)
obj(ask, proprieter)
mark(accept, if)
nsubj(accept, he)
advcl(ask, accept)
obj(accept, pet)
punct(enter, .)
punct(enter, ``)
root(ROOT, puppy)
punct(puppy, '')
punct(puppy, ?)
punct(puppy, ?)
root(ROOT, come)
det(question, the)
amod(question, suspicious)
obj(come, question)
punct(come, .)
punct(come, ``)
discourse(reply, no)
punct(reply, '')
punct(reply, ,)
nsubj(reply, he)
root(ROOT, reply)
punct(reply, ,)
punct(reply, ``)
amod(dog, full)
amod(dog, grow)
punct(dog, ,)
conj(grow, adult)
compound(dog, show)
obj(reply, dog)
punct(housebroken, ,)
amod(dog, housebroken)
punct(train, ,)
cc(train, and)
obl:npmod(train, obedience)
punct(train, -)
conj(dog, train)
punct(train, '')
punct(refuse, .)
nsubj:pass(refuse, we)
aux(refuse, have)
advmod(refuse, never)
aux:pass(refuse, be)
ccomp(reply, refuse)
punct(refuse, !)
punct(refuse, !)
advmod(settle, once)
advcl(careful, settle)
punct(careful, ,)
nsubj(careful, we)
cop(careful, be)
root(ROOT, careful)
mark(walk, to)
xcomp(careful, walk)
det(dog, the)
obj(walk, dog)
case(spot, in)
det(spot, a)
case(spot, out)
case(way, of)
det(way, the)
compound(spot, way)
obl(walk, spot)
punct(keep, ,)
conj(walk, keep)
obj(keep, they)
case(control, under)
obl(keep, control)
case(room, in)
det(room, the)
obl(keep, room)
punct(feed, ,)
cc(feed, and)
conj(walk, feed)
cc(bench, and)
conj(feed, bench)
obj(bench, they)
mark(do, where)
nsubj(do, they)
aux(do, can)
advmod(do, not)
advcl(bench, do)
det(harm, any)
obj(do, harm)
case(furnishings, to)
det(furnishings, the)
nmod(harm, furnishings)
cc(furniture, or)
det(furniture, the)
conj(furnishings, furniture)
punct(careful, .)
case(morning, in)
det(morning, the)
obl(leave, morning)
nsubj(leave, we)
root(ROOT, leave)
det(room, the)
obj(leave, room)
acl(room, look)
advmod(neat, as)
xcomp(look, neat)
case(pin, as)
det(pin, a)
obl(neat, pin)
punct(leave, !)
punct(leave, !)
det:predet(owner, many)
det(owner, a)
compound(owner, motel)
nsubj(remember, owner)
punct(owner, --)
mark(stop, when)
nsubj(stop, we)
aux(stop, have)
advcl(remember, stop)
advmod(stop, there)
advmod(stop, again)
punct(remember, --)
aux(remember, have)
root(ROOT, remember)
obj(remember, we)
cc(say, and)
aux(say, have)
conj(remember, say)
nsubj(prefer, he)
ccomp(say, prefer)
nmod:poss(dog, we)
obj(prefer, dog)
case(child, to)
amod(child, most)
obl(prefer, child)
punct(remember, .)
advmod(many, so)
amod(time, many)
obl:tmod(wonder, time)
nsubj(wonder, I)
aux(wonder, have)
root(ROOT, wonder)
advmod(wipe, why)
nsubj(wipe, veterinarian)
aux(wipe, do)
advmod(wipe, not)
ccomp(wonder, wipe)
det(table, the)
obj(wipe, table)
xcomp(wipe, clean)
mark(place, before)
det(patient, each)
amod(patient, new)
compound(patient, canine)
nsubj:pass(place, patient)
aux:pass(place, be)
advcl(wipe, place)
case(it, on)
obl(place, it)
case(examination, for)
obl(place, examination)
punct(wonder, .)
aux(care, be)
nsubj(care, it)
mark(care, that)
nsubj(care, they)
aux(care, do)
advmod(care, not)
root(ROOT, care)
punct(care, ?)
punct(be, ?)
cop(indifferent, be)
nsubj(indifferent, they)
root(ROOT, indifferent)
case(fact, to)
det(fact, the)
obl(indifferent, fact)
mark(pick, that)
det(dog, the)
nsubj(pick, dog)
aux(pick, can)
advmod(pick, easily)
acl(fact, pick)
compound:prt(pick, up)
obj(pick, germ)
case(patient, from)
det(patient, the)
amod(patient, precede)
obl(pick, patient)
punct(indifferent, ?)
punct(indifferent, ?)
case(time, at)
nummod(time, one)
obl(consider, time)
punct(consider, ,)
case(Americans, to)
amod(Americans, most)
obl(consider, Americans)
punct(consider, ,)
mark(fortunate, unless)
nsubj(fortunate, they)
cop(fortunate, be)
advcl(consider, fortunate)
advmod(fortunate, enough)
mark(live, to)
advcl(fortunate, live)
case(body, near)
det(body, a)
obl(live, body)
case(water, of)
amod(water, navigable)
nmod(body, water)
punct(consider, ,)
nsubj:pass(consider, boat)
aux:pass(consider, be)
root(ROOT, consider)
det(concern, the)
amod(concern, sole)
obj(consider, concern)
case(fishermen, of)
nmod(concern, fishermen)
punct(people, ,)
amod(people, rich)
conj(fishermen, people)
punct(Navy, ,)
cc(Navy, and)
det(Navy, the)
compound(States, United)
compound(Navy, States)
conj(fishermen, Navy)
punct(Navy, .)
obl:tmod(awash, today)
det(scene, the)
amod(scene, recreational)
compound(scene, boat)
nsubj(awash, scene)
cop(awash, be)
conj(consider, awash)
case(statistic, with)
amod(statistic, heartening)
obl(awash, statistic)
nsubj(prove, which)
acl:relcl(statistic, prove)
det(growth, the)
amod(growth, enormous)
obj(prove, growth)
case(sport, of)
det(sport, that)
nmod(growth, sport)
punct(consider, .)
expl(be, there)
root(ROOT, be)
advmod(8,000,000, more)
fixed(more, than)
nummod(boat, 8,000,000)
amod(boat, recreational)
nsubj(be, boat)
case(use, in)
nmod(boat, use)
case(States, in)
det(States, the)
compound(States, United)
nmod(use, States)
case(prediction, with)
advmod(10,000,000, almost)
nmod(prediction, 10,000,000)
det(prediction, the)
nmod(boat, prediction)
case(decade, for)
case(decade, within)
det(decade, the)
amod(decade, next)
nmod(prediction, decade)
punct(prediction, .)
advmod(40,000,000, about)
nummod(people, 40,000,000)
appos(prediction, people)
acl(people, participate)
case(boat, in)
obl(participate, boat)
case(1960, in)
obl(participate, 1960)
punct(be, .)
nsubj(become, boat)
aux(become, have)
root(ROOT, become)
det(giant, a)
xcomp(become, giant)
nmod:poss(stride, whose)
nsubj(cover, stride)
acl:relcl(giant, cover)
det(nation, the)
amod(nation, entire)
obj(cover, nation)
case(sea, from)
obl(cover, sea)
case(sea, to)
amod(sea, shine)
obl(cover, sea)
punct(giant, .)
nsubj:pass(operate, Boats)
aux:pass(operate, be)
root(ROOT, operate)
case(state, in)
det(state, every)
obl(operate, state)
case(union, in)
det(union, the)
obl(operate, union)
punct(operate, ,)
case(concentration, with)
det(concentration, the)
amod(concentration, heaviest)
obl(operate, concentration)
case(coast, along)
cc:preconj(coast, both)
nmod(concentration, coast)
cc(West, and)
case(West, in)
det(West, the)
compound(West, Middle)
conj(coast, West)
punct(operate, .)
det(upsurge, the)
amod(upsurge, spectacular)
nsubj(evident, upsurge)
case(boat, in)
compound(boat, pleasure)
nmod(upsurge, boat)
cop(evident, be)
advmod(evident, markedly)
root(ROOT, evident)
punct(evident, ,)
advmod(evident, expectedly)
punct(evident, ,)
case(area, in)
det(area, the)
obl(evident, area)
advmod(find, where)
nsubj:pass(find, boat)
aux(find, have)
advmod(find, always)
aux:pass(find, be)
acl:relcl(area, find)
punct(find, :)
det(lake, the)
amod(lake, natural)
obj(find, lake)
punct(river, ,)
conj(lake, river)
punct(coastline, ,)
cc(coastline, and)
case(coastline, along)
det(nation, the)
nmod:poss(coastline, nation)
case(nation, 's)
conj(lake, coastline)
punct(evident, .)
cc(launch, but)
case(year, during)
det(year, the)
amod(year, last)
amod(year, several)
obl(launch, year)
nsubj:pass(launch, boat)
aux:pass(launch, be)
root(ROOT, launch)
case(area, in)
obl(launch, area)
advmod(be, where)
punct(be, ,)
det(time, a)
amod(time, short)
obl:npmod(ago, time)
advmod(launch, ago)
punct(be, ,)
det(water, the)
amod(water, only)
nsubj(be, water)
mark(find, to)
aux:pass(find, be)
acl(water, find)
ccomp(launch, be)
case(well, in)
obl(find, well)
cc(trough, and)
compound(trough, water)
conj(well, trough)
case(livestock, for)
nmod(well, livestock)
punct(launch, .)
root(ROOT, develop)
case(result, as)
det(result, a)
obl(develop, result)
case(program, of)
det(program, the)
amod(program, multi-purpose)
compound(control, resource)
compound(program, control)
nmod(result, program)
case(government, of)
det(government, the)
nmod(program, government)
punct(vast, ,)
amod(government, vast)
punct(represent, ,)
amod(body, man-made)
nsubj(represent, body)
case(water, of)
nmod(body, water)
parataxis(develop, represent)
det(kind, a)
obj(represent, kind)
case(benefit, of)
amod(benefit, glorious)
compound(benefit, fringe)
nmod(kind, benefit)
punct(kind, ,)
acl(kind, provide)
compound(haven, boat)
cc(fishing, and)
conj(boat, fishing)
obj(provide, haven)
advmod(country, all)
case(country, over)
det(country, the)
obl(provide, country)
punct(develop, .)
advmod(matter, no)
advmod(create, matter)
advmod(determined, how)
advcl(matter, determined)
cc(wealthy, or)
conj(determined, wealthy)
compound(lover, boat)
nsubj(be, lover)
case(Southwest, of)
det(Southwest, the)
nmod(lover, Southwest)
aux(be, have)
cop(determined, be)
punct(create, ,)
case(example, for)
obl(create, example)
punct(create, ,)
nsubj(create, they)
aux(create, could)
advmod(create, never)
aux(create, have)
root(ROOT, create)
obj(create, anything)
acl(anything, approach)
det(Texoma, the)
nummod(mile, fifty)
compound(mile, square)
punct(mile, -)
compound(Texoma, mile)
compound(Texoma, Lake)
obj(approach, Texoma)
punct(Texoma, ,)
acl(Texoma, locate)
case(Texas, between)
obl(locate, Texas)
cc(Oklahoma, and)
conj(Texas, Oklahoma)
punct(Texas, ,)
nsubj(result, which)
acl:relcl(Texoma, result)
mark(dam, when)
det(Corp, the)
nsubj(dam, Corp)
case(Engineers, of)
compound(Engineers, Army)
nmod(Corp, Engineers)
advcl(result, dam)
det(River, the)
compound(River, Red)
obj(dam, River)
punct(create, .)
case(1959, in)
obl(one, 1959)
punct(one, ,)
case(Engineers, accord)
fixed(accord, to)
det(Engineers, the)
obl(one, Engineers)
punct(one, ,)
compound(Texoma, Lake)
nsubj(one, Texoma)
cop(one, be)
advmod(one, only)
root(ROOT, one)
case(lake, of)
compound(two, thirty)
punct(two, -)
nummod(lake, two)
amod(lake, artificial)
nmod(one, lake)
cc(reservoir, and)
conj(lake, reservoir)
nsubj:pass(use, which)
aux:pass(use, be)
acl:relcl(lake, use)
case(recreation, for)
obl(use, recreation)
case(person, by)
advmod(1,000,000, over)
nummod(person, 1,000,000)
obl(use, person)
punct(one, .)
mark(create, where)
det(opportunity, a)
nsubj:pass(create, opportunity)
mark(enjoy, to)
acl(opportunity, enjoy)
obj(enjoy, boat)
aux(create, have)
advmod(create, not)
aux:pass(create, be)
advcl(find, create)
mark(bring, by)
advcl(create, bring)
obj(bring, body)
case(water, of)
nmod(body, water)
case(people, to)
det(people, the)
obl(bring, people)
punct(find, ,)
nsubj:pass(find, means)
aux(find, have)
aux:pass(find, be)
root(ROOT, find)
mark(take, to)
xcomp(find, take)
det(people, the)
obj(take, people)
cc(boat, and)
nmod:poss(boat, they)
conj(people, boat)
case(water, to)
det(water, the)
obl(take, water)
punct(find, .)
csubj(company, provide)
det(means, these)
obj(provide, means)
cop(company, be)
advmod(ninety, about)
nummod(company, ninety)
root(ROOT, company)
nsubj(manufacture, which)
acl:relcl(company, manufacture)
det(trailer, the)
amod(trailer, estimate)
nummod(boat, 1,800,000)
compound(trailer, boat)
obj(manufacture, trailer)
advmod(manufacture, now)
case(use, in)
obl(manufacture, use)
punct(company, .)
expl(task, it)
cop(task, be)
det(task, a)
amod(task, simple)
root(ROOT, task)
mark(haul, to)
csubj(task, haul)
det(boat, a)
obj(haul, boat)
nummod(mile, fifty)
cc(one, or)
conj(fifty, one)
nummod(mile, hundred)
obj(haul, mile)
case(lake, to)
det(lake, a)
obl(haul, lake)
cc(reservoir, or)
conj(lake, reservoir)
case(trailer, on)
det(trailer, the)
amod(trailer, new)
punct(trailer, ,)
amod(trailer, light)
punct(strong, ,)
amod(trailer, strong)
punct(trailer, ,)
amod(trailer, easy)
punct(operate, -)
case(operate, to)
punct(operate, -)
obl(easy, operate)
obl(haul, trailer)
nsubj:pass(build, which)
aux:pass(build, be)
acl:relcl(trailer, build)
mark(accommodate, to)
xcomp(build, accommodate)
advmod(kind, almost)
det(kind, any)
obj(accommodate, kind)
case(boat, of)
amod(boat, small)
nmod(kind, boat)
cc(retail, and)
conj(boat, retail)
case($, from)
nmod(kind, $)
nummod($, 100)
case($, to)
nmod($, $)
compound($, 2,000)
punct(task, .)
det(sight, the)
nsubj(commonplace, sight)
case(inboard, of)
amod(inboard, sleek)
nmod(sight, inboard)
punct(outboard, ,)
conj(inboard, outboard)
punct(sailboat, ,)
cc(sailboat, and)
conj(inboard, sailboat)
aux:pass(wheel, be)
acl(inboard, wheel)
advmod(wheel, smartly)
case(highway, along)
obl(wheel, highway)
amod(mile, many)
obl:tmod(wheel, mile)
case(water, from)
det(water, any)
nmod(mile, water)
cop(commonplace, be)
root(ROOT, commonplace)
punct(commonplace, .)
nsubj(recall, Boatmen)
amod(Boatmen, lucky)
advmod(lucky, enough)
mark(have, to)
advcl(enough, have)
obj(have, facility)
case(year, for)
nmod(facility, year)
punct(facility, -')
case(anchorage, round)
nmod(facility, anchorage)
case(craft, for)
nmod:poss(craft, they)
nmod(anchorage, craft)
punct(recall, ,)
aux(recall, will)
root(ROOT, recall)
det(procedure, the)
amod(procedure, tedious)
obj(recall, procedure)
mark(loading, of)
acl(procedure, loading)
nmod:poss(gear, they)
obj(loading, gear)
case(car, into)
det(car, the)
obl(loading, car)
punct(drive, ,)
conj(loading, drive)
case(water, to)
det(water, the)
obl(drive, water)
punct(make, ,)
cc(make, and)
conj(loading, make)
obj(make, trip)
case(trip, after)
obl(make, trip)
mark(transfer, to)
advcl(make, transfer)
det(gear, the)
obj(transfer, gear)
case(boat, to)
det(boat, the)
obl(transfer, boat)
punct(recall, .)
obl:tmod(bring, today)
punct(bring, ,)
det(boat, the)
nsubj:pass(bring, boat)
punct(trailer, ,)
mark(trailer, on)
nsubj(trailer, it)
cop(trailer, be)
advcl(bring, trailer)
punct(bring, ,)
aux:pass(bring, be)
root(ROOT, bring)
case(gear, to)
det(gear, the)
obl(bring, gear)
cc(load, and)
conj(gear, load)
case(door, at)
det(door, the)
obl(load, door)
punct(bring, .)
advcl(launch, arrive)
case(waterside, at)
det(waterside, the)
obl(arrive, waterside)
punct(launch, ,)
det(boat, the)
nsubj:pass(launch, boat)
aux:pass(launch, be)
root(ROOT, launch)
punct(launch, ,)
det(family, the)
nsubj(take, family)
conj(launch, take)
advmod(take, aboard)
cc(begin, and)
punct(begin, ,)
mark(begin, that)
advmod(begin, easily)
punct(begin, ,)
det(day, another)
obl:tmod(begin, day)
nsubj:pass(begin, afloat)
aux:pass(begin, be)
conj(launch, begin)
punct(launch, .)
cc(what, and)
nsubj(what, trailer)
case(boat, for)
nmod(trailer, boat)
cop(what, be)
advmod(what, not)
root(ROOT, what)
nsubj(start, they)
acl:relcl(what, start)
compound:prt(start, out)
mark(ago, to)
cop(ago, be)
nummod(year, ten)
obl:npmod(ago, year)
xcomp(start, ago)
punct(what, .)
det(year, this)
obl:tmod(discover, year)
punct(discover, ,)
nsubj(discover, Americans)
aux(discover, will)
root(ROOT, discover)
advmod(unheard, previously)
xcomp(discover, unheard)
case(refinement, of)
obl(unheard, refinement)
case(trailer, in)
nmod(refinement, trailer)
nsubj:pass(exhibit, that)
aux(exhibit, will)
aux:pass(exhibit, be)
acl:relcl(refinement, exhibit)
case(hundred, in)
advmod(one, about)
nummod(hundred, one)
obl(exhibit, hundred)
case(show, of)
nmod:poss(nation, we)
nmod:poss(show, nation)
case(nation, 's)
amod(show, national)
punct(regional, ,)
conj(national, regional)
cc(local, and)
conj(national, local)
compound(show, boat)
nmod(hundred, show)
punct(discover, .)
det(boat, the)
nsubj:pass(coddled, boat)
case(sailor, of)
nmod:poss(sailor, America)
case(America, 's)
compound(sailor, trailer)
nmod(boat, sailor)
case(1961, in)
nmod(sailor, 1961)
aux(coddled, will)
aux:pass(coddled, be)
root(ROOT, coddled)
case(cloud, on)
obl(coddled, cloud)
mark(haul, as)
nsubj:pass(haul, they)
aux:pass(haul, be)
advcl(coddled, haul)
case(horizon, to)
amod(horizon, new)
obl(haul, horizon)
punct(coddled, .)
det(variety, the)
nsubj(overwhelming, variety)
case(craft, of)
nmod(variety, craft)
case(water, on)
det(country, the)
nmod:poss(water, country)
case(country, 's)
nmod(variety, water)
obl:tmod(overwhelming, today)
cop(overwhelming, be)
root(ROOT, overwhelming)
punct(overwhelming, .)
nsubj(range, they)
root(ROOT, range)
case(pram, from)
det(pram, a)
nummod(foot, eight)
punct(foot, -)
compound(pram, foot)
obl(range, pram)
punct(pram, ,)
obj(build, which)
nsubj(build, you)
aux(build, can)
acl:relcl(pram, build)
obj(build, yourself)
case($, for)
advmod($, less)
fixed(less, than)
obl(build, $)
nummod($, 50)
punct($, ,)
case(sailboat, to)
amod(sailboat, auxiliary)
obl(build, sailboat)
nsubj(cost, which)
aux(cost, can)
acl:relcl(sailboat, cost)
advmod($, over)
obj(cost, $)
compound($, 100,000)
punct(range, .)
compound(price, Boat)
nsubj(vary, price)
root(ROOT, vary)
case(desire, accord)
fixed(accord, to)
det(buyer, the)
nmod:poss(desire, buyer)
case(buyer, 's)
obl(vary, desire)
cc(need, or)
conj(desire, need)
punct(vary, .)
case(respect, in)
det(respect, this)
obl(compare, respect)
punct(compare, ,)
nsubj:pass(compare, boat)
aux(compare, can)
aux:pass(compare, be)
root(ROOT, compare)
case(house, with)
obl(compare, house)
punct(compare, .)
expl(be, there)
root(ROOT, be)
det(limit, no)
nsubj(be, limit)
case(what, to)
nmod(limit, what)
nsubj(spend, you)
aux(spend, can)
acl:relcl(what, spend)
punct(possible, ,)
cc(possible, yet)
expl(possible, it)
cop(possible, be)
advmod(possible, easily)
conj(be, possible)
mark(keep, to)
csubj(possible, keep)
case(budget, within)
det(budget, a)
amod(budget, set)
obl(keep, budget)
punct(be, .)
expl(be, there)
root(ROOT, be)
det(question, no)
nsubj(be, question)
case(what, as)
fixed(as, to)
advmod(what, just)
nsubj(available, what)
cop(available, be)
acl(question, available)
punct(be, .)
nsubj(name, you)
root(ROOT, name)
obj(name, it)
punct(name, ,)
nmod:poss(industry, we)
nsubj(produce, industry)
aux(produce, be)
conj(name, produce)
obj(produce, it)
punct(make, ,)
cc(make, and)
nsubj:pass(make, it)
advmod(make, probably)
aux:pass(make, be)
conj(name, make)
case(model, in)
amod(model, different)
obl(make, model)
punct(name, .)
expl(be, there)
root(ROOT, be)
nsubj(be, canoe)
amod(canoe, ideal)
case(fishing, for)
obl(ideal, fishing)
case(water, in)
amod(water, protect)
nmod(fishing, water)
cc(trip, or)
case(trip, for)
compound(trip, camp)
conj(water, trip)
punct(be, . )
expl(be, there)
root(ROOT, be)
nsubj(be, houseboat)
nsubj(afloat, which)
cop(afloat, be)
advmod(afloat, literally)
acl:relcl(houseboat, home)
acl:relcl(houseboat, afloat)
punct(family, ,)
amod(family, accommodating)
amod(family, whole)
conj(houseboat, family)
case(comfort, in)
nmod(family, comfort)
cc(convenience, and)
conj(comfort, convenience)
punct(be, .)
nsubj(cross, you)
aux(cross, can)
root(ROOT, cross)
det(ocean, a)
obj(cross, ocean)
case(craft, in)
det(craft, a)
advmod(equip, fully)
amod(craft, equip)
obl(cross, craft)
punct(sail, ,)
conj(craft, sail)
punct(power, ,)
conj(craft, power)
punct(both, ,)
cc(both, or)
conj(craft, both)
punct(laze, ,)
cc(laze, or)
conj(cross, laze)
advmod(laze, away)
det(day, a)
amod(day, fine)
obl:tmod(laze, day)
case(dinghy, in)
det(dinghy, a)
amod(dinghy, small)
obl(laze, dinghy)
case(pond, on)
det(pond, a)
amod(pond, local)
nmod(dinghy, pond)
punct(cross, .)
nsubj(have, you)
aux(have, may)
root(ROOT, have)
nmod:poss(boat, you)
obj(have, boat)
case(wood, of)
nmod(boat, wood)
punct(canva, ,)
conj(wood, canva)
punct(plywood, ,)
conj(wood, plywood)
punct(plastic, ,)
conj(wood, plastic)
punct(metal, ,)
cc(metal, or)
conj(wood, metal)
punct(have, .)
nsubj(order, you)
aux(order, may)
root(ROOT, order)
compound(model, utility)
obj(order, model)
punct(inboard, ,)
conj(model, inboard)
cc(outboard, or)
conj(model, outboard)
punct(order, ,)
case(toilet, with)
cc(without, or)
conj(with, without)
nmod(model, toilet)
punct(galleys, ,)
conj(toilet, galleys)
punct(bunk, ,)
cc(bunk, and)
conj(toilet, bunk)
punct(order, .)
nsubj(dress, you)
aux(dress, may)
root(ROOT, dress)
obj(dress, it)
compound:prt(dress, up)
case(number, with)
det(number, any)
obl(dress, number)
case(accessory, of)
nmod(number, accessory)
cc(keep, or)
conj(dress, keep)
obj(keep, it)
advmod(simple, as)
xcomp(keep, simple)
mark(choose, as)
nsubj(choose, you)
advcl(simple, choose)
punct(dress, .)
nsubj(produce, Designers)
cc(manufacturer, and)
conj(Designers, manufacturer)
aux(produce, have)
conj(dress, produce)
obj(produce, model)
case(purchaser, for)
nmod(model, purchaser)
nsubj(run, who)
acl:relcl(purchaser, run)
det(gamut, the)
obj(run, gamut)
case(version, from)
det(version, a)
amod(version, nautical)
obl(run, version)
case(lady, of)
det(lady, the)
amod(lady, elderly)
compound(lady, Pasadena)
nmod(version, lady)
nsubj(drive, who)
advmod(drive, never)
acl:relcl(lady, drive)
advmod(five, more)
fixed(more, than)
nummod(mile, five)
obj(drive, mile)
det(hour, a)
obj(drive, hour)
case(a-month, on)
nmod:poss(a-month, she)
advmod(a-month, once)
punct(a-month, -)
nmod(hour, a-month)
advcl(drive, ride)
case(block, around)
det(block, the)
obl(ride, block)
punct(ride, ,)
case(boatman, to)
det(boatman, the)
amod(boatman, sportiest)
obl(ride, boatman)
nsubj(insist, who)
acl:relcl(boatman, insist)
case(dash, on)
det:predet(dash, all)
det(dash, the)
obl(insist, dash)
punct(color, ,)
conj(dash, color)
punct(flair, ,)
conj(dash, flair)
cc(speed, and)
conj(insist, speed)
xcomp(speed, possible)
mark(encompass, to)
xcomp(speed, encompass)
case(boat, in)
det(boat, a)
amod(boat, single)
obl(encompass, boat)
punct(dress, .)
nsubj(pay, you)
root(ROOT, pay)
nmod:poss(money, you)
obj(pay, money)
cc(take, and)
nsubj(take, you)
conj(pay, take)
nmod:poss(choice, you)
obj(take, choice)
punct(take, .)
amod(technology, american)
nsubj(responsible, technology)
case(engine, in)
nmod(technology, engine)
cc(design, and)
compound(design, hull)
nsubj(responsible, design)
cop(responsible, be)
advmod(responsible, largely)
conj(pay, responsible)
case(interest, for)
det(interest, the)
amod(interest, plentiful)
obl(responsible, interest)
case(boat, in)
amod(boat, american)
nmod(interest, boat)
punct(pay, . )
nsubj(wonder, I)
root(ROOT, wonder)
mark(bother, if)
nsubj(bother, anyone)
advmod(bother, ever)
advcl(wonder, bother)
mark(make, to)
xcomp(bother, make)
det(point, the)
obj(make, point)
mark(excel, that)
mark(come, when)
nsubj(come, it)
advcl(excel, come)
case(boat, to)
obl(come, boat)
cc(motor, and)
nmod:poss(motor, they)
conj(boat, motor)
punct(excel, ,)
nsubj(excel, Americans)
ccomp(wonder, excel)
case(country, over)
det(country, any)
obl(excel, country)
case(world, in)
det(world, the)
nmod(country, world)
case(run, in)
det(run, the)
amod(run, long)
obl(excel, run)
punct(wonder, .)
nsubj(be, Russia)
punct(Russia, ,)
nmod:poss(technology, whose)
nsubj(primitive, technology)
cop(primitive, be)
advmod(primitive, not)
advmod(primitive, quite)
acl:relcl(Russia, primitive)
punct(age, ,)
cop(age, be)
advmod(age, still)
case(age, in)
det(age, the)
amod(age, dark)
root(ROOT, age)
mark(come, when)
nsubj(come, it)
advcl(age, come)
mark(improve, to)
advcl(come, improve)
det(motor, the)
compound(motor, outboard)
obj(improve, motor)
punct(improve, ,)
case(instance, for)
obl(improve, instance)
punct(age, .)
advmod(here, now)
root(ROOT, here)
cop(here, be)
advmod(here, truly)
det(marvel, a)
nsubj(here, marvel)
punct(here, .)
det(engine, the)
compound(engine, outboard)
nsubj(have, engine)
case(today, of)
nmod(engine, today)
root(ROOT, have)
det(range, a)
amod(range, phenomenal)
obj(have, range)
case(horsepower, of)
nummod(horsepower, one)
case(80, to)
nmod(one, 80)
nmod(range, horsepower)
punct(horsepower, ,)
amod(horsepower, unheard)
case(year, of)
det(year, a)
amod(year, few)
obl:npmod(ago, year)
advmod(unheard, ago)
case(engine, for)
det(engine, a)
nummod(cycle, two)
compound(engine, cycle)
obl(ago, engine)
case(production, in)
compound(production, quantity)
nmod(engine, production)
punct(have, .)
det(engines, these)
nsubj:pass(remove, engines)
aux(remove, can)
aux:pass(remove, be)
root(ROOT, remove)
case(boat, from)
det(boat, a)
obl(remove, boat)
case(ease, with)
amod(ease, relative)
nmod(boat, ease)
punct(ease, ,)
nsubj(lie, wherein)
acl:relcl(ease, lie)
nmod:poss(advantage, they)
amod(advantage, greatest)
obj(lie, advantage)
punct(lie, .)
nmod:poss(cost, they)
nsubj(hope, cost)
cop(hope, be)
advmod(hope, not)
case(hope, beyond)
det(hope, the)
conj(remove, hope)
case(pocketbook, of)
det(pocketbook, the)
amod(pocketbook, american)
nmod(hope, pocketbook)
punct(hope, ,)
det(range, the)
appos(pocketbook, range)
cop($, be)
advmod($, about)
acl(range, $)
compound($, 150)
case($, to)
nmod($, $)
compound($, 1,000)
punct($, ,)
case(size, depend)
case(size, on)
nmod($, size)
punct(remove, .)
amod(thought, great)
nsubj:pass(give, thought)
aux(give, have)
aux:pass(give, be)
root(ROOT, give)
mark(make, to)
advcl(give, make)
obj(make, life)
xcomp(make, easier)
case(population, for)
det(population, the)
amod(population, grow)
compound(population, boat)
obl(make, population)
case(country, of)
det(country, the)
nmod(population, country)
punct(give, ;)
punct(give, ;)
cc(make, and)
mark(make, to)
conj(give, make)
det(own, the)
obj(make, own)
case(boat, of)
det(boat, a)
nmod(own, boat)
xcomp(make, simpler)
punct(give, .)
expl(be, there)
root(ROOT, be)
det(time, a)
nsubj(be, time)
mark(necessary, when)
punct(necessary, ,)
mark(want, if)
det(man, a)
nsubj(want, man)
advcl(necessary, want)
mark(purchase, to)
xcomp(want, purchase)
det(boat, a)
obj(purchase, boat)
punct(necessary, ,)
nsubj(necessary, it)
cop(necessary, be)
parataxis(be, necessary)
mark(able, for)
nsubj(able, he)
mark(able, to)
cop(able, be)
advcl(necessary, able)
mark(produce, to)
xcomp(able, produce)
det(amount, a)
amod(amount, sizeable)
obj(produce, amount)
case(cash, of)
nmod(amount, cash)
mark(touch, before)
nsubj(touch, he)
aux(touch, could)
advcl(produce, touch)
det(tiller, the)
obj(touch, tiller)
cc(wheel, or)
conj(tiller, wheel)
punct(be, .)
advcl(do, have)
det(boat, a)
obj(have, boat)
acl(boat, finance)
case(bank, through)
det(bank, a)
amod(bank, local)
obl(finance, bank)
aux:pass(do, be)
root(ROOT, do)
advmod(do, much)
det(way, the)
amod(way, same)
obl:tmod(do, way)
mark(extend, as)
det(loan, a)
compound(loan, automobile)
nsubj:pass(extend, loan)
aux:pass(extend, be)
advcl(do, extend)
punct(do, .)
compound(dealer, Marine)
nsubj(cooperate, dealer)
cc(manufacturer, and)
advmod(manufacturer, even)
det(manufacturer, some)
conj(dealer, manufacturer)
nsubj(sell, who)
acl:relcl(manufacturer, sell)
obj(sell, direct)
case(area, in)
amod(area, non-dealer)
obl(direct, area)
root(ROOT, cooperate)
mark(enable, in)
advcl(cooperate, enable)
obj(enable, you)
mark(launch, to)
xcomp(enable, launch)
advmod(launch, now)
cc(pay, and)
conj(launch, pay)
advmod(pay, later)
punct(range, .)
compound(range, term)
obj(pay, range)
case(year, from)
nummod(year, one)
case(five, to)
nmod(one, five)
nmod(range, year)
cc(run, and)
det(rate, the)
compound(rate, interest)
nsubj(run, rate)
cc(payment, and)
advmod(payment, down)
nsubj(run, payment)
conj(cooperate, run)
case(same, about)
det(same, the)
obl(run, same)
case(automobile, as)
case(automobile, for)
obl(run, automobile)
punct(cooperate, .)
advmod(depend, of)
fixed(of, course)
punct(depend, ,)
amod(arrangement, individual)
compound(arrangement, financing)
nsubj(depend, arrangement)
root(ROOT, depend)
det(deal, a)
amod(deal, good)
obj(depend, deal)
case(power, on)
det(purchaser, the)
nmod:poss(power, purchaser)
case(purchaser, 's)
compound(power, earning)
nmod(deal, power)
punct(rating, ,)
compound(rating, credit)
conj(power, rating)
cc(policy, and)
amod(policy, local)
compound(policy, bank)
conj(power, policy)
punct(depend, .)
compound(motor, Outboard)
nsubj:pass(finance, motor)
punct(insurance, ,)
conj(motor, insurance)
punct(repair, ,)
cc(repair, and)
compound(repair, boat)
conj(motor, repair)
aux(finance, may)
advmod(finance, also)
aux:pass(finance, be)
root(ROOT, finance)
case(way, in)
det(way, the)
amod(way, same)
obl(finance, way)
case(boat, as)
nmod(way, boat)
punct(term, .)
nsubj:pass(finance, term)
cc(rate, and)
conj(term, rate)
case(interest, of)
nmod(term, interest)
case(motor, for)
nmod(interest, motor)
advmod(follow, generally)
parataxis(term, follow)
obj(follow, those)
case(appliance, for)
compound(appliance, home)
nmod(those, appliance)
punct(finance, .)
mark(stage, when)
det(automobile, the)
nsubj(stage, automobile)
cop(stage, be)
case(stage, in)
nmod:poss(stage, its)
amod(stage, embryonic)
advcl(road, stage)
punct(road, ,)
amod(road, such)
nsubj(road, road)
mark(exist, as)
acl(road, exist)
cop(road, be)
advmod(much, pretty)
advmod(open, much)
amod(road, open)
root(ROOT, road)
case(understanding, with)
det(understanding, the)
amod(understanding, tacit)
nmod(road, understanding)
mark(terrify, that)
nsubj(terrify, horse)
aux(terrify, should)
advmod(terrify, not)
cop(terrify, be)
advmod(terrify, unduly)
acl(understanding, terrify)
cop(rule, be)
case(rule, about)
det(rule, the)
amod(rule, only)
xcomp(terrify, rule)
acl(rule, govern)
advmod(govern, where)
punct(rule, ,)
mark(rule, when)
cc(fast, and)
advmod(fast, how)
conj(when, fast)
det(car, a)
nsubj(go, car)
aux(go, could)
acl:relcl(fast, go)
punct(go, .)
mark(infancy, when)
compound(travel, air)
nsubj(infancy, travel)
cop(infancy, be)
case(infancy, in)
nmod:poss(infancy, its)
advcl(consider, infancy)
punct(consider, ,)
det(sky, the)
nsubj:pass(consider, sky)
aux:pass(consider, be)
parataxis(road, consider)
amod(enough, big)
xcomp(consider, enough)
cc(enough, and)
amod(enough, high)
conj(enough, enough)
case(all, for)
obl(enough, all)
punct(have, .)
nsubj(have, man)
conj(consider, have)
obj(have, enough)
mark(worry, to)
acl(enough, worry)
mark(manage, about)
advcl(worry, manage)
mark(get, to)
xcomp(manage, get)
compound:prt(get, up)
advmod(get, there)
cc(stay, and)
conj(get, stay)
mark(burden, without)
aux:pass(burden, be)
advcl(stay, burden)
case(rule, with)
obl(burden, rule)
advmod(aloft, once)
advmod(burden, aloft)
punct(consider, .)
nsubj(same, it)
cop(same, be)
advmod(same, much)
det(same, the)
root(ROOT, same)
case(boat, with)
compound(boat, pleasure)
obl(same, boat)
case(first, at)
nmod(boat, first)
punct(same, .)
root(ROOT, come)
obj(come, one)
punct(come, ,)
parataxis(come, come)
advmod(come, all)
punct(fine, ,)
det(water, the)
nmod:poss(fine, water)
case(water, 's)
parataxis(come, fine)
punct(come, !)
punct(come, !)
mark(long, as)
det(day, the)
amod(day, ungoverned)
nsubj(long, day)
case(automobile, of)
det(automobile, the)
nmod(day, automobile)
cc(airplane, and)
det(airplane, the)
conj(automobile, airplane)
cop(long, be)
advcl(attitude, long)
mark(relegate, since)
advcl(long, relegate)
case(past, to)
det(past, the)
obl(relegate, past)
punct(attitude, ,)
advmod(attitude, so)
cop(attitude, be)
det(attitude, the)
amod(attitude, carefree)
root(ROOT, attitude)
case(what, toward)
nmod(attitude, what)
det(boatman, a)
nsubj(may, boatman)
acl:relcl(what, may)
cc(do, and)
aux(do, may)
advmod(do, not)
acl:relcl(what, do)
punct(attitude, ;)
punct(must, ;)
aux(do, must)
cc(do, and)
aux(do, should)
conj(do, do)
punct(must, .)
advmod(be, however)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(minimum, a)
nsubj(be, minimum)
case(restriction, of)
amod(restriction, legislative)
nmod(minimum, restriction)
case(boat, on)
nmod(restriction, boat)
punct(be, .)
nsubj(vary, law)
case(boat, on)
nmod(law, boat)
root(ROOT, vary)
case(state, accord)
fixed(accord, to)
det(state, the)
obl(vary, state)
case(which, in)
obl(be, which)
det(craft, the)
nsubj(be, craft)
acl:relcl(state, be)
mark(use, to)
aux:pass(use, be)
xcomp(be, use)
cc(horsepower, and)
case(horsepower, accord)
fixed(accord, to)
nmod:poss(horsepower, its)
conj(use, horsepower)
punct(vary, .)
nsubj(acceptable, what)
aux(acceptable, may)
cop(acceptable, be)
advcl(prohibit, acceptable)
case(state, in)
nummod(state, one)
obl(acceptable, state)
aux(prohibit, may)
aux:pass(prohibit, be)
advmod(prohibit, strictly)
root(ROOT, prohibit)
case(line, across)
det(line, the)
compound(line, boundary)
obl(prohibit, line)
punct(prohibit, .)
det(requirement, the)
amod(requirement, main)
nsubj(be, requirement)
root(ROOT, be)
mark(sure, to)
cop(sure, be)
ccomp(be, sure)
det(boat, the)
nsubj:pass(number, boat)
aux:pass(number, be)
ccomp(sure, number)
case(regulation, accord)
fixed(accord, to)
det(regulation, the)
obl(number, regulation)
case(state, of)
det(state, the)
nmod(regulation, state)
case(which, in)
obl(use, which)
det(boat, the)
nsubj:pass(use, boat)
aux(use, will)
aux:pass(use, be)
advmod(use, principally)
acl:relcl(state, use)
punct(be, .)
mark(have, if)
nmod:poss(state, you)
nsubj(have, state)
advcl(apply, have)
det(provision, no)
obj(have, provision)
case(number, for)
det(number, the)
nmod(provision, number)
case(boat, of)
compound(boat, pleasure)
nmod(number, boat)
punct(apply, ,)
nsubj(apply, you)
aux(apply, must)
root(ROOT, apply)
case(number, for)
det(number, a)
obl(apply, number)
case(Guard, from)
det(Guard, the)
compound(Guard, U.S.)
compound(Guard, Coast)
nmod(number, Guard)
case(kind, for)
det(kind, any)
nmod(number, kind)
case(boat, of)
nmod(kind, boat)
case(propulsion, with)
amod(propulsion, mechanical)
nmod(kind, propulsion)
acl(propulsion, rate)
case(horsepower, at)
advmod(10, more)
fixed(more, than)
nummod(horsepower, 10)
obl(rate, horsepower)
mark(use, before)
nsubj:pass(use, it)
aux(use, can)
aux:pass(use, be)
advcl(rate, use)
case(waterway, on)
amod(waterway, federal)
obl(use, waterway)
punct(apply, .)
compound(number, state)
compound(law, number)
nsubj(differ, law)
root(ROOT, differ)
case(other, from)
det(other, each)
obl(differ, other)
case(way, in)
amod(way, many)
obl(differ, way)
punct(differ, .)
nsubj(same, fee)
cop(same, be)
advmod(same, not)
det(same, the)
root(ROOT, same)
cc(require, and)
det(state, some)
nsubj(require, state)
aux(require, do)
advmod(require, not)
conj(same, require)
amod(craft, certain)
obj(require, craft)
punct(craft, ,)
case(sailboat, such)
fixed(such, as)
nmod(craft, sailboat)
case(power, with)
det(power, no)
nmod(sailboat, power)
punct(require, ,)
mark(register, to)
aux:pass(register, be)
advcl(require, register)
case(all, at)
obl(register, all)
punct(same, .)
amod(state, many)
nsubj(have, state)
root(ROOT, have)
obj(have, law)
acl(law, regulate)
det(use, the)
obj(regulate, use)
case(trailer, of)
compound(trailer, boat)
nmod(use, trailer)
cc(have, and)
nsubj(have, some)
conj(have, have)
obj(have, restriction)
case(age, regard)
det(age, the)
nmod(restriction, age)
case(operator, of)
compound(boat, motor)
compound(operator, boat)
nmod(age, operator)
punct(have, .)
advmod(reserve, generally)
punct(reserve, ,)
nsubj(reserve, state)
root(ROOT, reserve)
case(community, for)
obl(reserve, community)
det(right, the)
obj(reserve, right)
mark(have, to)
acl(right, have)
amod(ordinance, local)
obj(have, ordinance)
acl(ordinance, regulate)
obj(regulate, speed)
cc(activity, and)
amod(activity, other)
conj(speed, activity)
punct(reserve, .)
expl(wise, it)
cop(wise, be)
advmod(wise, always)
root(ROOT, wise)
mark(consult, to)
csubj(wise, consult)
nmod:poss(dealer, you)
compound(dealer, marine)
obj(consult, dealer)
punct(dealer, ,)
amod(yacht, local)
conj(dealer, yacht)
cc(secretary, or)
compound(club, boat)
compound(secretary, club)
conj(dealer, secretary)
punct(officer, ,)
cc(officer, or)
amod(officer, local)
compound(enforcement, law)
compound(officer, enforcement)
conj(dealer, officer)
mark(positive, if)
nsubj(positive, you)
cop(positive, be)
advmod(positive, not)
advcl(consult, positive)
ccomp(positive, what)
det(regulation, the)
nsubj(what, regulation)
cop(what, be)
punct(wise, .)
nsubj(excuse, Ignorance)
case(law, of)
det(law, the)
nmod(Ignorance, law)
cop(excuse, be)
det(excuse, no)
amod(excuse, better)
root(ROOT, excuse)
case(water, on)
det(water, the)
nmod(excuse, water)
mark(land, than)
nsubj(land, it)
cop(land, be)
case(land, on)
advcl(excuse, land)
punct(excuse, ;)
punct(excuse, ;)
appos(excuse, lack)
case(ability, of)
nmod(lack, ability)
cc(sense, and)
amod(sense, common)
conj(ability, sense)
aux(lead, can)
conj(excuse, lead)
case(tragedy, to)
advmod(tragedy, just)
advmod(much, as)
amod(tragedy, much)
obl(lead, tragedy)
punct(excuse, .)
nsubj(program, Hand)
case(hand, in)
nmod(Hand, hand)
case(program, with)
det(program, the)
amod(program, legislative)
nmod(hand, program)
cop(program, be)
det(industry, the)
nmod:poss(program, industry)
case(industry, 's)
compound(originate, self)
amod(program, originate)
cc(direct, and)
conj(originate, direct)
compound(program, safety)
root(ROOT, program)
punct(program, .)
advcl(program, foresee)
det(threat, the)
amod(threat, possible)
obj(foresee, threat)
case(safety, to)
nmod(threat, safety)
case(growth, with)
det(growth, the)
amod(growth, rapid)
nmod(threat, growth)
case(sport, of)
det(sport, the)
nmod(growth, sport)
punct(support, ,)
det(industry, the)
nsubj(support, industry)
aux(support, have)
aux(support, be)
acl:relcl(sport, support)
det(program, a)
amod(program, intense)
punct(program, ,)
amod(program, coordinate)
amod(program, educational)
obj(support, program)
case(success, with)
amod(success, great)
nmod(program, success)
case(1947, since)
nmod(success, 1947)
punct(program, . )
det(factor, a)
amod(factor, primary)
nsubj(cooperation, factor)
case(success, in)
det(success, the)
nmod(factor, success)
case(program, of)
det(program, the)
compound(program, safety)
nmod(success, program)
aux(cooperation, have)
cop(cooperation, be)
det(cooperation, the)
amod(cooperation, enthusiastic)
root(ROOT, cooperation)
case(manufacturer, of)
det(manufacturer, the)
amod(manufacturer, individual)
nmod(cooperation, manufacturer)
punct(cooperation, .)
det(industry, the)
nsubj(dog, industry)
aux(dog, have)
cop(dog, be)
nmod:poss(dog, its)
amod(dog, own)
compound(dog, watch)
root(ROOT, dog)
punct(dog, .)
case(cooperation, with)
compound(Guard, U.S.)
compound(Guard, Coast)
compound(cooperation, Guard)
obl(form, cooperation)
punct(form, ,)
det(Boat, the)
compound(Boat, American)
nsubj:pass(form, Boat)
cc(Council, and)
compound(Council, Yacht)
conj(Boat, Council)
aux:pass(form, be)
root(ROOT, form)
mark(develop, to)
advcl(form, develop)
amod(practice, recommend)
obj(develop, practice)
cc(standard, and)
conj(practice, standard)
case(boat, for)
nmod(practice, boat)
cc(equipment, and)
nmod:poss(equipment, they)
conj(boat, equipment)
case(reference, with)
nmod(boat, reference)
case(safety, to)
nmod(reference, safety)
punct(form, .)
compound(interest, Industry)
nsubj(go, interest)
case(safety, in)
nmod(interest, safety)
root(ROOT, go)
advmod(farther, even)
advmod(go, farther)
punct(go, .)
case(1959, in)
obl(reorganize, 1959)
punct(reorganize, ,)
det(Bureau, the)
compound(Bureau, Yacht)
compound(Bureau, Safety)
nsubj:pass(reorganize, Bureau)
aux:pass(reorganize, be)
root(ROOT, reorganize)
case(Association, by)
det(Association, the)
compound(Association, National)
obl(reorganize, Association)
case(manufacturer, of)
compound(manufacturer, engine)
cc(Boat, and)
conj(engine, Boat)
nmod(Association, manufacturer)
cc(group, and)
det(group, a)
conj(Association, group)
case(underwriter, of)
compound(underwriter, insurance)
nmod(group, underwriter)
mark(provide, to)
acl(group, provide)
det(laboratory, a)
compound(laboratory, testing)
obj(provide, laboratory)
cc(service, and)
compound(service, label)
conj(laboratory, service)
case(boat, for)
obl(provide, boat)
cc(equipment, and)
nmod:poss(equipment, they)
conj(boat, equipment)
punct(reorganize, . )
det(site, a)
amod(site, new)
compound(site, waterfront)
nsubj:pass(build, site)
case(bureau, for)
det(bureau, the)
nmod(site, bureau)
aux(build, be)
advmod(build, now)
aux:pass(build, be)
root(ROOT, build)
case(City, at)
compound(City, Atlantic)
obl(build, City)
punct(City, ,)
compound(Jersey, New)
appos(City, Jersey)
punct(build, ,)
mark(provide, to)
advcl(build, provide)
det(facility, the)
advmod(modern, most)
amod(facility, modern)
compound(testing, marine)
compound(facility, testing)
obj(provide, facility)
case(tool, as)
det(tool, a)
amod(tool, further)
obl(provide, tool)
mark(keep, to)
acl(tool, keep)
det(sport, the)
obj(keep, sport)
xcomp(keep, safe)
punct(build, .)
case(addition, in)
obl(provide, addition)
case(activity, to)
det(activity, these)
nmod(addition, activity)
punct(provide, ,)
det(NAEBM, the)
nsubj(provide, NAEBM)
punct(NAEBM, ,)
case(headquarters, with)
nmod(NAEBM, headquarters)
case(Avenue, at)
nummod(Avenue, 420)
compound(Avenue, Lexington)
nmod(headquarters, Avenue)
punct(City, ,)
compound(York, New)
compound(City, York)
conj(Avenue, City)
punct(association, ,)
cc(association, as)
fixed(as, well)
fixed(as, as)
amod(association, other)
conj(NAEBM, association)
cc(manufacturer, and)
amod(manufacturer, individual)
conj(association, manufacturer)
punct(provide, ,)
root(ROOT, provide)
cc(distribute, and)
conj(provide, distribute)
obj(distribute, film)
punct(booklet, ,)
conj(film, booklet)
punct(service, ,)
cc(service, and)
amod(service, public)
conj(film, service)
case(regard, in)
obl(distribute, regard)
case(handling, to)
amod(handling, proper)
compound(handling, boat)
nmod(regard, handling)
cc(afloat, and)
compound(afloat, safety)
conj(handling, afloat)
punct(provide, .)
expl(important, it)
cop(important, be)
root(ROOT, important)
mark(note, to)
csubj(important, note)
det(work, the)
obj(note, work)
case(Squadrons, of)
det(Squadrons, the)
compound(States, United)
compound(Squadrons, States)
compound(Squadrons, Power)
nmod(work, Squadrons)
cc(Auxiliary, and)
det(Auxiliary, the)
compound(Auxiliary, U.S.)
compound(Guard, Coast)
compound(Auxiliary, Guard)
conj(Squadrons, Auxiliary)
punct(important, .)
nsubj(give, each)
case(group, of)
det(group, these)
amod(group, fine)
nmod(each, group)
root(ROOT, give)
amod(class, free)
compound(class, boat)
obj(give, class)
case(pilot, in)
compound(pilot, seamanship)
nmod(class, pilot)
cc(handling, and)
amod(handling, small)
compound(handling, boat)
conj(pilot, handling)
punct(give, .)
nsubj(organization, these)
cop(organization, be)
advmod(organization, not)
advmod(subsidize, governmentally)
amod(organization, subsidize)
root(ROOT, organization)
punct(organization, .)
det(year, this)
obl:tmod(receive, year)
punct(receive, ,)
advmod(100,000, over)
nummod(person, 100,000)
nsubj(receive, person)
aux(receive, will)
root(ROOT, receive)
det(instruction, this)
amod(instruction, free)
obj(receive, instruction)
punct(receive, .)
mark(responsible, as)
nsubj(responsible, America)
case(wheel, on)
nmod(America, wheel)
cop(responsible, be)
advcl(receive, responsible)
case(industry, for)
det(industry, a)
obl(responsible, industry)
case(court, of)
compound(court, motor)
nmod(industry, court)
punct(motel, ,)
conj(court, motel)
punct(drive, ,)
cc(drive, and)
conj(court, drive)
punct(drive, -)
case(establishment, in)
conj(court, establishment)
advmod(dine, where)
nsubj(dine, you)
aux(dine, can)
acl:relcl(establishment, dine)
punct(see, ,)
conj(dine, see)
det(movie, a)
obj(see, movie)
punct(shop, ,)
conj(movie, shop)
punct(make, ,)
cc(make, or)
conj(dine, make)
det(deposit, a)
compound(deposit, bank)
obj(make, deposit)
punct(make, ,)
det(number, the)
advmod(increase, ever)
punct(increase, -)
amod(number, increase)
nsubj(spark, number)
case(enthusiast, of)
compound(enthusiast, boat)
nmod(number, enthusiast)
aux(spark, have)
acl:relcl(deposit, spark)
obj(spark, industry)
acl(industry, design)
advmod(accommodate, especially)
mark(accommodate, to)
advcl(design, accommodate)
obj(accommodate, they)
punct(receive, .)
case(motel, instead)
fixed(instead, of)
obl(be, motel)
punct(be, ,)
case(boatman, for)
det(boatman, the)
obl(be, boatman)
expl(be, there)
root(ROOT, be)
nsubj(be, marinas)
punct(be, .)
det(word, the)
nsubj:pass(coin, word)
nsubj:pass(coin, marina)
aux:pass(coin, be)
root(ROOT, coin)
case(NAEBM, by)
obl(coin, NAEBM)
advmod(coin, originally)
mark(describe, to)
advcl(coin, describe)
det(facility, a)
compound(facility, waterfront)
obj(describe, facility)
advmod(find, where)
amod(boat, recreational)
nsubj(find, boat)
aux(find, could)
acl:relcl(facility, find)
obj(find, protection)
cc(need, and)
amod(need, basic)
conj(protection, need)
mark(lay, to)
acl(need, lay)
advmod(lay, over)
case(comfort, in)
amod(comfort, relative)
obl(lay, comfort)
punct(coin, .)
advmod(use, currently)
punct(use, ,)
nsubj:pass(use, marina)
aux:pass(use, be)
root(ROOT, use)
mark(indicate, to)
xcomp(use, indicate)
det(facility, a)
amod(facility, municipal)
cc(operate, or)
advmod(operate, commercially)
conj(municipal, operate)
obj(indicate, facility)
advmod(dock, where)
det(boat, a)
compound(boat, pleasure)
nsubj(dock, boat)
aux(dock, may)
acl:relcl(facility, dock)
cc(find, and)
conj(dock, find)
obj(find, some)
cc(all, or)
conj(some, all)
case(available, of)
det(available, the)
amod(available, follow)
nmod(some, available)
punct(gasoline, :)
appos(some, gasoline)
punct(water, ,)
amod(water, fresh)
conj(gasoline, water)
punct(electricity, ,)
conj(gasoline, electricity)
punct(service, ,)
compound(service, telephone)
conj(gasoline, service)
punct(ice, ,)
conj(gasoline, ice)
punct(facility, ,)
compound(facility, repair)
conj(gasoline, facility)
punct(restaurant, ,)
conj(gasoline, restaurant)
punct(accommodation, ,)
compound(accommodation, sleeping)
conj(gasoline, accommodation)
punct(store, ,)
det(store, a)
amod(store, general)
conj(gasoline, store)
punct(store, ,)
cc(store, and)
det(store, a)
compound(store, grocery)
conj(gasoline, store)
punct(store, .)
nsubj(indicate, Yachtel)
punct(Yachtel, ,)
det(word, a)
advmod(new, relatively)
amod(word, new)
appos(Yachtel, word)
punct(indicate, ,)
parataxis(use, indicate)
det(type, a)
compound(type, waterfront)
obj(indicate, type)
case(hotel, of)
nmod(type, hotel)
advmod(dock, where)
det(yachtsman, a)
nsubj(dock, yachtsman)
aux(dock, may)
acl:relcl(type, dock)
cc(find, and)
conj(dock, find)
amod(accommodation, overnight)
obj(find, accommodation)
case(premise, on)
det(premise, the)
obl(find, premise)
cc(service, as)
fixed(as, well)
fixed(as, as)
amod(service, other)
conj(accommodation, service)
punct(use, .)
nsubj(have, Boatel)
root(ROOT, have)
det(meaning, a)
amod(meaning, similar)
obj(have, meaning)
case(yachtel, to)
obl(have, yachtel)
punct(have, .)
nsubj(indicate, it)
root(ROOT, indicate)
det(thing, the)
amod(thing, same)
obj(indicate, thing)
cc(mean, but)
nsubj:pass(mean, it)
aux:pass(mean, be)
conj(indicate, mean)
mark(pertain, to)
xcomp(mean, pertain)
advmod(specifically, more)
advmod(pertain, specifically)
case(establishment, to)
obl(pertain, establishment)
acl(establishment, design)
mark(cater, to)
advcl(design, cater)
case(boat, to)
amod(type, smaller)
compound(boat, type)
obl(cater, boat)
case(outboard, such)
fixed(such, as)
nmod(boat, outboard)
punct(indicate, .)
advmod(marinas, regardless)
case(nomenclature, of)
obl(regardless, nomenclature)
punct(marinas, ,)
nsubj(marinas, yachtel)
cc(boatel, and)
conj(yachtel, boatel)
cop(marinas, be)
root(ROOT, marinas)
punct(marinas, .)
appos(marinas, Boatyards)
nsubj(provide, which)
advmod(provide, also)
acl:relcl(Boatyards, provide)
obj(provide, some)
case(facility, of)
det(facility, the)
amod(facility, above)
nmod(some, facility)
aux(call, may)
advmod(call, rightfully)
aux:pass(call, be)
ccomp(provide, call)
xcomp(call, marinas)
punct(marinas, . )
det(survey, a)
amod(survey, recent)
nsubj(be, survey)
acl(survey, disclose)
expl(be, there)
root(ROOT, be)
advmod(4,000, about)
obl:npmod(commercially, 4,000)
advmod(be, commercially)
cc(operate, and)
advmod(operate, municipally)
amod(marinas, operate)
nsubj(be, marinas)
cc(boatyard, and)
conj(marinas, boatyard)
case(States, in)
det(States, the)
compound(States, United)
nmod(marinas, States)
punct(States, ,)
det(majority, the)
appos(States, majority)
case(which, of)
obl(equip, which)
aux:pass(equip, be)
acl:relcl(majority, equip)
mark(handle, to)
xcomp(equip, handle)
compound(boat, outboard)
obj(handle, boat)
punct(be, .)
det(design, the)
nsubj(puzzle, design)
case(frame, of)
det(frame, a)
amod(frame, mechanical)
compound(frame, interlock)
nmod(design, frame)
cop(puzzle, be)
advmod(puzzle, much)
case(puzzle, like)
det(puzzle, a)
amod(puzzle, mechanical)
root(ROOT, puzzle)
punct(apply, ,)
cc(apply, but)
advmod(understand, once)
advcl(apply, understand)
punct(apply, ,)
det(principle, the)
nsubj:pass(apply, principle)
aux(apply, can)
aux:pass(apply, be)
conj(puzzle, apply)
case(track, to)
det(track, any)
obl(apply, track)
cc(arrangement, and)
compound(arrangement, signal)
conj(track, arrangement)
punct(puzzle, .)
case(frame, in)
det(frame, the)
nmod(set, frame)
cop(set, be)
nummod(set, two)
root(ROOT, set)
case(bar, of)
nmod(set, bar)
nsubj(interact, which)
acl:relcl(set, interact)
case(other, with)
det(other, each)
obl(interact, other)
mark(prevent, to)
advcl(interact, prevent)
det(operator, the)
obj(prevent, operator)
mark(make, from)
advcl(prevent, make)
amod(move, dangerous)
obj(make, move)
punct(set, .)
det(set, the)
amod(set, main)
nsubj(tappet, set)
case(bar, of)
nmod(set, bar)
cop(tappet, be)
det(tappet, the)
punct(tappet, ``)
root(ROOT, tappet)
punct(tappet, '')
cc(connect, and)
nummod(tappet, one)
nsubj:pass(connect, tappet)
aux:pass(connect, be)
conj(tappet, connect)
case(lever, to)
det(lever, each)
obl(connect, lever)
punct(tappet, .)
mark(pull, if)
det(lever, the)
nsubj:pass(pull, lever)
aux:pass(pull, be)
advcl(move, pull)
mark(clear, to)
xcomp(pull, clear)
det(signal, a)
obj(clear, signal)
cc(move, or)
conj(clear, move)
det(switch, a)
obj(move, switch)
punct(move, ,)
det(tappet, the)
nsubj(move, tappet)
root(ROOT, move)
det(lengthwise, a)
amod(lengthwise, short)
compound(lengthwise, distance)
obj(move, lengthwise)
case(time, at)
det(time, the)
amod(time, same)
obl(move, time)
punct(move, .)
csubj(bar, Close)
case(plane, behind)
det(plane, the)
obl(Close, plane)
case(tappet, of)
det(tappet, the)
nmod(plane, tappet)
cop(bar, be)
det(bar, the)
compound(bar, lock)
root(ROOT, bar)
punct(bar, .)
nsubj(move, these)
aux(move, can)
advmod(move, also)
root(ROOT, move)
det(distance, a)
amod(distance, short)
obj(move, distance)
cc(angles, but)
case(angles, at)
amod(angles, right)
conj(distance, angles)
case(tappet, to)
det(tappet, the)
nmod(angles, tappet)
punct(move, .)
det(number, the)
nsubj(depend, number)
case(bar, of)
compound(bar, lock)
nmod(number, bar)
acl(bar, require)
root(ROOT, depend)
mark(prevent, on)
advmod(many, how)
amod(move, many)
amod(move, false)
nsubj:pass(prevent, move)
aux(prevent, must)
aux:pass(prevent, be)
advcl(depend, prevent)
punct(depend, .)
case(side, in)
det(side, the)
obl(notch, side)
case(tappet, of)
det(tappet, the)
nmod(side, tappet)
cop(notch, be)
root(ROOT, notch)
case(side, with)
amod(side, sloping)
nmod(notch, side)
punct(consist, ,)
cc(consist, and)
nsubj(consist, connection)
case(tappet, between)
det(tappet, the)
nmod(connection, tappet)
cc(bar, and)
compound(bar, lock)
conj(tappet, bar)
conj(notch, consist)
case(cam, of)
obl(consist, cam)
acl(cam, call)
punct(dog, ``)
xcomp(call, dog)
punct(dog, '')
punct(mount, .)
nummod(dog, two)
cc(more, or)
conj(two, more)
nsubj:pass(mount, dog)
aux:pass(mount, be)
acl:relcl(cam, mount)
case(bar, on)
det(bar, each)
compound(bar, lock)
obl(mount, bar)
punct(mount, .)
nsubj(slide, these)
root(ROOT, slide)
case(notch, into)
cc(notch, and)
case(notch, out)
case(notch, of)
det(notch, the)
obl(slide, notch)
case(tappet, in)
det(tappet, the)
obl(slide, tappet)
mark(move, as)
det(tappet, the)
nsubj:pass(move, tappet)
aux:pass(move, be)
advcl(slide, move)
punct(lock, ,)
conj(move, lock)
cc(unlock, and)
conj(lock, unlock)
obj(unlock, they)
punct(slide, .)
root(ROOT, here)
cop(here, be)
advmod(work, how)
det(scheme, the)
nsubj(work, scheme)
nsubj(here, work)
punct(here, :)
root(ROOT, suppose)
det(operator, the)
nsubj(pull, operator)
ccomp(suppose, pull)
det(lever, the)
obj(pull, lever)
mark(clear, to)
advcl(pull, clear)
det(signal, a)
amod(signal, particular)
obj(clear, signal)
punct(suppose, .)
nsubj(pull, this)
advmod(pull, also)
root(ROOT, pull)
det(tappet, the)
obj(pull, tappet)
xcomp(pull, connect)
case(lever, to)
det(lever, the)
amod(lever, particular)
obl(connect, lever)
cc(force, and)
conj(lever, force)
det(dog, any)
appos(force, dog)
acl(dog, seat)
case(notch, in)
det(notch, the)
obl(seat, notch)
case(side, to)
det(side, the)
nmod(notch, side)
punct(pull, ,)
advmod(move, thus)
conj(seat, move)
nummod(bar, one)
cc(more, or)
conj(one, more)
compound(bar, lock)
obj(move, bar)
punct(pull, .)
det(dog, the)
nsubj:pass(force, dog)
case(end, on)
det(end, the)
amod(end, other)
nmod(dog, end)
case(bar, of)
det(bar, these)
compound(bar, lock)
nmod(end, bar)
aux:pass(force, be)
advmod(force, thus)
root(ROOT, force)
case(notch, into)
obl(force, notch)
case(tappet, in)
amod(tappet, other)
obl(force, tappet)
punct(force, .)
case(scheme, by)
det(scheme, this)
obl(lock, scheme)
punct(lock, ,)
advcl(lock, pull)
nummod(signal, one)
obj(pull, signal)
mark(clear, to)
advcl(pull, clear)
root(ROOT, lock)
det:predet(switch, all)
det(switch, the)
amod(switch, other)
obj(lock, switch)
cc(lever, and)
compound(lever, signal)
conj(switch, lever)
case(position, in)
amod(position, safe)
obl(lock, position)
mark(restore, until)
det(signal, the)
amod(signal, first)
nsubj:pass(restore, signal)
aux:pass(restore, be)
advmod(restore, again)
advcl(lock, restore)
case(normal, to)
obl(restore, normal)
punct(lock, .)
compound(signal, interlock)
nsubj(stop, signal)
cop(stop, be)
advmod(stop, normally)
case(stop, at)
root(ROOT, stop)
cc(position, or)
punct(position, ``)
amod(position, red)
punct(position, '')
conj(stop, position)
punct(pull, ,)
cc(pull, and)
det(lever, a)
nsubj:pass(pull, lever)
aux(pull, must)
aux:pass(pull, be)
conj(stop, pull)
mark(clear, to)
punct(clear, ``)
advcl(pull, clear)
punct(clear, '')
det(signal, the)
obj(clear, signal)
punct(stop, .)
nsubj(green, this)
cop(green, be)
advmod(green, not)
advmod(green, necessarily)
case(green, to)
root(ROOT, green)
punct(green, ,)
advmod(give, however)
punct(give, ,)
case(situation, for)
case(situation, in)
det(situation, some)
obl(give, situation)
advmod(indication, only)
det(indication, a)
amod(indication, yellow)
nsubj:pass(give, indication)
aux:pass(give, be)
conj(green, give)
case(train, to)
det(train, a)
obl(give, train)
mark(let, to)
acl(train, let)
obj(let, it)
case(plant, into)
det(plant, the)
punct(plant, ``)
obl(let, plant)
punct(plant, '')
punct(be, .)
expl(be, there)
advcl(let, be)
amod(rule, other)
amod(rule, basic)
nsubj(be, rule)
punct(green, . )
det(turnout, a)
nsubj(have, turnout)
aux(have, may)
root(ROOT, have)
nummod(lever, two)
obj(have, lever)
punct(lever, ,)
appos(lever, one)
mark(move, to)
advmod(move, actually)
acl(one, move)
det(point, the)
compound(point, switch)
obj(move, point)
punct(point, ,)
det(other, the)
appos(point, other)
mark(lock, to)
advcl(move, lock)
det(point, the)
obj(lock, point)
punct(have, . )
det(signal, a)
nsubj:pass(clear, signal)
aux(clear, can)
advmod(clear, not)
aux:pass(clear, be)
root(ROOT, clear)
case(turnout, until)
det:predet(turnout, all)
det(turnout, the)
amod(turnout, related)
obl(clear, turnout)
aux:pass(throw, be)
advmod(throw, properly)
conj(clear, throw)
cc(lock, and)
conj(throw, lock)
punct(clear, .)
amod(lock, such)
nsubj:pass(use, lock)
aux:pass(use, be)
advmod(always, nearly)
advmod(use, always)
root(ROOT, use)
mark(face, where)
det(point, the)
compound(point, switch)
nsubj(face, point)
punct(face, ``)
advcl(use, face)
punct(face, '')
amod(traffic, oncoming)
obj(face, traffic)
punct(use, .)
det(lock, the)
nsubj(insure, lock)
root(ROOT, insure)
mark(throw, that)
det(point, the)
nsubj:pass(throw, point)
aux:pass(throw, be)
ccomp(insure, throw)
det:predet(way, all)
det(way, the)
obj(throw, way)
case(chance, with)
det(chance, no)
obl(throw, chance)
mark(snag, that)
det(flange, a)
compound(flange, wheel)
nsubj(snag, flange)
aux(snag, will)
acl(chance, snag)
case(point, on)
det(point, a)
advmod(throw, partly)
amod(point, throw)
obl(snag, point)
punct(insure, .)
mark(throw, if)
det(point, the)
nsubj:pass(throw, point)
aux:pass(throw, be)
advmod(throw, not)
advcl(lock, throw)
det:predet(way, all)
det(way, the)
obl:tmod(throw, way)
punct(lock, ,)
det(turnout, the)
nsubj:pass(lock, turnout)
aux(lock, can)
advmod(lock, not)
aux:pass(lock, be)
root(ROOT, lock)
punct(clear, ,)
cc(clear, and)
case(turn, in)
obl(clear, turn)
punct(clear, ,)
det(signal, the)
nsubj:pass(clear, signal)
aux(clear, can)
advmod(clear, not)
aux:pass(clear, be)
conj(lock, clear)
punct(lock, .)
advmod(call, generally)
punct(call, ,)
det(lock, these)
nsubj:pass(call, lock)
case(turnout, on)
nmod(lock, turnout)
aux:pass(call, be)
root(ROOT, call)
punct(face, ``)
advcl(call, face)
compound(lock, point)
obj(face, lock)
punct(face, '')
punct(face, .)
obj(call, Figs)
punct(call, .)
root(ROOT, 1)
punct(1, -)
nummod(show, 6)
compound(arrangement, show)
amod(arrangement, typical)
appos(1, arrangement)
case(track, of)
nmod(arrangement, track)
cc(signal, and)
conj(track, signal)
punct(1, .)
det(diagram, each)
nsubj:pass(accompany, diagram)
aux:pass(accompany, be)
root(ROOT, accompany)
case(chart, by)
det(chart, a)
punct(chart, ``)
compound(chart, dog)
obl(accompany, chart)
punct(chart, '')
punct(chart, ,)
det(list, a)
appos(chart, list)
case(lever, of)
det(lever, the)
nmod(list, lever)
nsubj(show, that)
acl:relcl(lever, show)
det(other, which)
nsubj(lever, other)
ccomp(show, lever)
det(lever, any)
amod(lever, particular)
obj(lever, lever)
aux(lock, will)
ccomp(show, lock)
mark(pull, if)
advcl(lock, pull)
punct(accompany, .)
det(line, the)
nsubj(represent, line)
acl(line, connect)
det(dog, the)
obl:npmod(shape, wedge)
punct(shape, -)
amod(dog, shape)
obj(connect, dog)
root(ROOT, represent)
det(bar, the)
compound(bar, lock)
obj(represent, bar)
case(angles, at)
amod(angles, right)
nmod(bar, angles)
case(bar, to)
det(bar, the)
compound(bar, tappet)
nmod(angles, bar)
punct(represent, .)
mark(study, by)
advcl(note, study)
det(diagram, the)
compound(signal, track)
punct(signal, -)
compound(diagram, signal)
obj(study, diagram)
nsubj(note, you)
aux(note, will)
root(ROOT, note)
amod(detail, several)
amod(detail, other)
obj(note, detail)
punct(note, .)
root(ROOT, derail)
punct(derail, --)
amod(device, mechanical)
compound(device, track)
obj(derail, device)
nsubj(guide, that)
advmod(guide, actually)
acl:relcl(device, guide)
det(wheel, the)
obj(guide, wheel)
case(rail, off)
det(rail, the)
obl(guide, rail)
mark(pass, if)
det(train, a)
nsubj(pass, train)
advcl(guide, pass)
det(signal, a)
punct(signal, ``)
compound(signal, stop)
punct(signal, '')
obj(pass, signal)
punct(use, --)
aux:pass(use, be)
parataxis(pass, use)
case(instance, in)
amod(instance, many)
obl(use, instance)
punct(derail, .)
punct(derail, ``)
compound(signal, home)
punct(signal, '')
nsubj(have, signal)
root(ROOT, have)
nummod(blade, two)
obj(have, blade)
punct(have, .)
det(blade, the)
csubj(indicate, black)
punct(black, -)
case(blade, in)
nmod(black, blade)
root(ROOT, indicate)
det(aspect, a)
amod(aspect, fix)
obj(indicate, aspect)
punct(indicate, --)
det(blade, the)
nsubj(move, blade)
aux(move, do)
advmod(move, not)
parataxis(indicate, move)
punct(indicate, .)
mark(approach, as)
det(engineer, a)
nsubj(approach, engineer)
advcl(see, approach)
det(plant, the)
obj(approach, plant)
det(position, the)
nsubj:pass(see, position)
case(signal, of)
det(signal, the)
compound(signal, home)
nmod(position, signal)
aux:pass(see, be)
root(ROOT, see)
case(advance, in)
obl(see, advance)
mark(pass, when)
nsubj(pass, he)
advcl(see, pass)
det(signal, the)
punct(signal, ``)
amod(signal, distant)
punct(signal, '')
obj(pass, signal)
acl(signal, locate)
case(limit, beyond)
det(limit, the)
obl(locate, limit)
case(plant, of)
det(plant, the)
compound(plant, interlock)
nmod(limit, plant)
punct(see, .)
case(situation, in)
det(situation, some)
amod(speed, low)
punct(speed, -)
compound(situation, speed)
obl(fix, situation)
punct(fix, ,)
det(signal, the)
amod(signal, distant)
nsubj:pass(fix, signal)
aux:pass(fix, be)
root(ROOT, fix)
case(caution, at)
obl(fix, caution)
punct(fix, .)
case(instance, in)
amod(instance, other)
obl(have, instance)
advmod(be, where)
expl(be, there)
acl:relcl(instance, be)
det(signal, no)
amod(block, automatic)
compound(signal, block)
nsubj(be, signal)
punct(have, ,)
det(distant, the)
nsubj(have, distant)
root(ROOT, have)
advmod(aspect, only)
amod(aspect, green)
cc(yellow, and)
conj(green, yellow)
obj(have, aspect)
punct(have, .)
advmod(much, so)
root(ROOT, much)
case(prototype, for)
det(prototype, the)
obl(much, prototype)
punct(much, .)
det(frame, the)
compound(frame, interlock)
nsubj(follow, frame)
nsubj(build, we)
acl:relcl(frame, build)
case(workshop, at)
det(workshop, the)
compound(workshop, model)
compound(workshop, railroader)
obl(build, workshop)
cc(install, and)
advmod(install, then)
conj(build, install)
case(railroad, on)
nmod:poss(railroad, Paul)
flat(Paul, Larson)
case(Paul, 's)
obl(install, railroad)
root(ROOT, follow)
det(scheme, the)
compound(scheme, Fig.)
nummod(Fig., 1)
obj(follow, scheme)
cc(show, and)
aux:pass(show, be)
conj(follow, show)
advcl(show, begin)
case(Fig., in)
obl(begin, Fig.)
nummod(Fig., 7)
punct(Fig., ,)
appos(Fig., page)
nummod(page, 65)
punct(photo, ,)
cc(photo, and)
case(photo, in)
det(photo, the)
conj(Fig., photo)
punct(follow, .)
root(ROOT, here)
cop(here, be)
advmod(build, how)
nsubj:pass(build, it)
aux(build, can)
aux:pass(build, be)
csubj(here, build)
punct(here, .)
root(ROOT, Frame)
det(size, the)
obj(Frame, size)
case(piece, of)
nmod(size, piece)
acl(piece, need)
case(frame, for)
det(frame, the)
compound(frame, interlock)
obl(need, frame)
aux:pass(show, be)
parataxis(Frame, show)
case(note, in)
det(note, the)
obl(show, note)
case(Fig., within)
nmod(note, Fig.)
nummod(Fig., 7)
punct(show, ,)
nsubj:pass(show, most)
case(bar, of)
det(bar, the)
nmod(most, bar)
cop(8, be)
compound(8, 1)
punct(8, /)
nummod(brass, 8)
punct(brass, '')
punct(brass, '')
appos(most, brass)
case(4, in)
compound(4, 1)
punct(4, /)
nmod(brass, 4)
punct(4, ')
punct(brass, ')
punct(brass, '')
cc(width, and)
compound(2, 1)
punct(2, /)
nummod(width, 2)
punct(2, '')
punct(width, '')
conj(brass, width)
punct(Frame, .)
nsubj(change, you)
aux(change, may)
root(ROOT, change)
det(dimension, the)
obj(change, dimension)
mark(suit, to)
acl(dimension, suit)
det(frame, a)
obj(suit, frame)
case(lever, for)
amod(lever, more)
cc(fewer, or)
conj(more, fewer)
obl(suit, lever)
cc(lock, and)
conj(lever, lock)
mark(wish, as)
nsubj(wish, you)
advcl(suit, wish)
punct(change, .)
nmod:poss(instruction, we)
nsubj(assume, instruction)
root(ROOT, assume)
nsubj(build, you)
aux(build, be)
ccomp(assume, build)
det(frame, this)
amod(frame, particular)
obj(build, frame)
punct(frame, ,)
nsubj(junction, which)
cop(junction, be)
case(junction, for)
det(junction, a)
acl:relcl(frame, junction)
punct(junction, .)
mark(cut, when)
advcl(build, cut)
det(piece, the)
obj(cut, piece)
punct(dress, ,)
conj(cut, dress)
det(end, the)
obj(dress, end)
xcomp(dress, smooth)
punct(square, ,)
cc(square, and)
conj(dress, square)
case(file, with)
det(file, a)
amod(file, smooth)
nmod(square, file)
cc(disk, or)
compound(disk, sand)
conj(file, disk)
punct(assume, .)
root(ROOT, start)
case(piece, with)
det(piece, the)
amod(hand, right)
punct(hand, -)
compound(piece, hand)
obl(start, piece)
punct(b, ``)
appos(piece, b)
punct(b, '')
punct(b, ,)
appos(piece, Af)
punct(start, ,)
conj(start, solder)
obj(solder, it)
case(piece, to)
det(piece, the)
amod(piece, lower)
obl(solder, piece)
punct(a, ``)
appos(piece, a)
punct(a, '')
case(material, of)
det(material, the)
amod(material, same)
nmod(a, material)
cc(12, but)
conj(material, 12)
punct(12, '')
punct(12, '')
advmod(material, long)
punct(start, .)
root(ROOT, let)
advmod(1, exactly)
obj(let, 1)
punct(1, '')
punct(let, '')
obl(let, of)
punct(let, ``)
det(extend, a)
punct(extend, '')
nsubj(beyond, extend)
root(ROOT, beyond)
punct(beyond, ``)
root(ROOT, B)
punct(B, '')
cc(use, and)
conj(B, use)
det(square, a)
obj(use, square)
mark(check, to)
acl(square, check)
nmod:poss(angle, you)
obj(check, angle)
case(degree, to)
advmod(90, exactly)
nummod(degree, 90)
obl(check, degree)
punct(B, .)
advmod(lay, now)
root(ROOT, lay)
nummod(piece, 12)
obj(lay, piece)
case(Af, of)
nmod(piece, Af)
acl(piece, cut)
compound(4, 5)
case(3, -)
nmod(5, 3)
punct(4, /)
obj(cut, 4)
punct(4, '')
punct(side, '')
amod(side, long)
obj(lay, side)
case(side, by)
nmod(side, side)
cc(separate, but)
conj(lay, separate)
case(piece, by)
nummod(piece, 12)
obl(separate, piece)
case(material, of)
det(material, the)
amod(material, same)
nmod(piece, material)
compound(2, 1)
punct(2, /)
nummod(material, 2)
punct(material, '')
punct(sq., '')
nmod(piece, sq.)
punct(lay, .)
nsubj(give, this)
root(ROOT, give)
iobj(give, you)
det(space, the)
obj(give, space)
mark(locate, for)
acl(space, locate)
det(piece, the)
amod(piece, leave)
punct(hand, -)
compound(piece, hand)
obj(locate, piece)
punct(b, ``)
appos(piece, b)
punct(b, '')
punct(Compress, .)
parataxis(give, Compress)
det(assembly, the)
obj(Compress, assembly)
mark(make, when)
nsubj(make, you)
advcl(Compress, make)
det(mark, the)
obj(make, mark)
mark(show, to)
xcomp(make, show)
det(location, the)
obj(show, location)
case(b, for)
punct(b, ``)
obl(show, b)
punct(b, '')
punct(solder, .)
parataxis(give, solder)
det(b, this)
amod(b, second)
punct(b, ``)
obj(solder, b)
punct(b, '')
obl(solder, to)
punct(solder, ``)
det(angles, a)
punct(angles, '')
case(angles, at)
amod(angles, right)
root(ROOT, angles)
punct(angles, .)
expl(be, there)
aux(be, should)
root(ROOT, be)
nsubj(be, 10)
punct(10, '')
punct(10, '')
case(member, between)
det(member, the)
nummod(member, two)
amod(member, parallel)
nmod(10, member)
cc(1, and)
nsubj(1, each)
aux(1, should)
cop(1, be)
conj(member, 1)
punct(1, '')
punct(1, '')
case(end, from)
det(end, a)
obl(be, end)
case(piece, of)
det(piece, the)
amod(piece, long)
nmod(end, piece)
punct(be, .)
root(ROOT, cap)
det(assembly, this)
obj(cap, assembly)
punct(bar, ()
case(bar, with)
amod(bar, space)
obl(cap, bar)
case(place, in)
nmod(bar, place)
punct(bar, ))
case(bar, with)
det(bar, a)
compound(bar, Af)
obl(cap, bar)
punct(solder, .)
nsubj(solder, tack)
punct(solder, -)
parataxis(cap, solder)
det:predet(/2'', all)
det(/2'', the)
nummod(/2'', 1)
obj(solder, /2'')
punct(piece, '')
compound(piece, sq.)
appos(/2'', piece)
case(10, to)
det(10, the)
nmod(piece, 10)
punct(piece, '')
punct(piece, '')
cc(member, and)
nummod(member, 12)
punct(member, '')
punct(member, '')
nmod(piece, member)
punct(cap, .)
nsubj:pass(drill, these)
aux(drill, will)
aux:pass(drill, be)
root(ROOT, drill)
cc(tap, and)
conj(drill, tap)
advmod(on, later)
advmod(tap, on)
punct(drill, .)
advmod(cut, now)
conj(drill, cut)
obj(cut, five)
compound(lock, Af)
compound(spacer, lock)
compound(spacer, bar)
root(ROOT, spacer)
punct(run, ()
nsubj(run, which)
parataxis(spacer, run)
advmod(run, horizontally)
punct(run, ))
punct(spacer, .)
root(ROOT, position)
obj(position, these)
xcomp(position, use)
nummod(temporary, six)
amod(temporary, intermediate)
obj(use, temporary)
compound(spacer, Af)
root(ROOT, spacer)
cc(locate, and)
conj(spacer, locate)
det(bar, the)
amod(bar, upper)
nummod(bar, 12)
punct(bar, '')
punct(bar, '')
obj(locate, bar)
punct(spacer, ``)
nummod(solder, a)
punct(solder, '')
punct(solder, .)
root(ROOT, solder)
obj(solder, it)
cc(spacer, and)
det(spacer, the)
nummod(lock, five)
compound(spacer, lock)
compound(spacer, bar)
conj(solder, spacer)
case(frame, to)
det(frame, the)
nmod(spacer, frame)
punct(solder, .)
advmod(place, now)
root(ROOT, place)
nummod(piece, 12)
obj(place, piece)
compound(2, 1)
punct(2, /)
nummod(piece, 2)
punct(sq., '')
punct(sq., '')
obj(place, sq.)
case(edge, on)
det(edge, this)
nmod(sq., edge)
mark(do, as)
nsubj(do, we)
advcl(place, do)
advmod(do, before)
cc(space, and)
conj(place, space)
obj(space, they)
case(4, with)
det(4, the)
compound(4, 5)
punct(4, -)
compound(4, 3)
punct(4, /)
nummod(tappet, 4)
punct(tappet, '')
punct(tappet, '')
amod(tappet, long)
punct(tappet, ``)
obl(space, tappet)
punct(tappet, '')
punct(tappet, ,)
mark(call, as)
nsubj:pass(call, they)
aux:pass(call, be)
advcl(space, call)
punct(place, .)
root(ROOT, cap)
case(bar, with)
det(bar, a)
compound(bar, Af)
nmod(cap, bar)
cc(solder, and)
compound(solder, tack)
punct(solder, -)
conj(bar, solder)
case(place, in)
nmod(bar, place)
punct(cap, .)
root(ROOT, cap)
det(spacer, the)
compound(spacer, lock)
compound(spacer, bar)
obj(cap, spacer)
case(Af, with)
nummod(Af, two)
obl(cap, Af)
advmod(cap, directly)
case(piece, under)
det(piece, the)
amod(piece, first)
nummod(piece, two)
punct(b, ``)
compound(piece, b)
punct(b, '')
obl(cap, piece)
punct(cap, .)
root(ROOT, remove)
det:predet(bar, all)
det(bar, the)
amod(bar, loose)
compound(bar, space)
obj(remove, bar)
punct(remove, .)
vocative(punch, Mark)
cc(center, and)
conj(Mark, center)
punct(punch, -)
root(ROOT, punch)
det:predet(hole, all)
det(hole, the)
obj(punch, hole)
acl(hole, require)
case(screw, for)
obl(require, screw)
mark(hold, to)
advcl(require, hold)
det(assembly, this)
obj(hold, assembly)
compound:prt(hold, together)
punct(punch, .)
root(ROOT, see)
obj(see, Fig.)
nummod(Fig., 7)
punct(see, .)
nsubj(critical, placement)
case(hole, of)
det(hole, these)
nmod(placement, hole)
cop(critical, be)
advmod(critical, not)
parataxis(see, critical)
punct(locate, ,)
cc(locate, but)
nsubj:pass(locate, they)
aux(locate, should)
aux:pass(locate, be)
conj(critical, locate)
mark(8, so)
fixed(so, that)
det(center, the)
nsubj(8, center)
cop(8, be)
advmod(8, about)
nummod(8, 1)
punct(8, /)
advcl(locate, 8)
punct(8, '')
punct(8, '')
case(edge, from)
det(edge, any)
nmod(Drill, edge)
punct(Drill, .)
appos(8, Drill)
det(no., all)
appos(Drill, no.)
nummod(no., 50)
cc(drill, and)
compound(drill, counter)
punct(drill, -)
conj(no., drill)
advmod(drill, all)
case(the, except)
nmod(Drill, the)
punct(Drill, ``)
det(piece, a)
punct(piece, '')
nsubj(tap, piece)
compound(piece, size)
nummod(size, 43)
punct(tap, .)
root(ROOT, tap)
det(piece, the)
punct(piece, ``)
compound(piece, a)
punct(piece, '')
obj(tap, piece)
nummod(piece, 2)
case(56, -)
nmod(2, 56)
punct(tap, .)
advmod(unsolder, now)
root(ROOT, unsolder)
cc(disassemble, and)
conj(unsolder, disassemble)
det(frame, the)
obj(disassemble, frame)
case(12, except)
case(12, for)
det(12, the)
compound(12, two)
obl(disassemble, 12)
punct(12, '')
punct(12, '')
cc(bar, and)
det(bar, the)
amod(bar, first)
nummod(bar, two)
nummod(bar, 3)
case(3, -)
nmod(3, 3)
punct(4, /)
nmod(3, 4)
punct(4, '')
punct(bar, '')
obj(disassemble, bar)
punct(a, ()
punct(a, ``)
appos(bar, a)
punct(a, '')
cc(a, and)
punct(a, ``)
root(ROOT, b)
punct(piece, '')
appos(b, piece)
punct(piece, ))
punct(piece, ,)
nsubj:pass(solder, which)
aux:pass(solder, be)
acl:relcl(piece, solder)
advmod(solder, together)
punct(b, .)
cc:preconj(lay, either)
root(ROOT, lay)
det(component, the)
obj(lay, component)
advmod(lay, aside)
case(order, in)
amod(order, proper)
obl(lay, order)
cc(code, or)
conj(lay, code)
obj(code, they)
case(number, with)
obl(code, number)
cc(letter, and)
conj(number, letter)
advmod(replace, so)
nsubj:pass(replace, they)
aux(replace, may)
aux:pass(replace, be)
conj(lay, replace)
case(position, in)
nmod:poss(position, they)
amod(position, proper)
obl(replace, position)
punct(lay, .)
root(ROOT, dress)
det(surface, all)
obj(dress, surface)
case(file, with)
det(file, a)
obl(dress, file)
punct(dress, ,)
conj(dress, clean)
compound:prt(clean, off)
det(burr, all)
compound(burr, solder)
cc(drilling, and)
conj(solder, drilling)
obj(clean, burr)
punct(Drill, .)
compound(hole, Drill)
nummod(no., 20)
compound(hole, no.)
nummod(no., 47)
obj(clean, hole)
case(piece, in)
det(piece, the)
amod(piece, upper)
nmod(hole, piece)
punct(dress, ``)
det(show, a)
punct(show, '')
mark(show, as)
root(ROOT, show)
case(fig, in)
obl(show, fig)
punct(show, .)
nummod(tap, 7)
punct(7, .)
root(ROOT, tap)
det(3-48, these)
obj(tap, 3-48)
mark(mount, for)
advcl(tap, mount)
det(contact, the)
amod(contact, electrical)
obj(mount, contact)
advmod(mount, later)
case(note, on)
punct(note, .)
obl(mount, note)
punct(note, ,)
appos(note, 6)
cc(lever, and)
conj(6, 8)
compound(lever, lock)
nsubj(require, lever)
aux(require, do)
advmod(require, not)
conj(tap, require)
obj(require, hole)
case(contact, for)
nmod(hole, contact)
punct(tap, .)
advmod(reassemble, now)
root(ROOT, reassemble)
det(frame, the)
obj(reassemble, frame)
punct(reassemble, ,)
advcl(reassemble, use)
compound(screw, Af)
compound(screw, roundhead)
compound(screw, steel)
obj(use, screw)
cc(nut, and)
conj(screw, nut)
punct(reassemble, .)
root(ROOT, put)
det(tappet, the)
nummod(tappet, 12)
obj(put, tappet)
cc(some, and)
conj(tappet, some)
compound(lock, Af)
compound(spacer, lock)
compound(spacer, bar)
root(ROOT, spacer)
case(frame, in)
det(frame, the)
nmod(spacer, frame)
mark(help, to)
acl(spacer, help)
xcomp(help, align)
det:predet(component, all)
det(component, the)
obj(align, component)
mark(tighten, before)
nsubj(tighten, you)
advcl(align, tighten)
det(screw, the)
obj(tighten, screw)
punct(spacer, .)
cop(sure, be)
root(ROOT, sure)
det(tappet, the)
nsubj:pass(pinch, tappet)
aux:pass(pinch, be)
advmod(pinch, not)
ccomp(sure, pinch)
case(spacer, by)
det(spacer, a)
amod(spacer, twist)
nummod(2, 1)
punct(2, /)
compound(spacer, 2)
punct(2, '')
punct(spacer, '')
compound(spacer, sq.)
obl(pinch, spacer)
punct(sure, .)
case(anchor, as)
det(anchor, a)
obl(insert, anchor)
case(lock, for)
det(lock, the)
compound(lock, spring)
nmod(anchor, lock)
punct(insert, ,)
root(ROOT, insert)
det(bar, a)
compound(bar, Af)
obj(insert, bar)
case(corner, in)
det(corner, the)
amod(corner, lower)
amod(corner, leave)
obl(insert, corner)
case(frame, of)
det(frame, the)
nmod(corner, frame)
mark(show, as)
advcl(insert, show)
case(fig, in)
obl(show, fig)
punct(insert, .)
nummod(Drill, 7)
punct(7, .)
root(ROOT, Drill)
det(hole, a)
compound(hole, no.)
nummod(no., 43)
obj(Drill, hole)
case(piece, through)
det(piece, the)
obl(Drill, piece)
cc(secure, and)
conj(Drill, secure)
case(nut, with)
det(nut, a)
compound(56, 2)
punct(56, -)
nummod(nut, 56)
obl(secure, nut)
cc(screw, and)
conj(nut, screw)
punct(nut, .)
conj(nut, Drill)
nummod(no., two)
compound(hole, no.)
nummod(no., 50)
conj(nut, hole)
punct(hole, ,)
appos(hole, one)
case(insert, in)
det(insert, the)
nmod(one, insert)
cc(one, and)
conj(one, one)
case(spacer, in)
det(spacer, the)
compound(spacer, lock)
compound(spacer, bar)
nmod(one, spacer)
advmod(it, directly)
case(it, above)
nmod(spacer, it)
punct(tap, ,)
cc(tap, and)
conj(Drill, tap)
obj(tap, 2)
case(56, -)
nmod(2, 56)
punct(Drill, .)
root(ROOT, number)
det:predet(bar, all)
det(bar, the)
compound(bar, tappet)
obj(number, bar)
mark(remove, before)
advcl(number, remove)
obj(remove, they)
mark(replace, so)
nsubj:pass(replace, they)
aux(replace, can)
aux:pass(replace, be)
advcl(remove, replace)
case(slot, in)
det(slot, the)
amod(slot, same)
obl(replace, slot)
punct(number, .)
root(ROOT, remove)
det(piece, all)
amod(piece, other)
amod(piece, loose)
obj(remove, piece)
cc(file, and)
conj(remove, file)
det(edge, the)
obj(file, edge)
case(smooth, of)
det(smooth, the)
amod(frame, basic)
compound(smooth, frame)
nmod(edge, smooth)
punct(remove, .)
root(ROOT, cut)
nummod(piece, five)
obj(cut, piece)
case(stock, of)
compound(brass, Af)
compound(stock, brass)
compound(stock, bar)
appos(piece, stock)
nummod(stock, 3)
case(3, -)
nmod(3, 3)
case(4, /)
nmod(3, 4)
punct(long, '')
punct('', '')
advmod(cut, long)
punct(cut, .)
nsubj(support, these)
aux(support, be)
root(ROOT, support)
obj(support, member)
case(bar, for)
det(bar, the)
amod(lock, short)
compound(bar, lock)
nmod(member, bar)
punct(support, .)
root(ROOT, Locate)
nmod:poss(position, they)
obj(Locate, position)
case(Fig., in)
obl(Locate, Fig.)
nummod(Fig., 7)
cc(drill, and)
conj(Locate, drill)
obj(drill, no.)
nummod(no., 43)
mark(match, to)
advcl(drill, match)
det(hole, the)
amod(hole, corresponding)
obj(match, hole)
case(frame, in)
det(frame, the)
nmod(hole, frame)
punct(Locate, .)
root(ROOT, cut)
compound:prt(cut, off)
compound(length, excess)
compound(length, screw)
obj(cut, length)
cc(file, and)
conj(cut, file)
obj(file, flush)
case(frame, with)
cc:preconj(frame, either)
obl(file, frame)
cc(nut, or)
conj(frame, nut)
punct(frame, .)
conj(frame, Drill)
nummod(no., four)
appos(Drill, no.)
nummod(no., 19)
cc(hole, and)
nummod(no., four)
compound(hole, no.)
nummod(no., 28)
conj(Drill, hole)
case(long, in)
det(long, the)
nummod(long, 12)
punct(long, '')
punct(long, '')
nmod(hole, long)
punct(cut, ``)
det(piece, a)
punct(piece, '')
root(ROOT, piece)
punct(piece, .)
root(ROOT, Locate)
det(position, the)
obj(Locate, position)
case(Fig., from)
nmod(position, Fig.)
nummod(Fig., 7)
punct(tappet, .)
parataxis(Locate, tappet)
cc(bar, and)
compound(bar, lock)
conj(tappet, bar)
compound(file, Draw)
punct(file, -)
conj(tappet, file)
compound(file, no.)
nummod(no., 1)
conj(tappet, tappet)
case(fit, to)
det(fit, a)
amod(fit, smooth)
nmod(tappet, fit)
case(slot, in)
nmod:poss(slot, its)
amod(slot, respective)
nmod(fit, slot)
cc(square, and)
conj(Locate, square)
det(end, the)
obj(square, end)
punct(Locate, .)
root(ROOT, break)
det(corner, the)
compound(corner, end)
obj(break, corner)
case(chamfer, with)
det(chamfer, a)
amod(chamfer, slight)
nummod(chamfer, 45)
compound(chamfer, degree)
obl(break, chamfer)
punct(break, .)
parataxis(break, Drill)
det(hole, a)
compound(hole, no.)
nummod(no., 50)
obj(Drill, hole)
nummod(hole, 1)
case(1, -)
nmod(1, 1)
case(4, /)
nmod(1, 4)
punct(4, '')
punct(4, '')
case(end, from)
nummod(end, one)
obl(Drill, end)
cc(tap, and)
conj(Drill, tap)
obj(tap, 2)
case(56, -)
nmod(2, 56)
punct(break, . )
punct(see, ()
root(ROOT, see)
obj(see, Fig.)
nummod(Fig., 7)
punct(see, .)
punct(see, ))
root(ROOT, put)
det(screw, a)
compound(56, 2)
punct(56, -)
nummod(screw, 56)
compound(screw, roundhead)
obj(put, screw)
case(hole, into)
det(hole, the)
obl(put, hole)
punct(cut, ,)
conj(put, cut)
compound:prt(cut, off)
det(thread, the)
compound(thread, excess)
obj(cut, thread)
cc(file, and)
conj(put, file)
obj(file, flush)
case(underside, with)
det(underside, the)
obl(file, underside)
case(bar, of)
det(bar, the)
nmod(underside, bar)
punct(underside, .)
mark(find, to)
advcl(file, find)
det(position, the)
amod(position, other)
compound(screw, stop)
compound(position, screw)
obj(find, position)
punct(insert, ,)
conj(put, insert)
det(tappet, the)
obj(insert, tappet)
case(frame, into)
det(frame, the)
obl(insert, frame)
cc(hold, and)
conj(insert, hold)
det(head, the)
compound(head, screw)
obj(hold, head)
advmod(hold, tight)
case(edge, against)
det(edge, the)
compound(edge, frame)
obl(hold, edge)
punct(put, .)
root(ROOT, scribe)
det(line, a)
obj(scribe, line)
case(bar, across)
det(bar, the)
nmod(line, bar)
case(end, on)
det(end, the)
amod(end, other)
obl(scribe, end)
case(tappet, of)
det(tappet, the)
nmod(end, tappet)
punct(4, ,)
nummod(4, 1)
case(4, /)
conj(tappet, 4)
punct(4, '')
punct(diameter, '')
cc(diameter, plus)
det:predet(diameter, half)
det(diameter, the)
conj(line, diameter)
case(head, of)
det(head, the)
compound(56, 2)
punct(56, -)
nummod(head, 56)
compound(head, screw)
nmod(diameter, head)
punct(64, ()
advmod(64, about)
appos(head, 5)
case(64, /)
nmod(5, 64)
punct(64, '')
punct(64, '')
punct(64, ))
advmod(head, away)
case(edge, from)
det(edge, the)
compound(edge, frame)
obl(away, edge)
punct(21/64, .)
amod(distance, total)
nsubj(21/64, distance)
cop(21/64, be)
case(21/64, about)
obl(away, 21/64)
punct(scribe, '')
punct(tend, '')
punct(tend, .)
root(ROOT, tend)
mark(make, to)
xcomp(tend, make)
det(dimension, this)
obj(make, dimension)
advmod(undersize, slightly)
advmod(make, undersize)
mark(file, so)
nsubj(file, you)
aux(file, can)
advcl(make, file)
det(head, the)
compound(head, screw)
obj(file, head)
mark(get, to)
advcl(file, get)
advmod(4, exactly)
compound(4, 1)
punct(4, /)
obj(get, 4)
punct(4, '')
punct(movement, '')
compound(movement, tappet)
obj(get, movement)
punct(tend, .)
root(ROOT, Drill)
det(hole, a)
compound(hole, no.)
nummod(no., 50)
obj(Drill, hole)
punct(tap, ,)
parataxis(Drill, tap)
compound(-56, 2)
obj(tap, -56)
cc(insert, and)
conj(Drill, insert)
det(roundhead, a)
obj(insert, roundhead)
nummod(screw, 2)
case(56, -)
nmod(2, 56)
obj(insert, screw)
mark(end, as)
nsubj(end, you)
aux(end, do)
case(end, on)
det(end, the)
amod(end, first)
advcl(Drill, end)
punct(Drill, .)
parataxis(Drill, Drill)
det(crosswise, a)
compound(crosswise, no.)
nummod(no., 47)
compound(crosswise, hole)
obj(Drill, crosswise)
case(tappet, through)
det(tappet, the)
nmod(crosswise, tappet)
case(position, at)
det(position, the)
nmod(crosswise, position)
acl(position, show)
case(Figs., in)
obl(show, Figs.)
nummod(Figs., 7)
cc(8, and)
conj(Figs., 8)
punct(Drill, .)
root(ROOT, repeat)
det(drill, these)
obj(repeat, drill)
cc(tap, and)
conj(repeat, tap)
obj(tap, operation)
case(each, for)
obl(tap, each)
case(bar, of)
det(bar, the)
compound(bar, tappet)
nmod(each, bar)
punct(repeat, . )
case(tappet, to)
det(tappet, each)
obl(solder, tappet)
case(6, except)
nmod(tappet, 6)
cc(8, and)
conj(6, 8)
punct(solder, ,)
root(ROOT, solder)
det(piece, a)
compound(piece, Af)
obj(solder, piece)
case(brass, of)
nmod(piece, brass)
cc(file, and)
conj(brass, file)
case(shape, to)
det(shape, the)
amod(shape, taper)
nmod(file, shape)
acl(shape, show)
case(Figs., in)
obl(show, Figs.)
nummod(Figs., 6)
cc(8, and)
conj(Figs., 8)
punct(solder, .)
nsubj(serve, these)
aux(serve, will)
root(ROOT, serve)
mark(lift, as)
advcl(serve, lift)
obj(lift, pad)
case(contact, for)
det(contact, the)
amod(contact, electrical)
obl(lift, contact)
punct(serve, .)
csubj(job, fit)
det(bar, the)
compound(bar, lock)
obj(fit, bar)
cc(make, and)
conj(fit, make)
det(piece, the)
compound(piece, lock)
obj(make, piece)
cop(job, be)
det(job, a)
advmod(tedious, rather)
amod(job, tedious)
root(ROOT, job)
case(screw, since)
compound(screw, stop)
nmod(job, screw)
punct(tappet, ,)
conj(screw, tappet)
cc(bar, and)
compound(bar, lock)
conj(tappet, bar)
aux(remove, must)
aux:pass(remove, be)
conj(job, remove)
cc(replace, and)
conj(remove, replace)
amod(time, many)
obl:tmod(replace, time)
punct(job, .)
mark(progress, as)
det(work, the)
nsubj(progress, work)
advcl(accessible, progress)
det(frame, the)
obj(progress, frame)
cc(move, and)
conj(progress, move)
obj(move, part)
xcomp(move, become)
det(sort, a)
xcomp(become, sort)
case(puzzle, of)
amod(puzzle, chinese)
nmod(sort, puzzle)
advmod(remove, where)
amod(piece, several)
nsubj:pass(remove, piece)
aux(remove, must)
aux:pass(remove, be)
acl:relcl(sort, remove)
mark(work, before)
det(part, the)
nsubj(accessible, part)
nsubj(work, you)
aux(work, be)
acl:relcl(part, work)
obl(work, on)
cop(accessible, be)
root(ROOT, accessible)
punct(accessible, . )
det(work, a)
amod(work, little)
amod(work, extra)
nsubj(pay, work)
advmod(work, here)
aux(pay, will)
root(ROOT, pay)
compound:prt(pay, off)
case(machine, with)
det(machine, a)
amod(machine, smooth)
punct(machine, ,)
compound(machine, snug-fit)
obl(pay, machine)
mark(finish, when)
nsubj:pass(finish, you)
aux:pass(finish, be)
advcl(pay, finish)
punct(pay, .)
det(bar, each)
amod(bar, complete)
compound(bar, lock)
nsubj(remain, bar)
aux(remain, should)
root(ROOT, remain)
case(place, in)
obl(remain, place)
mark(progress, as)
det(work, the)
nsubj(progress, work)
advcl(remain, progress)
mark(insure, to)
xcomp(progress, insure)
amod(fitting, snug)
obj(insure, fitting)
punct(place, .)
det(order, the)
nsubj(important, order)
case(fitting, of)
nmod(order, fitting)
cop(important, be)
advmod(important, not)
advmod(important, too)
root(ROOT, important)
punct(important, .)
advmod(start, however)
punct(start, ,)
nsubj(start, we)
root(ROOT, start)
case(row, with)
det(row, the)
amod(row, first)
obl(start, row)
case(bar, of)
nmod(row, bar)
cc(work, and)
conj(start, work)
nmod:poss(way, we)
obj(work, way)
advmod(work, back)
punct(start, .)
case(method, since)
det(method, the)
amod(method, same)
obl(describe, method)
mark(shape, of)
acl(method, shape)
cc(fitting, and)
conj(shape, fitting)
det(dog, the)
nsubj:pass(use, dog)
cc(notch, and)
conj(dog, notch)
aux:pass(use, be)
advcl(describe, use)
advmod(use, throughout)
punct(describe, ,)
nsubj(describe, we)
aux(describe, will)
advmod(describe, only)
root(ROOT, describe)
det(construction, the)
obj(describe, construction)
case(bar, of)
nummod(bar, one)
compound(bar, lock)
nmod(construction, bar)
punct(bar, .)
appos(bar, Figs)
punct(describe, .)
nsubj(give, 7)
cc(8, and)
conj(7, 8)
root(ROOT, give)
det(dimension, all)
amod(dimension, pertinent)
obj(give, dimension)
punct(give, .)
det:predet(bar, all)
det(bar, the)
nsubj:pass(cut, bar)
aux:pass(cut, be)
root(ROOT, cut)
case(brass, from)
compound(brass, Af)
obl(cut, brass)
punct(cut, .)
det(length, the)
nsubj:pass(list, length)
case(piece, of)
det(piece, each)
nmod(length, piece)
aux:pass(list, be)
root(ROOT, list)
case(bottom, at)
det(bottom, the)
obl(list, bottom)
case(fig, of)
nmod(bottom, fig)
punct(list, .)
nummod(4, 7)
punct(7, .)
compound(c, Bar)
punct(c, ``)
nsubj(4, c)
punct(c, '')
cop(4, be)
compound(4, 2)
punct(4, -)
nummod(4, 3)
punct(4, /)
root(ROOT, 4)
punct(4, '')
punct(4, '')
appos(4, long)
punct(Draw, .)
parataxis(4, Draw)
punct(file, -)
conj(Draw, file)
det(edge, the)
obj(file, edge)
punct(square, ,)
conj(Draw, square)
compound:prt(square, up)
det(end, the)
obj(square, end)
cc(put, and)
conj(square, put)
det(chamfer, a)
amod(chamfer, slight)
obj(put, chamfer)
case(edge, on)
det(edge, the)
obl(put, edge)
mark(snag, so)
nsubj(snag, they)
aux(snag, will)
advmod(snag, not)
advcl(put, snag)
case(frame, in)
det(frame, the)
obl(snag, frame)
punct(Fig., .)
obj(snag, Fig.)
nummod(give, 8)
root(ROOT, give)
det(dimension, the)
obj(give, dimension)
mark(locate, for)
acl(dimension, locate)
det(hole, the)
compound(pin, dog)
punct(pin, -)
compound(hole, pin)
obj(locate, hole)
punct(hole, .)
compound(punch, Center)
punct(punch, -)
appos(hole, punch)
cc(drill, and)
conj(locate, drill)
det(hole, the)
compound(hole, no.)
nummod(no., 31)
obj(drill, hole)
nummod(no., 7/16)
punct(7/16, '')
punct(drill, '')
case(end, from)
nummod(end, one)
obl(drill, end)
case(bar, of)
det(bar, the)
nmod(end, bar)
punct(give, .)
nsubj(length, Chuck)
det(length, a)
root(ROOT, length)
case(dia, of)
compound(8, 1)
punct(8, /)
compound(dia, 8)
punct(dia, '')
punct(dia, '')
nmod(length, dia)
punct(length, .)
compound(rod, drill)
root(ROOT, rod)
case(press, into)
det(press, a)
compound(press, drill)
nmod(rod, press)
cc(device, or)
det(device, some)
amod(device, similar)
compound(device, turn)
conj(press, device)
cc(rotate, and)
mark(rotate, while)
nsubj(rotate, it)
aux(rotate, be)
acl:relcl(device, rotate)
xcomp(rotate, file)
det(square, the)
compound(square, end)
obj(file, square)
cc(file, and)
advmod(file, then)
conj(file, file)
det(long, a)
amod(long, slight)
obl:npmod(long, taper)
compound(8, 1)
punct(8, /)
nummod(taper, 8)
punct(long, '')
punct(long, '')
obj(file, long)
punct(rod, .)
root(ROOT, cut)
det(piece, the)
obj(cut, piece)
advmod(9/32, about)
obj(cut, 9/32)
punct(9/32, '')
punct(9/32, '')
cc(5/16, or)
conj(9/32, 5/16)
punct(5/16, '')
punct(5/16, '')
advmod(cut, long)
cc(drive, and)
conj(cut, drive)
obj(drive, it)
case(hole, into)
det(hole, the)
compound(hole, no.)
nummod(no., 31)
obl(drive, hole)
acl(hole, drill)
case(bar, in)
det(bar, the)
compound(bar, lock)
obl(drill, bar)
punct(cut, .)
root(ROOT, file)
det(flush, the)
amod(flush, bottom)
compound(flush, edge)
obj(file, flush)
case(bar, with)
det(bar, the)
nmod(flush, bar)
cc(8, and)
det(8, the)
amod(8, top)
nummod(8, 1)
punct(8, /)
conj(bar, 8)
punct(8, '')
punct(8, '')
case(bar, above)
det(bar, the)
nmod(8, bar)
punct(file, .)
det(dog, this)
nsubj(engage, dog)
aux(engage, will)
parataxis(file, engage)
det(notch, a)
obj(engage, notch)
mark(cut, to)
aux:pass(cut, be)
acl(notch, cut)
case(tappet, in)
obl(cut, tappet)
nummod(tappet, 3)
punct(file, .)
root(ROOT, place)
det(bar, the)
compound(bar, lock)
obj(place, bar)
case(position, in)
amod(position, proper)
obl(place, position)
cc(insert, and)
conj(place, insert)
compound(3, tappet)
nummod(insert, 3)
punct(scribe, .)
obj(insert, scribe)
det(line, a)
appos(scribe, line)
case(center, through)
det(center, the)
nmod(line, center)
case(pin, of)
det(pin, the)
nmod(center, pin)
cc(face, and)
case(face, across)
det(face, the)
conj(line, face)
case(tappet, of)
nmod(face, tappet)
nummod(tappet, 3)
punct(parallel, ,)
amod(face, parallel)
case(piece, to)
obl(parallel, piece)
punct(a, ``)
obl(parallel, a)
punct(a, '')
punct(see, .)
parataxis(place, see)
det(drawing, the)
obj(see, drawing)
case(shape, for)
det(shape, the)
nmod(drawing, shape)
case(notch, of)
det(notch, the)
nmod(shape, notch)
punct(line, .)
compound(line, scribe)
compound(shape, V)
punct(shape, -)
amod(line, shape)
nmod(shape, line)
case(bar, on)
det(bar, the)
nmod(line, bar)
cc(rough, and)
conj(line, rough)
compound:prt(rough, out)
case(hack, with)
cc:preconj(hack, either)
det(hack, a)
nsubj(see, hack)
advcl(rough, see)
cc(disk, or)
det(disk, a)
compound(disk, cutting)
obj(see, disk)
case(tool, in)
det(tool, a)
compound(tool, hand)
compound(tool, power)
obl(see, tool)
punct(place, .)
nsubj(use, we)
root(ROOT, use)
det(latter, the)
obj(use, latter)
acl(latter, equip)
case(disk, with)
det(disk, a)
compound(disk, carborundum)
obl(equip, disk)
case(dia, about)
punct(thick, '')
amod(dia, thick)
cc(1, and)
conj(thick, 1)
punct(thick, '')
punct(thick, '')
nmod(disk, dia)
punct(use, .)
root(ROOT, fitted)
case(mandrel, on)
det(mandrel, a)
compound(8, 1)
punct(8, /)
obl(fitted, 8)
punct(mandrel, '')
punct(mandrel, '')
compound(mandrel, dia.)
obl(fitted, mandrel)
punct(fitted, .)
amod(disk, such)
nsubj(handy, disk)
cop(handy, be)
advmod(handy, very)
root(ROOT, handy)
mark(cut, for)
advcl(handy, cut)
cc(shape, and)
conj(cut, shape)
amod(part, small)
obj(shape, part)
punct(handy, .)
root(ROOT, file)
case(finish, to)
det(finish, a)
amod(finish, smooth)
nmod(file, finish)
punct(file, . )
det(file, a)
compound(file, Barrette)
amod(file, swiss)
compound(file, pattern)
nsubj(handy, file)
cop(handy, be)
root(ROOT, handy)
mark(allow, since)
nmod:poss(shape, its)
amod(shape, triangular)
nsubj(allow, shape)
case(face, with)
advmod(face, only)
nummod(face, one)
compound(face, cutting)
nmod(shape, face)
aux(allow, will)
advcl(handy, allow)
obj(allow, you)
mark(work, to)
xcomp(allow, work)
det(surface, a)
obj(work, surface)
mark(marr, without)
advcl(work, marr)
det(one, a)
amod(one, adjoin)
obj(marr, one)
punct(handy, .)
root(ROOT, endeavor)
mark(get, to)
acl(endeavor, get)
det(notch, the)
obj(get, notch)
advmod(much, as)
advmod(alike, much)
xcomp(get, alike)
mark(possible, as)
advcl(alike, possible)
punct(endeavor, .)
det(notch, the)
nsubj(have, notch)
aux(have, should)
root(ROOT, have)
det(finish, a)
amod(finish, smooth)
obj(have, finish)
mark(slide, so)
fixed(so, that)
det(dog, the)
compound(dog, steel)
nsubj(slide, dog)
aux(slide, will)
advcl(have, slide)
advmod(slide, easily)
case(it, over)
obl(slide, it)
punct(have, .)
parataxis(have, Assemble)
det(part, the)
obj(Assemble, part)
case(frame, in)
det(frame, the)
obl(Assemble, frame)
cc(test, and)
conj(Assemble, test)
det(action, the)
compound(action, slide)
obj(test, action)
case(piece, of)
det(piece, the)
compound(piece, mate)
nmod(action, piece)
punct(have, .)
det(surface, all)
compound(surface, matching)
nsubj:pass(check, surface)
aux(check, should)
aux:pass(check, be)
root(ROOT, check)
advmod(check, frequently)
cc(mate, and)
conj(check, mate)
case(basis, on)
det(basis, a)
compound(basis, cut)
cc(fit, and)
conj(cut, fit)
obl(mate, basis)
punct(check, .)
root(ROOT, Chuck)
det(piece, a)
list(Chuck, 2)
punct(Chuck, '')
punct(Chuck, '')
cc(3, or)
conj(2, 3)
punct(3, '')
punct(piece, '')
list(Chuck, piece)
case(dia, of)
compound(8, 1)
punct(8, /)
nummod(dia, 8)
punct(8, ')
punct(dia, ')
punct(dia, '')
nmod(piece, dia)
punct(Chuck, .)
compound(rod, drill)
root(ROOT, rod)
case(press, in)
det(press, a)
compound(press, drill)
nmod(rod, press)
cc(tool, or)
amod(hand, electric)
compound(tool, hand)
conj(press, tool)
punct(rod, . )
root(ROOT, Fashion)
det(point, a)
amod(point, sharp)
compound(point, scrib)
obj(Fashion, point)
case(64, about)
compound(64, 3)
punct(64, /)
nmod(point, 64)
punct(64, '')
punct(long, '')
amod(point, long)
case(end, on)
nummod(end, one)
obl(long, end)
punct(Fashion, ,)
advcl(Fashion, use)
amod(file, swiss)
compound(file, pattern)
obj(use, file)
punct(Fashion, .)
det(tool, this)
nsubj:pass(make, tool)
aux(make, can)
advmod(make, also)
aux:pass(make, be)
root(ROOT, make)
case(lathe, with)
det(lathe, a)
obl(make, lathe)
punct(make, .)
nsubj(say, scientist)
parataxis(make, say)
mark(base, that)
det(world, the)
nsubj:pass(base, world)
cc(everything, and)
conj(world, everything)
case(it, in)
nmod(everything, it)
aux:pass(base, be)
ccomp(say, base)
case(mathematics, on)
obl(base, mathematics)
punct(make, .)
case(math, without)
obl(have, math)
det(man, the)
nsubj(have, man)
nsubj(seek, who)
aux(seek, be)
advmod(seek, continually)
acl:relcl(man, seek)
det(cause, the)
obj(seek, cause)
nmod(cause, of)
cc(reason, and)
det(reason, the)
conj(cause, reason)
case(thing, for)
det(thing, the)
amod(thing, many)
nmod(reason, thing)
nsubj(make, that)
acl:relcl(thing, make)
det(world, the)
obj(make, world)
xcomp(make, go)
punct(make, ')
advmod(have, round)
aux(have, would)
advmod(have, not)
root(ROOT, have)
det(means, any)
obj(have, means)
mark(analyze, of)
acl(means, analyze)
punct(standardizing, ,)
conj(analyze, standardizing)
punct(communicate, ,)
cc(communicate, and)
conj(analyze, communicate)
det(thing, the)
obj(communicate, thing)
nsubj(discover, they)
acl:relcl(thing, discover)
cc(learn, and)
conj(discover, learn)
punct(learn, .)
obj(learn, Math)
cc(formula, and)
det(formula, the)
conj(Math, formula)
nsubj(allow, that)
acl:relcl(formula, allow)
obj(allow, it)
mark(apply, to)
aux:pass(apply, be)
xcomp(allow, apply)
case(problem, to)
amod(problem, different)
obl(apply, problem)
cop(essential, be)
punct(essential, ,)
advmod(essential, therefore)
punct(essential, ,)
conj(apply, essential)
case(endeavor, to)
det(endeavor, any)
amod(endeavor, scientific)
obl(essential, endeavor)
punct(have, .)
amod(rodding, hot)
nsubj(science, rodding)
cop(science, be)
det(science, a)
root(ROOT, science)
punct(science, .)
nsubj(science, it)
cop(science, be)
advmod(science, not)
det(science, a)
root(ROOT, science)
advmod(involved, as)
amod(science, involved)
mark(determine, as)
advcl(involved, determine)
nsubj(make, what)
ccomp(determine, make)
det(earth, the)
nsubj(rotate, earth)
ccomp(make, rotate)
case(axis, on)
nmod:poss(axis, its)
obl(rotate, axis)
cc(build, or)
conj(rotate, build)
det(rocket, a)
obj(build, rocket)
cc(put, or)
conj(build, put)
det(satellite, a)
obj(put, satellite)
case(orbit, into)
obl(put, orbit)
cc(science, but)
nsubj(science, it)
cop(science, be)
punct(science, ,)
advmod(science, nevertheless)
punct(science, ,)
det(science, a)
conj(science, science)
punct(science, .)
cc(mean, but)
mark(base, because)
nsubj:pass(base, science)
aux:pass(base, be)
advcl(mean, base)
case(mathematics, on)
obl(base, mathematics)
aux(mean, do)
advmod(mean, not)
root(ROOT, mean)
mark(mathematician, that)
det(rodder, a)
amod(rodder, hot)
nsubj(mathematician, rodder)
aux(mathematician, must)
advmod(mathematician, necessarily)
cop(mathematician, be)
det(mathematician, a)
ccomp(mean, mathematician)
punct(mean, . )
det(guy, a)
nsubj(rodder, guy)
aux(rodder, can)
cop(rodder, be)
det(rodder, a)
amod(rodder, active)
cc(successful, and)
conj(active, successful)
amod(rodder, hot)
root(ROOT, rodder)
case(year, for)
obl(rodder, year)
mark(become, without)
advcl(rodder, become)
advmod(involved, even)
advmod(involved, remotely)
xcomp(become, involved)
case(problem, with)
amod(problem, mathematical)
obl(involved, problem)
punct(rodder, ;)
punct(rodder, ;)
advmod(have, however)
punct(have, ,)
nsubj(have, he)
aux(have, will)
parataxis(rodder, have)
det(understanding, a)
amod(understanding, clearer)
obj(have, understanding)
case(what, of)
nmod(understanding, what)
nsubj(do, he)
aux(do, be)
acl:relcl(what, do)
cc(be, and)
det(chance, the)
nsubj(be, chance)
cop(successful, be)
nsubj(successful, he)
aux(successful, will)
cop(successful, be)
advmod(successful, more)
conj(have, successful)
mark(understand, if)
nsubj(understand, he)
advcl(successful, understand)
det(formula, the)
amod(formula, few)
obj(understand, formula)
nsubj(apply, that)
acl:relcl(formula, apply)
case(rodding, to)
obl(apply, rodding)
punct(rodder, . )
det(formula, a)
amod(formula, mathematical)
nsubj(nothing, formula)
cop(nothing, be)
root(ROOT, nothing)
amod(nothing, more)
case(pattern, than)
det(pattern, a)
obl(more, pattern)
mark(solving, for)
acl(pattern, solving)
det(problem, a)
amod(problem, specific)
obj(solving, problem)
punct(nothing, .)
nsubj(place, it)
root(ROOT, place)
det(factor, the)
amod(factor, various)
obj(place, factor)
acl(factor, involve)
case(problem, in)
det(problem, the)
obl(involve, problem)
case(order, in)
nmod:poss(order, they)
amod(order, correct)
obl(involve, order)
case(relation, in)
obl(involve, relation)
case(other, to)
det(other, each)
nmod(relation, other)
mark(compute, so)
fixed(so, that)
det(influence, the)
nsubj:pass(compute, influence)
case(factor, of)
nmod(influence, factor)
case(other, on)
det(other, each)
nmod(factor, other)
aux(compute, can)
aux:pass(compute, be)
advcl(place, compute)
punct(place, .)
det(step, the)
amod(step, first)
nsubj(be, step)
mark(use, in)
acl(step, use)
det(formula, a)
obj(use, formula)
root(ROOT, be)
mark(insert, to)
ccomp(be, insert)
det(value, the)
amod(value, numerical)
obj(insert, value)
case(factor, of)
det(factor, the)
nmod(value, factor)
acl(factor, involve)
case(position, in)
nmod:poss(position, they)
amod(position, correct)
obl(involve, position)
case(formula, in)
det(formula, the)
obl(involve, formula)
punct(be, .)
nsubj(change, this)
root(ROOT, change)
det(formula, the)
obj(change, formula)
case(equation, to)
det(equation, a)
punct(equation, ``)
nmod(formula, equation)
punct(equation, '')
punct(change, .)
det(equation, the)
nsubj:pass(use, equation)
aux:pass(use, be)
parataxis(change, use)
case(process, for)
det(process, the)
amod(process, mathematical)
obl(use, process)
mark(solving, of)
acl(process, solving)
det(problem, the)
obj(solving, problem)
punct(change, .)
nsubj(complicated, equation)
case(formula, for)
compound(formula, rodding)
nmod(equation, formula)
cop(complicated, be)
advmod(complicated, not)
root(ROOT, complicated)
punct(complicated, .)
nsubj(involve, they)
root(ROOT, involve)
advmod(mathematics, only)
amod(mathematics, simple)
obj(involve, mathematics)
nsubj:pass(teach, that)
aux:pass(teach, be)
acl:relcl(mathematics, teach)
case(class, in)
compound(school, grammar)
compound(class, school)
amod(class, arithmetic)
obl(teach, class)
punct(involve, .)
advmod(essential, however)
punct(essential, ,)
expl(essential, it)
cop(essential, be)
root(ROOT, essential)
mark(understand, that)
det(symbol, the)
amod(symbol, various)
amod(symbol, mathematical)
nsubj:pass(understand, symbol)
acl(symbol, use)
case(equation, in)
det(equation, the)
obl(use, equation)
aux:pass(understand, be)
ccomp(essential, understand)
mark(do, so)
fixed(so, that)
det(process, the)
amod(process, mathematical)
nsubj:pass(do, process)
aux(do, can)
aux:pass(do, be)
advcl(understand, do)
advmod(do, properly)
cc(order, and)
case(order, in)
nmod:poss(order, they)
amod(order, correct)
conj(do, order)
punct(essential, .)
nsubj(indicate, they)
root(ROOT, indicate)
amod(division, simple)
obj(indicate, division)
punct(multiplication, ,)
conj(division, multiplication)
punct(subtraction, ,)
conj(division, subtraction)
punct(addition, ,)
cc(addition, and)
conj(division, addition)
punct(indicate, .)
det(symbol, the)
nsubj(line, symbol)
case(division, for)
nmod(symbol, division)
cop(line, be)
det(line, a)
amod(line, straight)
root(ROOT, line)
nsubj(separate, that)
acl:relcl(line, separate)
nummod(number, two)
obj(separate, number)
acl(number, place)
obj(place, one)
case(other, above)
det(other, the)
nmod(one, other)
punct(line, .)
det(number, the)
amod(number, lower)
nsubj:pass(divide, number)
aux:pass(divide, be)
advmod(divide, always)
root(ROOT, divide)
case(number, into)
det(number, the)
amod(number, upper)
obl(divide, number)
punct(divide, :)
nummod(use, Af)
punct(Af, .)
det(symbol, the)
nsubj(be, symbol)
case(multiplication, for)
nmod(symbol, multiplication)
root(ROOT, be)
punct(be, ``)
punct(be, **b)
punct(be, '')
punct(use, .)
nsubj:pass(use, it)
aux:pass(use, be)
ccomp(be, use)
mark(separate, to)
xcomp(use, separate)
nummod(number, two)
cc(more, or)
conj(two, more)
obj(separate, number)
case(row, in)
det(row, a)
obl(separate, row)
punct(separate, .)
case(example, for)
obl(separate, example)
punct(use, :)
nummod(multiply, Af)
punct(Af, .)
nsubj:pass(multiply, number)
mark(multiply, to)
aux:pass(multiply, be)
acl(number, multiply)
advmod(multiply, together)
aux(multiply, may)
aux:pass(multiply, be)
root(ROOT, multiply)
case(order, in)
det(order, any)
obl(multiply, order)
punct(multiply, .)
det(result, the)
nsubj(same, result)
aux(same, will)
cop(same, be)
det(same, the)
root(ROOT, same)
advmod(same, regardless)
case(order, of)
det(order, the)
obl(same, order)
advcl(same, use)
punct(same, .)
det(symbol, the)
nsubj(sign, symbol)
case(subtraction, for)
nmod(symbol, subtraction)
cop(sign, be)
det(sign, the)
amod(sign, standard)
case(sign, minus)
root(ROOT, sign)
punct(sign, .)
nsubj(nothing, this)
cop(nothing, be)
root(ROOT, nothing)
amod(nothing, more)
case(dash, than)
det(dash, a)
obl(more, dash)
punct(nothing, .)
nsubj(separate, it)
root(ROOT, separate)
nummod(number, two)
cc(more, or)
conj(two, more)
obj(separate, number)
punct(separate, .)
det(number, the)
nsubj:pass(subtract, number)
case(right, on)
det(right, the)
nmod(number, right)
case(symbol, of)
det(symbol, the)
nmod(right, symbol)
aux:pass(subtract, be)
advmod(subtract, always)
root(ROOT, subtract)
case(number, from)
det(number, the)
obl(subtract, number)
case(left, on)
det(left, the)
nmod(number, left)
case(symbol, of)
det(symbol, the)
nmod(left, symbol)
punct(subtract, .)
case(example, for)
root(ROOT, example)
punct(example, :)
nummod(carry, Af)
punct(Af, .)
mark(separate, when)
advmod(separate, more)
mark(separate, than)
nummod(figure, two)
nsubj:pass(separate, figure)
aux:pass(separate, be)
advcl(carry, separate)
case(symbol, by)
compound(symbol, subtraction)
obl(separate, symbol)
det(subtraction, the)
nsubj:pass(carry, subtraction)
aux(carry, must)
aux:pass(carry, be)
root(ROOT, carry)
advmod(carry, out)
mark(leave, from)
det(leave, the)
advcl(carry, leave)
obl(leave, to)
advmod(leave, right)
mark(be, if)
det(result, the)
nsubj(be, result)
advcl(carry, be)
mark(correct, to)
cop(correct, be)
xcomp(be, correct)
punct(be, .)
case(example, for)
obl(be, example)
punct(problem, ,)
case(problem, for)
det(problem, the)
obl(be, problem)
nsubj:pass(indicate, Af)
punct(Af, ,)
appos(Af, 10)
case(25, from)
nummod(equal, 25)
appos(Af, equal)
nummod(equal, 15)
punct(indicate, ,)
advmod(6, then)
appos(Af, 6)
case(equal, from)
nummod(equal, 15)
nmod(6, equal)
nummod(indicate, 9)
punct(9, .)
nsubj:pass(indicate, Addition)
aux:pass(indicate, be)
root(ROOT, indicate)
case(symbol, by)
det(symbol, the)
compound(symbol, +)
obl(indicate, symbol)
punct(indicate, .)
det(symbol, the)
nsubj:pass(use, symbol)
aux:pass(use, be)
root(ROOT, use)
mark(separate, to)
xcomp(use, separate)
nummod(number, two)
cc(more, or)
conj(two, more)
obj(separate, number)
punct(use, .)
case(example, for)
root(ROOT, example)
punct(example, :)
nummod(place, Af)
punct(Af, .)
nsubj:pass(place, number)
acl(number, separate)
case(symbol, by)
compound(symbol, addition)
obl(separate, symbol)
aux(place, may)
aux:pass(place, be)
root(ROOT, place)
case(order, in)
det(order, any)
obl(place, order)
punct(place, .)
mark(solving, when)
advcl(place, solving)
det(equation, a)
obj(solving, equation)
nsubj(involve, that)
acl:relcl(equation, involve)
obj(involve, division)
cc(step, as)
fixed(as, well)
fixed(as, as)
amod(step, other)
obj(involve, step)
punct(do, ,)
conj(involve, do)
det:predet(step, all)
det(step, the)
compound(step, division)
obj(do, step)
advmod(reduce, first)
mark(reduce, to)
advcl(do, reduce)
det(part, those)
obj(reduce, part)
case(equation, of)
det(equation, the)
nmod(part, equation)
case(value, to)
nmod:poss(value, they)
amod(value, numerical)
nmod(equation, value)
punct(value, .)
appos(value, multiplication)
punct(subtraction, ,)
conj(multiplication, subtraction)
punct(addition, ,)
cc(addition, and)
conj(multiplication, addition)
aux(accomplish, can)
advmod(accomplish, then)
aux:pass(accomplish, be)
conj(multiplication, accomplish)
mark(appear, as)
nsubj(appear, they)
advcl(accomplish, appear)
case(equation, in)
det(equation, the)
obl(appear, equation)
mark(start, by)
advcl(appear, start)
case(end, at)
det(end, the)
amod(end, left)
obl(start, end)
case(equation, of)
det(equation, the)
nmod(end, equation)
cc(work, and)
conj(start, work)
case(right, toward)
det(right, the)
obl(work, right)
punct(place, .)
csubj(include, complete)
det(division, the)
obj(complete, division)
advmod(include, first)
advmod(include, also)
root(ROOT, include)
det(part, those)
compound(part, division)
obj(include, part)
nsubj(require, that)
acl:relcl(part, require)
obj(require, multiplication)
punct(subtraction, ,)
conj(multiplication, subtraction)
punct(step, ,)
cc(step, or)
compound(step, addition)
conj(multiplication, step)
punct(include, :)
nummod(reduce, Af)
punct(Af, .)
nsubj:pass(reduce, this)
aux(reduce, would)
aux:pass(reduce, be)
root(ROOT, reduce)
mark(multiply, by)
advcl(reduce, multiply)
nummod(time, 8)
obj(multiply, time)
nummod(time, 6)
cc(divide, and)
advmod(divide, then)
conj(multiply, divide)
det(product, the)
obj(divide, product)
case(12, by)
obl(divide, 12)
punct(reduce, .)
det(part, this)
nsubj(become, part)
case(equation, of)
det(equation, the)
nmod(part, equation)
aux(become, would)
advmod(become, then)
root(ROOT, become)
nummod(become, 4)
punct(4, .)
case(use, for)
obl(converted, use)
case(formula, in)
nmod(use, formula)
punct(converted, ,)
nsubj:pass(converted, fraction)
aux(converted, should)
aux:pass(converted, be)
conj(become, converted)
case(equivalent, to)
nmod:poss(equivalent, they)
amod(equivalent, decimal)
obl(converted, equivalent)
punct(become, .)
det(way, the)
amod(way, easiest)
nsubj(be, way)
mark(do, to)
acl(way, do)
obj(do, this)
root(ROOT, be)
case(chart, with)
det(chart, a)
compound(chart, conversion)
obl(be, chart)
punct(chart, .)
nsubj(available, chart)
case(purpose, for)
det(purpose, this)
nmod(chart, purpose)
cop(available, be)
ccomp(be, available)
case(source, from)
amod(source, many)
obl(available, source)
punct(be, .)
nsubj:pass(include, they)
aux:pass(include, be)
root(ROOT, include)
case(type, in)
det(type, all)
obl(include, type)
case(handbook, of)
amod(handbook, mathematical)
nmod(type, handbook)
cc(stamp, and)
nsubj:pass(stamp, they)
aux:pass(stamp, be)
conj(include, stamp)
case(type, on)
det(type, some)
obl(stamp, type)
case(instrument, of)
compound(measure, precision)
compound(instrument, measure)
nmod(type, instrument)
punct(include, .)
det(process, the)
amod(process, various)
amod(process, mathematical)
nsubj:pass(simplify, process)
aux(simplify, can)
aux:pass(simplify, be)
root(ROOT, simplify)
mark(carry, by)
advcl(simplify, carry)
det(result, the)
obj(carry, result)
case(place, to)
advmod(place, only)
nummod(place, two)
cc(three, or)
conj(two, three)
amod(place, decimal)
obl(carry, place)
punct(simplify, .)
csubj(have, Shortening)
det(result, the)
obj(Shortening, result)
case(manner, in)
det(manner, this)
nmod(result, manner)
aux(have, will)
advmod(have, not)
ccomp(simplify, have)
det(effect, any)
amod(effect, detrimental)
obj(have, effect)
case(accuracy, on)
det(accuracy, the)
nmod(effect, accuracy)
case(result, of)
det(result, the)
amod(result, final)
nmod(accuracy, result)
punct(simplify, .)
det(formula, some)
nsubj(contain, formula)
root(ROOT, contain)
punct(constant, ``)
obj(contain, constant)
punct(constant, '')
punct(contain, .)
det(constant, a)
nsubj(number, constant)
cop(number, be)
det(number, a)
parataxis(contain, number)
nsubj(remain, that)
acl:relcl(number, remain)
det(same, the)
xcomp(remain, same)
advmod(same, regardless)
case(number, of)
det(number, the)
amod(number, other)
obl(regardless, number)
acl(number, use)
case(formula, in)
det(formula, the)
obl(use, formula)
cc(equation, and)
det(equation, the)
amod(equation, resultant)
conj(formula, equation)
punct(contain, .)
nsubj(number, it)
cop(number, be)
det(number, a)
root(ROOT, number)
case(which, without)
obl(solve, which)
det(equation, the)
nsubj:pass(solve, equation)
aux(solve, can)
advmod(solve, not)
aux:pass(solve, be)
acl:relcl(number, solve)
advmod(solve, correctly)
punct(number, .)
compound(formula, Rodding)
nsubj(apply, formula)
root(ROOT, apply)
case(phase, to)
amod(phase, many)
obl(apply, phase)
case(sport, of)
det(sport, the)
nmod(phase, sport)
punct(apply, .)
det(answer, the)
nsubj(pave, answer)
nsubj(give, they)
acl:relcl(answer, give)
aux(pave, can)
advmod(pave, often)
root(ROOT, pave)
det(way, the)
obj(pave, way)
mark(performance, to)
acl(way, performance)
obj(performance, increase)
cc(necessary, and)
punct(necessary, ,)
advmod(often, quite)
advmod(necessary, often)
punct(necessary, ,)
cop(necessary, be)
conj(pave, necessary)
mark(complete, for)
advcl(necessary, complete)
compound(blank, entry)
obj(complete, blank)
case(event, for)
amod(event, different)
obl(complete, event)
punct(pave, .)
mark(need, when)
nsubj:pass(need, it)
aux:pass(need, be)
advcl(important, need)
punct(important, ,)
nummod(formula, one)
nsubj(important, formula)
cop(important, be)
advmod(important, as)
root(ROOT, important)
case(another, as)
obl(important, another)
punct(important, .)
advmod(use, however)
punct(use, ,)
det(formula, some)
nsubj:pass(use, formula)
aux:pass(use, be)
root(ROOT, use)
advmod(use, more)
case(other, than)
obl(use, other)
punct(use, .)
nsubj(take, we)
aux(take, will)
root(ROOT, take)
obj(take, they)
case(order, in)
det(order, the)
amod(order, general)
obl(take, order)
case(popularity, of)
nmod:poss(popularity, they)
nmod(order, popularity)
punct(take, .)
compound(displacement, engine)
nsubj(able, displacement)
det(rodder, a)
nsubj(able, rodder)
aux(able, should)
cop(able, be)
root(ROOT, able)
mark(compute, to)
xcomp(able, compute)
det(displacement, the)
obj(compute, displacement)
case(engine, of)
nmod:poss(engine, he)
nmod(displacement, engine)
punct(able, .)
nsubj:pass(refer, displacement)
aux:pass(refer, be)
advmod(refer, sometimes)
parataxis(able, refer)
obl(refer, to)
case(volume, as)
punct(volume, ``)
amod(volume, sweep)
obl(refer, volume)
punct(volume, '')
punct(refer, .)
amod(blank, most)
compound(blank, entry)
nsubj(require, blank)
case(event, for)
amod(event, competitive)
nmod(blank, event)
parataxis(able, require)
compound(displacement, engine)
compound(information, displacement)
obj(require, information)
case(restriction, because)
fixed(because, of)
compound(restriction, class)
obl(require, restriction)
punct(able, .)
expl(good, it)
cop(good, be)
root(ROOT, good)
mark(able, to)
cop(able, be)
csubj(good, able)
mark(compute, to)
xcomp(able, compute)
obj(compute, displacement)
mark(compute, so)
fixed(so, that)
nsubj:pass(compute, change)
case(it, in)
nmod(change, it)
acl(change, result)
case(boring, from)
obl(result, boring)
cc(stroke, and)
conj(boring, stroke)
aux(compute, can)
aux:pass(compute, be)
advcl(compute, compute)
punct(good, . )
nsubj(diameter, factor)
acl(factor, involve)
case(formula, in)
det(formula, the)
compound(formula, displacement)
obl(involve, formula)
cop(diameter, be)
det(diameter, the)
compound(diameter, bore)
root(ROOT, diameter)
case(cylinder, of)
det(engine, the)
nmod:poss(cylinder, engine)
case(engine, 's)
nmod(diameter, cylinder)
punct(length, ,)
det(length, the)
conj(diameter, length)
case(stroke, of)
det(stroke, the)
compound(stroke, piston)
nmod(length, stroke)
punct(number, ,)
det(number, the)
conj(length, number)
case(cylinder, of)
nmod(number, cylinder)
case(engine, in)
det(engine, the)
nmod(cylinder, engine)
punct(constant, ,)
cc(constant, and)
det(constant, a)
conj(cylinder, constant)
punct(diameter, .)
det(constant, the)
nsubj:pass(use, constant)
aux:pass(use, be)
punct(use, ,)
nsubj(quarter, which)
cop(quarter, be)
nummod(quarter, one)
punct(quarter, -)
ccomp(be, quarter)
case(3.1416, of)
nmod(quarter, 3.1416)
punct(constant, ,)
det(constant, another)
appos(quarter, constant)
acl(constant, know)
case(pi, as)
punct(pi, ``)
obl(know, pi)
punct(pi, '')
punct(use, .)
nsubj:pass(use, pi)
aux:pass(use, be)
root(ROOT, use)
case(formula, in)
obl(use, formula)
amod(formula, concerned)
case(dimension, with)
det(dimension, the)
obl(concerned, dimension)
case(circle, of)
nmod(dimension, circle)
punct(use, .)
advmod(formula, actually)
punct(formula, ,)
det(formula, the)
compound(displacement, engine)
compound(formula, displacement)
nsubj(formula, formula)
cop(formula, be)
det(formula, the)
amod(formula, standard)
root(ROOT, formula)
mark(compute, for)
acl(formula, compute)
det(volume, the)
obj(compute, volume)
case(cylinder, of)
det(cylinder, a)
nmod(volume, cylinder)
case(type, of)
det(type, any)
nmod(cylinder, type)
case(factor, with)
det(factor, a)
amod(factor, add)
nmod(type, factor)
nsubj(represent, that)
acl:relcl(factor, represent)
det(number, the)
obj(represent, number)
case(cylinder, of)
nmod(number, cylinder)
case(engine, in)
det(engine, the)
nmod(cylinder, engine)
punct(formula, .)
det(area, the)
obl:npmod(sectional, cross)
punct(sectional, -)
amod(area, sectional)
nsubj:pass(determine, area)
case(cylinder, of)
det(cylinder, the)
nmod(area, cylinder)
aux:pass(determine, be)
root(ROOT, determine)
cc(compute, and)
advmod(compute, then)
det(volume, the)
nsubj:pass(compute, volume)
case(cylinder, of)
det(cylinder, the)
amod(cylinder, individual)
nmod(volume, cylinder)
aux:pass(compute, be)
conj(determine, compute)
mark(multiply, by)
advcl(compute, multiply)
det(area, the)
obj(multiply, area)
case(length, by)
det(length, the)
compound(length, stroke)
obl(multiply, length)
punct(length, ,)
nsubj(equivalent, which)
cop(equivalent, be)
det(equivalent, the)
acl:relcl(length, equivalent)
case(length, of)
det(length, the)
nmod(equivalent, length)
case(cylinder, of)
det(cylinder, the)
nmod(length, cylinder)
punct(determine, . )
csubj(give, Multiplying)
det(result, the)
obj(Multiplying, result)
case(number, by)
det(number, the)
nmod(result, number)
case(cylinder, of)
nmod(number, cylinder)
case(engine, in)
det(engine, the)
nmod(cylinder, engine)
root(ROOT, give)
det(engine, the)
nmod:poss(displacement, engine)
case(engine, 's)
amod(displacement, total)
obj(give, displacement)
punct(give, .)
det(formula, the)
nsubj(dimension, formula)
cop(dimension, be)
punct(Af, :)
compound(dimension, Af)
punct(dimension, .)
root(ROOT, dimension)
case(inch, in)
nmod(dimension, inch)
punct(give, ,)
cc(give, and)
nsubj(give, fraction)
case(inch, of)
nmod(fraction, inch)
aux(give, will)
conj(dimension, give)
det(displacement, the)
obj(give, displacement)
case(inch, in)
nummod(inch, cubic)
obl(give, inch)
punct(dimension, .)
obj(give, dimension)
case(centimeter, in)
nmod(dimension, centimeter)
cc(fraction, and)
nsubj(give, fraction)
case(centimeter, of)
nmod(fraction, centimeter)
aux(give, will)
acl:relcl(dimension, give)
det(displacement, the)
obj(give, displacement)
case(centimeter, in)
nummod(centimeter, cubic)
obl(give, centimeter)
punct(cc., ()
appos(centimeter, cc.)
punct(cc., ))
punct(dimension, .)
nummod(inch, one)
nsubj(equal, inch)
root(ROOT, equal)
nummod(centimeter, 2.54)
obj(equal, centimeter)
punct(equal, :)
nummod(inch, one)
nummod(inch, cubic)
nsubj(equal, inch)
parataxis(equal, equal)
compound(cubic, 16.38)
nummod(centimeter, cubic)
obj(equal, centimeter)
punct(equal, .)
case(example, for)
obl(let, example)
punct(let, ,)
root(ROOT, let)
obj(let, 's)
xcomp(let, consider)
det(Aj, a)
amod(Aj, standard)
nummod(inch, 283)
nummod(inch, cubic)
compound(Aj, inch)
compound(Aj, chevy)
obj(consider, Aj)
punct(let, .)
det(engines, these)
nsubj(have, engines)
parataxis(let, have)
det(diameter, a)
compound(diameter, cylinder)
obj(have, diameter)
case(inch, of)
nummod(inch, 3)
case(8, -)
nmod(3, 7)
case(8, /)
nmod(3, 8)
nmod(diameter, inch)
cc(length, and)
det(length, a)
compound(length, stroke)
conj(inch, length)
case(inch, of)
nummod(inch, 3)
nmod(length, inch)
punct(let, .)
det(formula, the)
nsubj(become, formula)
punct(formula, ,)
case(fraction, with)
det(fraction, the)
nmod(formula, fraction)
acl(fraction, converted)
case(decimal, to)
obl(converted, decimal)
punct(become, ,)
root(ROOT, become)
xcomp(become, Af)
punct(Af, .)
mark(arrive, to)
xcomp(become, arrive)
case(answer, at)
det(answer, the)
obl(arrive, answer)
punct(multiply, ,)
conj(arrive, multiply)
det(number, the)
obj(multiply, number)
advmod(multiply, together)
mark(start, by)
advcl(multiply, start)
case(left, at)
det(left, the)
obl(start, left)
case(group, of)
det(group, the)
nmod(left, group)
cc(work, and)
conj(start, work)
case(right, to)
det(right, the)
obl(work, right)
punct(become, .)
det(step, the)
amod(step, different)
nsubj(look, step)
aux(look, will)
root(ROOT, look)
case(this, like)
obl(look, this)
punct(look, :)
nummod(compute, Af)
punct(Af, .)
compound(ratio, Compression)
nsubj:pass(compute, ratio)
det(cylinder, a)
nmod:poss(ratio, cylinder)
case(cylinder, 's)
compound(ratio, compression)
nmod(ratio, ratio)
aux:pass(compute, be)
root(ROOT, compute)
mark(compare, by)
advcl(compute, compare)
det(cylinder, the)
nmod:poss(volume, cylinder)
case(cylinder, 's)
obj(compare, volume)
punct(displacement, ,)
cc(displacement, or)
nmod:poss(displacement, its)
conj(volume, displacement)
punct(displacement, ,)
case(volume, with)
det(volume, the)
amod(volume, total)
obl(compare, volume)
case(cylinder, of)
det(cylinder, the)
nmod(volume, cylinder)
cc(chamber, and)
nmod:poss(chamber, its)
compound(chamber, combustion)
conj(cylinder, chamber)
punct(compute, .)
compound(volume, Cylinder)
nsubj:pass(determine, volume)
aux(determine, can)
aux:pass(determine, be)
root(ROOT, determine)
advmod(determine, mathematically)
cc(measure, but)
compound(volume, combustion)
compound(volume, chamber)
nsubj:pass(measure, volume)
aux(measure, must)
aux:pass(measure, be)
conj(determine, measure)
case(liquid, with)
det(liquid, a)
obl(measure, liquid)
punct(determine, .)
compound(volume, Cylinder)
nsubj(determined, volume)
cop(determined, be)
root(ROOT, determined)
case(manner, in)
advmod(manner, exactly)
det(manner, the)
amod(manner, same)
obl(determined, manner)
case(formula, as)
fixed(as, for)
det(formula, the)
compound(formula, displacement)
obl(determined, formula)
punct(determined, :)
nummod(install, Af)
punct(Af, .)
mark(measure, to)
advcl(install, measure)
det(volume, the)
obj(measure, volume)
case(one, of)
nmod(volume, one)
case(chamber, of)
det(chamber, the)
compound(chamber, combustion)
nmod(one, chamber)
case(head, in)
det(head, the)
compound(head, cylinder)
nmod(chamber, head)
punct(install, ,)
root(ROOT, install)
det(valve, the)
obj(install, valve)
cc(plug, and)
compound(plug, spark)
conj(valve, plug)
case(chamber, in)
det(chamber, the)
obl(install, chamber)
cc(support, and)
conj(install, support)
det(head, the)
obj(support, head)
mark(level, so)
fixed(so, that)
nsubj(level, it)
cop(level, be)
compound(surface, gasket)
nsubj(level, surface)
cop(level, be)
advcl(support, level)
punct(install, .)
advmod(pour, then)
root(ROOT, pour)
obj(pour, water)
cc(oil, or)
compound(oil, light)
conj(water, oil)
case(beaker, from)
det(beaker, a)
amod(beaker, graduate)
obl(pour, beaker)
case(chamber, into)
det(chamber, the)
obl(pour, chamber)
mark(fill, to)
advcl(pour, fill)
det(chamber, the)
obj(fill, chamber)
case(surface, to)
nmod:poss(surface, its)
compound(surface, gasket)
obl(fill, surface)
punct(pour, .)
aux(overfill, do)
advmod(overfill, not)
root(ROOT, overfill)
det(chamber, the)
obj(overfill, chamber)
punct(overfill, .)
nsubj(possible, this)
cop(possible, be)
root(ROOT, possible)
case(water, with)
obl(possible, water)
cc(liquid, and)
amod(liquid, other)
conj(water, liquid)
nsubj(have, that)
acl:relcl(liquid, have)
det(tension, a)
amod(tension, high)
compound(tension, surface)
obj(have, tension)
punct(tension, .)
amod(liquid, such)
nsubj(rise, liquid)
aux(rise, will)
ccomp(possible, rise)
case(height, to)
det(height, a)
amod(height, considerable)
obl(rise, height)
case(surface, above)
det(surface, the)
nmod(height, surface)
case(chamber, around)
det(chamber, the)
nmod(surface, chamber)
mark(flow, before)
nsubj(flow, they)
aux(flow, will)
advcl(rise, flow)
case(chamber, out)
case(chamber, of)
det(chamber, the)
obl(flow, chamber)
punct(possible, .)
det(amount, the)
nsubj:pass(determine, amount)
case(liquid, of)
nmod(amount, liquid)
acl(amount, pour)
case(chamber, into)
det(chamber, the)
obl(pour, chamber)
aux:pass(determine, be)
root(ROOT, determine)
mark(subtract, by)
advcl(determine, subtract)
det(quantity, the)
obj(subtract, quantity)
advmod(beaker, still)
case(beaker, in)
det(beaker, the)
obl(subtract, beaker)
mark(full, when)
det(chamber, the)
nsubj(full, chamber)
cop(full, be)
advcl(subtract, full)
case(quantity, from)
det(quantity, the)
amod(quantity, original)
obl(full, quantity)
punct(determine, . )
amod(beaker, most)
nsubj:pass(graduate, beaker)
aux:pass(graduate, be)
root(ROOT, graduate)
case(centimeter, in)
nummod(centimeter, cubic)
obl(graduate, centimeter)
punct(cc., ()
appos(centimeter, cc.)
punct(cc., ))
punct(graduate, ,)
advcl(graduate, make)
obj(make, it)
xcomp(make, necessary)
mark(convert, to)
advcl(necessary, convert)
det(result, the)
obj(convert, result)
case(inch, to)
nummod(inch, cubic)
nmod(result, inch)
punct(graduate, .)
advmod(converted, however)
punct(converted, ,)
det(displacement, the)
nsubj:pass(converted, displacement)
case(cylinder, of)
det(cylinder, the)
nmod(displacement, cylinder)
aux(converted, can)
aux:pass(converted, be)
root(ROOT, converted)
case(centimeter, to)
nummod(centimeter, cubic)
obl(converted, centimeter)
punct(converted, .)
det(ratio, the)
compound(ratio, compression)
nsubj(arrive, ratio)
advcl(same, arrive)
obl(arrive, at)
case(formula, with)
det(formula, the)
obl(arrive, formula)
aux(same, will)
cop(same, be)
det(same, the)
root(ROOT, same)
advmod(same, regardless)
mark(use, of)
mark(use, whether)
nummod(inch, cubic)
nsubj:pass(use, inch)
cc(cubic, or)
compound(centimeter, cubic)
conj(inch, centimeter)
aux:pass(use, be)
advcl(regardless, use)
punct(same, .)
det(precaution, the)
amod(precaution, only)
nsubj(be, precaution)
root(ROOT, be)
mark(quote, that)
det(volume, all)
nsubj:pass(quote, volume)
acl(volume, use)
case(formula, in)
det(formula, the)
obl(use, formula)
aux:pass(quote, be)
ccomp(be, quote)
case(term, in)
det(term, the)
amod(term, same)
obl(quote, term)
punct(be, .)
det(volume, the)
nsubj:pass(compute, volume)
case(opening, of)
det(opening, the)
compound(opening, cylinder)
nmod(volume, opening)
case(gasket, in)
det(gasket, the)
compound(gasket, head)
nmod(opening, gasket)
aux(compute, must)
aux:pass(compute, be)
root(ROOT, compute)
mark(multiply, by)
advcl(compute, multiply)
nmod:poss(area, its)
obj(multiply, area)
case(inch, in)
compound(inch, square)
obl(multiply, inch)
case(thickness, by)
det(gasket, the)
nmod:poss(thickness, gasket)
case(gasket, 's)
obl(multiply, thickness)
case(thousandth, in)
nmod(thickness, thousandth)
case(inch, of)
det(inch, a)
nmod(thousandth, inch)
punct(compute, .)
advmod(necessary, sometimes)
expl(necessary, it)
cop(necessary, be)
root(ROOT, necessary)
mark(calculate, to)
advmod(calculate, roughly)
csubj(necessary, calculate)
det(area, the)
compound(inch, square)
compound(area, inch)
obj(calculate, area)
case(opening, of)
det(opening, the)
nmod(area, opening)
cc(make, but)
det(calculation, the)
nsubj:pass(make, calculation)
aux(make, can)
advmod(make, usually)
aux:pass(make, be)
conj(necessary, make)
case(accuracy, with)
amod(accuracy, sufficient)
obl(make, accuracy)
mark(affect, that)
nsubj(affect, it)
aux(affect, will)
advmod(affect, not)
acl(accuracy, affect)
det(computation, the)
amod(computation, final)
obj(affect, computation)
punct(necessary, .)
det(volume, the)
nsubj:pass(add, volume)
case(opening, of)
det(opening, the)
nmod(volume, opening)
aux:pass(add, be)
root(ROOT, add)
case(volume, to)
det(volume, the)
compound(volume, combustion)
compound(volume, chamber)
obl(add, volume)
punct(volume, .)
det(thing, another)
obl:npmod(add, thing)
nsubj:pass(take, that)
aux(take, must)
aux:pass(take, be)
acl:relcl(thing, take)
case(consideration, into)
obl(take, consideration)
cop(volume, be)
det(volume, the)
parataxis(add, volume)
case(area, of)
det(area, the)
nmod(volume, area)
case(top, between)
det(top, the)
nmod(area, top)
case(piston, of)
det(piston, the)
nmod(top, piston)
cc(top, and)
det(top, the)
conj(top, top)
case(block, of)
det(block, the)
compound(block, cylinder)
nmod(top, block)
mark(position, when)
det(piston, the)
nsubj(position, piston)
cop(position, be)
case(position, in)
amod(position, top)
amod(position, dead)
compound(position, center)
advcl(top, position)
punct(add, .)
root(ROOT, compute)
det(volume, this)
obj(compute, volume)
mark(measure, by)
advcl(compute, measure)
det(distance, the)
obj(measure, distance)
case(top, from)
det(top, the)
obl(measure, top)
case(block, of)
det(block, the)
nmod(top, block)
case(head, to)
det(head, the)
compound(head, piston)
nmod(top, head)
advmod(accurately, as)
advmod(measure, accurately)
mark(possible, as)
advcl(accurately, possible)
case(micrometer, with)
det(micrometer, a)
compound(micrometer, depth)
obl(possible, micrometer)
cc(device, or)
det(device, some)
amod(device, other)
compound(measure, precision)
compound(device, measure)
conj(micrometer, device)
cc(multiply, and)
advmod(multiply, then)
conj(compute, multiply)
det(area, the)
obj(multiply, area)
case(cylinder, of)
det(cylinder, the)
nmod(area, cylinder)
case(depth, by)
det(depth, the)
obl(multiply, depth)
punct(compute, .)
det(formula, the)
nsubj(be, formula)
case(step, for)
det(step, this)
nmod(formula, step)
root(ROOT, be)
punct(be, :)
nummod(add, Af)
punct(Af, .)
det(volume, this)
nsubj:pass(add, volume)
aux:pass(add, be)
ccomp(be, add)
case(volume, to)
det(volume, the)
amod(volume, total)
obl(add, volume)
case(chamber, of)
det(chamber, the)
compound(chamber, combustion)
nmod(volume, chamber)
cc(opening, and)
compound(gasket, head)
compound(opening, gasket)
conj(chamber, opening)
punct(be, .)
det(total, the)
nsubj(volume, total)
case(volume, of)
det(volume, these)
nummod(volume, three)
nmod(total, volume)
cop(volume, be)
det(volume, the)
punct(volume, ``)
amod(volume, final)
compound(volume, combustion)
compound(volume, chamber)
root(ROOT, volume)
punct(volume, '')
punct(volume, .)
mark(compute, after)
det(factor, the)
nsubj(describe, factor)
advmod(describe, just)
advcl(compute, describe)
aux(compute, have)
aux:pass(compute, be)
advcl(apply, compute)
punct(apply, ,)
nsubj:pass(apply, they)
aux:pass(apply, be)
parataxis(volume, apply)
case(formula, to)
det(formula, the)
amod(formula, follow)
obl(apply, formula)
punct(apply, :)
nummod(let, Af)
punct(Af, .)
case(example, for)
det(example, a)
obl(let, example)
root(ROOT, let)
obj(let, 's)
xcomp(let, dream)
compound:prt(dream, up)
det(engine, a)
obj(dream, engine)
nsubj(have, that)
acl:relcl(engine, have)
det(volume, a)
amod(volume, final)
compound(volume, combustion)
compound(volume, chamber)
obj(have, volume)
case(inch, of)
nummod(inch, 5)
nummod(inch, cubic)
nmod(volume, inch)
cc(volume, and)
det(volume, a)
compound(volume, cylinder)
conj(inch, volume)
case(inch, of)
nummod(inch, 45)
nummod(inch, cubic)
nmod(volume, inch)
punct(apply, .)
advcl(have, apply)
det(figure, these)
obj(apply, figure)
case(formula, to)
det(formula, the)
obl(apply, formula)
nsubj(get, we)
acl:relcl(formula, get)
det(equation, the)
obj(get, equation)
punct(let, :)
nummod(use, Af)
punct(Af, .)
det(ratio, the)
compound(ratio, compression)
nsubj(10, ratio)
cop(10, be)
root(ROOT, 10)
case(1, to)
nmod(10, 1)
punct(10, .)
det(method, this)
nsubj:pass(use, method)
case(ratio, of)
compound(compression, compute)
compound(ratio, compression)
nmod(method, ratio)
aux(use, can)
advmod(use, not)
aux:pass(use, be)
parataxis(10, use)
advmod(use, accurately)
case(engines, for)
obl(use, engines)
nsubj(have, that)
acl:relcl(engines, have)
obj(have, piston)
case(head, with)
cc:preconj(dome, either)
amod(head, dome)
cc(shape, or)
advmod(shape, irregularly)
conj(dome, shape)
obl(have, head)
punct(use, .)
det(irregularity, any)
nsubj(make, irregularity)
case(head, on)
det(head, the)
compound(head, piston)
nmod(irregularity, head)
aux(make, will)
root(ROOT, make)
obj(make, it)
xcomp(make, impossible)
punct(make, ,)
case(means, with)
amod(means, normal)
obl(make, means)
punct(make, ,)
mark(determine, to)
advcl(make, determine)
det(volume, the)
amod(volume, final)
compound(volume, combustion)
compound(volume, chamber)
obj(determine, volume)
mark(compute, because)
det(volume, the)
nsubj:pass(compute, volume)
acl(volume, displace)
case(head, by)
det(head, the)
compound(head, piston)
obl(displace, head)
aux(compute, can)
advmod(compute, not)
aux:pass(compute, be)
advmod(compute, readily)
advcl(determine, compute)
punct(make, .)
det(way, the)
amod(way, only)
nsubj(be, way)
mark(determine, to)
acl(way, determine)
det(volume, the)
amod(volume, final)
compound(volume, combustion)
compound(volume, chamber)
obj(determine, volume)
mark(use, when)
amod(piston, such)
nsubj:pass(use, piston)
aux:pass(use, be)
advcl(determine, use)
root(ROOT, be)
mark(measure, by)
advcl(be, measure)
obj(measure, it)
case(liquid, with)
obl(measure, liquid)
mark(bolt, while)
det(head, the)
compound(head, cylinder)
nsubj:pass(bolt, head)
aux:pass(bolt, be)
advcl(measure, bolt)
case(block, to)
det(block, the)
compound(block, cylinder)
obl(bolt, block)
cc(position, and)
det(piston, the)
nsubj(position, piston)
cop(position, be)
case(position, in)
amod(position, top)
amod(position, dead)
compound(position, center)
conj(bolt, position)
punct(be, .)
compound(ratio, gear)
root(ROOT, ratio)
punct(ratio, --)
compound(relationship, speed)
parataxis(ratio, relationship)
expl(be, there)
root(ROOT, be)
nummod(version, four)
nsubj(be, version)
case(formula, of)
det(formula, the)
nmod(version, formula)
nsubj(involve, that)
acl:relcl(formula, involve)
det(relationship, the)
obj(involve, relationship)
case(speed, of)
compound(speed, car)
nmod(relationship, speed)
punct(speed, ,)
compound(speed, engine)
conj(speed, speed)
punct(axle, ,)
compound(axle, rear)
compound(ratio, axle)
compound(ratio, gear)
conj(speed, ratio)
punct(size, ,)
cc(size, and)
compound(size, rear)
compound(size, tire)
conj(relationship, size)
punct(be, .)
mark(use, by)
advcl(determine, use)
det(version, the)
amod(version, appropriate)
obj(use, version)
det(one, any)
nsubj:pass(determine, one)
case(factor, of)
det(factor, these)
nmod(one, factor)
aux(determine, can)
aux:pass(determine, be)
root(ROOT, determine)
case(combination, for)
det(combination, any)
obl(determine, combination)
case(three, of)
det(three, the)
amod(three, other)
nmod(combination, three)
punct(determine, .)
mark(simplify, to)
advcl(substitute, simplify)
det(formula, the)
obj(simplify, formula)
det(symbol, a)
amod(symbol, representative)
nsubj:pass(substitute, symbol)
aux:pass(substitute, be)
root(ROOT, substitute)
case(each, for)
obl(substitute, each)
case(factor, of)
det(factor, the)
nmod(each, factor)
punct(substitute, .)
nsubj(mph, these)
cop(mph, be)
root(ROOT, mph)
case(speed, for)
compound(speed, car)
nmod(mph, speed)
punct(mph, ,)
case(speed, for)
compound(speed, engine)
compound(speed, crankshaft)
nmod(mph, speed)
punct(mph, ,)
case(ratio, for)
compound(axle, rear)
compound(ratio, axle)
compound(ratio, gear)
nmod(speed, ratio)
punct(ratio, ,)
case(size, for)
compound(size, Tire)
nmod(ratio, size)
punct(determine, .)
compound(size, Tire)
nsubj:pass(determine, size)
aux(determine, can)
aux:pass(determine, be)
parataxis(mph, determine)
case(way, in)
amod(way, several)
obl(determine, way)
cc(one, but)
det(one, the)
nsubj:pass(determine, one)
nsubj(easiest, that)
cop(easiest, be)
det(easiest, the)
acl:relcl(one, easiest)
cc(accurate, and)
advmod(accurate, as)
conj(easiest, accurate)
mark(be, as)
nsubj(be, any)
advcl(accurate, be)
mark(measure, by)
advcl(be, measure)
det(radius, the)
amod(radius, effective)
obj(measure, radius)
case(wheel, of)
det(wheel, a)
nmod(radius, wheel)
cc(assembly, and)
compound(assembly, tire)
conj(wheel, assembly)
punct(mph, .)
nsubj:pass(do, this)
aux:pass(do, be)
root(ROOT, do)
mark(measure, by)
advcl(do, measure)
det(distance, the)
obj(measure, distance)
case(surface, from)
det(surface, the)
obl(measure, surface)
case(which, on)
obl(rest, which)
det(tire, the)
nsubj(rest, tire)
aux(rest, be)
acl:relcl(surface, rest)
case(center, to)
det(center, the)
obl(rest, center)
case(shaft, of)
det(shaft, the)
compound(axle, rear)
compound(shaft, axle)
nmod(center, shaft)
punct(do, . )
det(tire, a)
nsubj:pass(inflate, tire)
aux(inflate, must)
aux:pass(inflate, be)
root(ROOT, inflate)
case(pressure, to)
nmod:poss(pressure, its)
amod(pressure, normal)
amod(pressure, hot)
compound(pressure, operating)
obl(inflate, pressure)
cc(load, and)
det(car, the)
nsubj:pass(load, car)
aux(load, must)
aux:pass(load, be)
conj(inflate, load)
case(weight, to)
nmod:poss(weight, its)
compound(weight, operating)
obl(load, weight)
mark(make, when)
det(measurement, this)
nsubj:pass(make, measurement)
aux:pass(make, be)
advcl(load, make)
punct(inflate, .)
det(measurement, the)
nsubj(inch, measurement)
aux(inch, must)
cop(inch, be)
case(inch, in)
root(ROOT, inch)
punct(inch, .)
det(fraction, any)
nsubj:pass(converted, fraction)
case(inch, of)
det(inch, a)
nmod(fraction, inch)
acl(inch, involve)
case(measurement, in)
det(measurement, the)
obl(involve, measurement)
aux(converted, must)
aux:pass(converted, be)
root(ROOT, converted)
case(equivalent, to)
det(equivalent, a)
amod(equivalent, decimal)
obl(converted, equivalent)
mark(simplify, to)
acl(equivalent, simplify)
det(mathematics, the)
obj(simplify, mathematics)
punct(converted, .)
mark(measure, when)
compound(size, tire)
nsubj:pass(measure, size)
aux:pass(measure, be)
advcl(use, measure)
case(manner, in)
det(manner, this)
obl(measure, manner)
det(constant, a)
nsubj:pass(use, constant)
case(168, of)
nmod(constant, 168)
aux:pass(use, be)
root(ROOT, use)
case(formula, in)
det(formula, the)
obl(use, formula)
punct(use, .)
mark(determine, to)
advcl(Af, determine)
compound(speed, car)
obj(determine, speed)
case(combination, for)
det(combination, a)
amod(combination, give)
obl(determine, combination)
case(speed, of)
compound(speed, engine)
nmod(combination, speed)
punct(ratio, ,)
compound(ratio, gear)
conj(speed, ratio)
punct(size, ,)
cc(size, and)
compound(size, tire)
conj(speed, size)
punct(Af, ,)
det(formula, the)
nsubj(Af, formula)
cop(Af, be)
punct(Af, :)
root(ROOT, Af)
punct(Af, .)
case(speed, for)
det(speed, a)
compound(speed, engine)
nmod(Af, speed)
case(rpm, of)
nummod(rpm, 5000)
nmod(speed, rpm)
punct(ratio, ,)
det(ratio, a)
compound(ratio, gear)
conj(speed, ratio)
case(4.00, of)
nmod(ratio, 4.00)
case(1, to)
nmod(4.00, 1)
punct(radius, ,)
cc(radius, and)
det(radius, a)
compound(radius, tire)
conj(speed, radius)
case(inch, of)
nummod(inch, 13)
nmod(radius, inch)
punct(look, ,)
det(equation, the)
nsubj(look, equation)
aux(look, would)
acl:relcl(radius, look)
case(this, like)
obl(look, this)
punct(Af, :)
nsubj(Af, Af)
punct(Af, .)
mark(determine, to)
advcl(Af, determine)
compound(speed, engine)
obj(determine, speed)
case(combination, for)
det(combination, a)
amod(combination, give)
obl(determine, combination)
case(factor, of)
det(factor, the)
amod(factor, other)
nummod(factor, three)
nmod(combination, factor)
det(formula, the)
nsubj(Af, formula)
cop(Af, be)
punct(Af, :)
root(ROOT, Af)
punct(Af, .)
acl(Af, use)
det(figure, the)
amod(figure, same)
obj(use, figure)
case(example, as)
case(example, for)
det(example, the)
amod(example, previous)
obl(become, example)
punct(become, ,)
det(equation, the)
nsubj(become, equation)
parataxis(Af, become)
punct(Af, :)
nsubj(Af, Af)
punct(Af, .)
mark(determine, to)
advcl(Af, determine)
det(ratio, the)
compound(axle, rear)
compound(ratio, axle)
compound(ratio, gear)
obj(determine, ratio)
case(combination, for)
det(combination, a)
nmod(ratio, combination)
case(factor, of)
det(factor, the)
amod(factor, other)
nummod(factor, three)
nmod(combination, factor)
punct(Af, ,)
det(formula, the)
nsubj(Af, formula)
cop(Af, be)
punct(Af, :)
root(ROOT, Af)
punct(Af, .)
acl(Af, use)
det(figure, the)
obj(use, figure)
case(example, from)
det(example, the)
amod(example, previous)
obl(use, example)
punct(become, ,)
det(equation, the)
nsubj(become, equation)
parataxis(Af, become)
punct(become, :)
nummod(., Af)
punct(Orlando, .)
root(ROOT, Orlando)
punct(Orlando, ,)
list(Orlando, Fla.)
punct(Orlando, ,)
list(Orlando, Feb)
punct(Orlando, .)
root(ROOT, 2)
punct(2, --)
det(mile, the)
amod(mile, best)
nummod(year, 2)
punct(year, -)
obl:npmod(old, year)
punct(old, -)
amod(mile, old)
compound(mile, pace)
nsubj(that, mile)
case(date, up)
fixed(up, to)
nmod(mile, date)
case(Raceway, at)
compound(Raceway, Ben)
compound(Raceway, White)
nmod(date, Raceway)
aux(that, have)
cop(that, be)
root(ROOT, that)
case(Mary, of)
nmod(that, Mary)
flat(Mary, Liner)
punct(Mainliner, ()
appos(Mary, Mainliner)
punct(Mainliner, -)
flat(Mainliner, Highland)
flat(Mainliner, Ellen)
punct(Mainliner, ))
punct(Mary, ,)
det(member, a)
appos(Mary, member)
case(Dick, of)
det(Dick, the)
nmod(member, Dick)
flat(Dick, Williams)
amod(Dick, stable)
punct(Dick, ,)
nsubj:pass(clock, who)
aux:pass(clock, be)
acl:relcl(Dick, clock)
obj(clock, 2:25)
punct(that, .)
nsubj:pass(own, she)
aux:pass(own, be)
root(ROOT, own)
case(Ralph, by)
obl(own, Ralph)
flat(Ralph, H.)
flat(Ralph, Kroening)
punct(Ralph, ,)
appos(Ralph, Milwaukee)
punct(Ralph, ,)
appos(Ralph, Wis.)
punct(Ralph, ,)
nsubj(feel, who)
punct(feel, ,)
case(railbird, accord)
fixed(accord, to)
det(railbird, the)
obl(feel, railbird)
punct(feel, ,)
aux(feel, can)
ccomp(own, feel)
advmod(proud, justly)
xcomp(feel, proud)
case(she, of)
obl(proud, she)
punct(own, .)
amod(mile, other)
amod(mile, good)
nsubj(Debonnie, mile)
aux(Debonnie, have)
cop(Debonnie, be)
case(Debonnie, by)
root(ROOT, Debonnie)
punct(Dale, ()
appos(Debonnie, Dale)
flat(Dale, Frost)
punct(Dale, -)
appos(Dale, Debby)
flat(Debby, Hanover)
punct(Dale, ))
cc(Time, and)
compound(Time, prompt)
conj(Dale, Time)
punct(Adios, ()
appos(Time, Adios)
punct(Adios, -)
case(Time, on)
nmod(Adios, Time)
punct(Adios, ))
case(2:28-:36, in)
nmod(Time, 2:28-:36)
punct(Debonnie, ;)
punct(Debonnie, ;)
parataxis(Debonnie, Kimberly)
nsubj(outstanding, Gal)
punct(Galophone, ()
appos(Gal, Galophone)
punct(Galophone, -)
appos(Galophone, Kimberly)
appos(Galophone, Hanover)
punct(Galophone, ))
appos(Galophone, 2:26.2)
punct(Gal, ;)
punct(Gal, ;)
compound(Hanover, Laguerre)
appos(Gal, Hanover)
punct(heel, ()
compound(heel, Tar)
appos(Hanover, heel)
punct(heel, -)
compound(Hanover, Lotus)
appos(heel, Hanover)
punct(Hanover, ))
cc(Monel, and)
conj(Hanover, Monel)
punct(heel, ()
compound(heel, Tar)
appos(Monel, heel)
punct(heel, -)
appos(heel, Miracle)
appos(heel, Byrd)
punct(Byrd, ))
case(2:34, in)
obl(outstanding, 2:34)
punct(outstanding, .)
compound(Hanover, Laguerre)
nsubj(outstanding, Hanover)
cop(outstanding, be)
root(ROOT, outstanding)
case(type, in)
obl(outstanding, type)
cc(conformation, and)
conj(type, conformation)
punct(body, --)
amod(body, good)
appos(type, body)
punct(plenty, ,)
conj(body, plenty)
case(girth, of)
compound(girth, heart)
nmod(plenty, girth)
punct(stand, ,)
parataxis(body, stand)
advmod(leg, straight)
case(leg, on)
nmod:poss(leg, he)
obl(stand, leg)
case(foot, on)
amod(foot, excellent)
nmod(leg, foot)
punct(stand, --)
cc(have, and)
conj(stand, have)
det(gait, the)
amod(gait, smoothest)
obj(have, gait)
punct(outstanding, .)
det(colt, this)
nsubj(most, colt)
cop(most, be)
case(most, behind)
root(ROOT, most)
case(old, of)
det(old, the)
amod(old, other)
nummod(year, 2)
punct(year, -)
compound(old, year)
punct(old, -)
nmod(most, old)
case(Simpson, in)
det(Simpson, the)
nsubj(stable, Simpson)
amod(old, stable)
cc(show, but)
aux(show, can)
conj(most, show)
case(pace, about)
advmod(much, as)
amod(pace, much)
obl(show, pace)
case(any, as)
obl(show, any)
case(they, of)
nmod(any, they)
punct(most, .)
nsubj(show, Monel)
root(ROOT, show)
obj(show, improvement)
case(out, with)
det(out, each)
compound(out, work)
punct(out, -)
nmod(improvement, out)
cc(look, and)
conj(show, look)
det(makings, the)
obj(look, makings)
case(mare, of)
det(mare, a)
amod(mare, good)
compound(mare, brood)
nmod(makings, mare)
mark(win, after)
advcl(look, win)
nmod:poss(share, she)
obj(win, share)
case(race, of)
nmod(share, race)
punct(show, .)
nsubj(look, Stardel)
punct(Pride, ()
nmod:poss(Pride, Star)
case(Star, 's)
appos(Stardel, Pride)
punct(Pride, -)
compound(Hanover, Starlette)
appos(Pride, Hanover)
punct(Hanover, ))
punct(Pride, ,)
appos(Pride, 2:34)
punct(look, ,)
root(ROOT, look)
advmod(promise, quite)
xcomp(look, promise)
punct(look, .)
compound(Hanover, Fury)
nsubj(work, Hanover)
punct(-fay, ()
compound(-fay, Hoot)
compound(-fay, Mon)
appos(Hanover, -fay)
punct(-fay, ))
punct(Caper, ,)
appos(Hanover, Caper)
punct(Hoot, ()
appos(Caper, Hoot)
compound(Hanover, Mon-Columbia)
appos(Hoot, Hanover)
punct(Hoot, ))
cc(Isaac, and)
conj(Hanover, Isaac)
punct(Hoot, ()
appos(Isaac, Hoot)
compound(Hanover, mon-goddess)
flat(Hoot, Hanover)
punct(Hoot, ))
aux(work, have)
aux(work, be)
root(ROOT, work)
advmod(work, together)
cc(equal, but)
aux(equal, have)
advmod(equal, not)
conj(work, equal)
nmod:poss(work, they)
amod(work, best)
obj(equal, work)
xcomp(equal, do)
det(week, some)
obl:npmod(ago, week)
advmod(do, ago)
punct(work, . )
nsubj(work, Fury)
cc(Caper, and)
conj(Fury, Caper)
root(ROOT, work)
case(2:35, in)
obl(work, 2:35)
cc(do, and)
conj(work, do)
obj(do, it)
case(ease, with)
obl(do, ease)
punct(work, .)
nsubj(colt, they)
cop(colt, be)
nummod(colt, two)
amod(colt, good)
root(ROOT, colt)
case(type, of)
amod(type, different)
nmod(colt, type)
punct(colt, . )
nsubj(upstanding, Fury)
cop(upstanding, be)
root(ROOT, upstanding)
cc(side, and)
case(side, on)
det(side, the)
amod(side, rangy)
conj(upstanding, side)
punct(type, ,)
cc(type, and)
nsubj(type, Caper)
cop(type, be)
advmod(type, more)
det(type, the)
amod(type, compact)
conj(upstanding, type)
punct(upstanding, . )
nsubj(see, I)
aux(see, have)
advmod(see, never)
root(ROOT, see)
obj(see, Caper)
case(foot, off)
nmod:poss(foot, he)
obl(see, foot)
punct(see, --)
nsubj(seem, he)
parataxis(see, seem)
mark(know, to)
xcomp(seem, know)
obj(know, nothing)
case(trot, but)
punct(trot, ')
nmod(nothing, trot)
punct(trot, ')
cc(keep, and)
conj(know, keep)
xcomp(keep, try)
det(little, a)
obl:npmod(harder, little)
xcomp(try, harder)
mark(ask, if)
advcl(try, ask)
mark(do, to)
xcomp(ask, do)
mark(make, so)
punct(so, .)
nsubj(make, Fury)
aux(make, have)
advcl(do, make)
det(mistake, a)
amod(mistake, few)
obj(make, mistake)
cc(look, but)
conj(make, look)
case(prospect, like)
det(prospect, a)
amod(prospect, wonderful)
obl(look, prospect)
punct(look, ,)
case(gait, with)
nmod:poss(gait, he)
amod(gait, impressive)
nmod(prospect, gait)
cc(stride, and)
conj(gait, stride)
nsubj(make, which)
advmod(make, certainly)
acl:relcl(gait, make)
obj(make, he)
xcomp(make, cover)
det(ground, the)
obj(cover, ground)
punct(make, .)
nsubj(work, Trackdown)
punct(torrid, ()
appos(Trackdown, torrid)
punct(torrid, -)
compound(Lady, Mighty)
appos(torrid, Lady)
punct(torrid, ))
aux(work, have)
conj(make, work)
det(mile, a)
obj(work, mile)
case(2:33.3, in)
obl(work, 2:33.3)
punct(see, .)
nsubj(take, it)
root(ROOT, take)
det(colt, this)
obj(take, colt)
amod(week, several)
obl:tmod(take, week)
mark(strike, to)
advcl(take, strike)
det(pace, a)
obj(strike, pace)
punct(take, .)
advmod(ease, then)
punct(ease, ,)
case(emasculation, after)
obl(ease, emasculation)
punct(ease, ,)
nsubj:pass(ease, he)
aux:pass(ease, be)
root(ROOT, ease)
compound:prt(ease, up)
case(couple, for)
det(couple, a)
obl(ease, couple)
case(week, of)
nmod(couple, week)
punct(ease, .)
nsubj(thrive, he)
aux(thrive, have)
root(ROOT, thrive)
case(all, on)
obl(thrive, all)
nsubj(go, he)
aux(go, have)
acl:relcl(all, go)
compound:prt(go, through)
cc(look, and)
conj(thrive, look)
det(makings, the)
obj(look, makings)
case(horse, of)
det(horse, a)
amod(horse, good)
amod(horse, little)
compound(horse, race)
nmod(makings, horse)
punct(makings, .)
compound(Hanover, thor)
nsubj(prospect, Hanover)
punct(Adios, ()
appos(Hanover, Adios)
punct(Adios, -)
compound(Hanover, trustful)
appos(Adios, Hanover)
punct(Adios, ))
cop(prospect, be)
det(prospect, a)
amod(prospect, wonderful)
compound(prospect, look)
parataxis(thrive, prospect)
cc(individual, and)
det(individual, another)
amod(individual, good)
conj(prospect, individual)
punct(individual, ,)
case(conformation, with)
amod(conformation, solid)
punct(conformation, ,)
amod(conformation, rug)
nmod(individual, conformation)
punct(good, ,)
conj(conformation, good)
punct(bone, ,)
amod(bone, flat)
conj(conformation, bone)
cc(foot, and)
amod(foot, excellent)
conj(conformation, foot)
punct(thrive, .)
det(colt, this)
nsubj(arrive, colt)
root(ROOT, arrive)
case(early, at)
det(Raceway, the)
compound(early, Raceway)
obl(arrive, early)
amod(November, last)
obl:tmod(arrive, November)
punct(put, ,)
cc(put, and)
advmod(put, immediately)
aux:pass(put, be)
conj(arrive, put)
case(harness, into)
obl(put, harness)
cc(drive, and)
obl:npmod(drive, line)
punct(drive, -)
conj(harness, drive)
case(day, for)
det(day, a)
amod(day, few)
obl(drive, day)
punct(put, ,)
cc(put, and)
advmod(put, then)
conj(put, put)
case(cart, to)
obl(put, cart)
cc(break, and)
conj(put, break)
advmod(break, in)
advmod(nicely, very)
advmod(break, nicely)
punct(break, ,)
advcl(break, know)
obj(know, nothing)
case(trot, but)
nmod(nothing, trot)
punct(arrive, .)
nsubj(appear, he)
root(ROOT, appear)
case(hopple, in)
det(hopple, the)
obl(appear, hopple)
case(November, about)
obl(appear, November)
nummod(November, 14)
punct(treat, ,)
aux:pass(treat, be)
conj(appear, treat)
case(worm, for)
obl(treat, worm)
case(18th, on)
det(18th, the)
obl(treat, 18th)
punct(treat, ,)
det(date, the)
amod(date, latter)
nsubj(time, date)
cop(time, be)
det(time, the)
amod(time, first)
advcl(treat, time)
nsubj(strike, he)
acl:relcl(time, strike)
det(pace, a)
amod(pace, real)
obj(strike, pace)
punct(appear, .)
case(December, on)
obl(pace, December)
nummod(December, 5)
nsubj(pace, he)
root(ROOT, pace)
det(mile, a)
obj(pace, mile)
case(55, in)
obl(pace, 55)
case(around, on)
det(around, the)
advmod(around, twice)
punct(around, -)
obl(pace, around)
punct(pace, ,)
conj(around, out)
case(position, in)
amod(position, third)
obl(pace, position)
det:predet(way, all)
det(way, the)
obl:npmod(pace, way)
punct(pace, .)
det(colt, this)
nsubj(do, colt)
aux(do, have)
root(ROOT, do)
obj(do, everything)
acl(everything, ask)
case(he, of)
obl(ask, he)
punct(do, ,)
cc(do, and)
conj(do, do)
obj(do, it)
case(ease, with)
obl(do, ease)
punct(do, .)
nmod:poss(mile, he)
amod(mile, best)
nsubj(2:32.2, mile)
case(date, to)
nmod(mile, date)
cop(2:32.2, be)
root(ROOT, 2:32.2)
punct(2:32.2, .)
nsubj(colt, Gamecock)
punct(heel, ()
compound(heel, Tar)
appos(Gamecock, heel)
punct(heel, -)
compound(Hanover, Terka)
appos(heel, Hanover)
punct(heel, ))
cop(colt, be)
det(colt, another)
amod(colt, promise)
parataxis(2:32.2, colt)
punct(2:32.2, ,)
cc(2:32.2, and)
nmod:poss(time, he)
amod(time, best)
nsubj(2:32.2, time)
cop(2:32.2, be)
conj(colt, 2:32.2)
punct(colt, .)
nsubj(one, this)
cop(one, be)
root(ROOT, one)
case(heel, of)
det(heel, the)
amod(temper, best)
punct(temper, -)
amod(heel, temper)
compound(heel, Tar)
nmod(one, heel)
advmod(center, ever)
case(center, at)
det(center, the)
nmod(heel, center)
punct(one, .)
det(time, the)
amod(time, first)
obl:tmod(stand, time)
nsubj:pass(harness, he)
aux:pass(harness, be)
acl:relcl(time, harness)
nsubj(stand, he)
root(ROOT, stand)
case(mare, like)
det(mare, a)
amod(mare, gentle)
amod(mare, old)
obl(stand, mare)
punct(stand, ;)
punct(stand, ;)
det(crupper, the)
nsubj(seem, crupper)
case(tail, under)
nmod:poss(tail, he)
nmod(crupper, tail)
parataxis(stand, seem)
mark(stuff, to)
cop(stuff, be)
amod(stuff, old)
xcomp(seem, stuff)
punct(stand, .)
det(time, the)
amod(time, fourth)
nsubj(delay, time)
case(harness, in)
nmod(time, harness)
nsubj(walk, he)
root(ROOT, walk)
advmod(walk, off)
case(gentleman, like)
det(gentleman, a)
obl(walk, gentleman)
punct(walk, .)
aux:pass(blistered, be)
advcl(walk, blistered)
case(curb, for)
obl(blistered, curb)
aux(delay, have)
conj(walk, delay)
nmod:poss(work, he)
obj(delay, work)
advmod(delay, somewhat)
punct(delay, .)
cc(show, but)
case(date, up)
fixed(up, to)
obl(show, date)
nsubj(show, he)
aux(show, have)
root(ROOT, show)
advmod(much, as)
advmod(show, much)
case(any, as)
obl(show, any)
case(Hustler, in)
det(Hustler, the)
amod(Hustler, big)
compound(Hustler, Simpson)
amod(Hustler, stable)
punct(Hustler, .)
nmod(any, Hustler)
punct(Dream, ()
compound(Dream, Knight)
appos(Hustler, Dream)
punct(Dream, -)
appos(Dream, Torkin)
punct(Dream, ))
cop(rascal, be)
det(rascal, a)
amod(rascal, playful)
compound(rascal, bay)
parataxis(show, rascal)
case(colt, of)
det(colt, a)
nmod(rascal, colt)
punct(rascal, ,)
advmod(gait, not)
det(gait, the)
amod(gait, best)
amod(colt, gait)
punct(pace, ,)
cc(pace, but)
nsubj(pace, he)
advmod(pace, surely)
aux(pace, can)
conj(rascal, pace)
cc(there, and)
cop(there, be)
advmod(there, right)
conj(pace, there)
case(they, with)
obl(there, they)
punct(lead, ,)
cc(lead, and)
advmod(lead, sometimes)
conj(there, lead)
obj(lead, they)
punct(lead, ,)
case(mile, in)
det(mile, the)
amod(mile, best)
obl(lead, mile)
punct(rascal, .)
compound(freight, torrid)
nsubj(colt, freight)
punct(Breeze, ()
compound(Breeze, torrid)
punct(Breeze, -)
appos(freight, Breeze)
case(Hal, on)
nmod(Breeze, Hal)
punct(Breeze, ))
cop(colt, be)
det(colt, a)
advmod(rug, very)
amod(colt, rug)
punct(colt, ,)
advmod(make, strong)
punct(make, -)
amod(colt, make)
root(ROOT, colt)
case(stride, with)
det(stride, a)
amod(stride, wonderful)
nmod(colt, stride)
nsubj(do, who)
aux(do, have)
acl:relcl(stride, do)
case(ease, with)
obl(do, ease)
nsubj(ask, everything)
acl:relcl(ease, ask)
case(he, of)
obl(ask, he)
punct(colt, .)
nmod:poss(time, he)
amod(time, best)
nsubj(2:33, time)
cop(2:33, be)
case(2:33, around)
root(ROOT, 2:33)
punct(2:33, .)
nsubj(know, Strongheart)
punct(Adios, ()
appos(Strongheart, Adios)
punct(Adios, -)
compound(Gal, direct)
appos(Adios, Gal)
punct(Adios, ))
punct(colt, ,)
det(colt, a)
amod(look, fair)
punct(look, -)
amod(colt, look)
compound(colt, sorrel)
conj(Adios, colt)
punct(know, ,)
parataxis(2:33, know)
obj(know, nothing)
case(pace, but)
nmod(nothing, pace)
cc(there, and)
aux(there, have)
cop(there, be)
advmod(there, right)
conj(know, there)
case(mile, in)
det(mile, the)
amod(mile, best)
obl(there, mile)
punct(2:33, .)
compound(Adios, torrid)
nsubj(masculine, Adios)
punct(torrid, ()
appos(Adios, torrid)
punct(torrid, -)
appos(torrid, Adios)
flat(Adios, Molly)
punct(torrid, ))
cop(masculine, be)
advmod(masculine, not)
advmod(masculine, so)
root(ROOT, masculine)
case(most, as)
obl(masculine, most)
case(colt, of)
det(colt, the)
nmod(most, colt)
punct(like, ,)
cc(like, but)
nsubj(like, I)
conj(masculine, like)
nmod:poss(type, he)
obj(like, type)
cc(one, and)
nsubj(one, he)
advmod(one, certainly)
cop(one, be)
conj(like, one)
case(pacer, of)
det(pacer, the)
amod(gait, best)
punct(gait, -)
amod(pacer, gait)
nmod(one, pacer)
case(grounds, on)
det(grounds, the)
nmod(pacer, grounds)
punct(masculine, .)
advcl(come, Blistered)
case(curb, for)
obl(Blistered, curb)
cc(lay, and)
conj(Blistered, lay)
compound:prt(lay, off)
nummod(week, three)
obl:tmod(lay, week)
punct(come, ,)
nsubj(come, he)
aux(come, be)
root(ROOT, come)
advmod(come, along)
advmod(come, fine)
cc(look, and)
conj(come, look)
case(pacer, like)
det(pacer, a)
obl(look, pacer)
case(I, to)
nmod(pacer, I)
punct(come, .)
compound(Flyer, First)
nsubj(look, Flyer)
punct(Flyer, ()
compound(Flyer, Frisco)
appos(Flyer, Flyer)
punct(Flyer, -)
compound(Light, Castle)
appos(Flyer, Light)
punct(Light, ))
root(ROOT, look)
case(candidate, like)
det(candidate, a)
amod(candidate, splendid)
obl(look, candidate)
case(Stakes, for)
det(Stakes, the)
compound(Stakes, Illinois)
nmod(candidate, Stakes)
punct(look, .)
nmod:poss(time, he)
amod(time, best)
nsubj(2:33.2, time)
cop(2:33.2, be)
root(ROOT, 2:33.2)
punct(2:33.2, .)
det(colt, the)
nsubj(have, colt)
case(stable, in)
nmod:poss(stable, Simpson)
case(Simpson, 's)
nmod(colt, stable)
parataxis(2:33.2, have)
obj(have, little)
mark(improve, if)
nsubj(improve, anything)
case(filly, on)
det(filly, the)
nmod(anything, filly)
punct(pacer, ,)
advmod(pacer, especially)
det(pacer, the)
appos(filly, pacer)
punct(Justine, .)
nsubj(improve, Justine)
flat(Justine, Hanover)
punct(Sampson, ()
appos(Justine, Sampson)
flat(Sampson, Hanover)
punct(Hanover, -)
compound(Hanover, Justitia)
appos(Sampson, Hanover)
punct(Hanover, ))
aux(improve, be)
conj(have, improve)
case(out, with)
det(out, each)
compound(out, work)
punct(out, -)
obl(improve, out)
cc(pace, and)
conj(out, pace)
conj(out, 2:32)
punct(2:33.2, .)
nummod(week, 4)
obl:npmod(ago, week)
advmod(show, ago)
punct(show, .)
nsubj(show, Mrs.)
flat(Mrs., freight)
punct(Dream, ()
compound(Dream, Knight)
appos(Mrs., Dream)
punct(Dream, -)
compound(Reed, miss)
appos(Dream, Reed)
punct(Dream, ))
root(ROOT, show)
obj(show, promise)
cc(do, and)
conj(show, do)
obj(do, it)
case(form, in)
amod(form, good)
obl(do, form)
punct(2:35, ,)
cc(2:35, and)
nmod:poss(time, she)
amod(time, best)
nsubj(2:35, time)
cop(2:35, be)
advmod(2:35, about)
conj(show, 2:35)
punct(Hoopla, .)
parataxis(show, Hoopla)
punct(heel, ()
compound(heel, Tar)
nsubj(knock, heel)
punct(heel, -)
compound(Hanover, Holiday)
appos(heel, Hanover)
punct(heel, ))
punct(heel, ,)
det(filly, a)
appos(heel, filly)
nsubj(want, that)
acl:relcl(filly, want)
mark(trot, to)
xcomp(want, trot)
punct(knock, ,)
root(ROOT, knock)
obj(knock, herself)
obl:tmod(knock, October)
nummod(October, 31)
cc(November, and)
conj(October, November)
nummod(November, 1)
advcl(knock, fight)
det(hopple, the)
obj(fight, hopple)
punct(knock, .)
nsubj:pass(train, she)
aux:pass(train, be)
advmod(train, then)
root(ROOT, train)
case(trot, on)
det(trot, the)
obl(train, trot)
case(December, until)
obl(train, December)
nummod(December, 29)
punct(hitch, ,)
conj(train, hitch)
case(cart, to)
det(cart, a)
compound(cart, breaking)
obl(hitch, cart)
advmod(hitch, once)
case(track, around)
det(track, the)
compound(mile, half)
punct(mile, -)
compound(track, mile)
obl(hitch, track)
cc(hopple, and)
conj(hitch, hopple)
advmod(hopple, again)
punct(train, .)
det(time, this)
obl:tmod(go, time)
nsubj(submit, she)
acl:relcl(time, submit)
cc(go, and)
case(day, in)
det(day, a)
amod(day, few)
obl(go, day)
aux(go, be)
root(ROOT, go)
xcomp(go, good)
punct(go, .)
case(January, on)
obl(pace, January)
nummod(January, 11)
nsubj(pace, she)
root(ROOT, pace)
det(mile, a)
obj(pace, mile)
case(2:43.1, in)
compound(--:38, 2:43.1)
nmod(mile, --:38)
punct(pace, ;)
punct(pace, ;)
case(Jan., on)
obl(pace, Jan.)
nummod(Jan., 18)
nummod(Jan., 2:37.3)
nummod(Jan., --:36.1)
punct(pace, ;)
punct(pace, ;)
case(Jan., on)
obl(individual, Jan.)
nummod(Jan., 21)
punct(Jan., ,)
punct(Jan., ,)
nummod(Jan., 2:36)
punct(individual, .)
det(filly, this)
nsubj(individual, filly)
cop(individual, be)
det(individual, a)
advmod(better, much)
amod(individual, better)
parataxis(pace, individual)
case(either, than)
nmod(individual, either)
case(sister, of)
nmod:poss(sister, she)
amod(sister, full)
punct(sister, -)
nmod(either, sister)
punct(Day, ,)
compound(Day, Valentine)
conj(sister, Day)
cc(cerise, and)
conj(Day, cerise)
punct(scale, --)
amod(scale, more)
parataxis(individual, scale)
cc(underpinning, and)
advmod(better, much)
advmod(underpinning, better)
conj(scale, underpinning)
punct(pace, .)
nsubj(brother, she)
cop(brother, be)
advmod(brother, more)
case(brother, like)
nmod:poss(brother, she)
amod(brother, full)
root(ROOT, brother)
punct(Hanover, ,)
compound(Hanover, Taraday)
conj(brother, Hanover)
punct(larger, ,)
cc(larger, but)
conj(brother, larger)
punct(brother, .)
case(date, up)
fixed(up, to)
obl(filly, date)
nsubj(filly, she)
cop(filly, be)
det(filly, a)
amod(look, grand)
punct(look, -)
amod(filly, look)
root(ROOT, filly)
punct(filly, .)
nsubj(have, Pete)
flat(Pete, Dailey)
root(ROOT, have)
nummod(pacer, four)
amod(pacer, promise)
nummod(year, 2)
punct(year, -)
obl:npmod(old, year)
punct(old, -)
amod(pacer, old)
obj(have, pacer)
punct(have, .)
compound(Pick, Marquis)
nsubj(seem, Pick)
punct(Gene, ()
appos(Pick, Gene)
flat(Gene, Abbe)
punct(Gene, -)
compound(Grattan, direct)
appos(Gene, Grattan)
punct(Grattan, ))
root(ROOT, seem)
mark(pick, to)
cop(pick, be)
det(pick, the)
xcomp(seem, pick)
case(stable, of)
det(stable, the)
nmod(pick, stable)
case(time, at)
det(time, the)
amod(time, present)
obl(pick, time)
punct(seem, .)
nsubj(colt, he)
cop(colt, be)
det(colt, a)
amod(look, fine)
punct(look, -)
amod(colt, look)
root(ROOT, colt)
case(body, with)
det(body, a)
amod(body, good)
nmod(colt, body)
punct(set, ,)
amod(set, good)
conj(body, set)
case(leg, of)
nmod(set, leg)
cc(way, and)
amod(way, nice)
conj(leg, way)
mark(go, of)
acl(way, go)
punct(colt, .)
nmod:poss(mile, he)
amod(mile, best)
nsubj(-:33, mile)
case(date, to)
nmod(mile, date)
cop(-:33, be)
root(ROOT, 2:28)
nummod(2:28, -:33)
punct(Majestic, .)
appos(-:33, Majestic)
root(ROOT, Pick)
xcomp(Pick, come)
advmod(come, next)
punct(come, ,)
case(mile, with)
det(mile, a)
obl(come, mile)
case(2:30, in)
nmod(mile, 2:30)
case(2:30, -)
punct(33.2, :)
nummod(look, 33.2)
punct(33.2, .)
det(colt, this)
nsubj(equine, colt)
cop(equine, be)
det(equine, another)
amod(look, fine)
punct(look, -)
amod(equine, look)
parataxis(Pick, equine)
punct(Pick, .)
nsubj(side, Staley)
flat(Staley, Hanover)
punct(Dream, ()
compound(Dream, Knight)
appos(Staley, Dream)
punct(Dream, -)
compound(Hanover, Sweetmite)
appos(Dream, Hanover)
punct(Hanover, ))
cop(side, be)
det(little, a)
obl:npmod(side, little)
case(side, on)
det(side, the)
amod(side, small)
root(ROOT, side)
cc(colt, but)
det(colt, a)
advmod(compact, very)
amod(colt, compact)
conj(side, colt)
cc(look, and)
conj(side, look)
mark(stand, like)
nsubj(stand, one)
mark(stand, to)
advcl(look, stand)
obj(stand, training)
cc(battle, and)
amod(battle, many)
amod(battle, future)
conj(training, battle)
case(colt, with)
nmod(battle, colt)
case(class, in)
nmod:poss(class, he)
nmod(colt, class)
punct(side, .)
amod(time, best)
nsubj(-:34, time)
case(date, to)
nmod(time, date)
cop(-:34, be)
nummod(-:34, 2:34)
root(ROOT, -:34)
punct(-:34, .)
nsubj(work, step)
advmod(step, aside)
punct(Rhythm, ()
amod(Rhythm, direct)
nsubj(work, Rhythm)
punct(Rhythm, -)
appos(Rhythm, wily)
flat(wily, Widow)
punct(Rhythm, ))
aux(work, have)
root(ROOT, work)
case(2:32, in)
obl(work, 2:32)
case(track, on)
det(track, the)
compound(mile, half)
punct(mile, -)
compound(track, mile)
obl(work, track)
cc(promise, and)
compound(promise, show)
conj(track, promise)
punct(work, . )
nsubj(work, most)
case(old, of)
nmod:poss(old, Billy)
flat(Billy, Haughton)
case(Billy, 's)
nummod(year, 2)
punct(year, -)
compound(old, year)
punct(old, -)
nmod(most, old)
aux(work, have)
root(ROOT, work)
case(2:40, from)
obl(work, 2:40)
case(2:35, to)
obl(work, 2:35)
punct(work, .)
nsubj(go, Bonnie)
flat(Bonnie, Wick)
punct(Gene, ()
appos(Bonnie, Gene)
flat(Gene, Abbe)
punct(Mary, -)
compound(Mary, Scotch)
appos(Gene, Mary)
punct(Mary, ))
aux(go, have)
root(ROOT, go)
case(2:36, in)
obl(go, 2:36)
punct(go, ;)
punct(go, ;)
parataxis(go, Hickory)
root(ROOT, ash)
punct(Hanover, ()
compound(Hanover, Titan)
appos(ash, Hanover)
punct(Hanover, -)
compound(Hanover, Misty)
appos(Hanover, Hanover)
punct(Hanover, ))
case(2:35, in)
nmod(ash, 2:35)
punct(ash, .)
det(time, the)
amod(time, first)
root(ROOT, time)
nsubj(see, I)
acl:relcl(time, see)
det(filly, the)
amod(filly, latter)
obj(see, filly)
nsubj(trot, she)
acl:relcl(filly, trot)
case(I, by)
obl(trot, I)
cc(notice, and)
nsubj(notice, I)
conj(trot, notice)
det:predet(resemblance, such)
det(resemblance, a)
compound(resemblance, family)
obj(notice, resemblance)
mark(say, that)
nsubj(say, I)
acl(resemblance, say)
case(myself, to)
obl(say, myself)
punct(ash, ,)
punct(ash, ``)
nsubj(ash, that)
aux(ash, must)
cop(ash, be)
compound(ash, Hickory)
ccomp(say, ash)
punct(ash, '')
punct(trot, .)
nsubj(filly, she)
cop(filly, be)
det(filly, a)
amod(filly, beautiful)
root(ROOT, filly)
cc(like, and)
conj(filly, like)
mark(trot, to)
xcomp(like, trot)
punct(filly, .)
compound(Hill, Hickory)
nsubj(go, Hill)
punct(Pride, ()
nmod:poss(Pride, Star)
case(Star, 's)
appos(Hill, Pride)
punct(Pride, -)
compound(Hanover, Venus)
appos(Pride, Hanover)
punct(Pride, ))
aux(go, have)
root(ROOT, go)
case(2:33, in)
obl(go, 2:33)
punct(go, ;)
punct(Spark, ;)
compound(Spark, Hickory)
parataxis(go, Spark)
punct(Harlan, ()
appos(Spark, Harlan)
punct(Harlan, -)
compound(Tiny, Hickory)
appos(Harlan, Tiny)
punct(Harlan, ))
root(ROOT, 2:37)
punct(2:37, ;)
punct(2:37, ;)
compound(Hanover, Buxton)
appos(2:37, Hanover)
punct(heel, ()
compound(heel, Tar)
appos(Hanover, heel)
punct(heel, -)
compound(Hanover, Beryl)
appos(heel, Hanover)
punct(heel, ))
appos(heel, 2:35)
punct(Hanover, ;)
punct(Hanover, ;)
parataxis(Hanover, Faber's)
flat(Faber's, Kathy)
punct(Faber, ()
appos(Kathy, Faber)
flat(Faber, Hanover)
punct(Ceyway, -)
appos(Hanover, Ceyway)
punct(Ceyway, ))
nummod(Ceyway, 2:37)
punct(Honor, ;)
punct(Honor, ;)
list(Hanover, Honor)
appos(Honor, Rodney)
punct(Rodney, ()
appos(Rodney, Rodney)
punct(Rodney, -)
compound(Bright, Honor)
appos(Rodney, Bright)
punct(Rodney, ))
case(2:40, around)
nmod(Honor, 2:40)
punct(2:37, .)
det(name, the)
amod(name, last)
punct(name, -)
csubj(colt, name)
cop(colt, be)
det(colt, a)
amod(look, fine)
punct(look, -)
amod(colt, look)
punct(colt, ,)
amod(colt, large)
root(ROOT, colt)
punct(colt, ,)
nsubj(unfortunate, who)
aux(unfortunate, have)
cop(unfortunate, be)
acl:relcl(colt, unfortunate)
mark(lay, to)
aux:pass(lay, be)
xcomp(unfortunate, lay)
compound:prt(lay, off)
case(time, for)
det(time, some)
obl(lay, time)
case(injury, due)
fixed(due, to)
obl(lay, injury)
punct(colt, .)
nsubj(go, he)
aux(go, be)
root(ROOT, go)
xcomp(go, sound)
advmod(sound, again)
advmod(sound, now)
punct(look, ,)
cc(look, and)
conj(go, look)
xcomp(look, good)
punct(go, .)
compound(Candle, Brief)
nsubj(go, Candle)
punct(Harlan, ()
appos(Candle, Harlan)
punct(Harlan, -)
appos(Harlan, Marcia)
punct(Marcia, ))
aux(go, have)
root(ROOT, go)
case(2:37, in)
obl(go, 2:37)
punct(go, ;)
punct(go, ;)
parataxis(go, Lena)
flat(Lena, Faber)
punct(Faber, ()
appos(Lena, Faber)
flat(Faber, Hanover)
punct(Faber, -)
compound(Lena, chalidale)
flat(Faber, Lena)
punct(Lena, ))
list(Lena, 2:33)
punct(go, ;)
punct(Martha, ;)
conj(Lena, Martha)
flat(Martha, Rodney)
punct(Rodney, ()
appos(Martha, Rodney)
punct(Rodney, -)
appos(Rodney, miss)
root(ROOT, Martha)
flat(Martha, D.)
punct(Martha, ))
list(Martha, 2:35)
punct(Martha, ;)
punct(Martha, ;)
list(Martha, Checkit)
punct(Hanover, ()
compound(Hanover, Faber)
appos(Checkit, Hanover)
punct(Hanover, -)
appos(Hanover, Supermarket)
punct(Supermarket, ))
appos(Hanover, 2:35)
punct(Checkit, ;)
punct(Charm, ;)
list(Martha, Charm)
flat(Charm, Rodney)
punct(Rodney, ()
appos(Charm, Rodney)
punct(Rodney, -)
det(Charmer, the)
appos(Rodney, Charmer)
punct(Charmer, ))
appos(Rodney, 2:37)
punct(Sail, ;)
punct(Sail, ;)
compound(Sail, fair)
list(Martha, Sail)
punct(Farvel, ()
appos(Sail, Farvel)
punct(Farvel, -)
compound(herr, topsy)
appos(Farvel, herr)
punct(Farvel, ))
nmod:tmod(Farvel, 2:36)
punct(Sail, ;)
punct(custom, ;)
appos(Sail, custom)
root(ROOT, maid)
punct(Dream, ()
compound(Dream, Knight)
appos(maid, Dream)
punct(Dream, -)
compound(Dream, Way)
appos(Dream, Dream)
punct(Dream, ))
list(maid, 2:34.2)
punct(maid, ;)
punct(maid, ;)
list(maid, Jacky)
flat(Jacky, Dares)
punct(Gene, ()
punct(Gene, ()
compound(Gene, meadow)
appos(Jacky, Gene)
compound(Gene, -princess)
appos(Gene, Lorraine)
punct(Gene, ))
appos(Jacky, 2:36)
punct(Flying, ;)
punct(Flying, ;)
compound(Flying, Good)
list(maid, Flying)
punct(Time, ()
compound(Time, Good)
appos(Flying, Time)
punct(Time, -)
compound(Hanover, Olivette)
appos(Time, Hanover)
punct(Hanover, ))
appos(Time, 2:36)
punct(Hanover, ;)
punct(Hanover, ;)
compound(Hanover, Bordner)
list(maid, Hanover)
punct(heel, ()
compound(heel, Tar)
appos(Hanover, heel)
punct(heel, -)
appos(heel, Betty)
flat(Betty, Mahone)
punct(heel, ))
appos(heel, 2:34)
punct(Choice, ;)
punct(Choice, ;)
nmod:poss(Choice, Faber)
case(Faber, 's)
parataxis(maid, Choice)
punct(Faber, ()
appos(Choice, Faber)
flat(Faber, Hanover)
punct(Faber, -)
conj(Faber, Sally)
flat(Sally, Joe)
flat(Sally, Whippet)
punct(Whippet, ))
appos(Whippet, 2:36)
punct(2:36, ;)
punct(invercalt, ;)
list(maid, invercalt)
punct(florican, ()
appos(invercalt, florican)
punct(florican, -)
appos(florican, inverness)
punct(florican, ))
appos(florican, 2:35)
punct(2:35, ;)
punct(2:35, ;)
appos(florican, Duffy)
root(ROOT, Dares)
punct(Mite, ()
compound(Mite, meadow)
compound(Mite, Gene)
compound(Mite, -princess)
obj(Dares, Mite)
punct(Mite, ))
nummod(Mite, 2:36)
punct(Dares, ;)
punct(Dares, ;)
parataxis(Dares, Harold)
flat(Harold, J.)
punct(Boy, ()
compound(Boy, Worthy)
appos(Harold, Boy)
punct(Boy, -)
appos(Boy, Lady)
flat(Lady, Scotland)
punct(Boy, ))
appos(Boy, 2:36)
punct(Harold, ;)
punct(Harold, ;)
list(Harold, Knightfall)
punct(Dream, ()
compound(Dream, Knight)
appos(Knightfall, Dream)
punct(miss, -)
parataxis(Knightfall, miss)
amod(Grapes, Worthy)
obj(miss, Grapes)
punct(miss, ))
obl:npmod(miss, 2:36)
punct(miss, ;)
punct(Knight, ;)
amod(Knight, next)
parataxis(miss, Knight)
punct(Dream, ()
compound(Dream, Knight)
root(ROOT, Dream)
punct(Dream, -)
amod(time, next)
appos(Dream, time)
punct(time, ))
nmod:tmod(Dream, 2:36)
punct(Dream, ;)
punct(Dream, ;)
compound(jet, Trader)
list(Dream, jet)
punct(florican, ()
appos(jet, florican)
punct(florican, -)
nmod:poss(precious, my)
appos(florican, precious)
punct(florican, ))
appos(florican, 2:37)
punct(Dream, ;)
punct(Dream, ;)
compound(Rich, Trader)
list(Dream, Rich)
punct(Boy, ()
compound(Boy, Worthy)
appos(Rich, Boy)
punct(Boy, -)
compound(Hanover, Marquita)
appos(Boy, Hanover)
punct(Hanover, ))
nummod(Hanover, 2:37)
punct(girl, ;)
punct(girl, ;)
compound(girl, Good)
compound(girl, Little)
list(Dream, girl)
punct(Time, ()
compound(Time, Good)
appos(girl, Time)
punct(Time, -)
compound(Hanover, Mynah)
appos(Time, Hanover)
punct(Hanover, ))
appos(Time, 2:36)
punct(girl, ;)
punct(2:36, ;)
compound(Hanover, Iosola)
nsubj(one, Hanover)
punct(Kimberly, ()
appos(Hanover, Kimberly)
flat(Kimberly, Kid-Isoletta)
appos(Kimberly, Hanover)
punct(Hanover, ))
appos(Kimberly, 2:36)
punct(one, .)
det(name, the)
amod(name, last)
punct(name, -)
amod(one, name)
cop(one, be)
parataxis(Dream, one)
case(favorite, of)
det(favorite, the)
nmod(one, favorite)
case(stable, in)
det(stable, the)
nmod(favorite, stable)
punct(boy, ,)
cc(boy, and)
det(boy, the)
conj(favorite, boy)
case(she, like)
nmod(boy, she)
advmod(much, very)
advmod(boy, much)
punct(Dream, . )
nsubj(able, I)
aux(able, will)
cop(able, be)
root(ROOT, able)
mark(tell, to)
xcomp(able, tell)
iobj(tell, you)
obj(tell, more)
case(string, about)
det(string, this)
obl(more, string)
case(equine, of)
nmod(string, equine)
case(future, in)
det(future, the)
amod(future, near)
obl(tell, future)
punct(able, . )
nsubj(see, I)
aux(see, have)
advmod(see, just)
root(ROOT, see)
obj(see, Debonnie)
cc(work, and)
compound(Time, prompt)
compound(work, Time)
obj(see, work)
det(mile, a)
obl:tmod(see, mile)
case(2:34, in)
obl(see, 2:34)
punct(see, ,)
amod(quarter, last)
obl:tmod(see, quarter)
case(:35.3, in)
nmod(quarter, :35.3)
punct(see, .)
mark(go, in)
advcl(get, go)
advmod(go, away)
obj(go, Debonnie)
root(ROOT, get)
case(length, behind)
amod(length, several)
obl(get, length)
punct(get, ,)
advcl(get, stall)
case(start, at)
det(start, the)
obl(stall, start)
punct(get, --)
nsubj(fussy, she)
cop(fussy, be)
det(little, a)
obl:npmod(fussy, little)
parataxis(get, fussy)
punct(get, .)
nsubj(leave, they)
root(ROOT, leave)
det(quarter, the)
nummod(quarter, three)
punct(quarter, -)
obj(leave, quarter)
advmod(leave, together)
cc(finish, and)
conj(leave, finish)
advmod(together, almost)
advmod(finish, together)
punct(leave, .)
amod(time, prompt)
nsubj(show, time)
root(ROOT, show)
obj(show, class)
punct(show, .)
det(filly, this)
nsubj(Adios, filly)
cop(Adios, be)
det(Adios, another)
root(ROOT, Adios)
nsubj(want, that)
acl:relcl(Adios, want)
mark(trot, to)
xcomp(want, trot)
punct(trot, ,)
cc(trot, and)
conj(do, trot)
nsubj(do, she)
parataxis(Adios, do)
mark(force, until)
advcl(do, force)
mark(do, to)
xcomp(force, do)
advmod(do, otherwise)
punct(Adios, .)
advmod(well, after)
advmod(break, well)
root(ROOT, break)
cc(equip, and)
conj(break, equip)
case(oz, with)
nummod(oz, 12)
punct(oz, -)
obl(equip, oz)
punct(break, .)
nsubj(trot, shoe)
case(behind, on)
nmod(shoe, behind)
punct(shoe, ,)
amod(foot, bare)
punct(foot, -)
conj(shoe, foot)
case(front, in)
obl(foot, front)
punct(trot, ,)
nsubj(trot, she)
aux(trot, would)
root(ROOT, trot)
det(storm, a)
amod(storm, real)
obj(trot, storm)
case(master, with)
det(master, the)
obl(trot, master)
punct(master, ,)
appos(master, Delvin)
punct(master, ,)
appos(master, driving)
punct(trot, .)
aux:pass(place, be)
advcl(baffle, place)
case(hopple, in)
det(hopple, the)
obl(place, hopple)
nsubj:pass(baffle, she)
aux:pass(baffle, be)
advmod(baffle, completely)
root(ROOT, baffle)
punct(baffle, .)
nsubj(hesitate, she)
root(ROOT, hesitate)
punct(hesitate, ,)
nsubj(hop, she)
ccomp(hesitate, hop)
punct(hop, ,)
nsubj(roll, she)
ccomp(hesitate, roll)
cc(rock, and)
conj(roll, rock)
punct(skip, ,)
conj(roll, skip)
cc(jump, and)
conj(skip, jump)
punct(start, ,)
cc(start, but)
case(week, in)
det(week, some)
nummod(week, two)
obl(start, week)
nsubj(start, she)
conj(hesitate, start)
mark(pace, to)
xcomp(start, pace)
punct(start, ,)
case(time, from)
det(time, that)
obl(show, time)
case(she, to)
det(she, this)
nsubj(show, she)
aux(show, have)
ccomp(pace, show)
amod(improvement, steady)
obj(show, improvement)
cc(look, and)
advmod(look, now)
conj(show, look)
case(one, like)
obl(look, one)
case(thing, of)
det(thing, the)
amod(thing, classiest)
nmod(one, thing)
case(grounds, on)
det(grounds, the)
nmod(thing, grounds)
punct(prevent, .)
nsubj(prevent, Rain)
case(Friday, on)
nmod(Rain, Friday)
parataxis(look, prevent)
amod(workout, many)
obj(prevent, workout)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(prevent, be)
det(mile, a)
amod(mile, few)
nsubj(be, mile)
case(note, of)
nmod(mile, note)
case(Thursday, on)
obl(be, Thursday)
punct(hesitate, .)
det(responsible, those)
root(ROOT, responsible)
advcl(responsible, include)
compound(Hanover, Stardel)
obj(include, Hanover)
punct(Pride, ()
nmod:poss(Pride, Star)
case(Star, 's)
appos(Hanover, Pride)
punct(Pride, -)
compound(Hanover, Starlette)
appos(Pride, Hanover)
punct(Hanover, ))
punct(Pride, ,)
appos(Pride, 2:30)
advmod(34.3, -:)
appos(Pride, 34.3)
punct(34.3, ;)
punct(34.3, ;)
root(ROOT, Lorena)
flat(Lorena, Gallon)
punct(Bill, ()
root(ROOT, Bill)
flat(Bill, Gallon)
punct(Bill, -)
compound(Hanover, Loren)
list(Bill, Hanover)
punct(Hanover, ))
punct(Bill, ,)
list(Bill, 2:30)
compound(34.3, -:)
nummod(2:30, 34.3)
punct(Bill, ;)
punct(Bill, ;)
compound(Hanover, prudent)
list(Bill, Hanover)
punct(Hanover, ()
compound(Hanover, Dean)
appos(Hanover, Hanover)
punct(Hanover, -)
compound(Hanover, precious)
appos(Hanover, Hanover)
punct(Hanover, ))
punct(Hanover, ,)
appos(Hanover, 2:30.3-:35.3)
punct(freight, ;)
punct(freight, ;)
compound(freight, Premium)
list(Bill, freight)
punct(Hanover, ()
compound(Hanover, Titan)
root(ROOT, Hanover)
punct(Hanover, -)
compound(Hanover, Pebble)
list(Hanover, Hanover)
punct(Hanover, ))
punct(Hanover, ,)
list(Hanover, 2:30.3-35.3)
punct(Hanover, ;)
punct(Hanover, ;)
compound(Hanover, Laguerre)
list(Hanover, Hanover)
punct(heel, ()
punct(heel, ()
compound(heel, Tar)
list(Hanover, heel)
punct(heel, -)
compound(Hanover, Lotus)
appos(heel, Hanover)
punct(Hanover, ))
punct(Hanover, ,)
list(Hanover, 2:30.3-:36.1)
punct(Hanover, ;)
punct(Hanover, ;)
appos(heel, Monel)
punct(heel, ()
compound(heel, Tar)
list(Hanover, heel)
punct(heel, -)
appos(heel, Miracle)
flat(Miracle, Byrd)
punct(Byrd, ))
punct(Byrd, ,)
list(Hanover, 2:30.3-:36.1)
punct(Hanover, ;)
punct(Hanover, ;)
list(Hanover, Fury)
appos(Hanover, Hanover)
punct(Hoot, ()
appos(Hanover, Hoot)
appos(Hoot, Mon)
punct(Mon, -)
appos(Mon, Fay)
punct(Fay, ))
punct(Fay, ,)
nummod(-:36, 2:30.3)
list(Hanover, -:36)
punct(Hanover, ;)
punct(Hanover, ;)
parataxis(Hanover, Isaac)
punct(Hoot, ()
appos(Isaac, Hoot)
compound(Hanover, mon-goddess)
appos(Hoot, Hanover)
punct(Hanover, ))
punct(Hanover, ,)
nummod(Hanover, 2:30.3-:36)
punct(Caper, ;)
punct(Caper, ;)
list(Hanover, Caper)
punct(Hoot, ()
appos(Caper, Hoot)
compound(Hanover, Mon-Columbia)
appos(Hoot, Hanover)
punct(Hanover, ))
punct(Hanover, ,)
appos(Hoot, 2:30.3-:36)
punct(freight, ;)
punct(freight, ;)
compound(freight, Lucky)
parataxis(Hanover, freight)
punct(Dream, ()
compound(Dream, Knight)
appos(freight, Dream)
punct(Dream, -)
appos(Dream, Lusty)
flat(Lusty, Helen)
punct(Dream, ))
punct(Sam, ,)
nummod(-:35.3, 2:31.3)
appos(Dream, -:35.3)
punct(Butterwyn, .)
appos(-:35.3, Sam)
flat(Sam, Caton)
case(Sam, 's)
appos(Sam, Butterwyn)
punct(Scotch, ()
appos(Butterwyn, Scotch)
flat(Scotch, Victor)
punct(Scotch, -)
appos(Victor, butler)
flat(butler, Wyn)
punct(butler, ))
punct(filly, ,)
det(filly, a)
compound(bay, light)
compound(filly, bay)
appos(Scotch, filly)
punct(know, ,)
parataxis(Hanover, know)
obj(know, nothing)
case(trot, but)
nmod(nothing, trot)
cc(work, and)
aux(work, have)
conj(know, work)
case(mile, on)
det(mile, the)
compound(mile, half)
punct(mile, -)
obl(work, mile)
case(2:30, in)
nmod(mile, 2:30)
nummod(2:30, -:36)
punct(Hanover, .)
root(ROOT, Riverboat)
punct(go, ()
nsubj(go, Dalzell)
punct(Dalzell, -)
appos(Dalzell, Cousin)
flat(Cousin, Rachel)
punct(Cousin, ))
aux(go, have)
root(ROOT, go)
case(2:38, in)
obl(go, 2:38)
punct(go, .)
nsubj(have, Sam)
aux(have, be)
parataxis(go, have)
nmod:poss(trouble, he)
obj(have, trouble)
case(Layton, with)
nmod(trouble, Layton)
nmod(trouble, Hanover)
punct(Dean, ()
appos(Hanover, Dean)
flat(Dean, Hanover)
punct(Dean, -)
appos(Dean, Lucy)
flat(Lucy, Hanover)
punct(Lucy, ))
punct(hope, ,)
cc(hope, but)
conj(have, hope)
mark(have, to)
xcomp(hope, have)
obj(have, he)
xcomp(have, straighten)
compound:prt(straighten, out)
cc(go, and)
conj(straighten, go)
advmod(long, before)
advmod(go, long)
punct(high, .)
nsubj(high, Jimmy)
flat(Jimmy, Jordon)
cop(high, be)
parataxis(have, high)
case(Scarlet, on)
compound(Scarlet, Adios)
obl(high, Scarlet)
punct(Adios, ()
parataxis(high, Adios)
punct(Adios, -)
conj(Adios, Rena)
flat(Rena, Grattan)
punct(Adios, ))
cc(sure, and)
nsubj(sure, she)
conj(high, sure)
ccomp(sure, look)
xcomp(look, good)
mark(go, as)
nsubj(go, she)
advcl(look, go)
obl(go, by)
punct(go, .)
nmod:poss(time, she)
amod(time, best)
nsubj(2:30, time)
case(date, to)
nmod(time, date)
cop(2:30, be)
advmod(2:30, about)
root(ROOT, 2:30)
punct(2:30, .)
nsubj(like, he)
advmod(like, also)
root(ROOT, like)
compound(Hanover, Hampton)
obj(like, Hanover)
punct(Hanover, ()
compound(Hanover, Titan)
appos(Hanover, Hanover)
punct(Hanover, -)
appos(Hanover, Bertie)
flat(Bertie, Hanover)
punct(Hanover, ))
obl:tmod(like, 2:37)
punct(like, .)
root(ROOT, Cathy)
flat(Cathy, J.)
flat(Cathy, Hanover)
punct(heel, ()
compound(heel, Tar)
list(Cathy, heel)
punct(heel, -)
compound(Hanover, Kaola)
appos(heel, Hanover)
punct(Hanover, ))
punct(Cathy, ,)
advmod(call, formerly)
list(Cathy, call)
nsubj(child, Karet)
flat(Karet, Hanover)
punct(child, ,)
aux(child, have)
cop(child, be)
advmod(child, rather)
det(child, a)
compound(child, problem)
root(ROOT, child)
punct(get, ,)
cc(get, but)
aux(get, be)
conj(child, get)
xcomp(get, better)
det:predet(while, all)
det(while, the)
obj(better, while)
cc(pace, and)
aux(pace, can)
conj(better, pace)
det(around, a)
advmod(around, twice)
advmod(pace, around)
case(2:31, in)
advmod(2:31, about)
obl(pace, 2:31)
punct(Comet, .)
compound(Comet, Armbro)
obj(pace, Comet)
punct(Hanover, ()
compound(Hanover, Nibble)
appos(Comet, Hanover)
punct(Hanover, -)
compound(Hanover, Mauri)
appos(Hanover, Hanover)
punct(Hanover, ))
aux(2:38, have)
cop(2:38, be)
case(2:38, in)
acl:relcl(Comet, 2:38)
punct(Nipe, .)
compound(Nipe, Flick)
nsubj(2:38, Nipe)
case(Nipe, 's)
cc(phone, and)
nmod:poss(phone, Neil)
flat(Neil, Engle)
case(Neil, 's)
compound(phone, miss)
conj(Nipe, phone)
punct(Galophone, ()
appos(phone, Galophone)
punct(miss, -)
compound(miss, prissy)
appos(Galophone, miss)
punct(miss, ))
cop(filly, be)
det(filly, a)
amod(look, fine)
punct(look, -)
amod(filly, look)
acl:relcl(phone, filly)
case(disposition, with)
amod(disposition, good)
nmod(filly, disposition)
cc(gait, and)
amod(gait, good)
conj(disposition, gait)
punct(work, ,)
cc(work, and)
nsubj(work, she)
aux(work, have)
conj(filly, work)
compound:prt(work, up)
case(date, to)
obl(work, date)
case(2:46, in)
obl(work, 2:46)
punct(filly, .)
root(ROOT, Del)
flat(Del, Mar)
punct(Mar, ,)
appos(Mar, Calif)
punct(Mar, .)
punct(Mar, ,)
appos(Mar, Feb)
punct(Mar, .)
nummod(Feb, 3)
punct(Mar, --)
case(day, after)
nummod(day, 52)
amod(day, rainless)
obl(come, day)
punct(come, ,)
nsubj(come, moisture)
advmod(come, finally)
root(ROOT, come)
case(Mar, to)
compound(Mar, Del)
obl(come, Mar)
punct(come, ,)
advcl(come, result)
advmod(result, in)
cc(workout, but)
nummod(workout, one)
conj(result, workout)
case(week, during)
det(week, the)
nmod(workout, week)
case(most, for)
obl(result, most)
case(horse, of)
det(horse, the)
nmod(most, horse)
punct(leave, ,)
cc(leave, and)
conj(result, leave)
obj(leave, we)
case(rainfall, with)
advmod(half, less)
fixed(less, than)
nummod(rainfall, half)
nmod:poss(rainfall, we)
amod(rainfall, total)
amod(rainfall, average)
obl(leave, rainfall)
case(season, during)
det(season, the)
nmod(rainfall, season)
punct(come, . )
mark(gain, while)
nummod(year, 2)
punct(year, -)
compound(old, year)
punct(year, -)
nsubj(gain, old)
aux(gain, be)
advmod(gain, still)
advcl(start, gain)
obj(gain, most)
case(attention, of)
det(attention, the)
nmod(most, attention)
case(track, at)
det(track, the)
nmod(attention, track)
punct(start, ,)
amod(horse, green)
nsubj(start, horse)
aux(start, be)
root(ROOT, start)
mark(go, to)
xcomp(start, go)
det(bit, a)
obl:npmod(go, bit)
punct(have, ,)
cc(have, and)
nsubj(have, Jimmy)
flat(Jimmy, cruise)
conj(start, have)
obj(have, several)
nsubj(make, that)
aux(make, can)
advmod(make, really)
acl:relcl(several, make)
obj(make, it)
punct(make, .)
compound(out, work)
punct(out, -)
nsubj(be, out)
case(week, for)
det(week, the)
nmod(out, week)
advcl(make, be)
mark(follow, as)
advcl(be, follow)
punct(be, :)
root(ROOT, Plain)
flat(Plain, Scotch)
punct(Scotch, ,)
compound(Scotch, 3)
punct(Scotch, ()
case(Scotch, by)
nmod(Scotch, Scotch)
flat(Scotch, Victor)
punct(Scotch, ))
punct(Law, ,)
compound(Law, Demon)
list(Plain, Law)
punct(Law, ,)
nummod(Law, 3)
punct(Hanover, ()
case(Hanover, by)
compound(Hanover, Demon)
nmod(Law, Hanover)
punct(Hanover, ))
punct(Royal, ,)
compound(Royal, Coffee)
list(Plain, Royal)
punct(p, ,)
list(Plain, p)
punct(Blackstone, ()
case(Blackstone, by)
compound(Blackstone, Royal)
nmod(p, Blackstone)
punct(Blackstone, ))
cc(Way, and)
compound(Way, beauty)
conj(Plain, Way)
punct(p, ,)
list(Plain, p)
punct(p, ,)
nummod(p, 3)
punct(Hanover, ()
case(Hanover, by)
compound(Hanover, Demon)
nmod(p, Hanover)
punct(Hanover, ))
case(25, in)
nmod(Hanover, 25)
punct(Eddie, ;)
punct(Eddie, ;)
appos(Plain, Eddie)
flat(Eddie, Duke)
punct(p, ,)
appos(Eddie, p)
punct(p, ,)
nummod(p, 3)
punct(Duke, ()
case(Duke, by)
nmod(p, Duke)
case(Lullwater, of)
nmod(Duke, Lullwater)
punct(Duke, ))
punct(Marilyn, ,)
appos(Duke, Marilyn)
flat(Marilyn, C.)
punct(p, ,)
list(Plain, p)
punct(Sampson, ()
case(Sampson, by)
nmod(p, Sampson)
flat(Sampson, Hanover)
punct(Sampson, ))
cc(chalidale, and)
conj(Sampson, chalidale)
flat(chalidale, Barry)
punct(chalidale, ,)
appos(chalidale, 5)
punct(Ransom, ()
case(Ransom, by)
nmod:poss(Ransom, King)
case(King, 's)
nmod(chalidale, Ransom)
punct(Ransom, ))
case(2:20, in)
nmod(Ransom, 2:20)
punct(Ransom, ;)
punct(Hanover, ;)
compound(Hanover, Tiger)
appos(Plain, Hanover)
punct(Hanover, ,)
appos(Hanover, p)
punct(p, ,)
appos(p, 3)
punct(Adios, ()
case(Adios, by)
nmod(p, Adios)
punct(Adios, ))
case(2:26, in)
nmod(Adios, 2:26)
punct(lass, ;)
punct(lass, ;)
appos(lass, sherwood)
appos(Hanover, lass)
punct(lass, ,)
appos(lass, 4)
punct(Song, ()
case(Song, by)
compound(Song, Victory)
nmod(lass, Song)
punct(Song, ))
case(2:22, in)
nmod(Song, 2:22)
punct(2:22, ;)
punct(Dauntless, ;)
cc(Dauntless, and)
conj(lass, Dauntless)
punct(Dauntless, ,)
appos(Dauntless, 3)
punct(Adios, ()
case(Adios, by)
compound(Adios, Greentree)
nmod(Dauntless, Adios)
punct(Adios, ))
case(2:32, in)
nmod(Dauntless, 2:32)
punct(Plain, .)
case(horse, for)
det(horse, the)
amod(horse, aged)
root(ROOT, horse)
punct(horse, :)
appos(horse, Mr.)
flat(Mr., Budlong)
punct(Mr., ,)
conj(Mr., p)
punct(p, ,)
nummod(p, 2:00.2)
punct(Mr., ,)
conj(Mr., Lottie)
flat(Lottie, Thomas)
punct(p, ,)
conj(Mr., p)
punct(p, ,)
nummod(p, 2:04.2)
punct(Mr., ,)
compound(Signal, Mighty)
conj(Mr., Signal)
nummod(Signal, 2:03)
punct(Clever, ,)
conj(Mr., Clever)
conj(Mr., Braden)
punct(p, ,)
conj(Mr., p)
punct(p, ,)
nummod(p, 2:01.1)
punct(Star, ,)
cc(Star, and)
compound(Star, Glow)
conj(Mr., Star)
punct(p, ,)
conj(Mr., p)
punct(p, ,)
appos(p, 2:02.3)
aux(2:35, have)
cop(2:35, be)
case(2:35, in)
parataxis(p, 2:35)
punct(2:35, ;)
punct(miss, ;)
parataxis(2:35, miss)
obj(miss, Demon)
flat(Demon, Abbe)
punct(p, ,)
appos(Demon, p)
punct(p, ,)
nummod(p, 1:59.3)
aux(trot, have)
parataxis(Demon, trot)
case(2:26, in)
obl(trot, 2:26)
punct(expect, ,)
cc(expect, and)
aux:pass(expect, be)
conj(trot, expect)
mark(race, to)
xcomp(expect, race)
case(gait, at)
det(gait, this)
obl(race, gait)
punct(Creed, ;)
punct(Creed, ;)
compound(Creed, Carter)
conj(Mr., Creed)
punct(Creed, ,)
list(Creed, p)
punct(p, ,)
appos(p, 3)
punct(p, ,)
appos(p, 2:01.1)
punct(Lullwater, ,)
compound(Lullwater, Great)
list(Creed, Lullwater)
appos(Lullwater, 2:00.3)
punct(Creed, ,)
cc(2:00.3, and)
discourse(2:30, hi)
nsubj(2:30, Jay)
punct(p, ,)
nsubj(2:30, p)
punct(p, ,)
nummod(p, 2:05.1)
aux(2:30, have)
cop(2:30, be)
case(2:30, in)
root(ROOT, 2:30)
punct(2:30, ;)
punct(2:30, ;)
compound(T., tanker)
nsubj(2:30, T.)
punct(T., ,)
appos(T., 3)
punct(wear, ,)
nsubj(wear, 2:05.3)
aux(wear, be)
advmod(wear, now)
parataxis(2:30, wear)
obj(wear, hopple)
cc(train, and)
aux(train, have)
conj(wear, train)
case(2:19, in)
obl(train, 2:19)
punct(wear, ;)
punct(stormy, ;)
appos(train, stormy)
root(ROOT, Dream)
punct(p, ,)
conj(Dream, p)
punct(p, ,)
nummod(p, 2:01.3)
punct(Demon, ,)
conj(Dream, Demon)
flat(Demon, Abbe)
punct(p, ,)
conj(Dream, p)
punct(p, ,)
nummod(p, 2:02)
punct(Dundeen, ,)
compound(B., Dundeen)
conj(Dream, B.)
punct(4, ,)
amod(Dundeen, 4)
punct(2:04.2, ,)
compound(4, 2:04.2)
punct(Song, ,)
nmod:poss(Song, Claudia)
case(Claudia, 's)
appos(Dream, Song)
punct(Song, ,)
nummod(Song, 3)
punct(2:06.3, ,)
appos(Song, 2:06.3)
punct(Fire, ,)
cc(Fire, and)
punct(Fire, ()
compound(Fire, jet)
conj(Dream, Fire)
punct(Fire, ,)
appos(Fire, 4)
punct(Fire, ,)
appos(Fire, 2:02.2)
aux(2:25, have)
cop(2:25, be)
case(2:25, in)
nmod(Fire, 2:25)
punct(2:25, ;)
punct(2:25, ;)
root(ROOT, Maria)
nsubj(look, key)
punct(key, ,)
appos(key, 2)
punct(key, ,)
nmod:tmod(key, 2:06)
root(ROOT, look)
xcomp(look, great)
case(2:22, in)
obl(look, 2:22)
punct(look, ;)
punct(look, ;)
parataxis(look, Mocking)
nsubj(2:12, Byrd)
punct(Byrd, ,)
appos(Byrd, p)
punct(p, ,)
nummod(p, 2:01.1)
aux(2:12, have)
cop(2:12, be)
case(2:12, in)
root(ROOT, 2:12)
punct(2:12, ,)
case(date, with)
det(date, a)
compound(date, racing)
nmod(2:12, date)
acl(date, approach)
case(meadow, at)
compound(meadow, Bay)
obl(approach, meadow)
punct(have, .)
compound(urban, Dewey)
nsubj(have, urban)
parataxis(2:12, have)
det(trotter, a)
amod(trotter, clever)
amod(trotter, green)
obj(have, trotter)
case(Dr., in)
nmod(trotter, Dr.)
flat(Dr., orin)
flat(Dr., i.)
punct(Dr., ,)
amod(Dr., 3)
punct(Hanover, ()
case(Hanover, by)
compound(Hanover, Yankee)
nmod(Dr., Hanover)
punct(Hanover, ))
punct(mile, ,)
nmod:poss(mile, he)
amod(mile, latest)
appos(Dr., mile)
case(2:20, in)
nmod(mile, 2:20)
punct(have, ;)
punct(have, ;)
root(ROOT, Victory)
nsubj(train, Sun)
punct(p, ,)
nsubj(train, p)
punct(p, ,)
nummod(p, 2:04)
aux(train, have)
root(ROOT, train)
case(2:24, in)
obl(train, 2:24)
punct(train, ;)
punct(train, ;)
root(ROOT, early)
root(ROOT, Sun)
punct(Sun, ,)
list(Sun, p)
punct(p, ,)
appos(p, 2:02.3)
punct(Sun, ,)
list(Sun, Chester)
list(Sun, maid)
list(Sun, 2:05)
punct(Sun, ,)
appos(2:05, Dark)
nsubj(2:21, Sun)
punct(p, ,)
appos(Sun, p)
punct(p, ,)
nummod(p, 2:06.1)
punct(maid, ,)
cc(maid, and)
compound(maid, Sun)
compound(maid, Tan)
conj(Sun, maid)
nummod(maid, 2:05)
appos(maid, .2)
aux(2:21, have)
cop(2:21, be)
case(2:21, in)
root(ROOT, 2:21)
punct(2:21, .)
det(reader, the)
amod(reader, average)
nsubj(own, reader)
case(magazine, of)
det(magazine, this)
nmod(reader, magazine)
root(ROOT, own)
advmod(one, more)
fixed(more, than)
nummod(gun, one)
obj(own, gun)
punct(run, ()
nsubj(run, we)
parataxis(own, run)
det(survey, a)
obj(run, survey)
mark(find, to)
advcl(run, find)
compound:prt(find, out)
punct(run, ))
cc(lookout, but)
nsubj(lookout, he)
cop(lookout, be)
advmod(lookout, always)
case(lookout, on)
det(lookout, the)
conj(own, lookout)
case(arm, for)
amod(arm, new)
cc(better, and)
conj(new, better)
nmod(lookout, arm)
punct(own, .)
nsubj(more, he)
cop(more, be)
root(ROOT, more)
case(reader, than)
det(reader, a)
obl(more, reader)
case(article, of)
amod(article, outdoor)
nmod(reader, article)
punct(more, ;)
punct(more, ;)
nsubj(hunter, he)
cop(hunter, be)
det(hunter, a)
amod(hunter, real)
parataxis(more, hunter)
cc(shooter, and)
conj(hunter, shooter)
punct(hunter, ,)
parataxis(hunter, eager)
mark(improve, to)
xcomp(eager, improve)
nmod:poss(sport, he)
obj(improve, sport)
punct(more, .)
discourse(here, well)
punct(here, ,)
mark(kind, if)
nsubj(kind, you)
cop(kind, be)
det(kind, that)
advcl(here, kind)
case(sportsman, of)
nmod(kind, sportsman)
nsubj(here, we)
cop(here, be)
root(ROOT, here)
mark(help, to)
advcl(here, help)
obj(help, you)
punct(here, .)
nsubj(give, you)
aux(give, have)
advmod(give, probably)
root(ROOT, give)
det(lot, a)
obj(give, lot)
case(season, of)
compound(season, Christmas)
punct(season, -)
nmod(lot, season)
acl(lot, think)
case(gun, to)
det(gun, the)
obl(think, gun)
case(rack, in)
nmod:poss(rack, you)
nmod(gun, rack)
punct(easy, ,)
cc(easy, but)
expl(easy, it)
cop(easy, be)
advmod(easy, not)
conj(give, easy)
mark(decide, to)
csubj(easy, decide)
case(one, on)
det(one, a)
amod(one, new)
obl(decide, one)
punct(give, .)
nsubj(have, you)
advmod(have, still)
root(ROOT, have)
obj(have, time)
mark(drop, to)
acl(time, drop)
det(hint, a)
amod(hint, few)
obj(drop, hint)
case(gift, about)
det(gift, the)
nmod(hint, gift)
nsubj(appreciate, you)
aux(appreciate, would)
acl:relcl(gift, appreciate)
obj(appreciate, most)
punct(have, ;)
punct(have, ;)
det(time, the)
nsubj(now, time)
mark(decide, to)
acl(time, decide)
case(they, on)
obl(decide, they)
cop(now, be)
conj(have, now)
punct(have, .)
case(service, as)
det(service, a)
compound(service, Christmas)
obl(take, service)
punct(take, ,)
nsubj(take, I)
aux(take, have)
root(ROOT, take)
det(look, a)
amod(look, close)
obj(take, look)
case(crop, at)
det(year, this)
nmod:poss(crop, year)
case(year, 's)
obl(take, crop)
case(model, of)
amod(model, new)
nmod(crop, model)
punct(take, .)
root(ROOT, here)
nsubj(here, they)
cop(here, be)
punct(here, ,)
case(comment, with)
nmod:poss(comment, my)
obl(here, comment)
cc(judgment, and)
conj(comment, judgment)
punct(here, .)
root(ROOT, read)
advmod(read, on)
punct(take, ,)
conj(read, take)
nmod:poss(pick, you)
obj(take, pick)
punct(read, --)
cc(start, and)
conj(read, start)
xcomp(start, drop)
det(hint, those)
obj(drop, hint)
punct(read, .)
advmod(arm, first)
case(list, on)
nmod:poss(list, my)
amod(list, own)
obl(arm, list)
aux(arm, would)
cop(arm, be)
nummod(arm, two)
root(ROOT, arm)
punct(arm, --)
det(rifle, a)
appos(arm, rifle)
cc(handgun, and)
det(handgun, a)
conj(rifle, handgun)
punct(rifle, --)
nsubj(qualify, that)
acl:relcl(rifle, qualify)
advmod(new, as)
xcomp(qualify, new)
case(sense, in)
det(sense, the)
amod(sense, strictest)
obl(qualify, sense)
punct(arm, .)
case(I, for)
obl(constitute, I)
punct(constitute, ,)
det(length, a)
amod(length, change)
compound(length, barrel)
nsubj(constitute, length)
cc(stock, or)
det(stock, a)
amod(stock, improve)
conj(length, stock)
aux(constitute, do)
advmod(constitute, not)
root(ROOT, constitute)
det(design, a)
advmod(new, truly)
amod(design, new)
obj(constitute, design)
punct(constitute, .)
amod(modification, such)
nsubj(best, modification)
cop(best, be)
advmod(best, all)
case(best, for)
det(best, the)
parataxis(constitute, best)
cc(take, but)
nsubj(take, it)
conj(best, take)
obj(take, something)
advmod(different, as)
amod(something, different)
case(Deerstalker, as)
det(Deerstalker, a)
obl(different, Deerstalker)
cc(jet, or)
det(jet, a)
conj(Deerstalker, jet)
mark(change, to)
acl(jet, change)
obj(change, arm)
amod(concept, -making)
obj(change, concept)
punct(best, .)
nmod:poss(Deerstalker, Bill)
nmod:poss(Deerstalker, Ruger)
case(Ruger, 's)
amod(await, long)
punct(await, -)
amod(Deerstalker, await)
nsubj(action, Deerstalker)
punct($, ()
case($, under)
nmod(Deerstalker, $)
nummod($, 110)
punct($, ))
cop(action, be)
det(action, a)
amod(action, new)
compound(action, rifle)
root(ROOT, action)
case(caliber, in)
det(caliber, a)
nmod(action, caliber)
nsubj(upset, that)
acl:relcl(caliber, upset)
det:predet(theory, all)
det(theory, the)
amod(theory, modern)
obj(upset, theory)
case(fan, of)
amod(velocity, high)
punct(velocity, -)
compound(fan, velocity)
nmod(theory, fan)
punct(action, ;)
punct(action, ;)
nsubj(handling, it)
cop(handling, be)
det(handling, a)
amod(handling, short)
punct(handling, ,)
amod(handling, light)
punct(handling, ,)
amod(handling, quick)
punct(handling, -)
parataxis(action, handling)
punct(gun, ,)
amod(fire, fast)
punct(fire, -)
compound(gun, fire)
amod(gun, little)
compound(gun, timber)
conj(handling, gun)
acl(gun, design)
mark(push, to)
xcomp(design, push)
det(slug, a)
amod(slug, heavy)
obj(push, slug)
case(velocity, at)
amod(velocity, modest)
obl(push, velocity)
cc(lot, but)
case(lot, with)
conj(push, lot)
mark(kill, of)
acl(lot, kill)
obj(kill, power)
cc(range, and)
amod(range, ample)
conj(power, range)
case(game, for)
nmod:poss(game, we)
advmod(popular, most)
amod(game, popular)
amod(game, big)
obl(kill, game)
punct(game, --)
appos(game, whitetail)
punct(action, .)
nsubj(report, Ruger)
root(ROOT, report)
mark(horse, that)
case(safari, on)
nmod:poss(safari, he)
amod(safari, recent)
amod(safari, african)
obl(horse, safari)
det(cartridge, the)
amod(cartridge, little)
compound(cartridge, Magnum)
nsubj(horse, cartridge)
cop(horse, be)
det(horse, a)
amod(horse, real)
compound(horse, work)
ccomp(report, horse)
punct(report, .)
amod(antelope, small)
nsubj:pass(grass, antelope)
aux:pass(grass, be)
advmod(grass, generally)
root(ROOT, grass)
case(shot, with)
nummod(shot, one)
obl(grass, shot)
punct(bag, ,)
cc(bag, and)
det(carbine, the)
compound(carbine, Magnum)
nsubj(bag, carbine)
advmod(bag, also)
conj(grass, bag)
obj(bag, reedbuck)
punct(kob, ,)
conj(reedbuck, kob)
cc(hog, and)
compound(hog, wart)
conj(reedbuck, hog)
case(efficiency, with)
amod(efficiency, deadly)
nmod(hog, efficiency)
punct(grass, ;)
punct(grass, ;)
nsubj(large, these)
cop(large, be)
advmod(large, fairly)
parataxis(grass, large)
punct(animal, ,)
amod(animal, tough)
conj(large, animal)
punct(grass, .)
det(deadliness, the)
nsubj(come, deadliness)
case(Magnum, of)
det(Magnum, the)
nmod(deadliness, Magnum)
case(rifle, in)
det(rifle, a)
nmod(deadliness, rifle)
root(ROOT, come)
case(surprise, as)
det(surprise, no)
obl(come, surprise)
case(I, to)
nmod(surprise, I)
punct(come, .)
case(least, at)
nmod(five, least)
nummod(year, five)
obl:npmod(ago, year)
advmod(make, ago)
punct(make, ,)
nsubj(make, Tom)
flat(Tom, Robinson)
case(Marlin, of)
nmod(Tom, Marlin)
root(ROOT, make)
compound:prt(make, up)
det(rifle, a)
advmod(under, over)
punct(under, /)
case(rifle, under)
amod(rifle, double)
obj(make, rifle)
case(I, for)
nmod(rifle, I)
case(caliber, in)
det(caliber, this)
obl(make, caliber)
punct(make, ,)
advcl(make, use)
det(Model, the)
advmod(defunct, now)
amod(Model, defunct)
obj(use, Model)
nummod(action, 90)
obj(use, action)
case(size, in)
nummod(gauge, 20)
punct(gauge, -)
compound(size, gauge)
obl(use, size)
punct(make, .)
mark(figure, after)
advcl(fire, figure)
compound:prt(figure, out)
advmod(regulate, how)
mark(regulate, to)
xcomp(figure, regulate)
det(barrel, the)
obj(regulate, barrel)
mark(shoot, so)
fixed(so, that)
nsubj(shoot, they)
advcl(regulate, shoot)
case(point, to)
det(point, the)
amod(point, same)
obl(shoot, point)
case(impact, of)
nmod(point, impact)
punct(fire, ,)
nsubj(fire, we)
root(ROOT, fire)
det(job, this)
amod(job, little)
nummod(inch, 20)
punct(inch, -)
compound(barrel, inch)
punct(barrel, -)
compound(job, barrel)
obj(fire, job)
case(range, on)
nmod:poss(range, my)
compound(range, home)
nmod(job, range)
cc(gallery, and)
case(gallery, in)
nmod:poss(gallery, Marlin)
case(Marlin, 's)
amod(gallery, underground)
compound(gallery, test)
conj(range, gallery)
punct(fire, .)
nsubj(run, we)
advmod(run, quickly)
root(ROOT, run)
case(trouble, into)
det(trouble, the)
amod(trouble, same)
obl(run, trouble)
nsubj(plague, that)
acl:relcl(trouble, plague)
obj(plague, Bill)
flat(Bill, Ruger)
case(experiment, in)
nmod:poss(experiment, he)
amod(experiment, first)
obl(plague, experiment)
punct(run, :)
nummod(bullet, three)
cc(four, or)
conj(three, four)
nsubj:pass(place, bullet)
aux(place, would)
aux:pass(place, be)
root(ROOT, place)
advmod(place, well)
case(bull, in)
det(bull, a)
nummod(inch, six)
punct(inch, -)
compound(bull, inch)
obl(place, bull)
case(yard, at)
nummod(yard, 100)
obl(place, yard)
cc(stray, and)
advmod(stray, then)
punct(stray, ,)
advmod(stray, unaccountably)
punct(stray, ,)
nsubj(stray, one)
aux(stray, could)
conj(place, stray)
advmod(stray, far)
case(group, out)
case(group, of)
det(group, the)
obl(stray, group)
punct(place, .)
nsubj(learn, Ruger)
root(ROOT, learn)
mark(be, that)
nsubj(be, this)
ccomp(learn, be)
mark(upsetting, because)
det(velocity, the)
amod(velocity, higher)
nsubj(upsetting, velocity)
acl(velocity, achieve)
case(barrel, in)
det(barrel, a)
amod(barrel, long)
obl(achieve, barrel)
cop(upsetting, be)
ccomp(be, upsetting)
det(shape, the)
obj(upsetting, shape)
case(bullet, of)
det(bullet, the)
amod(bullet, unjacketed)
compound(bullet, revolver)
nmod(shape, bullet)
punct(learn, .)
det(slug, the)
amod(slug, new)
punct(slug, ,)
amod(slug, jacket)
nsubj(correct, slug)
case(Magnum, in)
nmod(slug, Magnum)
root(ROOT, correct)
obj(correct, this)
punct(correct, .)
cc(have, but)
advmod(bullet, even)
case(bullet, without)
amod(bullet, jacket)
obl(have, bullet)
punct(have, ,)
nsubj(have, I)
root(ROOT, have)
amod(faith, enough)
obj(have, faith)
case(double, in)
nmod:poss(double, my)
nmod(faith, double)
mark(take, to)
advcl(have, take)
obj(take, it)
case(hunt, on)
det(hunt, a)
amod(day, open)
punct(day, -)
compound(hunt, day)
compound(hunt, deer)
obl(take, hunt)
det(year, that)
amod(year, first)
obl:tmod(take, year)
punct(have, .)
case(hour, within)
det:predet(hour, half)
det(hour, a)
obl(jump, hour)
nsubj(jump, I)
root(ROOT, jump)
det(buck, a)
nummod(point, six)
punct(point, -)
compound(buck, point)
obj(jump, buck)
obj(skip, that)
compound(skip, hop)
punct(skip, -)
acl:relcl(buck, skip)
case(thicket, through)
det(thicket, a)
compound(thicket, rhododendron)
obl(skip, thicket)
punct(catch, ,)
cc(catch, and)
nsubj(catch, I)
conj(jump, catch)
obj(catch, he)
advmod(forel, just)
case(forel, behind)
det(forel, the)
amod(forel, left)
obl(catch, forel)
case(yard, at)
nummod(yard, 60)
obl(catch, yard)
punct(jump, .)
nsubj(move, he)
root(ROOT, move)
advmod(30, only)
advmod(30, about)
nummod(foot, 30)
obj(move, foot)
case(slug, after)
det(slug, the)
nummod(grain, 240)
punct(grain, -)
compound(slug, grain)
nsubj(hit, slug)
advcl(move, hit)
obj(hit, he)
punct(move, --)
cc(be, and)
nsubj(be, this)
conj(move, be)
mark(pass, after)
det(bullet, the)
nsubj(pass, bullet)
aux(pass, have)
advcl(be, pass)
case(sapling, through)
det(sapling, a)
obl(pass, sapling)
punct(move, .)
nummod(deer, three)
amod(deer, more)
nsubj(fall, deer)
aux(fall, have)
root(ROOT, fall)
case(gun, to)
det(gun, this)
amod(gun, same)
obl(fall, gun)
punct(kill, ,)
cc(kill, and)
nsubj(kill, all)
cop(kill, be)
nummod(shot, one)
punct(shot, -)
compound(kill, shot)
conj(fall, kill)
punct(fall, .)
nmod:poss(double, my)
nsubj:pass(make, double)
aux:pass(make, be)
root(ROOT, make)
case(barrel, with)
amod(weight, standard)
punct(weight, -)
compound(barrel, weight)
compound(barrel, revolver)
obl(make, barrel)
punct(cut, ()
mark(cut, before)
advcl(make, cut)
case(length, to)
compound(length, revolver)
obl(cut, length)
punct(cut, ))
punct(heavier, ,)
cc(heavier, and)
mark(compare, although)
nsubj(compare, it)
advcl(heavier, compare)
advmod(compare, well)
case(respects, in)
amod(respects, other)
obl(compare, respects)
punct(heavier, ,)
nsubj(heavier, it)
cop(heavier, be)
advmod(heavier, considerably)
conj(make, heavier)
case(Deerstalker, than)
det(Deerstalker, the)
obl(heavier, Deerstalker)
punct(Deerstalker, ,)
nsubj(scale, which)
advmod(scale, only)
acl:relcl(Deerstalker, scale)
advmod(6, about)
nummod(pound, 6)
case(2, -)
nmod(6, 1)
case(2, /)
nmod(6, 2)
obj(scale, pound)
punct(make, .)
mark(meet, if)
advmod(meet, ever)
det(rifle, a)
nsubj(meet, rifle)
advcl(point, meet)
det(need, the)
obj(meet, need)
case(hunter, of)
det(hunter, the)
compound(hunter, whitetail)
nmod(need, hunter)
punct(it, ,)
nsubj(it, this)
cop(it, be)
parataxis(meet, it)
punct(point, .)
det(point, the)
compound(point, Deerstalker)
root(ROOT, point)
case(ease, with)
det(ease, the)
nmod(point, ease)
punct(speed, ,)
conj(ease, speed)
cc(precision, and)
conj(ease, precision)
case(shotgun, of)
det(shotgun, a)
amod(shotgun, fine)
amod(shotgun, import)
amod(shotgun, double)
nmod(ease, shotgun)
punct(pull, ,)
cc(pull, and)
nsubj(pull, it)
cop(pull, be)
compound(pull, trigger)
nsubj(light, pull)
cop(light, be)
conj(point, light)
cc(sharp, and)
conj(light, sharp)
punct(leave, .)
det(bullet, the)
nummod(grain, 240)
punct(grain, -)
compound(bullet, grain)
nsubj(leave, bullet)
parataxis(light, leave)
det(muzzle, the)
obj(leave, muzzle)
case(fps, at)
nummod(fps, 1,850)
obl(leave, fps)
punct(fps, ,)
nsubj(give, which)
acl:relcl(fps, give)
iobj(give, it)
det:predet(smash, all)
det(smash, the)
obj(give, smash)
acl(smash, need)
case(range, at)
compound(range, wood)
obl(need, range)
punct(leave, .)
case(shot, with)
nummod(shot, five)
obl(combination, shot)
case(command, at)
det(command, the)
amod(command, immediate)
nmod(shot, command)
case(finger, of)
det(hunter, the)
nmod:poss(finger, hunter)
case(hunter, 's)
compound(finger, trigger)
nmod(command, finger)
punct(combination, ,)
det(gun, the)
nsubj(combination, gun)
cc(load, and)
conj(gun, load)
cop(combination, be)
det(combination, a)
amod(combination, deadly)
root(ROOT, combination)
punct(combination, .)
det(development, the)
amod(development, second)
advmod(new, really)
amod(development, new)
nsubj(revolver, development)
det(year, this)
nmod:tmod(development, year)
cop(revolver, be)
det(revolver, a)
root(ROOT, revolver)
acl(revolver, handle)
det(sort, a)
amod(sort, different)
obj(handle, sort)
case(load, of)
compound(load, varmint)
nmod(sort, load)
punct(sort, --)
det(Fire, the)
compound(Fire, Remington)
compound(Magnum, jet)
compound(Center, Magnum)
compound(Fire, Center)
appos(sort, Fire)
punct(revolver, .)
case(present, at)
obl(available, present)
nsubj(available, it)
cop(available, be)
root(ROOT, available)
case(model, in)
nummod(model, one)
obl(available, model)
punct(model, ,)
det(revolver, the)
amod(revolver, fine)
cc(familiar, and)
conj(fine, familiar)
compound(revolver, Smith)
cc(Magnum, &)
compound(Magnum, Wesson)
conj(Smith, Magnum)
conj(model, revolver)
punct($, ()
advmod($, about)
appos(revolver, $)
nummod($, 110)
punct($, ))
punct(model, ,)
advmod(handgun, long)
det(handgun, a)
amod(quality, top)
punct(quality, -)
compound(handgun, quality)
appos(revolver, handgun)
case(arm, among)
compound(arm, target)
nmod(handgun, arm)
punct(available, .)
det(velocity, the)
nsubj:pass(rate, velocity)
case(this, of)
nmod(velocity, this)
punct(rate, ,)
nummod(grain, 40)
punct(grain, -)
compound(bullet, grain)
nsubj:pass(rate, bullet)
aux:pass(rate, be)
root(ROOT, rate)
case(fps, at)
det(fps, a)
advmod(hot, very)
amod(fps, hot)
nummod(fps, 2,460)
obl(rate, fps)
punct(shooting, ,)
cc(shooting, and)
nsubj(shooting, it)
cop(shooting, be)
det(shooting, the)
amod(shooting, flattest)
conj(rate, shooting)
case(cartridge, of)
det(cartridge, any)
compound(cartridge, revolver)
nmod(shooting, cartridge)
punct(shooting, ,)
case(rise, with)
det(rise, a)
amod(rise, mid-range)
nmod(shooting, rise)
case(inch, of)
advmod(inch, about)
det(inch, a)
nmod(rise, inch)
case(range, over)
det(range, a)
nummod(yard, 100)
punct(yard, -)
compound(range, yard)
nmod(inch, range)
punct(rate, .)
nsubj(load, this)
cop(load, be)
det(load, a)
compound(load, varmint)
root(ROOT, load)
punct(pure, ,)
amod(load, pure)
cc(simple, and)
conj(load, simple)
punct(load, ;)
punct(load, ;)
nsubj(explosive, it)
cop(explosive, be)
advmod(explosive, much)
advmod(explosive, too)
parataxis(load, explosive)
case(game, for)
amod(game, small)
amod(game, edible)
obl(explosive, game)
punct(load, .)
nsubj(cut, it)
aux(cut, can)
root(ROOT, cut)
det(squirrel, a)
amod(squirrel, red)
obj(cut, squirrel)
advmod(cut, neatly)
case(two, in)
obl(cut, two)
cc(burst, or)
conj(cut, burst)
det(crow, a)
obj(burst, crow)
case(flurry, into)
det(flurry, a)
obl(cut, flurry)
case(feather, of)
nmod(flurry, feather)
punct(cut, .)
det(aspect, the)
advmod(intrigue, most)
amod(aspect, intrigue)
nsubj(be, aspect)
case(S, of)
det(S, the)
nmod(aspect, S)
cc(Magnum, &)
compound(Magnum, W)
conj(S, Magnum)
acl(aspect, chamber)
case(jet, for)
det(jet, the)
amod(jet, new)
obl(chamber, jet)
root(ROOT, be)
mark(fire, that)
nsubj(fire, it)
aux(fire, can)
advmod(fire, also)
ccomp(be, fire)
amod(rim-fire, standard)
obj(fire, rim-fire)
case(means, by)
obl(fire, means)
case(sleeve, of)
compound(sleeve, adapter)
nmod(means, sleeve)
case(chamber, in)
det(chamber, the)
nmod(means, chamber)
punct(be, .)
nsubj(convert, you)
aux(convert, may)
advmod(convert, therefore)
root(ROOT, convert)
det(gun, the)
obj(convert, gun)
case(game, into)
det(game, a)
amod(game, small)
punct(game, -)
obl(convert, game)
cc(arm, and)
compound(arm, plinking)
conj(game, arm)
punct(convert, ,)
mark(disconcerting, although)
det(difference, the)
nsubj(disconcerting, difference)
case(point, in)
det(point, the)
nmod(difference, point)
case(impact, of)
nmod(point, impact)
punct(jet, ()
appos(impact, jet)
case(rim-fire, vs.)
nmod(jet, rim-fire)
punct(jet, ))
aux(disconcerting, can)
cop(disconcerting, be)
advmod(disconcerting, somewhat)
advcl(convert, disconcerting)
punct(convert, .)
det(accuracy, the)
nsubj(fine, accuracy)
case(cartridge, of)
det(cartridge, the)
compound(cartridge, jet)
nmod(accuracy, cartridge)
cop(fine, be)
root(ROOT, fine)
punct(fine, ;)
punct(fine, ;)
nsubj(test, I)
parataxis(fine, test)
obj(test, it)
case(scope, in)
nmod:poss(scope, my)
obl(test, scope)
case(scope, 's)
cc(W, &)
conj(scope, W)
cc(good, and)
expl(good, it)
cop(good, be)
conj(fine, good)
advmod(good, enough)
mark(allow, to)
advcl(enough, allow)
obj(allow, I)
mark(hit, to)
xcomp(allow, hit)
det(chuck, a)
obj(hit, chuck)
case(shot, with)
det(shot, every)
obl(hit, shot)
case(yard, at)
nummod(yard, 100)
obl(hit, yard)
mark(do, if)
nsubj(do, I)
advcl(hit, do)
nmod:poss(part, my)
obj(do, part)
mark(hold, by)
advcl(do, hold)
det(handgun, the)
obj(hold, handgun)
advmod(hold, steadily)
punct(fine, .)
compound(rifle, hunt)
root(ROOT, rifle)
punct(rifle, ,)
nummod(rifle, '61)
det(fact, the)
appos(rifle, fact)
mark(design, that)
det(Deerstalker, the)
nsubj(design, Deerstalker)
cc(jet, and)
det(jet, the)
conj(Deerstalker, jet)
cop(design, be)
det(design, the)
advmod(design, only)
advmod(new, completely)
amod(design, new)
acl(fact, design)
det(year, this)
obl:tmod(mean, year)
aux(mean, do)
advmod(mean, not)
acl(fact, mean)
mark(see, that)
nsubj(see, 1961)
aux(see, do)
advmod(see, not)
ccomp(mean, see)
obj(see, change)
case(model, in)
nmod(change, model)
punct(action, ,)
conj(model, action)
cc(caliber, and)
conj(model, caliber)
punct(rifle, .)
advmod(introduce, aside)
case(carbine, from)
det(carbine, the)
compound(carbine, Ruger)
obl(aside, carbine)
punct(introduce, ,)
det(number, a)
nsubj:pass(introduce, number)
case(rifle, of)
compound(rifle, hunt)
nmod(number, rifle)
aux(introduce, have)
aux:pass(introduce, be)
root(ROOT, introduce)
case(time, for)
det(time, the)
amod(time, first)
obl(introduce, time)
punct(introduce, .)
root(ROOT, here)
cop(here, be)
det(brand, the)
nsubj(here, brand)
punct(order, ()
case(order, in)
amod(order, alphabetical)
nmod(brand, order)
punct(order, ))
cc(model, and)
det(model, the)
amod(model, new)
conj(brand, model)
punct(here, .)
nsubj(group, Newcomers)
case(hunter, to)
det(hunter, the)
amod(hunter, american)
nmod(Newcomers, hunter)
cop(group, be)
det(group, the)
compound(group, brow)
root(ROOT, group)
case(action, of)
compound(action, bolt)
punct(action, -)
nmod(group, action)
punct(rifle, ,)
amod(power, high)
punct(power, -)
compound(rifle, power)
appos(group, rifle)
punct(group, .)
nsubj(have, they)
root(ROOT, have)
amod(action, fine)
compound(action, fn)
obj(have, action)
cc(finish, and)
det(finish, a)
amod(finish, better)
punct(better, -)
case(average, than)
punct(average, -)
conj(better, average)
conj(action, finish)
case(metal, on)
cc:preconj(metal, both)
det(metal, the)
nmod(finish, metal)
cc(wood, and)
det(wood, the)
compound(wood, stock)
conj(metal, wood)
punct(have, .)
compound(weight, Barrel)
nsubj(vary, weight)
root(ROOT, vary)
advmod(vary, sensibly)
case(caliber, with)
det(caliber, the)
amod(caliber, various)
obl(vary, caliber)
amod(caliber, available)
punct(include, ,)
cc(include, and)
nsubj(include, these)
conj(vary, include)
det(bore, the)
amod(bore, standard)
obj(include, bore)
punct($, ()
advmod($, about)
appos(bore, $)
nummod($, 165)
punct($, ))
cc(Magnums, plus)
det(Magnums, the)
conj(bore, Magnums)
punct($, ()
advmod($, around)
appos(Magnums, $)
nummod($, 170)
punct($, ))
punct(vary, ;)
punct(vary, ;)
det(latter, the)
nsubj(include, latter)
parataxis(vary, include)
obj(include, the)
punct(h, ,)
case(the, 's)
cc(h, &)
conj(the, h)
punct(include, ,)
punct(standard, ,)
cc(standard, and)
punct(type, .)
compound(type, Shotgun)
punct(type, -)
compound(pad, type)
compound(pad, rubber)
compound(pad, recoil)
nsubj(standard, pad)
cop(standard, be)
conj(include, standard)
case(all, on)
obl(standard, all)
case(Magnums, of)
det(Magnums, the)
nmod(all, Magnums)
case(the, except)
nmod(Magnums, the)
punct(excellent, .)
compound(design, stock)
nsubj(excellent, design)
cop(excellent, be)
conj(standard, excellent)
case(use, for)
obl(excellent, use)
case(scope, with)
nmod(use, scope)
punct(excellent, .)
nmod:poss(rifle, Colt)
case(Colt, 's)
compound(fire, center)
punct(fire, -)
compound(rifle, fire)
nummod(fire, 1961)
nsubj:pass(make, rifle)
aux:pass(make, be)
advmod(make, all)
parataxis(excellent, make)
case(action, with)
compound(action, Sako)
obl(make, action)
punct(action, ,)
advmod(action, regardless)
case(caliber, of)
obl(regardless, caliber)
punct(vary, .)
nsubj(have, the)
root(ROOT, have)
det(action, the)
amod(action, short)
obj(have, action)
punct(have, ;)
punct(have, ;)
det(action, the)
cc(action, and)
punct(action, ,)
det(action, the)
amod(action, medium)
conj(action, action)
punct(the, ,)
cc(the, and)
conj(the, the)
punct(have, ,)
root(ROOT, Af)
cc(Magnums, and)
det(Magnums, the)
conj(Af, Magnums)
punct(Af, ,)
det(action, the)
amod(action, long)
appos(Af, action)
punct($, ()
advmod($, about)
appos(action, $)
nummod($, 135)
case(Coltsman, for)
det(Coltsman, the)
amod(Coltsman, Standard)
nmod($, Coltsman)
cc($, and)
conj(action, $)
nummod($, 200)
case(version, for)
det(version, the)
amod(version, custom)
nmod($, version)
punct($, ))
punct(Af, .)
advmod(use, previously)
punct(use, ,)
compound(action, fn)
nsubj:pass(use, action)
aux:pass(use, be)
root(ROOT, use)
case(cartridge, for)
det(cartridge, the)
amod(cartridge, larger)
obl(use, cartridge)
punct(use, .)
compound(Standard, High)
nsubj(introduce, Standard)
aux(introduce, have)
root(ROOT, introduce)
det(auto, a)
obj(introduce, auto)
punct(auto, ,)
det(King, the)
compound(King, Sport)
punct(King, -)
appos(auto, King)
punct(auto, ,)
case(grade, in)
nummod(grade, two)
obl(introduce, grade)
punct(auto, --)
appos(auto, field)
cc(special, and)
conj(field, special)
punct($, ()
advmod($, less)
fixed(less, than)
conj(field, $)
nummod($, 45)
cc($, and)
advmod($, just)
advmod($, over)
conj($, $)
nummod($, 45)
punct($, ,)
advmod($, respectively)
punct($, ))
punct(introduce, .)
nsubj(rifle, it)
cop(rifle, be)
det(rifle, a)
amod(rifle, streamline)
root(ROOT, rifle)
punct(fast, ,)
conj(rifle, fast)
cc(make, and)
advmod(make, well)
punct(make, -)
conj(rifle, make)
punct(rifle, .)
case(rifle, among)
compound(rifle, Magnum)
compound(Fire, Rim)
punct(Fire, -)
compound(rifle, Fire)
nmod(rifle, rifle)
punct(rifle, ,)
nmod:poss(newcomer, 1961)
case(1961, 's)
amod(newcomer, lone)
nsubj(autoloader, newcomer)
cop(autoloader, be)
det(autoloader, the)
compound(autoloader, Kodiak)
compound(autoloader, Model)
nummod(autoloader, 260)
parataxis(rifle, autoloader)
punct($, ()
advmod($, around)
appos(autoloader, $)
nummod($, 60)
punct($, ))
punct(autoloader, .)
advmod(know, previously)
advcl(autoloader, know)
case(arm, as)
compound(arm, Jefferson)
obl(know, arm)
punct(give, ,)
nsubj(give, Kodiak)
aux(give, have)
parataxis(know, give)
det(job, this)
nummod(shot, 11)
punct(shot, -)
compound(job, shot)
amod(job, hammerless)
obj(give, job)
det(design, a)
advmod(fine, exceptionally)
amod(design, fine)
compound(design, stock)
appos(job, design)
punct(autoloader, ,)
cc(autoloader, and)
det(260, the)
nsubj(autoloader, 260)
cop(autoloader, be)
det(autoloader, the)
amod(autoloader, first)
conj(give, autoloader)
mark(handle, to)
acl(autoloader, handle)
compound(rim-fire, Magnum)
obj(handle, rim-fire)
punct(make, .)
nsubj(make, Marlin)
aux(make, have)
parataxis(autoloader, make)
nummod(contribution, two)
obj(make, contribution)
case(harvest, to)
det(harvest, the)
nmod(contribution, harvest)
case(offering, of)
amod(offering, new)
nmod(harvest, offering)
punct(make, .)
det(Model, the)
nsubj(weight, Model)
nummod(Model, 99)
punct($, ()
case($, under)
nmod(Model, $)
nummod($, 45)
punct($, ))
cop(weight, be)
det(weight, a)
compound(weight, light)
punct(weight, -)
root(ROOT, weight)
punct(weight, ,)
amod(auto, streamline)
compound(auto, rim-)
compound(auto, fire)
appos(weight, auto)
case(magazine, with)
det(magazine, a)
amod(magazine, tubular)
nmod(auto, magazine)
nsubj(hold, that)
acl:relcl(magazine, hold)
nummod(rifle, 18)
compound(rifle, Long)
obj(hold, rifle)
punct(weight, .)
nsubj(accurate, it)
cop(accurate, be)
advmod(accurate, extremely)
root(ROOT, accurate)
case(auto, for)
det(auto, a)
obl(accurate, auto)
punct(trouble, ,)
cc(trouble, and)
det(rifle, the)
compound(rifle, test)
nsubj(trouble, rifle)
nsubj(try, I)
acl:relcl(rifle, try)
cop(trouble, be)
advmod(trouble, completely)
conj(accurate, trouble)
punct(trouble, -)
parataxis(trouble, free)
mark(function, in)
advcl(free, function)
punct(accurate, .)
det(989, the)
nsubj(auto, 989)
punct($, ()
advmod($, about)
appos(989, $)
nummod($, 40)
punct($, ))
cop(auto, be)
det(auto, a)
advmod(newer, even)
amod(auto, newer)
root(ROOT, auto)
punct(auto, ,)
det(one, this)
appos(auto, one)
case(clip, with)
det(clip, a)
nummod(shot, seven)
punct(shot, -)
cc(shot, or)
nummod(shot, 12)
punct(shot, -)
compound(clip, shot)
nmod(one, clip)
punct(auto, .)
mark(again, once)
advmod(appear, again)
det(outfit, the)
compound(outfit, Mossberg)
compound(outfit, Targo)
nsubj(appear, outfit)
aux(appear, have)
root(ROOT, appear)
punct(appear, ,)
cc(time, but)
det(time, this)
conj(appear, time)
case(combination, as)
det(combination, a)
compound(action, bolt)
punct(action, -)
compound(combination, action)
compound(shotgun, rifle)
punct(shotgun, -)
compound(combination, shotgun)
nmod(time, combination)
punct(appear, .)
det(bore, the)
nsubj(unrifled, bore)
cop(unrifled, be)
root(ROOT, unrifled)
cc(provide, but)
aux:pass(provide, be)
conj(unrifled, provide)
case(tube, with)
det(tube, a)
compound(tube, insert)
obl(provide, tube)
nsubj:pass(rifl, which)
aux:pass(rifl, be)
acl:relcl(tube, rifl)
cc(give, and)
nsubj(give, which)
punct(give, ,)
advmod(give, surprisingly)
punct(give, ,)
conj(unrifled, give)
advmod(fair, pretty)
amod(accuracy, fair)
obj(give, accuracy)
advmod(long, even)
mark(long, though)
nsubj(long, it)
cop(long, be)
advmod(long, only)
nummod(inch, 3)
case(1, -)
nmod(3, 1)
case(2, /)
nmod(3, 2)
obl:npmod(long, inch)
advcl(give, long)
punct(unrifled, .)
nsubj(unscrew, you)
aux(unscrew, can)
root(ROOT, unscrew)
det(tube, this)
obj(unscrew, tube)
cc(replace, and)
conj(unscrew, replace)
obj(replace, it)
case(insert, with)
det(insert, a)
compound(insert, smoothbore)
obl(replace, insert)
case(use, for)
nmod(insert, use)
case(shotshell, with)
nmod(use, shotshell)
punct(replace, --)
mark(break, to)
advcl(replace, break)
det(target, the)
amod(target, little)
compound(target, Targo)
compound(target, clay)
obj(break, target)
punct(unscrew, . )
det(trap, a)
nsubj(fasten, trap)
mark(throw, for)
acl(trap, throw)
det(clay, these)
amod(clay, miniature)
obj(throw, clay)
root(ROOT, fasten)
case(barrel, to)
det(barrel, the)
obl(fasten, barrel)
mark(throw, so)
fixed(so, that)
det(shooter, the)
nsubj(throw, shooter)
aux(throw, can)
advcl(fasten, throw)
nmod:poss(target, he)
amod(target, own)
obj(throw, target)
punct(fasten, . )
det(trap, a)
compound(trap, spring)
nsubj(available, trap)
case(mounting, for)
amod(mounting, solid)
nmod(trap, mounting)
cc(trap, and)
det(trap, a)
amod(hand, regular)
compound(trap, hand)
conj(trap, trap)
cop(available, be)
advmod(available, also)
root(ROOT, available)
punct(available, .)
nsubj(have, you)
aux(have, can)
root(ROOT, have)
nmod:poss(choice, you)
obj(have, choice)
case(repeater, of)
det(repeater, a)
nummod(shot, seven)
punct(shot, -)
compound(repeater, shot)
nmod(choice, repeater)
punct(repeater, ,)
det(TR, the)
nummod(TR, 340)
appos(choice, TR)
punct($, ()
advmod($, about)
appos(TR, $)
nummod($, 40)
punct($, ))
cc(shot, or)
det(shot, a)
amod(shot, single)
punct(shot, -)
conj(TR, shot)
punct(TR, ,)
det(TR, the)
nummod(TR, 320)
conj(TR, TR)
punct($, ()
appos(TR, $)
nummod($, 10)
advmod($, less)
punct(less, ))
punct(have, .)
det(Targo, the)
nsubj(outfit, Targo)
cop(outfit, be)
det(outfit, a)
amod(outfit, good)
root(ROOT, outfit)
case(shooting, for)
amod(shooting, fun)
nmod(outfit, shooting)
cc(practice, or)
case(practice, for)
amod(practice, economic)
compound(shooting, wing)
punct(shooting, -)
compound(practice, shooting)
conj(shooting, practice)
punct(tougher, ,)
cc(tougher, but)
nsubj(tougher, it)
cop(tougher, be)
conj(outfit, tougher)
mark(look, than)
nsubj(look, it)
advcl(tougher, look)
mark(run, to)
xcomp(look, run)
compound:prt(run, up)
det(score, a)
obj(run, score)
case(bird, on)
det(bird, the)
compound(bird, clay)
obl(run, bird)
punct(outfit, .)
nsubj(travel, they)
aux(travel, will)
root(ROOT, travel)
nummod(foot, 50)
obj(travel, foot)
cc(more, or)
conj(foot, more)
mark(throw, when)
advcl(travel, throw)
case(trap, from)
det(trap, the)
compound(trap, spring)
obl(throw, trap)
cc(impossible, but)
expl(impossible, it)
cop(impossible, be)
advmod(impossible, almost)
conj(travel, impossible)
mark(break, to)
csubj(impossible, break)
obj(break, one)
mark(pass, after)
nsubj(pass, it)
advcl(break, pass)
det(mark, the)
nummod(foot, 35)
punct(foot, -)
compound(mark, foot)
obj(pass, mark)
punct(travel, .)
det(combination, the)
nsubj(make, combination)
case(pattern, of)
amod(pattern, thin)
nmod(combination, pattern)
cc(pellet, and)
advmod(tiny, very)
amod(pellet, tiny)
conj(pattern, pellet)
root(ROOT, make)
expl(make, it)
xcomp(make, necessary)
mark(get, to)
csubj(necessary, get)
case(bird, on)
det(bird, the)
obl(get, bird)
punct(get, ,)
advmod(now, right)
advmod(get, now)
punct(make, !)
punct(make, !)
amod(caliber, big)
compound(caliber, Magnum)
nsubj(appear, caliber)
root(ROOT, appear)
case(line, in)
det(line, the)
compound(line, Remington)
obl(appear, line)
case(1961, for)
obl(appear, 1961)
punct(appear, ,)
case(addition, with)
det(addition, the)
obl(appear, addition)
case(list, of)
det(list, the)
cc(to, and)
conj(the, to)
det(list, the)
nmod(addition, list)
case(725', of)
compound(725', Model)
nmod(list, 725')
punct(appear, .)
nsubj:pass(make, these)
aux:pass(make, be)
root(ROOT, make)
case(order, on)
amod(order, special)
obl(make, order)
advmod(order, only)
punct(make, ,)
case(grade, in)
compound(grade, Kodiak)
obl(make, grade)
punct($, ()
advmod($, about)
appos(grade, $)
nummod($, 310)
punct($, ))
punct(make, ,)
case(brake, with)
amod(brake, integral)
compound(brake, muzzle)
obl(make, brake)
cc(pad, and)
amod(pad, heavy)
compound(pad, rubber)
compound(pad, recoil)
conj(brake, pad)
punct(make, ;)
punct(weigh, ;)
nsubj(weigh, they)
parataxis(make, weigh)
advmod(nine, around)
nummod(pound, nine)
obj(weigh, pound)
punct(make, . )
det(version, a)
amod(version, shorten)
nsubj(appear, version)
case(autoloader, of)
det(autoloader, the)
advmod(regard, highly)
amod(autoloader, regard)
compound(autoloader, Remington)
nummod(Remington, 742)
nmod(version, autoloader)
advmod(appear, also)
root(ROOT, appear)
case(1961, in)
obl(appear, 1961)
punct(appear, .)
det(carbine, this)
nsubj(have, carbine)
punct($, ()
case($, under)
nmod(carbine, $)
nummod($, 140)
punct($, ,)
advmod($, about)
appos($, $)
compound($, 15)
advmod($, more)
case(grade, for)
det(grade, a)
compound(grade, deluxe)
obl(more, grade)
punct($, ))
root(ROOT, have)
det(barrel, a)
compound(1, 18)
punct(inch, -)
nummod(inch, 1)
punct(inch, /)
nummod(inch, 2)
punct(inch, -)
compound(barrel, inch)
obj(have, barrel)
cc(inspire, and)
aux:pass(inspire, be)
advmod(inspire, obviously)
conj(have, inspire)
case(popularity, by)
det(popularity, the)
obl(inspire, popularity)
case(pump, of)
amod(year, last)
nmod:poss(pump, year)
case(year, 's)
compound(pump, Model)
nummod(pump, 760)
nmod(popularity, pump)
case(barrel, with)
det(barrel, a)
amod(barrel, short)
punct(barrel, -)
nmod(pump, barrel)
punct(have, .)
det(design, this)
nsubj(hard, design)
cop(hard, be)
root(ROOT, hard)
mark(beat, to)
csubj(hard, beat)
case(hunt, for)
compound(hunt, timber)
obl(beat, hunt)
cc(packing, or)
mark(packing, for)
conj(beat, packing)
case(scabbard, in)
det(scabbard, a)
compound(scabbard, saddle)
obl(packing, scabbard)
punct(hard, .)
advmod(available, presently)
punct(available, ,)
det(742C, the)
nsubj(available, 742C)
cop(available, be)
root(ROOT, available)
case(Af, in)
obl(available, Af)
punct(available, .)
det(version, the)
amod(version, latest)
nsubj(featherweight, version)
case(Model, of)
det(Model, the)
amod(Model, famous)
compound(Model, savage)
nmod(version, Model)
nummod(Model, 99)
cop(featherweight, be)
det(featherweight, the)
nummod(featherweight, 99)
parataxis(available, featherweight)
punct($, ()
advmod($, about)
appos(featherweight, $)
nummod($, 125)
punct($, ))
cc(Deluxe, and)
det(Deluxe, the)
nummod(Deluxe, 99)
conj(featherweight, Deluxe)
punct($, ()
case($, under)
appos(Deluxe, $)
nummod($, 135)
punct($, ))
punct(Deluxe, ,)
nsubj(have, which)
acl:relcl(Deluxe, have)
det(safety, a)
amod(tang, top)
punct(tang, -)
compound(safety, tang)
obj(have, safety)
cc(improve, and)
conj(safety, improve)
compound(design, trigger)
conj(safety, design)
punct(available, .)
det(replacement, the)
nsubj(make, replacement)
case(catch, of)
det(catch, the)
compound(lock, slide)
punct(lock, -)
compound(catch, lock)
compound(catch, side)
compound(catch, safety)
nmod(replacement, catch)
aux(make, will)
root(ROOT, make)
det(favorite, this)
compound(action, lever)
punct(action, -)
compound(favorite, action)
obj(make, favorite)
advmod(appeal, more)
xcomp(make, appeal)
case(ever, than)
obl(appeal, ever)
mark(easier, since)
det(safety, the)
amod(safety, new)
nsubj(easier, safety)
cop(easier, be)
advcl(appeal, easier)
cc(faster, and)
conj(easier, faster)
mark(operate, to)
advcl(easier, operate)
punct(make, .)
nmod:poss(gun, Beginners)
case(Beginners, 's)
nsubj(show, gun)
punct(gun, ,)
punct(gun, ')
nummod(crop, 61)
det(crop, a)
amod(crop, fresh)
appos(gun, crop)
case(gun, of)
nmod:poss(gun, beginner)
case(beginner, 's)
nmod(crop, gun)
root(ROOT, show)
compound:prt(show, up)
case(1961, in)
obl(show, 1961)
punct(bet, ,)
cc(bet, and)
nsubj(bet, they)
cop(bet, be)
amod(bet, good)
conj(show, bet)
case(list, for)
nmod:poss(list, you)
compound(list, Christmas)
compound(list, gift)
nmod(bet, list)
mark(wonder, if)
nsubj(wonder, you)
aux(wonder, be)
advcl(bet, wonder)
nsubj(get, what)
mark(get, to)
ccomp(wonder, get)
case(youngster, for)
det(youngster, a)
obl(get, youngster)
punct(show, .)
det(unusual, the)
advmod(unusual, most)
nsubj(Ithaca, unusual)
case(they, of)
obl(unusual, they)
cop(Ithaca, be)
det(Ithaca, the)
root(ROOT, Ithaca)
nummod(Ithaca, 49)
punct($, ()
advmod($, about)
appos(Ithaca, $)
nummod($, 20)
punct($, ,)
conj($, $)
nummod($, 5)
case(scabbard, for)
det(scabbard, a)
compound(scabbard, saddle)
nmod($, scabbard)
punct($, ))
punct(Ithaca, --)
det(shot, a)
amod(action, lever-)
compound(shot, action)
amod(shot, single)
punct(shot, -)
parataxis(Ithaca, shot)
acl(shot, patterned)
case(action, after)
det(action, the)
amod(action, famous)
compound(action, Winchester)
compound(action, lever)
punct(action, -)
obl(patterned, action)
cc(feature, and)
conj(patterned, feature)
det(look, the)
amod(look, western)
obj(feature, look)
punct(Ithaca, .)
case(line, because)
fixed(because, of)
nmod:poss(line, its)
amod(line, traditional)
obl(have, line)
punct(have, ,)
nsubj(have, it)
advmod(have, probably)
root(ROOT, have)
amod(appeal, more)
compound(appeal, kid)
obj(have, appeal)
case(model, than)
det(model, any)
amod(model, other)
nmod(appeal, model)
punct(have, .)
det(action, the)
nsubj(block, action)
cop(block, be)
det(block, a)
compound(block, drop)
punct(block, -)
root(ROOT, block)
punct(block, ,)
parataxis(block, handle)
det:predet(rim-fire, all)
det(rim-fire, the)
amod(rim-fire, standard)
obj(handle, rim-fire)
punct(design, .)
nmod:poss(latest, Marlin)
case(Marlin, 's)
nsubj:pass(design, latest)
aux:pass(design, be)
advmod(design, also)
parataxis(block, design)
case(shooter, for)
det(shooter, the)
compound(shooter, beginning)
obl(design, shooter)
punct(design, ,)
mark(rifle, although)
nsubj(rifle, it)
cop(rifle, be)
det(rifle, a)
compound(size, full)
punct(size, -)
amod(rifle, size)
advcl(design, rifle)
case(plenty, with)
nmod(rifle, plenty)
case(weight, of)
compound(weight, barrel)
nmod(plenty, weight)
cc(stock, and)
amod(stock, ample)
conj(weight, stock)
punct(block, .)
nsubj(Model, this)
cop(Model, be)
det(Model, the)
root(ROOT, Model)
nummod(Model, 122)
punct($, ()
advmod($, about)
appos(Model, $)
nummod($, 20)
punct($, ))
punct(Model, ;)
punct(Model, ;)
nsubj(action, it)
cop(action, be)
det(action, a)
amod(shot, single)
punct(shot, -)
compound(action, shot)
compound(action, bolt)
punct(action, -)
parataxis(Model, action)
case(safety, with)
det(safety, a)
amod(safety, automatic)
nmod(action, safety)
punct(action, --)
advmod(go, i.e.)
punct(go, ,)
det(safety, the)
nsubj(go, safety)
parataxis(Model, go)
case(time, on)
det(time, every)
obl(go, time)
det(bolt, the)
nsubj:pass(lift, bolt)
aux:pass(lift, be)
acl:relcl(time, lift)
cc(cocked, and)
det(gun, the)
nsubj(cocked, gun)
conj(lift, cocked)
case(shot, for)
det(shot, the)
amod(shot, next)
obl(cocked, shot)
punct(Model, .)
compound(design, stock)
nsubj(excellent, design)
cop(excellent, be)
root(ROOT, excellent)
punct(gun, ,)
cc(gun, and)
det(model, this)
nsubj(gun, model)
cop(gun, be)
det(gun, a)
amod(gun, good)
amod(gun, first)
conj(excellent, gun)
punct(excellent, .)
det(boy, another)
nmod:poss(model, boy)
case(boy, 's)
nsubj(514c, model)
cop(514c, be)
det(514c, the)
amod(shot, single)
punct(shot, -)
compound(514c, shot)
compound(514c, Remington)
parataxis(excellent, 514c)
punct($, ()
advmod($, around)
appos(514c, $)
nummod($, 20)
punct($, ))
punct(514c, ,)
nsubj(come, which)
acl:relcl(514c, come)
case(barrel, with)
det(barrel, a)
nummod(inch, 21)
punct(inch, -)
compound(barrel, inch)
obl(come, barrel)
cc(stock, and)
det(stock, a)
amod(stock, short)
punct(1/2, --)
compound(1/2, 12)
punct(1/2, -)
conj(short, 1/2)
compound(stock, -inch)
punct(stock, --)
conj(barrel, stock)
punct(excellent, ;)
punct(excellent, ;)
nsubj(right, it)
cop(right, be)
advmod(right, just)
root(ROOT, right)
case(boy, for)
det(boy, a)
obl(right, boy)
case(12, of)
nmod(boy, 12)
case(1/2, -)
nmod(12, 1/2)
punct(right, .)
det(beginner, a)
nmod:poss(shotgun, beginner)
case(beginner, 's)
nsubj:pass(introduce, shotgun)
aux(introduce, have)
advmod(introduce, also)
aux:pass(introduce, be)
parataxis(right, introduce)
det(year, this)
obl:tmod(introduce, year)
punct(right, .)
det(Stevens, the)
amod(barrel, single)
punct(barrel, -)
compound(Stevens, barrel)
nsubj:pass(make, Stevens)
nummod(Stevens, 940y)
punct($, ()
case($, under)
nmod(Stevens, $)
nummod($, 35)
punct($, ))
aux:pass(make, be)
root(ROOT, make)
case(lever, with)
det(lever, a)
compound(lever, side)
obl(make, lever)
cc(lever, rather)
fixed(rather, than)
det(lever, a)
amod(tang, top)
punct(tang, -)
compound(lever, tang)
conj(lever, lever)
mark(strong, because)
amod(youngster, many)
nsubj(strong, youngster)
cop(strong, be)
advmod(strong, not)
advcl(make, strong)
advmod(strong, enough)
mark(operate, to)
advcl(strong, operate)
det(tang, a)
amod(tang, top)
obj(operate, tang)
mark(open, to)
advcl(operate, open)
det(gun, a)
obj(open, gun)
punct(strong, --)
cc(open, and)
det(lever, the)
compound(lever, side)
nsubj(open, lever)
aux(open, do)
advmod(open, indeed)
conj(make, open)
advmod(easily, very)
advmod(open, easily)
punct(make, .)
det(gun, this)
nsubj(have, gun)
root(ROOT, have)
det(stock, a)
compound(1, 12)
punct(1, -)
compound(2, 1)
punct(inch, /)
nummod(inch, 2)
punct(inch, -)
compound(stock, inch)
obj(have, stock)
cc(available, and)
cop(available, be)
conj(have, available)
case(20, in)
cc:preconj(20, either)
obl(available, 20)
cc(gauge, or)
conj(20, gauge)
punct(have, .)
expl(be, there)
root(ROOT, be)
det(addition, another)
nsubj(be, addition)
case(line, to)
det(line, the)
compound(line, Stevens)
nmod(addition, line)
punct(line, ,)
det(Model, the)
compound(Model, pump-action)
appos(addition, Model)
nummod(Model, 77)
advmod(Model, in)
punct($, ()
case($, under)
nmod(Model, $)
nummod($, 75)
punct($, ))
punct($, ,)
obj(may, which)
nsubj(may, you)
acl:relcl($, may)
cc(consider, or)
aux(consider, may)
advmod(consider, not)
conj(may, consider)
det(kid, a)
nmod:poss(gun, kid)
case(kid, 's)
obj(consider, gun)
punct(consider, ;)
punct(consider, ;)
amod(hunter, many)
amod(hunter, experience)
obj(consider, hunter)
case(gauge, like)
det(gauge, this)
nmod(hunter, gauge)
cc(type, and)
conj(gauge, type)
case(scattergun, of)
nmod(type, scattergun)
advmod(experience, too)
punct(be, .)
nsubj(be, Shotguns)
punct(Shotguns, ,)
nummod(Shotguns, '61)
mark(be, although)
expl(be, there)
advcl(hit, be)
det(development, no)
amod(development, startling)
nsubj(be, development)
case(design, in)
compound(design, shotgun)
nmod(development, design)
det(year, this)
obl:tmod(be, year)
punct(hit, ,)
det(number, a)
nsubj(hit, number)
case(model, of)
amod(model, new)
nmod(number, model)
cc(variation, and)
conj(model, variation)
case(model, of)
amod(model, exist)
nmod(variation, model)
aux(hit, do)
root(ROOT, hit)
det(market, the)
obj(hit, market)
punct(hit, .)
case(example, for)
obl(hit, example)
punct(version, ,)
det(version, a)
compound(trap, brow)
compound(version, trap)
obj(hit, version)
case(superpose, of)
det(superpose, the)
amod(version, superpose)
case(under, over)
punct(under, /)
obl(superpose, under)
punct(Broadway, ,)
det(Broadway, the)
nmod(version, Broadway)
punct($, ()
case($, from)
nmod(Broadway, $)
nummod($, 350)
compound($, up)
punct($, ,)
case(grade, depend)
case(grade, on)
nmod($, grade)
punct($, ))
punct(differ, ,)
conj($, differ)
case(model, from)
amod(model, standard)
obl(differ, model)
mark(equip, in)
fixed(in, that)
nsubj:pass(equip, it)
aux:pass(equip, be)
advcl(differ, equip)
case(end, with)
det(end, a)
amod(end, full)
compound(end, beavertail)
amod(end, fore)
obl(equip, end)
punct(pad, ,)
det(pad, a)
compound(recoil, cushion)
compound(pad, recoil)
conj(end, pad)
cc(rib, and)
det(rib, a)
obl:npmod(wide, barrel)
punct(wide, -)
amod(rib, wide)
amod(rib, ventilate)
conj(pad, rib)
case(sighting, for)
amod(sighting, fast)
nmod(rib, sighting)
punct(differ, .)
det(line, the)
compound(line, Colt)
nsubj(include, line)
advmod(include, now)
root(ROOT, include)
det(scattergun, a)
amod(scattergun, new)
obj(include, scattergun)
punct(scattergun, ,)
det(Standard, the)
appos(scattergun, Standard)
cc(Model, or)
compound(Pump, custom)
compound(Model, Pump)
conj(scattergun, Model)
punct($, ()
advmod($, about)
appos(scattergun, $)
nummod($, 90)
cc($, and)
conj($, $)
nummod($, 150)
punct($, ,)
advmod($, respectively)
punct($, ))
case(12, in)
obl(introduce, 12)
punct(12, ,)
conj(12, 16)
cc(20, and)
conj(12, 20)
punct(introduce, .)
compound(International, Firearms)
nsubj(introduce, International)
aux(introduce, have)
conj(include, introduce)
det(import, another)
obj(introduce, import)
punct(import, ,)
det(one, this)
appos(import, one)
case(Finland, from)
nmod(one, Finland)
punct(include, .)
nsubj(Valmet, it)
cop(Valmet, be)
det(Valmet, the)
root(ROOT, Valmet)
punct($, ()
advmod($, about)
appos(Valmet, $)
nummod($, 170)
punct($, ))
punct(Valmet, ,)
det(over, a)
nummod(gauge, 12)
punct(gauge, -)
compound(over, gauge)
appos(Valmet, over)
punct(over, /)
case(much, under)
advmod(much, very)
advmod(over, much)
case(Remington, like)
det(Remington, the)
amod(Remington, old)
obl(much, Remington)
nummod(Remington, 32)
punct(Remington, --)
nsubj(fine, which)
cop(fine, be)
advmod(fine, so)
acl:relcl(Remington, fine)
det(gun, a)
nsubj(fine, gun)
obj(bring, that)
obl:tmod(bring, today)
det(one, a)
amod(one, use)
nsubj(bring, one)
advmod(bring, still)
acl:relcl(gun, bring)
amod(price, high)
obj(bring, price)
punct(Valmet, .)
compound(Standard, High)
nsubj(add, Standard)
aux(add, have)
advmod(add, also)
root(ROOT, add)
nummod(model, two)
obj(add, model)
case(line, to)
nmod:poss(line, its)
obl(add, line)
punct(add, .)
det(Trophy, the)
compound(Trophy, Supermatic)
nsubj(auto, Trophy)
punct(begin, ()
nsubj(begin, price)
parataxis(Trophy, begin)
case($, at)
advmod($, less)
fixed(less, than)
obl(begin, $)
compound($, 135)
cc(depend, and)
conj(begin, depend)
case(grade, on)
obl(depend, grade)
cc(optional, and)
conj(grade, optional)
conj(grade, feature)
punct(feature, ))
cop(auto, be)
det(auto, a)
nummod(gauge, 12)
punct(gauge, -)
compound(auto, gauge)
root(ROOT, auto)
punct(auto, .)
det(Trophy, the)
compound(King, Flite)
punct(King, -)
compound(Trophy, King)
nsubj(gun, Trophy)
punct(begin, ()
acl(Trophy, begin)
case($, at)
advmod($, just)
advmod($, over)
obl(begin, $)
nummod($, 85)
punct(begin, ))
cop(gun, be)
det(gun, a)
compound(gun, pump)
root(ROOT, gun)
case(12, in)
nmod(gun, 12)
cc(16, or)
conj(12, 16)
punct(gun, .)
det(model, either)
nsubj(value, model)
cop(value, be)
det(value, a)
advmod(good, very)
amod(value, good)
compound(value, dollar)
root(ROOT, value)
punct(value, . )
nmod:poss(contribution, Mossberg)
case(Mossberg, 's)
amod(contribution, latest)
nsubj(Model, contribution)
case(field, to)
det(field, the)
nmod(contribution, field)
cop(Model, be)
det(Model, the)
root(ROOT, Model)
nummod(Model, 500)
punct($, ()
case($, from)
nmod(Model, $)
nummod($, 73.50)
punct($, ))
punct(Model, ;)
punct(Model, ;)
nsubj(version, this)
cop(version, be)
det(version, a)
amod(version, improve)
parataxis(Model, version)
case(Model, of)
det(Model, the)
amod(Model, old)
nmod(version, Model)
nummod(Model, 200)
punct(Model, ,)
det(shotgun, a)
compound(action, pump)
punct(action, -)
compound(shotgun, action)
nummod(gauge, 12)
punct(gauge, -)
compound(shotgun, gauge)
appos(version, shotgun)
punct(version, .)
root(ROOT, see)
obj(see, page)
nummod(page, 24)
case(report, for)
det(report, a)
amod(report, complete)
obl(see, report)
case(it, on)
nmod(report, it)
punct(Handguns, .)
parataxis(see, Handguns)
punct(Handguns, ,)
nummod(Handguns, '61)
advmod(Handguns, aside)
case(jet, from)
det(jet, the)
obl(aside, jet)
punct(Handguns, --)
obj(couple, which)
nsubj(couple, I)
acl:relcl(jet, couple)
case(carbine, with)
det(carbine, the)
compound(carbine, Deerstalker)
obl(couple, carbine)
case(one, as)
obl(couple, one)
case(development, of)
det(year, the)
nmod:poss(development, year)
case(year, 's)
nummod(development, two)
amod(development, biggest)
nmod(one, development)
punct(appear, --)
amod(innovation, few)
amod(innovation, significant)
nsubj(appear, innovation)
parataxis(see, appear)
case(handgun, among)
nmod:poss(handgun, 1961)
case(1961, 's)
obl(appear, handgun)
punct(see, .)
nsubj(stable, Livery)
root(ROOT, stable)
punct(stable, --)
appos(stable, J.)
flat(J., Vernon)
punct(J., ,)
appos(J., prop)
punct(J., .)
punct(stable, '')
punct(stable, .)
nsubj(decline, coach)
aux(decline, have)
parataxis(stable, decline)
advmod(decline, considerably)
case(1905, by)
obl(decline, 1905)
punct(there, ,)
cc(there, but)
det(sign, the)
nsubj(there, sign)
cop(there, be)
advmod(there, still)
conj(decline, there)
punct(there, ,)
case(building, near)
det(building, the)
amod(building, old)
compound(building, Wells)
compound(building, Fargo)
obl(there, building)
case(San, in)
nmod(building, San)
flat(San, Francisco)
punct(there, ,)
advcl(there, creake)
case(fog, in)
det(fog, the)
obl(creake, fog)
mark(have, as)
nsubj(have, it)
advcl(creake, have)
case(year, for)
nummod(year, thirty)
obl(have, year)
punct(stable, .)
nsubj(have, John)
flat(John, Vernon)
aux(have, have)
root(ROOT, have)
det:predet(patronage, all)
det(patronage, the)
obj(have, patronage)
nsubj(care, he)
acl:relcl(patronage, care)
obl(care, for)
punct(have, --)
nsubj(prosper, he)
aux(prosper, have)
parataxis(have, prosper)
punct(retire, ,)
cc(retire, but)
nsubj(retire, he)
aux(retire, could)
advmod(retire, not)
conj(have, retire)
case(horsedom, from)
obl(retire, horsedom)
punct(have, .)
nsubj(blood, coach)
cop(blood, be)
case(blood, in)
nmod:poss(blood, he)
root(ROOT, blood)
punct(blood, .)
nsubj(have, he)
root(ROOT, have)
nummod(interest, two)
obj(have, interest)
case(life, in)
nmod(interest, life)
punct(interest, :)
det(pleasure, the)
appos(interest, pleasure)
case(table, of)
det(table, the)
nmod(pleasure, table)
cc(driving, and)
conj(table, driving)
punct(pleasure, .)
advmod(week, twice)
det(week, a)
nmod:tmod(pleasure, week)
nsubj(drive, he)
acl:relcl(week, drive)
nmod:poss(tallyho, he)
obj(drive, tallyho)
case(road, over)
det(road, the)
compound(road, Santa)
compound(road, Cruz)
obl(drive, road)
punct(upland, ,)
conj(road, upland)
cc(forest, and)
case(forest, through)
det(forest, the)
compound(forest, redwood)
conj(road, forest)
punct(orchard, ,)
case(orchard, with)
nmod(road, orchard)
case(he, below)
nmod(orchard, he)
case(hand, at)
nummod(hand, one)
nmod(orchard, hand)
punct(glimpse, ,)
cc(glimpse, and)
conj(road, glimpse)
case(Pacific, of)
det(Pacific, the)
nmod(glimpse, Pacific)
case(other, at)
det(other, the)
nmod(glimpse, other)
punct(have, .)
det(journey, the)
nsubj(make, journey)
advmod(journey, back)
nsubj(make, he)
root(ROOT, make)
case(road, along)
det(road, the)
compound(road, coast)
obl(make, road)
punct(road, ,)
acl(road, travel)
obl:npmod(for-, hell)
punct(for-, -)
amod(leather, for-)
obj(travel, leather)
punct(leather, ,)
det(lantern, every)
appos(road, lantern)
case(yho, of)
det(yho, the)
amod(yho, tall)
nmod(lantern, yho)
amod(lantern, ablaze)
punct(make, .)
det(route, the)
amod(route, southward)
nsubj(run, route)
cop(run, be)
det(run, the)
amod(run, classic)
root(ROOT, run)
case(California, in)
nmod(run, California)
punct(fashionable, ,)
cc(fashionable, and)
det(fashionable, the)
advmod(fashionable, most)
conj(run, fashionable)
punct(run, .)
nmod:poss(patronage, he)
nsubj:pass(make, patronage)
case(stretch, on)
det(stretch, this)
nmod(patronage, stretch)
aux:pass(make, be)
root(ROOT, make)
compound:prt(make, up)
advmod(San, largely)
case(San, of)
obl(make, San)
flat(San, Franciscans)
punct(San, --)
appos(San, regular)
punct(most, ,)
appos(regular, most)
case(they, of)
nmod(most, they)
punct(trencherman, ,)
cc(trencherman, and)
conj(regular, trencherman)
case(himself, like)
nmod(trencherman, himself)
punct(make, .)
nsubj(complain, they)
aux(complain, do)
advmod(complain, not)
root(ROOT, complain)
case(hour, at)
det(hour, the)
amod(hour, inhuman)
obl(complain, hour)
mark(start, of)
acl(hour, start)
punct(seven, ()
obl:npmod(start, seven)
case(morning, in)
det(morning, the)
nmod(seven, morning)
punct(seven, ))
punct(tariff, ,)
cc(tariff, nor)
case(tariff, of)
det(tariff, the)
conj(hour, tariff)
punct(tariff, ,)
nsubj(reasonable, which)
cop(reasonable, be)
acl:relcl(tariff, reasonable)
mark(cover, since)
nsubj(cover, it)
advcl(reasonable, cover)
obj(cover, everything)
case(tobacco, but)
det(tobacco, the)
nmod(everything, tobacco)
punct(complain, .)
nsubj(Hotel, Breakfast)
cop(Hotel, be)
case(Hotel, at)
det(Hotel, the)
compound(Hotel, Palace)
root(ROOT, Hotel)
punct(Hotel, ,)
nsubj(somewhere, luncheon)
cop(somewhere, be)
parataxis(Hotel, somewhere)
case(forest, in)
det(forest, the)
compound(forest, mountain)
obl(somewhere, forest)
punct(Creek, ,)
cc(Creek, and)
nsubj(Creek, dinner)
cop(Creek, be)
advmod(Creek, either)
case(Creek, at)
compound(Creek, Boulder)
conj(somewhere, Creek)
cc(Cruz, or)
case(Cruz, at)
compound(Cruz, Santa)
conj(Creek, Cruz)
punct(Hotel, .)
csubj(tiring, gaze)
advmod(long, too)
advmod(gaze, long)
case(scenery, at)
det(scenery, the)
obl(gaze, scenery)
aux(tiring, could)
cop(tiring, be)
root(ROOT, tiring)
punct(tiring, ,)
advmod(contrive, so)
nsubj:pass(contrive, halt)
aux:pass(contrive, be)
parataxis(tiring, contrive)
case(meal, between)
obl(contrive, meal)
punct(contrive, .)
advmod(hostler, then)
det(hostler, the)
amod(hostler, chinese)
nsubj:pass(contrive, hostler)
punct(hostler, ,)
nsubj(ride, who)
acl:relcl(hostler, ride)
case(Vernon, with)
obl(ride, Vernon)
case(box, on)
det(box, the)
obl(ride, box)
punct(break, ,)
aux(break, would)
conj(ride, break)
xcomp(break, open)
det(hamper, a)
obj(open, hamper)
cc(produce, and)
conj(open, produce)
obj(produce, filet)
case(bass, of)
amod(bass, smoke)
nmod(filet, bass)
cc(sturgeon, or)
conj(bass, sturgeon)
punct(sandwich, ,)
conj(bass, sandwich)
punct(egg, ,)
amod(egg, pickle)
conj(bass, egg)
punct(sangaree, ,)
cc(sangaree, and)
det(sangaree, a)
compound(sangaree, rum)
conj(bass, sangaree)
mark(heat, to)
aux:pass(heat, be)
acl(sangaree, heat)
case(lamp, over)
det(lamp, a)
compound(lamp, spirit)
obl(heat, lamp)
punct(tiring, .)
case(spring, in)
obl(make, spring)
cc(autumn, and)
case(autumn, in)
obl(make, autumn)
det(run, the)
nsubj:pass(make, run)
aux:pass(make, be)
root(ROOT, make)
case(group, for)
det(group, a)
obl(make, group)
case(botanist, of)
nmod(group, botanist)
nsubj(include, which)
acl:relcl(group, include)
det(friend, a)
amod(friend, old)
obj(include, friend)
case(mine, of)
nmod(friend, mine)
punct(make, .)
nsubj(gather, they)
root(ROOT, gather)
obj(gather, root)
punct(bulb, ,)
conj(root, bulb)
punct(fern, ,)
amod(fern, odd)
conj(root, fern)
punct(leave, ,)
conj(root, leave)
punct(bit, ,)
cc(bit, and)
conj(root, bit)
case(resin, of)
nmod(bit, resin)
case(fir, from)
det(fir, the)
amod(fir, rare)
compound(Lucia, Santa)
compound(fir, Lucia)
nmod(bit, fir)
punct(fir, ,)
nsubj(exist, which)
acl:relcl(fir, exist)
advmod(exist, only)
case(strip, on)
det(strip, a)
compound(five, forty)
punct(five, -)
nummod(mile, five)
compound(strip, mile)
obl(exist, strip)
case(side, on)
det(side, the)
amod(side, westerly)
nmod(strip, side)
case(mountain, of)
det(mountain, these)
nmod(side, mountain)
punct(gather, .)
case(day, in)
det(day, the)
amod(day, spanish)
obl(roam, day)
amod(monk, Franciscan)
nsubj(roam, monk)
root(ROOT, roam)
advmod(roam, here)
mark(collect, to)
advcl(roam, collect)
det(resin, the)
obj(collect, resin)
case(incense, for)
obl(collect, incense)
punct(roam, .)
nsubj(yield, it)
root(ROOT, yield)
det(fragrance, a)
obj(yield, fragrance)
case(Orphic, as)
nmod(fragrance, Orphic)
case(that, as)
obl(yield, that)
case(pastille, of)
det(pastille, the)
nmod(that, pastille)
case(Malabar, of)
nmod(pastille, Malabar)
punct(yield, .)
nsubj(serviceable, Vernon)
cop(serviceable, be)
parataxis(yield, serviceable)
case(trip, on)
det(trip, the)
amod(trip, botanical)
compound(trip, field)
obl(serviceable, trip)
punct(arrange, ,)
cc(arrange, but)
nsubj(arrange, he)
aux(arrange, could)
conj(serviceable, arrange)
det(schedule, no)
obj(arrange, schedule)
case(cook, with)
det(cook, the)
nmod(schedule, cook)
punct(glad, ,)
cc(glad, and)
nsubj(glad, he)
cop(glad, be)
conj(arrange, glad)
mark(drop, when)
det(trip, the)
nsubj(drop, trip)
advcl(glad, drop)
compound:prt(drop, off)
punct(begin, ,)
cc(begin, and)
det(botanist, the)
nsubj(begin, botanist)
conj(glad, begin)
mark(motor, to)
xcomp(begin, motor)
compound:prt(motor, out)
case(themselves, by)
obl(motor, themselves)
punct(yield, .)
nmod:poss(friend, my)
nsubj(breakfast, friend)
advmod(breakfast, often)
root(ROOT, breakfast)
case(Vernon, with)
obl(breakfast, Vernon)
case(morning, on)
det(morning, the)
obl(breakfast, morning)
case(run, of)
det(run, the)
amod(run, regular)
amod(run, tall)
compound(run, yho)
nmod(morning, run)
punct(breakfast, .)
nsubj(honor, this)
cop(honor, be)
det(honor, a)
root(ROOT, honor)
punct(honor, ,)
mark(dine, like)
advcl(adjoin, dine)
case(captain, with)
det(captain, a)
obl(dine, captain)
case(table, at)
nmod:poss(table, he)
amod(table, private)
nmod(captain, table)
punct(adjoin, .)
nmod:poss(office, Vernon)
case(Vernon, 's)
nsubj(adjoin, office)
parataxis(honor, adjoin)
det(stable, the)
obj(adjoin, stable)
punct(adorn, ,)
cc(adorn, and)
det(wall, the)
nsubj:pass(adorn, wall)
aux:pass(adorn, be)
conj(adjoin, adorn)
case(lithograph, with)
advmod(color, brightly)
amod(lithograph, color)
obl(adorn, lithograph)
punct(lithograph, ,)
det(art, the)
amod(art, folk)
appos(lithograph, art)
case(period, of)
det(period, the)
nmod(art, period)
punct(honor, .)
nsubj(advertise, they)
root(ROOT, advertise)
compound(polish, harness)
obj(advertise, polish)
punct(liniment, ,)
conj(polish, liniment)
punct(Boots, ,)
nmod:poss(Boots, Ball)
case(Ball, 's)
compound(Boots, rubber)
conj(polish, Boots)
punct(Whiskey, ,)
compound(Whiskey, Green)
compound(Whiskey, River)
conj(polish, Whiskey)
punct(sarsaparilla, ,)
nmod:poss(sarsaparilla, Hood)
case(Hood, 's)
conj(polish, sarsaparilla)
punct(medicine, ,)
compound(medicine, patent)
conj(polish, medicine)
punct(black, ,)
compound(black, shoe)
conj(polish, black)
punct(tobacco, ,)
cc(tobacco, and)
compound(tobacco, chew)
conj(polish, tobacco)
punct(advertise, .)
det(hostler, the)
nsubj(have, hostler)
aux(have, would)
root(ROOT, have)
det(table, the)
obj(have, table)
xcomp(have, ready)
cc(pot, and)
det(pot, a)
conj(ready, pot)
case(coffee, of)
nmod(pot, coffee)
acl(pot, hiss)
case(stove, on)
det(stove, the)
obl(hiss, stove)
punct(have, ;)
punct(have, ;)
advmod(trot, then)
det(porter, a)
nsubj(trot, porter)
case(House, from)
nmod:poss(House, man)
case(man, 's)
compound(House, Fish)
nmod(porter, House)
aux(trot, would)
conj(have, trot)
advmod(trot, in)
case(tray, with)
det(tray, a)
obl(trot, tray)
case(head, on)
nmod:poss(head, he)
nmod(tray, head)
punct(have, .)
nsubj:pass(drape, it)
aux:pass(drape, be)
root(ROOT, drape)
case(napkin, with)
amod(napkin, snowy)
obl(drape, napkin)
nsubj(keep, that)
acl:relcl(napkin, keep)
xcomp(keep, hot)
det(platter, a)
obj(keep, platter)
case(roast, of)
amod(roast, oyster)
compound(roast, salt)
nmod(platter, roast)
cc(mound, and)
det(mound, a)
conj(platter, mound)
case(fritter, of)
compound(fritter, corn)
nmod(mound, fritter)
punct(drape, .)
nsubj(fond, Vernon)
cop(fond, be)
advmod(fond, consummately)
parataxis(drape, fond)
case(oyster, of)
obl(fond, oyster)
punct(famous, ,)
cc(famous, and)
nsubj(famous, man)
case(man, 's)
aux(famous, have)
cop(famous, be)
conj(fond, famous)
case(they, for)
obl(famous, they)
case(War, since)
det(War, the)
compound(War, Civil)
obl(famous, War)
punct(drape, .)
compound(salt, oyster)
compound(roast, salt)
nsubj(standby, roast)
punct(roast, --)
appos(roast, oyster)
case(shell, on)
det(shell, the)
amod(shell, half)
nmod(oyster, shell)
punct(oyster, ,)
acl(oyster, cook)
case(bed, on)
det(bed, a)
obl(cook, bed)
case(salt, of)
amod(salt, coarse)
nmod(bed, salt)
nsubj(keep, that)
acl:relcl(salt, keep)
obj(keep, they)
xcomp(keep, hot)
mark(serve, when)
advcl(hot, serve)
punct(standby, --)
cop(standby, be)
det(standby, a)
root(ROOT, standby)
case(man, at)
nmod(standby, man)
case(man, 's)
punct(standby, .)
nmod:poss(patron, its)
amod(morning, early)
compound(patron, morning)
nsubj(coachman, patron)
cop(coachman, be)
root(ROOT, coachman)
punct(coachman, ,)
nsubj(fortify, who)
acl:relcl(coachman, fortify)
obj(fortify, themselves)
case(day, for)
det(day, the)
obl(fortify, day)
case(delicacy, with)
det(delicacy, that)
obl(fortify, delicacy)
punct(coachman, .)
case(1890', in)
det(1890', the)
obl(begin, 1890')
det(Hotel, the)
compound(Hotel, Palace)
nsubj(begin, Hotel)
root(ROOT, begin)
xcomp(begin, serve)
det(dish, a)
amod(dish, oyster)
obj(serve, dish)
acl(dish, name)
case(manager, after)
nmod:poss(manager, its)
obl(name, manager)
punct(manager, ,)
appos(manager, John)
flat(John, C.)
flat(John, Kirkpatrick)
punct(begin, .)
det(dish, this)
nsubj(resemble, dish)
advmod(resemble, much)
root(ROOT, resemble)
det(oyster, the)
obj(resemble, oyster)
nsubj(make, Rockefeller)
acl:relcl(oyster, make)
xcomp(make, famous)
case(antoine, by)
obl(famous, antoine)
case(antoine, 's)
case(Orleans, in)
compound(Orleans, New)
obl(make, Orleans)
punct(resemble, ,)
mark(announce, though)
det(chef, the)
compound(chef, Palace)
nsubj(announce, chef)
advcl(resemble, announce)
obj(announce, it)
case(variant, as)
det(variant, a)
obl(announce, variant)
case(oyster, of)
nmod:poss(oyster, man)
case(man, 's)
compound(oyster, roast)
nmod(variant, oyster)
punct(resemble, . )
punct(argue, ()
nsubj(argue, Gastronomes)
aux(argue, have)
advmod(argue, long)
root(ROOT, argue)
case(which, about)
obl(come, which)
ccomp(argue, come)
advmod(come, first)
punct(Palace, ,)
det(Palace, the)
obl(come, Palace)
case(Palace, 's)
cc(antoine, or)
conj(Palace, antoine)
case(Palace, 's)
punct(argue, .)
nsubj:pass(hold, antoine)
aux:pass(hold, be)
root(ROOT, hold)
case(mandatory, as)
obl(hold, mandatory)
det(splash, a)
obl(hold, splash)
case(absinthe, of)
nmod(splash, absinthe)
cc(pernod, or)
conj(absinthe, pernod)
case(parsley, on)
det(parsley, the)
nmod(splash, parsley)
cc(spinach, or)
conj(parsley, spinach)
nsubj:pass(use, which)
aux:pass(use, be)
acl:relcl(parsley, use)
case(underbedding, for)
det(underbedding, the)
obl(use, underbedding)
punct(hold, .)
det(version, the)
compound(version, Kirkpatrick)
nsubj(hold, version)
root(ROOT, hold)
obj(hold, liqueur)
case(optional, as)
obl(hold, optional)
punct(hold, .)
punct(hold, ))
nsubj(hold, Vernon)
punct(hold, ,)
advmod(hold, however)
punct(hold, ,)
root(ROOT, hold)
compound:prt(hold, out)
case(roast, for)
amod(roast, plain)
amod(roast, oyster)
obl(hold, roast)
punct(plenty, ,)
cc(plenty, and)
conj(roast, plenty)
case(it, of)
nmod(plenty, it)
punct(unadorned, ,)
amod(plenty, unadorned)
case(herb, by)
obl(unadorned, herb)
cc(seasoning, or)
det(seasoning, any)
conj(herb, seasoning)
cc(salt, but)
conj(herb, salt)
punct(hold, ,)
mark(fancy, though)
nsubj(fancy, he)
aux(fancy, do)
advcl(hold, fancy)
det(bit, a)
obj(fancy, bit)
case(lemon, of)
nmod(bit, lemon)
punct(hold, .)
case(meal, after)
det(meal, the)
obl(go, meal)
punct(go, ,)
nsubj(go, he)
cc(guest, and)
nmod:poss(guest, he)
conj(he, guest)
root(ROOT, go)
advmod(go, out)
mark(inspect, to)
advcl(go, inspect)
det(rig, the)
obj(inspect, rig)
punct(go, ;)
punct(go, ;)
nsubj(ritual, this)
cop(ritual, be)
advmod(ritual, merely)
det(ritual, a)
parataxis(go, ritual)
punct(ritual, ,)
mark(concerned, to)
discourse(concerned, please)
det(hand, all)
nsubj(concerned, hand)
conj(ritual, concerned)
punct(go, .)
det(yho, the)
amod(yho, tall)
nsubj(cost, yho)
aux(cost, have)
root(ROOT, cost)
compound($, Vernon)
appos(cost, $)
nummod($, 2,300)
punct(cost, . )
det(replica, a)
nsubj(despair, replica)
case(coach, of)
nummod(coach, two)
nmod(replica, coach)
acl(coach, make)
case(England, in)
obl(make, England)
case(Club, for)
det(Club, the)
compound(Club, Belmont)
obl(make, Club)
case(East, in)
det(East, the)
nmod(Club, East)
punct(west, ,)
cc(west, and)
amod(west, matchless)
conj(replica, west)
case(Rockies, of)
det(Rockies, the)
obl(west, Rockies)
punct(despair, ,)
nsubj(despair, it)
cop(despair, be)
det(despair, the)
root(ROOT, despair)
case(whip, of)
nmod(despair, whip)
case(run, on)
det(run, the)
compound(run, Santa)
compound(run, Cruz)
nmod(whip, run)
punct(despair, .)
nsubj(shave, one)
aux(shave, could)
root(ROOT, shave)
case(reflection, in)
det(reflection, the)
obl(shave, reflection)
case(panel, of)
nmod:poss(panel, its)
amod(polish, french)
punct(polish, -)
amod(panel, polish)
nmod(reflection, panel)
punct(grease, ,)
cc(grease, and)
nmod:poss(axle, its)
nsubj:pass(grease, axle)
aux:pass(grease, be)
conj(shave, grease)
case(those, like)
obl(grease, those)
case(wheel, of)
compound(wheel, roulette)
nmod(those, wheel)
punct(shave, .)
det(horse, the)
nsubj:pass(groom, horse)
aux:pass(groom, be)
root(ROOT, groom)
case(gloss, to)
det(gloss, a)
amod(gloss, high)
obl(groom, gloss)
punct(groom, ;)
punct(groom, ;)
advcl(step, depart)
punct(step, ,)
nsubj(step, they)
parataxis(groom, step)
advmod(step, solemnly)
case(knee, with)
obl(step, knee)
advcl(step, lift)
case(jaw, to)
det(jaw, the)
obl(lift, jaw)
punct(groom, ,)
cc(train, for)
nsubj:pass(train, they)
aux(train, have)
aux:pass(train, be)
advcl(step, train)
mark(drag, to)
xcomp(train, drag)
case(funeral, at)
amod(funeral, important)
obl(drag, funeral)
punct(groom, .)
cc(fall, but)
case(start, for)
det(start, the)
obl(fall, start)
case(run, of)
det(run, the)
compound(run, Santa)
compound(run, Cruz)
nmod(start, run)
punct(fall, ,)
det(whip, the)
nsubj(fall, whip)
root(ROOT, fall)
punct(fall, .)
det(client, the)
nsubj(boarded, client)
root(ROOT, boarded)
det(tallyho, the)
obj(boarded, tallyho)
case(Palace, at)
det(Palace, the)
obl(boarded, Palace)
advmod(boarded, promptly)
case(seven, at)
obl(boarded, seven)
punct(boarded, .)
nsubj:pass(feed, they)
aux(feed, have)
aux:pass(feed, be)
root(ROOT, feed)
det(breakfast, a)
compound(breakfast, hunt)
obj(feed, breakfast)
punct(feed, ,)
advmod(bill, so)
advcl(feed, call)
case(kedgeree, because)
det(kedgeree, a)
obl(call, kedgeree)
punct(identify, ,)
det(dish, the)
nsubj(identify, dish)
parataxis(feed, identify)
case(hunt, with)
compound(hunt, fox)
obl(identify, hunt)
punct(bill, ,)
cop(bill, be)
case(bill, on)
det(bill, the)
advcl(identify, bill)
punct(feed, .)
expl(be, there)
root(ROOT, be)
amod(way, many)
nsubj(be, way)
mark(make, of)
acl(way, make)
det(kedgeree, a)
obj(make, kedgeree)
punct(be, ,)
det(one, every)
nsubj(be, one)
case(which, of)
obl(right, which)
cop(right, be)
acl:relcl(one, right)
punct(be, .)
root(ROOT, here)
cop(here, be)
det(recipe, a)
amod(recipe, original)
compound(recipe, kedgeree)
nsubj(here, recipe)
case(kitchen, from)
det(Club, the)
compound(Club, Family)
nmod:poss(kitchen, Club)
case(Club, 's)
nmod(recipe, kitchen)
punct(recipe, :)
compound(Kedgeree, Club)
appos(recipe, Kedgeree)
appos(Kedgeree, Flake)
punct(Kedgeree, ()
case(three, for)
nmod(Flake, three)
punct(three, ))
det(cupful, a)
appos(Kedgeree, cupful)
case(haddock, of)
amod(haddock, cold)
amod(haddock, boil)
nmod(cupful, haddock)
punct(mix, ,)
appos(cupful, mix)
case(cupful, with)
det(cupful, a)
nmod(mix, cupful)
case(rice, of)
amod(rice, cook)
nmod(cupful, rice)
punct(rice, ,)
nummod(egg, two)
amod(egg, mince)
advmod(boil, hard)
punct(boil, -)
amod(egg, boil)
conj(rice, egg)
punct(egg, ,)
det(sauce, some)
amod(sauce, buttery)
amod(sauce, white)
conj(rice, sauce)
acl(sauce, do)
case(cream, with)
obl(do, cream)
punct(cayenne, ,)
conj(cream, cayenne)
punct(pepper, ,)
conj(cream, pepper)
punct(salt, ,)
conj(cream, salt)
punct(pinch, ,)
det(pinch, a)
conj(cream, pinch)
case(curry, of)
nmod(pinch, curry)
punct(tablespoonful, ,)
det(tablespoonful, a)
conj(cream, tablespoonful)
case(onion, of)
amod(onion, mince)
nmod(tablespoonful, onion)
acl(tablespoonful, fry)
punct(bit, ,)
cc(bit, and)
det(bit, a)
conj(cream, bit)
case(anchovy, of)
nmod(bit, anchovy)
punct(here, .)
root(ROOT, heat)
cc(serve, and)
conj(heat, serve)
xcomp(serve, hot)
case(toast, on)
obl(serve, toast)
punct(heat, .)
det(omelet, the)
nsubj(more, omelet)
acl(omelet, name)
case(Ernest, for)
obl(name, Ernest)
flat(Ernest, Arbogast)
punct(Ernest, ,)
det(Palace, the)
nmod:poss(chef, Palace)
case(Palace, 's)
appos(Ernest, chef)
punct(more, ,)
cop(more, be)
advmod(more, even)
root(ROOT, more)
case(demand, in)
obl(more, demand)
punct(more, .)
case(decade, for)
obl(dish, decade)
nsubj(dish, it)
cop(dish, be)
det(dish, the)
advmod(popular, most)
amod(dish, popular)
root(ROOT, dish)
acl(dish, serve)
case(Grill, in)
det(lady, the)
nmod:poss(Grill, lady)
case(lady, 's)
obl(serve, Grill)
case(breakfast, at)
obl(serve, breakfast)
punct(one, ,)
cc(one, and)
nsubj(one, it)
cop(one, be)
conj(dish, one)
case(dish, of)
det(dish, the)
amod(dish, few)
amod(dish, old)
compound(dish, Palace)
nmod(one, dish)
nsubj(survive, that)
advmod(survive, still)
acl:relcl(dish, survive)
punct(dish, .)
amod(oyster, Native)
compound(oyster, California)
nsubj(go, oyster)
punct(salty, ,)
conj(oyster, salty)
cc(piquant, and)
conj(oyster, piquant)
punct(oyster, ,)
case(coppery, as)
nmod(oyster, coppery)
case(Delawares, as)
nmod(coppery, Delawares)
cc(larger, and)
advmod(larger, not)
advmod(larger, much)
conj(oyster, larger)
case(piece, than)
det(piece, a)
nummod(cent, five)
punct(cent, -)
compound(piece, cent)
obl(larger, piece)
punct(go, ,)
root(ROOT, go)
case(it, into)
obl(go, it)
punct(go, .)
det(formula, the)
amod(formula, original)
nsubj(go, formula)
root(ROOT, go)
advmod(go, thus)
punct(omelet, :)
parataxis(go, omelet)
root(ROOT, Arbogast)
flat(Arbogast, fry)
case(butter, in)
nmod(Arbogast, butter)
det(onion, a)
amod(onion, small)
amod(onion, mince)
appos(Arbogast, onion)
punct(rub, ,)
conj(onion, rub)
case(tablespoonful, with)
det(tablespoonful, a)
nmod(onion, tablespoonful)
case(flour, of)
nmod(tablespoonful, flour)
punct(add, ,)
conj(onion, add)
det:predet(cup, half)
det(cup, a)
obj(add, cup)
case(cream, of)
nmod(cup, cream)
punct(egg, ,)
nummod(egg, six)
amod(egg, beaten)
conj(cup, egg)
punct(pepper, ,)
conj(cream, pepper)
punct(salt, ,)
compound(salt, celery)
conj(cream, salt)
punct(teaspoonful, ,)
det(teaspoonful, a)
conj(cup, teaspoonful)
case(chife, of)
amod(chife, mince)
nmod(teaspoonful, chife)
punct(dash, ,)
det(dash, a)
conj(cup, dash)
case(cayenne, of)
nmod(dash, cayenne)
punct(pinch, ,)
cc(pinch, and)
det(pinch, a)
conj(cup, pinch)
case(nutmeg, of)
nmod(pinch, nutmeg)
punct(onion, . )
det(jigger, a)
nsubj(follow, jigger)
case(Sherry, of)
amod(Sherry, dry)
nmod(jigger, Sherry)
root(ROOT, follow)
punct(stiffen, ,)
cc(stiffen, and)
mark(stiffen, as)
det(mixture, the)
nsubj(stiffen, mixture)
conj(follow, stiffen)
punct(stiffen, ,)
mark(go, in)
advcl(stiffen, go)
det(hundred, a)
obj(go, hundred)
case(oyster, of)
det(oyster, the)
amod(oyster, little)
nmod(hundred, oyster)
punct(follow, .)
nsubj(stay, Louis)
flat(Louis, Sherry)
advmod(stay, once)
root(ROOT, stay)
det(fortnight, a)
obj(stay, fortnight)
case(Palace, at)
det(Palace, the)
obl(stay, Palace)
punct(pleased, ,)
cc(pleased, and)
nsubj(pleased, he)
cop(pleased, be)
advmod(pleased, so)
conj(stay, pleased)
case(omelet, with)
obl(pleased, omelet)
obl(pleased, Arbogast)
mark(introduce, that)
nsubj(introduce, he)
ccomp(pleased, introduce)
obj(introduce, it)
case(restaurant, at)
nmod:poss(restaurant, he)
obl(introduce, restaurant)
case(York, in)
compound(York, New)
nmod(restaurant, York)
nsubj(come, J.)
flat(J., Pierpont)
flat(J., Morgan)
aux(come, have)
conj(introduce, come)
case(train, in)
nmod:poss(train, he)
amod(train, private)
obl(come, train)
case(San, to)
nmod(train, San)
flat(San, Francisco)
punct(attend, ,)
mark(attend, to)
advcl(come, attend)
det(convention, a)
compound(convention, episcopal)
obj(attend, convention)
punct(bring, ,)
cc(bring, and)
conj(attend, bring)
det(restaurateur, the)
obj(bring, restaurateur)
case(he, with)
obl(bring, he)
punct(stay, .)
mark(happen, as)
nsubj(happen, thing)
advcl(install, happen)
punct(install, ,)
nsubj:pass(install, Morgan)
aux:pass(install, be)
root(ROOT, install)
case(residence, in)
det(residence, the)
compound(Hill, nob)
compound(residence, Hill)
obl(install, residence)
case(friend, of)
det(friend, a)
compound(friend, magnate)
nmod(residence, friend)
punct(friend, ,)
nmod:poss(kitchen, whose)
nsubj(swar, kitchen)
acl:relcl(friend, swar)
case(cook, with)
obl(swar, cook)
case(talent, of)
amod(talent, approve)
nmod(cook, talent)
punct(install, .)
nsubj(remain, Sherry)
root(ROOT, remain)
case(suite, in)
nmod:poss(suite, he)
compound(suite, hotel)
obl(remain, suite)
punct(suite, ,)
advmod(amused, where)
nsubj(amused, he)
acl:relcl(suite, amused)
obj(amused, himself)
mark(could, as)
advmod(could, best)
nsubj(could, he)
advcl(amused, could)
punct(remain, .)
mark(leave, twice)
nsubj(leave, he)
advcl(remain, leave)
obj(leave, everything)
case(entourage, to)
nmod:poss(entourage, he)
obl(leave, entourage)
punct(fleed, ,)
cc(fleed, and)
conj(leave, fleed)
mark(make, to)
xcomp(fleed, make)
det(tour, the)
compound(Cruz, Santa)
compound(tour, Cruz)
obj(make, tour)
case(guidance, under)
nmod:poss(guidance, Vernon)
case(Vernon, 's)
nmod(tour, guidance)
punct(remain, .)
case(court, in)
det(court, the)
amod(court, grand)
obl(entrance, court)
case(Palace, of)
det(Palace, the)
nmod(court, Palace)
punct(notable, ,)
amod(court, notable)
case(tier, for)
nmod:poss(tier, its)
obl(notable, tier)
case(gallery, of)
amod(gallery, Moorish)
nmod(tier, gallery)
nsubj(look, that)
acl:relcl(gallery, look)
advmod(look, down)
case(maelstrom, on)
det(maelstrom, the)
obl(look, maelstrom)
case(vehicle, of)
nmod(maelstrom, vehicle)
advmod(vehicle, below)
punct(entrance, ,)
nmod:poss(station, Vernon)
case(Vernon, 's)
nsubj(entrance, station)
cop(entrance, be)
case(entrance, at)
det(entrance, the)
root(ROOT, entrance)
punct(entrance, .)
nsubj(post, it)
cop(post, be)
det(post, a)
root(ROOT, post)
case(honor, of)
nmod(post, honor)
punct(post, ,)
advcl(post, hold)
xcomp(hold, inviolate)
case(he, for)
obl(hold, he)
punct(post, ;)
punct(post, ;)
nsubj(have, he)
parataxis(post, have)
det(primacy, the)
obj(have, primacy)
case(coachman, among)
det(coachman, the)
nmod(primacy, coachman)
punct(post, .)
case(build, of)
amod(build, majestic)
obl(resemble, build)
punct(rubicund, ,)
conj(build, rubicund)
cc(mouth, and)
compound(mouth, slash)
punct(mouth, -)
conj(build, mouth)
punct(resemble, ,)
nsubj(resemble, he)
root(ROOT, resemble)
det(winfield, the)
amod(General, late)
compound(winfield, General)
obj(resemble, winfield)
flat(winfield, Scott)
punct(winfield, ,)
nsubj:pass(say, who)
aux:pass(say, be)
acl:relcl(winfield, say)
mark(general, to)
cop(general, be)
det(general, the)
advmod(impose, most)
amod(general, impose)
xcomp(say, general)
case(century, of)
nmod:poss(century, he)
nmod(general, century)
punct(general, ,)
mark(century, if)
advmod(century, not)
case(century, of)
det(century, all)
advcl(general, century)
punct(resemble, .)
nsubj(wear, Vernon)
root(ROOT, wear)
det(hat, a)
amod(hat, gray)
amod(hat, tall)
obj(wear, hat)
punct(gardenia, ,)
det(gardenia, a)
conj(hat, gardenia)
punct(boot, ,)
cc(boot, and)
amod(boot, maroon)
compound(boot, Wellington)
conj(hat, boot)
nsubj(glisten, that)
acl:relcl(boot, glisten)
case(jelly, like)
compound(jelly, currant)
obl(glisten, jelly)
punct(wear, .)
advmod(clatter, promptly)
case(seven, at)
obl(clatter, seven)
nsubj(clatter, he)
aux(clatter, would)
root(ROOT, clatter)
case(court, out)
case(court, of)
det(court, the)
obl(clatter, court)
case(twelve, with)
obl(clatter, twelve)
case(tallyho, in)
det(tallyho, the)
nmod(twelve, tallyho)
punct(clatter, .)
nsubj(have, he)
root(ROOT, have)
obj(have, style)
punct(have, :)
nsubj(hold, he)
ccomp(have, hold)
nmod:poss(rein, he)
obj(hold, rein)
case(bunch, in)
det(bunch, a)
amod(bunch, loose)
obl(hold, bunch)
case(button, at)
det(button, the)
amod(button, third)
obl(hold, button)
case(surtout, of)
nmod:poss(surtout, he)
amod(surtout, check)
compound(surtout, Epsom)
nmod(button, surtout)
punct(lean, ,)
cc(lean, and)
mark(lean, when)
det(horse, the)
nsubj(lean, horse)
advcl(lean, lean)
case(curve, at)
det(curve, a)
obl(lean, curve)
punct(lean, ,)
mark(bend, as)
mark(bend, if)
advcl(lean, bend)
case(force, by)
det(force, the)
obl(bend, force)
case(gale, of)
det(gale, a)
nmod(force, gale)
punct(lean, ,)
nsubj(lean, he)
conj(hold, lean)
case(they, with)
obl(lean, they)
punct(have, .)
nsubj(canter, they)
root(ROOT, canter)
compound:prt(canter, down)
det(peninsula, the)
obj(canter, peninsula)
punct(canter, ,)
advmod(slacken, not)
advcl(canter, slacken)
mark(reach, until)
det(coach, the)
nsubj(reach, coach)
advcl(slacken, reach)
obj(reach, Woodside)
advmod(begin, where)
det(upland, the)
compound(upland, Santa)
compound(upland, Cruz)
nsubj(begin, upland)
acl:relcl(Woodside, begin)
punct(canter, .)
det(map, the)
compound(map, road)
nsubj(change, map)
case(region, of)
det(region, the)
nmod(map, region)
aux(change, have)
root(ROOT, change)
case(1905, since)
obl(change, 1905)
punct(change, ;)
punct(change, ;)
nsubj(burn, inns)
aux(burn, have)
parataxis(change, burn)
compound:prt(burn, down)
punct(move, ,)
conj(burn, move)
advmod(move, elsewhere)
punct(take, ,)
cc(take, or)
conj(burn, take)
amod(name, other)
obj(take, name)
punct(change, .)
advmod(mean, once)
case(road, on)
det(road, the)
obl(once, road)
punct(regular, ()
cc(regular, and)
advmod(regular, especially)
mark(regular, if)
det(passenger, the)
nsubj(regular, passenger)
cop(regular, be)
advmod(regular, all)
advcl(mean, regular)
cc(masculine, and)
conj(regular, masculine)
punct(regular, ))
punct(mean, ,)
det(schedule, the)
nsubj(mean, schedule)
root(ROOT, mean)
obj(mean, nothing)
punct(mean, .)
det(ease, a)
amod(ease, agreeable)
root(ROOT, ease)
acl(ease, suffuse)
xcomp(suffuse, Vernon)
cc(passenger, and)
det(passenger, the)
conj(Vernon, passenger)
case(tallyho, of)
det(tallyho, the)
nmod(passenger, tallyho)
punct(ease, ,)
case(which, from)
obl(issue, which)
expl(issue, there)
acl:relcl(ease, issue)
obj(issue, cloud)
case(smoke, of)
nmod(cloud, smoke)
punct(ease, .)
nsubj(tilt, Vernon)
aux(tilt, would)
root(ROOT, tilt)
nmod:poss(hat, he)
obj(tilt, hat)
case(ear, over)
nummod(ear, one)
obl(tilt, ear)
mark(lounge, as)
nsubj(lounge, he)
advcl(tilt, lounge)
case(foot, with)
nmod:poss(foot, he)
obl(lounge, foot)
case(dashboard, on)
det(dashboard, the)
obl(lounge, dashboard)
punct(lounge, ,)
advcl(lounge, indulge)
case(cigar, in)
det(cigar, a)
amod(cigar, huge)
obl(indulge, cigar)
punct(tilt, .)
det(horse, the)
nsubj(move, horse)
root(ROOT, move)
case(clump, at)
det(clump, a)
obl(move, clump)
punct(move, ;)
punct(move, ;)
nsubj(more, they)
cop(more, be)
advmod(more, no)
parataxis(move, more)
case(parade, on)
obl(more, parade)
mark(driver, than)
cop(driver, be)
nmod:poss(driver, they)
advcl(parade, driver)
punct(move, ;)
punct(move, ;)
nummod(fork, one)
nsubj(good, fork)
case(road, of)
det(road, the)
nmod(fork, road)
cop(good, be)
advmod(good, as)
parataxis(move, good)
case(another, as)
obl(good, another)
punct(move, .)
det(mountain, the)
compound(mountain, Santa)
compound(mountain, Cruz)
nsubj(sprawl, mountain)
root(ROOT, sprawl)
case(county, over)
nummod(county, three)
obl(sprawl, county)
punct(twist, ,)
cc(twist, and)
det(road, the)
nsubj(twist, road)
conj(sprawl, twist)
case(redwood, through)
compound(tap, sky)
punct(tap, -)
amod(redwood, tap)
obl(twist, redwood)
compound:prt(twist, down)
nmod:poss(column, whose)
amod(column, furrow)
nsubj(ripple, column)
acl:relcl(redwood, ripple)
obj(ripple, stream)
case(rain, of)
nmod(stream, rain)
punct(ripple, ,)
advmod(bake, even)
mark(bake, when)
nsubj(bake, heat)
advcl(ripple, bake)
det(valley, the)
compound(valley, Santa)
compound(valley, Clara)
obj(bake, valley)
advmod(bake, below)
case(left, at)
det(left, the)
obl(bake, left)
punct(sprawl, .)
det(splash, the)
compound(splash, water)
root(ROOT, splash)
case(tract, into)
obl:npmod(high, shoulder)
punct(high, -)
amod(tract, high)
nmod(splash, tract)
case(fernery, of)
nmod(tract, fernery)
punct(splash, .)
nsubj(arrive, you)
root(ROOT, arrive)
advmod(arrive, there)
case(seersucker, in)
obl(arrive, seersucker)
punct(feel, ,)
cc(feel, and)
conj(arrive, feel)
nsubj(wit, you)
cop(wit, be)
obl:npmod(wit, half)
punct(wit, -)
ccomp(feel, wit)
advmod(bring, not)
mark(bring, to)
advcl(wit, bring)
det(mackintosh, a)
obj(bring, mackintosh)
punct(arrive, .)
nsubj(keep, Vernon)
root(ROOT, keep)
det(book, a)
compound(book, account)
obj(keep, book)
case(list, with)
det(list, a)
obl(keep, list)
case(establishment, of)
det:predet(establishment, all)
det(establishment, the)
nmod(list, establishment)
obj(think, that)
nsubj(think, he)
acl:relcl(establishment, think)
xcomp(think, worthy)
case(patronage, of)
obl(worthy, patronage)
punct(keep, . )
det(number, a)
nsubj(fall, number)
case(they, of)
nmod(number, they)
aux(fall, must)
aux(fall, have)
root(ROOT, fall)
case(disfavor, into)
obl(fall, disfavor)
punct(fall, ;)
punct(fall, ;)
nsubj:pass(strike, they)
aux:pass(strike, be)
parataxis(fall, strike)
compound:prt(strike, out)
case(remark, with)
obl(strike, remark)
case(ink, in)
amod(ink, red)
nmod(remark, ink)
punct(strike, ,)
advcl(strike, denouncing)
cc:preconj(cook, both)
det(cook, the)
obj(denouncing, cook)
cc(management, and)
det(management, the)
conj(cook, management)
punct(fall, .)
nsubj(copious, he)
cop(copious, be)
root(ROOT, copious)
case(praise, in)
nmod:poss(praise, he)
obl(copious, praise)
case(those, of)
nmod(praise, those)
nsubj(serve, that)
acl:relcl(those, serve)
obj(serve, food)
nsubj(good, that)
cop(good, be)
acl:relcl(food, good)
mark(eat, to)
advcl(good, eat)
punct(copious, .)
det(horse, the)
nsubj(seem, horse)
root(ROOT, seem)
mark(know, to)
xcomp(seem, know)
obj(know, these)
case(instinct, by)
obl(know, instinct)
punct(seem, ,)
nsubj(use, he)
parataxis(seem, use)
mark(say, to)
xcomp(use, say)
punct(say, :)
amod(place, such)
nsubj(have, place)
advmod(have, invariably)
ccomp(say, have)
obj(have, stable)
case(bin, with)
amod(bin, superior)
compound(bin, feed)
nmod(stable, bin)
punct(seem, .)
expl(Wright, there)
cop(Wright, be)
root(ROOT, Wright)
case(Wright, 's)
punct(Wright, ,)
case(one, for)
obl(lose, one)
punct(lose, ,)
advcl(Wright, lose)
case(tree, amongst)
obl(lose, tree)
punct(Wright, ,)
nsubj(verandas, it)
cop(strew, be)
amod(verandas, wide)
parataxis(Wright, verandas)
amod(verandas, strew)
case(rocker, with)
obl(strew, rocker)
punct(Wright, .)
nsubj:pass(devote, many)
case(sojourner, of)
nmod:poss(sojourner, its)
nmod(many, sojourner)
aux:pass(devote, be)
root(ROOT, devote)
case(seclusion, to)
obl(devote, seclusion)
cc(quiet, and)
conj(seclusion, quiet)
punct(live, ,)
cc(live, and)
conj(devote, live)
advmod(live, there)
case(end, to)
det(end, the)
obl(live, end)
case(day, of)
nmod:poss(day, they)
nmod(end, day)
punct(devote, .)
nsubj(haunt, it)
cop(haunt, be)
det(haunt, the)
root(ROOT, haunt)
case(ambrose, of)
compound(ambrose, writer)
nmod(haunt, ambrose)
flat(ambrose, Bierce)
punct(ambrose, ,)
nsubj(admire, who)
acl:relcl(ambrose, admire)
nmod:poss(redwood, its)
obj(admire, redwood)
punct(haunt, .)
nsubj(feed, acorn)
case(oak, from)
det(oak, the)
amod(oak, great)
nmod(acorn, oak)
root(ROOT, feed)
det(pig, the)
amod(pig, small)
amod(pig, black)
obj(feed, pig)
punct(akin, ()
amod(pig, akin)
case(Berkshires, to)
obl(akin, Berkshires)
punct(akin, ))
punct(pig, ,)
nmod:poss(sweepstake, whose)
punct(sweepstake, ``)
compound(sweepstake, carcass)
nsubj:pass(renowned, sweepstake)
punct(sweepstake, '')
aux:pass(renowned, be)
acl:relcl(pig, renowned)
punct(butt, .)
nmod:poss(butt, they)
compound(butt, ham)
nsubj:pass(renowned, butt)
punct(butt, ,)
acl(butt, cure)
case(smoke, in)
compound(log, oak)
punct(log, -)
compound(smoke, log)
obl(cure, smoke)
punct(esteem, ,)
aux:pass(esteem, be)
advmod(esteem, also)
acl:relcl(butt, esteem)
mark(roast, when)
advcl(esteem, roast)
cc(boil, or)
conj(roast, boil)
punct(serve, ,)
cc(serve, and)
conj(roast, serve)
case(sauce, with)
det(sauce, this)
amod(sauce, original)
obl(serve, sauce)
punct(feed, : )
nmod:poss(sauce, Wright)
case(Wright, 's)
compound(sauce, devil)
nsubj(put, sauce)
punct(put, ;)
punct(put, ;)
root(ROOT, put)
case(saucepan, into)
det(saucepan, a)
obl(put, saucepan)
det(cupful, a)
obl:npmod(put, cupful)
case(gravy, of)
det(gravy, the)
amod(gravy, bake)
compound(gravy, ham)
nmod(cupful, gravy)
punct(liquor, ,)
cc(liquor, or)
case(liquor, of)
det(liquor, the)
amod(liquor, boil)
compound(liquor, ham)
conj(gravy, liquor)
punct(liquor, ,)
case(stick, with)
det(stick, a)
amod(stick, half)
nmod(liquor, stick)
case(butter, of)
nmod(stick, butter)
punct(teaspoonful, ,)
nummod(teaspoonful, three)
conj(stick, teaspoonful)
case(mustard, of)
amod(mustard, make)
nmod(teaspoonful, mustard)
punct(clove, ,)
cc(clove, and)
nummod(clove, two)
amod(clove, mash)
compound(clove, garlic)
conj(stick, clove)
punct(put, .)
root(ROOT, Contribute)
advmod(Contribute, also)
det(onion, a)
obj(Contribute, onion)
punct(tomato, ,)
det(tomato, a)
amod(tomato, peel)
conj(onion, tomato)
cc(gherkin, and)
nummod(gherkin, two)
amod(gherkin, pickle)
conj(onion, gherkin)
punct(lime, ,)
cc(lime, and)
det(lime, a)
amod(lime, mash)
conj(onion, lime)
punct(Contribute, .)
mark(simmer, after)
nsubj(simmer, this)
aux(simmer, have)
advcl(add, simmer)
det(hour, a)
obj(simmer, hour)
punct(add, ,)
root(ROOT, add)
nummod(tablespoon, two)
obj(add, tablespoon)
appos(tablespoon, each)
case(Worcestershire, of)
nmod(each, Worcestershire)
punct(catsup, ,)
conj(Worcestershire, catsup)
punct(chutney, ,)
cc(chutney, and)
conj(Worcestershire, chutney)
punct(walnut, ,)
nummod(walnut, two)
amod(walnut, pickle)
conj(Worcestershire, walnut)
punct(pint, ,)
cc(pint, and)
det(pint, a)
conj(Worcestershire, pint)
case(Sherry, of)
nmod(pint, Sherry)
punct(pint, .)
advmod(simmer, then)
parataxis(add, simmer)
nummod(minute, fifteen)
obl:npmod(longer, minute)
advmod(simmer, longer)
punct(add, .)
det(winter, every)
obl:tmod(make, winter)
det(kegful, a)
nsubj:pass(make, kegful)
case(sauce, of)
det(sauce, this)
nmod(kegful, sauce)
aux:pass(make, be)
root(ROOT, make)
cc(place, and)
conj(make, place)
case(end, at)
det(end, the)
obl(place, end)
case(row, of)
det(row, a)
nmod(end, row)
case(keg, of)
nummod(keg, four)
amod(keg, other)
nmod(row, keg)
case(cellar, in)
det(cellar, the)
nmod(keg, cellar)
punct(place, ,)
mark(mellow, so)
fixed(so, that)
mark(turn, when)
nsubj:pass(turn, it)
aux:pass(turn, be)
advcl(mellow, turn)
advcl(turn, come)
punct(mellow, ,)
nsubj:pass(mellow, it)
aux:pass(mellow, be)
advmod(mellow, properly)
conj(make, mellow)
punct(make, .)
nsubj(grow, Vineyards)
cc(orchard, and)
conj(Vineyards, orchard)
advmod(grow, also)
root(ROOT, grow)
case(Wright, around)
obl(grow, Wright)
case(Wright, 's)
punct(nuisance, ,)
cc(nuisance, and)
nsubj(nuisance, deer)
cop(nuisance, be)
advmod(nuisance, rather)
det(nuisance, a)
conj(grow, nuisance)
punct(grow, ;)
punct(grow, ;)
nsubj(leap, they)
parataxis(grow, leap)
nummod(foot, six)
punct(foot, -)
compound(fence, foot)
obj(leap, fence)
case(agility, with)
det(agility, the)
nmod(fence, agility)
case(panthers, of)
nmod(agility, panthers)
punct(grow, .)
cc(complain, but)
det(one, no)
nsubj(complain, one)
root(ROOT, complain)
mark(wound, when)
nsubj(wound, they)
advcl(complain, wound)
compound:prt(wound, up)
punct(wound, ,)
advmod(wound, regardless)
case(season, of)
obl(regardless, season)
punct(complain, ,)
case(pie, in)
compound(pie, venison)
obl(wound, pie)
punct(complain, .)
det(one, no)
nsubj(complain, one)
root(ROOT, complain)
case(wine, of)
det(wine, the)
amod(wine, white)
obl(complain, wine)
advmod(complain, either)
punct(complain, :)
case(altitude, at)
det(altitude, this)
obl(acquire, altitude)
case(foot, of)
nummod(foot, two)
nummod(foot, thousand)
nmod(altitude, foot)
punct(acquire, ,)
nsubj(acquire, grape)
conj(complain, acquire)
det(dryness, a)
obj(acquire, dryness)
cc(tang, and)
det(tang, the)
conj(dryness, tang)
case(gunflint, of)
nmod(tang, gunflint)
punct(complain, . )
punct(climb, ()
det(vineyard, the)
compound(vineyard, Almaden)
nsubj(climb, vineyard)
aux(climb, have)
advmod(climb, now)
root(ROOT, climb)
case(height, to)
det(height, this)
obl(climb, height)
punct(climb, .)
punct(climb, ))
compound(tree, Apple)
nsubj(grow, tree)
root(ROOT, grow)
advmod(grow, there)
advmod(grow, also)
punct(grow, .)
mark(flow, though)
nsubj(flow, creek)
case(mountain, in)
det(mountain, the)
compound(mountain, Santa)
compound(mountain, Cruz)
nmod(creek, mountain)
advcl(grow, flow)
obj(flow, brimful)
det(year, the)
obl:npmod(round, year)
advmod(flow, round)
cc(spring, and)
nsubj(spring, it)
cop(spring, be)
advmod(spring, forever)
conj(grow, spring)
punct(spring, ,)
det(apple, the)
nsubj(spring, apple)
nsubj(grow, that)
acl:relcl(apple, grow)
nsubj(grow, there)
acl:relcl(apple, have)
det(crackle, a)
amod(crackle, wintry)
obj(have, crackle)
punct(prefer, .)
compound(thereabouts, Dwellers)
nsubj(prefer, thereabouts)
parataxis(have, prefer)
mark(get, to)
xcomp(prefer, get)
nmod:poss(pie, they)
compound(pie, apple)
obj(get, pie)
case(bakery, at)
det(bakery, the)
amod(bakery, local)
obl(get, bakery)
punct(bakery, ,)
nsubj(have, which)
acl:relcl(bakery, have)
det(oven, a)
compound(oven, brick)
obj(have, oven)
acl(oven, fire)
case(billet, with)
compound(billet, redwood)
obl(fire, billet)
punct(grow, .)
det(merit, the)
nsubj(making, merit)
case(pie, of)
det(pie, the)
nmod(merit, pie)
punct(merit, ,)
nsubj(believe, Vernon)
acl:relcl(merit, believe)
punct(making, ,)
cop(making, be)
case(making, due)
advmod(making, more)
fixed(due, to)
nmod:poss(making, its)
root(ROOT, making)
case(heat, than)
case(heat, to)
det(heat, the)
amod(heat, wane)
nmod(making, heat)
case(oven, of)
det(oven, the)
nmod(heat, oven)
punct(making, .)
det(recipe, the)
nsubj(this, recipe)
punct(recipe, ,)
obj(get, which)
nsubj(get, he)
acl:relcl(recipe, get)
case(baker, from)
det(baker, the)
obl(get, baker)
punct(write, ,)
cc(write, and)
conj(get, write)
compound:prt(write, down)
case(ledger, in)
nmod:poss(ledger, he)
obl(write, ledger)
punct(this, ,)
cop(this, be)
advmod(this, basically)
root(ROOT, this)
punct(this, : )
nmod:poss(pie, Wright)
case(Wright, 's)
compound(pie, apple)
root(ROOT, pie)
punct(pie, ;)
punct(pie, ;)
appos(pie, peel)
punct(core, ,)
conj(peel, core)
punct(slice, ,)
cc(slice, and)
conj(peel, slice)
case(apple, across)
amod(apple, enough)
nmod(slice, apple)
mark(make, to)
acl(apple, make)
det(dome, a)
obj(make, dome)
case(tin, in)
det(tin, the)
compound(tin, pie)
nmod(dome, tin)
punct(set, ,)
cc(set, and)
conj(make, set)
advmod(set, aside)
punct(pie, .)
case(saucepan, in)
det(saucepan, a)
obl(put, saucepan)
root(ROOT, put)
amod(water, sufficient)
obj(put, water)
mark(cover, to)
advcl(put, cover)
obj(cover, they)
punct(amount, ,)
det(amount, a)
amod(amount, equal)
appos(they, amount)
case(sugar, of)
nmod(amount, sugar)
punct(lemon, ,)
det(lemon, a)
amod(lemon, slice)
conj(amount, lemon)
punct(tablespoonful, ,)
det(tablespoonful, a)
conj(amount, tablespoonful)
case(preserve, of)
compound(preserve, apricot)
nmod(tablespoonful, preserve)
cc(jam, or)
conj(preserve, jam)
punct(pinch, ,)
det(pinch, a)
conj(amount, pinch)
advmod(pinch, each)
case(clove, of)
nmod(each, clove)
cc(nutmeg, and)
conj(clove, nutmeg)
punct(leaf, ,)
cc(leaf, and)
det(leaf, a)
amod(leaf, large)
compound(leaf, bay)
conj(clove, leaf)
punct(put, .)
root(ROOT, let)
obj(let, this)
xcomp(let, boil)
advmod(boil, gently)
case(minute, for)
nummod(minute, twenty)
obl(boil, minute)
punct(let, ,)
advmod(strain, then)
parataxis(let, strain)
punct(let, .)
root(ROOT, poach)
det(apple, the)
obj(poach, apple)
case(syrup, in)
det(syrup, this)
obl(poach, syrup)
case(minute, for)
nummod(minute, twelve)
obl(poach, minute)
punct(drain, ,)
conj(poach, drain)
obj(drain, they)
punct(cool, ,)
cc(cool, and)
conj(drain, cool)
punct(poach, .)
root(ROOT, set)
det(apple, the)
obj(set, apple)
case(tin, in)
det(tin, the)
compound(line, pastry)
punct(line, -)
amod(tin, line)
obl(set, tin)
punct(spread, ,)
acl(tin, spread)
case(they, over)
obl(spread, they)
nummod(tablespoonful, three)
obj(spread, tablespoonful)
case(butter, of)
amod(butter, soften)
nmod(tablespoonful, butter)
punct(tablespoonful, ,)
case(sugar, with)
advmod(much, as)
amod(sugar, much)
amod(sugar, brown)
nmod(tablespoonful, sugar)
punct(sprinkling, ,)
det(sprinkling, a)
conj(sugar, sprinkling)
case(nutmeg, of)
nmod(sprinkling, nutmeg)
punct(leaf, ,)
cc(leaf, and)
det(leaf, a)
amod(leaf, fresh)
compound(leaf, bay)
conj(sugar, leaf)
punct(lay, ,)
advmod(lay, then)
conj(set, lay)
case(cover, on)
det(cover, a)
obl(lay, cover)
case(pastry, of)
nmod(cover, pastry)
punct(gild, ,)
cc(gild, and)
conj(lay, gild)
obj(gild, it)
case(yolk, with)
amod(yolk, beaten)
obl(gild, yolk)
case(egg, of)
nmod(yolk, egg)
punct(set, .)
nsubj(conceive, those)
nsubj(travel, who)
aux(travel, have)
advmod(travel, never)
acl:relcl(those, travel)
det(width, the)
obj(travel, width)
cc(length, and)
conj(width, length)
case(land, of)
det(land, this)
nmod(length, land)
aux(conceive, can)
advmod(conceive, not)
root(ROOT, conceive)
punct(conceive, ,)
case(basis, on)
det(basis, the)
obl(conceive, basis)
case(description, of)
compound(description, textbook)
nmod(basis, description)
advmod(basis, alone)
punct(hold, ,)
det(space, the)
amod(space, overwhelming)
nsubj(hold, space)
cc(variety, and)
conj(space, variety)
case(country, of)
det(country, this)
nmod(variety, country)
conj(conceive, hold)
advmod(hold, together)
case(government, under)
nummod(government, one)
obl(hold, government)
punct(conceive, .)
det(miracle, the)
nsubj(come, miracle)
case(America, of)
amod(America, democratic)
nmod(miracle, America)
root(ROOT, come)
advmod(come, home)
case(one, to)
obl(come, one)
advmod(strongly, most)
advmod(only, strongly)
advmod(see, only)
mark(see, when)
nsubj(see, one)
aux(see, have)
advcl(come, see)
det(plain, the)
amod(plain, endless)
amod(plain, great)
obj(see, plain)
case(Midwest, of)
det(Midwest, the)
nmod(plain, Midwest)
punct(plain, ;)
punct(plain, ;)
det(peak, the)
compound(reach, sky)
punct(reach, -)
amod(peak, reach)
parataxis(come, peak)
case(mountain, of)
det(mountain, the)
compound(mountain, Northwest)
nmod(peak, mountain)
punct(peak, ;)
punct(peak, ;)
det(life, the)
compound(fill, smoke)
punct(fill, -)
amod(life, fill)
punct(fill, ,)
amod(fill, art-)
amod(life, fill)
punct(life, ,)
obl:npmod(fill, drama)
punct(fill, -)
amod(life, fill)
conj(peak, life)
case(city, of)
det(city, the)
amod(city, great)
nmod(life, city)
case(East, of)
det(East, the)
nmod(city, East)
punct(life, ;)
punct(charm, ;)
det(charm, the)
amod(charm, lush)
cc(historic, and)
conj(lush, historic)
appos(life, charm)
case(South, of)
det(South, the)
nmod(charm, South)
punct(charm, .)
advmod(add, now)
punct(add, ,)
mark(add, to)
acl(charm, add)
case(extreme, to)
det(extreme, the)
advmod(unbelievable, already)
amod(extreme, unbelievable)
obl(add, extreme)
acl(extreme, find)
case(nation, in)
nummod(nation, one)
obl(find, nation)
punct(have, ,)
nsubj(have, we)
parataxis(extreme, have)
det(state, the)
nummod(state, two)
amod(state, new)
obj(have, state)
case(Hawaii, of)
nmod(state, Hawaii)
cc(Alaska, and)
conj(Hawaii, Alaska)
punct(state, .)
mark(hope, to)
advcl(have, hope)
mark(cover, to)
xcomp(hope, cover)
advmod(region, just)
nummod(region, one)
obj(cover, region)
case(land, of)
det(land, this)
nmod(region, land)
cc(enjoy, and)
mark(enjoy, to)
conj(cover, enjoy)
obj(enjoy, all)
case(sight, of)
nmod:poss(sight, its)
nmod(all, sight)
cc(event, and)
conj(sight, event)
cc(bring, and)
punct(bring, ,)
advmod(bring, of)
fixed(of, course)
punct(bring, ,)
mark(bring, to)
advcl(enjoy, bring)
compound:prt(bring, back)
obj(bring, picture)
case(experience, of)
nmod:poss(experience, you)
nmod(picture, experience)
punct(require, ,)
conj(bring, require)
compound(planning, advance)
obj(require, planning)
punct(come, .)
case(reason, for)
det(reason, this)
obl(prepare, reason)
punct(prepare, ,)
compound(camera, U.S.)
nsubj(prepare, camera)
aux(prepare, have)
root(ROOT, prepare)
det(feature, this)
amod(feature, special)
compound(feature, u.s.a.)
compound(feature, vacation)
obj(prepare, feature)
punct(prepare, .)
nsubj(divide, we)
root(ROOT, divide)
det(country, the)
obj(divide, country)
case(region, into)
nummod(region, five)
obl(divide, region)
cc(Hawaii, plus)
conj(region, Hawaii)
cc(Alaska, and)
conj(Hawaii, Alaska)
cc(include, and)
case(each, in)
obl(include, each)
aux:pass(include, be)
conj(divide, include)
det(description, a)
amod(description, general)
obj(include, description)
case(area, of)
det(area, the)
nmod(description, area)
cc(recommendation, plus)
amod(recommendation, specific)
conj(area, recommendation)
case(place, of)
nmod(recommendation, place)
cc(event, and)
conj(place, event)
mark(cover, to)
acl(place, cover)
punct(divide, .)
det(requirement, any)
amod(requirement, special)
amod(requirement, photographic)
nsubj:pass(give, requirement)
aux:pass(give, be)
advmod(give, also)
root(ROOT, give)
punct(give, .)
root(ROOT, use)
det(section, this)
obj(use, section)
mark(plan, to)
advcl(use, plan)
advmod(plan, now)
mark(make, to)
advcl(plan, make)
det(most, the)
obj(make, most)
case(vacation, of)
nmod:poss(vacation, you)
nmod(most, vacation)
case(America, in)
amod(America, photogenic)
nmod(vacation, America)
punct(use, .)
det(birthplace, the)
compound(birthplace, Northeast)
nsubj(offer, birthplace)
case(nation, of)
det(nation, the)
nmod(birthplace, nation)
punct(birthplace, ,)
det(Northeast, the)
nsubj(offer, Northeast)
root(ROOT, offer)
amod(battlefield, historic)
obj(offer, battlefield)
punct(battlefield, ;)
punct(battlefield, ;)
amod(village, lovely)
amod(village, old)
appos(battlefield, village)
cc(seashore, and)
det(seashore, a)
amod(seashore, rug)
conj(village, seashore)
case(sight, among)
nmod:poss(sight, its)
amod(sight, many)
amod(sight, worthwhile)
nmod(seashore, sight)
punct(offer, .)
det(farm, the)
amod(farm, roll)
nsubj:pass(include, farm)
case(Maryland, of)
nmod(farm, Maryland)
punct(farm, ,)
det(metropolis, the)
amod(metropolis, peerless)
appos(farm, metropolis)
case(City, of)
compound(York, New)
compound(City, York)
nmod(metropolis, City)
punct(include, ,)
det(mountain, the)
amod(mountain, verdant)
nsubj:pass(include, mountain)
case(Vermont, of)
nmod(mountain, Vermont)
aux(include, can)
advmod(include, all)
aux:pass(include, be)
root(ROOT, include)
case(vacation, in)
nmod:poss(vacation, you)
compound(vacation, Northeast)
obl(include, vacation)
punct(include, .)
case(automobile, by)
obl(take, automobile)
case(York, from)
compound(York, New)
nmod(automobile, York)
punct(take, ,)
case(example, for)
obl(take, example)
punct(take, ,)
nsubj(take, you)
aux(take, can)
root(ROOT, take)
det(tour, a)
nummod(tour, one)
cc(two, or)
conj(one, two)
punct(day, -)
nmod(one, day)
obj(take, tour)
case(Annapolis, to)
nmod(tour, Annapolis)
punct(Annapolis, ,)
appos(Annapolis, Maryland)
mark(see, to)
advcl(take, see)
det(home, the)
amod(home, colonial)
obj(see, home)
cc(Academy, and)
det(Academy, the)
compound(Academy, U.S.)
compound(Academy, Naval)
conj(home, Academy)
punct(shoot, ()
advmod(shoot, where)
nsubj(shoot, you)
aux(shoot, can)
acl:relcl(Academy, shoot)
det(parade, the)
compound(parade, dress)
obj(shoot, parade)
case(Wednesdays, on)
obl(shoot, Wednesdays)
punct(shoot, ))
punct(shoot, ;)
punct(take, ;)
case(Washington, to)
obl(take, Washington)
punct(Washington, ,)
appos(Washington, D.C.)
punct(Washington, ,)
case(tour, for)
det(tour, a)
compound(fill, eye)
punct(fill, -)
compound(tour, fill)
nmod(Washington, tour)
case(city, of)
det(city, the)
nmod(tour, city)
punct(tour, ;)
punct(tour, ;)
cc(lancaster, or)
case(lancaster, to)
conj(tour, lancaster)
punct(lancaster, ,)
appos(lancaster, Pa.)
punct(lancaster, ,)
det(center, the)
appos(lancaster, center)
case(country, of)
det(country, the)
compound(country, Pennsylvania)
compound(country, dutch)
nmod(center, country)
punct(center, ;)
punct(center, ;)
appos(center, Philadelphia)
case(building, with)
nmod:poss(building, its)
amod(building, historic)
nmod(Philadelphia, building)
cc(Forge, and)
advmod(Forge, nearby)
compound(Forge, Valley)
conj(building, Forge)
punct(building, ;)
punct(building, ;)
case(Point, to)
compound(Point, West)
obl(deserve, Point)
punct(Point, ,)
appos(Point, N.Y.)
punct(Point, ,)
det(academy, the)
amod(academy, famous)
amod(academy, military)
appos(Point, academy)
case(setting, in)
det(setting, a)
amod(setting, beautiful)
nmod(academy, setting)
case(River, on)
det(River, the)
compound(River, Hudson)
nmod(setting, River)
punct(deserve, .)
compound(England, New)
nsubj(deserve, England)
parataxis(take, deserve)
advmod(much, as)
obj(deserve, much)
case(time, of)
nmod:poss(time, you)
compound(time, vacation)
obl(much, time)
mark(afford, as)
nsubj(afford, you)
aux(afford, can)
advcl(as, afford)
case(area, with)
amod(area, such)
obl(afford, area)
case(cod, as)
compound(cod, cape)
nmod(area, cod)
acl(area, provide)
amod(beach, wonderful)
obj(provide, beach)
punct(colony, ,)
nmod:poss(colony, artist)
case(artist, 's)
conj(beach, colony)
cc(township, and)
amod(township, quaint)
conj(beach, township)
punct(take, .)
case(here, from)
obl(include, here)
nsubj(include, you)
aux(include, can)
advmod(include, easily)
root(ROOT, include)
det(trip, a)
compound(trip, side)
obj(include, trip)
case(port, to)
det(port, the)
amod(port, old)
compound(port, whaling)
nmod(trip, port)
case(Nantucket, of)
nmod(port, Nantucket)
punct(Nantucket, ,)
appos(Nantucket, Massachusetts)
punct(port, ,)
nsubj(look, which)
acl:relcl(port, look)
advmod(have, just)
mark(have, as)
nsubj(have, it)
aux(have, must)
advcl(look, have)
nummod(century, two)
obl:npmod(ago, century)
advmod(have, ago)
punct(include, .)
case(Village, at)
compound(Village, sturbridge)
obl(find, Village)
punct(Village, ,)
appos(Village, Massachusetts)
punct(find, ,)
nsubj(find, you)
aux(find, will)
root(ROOT, find)
det(town, a)
advmod(restore, completely)
punct(restore, -)
amod(town, restore)
compound(England, New)
compound(town, England)
obj(find, town)
punct(find, .)
compound(Park, North)
case(Acadia, to)
compound(Park, Acadia)
compound(Park, National)
root(ROOT, Park)
punct(Park, ,)
list(Park, Maine)
punct(Park, ,)
case(view, with)
nmod(Park, view)
case(coast, of)
det(coast, a)
amod(coast, rockbound)
nmod(view, coast)
cc(forest, and)
conj(coast, dark)
punct(forest, ,)
amod(forest, magnificent)
conj(coast, forest)
punct(Park, .)
nsubj(week, one)
case(way, of)
det(way, the)
advmod(exciting, most)
amod(way, exciting)
nmod(one, way)
mark(end, to)
acl(way, end)
det(vacation, a)
compound(vacation, Northeast)
obj(end, vacation)
aux(week, would)
cop(week, be)
case(week, with)
det(week, a)
root(ROOT, week)
case(City, in)
compound(York, New)
compound(City, York)
nmod(week, City)
punct(week, .)
root(ROOT, return)
case(England, through)
compound(England, New)
obl(return, England)
punct(return, ,)
advcl(return, stop)
case(visit, for)
det(visit, a)
obl(stop, visit)
case(Champlain, to)
compound(Champlain, Lake)
nmod(visit, Champlain)
advmod(take, where)
nsubj(take, you)
aux(take, can)
acl:relcl(visit, take)
det(ride, a)
compound(ride, boat)
obj(take, ride)
cc(go, and)
conj(take, go)
case(Park, to)
compound(Park, Ethan)
flat(Ethan, Allen)
obl(go, Park)
punct(return, .)
advmod(witness, there)
nsubj(witness, you)
aux(witness, will)
root(ROOT, witness)
det(view, a)
obj(witness, view)
nsubj(include, which)
acl:relcl(view, include)
det(Mts., the)
compound(Mts., Adirondack)
obj(include, Mts.)
cc(River, and)
det(River, the)
compound(River, Winooski)
conj(Mts., River)
punct(witness, .)
advmod(ready, now)
nsubj(ready, you)
cop(ready, be)
root(ROOT, ready)
case(tour, for)
det(tour, a)
compound(tour, whirlwind)
compound(tour, sightsee)
obl(ready, tour)
case(city, of)
nmod:poss(city, America)
case(America, 's)
advmod(exciting, most)
amod(city, exciting)
nmod(tour, city)
punct(ready, .)
det(skyline, the)
nsubj(few, skyline)
punct(bridge, ,)
det(bridge, the)
conj(skyline, bridge)
punct(Broadway, ,)
conj(bridge, Broadway)
punct(ferry, ,)
cc(ferry, and)
det(ferry, the)
compound(Island, Staten)
compound(ferry, Island)
conj(skyline, ferry)
cop(few, be)
advmod(few, only)
det(few, a)
root(ROOT, few)
case(spot, of)
det(spot, the)
nmod(few, spot)
mark(put, to)
acl(spot, put)
case(list, on)
nmod:poss(list, you)
punct(list, ``)
compound(list, must)
punct(list, '')
obl(put, list)
case(City, for)
compound(York, New)
compound(City, York)
nmod(list, City)
punct(few, .)
csubj(tip, photograph)
case(Northeast, in)
det(Northeast, the)
obl(photograph, Northeast)
det(tip, some)
root(ROOT, tip)
mark(shoot, for)
acl(tip, shoot)
case(locale, in)
compound(locale, Northeastern)
obl(shoot, locale)
punct(tip, :)
case(City, in)
compound(York, New)
compound(City, York)
obl(miss, City)
aux(miss, do)
advmod(miss, not)
root(ROOT, miss)
obj(miss, coverage)
case(Nations, of)
det(Nations, the)
compound(Nations, United)
nmod(coverage, Nations)
punct(miss, .)
det(building, these)
amod(building, strike)
punct(building, ,)
amod(building, modernistic)
nsubj(open, building)
case(River, on)
det(River, the)
compound(River, East)
nmod(building, River)
cop(open, be)
root(ROOT, open)
case(public, to)
det(public, the)
obl(open, public)
cc(available, and)
det(weekday, every)
obl:npmod(guide, weekday)
amod(tour, guide)
nsubj(available, tour)
cop(available, be)
conj(open, available)
punct(open, .)
nsubj:pass(take, picture)
aux(take, can)
aux:pass(take, be)
root(ROOT, take)
case(area, in)
det(area, the)
amod(area, public)
obl(take, area)
cc(tour, and)
case(tour, when)
case(tour, on)
conj(take, tour)
punct(take, .)
advmod(allow, however)
punct(allow, ,)
det(use, the)
nsubj:pass(allow, use)
case(tripods, of)
nmod(use, tripods)
aux:pass(allow, be)
advmod(allow, not)
root(ROOT, allow)
punct(allow, .)
nsubj:pass(make, photo)
case(room, of)
compound(room, Conference)
nmod(photo, room)
cc(Hall, and)
det(Hall, the)
compound(Assembly, General)
compound(Hall, Assembly)
conj(room, Hall)
aux(make, can)
aux:pass(make, be)
root(ROOT, make)
mark(use, when)
det(room, these)
nsubj:pass(use, room)
aux(use, be)
advmod(use, not)
aux:pass(use, be)
advcl(make, use)
case(meeting, for)
obl(use, meeting)
punct(make, .)
nsubj:pass(allow, Flash)
aux:pass(allow, be)
root(ROOT, allow)
punct(allow, ,)
xcomp(allow, subject)
case(restriction, to)
amod(restriction, above)
obl(subject, restriction)
punct(allow, .)
case(England, around)
compound(England, New)
obl(want, England)
punct(want, ,)
nsubj(want, you)
aux(want, will)
advmod(doubt, no)
advmod(want, doubt)
root(ROOT, want)
det(shot, a)
compound(shot, color)
obj(want, shot)
case(one, of)
nmod(shot, one)
case(lighthouse, of)
det(lighthouse, the)
amod(lighthouse, picturesque)
nmod(one, lighthouse)
punct(want, .)
cop(careful, be)
root(ROOT, careful)
advmod(careful, here)
advmod(overexpose, not)
mark(overexpose, to)
xcomp(careful, overexpose)
det(subject, this)
obj(overexpose, subject)
mark(bright, since)
nsubj(bright, they)
cop(bright, be)
advmod(bright, extremely)
advcl(overexpose, bright)
cc(reflect, and)
compound(reflect, light)
punct(reflect, -)
conj(bright, reflect)
punct(careful, .)
case(color, in)
obl(do, color)
punct(do, ,)
nsubj(do, 1/50th)
case(second, of)
det(second, a)
nmod(1/50th, second)
case(Af, between)
nmod(second, Af)
cc(Af, and)
conj(Af, Af)
aux(do, will)
root(ROOT, do)
case(sunlight, for)
amod(sunlight, bright)
punct(sunlight, ,)
amod(sunlight, frontal)
obl(do, sunlight)
punct(sunlight, .)
det(South, the)
obj(do, South)
det(States, the)
amod(States, southern)
compound(States, United)
appos(South, States)
punct(States, ,)
acl(States, extend)
case(Florida, from)
obl(extend, Florida)
case(east, in)
det(east, the)
obl(extend, east)
case(Texas, to)
nmod(east, Texas)
case(west, in)
det(west, the)
nmod(east, west)
punct(maintain, ,)
advmod(maintain, still)
conj(do, maintain)
nmod:poss(flavor, its)
amod(flavor, unique)
obj(maintain, flavor)
case(living, of)
amod(living, gracious)
nmod(flavor, living)
cc(elegance, and)
conj(living, historical)
conj(living, elegance)
punct(do, .)
nsubj(encompass, it)
root(ROOT, encompass)
case(area, in)
nmod:poss(area, its)
compound(area, expanse)
obl(encompass, area)
advmod(encourage, where)
det(beauty, the)
amod(beauty, natural)
nsubj(encourage, beauty)
acl:relcl(area, encourage)
det(vacation, a)
obj(encourage, vacation)
case(contemplation, of)
amod(contemplation, quiet)
nmod(vacation, contemplation)
punct(vacation, ,)
case(hand, on)
det(hand, the)
nummod(hand, one)
obl(encourage, hand)
punct(encourage, ,)
case(place, to)
obl(encourage, place)
advmod(provide, where)
nsubj:pass(provide, entertainment)
cc(spectacle, and)
conj(entertainment, spectacle)
case(sort, of)
det(sort, all)
nmod(entertainment, sort)
aux(provide, have)
aux:pass(provide, be)
acl:relcl(place, provide)
case(tourist, for)
det(tourist, the)
obl(provide, tourist)
case(camera, with)
obl(provide, camera)
punct(encompass, .)
case(interest, of)
amod(interest, special)
obl(battlefield, interest)
det(year, this)
compound(year, anniversary)
nmod:tmod(interest, year)
case(war, of)
det(war, the)
nmod(year, war)
case(state, between)
det(state, the)
nmod(war, state)
cop(battlefield, be)
det(battlefield, the)
amod(battlefield, many)
amod(war, civil)
compound(battlefield, war)
root(ROOT, battlefield)
advmod(catch, where)
punct(catch, ,)
amod(battlefield, likely)
mark(not, as)
advcl(likely, not)
punct(catch, ,)
nsubj(catch, you)
aux(catch, will)
acl:relcl(battlefield, catch)
det(re-enactment, some)
amod(re-enactment, memorial)
obj(catch, re-enactment)
punct(battlefield, .)
case(locale, among)
det(locale, the)
nmod(Shiloh, locale)
mark(visit, to)
acl(locale, visit)
cop(Shiloh, be)
root(ROOT, Shiloh)
punct(Tennessee, ,)
conj(Shiloh, Tennessee)
punct(Shiloh, ;)
punct(Shiloh, ;)
compound(Mountain, Lookout)
conj(Shiloh, Mountain)
punct(Tennessee, ,)
conj(Mountain, Tennessee)
punct(Shiloh, ;)
punct(Shiloh, ;)
conj(Shiloh, Vicksburg)
punct(Mississippi, ,)
conj(Vicksburg, Mississippi)
punct(Shiloh, ;)
punct(Richmond, ;)
conj(Shiloh, Richmond)
punct(Virginia, ,)
conj(Richmond, Virginia)
punct(Petersburg, ;)
punct(Petersburg, ;)
conj(Shiloh, Petersburg)
punct(Virginia, ,)
conj(Petersburg, Virginia)
punct(Fredericksburg, ,)
cc(Fredericksburg, and)
conj(Petersburg, Fredericksburg)
punct(Fredericksburg, ,)
appos(Fredericksburg, Virginia)
punct(provide, .)
nsubj(provide, Florida)
parataxis(Shiloh, provide)
amod(scene, tropical)
obj(provide, scene)
acl(scene, unequalled)
case(States, in)
det(States, the)
compound(States, United)
obl(unequalled, States)
punct(provide, .)
case(Gardens, at)
compound(Gardens, Cypress)
compound(bleacher, Gardens)
amod(bleacher, special)
nsubj:pass(set, bleacher)
aux:pass(set, be)
root(ROOT, set)
compound:prt(set, up)
case(photographer, for)
obl(set, photographer)
case(show, at)
compound(ski, water)
punct(ski, -)
compound(show, ski)
nmod(photographer, show)
cc(pose, and)
amod(model, lovely)
nsubj(pose, model)
conj(set, pose)
case(picture, for)
obl(pose, picture)
case(setting, in)
compound(setting, garden)
nmod(picture, setting)
punct(set, .)
compound(Springs, Silver)
nsubj(feature, Springs)
root(ROOT, feature)
compound(bottom, glass)
punct(bottom, -)
amod(ride, bottom)
compound(ride, boat)
obj(feature, ride)
cc(be, and)
case(Park, in)
compound(Park, everglade)
compound(Park, National)
obl(be, Park)
expl(be, there)
conj(feature, be)
nsubj(be, opportunity)
mark(photograph, to)
acl(opportunity, photograph)
amod(wildlife, rare)
obj(photograph, wildlife)
punct(feature, .)
compound(Beach, Miami)
nsubj(feature, Beach)
cc(surroundings, and)
conj(Beach, surroundings)
conj(feature, feature)
amod(row, fabulous)
punct(row, ``)
compound(row, hotel)
obj(feature, row)
punct(row, '')
punct(beach, ,)
obl:npmod(studd, palm)
punct(studd, -)
amod(beach, studd)
conj(row, beach)
cc(Seaquarium, plus)
det(Seaquarium, the)
compound(Seaquarium, Miami)
conj(beach, Seaquarium)
cc(Jungle, and)
compound(Jungle, Parrot)
conj(Seaquarium, Jungle)
punct(feature, .)
nsubj(city, one)
case(spot, of)
det(spot, the)
advmod(delightful, most)
amod(spot, delightful)
nmod(one, spot)
case(tour, in)
det(tour, a)
amod(tour, southern)
nmod(spot, tour)
cop(city, be)
det(city, the)
root(ROOT, city)
case(Orleans, of)
compound(Orleans, New)
nmod(city, Orleans)
punct(city, .)
det(building, the)
amod(building, famous)
amod(building, old)
amod(building, french)
cc(spanish, and)
conj(french, spanish)
nsubj(present, building)
case(balcony, with)
nmod:poss(balcony, they)
amod(balcony, elaborate)
amod(balcony, wring)
compound(balcony, iron)
nmod(building, balcony)
cc(street, and)
det(street, the)
amod(street, narrow)
conj(balcony, street)
case(Quarter, of)
det(Quarter, the)
compound(Quarter, Latin)
nmod(street, Quarter)
root(ROOT, present)
det(scene, a)
compound(scene, old)
compound(scene, World)
obj(present, scene)
punct(scene, .)
case(restoration, for)
obl(present, restoration)
case(life, of)
amod(life, early)
amod(life, american)
nmod(restoration, life)
det(place, the)
nsubj(Williamsburg, place)
mark(visit, to)
acl(place, visit)
cop(Williamsburg, be)
acl:relcl(life, Williamsburg)
punct(Jamestown, ,)
conj(Williamsburg, Jamestown)
cc(Yorktown, and)
conj(Williamsburg, Yorktown)
punct(Virginia, ,)
conj(Williamsburg, Virginia)
punct(Williamsburg, .)
det(sight, another)
compound(sight, Virginia)
conj(Williamsburg, sight)
cc(adventure, and)
det(adventure, a)
amod(adventure, photographic)
conj(sight, adventure)
cop(cavern, be)
det(cavern, the)
compound(cavern, Luray)
conj(Williamsburg, cavern)
punct(cavern, ,)
advcl(cavern, light)
case(photofloodlight, by)
obl(light, photofloodlight)
punct(present, .)
det(state, the)
amod(state, great)
nsubj(offer, state)
case(Texas, of)
nmod(state, Texas)
root(ROOT, offer)
amod(attraction, metropolitan)
obj(offer, attraction)
case(Park, such)
fixed(such, as)
det(Park, the)
compound(Park, Dallas)
compound(Park, fair)
nmod(attraction, Park)
case(art, with)
nmod:poss(art, its)
nmod(Park, art)
cc(museum, and)
amod(history, natural)
compound(museum, history)
conj(art, museum)
punct(offer, .)
case(contrast, in)
nmod(stretch, contrast)
cop(stretch, be)
det(stretch, the)
amod(stretch, vast)
amod(stretch, open)
root(ROOT, stretch)
case(country, of)
compound(country, ranch)
nmod(stretch, country)
cc(well, and)
compound(well, oil)
conj(country, well)
punct(stretch, .)
case(San, in)
obl(visit, San)
flat(San, Antonio)
root(ROOT, visit)
det(building, the)
amod(Alamo, famous)
obj(visit, Alamo)
cc(photograph, and)
compound(Century, photograph)
amod(Century, 18th)
compound(building, Century)
amod(building, spanish)
obj(visit, building)
cc(church, and)
conj(building, church)
punct(visit, .)
det(Mountains, the)
compound(Mountains, Great)
compound(Mountains, Smoky)
nsubj(area, Mountains)
cop(area, be)
det(area, another)
root(ROOT, area)
case(South, of)
det(South, the)
nmod(area, South)
advmod(worth, well)
acl:relcl(area, worth)
det(visit, a)
obj(worth, visit)
punct(area, .)
case(route, along)
det(route, the)
nummod(mile, 127)
punct(mile, -)
compound(route, mile)
root(ROOT, route)
case(National, through)
compound(Mountains, Great)
compound(Mountains, Smoky)
compound(National, Mountains)
nmod(route, National)
nsubj(photograph, Park)
nsubj(photograph, you)
aux(photograph, can)
root(ROOT, photograph)
det(peak, the)
compound(take, breath)
punct(take, -)
xcomp(photograph, take)
obj(take, peak)
punct(gorge, ,)
conj(peak, gorge)
cc(valley, and)
conj(peak, valley)
nsubj(come, which)
acl:relcl(peak, come)
case(view, into)
obl(come, view)
case(turn, at)
det(turn, every)
obl(come, turn)
punct(Gatlinburg, .)
appos(peak, Gatlinburg)
punct(Gatlinburg, ,)
appos(Gatlinburg, Tennessee)
punct(center, ,)
cop(center, be)
det(center, the)
acl:relcl(Gatlinburg, center)
case(area, of)
det(area, this)
nmod(center, area)
punct(center, .)
det(spot, another)
compound(spot, scenic)
nsubj(Chattanooga, spot)
case(Tennessee, in)
nmod(spot, Tennessee)
cop(Chattanooga, be)
parataxis(center, Chattanooga)
advmod(be, where)
det(Gardens, the)
compound(City, rock)
compound(Gardens, City)
nsubj:pass(miss, Gardens)
cop(Chattanooga, be)
advmod(miss, not)
mark(miss, to)
aux:pass(miss, be)
xcomp(be, miss)
punct(photograph, .)
amod(home, beautiful)
nsubj(trademark, home)
cc(garden, and)
conj(home, garden)
cop(trademark, be)
root(ROOT, trademark)
case(south, of)
det(south, the)
nmod(trademark, south)
cc(city, and)
conj(south, city)
advmod(note, particularly)
acl(south, note)
case(they, for)
obl(note, they)
cop(Charleston, be)
parataxis(trademark, Charleston)
punct(S.C., ,)
conj(Charleston, S.C.)
punct(Natchez, ,)
conj(Charleston, Natchez)
punct(Miss., ,)
conj(Charleston, Miss.)
punct(Savannah, ,)
cc(Savannah, and)
conj(Charleston, Savannah)
punct(Savannah, ,)
appos(Savannah, Ga.)
punct(trademark, .)
case(Charlottesville, at)
obl(shoot, Charlottesville)
punct(Charlottesville, ,)
nsubj(shoot, Va.)
punct(shoot, ,)
root(ROOT, shoot)
obj(shoot, Monticello)
cc(building, and)
det(building, the)
amod(building, beautiful)
conj(Monticello, building)
case(University, of)
det(University, the)
nmod(building, University)
punct(shoot, .)
advcl(shoot, picture)
det(Foliage, the)
compound(Foliage, south)
nsubj(subject, Foliage)
cop(subject, be)
det(subject, the)
amod(subject, outstanding)
compound(subject, photo)
ccomp(picture, subject)
case(many, in)
nmod(subject, many)
case(locale, of)
det(locale, the)
amod(locale, southern)
nmod(many, locale)
acl(locale, mention)
advmod(mention, above)
cc(tip, and)
det(tip, some)
amod(tip, specific)
conj(subject, tip)
mark(shoot, on)
advmod(shoot, how)
cc(where, and)
advmod(shoot, where)
mark(shoot, to)
acl(tip, shoot)
obj(shoot, it)
cop(order, be)
case(order, in)
obl(shoot, order)
punct(Chamber, .)
case(example, for)
nmod(Chamber, example)
punct(Chamber, ,)
det(Chamber, the)
nsubj(sponsor, Chamber)
case(commerce, of)
nmod(Chamber, commerce)
case(Gatlinburg, of)
nmod(commerce, Gatlinburg)
punct(Gatlinburg, ,)
appos(Gatlinburg, Tennessee)
punct(sponsor, ,)
acl(tip, sponsor)
amod(tour, special)
compound(tour, camera)
obj(sponsor, tour)
case(Mountains, into)
det(Mountains, the)
compound(Mountains, Great)
compound(Mountains, Smoky)
nmod(tour, Mountains)
mark(get, to)
advcl(sponsor, get)
obj(get, picture)
case(profusion, of)
det(profusion, the)
nmod(picture, profusion)
case(flower, of)
amod(flower, wild)
nmod(profusion, flower)
acl(flower, flourishing)
case(region, in)
det(region, these)
amod(region, wood)
obl(flourishing, region)
punct(shoot, .)
compound(problem, exposure)
nsubj(occur, problem)
aux(occur, may)
root(ROOT, occur)
case(area, in)
det(area, these)
compound(area, forest)
obl(occur, area)
advmod(result, where)
amod(result, uneven)
compound(result, lighting)
acl:relcl(area, result)
case(shaft, from)
nmod(result, shaft)
case(sunlight, of)
nmod(shaft, sunlight)
acl(shaft, filter)
case(branch, through)
det(branch, the)
amod(branch, overhead)
obl(filter, branch)
punct(occur, .)
amod(solution, best)
nsubj(be, solution)
root(ROOT, be)
mark(find, to)
ccomp(be, find)
det(area, a)
obj(find, area)
nsubj(sunlight, that)
cop(sunlight, be)
advmod(sunlight, predominantly)
acl:relcl(area, sunlight)
cc(shade, or)
conj(sunlight, shade)
punct(be, .)
case(instance, in)
det(instance, any)
obl(determine, instance)
punct(determine, ,)
nsubj(determine, you)
aux(determine, should)
root(ROOT, determine)
det(exposure, the)
obj(determine, exposure)
case(type, accord)
fixed(accord, to)
det(type, the)
nmod(exposure, type)
case(light, of)
nmod(type, light)
nsubj(fall, which)
acl:relcl(type, fall)
case(most, on)
obl(fall, most)
case(area, of)
det(area, the)
compound(area, subject)
nmod(most, area)
punct(determine, .)
parataxis(determine, try)
det(closeup, some)
obj(try, closeup)
case(blossom, on)
amod(blossom, southern)
nmod(closeup, blossom)
mark(provide, to)
advcl(try, provide)
det(contrast, a)
amod(contrast, welcome)
obj(provide, contrast)
case(scenic, with)
det(scenic, the)
amod(scenic, many)
amod(view, long)
punct(view, -)
compound(scenic, view)
nmod(contrast, scenic)
nsubj(make, you)
aux(make, will)
aux(make, be)
acl:relcl(scenic, make)
punct(determine, .)
mark(shoot, for)
advcl(make, shoot)
det(interior, the)
obj(shoot, interior)
case(mansion, of)
det(mansion, the)
amod(mansion, famous)
amod(mansion, ante-bellum)
amod(mansion, southern)
nmod(interior, mansion)
root(ROOT, make)
xcomp(make, sure)
nmod:poss(equipment, you)
nsubj(include, equipment)
ccomp(sure, include)
det(tripod, a)
obj(include, tripod)
punct(make, .)
amod(daylight, enough)
nsubj(available, daylight)
cop(available, be)
advmod(available, usually)
root(ROOT, available)
case(window, from)
det(window, the)
obl(available, window)
punct(use, ,)
cc(use, but)
mark(synchronize, if)
nsubj(synchronize, you)
aux(synchronize, have)
advcl(use, synchronize)
obj(synchronize, flash)
punct(use, --)
parataxis(available, use)
obj(use, it)
punct(use, .)
case(subject, for)
det(subject, some)
amod(subject, unusual)
amod(subject, photographic)
obl(use, subject)
punct(try, ,)
mark(take, if)
nmod:poss(vacation, you)
nsubj(take, vacation)
advcl(try, take)
obj(take, you)
advmod(take, nearby)
punct(try, ,)
parataxis(available, try)
det(event, these)
obj(try, event)
punct(try, :)
det(race, the)
nummod(mile, 600)
punct(mile, -)
compound(race, mile)
compound(race, auto)
appos(event, race)
case(Charlotte, in)
nmod(race, Charlotte)
punct(Charlotte, ,)
appos(Charlotte, N.C.)
punct(Charlotte, ,)
punct(race, ,)
case(May, on)
nmod(Charlotte, May)
nummod(May, 27)
punct(race, ;)
punct(Festival, ;)
det(Festival, the)
compound(Festival, Florida)
compound(Festival, folk)
appos(race, Festival)
punct(Festival, ,)
compound(Springs, White)
appos(Festival, Springs)
punct(Springs, ,)
appos(Festival, May)
nummod(May, 5)
case(7, -)
nmod(5, 7)
punct(Festival, ;)
punct(Festival, ;)
acl(Festival, sing)
case(Mountain, on)
det(Mountain, the)
obl(sing, Mountain)
case(Linville, in)
obl(sing, Linville)
punct(Linville, ,)
compound(Carolina, North)
appos(Linville, Carolina)
punct(Linville, ,)
case(June, on)
obl(sing, June)
nummod(June, 25)
punct(available, .)
compound(action, peak)
compound(photography, action)
nsubj(goal, photography)
cop(goal, be)
nmod:poss(goal, you)
root(ROOT, goal)
case(Seaquarium, at)
nmod:poss(Seaquarium, Miami)
case(Miami, 's)
nmod(goal, Seaquarium)
cc(event, and)
det(event, the)
compound(Gardens, Cypress)
compound(event, Gardens)
compound(event, watersking)
conj(Seaquarium, event)
punct(goal, .)
det(Midwest, the)
nsubj(day, Midwest)
det(start, a)
amod(start, pleasant)
nsubj(day, start)
case(vacation, to)
nmod:poss(vacation, you)
amod(vacation, midwestern)
nmod(start, vacation)
cop(day, be)
det(day, a)
amod(day, few)
root(ROOT, day)
acl(day, spend)
case(Chicago, in)
amod(Chicago, cosmopolitan)
obl(spend, Chicago)
punct(day, .)
compound(Michigan, Lake)
nsubj(offer, Michigan)
parataxis(day, offer)
obj(offer, swim)
cc(picture, and)
conj(swim, picture)
nsubj(combine, which)
acl:relcl(swim, combine)
obj(combine, cityscape)
case(beach, with)
obl(combine, beach)
punct(day, . )
det(visit, a)
nsubj(unfold, visit)
case(museum, to)
nmod:poss(museum, Chicago)
case(Chicago, 's)
nmod(visit, museum)
cc(stroll, and)
det(stroll, a)
conj(visit, stroll)
case(Avenue, around)
nmod(stroll, broad)
compound(Avenue, Michigan)
nmod(stroll, Avenue)
aux(unfold, will)
root(ROOT, unfold)
amod(subject, many)
amod(subject, photogenic)
obj(unfold, subject)
case(photographer, to)
det(photographer, the)
compound(photographer, alert)
nmod(subject, photographer)
punct(unfold, .)
compound(dell, Wisconsin)
nsubj(overgrown, dell)
punct(dell, ,)
advmod(overgrown, where)
advmod(scenic, fantastically)
amod(rock, scenic)
appos(dell, rock)
acl(rock, carve)
case(River, by)
det(River, the)
compound(River, Wisconsin)
obl(carve, River)
cop(overgrown, be)
root(ROOT, overgrown)
case(fear, with)
obl(overgrown, fear)
cc(foliage, and)
amod(foliage, other)
conj(fear, foliage)
punct(rate, ,)
conj(overgrown, rate)
det(stopover, a)
obj(rate, stopover)
mark(travel, when)
advcl(rate, travel)
case(Chicago, from)
obl(travel, Chicago)
punct(overgrown, .)
det(farmland, the)
nsubj(stretch, farmland)
acl(farmland, form)
det(heart, the)
obj(form, heart)
case(America, of)
nmod(heart, America)
root(ROOT, stretch)
compound:prt(stretch, out)
case(Midwest, across)
det(Midwest, the)
obl(stretch, Midwest)
case(Chicago, from)
obl(stretch, Chicago)
punct(stretch, .)
case(Dakota, in)
compound(Dakota, North)
obl(challenge, Dakota)
det(badland, the)
advmod(beautiful, strangely)
amod(badland, beautiful)
nsubj(challenge, badland)
aux(challenge, will)
root(ROOT, challenge)
obj(challenge, you)
mark(translate, to)
xcomp(challenge, translate)
nmod:poss(wonder, its)
obj(translate, wonder)
case(film, on)
case(film, to)
obl(translate, film)
punct(translate, .)
mark(here, while)
advcl(visit, here)
punct(visit, ,)
conj(translate, visit)
compound(Park, Theodore)
flat(Theodore, Roosevelt)
compound(Park, National)
obj(visit, Park)
case(scenery, for)
nmod:poss(scenery, its)
amod(scenery, spectacular)
obl(visit, scenery)
punct(spot, .)
det(spot, another)
parataxis(challenge, spot)
case(name, with)
det(name, a)
obl:npmod(provoke, image)
punct(provoke, -)
amod(name, provoke)
nmod(spot, name)
cop(hill, be)
det(hill, the)
compound(hill, Black)
acl:relcl(spot, hill)
advmod(visit, where)
nsubj(visit, you)
aux(visit, can)
acl:relcl(hill, visit)
det(town, the)
amod(town, old)
compound(town, frontier)
compound(town, mining)
obj(visit, town)
case(deadwood, of)
nmod(town, deadwood)
punct(challenge, .)
det(play, the)
compound(hill, Black)
compound(play, hill)
compound(play, passion)
nsubj:pass(produce, play)
aux:pass(produce, be)
root(ROOT, produce)
det(summer, every)
obl:tmod(produce, summer)
cc(pageant, and)
cop(pageant, be)
det(pageant, a)
conj(produce, pageant)
amod(pageant, worth)
xcomp(worth, see)
cc(shoot, and)
conj(see, shoot)
punct(produce, .)
advmod(want, of)
fixed(of, course)
punct(want, ,)
mark(vicinity, while)
case(vicinity, in)
det(vicinity, this)
obl(want, vicinity)
nsubj(want, you)
aux(want, will)
advmod(want, not)
root(ROOT, want)
mark(miss, to)
xcomp(want, miss)
det(visit, a)
obj(miss, visit)
case(memorial, to)
compound(memorial, Mount)
compound(memorial, Rushmore)
compound(memorial, National)
nmod(visit, memorial)
advmod(sculpture, where)
case(side, on)
det(side, the)
obl(sculpture, side)
case(mountain, of)
det(mountain, a)
nmod(side, mountain)
cop(sculpture, be)
det(sculpture, the)
amod(sculpture, famous)
acl:relcl(visit, sculpture)
case(president, of)
nmod(sculpture, president)
flat(president, Washington)
punct(Lincoln, ,)
conj(Washington, Lincoln)
punct(Jefferson, ,)
conj(Washington, Jefferson)
cc(Theodore, and)
conj(Washington, Theodore)
flat(Theodore, Roosevelt)
punct(want, .)
case(Missouri, in)
obl(glance, Missouri)
punct(include, ()
obj(include, which)
nsubj(include, we)
aux(include, be)
acl:relcl(Missouri, include)
case(region, in)
nmod:poss(region, we)
amod(region, general)
compound(region, Midwest)
obl(include, region)
punct(include, ))
nsubj(glance, you)
aux(glance, can)
root(ROOT, glance)
case(birthplace, into)
nmod:poss(birthplace, Mark)
flat(Mark, Twain)
case(Mark, 's)
obl(glance, birthplace)
case(Hannibal, at)
nmod(birthplace, Hannibal)
punct(see, ,)
conj(glance, see)
det(landmark, the)
obj(see, landmark)
case(life, of)
nmod:poss(life, he)
nmod(landmark, life)
cc(writings, and)
conj(life, writings)
cc(visualize, and)
conj(see, visualize)
mark(hatch, where)
nsubj(hatch, huck)
flat(huck, Finn)
advcl(visualize, hatch)
nmod:poss(mischief, he)
amod(mischief, boyish)
obj(hatch, mischief)
punct(glance, .)
advmod(be, similarly)
case(Illinois, in)
obl(be, Illinois)
expl(be, there)
root(ROOT, be)
compound(country, Lincoln)
nsubj(be, country)
mark(see, to)
aux:pass(see, be)
advcl(be, see)
punct(see, --)
nmod:poss(tomb, he)
nsubj(vacationland, tomb)
cc(landmark, and)
amod(landmark, other)
conj(tomb, landmark)
punct(tomb, .)
appos(tomb, Minnesota)
punct(land, ,)
amod(land, fabl)
conj(tomb, land)
case(water, of)
nmod(land, water)
punct(vacationland, ,)
cop(vacationland, be)
case(itself, in)
obl(vacationland, itself)
punct(vacationland, ,)
amod(vacationland, ideal)
parataxis(be, vacationland)
punct(vacationland, ,)
advcl(vacationland, have)
case(border, within)
nmod:poss(border, its)
obl(have, border)
nummod(lake, 10,000)
obl(have, lake)
punct(be, !)
punct(be, !)
compound(State, Itasca)
compound(Park, State)
root(ROOT, Park)
punct(Park, ,)
advmod(Mississippi, where)
det(Mississippi, the)
appos(Park, Mississippi)
nsubj(begin, River)
root(ROOT, begin)
punct(begin, ,)
cop(one, be)
nsubj(recall, one)
case(spot, of)
det(spot, the)
amod(spot, outstanding)
compound(spot, tourist)
nmod(one, spot)
case(Minnesota, in)
nmod(spot, Minnesota)
punct(begin, .)
nsubj(recall, Mementoes)
case(West, of)
det(West, the)
compound(West, old)
nmod(Mementoes, West)
ccomp(begin, recall)
det(day, the)
obj(recall, day)
case(Wyatt, of)
nmod(day, Wyatt)
flat(Wyatt, Earp)
case(City, in)
compound(City, Dodge)
nmod(day, City)
punct(City, ,)
appos(City, Nebraska)
punct(City, ,)
advmod(add, where)
amod(day, present)
punct(day, -)
compound(cowboy, day)
nsubj(add, cowboy)
acl:relcl(City, add)
det(note, a)
amod(note, colorful)
amod(interest, human)
compound(note, interest)
obj(add, note)
case(shooting, to)
nmod:poss(shooting, you)
compound(shooting, vacation)
nmod(note, shooting)
punct(begin, .)
case(interest, of)
amod(interest, current)
nmod(Abilene, interest)
cop(Abilene, be)
root(ROOT, Abilene)
punct(Kansas, ,)
conj(Abilene, Kansas)
punct(Abilene, ,)
det(birthplace, the)
conj(Abilene, birthplace)
case(ex-president, of)
nmod(birthplace, ex-president)
flat(ex-president, Eisenhower)
punct(Abilene, .)
expl(be, there)
root(ROOT, be)
det(museum, a)
nsubj(be, museum)
advmod(museum, here)
cc(town, and)
advmod(old, also)
amod(town, old)
compound(town, Abilene)
conj(museum, town)
punct(town, ,)
det(reconstruction, a)
conj(museum, reconstruction)
case(boomtown, of)
det(boomtown, the)
compound(boomtown, cattle)
nmod(reconstruction, boomtown)
case(70', of)
det(70', the)
nmod(boomtown, 70')
cc(80', and)
conj(70', 80')
punct(be, .)
case(area, for)
det(area, a)
compound(area, resort)
obl(place, area)
punct(place, ,)
compound(Island, Mackinack)
nsubj(place, Island)
punct(Island, ,)
appos(Island, Michigan)
punct(place, ,)
cop(place, be)
det(place, the)
root(ROOT, place)
mark(visit, to)
acl(place, visit)
punct(place, .)
nsubj(relive, it)
advmod(relive, truly)
root(ROOT, relive)
det(age, another)
obj(relive, age)
case(inhabitant, for)
det(inhabitant, the)
nmod(age, inhabitant)
ccomp(relive, use)
obj(use, carriage)
cc(auto, rather)
fixed(rather, than)
conj(carriage, auto)
cc(leave, and)
amod(fort, old)
amod(fort, british)
cc(french, and)
conj(british, french)
nsubj:pass(leave, fort)
aux:pass(leave, be)
conj(use, leave)
xcomp(leave, intact)
case(tourist, for)
obl(leave, tourist)
mark(visit, to)
acl(tourist, visit)
cc(record, and)
conj(visit, record)
punct(relive, .)
nsubj(add, picture)
case(scene, of)
det(scene, the)
compound(night, Midwest)
compound(scene, night)
nmod(picture, scene)
aux(add, will)
root(ROOT, add)
det(touch, a)
amod(touch, exciting)
obj(add, touch)
case(travelogue, to)
nmod:poss(travelogue, you)
compound(travelogue, vacation)
nmod(touch, travelogue)
cc(place, and)
det(place, what)
amod(place, better)
conj(touch, place)
mark(take, to)
acl(place, take)
obj(take, they)
advmod(Drive, then)
case(Drive, along)
nmod:poss(Drive, Chicago)
case(Chicago, 's)
compound(shore, Lake)
compound(Drive, shore)
obl(take, Drive)
punct(add, ?)
punct(add, ?)
advmod(sunset, just)
case(sunset, after)
obl(time, sunset)
cop(time, be)
det(time, a)
amod(time, good)
root(ROOT, time)
mark(record, to)
csubj(time, record)
det(light, the)
compound(light, city)
obj(record, light)
case(color, in)
obl(record, color)
mark(get, since)
nsubj(get, you)
advcl(record, get)
det(light, a)
punct(in, ``)
compound(light, fill)
punct(in, -)
compound(light, in)
punct(in, '')
obj(get, light)
case(sky, from)
det(sky, the)
nmod(light, sky)
punct(memo, .)
det(memo, another)
parataxis(time, memo)
case(sightseer, for)
nmod(memo, sightseer)
punct(memo, :)
parataxis(memo, bring)
nmod:poss(camera, you)
obj(bring, camera)
advmod(bring, along)
case(museum, to)
obl(bring, museum)
punct(memo, .)
nsubj(add, photo)
case(diorama, of)
amod(diorama, historic)
nmod(photo, diorama)
case(area, of)
det(area, the)
nmod(diorama, area)
nsubj(visit, you)
acl:relcl(area, visit)
aux(add, will)
root(ROOT, add)
obj(add, depth)
cc(background, and)
conj(depth, background)
case(story, to)
nmod:poss(story, you)
compound(photo, vacation)
compound(story, photo)
obl(add, story)
punct(add, .)
advmod(sure, again)
punct(sure, ,)
cop(sure, be)
root(ROOT, sure)
nmod:poss(tripod, you)
nsubj(handy, tripod)
cop(handy, be)
ccomp(sure, handy)
case(exposure, for)
det(exposure, those)
advmod(necessary, sometimes)
punct(necessary, -)
amod(exposure, necessary)
compound(exposure, time)
obl(handy, exposure)
punct(sure, .)
amod(event, special)
nsubj(include, event)
cc(date, and)
nmod:poss(date, they)
conj(event, date)
nsubj(make, which)
aux(make, will)
acl:relcl(event, make)
amod(shooting, interesting)
obj(make, shooting)
case(area, in)
det(area, the)
compound(area, Midwest)
obl(make, area)
punct(include, ,)
root(ROOT, include)
obj(include, the)
amod(the, follow)
punct(include, : )
det(re-enactment, a)
root(ROOT, re-enactment)
case(Battle, of)
det(Battle, the)
nmod(re-enactment, Battle)
case(Lexington, of)
nmod(Battle, Lexington)
punct(Lexington, ,)
appos(Lexington, May)
nummod(May, 18th)
case(Lexington, at)
nmod(re-enactment, Lexington)
punct(Lexington, ,)
appos(Lexington, Missouri)
punct(Lexington, ;)
punct(re-enactment, ;)
det(race, the)
obl:npmod(renowned, world)
punct(renowned, -)
amod(race, renowned)
nummod(mile, 500)
punct(mile, -)
compound(race, mile)
compound(race, auto)
appos(re-enactment, race)
case(Indianapolis, at)
nmod(race, Indianapolis)
punct(Indiana, ,)
conj(Indianapolis, Indiana)
punct(festival, ,)
cc(festival, plus)
det(festival, a)
conj(race, festival)
case(May, from)
nmod(festival, May)
nummod(May, 27)
case(30, -)
nmod(May, 30)
punct(re-enactment, ;)
punct(re-enactment, ;)
punct(re-enactment, ``)
nsubj(offer, Song)
case(Hiawatha, of)
nmod(Song, Hiawatha)
punct(Song, '')
punct(Song, ,)
case(Elgin, in)
nmod(Song, Elgin)
punct(Elgin, ,)
appos(Elgin, Illinois)
punct(Elgin, ,)
case(June, from)
obl(offer, June)
nummod(June, 20)
case(24th, to)
nmod(June, 24th)
punct(offer, .)
nsubj(offer, Michigan)
root(ROOT, offer)
det(Festival, the)
amod(Festival, lovely)
compound(Festival, Tulip)
obj(offer, Festival)
case(Holland, in)
nmod(Festival, Holland)
punct(Holland, ,)
appos(Holland, Michigan)
punct(Holland, ,)
appos(Holland, May)
nummod(May, 12)
case(14, -)
nmod(May, 14)
punct(Festival, ;)
punct(open, ;)
det(open, the)
compound(open, USGA)
appos(Festival, open)
case(Birmingham, in)
nmod(open, Birmingham)
case(June, from)
nmod(open, June)
nummod(June, 15)
case(17, -)
nmod(15, 17)
punct(Festival, ;)
punct(Festival, ;)
cc(Festival, and)
det(Festival, the)
compound(freedom, International)
compound(Festival, freedom)
conj(open, Festival)
case(Detroit, in)
nmod(Festival, Detroit)
punct(June, ,)
appos(Detroit, June)
nummod(June, 29)
case(July, through)
nmod(Festival, July)
nummod(July, 4)
punct(July, .)
case(vacationer, for)
amod(vacationer, early)
obl(Derby, vacationer)
expl(Derby, there)
cop(Derby, be)
det(Derby, the)
compound(fill, fun-)
amod(Derby, fill)
compound(Derby, fishing)
acl:relcl(Festival, Derby)
case(Springs, in)
compound(Springs, Hot)
nmod(Derby, Springs)
punct(Arkansas, ,)
list(Springs, Arkansas)
punct(April, ,)
list(Springs, April)
nummod(April, 19)
case(23, -)
nmod(19, 23)
punct(Festival, ,)
cc(Festival, and)
det(Festival, the)
compound(Festival, Arkansas)
compound(Festival, Band)
conj(Springs, Festival)
case(Springs, in)
compound(Springs, Hot)
nmod(Festival, Springs)
punct(Springs, ,)
appos(Festival, April)
nummod(April, 20)
case(22, -)
nmod(20, 22)
punct(offer, .)
det(West, the)
nsubj(synonymous, West)
det(vacation, a)
amod(vacation, western)
nsubj(synonymous, vacation)
cop(synonymous, be)
advmod(synonymous, practically)
root(ROOT, synonymous)
case(visit, with)
det(visit, a)
obl(synonymous, visit)
case(one, to)
case(least, at)
nmod(one, least)
nmod(visit, one)
case(park, of)
det(park, the)
amod(park, magnificent)
amod(park, national)
nmod(one, park)
case(area, in)
det(area, this)
nmod(park, area)
punct(synonymous, . )
det(tour, a)
nsubj(possible, tour)
case(several, of)
nmod(tour, several)
case(they, of)
nmod(several, they)
cop(possible, be)
root(ROOT, possible)
case(vacation, in)
det(vacation, a)
nummod(week, two)
punct(week, -)
compound(vacation, week)
obl(possible, vacation)
mark(reward, while)
det(stay, a)
nsubj(reward, stay)
case(one, at)
advmod(one, just)
nmod(stay, one)
case(spot, of)
det(spot, these)
amod(beauty, natural)
compound(spot, beauty)
nmod(one, spot)
aux(reward, can)
cop(reward, be)
case(reward, of)
amod(reward, equal)
advcl(possible, reward)
punct(possible, .)
case(California, in)
obl(locate, California)
aux:pass(locate, be)
root(ROOT, locate)
obj(locate, one)
case(popular, of)
det(popular, the)
advmod(popular, most)
nmod(one, popular)
case(park, of)
det(park, the)
amod(park, national)
obl(popular, park)
punct(park, --)
appos(park, Yosemite)
punct(Yosemite, .)
case(feature, among)
nmod:poss(feature, its)
advmod(spectacular, most)
amod(feature, spectacular)
nsubj(falls, feature)
cop(falls, be)
nmod:poss(falls, its)
parataxis(locate, falls)
punct(falls, ,)
det(highest, the)
nsubj(falls, highest)
cop(Yosemite, be)
compound(Yosemite, upper)
advcl(highest, Yosemite)
nsubj(drop, which)
acl:relcl(Yosemite, drop)
nummod(foot, 2,425)
obj(drop, foot)
punct(locate, .)
det(Grove, the)
compound(Grove, Sequoia)
nsubj(present, Grove)
root(ROOT, present)
det(aspect, another)
amod(aspect, unique)
obj(present, aspect)
case(Yosemite, of)
nmod(aspect, Yosemite)
punct(present, ,)
case(tree, for)
det(tree, these)
amod(tree, ancient)
compound(tree, giant)
nsubj(sight, tree)
cop(sight, be)
det(sight, a)
conj(present, sight)
advmod(forget, never)
mark(forget, to)
aux:pass(forget, be)
acl(sight, forget)
punct(present, .)
case(area, in)
det(area, the)
compound(area, Utah)
obl(be, area)
cop(be, be)
compound(Park, Zion)
compound(Park, National)
nsubj(be, Park)
cc(Park, and)
compound(Park, Bryce)
compound(Park, Canyon)
compound(Park, National)
conj(Park, Park)
punct(Park, .)
amod(color, fantastic)
nsubj(be, color)
root(ROOT, be)
mark(see, to)
aux:pass(see, be)
ccomp(be, see)
case(formation, in)
det(formation, the)
amod(formation, fanciful)
obl(see, formation)
case(rock, of)
amod(rock, erode)
nmod(formation, rock)
nsubj(loom, which)
acl:relcl(rock, loom)
case(country, out)
case(country, of)
det(country, the)
amod(country, semiarid)
obl(loom, country)
case(park, in)
det(park, both)
obl(loom, park)
punct(be, .)
nmod:poss(Canyon, Colorado)
case(Colorado, 's)
compound(Canyon, Grand)
nsubj(highpoint, Canyon)
punct(Canyon, ,)
advmod(landmark, probably)
det(landmark, the)
advmod(famous, most)
amod(landmark, famous)
appos(Canyon, landmark)
case(States, of)
det(States, the)
compound(States, United)
nmod(landmark, States)
punct(highpoint, ,)
aux(highpoint, can)
cop(highpoint, be)
det(highpoint, the)
root(ROOT, highpoint)
case(vacation, of)
nmod:poss(vacation, you)
amod(vacation, western)
nmod(highpoint, vacation)
punct(highpoint, .)
advcl(one, Built)
case(hill, upon)
nummod(hill, seven)
obl(Built, hill)
punct(one, ,)
nsubj(one, Istanbul)
punct(Istanbul, ,)
case(Rome, like)
nmod(Istanbul, Rome)
punct(one, ,)
cop(one, be)
root(ROOT, one)
case(city, of)
det(city, the)
advmod(ancient, most)
amod(city, ancient)
nmod(one, city)
case(world, in)
det(world, the)
nmod(city, world)
punct(city, ,)
acl(city, fill)
case(splendor, with)
obl(fill, splendor)
cc(contrast, and)
conj(splendor, contrast)
punct(one, .)
nsubj(place, it)
cop(place, be)
det(place, a)
amod(place, exotic)
root(ROOT, place)
punct(place, ,)
advmod(different, so)
parataxis(place, different)
case(ordinary, from)
det(ordinary, the)
obl(different, ordinary)
mark(likely, that)
det(tourist, the)
amod(tourist, casual)
nsubj(likely, tourist)
cop(likely, be)
ccomp(ordinary, likely)
mark(see, to)
xcomp(likely, see)
advmod(only, at)
advmod(only, first)
cc:preconj(contrast, only)
det(contrast, the)
obj(see, contrast)
cc(ugliness, and)
det(ugliness, the)
conj(contrast, ugliness)
case(street, of)
amod(street, narrow)
nmod(ugliness, street)
acl(ugliness, line)
case(house, with)
amod(house, haphazard)
obl(line, house)
punct(place, .)
case(moment, at)
det(moment, the)
obl(pull, moment)
punct(pull, ,)
nsubj:pass(pull, many)
case(these, of)
nmod(many, these)
aux(pull, be)
aux:pass(pull, be)
root(ROOT, pull)
compound:prt(pull, down)
punct(pull, .)
amod(block, Whole)
nsubj(disappearing, block)
aux(disappearing, be)
parataxis(pull, disappearing)
cc(schedule, and)
nsubj:pass(schedule, more)
aux:pass(schedule, be)
conj(disappearing, schedule)
mark(vanish, to)
xcomp(schedule, vanish)
mark(make, to)
advcl(vanish, make)
obj(make, room)
case(boulevard, for)
amod(boulevard, wide)
nmod(room, boulevard)
nsubj(show, that)
aux(show, will)
acl:relcl(boulevard, show)
compound:prt(show, off)
nmod:poss(treasure, its)
obj(show, treasure)
case(advantage, to)
amod(advantage, better)
obl(show, advantage)
punct(advantage, --)
det(dome, the)
amod(dome, great)
appos(advantage, dome)
cc(spire, and)
amod(spire, graceful)
conj(dome, spire)
case(mosque, of)
nmod:poss(mosque, its)
nmod(spire, mosque)
punct(panorama, ,)
det(panorama, the)
conj(dome, panorama)
case(bosphorus, of)
det(bosphorus, the)
nmod(panorama, bosphorus)
cc(horn, and)
det(horn, the)
compound(horn, golden)
conj(bosphorus, horn)
punct(panorama, .)
advmod(finish, even)
mark(finish, when)
nsubj:pass(finish, they)
aux:pass(finish, be)
advcl(remain, finish)
punct(remain, ,)
advmod(remain, however)
punct(remain, ,)
det(contrast, the)
nsubj(remain, contrast)
aux(remain, will)
conj(pull, remain)
punct(remain, ,)
case(Istanbul, for)
nsubj(city, Istanbul)
cop(city, be)
det(city, the)
amod(city, only)
ccomp(remain, city)
case(world, in)
det(world, the)
nmod(city, world)
nsubj:pass(build, that)
aux:pass(build, be)
acl:relcl(world, build)
case(continent, upon)
nummod(continent, two)
obl(build, continent)
punct(pull, .)
case(year, for)
advmod(3,000, almost)
nummod(year, 3,000)
obl(rub, year)
nsubj(rub, Europe)
cc(Asia, and)
conj(Europe, Asia)
aux(rub, have)
root(ROOT, rub)
obj(rub, shoulder)
case(street, in)
nmod:poss(street, its)
nmod(shoulder, street)
punct(rub, .)
acl(shoulder, found)
case(Century, in)
det(Century, the)
amod(Century, Ninth)
obl(found, Century)
obl:tmod(call, B.C.)
nsubj:pass(call, it)
aux:pass(call, be)
advcl(found, call)
obj(call, Byzantium)
nummod(year, 200)
obl:npmod(later, year)
advmod(call, later)
mark(call, when)
nsubj:pass(call, Byzas)
punct(ruler, ,)
appos(Byzas, ruler)
case(Megarians, of)
det(Megarians, the)
nmod(ruler, Megarians)
punct(expand, ,)
acl:relcl(Byzas, expand)
det(settlement, the)
obj(expand, settlement)
cc(name, and)
conj(expand, name)
obj(name, it)
case(himself, after)
obl(name, himself)
punct(name, .)
advmod(thousand, about)
det(year, a)
nummod(year, thousand)
nmod:npmod(that, year)
case(that, after)
obl(name, that)
punct(that, ,)
mark(divide, when)
det(Empire, the)
compound(Empire, Roman)
nsubj:pass(divide, Empire)
aux:pass(divide, be)
advcl(become, divide)
punct(become, ,)
nsubj(become, it)
conj(call, become)
xcomp(become, capital)
case(section, of)
det(section, the)
amod(section, eastern)
nmod(capital, section)
punct(capital, .)
case(May, on)
obl(change, May)
nummod(May, 11,330)
punct(change, ,)
nsubj:pass(change, A.D.)
punct(change, ,)
punct(change, ,)
nmod:poss(name, its)
nsubj:pass(change, name)
aux:pass(change, be)
root(ROOT, change)
advmod(change, again)
punct(change, ,)
det(time, this)
obl:tmod(change, time)
case(constantinople, to)
nmod(time, constantinople)
case(emperor, after)
nmod:poss(emperor, its)
obl(change, emperor)
punct(emperor, ,)
appos(emperor, Constantine)
punct(change, .)
case(1453, in)
obl(shift, 1453)
mark(fall, when)
det(vestige, the)
amod(vestige, last)
nsubj(fall, vestige)
case(power, of)
amod(power, ancient)
amod(power, Roman)
nmod(vestige, power)
advcl(shift, fall)
case(turk, to)
det(turk, the)
obl(fall, turk)
punct(shift, ,)
det(city, the)
nsubj(shift, city)
advmod(shift, officially)
root(ROOT, shift)
obj(shift, religion)
punct(shift, --)
mark(continue, although)
det(Patriarch, the)
nsubj(continue, Patriarch)
punct(Pope, ,)
cc(Pope, or)
conj(Patriarch, Pope)
punct(Patriarch, ,)
case(Church, of)
det(Church, the)
compound(Church, orthodox)
nmod(Patriarch, Church)
advcl(shift, continue)
mark(live, to)
xcomp(continue, live)
advmod(live, there)
punct(do, ,)
cc(do, and)
advmod(do, still)
conj(continue, do)
punct(capital, --)
cc(become, and)
conj(do, become)
det(capital, the)
xcomp(become, capital)
case(Empire, of)
det(Empire, the)
compound(Empire, Ottoman)
nmod(capital, Empire)
punct(capital, .)
mark(break, when)
nsubj:pass(break, that)
aux:pass(break, be)
advcl(capital, break)
compound:prt(break, up)
case(War, after)
det(War, the)
compound(War, First)
compound(War, World)
obl(break, War)
punct(change, ,)
nsubj:pass(change, it)
aux:pass(change, be)
nsubj:pass(change, name)
aux:pass(change, be)
conj(break, change)
advmod(more, once)
advmod(change, more)
punct(shift, .)
nsubj(museum, Rich)
case(art, in)
amod(art, christian)
cc(moslem, and)
conj(christian, moslem)
nmod(Rich, art)
punct(museum, ,)
nsubj(museum, Istanbul)
cop(museum, be)
obl:tmod(museum, today)
det(museum, a)
amod(museum, fascinating)
root(ROOT, museum)
case(East, of)
nmod(museum, East)
cc(West, and)
conj(East, West)
nsubj(become, that)
advmod(become, recently)
acl:relcl(museum, become)
det(resort, a)
compound(resort, seaside)
xcomp(become, resort)
cc(development, as)
fixed(as, well)
fixed(as, with)
det(development, the)
conj(resort, development)
case(beach, of)
amod(beach, new)
nmod(development, beach)
case(bosphorus, on)
det(bosphorus, the)
nmod(beach, bosphorus)
cc(Sea, and)
det(Sea, the)
conj(bosphorus, Sea)
case(Marmara, of)
nmod(Sea, Marmara)
advmod(distance, only)
det(distance, a)
amod(distance, short)
nmod(Sea, distance)
case(center, from)
det(center, the)
nmod(distance, center)
case(town, of)
nmod(center, town)
punct(museum, .)
root(ROOT, easy)
mark(get, to)
csubj(easy, get)
obl(get, to)
punct(become, ,)
cc(become, and)
conj(get, become)
advmod(popular, more)
xcomp(become, popular)
det(year, every)
obl:tmod(popular, year)
punct(easy, ,)
nsubj(hour, it)
cop(hour, be)
advmod(hour, only)
nummod(hour, fourteen)
parataxis(easy, hour)
case(York, from)
compound(York, New)
nmod(hour, York)
case(jet, by)
compound(jet, Pan)
compound(World, American)
compound(jet, World)
compound(jet, Airways)
nmod(York, jet)
punct(jet, ,)
nummod(hour, four)
appos(jet, hour)
case(Rome, from)
nmod(hour, Rome)
punct(easy, .)
nsubj(lie, start)
case(tour, of)
nmod(most, tour)
nsubj(lie, most)
case(sight, of)
det(sight, the)
nmod(most, sight)
root(ROOT, lie)
case(section, in)
det(section, the)
amod(section, old)
obl(lie, section)
case(horn, across)
det(horn, the)
amod(horn, golden)
nmod(section, horn)
case(hotel, from)
det(hotel, the)
amod(hotel, modern)
nmod(horn, hotel)
punct(lie, . )
nsubj(start, I)
root(ROOT, start)
nmod:poss(tour, my)
obj(start, tour)
case(they, of)
nmod(tour, they)
case(Office, at)
det(Office, the)
compound(Government, turkish)
compound(Office, Government)
compound(Office, Tourist)
obl(start, Office)
punct(start, ,)
case(office, next)
fixed(next, to)
compound(American, Pan)
nmod:poss(office, American)
case(American, 's)
obl(start, office)
case(left, on)
det(left, the)
nmod(office, left)
mark(enter, as)
nsubj(enter, you)
advcl(start, enter)
det(driveway, the)
obj(enter, driveway)
nsubj(lead, that)
acl:relcl(driveway, lead)
case(Hotel, to)
det(Hotel, the)
compound(Hotel, Hilton)
obl(lead, Hotel)
punct(turn, .)
case(there, from)
obl(turn, there)
nsubj(turn, I)
parataxis(start, turn)
xcomp(turn, leave)
case(cumhuriyet, along)
obl(leave, cumhuriyet)
obl(leave, Cadesi)
case(hotel, past)
amod(hotel, more)
obl(leave, hotel)
cc(park, and)
det(park, a)
conj(hotel, park)
case(left, on)
det(left, the)
nmod(park, left)
punct(Gardens, ,)
compound(Gardens, Republic)
conj(left, Gardens)
punct(come, ,)
cc(come, and)
conj(turn, come)
case(moment, in)
det(moment, a)
amod(moment, few)
obl(come, moment)
case(Square, to)
compound(Square, Taksim)
nmod(moment, Square)
punct(Square, ,)
appos(moment, one)
case(hub, of)
det(hub, the)
nmod(one, hub)
case(city, of)
det(city, the)
nmod(hub, city)
punct(hub, ,)
case(Monument, with)
det(Monument, the)
nmod(hub, Monument)
case(Republic, of)
det(Republic, the)
nmod(Monument, Republic)
punct(Monument, ,)
acl(Monument, erect)
case(1928, in)
obl(erect, 1928)
punct(erect, ,)
case(center, in)
nmod:poss(center, its)
obl(erect, center)
punct(start, .)
advmod(across, directly)
advmod(find, across)
case(Gardens, from)
det(Gardens, the)
obl(across, Gardens)
nsubj(find, I)
root(ROOT, find)
det(sign, a)
compound(stop, bus)
compound(sign, stop)
obj(find, sign)
case(T, for)
nmod(sign, T)
nummod(T, 4)
cc(ride, and)
conj(find, ride)
obj(ride, it)
advmod(ride, down)
case(bosphorus, to)
det(bosphorus, the)
obl(ride, bosphorus)
punct(ride, ,)
case(center, with)
det(center, the)
compound(center, sport)
obl(ride, center)
case(left, on)
nmod:poss(left, my)
nmod(center, left)
advmod(reach, just)
mark(reach, before)
nsubj(reach, I)
advcl(ride, reach)
det(water, the)
obj(reach, water)
cc(entrance, and)
det(entrance, the)
conj(water, entrance)
case(Palace, to)
compound(Palace, Dolmabahce)
nmod(entrance, Palace)
advmod(that, immediately)
case(that, after)
nmod(entrance, that)
punct(find, .)
expl(turn, there)
det(bus, the)
nsubj(turn, bus)
root(ROOT, turn)
advmod(bosphorus, right)
case(bosphorus, along)
det(bosphorus, the)
obl(turn, bosphorus)
punct(turn, ,)
case(liner, past)
amod(liner, ocean)
obl(turn, liner)
case(anchor, at)
nmod(liner, anchor)
punct(turn, ,)
case(Bridge, to)
compound(Bridge, Galata)
obl(turn, Bridge)
case(entrance, over)
det(entrance, the)
obl(turn, entrance)
case(horn, to)
det(horn, the)
compound(horn, golden)
nmod(entrance, horn)
punct(horn, ,)
det(sweep, a)
amod(sweep, brown)
appos(horn, sweep)
case(water, of)
nmod(sweep, water)
nsubj(empty, that)
acl:relcl(sweep, empty)
case(bosphorus, into)
det(bosphorus, the)
obl(empty, bosphorus)
punct(empty, .)
case(bridge, across)
det(bridge, the)
obl(empty, bridge)
case(left, on)
det(left, the)
nmod(bridge, left)
nsubj(see, I)
acl:relcl(left, see)
obj(see, St.)
flat(St., sophia)
case(minaret, with)
nmod:poss(minaret, its)
amod(minaret, sturdy)
amod(minaret, brown)
obl(see, minaret)
cc(right, and)
case(right, to)
det(right, the)
conj(minaret, right)
case(they, of)
nmod(right, they)
det(spire, the)
amod(spire, slenderer)
nmod(right, spire)
case(mosque, of)
det(mosque, the)
compound(mosque, Blue)
nmod(spire, mosque)
punct(turn, .)
case(side, on)
det(side, the)
amod(side, other)
obl(ride, side)
case(horn, of)
det(horn, the)
compound(horn, golden)
nmod(side, horn)
nsubj(ride, I)
root(ROOT, ride)
case(Square, through)
compound(Square, Eminonu)
obl(ride, Square)
punct(Square, ,)
case(Cami, with)
compound(Cami, Yeni)
nmod(Square, Cami)
punct(mosque, ,)
cc(mosque, or)
det(mosque, the)
compound(mosque, New)
conj(Square, mosque)
punct(mosque, ,)
nsubj(date, which)
acl:relcl(mosque, date)
case(Century, from)
det(Century, the)
compound(Century, Seventeenth)
obl(date, Century)
punct(date, ,)
advmod(across, just)
advmod(date, across)
case(entrance, from)
det(entrance, the)
obl(date, entrance)
case(bridge, to)
det(bridge, the)
nmod(entrance, bridge)
punct(ride, .)
advcl(climb, pass)
obj(pass, it)
punct(climb, ,)
det(bus, the)
nsubj(climb, bus)
root(ROOT, climb)
det(hill, a)
obj(climb, hill)
punct(hill, ,)
case(bazaar, with)
det(bazaar, the)
amod(bazaar, cover)
compound(bazaar, spice)
obl(climb, bazaar)
case(right, on)
det(right, the)
nmod(bazaar, right)
cc(Pandelli, and)
conj(right, Pandelli)
case(Pandelli, 's)
punct(restaurant, ,)
det(restaurant, a)
amod(restaurant, famous)
cc(excellent, and)
conj(famous, excellent)
conj(right, restaurant)
punct(restaurant, ,)
case(it, above)
nmod(restaurant, it)
punct(climb, .)
case(top, at)
det(top, the)
obl(give, top)
case(hill, of)
det(hill, the)
nmod(top, hill)
det(building, the)
nsubj(give, building)
case(left, on)
det(left, the)
nmod(building, left)
root(ROOT, give)
obj(give, way)
case(park, to)
det(park, a)
obl(give, park)
punct(give, . )
nsubj(get, I)
root(ROOT, get)
advmod(get, off)
advmod(get, there)
punct(cross, ,)
conj(get, cross)
det(street, the)
obj(cross, street)
punct(walk, ,)
conj(get, walk)
advmod(walk, ahead)
case(St., with)
obl(walk, St.)
flat(St., sophia)
case(left, on)
nmod:poss(left, my)
obl(walk, left)
punct(mosque, ,)
det(mosque, the)
compound(mosque, Blue)
conj(left, mosque)
case(right, on)
nmod:poss(right, my)
nmod(mosque, right)
punct(come, ,)
cc(come, and)
case(moment, in)
det(moment, a)
obl(come, moment)
conj(get, come)
case(entrance, to)
det(entrance, the)
obl(come, entrance)
case(St., of)
nmod(entrance, St.)
flat(St., sophia)
punct(get, .)
advcl(start, erect)
case(site, on)
det(site, the)
obl(erect, site)
case(temple, of)
amod(temple, pagan)
nmod(site, temple)
cc(St., and)
nummod(St., three)
amod(St., previous)
conj(temple, St.)
flat(St., Sophias)
punct(start, ,)
det(first, the)
nsubj:pass(start, first)
case(which, of)
obl(begin, which)
aux:pass(begin, be)
acl:relcl(first, begin)
case(Constantine, by)
obl(begin, Constantine)
punct(start, ,)
det(church, this)
amod(church, fourth)
nsubj:pass(start, church)
aux:pass(start, be)
root(ROOT, start)
case(justinian, by)
obl(start, justinian)
case(532, in)
obl(start, 532)
cc(complete, and)
conj(start, complete)
nummod(year, twenty)
obl:npmod(later, year)
advmod(complete, later)
punct(start, .)
case(trip, on)
nmod:poss(trip, he)
amod(trip, first)
obl(boast, trip)
case(structure, to)
det(structure, the)
amod(structure, finish)
nmod(trip, structure)
nsubj(boast, he)
root(ROOT, boast)
mark(build, that)
nsubj(build, he)
aux(build, have)
ccomp(boast, build)
det(temple, a)
obj(build, temple)
amod(temple, grander)
case(Solomon, than)
obl(grander, Solomon)
case(Solomon, 's)
case(Jerusalem, in)
obl(grander, Jerusalem)
punct(boast, . )
det(year, a)
amod(year, few)
obl:npmod(later, year)
advmod(fall, later)
det(dome, the)
nsubj(fall, dome)
root(ROOT, fall)
advmod(fall, in)
punct(fall, .)
advmod(remain, nevertheless)
punct(remain, ,)
nsubj(remain, it)
parataxis(fall, remain)
obj(remain, one)
case(church, of)
det(church, the)
advmod(splendid, most)
amod(church, splendid)
nmod(one, church)
case(Empire, of)
det(Empire, the)
compound(Empire, Eastern)
nmod(church, Empire)
punct(Empire, ,)
advmod(crowned, where)
det(emperor, the)
compound(emperor, Byzantine)
nsubj:pass(crowned, emperor)
aux:pass(crowned, be)
acl:relcl(Empire, crowned)
punct(fall, .)
mark(conquer, after)
det(turk, the)
nsubj(conquer, turk)
advcl(converted, conquer)
det(city, the)
obj(conquer, city)
case(1453, in)
obl(conquer, 1453)
nsubj(converted, they)
root(ROOT, converted)
obj(converted, it)
case(mosque, to)
det(mosque, a)
obl(converted, mosque)
punct(converted, ,)
advcl(converted, add)
det(minaret, the)
amod(minaret, stubby)
obj(add, minaret)
punct(converted, .)
case(half, in)
det(half, the)
amod(half, second)
obl(design, half)
case(Century, of)
det(Century, the)
compound(Century, Sixteenth)
nmod(half, Century)
punct(design, ,)
nsubj(design, Sinan)
punct(Sinan, ,)
det(architect, the)
amod(architect, great)
appos(Sinan, architect)
nsubj(Michelangelo, who)
cop(Michelangelo, be)
det(Michelangelo, the)
acl:relcl(architect, Michelangelo)
case(East, of)
det(East, the)
nmod(Michelangelo, East)
punct(design, ,)
root(ROOT, design)
det(buttress, the)
amod(buttress, massive)
obj(design, buttress)
nsubj(help, that)
advmod(help, now)
acl:relcl(buttress, help)
xcomp(help, support)
det(dome, the)
obj(support, dome)
punct(design, .)
case(birth, with)
det(birth, the)
obl(become, birth)
case(Republic, of)
det(Republic, the)
compound(Republic, turkish)
nmod(birth, Republic)
case(War, after)
det(War, the)
compound(War, First)
compound(War, World)
nmod(birth, War)
punct(become, ,)
nsubj(become, St.)
flat(St., sophia)
root(ROOT, become)
det(museum, a)
xcomp(become, museum)
punct(restore, ,)
cc(restore, and)
det(mosaic, the)
amod(mosaic, ancient)
nsubj:pass(restore, mosaic)
punct(mosaic, ,)
nsubj:pass(plaster, which)
aux:pass(plaster, be)
acl:relcl(mosaic, plaster)
compound:prt(plaster, over)
case(Moslems, by)
det(Moslems, the)
obl(plaster, Moslems)
punct(Moslems, ,)
nmod:poss(religion, whose)
nsubj(forbid, religion)
acl:relcl(Moslems, forbid)
obj(forbid, picture)
case(place, in)
amod(place, holy)
obl(forbid, place)
punct(restore, ,)
aux(restore, have)
aux:pass(restore, be)
conj(museum, restore)
punct(museum, .)
advmod(see, inside)
case(door, over)
det(door, the)
amod(door, first)
obl(see, door)
nsubj(see, I)
root(ROOT, see)
obj(see, one)
case(these, of)
nmod(one, these)
punct(see, ,)
nsubj(show, which)
acl:relcl(one, show)
obj(show, Constantine)
xcomp(show, offer)
det(city, the)
obj(offer, city)
case(Mary, to)
det(Mary, the)
compound(Mary, Virgin)
nmod(city, Mary)
cc(justinian, and)
conj(Mary, justinian)
advcl(offer, offer)
det(temple, the)
obj(offer, temple)
punct(see, .)
case(column, on)
det(column, the)
obl(plaque, column)
case(dome, around)
det(dome, the)
amod(dome, immense)
nmod(column, dome)
cop(plaque, be)
amod(plaque, round)
root(ROOT, plaque)
case(writing, with)
compound(writing, Arabic)
nmod(plaque, writing)
punct(plaque, .)
det(column, the)
nummod(column, eight)
amod(column, green)
nsubj(come, column)
punct(column, ,)
nsubj(learn, I)
parataxis(column, learn)
punct(come, ,)
root(ROOT, come)
case(Temple, from)
det(Temple, the)
obl(come, Temple)
case(Artemis, of)
nmod(Temple, Artemis)
case(Ephesus, at)
obl(come, Ephesus)
punct(Ephesus, ,)
det(other, the)
appos(Ephesus, other)
punct(other, ,)
amod(other, red)
punct(come, ,)
case(Temple, from)
det(Temple, the)
obl(come, Temple)
case(Sun, of)
det(Sun, the)
nmod(Temple, Sun)
case(Heliopolis, at)
nmod(Temple, Heliopolis)
punct(come, .)
case(dome, Beneath)
det(dome, the)
obl(see, dome)
nsubj(see, I)
root(ROOT, see)
det(spot, the)
obj(see, spot)
advmod(crowned, where)
det(emperor, the)
compound(emperor, Byzantine)
nsubj:pass(crowned, emperor)
aux:pass(crowned, be)
acl:relcl(spot, crowned)
punct(spot, ,)
det(bit, a)
obj(crowned, bit)
case(floor, of)
nmod(bit, floor)
acl(bit, protect)
advmod(protect, now)
case(fence, by)
det(fence, a)
amod(fence, wooden)
obl(protect, fence)
punct(see, .)
case(this, behind)
nsubj(pulpit, this)
cop(pulpit, be)
det(pulpit, a)
amod(pulpit, minber)
cc(moslem, or)
conj(minber, moslem)
root(ROOT, pulpit)
cc(platform, and)
case(it, near)
obl(platform, it)
det(platform, a)
amod(platform, raise)
conj(pulpit, platform)
case(grillwork, with)
amod(grillwork, golden)
nmod(platform, grillwork)
punct(grillwork, ,)
advmod(door, where)
det(emperor, the)
nsubj(door, emperor)
cc(sultan, and)
punct(sultan, ,)
case(they, after)
nmod(emperor, they)
punct(sultan, ,)
det(sultan, the)
conj(emperor, sultan)
punct(sit, ,)
acl:relcl(sultan, sit)
punct(sit, .)
advmod(opposite, directly)
advmod(sit, opposite)
cop(door, be)
det(emperor, the)
nmod:poss(door, emperor)
case(emperor, 's)
parataxis(pulpit, door)
punct(door, ,)
case(which, through)
obl(enter, which)
nsubj(enter, they)
acl:relcl(door, enter)
det(building, the)
obj(enter, building)
punct(pulpit, .)
case(St., outside)
root(ROOT, St.)
flat(St., sophia)
nsubj(walk, I)
root(ROOT, walk)
case(garden, through)
det(garden, the)
compound(garden, flower)
obl(walk, garden)
case(front, in)
obl(walk, front)
case(it, of)
nmod(front, it)
punct(walk, ,)
case(mosque, with)
det(mosque, the)
compound(mosque, Blue)
obl(walk, mosque)
advmod(mosque, ahead)
case(left, on)
nmod:poss(left, my)
nmod(mosque, left)
punct(walk, .)
case(street, across)
det(street, the)
obl(see, street)
case(right, on)
nmod:poss(right, my)
nmod(street, right)
nsubj(see, I)
root(ROOT, see)
det(Hippodrome, the)
obj(see, Hippodrome)
punct(Hippodrome, ,)
advmod(park, now)
det(park, a)
appos(Hippodrome, park)
punct(see, .)
nsubj:pass(lay, it)
aux:pass(lay, be)
root(ROOT, lay)
compound:prt(lay, out)
case(196, in)
obl(lay, 196)
case(race, for)
compound(race, chariot)
obl(lay, race)
cc(game, and)
amod(game, other)
amod(game, public)
conj(race, game)
punct(lay, .)
nsubj:pass(steal, Statues)
cc(monument, and)
amod(monument, other)
conj(Statues, monument)
nsubj(stand, that)
acl:relcl(monument, stand)
advmod(stand, there)
aux:pass(steal, be)
root(ROOT, steal)
punct(steal, ,)
advmod(wave, mostly)
case(wave, by)
det(wave, the)
obl(steal, wave)
case(crusader, of)
nmod(wave, crusader)
punct(steal, .)
case(beginning, at)
det(beginning, the)
obl(see, beginning)
case(Hippodrome, of)
det(Hippodrome, the)
nmod(beginning, Hippodrome)
nsubj(see, I)
root(ROOT, see)
det(Kaiser, the)
nmod:poss(Fountain, Kaiser)
case(Kaiser, 's)
obj(see, Fountain)
punct(Fountain, ,)
det(building, a)
amod(building, ugly)
amod(building, octagonal)
appos(Fountain, building)
case(dome, with)
det(dome, a)
compound(dome, glass)
nmod(building, dome)
punct(Fountain, ,)
acl(Fountain, build)
case(1895, in)
obl(build, 1895)
case(emperor, by)
det(emperor, the)
compound(emperor, German)
obl(build, emperor)
punct(tomb, ,)
cc(across, and)
case(left, on)
nmod:poss(left, my)
obl(across, left)
punct(across, ,)
advmod(across, directly)
advmod(tomb, across)
case(it, from)
obl(across, it)
punct(tomb, ,)
det(tomb, the)
conj(Fountain, tomb)
case(Sultan, of)
nmod(tomb, Sultan)
flat(Sultan, Ahmet)
punct(tomb, ,)
nsubj(construct, who)
acl:relcl(tomb, construct)
det(mosque, the)
compound(mosque, Blue)
obj(construct, mosque)
punct(mosque, ,)
advmod(properly, more)
advmod(know, properly)
advcl(construct, know)
case(name, by)
nmod:poss(name, he)
obl(know, name)
punct(see, .)
advmod(come, just)
mark(come, before)
advcl(cross, come)
case(entrance, to)
det(entrance, the)
compound(entrance, mosque)
obl(come, entrance)
nsubj(cross, I)
root(ROOT, cross)
det(street, the)
obj(cross, street)
punct(enter, ,)
conj(cross, enter)
det(Hippodrome, the)
obj(enter, Hippodrome)
punct(walk, ,)
cc(walk, and)
conj(cross, walk)
advmod(walk, ahead)
case(obelisk, to)
det(obelisk, the)
obl(walk, obelisk)
case(Theodosius, of)
nmod(obelisk, Theodosius)
punct(erect, ,)
advmod(erect, originally)
acl(obelisk, erect)
case(Heliopolis, in)
obl(erect, Heliopolis)
case(Egypt, in)
obl(erect, Egypt)
case(B.C., about)
nummod(B.C., 1,600)
obl(erect, B.C.)
case(thutmose, by)
nmod(B.C., thutmose)
punct(B.C., ,)
nsubj(build, who)
advmod(build, also)
acl:relcl(B.C., build)
obj(build, those)
advmod(build, now)
case(York, in)
compound(York, New)
obl(build, York)
punct(London, ,)
conj(York, London)
cc(Rome, and)
conj(York, Rome)
case(Lateran, at)
det(Lateran, the)
obl(set, Lateran)
punct(set, .)
det(one, this)
nsubj:pass(set, one)
aux:pass(set, be)
acl:relcl(York, set)
compound:prt(set, up)
advmod(set, here)
case(A.D., in)
nummod(A.D., 390)
obl(set, A.D.)
case(pedestal, on)
det(pedestal, a)
nmod(A.D., pedestal)
punct(face, ,)
det(face, the)
appos(pedestal, face)
case(which, of)
obl(carve, which)
aux:pass(carve, be)
acl:relcl(face, carve)
case(statue, with)
obl(carve, statue)
case(emperor, of)
det(emperor, the)
nmod(statue, emperor)
cc(family, and)
nmod:poss(family, he)
conj(emperor, family)
acl(emperor, watch)
obj(watch, game)
case(Hippodrome, in)
det(Hippodrome, the)
obl(watch, Hippodrome)
punct(watch, ,)
advcl(watch, do)
advmod(realistically, so)
advmod(do, realistically)
mark(include, that)
det(obelisk, the)
nsubj:pass(include, obelisk)
nmod:npmod(obelisk, itself)
aux:pass(include, be)
ccomp(do, include)
case(they, in)
obl(include, they)
punct(cross, .)
case(it, beyond)
obl(note, it)
nsubj(note, I)
root(ROOT, note)
det(column, a)
amod(column, small)
amod(column, green)
obj(note, column)
punct(column, ,)
advmod(twelve, about)
nummod(foot, twelve)
nmod:tmod(column, foot)
case(level, below)
det(level, the)
amod(level, present)
compound(level, ground)
nmod(foot, level)
punct(column, --)
det(column, the)
compound(column, Serpentine)
appos(column, column)
punct(column, ,)
nummod(serpent, three)
amod(serpent, entwine)
appos(column, serpent)
punct(serpent, ,)
nsubj(stand, which)
advmod(stand, once)
acl:relcl(serpent, stand)
case(Temple, at)
det(Temple, the)
obl(stand, Temple)
case(Apollo, of)
nmod(Temple, Apollo)
case(Delphi, at)
obl(stand, Delphi)
punct(Delphi, ,)
appos(Delphi, Greece)
punct(note, .)
case(end, Near)
det(end, the)
obl(come, end)
case(Hippodrome, of)
det(Hippodrome, the)
nmod(end, Hippodrome)
nsubj(come, I)
root(ROOT, come)
case(column, upon)
det(column, the)
compound(column, Built)
obl(come, column)
punct(column, ,)
det(obelisk, a)
amod(obelisk, truncate)
appos(column, obelisk)
case(block, of)
nmod(obelisk, block)
punct(column, ,)
appos(column, all)
nsubj(remain, that)
acl:relcl(all, remain)
case(monument, of)
det(monument, a)
obl(remain, monument)
nsubj(rivall, that)
advmod(rivall, once)
acl:relcl(monument, rivall)
det(Colossus, the)
obj(rivall, Colossus)
case(rhode, of)
nmod(Colossus, rhode)
punct(mosque, .)
compound(mosque, magnificent)
obj(rivall, mosque)
advcl(enter, retrace)
nmod:poss(step, my)
obj(retrace, step)
case(mosque, to)
det(mosque, the)
obl(retrace, mosque)
case(Sultan, of)
nmod(mosque, Sultan)
flat(Sultan, Ahmet)
punct(mosque, ,)
advmod(one, only)
appos(mosque, one)
case(minaret, with)
nummod(minaret, six)
nmod(one, minaret)
punct(enter, ,)
nsubj(enter, I)
root(ROOT, enter)
det(courtyard, the)
obj(enter, courtyard)
punct(enter, ,)
case(gallery, with)
det(gallery, a)
obl(enter, gallery)
acl(gallery, support)
case(arch, by)
amod(arch, point)
obl(support, arch)
acl(arch, run)
case(it, around)
obl(run, it)
cc(fountain, and)
det(fountain, a)
conj(it, fountain)
case(middle, in)
det(middle, the)
nmod(fountain, middle)
punct(enter, .)
nsubj:pass(construct, one)
case(building, of)
det(building, the)
advmod(beautiful, most)
amod(building, beautiful)
nmod(one, building)
case(Istanbul, in)
nmod(building, Istanbul)
punct(construct, ,)
nsubj:pass(construct, it)
aux:pass(construct, be)
root(ROOT, construct)
case(year, in)
det(year, the)
amod(year, early)
obl(construct, year)
case(Century, of)
det(Century, the)
compound(Century, Seventeenth)
nmod(year, Century)
punct(construct, ,)
case(dome, with)
det(dome, a)
amod(dome, huge)
amod(dome, central)
obl(construct, dome)
punct(dome, ,)
nummod(dome, two)
amod(dome, half)
appos(dome, dome)
nsubj(seem, that)
acl:relcl(dome, seem)
mark(cascade, to)
xcomp(seem, cascade)
compound:prt(cascade, down)
case(it, from)
obl(cascade, it)
punct(dome, ,)
cc(dome, and)
amod(dome, smaller)
amod(dome, full)
conj(cascade, dome)
case(gallery, around)
det(gallery, the)
nmod(dome, gallery)
punct(construct, .)
det(minaret, the)
amod(minaret, round)
nsubj(rise, minaret)
punct(tall, ,)
conj(minaret, tall)
cc(graceful, and)
conj(tall, graceful)
punct(rise, ,)
root(ROOT, rise)
case(basis, from)
amod(basis, rectangular)
obl(rise, basis)
cc(have, and)
conj(rise, have)
nummod(platform, three)
obj(have, platform)
case(which, from)
obl(chant, which)
det(muezzin, the)
nsubj(chant, muezzin)
aux(chant, can)
acl:relcl(platform, chant)
nmod:poss(call, he)
obj(chant, call)
case(prayer, to)
obl(chant, prayer)
punct(rise, .)
advmod(cover, inside)
punct(cover, ,)
det(wall, the)
nsubj:pass(cover, wall)
aux:pass(cover, be)
root(ROOT, cover)
case(tile, with)
amod(tile, blue)
cc(white, and)
conj(blue, white)
obl(cover, tile)
punct(floor, ,)
det(floor, the)
appos(tile, floor)
case(carpet, with)
amod(carpet, red)
cc(cream, and)
conj(red, cream)
nmod(floor, carpet)
punct(cover, .)
advmod(walk, back)
case(Fountain, at)
det(Kaiser, the)
nmod:poss(Fountain, Kaiser)
case(Kaiser, 's)
obl(back, Fountain)
punct(walk, ,)
nsubj(walk, I)
root(ROOT, walk)
xcomp(walk, leave)
case(stop, to)
det(stop, the)
compound(stop, streetcar)
obl(leave, stop)
cc(ride, and)
conj(walk, ride)
compound:prt(ride, up)
det(hill, the)
obj(ride, hill)
punct(walk, --)
det(car, any)
nsubj(do, car)
aux(do, will)
parataxis(walk, do)
punct(do, --)
case(column, past)
det(column, the)
obl(do, column)
case(Constantine, of)
nmod(column, Constantine)
punct(column, ,)
advmod(know, also)
acl(column, know)
case(column, as)
det(column, the)
compound(column, Burnt)
obl(know, column)
punct(know, ,)
case(top, at)
det(top, the)
obl(know, top)
case(right, on)
nmod:poss(right, my)
nmod(top, right)
punct(walk, .)
nsubj(stand, it)
root(ROOT, stand)
case(middle, in)
det(middle, the)
obl(stand, middle)
case(what, of)
nmod(middle, what)
cop(Forum, be)
advmod(Forum, once)
det(Forum, the)
acl:relcl(what, Forum)
case(Constantine, of)
nmod(Forum, Constantine)
punct(Forum, ,)
nsubj(bring, who)
acl:relcl(what, bring)
obj(bring, it)
case(Rome, from)
obl(bring, Rome)
punct(stand, . )
nsubj(stay, I)
root(ROOT, stay)
case(car, on)
det(car, the)
obl(stay, car)
case(minute, for)
det(minute, a)
amod(minute, few)
obl(stay, minute)
case(minute, until)
punct(stay, ,)
advcl(enter, turn)
advmod(turn, right)
punct(enter, ,)
nsubj(enter, it)
conj(stay, enter)
det(square, a)
amod(square, huge)
obj(enter, square)
punct(square, ,)
appos(square, Bayezit)
punct(square, ,)
case(mosque, with)
det(mosque, the)
compound(mosque, Bayezit)
nmod(square, mosque)
case(right, on)
det(right, the)
nmod(mosque, right)
cc(gate, and)
det(gate, the)
conj(right, gate)
case(university, to)
det(university, the)
nmod(gate, university)
advmod(it, just)
case(it, beyond)
nmod(gate, it)
punct(stay, .)
advmod(get, there)
nsubj(get, I)
root(ROOT, get)
compound:prt(get, off)
punct(cross, ,)
conj(get, cross)
det(square, the)
obj(cross, square)
punct(find, ,)
cc(find, and)
case(side, on)
det(side, the)
obl(find, side)
advmod(gate, directly)
case(gate, opposite)
det(gate, the)
obl(find, gate)
conj(get, find)
det(restaurant, a)
amod(restaurant, good)
obj(find, restaurant)
punct(find, ,)
advmod(find, hard)
mark(come, to)
advcl(hard, come)
advmod(come, by)
case(part, in)
det(part, this)
obl(come, part)
case(city, of)
det(city, the)
nmod(part, city)
punct(get, .)
root(ROOT, call)
det(Gazinosu, the)
compound(Gazinosu, Marmara)
obj(call, Gazinosu)
punct(call, ,)
nsubj(floor, it)
cop(floor, be)
case(floor, on)
det(floor, the)
amod(floor, third)
parataxis(call, floor)
punct(call, ,)
case(sign, with)
obl(call, sign)
acl(sign, point)
det(way, the)
obj(point, way)
advmod(point, there)
punct(have, ,)
cc(have, and)
conj(call, have)
det(terrace, a)
obj(have, terrace)
acl(terrace, overlook)
det(Sea, the)
obj(overlook, Sea)
case(Marmara, of)
nmod(Sea, Marmara)
punct(call, .)
case(lunch, after)
obl(find, lunch)
punct(find, ,)
case(arcade, in)
det(arcade, the)
obl(find, arcade)
case(left, on)
nmod:poss(left, my)
nmod(arcade, left)
advmod(reach, just)
mark(reach, before)
advcl(find, reach)
det(street, the)
obj(reach, street)
nsubj(find, I)
root(ROOT, find)
det(shop, a)
compound(shop, pastry)
obj(find, shop)
nsubj(sell, that)
acl:relcl(shop, sell)
obj(sell, some)
case(baklava, of)
det(baklava, the)
amod(baklava, best)
nmod(some, baklava)
punct(baklava, --)
det(cake, a)
amod(cake, sweet)
punct(cake, ,)
amod(cake, flaky)
appos(baklava, cake)
punct(cake, --)
case(Istanbul, in)
nmod(cake, Istanbul)
punct(find, .)
nsubj(favorite, it)
cop(favorite, be)
det(favorite, a)
amod(favorite, great)
root(ROOT, favorite)
case(student, of)
det(student, the)
compound(student, university)
nmod(favorite, student)
punct(join, ,)
cc(join, and)
nsubj(join, I)
conj(favorite, join)
obj(join, they)
advmod(join, there)
case(dessert, for)
obl(join, dessert)
punct(favorite, .)
advcl(walk, take)
det(streetcar, the)
obj(take, streetcar)
advmod(take, back)
case(Fountain, to)
nmod:poss(Fountain, Kaiser)
case(Kaiser, 's)
obl(back, Fountain)
punct(walk, ,)
nsubj(walk, I)
root(ROOT, walk)
advmod(walk, ahead)
punct(leave, ,)
advmod(leave, then)
conj(walk, leave)
compound:prt(leave, down)
det(street, the)
obj(leave, street)
case(St., opposite)
obl(leave, St.)
flat(St., sophia)
cc(come, and)
advmod(corner, just)
case(corner, beyond)
det(corner, the)
obl(come, corner)
conj(walk, come)
case(building, to)
det(building, a)
amod(building, small)
punct(building, ,)
nummod(story, one)
punct(story, -)
compound(building, story)
obl(come, building)
case(roof, with)
det(roof, a)
amod(roof, red-tile)
nmod(building, roof)
punct(roof, ,)
nsubj(entrance, which)
cop(entrance, be)
det(entrance, the)
acl:relcl(roof, entrance)
case(Palace, to)
det(Palace, the)
compound(Palace, Sunken)
nmod(entrance, Palace)
punct(entrance, .)
advmod(cistern, actually)
det(cistern, a)
amod(cistern, underground)
parataxis(entrance, cistern)
punct(cistern, ,)
nmod:poss(roof, its)
parataxis(cistern, roof)
acl(roof, support)
case(row, by)
obl(support, row)
cc(row, and)
conj(row, row)
case(pillar, of)
nmod(row, pillar)
punct(build, ,)
nsubj:pass(build, it)
aux:pass(build, be)
parataxis(cistern, build)
case(justinian, by)
obl(build, justinian)
case(Century, in)
det(Century, the)
amod(Century, Sixth)
obl(build, Century)
mark(supply, to)
advcl(build, supply)
det(palace, the)
obj(supply, palace)
case(water, with)
obl(supply, water)
punct(walk, .)
expl(be, there)
root(ROOT, be)
advmod(be, still)
nsubj(be, water)
case(it, in)
nmod(water, it)
cc(find, . )
nsubj(find, I)
conj(be, find)
obj(find, it)
advmod(depress, fairly)
xcomp(find, depress)
cc(emerge, and)
conj(depress, emerge)
advmod(immediately, almost)
advmod(emerge, immediately)
punct(be, .)
advmod(walk, outside)
nsubj(walk, I)
root(ROOT, walk)
case(entrance, past)
det(entrance, the)
obl(walk, entrance)
case(St., to)
obl(walk, St.)
flat(St., sophia)
punct(turn, ,)
conj(walk, turn)
xcomp(turn, leave)
case(end, at)
det(end, the)
obl(leave, end)
case(it, of)
nmod(end, it)
punct(continue, ,)
cc(continue, and)
conj(walk, continue)
case(gate, toward)
det(gate, a)
obl(continue, gate)
case(wall, in)
det(wall, the)
nmod(gate, wall)
advmod(wall, ahead)
punct(walk, .)
advmod(reach, just)
mark(reach, before)
advcl(come, reach)
obj(reach, it)
nsubj(come, I)
root(ROOT, come)
case(building, to)
det(building, a)
amod(building, grey)
cc(brown, and)
conj(grey, brown)
compound(building, stone)
obl(come, building)
nsubj(look, that)
acl:relcl(building, look)
advmod(look, somewhat)
case(pagoda, like)
det(pagoda, a)
amod(pagoda, Oriental)
obl(look, pagoda)
punct(pagoda, ,)
case(letter, with)
amod(letter, Arabic)
nmod(pagoda, letter)
case(decoration, in)
nmod(letter, gold)
cc(color, and)
conj(gold, color)
compound(decoration, tile)
nmod(letter, decoration)
punct(decoration, --)
det(Fountain, the)
appos(decoration, Fountain)
case(Sultan, of)
nmod(Fountain, Sultan)
nmod(Fountain, Ahmet)
punct(Fountain, .)
acl(Fountain, go)
case(gate, through)
det(gate, the)
compound(gate, imperial)
obl(go, gate)
case(wall, in)
det(wall, the)
nmod(gate, wall)
punct(enter, ,)
nsubj(enter, I)
parataxis(come, enter)
det(grounds, the)
obj(enter, grounds)
case(Palace, of)
compound(Palace, Topkapi)
nmod(grounds, Palace)
punct(home, ,)
conj(Palace, home)
case(Sultans, of)
det(Sultans, the)
nmod(home, Sultans)
cc(center, and)
compound(center, nerve)
conj(Sultans, center)
case(Empire, of)
det(Empire, the)
amod(Empire, vast)
compound(Empire, Ottoman)
nmod(center, Empire)
punct(walk, ,)
cc(walk, and)
conj(enter, walk)
case(road, along)
det(road, a)
obl(walk, road)
case(gate, toward)
det(gate, another)
nmod(road, gate)
case(distance, in)
det(distance, the)
nmod(gate, distance)
punct(gate, ,)
case(Church, past)
det(Church, the)
nmod(distance, Church)
case(St., of)
nmod(Church, St.)
flat(St., Irene)
punct(complete, ,)
acl(Church, complete)
case(Constantine, by)
obl(complete, Constantine)
case(A.D., in)
nummod(A.D., 330)
obl(complete, A.D.)
case(left, on)
nmod:poss(left, my)
nmod(A.D., left)
punct(see, ,)
cc(see, and)
advmod(see, then)
punct(see, ,)
advmod(gate, just)
case(gate, outside)
det(gate, the)
amod(gate, second)
obl(see, gate)
punct(see, ,)
nsubj(see, I)
conj(come, see)
det(spring, a)
obj(see, spring)
case(tap, with)
det(tap, a)
nmod(spring, tap)
case(wall, in)
det(wall, the)
nmod(tap, wall)
case(right, on)
nmod:poss(right, my)
nmod(wall, right)
punct(right, --)
det(executioner, the)
nmod:poss(spring, executioner)
case(executioner, 's)
appos(right, spring)
punct(spring, ,)
advmod(wash, where)
nsubj(wash, he)
acl:relcl(spring, wash)
nmod:poss(hand, he)
obj(wash, hand)
cc(sword, and)
nmod:poss(sword, he)
conj(hand, sword)
mark(beheading, after)
advcl(wash, beheading)
nmod:poss(victim, he)
obj(beheading, victim)
punct(come, .)
advcl(enter, pass)
case(gate, through)
det(gate, the)
obl(pass, gate)
punct(enter, ,)
case(tower, with)
obl(enter, tower)
case(side, on)
cc:preconj(side, either)
obl(use, side)
advmod(use, once)
acl(tower, use)
case(prison, as)
obl(use, prison)
punct(enter, ,)
nsubj(enter, I)
root(ROOT, enter)
det(square, a)
amod(square, huge)
obj(enter, square)
acl(square, surround)
case(building, by)
obl(surround, building)
punct(find, ,)
cc(find, and)
case(wall, on)
det(wall, the)
obl(find, wall)
case(right, to)
nmod:poss(right, my)
nmod(wall, right)
conj(enter, find)
det(plan, a)
amod(plan, general)
obj(find, plan)
case(grounds, of)
det(grounds, the)
nmod(plan, grounds)
punct(plan, ,)
case(explanation, with)
obl(find, explanation)
case(English, in)
nmod(explanation, English)
case(building, for)
det(building, each)
nmod(explanation, building)
punct(enter, .)
expl(be, there)
root(ROOT, be)
det(many, a)
amod(many, good)
nsubj(be, many)
case(they, of)
nmod(many, they)
punct(be, .)
case(time, at)
nummod(time, one)
obl(live, time)
advmod(10,000, about)
nummod(people, 10,000)
nsubj(live, people)
root(ROOT, live)
advmod(live, there)
punct(live, . )
case(sign, follow)
amod(sign, arrow)
obl(veer, sign)
punct(veer, ,)
nsubj(veer, I)
root(ROOT, veer)
advmod(kitchen, right)
case(kitchen, toward)
det(kitchen, the)
amod(kitchen, former)
obl(veer, kitchen)
punct(kitchen, ,)
amod(kitchen, complete)
case(chimney, with)
obl(complete, chimney)
punct(chimney, ,)
nsubj(house, which)
advmod(house, now)
acl:relcl(chimney, house)
obj(house, one)
case(collection, of)
det(world, the)
nmod:poss(collection, world)
case(world, 's)
amod(collection, greatest)
nmod(one, collection)
case(porcelain, of)
amod(porcelain, chinese)
nmod(collection, porcelain)
cc(array, and)
det(array, a)
amod(array, fabulous)
conj(collection, array)
case(service, of)
amod(service, silver)
compound(service, dinner)
nmod(array, service)
punct(veer, .)
advmod(section, next)
fixed(next, to)
nsubj(section, it)
cop(section, be)
det(section, a)
compound(section, copper)
root(ROOT, section)
punct(section, ,)
case(utensil, with)
compound(utensil, cooking)
nmod(section, utensil)
cc(figure, and)
det(figure, a)
conj(utensil, figure)
case(chief, of)
det(chief, the)
nmod(figure, chief)
acl:relcl(section, cook)
case(robe, in)
det(robe, a)
amod(robe, elaborate)
punct(robe, ,)
compound(length, floor)
punct(length, -)
compound(robe, length)
obl(cook, robe)
punct(section, .)
case(court, in)
det(court, the)
obl(go, court)
advmod(more, once)
advmod(go, more)
punct(go, ,)
nsubj(go, I)
root(ROOT, go)
advmod(House, right)
case(House, toward)
det(House, the)
compound(House, reception)
obl(go, House)
punct(House, ,)
det(building, a)
amod(building, long)
nummod(story, one)
punct(story, -)
compound(building, story)
appos(House, building)
case(portico, with)
det(portico, a)
amod(portico, deep)
nmod(building, portico)
punct(go, .)
advcl(go, go)
case(door, through)
det(door, a)
obl(go, door)
case(court, into)
det(court, another)
amod(court, small)
obl(go, court)
punct(have, ,)
nsubj(have, I)
parataxis(go, have)
det(room, the)
compound(room, Throne)
obj(have, room)
advmod(front, directly)
case(front, in)
obl(have, front)
punct(go, . )
nsubj(walk, I)
root(ROOT, walk)
case(right, to)
det(right, the)
obl(walk, right)
case(it, around)
nmod(right, it)
case(building, to)
obl(walk, building)
acl(building, contain)
amod(manuscript, illuminate)
obj(contain, manuscript)
cc(come, and)
conj(walk, come)
case(Treasury, to)
det(Treasury, the)
obl(come, Treasury)
punct(Treasury, ,)
nsubj(house, which)
acl:relcl(Treasury, house)
amod(thing, such)
obj(house, thing)
case(cup, as)
compound(cup, coffee)
obl(house, cup)
acl(cup, cover)
case(diamond, with)
obl(cover, diamond)
punct(sword, ,)
amod(sword, jewel)
conj(diamond, sword)
punct(rifle, ,)
conj(diamond, rifle)
acl(rifle, glitter)
case(diamond, with)
obl(glitter, diamond)
cc(divan, and)
amod(divan, huge)
compound(throne, divan)
punct(divan, -)
case(throne, like)
conj(diamond, throne)
advmod(large, as)
amod(throne, large)
case(bed, as)
amod(bed, small)
obl(large, bed)
punct(bed, ,)
case(which, on)
obl(sit, which)
det(sultan, the)
nsubj(sit, sultan)
acl:relcl(bed, sit)
xcomp(sit, cross-legged)
punct(walk, .)
nsubj:pass(make, they)
aux:pass(make, be)
root(ROOT, make)
case(gold, of)
obl(make, gold)
cc(cover, and)
conj(make, cover)
case(emerald, with)
obl(cover, emerald)
punct(pearl, ,)
conj(emerald, pearl)
cc(jewel, and)
amod(jewel, other)
conj(emerald, jewel)
punct(make, .)
advcl(go, take)
det(path, the)
obj(take, path)
case(room, behind)
det(room, the)
compound(room, Throne)
obl(take, room)
case(building, to)
det(building, the)
nmod(room, building)
advmod(it, directly)
case(it, beyond)
nmod(room, it)
punct(Gallery, ,)
det(Gallery, the)
compound(Gallery, Portrait)
nsubj(go, Gallery)
punct(go, ,)
nsubj(go, I)
root(ROOT, go)
advmod(end, right)
case(end, at)
det(end, the)
obl(go, end)
case(it, of)
nmod(end, it)
punct(go, ,)
case(garden, through)
det(garden, a)
obl(go, garden)
case(building, to)
det(building, a)
amod(building, small)
nmod(garden, building)
case(back, at)
det(back, the)
nmod(building, back)
punct(room, --)
det(room, a)
compound(room, sitting)
parataxis(go, room)
acl(room, furnish)
case(divan, with)
amod(divan, low)
amod(divan, blue)
obl(furnish, divan)
punct(cover, ,)
nsubj(cover, it)
cop(cover, be)
compound(cover, floor)
parataxis(room, cover)
case(carpet, with)
obl(cover, carpet)
punct(paint, ,)
nsubj:pass(paint, it)
aux:pass(paint, be)
aux:pass(paint, ceiling)
conj(cover, paint)
case(square, with)
compound(square, gold)
obl(paint, square)
cc(design, and)
amod(design, floral)
conj(square, design)
punct(paint, . )
punct(start, ()
aux(start, do)
root(ROOT, start)
obj(start, fire)
nummod(hour, one)
cc(two, or)
conj(one, two)
obl:npmod(ahead, hour)
advmod(start, ahead)
case(time, of)
obl(ahead, time)
mark(obtain, to)
advcl(start, obtain)
det(bed, a)
amod(bed, lasting)
obj(obtain, bed)
case(coal, of)
amod(coal, glow)
nmod(bed, coal)
punct(start, .)
root(ROOT, keep)
obj(keep, ash)
case(barbecue, from)
nummod(barbecue, one)
obl(keep, barbecue)
case(next, to)
det(next, the)
obl(keep, next)
mark(sprinkle, to)
advcl(keep, sprinkle)
case(coal, over)
obl(sprinkle, coal)
mark(hot, if)
nsubj(hot, they)
cop(hot, be)
advmod(hot, too)
advcl(sprinkle, hot)
punct(stop, ,)
cc(stop, and)
mark(stop, to)
conj(hot, stop)
obj(stop, flame)
nsubj(arise, that)
acl:relcl(flame, arise)
mark(melt, from)
advcl(arise, melt)
obj(melt, grease)
punct(keep, .)
root(ROOT, do)
compound(bowl, line)
compound(bowl, barbecue)
compound(bowl, fire)
obj(do, bowl)
case(foil, with)
amod(foil, heavy)
nmod(bowl, foil)
mark(reflect, to)
advcl(do, reflect)
obj(reflect, heat)
punct(do, .)
aux(forget, do)
advmod(forget, not)
root(ROOT, forget)
mark(buy, to)
xcomp(forget, buy)
det(brush, a)
amod(brush, plastic)
compound(brush, pastry)
obj(buy, brush)
case(bast, for)
obl(buy, bast)
case(sauce, with)
nmod(bast, sauce)
punct(forget, .)
root(ROOT, clean)
obj(clean, it)
advmod(clean, meticulously)
mark(boiling, in)
advcl(clean, boiling)
obj(boiling, water)
cc(detergent, and)
conj(water, detergent)
punct(clean, ,)
conj(clean, rinse)
advmod(rinse, thoroughly)
punct(clean, .)
aux(build, do)
root(ROOT, build)
det(wall, a)
obj(build, wall)
case(coal, of)
amod(coal, glow)
nmod(wall, coal)
nummod(inch, six)
case(eight, to)
nmod(six, eight)
obl(build, inch)
case(front, in)
obl(build, front)
case(meat, of)
nmod(front, meat)
nsubj:pass(barbecue, that)
aux:pass(barbecue, be)
acl:relcl(meat, barbecue)
case(spit, on)
det(spit, a)
amod(spit, electric)
obl(barbecue, spit)
punct(build, .)
root(ROOT, make)
obj(make, use)
case(back, of)
det(back, the)
nmod(use, back)
case(barbecue, of)
det(barbecue, the)
nmod(back, barbecue)
cc(hood, or)
case(hood, of)
det(hood, the)
conj(barbecue, hood)
case(vegetable, for)
compound(vegetable, heating)
nmod(hood, vegetable)
punct(sauce, ,)
conj(vegetable, sauce)
cc(such, and)
conj(vegetable, such)
punct(make, .)
aux(fail, do)
advmod(fail, not)
root(ROOT, fail)
mark(shorten, to)
xcomp(fail, shorten)
compound(time, cooking)
obj(shorten, time)
case(use, by)
det(use, the)
obl(shorten, use)
case(foil, of)
compound(foil, aluminum)
nmod(use, foil)
acl(use, cut)
advmod(larger, slightly)
xcomp(cut, larger)
case(surface, than)
det(surface, the)
obl(larger, surface)
case(steak, of)
nmod(surface, steak)
cc(chop, and)
conj(steak, chop)
punct(fail, .)
nsubj(cover, sear)
case(side, on)
det(side, both)
nmod(sear, side)
advmod(cover, then)
root(ROOT, cover)
obj(cover, meat)
advmod(cover, loosely)
case(heat, with)
obl(cover, heat)
advcl(cover, reflect)
obj(reflect, foil)
case(result, for)
amod(result, juiciest)
obl(reflect, result)
punct(cover, .)
aux(avoid, do)
root(ROOT, avoid)
xcomp(avoid, puncture)
cc(cut, or)
conj(puncture, cut)
case(meat, into)
obl(cut, meat)
mark(test, to)
advcl(cut, test)
obj(test, they)
punct(avoid, .)
mark(doubtful, if)
advcl(cut, doubtful)
case(steak, about)
det(steak, a)
obl(doubtful, steak)
punct(cut, ,)
advmod(cut, boldly)
root(ROOT, cut)
obj(cut, it)
case(half, in)
obl(cut, half)
punct(cut, .)
mark(necessary, if)
root(ROOT, necessary)
mark(replace, to)
xcomp(necessary, replace)
det(half, both)
obj(replace, half)
case(grill, on)
nmod(half, grill)
punct(cut, ,)
compound(cut, sear)
conj(half, cut)
cc(time, and)
det(time, allot)
amod(time, extra)
conj(cut, time)
punct(necessary, .)
case(roast, for)
obl(insert, roast)
punct(insert, ,)
root(ROOT, insert)
compound(thermometer, meat)
obj(insert, thermometer)
advmod(insert, diagonally)
mark(rest, so)
nsubj(rest, it)
aux(rest, do)
advmod(rest, not)
advcl(insert, rest)
case(bone, on)
obl(rest, bone)
punct(insert, .)
advmod(make, also)
root(ROOT, make)
xcomp(make, sure)
nsubj(touch, thermometer)
aux(touch, do)
advmod(touch, not)
ccomp(sure, touch)
det(spit, the)
compound(spit, revolve)
obj(touch, spit)
cc(hit, or)
conj(touch, hit)
det(coal, the)
obj(hit, coal)
punct(make, .)
aux(practice, do)
advmod(practice, not)
root(ROOT, practice)
det(recipe, a)
amod(recipe, new)
obj(practice, recipe)
case(guest, on)
obl(practice, guest)
punct(practice, .)
root(ROOT, have)
det(run, a)
compound(run, test)
punct(run, -)
obj(have, run)
case(family, on)
det(family, the)
obl(have, family)
advmod(have, first)
punct(have, ,)
mark(sure, to)
cop(sure, be)
advcl(have, sure)
nsubj(right, timing)
cc(seasoning, and)
conj(timing, seasoning)
cop(right, be)
ccomp(sure, right)
punct(have, .)
aux(buy, do)
root(ROOT, buy)
obj(buy, meat)
det(day, the)
obl:tmod(buy, day)
cc(day, or)
det(day, the)
conj(day, day)
mark(intend, before)
nsubj(intend, you)
advcl(buy, intend)
mark(cook, to)
xcomp(intend, cook)
obj(cook, it)
punct(buy, .)
root(ROOT, keep)
obj(keep, it)
advmod(longer, no)
advmod(keep, longer)
case(hour, than)
nummod(hour, 36)
obl(longer, hour)
case(cooking, before)
obl(keep, cooking)
punct(keep, ,)
cc(keep, and)
conj(keep, keep)
obj(keep, it)
case(compartment, in)
det(compartment, the)
amod(compartment, coldest)
punct(non-freezing, ()
cc(non-freezing, but)
conj(coldest, non-freezing)
punct(non-freezing, ))
obl(keep, compartment)
case(refrigerator, of)
det(refrigerator, the)
nmod(compartment, refrigerator)
punct(keep, .)
aux(plan, do)
advmod(plan, not)
root(ROOT, plan)
obj(plan, meal)
nsubj(complicated, that)
cop(complicated, be)
advmod(complicated, too)
acl:relcl(meal, complicated)
punct(plan, .)
root(ROOT, limit)
obj(limit, yourself)
case(meat, to)
amod(meat, good)
obl(limit, meat)
cc(drink, and)
conj(meat, drink)
punct(limit, ,)
case(bread, with)
obl(limit, bread)
punct(salad, ,)
conj(bread, salad)
punct(corn, ,)
conj(bread, corn)
cc(potatoe, or)
conj(bread, potatoe)
case(accessory, as)
nmod(bread, accessory)
punct(limit, .)
root(ROOT, keep)
det(dessert, the)
obj(keep, dessert)
xcomp(keep, simple)
punct(keep, ;)
punct(keep, ;)
nsubj(do, fruit)
parataxis(keep, do)
advmod(do, nicely)
punct(keep, .)
root(ROOT, do)
det(work, whatever)
compound(work, kitchen)
obj(do, work)
punct(do, ,)
mark(fix, such)
fixed(such, as)
advcl(do, fix)
det(salad, a)
obj(fix, salad)
punct(fix, ,)
conj(fix, prepare)
compound(bread, garlic)
obj(prepare, bread)
punct(make, ,)
cc(make, or)
conj(fix, make)
det(sauce, a)
compound(sauce, marinade)
obj(make, sauce)
punct(sauce, ,)
advmod(make, ahead)
case(time, of)
obl(ahead, time)
punct(do, .)
mark(start, when)
nsubj(start, you)
advcl(stay, start)
det(performance, the)
amod(performance, outdoor)
obj(start, performance)
punct(stay, ,)
nsubj(stay, you)
aux(stay, can)
root(ROOT, stay)
advmod(stay, outdoors)
case(trip, without)
det(trip, a)
compound(trip, dozen)
compound(trip, running)
obl(stay, trip)
case(kitchen, into)
det(kitchen, the)
nmod(trip, kitchen)
punct(stay, . )
punct(go, ()
nsubj(go, this)
root(ROOT, go)
mark(get, for)
advcl(go, get)
det(tray, a)
compound(tray, drink)
obj(get, tray)
xcomp(get, ready)
punct(have, ,)
cc(have, and)
mark(have, for)
conj(go, have)
det(cooler, a)
amod(cooler, big)
amod(full, cooler)
obj(have, full)
case(ice, of)
obl(full, ice)
case(hand, on)
obl(long, hand)
advmod(have, long)
mark(begin, before)
det(party, the)
nsubj(begin, party)
advcl(long, begin)
punct(go, .)
punct(go, ))
aux(think, do)
advmod(think, not)
root(ROOT, think)
nsubj(have, you)
ccomp(think, have)
mark(start, to)
xcomp(have, start)
case(equipment, with)
det(equipment, the)
advmod(expensive, most)
amod(equipment, expensive)
obl(start, equipment)
case(world, in)
det(world, the)
nmod(equipment, world)
punct(think, .)
det(grill, the)
amod(grill, simplest)
nsubj(make, grill)
punct(type, ()
compound(type, pan)
appos(grill, type)
punct(type, ))
cc(hibachi, or)
amod(hibachi, inexpensive)
conj(grill, hibachi)
aux(make, can)
root(ROOT, make)
iobj(make, you)
det(chef, a)
xcomp(make, chef)
punct(make, .)
nsubj(need, you)
root(ROOT, need)
obj(need, tong)
mark(handle, to)
acl(tong, handle)
obj(handle, meat)
punct(need, ;)
punct(need, ;)
amod(fork, long)
parataxis(need, fork)
mark(turn, for)
acl(fork, turn)
obj(turn, potatoe)
cc(corn, and)
conj(potatoe, corn)
punct(fork, ;)
punct(foil, ;)
amod(foil, heavy)
parataxis(fork, foil)
case(hand, on)
nmod(foil, hand)
case(time, at)
det(time, all)
nmod(foil, time)
punct(need, .)
cc(lot, and)
root(ROOT, lot)
case(pad, of)
amod(pad, hot)
nmod(lot, pad)
punct(lot, !)
punct(lot, !)
aux(keep, do)
root(ROOT, keep)
det(grill, the)
obj(keep, grill)
xcomp(keep, high)
advmod(keep, enough)
case(fire, above)
det(fire, the)
obl(enough, fire)
mark(reach, so)
fixed(so, that)
mark(drip, when)
nsubj(drip, fat)
case(meat, from)
nmod(fat, meat)
advcl(reach, drip)
advmod(drip, down)
cc(flare, and)
conj(drip, flare)
compound:prt(flare, up)
punct(reach, ,)
nsubj(reach, flame)
aux(reach, can)
advmod(reach, not)
conj(keep, reach)
det(meat, the)
obj(reach, meat)
punct(keep, .)
aux(forget, do)
advmod(forget, not)
root(ROOT, forget)
mark(have, to)
xcomp(forget, have)
det(supply, a)
obj(have, supply)
case(plate, of)
compound(plate, Melamine)
nmod(supply, plate)
punct(bowl, ,)
conj(plate, bowl)
punct(cup, ,)
conj(plate, cup)
punct(saucer, ,)
conj(plate, saucer)
punct(platter, ,)
cc(platter, and)
conj(plate, platter)
case(use, for)
amod(use, outdoor)
obl(have, use)
punct(forget, .)
advcl(come, make)
case(plastic, of)
det(world, the)
nmod:poss(plastic, world)
case(world, 's)
amod(plastic, toughest)
amod(plastic, unbreakable)
obl(make, plastic)
punct(come, ,)
compound(dinnerware, Melamine)
nsubj(come, dinnerware)
root(ROOT, come)
case(pattern, in)
advmod(400, almost)
nummod(pattern, 400)
amod(pattern, different)
obl(come, pattern)
cc(dozen, and)
conj(pattern, dozen)
case(color, of)
nmod(dozen, color)
punct(come, .)
expl(be, there)
root(ROOT, be)
advmod(be, even)
nummod(set, one)
nsubj(be, set)
nsubj(have, that)
acl:relcl(set, have)
punct(barbecue, ``)
obj(have, barbecue)
punct(barbecue, '')
xcomp(have, write)
case(it, on)
obl(write, it)
punct(be, .)
parataxis(be, do)
case(tablecloth, without)
amod(tablecloth, fancy)
obl(do, tablecloth)
punct(be, .)
expl(cheaper, it)
cop(cheaper, be)
root(ROOT, cheaper)
mark(buy, to)
csubj(cheaper, buy)
compound(tex, Wall)
punct(tex, -)
obj(buy, tex)
cc(cover, and)
conj(buy, cover)
nmod:poss(table, you)
amod(table, outdoor)
obj(cover, table)
punct(cheaper, .)
cc(buy, or)
root(ROOT, buy)
det:predet(length, half)
det(length, a)
compound(length, dozen)
obj(buy, length)
case(pattern, of)
compound(pattern, oilcloth)
cc(change, and)
conj(oilcloth, change)
nmod(length, pattern)
case(kind, for)
amod(kind, different)
obl(buy, kind)
case(barbecue, of)
nmod(kind, barbecue)
punct(buy, .)
nsubj(cost, Oilcloth)
advmod(cost, only)
root(ROOT, cost)
advmod(cent, about)
nummod(cent, 79)
punct(cent, -)
obj(cost, cent)
det(yard, a)
obj(cost, yard)
case(best, for)
det(best, the)
advmod(best, very)
obl(cost, best)
punct(cost, .)
advmod(wear, tougher)
case(plastic, than)
obl(tougher, plastic)
punct(wear, ,)
nsubj(wear, it)
root(ROOT, wear)
advmod(wear, well)
punct(wear, .)
aux(forget, do)
advmod(forget, not)
root(ROOT, forget)
punct(forget, --)
mark(take, when)
nsubj(take, you)
advcl(indispensable, take)
case(hill, to)
det(hill, the)
obl(take, hill)
cc(beach, or)
det(beach, the)
conj(hill, beach)
punct(forget, --)
mark(indispensable, that)
nmod:poss(cooler, you)
nsubj(indispensable, cooler)
punct(cooler, ,)
obj(use, which)
nsubj(use, you)
aux(use, might)
aux(use, have)
acl:relcl(cooler, use)
case(wine, for)
obl(use, wine)
punct(wine, -)
cc(cool, or)
compound(cool, beer)
punct(cool, -)
conj(wine, cool)
case(terrace, on)
nmod:poss(terrace, you)
nmod(cool, terrace)
cc(yard, or)
compound(yard, back)
conj(terrace, yard)
punct(indispensable, ,)
cop(indispensable, be)
conj(forget, indispensable)
mark(carry, for)
advcl(indispensable, carry)
compound(refreshment, liquid)
obj(carry, refreshment)
punct(forget, .)
expl(be, there)
root(ROOT, be)
amod(variety, many)
nsubj(be, variety)
case(cooler, of)
nmod(variety, cooler)
cc(serve, and)
nsubj(serve, they)
conj(be, serve)
amod(purpose, many)
obj(serve, purpose)
punct(be, .)
case(they, with)
obl(carry, they)
punct(carry, ,)
nsubj(carry, you)
aux(carry, can)
root(ROOT, carry)
obj(carry, steak)
cc(hamburgers, and)
conj(steak, hamburgers)
case(temperature, at)
compound(temperature, refrigerator)
obl(carry, temperature)
punct(get, ,)
cc(get, and)
advmod(get, also)
conj(carry, get)
nmod:poss(food, you)
amod(food, freeze)
obj(get, food)
case(stew, for)
obl(get, stew)
cc(chowder, and)
conj(stew, chowder)
punct(marina, ,)
case(marina, to)
det(marina, the)
obl(get, marina)
cc(picnic, or)
conj(marina, picnic)
punct(marina, ,)
case(condition, in)
det(condition, a)
punct(1, -)
nummod(condition, 1)
nmod(marina, condition)
punct(carry, .)
aux(use, do)
root(ROOT, use)
compound(napkin, paper)
obj(use, napkin)
punct(use, ;)
punct(lot, ;)
parataxis(use, lot)
case(they, of)
nmod(lot, they)
punct(use, .)
mark(prepare, Except)
mark(prepare, when)
nsubj(prepare, you)
root(ROOT, prepare)
punct(do, ``)
xcomp(prepare, do)
obj(do, it)
obj(do, yourself)
punct(do, '')
compound(kebob, shish)
obj(do, kebob)
cc(roast, or)
det(roast, a)
compound(roast, lobster)
conj(kebob, roast)
punct(do, .)
advmod(want, then)
nsubj(want, you)
aux(want, will)
root(ROOT, want)
nmod:poss(towel, terry)
flat(terry, cloth)
obj(want, towel)
mark(mopping, for)
advcl(want, mopping)
compound:prt(mopping, up)
punct(want, .)
aux(think, do)
advmod(think, not)
root(ROOT, think)
compound(cooking, barbecue)
nsubj(sometimes, cooking)
cop(sometimes, be)
advmod(sometimes, just)
ccomp(think, sometimes)
punct(seasonal, ,)
cc(seasonal, or)
conj(sometimes, seasonal)
punct(think, .)
nsubj(round, it)
cop(round, be)
obl:npmod(round, year)
punct(round, -)
root(ROOT, round)
punct(everywhere, ,)
cc(everywhere, and)
conj(round, everywhere)
punct(round, .)
case(winter, in)
det(winter, the)
nmod(hibachi, winter)
punct(hibachi, ,)
root(ROOT, hibachi)
case(kitchen, in)
det(kitchen, the)
nmod(hibachi, kitchen)
cc(grill, or)
conj(kitchen, grill)
case(log, over)
det(log, the)
nmod(hibachi, log)
case(fireplace, of)
det(fireplace, the)
nmod(log, fireplace)
punct(hibachi, .)
advmod(use, even)
root(ROOT, use)
nmod:poss(grill, you)
amod(grill, portable)
amod(grill, electric)
cc(gas, or)
conj(electric, gas)
obj(use, grill)
case(winter, in)
det(winter, the)
obl(use, winter)
punct(use, ,)
advmod(use, inside)
punct(supper, .)
compound(supper, summertime)
parataxis(use, supper)
punct(supper, ,)
advmod(supper, outside)
punct(natural, ,)
cop(natural, be)
det(natural, a)
parataxis(use, natural)
punct(use, .)
nsubj(find, you)
aux(find, will)
root(ROOT, find)
punct(find, ,)
mark(perfect, once)
nmod:poss(technique, you)
nsubj:pass(perfect, technique)
aux:pass(perfect, be)
advcl(find, perfect)
punct(find, ,)
mark(cook, that)
nsubj(cook, you)
aux(cook, can)
ccomp(find, cook)
case(boat, on)
det(boat, a)
obl(cook, boat)
case(Bernz, with)
det(Bernz, a)
amod(Bernz, simple)
obl(cook, Bernz)
punct(Bernz, -)
case(matic, of)
punct(matic, -)
nmod(Bernz, matic)
punct(find, .)
aux(buy, do)
root(ROOT, buy)
det(mug, all)
punct(purpose, -)
compound(mug, purpose)
obj(buy, mug)
cc(cup, or)
conj(mug, cup)
punct(buy, .)
parataxis(buy, get)
compound(mug, copper)
cc(earthenware, or)
conj(copper, earthenware)
obj(get, mug)
nsubj(keep, that)
acl:relcl(mug, keep)
obj(keep, beer)
xcomp(keep, chill)
cc(soup, or)
conj(chill, soup)
xcomp(keep, hot)
punct(buy, .)
cop(sure, be)
root(ROOT, sure)
mark(get, to)
xcomp(sure, get)
det(few, a)
obl:npmod(more, few)
obj(get, more)
mark(need, than)
nsubj(need, you)
advcl(more, need)
punct(sure, .)
nsubj(discover, you)
aux(discover, will)
root(ROOT, discover)
nsubj(keep, you)
ccomp(discover, keep)
det(sauce, the)
obj(keep, sauce)
mark(bast, for)
advcl(keep, bast)
obj(bast, meat)
case(one, in)
obl(bast, one)
punct(use, ,)
conj(bast, use)
obj(use, six)
case(drink, for)
obl(use, drink)
punct(serve, ,)
conj(bast, serve)
obj(serve, soup)
cc(coffee, or)
conj(soup, coffee)
case(dozen, in)
det(dozen, another)
compound(dozen, half)
punct(dozen, -)
obl(serve, dozen)
punct(discover, --)
cc(need, and)
conj(serve, need)
nummod(more, one)
obj(need, more)
mark(mix, to)
advcl(need, mix)
det(dress, the)
compound(dress, salad)
obj(mix, dress)
punct(discover, .)
aux(forget, do)
advmod(forget, not)
root(ROOT, forget)
det(joy, the)
obj(forget, joy)
case(meal, of)
det(meal, a)
nmod(joy, meal)
case(road, on)
det(road, the)
nmod(meal, road)
punct(forget, .)
mark(travel, if)
nsubj(travel, you)
advcl(discover, travel)
case(U.S.A, over)
det(U.S.A, the)
amod(U.S.A, vast)
obl(travel, U.S.A)
punct(will, .)
nsubj(will, you)
aux(doubt, will)
punct(discover, ,)
det(doubt, no)
nsubj(discover, doubt)
punct(discover, ,)
root(ROOT, discover)
mark(business, that)
nsubj(business, feeding)
cop(business, be)
det(business, a)
amod(business, expensive)
ccomp(discover, business)
punct(decide, .)
parataxis(discover, decide)
case(beginning, in)
det(beginning, the)
obl(decide, beginning)
mark(put, to)
acl(beginning, put)
nmod:poss(equipment, you)
compound(equipment, barbecue)
obj(put, equipment)
case(work, to)
obl(put, work)
punct(discover, .)
nsubj(take, you)
aux(take, can)
root(ROOT, take)
obj(take, it)
case(you, with)
obl(take, you)
punct(take, . )
det(bag, a)
compound(bag, picnic)
root(ROOT, bag)
punct(grill, ,)
det(grill, a)
conj(bag, grill)
punct(cooler, ,)
det(cooler, a)
conj(bag, cooler)
case(drink, for)
amod(drink, soft)
nmod(cooler, drink)
cc(beer, and)
conj(drink, beer)
punct(food, ,)
cc(food, and)
case(food, for)
amod(food, freeze)
compound(food, convenience)
conj(drink, food)
punct(bag, . )
root(ROOT, eat)
case(restaurant, in)
det(restaurant, a)
obl(eat, restaurant)
cc(morning, or)
compound(morning, motel)
conj(restaurant, morning)
cc(evening, and)
conj(restaurant, evening)
punct(eat, ;)
punct(eat, ;)
cc(evening, or)
advmod(evening, just)
conj(restaurant, evening)
punct(eat, . )
root(ROOT, turn)
compound:prt(turn, off)
case(one, at)
det(one, any)
obl(turn, one)
case(area, of)
det(area, the)
amod(area, mark)
amod(area, picnic)
nmod(one, area)
punct(touring, ()
compound(company, gasoline)
nsubj(touring, company)
aux(touring, have)
parataxis(area, touring)
compound(bureaus, service)
obj(touring, bureaus)
nsubj(issue, that)
acl:relcl(bureaus, issue)
obj(issue, booklet)
case(park, on)
amod(park, national)
nmod(booklet, park)
mark(tell, to)
advcl(issue, tell)
obj(tell, you)
advmod(have, where)
nsubj(have, you)
ccomp(tell, have)
compound(facility, barbecue)
obj(have, facility)
punct(have, ))
cc(drink, and)
punct(drink, --)
case(drink, with)
amod(drink, soft)
obl(tell, drink)
acl(drink, cool)
case(morning, from)
obl(cool, morning)
advcl(cool, loading)
compound:prt(loading, up)
punct(hamburger, ,)
obj(loading, hamburger)
punct(bun, ,)
conj(hamburger, bun)
punct(array, ,)
det(array, a)
conj(hamburger, array)
case(relish, of)
nmod(array, relish)
punct(fruit, ,)
cc(fruit, and)
amod(fruit, fresh)
conj(relish, fruit)
punct(cheaper, --)
nmod:poss(lunch, you)
nsubj(cheaper, lunch)
cop(cheaper, be)
nummod(%, 75)
obl:npmod(cheaper, %)
parataxis(turn, cheaper)
case(restaurant, than)
case(restaurant, at)
det(restaurant, a)
obl(cheaper, restaurant)
punct(fun, ,)
cc(fun, and)
nummod(%, 100)
obl:npmod(more, %)
amod(fun, more)
conj(cheaper, fun)
punct(turn, .)
nsubj(need, you)
root(ROOT, need)
det(stove, a)
amod(stove, little)
obj(need, stove)
punct(pot, ,)
det(pot, a)
compound(pot, coffee)
conj(stove, pot)
cc(pot, and)
det(pot, a)
compound(pot, stew)
conj(stove, pot)
punct(stove, ;)
punct(stove, ;)
advmod(skillet, maybe)
det(skillet, a)
conj(stove, skillet)
punct(basket, ,)
det(basket, a)
conj(stove, basket)
case(essential, of)
nmod(basket, essential)
case(salt, like)
nmod(essential, salt)
punct(pepper, ,)
conj(salt, pepper)
punct(plate, ,)
conj(salt, plate)
punct(fork, ,)
conj(salt, fork)
punct(knife, ,)
conj(salt, knife)
cc(opener, and)
det(opener, a)
compound(opener, can)
conj(salt, opener)
punct(need, .)
mark(pull, as)
nsubj(pull, you)
advcl(visit, pull)
case(motel, out)
case(motel, of)
nmod:poss(motel, you)
obl(pull, motel)
cc(park, or)
amod(park, national)
conj(motel, park)
conj(motel, home)
punct(home, -)
case(night, for)
punct(night, -)
det(night, the)
punct(night, -)
nmod(home, night)
punct(visit, ,)
root(ROOT, visit)
det(market, a)
obj(visit, market)
cc(buy, and)
conj(visit, buy)
advmod(what, just)
obj(buy, what)
nsubj(need, you)
acl:relcl(what, need)
case(meal, for)
det(meal, the)
amod(meal, next)
obl(need, meal)
punct(load, .)
case(cent, for)
nummod(cent, 25)
punct(cent, -)
obl(load, cent)
parataxis(visit, load)
compound:prt(load, up)
det(cooler, the)
obj(load, cooler)
case(ice, with)
nmod(cooler, ice)
cc(keep, and)
conj(load, keep)
amod(pop, cool)
obj(keep, pop)
case(car, in)
det(car, the)
obl(keep, car)
punct(visit, .)
amod(spice, simple)
compound(dish, meat)
compound(spice, dish)
nsubj(fact, spice)
cop(fact, be)
det(fact, a)
root(ROOT, fact)
case(life, of)
nmod(fact, life)
case(U.S.A, in)
det(U.S.A, the)
nmod(fact, U.S.A)
punct(fact, .)
punct(fact, .)
nsubj(have, you)
advmod(have, only)
root(ROOT, have)
mark(think, to)
xcomp(have, think)
case(frank, of)
obl(think, frank)
cc(sausage, and)
conj(frank, sausage)
mark(know, to)
advcl(think, know)
obj(mean, what)
nsubj(mean, I)
ccomp(know, mean)
punct(have, .)
root(ROOT, go)
det(step, a)
obj(go, step)
advmod(go, further)
cc(list, and)
conj(go, list)
det:predet(basic, all)
det(basic, the)
amod(basic, wonderful)
compound(basic, barbecue)
obj(list, basic)
punct(basic, --)
appos(basic, cervelat)
punct(salami, ,)
conj(cervelat, salami)
punct(sausage, ,)
compound(sausage, Vienna)
conj(cervelat, sausage)
punct(mettwurst, ,)
conj(cervelat, mettwurst)
punct(bratwurst, ,)
conj(cervelat, bratwurst)
punct(bockwurst, ,)
conj(cervelat, bockwurst)
punct(knackwurst, ,)
conj(cervelat, knackwurst)
punct(Bologna, ,)
conj(cervelat, Bologna)
punct(pepperoni, ,)
conj(cervelat, pepperoni)
punct(blutwurst, ,)
conj(cervelat, blutwurst)
punct(go, --)
cc(have, and)
nsubj(have, you)
conj(go, have)
det(list, a)
amod(list, long)
obj(have, list)
case(specialty, of)
amod(specialty, easy)
nmod(list, specialty)
punct(go, .)
advcl(make, threaded)
case(skewer, on)
det(skewer, a)
obl(threaded, skewer)
case(potatoe, with)
amod(potatoe, new)
amod(potatoe, boil)
nmod(skewer, potatoe)
punct(bit, ,)
det(bit, a)
parataxis(threaded, bit)
case(pepper, of)
amod(pepper, green)
nmod(bit, pepper)
punct(pepper, ,)
det(mushroom, a)
amod(mushroom, fresh)
amod(mushroom, white)
appos(pepper, mushroom)
punct(bit, --)
det(one, any)
nsubj(make, one)
case(meat, of)
det(meat, these)
amod(meat, spiced)
nmod(one, meat)
root(ROOT, make)
det(man, a)
obj(make, man)
det(cook, a)
appos(man, cook)
punct(meal, ,)
cc(meal, and)
det(meal, a)
conj(man, meal)
det(feast, a)
nmod:npmod(meal, feast)
punct(make, .)
discourse(favorite, sure)
punct(favorite, ,)
case(most, for)
det(most, the)
obl(favorite, most)
case(we, of)
nmod(most, we)
punct(favorite, ,)
det(frankfurter, a)
nsubj(favorite, frankfurter)
cop(favorite, be)
det(favorite, the)
root(ROOT, favorite)
punct(favorite, . )
det(story, a)
nsubj(go, story)
root(ROOT, go)
mark(serve, that)
det(herr, a)
amod(herr, certain)
nsubj(serve, herr)
flat(herr, Feuchtwanger)
case(St., of)
nmod(herr, St.)
flat(St., Louis)
punct(St., ,)
case(1883, around)
obl(serve, 1883)
ccomp(go, serve)
nmod:poss(sausage, he)
obj(serve, sausage)
punct(grill, ()
amod(sausage, grill)
punct(grill, ))
cc(mustard, and)
conj(sausage, mustard)
case(customer, to)
nmod:poss(customer, he)
amod(customer, fancy)
nmod(mustard, customer)
punct(go, .)
advmod(issue, so)
mark(soil, that)
nmod:poss(customer, he)
nsubj(soil, customer)
aux(soil, should)
advmod(soil, not)
advcl(issue, soil)
nmod:poss(hand, they)
obj(soil, hand)
punct(issue, ,)
nsubj(issue, Feuchtwanger)
root(ROOT, issue)
amod(glove, white)
obj(issue, glove)
punct(issue, .)
obj(issue, Discovery)
mark(make, that)
det(glove, the)
nsubj(leave, glove)
advmod(leave, frequently)
ccomp(make, leave)
case(customer, with)
det(customer, the)
obl(leave, customer)
conj(issue, make)
det(peddler, the)
amod(peddler, wise)
obj(make, peddler)
case(meat, of)
amod(meat, spiced)
compound(meat, sausage)
punct(meat, -)
nmod(peddler, meat)
acl(peddler, come)
case(compromise, upon)
det(compromise, a)
obl(come, compromise)
punct(issue, .)
nsubj(have, he)
root(ROOT, have)
det(bakery, a)
obj(have, bakery)
ccomp(have, make)
obj(make, bun)
xcomp(make, size)
mark(fit, to)
advcl(size, fit)
nmod:poss(frank, he)
obj(fit, frank)
punct(have, .)
obl:npmod(later, Years)
advmod(accept, later)
punct(accept, ,)
nsubj:pass(accept, frank)
punct(frank, -)
case(bun, in)
punct(bun, -)
nmod(frank, bun)
aux:pass(accept, be)
parataxis(have, accept)
case(first, as)
det(first, the)
punct(first, ``)
obl(accept, first)
mark(go, to)
advcl(first, go)
punct(go, '')
case(Grounds, at)
det(Grounds, the)
compound(York, New)
compound(Grounds, York)
compound(Grounds, Polo)
obl(go, Grounds)
punct(have, .)
det(nation, the)
nmod:poss(number, nation)
case(nation, 's)
nsubj(frankfurter, number)
nummod(treat, one)
compound(treat, picnic)
nsubj(frankfurter, treat)
cop(frankfurter, be)
det(frankfurter, the)
amod(frankfurter, skinless)
root(ROOT, frankfurter)
punct(frankfurter, --)
acl(frankfurter, toast)
case(bonfire, over)
det(bonfire, a)
obl(toast, bonfire)
case(beach, on)
det(beach, the)
nmod(bonfire, beach)
cc(broil, or)
punct(broil, ,)
advmod(sedately, more)
advmod(broil, sedately)
punct(charcoal, ,)
nsubj(broil, charcoal)
conj(frankfurter, broil)
case(grill, on)
det(grill, a)
amod(grill, portable)
obl(broil, grill)
punct(frankfurter, .)
det(way, either)
obl:tmod(hard, way)
expl(hard, it)
cop(hard, be)
root(ROOT, hard)
mark(beat, to)
csubj(hard, beat)
case(flavor, in)
obl(beat, flavor)
cc(ease, as)
fixed(as, well)
fixed(as, as)
obl(beat, ease)
case(preparation, of)
nmod(ease, preparation)
punct(hard, .)
mark(make, to)
advcl(remember, make)
det(frank, the)
amod(frank, picnic)
obj(make, frank)
xcomp(make, come)
xcomp(come, close)
case(perfection, to)
obl(close, perfection)
punct(remember, ,)
root(ROOT, remember)
det(tip, these)
obj(remember, tip)
punct(remember, :)
punct(remember, --)
root(ROOT, score)
det(frankfurter, each)
obj(score, frankfurter)
case(place, in)
nummod(place, four)
cc(five, or)
conj(four, five)
obl(score, place)
case(third, about)
det(third, a)
obl(score, third)
case(way, of)
det(way, the)
nmod(third, way)
advmod(way, through)
punct(score, .)
nsubj(permit, this)
root(ROOT, permit)
det(juice, the)
obj(permit, juice)
mark(permeate, to)
acl(juice, permeate)
det(meat, the)
obj(permeate, meat)
case(cooking, during)
obl(permeate, cooking)
punct(permit, .)
punct(permit, --)
nsubj(vital, relishes)
cop(vital, be)
advmod(vital, as)
root(ROOT, vital)
case(success, to)
det(success, the)
obl(vital, success)
case(frank, of)
det(frank, the)
nmod(success, frank)
mark(bun, as)
cop(bun, be)
advcl(vital, bun)
punct(vital, .)
parataxis(vital, bring)
compound:prt(bring, along)
det(one, the)
amod(one, conventional)
obj(bring, one)
punct(one, --)
appos(one, catsup)
punct(relish, ,)
compound(relish, pickle)
conj(catsup, relish)
punct(mustard, ,)
conj(catsup, mustard)
punct(mayonnaise, ,)
conj(catsup, mayonnaise)
punct(catsup, --)
cc(extras, plus)
det(extras, a)
amod(extras, few)
conj(catsup, extras)
punct(extras, ,)
case(sauce, such)
fixed(such, as)
amod(sauce, tangy)
compound(sauce, barbecue)
nmod(extras, sauce)
punct(cheese, ,)
compound(cheese, chive)
compound(cheese, cream)
conj(sauce, cheese)
punct(radish, ,)
cc(radish, or)
compound(radish, horse)
punct(radish, -)
conj(sauce, radish)
case(one, for)
det(one, the)
amod(one, brave)
nmod(radish, one)
case(crowd, in)
det(crowd, the)
nmod(one, crowd)
punct(vital, .)
punct(vital, --)
csubj(permit, use)
det(grill, a)
amod(grill, portable)
obj(use, grill)
root(ROOT, permit)
obj(permit, you)
mark(toast, to)
xcomp(permit, toast)
det(bun, the)
obj(toast, bun)
punct(permit, ,)
advmod(toast, too)
punct(permit, .)
parataxis(permit, watch)
advmod(watch, closely)
mark(browning, while)
advcl(watch, browning)
obj(browning, they)
punct(watch, ,)
mark(take, as)
nsubj(take, it)
aux(take, do)
advmod(take, not)
advcl(watch, take)
advmod(take, long)
punct(permit, .)
punct(permit, --)
det(flavor, a)
amod(flavor, unusual)
nsubj:pass(achieve, flavor)
aux(achieve, can)
aux:pass(achieve, be)
root(ROOT, achieve)
mark(marinate, by)
advcl(achieve, marinate)
det(frank, the)
obj(marinate, frank)
case(dress, in)
amod(dress, french)
obl(marinate, dress)
cc(mixture, or)
det(mixture, a)
conj(frank, mixture)
case(honey, of)
nmod(mixture, honey)
punct(juice, ,)
compound(juice, lemon)
conj(honey, juice)
cc(sugar, and)
amod(sugar, brown)
conj(honey, sugar)
case(picnic, prior)
fixed(prior, to)
det(picnic, the)
obl(marinate, picnic)
punct(achieve, .)
root(ROOT, Broil)
cc(toast, or)
conj(Broil, toast)
case(usual, as)
nmod(Broil, usual)
punct(Broil, .)
root(ROOT, contrary)
case(opinion, to)
amod(opinion, popular)
obl(contrary, opinion)
punct(contrary, ,)
punct(contrary, ``)
det(mode, a)
compound(mode, la)
nsubj(mean, mode)
punct(mode, '')
aux(mean, do)
advmod(mean, not)
root(ROOT, mean)
punct(cream, ``)
case(cream, with)
compound(cream, ice)
obl(mean, cream)
punct(cream, '')
punct(mean, --)
nsubj(mean, it)
advmod(mean, just)
parataxis(mean, mean)
punct(mean, ,)
case(style, in)
det(style, the)
amod(style, latest)
obl(mean, style)
punct(mean, .)
root(ROOT, here)
cop(here, be)
det(couple, a)
nsubj(here, couple)
case(way, of)
det(way, the)
amod(way, latest)
punct(way, ,)
advmod(style, highly)
amod(way, style)
nmod(couple, way)
mark(fix, to)
acl(way, fix)
amod(frank, skinless)
obj(fix, frank)
case(yard, in)
nmod:poss(yard, you)
amod(yard, own)
compound(yard, back)
obl(fix, yard)
punct(here, !)
punct(here, !)
nsubj(have, you)
aux(have, will)
root(ROOT, have)
det(neighbor, the)
nmod:poss(eye, neighbor)
case(neighbor, 's)
obj(have, eye)
xcomp(have, pop)
cc(mouth, as)
fixed(as, well)
fixed(as, as)
nmod:poss(mouth, they)
nsubj(water, mouth)
conj(pop, water)
punct(have, !)
punct(have, !)
compound(barbecue, Jiffy)
root(ROOT, barbecue)
nummod(barbecue, 1)
compound(sauce, cup)
compound(sauce, chili)
list(barbecue, sauce)
compound(3, 1)
case(3, /)
nummod(water, 3)
compound(water, cup)
list(barbecue, water)
nummod(water, 1)
list(barbecue, tablespoon)
compound(sauce, barbecue)
list(barbecue, sauce)
nummod(teaspoon, 2)
list(barbecue, teaspoon)
list(barbecue, prepare)
list(barbecue, mustard)
nummod(pound, 1)
case(2, /)
nummod(pound, 2)
list(barbecue, pound)
list(barbecue, chip)
punct(ham, ,)
amod(ham, spiced)
list(barbecue, ham)
nummod(bun, 6)
compound(bun, sandwich)
list(barbecue, bun)
punct(bun, ,)
amod(bun, heat)
punct(Combine, .)
parataxis(barbecue, Combine)
amod(ingredient, first)
nummod(ingredient, 4)
obj(Combine, ingredient)
case(saucepan, in)
nmod(ingredient, saucepan)
punct(Combine, ;)
punct(heat, ;)
nsubj(thoroughly, heat)
advmod(Combine, thoroughly)
punct(Combine, .)
root(ROOT, add)
obj(add, ham)
punct(add, ;)
punct(heat, ;)
obj(add, heat)
punct(add, .)
root(ROOT, serve)
case(bun, on)
obl(serve, bun)
punct(serve, .)
root(ROOT, make)
nummod(barbecue, 6)
obj(make, barbecue)
punct(make, .)
amod(frank, hot)
compound(frank, hibachi)
nsubj(hear, frank)
nsubj(hear, you)
aux(hear, will)
advmod(hear, never)
root(ROOT, hear)
punct(sayonara, ``)
obj(hear, sayonara)
punct(sayonara, '')
punct(sayonara, ,)
det(word, the)
amod(word, japanese)
appos(sayonara, word)
case(goodbye, for)
nmod(word, goodbye)
punct(hear, ,)
case(guest, from)
nmod:poss(guest, you)
obl(hear, guest)
mark(give, when)
nsubj(give, you)
advcl(hear, give)
det(party, a)
compound(party, hibachi)
obj(give, party)
punct(hear, .)
det(fun, the)
nsubj(keep, fun)
mark(toast, of)
acl(fun, toast)
nmod:poss(sausage, they)
amod(sausage, own)
obj(toast, sausage)
case(burner, over)
det(burner, the)
amod(burner, small)
amod(burner, Oriental)
compound(burner, charcoal)
obl(toast, burner)
cc(dip, and)
conj(toast, dip)
obj(dip, they)
case(sauce, in)
amod(sauce, tasty)
obl(dip, sauce)
aux(keep, will)
root(ROOT, keep)
nmod:poss(group, you)
obj(keep, group)
xcomp(keep, busy)
punct(keep, --)
parataxis(keep, try)
obj(try, it)
cc(see, and)
conj(try, see)
punct(keep, !)
punct(keep, !)
amod(frankfurter, can)
compound(frankfurter, cocktail)
root(ROOT, frankfurter)
amod(sour, sweet)
punct(sour, -)
amod(sauce, sour)
list(frankfurter, sauce)
nummod(onion, 1)
amod(onion, large)
list(frankfurter, onion)
punct(frankfurter, ,)
amod(onion, chop)
amod(tablespoon, fine)
nummod(tablespoon, 2)
list(frankfurter, tablespoon)
compound(oil, salad)
list(frankfurter, oil)
nummod(oz, 1)
nummod(oz, 8)
punct(oz, -)
list(frankfurter, oz)
punct(frankfurter, .)
aux(cup, can)
amod(pineapple, crush)
root(ROOT, pineapple)
cc(2, and)
compound(2, 1)
case(2, /)
nummod(cup, 2)
conj(pineapple, cup)
case(juice, of)
det(juice, the)
nmod(cup, juice)
compound(4, 1)
case(4, /)
nmod(juice, 4)
compound(sugar, cup)
amod(sugar, brown)
compound(tablespoon, sugar)
nummod(tablespoon, 2)
conj(cup, tablespoon)
appos(sugar, vinegar)
nummod(tablespoon, 1)
conj(cup, tablespoon)
amod(mustard, prepare)
compound(tablespoon, mustard)
nummod(tablespoon, 1)
compound(chunk, tablespoon)
compound(chunk, Worcestershire)
compound(chunk, sauce)
compound(chunk, pineapple)
appos(cream, chunk)
punct(chunk, .)
compound(cream, Mustard)
conj(cup, cream)
nummod(tablespoon, 2)
appos(cream, tablespoon)
amod(Water, dry)
compound(Water, mustard)
appos(cream, Water)
nummod(cup, 1)
case(2, /)
nummod(cup, 2)
compound(cream, cup)
amod(cream, heavy)
appos(Water, cream)
punct(Paprika, ,)
amod(Paprika, whip)
compound(Paprika, Salt)
list(cream, Paprika)
punct(frank, .)
compound(can, Spear)
amod(frank, can)
compound(frank, cocktail)
parataxis(cream, frank)
case(pick, with)
nmod(frank, pick)
punct(frank, .)
advmod(chunk, also)
compound(pineapple, spear)
compound(chunk, pineapple)
root(ROOT, chunk)
cc(place, and)
conj(chunk, place)
case(bowl, in)
amod(bowl, separate)
nmod(chunk, bowl)
punct(chunk, .)
root(ROOT, make)
obj(make, sauce)
advmod(make, ahead)
punct(make, .)
amod(sour, Sweet)
punct(sour, -)
amod(sauce, sour)
nsubj:pass(keep, sauce)
aux(keep, can)
aux:pass(keep, be)
parataxis(make, keep)
xcomp(keep, warm)
case(dish, over)
det(dish, a)
amod(hibachi, second)
compound(dish, hibachi)
cc(chaf, or)
conj(hibachi, chaf)
obl(warm, dish)
mark(reach, while)
nsubj(reach, charcoal)
case(broiler, in)
nmod(charcoal, broiler)
aux(reach, be)
advcl(keep, reach)
amod(stage, glow)
compound(stage, coal)
obj(reach, stage)
punct(cream, .)
compound(cream, Mustard)
obj(reach, cream)
punct(cream, ,)
acl(cream, use)
case(dip, as)
amod(dip, alternate)
obl(use, dip)
case(frank, for)
nmod(dip, frank)
cc(tidbit, and)
compound(tidbit, pineapple)
conj(frank, tidbit)
punct(taste, ,)
conj(frank, taste)
advmod(taste, best)
mark(serve, when)
advcl(taste, serve)
case(temperature, at)
compound(temperature, room)
obl(serve, temperature)
punct(make, .)
case(sauce, for)
amod(sour, sweet)
punct(sour, -)
amod(sauce, sour)
obl(cook, sauce)
punct(cook, ,)
root(ROOT, cook)
obj(cook, onion)
case(oil, in)
obl(cook, oil)
case(soft, until)
obl(cook, soft)
punct(cook, .)
root(ROOT, add)
amod(ingredient, remain)
obj(add, ingredient)
cc(bring, and)
conj(add, bring)
case(boil, to)
det(boil, a)
obl(bring, boil)
punct(add, .)
root(ROOT, Simmer)
advmod(10, about)
nummod(minute, 10)
obj(Simmer, minute)
punct(keep, ,)
cc(keep, and)
conj(Simmer, keep)
xcomp(keep, warm)
mark(serve, for)
advcl(warm, serve)
punct(Simmer, .)
mark(prepare, to)
advcl(blend, prepare)
compound(cream, mustard)
obj(prepare, cream)
punct(blend, ,)
root(ROOT, blend)
obj(blend, mustard)
case(water, with)
amod(water, enough)
obl(blend, water)
mark(make, to)
advcl(blend, make)
det(paste, a)
amod(paste, thin)
obj(make, paste)
punct(blend, .)
root(ROOT, fold)
case(cream, into)
amod(cream, whip)
obl(fold, cream)
cc(add, and)
conj(fold, add)
det(dash, a)
obj(add, dash)
case(salt, of)
nmod(dash, salt)
cc(sprinkling, and)
conj(salt, sprinkling)
case(paprika, of)
nmod(sprinkling, paprika)
punct(Trim, .)
compound(frank, Trim)
punct(Trim, -)
nmod:poss(frank, you)
punct(frank, -)
amod(frank, own)
punct(frank, -)
compound(picnic, frank)
det(picnic, a)
compound(yard, back)
punct(yard, -)
compound(picnic, yard)
appos(dash, picnic)
case(frankfurter, with)
amod(frankfurter, grill)
nmod(picnic, frankfurter)
cc(selection, and)
det(selection, a)
conj(picnic, selection)
case(trimming, of)
compound(trimming, frankfurter)
nmod(selection, trimming)
cop(way, be)
det(way, a)
amod(way, fine)
acl:relcl(selection, way)
mark(entertain, to)
acl(way, entertain)
obj(entertain, guest)
det(summer, this)
obl:tmod(entertain, summer)
punct(fold, .)
cop(sure, be)
root(ROOT, sure)
mark(have, to)
xcomp(sure, have)
obj(have, plenty)
case(frankfurter, of)
nmod(plenty, frankfurter)
cc(bun, and)
conj(frankfurter, bun)
case(hand, on)
obl(have, hand)
punct(sure, .)
det(topping, some)
amod(topping, tasty)
compound(topping, frank)
nsubj(carne, topping)
cop(carne, be)
compound(carne, chili)
compound(carne, con)
root(ROOT, carne)
punct(sauce, ,)
compound(Island, coney)
compound(sauce, Island)
conj(carne, sauce)
cc(sauerkraut, and)
amod(sauerkraut, savory)
conj(carne, sauerkraut)
punct(carne, .)
root(ROOT, serve)
det(chili, the)
obj(serve, chili)
cc(kraut, and)
conj(chili, kraut)
amod(chili, hot)
case(frank, with)
det(frank, the)
obl(hot, frank)
punct(serve, .)
root(ROOT, here)
cop(here, be)
nsubj(here, suggestion)
case(trimming, for)
det(trimming, the)
compound(trimming, frankfurter)
nmod(suggestion, trimming)
punct(trimming, :)
nummod(carne, 1)
punct(1, .)
compound(con, chili)
compound(carne, con)
appos(suggestion, carne)
punct(carne, :)
parataxis(here, use)
amod(carne, can)
compound(carne, chili)
compound(carne, con)
obj(use, carne)
punct(here, . )
nummod(sauce, 2)
punct(2, .)
compound(Island, coney)
compound(sauce, Island)
root(ROOT, sauce)
punct(sauce, :)
advmod(chop, finely)
parataxis(sauce, chop)
amod(onion, several)
obj(chop, onion)
cc(add, and)
conj(chop, add)
amod(catsup, enough)
obj(add, catsup)
mark(moisten, to)
advcl(add, moisten)
advmod(moisten, well)
punct(chop, ;)
punct(chop, ;)
parataxis(chop, add)
amod(mustard, prepare)
obj(add, mustard)
mark(suit, to)
advcl(add, suit)
obj(suit, taste)
punct(sauce, . )
nummod(add, 3)
punct(3, .)
amod(sauerkraut, savory)
root(ROOT, sauerkraut)
punct(sauerkraut, :)
parataxis(sauerkraut, add)
amod(tablespoon, several)
obj(add, tablespoon)
case(sugar, of)
amod(sugar, brown)
nmod(tablespoon, sugar)
case(can, to)
det(can, a)
obl(add, can)
case(sauerkraut, of)
nmod(can, sauerkraut)
punct(sauerkraut, .)
root(ROOT, add)
det(seed, a)
amod(seed, few)
compound(seed, caraway)
obj(add, seed)
punct(add, ,)
advmod(add, too)
punct(add, ,)
mark(like, if)
nsubj(like, you)
aux(like, would)
advcl(add, like)
punct(add, .)
amod(frankfurter, barbecue)
root(ROOT, frankfurter)
nummod(frankfurter, 1)
case(2, /)
nummod(cup, 2)
list(frankfurter, cup)
amod(celery, mince)
list(frankfurter, celery)
compound(4, 1)
punct(4, /)
nummod(celery, 4)
compound(celery, cup)
compound(celery, mince)
list(frankfurter, onion)
compound(2, 1)
case(2, /)
nummod(onion, 2)
compound(ketchup, cup)
compound(ketchup, tomato)
list(frankfurter, ketchup)
nummod(ketchup, 1)
case(2, /)
nummod(water, 2)
compound(water, cup)
list(frankfurter, water)
compound(4, 1)
punct(4, /)
nummod(vinegar, 4)
compound(vinegar, cup)
list(frankfurter, vinegar)
nummod(tablespoon, 2)
list(frankfurter, tablespoon)
amod(sugar, brown)
compound(tablespoon, sugar)
nummod(tablespoon, 1)
list(frankfurter, tablespoon)
compound(sauce, Worcestershire)
list(frankfurter, sauce)
nummod(tablespoon, 1)
compound(mustard, tablespoon)
amod(mustard, prepare)
list(frankfurter, mustard)
nummod(teaspoon, 1)
case(2, /)
nummod(teaspoon, 2)
compound(frankfurter, teaspoon)
compound(frankfurter, salt)
nummod(frankfurter, 8)
list(frankfurter, frankfurter)
punct(Combine, .)
parataxis(frankfurter, Combine)
amod(ingredient, first)
nummod(ingredient, 9)
obj(Combine, ingredient)
case(skillet, in)
nmod(ingredient, skillet)
punct(Combine, .)
root(ROOT, Simmer)
nummod(minute, 15)
obj(Simmer, minute)
punct(Simmer, .)
compound(frankfurter, prick)
root(ROOT, frankfurter)
case(fork, with)
nmod(frankfurter, fork)
punct(frankfurter, ;)
punct(frankfurter, ;)
parataxis(frankfurter, place)
case(sauce, in)
nmod(place, sauce)
punct(frankfurter, .)
root(ROOT, cover)
punct(cover, ;)
punct(cover, ;)
parataxis(cover, simmer)
nummod(minute, 15)
parataxis(cover, minute)
punct(cover, ,)
conj(simmer, stir)
advmod(stir, occasionally)
punct(cover, ,)
mark(consistency, until)
nsubj(consistency, sauce)
cop(consistency, be)
case(consistency, of)
amod(consistency, desire)
advcl(stir, consistency)
punct(cover, .)
root(ROOT, serve)
case(bun, in)
compound(bun, frankfurter)
obl(serve, bun)
cc(dish, or)
case(dish, as)
det(dish, a)
compound(dish, meat)
conj(bun, dish)
punct(serve, .)
conj(serve, make)
nummod(sandwich, 8)
obj(make, sandwich)
cc(serving, or)
conj(sandwich, 4)
conj(sandwich, serving)
punct(serve, .)
root(ROOT, pretend)
nsubj(make, ham)
xcomp(pretend, make)
compound(cross, criss)
punct(cross, -)
compound(gash, cross)
obj(make, gash)
case(side, on)
nummod(side, one)
obl(make, side)
case(frankfurter, of)
amod(frankfurter, skinless)
nmod(side, frankfurter)
punct(pretend, .)
root(ROOT, stick)
nummod(clove, 4)
cc(5, or)
conj(4, 5)
obj(stick, clove)
case(frank, in)
det(frank, each)
obl(stick, frank)
punct(stick, ,)
compound(fashion, ham)
obj(stick, fashion)
punct(stick, .)
root(ROOT, make)
det(paste, a)
obj(make, paste)
case(sugar, of)
amod(sugar, brown)
nmod(paste, sugar)
cc(mustard, and)
conj(sugar, mustard)
cc(spread, and)
conj(make, spread)
advmod(spread, lightly)
case(surface, over)
amod(surface, score)
obl(spread, surface)
punct(make, .)
mark(desire, if)
advcl(sprinkle, desire)
punct(sprinkle, ,)
root(ROOT, sprinkle)
case(pineapple, with)
nummod(teaspoon, 1)
obl(sprinkle, teaspoon)
amod(pineapple, drain)
amod(pineapple, crush)
obl(sprinkle, pineapple)
punct(sprinkle, .)
root(ROOT, place)
case(rectangle, on)
obl(place, rectangle)
case(foil, of)
compound(edge, foil)
cc(edge, and)
conj(foil, pinch)
conj(rectangle, edge)
advmod(tightly, together)
advmod(place, tightly)
punct(place, .)
root(ROOT, Roast)
case(grill, on)
nmod(Roast, grill)
case(coal, over)
nmod(Roast, coal)
nummod(minute, 15)
case(20, -)
nmod(15, 20)
parataxis(Roast, minute)
punct(Roast, . )
nsubj(twist, Frankfurter)
root(ROOT, twist)
compound(mix, Blend)
nummod(cup, 2)
compound(mix, cup)
compound(mix, biscuit)
obj(twist, mix)
case(milk, with)
nummod(milk, 2)
case(3, /)
nmod(2, 3)
compound(milk, cup)
nmod(mix, milk)
mark(make, to)
advcl(twist, make)
det(dough, a)
amod(dough, soft)
obj(make, dough)
punct(twist, .)
parataxis(twist, knead)
case(board, on)
advmod(flour, lightly)
amod(board, flour)
obl(knead, board)
cc(roll, and)
conj(knead, roll)
compound:prt(roll, out)
mark(form, to)
advcl(roll, form)
det(rectangle, a)
compound(inch, Af)
punct(inch, -)
compound(rectangle, inch)
obj(form, rectangle)
punct(twist, .)
compound(dough, spread)
root(ROOT, dough)
case(mixture, with)
det(mixture, a)
nmod(dough, mixture)
case(tablespoon, of)
nummod(tablespoon, 3)
nmod(mixture, tablespoon)
compound(sauce, chili)
nmod(mixture, sauce)
punct(horse, ,)
nummod(horse, 1)
compound(horse, teaspoon)
list(dough, horse)
punct(horse, -)
list(dough, radish)
cc(mustard, and)
nummod(teaspoon, 2)
compound(mustard, teaspoon)
list(dough, mustard)
punct(dough, .)
root(ROOT, cut)
obj(cut, dough)
advmod(cut, carefully)
case(strip, into)
nummod(strip, 12)
obl(cut, strip)
punct(cut, ,)
advmod(4, about)
nummod(inch, 3)
case(4, /)
nmod(3, 4)
obl:tmod(cut, inch)
case(foot, by)
det(foot, a)
obl:npmod(long, foot)
advmod(inch, long)
punct(cut, .)
parataxis(cut, twist)
nummod(strip, one)
obj(twist, strip)
advmod(twist, diagonally)
case(frankfurter, around)
det(frankfurter, each)
amod(frankfurter, skinless)
obl(twist, frankfurter)
punct(pinch, ,)
conj(twist, pinch)
obj(pinch, dough)
case(end, at)
obl(pinch, end)
mark(seal, to)
advcl(pinch, seal)
obj(seal, it)
punct(twist, .)
compound(frankfurter, Brush)
nsubj(twist, frankfurter)
parataxis(cut, twist)
case(butter, with)
advmod(2, about)
nummod(cup, 1)
case(2, /)
nmod(1, 2)
compound(butter, cup)
amod(butter, melt)
obl(twist, butter)
cc(toast, and)
conj(butter, toast)
advmod(coal, slowly)
case(coal, over)
amod(coal, glow)
nmod(butter, coal)
case(dough, until)
nmod(coal, dough)
cop(brown, be)
advmod(brown, golden)
conj(twist, brown)
punct(cut, .)
root(ROOT, Serves)
nummod(Serves, 12)
punct(patty, .)
compound(patty, Hamburger)
obj(Serves, patty)
case(nut, with)
nmod(patty, nut)
nummod(pound, 1)
compound(beef, pound)
compound(beef, ground)
conj(patty, beef)
nummod(teaspoon, 2)
conj(patty, teaspoon)
amod(Dash, grate)
compound(Dash, onion)
conj(patty, Dash)
case(pepper, of)
nmod(Dash, pepper)
nummod(teaspoon, 1)
case(2, /)
nummod(teaspoon, 2)
compound(salt, teaspoon)
conj(patty, salt)
nummod(cup, 1)
case(2, /)
nummod(cup, 2)
compound(walnut, cup)
amod(walnut, chop)
conj(patty, walnut)
compound(4, 1)
case(4, /)
nummod(cup, 4)
compound(bourbon, cup)
compound(bourbon, ice)
amod(bourbon, cold)
compound(ingredient, bourbon)
punct(bourbon, .)
compound(ingredient, Combine)
conj(patty, ingredient)
punct(ingredient, ;)
punct(form, ;)
parataxis(patty, form)
case(patty, into)
obl(form, patty)
cc(barbecue, and)
conj(patty, barbecue)
nummod(minute, 5)
conj(patty, minute)
case(side, on)
det(side, each)
obl(form, side)
punct(form, .)
root(ROOT, note)
punct(note, :)
nsubj:pass(write, direction)
aux:pass(write, be)
appos(note, write)
case(those, for)
obl(write, those)
nsubj(have, who)
aux(have, have)
acl:relcl(those, have)
amod(experience, previous)
obj(have, experience)
mark(make, in)
advcl(have, make)
obj(make, pottery)
punct(note, .)
nsubj:pass(give, instruction)
mark(prepare, for)
acl(instruction, prepare)
obj(prepare, clay)
punct(drying, ,)
conj(clay, drying)
punct(glaze, ,)
conj(clay, glaze)
cc(fire, and)
conj(clay, fire)
aux:pass(give, be)
advmod(give, not)
root(ROOT, give)
punct(give, .)
root(ROOT, equipment)
punct(equipment, :)
amod(equipment, Basic)
compound(studio, pottery)
compound(equipment, studio)
appos(equipment, equipment)
punct(equipment, .)
compound(butter, Wooden)
compound(mold, butter)
conj(equipment, mold)
cc(press, and)
compound(press, cookie)
conj(mold, press)
punct(equipment, .)
parataxis(equipment, Materials)
punct(Materials, :)
compound(modeling, Ceramic)
compound(clay, modeling)
appos(Materials, clay)
punct(clay, :)
appos(clay, red)
punct(white, ,)
conj(red, white)
cc(buff, or)
conj(red, buff)
punct(equipment, .)
compound(clay, Stoneware)
root(ROOT, clay)
case(tile, for)
nmod(clay, tile)
punct(clay, .)
root(ROOT, Glazes)
punct(Glazes, ,)
nummod(stroke, one)
punct(stroke, -)
compound(color, stroke)
amod(color, ceramic)
appos(Glazes, color)
punct(stain, ,)
parataxis(Glazes, stain)
punct(cone, ,)
parataxis(Glazes, cone)
mark(indicate, as)
parataxis(Glazes, indicate)
case(instruction, in)
det(instruction, the)
amod(instruction, individual)
obl(indicate, instruction)
punct(Glazes, .)
amod(direction, general)
root(ROOT, direction)
punct(direction, :)
root(ROOT, use)
advmod(wedge, well)
punct(wedge, -)
amod(clay, wedge)
obj(use, clay)
punct(free, ,)
amod(clay, free)
case(bubble, of)
compound(bubble, air)
obl(free, bubble)
cc(enough, and)
amod(enough, pliable)
conj(clay, enough)
mark(bend, to)
advcl(enough, bend)
mark(crack, without)
advcl(bend, crack)
punct(use, .)
amod(mold, clean)
compound(mold, wooden)
root(ROOT, mold)
cc(press, and)
conj(mold, press)
advmod(mold, thoroughly)
punct(mold, ;)
punct(mold, ;)
nsubj(free, they)
aux(free, must)
cop(free, be)
parataxis(mold, free)
case(oil, of)
obl(free, oil)
punct(wax, ,)
conj(oil, wax)
cc(dust, and)
conj(oil, dust)
punct(mold, .)
root(ROOT, press)
obj(press, design)
punct(press, :)
det(size, the)
nsubj(determine, size)
case(mold, of)
compound(mold, wooden)
nmod(size, mold)
aux(determine, will)
root(ROOT, determine)
det(amount, the)
obj(determine, amount)
case(clay, of)
nmod(amount, clay)
acl(amount, need)
punct(determine, .)
root(ROOT, roll)
obj(roll, clay)
case(thickness, to)
obl(roll, thickness)
acl(thickness, indicate)
case(instruction, in)
amod(instruction, individual)
obl(indicate, instruction)
punct(roll, .)
mark(possible, whenever)
advcl(use, possible)
punct(use, ,)
root(ROOT, use)
det(mold, the)
compound(mold, wooden)
obj(use, mold)
case(pattern, as)
det(pattern, a)
obl(use, pattern)
case(clay, for)
compound(clay, cutting)
nmod(pattern, clay)
punct(use, .)
mark(have, when)
nsubj(have, mold)
advcl(use, have)
advmod(one, more)
fixed(more, than)
nummod(cavity, one)
compound(cavity, design)
obj(have, cavity)
punct(make, ,)
conj(have, make)
amod(pattern, individual)
compound(pattern, paper)
obj(make, pattern)
punct(use, .)
compound(pattern, place)
compound(pattern, mold)
cc(paper, or)
conj(mold, paper)
root(ROOT, pattern)
case(clay, on)
amod(clay, roll)
nmod(pattern, clay)
cc(clay, and)
amod(clay, cut)
conj(clay, clay)
case(knife, by)
compound(knife, holding)
nmod(clay, knife)
case(position, in)
amod(position, vertical)
obl(cut, position)
punct(cut, ()
parataxis(pattern, cut)
amod(piece, more)
obj(cut, piece)
mark(require, than)
acl(piece, require)
case(project, for)
obl(require, project)
mark(make, to)
advcl(require, make)
obj(make, allowance)
case(defect, for)
obl(make, defect)
punct(make, ;)
punct(experiment, ;)
conj(cut, experiment)
case(defect, with)
nmod(experiment, defect)
case(technique, for)
compound(technique, decoration)
nmod(defect, technique)
case(glaze, of)
nmod(technique, glaze)
cc(color, and)
conj(glaze, color)
punct(experiment, ))
punct(pattern, .)
root(ROOT, place)
det(piece, the)
amod(piece, cut)
compound(piece, clay)
obj(place, piece)
advmod(place, loosely)
case(side, over)
det(side, the)
amod(side, carve)
compound(design, cavity)
compound(side, design)
obl(place, side)
case(mold, of)
compound(mold, wooden)
nmod(side, mold)
punct(place, .)
mark(obtain, to)
root(ROOT, obtain)
amod(impression, clear)
obj(obtain, impression)
case(mold, of)
nmod(impression, mold)
punct(clay, ,)
compound(clay, press)
conj(impression, clay)
advmod(clay, gently)
cc(firmly, but)
conj(gently, firmly)
case(cavity, into)
compound(cavity, mold)
nmod(clay, cavity)
punct(start, ,)
acl(clay, start)
case(center, at)
obl(start, center)
cc(work, and)
conj(start, work)
case(edge, to)
amod(edge, outer)
obl(work, edge)
punct(clay, .)
compound(excess, Trim)
compound(clay, excess)
obl(work, clay)
advmod(clay, away)
case(edge, from)
amod(edge, outer)
obl(away, edge)
punct(clay, .)
root(ROOT, check)
obj(check, thickness)
case(clay, of)
nmod(thickness, clay)
cc(build, and)
conj(check, build)
compound:prt(build, up)
amod(area, thin)
obj(build, area)
mark(moistening, by)
advcl(build, moistening)
obj(moistening, surface)
case(water, with)
det(water, a)
amod(water, little)
obl(moistening, water)
cc(add, and)
conj(moistening, add)
amod(piece, small)
obj(add, piece)
case(clay, of)
nmod(piece, clay)
punct(check, .)
cop(sure, be)
root(ROOT, sure)
mark(press, to)
xcomp(sure, press)
det(clay, the)
amod(clay, additional)
obj(press, clay)
advmod(press, firmly)
case(place, into)
obl(press, place)
mark(lock, without)
advcl(press, lock)
case(bubble, in)
compound(bubble, air)
obl(lock, bubble)
punct(sure, .)
root(ROOT, allow)
obj(allow, project)
mark(stand, to)
xcomp(allow, stand)
case(minute, for)
advmod(five, about)
nummod(minute, five)
obl(stand, minute)
punct(antique, ()
mark(antique, if)
amod(mold, wooden)
compound(mold, press)
nsubj(antique, mold)
cop(antique, be)
det(antique, a)
amod(antique, good)
advcl(leave, antique)
punct(leave, ,)
aux(leave, do)
advmod(leave, not)
parataxis(allow, leave)
obj(leave, clay)
case(long, in)
advmod(long, too)
advmod(leave, long)
mark(cause, as)
det(dampness, the)
nsubj(cause, dampness)
aux(cause, may)
advcl(long, cause)
obj(cause, mold)
mark(crack, to)
xcomp(cause, crack)
punct(cause, ))
punct(leave, .)
mark(release, to)
advcl(place, release)
obj(release, clay)
case(mold, from)
obl(release, mold)
punct(place, ,)
conj(allow, place)
obj(place, hand)
case(position, in)
det(position, a)
amod(position, cup)
obl(place, position)
case(project, around)
nmod(position, project)
punct(place, ;)
punct(place, ;)
advmod(lift, gently)
parataxis(place, lift)
det(edge, the)
obj(lift, edge)
case(side, on)
advmod(side, far)
obl(lift, side)
punct(continue, ,)
advmod(continue, then)
conj(lift, continue)
mark(release, to)
xcomp(continue, release)
obj(release, edge)
advmod(release, completely)
case(mold, around)
obl(release, mold)
punct(allow, .)
amod(tap, slight)
nsubj(help, tap)
case(underside, on)
det(underside, the)
nmod(tap, underside)
case(mold, of)
nmod(underside, mold)
aux(help, will)
root(ROOT, help)
xcomp(help, release)
det(clay, the)
obj(release, clay)
punct(cause, ,)
cc(cause, but)
advmod(much, too)
amod(agitation, much)
nsubj(cause, agitation)
aux(cause, will)
conj(help, cause)
det(clay, the)
obj(cause, clay)
mark(become, to)
acl(clay, become)
xcomp(become, soft)
cc(interfere, and)
aux(interfere, will)
conj(become, interfere)
case(removal, with)
obl(interfere, removal)
case(clay, of)
nmod(removal, clay)
case(mold, from)
nmod(removal, mold)
punct(help, .)
root(ROOT, place)
det(piece, a)
obj(place, piece)
case(board, of)
compound(board, plaster)
compound(board, wall)
nmod(piece, board)
cc(bat, or)
compound(bat, plaster)
conj(board, bat)
case(clay, on)
obl(place, clay)
cc(bat, and)
compound(bat, reverse)
conj(clay, bat)
punct(clay, ,)
conj(clay, clay)
cc(mold, and)
conj(clay, mold)
case(action, in)
nummod(action, one)
nmod(clay, action)
punct(place, .)
nsubj(prevent, this)
aux(prevent, will)
root(ROOT, prevent)
det(clay, the)
obj(prevent, clay)
case(twist, from)
obl(prevent, twist)
cc(bend, or)
conj(twist, bend)
punct(prevent, ,)
advcl(prevent, cause)
obj(cause, warping)
mark(fire, when)
advcl(cause, fire)
punct(prevent, .)
compound(project, place)
root(ROOT, project)
case(table, on)
nmod(project, table)
cc(lift, and)
advmod(lift, carefully)
conj(project, lift)
det(mold, the)
obj(lift, mold)
compound:prt(lift, off)
punct(project, .)
compound(surface, study)
root(ROOT, surface)
case(clay, of)
nmod(surface, clay)
case(defect, for)
nmod(surface, defect)
cc(correction, or)
amod(correction, desire)
conj(defect, correction)
punct(surface, .)
mark(shape, if)
nsubj(shape, clay)
cop(shape, be)
advmod(shape, slightly)
case(shape, out)
case(shape, of)
root(ROOT, shape)
punct(side, ,)
amod(side, square)
amod(side, straight)
conj(shape, side)
case(stick, with)
compound(stick, guide)
nmod(side, stick)
cc(ruler, or)
conj(stick, ruler)
acl(side, press)
case(side, against)
amod(side, opposite)
obl(press, side)
punct(piece, ,)
cc(piece, or)
amod(piece, smooth)
amod(piece, round)
conj(side, piece)
case(finger, with)
amod(finger, damp)
nmod(piece, finger)
punct(side, .)
mark(smooth, if)
det(background, the)
nsubj(smooth, background)
case(design, of)
nmod(background, design)
cop(smooth, be)
advmod(smooth, too)
advcl(add, smooth)
punct(wish, ,)
cc(wish, or)
nsubj(wish, you)
conj(smooth, wish)
mark(create, to)
xcomp(wish, create)
det(effect, a)
compound(grain, wood)
punct(grain, -)
amod(effect, grain)
obj(create, effect)
punct(add, ,)
nsubj:pass(add, it)
aux(add, may)
aux:pass(add, be)
root(ROOT, add)
case(time, at)
det(time, this)
obl(add, time)
case(tool, with)
det(tool, a)
amod(tool, dull)
obl(add, tool)
case(handle, such)
fixed(such, as)
det(handle, the)
nmod(tool, handle)
case(paintbrush, of)
det(paintbrush, a)
amod(paintbrush, fine)
nmod(handle, paintbrush)
punct(add, .)
root(ROOT, make)
xcomp(make, slight)
punct(groove, ,)
amod(groove, smooth)
obj(make, groove)
cc(cut, rather)
fixed(rather, than)
conj(groove, cut)
case(texture, for)
det(texture, the)
nmod(cut, texture)
punct(cause, ()
nsubj(cause, cut)
aux(cause, could)
parataxis(make, cause)
compound(pocket, air)
obj(cause, pocket)
case(glaze, under)
det(glaze, the)
obl(cause, glaze)
acl(glaze, create)
obj(create, pinhole)
cc(crater, or)
conj(pinhole, crater)
case(glaze, in)
det(glaze, the)
obl(create, glaze)
case(fire, during)
nmod(glaze, fire)
punct(cause, ))
punct(make, .)
root(ROOT, leave)
det(clay, the)
obj(leave, clay)
case(board, on)
compound(board, plaster)
obl(leave, board)
mark(dry, to)
advcl(leave, dry)
advmod(dry, slowly)
punct(cover, ,)
conj(dry, cover)
advmod(cover, lightly)
case(piece, with)
det(piece, a)
amod(piece, loose)
obl(cover, piece)
case(plastic, of)
nmod(piece, plastic)
cc(cloth, or)
conj(plastic, cloth)
mark(prevent, to)
advcl(cover, prevent)
obj(prevent, warping)
punct(leave, .)
amod(tile, Rectangular)
root(ROOT, tile)
punct(page, ()
amod(page, opposite)
list(tile, page)
punct(tile, ,)
amod(top, right)
list(tile, top)
punct(tile, ))
punct(tile, :)
compound(clay, Stoneware)
nsubj:pass(use, clay)
aux:pass(use, be)
root(ROOT, use)
punct(use, .)
nsubj:pass(roll, clay)
aux:pass(roll, be)
root(ROOT, roll)
case(thickness, to)
compound(4, 1)
punct(4, /)
compound(thickness, 4)
punct(4, '')
punct(thickness, '')
obl(roll, thickness)
punct(roll, .)
root(ROOT, back)
case(clay, of)
nmod(back, clay)
acl(back, score)
cc(roughen, or)
conj(score, roughen)
case(surface, for)
amod(surface, proper)
compound(surface, grip)
obl(score, surface)
punct(back, .)
det(fire, no)
compound(fire, bisque)
root(ROOT, fire)
punct(fire, .)
root(ROOT, Glazed)
case(coat, with)
nummod(coat, two)
obl(Glazed, coat)
case(glaze, of)
obl:npmod(turn, Creek)
punct(turn, -)
amod(glaze, turn)
amod(glaze, white)
compound(glaze, stoneware)
nmod(coat, glaze)
punct(glaze, ()
det(glaze, no)
appos(glaze, glaze)
case(side, on)
nmod(glaze, side)
cc(bottom, or)
conj(side, bottom)
punct(glaze, ))
punct(glaze, .)
acl(glaze, decorated)
case(glaze, on)
amod(glaze, unfire)
obl(decorated, glaze)
case(coat, with)
nummod(coat, one)
obl(decorated, coat)
case(color, of)
nummod(stroke, one)
punct(stroke, -)
compound(color, stroke)
amod(color, ceramic)
nmod(coat, color)
punct(color, ;)
punct(color, ;)
amod(detail, raise)
nsubj:pass(color, detail)
case(design, of)
nmod(detail, design)
aux:pass(color, be)
parataxis(decorated, color)
case(shade, in)
obl(color, shade)
case(green, of)
amod(green, yellow)
punct(green, -)
nmod(shade, green)
punct(green, ,)
amod(green, blue)
punct(green, -)
conj(green, green)
punct(brown, ,)
conj(green, brown)
cc(pink, and)
conj(green, pink)
punct(fire, .)
nsubj:pass(fire, tile)
aux:pass(fire, be)
acl:relcl(shade, fire)
advmod(fire, once)
case(cone, to)
obl(once, cone)
nummod(cone, 05)
punct(plaque, .)
compound(plaque, round)
obl(fire, plaque)
punct(bottom, ()
amod(page, opposite)
compound(bottom, page)
punct(bottom, ,)
appos(plaque, bottom)
punct(bottom, ))
punct(plaque, :)
amod(clay, white)
nsubj:pass(use, clay)
aux:pass(use, be)
root(ROOT, use)
punct(roll, ,)
advcl(use, roll)
case(thickness, to)
compound(4, 1)
punct(4, /)
nummod(thickness, 4)
punct(4, ')
punct(thickness, ')
punct(thickness, '')
obl(roll, thickness)
punct(use, .)
nsubj(fire, Bisque)
root(ROOT, fire)
case(cone, to)
obl(fire, cone)
nummod(cone, 05)
punct(fire, .)
advcl(fire, Stained)
case(direction, with)
nmod:poss(stain, Jacquelyn)
case(Jacquelyn, 's)
amod(stain, ceramic)
amod(stain, unfire)
obl(Stained, stain)
punct(stain, ,)
conj(stain, polish)
punct(stain, ,)
amod(direction, follow)
nmod:poss(direction, manufacturer)
case(manufacturer, 's)
obl(Stained, direction)
punct(fire, .)
amod(cantaloupe, Opaque)
nsubj:pass(use, cantaloupe)
cc(brown, and)
amod(wood, transparent)
compound(brown, wood)
conj(cantaloupe, brown)
aux:pass(use, be)
root(ROOT, use)
punct(use, .)
det(fire, no)
amod(fire, further)
root(ROOT, fire)
punct(fire, .)
root(ROOT, Paperweight)
punct(page, ()
amod(page, opposite)
appos(Paperweight, page)
punct(page, ,)
amod(leave, top)
parataxis(Paperweight, leave)
punct(page, ))
punct(Paperweight, :)
amod(clay, Red)
nsubj:pass(use, clay)
aux:pass(use, be)
root(ROOT, use)
punct(roll, ,)
conj(use, roll)
nummod(2, 1)
punct(2, /)
obj(roll, 2)
punct(2, '')
punct(thick, '')
xcomp(use, thick)
punct(use, .)
nsubj:pass(use, mold)
aux:pass(use, be)
root(ROOT, use)
case(pattern, as)
obl(use, pattern)
cc(clay, and)
conj(pattern, clay)
conj(use, cut)
mark(hold, by)
advcl(cut, hold)
obj(hold, knife)
case(angle, at)
advmod(degree, about)
nummod(degree, 45)
punct(degree, -)
compound(angle, degree)
obl(hold, angle)
punct(hold, ,)
mark(form, to)
advcl(hold, form)
det(undercut, a)
obj(form, undercut)
punct(make, ,)
conj(form, make)
obj(make, base)
xcomp(make, smaller)
case(top, than)
det(top, the)
compound(top, pattern)
obl(smaller, top)
punct(press, .)
mark(press, while)
nsubj:pass(press, clay)
aux:pass(press, be)
advmod(press, still)
advcl(make, press)
case(mold, in)
obl(press, mold)
punct(mold, ,)
compound(hole, press)
nummod(hole, three)
advmod(space, equally)
amod(hole, space)
appos(mold, hole)
compound(4, 1)
punct(4, /)
nummod(hole, 4)
punct(4, '')
punct(4, '')
amod(hole, deep)
punct(deep, ,)
advcl(deep, use)
compound(eraser, pencil)
obj(use, eraser)
punct(use, ,)
case(bottom, in)
obl(use, bottom)
case(clay, of)
nmod(bottom, clay)
mark(allow, to)
acl(bottom, allow)
case(drying, for)
amod(drying, proper)
obl(allow, drying)
cc(fire, and)
conj(drying, fire)
punct(use, .)
nsubj:pass(personalize, Paperweight)
aux(personalize, may)
aux:pass(personalize, be)
root(ROOT, personalize)
case(back, on)
obl(personalize, back)
mark(leather, while)
nsubj(leather, clay)
cop(leather, be)
advcl(personalize, leather)
advcl(personalize, hard)
punct(personalize, .)
nsubj(fire, Bisque)
root(ROOT, fire)
case(cone, to)
obl(fire, cone)
nummod(cone, 05)
punct(fire, .)
parataxis(fire, Unglazed)
punct(fire, . )
root(ROOT, Jars)
case(lid, with)
nmod(Jars, lid)
punct(page, ()
amod(page, opposite)
parataxis(Jars, page)
punct(page, ,)
amod(leave, top)
parataxis(Jars, leave)
punct(Jars, ))
punct(Jars, :)
root(ROOT, remove)
compound(head, wooden)
compound(head, design)
obj(remove, head)
case(bowl, from)
obl(remove, bowl)
case(mold, of)
compound(mold, butter)
nmod(bowl, mold)
punct(remove, .)
root(ROOT, fill)
amod(hole, small)
obj(fill, hole)
case(bowl, in)
obl(fill, bowl)
case(clay, with)
obl(fill, clay)
punct(fill, .)
root(ROOT, make)
compound(pattern, paper)
obj(make, pattern)
case(section, for)
obl(make, section)
case(jar, of)
nmod(section, jar)
cc(lid, and)
conj(jar, lid)
punct(see, ()
parataxis(make, see)
obj(see, Fig.)
nummod(Fig., 1)
punct(page, ,)
amod(page, opposite)
obj(see, page)
punct(see, ))
punct(see, .)
parataxis(make, measurement)
case(piece, for)
amod(piece, rectangular)
compound(piece, pattern)
nmod(measurement, piece)
nsubj:pass(obtain, a)
aux:pass(obtain, be)
acl:relcl(measurement, obtain)
mark(measure, by)
advcl(obtain, measure)
case(circumference, inside)
obl(measure, circumference)
cc(depth, and)
conj(circumference, depth)
case(bowl, of)
compound(bowl, butter)
compound(bowl, mold)
nmod(circumference, bowl)
punct(Pattern, .)
appos(circumference, Pattern)
case(b, for)
amod(b, circular)
compound(piece, base)
compound(b, piece)
nsubj(diameter, b)
cop(diameter, be)
parataxis(Pattern, diameter)
case(Aj, of)
nmod(diameter, Aj)
punct(diameter, .)
compound(wooden, use)
compound(head, wooden)
compound(head, design)
appos(diameter, head)
case(mold, of)
nmod(head, mold)
case(c, for)
compound(c, pattern)
nmod(head, c)
punct(head, ;)
punct(d, ;)
compound(d, pattern)
appos(head, d)
case(fit, for)
compound(fit, lid)
nmod(d, fit)
case(diameter, over)
amod(diameter, top)
nmod(d, diameter)
case(Aj, of)
nmod(diameter, Aj)
punct(diameter, .)
appos(diameter, Pattern)
case(fit, for)
amod(fit, inner)
compound(piece, lid)
compound(fit, piece)
compound(fit, e)
nmod(Pattern, fit)
case(Aj, inside)
nmod(fit, Aj)
punct(fit, .)
nsubj:pass(assemble, Jars)
aux:pass(assemble, be)
acl:relcl(fit, assemble)
case(bowl, in)
obl(assemble, bowl)
case(mold, of)
compound(mold, butter)
nmod(bowl, mold)
punct(make, .)
root(ROOT, use)
amod(clay, white)
cc(buff, or)
conj(white, buff)
obj(use, clay)
punct(clay, ,)
acl(clay, roll)
case(3/16, to)
obl(roll, 3/16)
punct(thickness, '')
punct(thickness, '')
obl(use, thickness)
punct(use, .)
root(ROOT, place)
obj(place, pattern)
case(clay, on)
amod(clay, roll)
obl(place, clay)
cc(cut, and)
conj(place, cut)
case(they, around)
obl(cut, they)
case(knife, with)
obl(cut, knife)
case(position, in)
amod(position, vertical)
obl(cut, position)
punct(place, .)
root(ROOT, place)
compound(piece, clay)
obj(place, piece)
case(board, on)
compound(board, wall)
obl(place, board)
punct(place, .)
mark(assemble, to)
advcl(put, assemble)
obj(assemble, jar)
punct(put, ,)
root(ROOT, put)
compound(b, paper)
compound(b, pattern)
obj(put, b)
case(base, for)
nmod(b, base)
case(bottom, in)
obl(put, bottom)
case(b, of)
compound(b, mold)
cc(clay, and)
conj(mold, clay)
compound(b, disk)
nmod(bottom, b)
case(top, on)
nmod(b, top)
punct(put, .)
compound(side, line)
root(ROOT, side)
case(mold, of)
nmod(side, mold)
case(pattern, with)
compound(pattern, paper)
nmod(side, pattern)
compound(Bevel, Aj)
punct(Bevel, .)
root(ROOT, Bevel)
cc(end, and)
compound(end, score)
conj(Bevel, end)
case(a, of)
compound(piece, clay)
compound(a, piece)
nmod(Bevel, a)
mark(overlap, so)
fixed(so, that)
nsubj(overlap, they)
advcl(a, overlap)
advmod(2, about)
nummod(2, 1)
punct(2, /)
obj(overlap, 2)
punct(2, '')
punct(overlap, '')
cc(make, and)
conj(overlap, make)
advmod(thickness, even)
obj(make, thickness)
punct(Bevel, .)
compound(piece, place)
compound(piece, clay)
root(ROOT, piece)
det(inside, a)
nmod:npmod(piece, inside)
punct(inside, ;)
punct(use, ;)
parataxis(inside, use)
obj(use, slip)
mark(join, to)
advcl(use, join)
amod(end, overlapped)
obj(join, end)
advmod(join, together)
punct(Join, .)
parataxis(use, Join)
root(ROOT, b)
case(bottom, to)
nmod(b, bottom)
case(scoring, of)
det(scoring, a)
punct(scoring, ,)
parataxis(b, scoring)
cc(reinforce, and)
conj(b, reinforce)
case(coil, with)
compound(coil, clay)
obl(reinforce, coil)
punct(clay, .)
compound(excess, Trim)
compound(clay, excess)
parataxis(b, clay)
case(lip, from)
case(lip, around)
nmod(clay, lip)
case(mold, of)
nmod(lip, mold)
cc(set, and)
conj(clay, set)
advmod(set, aside)
mark(assemble, while)
advcl(set, assemble)
obj(assemble, lid)
punct(assemble, .)
mark(assemble, to)
advcl(assemble, assemble)
obj(assemble, lid)
punct(c, ,)
compound(clay, press)
compound(piece, clay)
compound(c, piece)
appos(lid, c)
case(cavity, in)
nmod(c, cavity)
case(head, of)
compound(design, wooden)
compound(head, design)
nmod(cavity, head)
punct(clay, .)
compound(clay, press)
appos(c, clay)
case(mold, into)
nmod(clay, mold)
mark(instruct, as)
acl(clay, instruct)
case(direction, in)
amod(direction, general)
obl(instruct, direction)
punct(instruct, .)
compound(side, score)
amod(side, plain)
obl(instruct, side)
case(c, of)
nmod(side, c)
cc(leave, and)
conj(side, leave)
case(mold, in)
obl(leave, mold)
punct(b, .)
root(ROOT, score)
nummod(side, one)
obj(score, side)
case(d, of)
compound(d, disk)
nmod(side, d)
punct(join, ,)
conj(score, join)
case(c, to)
obl(join, c)
punct(score, ;)
punct(score, ;)
parataxis(score, score)
amod(side, other)
obj(score, side)
case(d, of)
nmod(side, d)
cc(side, and)
nummod(side, one)
conj(side, side)
case(e, of)
nmod(side, disk)
nmod(side, e)
cc(join, and)
conj(score, join)
advmod(before, as)
advmod(join, before)
punct(join, .)
mark(head, while)
amod(lid, assemble)
nsubj(head, lid)
cop(head, be)
advmod(head, still)
case(head, on)
compound(head, design)
advcl(join, head)
punct(head, ,)
advmod(head, gently)
cc(press, but)
advmod(press, firmly)
conj(head, press)
obj(press, it)
case(board, on)
compound(board, plaster)
obl(press, board)
punct(score, .)
mark(have, if)
compound(head, design)
nsubj(have, head)
advcl(thick, have)
det(cavity, a)
amod(cavity, deep)
obj(have, cavity)
punct(thick, ,)
compound(lid, clay)
nsubj(thick, lid)
aux(thick, will)
cop(thick, be)
advmod(thick, quite)
root(ROOT, thick)
case(point, at)
det(point, this)
obl(thick, point)
punct(thick, ;)
punct(thick, ;)
compound(eraser, press)
appos(thick, eraser)
case(pencil, of)
nmod(eraser, pencil)
advmod(4, gently)
compound(4, 1)
punct(4, /)
appos(eraser, 4)
punct(4, '')
punct(deep, '')
amod(eraser, deep)
case(clay, into)
amod(clay, deep)
obl(deep, clay)
mark(allow, to)
advcl(deep, allow)
obj(allow, vent)
case(drying, for)
amod(drying, proper)
obl(allow, drying)
cc(fire, and)
conj(drying, fire)
punct(thick, .)
root(ROOT, check)
obj(check, fit)
case(lid, of)
nmod(fit, lid)
case(jar, on)
obl(check, jar)
punct(check, ;)
punct(check, ;)
mark(big, if)
amod(lid, inner)
nsubj(big, lid)
cop(big, be)
advmod(big, too)
advcl(check, big)
punct(trim, ,)
conj(big, trim)
mark(fit, to)
xcomp(trim, fit)
punct(trim, ,)
advcl(trim, allow)
obj(allow, room)
case(thickness, for)
obl(allow, thickness)
case(glaze, of)
nmod(thickness, glaze)
punct(check, .)
root(ROOT, remove)
obj(remove, lid)
case(head, from)
obl(remove, head)
case(mold, of)
nmod(head, mold)
punct(remove, .)
root(ROOT, remove)
obj(remove, jar)
case(mold, from)
obl(remove, mold)
punct(remove, .)
compound(jar, place)
root(ROOT, jar)
case(board, on)
compound(board, plaster)
nmod(jar, board)
case(lid, with)
nmod(jar, lid)
case(place, in)
nmod(jar, place)
mark(dry, to)
acl(jar, dry)
advmod(dry, slowly)
punct(jar, .)
compound(fire, Bisque)
root(ROOT, fire)
case(cone, to)
nmod(fire, cone)
nummod(cone, 08)
case(lid, with)
nmod(fire, lid)
case(jar, on)
nmod(lid, jar)
punct(fire, .)
case(effect, for)
det(effect, a)
amod(effect, antique)
nmod(fire, effect)
case(jar, on)
nmod(effect, jar)
punct(brush, ,)
parataxis(fire, brush)
obl:npmod(turn, Creek)
punct(turn, -)
conj(brush, turn)
amod(toner, brown)
obj(turn, toner)
case(ware, on)
compound(ware, bisque)
obl(turn, ware)
cc(sponge, and)
conj(turn, sponge)
obj(sponge, it)
compound:prt(sponge, off)
punct(fire, .)
root(ROOT, Glaze)
case(coat, with)
nummod(coat, two)
nmod(Glaze, coat)
case(glaze, of)
amod(glaze, clear)
cc(transparent, or)
conj(clear, transparent)
compound(glaze, matt)
nmod(coat, glaze)
punct(Glaze, .)
det(jar, the)
amod(jar, large)
nsubj:pass(brush, jar)
aux:pass(brush, be)
root(ROOT, brush)
case(toner, with)
compound(turn, Creek)
punct(turn, -)
compound(toner, turn)
amod(toner, green)
obl(brush, toner)
cc(spong, and)
conj(brush, spong)
compound:prt(spong, off)
punct(brush, .)
root(ROOT, Glaze)
case(coat, with)
nummod(coat, two)
nmod(Glaze, coat)
case(glaze, of)
compound(glaze, matt)
nmod(coat, glaze)
case(turquoise, in)
nmod(Glaze, turquoise)
case(touch, with)
nmod(Glaze, touch)
case(pink, of)
compound(pink, blossom)
nmod(touch, pink)
case(lid, on)
nmod(touch, lid)
punct(Glaze, .)
mark(dry, when)
advcl(fire, dry)
nsubj:pass(fire, they)
aux:pass(fire, be)
parataxis(Glaze, fire)
case(cone, to)
obl(fire, cone)
nummod(cone, 06-)
nummod(cone, 05)
punct(Glaze, .)
amod(folk, little)
nsubj(set, folk)
root(ROOT, set)
punct(set, : )
punct(make, ()
root(ROOT, make)
case(Af, from)
amod(Af, modern)
compound(mold, wooden)
compound(Af, mold)
obl(make, Af)
punct(make, .)
punct(make, ))
root(ROOT, roll)
amod(clay, white)
obj(roll, clay)
case(3/16, to)
nmod(clay, 3/16)
punct(thickness, '')
punct(thickness, '')
obl(roll, thickness)
punct(roll, .)
root(ROOT, Salt)
cc(pepper, and)
conj(Salt, pepper)
punct(Salt, :)
parataxis(Salt, use)
obj(use, mold)
mark(cut, to)
xcomp(use, cut)
nummod(piece, four)
compound(piece, side)
obj(cut, piece)
punct(Salt, .)
case(top, for)
obl(use, top)
cc(piece, and)
amod(piece, bottom)
conj(top, piece)
punct(use, ,)
root(ROOT, use)
amod(end, short)
obj(use, end)
case(mold, of)
nmod(end, mold)
case(guide, as)
compound(guide, measurement)
obl(use, guide)
punct(use, .)
root(ROOT, Press)
det(piece, the)
compound(piece, side)
obj(Press, piece)
case(clay, of)
nmod(piece, clay)
case(cavity, into)
obl(Press, cavity)
case(mold, of)
nmod(cavity, mold)
punct(clay, .)
compound(excess, Trim)
compound(clay, excess)
parataxis(Press, clay)
case(rim, from)
nmod(clay, rim)
case(mold, of)
nmod(rim, mold)
punct(Press, .)
root(ROOT, cut)
amod(edge, bevel)
obj(cut, edge)
case(side, on)
det(side, the)
amod(side, long)
obl(cut, side)
case(clay, of)
nmod(side, clay)
case(angle, at)
det(angle, a)
nummod(degree, 45)
punct(degree, -)
compound(angle, degree)
obl(cut, angle)
case(corner, to)
compound(corner, miter)
nmod(angle, corner)
punct(cut, .)
root(ROOT, score)
amod(edge, bevel)
obj(score, edge)
cc(remove, and)
conj(score, remove)
obj(remove, piece)
case(mold, from)
obl(remove, mold)
punct(score, ;)
punct(score, ;)
compound(side, place)
compound(side, design)
punct(side, -)
parataxis(score, side)
compound:prt(side, up)
case(board, on)
compound(board, plaster)
obl(up, board)
punct(score, .)
root(ROOT, make)
det(side, all)
nummod(side, four)
obj(make, side)
punct(make, .)
root(ROOT, cut)
compound(top, clay)
obj(cut, top)
cc(piece, and)
compound(piece, base)
conj(top, piece)
punct(cut, ;)
punct(cut, ;)
parataxis(cut, place)
case(board, on)
compound(board, plaster)
obl(place, board)
punct(cut, .)
root(ROOT, allow)
det(piece, all)
obj(allow, piece)
mark(become, to)
acl(piece, become)
obj(become, leather)
advmod(become, hard)
mark(construct, before)
advcl(become, construct)
obj(construct, shaker)
punct(allow, .)
mark(assemble, to)
advcl(Construct, assemble)
punct(Construct, :)
root(ROOT, Construct)
obj(Construct, side)
punct(bottom, ,)
conj(side, bottom)
cc(top, and)
conj(side, top)
case(box, as)
case(box, for)
obl(Construct, box)
punct(Construct, ,)
advcl(Construct, use)
obj(use, slip)
case(edge, on)
amod(edge, score)
obl(use, edge)
cc(coil, and)
conj(edge, coil)
case(clay, of)
nmod(coil, clay)
mark(reinforce, to)
advcl(coil, reinforce)
obj(reinforce, seam)
punct(Construct, . )
root(ROOT, Join)
det(side, the)
nummod(side, four)
obj(Join, side)
advmod(Join, together)
advmod(Join, first)
punct(Join, ,)
advmod(add, then)
conj(Join, add)
det(base, the)
obj(add, base)
punct(Join, ;)
punct(Join, ;)
parataxis(Join, add)
amod(last, top)
obj(add, last)
punct(Join, .)
root(ROOT, use)
obj(use, water)
case(finger, on)
obl(use, finger)
case(seam, to)
amod(seam, smooth)
obl(use, seam)
cc(edge, and)
conj(seam, edge)
punct(use, .)
parataxis(use, turn)
compound(upside, shaker)
obj(turn, upside)
compound:prt(turn, down)
punct(use, .)
compound(base, recess)
root(ROOT, base)
advmod(base, slightly)
mark(allow, to)
acl(base, allow)
obj(allow, room)
case(stopper, for)
nmod(room, stopper)
punct(base, .)
root(ROOT, cut)
obj(cut, hole)
case(base, in)
obl(cut, base)
case(stopper, for)
compound(stopper, cork)
obl(cut, stopper)
punct(cut, .)
root(ROOT, add)
obj(add, hole)
case(top, in)
obl(add, top)
punct(add, ,)
parataxis(add, form)
punct(add, ``)
root(ROOT, S)
punct(salt, '')
case(salt, for)
obl(S, salt)
cc(``, and)
punct(salt, ``)
root(ROOT, p)
punct(p, '')
case(pepper, for)
nmod(p, pepper)
punct(p, .)
root(ROOT, set)
advmod(set, aside)
mark(dry, to)
advcl(set, dry)
advmod(dry, thoroughly)
punct(Sugar, .)
parataxis(set, Sugar)
cc(creamer, and)
conj(Sugar, creamer)
punct(set, : )
root(ROOT, cut)
det(strip, a)
obj(cut, strip)
case(clay, of)
nmod(strip, clay)
case(side, for)
obl(cut, side)
advmod(enough, long)
advmod(cut, enough)
cc(enough, and)
advmod(enough, wide)
conj(cut, enough)
case(impression, for)
nummod(impression, three)
obl(enough, impression)
case(design, of)
compound(design, mold)
nmod(impression, design)
punct(cut, .)
compound(clay, press)
root(ROOT, clay)
case(cavity, into)
nmod(clay, cavity)
case(mold, of)
nummod(mold, one)
nmod(cavity, mold)
nummod(time, three)
nmod:tmod(mold, time)
punct(clay, ;)
punct(clay, ;)
compound(end, bevel)
amod(end, overlapping)
list(clay, end)
case(joint, for)
amod(joint, splice)
nmod(end, joint)
punct(joint, ,)
obl:npmod(bevel, score)
amod(edge, bevel)
conj(joint, edge)
punct(clay, .)
compound(strip, form)
compound(strip, clay)
root(ROOT, strip)
case(cylinder, into)
det(cylinder, a)
nmod(strip, cylinder)
punct(strip, ;)
punct(use, ;)
parataxis(strip, use)
obj(use, slip)
mark(join, to)
advcl(use, join)
amod(end, score)
obj(join, end)
punct(use, .)
compound(cylinder, place)
root(ROOT, cylinder)
case(disk, on)
det(disk, a)
nmod(cylinder, disk)
case(clay, of)
nmod(disk, clay)
advmod(larger, slightly)
amod(cylinder, larger)
case(cylinder, than)
obl(larger, cylinder)
punct(larger, .)
root(ROOT, score)
amod(edge, bottom)
obj(score, edge)
case(cylinder, of)
nmod(edge, cylinder)
cc(join, and)
conj(score, join)
case(disk, to)
obl(join, disk)
case(slip, with)
obl(join, slip)
punct(score, .)
root(ROOT, Trim)
advmod(Trim, away)
amod(clay, excess)
obj(Trim, clay)
punct(Trim, ;)
punct(Trim, ;)
parataxis(Trim, reinforce)
obj(reinforce, seam)
case(coil, with)
det(coil, a)
obl(reinforce, coil)
case(clay, of)
nmod(coil, clay)
punct(Trim, .)
nsubj(form, this)
aux(form, will)
root(ROOT, form)
det(bowl, the)
compound(bowl, sugar)
obj(form, bowl)
punct(form, .)
root(ROOT, make)
obj(make, creamer)
det(same, the)
obj(make, same)
punct(make, .)
root(ROOT, handle)
case(creamer, for)
obl(handle, creamer)
cop(strip, be)
det(strip, a)
parataxis(handle, strip)
case(clay, of)
nmod(strip, clay)
compound(2, 1)
case(2, /)
nmod(clay, 2)
punct(2, '')
punct(wide, '')
amod(strip, wide)
cc(long, and)
nummod(long, 3)
case(1, -)
nmod(3, 1)
punct(2, /)
nmod(3, 2)
punct(2, '')
punct(long, '')
amod(strip, long)
punct(handle, .)
mark(add, to)
advcl(place, add)
obj(add, handle)
punct(place, ,)
root(ROOT, place)
det(dowel, a)
compound(dowel, wooden)
obj(place, dowel)
case(wall, against)
det(wall, the)
amod(wall, inside)
nmod(dowel, wall)
case(creamer, of)
nmod(wall, creamer)
punct(score, .)
parataxis(place, score)
case(container, outside)
case(container, of)
nmod(score, container)
advmod(join, where)
compound(end, handle)
nsubj:pass(join, end)
aux(join, will)
aux:pass(join, be)
acl:relcl(score, join)
punct(place, .)
compound(handle, Bend)
root(ROOT, handle)
punct(handle, ;)
punct(handle, ;)
nsubj(score, press)
parataxis(handle, score)
parataxis(handle, handle)
obj(handle, end)
advmod(handle, firmly)
case(place, in)
obl(handle, place)
advcl(handle, use)
obj(use, dowel)
mark(reinforce, to)
xcomp(use, reinforce)
obj(reinforce, container)
mark(press, while)
advcl(reinforce, press)
punct(handle, ;)
punct(handle, ;)
parataxis(handle, use)
obj(use, slip)
mark(join, to)
xcomp(use, join)
punct(use, .)
mark(form, to)
xcomp(use, form)
obj(form, spout)
punct(form, ,)
case(design, between)
nummod(design, two)
obl(form, design)
punct(dampen, ,)
conj(form, dampen)
obj(dampen, area)
advmod(dampen, slightly)
cc(push, and)
advmod(push, gently)
conj(dampen, push)
obj(push, clay)
advmod(push, outward)
punct(handle, .)
root(ROOT, make)
obj(make, lid)
case(bowl, for)
compound(bowl, sugar)
obl(make, bowl)
det(same, the)
advmod(make, same)
case(lid, as)
compound(lid, jar)
obl(same, lid)
punct(make, ,)
advcl(make, omit)
compound(disk, design)
obj(omit, disk)
punct(make, .)
root(ROOT, cut)
det(notch, a)
obj(cut, notch)
case(lid, in)
obl(cut, lid)
case(handle, for)
compound(handle, spoon)
obl(cut, handle)
mark(desire, if)
advcl(cut, desire)
punct(cut, .)
root(ROOT, set)
advmod(set, aside)
mark(dry, to)
advcl(set, dry)
case(lid, with)
obl(dry, lid)
case(bowl, on)
compound(bowl, sugar)
obl(dry, bowl)
punct(set, .)
root(ROOT, Vases)
punct(Vases, :)
root(ROOT, make)
obj(make, same)
case(salt, as)
obl(make, salt)
cc(shaker, and)
compound(shaker, pepper)
conj(salt, shaker)
punct(make, ,)
advcl(make, leave)
compound:prt(leave, off)
amod(piece, top)
obj(leave, piece)
punct(make, .)
nsubj:pass(make, Vases)
aux(make, may)
aux:pass(make, be)
root(ROOT, make)
case(candle, into)
obl(make, candle)
mark(fill, by)
advcl(make, fill)
case(wax, with)
amod(wax, melt)
obl(fill, wax)
cc(wick, and)
det(wick, a)
conj(wax, wick)
punct(make, .)
compound(holder, napkin)
root(ROOT, holder)
punct(holder, :)
parataxis(holder, cut)
det(piece, a)
obj(cut, piece)
case(clay, of)
nmod(piece, clay)
case(base, for)
nmod(piece, base)
cc(two, and)
conj(piece, two)
case(side, for)
nmod(two, side)
nmod:npmod(side, each)
case(Af, about)
nmod(side, Af)
punct(enough, ()
advmod(enough, long)
parataxis(Af, enough)
case(impression, for)
nummod(impression, three)
obl(enough, impression)
case(mold, of)
nmod(impression, mold)
punct(enough, ))
punct(holder, .)
root(ROOT, Press)
det(side, the)
nummod(side, two)
obj(Press, side)
case(cavity, into)
obl(Press, cavity)
case(mold, of)
nummod(mold, one)
nmod(cavity, mold)
nummod(time, three)
obl:tmod(Press, time)
punct(Press, .)
root(ROOT, put)
amod(piece, cut)
obj(put, piece)
case(board, on)
compound(board, plaster)
nmod(piece, board)
mark(dry, to)
advcl(put, dry)
case(state, to)
amod(state, firm)
obl:npmod(hard, leather)
punct(hard, -)
amod(state, hard)
obl(dry, state)
punct(state, .)
compound(edge, score)
compound(edge, side)
obj(dry, edge)
case(base, of)
nmod(edge, base)
punct(put, ;)
punct(put, ;)
parataxis(put, join)
obj(join, side)
cc(base, and)
conj(side, base)
case(slip, with)
obl(join, slip)
cc(reinforce, and)
conj(join, reinforce)
case(coil, with)
obl(reinforce, coil)
punct(pattern, .)
det(pattern, a)
compound(pattern, cardboard)
obj(reinforce, pattern)
acl(pattern, cut)
mark(fit, to)
xcomp(cut, fit)
case(holder, inside)
obl(fit, holder)
aux(help, will)
acl:relcl(pattern, help)
mark(prevent, to)
xcomp(help, prevent)
obj(prevent, warping)
punct(put, .)
compound(pattern, place)
root(ROOT, pattern)
case(holder, inside)
nmod(pattern, holder)
punct(pattern, ;)
punct(pattern, ;)
parataxis(pattern, use)
nummod(strip, three)
obj(use, strip)
case(clay, of)
nmod(strip, clay)
mark(hold, to)
advcl(use, hold)
case(place, in)
obl(hold, place)
punct(see, ()
parataxis(use, see)
obj(see, Fig.)
nummod(Fig., 2)
punct(Fig., ,)
appos(Fig., page)
nummod(Fig., 71)
punct(see, ))
punct(pattern, .)
aux(use, do)
advmod(use, not)
root(ROOT, use)
obj(use, wood)
mark(shrink, as)
nsubj(shrink, it)
aux(shrink, will)
advmod(shrink, not)
advcl(use, shrink)
case(clay, with)
det(clay, the)
obl(shrink, clay)
cc(cause, and)
aux(cause, would)
conj(shrink, cause)
obj(cause, breakage)
punct(use, .)
root(ROOT, let)
det(project, all)
obj(let, project)
xcomp(let, dry)
advmod(dry, slowly)
case(day, for)
amod(day, several)
obl(dry, day)
punct(let, .)
amod(greenware, clean)
root(ROOT, greenware)
punct(greenware, .)
compound(fire, Bisque)
nsubj:pass(glaze, fire)
case(cone, to)
nmod(fire, cone)
nummod(cone, 08)
punct(fire, .)
nsubj:pass(glaze, inside)
case(piece, of)
nmod(inside, piece)
aux:pass(glaze, be)
root(ROOT, glaze)
case(coat, with)
nummod(coat, three)
obl(glaze, coat)
case(glaze, of)
compound(turn, Creek)
punct(turn, -)
compound(bottle, turn)
compound(glaze, bottle)
amod(glaze, green)
amod(glaze, antique)
nmod(coat, glaze)
punct(glaze, .)
advmod(finish, outside)
aux:pass(finish, be)
root(ROOT, finish)
case(toner, with)
compound(turn, Creek)
punct(turn, -)
compound(toner, turn)
amod(toner, brown)
obl(finish, toner)
acl(toner, brush)
advmod(brush, on)
cc(spong, and)
conj(finish, spong)
compound:prt(spong, off)
mark(give, to)
advcl(spong, give)
amod(finish, antique)
obj(give, finish)
punct(finish, .)
root(ROOT, Fired)
case(cone, to)
obl(Fired, cone)
nummod(cone, 06-05)
punct(Fired, .)
conj(Fired, change)
obj(change, color)
mark(change, to)
acl(color, change)
case(yarn, from)
nummod(yarn, one)
compound(yarn, color)
obl(change, yarn)
case(another, to)
nmod(yarn, another)
punct(Fired, : )
mark(change, when)
advcl(pick, change)
case(color, from)
nummod(color, one)
obl(change, color)
case(another, to)
nmod(color, another)
punct(pick, ,)
mark(pick, whether)
advcl(pick, work)
case(side, on)
amod(side, right)
cc(wrong, or)
conj(right, wrong)
obl(work, side)
punct(pick, ,)
root(ROOT, pick)
compound:prt(pick, up)
det(strand, the)
amod(strand, new)
obj(pick, strand)
case(strand, from)
amod(strand, underneath)
amod(strand, drop)
obl(pick, strand)
punct(pick, .)
nsubj(show, photograph)
root(ROOT, show)
det(side, the)
amod(side, wrong)
obj(show, side)
case(work, of)
nmod(side, work)
case(strand, with)
compound(strand, light)
nmod(side, strand)
aux:pass(pick, be)
advcl(show, pick)
compound:prt(pick, up)
case(strand, under)
amod(strand, dark)
obl(pick, strand)
case(position, in)
obl(pick, position)
mark(purl, to)
aux:pass(purl, be)
acl(position, purl)
punct(show, .)
mark(measure, to)
root(ROOT, measure)
obj(measure, work)
punct(article, :)
compound(article, spread)
obj(measure, article)
case(surface, on)
amod(surface, flat)
nmod(article, surface)
case(width, to)
amod(width, require)
nmod(article, width)
mark(measure, before)
advcl(article, measure)
obj(measure, length)
case(center, at)
obl(measure, center)
punct(article, .)
conj(measure, measure)
obj(measure, armhole)
mark(measure, to)
xcomp(measure, measure)
obj(measure, armhole)
punct(Mark, :)
nsubj:pass(bound, Mark)
flat(Mark, row)
case(stitch, on)
det(stitch, which)
amod(stitch, first)
obl(bound, stitch)
aux(bound, have)
aux:pass(bound, be)
ccomp(measure, bound)
compound:prt(bound, off)
case(armhole, for)
obl(bound, armhole)
mark(draw, by)
advcl(bound, draw)
det(thread, a)
amod(thread, contrast)
amod(thread, color)
obj(draw, thread)
case(it, through)
obl(draw, it)
punct(bound, .)
compound(work, place)
root(ROOT, work)
case(surface, on)
det(surface, a)
amod(surface, flat)
nmod(work, surface)
cc(smooth, and)
conj(work, smooth)
compound:prt(smooth, out)
punct(work, .)
root(ROOT, measure)
advmod(up, straight)
advmod(measure, up)
case(row, from)
amod(row, mark)
nmod(measure, row)
punct(measure, .)
root(ROOT, see)
obj(see, illustration)
punct(see, .)
mark(insert, to)
root(ROOT, insert)
obj(insert, marker)
punct(insert, : )
mark(read, when)
nsubj(read, direction)
advcl(put, read)
punct(marker, ``)
case(marker, sl)
det(marker, a)
obl(read, marker)
case(needle, on)
nmod(marker, needle)
punct(marker, '')
punct(put, ,)
root(ROOT, put)
det(pin, a)
amod(pin, small)
compound(pin, safety)
obj(put, pin)
punct(clip, ,)
compound(clip, paper)
conj(pin, clip)
punct(marker, ,)
cc(marker, or)
amod(marker, commercial)
compound(marker, ring)
conj(pin, marker)
case(needle, on)
nmod(marker, needle)
punct(put, .)
mark(work, in)
advcl(slip, work)
punct(slip, ,)
advmod(slip, always)
root(ROOT, slip)
obj(slip, marker)
case(needle, from)
nummod(needle, one)
obl(slip, needle)
case(another, to)
nmod(needle, another)
punct(slip, .)
mark(mark, to)
advcl(slip, mark)
det(row, a)
obj(mark, row)
cc(stitch, or)
conj(row, stitch)
punct(tie, ,)
conj(mark, tie)
amod(thread, contrast)
obj(tie, thread)
case(end, around)
obl(tie, end)
case(row, of)
nmod(end, row)
cc(stitch, or)
conj(row, stitch)
mark(mark, to)
aux:pass(mark, be)
acl(stitch, mark)
punct(slip, .)
amod(seam, backstitch)
root(ROOT, seam)
mark(sew, to)
acl(seam, sew)
obj(sew, seam)
case(backstitch, with)
obl(sew, backstitch)
punct(seam, : )
amod(seam, most)
nsubj:pass(sewn, seam)
aux:pass(sewn, be)
root(ROOT, sewn)
case(backstitch, with)
obl(sewn, backstitch)
punct(sewn, ,)
advmod(edge, especially)
case(edge, on)
amod(edge, curve)
punct(slanted, ,)
conj(curve, slanted)
cc(loose, or)
conj(curve, loose)
obl(sewn, edge)
punct(sewn, .)
root(ROOT, pin)
amod(side, right)
obj(pin, side)
case(piece, of)
nmod(side, piece)
advmod(pin, together)
punct(pin, ,)
parataxis(pin, keep)
obj(keep, edge)
advmod(match, even)
cc(match, and)
conj(keep, match)
obj(match, row)
cc(pattern, or)
conj(row, pattern)
punct(thread, .)
parataxis(pin, thread)
acl(thread, match)
obj(match, yarn)
case(needle, in)
amod(needle, tapestry)
obl(match, needle)
punct(run, .)
conj(pin, run)
obj(run, end)
case(yarn, of)
nmod(end, yarn)
case(stitch, through)
amod(stitch, several)
obl(run, stitch)
case(edge, along)
nmod(stitch, edge)
mark(secure, to)
acl(edge, secure)
punct(run, ;)
punct(run, ;)
amod(piece, backstitch)
nsubj(close, piece)
advmod(close, together)
parataxis(run, close)
case(edge, to)
obl(close, edge)
punct(pin, .)
aux(draw, do)
advmod(draw, not)
root(ROOT, draw)
obj(draw, yarn)
advmod(tight, too)
xcomp(draw, tight)
punct(draw, .)
root(ROOT, see)
obj(see, illustration)
punct(see, .)
mark(sew, to)
root(ROOT, sew)
case(sleeve, in)
obl(sew, sleeve)
punct(seam, :)
compound(seam, place)
compound(seam, sleeve)
parataxis(sew, seam)
case(underarm, at)
compound(underarm, center)
nmod(seam, underarm)
cc(center, and)
conj(underarm, center)
case(cap, of)
compound(cap, sleeve)
nmod(underarm, cap)
case(seam, at)
compound(seam, shoulder)
nmod(underarm, seam)
punct(seam, .)
root(ROOT, ease)
case(fullness, in)
det(fullness, any)
amod(fullness, extra)
nmod(ease, fullness)
advmod(around, evenly)
advmod(ease, around)
punct(ease, .)
compound(seam, Backstitch)
compound(seam, seam)
punct(seam, .)
compound(seam, weav)
nsubj:pass(wave, seam)
mark(weave, to)
acl(seam, weave)
obj(weave, seam)
advmod(weave, together)
punct(edge, :)
amod(edge, Straight)
amod(edge, vertical)
nsubj:pass(wave, edge)
punct(edge, ,)
case(those, such)
fixed(such, as)
nmod(edge, those)
case(seam, at)
det(seam, the)
amod(seam, back)
nmod(those, seam)
case(sock, of)
det(sock, a)
nmod(seam, sock)
punct(wave, ,)
aux(wave, can)
aux:pass(wave, be)
root(ROOT, wave)
advmod(wave, together)
advmod(wave, invisibly)
punct(wave, .)
obj(wave, thread)
acl(thread, match)
obj(match, yarn)
case(needle, in)
amod(needle, tapestry)
obl(match, needle)
punct(thread, .)
root(ROOT, hold)
obj(hold, edge)
advmod(hold, together)
punct(hold, ,)
advmod(up, right)
compound(up, side)
advmod(hold, up)
punct(hold, .)
nsubj(long, Hotei)
cop(long, be)
nummod(foot, 23)
obl:npmod(long, foot)
root(ROOT, long)
case(beam, with)
det(beam, a)
compound(1, 8)
punct(foot, -)
nummod(foot, 1)
punct(foot, /)
nummod(foot, 2)
punct(foot, -)
compound(beam, foot)
obl(long, beam)
cc(inch, and)
det(inch, every)
conj(beam, inch)
det(boat, a)
compound(boat, family)
conj(beam, boat)
punct(long, .)
nsubj(ride, Menfolk)
aux(ride, can)
root(ROOT, ride)
case(cockpit, in)
det(cockpit, the)
amod(cockpit, forward)
obl(ride, cockpit)
advmod(have, where)
det(helmsman, the)
nsubj(have, helmsman)
acl:relcl(cockpit, have)
det(view, a)
amod(view, clear)
obj(have, view)
punct(ride, .)
nsubj(sleep, Youngsters)
aux(sleep, can)
parataxis(ride, sleep)
cc(amuse, or)
conj(sleep, amuse)
obj(amuse, themselves)
advmod(amuse, safely)
case(cabin, in)
det(cabin, the)
amod(cabin, large)
obl(amuse, cabin)
nsubj(have, which)
acl:relcl(cabin, have)
nummod(foot, 5)
punct(foot, -)
compound(headroom, foot)
nummod(inch, 11)
punct(inch, -)
compound(headroom, inch)
obj(have, headroom)
punct(bunk, ,)
conj(headroom, bunk)
case(toilet, for)
nummod(toilet, three)
punct(galley, ,)
compound(toilet, galley)
cc(marine, and)
conj(three, marine)
nmod(headroom, toilet)
punct(ride, .)
det(gal, the)
nsubj(sun, gal)
aux(sun, can)
root(ROOT, sun)
obj(sun, themselves)
case(cockpit, in)
det(cockpit, the)
amod(cockpit, roomy)
compound(cockpit, aft)
obl(sun, cockpit)
punct(sun, .)
nsubj:pass(distribute, all)
aux:pass(distribute, be)
advmod(distribute, well)
root(ROOT, distribute)
punct(crowded, ,)
advmod(crowded, not)
conj(distribute, crowded)
advmod(crowded, together)
case(stern, near)
det(stern, the)
obl(crowded, stern)
punct(distribute, .)
cc(level, and)
case(weight, with)
compound(weight, passenger)
nsubj(shift, weight)
advcl(level, shift)
advmod(shift, forward)
punct(level, ,)
nsubj(level, Hotei)
root(ROOT, level)
compound:prt(level, off)
case(speed, for)
obl(level, speed)
case(power, under)
nmod(speed, power)
case(800, of)
det(800, a)
compound(800, Merc)
nmod(power, 800)
punct(level, .)
det(motor, the)
nummod(hp, 80)
punct(hp, -)
compound(motor, hp)
nsubj(drive, motor)
root(ROOT, drive)
obj(drive, she)
case(mph, at)
nummod(mph, 25)
obl(drive, mph)
case(aboard, with)
nummod(aboard, six)
obl(drive, aboard)
punct(drive, !)
punct(drive, !)
case(aboard, with)
advmod(aboard, only)
compound(aboard, two)
advmod(do, aboard)
punct(do, ,)
nsubj(do, Hotei)
root(ROOT, do)
obj(do, better)
case(mph, than)
nummod(mph, 27)
obj(do, mph)
punct(do, --)
cc(give, and)
nsubj(give, she)
conj(do, give)
det(ride, a)
amod(ride, comfortable)
obj(give, ride)
case(speed, at)
det(speed, this)
nmod(ride, speed)
advmod(chop, even)
case(chop, in)
det(chop, a)
nummod(foot, three)
punct(foot, -)
compound(chop, foot)
obl(give, chop)
punct(do, .)
nsubj(bank, she)
advmod(bank, also)
root(ROOT, bank)
case(turn, into)
det(turn, a)
obl(bank, turn)
case(runabout, like)
det(runabout, a)
amod(runabout, fine)
nmod(turn, runabout)
punct(bank, --)
advmod(dig, not)
parataxis(bank, dig)
advmod(dig, in)
case(outside, on)
det(outside, the)
obl(dig, outside)
mark(throw, to)
advcl(dig, throw)
obj(throw, passenger)
advmod(boat, all)
case(boat, over)
det(boat, the)
obl(throw, boat)
case(cruiser, like)
det:predet(cruiser, many)
det(cruiser, a)
amod(cruiser, small)
compound(cruiser, cabin)
obl(throw, cruiser)
punct(bank, .)
cc(boat, nor)
cop(boat, be)
nsubj(boat, she)
det(boat, a)
amod(boat, wet)
root(ROOT, boat)
punct(boat, .)
nsubj(out, we)
aux(out, have)
cop(out, be)
root(ROOT, out)
case(wave, in)
nummod(foot, five)
punct(foot, -)
compound(wave, foot)
obl(out, wave)
cc(stay, and)
conj(out, stay)
xcomp(stay, dry)
punct(out, . )
det(lot, a)
nsubj(go, lot)
case(thought, of)
nmod(lot, thought)
root(ROOT, go)
case(construction, into)
compound(construction, storage)
compound(construction, space)
obl(go, construction)
punct(go, .)
expl(be, there)
root(ROOT, be)
det(compartment, a)
amod(compartment, large)
nsubj(be, compartment)
case(cockpit, in)
det(cockpit, the)
amod(cockpit, forward)
nmod(compartment, cockpit)
case(chart, for)
nmod(cockpit, chart)
cc(item, and)
amod(item, other)
conj(chart, item)
punct(be, .)
det(cabin, the)
nsubj(have, cabin)
root(ROOT, have)
amod(shelf, several)
obj(have, shelf)
case(item, for)
amod(item, small)
nmod(shelf, item)
cc(storage, and)
conj(item, storage)
case(bunk, under)
det(bunk, the)
nmod(item, bunk)
case(skiis, for)
compound(skiis, water)
nmod(bunk, skiis)
punct(jacket, ,)
compound(jacket, life)
conj(skiis, jacket)
punct(etc, ,)
conj(skiis, etc)
punct(have, .)
punct(have, .)
det(cockpit, the)
compound(cockpit, aft)
nsubj(have, cockpit)
root(ROOT, have)
det(storage, a)
compound(storage, Af)
obj(have, storage)
appos(storage, bin)
case(foot, over)
nummod(foot, six)
obl:npmod(long, foot)
advmod(have, long)
nsubj(double, that)
acl:relcl(storage, double)
case(seat, as)
det(seat, a)
obl(double, seat)
punct(have, .)
case(side, on)
det(side, each)
obl(be, side)
case(motor, of)
det(motor, the)
nmod(side, motor)
discourse(be, well)
expl(be, there)
root(ROOT, be)
nsubj(be, storage)
case(battery, for)
nmod(storage, battery)
punct(bumper, ,)
conj(battery, bumper)
punct(line, ,)
conj(battery, line)
cc(prop, and)
compound(prop, spare)
conj(battery, prop)
case(tank, with)
nummod(gallon, six)
punct(gallon, -)
compound(gas, gallon)
compound(tank, gas)
nmod(prop, tank)
advmod(tank, below)
punct(be, .)
det(itself, the)
advmod(itself, well)
nsubj:pass(design, itself)
aux:pass(design, be)
root(ROOT, design)
mark(take, to)
xcomp(design, take)
nummod(800', two)
compound(800', Merc)
obj(take, 800')
cc(500', or)
conj(800', 500')
mark(wish, if)
nsubj(wish, you)
advcl(take, wish)
cc(be, and)
expl(be, there)
conj(design, be)
nsubj(be, room)
case(tank, for)
det(tank, a)
nummod(gallon, 25)
punct(gallon, -)
compound(tank, gallon)
amod(gallon, long)
punct(gas, -)
compound(gas, cruise)
compound(tank, gas)
nmod(room, tank)
case(it, below)
nmod(tank, it)
punct(design, .)
advmod(build, needless)
mark(say, to)
csubj(needless, say)
punct(build, ,)
nsubj(build, you)
aux(build, can)
advmod(build, not)
root(ROOT, build)
obj(build, Hotei)
case(couple, in)
det(couple, a)
obl(build, couple)
case(week, of)
nmod(couple, week)
punct(build, .)
nmod:poss(time, we)
compound(time, building)
nsubj(hour, time)
cop(hour, be)
advmod(hour, slightly)
advmod(400, over)
nummod(hour, 400)
root(ROOT, hour)
punct(hour, --)
cc(cost, but)
det(cost, the)
amod(cost, total)
nsubj(cost, cost)
case(hull, for)
det(hull, the)
nmod(cost, hull)
case(bottom, with)
compound(bottom, Fiberglas)
nmod(cost, bottom)
punct(sink, ,)
conj(bottom, sink)
punct(head, ,)
conj(bottom, head)
cc(hardware, and)
conj(bottom, hardware)
cop($, be)
case($, under)
conj(hour, $)
nummod($, 800)
punct(cost, .)
det(boat, a)
amod(boat, comparable)
amod(boat, manufacture)
nsubj(cost, boat)
aux(cost, would)
parataxis($, cost)
xcomp(cost, close)
case($, to)
obl(cost, $)
compound($, 3,000)
punct(hour, .)
root(ROOT, consider)
obj(have, what)
nsubj(have, you)
ccomp(consider, have)
mark(earn, to)
xcomp(have, earn)
mark(able, to)
cop(able, be)
advcl(earn, able)
mark(spend, to)
xcomp(able, spend)
det($, the)
obj(spend, $)
nummod($, 3,000)
cc(worth, and)
nmod:poss(time, you)
compound(time, building)
nsubj(worth, time)
cop(worth, be)
advmod(worth, well)
conj(consider, worth)
obj(worth, it)
punct(consider, . )
det(trailer, a)
compound(trailer, Gator)
nsubj:pass(use, trailer)
punct(trailer, ,)
appos(trailer, Model)
nummod(Model, 565)
punct(use, ,)
aux:pass(use, be)
root(ROOT, use)
mark(transport, to)
xcomp(use, transport)
det(boat, the)
obj(transport, boat)
case(waterway, to)
det(waterway, the)
obl(transport, waterway)
punct(use, .)
det(piece, this)
nsubj(cost, piece)
case(equipment, of)
nmod(piece, equipment)
root(ROOT, cost)
det(little, a)
nmod:npmod($, little)
advmod($, over)
obj(cost, $)
nummod($, 600)
cc(save, but)
nsubj(save, it)
aux(save, will)
conj(cost, save)
iobj(save, you)
obj(save, that)
case(fee, in)
compound(fee, mooring)
cc(hauling, and)
conj(mooring, hauling)
obl(save, fee)
case(year, in)
det(year, a)
amod(year, few)
obl(save, year)
punct(cost, .)
det(frame, all)
nsubj(mahogany, frame)
case(Hotei, in)
nmod(frame, Hotei)
cop(mahogany, be)
nummod(inch, one)
punct(inch, -)
compound(mahogany, inch)
root(ROOT, mahogany)
nsubj(thickness, which)
punct(thickness, ,)
case(state, in)
det(state, the)
amod(state, dress)
obl(buy, state)
nsubj(buy, you)
acl:relcl(mahogany, buy)
obj(buy, it)
punct(thickness, ,)
cop(thickness, be)
case(thickness, about)
det(thickness, the)
nummod(inch, 13/16)
punct(inch, -)
compound(thickness, inch)
parataxis(mahogany, thickness)
acl(thickness, specify)
case(drawing, in)
det(drawing, the)
obl(specify, drawing)
punct(mahogany, .)
advmod(buy, therefore)
punct(buy, ,)
det(lumber, the)
nsubj:pass(buy, lumber)
aux:pass(buy, be)
root(ROOT, buy)
case(plank, in)
obl(buy, plank)
cc(rip, and)
conj(buy, rip)
case(size, to)
obl(rip, size)
case(batten, for)
obl(rip, batten)
punct(etc., ,)
conj(batten, etc.)
punct(see, ,)
case(table, on)
det(table, a)
nsubj(see, table)
conj(buy, see)
punct(see, .)
case(screw, besides)
compound(screw, flathead)
compound(screw, bronze)
obl(use, screw)
punct(use, ,)
amod(Stronghold, silicon)
compound(Stronghold, bronze)
compound(nail, Stronghold)
nsubj:pass(use, nail)
punct(make, ()
acl(nail, make)
case(nail, by)
compound(nail, Independent)
obl(make, nail)
cc(Co., &)
compound(Co., pack)
conj(nail, Co.)
punct(Bridgewater, ,)
appos(nail, Bridgewater)
punct(Mass., ,)
appos(Bridgewater, Mass.)
punct(Mass., ))
aux:pass(use, be)
root(ROOT, use)
advmod(use, extensively)
case(assembly, in)
obl(use, assembly)
cc(use, and)
compound(glue, Weldwood)
compound(glue, resorcinol)
nsubj:pass(use, glue)
aux:pass(use, be)
conj(use, use)
case(joint, in)
det:predet(joint, all)
det(joint, the)
obl(use, joint)
punct(use, .)
nsubj(follow, construction)
root(ROOT, follow)
det(study, a)
amod(study, thorough)
obj(follow, study)
case(drawing, of)
det(drawing, the)
nmod(study, drawing)
punct(follow, .)
root(ROOT, start)
mark(lay, by)
advcl(start, lay)
compound:prt(lay, out)
det(frame, the)
nummod(frame, six)
obj(lay, frame)
cc(transom, and)
det(transom, the)
conj(frame, transom)
case(floor, on)
det(floor, a)
compound(floor, level)
nmod(frame, floor)
punct(start, .)
parataxis(start, Draw)
det(outline, each)
obj(Draw, outline)
case(chalk, in)
det(chalk, a)
amod(color, different)
punct(color, -)
compound(chalk, color)
obl(Draw, chalk)
punct(chalk, ,)
appos(chalk, one)
case(top, on)
nmod(one, top)
case(other, of)
det(other, the)
nmod(top, other)
punct(start, .)
case(way, in)
det(way, this)
obl(able, way)
nsubj(able, you)
aux(able, will)
cop(able, be)
root(ROOT, able)
mark(detect, to)
xcomp(able, detect)
det(mistake, any)
amod(mistake, obvious)
obj(detect, mistake)
punct(able, .)
det(frame, the)
compound(frame, transom)
nsubj:pass(make, frame)
aux:pass(make, be)
root(ROOT, make)
advmod(make, first)
case(joint, with)
det(joint, the)
obl(make, joint)
acl(joint, lap)
punct(glue, ,)
conj(lap, glue)
cc(fasten, and)
conj(lap, fasten)
case(nail, with)
nummod(inch, one)
punct(inch, -)
compound(nail, inch)
punct(nail, ,)
compound(nail, no.)
nummod(no., 12)
compound(nail, Stronghold)
obl(fasten, nail)
punct(make, .)
mark(notching, after)
advcl(secure, notching)
obj(notching, it)
case(keelson, for)
det(keelson, the)
obl(notching, keelson)
punct(chine, ,)
conj(keelson, chine)
cc(batten, and)
conj(keelson, batten)
punct(secure, ,)
det(transom, the)
nummod(inch, half)
punct(inch, -)
compound(transom, inch)
compound(transom, plywood)
nsubj:pass(secure, transom)
aux:pass(secure, be)
root(ROOT, secure)
case(it, to)
obl(secure, it)
case(glue, with)
obl(secure, glue)
cc(nail, and)
det(nail, the)
amod(type, same)
compound(nail, type)
conj(glue, nail)
punct(secure, .)
det(frame, all)
nsubj:pass(but, frame)
aux:pass(but, be)
root(ROOT, but)
case(joint, at)
det(joint, the)
obl(but, joint)
cc(glue, and)
nummod(inch, 3)
punct(inch, /)
nummod(inch, 8)
punct(inch, -)
compound(gusset, inch)
compound(gusset, plywood)
nsubj:pass(glue, gusset)
aux:pass(glue, be)
conj(but, glue)
cc(nail, and)
conj(glue, nail)
case(side, on)
det(side, each)
obl(nail, side)
case(joint, of)
det(joint, each)
nmod(side, joint)
punct(use, ,)
advmod(use, again)
advcl(glue, use)
det(nail, the)
nummod(inch, one)
punct(inch, -)
compound(nail, inch)
punct(nail, ,)
compound(nail, no.)
nummod(no., 12)
obj(use, nail)
punct(but, .)
det(frame, the)
nsubj:pass(notch, frame)
aux:pass(notch, be)
root(ROOT, notch)
advmod(keelson, only)
case(keelson, for)
det(keelson, the)
obl(notch, keelson)
cc(chine, and)
det(chine, the)
conj(keelson, chine)
punct(notch, .)
mark(notch, if)
advcl(require, notch)
case(batten, for)
det(batten, the)
obl(notch, batten)
punct(require, ,)
nsubj(require, they)
aux(require, would)
root(ROOT, require)
amod(work, more)
obj(require, work)
punct(weaken, ,)
aux:pass(weaken, be)
conj(require, weaken)
cc(have, and)
compound(hole, limber)
nsubj(have, hole)
aux(have, would)
conj(weaken, have)
mark(bored, to)
aux:pass(bored, be)
xcomp(have, bored)
mark(flow, so)
fixed(so, that)
compound(water, bilge)
nsubj(flow, water)
aux(flow, could)
advcl(bored, flow)
obl(flow, through)
punct(flow, .)
advmod(flow, nowhere)
case(boat, in)
det(boat, the)
obl(do, boat)
conj(flow, do)
det(frame, the)
obj(do, frame)
xcomp(do, come)
case(contact, in)
obl(come, contact)
case(plank, with)
det(plank, the)
compound(plank, plywood)
nmod(contact, plank)
punct(do, .)
det(jig, the)
nsubj:pass(erect, jig)
aux:pass(erect, be)
root(ROOT, erect)
case(frame, after)
det(frame, the)
obl(erect, frame)
cc(transom, and)
conj(frame, transom)
cop(complete, be)
conj(erect, complete)
punct(erect, .)
nsubj(step, this)
cop(step, be)
det(step, a)
amod(step, important)
root(ROOT, step)
mark(cause, because)
det(misalignment, any)
nsubj(cause, misalignment)
aux(cause, would)
advcl(step, cause)
advmod(worse, progressively)
amod(misalignment, worse)
obj(cause, misalignment)
case(hull, in)
det(hull, the)
nmod(misalignment, hull)
mark(advance, as)
nsubj(advance, you)
advcl(cause, advance)
case(construction, in)
obl(advance, construction)
punct(step, .)
cop(sure, be)
root(ROOT, sure)
det(member, all)
nsubj(parallel, member)
cop(parallel, be)
ccomp(sure, parallel)
punct(vertical, ,)
conj(parallel, vertical)
cc(level, and)
conj(parallel, level)
mark(require, as)
advcl(parallel, require)
punct(sure, .)
case(frame, after)
det(frame, the)
obl(set, frame)
cc(transom, and)
conj(frame, transom)
aux:pass(set, be)
root(ROOT, set)
compound:prt(set, up)
case(jig, on)
det(jig, the)
obl(set, jig)
cc(brace, and)
advmod(brace, temporarily)
conj(set, brace)
punct(but, ,)
det(piece, a)
obj(brace, piece)
case(mahogany, of)
nummod(inch, three)
punct(wide, -)
obl:npmod(wide, inch)
punct(wide, -)
amod(mahogany, wide)
nmod(piece, mahogany)
punct(give, ()
advmod(width, only)
nsubj:pass(give, width)
aux(give, will)
aux:pass(give, be)
acl:relcl(mahogany, give)
mark(use, since)
det(thickness, the)
nummod(inch, 13/16)
punct(inch, -)
compound(thickness, inch)
nsubj:pass(use, thickness)
aux:pass(use, be)
advcl(but, use)
obl(use, throughout)
punct(use, ))
aux:pass(but, be)
conj(give, but)
case(frame, between)
obl(but, frame)
nummod(frame, one)
cc(two, and)
conj(one, two)
case(line, below)
det(line, the)
conj(frame, line)
case(keelson, of)
det(keelson, the)
nmod(line, keelson)
punct(but, .)
det(frame, the)
nsubj:pass(glue, frame)
aux:pass(glue, be)
root(ROOT, glue)
cc(screw, and)
conj(glue, screw)
case(piece, to)
det(piece, this)
obl(screw, piece)
punct(glue, .)
det(joint, the)
nsubj:pass(reinforce, joint)
aux:pass(reinforce, be)
advmod(reinforce, also)
root(ROOT, reinforce)
case(side, on)
det(side, each)
obl(reinforce, side)
case(block, with)
amod(block, small)
obl(reinforce, block)
acl(block, set)
case(cloth, in)
amod(cloth, resin-saturate)
compound(cloth, Fiberglas)
obl(set, cloth)
cc(nail, and)
conj(set, nail)
punct(reinforce, .)
nsubj(piece, it)
cop(piece, be)
case(piece, over)
det(piece, this)
root(ROOT, piece)
mark(splice, that)
det(stem, the)
amod(stem, laminate)
nsubj:pass(splice, stem)
cc(keelson, and)
conj(stem, keelson)
aux:pass(splice, be)
acl(piece, splice)
punct(piece, .)
det(keelson, the)
nsubj:pass(install, keelson)
punct(keelson, ,)
acl(keelson, make)
case(width, of)
nummod(width, two)
nummod(inch, three)
punct(inch, -)
compound(width, inch)
obl(make, width)
punct(install, ,)
aux:pass(install, be)
advmod(install, next)
root(ROOT, install)
punct(install, .)
det(piece, the)
amod(piece, first)
nsubj:pass(glue, piece)
aux:pass(glue, be)
root(ROOT, glue)
cc(screw, and)
conj(glue, screw)
case(frame, to)
det(frame, the)
obl(screw, frame)
cc(transom, and)
conj(frame, transom)
cc(piece, and)
det(piece, the)
conj(frame, piece)
acl(piece, but)
case(frame, between)
obl(but, frame)
nummod(frame, one)
cc(two, and)
conj(one, two)
punct(glue, .)
det(piece, the)
amod(piece, second)
nsubj(glue, piece)
cop(glue, be)
case(turn, in)
compound(glue, turn)
root(ROOT, glue)
cc(screw, and)
conj(glue, screw)
case(first, to)
det(first, the)
obl(screw, first)
punct(glue, .)
root(ROOT, note)
punct(note, ,)
advmod(shorter, however)
punct(note, ,)
mark(shorter, that)
nsubj(shorter, it)
cop(shorter, be)
nummod(inch, six)
obl:npmod(shorter, inch)
appos(note, shorter)
case(end, at)
det(end, the)
amod(end, forward)
obl(shorter, end)
punct(shorter, .)
nsubj:pass(use, one-inch)
punct(one-inch, ,)
compound(screw, no.)
nummod(no., 10)
nsubj:pass(use, screw)
aux:pass(use, be)
appos(note, use)
case(case, in)
det(case, both)
obl(use, case)
punct(note, . )
det(jig, a)
compound(jig, stem)
nsubj(cut, jig)
cop(cut, be)
advmod(cut, next)
root(ROOT, cut)
case(shape, to)
det(shape, the)
amod(shape, proper)
obl(cut, shape)
cc(fasten, and)
advmod(fasten, temporarily)
conj(cut, fasten)
case(frame, to)
obl(fasten, frame)
nummod(frame, one)
punct(cut, .)
det(stem, the)
nsubj:pass(laminate, stem)
aux:pass(laminate, be)
root(ROOT, laminate)
case(piece, from)
nummod(piece, four)
obl(laminate, piece)
punct(laminate, .)
root(ROOT, take)
nummod(piece, two)
nummod(inch, three)
punct(inch, -)
obl:npmod(wide, inch)
punct(wide, -)
amod(piece, wide)
obj(take, piece)
cc(rip, and)
conj(take, rip)
obj(rip, they)
compound:prt(rip, down)
det(center, the)
obj(rip, center)
case(thickness, of)
det(thickness, the)
nmod(center, thickness)
mark(make, to)
advcl(rip, make)
det(four, the)
obj(make, four)
punct(spread, .)
advmod(spread, then)
parataxis(take, spread)
det(amount, a)
amod(amount, generous)
obj(spread, amount)
case(glue, of)
nmod(amount, glue)
case(piece, on)
det(piece, the)
nummod(piece, four)
nmod(amount, piece)
cc(bend, and)
conj(spread, bend)
obj(bend, they)
case(place, into)
obl(bend, place)
case(jig, on)
det(jig, the)
obl(bend, jig)
punct(take, .)
det(butt, the)
amod(butt, first)
nummod(piece, two)
compound(butt, piece)
root(ROOT, butt)
case(member, against)
det(member, the)
amod(member, inner)
nmod(butt, member)
case(keelson, of)
det(keelson, the)
nmod(member, keelson)
cc(glue, and)
aux:pass(glue, be)
conj(butt, glue)
cc(screw, and)
conj(glue, screw)
case(brace, to)
det(brace, the)
obl(screw, brace)
case(frame, between)
det(frame, the)
amod(frame, first)
nummod(frame, two)
nmod(brace, frame)
punct(glue, .)
det(lap, the)
amod(lap, second)
nummod(piece, two)
compound(lap, piece)
root(ROOT, lap)
case(member, over)
det(member, the)
amod(member, inner)
nmod(lap, member)
case(keelson, of)
det(keelson, the)
nmod(member, keelson)
cc(butt, and)
conj(keelson, butt)
case(member, against)
det(member, the)
amod(member, outer)
nmod(keelson, member)
punct(lap, .)
nsubj:pass(glue, they)
aux:pass(glue, be)
root(ROOT, glue)
cc(screw, and)
conj(glue, screw)
case(member, to)
det(member, the)
amod(member, inner)
obl(screw, member)
case(keelson, of)
det(keelson, the)
nmod(member, keelson)
punct(glue, . )
det(number, a)
nsubj(hold, number)
case(c, of)
compound(clamp, c)
nmod(number, clamp)
root(ROOT, hold)
det(piece, the)
obj(hold, piece)
advmod(hold, together)
case(jig, on)
det(jig, the)
obl(hold, jig)
case(set, until)
det(set, the)
compound(set, glue)
obl(hold, set)
punct(hold, .)
det(batten, all)
amod(batten, bottom)
nsubj(wide, batten)
cop(wide, be)
nummod(inch, two)
obl:npmod(wide, inch)
root(ROOT, wide)
punct(wide, .)
det(one, the)
compound(one, side)
nsubj(narrower, one)
cop(narrower, be)
det(narrower, a)
nummod(inch, half)
punct(inch, -)
obl:npmod(narrower, inch)
root(ROOT, narrower)
punct(narrower, .)
det(batten, the)
nsubj:pass(fasten, batten)
aux:pass(fasten, be)
advmod(fasten, carefully)
root(ROOT, fasten)
case(place, in)
obl(fasten, place)
case(fair, after)
det(fair, some)
amod(fair, necessary)
obl(fasten, fair)
case(frame, on)
det(frame, all)
nmod(fair, frame)
punct(fasten, .)
nsubj:pass(use, Glue)
cc(inch, and)
compound(1, 1)
punct(1, -)
nummod(inch, 1)
punct(inch, /)
nummod(inch, 2)
punct(inch, -)
conj(Glue, inch)
punct(use, ,)
compound(screw, no.)
nummod(no., 10)
nsubj:pass(use, screw)
aux:pass(use, be)
root(ROOT, use)
punct(use, .)
nsubj(important, placement)
cop(important, be)
root(ROOT, important)
mark(rest, because)
det(seat, the)
compound(seat, rear)
nsubj(rest, seat)
punct(bunk, ,)
conj(seat, bunk)
cc(seat, and)
amod(seat, front)
compound(seat, jump)
conj(seat, seat)
advcl(important, rest)
obl(rest, on)
cc(fasten, or)
aux:pass(fasten, be)
conj(rest, fasten)
case(many, to)
obl(fasten, many)
case(batten, of)
det(batten, the)
compound(batten, side)
nmod(many, batten)
punct(important, .)
case(exception, with)
det(exception, the)
obl(run, exception)
case(batten, of)
nummod(batten, two)
nmod(exception, batten)
punct(run, ,)
nsubj(run, all)
root(ROOT, run)
case(stem, to)
det(stem, the)
obl(run, stem)
advmod(glue, where)
nsubj:pass(glue, they)
aux:pass(glue, be)
acl:relcl(stem, glue)
cc(screw, and)
conj(glue, screw)
mark(bevel, after)
amod(bevel, careful)
advcl(screw, bevel)
punct(run, .)
det(chine, the)
nsubj(go, chine)
root(ROOT, go)
case(way, in)
det(way, the)
amod(way, same)
obl(go, way)
mark(make, except)
mark(make, that)
nsubj:pass(make, they)
aux:pass(make, be)
advcl(go, make)
case(piece, of)
nummod(piece, two)
obl(make, piece)
case(wood, of)
nummod(inch, two)
punct(inch, -)
compound(wood, inch)
nmod(piece, wood)
case(strength, for)
nmod(wood, strength)
cc(bend, and)
amod(bend, easier)
conj(strength, bend)
punct(job, .)
nsubj(job, fair)
cop(job, be)
advmod(job, always)
det(job, a)
amod(job, tedious)
parataxis(go, job)
cc(cut, but)
det(work, the)
nsubj:pass(cut, work)
aux(cut, can)
aux:pass(cut, be)
conj(job, cut)
compound:prt(cut, down)
advmod(cut, considerably)
case(planer, with)
det(planer, a)
compound(planer, Skill)
obl(cut, planer)
cc(jig, and)
det(jig, a)
amod(jig, simple)
conj(planer, jig)
punct(go, . )
nsubj(clamp, I)
root(ROOT, clamp)
det(piece, a)
nummod(inch, 30)
punct(inch, -)
compound(piece, inch)
obj(clamp, piece)
case(aluminum, of)
nmod(piece, aluminum)
case(base, to)
det(base, the)
obl(clamp, base)
case(planer, of)
det(planer, the)
nmod(base, planer)
case(pair, with)
det(pair, a)
obl(clamp, pair)
case(grip, of)
compound(grip, sure)
nmod(pair, grip)
punct(clamp, .)
det(aluminum, the)
nsubj(act, aluminum)
punct(flush, ,)
conj(aluminum, flush)
case(batten, against)
det(batten, the)
nmod(flush, batten)
punct(act, ,)
root(ROOT, act)
case(stick, as)
det(stick, a)
compound(stick, fair)
obl(act, stick)
cc(enable, and)
conj(act, enable)
obj(enable, I)
mark(plane, to)
xcomp(enable, plane)
det(chine, the)
obj(plane, chine)
cc(keelson, and)
conj(chine, keelson)
case(bevel, to)
det(bevel, the)
amod(bevel, proper)
obl(plane, bevel)
advmod(plane, easily)
punct(act, .)
mark(own, if)
nsubj(own, you)
aux(own, do)
advmod(own, not)
advcl(worth, own)
det(planer, a)
obj(own, planer)
cc(want, and)
aux(want, do)
advmod(want, not)
conj(own, want)
mark(buy, to)
xcomp(want, buy)
obj(buy, one)
punct(worth, ,)
nsubj(worth, it)
cop(worth, be)
advmod(worth, well)
root(ROOT, worth)
obj(worth, rent)
punct(rent, .)
det(plank, the)
nsubj(ply, plank)
cop(ply, be)
obl:npmod(ply, five)
punct(ply, -)
root(ROOT, ply)
punct(ply, ,)
compound(thick, 3/8-inch)
punct(thick, -)
amod(plywood, thick)
compound(plywood, Weldwood)
compound(Marine, Royal)
compound(plywood, Marine)
conj(ply, plywood)
punct(ply, .)
nsubj:pass(obtain, this)
aux(obtain, can)
aux:pass(obtain, be)
root(ROOT, obtain)
case(width, in)
nummod(inch, 42)
punct(inch, -)
compound(width, inch)
obl(obtain, width)
nummod(foot, 24)
obl:npmod(long, foot)
advmod(obtain, long)
punct(obtain, .)
det(width, the)
nummod(inch, 42)
punct(inch, -)
compound(width, inch)
nsubj(leave, width)
root(ROOT, leave)
advmod(little, very)
amod(waste, little)
obj(leave, waste)
punct(leave, .)
nummod(piece, four)
nsubj:pass(use, piece)
aux:pass(use, be)
parataxis(leave, use)
punct(leave, .)
root(ROOT, plank)
det(side, the)
obj(plank, side)
advmod(plank, first)
punct(plank, ,)
advcl(plank, use)
obj(use, glue)
cc(inch, and)
nummod(inch, one)
punct(inch, -)
conj(glue, inch)
punct(nail, ,)
compound(nail, no.)
nummod(no., 12)
compound(nail, Stronghold)
conj(glue, nail)
case(batten, at)
det(batten, all)
nmod(nail, batten)
punct(stem, ,)
det(stem, the)
conj(batten, stem)
cc(transom, and)
det(transom, the)
conj(stem, transom)
punct(plank, .)
det(person, another)
nsubj(help, person)
advmod(person, inside)
case(weight, with)
det(weight, a)
nmod(person, weight)
case(batten, against)
det(batten, each)
nmod(weight, batten)
aux(help, will)
parataxis(plank, help)
case(fastening, in)
det(fastening, the)
obl(help, fastening)
punct(plank, .)
det(procedure, the)
amod(procedure, best)
nsubj(be, procedure)
root(ROOT, be)
mark(have, to)
ccomp(be, have)
det(friend, a)
amod(friend, few)
obj(have, friend)
xcomp(have, hold)
det(plank, the)
obj(hold, plank)
case(place, in)
obl(hold, place)
mark(mark, while)
nsubj(mark, you)
advcl(hold, mark)
obj(mark, it)
compound:prt(mark, off)
punct(be, .)
advmod(trim, then)
root(ROOT, trim)
det(excess, the)
obj(trim, excess)
punct(trim, . )
nsubj(use, I)
root(ROOT, use)
det(Jig, a)
compound(Jig, Homemaster)
compound(Jig, Routo)
punct(Jig, -)
obj(use, Jig)
acl(Jig, make)
case(Cable, by)
compound(Cable, Porter)
obl(make, Cable)
case(job, for)
det(job, this)
obl(make, job)
punct(use, .)
expl(good, it)
cop(good, be)
root(ROOT, good)
mark(cut, for)
advcl(good, cut)
det:predet(plank, all)
det(plank, the)
obj(cut, plank)
mark(cut, because)
nsubj(cut, it)
advcl(cut, cut)
case(blade, with)
det(blade, a)
obl:npmod(like, bit)
punct(like, -)
amod(blade, like)
obl(cut, blade)
case(rpm, at)
amod(rpm, high)
nmod(blade, rpm)
cc(chatter, and)
aux(chatter, do)
advmod(chatter, not)
conj(cut, chatter)
det(plywood, the)
obj(chatter, plywood)
mark(see, like)
det(saber, a)
nsubj(see, saber)
advcl(chatter, see)
punct(see, .)
mark(cut, when)
advcl(clamp, cut)
punct(clamp, ,)
det(plank, the)
nsubj:pass(clamp, plank)
aux:pass(clamp, be)
advcl(chatter, clamp)
case(place, in)
obl(clamp, place)
case(trimming, for)
det(trimming, a)
amod(trimming, final)
cc(careful, and)
conj(final, careful)
obl(clamp, trimming)
punct(good, .)
advmod(mark, then)
nsubj:pass(mark, it)
aux:pass(mark, be)
root(ROOT, mark)
case(inside, on)
det(inside, the)
obl(mark, inside)
advmod(come, where)
nsubj(come, it)
acl:relcl(inside, come)
case(contact, in)
obl(come, contact)
case(transom, with)
det(transom, the)
nmod(contact, transom)
punct(frame, ,)
conj(transom, frame)
punct(keelson, ,)
conj(transom, keelson)
cc(batten, and)
det:predet(batten, all)
det(batten, the)
conj(transom, batten)
punct(mark, .)
nsubj:pass(pre-drill, it)
aux(pre-drill, may)
advmod(pre-drill, then)
aux:pass(pre-drill, be)
root(ROOT, pre-drill)
case(fastenings, for)
det(fastenings, the)
obl(pre-drill, fastenings)
punct(pre-drill, .)
det(step, the)
amod(step, next)
nsubj(be, step)
root(ROOT, be)
mark(remove, to)
ccomp(be, remove)
obj(remove, it)
cc(spread, and)
conj(remove, spread)
obj(spread, glue)
advmod(mark, where)
nsubj:pass(mark, it)
aux(mark, have)
aux:pass(mark, be)
acl:relcl(glue, mark)
case(point, at)
det(point, the)
compound(point, contact)
obl(mark, point)
punct(be, .)
advmod(replace, then)
nsubj:pass(replace, it)
aux:pass(replace, be)
root(ROOT, replace)
cc(fasten, and)
conj(replace, fasten)
punct(replace, .)
det(plank, the)
amod(plank, bottom)
nsubj:pass(apply, plank)
aux:pass(apply, be)
root(ROOT, apply)
case(manner, in)
det(manner, the)
amod(manner, same)
obl(apply, manner)
punct(apply, .)
case(plank, after)
obl(get, plank)
punct(get, ,)
det(bottom, the)
nsubj(get, bottom)
root(ROOT, get)
det(layer, a)
obj(get, layer)
case(Fiberglas, of)
nmod(layer, Fiberglas)
punct(get, .)
det(rail, the)
compound(rail, spray)
nsubj:pass(glue, rail)
aux:pass(glue, be)
advmod(glue, first)
root(ROOT, glue)
case(outside, on)
det(outside, the)
obl(glue, outside)
cc(fasten, and)
conj(outside, fasten)
case(inside, from)
det(inside, the)
obl(fasten, inside)
case(screw, with)
nmod(inside, screw)
punct(glue, .)
advmod(round, then)
det(chine, the)
nsubj:pass(round, chine)
aux:pass(round, be)
root(ROOT, round)
compound:prt(round, off)
cc(sand, and)
det(bottom, the)
nsubj:pass(sand, bottom)
aux:pass(sand, be)
advmod(sand, rough)
punct(sand, -)
conj(round, sand)
case(preparation, in)
obl(sand, preparation)
punct(round, .)
mark(cover, since)
det(side, the)
nsubj:pass(cover, side)
aux:pass(cover, be)
advmod(cover, also)
advcl(sand, cover)
compound:prt(cover, up)
case(rail, to)
det(rail, the)
compound(rail, spray)
obl(cover, rail)
punct(sand, ,)
nsubj(sand, they)
cop(sand, be)
advmod(sand, also)
advmod(sand, rough)
punct(sand, -)
root(ROOT, sand)
case(area, in)
det(area, that)
obl(sand, area)
punct(sand, .)
det(cloth, the)
nsubj:pass(lay, cloth)
aux:pass(lay, be)
root(ROOT, lay)
case(half, on)
nummod(half, one)
obl(lay, half)
case(bottom, of)
det(bottom, the)
nmod(half, bottom)
case(time, at)
det(time, a)
obl(lay, time)
punct(lay, . )
det(width, a)
nummod(inch, 50)
punct(inch, -)
compound(width, inch)
nsubj:pass(use, width)
aux:pass(use, be)
root(ROOT, use)
case(side, on)
det(side, each)
obl(use, side)
cc(lap, and)
nsubj(lap, it)
conj(use, lap)
det(line, the)
compound(line, keel)
obj(lap, line)
case(inch, by)
advmod(three, about)
nummod(inch, three)
obl(lap, inch)
punct(use, .)
root(ROOT, lay)
det(cloth, the)
obj(lay, cloth)
case(place, in)
obl(lay, place)
cc(trim, and)
conj(lay, trim)
obj(trim, it)
case(size, to)
obl(trim, size)
punct(lay, .)
advmod(remove, then)
root(ROOT, remove)
obj(remove, it)
cc(give, and)
conj(remove, give)
det(bottom, the)
amod(bottom, whole)
obj(give, bottom)
det(coat, a)
obj(give, coat)
case(resin, of)
nmod(coat, resin)
punct(remove, .)
mark(harden, when)
det(resin, the)
nsubj(harden, resin)
aux(harden, have)
advcl(mix, harden)
punct(mix, ,)
parataxis(remove, mix)
compound:prt(mix, up)
det(batch, another)
obj(mix, batch)
case(pigment, with)
det(pigment, a)
nmod(batch, pigment)
acl(pigment, add)
mark(wish, if)
nsubj(wish, you)
advcl(add, wish)
punct(remove, . )
nsubj(use, I)
root(ROOT, use)
amod(red, bright)
obj(use, red)
punct(use, ,)
advcl(use, mixing)
det(pigment, the)
obj(mixing, pigment)
compound:prt(mixing, in)
advmod(mixing, thoroughly)
mark(add, before)
advcl(mixing, add)
det(hardener, the)
obj(add, hardener)
punct(use, .)
csubj(coat, use)
det(brush, a)
amod(brush, cheap)
obj(use, brush)
punct(coat, ,)
root(ROOT, coat)
nummod(side, one)
obj(coat, side)
case(bottom, of)
det(bottom, the)
nmod(side, bottom)
case(resin, with)
det(resin, the)
obl(coat, resin)
cc(apply, and)
advmod(apply, then)
conj(coat, apply)
det(cloth, the)
obj(apply, cloth)
punct(coat, .)
mark(smooth, when)
det(cloth, the)
nsubj(smooth, cloth)
cop(smooth, be)
advcl(apply, smooth)
punct(apply, ,)
root(ROOT, apply)
det(coat, another)
obj(apply, coat)
case(resin, of)
nmod(coat, resin)
punct(apply, ,)
advcl(apply, spread)
obj(spread, it)
case(roller, with)
det(roller, a)
compound(roller, paint)
obl(spread, roller)
punct(apply, .)
cop(sure, be)
root(ROOT, sure)
nsubj:pass(saturate, it)
aux:pass(saturate, be)
advmod(saturate, well)
ccomp(sure, saturate)
cc(allow, and)
advmod(allow, then)
conj(saturate, allow)
obj(allow, it)
mark(harden, to)
xcomp(allow, harden)
punct(sure, .)
mark(harden, when)
det(bottom, the)
amod(bottom, whole)
nsubj(harden, bottom)
aux(harden, have)
advcl(allow, harden)
punct(use, ,)
parataxis(sure, use)
det(sander, a)
compound(sander, disk)
obj(use, sander)
mark(feather, to)
advcl(use, feather)
det(edge, the)
obj(feather, edge)
case(cloth, of)
det(cloth, the)
nmod(edge, cloth)
case(line, at)
det(line, the)
compound(line, keel)
obl(feather, line)
cc(rail, and)
case(rail, near)
det(rail, the)
compound(rail, spray)
conj(line, rail)
punct(sure, .)
advmod(lay, then)
root(ROOT, lay)
det(strip, a)
nummod(inch, three)
punct(inch, -)
obl:npmod(wide, inch)
punct(wide, -)
amod(strip, wide)
obj(lay, strip)
case(cloth, of)
nmod(strip, cloth)
case(line, along)
det(line, the)
compound(line, keel)
nmod(strip, line)
case(transom, from)
det(transom, the)
nmod(line, transom)
case(point, to)
det(point, the)
obl(lay, point)
case(stem, of)
det(stem, the)
nmod(point, stem)
punct(lay, .)
mark(harden, before)
det(resin, the)
nsubj(harden, resin)
aux(harden, have)
advcl(screw, harden)
punct(screw, ,)
root(ROOT, screw)
det(strip, a)
nummod(inch, one)
punct(inch, -)
compound(strip, inch)
amod(strip, mahogany)
compound(strip, keel)
obj(screw, strip)
case(centerline, along)
det(centerline, the)
nmod(strip, centerline)
punct(screw, .)
nsubj(protect, this)
root(ROOT, protect)
det(bottom, the)
obj(protect, bottom)
case(beach, in)
obl(protect, beach)
punct(protect, .)
compound(material, Fiberglas)
nsubj(available, material)
cop(available, be)
parataxis(protect, available)
case(Co., from)
compound(Co., Glass)
compound(Co., plastic)
compound(Co., supply)
obl(available, Co.)
punct(protect, ,)
root(ROOT, 1605)
appos(1605, W.)
flat(W., Elizabeth)
flat(W., Ave.)
punct(Ave., ,)
list(W., Linden)
punct(W., ,)
list(W., N.)
flat(N., J.)
punct(1605, .)
nsubj(supply, they)
aux(supply, will)
advmod(supply, also)
root(ROOT, supply)
obj(supply, literature)
case(application, on)
obl(supply, application)
punct(supply, .)
det(hull, the)
nsubj:pass(turn, hull)
aux:pass(turn, be)
advmod(turn, now)
root(ROOT, turn)
compound:prt(turn, over)
punct(help, ()
case(help, with)
det(help, the)
obl(turn, help)
case(friend, of)
advmod(seven, about)
nummod(friend, seven)
nmod(help, friend)
punct(help, ))
cc(place, and)
conj(turn, place)
case(level, in)
det(level, a)
obl(place, level)
punct(position, ,)
advmod(brace, well)
punct(brace, -)
amod(position, brace)
obl(place, position)
punct(turn, . )
nsubj(set, I)
root(ROOT, set)
obj(set, it)
case(trailer, on)
det(trailer, the)
compound(trailer, Gator)
obl(set, trailer)
punct(set, . )
nsubj(lay, I)
root(ROOT, lay)
nummod(layer, three)
obj(lay, layer)
case(cloth, of)
compound(cloth, glass)
nmod(layer, cloth)
case(inside, on)
det(inside, the)
obl(lay, inside)
case(stem, of)
det(stem, the)
nmod(inside, stem)
punct(lay, ,)
advmod(install, also)
advcl(lay, install)
det(eye, a)
compound(eye, bow)
obj(install, eye)
case(time, at)
det(time, this)
obl(install, time)
punct(lay, .)
case(strength, for)
amod(strength, add)
obl(fasten, strength)
punct(fasten, ,)
nsubj(fasten, I)
advmod(fasten, also)
root(ROOT, fasten)
det(block, a)
amod(block, small)
obj(fasten, block)
case(side, on)
det(side, each)
obl(fasten, side)
case(joint, of)
det(joint, every)
compound(joint, frame)
cc(batten, and)
conj(frame, batten)
nmod(side, joint)
punct(fasten, .)
advmod(set, again)
punct(set, ,)
det(block, these)
nsubj:pass(set, block)
aux:pass(set, be)
root(ROOT, set)
case(cloth, in)
amod(cloth, resin-saturate)
compound(cloth, glass)
obl(set, cloth)
cc(nail, and)
conj(set, nail)
punct(set, .)
mark(trimming, after)
advcl(install, trimming)
compound:prt(trimming, off)
det(excess, the)
obj(trimming, excess)
case(frame, on)
det(frame, the)
nmod(excess, frame)
cc(transom, and)
conj(frame, transom)
nsubj:pass(use, which)
aux:pass(use, be)
acl:relcl(frame, use)
mark(fasten, to)
xcomp(use, fasten)
obj(fasten, they)
case(jig, to)
det(jig, the)
obl(fasten, jig)
case(height, at)
det(height, a)
compound(height, working)
obl(fasten, height)
punct(install, ,)
det(top, the)
nsubj:pass(install, top)
case(plank, of)
det(plank, the)
compound(plank, side)
nmod(top, plank)
aux:pass(install, be)
root(ROOT, install)
punct(install, .)
nsubj:pass(make, this)
aux:pass(make, be)
root(ROOT, make)
case(scrap, up)
case(scrap, of)
obl(make, scrap)
acl(scrap, leave)
advmod(leave, over)
case(side, from)
det(side, the)
obl(leave, side)
cc(bottom, and)
conj(side, bottom)
punct(make, .)
det(part, these)
compound(part, flar)
nsubj(help, part)
advmod(help, really)
root(ROOT, help)
mark(keep, to)
xcomp(help, keep)
det(boat, the)
obj(keep, boat)
xcomp(keep, dry)
punct(help, .)
mark(on, when)
nsubj(on, they)
cop(on, be)
advcl(plane, on)
punct(plane, ,)
det(edge, the)
amod(edge, top)
nsubj:pass(plane, edge)
aux:pass(plane, be)
root(ROOT, plane)
advmod(batten, even)
case(batten, with)
det(batten, the)
amod(batten, sheer)
obl(plane, batten)
punct(plane, .)
det(side, the)
nsubj(run, side)
case(motor, of)
det(motor, the)
nmod(side, motor)
advmod(run, well)
root(ROOT, run)
case(batten, from)
det(batten, the)
amod(batten, bottom)
obl(run, batten)
case(top, to)
det(top, the)
obl(run, top)
cc(frame, and)
case(frame, from)
conj(top, frame)
nummod(frame, six)
case(transom, to)
det(transom, the)
nmod(six, transom)
punct(run, ,)
advcl(run, form)
det(brace, a)
amod(brace, real)
amod(brace, strong)
compound(brace, transom)
obj(form, brace)
punct(run, .)
root(ROOT, note)
det(piece, another)
nsubj:pass(fasten, piece)
case(wood, of)
nmod(piece, wood)
nummod(inch, six)
nmod(piece, inch)
advmod(fasten, wide)
aux:pass(fasten, be)
ccomp(note, fasten)
case(transom, to)
det(transom, the)
obl(fasten, transom)
case(piece, between)
det(piece, these)
nmod(transom, piece)
punct(note, .)
det(decking, the)
nsubj(plywood, decking)
cop(plywood, be)
amod(inch, quarter)
punct(inch, -)
compound(plywood, inch)
amod(plywood, mahogany)
compound(plywood, marine)
root(ROOT, plywood)
punct(plywood, .)
det:predet(flooring, all)
det(flooring, the)
nsubj(plywood, flooring)
cc(storage, and)
det(storage, the)
conj(flooring, storage)
appos(storage, bin)
cop(plywood, be)
amod(inch, half)
punct(inch, -)
compound(plywood, inch)
compound(fir, exterior)
compound(plywood, fir)
root(ROOT, plywood)
punct(plywood, .)
amod(batten, most)
compound(batten, floor)
nsubj:pass(glue, batten)
aux:pass(glue, be)
root(ROOT, glue)
cc(screw, and)
conj(glue, screw)
case(flooring, to)
det(flooring, the)
obl(screw, flooring)
punct(glue, .)
det(exception, the)
nsubj(where, exception)
cop(where, be)
root(ROOT, where)
det(butt, the)
compound(butt, flooring)
nsubj(where, butt)
punct(where, .)
det(batten, these)
nsubj:pass(glue, batten)
aux:pass(glue, be)
root(ROOT, glue)
cc(screw, and)
conj(glue, screw)
case(frame, to)
det(frame, the)
obl(screw, frame)
punct(glue, .)
case(batten, with)
det(batten, all)
compound(batten, deck)
obl(clean, batten)
case(place, in)
nmod(batten, place)
punct(clean, ,)
det(bilge, the)
nsubj:pass(clean, bilge)
aux:pass(clean, be)
root(ROOT, clean)
cc(paint, and)
conj(clean, paint)
compound:prt(paint, up)
case(line, to)
det(line, the)
compound(line, floor)
obl(paint, line)
punct(clean, .)
root(ROOT, use)
nummod(coat, one)
obj(use, coat)
case(firzite, of)
nmod(coat, firzite)
cc(coat, and)
nummod(coat, one)
conj(coat, coat)
case(paint, of)
compound(paint, marine)
nmod(coat, paint)
punct(use, .)
nsubj:pass(paint, bottom)
case(floorboard, of)
det(floorboard, the)
nmod(bottom, floorboard)
aux:pass(paint, be)
advmod(paint, also)
root(ROOT, paint)
cc(screw, and)
det(flooring, the)
nsubj:pass(screw, flooring)
aux:pass(screw, be)
advmod(screw, then)
conj(paint, screw)
case(place, in)
obl(screw, place)
punct(paint, .)
mark(on, after)
det(decking, the)
nsubj(on, decking)
cop(on, be)
advcl(install, on)
punct(install, ,)
det(side, the)
compound(side, cabin)
nsubj:pass(install, side)
aux:pass(install, be)
root(ROOT, install)
punct(install, .)
nsubj:pass(follow, they)
aux:pass(follow, be)
parataxis(install, follow)
case(front, by)
det(front, the)
obl(follow, front)
cc(bulkhead, and)
compound(bulkhead, rear)
conj(front, bulkhead)
mark(illustrate, as)
advcl(follow, illustrate)
punct(install, .)
det(glass, the)
compound(glass, windshield)
nsubj(shatterproof, glass)
cop(shatterproof, be)
root(ROOT, shatterproof)
cc(use, and)
nsubj:pass(use, plexigla)
aux:pass(use, be)
conj(shatterproof, use)
case(cabin, in)
det(cabin, the)
obl(use, cabin)
punct(shatterproof, .)
advmod(frame, inside)
punct(frame, ,)
nsubj:pass(frame, bunk)
aux:pass(frame, be)
root(ROOT, frame)
compound:prt(frame, up)
cc(install, and)
conj(frame, install)
mark(indicate, as)
advcl(install, indicate)
punct(frame, . )
det(head, a)
nsubj(thing, head)
cop(thing, be)
det(thing, a)
amod(thing, handy)
root(ROOT, thing)
mark(have, to)
acl(thing, have)
cc(install, and)
nsubj(install, I)
conj(thing, install)
obj(install, one)
case(section, under)
det(section, a)
amod(section, removable)
nmod(one, section)
case(bunk, of)
det(bunk, the)
compound(bunk, port)
nmod(section, bunk)
punct(thing, .)
det(sink, the)
nsubj(drain, sink)
case(panel, in)
det(panel, the)
amod(panel, hinge)
nmod(sink, panel)
case(bunk, above)
det(bunk, the)
nmod(panel, bunk)
root(ROOT, drain)
case(head, into)
det(head, the)
obl(drain, head)
cc(mount, and)
det(tank, a)
nummod(gallon, five)
punct(gallon, -)
compound(tank, gallon)
compound(tank, water)
nsubj:pass(mount, tank)
aux:pass(mount, be)
conj(drain, mount)
case(bulkhead, on)
det(bulkhead, the)
obl(mount, bulkhead)
case(sink, above)
det(sink, the)
nmod(bulkhead, sink)
punct(mount, .)
mark(pad, for)
advcl(mount, pad)
det(seat, the)
obj(pad, seat)
cc(bunk, and)
conj(seat, bunk)
punct(use, ,)
nsubj(use, I)
parataxis(pad, use)
obj(use, ensolite)
punct(Aj, ,)
compound(Aj, type)
appos(ensolite, Aj)
punct(Lightweight, .)
amod(ensolite, Lightweight)
punct(non-absorbent, ,)
conj(Lightweight, non-absorbent)
punct(fire, ,)
conj(Lightweight, fire)
conj(Lightweight, resistant)
cc(stable, and)
advmod(stable, dimensionally)
conj(resistant, stable)
punct(bond, ,)
nsubj:pass(bond, it)
aux:pass(bond, be)
advmod(bond, easily)
parataxis(stable, bond)
case(wood, to)
det(wood, the)
obl(bond, wood)
case(cement, with)
compound(cement, contact)
obl(bond, cement)
punct(bond, .)
amod(cement, available)
case(sheet, in)
compound(sheet, Af)
obl(available, sheet)
punct(cost, ,)
nsubj(cost, it)
parataxis(available, cost)
case(dollar, about)
det(dollar, a)
obl(cost, dollar)
det(foot, a)
compound(foot, square)
obl(cost, foot)
punct(drain, .)
nsubj(build, you)
aux(build, can)
root(ROOT, build)
det(cottage, this)
compound(cottage, vacation)
obj(build, cottage)
obl:npmod(build, yourself)
punct(build, .)
nsubj(house, it)
cop(house, be)
det(house, a)
amod(house, full)
compound(house, scale)
punct(small, ,)
conj(scale, small)
punct(efficient, ,)
cc(efficient, but)
conj(scale, efficient)
root(ROOT, house)
nsubj(become, that)
aux(become, can)
acl:relcl(house, become)
det(year, a)
nmod:poss(retreat, year)
case(year, 's)
amod(retreat, round)
xcomp(become, retreat)
amod(retreat, complete)
case(detail, in)
det(detail, every)
obl(complete, detail)
punct(house, .)
case(design, because)
fixed(because, of)
det(design, the)
amod(design, unique)
obl(build, design)
case(architect, by)
det(architect, the)
nmod(design, architect)
appos(architect, egil)
flat(egil, Hermanovski)
punct(build, ,)
nsubj(build, you)
aux(build, can)
root(ROOT, build)
obj(build, most)
case(it, of)
nmod(most, it)
case(workshop, in)
nmod:poss(workshop, you)
amod(workshop, own)
compound(workshop, home)
obl(build, workshop)
case(time, in)
nmod:poss(time, you)
compound(time, spare)
nmod(workshop, time)
punct(build, .)
nsubj:pass(panelize, most)
case(it, of)
nmod(most, it)
aux:pass(panelize, be)
parataxis(build, panelize)
cc(utilize, and)
conj(panelize, utilize)
amod(material, standard)
obj(utilize, material)
punct(require, ,)
cc(require, and)
conj(panelize, require)
det(use, the)
obj(require, use)
case(tool, of)
advmod(tool, only)
amod(tool, simple)
nmod(use, tool)
punct(build, .)
case(page, on)
det(page, the)
amod(page, follow)
obl(take, page)
cc(take, and)
case(issue, in)
det(issue, the)
amod(issue, follow)
obl(take, issue)
nsubj(take, we)
root(ROOT, take)
iobj(take, you)
det(step, every)
obj(take, step)
case(way, of)
det(way, the)
nmod(step, way)
case(cottage, to)
nmod:poss(cottage, you)
compound(cottage, vacation)
nmod(way, cottage)
punct(take, ,)
mark(choose, from)
advcl(take, choose)
det(site, the)
amod(site, proper)
obj(choose, site)
mark(apply, to)
advcl(choose, apply)
det(trim, the)
amod(trim, final)
obj(apply, trim)
punct(take, .)
case(recognition, in)
obl(design, recognition)
case(trend, of)
det(trend, the)
compound(trend, grow)
nmod(recognition, trend)
case(home, for)
amod(home, second)
nmod(trend, home)
punct(cottage, ,)
cc(cottage, or)
compound(cottage, vacation)
conj(trend, cottage)
punct(design, ,)
nsubj(design, we)
aux(design, have)
root(ROOT, design)
det(one, this)
obj(design, one)
advmod(design, specifically)
case(handyman, with)
det(handyman, the)
compound(handyman, family)
obl(design, handyman)
case(mind, in)
nmod(handyman, mind)
punct(design, .)
nsubj(project, it)
cop(project, be)
det(project, a)
amod(project, big)
root(ROOT, project)
punct(project, ,)
advmod(take, not)
mark(take, to)
aux:pass(take, be)
advcl(project, take)
advmod(take, lightly)
punct(project, .)
cc(break, but)
det(step, each)
nsubj:pass(break, step)
aux(break, have)
aux:pass(break, be)
root(ROOT, break)
compound:prt(break, down)
case(stage, into)
amod(stage, easy)
obl(break, stage)
punct(break, ,)
advcl(break, utilize)
amod(material, standard)
obj(utilize, material)
cc(tool, and)
amod(tool, simple)
conj(material, tool)
punct(utilize, ,)
advmod(capability, well)
case(capability, within)
det(capability, the)
obl(utilize, capability)
case(handyman, of)
det(handyman, the)
nmod(capability, handyman)
punct(break, .)
det(theory, the)
nsubj(unit, theory)
det(idea, the)
nsubj(unit, idea)
case(design, behind)
nmod:poss(design, we)
nmod(idea, design)
cop(unit, be)
amod(unit, modular)
root(ROOT, unit)
punct(panelization, ,)
cc(panelization, or)
conj(unit, panelization)
punct(unit, .)
nsubj:pass(scale, everything)
amod(everything, possible)
aux(scale, have)
aux:pass(scale, be)
root(ROOT, scale)
case(size, to)
amod(size, standard)
obl(scale, size)
cc(measurement, and)
conj(size, measurement)
case(material, of)
nmod(size, material)
punct(scale, . )
compound(panel, Wall)
nsubj(standard, panel)
cc(timber, and)
amod(timber, structural)
conj(panel, timber)
cop(standard, be)
root(ROOT, standard)
case(window, as)
cop(window, be)
obl(standard, window)
cc(door, and)
conj(window, door)
punct(standard, ,)
advcl(standard, make)
case(minimum, for)
det(minimum, a)
obl(make, minimum)
case(cutting, of)
nmod(minimum, cutting)
punct(standard, .)
nsubj(develop, we)
aux(develop, have)
root(ROOT, develop)
det(method, a)
amod(method, ingenious)
obj(develop, method)
mark(interlock, of)
acl(method, interlock)
obj(interlock, these)
mark(make, so)
fixed(so, that)
nsubj(make, you)
aux(make, can)
advcl(interlock, make)
det(part, the)
amod(part, major)
obj(make, part)
case(house, of)
nmod:poss(house, you)
nmod(part, house)
case(workshop, in)
nmod:poss(workshop, you)
amod(workshop, own)
nmod(part, workshop)
punct(workshop, ,)
appos(part, panel)
case(panel, by)
nmod(panel, panel)
punct(make, ,)
case(plan, accord)
fixed(accord, to)
nmod(panel, plan)
punct(plan, .)
advmod(truck, thus)
punct(truck, ,)
mark(prepare, when)
nsubj(prepare, you)
aux(prepare, have)
advcl(truck, prepare)
nmod:poss(foundation, you)
obj(prepare, foundation)
cc(lay, and)
conj(prepare, lay)
det(floor, the)
obj(lay, floor)
punct(truck, ,)
nsubj:pass(truck, these)
aux(truck, can)
aux:pass(truck, be)
parataxis(develop, truck)
case(site, to)
det(site, the)
obl(truck, site)
cc(erect, and)
conj(truck, erect)
case(crew, with)
det(crew, a)
amod(crew, small)
obl(erect, crew)
case(friend, of)
nmod(crew, friend)
case(weekend, in)
det(weekend, a)
nmod(crew, weekend)
punct(develop, .)
det(timber, the)
compound(timber, roof)
nsubj:pass(precut, timber)
aux:pass(precut, be)
root(ROOT, precut)
cc(standard, and)
det(panel, the)
nsubj(standard, panel)
conj(precut, standard)
mark(enclose, so)
fixed(so, that)
det(house, the)
nsubj:pass(enclose, house)
aux(enclose, can)
aux:pass(enclose, be)
advmod(enclose, completely)
advcl(precut, enclose)
case(matter, in)
det(matter, a)
obl(enclose, matter)
case(day, of)
nummod(day, three)
cc(four, or)
conj(three, four)
nmod(matter, day)
punct(precut, .)
advmod(do, then)
nsubj(do, you)
aux(do, can)
root(ROOT, do)
det(touch, the)
compound(touch, finish)
obj(do, touch)
case(leisure, at)
nmod:poss(leisure, you)
obl(do, leisure)
punct(do, . )
det(warning, a)
root(ROOT, warning)
case(fact, due)
fixed(due, to)
det(fact, the)
nmod(warning, fact)
mark(vary, that)
compound(code, building)
nsubj(vary, code)
cc(regulation, and)
conj(code, regulation)
acl(fact, vary)
advmod(much, so)
advmod(vary, much)
case(country, throughout)
det(country, the)
obl(vary, country)
punct(be, ,)
det(thing, the)
amod(thing, first)
nsubj(be, thing)
mark(do, to)
acl(thing, do)
parataxis(warning, be)
mark(find, to)
ccomp(be, find)
compound:prt(find, out)
obj(find, what)
punct(find, ,)
mark(any, if)
nsubj(be, any)
punct(be, ,)
nsubj(be, they)
advcl(find, be)
punct(be, .)
advcl(specify, Close)
case(city, to)
det(city, a)
amod(city, large)
obl(Close, city)
nsubj(specify, they)
aux(specify, might)
advmod(specify, even)
root(ROOT, specify)
det(size, the)
obj(specify, size)
case(nail, of)
det(nail, the)
nmod(size, nail)
acl(nail, use)
punct(specify, ;)
punct(specify, ;)
case(section, in)
det(section, a)
compound(section, remote)
obl(be, section)
expl(be, there)
aux(be, might)
parataxis(specify, be)
det(restriction, no)
nsubj(be, restriction)
case(all, at)
nmod(restriction, all)
punct(specify, .)
nsubj:pass(find, this)
aux(find, can)
advmod(find, usually)
aux:pass(find, be)
root(ROOT, find)
compound:prt(find, out)
case(hall, at)
det(hall, the)
amod(hall, nearest)
compound(hall, town)
obl(find, hall)
punct(find, .)
case(time, at)
det(time, the)
amod(time, same)
obl(check, time)
root(ROOT, check)
det(requirement, the)
amod(requirement, electrical)
punct(plumb, ,)
conj(electrical, plumb)
punct(sanitary, ,)
cc(sanitary, and)
conj(electrical, sanitary)
obj(check, requirement)
punct(regulation, ,)
cc(regulation, as)
fixed(as, well)
fixed(as, as)
amod(regulation, possible)
compound(regulation, zone)
conj(requirement, regulation)
punct(regulation, .)
mark(available, whether)
nsubj(available, electricity)
cc(public, and)
conj(electricity, public)
conj(electricity, water)
cc(sewer, and)
conj(electricity, sewer)
cop(available, be)
acl:relcl(regulation, available)
cc(not, or)
conj(available, not)
punct(check, ,)
conj(available, check)
det(custom, the)
amod(custom, local)
obj(check, custom)
case(use, in)
det(use, the)
obl(check, use)
case(gas, of)
amod(gas, bottle)
cc(L-P, or)
conj(bottle, L-P)
nmod(use, gas)
punct(give, ()
nsubj(give, we)
parataxis(check, give)
iobj(give, you)
obj(give, alternative)
advmod(on, later)
advmod(give, on)
punct(give, ))
punct(check, .)
cop(sure, be)
root(ROOT, sure)
mark(official, that)
det(information, this)
nsubj(official, information)
cop(official, be)
advmod(official, reasonably)
ccomp(sure, official)
cc(opinion, and)
advmod(opinion, not)
advmod(opinion, just)
det(opinion, a)
amod(opinion, unfounded)
conj(official, opinion)
punct(sure, .)
mark(be, if)
expl(be, there)
advcl(obtain, be)
det(restriction, any)
amod(restriction, major)
nsubj(be, restriction)
punct(obtain, ,)
nsubj:pass(obtain, they)
advmod(obtain, usually)
aux(obtain, can)
aux:pass(obtain, be)
root(ROOT, obtain)
case(form, in)
amod(form, print)
obl(obtain, form)
punct(obtain, .)
mark(require, where)
det(permit, a)
compound(permit, building)
nsubj:pass(require, permit)
aux:pass(require, be)
advcl(find, require)
punct(find, ,)
root(ROOT, find)
compound:prt(find, out)
obj(present, what)
nsubj(present, you)
aux(present, must)
ccomp(find, present)
mark(apply, when)
advcl(present, apply)
case(one, for)
obl(apply, one)
punct(find, .)
case(case, in)
amod(case, many)
obl(file, case)
punct(file, ,)
nsubj(file, you)
aux(file, must)
root(ROOT, file)
det(set, a)
amod(set, complete)
obj(file, set)
case(plan, of)
nmod(set, plan)
case(inspector, with)
det(inspector, the)
amod(inspector, local)
compound(inspector, building)
nmod(plan, inspector)
punct(file, .)
nsubj(available, these)
aux(available, will)
cop(available, be)
root(ROOT, available)
case(cost, at)
obl(available, cost)
case(department, from)
nmod:poss(department, we)
compound(department, plan)
obl(available, department)
punct(available, .)
det(site, the)
nsubj(accessibility, site)
det(thing, some)
amod(thing, general)
nmod(site, thing)
mark(look, to)
acl(thing, look)
obl(look, for)
case(site, in)
det(site, a)
obl(look, site)
punct(look, ,)
mark(buy, if)
nsubj(buy, you)
aux(buy, have)
advmod(buy, not)
advmod(buy, already)
advcl(accessibility, buy)
obj(buy, one)
punct(accessibility, ,)
cop(accessibility, be)
root(ROOT, accessibility)
punct(drainage, ,)
compound(drainage, water)
conj(accessibility, drainage)
punct(orientation, ,)
cc(orientation, and)
conj(accessibility, orientation)
punct(accessibility, .)
root(ROOT, how)
cop(how, be)
det(road, the)
nsubj(how, road)
punct(stand, ,)
cc(stand, and)
advmod(stand, how)
aux(stand, will)
nsubj(stand, they)
conj(how, stand)
compound:prt(stand, up)
punct(how, ?)
punct(how, ?)
root(ROOT, be)
nmod:poss(evidence, there)
nsubj(be, evidence)
case(out, of)
compound(out, wash)
punct(out, -)
nmod(evidence, out)
case(property, on)
det(property, the)
nmod(evidence, property)
punct(be, ;)
punct(be, ;)
amod(area, swampy)
appos(evidence, area)
cc(spring, or)
amod(spring, intermittent)
conj(area, spring)
punct(be, ?)
punct(be, ? )
det(visit, a)
nsubj(informative, visit)
case(spring, in)
det(spring, the)
amod(spring, early)
nmod(visit, spring)
case(thaw, after)
det(thaw, a)
nmod(visit, thaw)
aux(informative, will)
cop(informative, be)
advmod(informative, very)
root(ROOT, informative)
punct(informative, .)
root(ROOT, note)
advmod(rise, where)
det(sun, the)
nsubj(rise, sun)
advcl(note, rise)
cc(set, and)
conj(rise, set)
punct(ask, ,)
cc(ask, and)
conj(note, ask)
det(direction, which)
obj(ask, direction)
det(wind, the)
amod(wind, prevail)
nsubj(come, wind)
cc(storm, and)
conj(wind, storm)
acl:relcl(direction, come)
obl(come, from)
punct(note, .)
aux(something, will)
det(view, the)
nsubj(something, view)
cop(something, be)
root(ROOT, something)
nsubj(live, you)
aux(live, can)
acl:relcl(something, live)
obl(live, with)
punct(something, ?)
punct(something, ?)
aux(worry, do)
advmod(worry, not)
root(ROOT, worry)
advmod(much, too)
advmod(worry, much)
case(rocky, about)
obl(worry, rocky)
cc(sloping, or)
conj(rocky, sloping)
conj(rocky, terrain)
punct(worry, ;)
punct(worry, ;)
nsubj(take, we)
aux(take, will)
parataxis(worry, take)
compound:prt(take, up)
amod(foundation, alternative)
obj(take, foundation)
advmod(on, later)
advmod(take, on)
punct(worry, .)
det(material, the)
nsubj(give, material)
case(issue, with)
det(issue, this)
amod(issue, first)
nmod(material, issue)
nsubj(give, we)
root(ROOT, give)
iobj(give, you)
det(list, a)
obj(give, list)
case(material, of)
det(material, the)
nmod(list, material)
acl(material, need)
mark(build, to)
xcomp(need, build)
det(version, the)
amod(version, basic)
punct(version, ()
compound(version, AjA)
obj(build, version)
punct(version, ))
cc(version, and)
det(version, the)
amod(version, expandable)
punct(version, ()
compound(version, AjB)
conj(version, version)
punct(version, ))
punct(give, .)
nsubj(shell, this)
aux(shell, will)
cop(shell, be)
case(shell, for)
det(shell, the)
root(ROOT, shell)
case(house, of)
det(house, the)
nmod(shell, house)
advmod(roof, only)
punct(roof, ()
appos(shell, roof)
punct(wall, ,)
conj(roof, wall)
punct(floor, ,)
cc(floor, and)
conj(roof, floor)
punct(roof, ))
punct(include, ,)
cc(include, and)
aux(include, do)
advmod(include, not)
conj(shell, include)
det(carport, the)
obj(include, carport)
cc(balcony, or)
conj(carport, balcony)
punct(shell, .)
nsubj(permit, this)
aux(permit, will)
root(ROOT, permit)
obj(permit, you)
mark(get, to)
xcomp(permit, get)
det(estimate, a)
amod(estimate, rough)
obj(get, estimate)
case(much, of)
advmod(much, how)
advmod(cost, much)
det(material, the)
nsubj(cost, material)
case(shell, for)
det(shell, the)
nmod(material, shell)
aux(cost, will)
acl(estimate, cost)
punct(permit, .)
root(ROOT, bear)
case(mind, in)
nmod(bear, mind)
mark(include, that)
nsubj(include, this)
aux(include, do)
advmod(include, not)
appos(bear, include)
amod(panel, interior)
obj(include, panel)
case(partition, for)
nmod(panel, partition)
punct(flooring, ,)
amod(flooring, fancy)
conj(partition, flooring)
punct(appliance, ,)
conj(partition, appliance)
cc(fixture, and)
conj(partition, fixture)
punct(wiring, ,)
amod(wiring, electrical)
conj(partition, wiring)
punct(plumb, ,)
cc(plumb, and)
conj(partition, plumb)
punct(include, ,)
nsubj:pass(take, all)
case(which, of)
obl(take, which)
aux(take, will)
aux:pass(take, be)
acl:relcl(partition, take)
compound:prt(take, up)
case(detail, in)
obl(take, detail)
case(issue, in)
amod(issue, later)
obl(take, issue)
punct(bear, .)
det(panel, the)
compound(panel, wall)
nsubj:pass(construct, panel)
aux:pass(construct, be)
root(ROOT, construct)
case(framework, of)
det(framework, a)
obl(construct, framework)
case(Af, of)
amod(Af, standard)
nmod(framework, Af)
cc(Af, and)
conj(Af, Af)
case(grade, of)
det(grade, a)
amod(grade, good)
nmod(Af, grade)
punct(grade, ,)
amod(grade, free)
case(fault, from)
amod(fault, structural)
obl(free, fault)
punct(construct, .)
nsubj(be, they)
aux(be, should)
root(ROOT, be)
advmod(straight, as)
advmod(be, straight)
mark(possible, as)
advcl(as, possible)
punct(be, ,)
mark(effect, as)
nsubj(effect, this)
aux(effect, will)
advcl(as, effect)
nmod:poss(ability, they)
obj(effect, ability)
mark(mesh, to)
acl(ability, mesh)
advmod(mesh, properly)
mark(erect, when)
det(wall, the)
nsubj:pass(erect, wall)
aux:pass(erect, be)
advcl(mesh, erect)
punct(be, .)
det(surface, the)
amod(surface, outside)
nsubj(grade, surface)
case(unit, of)
det(unit, the)
amod(unit, solid)
nmod(surface, unit)
aux(grade, shall)
cop(grade, be)
case(grade, of)
det(grade, a)
compound(grade, exterior)
root(ROOT, grade)
case(board, of)
compound(board, panel)
nmod(grade, board)
case(plywood, such)
fixed(such, as)
nmod(grade, plywood)
punct(board, ,)
amod(coate, plastic)
amod(board, coate)
compound(board, panel)
conj(plywood, board)
punct(board, ,)
amod(density, high)
compound(board, density)
compound(board, particle)
conj(plywood, board)
punct(board, ,)
compound(cement, asbestos)
punct(cement, -)
compound(board, cement)
conj(plywood, board)
punct(product, ,)
cc(product, or)
det(product, any)
amod(product, other)
conj(plywood, product)
advmod(obtainable, locally)
amod(product, obtainable)
case(recommendation, upon)
obl(obtainable, recommendation)
case(dealer, of)
nmod:poss(dealer, you)
compound(dealer, building)
compound(dealer, supply)
nmod(recommendation, dealer)
punct(grade, .)
det(panel, the)
amod(panel, inner)
nsubj(have, panel)
aux(have, do)
advmod(have, not)
root(ROOT, have)
mark(weatherproof, to)
cop(weatherproof, be)
xcomp(have, weatherproof)
punct(depend, ,)
cc(depend, and)
det(choice, the)
nsubj(depend, choice)
aux(depend, will)
conj(have, depend)
case(quality, on)
det(quality, the)
obl(depend, quality)
case(finish, of)
nmod(quality, finish)
acl(quality, desire)
punct(have, .)
det(board, all)
compound(board, panel)
nsubj(come, board)
root(ROOT, come)
case(standard, in)
obl(come, standard)
compound(foot, Af)
compound(size, foot)
root(ROOT, size)
punct(size, .)
nsubj:pass(recommend, it)
aux:pass(recommend, be)
root(ROOT, recommend)
mark(glue, that)
nsubj:pass(glue, panel)
aux:pass(glue, be)
advmod(glue, both)
ccomp(recommend, glue)
cc(nail, as)
fixed(as, well)
mark(nail, as)
conj(glue, nail)
case(frame, to)
det(frame, the)
obl(nail, frame)
punct(recommend, .)
det(panel, the)
amod(panel, fix)
compound(panel, window)
nsubj(have, panel)
case(louver, with)
nmod(panel, louver)
aux(have, should)
root(ROOT, have)
det(grade, a)
amod(grade, good)
obj(have, grade)
case(glass, of)
nummod(inch, 1)
punct(inch, /)
nummod(inch, 8)
punct(inch, -)
compound(glass, inch)
amod(strength, double)
punct(strength, -)
compound(glass, strength)
nmod(grade, glass)
acl(glass, set)
case(compound, in)
det(compound, a)
amod(compound, mastic)
compound(compound, glaze)
obl(set, compound)
punct(have, .)
det(louver, the)
nsubj:pass(construct, louver)
aux:pass(construct, be)
root(ROOT, construct)
mark(show, as)
advcl(construct, show)
case(detail, in)
det(detail, the)
obl(show, detail)
punct(construct, ,)
case(door, with)
det(door, a)
compound(door, drop)
obl(show, door)
case(ventilation, for)
nmod(door, ventilation)
punct(construct, .)
expl(be, there)
root(ROOT, be)
amod(window, standard)
compound(window, slide)
compound(window, glass)
nsubj(be, window)
case(frame, in)
compound(frame, wood)
cc(aluminum, or)
conj(wood, aluminum)
conj(window, frame)
mark(require, for)
det(panel, those)
nsubj(require, panel)
acl(frame, require)
obj(require, they)
punct(be, .)
det(panel, the)
compound(panel, door)
nsubj:pass(design, panel)
aux:pass(design, be)
root(ROOT, design)
mark(accommodate, to)
advcl(design, accommodate)
amod(door, standard)
obj(accommodate, door)
nsubj(grade, which)
aux(grade, should)
cop(grade, be)
case(grade, of)
compound(grade, exterior)
acl:relcl(door, grade)
punct(design, .)
det(panel, the)
compound(panel, filler)
nsubj:pass(cut, panel)
case(end, for)
det(end, the)
compound(end, gable)
nmod(panel, end)
aux:pass(cut, be)
root(ROOT, cut)
case(full, from)
obl(cut, full)
compound(sheet, Af)
root(ROOT, sheet)
mark(show, as)
acl(sheet, show)
punct(sheet, ,)
acl(sheet, leave)
det(wastage, no)
obj(leave, wastage)
punct(sheet, .)
det(batten, the)
nsubj(stock, batten)
acl(batten, cover)
det(joint, the)
obj(cover, joint)
cop(stock, be)
case(stock, of)
compound(stock, Af)
root(ROOT, stock)
cc(apply, and)
aux:pass(apply, be)
conj(stock, apply)
mark(erect, after)
det(wall, the)
nsubj:pass(erect, wall)
aux:pass(erect, be)
advcl(apply, erect)
punct(stock, .)
det(nail, all)
nsubj(rustproof, nail)
aux(rustproof, should)
cop(rustproof, be)
root(ROOT, rustproof)
punct(recommend, ,)
cc(recommend, and)
nsubj:pass(recommend, aluminum)
aux:pass(recommend, be)
advmod(recommend, highly)
conj(rustproof, recommend)
punct(rustproof, .)
root(ROOT, note)
punct(note, :)
mark(use, if)
nummod(board, 1/2-inch)
compound(board, panel)
nsubj:pass(use, board)
aux:pass(use, be)
advcl(use, use)
advmod(use, inside)
cc(out, and)
conj(inside, out)
punct(side, ,)
cc(8, or)
compound(8, 5)
punct(8, /)
nummod(side, 8)
case(inch, -)
nmod(8, inch)
nummod(side, one)
obl(use, side)
cc(inch, and)
nummod(inch, 3)
cc(inch, /)
nummod(inch, 8)
punct(inch, -)
conj(side, inch)
det(other, the)
conj(side, other)
punct(use, ,)
cc(use, and)
nummod(inch, 1)
punct(inch, /)
nummod(inch, 8)
punct(inch, -)
compound(glass, inch)
nsubj:pass(use, glass)
aux:pass(use, be)
conj(other, use)
punct(lumber, ,)
compound(lumber, stock)
conj(use, lumber)
case(Af, in)
nmod(lumber, Af)
punct(Af, ,)
conj(Af, Af)
punct(Af, ,)
cc(Af, and)
conj(Af, Af)
aux(use, can)
aux:pass(use, be)
root(ROOT, use)
mark(make, in)
advcl(use, make)
det(panel, the)
compound(panel, glass)
obj(make, panel)
punct(use, .)
amod(thickness, other)
nsubj(necessitate, thickness)
aux(necessitate, may)
root(ROOT, necessitate)
xcomp(necessitate, rip)
det(lumber, a)
amod(lumber, special)
compound(lumber, size)
obj(rip, lumber)
case(trim, for)
det(trim, the)
compound(trim, glass)
obl(rip, trim)
punct(necessitate, .)
case(case, in)
det(case, any)
obl(be, case)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(milling, no)
amod(milling, special)
nsubj(be, milling)
cc(rabbet, or)
conj(milling, rabbet)
acl(milling, require)
case(panel, for)
det(panel, the)
obl(require, panel)
punct(be, .)
case(technique, with)
amod(technique, modern)
obl(become, technique)
case(woodwork, of)
nmod(technique, woodwork)
cc(multitude, and)
det(multitude, the)
conj(technique, multitude)
case(tool, of)
compound(tool, cutting)
nmod(multitude, tool)
punct(fixture, ,)
conj(tool, fixture)
punct(attachment, ,)
cc(attachment, and)
conj(tool, attachment)
amod(attachment, available)
punct(become, ,)
det(press, the)
compound(press, drill)
nsubj(become, press)
aux(become, have)
root(ROOT, become)
det(tool, a)
amod(tool, basic)
compound(workshop, home)
compound(tool, workshop)
xcomp(become, tool)
punct(tool, .)
det(press, the)
compound(press, drill)
nsubj(consist, press)
root(ROOT, consist)
case(shaft, of)
det(shaft, a)
amod(shaft, vertical)
obl(consist, shaft)
punct(spindle, ()
appos(shaft, spindle)
punct(spindle, ))
nsubj:pass(taper, which)
aux:pass(taper, be)
acl:relcl(shaft, taper)
cc(thread, or)
conj(taper, thread)
case(end, on)
nummod(end, one)
obl(taper, end)
mark(hold, to)
advcl(taper, hold)
det(chuck, a)
compound(chuck, drill)
obj(hold, chuck)
punct(chuck, ,)
det(housing, a)
compound(housing, tubular)
appos(chuck, housing)
punct(quill, ()
appos(housing, quill)
punct(quill, ))
case(which, in)
obl(mount, which)
det(spindle, the)
nsubj:pass(mount, spindle)
aux:pass(mount, be)
acl:relcl(housing, mount)
punct(head, ,)
det(head, a)
nsubj:pass(mount, head)
case(which, in)
obl(mount, which)
det(quill, the)
nsubj:pass(mount, quill)
aux:pass(mount, be)
acl:relcl(head, mount)
punct(lever, ,)
det(lever, a)
compound(lever, feed)
obj(mount, lever)
nsubj(move, which)
acl:relcl(lever, move)
det(quill, the)
obj(move, quill)
case(source, up)
cc(down, or)
conj(up, down)
punct(source, ,)
det(source, a)
compound(source, power)
obj(move, source)
punct(table, ,)
cc(table, and)
det(table, a)
amod(table, movable)
conj(source, table)
case(which, upon)
obl(place, which)
det(work, the)
nsubj:pass(place, work)
aux:pass(place, be)
acl:relcl(table, place)
punct(consist, .)
expl(be, there)
root(ROOT, be)
advmod(be, often)
det(means, a)
nsubj(be, means)
mark(lock, of)
acl(means, lock)
det(quill, the)
obj(lock, quill)
cc(tilt, and)
punct(tilt, ,)
case(press, on)
amod(press, larger)
obl(tilt, press)
punct(tilt, ,)
det(table, the)
nsubj:pass(tilt, table)
aux(tilt, can)
aux:pass(tilt, be)
conj(be, tilt)
punct(be, .)
det(size, the)
nsubj:pass(express, size)
case(press, of)
det(press, the)
nmod(size, press)
aux:pass(express, be)
advmod(express, usually)
root(ROOT, express)
case(term, in)
obl(express, term)
case(capacity, of)
compound(capacity, chuck)
nmod(term, capacity)
punct(shank, ()
det(shank, the)
amod(shank, maximum)
compound(shank, diameter)
compound(shank, tool)
appos(capacity, shank)
nsubj(hold, it)
aux(hold, will)
acl:relcl(shank, hold)
punct(hold, ))
cc(distance, or)
conj(capacity, distance)
case(center, between)
det(center, the)
compound(center, spindle)
nmod(distance, center)
cc(column, and)
det(column, the)
conj(center, column)
punct(express, . )
det(press, a)
nsubj(let, press)
case(capacity, with)
det(capacity, a)
nummod(inch, 11)
compound(capacity, inch)
nmod(press, capacity)
root(ROOT, let)
obj(let, you)
xcomp(let, drill)
case(center, to)
det(center, the)
obl(drill, center)
case(board, of)
det(board, a)
nummod(inch, 22)
compound(board, inch)
nmod(center, board)
cc(circle, or)
conj(board, circle)
punct(let, . )
det(press, a)
amod(press, new)
amod(drill, radial)
compound(press, drill)
nsubj(have, press)
case(capacity, with)
det(capacity, a)
nummod(inch, 16)
compound(capacity, inch)
nmod(press, capacity)
root(ROOT, have)
det(head, a)
compound(head, tilt)
obj(have, head)
nsubj(allow, that)
acl:relcl(head, allow)
obj(allow, drilling)
mark(do, to)
aux:pass(do, be)
xcomp(allow, do)
case(angle, at)
det(angle, any)
obl(do, angle)
punct(have, .)
det(head, the)
nsubj:pass(mount, head)
aux:pass(mount, be)
root(ROOT, mount)
case(arm, on)
det(arm, a)
amod(arm, horizontal)
obl(mount, arm)
nsubj(swivel, that)
acl:relcl(arm, swivel)
case(column, on)
det(column, the)
amod(column, support)
obl(swivel, column)
mark(position, to)
acl(column, position)
det(bit, the)
compound(bit, drill)
obj(position, bit)
case(work, instead)
fixed(instead, of)
det(work, the)
obl(position, work)
punct(mount, .)
advcl(level, set)
punct(set, -)
compound:prt(set, up)
cc(maintenance, and)
conj(set, maintenance)
det(press, the)
compound(press, drill)
nsubj:pass(level, press)
aux(level, should)
aux:pass(level, be)
root(ROOT, level)
cc(bench, and)
punct(level, ,)
mark(bench, depend)
mark(bench, on)
mark(bench, whether)
nsubj(bench, it)
cop(bench, be)
det(bench, a)
advcl(level, bench)
cc(model, or)
compound(model, floor)
conj(bench, model)
punct(bolt, ,)
conj(bench, bolt)
advmod(bolt, securely)
case(bench, to)
det(bench, a)
amod(bench, sturdy)
obl(bolt, bench)
cc(stand, or)
conj(bench, stand)
cc(screw, or)
conj(bench, screw)
case(floor, to)
det(floor, the)
obl(screw, floor)
case(lag, with)
obl(screw, lag)
cc(screw, or)
compound(screw, expansion)
conj(lag, screw)
punct(level, .)
nsubj(reduce, this)
aux(reduce, will)
root(ROOT, reduce)
obj(reduce, vibration)
cc(increase, and)
conj(reduce, increase)
obj(increase, accuracy)
punct(reduce, . )
det(coat, a)
nsubj(protect, coat)
case(wax, of)
compound(wax, paste)
nmod(coat, wax)
cc(rubdown, or)
det(rubdown, a)
conj(coat, rubdown)
case(piece, with)
det(piece, a)
nmod(rubdown, piece)
case(paper, of)
compound(paper, wax)
nmod(piece, paper)
aux(protect, will)
root(ROOT, protect)
det(surface, the)
amod(surface, polish)
obj(protect, surface)
case(table, of)
det(table, the)
nmod(surface, table)
punct(protect, ;)
punct(protect, ;)
csubj(discourage, wipe)
case(cloth, with)
det(cloth, a)
advmod(oil, slightly)
amod(cloth, oil)
obl(wipe, cloth)
aux(discourage, will)
conj(protect, discourage)
obj(discourage, rust)
case(column, of)
det(column, the)
nmod(rust, column)
cc(quill, and)
conj(column, quill)
punct(protect, .)
nsubj(need, press)
advmod(fitted, not)
acl(press, fitted)
case(bearing, with)
amod(bearing, seal)
compound(bearing, spindle)
obl(fitted, bearing)
aux(need, will)
root(ROOT, need)
det(drop, a)
obj(need, drop)
case(oil, of)
nmod(drop, oil)
advmod(need, now)
cc(hole, and)
advmod(hole, then)
case(hole, in)
det(hole, the)
compound(hole, lubrication)
conj(drop, hole)
case(quill, in)
det(quill, the)
nmod(hole, quill)
punct(need, .)
det(rest, the)
nsubj:pass(keep, rest)
case(press, of)
det(press, the)
nmod(rest, press)
aux(keep, should)
aux:pass(keep, be)
root(ROOT, keep)
xcomp(keep, clean)
mark(dusting, by)
advcl(clean, dusting)
case(rag, with)
det(rag, a)
amod(rag, clean)
obl(dusting, rag)
cc(brush, or)
conj(rag, brush)
punct(keep, .)
cop(careful, be)
root(ROOT, careful)
mark(keep, to)
xcomp(careful, keep)
det(belt, the)
compound(belt, drive)
obj(keep, belt)
xcomp(keep, free)
case(oil, of)
obl(free, oil)
cc(grease, and)
conj(oil, grease)
punct(careful, .)
compound(tension, belt)
nsubj:pass(adjust, tension)
aux:pass(adjust, be)
root(ROOT, adjust)
case(manipulation, by)
obl(adjust, manipulation)
case(bolt, of)
nummod(bolt, two)
compound(bolt, lock)
nmod(manipulation, bolt)
cc(mount, and)
det(mount, a)
amod(mount, movable)
compound(mount, motor)
conj(bolt, mount)
punct(adjust, .)
root(ROOT, keep)
det(belt, the)
obj(keep, belt)
advmod(enough, just)
advmod(enough, tight)
xcomp(keep, enough)
mark(slip, so)
det(pulley, the)
nsubj(slip, pulley)
aux(slip, will)
advmod(slip, not)
advcl(keep, slip)
mark(pull, when)
advcl(slip, pull)
case(hand, by)
obl(pull, hand)
punct(keep, ;)
punct(keep, ;)
amod(tension, excess)
nsubj(cause, tension)
aux(cause, will)
advmod(cause, only)
parataxis(keep, cause)
amod(wear, undue)
obj(cause, wear)
case(bearing, on)
det(bearing, the)
compound(bearing, motor)
cc(spindle, and)
conj(motor, spindle)
nmod(wear, bearing)
punct(have, .)
amod(press, most)
compound(press, drill)
nsubj(have, press)
parataxis(keep, have)
det(spring, a)
compound(spring, quill)
compound(spring, return)
obj(have, spring)
nsubj(raise, that)
acl:relcl(spring, raise)
det(spindle, the)
obj(raise, spindle)
advmod(raise, automatically)
mark(release, when)
det(lever, the)
compound(lever, feed)
nsubj:pass(release, lever)
aux:pass(release, be)
advcl(raise, release)
cc(hold, and)
conj(release, hold)
det(quill, the)
obj(hold, quill)
case(position, in)
det(position, the)
amod(position, raise)
obl(hold, position)
punct(keep, .)
det(tension, the)
compound(tension, return)
compound(tension, spring)
nsubj:pass(adjust, tension)
aux(adjust, may)
aux:pass(adjust, be)
root(ROOT, adjust)
mark(suit, to)
xcomp(adjust, suit)
amod(requirement, individual)
obj(suit, requirement)
mark(grip, by)
advcl(suit, grip)
det(housing, the)
compound(housing, spring)
obj(grip, housing)
case(pair, with)
det(pair, a)
obl(grip, pair)
case(plier, of)
nmod(pair, plier)
punct(prevent, ()
mark(prevent, to)
advcl(grip, prevent)
det(spring, the)
obj(prevent, spring)
case(unwinding, from)
obl(prevent, unwinding)
mark(release, when)
nsubj:pass(release, it)
aux:pass(release, be)
advcl(prevent, release)
punct(prevent, ))
punct(loosen, ,)
advcl(release, loosen)
det(nut, the)
compound(nut, lock)
obj(loosen, nut)
cc(screw, or)
conj(nut, screw)
punct(rotate, ,)
cc(rotate, and)
conj(loosen, rotate)
det(housing, the)
obj(rotate, housing)
mark(achieve, until)
det(tension, the)
amod(tension, desire)
nsubj:pass(achieve, tension)
aux:pass(achieve, be)
advcl(rotate, achieve)
punct(achieve, .)
csubj(reduce, turn)
det(clockwise, the)
compound(clockwise, housing)
obj(turn, clockwise)
aux(reduce, will)
conj(achieve, reduce)
obj(reduce, tension)
punct(reduce, ,)
compound(clockwise, counter)
punct(clockwise, -)
conj(tension, clockwise)
aux(increase, will)
advcl(reduce, increase)
obj(increase, it)
punct(adjust, .)
aux(lose, do)
advmod(lose, not)
root(ROOT, lose)
det(key, the)
compound(key, chuck)
obj(lose, key)
punct(lose, .)
det(manufacturer, some)
nsubj(have, manufacturer)
aux(have, have)
parataxis(lose, have)
det(foresight, the)
obj(have, foresight)
mark(provide, to)
acl(foresight, provide)
det(socket, a)
obj(provide, socket)
case(key, for)
det(key, the)
compound(key, chuck)
obl(provide, key)
punct(lose, ;)
punct(lose, ;)
advmod(have, otherwise)
punct(have, ,)
nsubj(have, you)
aux(have, will)
parataxis(lose, have)
mark(spend, to)
xcomp(have, spend)
det(minute, a)
amod(minute, few)
obj(spend, minute)
mark(attach, to)
advmod(attach, either)
advcl(spend, attach)
det(clip, a)
amod(clip, suitable)
compound(clip, spring)
obj(attach, clip)
advmod(attach, somewhere)
case(head, on)
det(head, the)
compound(head, press)
obl(somewhere, head)
cc(fit, or)
conj(attach, fit)
det(key, the)
obj(fit, key)
case(length, to)
det(length, a)
obl(fit, length)
case(chain, of)
compound(chain, light)
nmod(length, chain)
cc(fasten, and)
conj(fit, fasten)
case(bottom, to)
det(bottom, the)
obl(fasten, bottom)
case(mount, of)
det(mount, the)
compound(mount, motor)
nmod(bottom, mount)
mark(way, so)
fixed(so, that)
det(key, the)
nsubj(way, key)
cop(way, be)
case(way, out)
case(way, of)
det(way, the)
advcl(fasten, way)
mark(use, when)
advmod(use, not)
case(use, in)
advcl(way, use)
punct(way, .)
nsubj(important, Feeds)
cc(speed, and)
conj(Feeds, speed)
compound(speed, Drill)
nsubj(important, speed)
cop(important, be)
conj(way, important)
mark(want, if)
nsubj(want, you)
advcl(important, want)
det(job, a)
amod(job, good)
obj(want, job)
punct(lose, .)
det(tool, each)
compound(tool, cutting)
nsubj(operate, tool)
aux(operate, will)
root(ROOT, operate)
xcomp(operate, best)
case(speed, at)
det(speed, a)
amod(speed, give)
obl(operate, speed)
punct(operate, ,)
case(material, depend)
case(material, on)
det(material, the)
nsubj(work, material)
advcl(operate, work)
punct(operate, .)
case(press, on)
amod(press, most)
compound(press, drill)
obl(impossible, press)
punct(impossible, ,)
expl(impossible, it)
cop(impossible, be)
root(ROOT, impossible)
mark(get, to)
csubj(impossible, get)
det(speed, the)
amod(speed, exact)
obj(get, speed)
punct(come, ,)
cc(come, but)
nsubj(come, you)
aux(come, can)
conj(impossible, come)
advmod(come, close)
mark(adjust, by)
advcl(come, adjust)
det(belt, the)
compound(belt, drive)
obj(adjust, belt)
case(pulley, on)
det(pulley, the)
compound(cone, step)
punct(cone, -)
compound(pulley, cone)
obl(adjust, pulley)
punct(impossible, .)
nsubj(find, you)
aux(find, will)
root(ROOT, find)
det(chart, a)
obj(find, chart)
acl(chart, give)
det(ratio, the)
amod(ratio, various)
compound(ratio, speed)
obj(give, ratio)
amod(ratio, available)
case(press, with)
nmod:poss(press, you)
amod(press, particular)
compound(press, drill)
obl(available, press)
advmod(press, somewhere)
case(booklet, in)
det(booklet, the)
compound(booklet, instruction)
nmod(press, booklet)
nsubj(come, that)
acl:relcl(booklet, come)
case(tool, with)
det(tool, the)
obl(come, tool)
punct(find, .)
root(ROOT, see)
det(table, the)
obj(see, table)
case(page, on)
obl(see, page)
nummod(page, 34)
case(speed, for)
amod(speed, exact)
amod(speed, recommend)
obl(see, speed)
punct(see, .)
advmod(tool, generally)
punct(tool, ,)
det(tool, the)
advmod(tool, larger)
det(tool, the)
root(ROOT, tool)
cc(harder, and)
mark(harder, the)
conj(tool, harder)
det(material, the)
nsubj(harder, material)
punct(tool, ,)
det(speed, the)
parataxis(tool, slower)
det(speed, the)
nsubj(slower, speed)
punct(tool, .)
compound(pressure, feed)
nsubj(importance, pressure)
cop(importance, be)
advmod(importance, also)
case(importance, of)
amod(importance, major)
root(ROOT, importance)
punct(importance, .)
advmod(much, too)
amod(pressure, much)
nsubj(force, pressure)
aux(force, will)
root(ROOT, force)
det(tool, the)
obj(force, tool)
case(capacity, beyond)
nmod:poss(capacity, its)
compound(capacity, cutting)
nmod(tool, capacity)
cc(result, and)
conj(capacity, result)
case(cut, in)
amod(cut, rough)
nmod(capacity, cut)
cc(tool, and)
amod(tool, jam)
cc(break, or)
conj(jam, break)
conj(capacity, tool)
punct(force, . )
advmod(light, too)
root(ROOT, light)
det(feed, a)
nsubj(light, feed)
punct(feed, ,)
advmod(metal, particularly)
case(metal, with)
nmod(feed, metal)
cc(material, or)
amod(material, other)
amod(material, hard)
conj(metal, material)
punct(cause, ,)
conj(light, cause)
obj(cause, overheating)
case(tool, of)
det(tool, the)
nmod(overheating, tool)
cc(burn, and)
conj(tool, burn)
case(edge, of)
det(edge, the)
compound(edge, cutting)
nmod(burn, edge)
punct(light, .)
det(result, the)
amod(result, best)
nsubj:pass(obtain, result)
aux(obtain, will)
aux:pass(obtain, be)
root(ROOT, obtain)
mark(match, by)
advcl(obtain, match)
det(speed, the)
amod(speed, correct)
obj(match, speed)
case(pressure, with)
det(pressure, a)
amod(pressure, steady)
compound(pressure, feed)
nmod(speed, pressure)
nsubj(let, that)
acl:relcl(pressure, let)
det(tool, the)
obj(let, tool)
acl(tool, cut)
advmod(cut, easily)
case(rate, at)
det(rate, a)
amod(rate, even)
obl(cut, rate)
punct(obtain, .)
amod(tool, common)
compound(tool, drilling)
nsubj(be, tool)
expl(be, there)
root(ROOT, be)
amod(type, numerous)
nsubj(be, type)
cc(style, and)
conj(type, style)
case(tool, of)
nmod(type, tool)
mark(drill, to)
acl(type, drill)
obj(drill, hole)
punct(be, .)
det(common, the)
advmod(common, most)
nsubj(drill, common)
cop(drill, be)
det(drill, the)
compound(drill, twist)
root(ROOT, drill)
punct(drill, ,)
det(shaft, the)
amod(shaft, solid)
compound(shaft, center)
conj(drill, shaft)
case(blade, with)
amod(blade, interchangeable)
compound(blade, cutting)
nmod(shaft, blade)
punct(bit, ,)
det(bit, the)
amod(bit, double)
compound(bit, spur)
conj(blade, bit)
punct(bit, ,)
cc(bit, and)
det(bit, the)
compound(bit, power)
compound(bit, wood)
conj(drill, bit)
punct(drill, .)
nsubj(do, all)
aux(do, will)
root(ROOT, do)
det(job, a)
amod(job, good)
obj(do, job)
mark(sharp, if)
advcl(do, sharp)
punct(cut, ,)
cc(cut, but)
det(drill, the)
compound(drill, twist)
nsubj(cut, drill)
aux(cut, do)
advmod(cut, not)
conj(do, cut)
advmod(smoothly, quite)
advmod(smoothly, as)
advmod(cut, smoothly)
case(other, as)
det(other, the)
obl(smoothly, other)
punct(cut, ,)
mark(have, since)
nsubj(have, they)
aux(have, do)
advmod(have, not)
advcl(cut, have)
det(spur, the)
amod(spur, outlining)
obj(have, spur)
nsubj(sever, that)
acl:relcl(spur, sever)
det(fiber, the)
obj(sever, fiber)
case(start, before)
amod(start, actual)
amod(start, boring)
obl(sever, start)
punct(do, .)
det(cutter, the)
amod(cutter, adjustable)
compound(cutter, fly)
nsubj(useful, cutter)
cop(useful, be)
advmod(useful, very)
root(ROOT, useful)
mark(cut, for)
advcl(useful, cut)
amod(hole, large)
compound(hole, diameter)
obj(cut, hole)
cc(use, and)
aux(use, can)
aux:pass(use, be)
conj(useful, use)
mark(cut, to)
xcomp(use, cut)
amod(size, exact)
punct(size, -)
compound(disc, size)
obj(cut, disc)
mark(reverse, by)
advcl(cut, reverse)
det(blade, the)
compound(blade, cutter)
obj(reverse, blade)
punct(useful, .)
mark(sided, since)
compound(cutter, fly)
nsubj(sided, cutter)
cop(sided, be)
compound(sided, one)
advcl(use, sided)
cc(balance, and)
advmod(balance, not)
conj(sided, balance)
punct(use, ,)
nsubj:pass(use, they)
aux(use, should)
aux:pass(use, be)
root(ROOT, use)
case(speed, at)
det(speed, the)
amod(speed, slowest)
obl(use, speed)
amod(speed, available)
punct(feed, ,)
cc(feed, and)
conj(use, feed)
advmod(slowly, very)
advmod(feed, slowly)
mark(avoid, to)
advcl(feed, avoid)
obj(avoid, bind)
punct(use, .)
root(ROOT, fly)
nsubj(fool, cutter)
aux(fool, can)
ccomp(fly, fool)
obj(fool, you)
mark(put, into)
advcl(fool, put)
nmod:poss(hand, you)
obj(put, hand)
advmod(close, too)
advmod(put, close)
case(tool, to)
det(tool, the)
obl(put, tool)
punct(keep, ,)
advmod(keep, so)
mark(want, if)
nsubj(want, you)
advcl(keep, want)
mark(avoid, to)
xcomp(want, avoid)
amod(finger, nick)
obj(avoid, finger)
punct(keep, ,)
conj(fly, keep)
nmod:poss(hand, you)
obj(keep, hand)
advmod(keep, well)
case(way, out)
case(way, of)
det(way, the)
obl(keep, way)
punct(fly, .)
amod(operation, simple)
compound(operation, hole)
compound(operation, drilling)
nsubj(place, operation)
mark(drill, when)
advcl(place, drill)
det:predet(way, all)
det(way, the)
obj(drill, way)
case(workpiece, through)
det(workpiece, a)
obl(drill, workpiece)
punct(place, ,)
advmod(place, always)
root(ROOT, place)
det(piece, a)
obj(place, piece)
case(wood, of)
compound(wood, scrap)
nmod(piece, wood)
advmod(place, underneath)
punct(place, .)
nsubj(protect, this)
aux(protect, will)
advmod(protect, not)
advmod(protect, only)
root(ROOT, protect)
det(table, the)
compound(table, work)
obj(protect, table)
punct(assure, ,)
cc(assure, but)
advmod(assure, also)
conj(protect, assure)
det(breakthrough, a)
amod(breakthrough, clean)
obj(assure, breakthrough)
punct(protect, .)
det(method, another)
nsubj(be, method)
mark(assure, of)
acl(method, assure)
det(hole, a)
amod(hole, clean)
obj(assure, hole)
ccomp(assure, be)
mark(drill, to)
advmod(drill, first)
ccomp(be, drill)
det(hole, a)
amod(hole, small)
compound(hole, pilot)
obj(drill, hole)
det:predet(way, all)
det(way, the)
obl:npmod(drill, way)
advmod(drill, through)
punct(drill, ,)
advmod(drill, then)
conj(drill, drill)
amod(way, half)
obj(drill, way)
case(bit, with)
det(bit, the)
amod(bit, dimensional)
obl(drill, bit)
punct(turn, ,)
conj(drill, turn)
det(piece, the)
obj(turn, piece)
advmod(turn, over)
punct(finish, ,)
cc(finish, and)
conj(over, finish)
case(side, from)
det(side, the)
amod(side, other)
nmod(finish, side)
punct(protect, .)
case(wood, in)
amod(wood, soft)
obl(be, wood)
case(grain, with)
amod(grain, pronounce)
nmod(wood, grain)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(be, sometimes)
det(tendency, a)
nsubj(be, tendency)
case(hole, for)
det(hole, the)
nmod(tendency, hole)
mark(wander, to)
acl(hole, wander)
punct(be, ,)
case(hardness, due)
fixed(due, to)
det(hardness, the)
amod(hardness, varying)
obl(be, hardness)
case(wood, of)
det(wood, the)
nmod(hardness, wood)
punct(be, .)
case(case, in)
det(case, this)
obl(do, case)
punct(do, ,)
csubj(do, drill)
det(hole, a)
amod(hole, small)
compound(hole, pilot)
obj(drill, hole)
cc(clamp, or)
conj(drill, clamp)
det(work, the)
obj(clamp, work)
aux(do, will)
root(ROOT, do)
obj(do, much)
mark(improve, to)
acl(much, improve)
obj(improve, accuracy)
punct(do, .)
mark(be, when)
det(hole, a)
nsubj(be, hole)
advcl(run, be)
mark(bored, to)
aux:pass(bored, be)
xcomp(be, bored)
case(depth, to)
det(depth, a)
amod(depth, predetermine)
obl(bored, depth)
punct(mark, ,)
conj(bored, mark)
det(depth, the)
obj(mark, depth)
case(side, on)
det(side, the)
obl(mark, side)
case(stock, of)
det(stock, the)
nmod(side, stock)
punct(run, ,)
advmod(run, then)
root(ROOT, run)
det(bit, the)
obj(run, bit)
advmod(run, down)
mark(be, so)
fixed(so, that)
nsubj(mark, it)
cop(mark, be)
advmod(mark, even)
case(mark, with)
det(mark, the)
advcl(run, mark)
punct(run, .)
det(rod, the)
compound(gauge, depth)
compound(rod, gauge)
nsubj:pass(set, rod)
aux(set, can)
advmod(set, now)
aux:pass(set, be)
root(ROOT, set)
punct(number, ,)
cc(number, and)
det(number, any)
conj(set, number)
case(hole, of)
nmod(number, hole)
acl(number, bored)
case(depth, to)
amod(depth, exact)
cc(identical, and)
conj(exact, identical)
obl(bored, depth)
punct(set, .)
det(bridge, the)
amod(time, old)
punct(time, -)
compound(bridge, time)
nsubj(interest, bridge)
case(River, over)
det(River, the)
compound(River, Merrimac)
nmod(bridge, River)
case(Massachusetts, in)
nmod(River, Massachusetts)
cop(interest, be)
case(interest, of)
amod(interest, unusual)
root(ROOT, interest)
case(respects, in)
amod(respects, many)
nmod(interest, respects)
punct(interest, .)
case(length, for)
nmod:poss(length, they)
obl(know, length)
punct(know, ,)
nmod:poss(type, they)
nsubj:pass(know, type)
case(construction, of)
nmod(type, construction)
punct(setting, ,)
nmod:poss(setting, they)
amod(setting, picturesque)
conj(construction, setting)
punct(association, ,)
cc(association, and)
nmod:poss(association, they)
amod(association, literary)
conj(type, association)
punct(know, ,)
nsubj:pass(know, they)
aux(know, should)
aux:pass(know, be)
root(ROOT, know)
cc(remember, and)
conj(know, remember)
punct(know, .)
case(sequence, in)
det(sequence, this)
obl(write, sequence)
nsubj(write, I)
aux(write, shall)
root(ROOT, write)
case(they, about)
obl(write, they)
case(order, in)
det(order, the)
obl(write, order)
case(erection, of)
nmod:poss(erection, they)
nmod(order, erection)
punct(write, .)
det(bridge, the)
amod(bridge, first)
root(ROOT, bridge)
acl(bridge, know)
mark(cover, to)
aux(cover, have)
aux:pass(cover, be)
xcomp(know, cover)
advmod(cover, wholly)
cc(part, or)
case(part, in)
conj(cover, part)
punct(cover, ,)
punct(cover, --)
cc(one, and)
advmod(one, perhaps)
det(one, the)
advmod(interesting, most)
amod(one, interesting)
conj(bridge, one)
punct(one, ,)
amod(Newbury, connect)
appos(one, Newbury)
punct(Newburyport, ()
advmod(Newburyport, now)
appos(Newbury, Newburyport)
punct(Newburyport, ))
case(Point, with)
compound(Point, salisbury)
nmod(Newbury, Point)
punct(bridge, .)
nmod:poss(building, its)
nsubj:pass(propose, building)
aux:pass(propose, be)
advmod(propose, first)
root(ROOT, propose)
case(1791, in)
obl(propose, 1791)
punct(propose, ,)
mark(petition, when)
det(group, a)
nsubj(petition, group)
case(citizen, of)
nmod(group, citizen)
punct(man, ,)
advmod(man, mostly)
compound(man, Newburyport)
conj(group, man)
punct(petition, ,)
advcl(propose, petition)
det(Court, the)
compound(Court, General)
obj(petition, Court)
case(act, for)
det(act, a)
obl(petition, act)
case(incorporation, of)
nmod(act, incorporation)
punct(propose, .)
det(document, this)
nsubj(begin, document)
root(ROOT, begin)
punct(begin, :)
punct(begin, ``)
root(ROOT, no.)
nummod(no., 1)
compound(Port, Newbury)
appos(no., Port)
punct(Port, ,)
appos(Port, may)
nummod(may, 30th)
punct(Port, ,)
nmod:tmod(Port, 1791)
punct(no., ``)
advmod(utility, whereas)
punct(utility, ,)
det(Bridge, a)
nsubj(utility, Bridge)
case(River, over)
compound(River, Merrimack)
nmod(Bridge, River)
punct(Bridge, ,)
case(land, from)
det(land, the)
nmod(Bridge, land)
case(Hon'ble, of)
nmod(land, Hon'ble)
flat(Hon'ble, Jonathan)
flat(Hon'ble, Greenleaf)
punct(Jonathan, ,)
flat(Jonathan, Esquire)
punct(Jonathan, ,)
case(Newbery, in)
nmod(Jonathan, Newbery)
punct(Island, ,)
case(Island, to)
compound(Island, deer)
nmod(Newbery, Island)
punct(Island, ,)
cc(Island, and)
case(Island, from)
amod(Island, say)
nsubj(utility, Island)
case(salisbury, to)
nmod(Island, salisbury)
punct(utility, ,)
aux(utility, would)
cop(utility, be)
case(utility, of)
advmod(extensive, very)
amod(utility, extensive)
root(ROOT, utility)
punct(utility, ,)
mark(afford, by)
advcl(utility, afford)
det(conveyance, a)
amod(conveyance, safe)
obj(afford, conveyance)
case(carriage, to)
nmod(conveyance, carriage)
punct(Teams, ,)
conj(carriage, Teams)
cc(Travellers, and)
conj(carriage, Travellers)
case(season, at)
det(season, all)
obl(afford, season)
case(year, of)
det(year, the)
nmod(season, year)
punct(Times, ,)
cc(Times, and)
case(Times, at)
det(Times, all)
conj(season, Times)
case(tide, of)
nmod(Times, tide)
punct(utility, .)
punct(utility, ``)
nsubj(agree, we)
punct(agree, ,)
det(subscriber, the)
nsubj(agree, subscriber)
punct(agree, ,)
aux(agree, do)
root(ROOT, agree)
punct(agree, ,)
mark(present, that)
advmod(soon, as)
advmod(present, soon)
mark(subscribe, as)
det(number, a)
amod(number, convenient)
nsubj(subscribe, number)
case(person, of)
nmod(number, person)
aux(subscribe, have)
advcl(soon, subscribe)
case(this, to)
obl(subscribe, this)
punct(Writing, ,)
cc(Writing, or)
det(Writing, a)
amod(Writing, similar)
conj(subscribe, Writing)
punct(present, ,)
nsubj(present, we)
aux(present, will)
parataxis(agree, present)
det(petition, a)
obj(present, petition)
case(Court, to)
det(Court, the)
compound(Court, Hon'ble)
compound(Court, General)
nmod(petition, Court)
case(Commonwealth, of)
det(Commonwealth, the)
nmod(Court, Commonwealth)
case(Massachusetts, of)
nmod(Commonwealth, Massachusetts)
punct(incorporate, ,)
acl(petition, pray)
case(act, for)
det(act, a)
obl(pray, act)
advcl(pray, incorporate)
case(politic, into)
det(politic, a)
compound(politic, body)
obl(incorporate, politic)
det(subscriber, the)
appos(politic, subscriber)
case(Writing, to)
amod(Writing, such)
nmod(subscriber, Writing)
case(Liberty, with)
nmod(Writing, Liberty)
mark(build, to)
acl(subscriber, build)
det:predet(Bridge, such)
det(Bridge, a)
obj(build, Bridge)
punct(right, ,)
cc(right, and)
det(right, a)
conj(Bridge, right)
mark(demand, to)
acl(right, demand)
det(toll, a)
obj(demand, toll)
amod(toll, equal)
case(that, to)
obl(equal, that)
advcl(equal, receive)
case(Bridge, at)
compound(Bridge, Malden)
obl(receive, Bridge)
punct(term, ,)
cc(term, and)
case(term, on)
case(term, like)
conj(Bridge, term)
punct(agree, ,)
cc(obtain, and)
mark(obtain, if)
det:predet(act, such)
det(act, a)
nsubj:pass(obtain, act)
aux(obtain, shall)
aux:pass(obtain, be)
advcl(agree, obtain)
punct(agree, ,)
advmod(agree, then)
nsubj(agree, we)
advmod(agree, severally)
conj(agree, agree)
obj(agree, each)
case(other, with)
det(other, the)
obl(agree, other)
punct(agree, ,)
mark(hold, that)
nsubj(hold, we)
aux(hold, will)
advcl(agree, hold)
mark(say, in)
det(say, the)
advcl(hold, say)
root(ROOT, Bridge)
det(share, the)
amod(share, several)
obj(Bridge, share)
acl(share, set)
case(Names, against)
nmod:poss(Names, we)
amod(Names, respective)
obl(set, Names)
punct(Bridge, ,)
det(whole, the)
amod(share, whole)
case(share, into)
compound(hundred, two)
nummod(share, hundred)
nsubj:pass(divide, share)
aux:pass(divide, be)
advcl(Bridge, divide)
punct(pay, ,)
cc(pay, and)
mark(pay, that)
nsubj(pay, we)
aux(pay, will)
conj(divide, pay)
amod(sum, such)
obj(pay, sum)
case(money, of)
nmod(sum, money)
case(time, at)
amod(time, such)
obl(pay, time)
cc(Manners, and)
case(Manners, in)
amod(Manners, such)
conj(time, Manners)
punct(Corporation, ,)
case(Corporation, as)
case(Corporation, by)
det(Corporation, the)
amod(Corporation, say)
amod(Corporation, propose)
nmod(Manners, Corporation)
punct(direct, ,)
aux(direct, shall)
aux:pass(direct, be)
acl:relcl(Corporation, direct)
cc(require, and)
conj(direct, require)
punct(direct, '')
punct(sign, .)
det(paper, this)
nsubj:pass(sign, paper)
aux:pass(sign, be)
conj(direct, sign)
case(person, by)
compound(five, forty)
punct(five, -)
nummod(person, five)
obl(sign, person)
punct(sign, ,)
advcl(sign, subscribe)
det(total, a)
obj(subscribe, total)
case(share, of)
nummod(share, two)
nummod(share, hundred)
nmod(total, share)
punct(Bridge, . )
det(month, a)
obl:npmod(later, month)
advmod(serve, later)
det(Court, the)
compound(Court, General)
nsubj(serve, Court)
root(ROOT, serve)
obj(serve, notice)
case(town, to)
det(town, the)
nmod(notice, town)
case(Newbury, of)
nmod(town, Newbury)
mark(be, that)
det(bridge, the)
nsubj(be, bridge)
advcl(serve, be)
mark(build, to)
aux:pass(build, be)
xcomp(be, build)
punct(serve, .)
det(matter, the)
nsubj:pass(consider, matter)
aux:pass(consider, be)
root(ROOT, consider)
cc(reconsider, and)
conj(consider, reconsider)
punct(grant, ,)
cc(grant, and)
advmod(oppose, finally)
conj(consider, oppose)
punct(grant, ,)
cc(grant, but)
case(spite, in)
obl(grant, spite)
case(objection, of)
amod(objection, many)
nmod(spite, objection)
punct(grant, ,)
det(Court, the)
nsubj(grant, Court)
conj(consider, grant)
det(charter, a)
obj(grant, charter)
case(January, on)
obl(grant, January)
nummod(January, 9)
punct(January, ,)
nummod(January, 1792)
punct(consider, .)
case(November, on)
obl(complete, November)
nummod(November, 26)
case(year, of)
det(year, that)
nmod(November, year)
det(bridge, the)
nsubj:pass(complete, bridge)
aux:pass(complete, be)
root(ROOT, complete)
cc(open, and)
conj(complete, open)
punct(complete, .)
nsubj:pass(complete, Timothy)
flat(Timothy, Palmer)
punct(Timothy, ,)
nsubj(invent, who)
acl:relcl(Timothy, invent)
cc(patented, and)
advmod(patented, later)
conj(invent, patented)
det(type, the)
compound(type, arch)
obj(patented, type)
case(construction, of)
nmod(type, construction)
case(bridge, for)
compound(bridge, wooden)
nmod(construction, bridge)
punct(genius, ,)
cop(genius, be)
det(genius, the)
parataxis(complete, genius)
nsubj(plan, who)
acl:relcl(genius, plan)
cc(supervise, and)
conj(plan, supervise)
det(building, the)
obj(supervise, building)
case(Essex, of)
det(Essex, the)
nmod(building, Essex)
punct(genius, ,)
cc(supervise, or)
punct(complete, ``)
compound(Island, deer)
compound(bridge, Island)
punct(Island, '')
root(ROOT, bridge)
mark(carry, although)
det(work, the)
amod(work, actual)
nsubj:pass(carry, work)
aux:pass(carry, be)
advcl(bridge, carry)
compound:prt(carry, out)
case(direction, under)
det(direction, the)
obl(carry, direction)
case(William, of)
nmod(direction, William)
flat(William, Coombs)
punct(William, ,)
nsubj(receive, who)
acl:relcl(William, receive)
obj(receive, $)
nummod($, 300)
case(recompense, as)
obl(receive, recompense)
punct(bridge, .)
det(bridge, this)
nummod(part, two)
punct(part, -)
compound(bridge, part)
nsubj:pass(describe, bridge)
aux:pass(describe, be)
advmod(describe, best)
root(ROOT, describe)
case(Rev., by)
obl(describe, Rev.)
flat(Rev., Timothy)
flat(Rev., Dwight)
punct(Rev., ,)
appos(Rev., president)
case(College, of)
compound(College, Yale)
nmod(president, College)
punct(Rev., ,)
case(he, in)
obl(describe, he)
punct(describe, ``)
root(ROOT, Travels)
case(England, in)
compound(England, New)
punct(England, -)
nmod(Travels, England)
cc(York, and)
compound(York, New)
punct(York, -)
conj(England, York)
punct(York, '')
punct(Travels, ,)
acl(Travels, publish)
case(Haven, in)
compound(Haven, New)
obl(publish, Haven)
case(1821, in)
obl(publish, 1821)
punct(Travels, .)
nsubj(say, he)
root(ROOT, say)
case(it, of)
obl(say, it)
punct(say, :)
punct(say, ``)
nsubj(consist, it)
root(ROOT, consist)
case(division, of)
nummod(division, two)
obl(consist, division)
punct(division, ,)
acl(division, separate)
case(island, by)
det(island, a)
obl(separate, island)
case(distance, at)
det(distance, a)
amod(distance, small)
obl(separate, distance)
case(shore, from)
det(shore, the)
amod(shore, southern)
nmod(distance, shore)
punct(consist, .)
det(division, the)
nsubj(consist, division)
case(island, between)
det(island, the)
nmod(division, island)
cc(shore, and)
det(shore, this)
conj(island, shore)
punct(consist, ,)
root(ROOT, consist)
advmod(consist, principally)
case(arch, of)
det(arch, a)
obl(consist, arch)
punct(consist, ;)
punct(consist, ;)
nmod:poss(chord, whose)
nsubj(hundred, chord)
cop(hundred, be)
nummod(hundred, one)
acl:relcl(arch, hundred)
cc(foot, and)
nummod(foot, sixty)
conj(hundred, foot)
punct(foot, ,)
cc(foot, and)
nmod:poss(vortex, whose)
nsubj(foot, vortex)
cop(foot, be)
nummod(foot, forty)
conj(hundred, foot)
punct(foot, ()
nsubj(foot, it)
cop(foot, be)
advmod(foot, actually)
nummod(foot, 37)
parataxis(foot, foot)
punct(foot, ))
case(mark, above)
det(mark, the)
amod(water, high)
punct(water, -)
compound(mark, water)
nmod(foot, mark)
punct(consist, .)
case(appearance, in)
obl(resemble, appearance)
cc(construction, and)
conj(appearance, construction)
nsubj(resemble, it)
root(ROOT, resemble)
det(bridge, the)
compound(bridge, Pascataqua)
obj(resemble, bridge)
punct(resemble, .)
det(length, the)
amod(length, whole)
nsubj(one, length)
case(bridge, of)
compound(bridge, Essex)
nmod(length, bridge)
cop(one, be)
root(ROOT, one)
nummod(one, thousand)
cc(foot, and)
nummod(foot, thirty)
conj(thousand, foot)
cc(breadth, and)
nmod:poss(breadth, its)
conj(thousand, breadth)
compound(four, thirty)
punct(four, -)
nummod(breadth, four)
punct(one, . )
nsubj(mention, I)
aux(mention, have)
advmod(mention, already)
root(ROOT, mention)
mark(inventor, that)
nsubj(inventor, Mr.)
flat(Mr., Timothy)
flat(Mr., Palmer)
case(Newburyport, of)
nmod(Mr., Newburyport)
cop(inventor, be)
det(inventor, the)
ccomp(mention, inventor)
case(bridge, of)
det(bridge, the)
amod(bridge, arch)
nmod(inventor, bridge)
case(country, in)
det(country, this)
nmod(bridge, country)
punct(inventor, .)
mark(educated, as)
nsubj:pass(educated, Mr.)
flat(Mr., Palmer)
aux:pass(educated, be)
advcl(inventor, educated)
case(building, to)
compound(building, house)
punct(building, -)
obl(educated, building)
advmod(educated, only)
punct(see, ,)
cc(see, and)
aux(see, have)
advmod(see, never)
conj(educated, see)
det(structure, a)
obj(see, structure)
case(nature, of)
det(nature, this)
nmod(structure, nature)
punct(deserve, ;)
punct(mention, ;)
nsubj(deserve, he)
advmod(deserve, certainly)
parataxis(see, deserve)
advmod(credit, not)
det(credit, a)
amod(credit, little)
obj(deserve, credit)
case(invention, for)
det(invention, the)
nmod(credit, invention)
punct(necessary, '')
punct(necessary, .)
nsubj(necessary, it)
cop(necessary, be)
advmod(necessary, hardly)
parataxis(mention, necessary)
mark(remind, to)
csubj(necessary, remind)
obj(remind, student)
case(bridge, of)
amod(bridge, cover)
nmod(student, bridge)
nsubj:pass(bear, that)
nsubj:pass(bear, Timothy)
flat(Timothy, Palmer)
aux:pass(bear, be)
acl:relcl(bridge, bear)
case(1751, in)
obl(bear, 1751)
case(nearby, in)
obl(bear, nearby)
obl(bear, Rowley)
punct(bear, ;)
punct(remind, ;)
mark(move, that)
nsubj(move, he)
conj(bear, move)
case(parent, with)
nmod:poss(parent, he)
obl(move, parent)
case(Boxford, to)
compound(Boxford, West)
obl(move, Boxford)
mark(old, when)
nsubj(old, he)
cop(old, be)
nummod(year, sixteen)
obl:npmod(old, year)
advcl(move, old)
punct(old, ;)
punct(move, ;)
cc(apprentice, and)
aux:pass(apprentice, be)
expl(apprentice, there)
conj(old, apprentice)
case(builder, to)
det(builder, a)
obl(apprentice, builder)
cc(architect, and)
conj(builder, architect)
punct(builder, ,)
appos(builder, Moody)
flat(Moody, Spofford)
punct(mention, .)
expl(feat, it)
cop(feat, be)
advmod(feat, indeed)
det(feat, a)
amod(feat, remarkable)
root(ROOT, feat)
mark(apply, that)
det(man, a)
nsubj(apply, man)
nsubj(have, who)
aux(have, have)
acl:relcl(man, have)
det(experience, no)
obj(have, experience)
case(building, of)
compound(building, bridge)
nmod(experience, building)
aux(apply, should)
aux(apply, have)
csubj(feat, apply)
det(principle, the)
obj(apply, principle)
case(arch, of)
det(arch, the)
nmod(principle, arch)
punct(arch, ,)
nsubj(appear, which)
acl:relcl(arch, appear)
case(bridge, in)
nmod:poss(bridge, he)
amod(bridge, famous)
obl(appear, bridge)
case(Portsmouth, at)
nmod(bridge, Portsmouth)
punct(Haverhill, ,)
conj(Portsmouth, Haverhill)
punct(Philadelphia, ,)
cc(Philadelphia, and)
conj(Portsmouth, Philadelphia)
punct(feat, .)
det(Bridge, the)
compound(Bridge, Essex)
compound(Bridge, Merrimack)
nsubj:pass(cover, Bridge)
mark(build, when)
advmod(build, first)
acl(Bridge, build)
aux:pass(cover, be)
advmod(cover, not)
root(ROOT, cover)
punct(cover, .)
advmod(far, as)
advmod(protect, far)
mark(know, as)
nsubj(know, we)
advcl(far, know)
punct(protect, ,)
det(bridge, no)
amod(bridge, american)
nsubj:pass(protect, bridge)
aux(protect, have)
aux:pass(protect, be)
advmod(protect, thus)
root(ROOT, protect)
case(1792, in)
obl(protect, 1792)
punct(protect, .)
nsubj(authority, Richard)
flat(Richard, S.)
flat(Richard, Allen)
cop(authority, be)
det(authority, the)
root(ROOT, authority)
case(statement, for)
det(statement, the)
nmod(authority, statement)
mark(roof, that)
det(section, the)
amod(section, northern)
nsubj:pass(roof, section)
aux:pass(roof, be)
advmod(roof, probably)
acl(statement, roof)
case(1810, by)
obl(roof, 1810)
punct(authority, .)
nmod:poss(appearance, its)
amod(appearance, original)
nsubj:pass(show, appearance)
aux:pass(show, be)
root(ROOT, show)
case(engrave, in)
det(engrave, a)
obl(show, engrave)
acl(engrave, publish)
case(Magazine, in)
det(Magazine, the)
punct(Magazine, ``)
compound(Magazine, Massachusetts)
obl(publish, Magazine)
punct(Magazine, '')
case(May, in)
obl(publish, May)
nummod(May, 1793)
punct(May, ,)
nsubj:pass(reproduce, which)
aux:pass(reproduce, be)
acl:relcl(engrave, reproduce)
advmod(reproduce, herewith)
punct(fig, ()
parataxis(reproduce, fig)
punct(fig, .)
nummod(fig, 1)
punct(fig, ))
punct(show, . )
det(description, a)
amod(description, brief)
nsubj(say, description)
amod(description, accompany)
det(picture, the)
nmod(description, picture)
root(ROOT, say)
mark(contain, that)
det(bridge, the)
nsubj(contain, bridge)
ccomp(say, contain)
advmod(6000, more)
fixed(more, than)
nummod(ton, 6000)
obj(contain, ton)
case(timber, of)
nmod(ton, timber)
punct(say, .)
case(abutment, between)
det(abutment, the)
obl(be, abutment)
case(shore, on)
det(shore, the)
compound(shore, Newbury)
nmod(abutment, shore)
cc(bank, and)
det(bank, the)
amod(bank, south)
conj(shore, bank)
case(Island, of)
compound(Island, deer)
nmod(bank, Island)
expl(be, there)
root(ROOT, be)
nummod(span, one)
nsubj(be, span)
cc(arch, or)
conj(span, arch)
acl(span, measure)
nummod(foot, 160)
obj(measure, foot)
punct(be, ;)
punct(be, ;)
case(shore, between)
det(shore, the)
amod(shore, north)
nmod(span, shore)
case(Island, of)
compound(Island, deer)
nmod(shore, Island)
cc(side, and)
det(side, the)
compound(side, salisbury)
nsubj(be, side)
expl(be, there)
conj(be, be)
det(arch, a)
nsubj(be, arch)
case(foot, of)
nummod(foot, 113)
nmod(arch, foot)
cc(series, and)
det(series, a)
conj(arch, series)
case(pier, of)
nmod(series, pier)
case(draw, with)
det(draw, a)
nmod(series, draw)
nummod(foot, forty)
obl:npmod(long, foot)
advmod(draw, long)
punct(be, . )
det(dinner, a)
nsubj(take, dinner)
cc(celebration, and)
conj(dinner, celebration)
case(honor, in)
nmod(dinner, honor)
case(piece, of)
det(piece, this)
nmod(honor, piece)
case(engineering, of)
nmod(piece, engineering)
root(ROOT, take)
obj(take, place)
compound(place, July)
nummod(July, 4)
punct(July, ,)
nummod(July, 1793)
punct(take, ,)
case(tavern, in)
det(tavern, a)
obl(take, tavern)
acl(tavern, erect)
case(corporation, by)
det(corporation, the)
obl(erect, corporation)
case(island, on)
det(island, the)
obl(erect, island)
punct(take, .)
nsubj:pass(say, it)
aux:pass(say, be)
root(ROOT, say)
mark(stand, that)
det(Timothy, the)
amod(Timothy, eccentric)
nsubj(stand, Timothy)
flat(Timothy, dexter)
punct(Timothy, ,)
nsubj(one, who)
cop(one, be)
acl:relcl(Timothy, one)
case(holder, of)
det(holder, the)
amod(holder, first)
compound(holder, share)
punct(holder, -)
nmod(one, holder)
punct(stand, ,)
ccomp(say, stand)
case(table, on)
det(table, the)
obl(stand, table)
cc(make, and)
conj(stand, make)
det(speech, a)
obj(make, speech)
amod(speech, worthy)
case(occasion, of)
det(occasion, the)
obl(worthy, occasion)
punct(say, .)
root(ROOT, the)
punct(the, ``)
compound(Journal, Essex)
nsubj(say, Journal)
punct(say, '')
root(ROOT, say)
mark(deliver, that)
nsubj(deliver, he)
punct(deliver, ``)
ccomp(say, deliver)
det(oration, a)
obj(deliver, oration)
case(bridge, on)
det(bridge, the)
nmod(oration, bridge)
punct(bridge, ,)
nsubj(elegance, which)
case(elegance, for)
obl(deliver, elegance)
case(style, of)
nmod(elegance, style)
punct(propriety, ,)
conj(style, propriety)
case(speech, of)
nmod(propriety, speech)
cc(force, or)
conj(speech, force)
case(argument, of)
nmod(force, argument)
punct(ciceronian, ,)
cop(ciceronian, be)
advmod(ciceronian, truly)
parataxis(write, ciceronian)
punct(ciceronian, '')
punct(write, .)
det(reporter, the)
nsubj(write, reporter)
aux(write, must)
aux(write, have)
ccomp(say, write)
obj(write, this)
case(tongue, with)
obl(write, tongue)
case(cheek, in)
nmod(tongue, cheek)
punct(write, ,)
mark(understand, because)
nmod:poss(oration, dexter)
case(dexter, 's)
nsubj:pass(understand, oration)
aux(understand, could)
advmod(understand, hardly)
aux:pass(understand, be)
advcl(write, understand)
punct(write, ;)
punct(write, ;)
cc(seem, and)
punct(seem, ,)
mark(explain, although)
nsubj(explain, he)
advmod(explain, later)
advcl(seem, explain)
mark(talk, that)
nsubj(talk, he)
aux(talk, be)
ccomp(explain, talk)
obj(talk, french)
punct(seem, ,)
nsubj(seem, it)
parataxis(say, seem)
advmod(more, rather)
advmod(likely, more)
xcomp(seem, likely)
mark(succumb, that)
nsubj(succumb, he)
aux(succumb, have)
ccomp(likely, succumb)
case(joy, to)
det(joy, the)
obl(succumb, joy)
case(evening, of)
det(evening, the)
nmod(joy, evening)
punct(say, .)
det(portion, the)
amod(portion, north)
nsubj(worth, portion)
case(bridge, of)
det(bridge, the)
compound(bridge, Essex)
nmod(portion, bridge)
cop(worth, be)
advmod(worth, well)
root(ROOT, worth)
det(cost, the)
obj(worth, cost)
case(construction, of)
nmod(cost, construction)
punct(worth, ,)
mark(prove, although)
nsubj(prove, it)
advcl(worth, prove)
mark(twice, to)
cop(what, be)
advmod(what, twice)
nsubj:pass(estimate, what)
aux:pass(estimate, be)
xcomp(prove, estimate)
case(beginning, in)
det(beginning, the)
obl(estimate, beginning)
punct(worth, .)
nsubj(stand, it)
root(ROOT, stand)
case(form, in)
nmod:poss(form, its)
amod(form, original)
obl(stand, form)
case(1882, until)
obl(stand, 1882)
punct(stand, .)
det(half, the)
amod(half, southern)
nsubj:pass(consider, half)
punct(half, ,)
advmod(consider, however)
punct(consider, ,)
case(account, on)
obl(consider, account)
case(underbracing, of)
nmod:poss(underbracing, its)
nmod(account, underbracing)
punct(consider, ,)
aux:pass(consider, be)
root(ROOT, consider)
case(owner, by)
compound(owner, boat)
obl(consider, owner)
det(menace, a)
xcomp(consider, menace)
mark(navigation, to)
acl(menace, navigation)
punct(consider, .)
case(1810, in)
obl(tear, 1810)
nsubj:pass(tear, it)
aux:pass(tear, be)
root(ROOT, tear)
advmod(tear, down)
cc(replace, and)
conj(tear, replace)
case(bridge, by)
det(bridge, a)
compound(suspension, chain)
compound(bridge, suspension)
obl(replace, bridge)
punct(tear, .)
nsubj:pass(build, this)
aux:pass(build, be)
root(ROOT, build)
case(John, by)
obl(build, John)
flat(John, templeman)
case(plan, from)
obl(build, plan)
acl(plan, submit)
case(James, by)
obl(submit, James)
flat(James, finley)
case(County, of)
compound(County, Fayette)
nmod(James, County)
punct(County, ,)
appos(County, Pennsylvania)
punct(have, .)
nsubj(have, Timothy)
flat(Timothy, Palmer)
ccomp(build, have)
amod(supervision, general)
obj(have, supervision)
case(work, of)
det(work, the)
nmod(supervision, work)
punct(have, .)
det(advertisement, a)
nsubj(show, advertisement)
case(Herald, in)
det(Herald, the)
punct(Herald, ``)
compound(Herald, Newburyport)
nmod(advertisement, Herald)
punct(Herald, '')
punct(Herald, ,)
appos(Herald, December)
nummod(December, 21)
punct(December, ,)
nummod(December, 1810)
punct(show, ,)
root(ROOT, show)
obj(show, Palmer)
case(light, in)
det(light, a)
amod(light, new)
obl(show, light)
case(expert, as)
det(expert, a)
obl(show, expert)
case(bridge, on)
compound(bridge, chain)
nmod(expert, bridge)
punct(show, .)
nsubj(read, it)
root(ROOT, read)
punct(read, :)
punct(read, ``)
compound(bridge, chain)
root(ROOT, bridge)
punct(bridge, ``)
punct(bridge, .)
nsubj:pass(give, information)
aux:pass(give, be)
advmod(give, hereby)
root(ROOT, give)
mark(agree, that)
nsubj(agree, Mr.)
flat(Mr., Timothy)
flat(Mr., Palmer)
case(Newburyport, of)
nmod(Mr., Newburyport)
punct(Mr., ,)
flat(Newburyport, Mass.)
aux(agree, have)
ccomp(give, agree)
mark(take, to)
xcomp(agree, take)
obj(take, charge)
case(concern, of)
det(concern, the)
nmod(charge, concern)
case(Patentees, of)
det(Patentees, the)
nmod(concern, Patentees)
case(Bridge, of)
det(Bridge, the)
compound(Bridge, Chain)
nmod(Patentees, Bridge)
punct(Patentees, ,)
case(state, in)
det(state, the)
obl(take, state)
case(Massachusetts, of)
nmod(state, Massachusetts)
punct(Hampshire, ,)
compound(Hampshire, New)
conj(Massachusetts, Hampshire)
punct(Vermont, ,)
conj(Massachusetts, Vermont)
punct(Island, ,)
compound(Island, Rhode)
conj(Massachusetts, Island)
punct(Connecticut, ,)
cc(Connecticut, and)
conj(Massachusetts, Connecticut)
punct(Connecticut, ,)
advmod(far, so)
advmod(Connecticut, far)
mark(relate, as)
advcl(far, relate)
case(sale, to)
det(sale, the)
obl(relate, sale)
case(rights, of)
compound(rights, patent)
nmod(sale, rights)
cc(construction, and)
det(construction, the)
conj(sale, construction)
case(Bridges, of)
compound(Bridges, Chain)
nmod(construction, Bridges)
punct(give, .)
punct(give, ``)
nsubj(attend, Mr.)
flat(Mr., Palmer)
aux(attend, will)
root(ROOT, attend)
case(application, to)
det(application, any)
obl(attend, application)
acl(application, relate)
case(bridge, to)
obl(relate, bridge)
cc(view, and)
mark(desire, if)
advcl(view, desire)
aux(view, will)
conj(attend, view)
det(site, the)
amod(site, propose)
obj(view, site)
punct(lay, ,)
cc(lay, and)
conj(view, lay)
compound:prt(lay, out)
cc(superintend, and)
conj(lay, superintend)
det(work, the)
obj(superintend, work)
punct(recommend, ,)
cc(recommend, or)
conj(view, recommend)
det(person, a)
amod(person, suitable)
obj(recommend, person)
mark(execute, to)
acl(person, execute)
obj(execute, it)
punct(attend, .)
root(ROOT, John)
flat(John, templeman)
punct(John, ``)
advcl(prove, approve)
punct(prove, ,)
nsubj(prove, Timothy)
flat(Timothy, Palmer)
punct(Timothy, '')
punct(prove, .)
det(bridge, this)
compound(bridge, chain)
nsubj(prove, bridge)
root(ROOT, prove)
advmod(durable, less)
xcomp(prove, durable)
case(arch, than)
det(arch, the)
amod(arch, wooden)
obl(durable, arch)
case(end, on)
det(end, the)
compound(end, salisbury)
nmod(arch, end)
punct(prove, .)
nsubj(fall, it)
root(ROOT, fall)
punct(fall, ,)
appos(fall, February)
nummod(February, 6)
punct(February, ,)
nummod(February, 1827)
punct(fall, ,)
advcl(fall, carry)
case(it, with)
obl(carry, it)
det(horse, a)
obj(carry, horse)
cc(wagon, and)
conj(horse, wagon)
punct(man, ,)
nummod(man, two)
conj(horse, man)
cc(oxen, and)
nummod(oxen, four)
conj(man, oxen)
punct(fall, .)
det(horse, the)
nsubj:pass(save, horse)
cc(man, and)
conj(horse, man)
aux:pass(save, be)
root(ROOT, save)
punct(drow, ,)
cc(drow, but)
det(oxen, the)
nsubj(drow, oxen)
conj(save, drow)
punct(save, .)
case(spite, in)
obl(rebuilt, spite)
case(catastrophe, of)
det(catastrophe, this)
nmod(spite, catastrophe)
punct(rebuilt, ,)
det(bridge, the)
nsubj:pass(rebuilt, bridge)
aux:pass(rebuilt, be)
root(ROOT, rebuilt)
case(plan, on)
det(plan, the)
amod(plan, same)
obl(rebuilt, plan)
cc(open, and)
conj(rebuilt, open)
advmod(open, again)
case(July, on)
obl(open, July)
nummod(July, 17)
punct(July, ,)
nummod(July, 1827)
punct(July, .)
det(bridge, this)
amod(bridge, second)
compound(bridge, chain)
nsubj(long, bridge)
cop(long, be)
nummod(foot, 570)
obl:npmod(long, foot)
parataxis(rebuilt, long)
punct(have, ,)
conj(long, have)
nummod(tower, two)
nummod(foot, thirty)
punct(foot, -)
compound(tower, foot)
obj(have, tower)
cc(draw, and)
det(draw, a)
conj(tower, draw)
punct(roadway, ,)
cc(roadway, and)
det(roadway, a)
amod(roadway, double)
conj(tower, roadway)
punct(rebuilt, .)
det(bridge, the)
compound(bridge, Essex)
nsubj(crossing, bridge)
cop(crossing, be)
det(crossing, a)
compound(crossing, toll)
root(ROOT, crossing)
case(1868, until)
obl(crossing, 1868)
punct(crossing, ,)
mark(lay, when)
det(commissioner, the)
compound(commissioner, County)
nsubj(lay, commissioner)
advcl(crossing, lay)
compound:prt(lay, out)
det:predet(bridge, all)
det(bridge, the)
compound(bridge, Merrimack)
obj(lay, bridge)
case(highway, as)
obl(lay, highway)
punct(crossing, .)
advmod(have, sturdy)
cc(strong, and)
conj(sturdy, strong)
case(century, after)
advmod(century, more)
fixed(more, than)
det(century, a)
obl(sturdy, century)
case(use, of)
amod(use, continuous)
nmod(century, use)
punct(have, ,)
det(bridge, the)
amod(bridge, old)
amod(bridge, cover)
punct(bridge, ,)
amod(bridge, wooden)
nsubj(have, bridge)
nsubj(span, that)
acl:relcl(bridge, span)
det(River, the)
compound(River, Tygartis)
compound(River, Valley)
obj(span, River)
case(Philippi, at)
obl(span, Philippi)
aux(have, will)
root(ROOT, have)
det(part, a)
amod(part, distinctive)
obj(have, part)
case(observance, in)
det(observance, the)
obl:npmod(long, week)
punct(long, -)
amod(observance, long)
nmod(part, observance)
case(battle, of)
det(battle, the)
amod(battle, first)
compound(battle, land)
nmod(observance, battle)
case(War, of)
det(War, the)
compound(War, Civil)
nmod(battle, War)
case(site, at)
nmod:poss(site, its)
compound(site, home)
nmod(battle, site)
punct(site, ,)
appos(site, May)
nummod(May, 28th)
case(June, to)
nmod(May, June)
nummod(June, 3rd)
punct(have, .)
nsubj(make, Colonel)
flat(Colonel, Frederick)
flat(Colonel, W.)
flat(Colonel, lander)
punct(Colonel, ,)
acl(Colonel, impersonate)
punct(make, ,)
aux(make, will)
advmod(make, again)
root(ROOT, make)
nmod:poss(neck, he)
compound(neck, break)
punct(neck, -)
obj(make, neck)
xcomp(make, ride)
compound:prt(ride, down)
det(declivity, the)
amod(declivity, steep)
obj(ride, declivity)
case(Talbott, of)
nmod(declivity, Talbott)
case(Talbott, 's)
punct(College, ()
advmod(College, now)
nmod(declivity, College)
punct(College, ))
nsubj(bridge, Hill)
cc(thunder, and)
conj(Hill, thunder)
case(bridge, across)
det(bridge, the)
root(ROOT, bridge)
mark(join, to)
acl(bridge, join)
obj(join, Colonel)
flat(Colonel, Benjamin)
flat(Colonel, F.)
flat(Colonel, Kelley)
case(Colonel, 's)
punct(West, ()
compound(Virginia, West)
punct(West, ))
obj(join, Virginia)
vocative(swarming, infantry)
punct(swarming, ,)
advmod(swarming, then)
root(ROOT, swarming)
case(street, through)
det(street, the)
obl(swarming, street)
case(pursuit, in)
obl(swarming, pursuit)
case(Confederates, of)
det(Confederates, the)
amod(Confederates, retreate)
nmod(pursuit, Confederates)
punct(swarming, .)
nsubj:pass(follow, he)
aux:pass(follow, be)
advmod(follow, closely)
root(ROOT, follow)
case(troops, by)
det(troops, the)
compound(troops, Ohio)
cc(Indiana, and)
conj(Ohio, Indiana)
obl(follow, troops)
punct(follow, --)
advmod(have, thus)
det(bridge, the)
amod(bridge, old)
nsubj(have, bridge)
parataxis(follow, have)
det(distinction, another)
obj(have, distinction)
punct(follow, ;)
punct(follow, ;)
mark(structure, that)
mark(structure, of)
cop(structure, be)
det(structure, the)
amod(structure, first)
amod(structure, such)
advcl(have, structure)
acl(structure, secure)
case(force, by)
obl(secure, force)
case(arm, of)
nmod(force, arm)
case(war, in)
det(war, the)
obl(secure, war)
case('60, of)
det('60, the)
nmod(war, '60)
punct(follow, .)
det(bridge, the)
nsubj(survive, bridge)
aux(survive, have)
root(ROOT, survive)
det(hazard, the)
amod(hazard, natural)
obj(survive, hazard)
case(element, of)
det(element, the)
nmod(hazard, element)
punct(war, ,)
conj(element, war)
punct(fire, ,)
conj(element, fire)
punct(flood, ,)
cc(flood, and)
conj(element, flood)
punct(incident, ,)
cc(incident, as)
fixed(as, well)
fixed(as, as)
compound(incident, injury)
conj(element, incident)
case(traffic, to)
amod(traffic, heavy)
nmod(incident, traffic)
punct(incident, ,)
case(year, for)
advmod(hundred, more)
fixed(more, than)
det(year, a)
nummod(year, hundred)
nmod(incident, year)
punct(year, .)
advmod(save, twice)
case(War, during)
det(War, the)
compound(War, Civil)
obl(save, War)
nsubj:pass(save, it)
aux:pass(save, be)
acl:relcl(year, save)
case(destruction, from)
obl(save, destruction)
case(army, by)
det(army, the)
amod(army, oppose)
obl(save, army)
case(pleas, by)
det(pleas, the)
nmod(army, pleas)
cc(prayer, and)
conj(pleas, prayer)
case(minister, of)
det(minister, a)
amod(minister, local)
nmod(pleas, minister)
punct(survive, .)
nsubj(stand, it)
advmod(stand, still)
root(ROOT, stand)
case(monument, as)
det(monument, a)
obl(stand, monument)
case(skill, to)
det(skill, the)
compound(skill, engineering)
nmod(monument, skill)
case(century, of)
det(century, the)
amod(century, last)
nmod(skill, century)
cc(serve, and)
advmod(serve, still)
conj(stand, serve)
case(age, in)
det(age, the)
compound(age, gasoline)
obl(serve, age)
mark(carry, to)
advcl(serve, carry)
amod(traffic, heavy)
obj(carry, traffic)
case(Route, on)
compound(Route, U.S.)
obl(carry, Route)
nummod(Route, 250)
punct(Route, --)
det(beverly, the)
amod(beverly, old)
appos(Route, beverly)
cc(Turnpike, and)
compound(Turnpike, Fairmont)
conj(beverly, Turnpike)
punct(stand, .)
nsubj(one, it)
cop(one, be)
root(ROOT, one)
case(few, of)
det(few, the)
advmod(few, very)
nmod(one, few)
punct(one, ,)
mark(bridge, if)
advmod(bridge, not)
det(bridge, the)
advmod(bridge, only)
amod(bridge, survive)
advcl(one, bridge)
case(type, of)
nmod:poss(type, its)
nmod(bridge, type)
mark(serve, to)
acl(bridge, serve)
det(artery, a)
amod(artery, main)
obj(serve, artery)
case(system, of)
det(system, the)
compound(system, U.S.)
compound(system, highway)
nmod(artery, system)
punct(more, ,)
advmod(more, thus)
nsubj(more, it)
cop(more, be)
advmod(more, far)
conj(one, more)
case(relic, than)
det(relic, a)
obl(more, relic)
case(horse, of)
det(horse, the)
nmod(relic, horse)
cc(day, and)
amod(day, buggy)
conj(horse, day)
punct(one, .)
det(bridge, this)
amod(bridge, cover)
punct(bridge, ,)
amod(bridge, wooden)
nsubj:pass(identify, bridge)
aux:pass(identify, be)
advmod(closely, so)
advmod(identify, closely)
root(ROOT, identify)
case(action, with)
det(action, the)
amod(action, first)
obl(identify, action)
case(morning, in)
det(morning, the)
amod(morning, early)
nmod(action, morning)
case(June, of)
nmod(morning, June)
nummod(June, 3)
punct(June, ,)
nummod(June, 1861)
punct(movement, ,)
cc(movement, and)
case(movement, with)
amod(movement, subsequent)
compound(movement, troop)
conj(identify, movement)
case(army, of)
det(army, both)
nmod(movement, army)
case(area, in)
det(area, the)
compound(area, Philippi)
nmod(army, area)
mark(become, that)
nsubj(become, it)
aux(become, have)
acl(movement, become)
det(part, a)
xcomp(become, part)
cc(parcel, and)
conj(part, parcel)
case(story, of)
det(story, the)
compound(story, war)
nmod(part, story)
punct(identify, .)
advmod(have, so)
advmod(have, frequently)
root(ROOT, have)
obj(have, picture)
case(bridge, of)
det(bridge, the)
nmod(picture, bridge)
ccomp(have, appear)
case(book, in)
obl(appear, book)
cc(publication, and)
case(publication, in)
amod(publication, national)
conj(book, publication)
obj(vie, that)
nsubj(vie, it)
acl:relcl(publication, vie)
case(Fort, with)
det(Fort, the)
amod(Fort, old)
compound(Fort, John)
flat(John, Brown)
obl(vie, Fort)
case(Ferry, at)
compound(Ferry, harper)
nmod(Fort, Ferry)
case(structure, as)
det(structure, the)
nummod(structure, two)
advmod(know, nationally)
advmod(know, best)
amod(structure, know)
obl(vie, structure)
case(Virginia, in)
compound(Virginia, West)
nmod(structure, Virginia)
punct(have, .)
advcl(design, complete)
cc(open, and)
conj(complete, open)
case(traffic, for)
obl(complete, traffic)
case(1852, in)
obl(complete, 1852)
punct(design, ,)
det(bridge, the)
nsubj:pass(design, bridge)
aux:pass(design, be)
root(ROOT, design)
cc(build, and)
conj(design, build)
case(Lemuel, by)
obl(build, Lemuel)
flat(Lemuel, Chenoweth)
cc(brother, and)
nmod:poss(brother, he)
conj(Lemuel, brother)
punct(brother, ,)
conj(Lemuel, Eli)
punct(Lemuel, ,)
case(beverly, of)
nmod(Lemuel, beverly)
punct(design, .)
det(brother, the)
compound(brother, Chenoweth)
nsubj:pass(experience, brother)
aux:pass(experience, be)
root(ROOT, experience)
compound(builder, bridge)
obj(experience, builder)
punct(competition, ,)
cc(competition, and)
case(competition, against)
det(competition, the)
conj(builder, competition)
case(other, of)
nmod(competition, other)
punct(designer, ,)
cc(know, and)
advmod(know, better)
amod(designer, know)
punct(designer, ,)
compound(designer, bridge)
conj(builder, designer)
cc(builder, and)
conj(designer, builder)
nsubj(construct, they)
aux(construct, have)
acl:relcl(designer, construct)
obj(construct, nine)
case(bridge, of)
det(bridge, the)
amod(bridge, cover)
punct(bridge, ,)
amod(bridge, wooden)
nmod(nine, bridge)
case(Parkersburg, on)
det(Parkersburg, the)
nmod(bridge, Parkersburg)
cc(Turnpike, and)
compound(Turnpike, Staunton)
conj(Parkersburg, Turnpike)
det(year, a)
nummod(year, dozen)
obl:npmod(before, year)
advmod(construct, before)
punct(bridge, ,)
cc(bridge, as)
fixed(as, well)
fixed(as, as)
amod(bridge, many)
amod(bridge, other)
conj(bridge, bridge)
case(county, for)
amod(county, several)
nmod(bridge, county)
punct(experience, .)
det(bridge, the)
compound(bridge, Philippi)
nsubj(piece, bridge)
punct(piece, ,)
advmod(piece, however)
punct(piece, ,)
cop(piece, be)
det(piece, the)
compound(piece, Chenoweth)
compound(piece, master)
root(ROOT, piece)
punct(piece, ,)
case(lane, with)
nmod:poss(lane, its)
nummod(foot, 139)
punct(foot, -)
compound(lane, foot)
punct(lane, ,)
amod(lane, dual)
nmod(piece, lane)
punct(span, ,)
appos(lane, span)
punct(piece, --)
cc(stand, and)
nsubj(stand, it)
conj(piece, stand)
obl:tmod(stand, today)
case(monument, as)
det(monument, a)
obl(stand, monument)
case(builder, to)
nmod:poss(builder, its)
nmod(monument, builder)
punct(piece, .)
advmod(rebuilt, never)
root(ROOT, rebuilt)
punct(rebuilt, ,)
det(bridge, the)
nsubj:pass(strengten, bridge)
aux:pass(strengten, be)
ccomp(rebuilt, strengten)
case(1938, in)
obl(strengten, 1938)
case(pier, by)
nummod(pier, two)
amod(pier, extra)
obl(strengten, pier)
punct(floor, ,)
det(floor, a)
amod(floor, concrete)
conj(pier, floor)
punct(way, ,)
cc(way, and)
det(way, a)
compound(way, walk)
punct(way, -)
conj(pier, way)
case(side, along)
det(side, the)
amod(side, upper)
nmod(way, side)
mark(care, in)
fixed(in, order)
mark(care, to)
acl(way, care)
case(traffic, for)
amod(traffic, modern)
obl(care, traffic)
punct(care, .)
case(war, during)
det(war, the)
obl(use, war)
nsubj(use, it)
cop(use, be)
case(use, in)
amod(use, constant)
conj(care, use)
case(train, by)
det(train, the)
compound(train, wagon)
nmod(use, train)
acl(train, transport)
obj(transport, supplies)
case(railhead, from)
det(railhead, the)
obl(transport, railhead)
case(Grafton, at)
nmod(railhead, Grafton)
case(troops, to)
det(troops, the)
obl(transport, troops)
acl(troops, operate)
case(interior, in)
det(interior, the)
obl(operate, interior)
punct(rebuilt, .)
compound(soldier, union)
nsubj(use, soldier)
case(time, at)
nmod(soldier, time)
root(ROOT, use)
obj(use, it)
case(quarter, for)
compound(quarter, sleeping)
obl(use, quarter)
mark(escape, to)
advcl(use, escape)
case(rain, from)
det(rain, the)
obl(escape, rain)
cc(weather, or)
amod(weather, other)
amod(weather, inclement)
conj(rain, weather)
punct(leave, ,)
cc(leave, and)
nsubj(leave, some)
case(they, of)
nmod(some, they)
conj(use, leave)
obj(leave, momentoe)
case(stay, of)
nmod:poss(stay, they)
nmod(momentoe, stay)
mark(carving, by)
advcl(leave, carving)
nmod:poss(name, they)
obj(carving, name)
cc(token, and)
amod(token, small)
conj(name, token)
case(wall, on)
nmod:poss(wall, its)
obl(carving, wall)
cc(beam, and)
conj(wall, beam)
punct(use, .)
cc(threaten, but)
nsubj:pass(threaten, what)
det(element, the)
nsubj(do, element)
aux(do, could)
advmod(do, not)
acl:relcl(what, do)
aux:pass(threaten, be)
advmod(threaten, seriously)
root(ROOT, threaten)
case(William, when)
compound(William, Brigadier)
flat(Brigadier, General)
obl(threaten, William)
flat(William, E.)
punct(Grumble, ()
appos(William, Grumble)
punct(Grumble, ))
nsubj(reach, Jones)
root(ROOT, reach)
obj(reach, Philippi)
mark(raid, while)
case(raid, on)
det(raid, the)
amod(raid, famous)
compound(raid, Jones)
punct(imboden, -)
compound(raid, imboden)
obl(reach, raid)
case(May, in)
nmod(raid, May)
punct(May, ,)
nummod(May, 1863)
punct(reach, .)
compound(Jones, General)
nsubj(fresh, Jones)
cop(fresh, be)
parataxis(reach, fresh)
case(series, from)
det(series, a)
amod(series, long)
obl(fresh, series)
case(burning, of)
compound(burning, bridge)
nmod(series, burning)
punct(series, ,)
case(bridge, include)
det(bridge, the)
amod(bridge, long)
nmod(series, bridge)
case(Fairmont, at)
nmod(bridge, Fairmont)
punct(send, ,)
cc(send, and)
punct(send, ,)
mark(see, after)
advcl(send, see)
det(drive, a)
amod(drive, great)
obj(see, drive)
case(horse, of)
nmod(drive, horse)
cc(cattle, and)
conj(horse, cattle)
nsubj(collect, he)
aux(collect, have)
acl:relcl(horse, collect)
advmod(collect, safely)
case(bridge, across)
det(bridge, the)
obl(collect, bridge)
punct(send, ,)
nsubj(send, he)
conj(reach, send)
nmod:poss(man, he)
obj(send, man)
mark(work, to)
xcomp(send, work)
xcomp(work, piling)
obj(piling, combustible)
compound:prt(piling, in)
cc(it, and)
case(it, around)
conj(piling, it)
punct(reach, .)
nsubj(gather, reverend)
flat(reverend, Joshual)
flat(reverend, corder)
punct(reverend, ,)
det(minister, a)
compound(minister, baptist)
appos(reverend, minister)
punct(gather, ,)
root(ROOT, gather)
det(citizen, a)
amod(citizen, few)
obj(gather, citizen)
case(sympathy, of)
amod(sympathy, southern)
nmod(citizen, sympathy)
punct(call, ,)
mark(call, to)
advcl(gather, call)
case(Jones, on)
obl(call, Jones)
cc(plead, and)
conj(call, plead)
case(he, with)
obl(plead, he)
mark(spare, to)
advcl(plead, spare)
det(structure, the)
obj(spare, structure)
punct(gather, ;)
punct(gather, ;)
nsubj(reason, he)
parataxis(gather, reason)
cc(argue, and)
conj(reason, argue)
punct(argue, ,)
advcl(argue, point)
compound:prt(point, out)
mark(need, that)
nsubj(need, Jones)
cc(commander, or)
amod(commander, other)
compound(commander, confederate)
nsubj(need, commander)
aux(need, would)
ccomp(point, need)
obj(need, it)
aux(pass, should)
nsubj(pass, troops)
ccomp(need, pass)
det(way, that)
obj(pass, way)
case(retreat, in)
obl(pass, retreat)
punct(relent, .)
nsubj(relent, Jones)
parataxis(order, relent)
punct(relent, ,)
nsubj(order, he)
aux(order, do)
advmod(order, not)
parataxis(gather, order)
nmod:poss(man, he)
obj(order, man)
mark(apply, to)
advcl(order, apply)
det(torch, the)
obj(apply, torch)
punct(drive, --)
det(drive, the)
nsubj:pass(drive, drive)
case(livestock, of)
nmod(drive, livestock)
aux:pass(drive, be)
acl:relcl(torch, drive)
case(valley, up)
det(valley, the)
obl(drive, valley)
punct(drive, ,)
case(beverly, via)
nmod(valley, beverly)
punct(mountain, ,)
cc(mountain, and)
case(mountain, across)
det(mountain, the)
obl(feed, mountain)
mark(feed, to)
advcl(drive, feed)
cc(serve, and)
conj(feed, serve)
det(army, the)
compound(army, confederate)
obj(serve, army)
punct(feed, ,)
mark(turn, while)
nsubj(turn, Jones)
cc(raider, and)
nmod:poss(raider, he)
conj(Jones, raider)
advcl(save, turn)
case(Buckhannon, toward)
obl(turn, Buckhannon)
mark(join, to)
advcl(turn, join)
obj(join, force)
case(imboden, with)
obl(join, imboden)
punct(save, .)
advmod(save, again)
nsubj(save, reverend)
flat(reverend, corder)
parataxis(gather, save)
det(bridge, the)
obj(save, bridge)
mark(plan, when)
compound(soldier, union)
nsubj(plan, soldier)
advcl(save, plan)
mark(destroy, to)
xcomp(plan, destroy)
obj(destroy, it)
punct(destroy, ,)
mark(fill, after)
advcl(destroy, fill)
nsubj(lane, it)
cop(lane, be)
nummod(lane, two)
ccomp(fill, lane)
case(hay, with)
nmod(lane, hay)
cc(straw, and)
conj(hay, straw)
punct(lane, --)
cc(record, but)
case(what, for)
det(reason, what)
nsubj:pass(record, reason)
aux:pass(record, be)
advmod(record, not)
conj(lane, record)
cc(remember, nor)
conj(record, remember)
punct(record, ,)
advmod(pressure, certainly)
advmod(pressure, not)
case(pressure, because)
fixed(because, of)
obl(record, pressure)
case(force, from)
det(force, a)
amod(force, oppose)
compound(force, confederate)
nmod(pressure, force)
punct(gather, .)
case(occasion, on)
det(occasion, the)
amod(occasion, second)
obl(take, occasion)
nsubj(take, it)
root(ROOT, take)
obj(take, prayer)
cc(reason, as)
fixed(as, well)
fixed(as, as)
obj(take, reason)
mark(dissuade, to)
acl(reason, dissuade)
det(soldier, the)
obj(dissuade, soldier)
case(purpose, from)
nmod:poss(purpose, they)
obl(dissuade, purpose)
punct(take, .)
advcl(dissuade, Centering)
case(structure, around)
det(structure, this)
amod(structure, historic)
amod(structure, old)
obl(Centering, structure)
punct(organize, ,)
det(group, a)
nsubj(organize, group)
case(citizen, of)
amod(spirite, public)
punct(spirite, -)
amod(citizen, spirite)
compound(County, Barbour)
compound(citizen, County)
nmod(group, citizen)
aux(organize, have)
parataxis(take, organize)
cc(plan, and)
conj(organize, plan)
det(series, a)
obl:npmod(long, week)
punct(long, -)
amod(series, long)
obj(plan, series)
case(event, of)
nmod(series, event)
punct(series, ,)
acl(series, begin)
case(May, on)
obl(begin, May)
nummod(May, 28th)
cc(continue, and)
conj(begin, continue)
case(June, through)
obl(continue, June)
nummod(June, 3rd)
punct(observe, ,)
mark(observe, to)
advcl(continue, observe)
advmod(appropriately, most)
advmod(observe, appropriately)
det(centennial, the)
obj(observe, centennial)
case(engagement, of)
det(engagement, the)
amod(engagement, first)
compound(engagement, land)
nmod(centennial, engagement)
case(War, of)
det(War, the)
compound(War, Civil)
nmod(engagement, War)
case(Philippi, at)
nmod(engagement, Philippi)
punct(take, .)
nsubj(year, it)
cop(year, be)
det(year, a)
amod(year, good)
nummod(year, eight)
root(ROOT, year)
advmod(year, now)
mark(acquire, since)
nsubj(acquire, each)
case(we, of)
nmod(each, we)
advcl(year, acquire)
det(pool, a)
compound(pool, swim)
obj(acquire, pool)
punct(pool, --)
nummod(year, eight)
amod(year, enlightening)
punct(vigorous, ,)
conj(enlightening, vigorous)
punct(rigorous, ,)
conj(enlightening, rigorous)
punct(year, ,)
advmod(unrewarding, not)
advmod(unrewarding, wholly)
amod(year, unrewarding)
appos(pool, year)
punct(year, .)
nsubj(learn, we)
aux(learn, have)
root(ROOT, learn)
det(lot, a)
obj(learn, lot)
punct(lot, --)
det(dash, a)
appos(lot, dash)
case(hydrochemistry, of)
nmod(dash, hydrochemistry)
advmod(dash, here)
punct(bit, ,)
det(bit, a)
conj(dash, bit)
case(plumb, about)
nmod(bit, plumb)
cc(priming, and)
compound(priming, pump)
punct(priming, -)
conj(plumb, priming)
advmod(plumb, there)
punct(learn, .)
nsubj(have, we)
aux(have, have)
root(ROOT, have)
compound(grounding, sound)
obj(have, grounding)
case(principle, in)
det(principle, the)
obl(have, principle)
case(school, of)
det(school, the)
amod(school, mail)
punct(fist, -)
compound(school, fist)
punct(fist, -)
case(glove, in)
punct(glove, -)
compound(glove, velvet)
punct(glove, -)
compound(school, glove)
nmod(principle, school)
case(diplomacy, of)
nmod(school, diplomacy)
punct(have, .)
nsubj(become, we)
aux(become, have)
root(ROOT, become)
amod(expert, amateur)
compound(expert, insurance)
xcomp(become, expert)
cc(bird, and)
amod(feathered, fine)
punct(feathered, -)
amod(bird, feathered)
compound(bird, yard)
conj(expert, bird)
punct(expert, .)
root(ROOT, true)
punct(true, ,)
nmod:poss(problem, we)
nsubj(lessen, problem)
aux(lessen, have)
parataxis(true, lessen)
det(bit, a)
obl:npmod(lessen, bit)
mark(more, as)
advcl(lessen, more)
cc(more, and)
conj(more, more)
case(neighbor, of)
nmod:poss(neighbor, we)
obl(more, neighbor)
aux(build, have)
advcl(lessen, build)
nmod:poss(pool, they)
amod(pool, own)
obj(build, pool)
punct(build, ,)
advmod(build, there)
mark(dilut, by)
advcl(build, dilut)
nmod:poss(attraction, we)
amod(attraction, spectacular)
obj(dilut, attraction)
punct(true, .)
cc(cling, but)
nsubj(cling, problem)
root(ROOT, cling)
case(pool, to)
obl(cling, pool)
punct(cling, ,)
mark(know, as)
det(owner, any)
compound(owner, pool)
nsubj(know, owner)
advcl(cling, know)
punct(cling, .)
advmod(prompt, so)
nmod:poss(generosity, we)
amod(generosity, innate)
nsubj(prompt, generosity)
case(spirit, of)
nmod(generosity, spirit)
root(ROOT, prompt)
obj(prompt, we)
mark(share, to)
xcomp(prompt, share)
nmod:poss(trial, we)
obj(share, trial)
punct(error, ,)
conj(trial, error)
cc(solution, and)
conj(trial, solution)
case(any, with)
nmod(trial, any)
nsubj(take, who)
aux(take, be)
acl:relcl(any, take)
det(plunge, the)
compound(plunge, pool)
obj(take, plunge)
case(time, for)
det(time, the)
amod(time, first)
obl(take, time)
punct(take, --)
case(hope, in)
det(hope, the)
amod(hope, pious)
obl(take, hope)
mark(profit, that)
nsubj(profit, some)
aux(profit, may)
acl(hope, profit)
case(experience, from)
nmod:poss(experience, we)
obl(profit, experience)
punct(prompt, .)
mark(put, where)
mark(put, to)
csubj(everything, put)
obj(put, it)
obj(put, position)
aux(everything, may)
advmod(everything, not)
cop(everything, be)
root(ROOT, everything)
punct(contribute, ,)
cc(contribute, but)
case(case, in)
det(case, the)
obl(contribute, case)
case(pool, of)
det(pool, a)
nmod(case, pool)
nsubj(contribute, it)
aux(contribute, can)
advmod(contribute, certainly)
conj(everything, contribute)
obj(contribute, difficulty)
punct(social, ,)
conj(difficulty, social)
cc(or, and)
punct(or, /)
cc(physical, or)
conj(difficulty, physical)
punct(everything, .)
nsubj(speak, we)
root(ROOT, speak)
case(viewpoint, from)
amod(viewpoint, varying)
obl(speak, viewpoint)
punct(speak, .)
nsubj(have, one)
case(we, of)
nmod(one, we)
root(ROOT, have)
det(pool, a)
obj(have, pool)
acl(pool, set)
case(area, in)
det(area, a)
amod(area, wood)
obl(set, area)
advmod(house, very)
case(house, near)
det(house, the)
obl(set, house)
punct(have, .)
det(other, the)
nsubj(have, other)
root(ROOT, have)
nmod:poss(pool, he)
obj(have, pool)
advmod(away, far)
advmod(have, away)
case(house, from)
det(house, the)
obl(away, house)
case(field, in)
det(field, a)
obl(have, field)
advmod(field, high)
case(hill, on)
det(hill, a)
obl(high, hill)
punct(have, .)
mark(dream, if)
nsubj(dream, you)
aux(dream, be)
advcl(close, dream)
case(pool, of)
det(pool, a)
amod(pool, blue)
punct(pool, ,)
amod(pool, shim)
obl(dream, pool)
advmod(window, right)
case(window, outside)
nmod:poss(window, you)
compound(room, living)
compound(window, room)
nmod(pool, window)
punct(close, ,)
root(ROOT, close)
nmod:poss(eye, you)
obj(close, eye)
advmod(close, firmly)
cc(fill, and)
conj(close, fill)
compound:prt(fill, in)
det(picture, the)
obj(fill, picture)
case(lot, with)
obl(fill, lot)
cc(lot, and)
conj(lot, lot)
case(child, of)
nmod(lot, child)
punct(towel, ,)
amod(towel, damp)
conj(child, towel)
punct(tube, ,)
amod(tube, squash)
conj(lot, tube)
case(oil, of)
compound(oil, suntan)
nmod(tube, oil)
cc(toy, and)
obl:npmod(-inflate, semi)
amod(toy, -inflate)
amod(toy, plastic)
conj(oil, toy)
punct(close, .)
nsubj(likely, you)
cop(likely, be)
root(ROOT, likely)
mark(nearer, to)
cop(nearer, be)
xcomp(likely, nearer)
det(truth, the)
obj(nearer, truth)
punct(likely, .)
nsubj(see, you)
aux(see, can)
advmod(see, also)
root(ROOT, see)
mark(greater, that)
det(proximity, the)
amod(proximity, greater)
det(proximity, the)
ccomp(see, proximity)
case(pool, of)
det(pool, the)
nmod(proximity, pool)
case(quarter, to)
nmod:poss(quarter, you)
amod(quarter, main)
compound(quarter, living)
nmod(pool, quarter)
punct(greater, ,)
mark(greater, the)
ccomp(see, greater)
det(chance, the)
nsubj(greater, chance)
case(violation, for)
nmod(chance, violation)
case(privacy, of)
compound(privacy, family)
nmod(violation, privacy)
punct(noise, ,)
amod(noise, annoying)
conj(privacy, noise)
cc(make, and)
det(let, the)
nsubj(make, let)
case(let, 's)
punct(make, -)
amod(noise, make)
punct(make, -)
nmod:poss(house, you)
punct(house, -)
compound(attitude, house)
punct(attitude, -)
nmod:poss(club, we)
punct(club, -)
compound(attitude, club)
obj(make, attitude)
punct(see, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(lead, hand)
punct(lead, ,)
case(sight, out)
punct(out, -)
case(sight, of)
punct(sight, -)
nsubj(lead, sight)
aux(lead, do)
advmod(lead, not)
root(ROOT, lead)
case(mind, to)
case(mind, out)
punct(out, -)
case(mind, of)
punct(mind, -)
obl(lead, mind)
mark(observe, when)
nsubj:pass(observe, child)
aux(observe, can)
advmod(observe, not)
aux:pass(observe, be)
advmod(observe, easily)
advcl(lead, observe)
cc(have, and)
nsubj(have, you)
conj(observe, have)
mark(make, to)
xcomp(have, make)
det(trek, a)
amod(trek, long)
obj(make, trek)
mark(reach, to)
advcl(make, reach)
det(pool, the)
obj(reach, pool)
punct(lead, .)
det(dilemma, another)
root(ROOT, dilemma)
punct(dilemma, :)
advmod(picturesque, as)
advmod(offer, picturesque)
mark(be, as)
det(pond, a)
compound(pond, sylvan)
nsubj(be, pond)
case(forest, in)
det(forest, the)
nmod(pond, forest)
aux(be, may)
advcl(offer, be)
punct(offer, ,)
nsubj(offer, tree)
root(ROOT, offer)
det(leaf, a)
obj(offer, leaf)
cc(hazard, and)
compound(hazard, root)
conj(leaf, hazard)
case(being, to)
det(being, the)
amod(being, well)
punct(being, -)
obl(offer, being)
case(pool, of)
det(pool, a)
nmod(being, pool)
punct(offer, .)
cc(turn, yet)
det(approach, a)
amod(approach, grassy)
nsubj(turn, approach)
aux(turn, can)
root(ROOT, turn)
det(pool, a)
obj(turn, pool)
case(lawn, into)
det(lawn, a)
amod(lawn, float)
obl(turn, lawn)
det(time, every)
obl:tmod(turn, time)
det(grass, the)
nsubj:pass(mowe, grass)
aux:pass(mowe, be)
acl:relcl(time, mowe)
punct(turn, .)
mark(choose, as)
mark(choose, in)
advcl(sensible, choose)
det(wife, a)
obj(choose, wife)
punct(sensible, ,)
expl(sensible, it)
cop(sensible, be)
advmod(sensible, only)
root(ROOT, sensible)
mark(consider, to)
csubj(sensible, consider)
advmod(appeal, also)
advmod(appeal, how)
ccomp(consider, appeal)
det(pool, a)
nsubj(likely, pool)
cop(likely, be)
ccomp(consider, likely)
mark(weather, to)
cop(weather, be)
case(weather, in)
amod(weather, bad)
xcomp(likely, weather)
cc(good, as)
fixed(as, well)
fixed(as, as)
case(good, in)
conj(weather, good)
punct(sensible, .)
case(clime, in)
det(clime, the)
amod(clime, colder)
obl(have, clime)
punct(have, ,)
case(instance, for)
obl(have, instance)
punct(have, ,)
nsubj(have, you)
aux(have, will)
root(ROOT, have)
mark(live, to)
xcomp(have, live)
case(month, through)
det(month, the)
amod(month, many)
amod(month, unglamorous)
compound(month, winter)
obl(live, month)
mark(look, when)
nmod:poss(pool, you)
nsubj(look, pool)
aux(look, will)
advmod(look, hardly)
advcl(live, look)
nmod:poss(best, its)
obj(look, best)
punct(have, .)
nsubj(hole, it)
aux(hole, may)
cop(hole, be)
det(hole, a)
amod(hole, big)
root(ROOT, hole)
case(ground, in)
det(ground, the)
nmod(hole, ground)
acl(ground, fill)
case(hay, with)
compound(hay, salt)
obl(fill, hay)
punct(floe, ,)
cc(floe, or)
det(floe, a)
compound(floe, ice)
conj(hay, floe)
acl(floe, studd)
case(log, with)
obl(studd, log)
punct(hole, .)
advmod(plunge, even)
det(plunge, a)
amod(plunge, neat)
punct(plunge, ,)
amod(cover, plastic)
punct(cover, -)
amod(plunge, cover)
nsubj(joy, plunge)
cop(joy, be)
advmod(joy, not)
advmod(joy, exactly)
det(joy, a)
root(ROOT, joy)
case(behold, to)
discourse(joy, behold)
punct(joy, . )
punct(recommend, ()
nsubj(do, we)
parataxis(recommend, do)
punct(recommend, ,)
advmod(recommend, however)
punct(recommend, ,)
root(ROOT, recommend)
det(cover, those)
amod(cover, patented)
obj(recommend, cover)
mark(prevent, to)
acl(cover, prevent)
cc:preconj(people, both)
obj(prevent, people)
cc(junk, and)
conj(people, junk)
punct(people, --)
appos(people, flora)
cc(fauna, and)
conj(flora, fauna)
advmod(prevent, generally)
punct(prevent, --)
mark(winter, from)
advmod(winter, accidentally)
advcl(prevent, winter)
case(pool, in)
det(pool, the)
obl(winter, pool)
punct(recommend, .)
punct(recommend, ))
advmod(perfect, probably)
det(location, no)
nsubj(perfect, location)
case(pool, for)
det(pool, a)
nmod(location, pool)
cop(perfect, be)
root(ROOT, perfect)
case(count, on)
det(count, all)
obl(perfect, count)
punct(perfect, .)
advmod(dictate, naturally)
nsubj:pass(dictate, it)
aux(dictate, will)
aux:pass(dictate, be)
root(ROOT, dictate)
case(extent, to)
det(extent, a)
amod(extent, large)
obl(dictate, extent)
case(shape, by)
det(shape, the)
nmod(extent, shape)
cc(size, and)
conj(shape, size)
case(land, of)
nmod:poss(land, you)
nmod(size, land)
punct(dictate, .)
cc(restful, but)
mark(problem, if)
nsubj(problem, space)
cc(money, and)
conj(space, money)
cop(problem, be)
det(problem, no)
advcl(restful, problem)
cc(hand, and)
amod(child, small)
nsubj(hand, child)
cop(hand, be)
advmod(hand, not)
case(hand, on)
conj(problem, hand)
det(day, every)
obl:tmod(hand, day)
punct(restful, ,)
nsubj(restful, it)
cop(restful, be)
advmod(restful, certainly)
advmod(restful, more)
root(ROOT, restful)
mark(have, to)
csubj(restful, have)
nmod:poss(pool, you)
obj(have, pool)
cc(area, and)
compound(area, entertainment)
conj(pool, area)
acl(pool, remove)
case(environ, from)
det(environ, the)
amod(environ, immediate)
obl(remove, environ)
case(house, of)
det(house, the)
nmod(environ, house)
punct(restful, .)
cc(greensward, and)
det(foot, a)
amod(foot, good)
amod(foot, several)
nsubj(greensward, foot)
case(pool, around)
det(pool, the)
nmod(foot, pool)
aux(greensward, should)
cop(greensward, be)
advmod(greensward, neither)
root(ROOT, greensward)
cc(wood, nor)
conj(greensward, wood)
punct(pavement, ,)
cc(pavement, but)
amod(pavement, good)
amod(pavement, hard)
conj(greensward, pavement)
punct(greensward, .)
det(placement, the)
nsubj(of, placement)
case(pool, of)
nmod:poss(pool, you)
nmod(placement, pool)
punct(of, ,)
advmod(of, however)
punct(of, ,)
aux(of, will)
advmod(of, not)
root(ROOT, of)
obj(of, itself)
xcomp(of, solve)
det(problem, the)
nummod(problem, two)
amod(problem, major)
obj(solve, problem)
case(own, of)
compound(own, pool)
nmod(problem, own)
punct(problem, --)
appos(problem, those)
nsubj(involve, that)
acl:relcl(those, involve)
nmod:poss(life, you)
amod(life, social)
obj(involve, life)
cc(those, and)
conj(life, those)
acl(those, pertain)
case(safety, to)
obl(pertain, safety)
punct(of, .)
csubj(demand, cope)
case(they, with)
obl(cope, they)
root(ROOT, demand)
compound(discipline, stern)
obj(demand, discipline)
punct(discipline, --)
case(yourself, of)
nmod(discipline, yourself)
cc(family, as)
fixed(as, well)
fixed(as, as)
fixed(as, of)
nmod:poss(family, you)
conj(discipline, family)
punct(neighbor, ,)
conj(family, neighbor)
punct(friend, ,)
conj(family, friend)
cc(anyone, and)
conj(family, anyone)
nsubj(talk, you)
advmod(talk, ever)
acl:relcl(anyone, talk)
obl(talk, to)
case(jet, on)
det(jet, a)
amod(jet, transoceanic)
obl(talk, jet)
punct(demand, .)
nummod(year, Eight)
obl:npmod(ago, year)
advmod(solace, ago)
mark(go, while)
nsubj(go, we)
aux(go, be)
advcl(solace, go)
case(period, through)
det(period, the)
amod(tear, mud-sweat)
punct(tear, -)
cc(tear, and)
punct(tear, -)
compound(period, tear)
compound(period, construction)
obl(go, period)
punct(solace, ,)
nsubj:pass(solace, we)
aux:pass(solace, be)
advmod(solace, each)
root(ROOT, solace)
case(vision, by)
det(vision, the)
obl(solace, vision)
case(dip, of)
amod(dip, early)
compound(dip, morning)
nmod(vision, dip)
cc(coming, and)
compound(coming, evening)
compound(coming, home)
punct(coming, -)
conj(dip, coming)
case(family, to)
det(family, a)
amod(family, cool)
nmod(coming, family)
acl(family, collect)
case(pool, around)
det(pool, the)
obl(collect, pool)
case(table, with)
det(table, a)
compound(table, buffet)
nmod(pool, table)
acl(table, lay)
compound:prt(lay, out)
advmod(lay, nearby)
case(delectation, for)
det(lord, the)
nmod:poss(delectation, lord)
cc(master, and)
conj(lord, master)
case(master, 's)
obl(lay, delectation)
punct(solace, .)
cc(come, but)
advmod(even, not)
advmod(gathering, even)
nmod:poss(gathering, we)
amod(gathering, first)
compound(side, pool)
punct(side, -)
compound(gathering, side)
nsubj(come, gathering)
root(ROOT, come)
advmod(come, anywhere)
case(fantasy, near)
det(fantasy, those)
amod(fantasy, rosy)
obl(come, fantasy)
punct(come, .)
nsubj(seem, we)
root(ROOT, seem)
mark(witness, to)
aux(witness, be)
xcomp(seem, witness)
det(explosion, the)
compound(explosion, population)
obj(witness, explosion)
advmod(backyard, right)
case(backyard, in)
nmod:poss(backyard, we)
amod(backyard, own)
obl(witness, backyard)
punct(seem, .)
nmod:poss(family, we)
amod(family, respective)
nsubj(look, family)
root(ROOT, look)
mark(quadruple, as)
mark(quadruple, if)
nsubj(quadruple, they)
aux(quadruple, have)
advcl(look, quadruple)
punct(look, .)
aux(take, have)
nsubj(take, we)
root(ROOT, take)
det(lien, a)
obj(take, lien)
case(park, on)
det(park, a)
compound(park, state)
obl(take, park)
punct(take, ?)
punct(take, ?)
root(ROOT, not)
case(all, at)
obl(not, all)
punct(not, .)
nsubj:pass(discover, we)
aux(discover, have)
advmod(discover, merely)
aux:pass(discover, be)
root(ROOT, discover)
case(shark, by)
det(shark, the)
compound(shark, pool)
obl(discover, shark)
punct(discover, .)
nsubj(business, we)
cop(business, be)
case(business, in)
root(ROOT, business)
punct(business, !)
punct(business, !)
case(owner, from)
amod(owner, proud)
compound(owner, pool)
punct(owner, -)
obl(step, owner)
case(host, to)
amod(host, perpetual)
nmod(owner, host)
cc(handymen, and)
conj(host, handymen)
cop(step, be)
det(step, a)
amod(step, short)
root(ROOT, step)
punct(step, --)
advmod(more, no)
amod(step, more)
case(change, than)
det(change, the)
obl(more, change)
case(clothes, from)
compound(clothes, city)
nmod(change, clothes)
case(trunk, to)
nmod(clothes, trunk)
punct(step, .)
root(ROOT, Naive)
case(we, of)
obl(Naive, we)
punct(Naive, ,)
advmod(unexpected, maybe)
punct(unexpected, ,)
cc(unexpected, but)
det(result, the)
nsubj(unexpected, result)
case(invitation, of)
nmod:poss(invitation, we)
amod(invitation, impulsive)
nmod(result, invitation)
mark(come, to)
punct(come, ``)
acl(result, come)
advmod(come, over)
amod(summer, next)
obl:tmod(come, summer)
cc(swim, and)
conj(come, swim)
case(pool, in)
nmod:poss(pool, we)
amod(pool, new)
obl(swim, pool)
punct(unexpected, '')
cop(unexpected, be)
advmod(unexpected, both)
conj(Naive, unexpected)
cc(unsettling, and)
conj(unexpected, unsettling)
punct(unexpected, .)
nmod:poss(book, we)
nsubj(obvious, book)
case(etiquette, of)
nmod(book, etiquette)
case(week, after)
det(week, the)
amod(week, first)
amod(week, few)
nmod(book, week)
punct(obvious, ,)
expl(obvious, it)
cop(obvious, be)
root(ROOT, obvious)
mark(have, that)
nsubj(have, rule)
ccomp(obvious, have)
mark(make, to)
aux:pass(make, be)
xcomp(have, make)
punct(lay, ,)
conj(make, lay)
compound:prt(lay, down)
cc(obey, and)
conj(lay, obey)
punct(make, --)
advmod(become, even)
mark(become, if)
nmod:poss(ratings, we)
compound(ratings, popularity)
nsubj(become, ratings)
advcl(have, become)
xcomp(become, subnormal)
case(result, as)
det(result, a)
obl(subnormal, result)
punct(obvious, .)
advmod(rule, so)
root(ROOT, rule)
nsubj(make, we)
acl:relcl(rule, make)
punct(make, ,)
case(collusion, in)
amod(collusion, unabash)
obl(make, collusion)
punct(rule, .)
mark(coincide, since)
nmod:poss(viewpoint, we)
nsubj(coincide, viewpoint)
case(respect, in)
det(respect, this)
nmod(viewpoint, respect)
advcl(present, coincide)
advmod(coincide, precisely)
punct(present, ,)
nsubj(present, we)
root(ROOT, present)
det(fruit, the)
obj(present, fruit)
case(effort, of)
nmod:poss(effort, we)
nmod(fruit, effort)
advmod(effort, herewith)
case(code, as)
det(code, a)
amod(code, single)
amod(code, social)
obl(present, code)
case(owner, for)
compound(owner, pool)
nmod(code, owner)
punct(present, .)
root(ROOT, first)
cc(foremost, and)
conj(first, foremost)
punct(first, :)
det(one, no)
parataxis(first, one)
punct(one, --)
discourse(allow, no)
punct(anyone, ,)
advmod(anyone, not)
conj(one, anyone)
punct(allow, --)
case(family, in)
det(family, the)
obl(allow, family)
aux:pass(allow, be)
parataxis(one, allow)
mark(issue, to)
xcomp(allow, issue)
compound(invitation, blanket)
obj(issue, invitation)
case(circle, to)
nmod:poss(circle, he)
cc(she, or)
conj(he, she)
amod(circle, own)
obl(issue, circle)
punct(one, .)
advmod(short, just)
advcl(manage, short)
case(lash, of)
nummod(lash, forty)
obl(short, lash)
nsubj(manage, we)
advmod(manage, finally)
root(ROOT, manage)
mark(coerce, to)
xcomp(manage, coerce)
nmod:poss(child, we)
obj(coerce, child)
case(view, to)
det(view, this)
obl(coerce, view)
punct(manage, .)
nmod:poss(friend, they)
nsubj(welcome, friend)
cc(ours, and)
conj(friend, ours)
cop(welcome, be)
parataxis(manage, welcome)
mark(share, to)
advcl(welcome, share)
det(pool, the)
obj(share, pool)
punct(term, ,)
cc(term, but)
case(term, on)
nmod:poss(term, we)
conj(pool, term)
cc(time, and)
case(time, at)
nmod:poss(time, we)
conj(term, time)
punct(manage, .)
det(friend, no)
nsubj(be, friend)
root(ROOT, be)
mark(arrive, to)
ccomp(be, arrive)
case(invitation, without)
det(invitation, a)
obl(arrive, invitation)
cc(telephoning, or)
mark(telephoning, without)
advmod(telephoning, at)
advmod(telephoning, least)
conj(arrive, telephoning)
advmod(telephoning, beforehand)
punct(be, .)
det(ringer, no)
root(ROOT, ringer)
punct(ringer, ,)
cc:preconj(ringer, either)
punct(ringer, --)
advmod(trailing, even)
mark(trailing, if)
nsubj(trailing, they)
aux(trailing, be)
advcl(ringer, trailing)
amod(invitee, legitimate)
obj(trailing, invitee)
punct(ringer, .)
nsubj(want, we)
root(ROOT, want)
mark(know, to)
xcomp(want, know)
mark(telephone, when)
det(Potlatches, the)
nsubj(telephone, Potlatches)
advcl(know, telephone)
advmod(many, exactly)
advmod(many, how)
advmod(plan, many)
nsubj(plan, they)
aux(plan, be)
ccomp(telephone, plan)
mark(bring, to)
xcomp(plan, bring)
punct(plan, ,)
mark(end, so)
fixed(so, that)
nsubj(end, we)
aux(end, will)
advmod(end, not)
advcl(plan, end)
compound:prt(end, up)
case(mob, with)
det(mob, a)
compound(mob, splash)
obl(end, mob)
nsubj(look, that)
acl:relcl(mob, look)
case(Island, like)
compound(Island, coney)
obl(look, Island)
case(August, in)
obl(look, August)
punct(come, .)
det(child, no)
amod(child, young)
nsubj(come, child)
aux(come, may)
parataxis(want, come)
case(adult, without)
obl(come, adult)
case(party, except)
case(party, for)
det(party, a)
amod(party, specific)
punct(organized, ,)
amod(party, organized)
punct(party, ,)
amod(party, chaperone)
obl(come, party)
punct(want, .)
cc(urge, and)
amod(adult, accompany)
nsubj:pass(urge, adult)
aux:pass(urge, be)
root(ROOT, urge)
mark(keep, to)
xcomp(urge, keep)
det(alert, a)
obj(keep, alert)
cc(eye, and)
amod(eye, sensible)
conj(alert, eye)
case(responsibility, on)
nmod:poss(responsibility, they)
obl(keep, responsibility)
punct(urge, . )
det(gaggle, a)
nsubj(safeguard, gaggle)
case(mother, of)
amod(mother, gabbling)
nmod(gaggle, mother)
punct(back, ,)
conj(mother, back)
case(pool, to)
det(pool, the)
nmod(back, pool)
punct(safeguard, ,)
cop(safeguard, be)
det(safeguard, no)
root(ROOT, safeguard)
punct(safeguard, .)
det(pool, no)
compound(pool, bottle)
nsubj:pass(tolerate, pool)
aux:pass(tolerate, be)
root(ROOT, tolerate)
punct(tolerate, --)
compound(pool, bottle)
nsubj(lingo, pool)
cop(lingo, be)
nmod:poss(lingo, we)
advcl(tolerate, lingo)
case(those, for)
nmod(lingo, those)
nsubj(come, who)
acl:relcl(those, come)
mark(swim, to)
xcomp(come, swim)
cc(sink, and)
conj(swim, sink)
case(bar, into)
nmod:poss(bar, we)
obl(sink, bar)
mark(protest, while)
advcl(sink, protest)
mark(dunk, that)
nsubj(dunk, they)
aux(dunk, can)
advmod(dunk, only)
ccomp(protest, dunk)
cc(run, and)
conj(dunk, run)
punct(tolerate, . )
punct(take, ()
nsubj(take, sanity)
punct(solvency, ,)
conj(sanity, solvency)
cc(relation, and)
conj(sanity, relation)
case(merchant, with)
nmod:poss(merchant, we)
compound(merchant, wine)
nmod(sanity, merchant)
root(ROOT, take)
det(beating, a)
obj(take, beating)
det(summer, that)
amod(summer, first)
obl:tmod(take, summer)
mark(become, as)
nsubj(become, we)
advmod(become, inadvertently)
advcl(take, become)
det(stop, the)
compound(stop, neighborhood)
amod(drink, free)
punct(drink, -)
compound(stop, drink)
xcomp(become, stop)
punct(take, .)
punct(take, ))
nsubj(designate, we)
root(ROOT, designate)
nummod(day, one)
obl:tmod(designate, day)
det(week, a)
obl:tmod(designate, week)
case(time, as)
det(time, the)
obl(designate, time)
mark(swim, when)
compound(ager, neighborhood)
compound(ager, teen)
punct(ager, -)
nsubj(swim, ager)
aux(swim, might)
advcl(designate, swim)
case(hour, at)
amod(hour, definite)
obl(swim, hour)
punct(designate, .)
nsubj(save, this)
aux(save, have)
root(ROOT, save)
obj(save, we)
case(request, from)
amod(request, constant)
obl(save, request)
nummod(day, seven)
obl:tmod(save, day)
det(week, a)
obl:tmod(save, week)
cc(make, and)
conj(save, make)
obj(make, we)
xcomp(make, feel)
advmod(brutal, less)
xcomp(feel, brutal)
case(young, to)
det(young, the)
amod(fortunate, young)
punct(fortunate, ``)
advmod(fortunate, less)
obl(brutal, fortunate)
punct(fortunate, '')
case(ours, than)
obl(fortunate, ours)
punct(save, .)
nsubj(work, we)
advmod(work, also)
root(ROOT, work)
compound:prt(work, out)
obj(work, logistic)
case(swimmer, for)
compound(afternoon, Sunday)
compound(swimmer, afternoon)
nmod(logistic, swimmer)
nsubj(arrive, who)
acl:relcl(swimmer, arrive)
nummod(hour, two)
obl:npmod(early, hour)
advmod(arrive, early)
case(guest, with)
nmod:poss(guest, they)
compound(guest, weekend)
obl(arrive, guest)
mark(enjoy, while)
nsubj(enjoy, we)
aux(enjoy, be)
advmod(enjoy, still)
advcl(arrive, enjoy)
det(lunch, a)
compound(lunch, alfresco)
obj(enjoy, lunch)
case(famille, en)
obl(enjoy, famille)
punct(work, .)
nsubj(usher, we)
advmod(usher, gently)
root(ROOT, usher)
obj(usher, they)
case(island, to)
det(island, a)
obl(usher, island)
case(table, of)
nmod(island, table)
cc(chair, and)
conj(table, chair)
advmod(place, strategically)
acl(island, place)
case(side, on)
det(side, the)
amod(side, far)
obl(place, side)
case(pool, of)
det(pool, the)
nmod(side, pool)
advmod(amuse, where)
nsubj(amuse, they)
aux(amuse, can)
acl:relcl(pool, amuse)
det(other, each)
obj(amuse, other)
mark(ready, until)
nsubj(ready, we)
cop(ready, get)
advcl(amuse, ready)
mark(merge, to)
xcomp(ready, merge)
obj(merge, side)
punct(usher, .)
det(dress, all)
nsubj:pass(do, dress)
punct(undressing, ()
acl(dress, undressing)
mark(exact, to)
cop(exact, be)
advmod(exact, more)
xcomp(undressing, exact)
punct(undressing, ))
aux(do, must)
aux:pass(do, be)
root(ROOT, do)
case(house, in)
nmod:poss(house, we)
amod(house, small)
compound(house, bath)
obl(do, house)
cc(home, or)
case(home, at)
det(swimmer, the)
nmod:poss(home, swimmer)
case(swimmer, 's)
conj(house, home)
punct(do, . )
root(ROOT, ()
mark(avoid, to)
advcl(idea, avoid)
det(excuse, any)
amod(excuse, possible)
obj(avoid, excuse)
case(parade, for)
det(parade, a)
compound(parade, drip)
nmod(excuse, parade)
case(house, through)
nmod:poss(house, you)
nmod(parade, house)
punct(idea, ,)
nsubj(idea, it)
cop(idea, be)
det(idea, a)
amod(idea, good)
root(ROOT, idea)
mark(have, to)
csubj(idea, have)
det(extension, a)
compound(extension, telephone)
obj(have, extension)
case(pool, near)
det(pool, the)
nmod(extension, pool)
cc(route, as)
fixed(as, well)
fixed(as, as)
det(route, a)
amod(route, direct)
amod(route, outdoor)
conj(extension, route)
case(pool, between)
det(pool, the)
nmod(route, pool)
punct(area, ,)
cc(area, and)
det(area, the)
compound(area, parking)
conj(pool, area)
punct(idea, .)
punct(idea, ))
nsubj(do, we)
advcl(provide, do)
punct(provide, ,)
advmod(provide, however)
punct(provide, ,)
root(ROOT, provide)
det(number, a)
amod(number, limit)
obj(provide, number)
case(suit, of)
amod(suit, extra)
nmod(number, suit)
punct(suit, ,)
advmod(child, mainly)
case(child, for)
obl(provide, child)
punct(stock, ,)
cc(stock, and)
nsubj(stock, we)
conj(provide, stock)
amod(towel, extra)
obj(stock, towel)
cc(convenience, and)
det(convenience, a)
amod(convenience, few)
amod(convenience, inexpensive)
compound(convenience, bathing)
conj(towel, convenience)
punct(provide, .)
compound(preserver, life)
punct(preserver, -)
nsubj:pass(hold, preserver)
punct(preserver, ,)
det(kind, the)
appos(preserver, buckle)
punct(buckle, -)
case(kind, on)
obl:npmod(fill, kapok)
punct(fill, -)
amod(kind, fill)
appos(preserver, kind)
punct(hold, ,)
aux:pass(hold, be)
root(ROOT, hold)
case(readiness, in)
obl(hold, readiness)
punct(hold, ,)
advmod(hold, too)
punct(hold, ,)
case(young, for)
det(young, the)
advmod(young, very)
obl(hold, young)
punct(hold, .)
csubj(important, preserve)
compound(rule, life)
cc(Safety, and)
compound(Safety, limb)
compound(rule, Safety)
obj(preserve, rule)
punct(important, ,)
advmod(important, of)
fixed(of, course)
punct(important, ,)
cop(important, be)
advmod(important, more)
root(ROOT, important)
mark(put, than)
det:predet(other, all)
det(other, the)
nsubj(put, other)
advcl(important, put)
advmod(put, together)
punct(important, .)
case(locality, in)
amod(locality, many)
obl(require, locality)
punct(require, ,)
advmod(require, now)
punct(require, ,)
det(law, the)
nsubj(require, law)
root(ROOT, require)
det(pool, all)
obj(require, pool)
mark(fence, to)
aux:pass(fence, be)
acl(pool, fence)
punct(require, ,)
advmod(height, usually)
case(height, to)
det(height, a)
amod(height, minimum)
obl(fence, height)
case(foot, of)
nummod(foot, 5)
nmod(height, foot)
punct(require, .)
cc(place, but)
advcl(place, fence)
cc(unfenced, or)
conj(fence, unfenced)
punct(place, ,)
det(side, no)
compound(side, pool)
punct(side, -)
nsubj(place, side)
cop(place, be)
det(place, the)
root(ROOT, place)
case(running, for)
nmod(place, running)
cc(horseplay, or)
conj(running, horseplay)
punct(place, .)
nsubj(allow, we)
root(ROOT, allow)
det(contest, no)
amod(contest, underwater)
compound(contest, endurance)
obj(allow, contest)
punct(contest, ,)
det(version, either)
punct(version, ,)
cc(version, or)
amod(version, inexpert)
conj(contest, version)
case(polo, of)
compound(polo, water)
nmod(version, polo)
punct(have, .)
compound(board, dive)
nsubj(have, board)
aux(have, must)
parataxis(allow, have)
amod(surface, non-skid)
obj(have, surface)
punct(take, ()
compound(matting, coco)
nsubj(take, matting)
parataxis(have, take)
det(beating, a)
amod(beating, awful)
obj(take, beating)
case(chlorine, from)
nmod(beating, chlorine)
cc(rot, and)
conj(chlorine, rot)
advmod(take, quickly)
punct(excellent, ,)
cc(excellent, but)
amod(paint, grit-impregnate)
nsubj(excellent, paint)
cop(excellent, be)
conj(take, excellent)
punct(excellent, ))
punct(allow, .)
cc(enjoin, and)
nsubj:pass(enjoin, diver)
aux(enjoin, must)
aux:pass(enjoin, be)
root(ROOT, enjoin)
mark(look, to)
xcomp(enjoin, look)
mark(leap, before)
nsubj(leap, they)
advcl(look, leap)
punct(leap, ,)
cc:preconj(top, either)
case(top, on)
obl(leap, top)
case(someone, of)
nmod(top, someone)
amod(someone, else)
cc(edge, or)
case(edge, onto)
det(edge, a)
compound(edge, pool)
conj(someone, edge)
punct(enjoin, .)
nmod:poss(pool, we)
nsubj(have, pool)
advmod(have, also)
root(ROOT, have)
amod(step, wide)
punct(step, ,)
amod(step, shallow)
obj(have, step)
punct(have, --)
case(benefit, for)
det(benefit, the)
obl(have, benefit)
case(swimmer, of)
det(swimmer, the)
amod(swimmer, littlest)
nmod(benefit, swimmer)
nsubj:pass(introduce, who)
aux(introduce, can)
advmod(introduce, thus)
aux:pass(introduce, be)
acl:relcl(swimmer, introduce)
case(water, to)
det(water, the)
obl(introduce, water)
case(safety, with)
advmod(greater, far)
amod(safety, greater)
obl(introduce, safety)
mark(afford, than)
det(ladder, a)
nsubj(afford, ladder)
acl(safety, afford)
punct(have, .)
det(bottle, all)
nsubj:pass(keep, bottle)
aux(keep, must)
aux:pass(keep, be)
root(ROOT, keep)
det(distance, a)
amod(distance, safe)
obj(keep, distance)
advmod(keep, away)
case(pool, from)
det(pool, the)
obl(away, pool)
cc(ban, and)
compound(glass, drinking)
nsubj:pass(ban, glass)
aux:pass(ban, be)
conj(keep, ban)
case(favor, in)
obl(ban, favor)
case(cup, of)
amod(cup, plastic)
cc(metal, or)
conj(plastic, metal)
nmod(favor, cup)
punct(keep, .)
mark(acquire, when)
nsubj(acquire, you)
advmod(acquire, first)
advcl(recommend, acquire)
det(pool, a)
obj(acquire, pool)
punct(recommend, ,)
nsubj(recommend, we)
advmod(recommend, earnestly)
root(ROOT, recommend)
punct(recommend, --)
case(health, for)
nmod:poss(health, you)
amod(health, own)
amod(health, mental)
obl(recommend, health)
punct(health, --)
det(chat, a)
amod(chat, good)
amod(chat, long)
appos(health, chat)
case(agent, with)
nmod:poss(agent, you)
compound(agent, insurance)
nmod(chat, agent)
punct(recommend, .)
nsubj:pass(prepare, you)
aux(prepare, should)
aux:pass(prepare, be)
root(ROOT, prepare)
mark(cope, to)
xcomp(prepare, cope)
case(pitfall, with)
det(pitfall, any)
obl(cope, pitfall)
mark(plunge, such)
fixed(such, as)
acl(pitfall, plunge)
case(pool, into)
amod(pool, empty)
obl(plunge, pool)
cc(end, or)
amod(end, shallow)
conj(pool, end)
cc(manner, and)
det(manner, all)
conj(pool, manner)
case(winter, of)
nmod(manner, winter)
cc(lawsuit, as)
fixed(as, well)
fixed(as, as)
compound(lawsuit, summer)
conj(pool, lawsuit)
punct(prepare, .)
compound(pool, Soignee)
nsubj(happen, pool)
punct(happen, ,)
discourse(happen, alas)
punct(happen, ,)
aux(happen, do)
advmod(happen, not)
advmod(happen, just)
root(ROOT, happen)
punct(happen, .)
nsubj(result, they)
cop(result, be)
det(result, the)
root(ROOT, result)
case(contest, of)
det(contest, a)
amod(contest, constant)
cc(careful, and)
conj(constant, careful)
nmod(result, contest)
case(element, with)
det(element, the)
nmod(contest, element)
punct(result, .)
mark(want, unless)
nsubj(want, you)
advcl(care, want)
mark(make, to)
xcomp(want, make)
nmod:poss(wife, you)
obj(make, wife)
det(widow, a)
compound(widow, pool)
obj(make, widow)
cc(spend, and)
mark(spend, to)
conj(make, spend)
det(many, a)
amod(many, great)
obj(spend, many)
case(hour, of)
nmod:poss(hour, you)
compound(hour, leisure)
nmod(many, hour)
advcl(spend, nursing)
nmod:poss(pool, you)
nmod:poss(purity, pool)
case(pool, 's)
amod(purity, pristine)
obj(nursing, purity)
punct(care, ,)
nsubj(care, it)
cop(care, be)
root(ROOT, care)
cc(feeding, and)
conj(care, feeding)
punct(care, --)
case(content, from)
compound(content, ph)
obl(care, content)
case(filter, to)
nmod(content, filter)
cc(vacuume, and)
conj(filter, vacuume)
punct(leave, --)
aux:pass(leave, be)
advmod(leave, best)
parataxis(care, leave)
case(service, to)
det(service, a)
amod(service, weekly)
cc(bi-monthly, or)
conj(weekly, bi-monthly)
amod(service, professional)
obl(leave, service)
punct(leave, .)
advmod(add, of)
fixed(of, course)
punct(add, ,)
mark(close, if)
nmod:poss(pool, you)
nsubj(close, pool)
cop(close, be)
advcl(add, close)
case(house, to)
det(house, the)
obl(close, house)
punct(add, ,)
nmod:poss(wife, you)
nsubj(add, wife)
aux(add, can)
advmod(add, always)
root(ROOT, add)
obj(add, it)
case(chore, to)
nmod:poss(chore, she)
compound(chore, housekeeping)
obl(add, chore)
punct(hope, ()
nsubj(hope, you)
parataxis(add, hope)
punct(hope, ))
punct(add, .)
cc(make, or)
nsubj(make, you)
aux(make, can)
root(ROOT, make)
obj(make, pool)
xcomp(make, care)
det(price, the)
obj(care, price)
case(swim, of)
nmod(price, swim)
case(ager, for)
amod(ager, teen-)
obl(care, ager)
punct(make, .)
advmod(so, even)
advmod(have, so)
punct(have, ,)
det(owner, every)
compound(owner, pool)
nsubj(have, owner)
punct(have, ,)
case(emergency, in)
fixed(in, case)
case(emergency, of)
obl(have, emergency)
punct(have, ,)
aux(have, should)
root(ROOT, have)
det(idea, some)
obj(have, idea)
case(what, of)
nmod(idea, what)
acl:relcl(what, make)
obj(make, thing)
xcomp(make, work)
punct(have, . )
det(course, a)
amod(course, brief)
nsubj:pass(appreciate, course)
case(hydraulic, in)
nmod(course, hydraulic)
case(builder, from)
det(builder, the)
compound(builder, pool)
nmod(course, builder)
aux(appreciate, may)
advmod(appreciate, well)
aux:pass(appreciate, be)
root(ROOT, appreciate)
case(crisis, in)
det(crisis, a)
amod(crisis, future)
obl(appreciate, crisis)
punct(appreciate, .)
csubj(turn, preserve)
det(pool, the)
obj(preserve, pool)
det(rise, a)
amod(rise, sudden)
amod(rise, high)
nsubj(turn, rise)
case(temperature, in)
nmod(rise, temperature)
aux(turn, will)
root(ROOT, turn)
nmod:poss(poison, you)
compound(poison, pool)
compound(overnight, poison)
amod(overnight, green)
obj(turn, overnight)
punct(turn, .)
nsubj(need, you)
root(ROOT, need)
amod(chlorine, more)
obj(need, chlorine)
punct(need, .)
det(wall, the)
nsubj(feel, wall)
root(ROOT, feel)
xcomp(feel, slippery)
punct(feel, .)
nsubj(need, you)
root(ROOT, need)
obj(need, algaecide)
punct(need, .)
case(help, with)
cc(without, or)
conj(with, without)
amod(help, professional)
obl(have, help)
punct(have, ,)
nsubj(have, you)
aux(have, will)
root(ROOT, have)
mark(able, to)
cop(able, be)
xcomp(have, able)
mark(do, to)
xcomp(able, do)
obj(do, some)
case(job, of)
det(job, these)
nmod(some, job)
obl:npmod(do, yourself)
mark(have, unless)
nsubj(have, you)
advcl(do, have)
det(nurse, a)
amod(time, full)
punct(time, -)
compound(nurse, time)
compound(nurse, pool)
obj(have, nurse)
punct(have, .)
nsubj(see, you)
aux(see, should)
root(ROOT, see)
case(it, to)
obl(see, it)
mark(clean, that)
det(trap, the)
nsubj(clean, trap)
punct(trap, ,)
det(catcher, the)
compound(catcher, dirt)
punct(catcher, -)
appos(trap, catcher)
case(front, in)
nmod(catcher, front)
case(filter, of)
det(filter, the)
nmod(front, filter)
punct(clean, ,)
cop(clean, be)
advmod(clean, always)
ccomp(see, clean)
punct(see, . )
det(pool, a)
nsubj(place, pool)
cop(place, be)
det(place, no)
root(ROOT, place)
case(trap, for)
det(trap, a)
amod(trap, shut)
nmod(place, trap)
punct(place, .)
nsubj(insist, you)
aux(insist, should)
advmod(insist, firmly)
root(ROOT, insist)
mark(wear, that)
det(pin, no)
compound(pin, bobby)
nsubj:pass(wear, pin)
cc(pin, or)
compound(pin, hair)
conj(pin, pin)
aux:pass(wear, be)
ccomp(insist, wear)
case(water, in)
det(water, the)
obl(wear, water)
punct(insist, .)
mark(shed, when)
advcl(leave, shed)
punct(leave, ,)
nsubj(leave, they)
root(ROOT, leave)
compound(mark, rust)
obj(leave, mark)
punct(leave, .)
nsubj(hope, you)
aux(hope, can)
root(ROOT, hope)
case(hope, against)
obl(hope, hope)
nsubj(come, that)
acl:relcl(hope, come)
compound(cleaning, spring)
obj(come, cleaning)
punct(lend, ,)
nmod:poss(friend, you)
amod(weather, fair)
punct(weather, -)
compound(friend, weather)
nsubj(lend, friend)
aux(lend, will)
ccomp(hope, lend)
det(hand, a)
obj(lend, hand)
mark(scrub, at)
obl(lend, scrub)
cc(furbishing, and)
conj(scrub, furbishing)
punct(hope, .)
nsubj(happen, it)
aux(happen, have)
root(ROOT, happen)
punct(happen, .)
amod(hour, many)
nsubj:pass(save, hour)
case(cleaning, of)
compound(cleaning, spring)
nmod(hour, cleaning)
aux(save, will)
aux:pass(save, be)
root(ROOT, save)
punct(save, ,)
advmod(save, however)
punct(save, ,)
mark(remove, if)
nsubj(remove, you)
advcl(save, remove)
det(grate, the)
amod(grate, main)
compound(grate, drain)
obj(remove, grate)
mark(close, when)
nsubj(close, you)
advcl(remove, close)
det(season, the)
compound(season, pool)
obj(close, season)
case(fall, in)
det(fall, the)
obl(close, fall)
punct(save, .)
mark(empty, as)
det(pool, the)
nsubj:pass(empty, pool)
aux:pass(empty, be)
advcl(stand, empty)
punct(stand, ,)
root(ROOT, stand)
advmod(stand, by)
mark(brush, to)
advcl(stand, brush)
compound:prt(brush, down)
det(wall, the)
obj(brush, wall)
cc(bottom, and)
conj(wall, bottom)
mark(wet, while)
nsubj(wet, they)
cop(wet, be)
advmod(wet, still)
advcl(brush, wet)
punct(stand, .)
nsubj:pass(remove, much)
case(dirt, of)
det(dirt, the)
obl(much, dirt)
cc(stain, and)
compound(stain, leaf)
conj(dirt, stain)
aux:pass(remove, be)
advmod(remove, easily)
conj(wet, remove)
mark(damp, when)
advcl(remove, damp)
punct(require, ,)
cc(require, but)
conj(remove, require)
obj(require, dynamite)
mark(allow, if)
advcl(require, allow)
mark(dry, to)
xcomp(allow, dry)
punct(stand, .)
mark(have, if)
nsubj(have, you)
advcl(wash, have)
det(pipe, a)
nummod(pipe, 6)
punct(6, -)
case(inch, to)
nummod(inch, 8)
punct(inch, -)
compound(pipe, inch)
compound(pipe, drain)
obj(have, pipe)
punct(wash, ,)
nsubj(wash, you)
aux(wash, may)
advmod(wash, easily)
root(ROOT, wash)
compound:prt(wash, out)
det:predet(debris, all)
det(debris, the)
obj(wash, debris)
mark(out, when)
det(grate, the)
nsubj(out, grate)
cop(out, be)
advcl(wash, out)
punct(wash, .)
advmod(cause, of)
fixed(of, course)
punct(cause, ,)
mark(release, when)
nmod:poss(torrent, you)
nummod(inch, 6)
punct(inch, -)
compound(torrent, inch)
nsubj:pass(release, torrent)
case(water, of)
nmod(torrent, water)
aux:pass(release, be)
advcl(cause, release)
punct(cause, ,)
nsubj(cause, it)
aux(cause, may)
root(ROOT, cause)
det(lot, a)
obj(cause, lot)
case(comment, of)
nmod(lot, comment)
mark(pass, as)
nsubj(pass, it)
advcl(cause, pass)
obl(pass, through)
cc(property, or)
case(property, by)
amod(property, neighbor)
obl(pass, property)
punct(cause, .)
aux(forget, do)
advmod(forget, not)
root(ROOT, forget)
det(possibility, this)
obj(forget, possibility)
punct(forget, .)
mark(locate, if)
nmod:poss(pool, you)
nsubj:pass(locate, pool)
aux:pass(locate, be)
advcl(have, locate)
case(ground, on)
cc(ground, or)
conj(on, near)
amod(ground, sloping)
obl(locate, ground)
punct(have, ,)
nsubj(have, it)
aux(have, may)
root(ROOT, have)
amod(drainage, natural)
obj(have, drainage)
nsubj(desirable, which)
cop(desirable, be)
advmod(desirable, certainly)
advmod(desirable, more)
acl:relcl(drainage, desirable)
mark(face, than)
mark(face, to)
aux:pass(face, be)
advcl(desirable, face)
case(expense, with)
det(expense, the)
amod(expense, annual)
obl(face, expense)
cc(labor, and)
conj(expense, labor)
mark(pump, of)
advmod(pump, first)
acl(expense, pump)
compound:prt(pump, out)
det(water, the)
obj(pump, water)
cc(scoop, and)
advmod(scoop, then)
conj(pump, scoop)
compound:prt(scoop, out)
det:predet(debris, all)
det(debris, the)
obj(scoop, debris)
punct(have, .)
expl(true, it)
aux(true, may)
cop(true, be)
root(ROOT, true)
mark(dramatize, that)
compound(lighting, pool)
nsubj(dramatize, lighting)
ccomp(true, dramatize)
det(scene, a)
compound(scene, evening)
obj(dramatize, scene)
punct(attract, ,)
cc(attract, but)
nsubj(attract, light)
advmod(attract, also)
conj(true, attract)
det:predet(life, all)
det(life, the)
amod(life, insect)
obj(attract, life)
case(mile, for)
obl(attract, mile)
advmod(attract, around)
punct(true, .)
advmod(leave, once)
case(water, on)
det(water, the)
obl(once, water)
punct(leave, ,)
det(visitor, these)
amod(visitor, little)
nsubj(leave, visitor)
advmod(leave, seldom)
root(ROOT, leave)
punct(add, ,)
cc(add, and)
nsubj(add, this)
conj(leave, add)
case(filter, to)
nmod:poss(filter, you)
obl(add, filter)
cc(problem, and)
compound(problem, vacuume)
conj(filter, problem)
cc(provide, as)
fixed(as, well)
mark(provide, as)
advcl(add, provide)
det(time, a)
amod(time, slapping)
amod(time, good)
obj(provide, time)
case(present, for)
det:predet(present, all)
det(present, those)
obl(provide, present)
punct(leave, .)
advmod(provide, often)
nummod(floodlight, one)
compound(high, floodlight)
nsubj(provide, high)
case(tree, in)
det(tree, a)
obl(high, tree)
aux(provide, will)
root(ROOT, provide)
det:predet(light, all)
det(light, the)
obj(provide, light)
nsubj(need, you)
acl:relcl(light, need)
case(expense, at)
advmod(less, much)
amod(expense, less)
obl(need, expense)
punct(provide, .)
nmod:poss(experience, we)
nsubj(teach, experience)
aux(teach, have)
root(ROOT, teach)
obj(teach, we)
mark(pay, that)
nsubj(pay, it)
ccomp(teach, pay)
mark(buy, to)
xcomp(pay, buy)
det(equipment, the)
amod(equipment, best)
obj(buy, equipment)
amod(equipment, possible)
punct(equipment, ,)
case(pipe, from)
obl(buy, pipe)
case(brush, to)
nmod(pipe, brush)
punct(follow, .)
parataxis(teach, follow)
compound(care, pool)
punct(care, -)
compound(instruction, care)
obj(follow, instruction)
case(letter, to)
det(letter, the)
nmod(instruction, letter)
punct(sure, ,)
cc(sure, and)
cop(sure, be)
conj(follow, sure)
mark(responsible, that)
nummod(person, one)
nsubj(responsible, person)
punct(person, ()
case(family, in)
det(family, the)
nmod(person, family)
cc(not, or)
conj(family, not)
punct(family, ))
cop(responsible, be)
advmod(responsible, regularly)
ccomp(sure, responsible)
case(aspect, for)
det(aspect, each)
obl(responsible, aspect)
case(job, of)
det(job, the)
nmod(aspect, job)
punct(responsible, ,)
case(chance, with)
det(chance, no)
obl(responsible, chance)
mark(claim, for)
acl(chance, claim)
punct(teach, ,)
punct(teach, ``)
nsubj(turn, it)
cop(turn, be)
advmod(turn, not)
nmod:poss(turn, my)
root(ROOT, turn)
punct(turn, '')
punct(turn, .)
advmod(let, never)
parataxis(turn, let)
obj(let, anyone)
advmod(take, not)
case(know, in)
det(know, the)
obl(take, know)
xcomp(let, take)
det(turn, a)
obj(take, turn)
case(valve, at)
det(valve, the)
obl(take, valve)
punct(take, --)
advmod(want, even)
mark(want, if)
det(boy, the)
amod(boy, little)
nsubj(want, boy)
aux(want, do)
advcl(take, want)
mark(play, to)
xcomp(want, play)
compound(ship, space)
obj(play, ship)
punct(turn, .)
nsubj(find, you)
aux(find, may)
root(ROOT, find)
obj(find, yourself)
xcomp(find, hit)
obj(hit, bottom)
punct(find, ,)
advmod(hit, literally)
punct(find, ,)
mark(discover, as)
nsubj(discover, you)
advcl(find, discover)
mark(run, that)
nsubj(run, water)
aux(run, be)
ccomp(discover, run)
advmod(run, out)
advmod(put, even)
mark(put, while)
nsubj(put, you)
aux(put, be)
advcl(Draw, put)
obj(put, it)
advmod(put, in)
punct(Draw, .)
parataxis(find, Draw)
det(line, a)
obj(Draw, line)
case(country, across)
det(country, the)
nmod(line, country)
case(latitude, at)
det(latitude, the)
obl(Draw, latitude)
case(Pennsylvania, of)
amod(Pennsylvania, lower)
nmod(latitude, Pennsylvania)
punct(find, .)
det(house, any)
nsubj(obsolete, house)
acl(house, build)
advmod(build, now)
case(line, below)
det(line, that)
obl(build, line)
case(conditioning, without)
compound(conditioning, air)
nmod(line, conditioning)
aux(obsolete, will)
cop(obsolete, be)
root(ROOT, obsolete)
case(year, in)
nummod(year, 10)
obl(obsolete, year)
punct(obsolete, . )
advmod(FHA, fortunately)
punct(FHA, ,)
nsubj(FHA, it)
cop(FHA, be)
det(FHA, the)
root(ROOT, FHA)
nsubj(arrive, which)
aux(arrive, have)
acl:relcl(FHA, arrive)
case(conclusion, at)
det(conclusion, this)
obl(arrive, conclusion)
punct(FHA, ,)
mark(mean, for)
nsubj(mean, it)
advcl(FHA, mean)
mark(include, that)
compound(equipment, cool)
nsubj:pass(include, equipment)
case(kind, of)
det(kind, all)
nmod(equipment, kind)
aux(include, may)
advmod(include, now)
aux:pass(include, be)
ccomp(mean, include)
case(mortgage, in)
det(mortgage, a)
obl(include, mortgage)
punct(acquire, ,)
cc(acquire, and)
advmod(acquire, thus)
conj(include, acquire)
case(minimum, with)
det(minimum, a)
obl(acquire, minimum)
case(stress, of)
amod(stress, financial)
nmod(minimum, stress)
punct(FHA, .)
advmod(live, even)
mark(live, if)
nsubj(live, you)
advcl(back, live)
case(line, above)
det(line, that)
obl(live, line)
punct(back, ,)
det(FHA, the)
nsubj(back, FHA)
aux(back, will)
root(ROOT, back)
obj(back, you)
punct(back, ,)
mark(decide, for)
nsubj(decide, they)
aux(decide, have)
advcl(back, decide)
mark(thing, that)
det(inclusion, the)
nsubj(thing, inclusion)
case(conditioning, of)
compound(conditioning, air)
nmod(inclusion, conditioning)
case(home, in)
det(home, all)
amod(home, new)
nmod(conditioning, home)
cop(thing, be)
det(thing, a)
amod(thing, good)
ccomp(decide, thing)
cc(encourage, and)
aux(encourage, should)
aux:pass(encourage, be)
conj(thing, encourage)
punct(back, .)
obl:npmod(simplify, New)
amod(unit, simplify)
amod(unit, package)
nsubj(make, unit)
punct(unit, ,)
advmod(devise, recently)
acl(unit, devise)
amod(duct, prefabricate)
compound(fiber, glass)
punct(fiber, -)
compound(duct, fiber)
obj(devise, duct)
punct(add, ,)
cc(add, and)
amod(add, improve)
conj(duct, add)
punct(add, -)
case(technique, on)
nmod(add, technique)
root(ROOT, make)
expl(make, it)
xcomp(make, possible)
mark(acquire, to)
csubj(possible, acquire)
det(system, a)
obj(acquire, system)
case(house, for)
det(house, a)
nummod(foot, 1800)
punct(foot, -)
nummod(foot, square)
punct(foot, -)
compound(house, foot)
nmod(system, house)
case($, for)
advmod(little, as)
advmod($, little)
case($, as)
nmod(house, $)
compound($, 600)
case($, to)
nmod($, $)
compound($, 900)
punct(make, .)
nummod(man, two)
nsubj(do, man)
aux(do, can)
advmod(do, often)
root(ROOT, do)
det(installation, the)
obj(do, installation)
case(day, in)
det(day, a)
obl(do, day)
punct(do, .)
nsubj(install, you)
aux(install, can)
root(ROOT, install)
obj(install, it)
obl:npmod(install, yourself)
punct(install, --)
nsubj(system, this)
cop(system, be)
det(system, a)
amod(system, central)
parataxis(install, system)
nsubj(cool, that)
aux(cool, will)
acl:relcl(system, cool)
det(part, every)
obj(cool, part)
case(house, of)
nmod:poss(house, you)
nmod(part, house)
punct(install, .)
nsubj(upkeep, it)
cop(upkeep, be)
root(ROOT, upkeep)
punct(upkeep, ?)
punct(upkeep, ?)
advmod(less, no)
advmod(authority, less)
det(authority, a)
nsubj(operate, authority)
mark(concur, than)
det(FHA, the)
nsubj(concur, FHA)
acl(authority, concur)
mark(make, that)
det(conditioning, the)
compound(conditioning, savings)
compound(conditioning, air)
nsubj(make, conditioning)
ccomp(concur, make)
xcomp(make, possible)
advmod(offset, more)
fixed(more, than)
obj(make, offset)
nsubj(operate, it)
aux(operate, be)
root(ROOT, operate)
obj(operate, cost)
punct(operate, .)
cop(while, be)
nsubj(while, it)
amod(while, worth)
punct(while, -)
root(ROOT, while)
punct(while, ?)
punct(while, ?)
compound(conditioning, Home)
compound(conditioning, air)
nsubj(come, conditioning)
aux(come, have)
root(ROOT, come)
det(way, a)
amod(way, long)
obj(come, way)
case(day, from)
det(day, the)
amod(day, early)
obl(come, day)
case(theater, of)
amod(theater, overcooled)
nmod(day, theater)
cc(shock, and)
det(shock, the)
amod(shock, thermal)
conj(day, shock)
nsubj(inflict, they)
acl:relcl(shock, inflict)
punct(come, .)
nsubj(know, we)
root(ROOT, know)
advmod(know, now)
mark(desirable, that)
det(differential, a)
nummod(degree, 15)
punct(degree, -)
compound(differential, degree)
nsubj(desirable, differential)
case(temperature, in)
nmod(differential, temperature)
cop(desirable, be)
det(desirable, the)
amod(desirable, maximum)
advmod(desirable, usually)
ccomp(know, desirable)
punct(assure, ,)
cc(assure, and)
amod(controls, accurate)
nsubj(assure, controls)
conj(know, assure)
det(comfort, the)
obj(assure, comfort)
nsubj(want, we)
acl:relcl(comfort, want)
punct(know, .)
nsubj(know, we)
root(ROOT, know)
punct(know, ,)
advmod(know, too)
punct(know, ,)
mark(harm, that)
nsubj:pass(harm, health)
aux:pass(harm, be)
advmod(harm, never)
ccomp(know, harm)
case(cool, by)
compound(cool, summer)
obl(harm, cool)
punct(know, .)
case(contrary, on)
det(contrary, the)
obl(be, contrary)
punct(be, ,)
expl(be, there)
root(ROOT, be)
amod(cold, fewer)
nsubj(be, cold)
cc(bill, and)
amod(bill, smaller)
compound(bill, doctor)
conj(cold, bill)
punct(be, .)
det(allergy, the)
amod(allergy, filter)
compound(benefit, air)
compound(allergy, benefit)
root(ROOT, allergy)
punct(asthma, ,)
conj(allergy, asthma)
punct(sinus, ,)
conj(allergy, sinus)
punct(fever, ,)
compound(fever, hay)
conj(allergy, fever)
punct(allergy, .)
nsubj(godsend, control)
case(temperature, of)
nmod(control, temperature)
cc(humidity, and)
conj(temperature, humidity)
cop(godsend, be)
det(godsend, a)
root(ROOT, godsend)
case(aged, to)
det(aged, the)
nmod(godsend, aged)
cc(invalid, and)
det(invalid, the)
conj(aged, invalid)
punct(godsend, .)
compound(condition, Heart)
nsubj(escape, condition)
cc(pressure, and)
amod(pressure, high)
compound(pressure, blood)
conj(condition, pressure)
root(ROOT, escape)
det(stress, the)
obj(escape, stress)
acl(stress, bring)
compound:prt(bring, on)
case(heat, by)
amod(heat, oppressive)
obl(bring, heat)
punct(escape, .)
nsubj(easier, Housekeeping)
cop(easier, be)
root(ROOT, easier)
punct(easier, .)
det(air, the)
amod(air, cleaner)
nsubj(mean, air)
root(ROOT, mean)
amod(time, less)
obj(mean, time)
acl(time, spend)
advcl(spend, push)
det(vacuum, a)
obj(push, vacuum)
punct(trip, ,)
amod(trip, fewer)
conj(vacuum, trip)
case(cleaner, to)
det(cleaner, the)
amod(cleaner, dry)
nmod(trip, cleaner)
punct(load, ,)
amod(load, lighter)
conj(cleaner, load)
case(machine, for)
det(machine, the)
compound(machine, wash)
nmod(load, machine)
punct(mean, .)
det(need, the)
nsubj(become, need)
case(reupholstering, for)
nmod(need, reupholstering)
punct(redecorating, ,)
conj(reupholstering, redecorating)
punct(repaint, ,)
conj(reupholstering, repaint)
root(ROOT, become)
advmod(infrequent, more)
xcomp(become, infrequent)
punct(infrequent, .)
nsubj(hold, Clothes)
root(ROOT, hold)
nmod:poss(shape, they)
obj(hold, shape)
xcomp(hold, better)
punct(become, ,)
cc(become, and)
nsubj(become, mildew)
cc(rust, and)
conj(mildew, rust)
conj(hold, become)
advmod(forget, almost)
amod(word, forget)
obj(become, word)
punct(hold, .)
nsubj(improve, it)
aux(improve, will)
root(ROOT, improve)
nmod:poss(disposition, you)
obj(improve, disposition)
punct(improve, .)
mark(fatigue, when)
nsubj(fatigue, you)
cop(fatigue, be)
advmod(fatigue, less)
advcl(look, fatigue)
punct(look, ,)
nsubj(look, thing)
advmod(look, just)
advmod(look, naturally)
root(ROOT, look)
xcomp(look, brighter)
punct(look, .)
det(child, the)
nsubj(have, child)
aux(have, can)
root(ROOT, have)
nmod:poss(nap, they)
amod(nap, daytime)
obj(have, nap)
cc(meal, and)
amod(meal, hot)
conj(nap, meal)
punct(put, ,)
cc(put, and)
aux:pass(put, be)
conj(have, put)
case(bed, to)
obl(put, bed)
case(schedule, on)
obl(put, schedule)
case(room, in)
obl:npmod(darken, shade)
punct(darken, -)
amod(room, darken)
obl(put, room)
punct(have, .)
nsubj(sleep, you)
aux(sleep, will)
root(ROOT, sleep)
advmod(sleep, longer)
cc(better, and)
conj(longer, better)
punct(better, ,)
advmod(awake, too)
punct(awake, ,)
amod(refresh, awake)
conj(sleep, refresh)
cc(free, and)
conj(refresh, free)
case(nerve, of)
amod(weather, hot)
compound(nerve, weather)
obl(free, nerve)
punct(sleep, .)
nsubj(forget, you)
aux(forget, can)
root(ROOT, forget)
case(screen, about)
obl(forget, screen)
punct(leave, ,)
cc(leave, and)
conj(forget, leave)
det(window, the)
compound(window, storm)
obj(leave, window)
compound:prt(leave, up)
det(year, all)
obl:npmod(around, year)
advmod(leave, around)
punct(forget, .)
advmod(something, best)
case(all, of)
obl(best, all)
punct(something, ,)
amod(conditioning, central)
compound(conditioning, air)
nsubj(something, conditioning)
cop(something, be)
root(ROOT, something)
nsubj(afford, you)
aux(afford, can)
acl:relcl(something, afford)
punct(something, .)
case(cousin, like)
nmod:poss(cousin, its)
amod(live, long)
punct(live, -)
amod(cousin, live)
obl(expect, cousin)
punct(expect, ,)
det(refrigerator, the)
nsubj:pass(expect, refrigerator)
punct(expect, ,)
det(conditioner, a)
appos(refrigerator, conditioner)
aux(expect, can)
aux:pass(expect, be)
root(ROOT, expect)
mark(last, to)
xcomp(expect, last)
nummod(year, 20)
case(25, to)
nmod(20, 25)
obj(last, year)
cc(more, or)
nummod(year, more)
punct(expect, .)
nsubj(bring, that)
root(ROOT, bring)
obj(bring, it)
cop(cost, be)
amod(cost, per-year)
obj(bring, cost)
case(low, down)
compound(low, mighty)
nmod(cost, low)
punct(bring, .)
case(house, for)
det(house, any)
root(ROOT, house)
punct(house, .)
advmod(matter, no)
advmod(install, matter)
det(style, what)
obl(install, style)
nmod:poss(home, you)
nsubj(style, home)
cop(style, be)
punct(ranch, ,)
appos(style, ranch)
punct(story, ,)
nummod(story, two)
punct(story, -)
conj(ranch, story)
punct(colonial, ,)
conj(ranch, colonial)
cc(contemporary, or)
conj(colonial, contemporary)
punct(install, ,)
amod(conditioning, central)
compound(conditioning, air)
nsubj:pass(install, conditioning)
aux:pass(install, be)
advmod(install, easily)
root(ROOT, install)
punct(install, .)
det(equipment, the)
nsubj(take, equipment)
aux(take, will)
advmod(take, not)
root(ROOT, take)
compound:prt(take, up)
amod(space, valuable)
obj(take, space)
advmod(take, either)
punct(take, .)
nsubj(go, it)
aux(go, can)
root(ROOT, go)
case(space, in)
compound(space, out)
punct(out, -)
case(way, of)
punct(way, -)
det(way, the)
punct(way, -)
nmod(out, way)
compound(space, waste)
obl(go, space)
punct(go, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
det(deny, no)
nsubj(be, deny)
mark(be, that)
det(way, the)
amod(way, easiest)
cc(economical, and)
advmod(economical, most)
conj(easiest, economical)
nsubj(be, way)
mark(get, to)
acl(way, get)
obj(get, year)
case(conditioning, -')
amod(conditioning, round)
amod(house, whole)
punct(house, -)
compound(conditioning, house)
compound(conditioning, air)
obl(get, conditioning)
acl(deny, be)
mark(build, when)
nsubj(build, you)
advcl(be, build)
punct(be, .)
mark(do, if)
nsubj:pass(do, that)
aux:pass(do, be)
advcl(design, do)
punct(design, ,)
det(house, the)
nsubj:pass(design, house)
aux(design, can)
aux:pass(design, be)
root(ROOT, design)
cc(oriented, and)
conj(design, oriented)
case(operation, for)
amod(operation, best)
obl(design, operation)
punct(mean, ,)
cc(mean, and)
nsubj(mean, this)
aux(mean, can)
conj(design, mean)
obj(mean, savings)
det(savings, both)
case(size, in)
det(size, the)
obl(mean, size)
case(equipment, of)
nmod(size, equipment)
cc(cost, and)
case(cost, in)
det(cost, the)
conj(size, cost)
case(house, of)
det(house, the)
nmod(cost, house)
nmod:npmod(house, itself)
punct(design, .)
mark(see, if)
nsubj(see, you)
aux(see, can)
advmod(see, not)
advcl(make, see)
nmod:poss(way, you)
obj(see, way)
amod(way, clear)
mark(have, to)
advcl(clear, have)
compound(cool, summer)
obj(have, cool)
xcomp(have, include)
mark(building, when)
obl(include, building)
punct(make, ,)
case(means, by)
det(means, all)
obl(make, means)
root(ROOT, make)
obj(make, provision)
case(add, for)
nmod:poss(add, its)
amod(add, easy)
obl(make, add)
advmod(make, later)
punct(make, . )
nsubj(design, manufacturer)
aux(design, have)
root(ROOT, design)
obj(design, equipment)
case(circumstance, for)
advmod(circumstance, just)
amod(circumstance, such)
obl(design, circumstance)
punct(substantial, ,)
cc(substantial, and)
nmod:poss(savings, you)
nsubj(substantial, savings)
mark(start, over)
acl(savings, start)
case(scratch, from)
obl(start, scratch)
aux(substantial, will)
cop(substantial, be)
conj(design, substantial)
punct(design, .)
mark(be, if)
nmod:poss(house, you)
nsubj(be, house)
advcl(part, be)
mark(have, to)
ccomp(be, have)
det(system, a)
amod(system, force)
amod(system, warm)
compound(system, air)
obj(have, system)
punct(part, ,)
nsubj(part, cool)
aux(part, can)
cop(part, be)
det(part, a)
root(ROOT, part)
case(it, of)
nmod(part, it)
punct(part, .)
nsubj(cost, this)
parataxis(part, cost)
obj(cost, less)
mark(have, than)
advcl(cost, have)
det(system, a)
advmod(separate, completely)
amod(system, separate)
compound(system, cool)
obj(have, system)
punct(system, ,)
case(ductwork, for)
nmod:poss(ductwork, you)
amod(ductwork, regular)
compound(ductwork, heating)
nmod(system, ductwork)
punct(filter, ,)
conj(ductwork, filter)
cc(blower, and)
compound(blower, furnace)
conj(ductwork, blower)
acl:relcl(ductwork, do)
amod(duty, double)
obj(do, duty)
case(cool, for)
nmod(duty, cool)
punct(do, .)
nsubj(get, you)
aux(get, can)
root(ROOT, get)
obl:npmod(round, year)
punct(round, -')
amod(conditioner, round)
compound(conditioner, air)
obj(get, conditioner)
case(variety, in)
det(variety, the)
amod(variety, same)
obl(get, variety)
case(style, of)
nmod(variety, style)
case(which, in)
obl(buy, which)
nsubj(buy, you)
acl:relcl(variety, buy)
det(furnace, a)
obj(buy, furnace)
advmod(buy, alone)
punct(buy, --)
amod(boy, high)
cc(low, or)
conj(high, low)
obj(buy, boy)
punct(horizontal, ,)
amod(boy, horizontal)
cc(counterflow, or)
conj(high, counterflow)
punct(get, .)
det(unit, the)
nsubj:pass(install, unit)
aux(install, can)
aux:pass(install, be)
root(ROOT, install)
case(basement, in)
obl(install, basement)
punct(attic, ,)
conj(basement, attic)
punct(crawlspace, ,)
conj(basement, crawlspace)
punct(closet, ,)
cc(closet, or)
case(closet, in)
det(closet, a)
conj(basement, closet)
acl(closet, locate)
case(area, in)
det(area, the)
compound(area, living)
obl(locate, area)
punct(install, .)
det(coil, the)
compound(coil, cool)
nsubj:pass(locate, coil)
aux:pass(locate, be)
root(ROOT, locate)
case(outlet, in)
det(furnace, the)
nmod:poss(outlet, furnace)
case(furnace, 's)
obl(locate, outlet)
punct(locate, .)
case(coil, from)
det(coil, the)
obl(connect, coil)
amod(pipe, small)
compound(pipe, copper)
nsubj(connect, pipe)
root(ROOT, connect)
case(section, to)
det(section, a)
amod(section, weatherproof)
compound(section, refrigeration)
obl(connect, section)
acl(section, set)
case(yard, in)
det(yard, the)
obl(set, yard)
punct(garage, ,)
conj(yard, garage)
punct(carport, ,)
conj(yard, carport)
punct(basement, ,)
cc(basement, or)
conj(yard, basement)
punct(connect, .)
mark(plan, if)
nsubj(plan, you)
advcl(be, plan)
mark(add, to)
xcomp(plan, add)
obj(add, cool)
advmod(add, later)
case(system, to)
nmod:poss(system, you)
compound(system, heating)
obl(add, system)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, thing)
mark(watch, to)
acl(thing, watch)
obl(watch, for)
punct(be, .)
cop(sure, be)
root(ROOT, sure)
obj(sure, duct)
nsubj(require, that)
acl:relcl(duct, require)
obj(require, insulation)
ccomp(sure, get)
obj(get, it)
mark(install, when)
nsubj:pass(install, they)
aux:pass(install, be)
advcl(get, install)
punct(sure, .)
nsubj(inaccessible, they)
aux(inaccessible, may)
cop(inaccessible, be)
root(ROOT, inaccessible)
advmod(inaccessible, later)
punct(inaccessible, .)
cop(sure, be)
root(ROOT, sure)
nmod:poss(duct, you)
nsubj(big, duct)
cc(blower, and)
conj(duct, blower)
cop(big, be)
ccomp(sure, big)
advmod(big, enough)
mark(handle, to)
advcl(big, handle)
obj(handle, cool)
punct(sure, .)
nsubj(important, this)
cop(important, be)
advmod(important, especially)
root(ROOT, important)
mark(live, if)
nsubj(live, you)
advcl(important, live)
case(zone, in)
det(zone, a)
amod(winter, mild)
punct(winter, -)
compound(zone, winter)
obl(live, zone)
punct(important, .)
cop(sure, be)
root(ROOT, sure)
nsubj(get, you)
ccomp(sure, get)
det(system, a)
compound(system, perimeter)
compound(system, heating)
obj(get, system)
punct(diffuser, ,)
cc(diffuser, and)
conj(system, diffuser)
nsubj(work, that)
aux(work, will)
acl:relcl(diffuser, work)
advmod(work, as)
fixed(as, well)
case(cool, for)
obl(work, cool)
mark(do, as)
nsubj(do, they)
advcl(as, do)
case(heating, for)
obl(do, heating)
punct(sure, .)
nsubj(get, you)
aux(get, can)
root(ROOT, get)
det(system, a)
amod(system, hot)
compound(system, water)
obj(get, system)
nsubj(work, that)
aux(work, will)
advmod(work, also)
acl:relcl(system, work)
mark(cool, for)
advcl(work, cool)
nmod:poss(house, you)
obj(cool, house)
punct(get, .)
case(cool, for)
obl(circulate, cool)
punct(circulate, ,)
amod(water, chill)
nsubj:pass(circulate, water)
aux:pass(circulate, be)
root(ROOT, circulate)
case(water, instead)
fixed(instead, of)
amod(water, hot)
obl(circulate, water)
punct(circulate, .)
case(radiator, instead)
fixed(instead, of)
obl(have, radiator)
nsubj(have, you)
aux(have, will)
root(ROOT, have)
compound(heating, cool)
punct(heating, -)
compound(unit, heating)
obj(have, unit)
punct(unit, ,)
appos(unit, each)
case(thermostat, with)
nmod:poss(thermostat, its)
amod(thermostat, own)
nmod(each, thermostat)
punct(have, .)
det(system, these)
nsubj(expensive, system)
cop(expensive, be)
advmod(expensive, more)
root(ROOT, expensive)
case(year, than)
obl(expensive, year)
case(system, -')
amod(system, round)
amod(system, force)
compound(system, air)
obl(expensive, system)
punct(expensive, .)
det(cost, the)
amod(cost, minimum)
nsubj(likely, cost)
case(story, for)
det(story, a)
amod(story, average)
nummod(story, one)
punct(story, -)
nmod(cost, story)
punct(house, ,)
nummod(room, 7)
punct(room, -)
compound(house, room)
nmod(cost, house)
case(basement, with)
nmod(house, basement)
punct(likely, ,)
cop(likely, be)
root(ROOT, likely)
mark(run, to)
xcomp(likely, run)
obj(run, $)
nummod($, 1500)
case(cost, above)
det(cost, the)
obl(run, cost)
case(heating, of)
det(heating, the)
nmod(cost, heating)
advmod(heating, alone)
punct(likely, .)
amod(system, Separate)
root(ROOT, system)
punct(system, .)
mark(knotty, if)
det(problem, the)
nsubj(knotty, problem)
mark(combine, of)
acl(problem, combine)
obj(combine, cool)
case(heating, with)
nmod:poss(heating, you)
obl(combine, heating)
cop(knotty, be)
advcl(cheaper, knotty)
punct(cheaper, ,)
expl(cheaper, it)
aux(cheaper, may)
cop(cheaper, be)
root(ROOT, cheaper)
mark(plan, to)
csubj(cheaper, plan)
case(system, on)
det(system, a)
advmod(separate, completely)
amod(system, separate)
compound(system, cool)
obl(plan, system)
punct(cheaper, .)
det(kind, the)
amod(kind, simplest)
nsubj(use, kind)
case(system, of)
amod(system, separate)
nmod(kind, system)
root(ROOT, use)
det(unit, a)
amod(unit, single)
punct(unit, ,)
obl:npmod(contain, self)
punct(contain, -)
amod(unit, contain)
obj(use, unit)
punct(use, .)
nsubj(conditioner, it)
cop(conditioner, be)
punct(conditioner, ,)
case(effect, in)
obl(conditioner, effect)
punct(conditioner, ,)
det(conditioner, a)
amod(conditioner, oversize)
compound(conditioner, room)
root(ROOT, conditioner)
acl(conditioner, equip)
case(duct, with)
amod(duct, prefab)
compound(fiber, glass)
punct(fiber, -)
compound(duct, fiber)
obl(equip, duct)
mark(distribute, to)
advcl(equip, distribute)
det(air, the)
amod(air, cool)
punct(air, ,)
amod(air, clean)
punct(air, ,)
amod(air, dehumidify)
obj(distribute, air)
advmod(want, where)
nsubj:pass(want, it)
aux:pass(want, be)
acl:relcl(air, want)
punct(conditioner, .)
case(ranch, in)
det(ranch, a)
amod(ranch, long)
punct(ranch, ,)
compound(ranch, ramble)
obl(install, ranch)
punct(install, ,)
nummod(unit, two)
amod(unit, such)
nsubj:pass(install, unit)
aux(install, can)
aux:pass(install, be)
root(ROOT, install)
punct(install, ,)
nsubj:pass(install, one)
advcl(install, serve)
det(area, the)
compound(area, living)
obj(serve, area)
punct(area, ,)
det(zone, the)
amod(zone, other)
det(zone, the)
compound(zone, sleeping)
appos(area, zone)
punct(install, .)
case(house, in)
det(house, a)
nummod(story, two)
punct(story, -)
compound(house, story)
obl(install, house)
punct(install, ,)
nummod(unit, one)
nsubj:pass(install, unit)
aux(install, may)
aux:pass(install, be)
root(ROOT, install)
case(basement, in)
det(basement, the)
obl(install, basement)
mark(serve, to)
advcl(install, serve)
det(floor, the)
amod(floor, first)
obj(serve, floor)
punct(floor, ,)
nsubj(attic, another)
case(attic, in)
det(attic, the)
obl(serve, attic)
mark(cool, to)
acl(attic, cool)
det(second, the)
obj(cool, second)
punct(install, .)
case(case, in)
det(case, each)
obl(have, case)
punct(have, ,)
csubj(have, have)
amod(system, separate)
obj(have, system)
case(living, for)
nmod(system, living)
cc(area, and)
compound(area, sleeping)
conj(living, area)
root(ROOT, have)
det(advantage, the)
obj(have, advantage)
mark(permit, of)
acl(advantage, permit)
amod(control, individual)
compound(control, zone)
obj(permit, control)
punct(have, .)
det(pump, the)
compound(pump, heat)
root(ROOT, pump)
punct(pump, .)
nsubj(one, one)
case(remarkable, of)
det(remarkable, the)
advmod(remarkable, more)
nmod(one, remarkable)
case(system, of)
det(system, the)
amod(system, new)
compound(system, cool)
obl(remarkable, system)
cop(one, be)
root(ROOT, one)
nsubj:pass(switch, that)
aux(switch, can)
aux:pass(switch, be)
acl:relcl(one, switch)
case(heating, to)
obl(switch, heating)
punct(one, .)
mark(know, as)
nsubj(know, you)
advcl(make, know)
punct(make, ,)
det(conditioner, a)
nsubj(make, conditioner)
root(ROOT, make)
amod(air, indoor)
obl:npmod(cool, air)
xcomp(make, cool)
mark(pump, by)
advcl(make, pump)
det(heat, the)
obj(pump, heat)
case(it, out)
case(it, of)
obl(pump, it)
cc(release, and)
advmod(release, then)
conj(pump, release)
det(heat, this)
obj(release, heat)
advmod(release, outdoors)
punct(make, . )
det(arrangement, a)
advmod(simple, relatively)
amod(arrangement, simple)
compound(arrangement, switch)
nsubj(reverse, arrangement)
root(ROOT, reverse)
det(cycle, the)
obj(reverse, cycle)
mark(run, so)
fixed(so, that)
det(machine, the)
nsubj(run, machine)
advmod(run, literally)
advcl(reverse, run)
advmod(run, backward)
punct(extract, ,)
cc(extract, and)
det(heat, the)
nsubj:pass(extract, heat)
aux:pass(extract, be)
conj(reverse, extract)
case(air, from)
amod(air, outdoor)
obl(extract, air)
cc(turn, and)
conj(extract, turn)
advmod(turn, indoors)
punct(reverse, .)
advmod(efficient, up)
case(recently, until)
obl(efficient, recently)
punct(efficient, ,)
det(method, this)
compound(pump, heat)
compound(method, pump)
nsubj(efficient, method)
case(air, of)
compound(air, warming)
nsubj(efficient, air)
cop(efficient, be)
root(ROOT, efficient)
advmod(area, only)
case(area, in)
obl(efficient, area)
case(winter, of)
amod(winter, mild)
nmod(area, winter)
cc(degree, and)
mark(degree, when)
amod(temperature, outside)
nsubj(degree, temperature)
cop(degree, be)
case(degree, above)
nummod(degree, 40)
obl:npmod(now, degree)
punct(degree, .)
advmod(improve, now)
punct(improve, ,)
det(machine, the)
nsubj:pass(improve, machine)
aux(improve, have)
aux:pass(improve, be)
conj(efficient, improve)
case(point, to)
det(point, a)
obl(improve, point)
advmod(economical, where)
nsubj(economical, it)
cop(economical, be)
advmod(economical, generally)
advmod(economical, more)
acl:relcl(point, economical)
case(heat, than)
compound(heat, oil)
obl(economical, heat)
case(temperature, at)
obl(economical, temperature)
advmod(degree, down)
case(degree, to)
nummod(degree, 15)
obl(economical, degree)
punct(improve, .)
nsubj(get, you)
aux(get, can)
root(ROOT, get)
det(feature, this)
amod(feature, add)
compound(feature, heating)
obj(get, feature)
case($, for)
advmod(little, as)
obl(get, little)
case($, as)
obl(get, $)
nummod($, 200)
advmod(get, more)
case(price, than)
det(price, the)
obl(more, price)
case(cool, of)
nmod(price, cool)
advmod(cool, alone)
punct(get, .)
root(ROOT, consider)
obj(consider, it)
case(setup, as)
det(setup, a)
compound(setup, standby)
obl(consider, setup)
punct(consider, ,)
case(cost, at)
amod(cost, negligible)
obl(consider, cost)
punct(consider, ,)
case(emergency, for)
det(emergency, those)
obl(hold, emergency)
mark(quit, when)
det(furnace, the)
nsubj(quit, furnace)
advcl(hold, quit)
punct(hold, ,)
det(blizzard, a)
nsubj(hold, blizzard)
conj(consider, hold)
compound:prt(hold, up)
compound(delivery, fuel)
obj(hold, delivery)
punct(hold, ,)
cc(morning, or)
case(morning, for)
amod(morning, cool)
compound(morning, summer)
obl(hold, morning)
cc(evening, or)
conj(morning, evening)
mark(want, when)
nsubj(want, you)
aux(want, do)
advmod(want, not)
advcl(hold, want)
mark(start, to)
xcomp(want, start)
compound:prt(start, up)
nmod:poss(plant, you)
amod(plant, whole)
compound(plant, heating)
obj(start, plant)
punct(consider, .)
det(conditioner, what)
compound(conditioner, size)
root(ROOT, conditioner)
punct(conditioner, ?)
punct(conditioner, ?)
advmod(large, how)
advmod(depend, large)
det(unit, a)
compound(unit, cool)
nsubj(depend, unit)
nsubj(need, you)
acl:relcl(unit, need)
punct(method, ,)
cc(method, and)
det(method, the)
conj(unit, method)
case(installation, of)
nmod:poss(installation, its)
nmod(method, installation)
punct(depend, ,)
root(ROOT, depend)
case(variety, on)
det(variety, a)
obl(depend, variety)
case(factor, of)
nmod(variety, factor)
punct(depend, .)
case(thing, among)
amod(thing, other)
obl(depend, thing)
punct(depend, ,)
case(nature, besides)
det(nature, the)
nmod(thing, nature)
case(house, of)
nmod:poss(house, you)
nmod(nature, house)
cc(find, and)
advmod(much, how)
amod(heat, much)
nsubj(find, heat)
conj(nature, find)
nsubj(be, it)
ccomp(find, be)
advmod(room, way)
case(room, into)
nmod:poss(room, it)
case(it, 's)
amod(room, various)
ccomp(find, room)
case(outside, from)
det(outside, the)
nmod(room, outside)
punct(depend, ,)
nsubj(depend, it)
aux(depend, will)
root(ROOT, depend)
case(habit, upon)
nmod:poss(habit, you)
amod(habit, personal)
obl(depend, habit)
cc(makeup, and)
det(makeup, the)
conj(habit, makeup)
case(family, of)
nmod:poss(family, you)
nmod(makeup, family)
punct(depend, . )
nsubj(want, family)
case(child, with)
nmod(family, child)
advmod(want, usually)
aux(want, do)
advmod(want, not)
root(ROOT, want)
det(house, the)
obj(want, house)
advmod(cool, quite)
advmod(cool, so)
xcomp(want, cool)
punct(want, .)
mark(thrower, if)
nsubj(thrower, you)
cop(thrower, be)
det(thrower, a)
compound(thrower, party)
advcl(need, thrower)
punct(need, ,)
nsubj(need, you)
aux(need, may)
root(ROOT, need)
amod(capacity, add)
obj(need, capacity)
punct(need, .)
det(body, the)
nsubj(machine, body)
cop(machine, be)
det(machine, a)
compound(machine, heat)
root(ROOT, machine)
punct(double, ,)
cc(double, and)
nummod(guest, 20)
case(25, to)
nmod(20, 25)
nsubj(double, guest)
aux(double, can)
advmod(double, easily)
conj(machine, double)
nmod:poss(load, you)
compound(load, cool)
obj(double, load)
punct(machine, .)
compound(requirement, cooling)
nsubj:pass(express, requirement)
aux:pass(express, be)
advmod(express, best)
root(ROOT, express)
case(term, in)
obl(express, term)
case(Aj, of)
nmod(term, Aj)
punct(express, . )
det(BTU, a)
nsubj(unit, BTU)
cop(unit, be)
det(unit, a)
root(ROOT, unit)
case(heat, of)
nmod(unit, heat)
punct(refer, ,)
cc(refer, and)
det(rating, the)
compound(rating, BTU)
nsubj(refer, rating)
case(conditioner, of)
det(conditioner, a)
nmod(rating, conditioner)
conj(unit, refer)
mark(pump, to)
advmod(much, how)
amod(heat, much)
obl(pump, heat)
nmod:poss(machine, you)
nsubj(pump, machine)
aux(pump, can)
advcl(refer, pump)
case(house, out)
case(house, of)
nmod:poss(house, you)
obl(pump, house)
case(hour, in)
det(hour, a)
obl(pump, hour)
punct(unit, . )
det(rule, a)
advmod(rough, very)
amod(rule, rough)
nsubj(be, rule)
case(thumb, of)
nmod(rule, thumb)
root(ROOT, be)
mark(need, that)
punct(need, ,)
case(condition, under)
amod(condition, favorable)
obl(need, condition)
punct(need, ,)
nsubj(need, you)
aux(need, will)
ccomp(be, need)
nummod(BTU, 15)
obj(need, BTU)
case(BTU, 's)
case(cool, of)
nmod(BTU, cool)
case(foot, for)
det(foot, every)
compound(foot, square)
obl(need, foot)
case(house, of)
nmod:poss(house, you)
nmod(foot, house)
punct(be, .)
nsubj(be, this)
root(ROOT, be)
mark(have, if)
amod(temperature, outdoor)
nsubj(have, temperature)
advcl(be, have)
det(average, a)
amod(average, high)
obj(have, average)
case(degree, of)
nummod(degree, 95)
nmod(average, degree)
punct(be, .)
nsubj(need, you)
aux(need, will)
root(ROOT, need)
obj(need, more)
mark(that, if)
det(average, the)
amod(average, high)
nsubj(that, average)
cop(that, be)
case(that, above)
advcl(need, that)
punct(need, ,)
advmod(need, less)
mark(below, if)
nsubj(below, it)
cop(below, be)
advcl(less, below)
punct(need, .)
nsubj:pass(rate, Coolers)
aux:pass(rate, be)
advmod(rate, also)
root(ROOT, rate)
case(ton, by)
obl(rate, ton)
punct(rate, . )
det(ton, a)
nsubj(compare, ton)
case(cool, of)
nmod(ton, cool)
root(ROOT, compare)
case(cool, to)
det(cool, the)
obl(compare, cool)
nsubj(get, you)
acl:relcl(cool, get)
mark(melt, by)
advcl(get, melt)
det(ton, a)
obj(melt, ton)
case(ice, of)
nmod(ton, ice)
punct(compare, .)
case(definition, by)
amod(definition, accept)
obl(provide, definition)
punct(provide, ,)
det(conditioner, a)
nummod(ton, 1)
punct(ton, -)
compound(conditioner, ton)
nsubj(provide, conditioner)
aux(provide, will)
root(ROOT, provide)
nummod(BTU, 12,000)
obj(provide, BTU)
case(cool, of)
nmod(BTU, cool)
case(hour, in)
nummod(hour, one)
obl(provide, hour)
punct(provide, .)
nsubj(find, you)
aux(find, may)
root(ROOT, find)
det(conditioner, a)
obj(find, conditioner)
acl(conditioner, rate)
case(horsepower, by)
obl(rate, horsepower)
punct(find, .)
nsubj(method, it)
cop(method, be)
advmod(method, generally)
det(method, a)
amod(method, inaccurate)
root(ROOT, method)
case(rating, of)
nmod(method, rating)
punct(method, ,)
case(horsepower, for)
det(horsepower, the)
nmod(that, horsepower)
cop(that, be)
conj(method, that)
case(motor, of)
det(motor, the)
compound(motor, compressor)
nmod(that, motor)
punct(determine, ,)
cc(determine, and)
amod(component, many)
amod(component, other)
nsubj(determine, component)
case(it, beside)
nmod(component, it)
conj(method, determine)
advmod(much, how)
amod(cool, much)
obj(get, cool)
nsubj(get, you)
aux(get, will)
ccomp(determine, get)
punct(method, . )
det(conditioner, a)
nummod(hp, 1)
punct(hp, -)
compound(conditioner, hp)
nsubj(vary, conditioner)
punct(conditioner, ,)
case(example, for)
obl(vary, example)
punct(vary, ,)
aux(vary, may)
root(ROOT, vary)
case(effectiveness, in)
obl(vary, effectiveness)
case(BTU, from)
case(BTU, under)
nummod(BTU, 8,000)
nmod(effectiveness, BTU)
case(10,000, to)
advmod(10,000, well)
case(10,000, over)
nmod(BTU, 10,000)
nsubj(be, Aj)
punct(Aj, .)
det(procedure, the)
amod(procedure, safest)
nsubj(be, procedure)
root(ROOT, be)
mark(let, to)
ccomp(be, let)
nmod:poss(builder, you)
obj(let, builder)
xcomp(let, estimate)
det(size, the)
obj(estimate, size)
case(unit, of)
det(unit, the)
nmod(size, unit)
nsubj(need, you)
acl:relcl(unit, need)
punct(try, ,)
cc(try, rather)
fixed(rather, than)
conj(estimate, try)
mark(do, to)
xcomp(try, do)
obj(do, this)
obl:npmod(do, yourself)
punct(be, .)
aux(urge, do)
advmod(urge, not)
root(ROOT, urge)
nmod:poss(builder, you)
obj(urge, builder)
mark(give, to)
xcomp(urge, give)
iobj(give, you)
det(capacity, a)
amod(capacity, little)
amod(capacity, extra)
compound(capacity, cool)
obj(give, capacity)
advmod(sure, just)
mark(sure, to)
cop(sure, be)
advcl(give, sure)
nsubj(have, you)
ccomp(sure, have)
obj(have, enough)
punct(urge, .)
root(ROOT, better)
mark(have, to)
advcl(better, have)
nmod:poss(equipment, you)
obj(have, equipment)
advmod(undersized, slightly)
xcomp(have, undersized)
case(big, than)
advmod(big, too)
obl(undersized, big)
punct(better, .)
root(ROOT, here)
cop(here, be)
advmod(here, why)
punct(here, :)
csubj(important, reducing)
nsubj(important, humidity)
cop(important, be)
advmod(important, often)
advmod(important, as)
acl:relcl(why, important)
case(cool, as)
obl(important, cool)
punct(here, .)
det(unit, a)
amod(unit, oversize)
nsubj(cool, unit)
aux(cool, will)
root(ROOT, cool)
case(house, off)
nmod:poss(house, you)
obl(cool, house)
advmod(cool, quickly)
punct(cool, ,)
advmod(shut, then)
conj(cool, shut)
compound:prt(shut, down)
case(period, for)
det(period, a)
amod(period, long)
obl(shut, period)
punct(cool, .)
mark(cycle, before)
nsubj(cycle, it)
advcl(build, cycle)
advmod(cycle, on)
advmod(cycle, again)
punct(build, ,)
nsubj(build, humidity)
aux(build, can)
root(ROOT, build)
compound:prt(build, up)
cc(make, and)
conj(build, make)
obj(make, you)
xcomp(make, uncomfortable)
advmod(low, even)
mark(low, though)
det(temperature, the)
nsubj(low, temperature)
cop(low, be)
advmod(low, still)
advcl(make, low)
punct(build, .)
case(unit, with)
det(unit, a)
obl(run, unit)
case(size, of)
det(size, the)
amod(size, right)
nmod(unit, size)
punct(run, ,)
det(compressor, a)
nsubj(run, compressor)
aux(run, will)
root(ROOT, run)
advmod(run, continuously)
case(weather, during)
amod(weather, hot)
obl(run, weather)
punct(run, ,)
advcl(run, reduce)
obj(reduce, humidity)
advmod(evenly, as)
advmod(reduce, evenly)
mark(do, as)
nsubj(do, it)
advcl(as, do)
obj(do, temperature)
punct(run, . )
obl:npmod(save, money)
punct(save, -)
amod(tip, save)
root(ROOT, tip)
punct(tip, .)
nsubj(cut, attention)
case(detail, to)
nmod(attention, detail)
aux(cut, can)
root(ROOT, cut)
case(unit, in)
det:predet(unit, half)
det(unit, the)
compound(unit, size)
obl(cut, unit)
nsubj(need, you)
acl:relcl(unit, need)
cc(pare, and)
conj(need, pare)
compound(expense, operating)
obj(pare, expense)
advmod(pare, proportionately)
punct(cut, . )
det(house, a)
advmod(design, well)
punct(design, -)
amod(house, design)
punct(house, ,)
obl:npmod(design, 1200)
punct(foot, -)
compound(foot, square)
punct(foot, -)
compound(house, foot)
nsubj:pass(cool, house)
aux(cool, can)
aux:pass(cool, be)
advmod(cool, comfortably)
root(ROOT, cool)
cc(heat, and)
conj(cool, heat)
case($, for)
advmod(little, as)
advmod($, little)
case($, as)
obl(heat, $)
nummod($, 128)
det(year, a)
nmod:npmod($, year)
punct($, ,)
cc($, or)
conj($, $)
nummod($, 11)
det(month, a)
nmod($, month)
punct(cool, .)
mark(have, if)
nsubj(have, you)
advcl(have, have)
det(house, a)
obj(have, house)
obj(penetrate, which)
nsubj(penetrate, heat)
aux(penetrate, do)
advmod(penetrate, not)
acl:relcl(house, penetrate)
advmod(penetrate, easily)
punct(have, ,)
nmod:poss(unit, you)
nsubj(have, unit)
aux(have, will)
root(ROOT, have)
amod(heat, less)
obj(have, heat)
mark(remove, to)
acl(heat, remove)
punct(have, .)
root(ROOT, keep)
det(sun, the)
amod(sun, direct)
obj(keep, sun)
mark(reach, from)
advcl(keep, reach)
det(house, the)
obj(reach, house)
cc(win, and)
nsubj(win, you)
aux(win, have)
conj(keep, win)
det(battle, the)
amod(battle, first)
obj(win, battle)
punct(keep, .)
case(house, in)
det(house, a)
amod(house, new)
obl(solution, house)
punct(solution, ,)
amod(overhangs, generous)
compound(overhangs, roof)
nsubj(solution, overhangs)
cop(solution, be)
det(solution, a)
amod(solution, logical)
cc(effective, and)
conj(logical, effective)
root(ROOT, solution)
punct(solution, .)
mark(plan, if)
det(house, the)
nsubj(have, house)
nsubj(plan, you)
acl:relcl(house, plan)
mark(buy, to)
xcomp(plan, buy)
cc(build, or)
conj(buy, build)
aux(have, will)
advmod(have, not)
advcl(do, have)
amod(overhangs, big)
obj(have, overhangs)
punct(do, ,)
nsubj(do, you)
aux(do, can)
advmod(do, still)
root(ROOT, do)
det(job, a)
amod(job, fair)
obj(do, job)
mark(keep, of)
acl(job, keep)
det(sun, the)
obj(keep, sun)
case(wall, off)
obl(keep, wall)
cc(window, and)
conj(wall, window)
case(trellise, with)
advmod(design, properly)
amod(trellise, design)
obl(keep, trellise)
punct(fence, ,)
conj(trellise, fence)
cc(awning, and)
conj(trellise, awning)
punct(do, .)
compound(tree, Shade)
nsubj(help, tree)
punct(help, ,)
advmod(help, too)
punct(help, ,)
cop(help, be)
det(help, a)
amod(help, big)
root(ROOT, help)
punct(help, ,)
advmod(keep, so)
parataxis(help, keep)
obj(keep, they)
mark(can, if)
nsubj(can, you)
advcl(keep, can)
punct(do, .)
amod(blind, Drawn)
nsubj(do, blind)
cc(drapery, and)
conj(blind, drapery)
conj(help, do)
det(good, some)
obj(do, good)
punct(much, ,)
cc(much, but)
advmod(much, not)
advmod(much, nearly)
advmod(much, as)
conj(do, much)
mark(shad, as)
advcl(much, shad)
obj(shad, device)
case(outside, on)
det(outside, the)
obl(shad, outside)
case(house, of)
det(house, the)
nmod(outside, house)
punct(help, .)
det(sun, the)
advmod(directly, more)
advmod(strike, directly)
det(sun, the)
nsubj(strike, sun)
root(ROOT, strike)
obj(strike, wall)
cc(roof, and)
conj(wall, roof)
punct(strike, ,)
mark(greater, the)
parataxis(strike, greater)
nsubj(impact, it)
cop(impact, be)
compound(impact, heat)
acl:relcl(greater, impact)
punct(strike, .)
det(way, the)
obl:tmod(influence, way)
det(house, a)
nsubj:pass(set, house)
aux:pass(set, be)
acl:relcl(way, set)
case(lot, on)
nsubj(influence, it)
cop(influence, be)
nsubj(influence, lot)
aux(influence, can)
advmod(influence, therefore)
root(ROOT, influence)
advmod(much, how)
amod(cool, much)
obj(go, cool)
nsubj(go, you)
aux(go, be)
ccomp(influence, go)
mark(need, to)
xcomp(go, need)
punct(influence, . )
det(shift, a)
nsubj(save, shift)
case(wall, in)
det(wall, the)
nmod(shift, wall)
punct(change, ,)
cc(change, or)
det(change, a)
conj(shift, change)
case(slope, in)
det(slope, the)
compound(slope, roof)
nmod(change, slope)
punct(shift, ,)
mark(hit, so)
det(sun, the)
nsubj(hit, sun)
advcl(save, hit)
obj(hit, they)
advmod(obliquely, more)
advmod(hit, obliquely)
punct(save, ,)
aux(save, can)
root(ROOT, save)
iobj(save, you)
obj(save, money)
punct(save, .)
nsubj(use, you)
aux(use, can)
root(ROOT, use)
obl:npmod(absorb, heat)
punct(absorb, -)
amod(glass, absorb)
obj(use, glass)
mark(stop, to)
advcl(use, stop)
det(sun, the)
obj(stop, sun)
punct(glass, ,)
amod(glass, double)
conj(sun, glass)
cc(glass, and)
amod(glass, insulate)
conj(glass, glass)
mark(combat, to)
advcl(stop, combat)
obj(combat, condensation)
punct(use, .)
root(ROOT, Restrict)
amod(area, large)
compound(area, glass)
obj(Restrict, area)
case(north, to)
det(north, the)
nmod(area, north)
cc(side, and)
amod(side, south)
conj(area, side)
case(house, of)
det(house, the)
nmod(side, house)
punct(Restrict, .)
nsubj(easier, they)
cop(easier, be)
root(ROOT, easier)
mark(shade, to)
xcomp(easier, shade)
advmod(shade, there)
punct(easier, .)
det(space, a)
compound(space, attic)
nsubj(make, space)
case(insulation, above)
nmod(space, insulation)
root(ROOT, make)
det(house, a)
obj(make, house)
xcomp(make, easier)
case(cool, to)
obl(easier, cool)
punct(make, .)
nsubj(gain, you)
aux(gain, will)
advmod(gain, even)
root(ROOT, gain)
mark(put, by)
advcl(gain, put)
nmod:poss(heater, you)
compound(heater, water)
obj(put, heater)
case(space, outside)
det(space, the)
amod(space, condition)
obl(put, space)
punct(use, ,)
cc(use, and)
conj(put, use)
det(range, a)
amod(range, electric)
obj(use, range)
case(one, instead)
fixed(instead, of)
det(one, a)
compound(one, gas)
obl(use, one)
punct(gain, .)
nsubj(add, gas)
root(ROOT, add)
case(load, to)
det(load, the)
compound(load, moisture)
obl(add, load)
punct(add, .)
root(ROOT, insulate)
punct(weatherstrip, ,)
obj(insulate, weatherstrip)
punct(glaze, ,)
amod(glaze, double)
punct(glaze, -)
parataxis(insulate, glaze)
case(maximum, to)
det(maximum, the)
obl(insulate, maximum)
punct(insulate, .)
case(insulation, in)
nmod(6, insulation)
punct(6, ,)
det(number, the)
nsubj(6, number)
mark(remember, to)
acl(number, remember)
cop(6, be)
root(ROOT, 6)
case(4, -)
nmod(6, 4)
case(2, -)
nmod(4, 2)
punct(6, .)
nsubj(stand, they)
parataxis(6, stand)
case(inch, for)
nummod(inch, 6)
obl(stand, inch)
case(insulation, of)
amod(insulation, mineral)
compound(insulation, wool)
nmod(inch, insulation)
case(ceiling, in)
det(ceiling, the)
nmod(inch, ceiling)
punct(inch, ,)
nummod(inch, 4)
nmod:npmod(ceiling, inch)
case(wall, in)
det(wall, the)
compound(wall, side)
nmod(inch, wall)
punct(wall, ,)
nummod(inch, 2)
appos(wall, inch)
case(floor, in)
det(floor, the)
nmod(inch, floor)
punct(stand, .)
amod(insulation, such)
amod(insulation, extra-thick)
nsubj(permit, insulation)
advmod(only, not)
cc:preconj(permit, only)
root(ROOT, permit)
det(installation, a)
advmod(smaller, much)
amod(installation, smaller)
compound(installation, cool)
obj(permit, installation)
punct(continue, ,)
cc(continue, but)
aux(continue, will)
conj(permit, continue)
mark(reduce, to)
xcomp(continue, reduce)
compound(expense, operating)
obj(reduce, expense)
cc:preconj(heating, both)
case(heating, in)
obl(reduce, heating)
cc(cool, and)
conj(heating, cool)
punct(heating, .)
det(roof, a)
compound(color, light)
punct(color, -)
amod(roof, color)
nsubj(reduce, roof)
aux(reduce, will)
parataxis(permit, reduce)
compound(heat, sun)
obj(reduce, heat)
case(cent, by)
nummod(cent, 50)
compound(cent, per)
obl(reduce, cent)
punct(permit, .)
nsubj(cost, it)
root(ROOT, cost)
nummod(time, two)
case(three, to)
nmod(two, three)
obj(cost, time)
advmod(much, as)
obj(cost, much)
mark(remove, to)
advcl(much, remove)
det(BTU, a)
obj(remove, BTU)
case(summer, in)
obl(remove, summer)
mark(do, as)
nsubj(do, it)
aux(add, do)
mark(add, to)
advcl(remove, add)
obj(add, one)
case(winter, in)
nmod(one, winter)
punct(cost, ,)
advmod(worth, so)
det(BTU, every)
amod(BTU, solitary)
nsubj(worth, BTU)
cop(worth, be)
parataxis(cost, worth)
obj(worth, attention)
punct(cost, .)
nsubj(foil, you)
aux(foil, will)
root(ROOT, foil)
obj(foil, they)
case(drove, in)
obl(foil, drove)
punct(foil, ,)
case(humidity, along)
case(humidity, with)
nmod:poss(humidity, they)
compound(humidity, pal)
obl(foil, humidity)
punct(foil, ,)
mark(have, by)
advcl(foil, have)
cc(use, and)
conj(have, use)
det(fan, a)
compound(range, kitchen)
compound(exhaust, range)
compound(fan, exhaust)
obj(use, fan)
punct(ventilator, ,)
det(ventilator, a)
compound(ventilator, bathroom)
conj(fan, ventilator)
nmod(ventilator, for)
mark(shower, when)
nsubj(shower, you)
acl(ventilator, shower)
punct(vent, ,)
cc(vent, and)
det(vent, a)
amod(vent, outside)
conj(fan, vent)
case(clothes, for)
det(clothes, the)
nmod(vent, clothes)
amod(vent, drier)
punct(foil, .)
root(ROOT, keep)
obj(keep, conditioner)
xcomp(keep, quiet)
punct(keep, .)
expl(be, it)
root(ROOT, be)
det(use, no)
nsubj(be, use)
acl(use, pretend)
mark(quiet, that)
det(conditioner, all)
nsubj(quiet, conditioner)
cop(quiet, be)
ccomp(pretend, quiet)
punct(keep, ,)
cc(keep, but)
det(noise, the)
nsubj:pass(keep, noise)
nsubj(produce, they)
acl:relcl(noise, produce)
aux(keep, can)
aux:pass(keep, be)
conj(be, keep)
case(minimum, to)
det(minimum, a)
obl(keep, minimum)
punct(be, .)
amod(workmanship, good)
nsubj(important, workmanship)
cop(important, be)
root(ROOT, important)
case(installation, in)
det(installation, the)
obl(important, installation)
punct(important, ,)
advmod(award, so)
mark(do, if)
nsubj(do, you)
aux(do, be)
advcl(award, do)
nmod:poss(contracting, you)
amod(contracting, own)
obj(do, contracting)
punct(award, ,)
aux(award, do)
advmod(award, not)
parataxis(important, award)
det(job, the)
obj(award, job)
case(basis, on)
det(basis, the)
obl(award, basis)
case(price, of)
nmod(basis, price)
advmod(basis, alone)
punct(avoid, .)
parataxis(important, avoid)
compound(placement, attic)
obj(avoid, placement)
advmod(bedroom, directly)
case(bedroom, above)
det(bedroom, a)
obl(avoid, bedroom)
punct(avoid, .)
amod(work, most)
compound(work, recreation)
nsubj(call, work)
parataxis(avoid, call)
case(deal, for)
det(deal, a)
amod(deal, good)
obl(call, deal)
case(pre-planning, of)
nmod(deal, pre-planning)
punct(important, .)
nsubj(true, this)
cop(true, be)
advmod(true, particularly)
root(ROOT, true)
case(selection, in)
compound(selection, site)
obl(true, selection)
punct(true, .)
nsubj(know, you)
aux(know, must)
root(ROOT, know)
mark(start, before)
nsubj(start, you)
advcl(know, start)
ccomp(start, what)
det(need, the)
nsubj(what, need)
cc(objective, and)
conj(need, objective)
case(organization, of)
nmod:poss(organization, you)
nmod(need, organization)
cop(what, be)
punct(know, ;)
punct(know, ;)
nsubj(have, you)
aux(have, must)
parataxis(know, have)
det(list, a)
obj(have, list)
case(requirement, of)
nmod(list, requirement)
case(where, on)
nmod(requirement, where)
punct(where, ,)
advmod(many, how)
conj(where, many)
punct(need, ,)
cc(need, and)
det(site, what)
compound(site, type)
nsubj:pass(need, site)
aux:pass(need, be)
acl:relcl(where, need)
punct(know, .)
case(program, with)
det:predet(program, such)
det(program, a)
obl(make, program)
nsubj(make, you)
aux(make, can)
root(ROOT, make)
amod(selection, constructive)
obj(make, selection)
case(site, of)
det(site, the)
amod(site, best)
nmod(selection, site)
amod(site, available)
punct(make, .)
root(ROOT, Begin)
det(examination, the)
obj(Begin, examination)
case(site, of)
det(site, a)
nmod(examination, site)
case(map, with)
det(map, a)
amod(map, good)
nmod(examination, map)
cc(photo, and)
amod(photo, aerial)
conj(map, photo)
mark(possible, if)
advcl(photo, possible)
punct(Begin, .)
nsubj(become, these)
aux(become, be)
root(ROOT, become)
xcomp(become, more)
cc(available, and)
advmod(available, more)
conj(more, available)
case(work, through)
det(work, the)
obl(available, work)
case(county, of)
nmod(work, county)
cc(agency, and)
amod(agency, other)
compound(agency, government)
conj(county, agency)
punct(become, .)
det(edition, the)
amod(edition, new)
nsubj(excellent, edition)
case(map, of)
amod(map, topographic)
nmod(edition, map)
aux:pass(make, be)
acl(edition, make)
case(government, by)
det(government, the)
amod(government, federal)
obl(make, government)
cop(excellent, be)
root(ROOT, excellent)
mark(orienting, for)
advcl(excellent, orienting)
obj(orienting, yourself)
case(feature, to)
det(feature, the)
amod(feature, natural)
obl(orienting, feature)
case(site, of)
det(site, the)
nmod(feature, site)
punct(excellent, .)
nsubj(inexpensive, these)
cop(inexpensive, be)
root(ROOT, inexpensive)
cc(available, and)
conj(inexpensive, available)
case(Society, from)
det(Society, the)
compound(Society, U.)
compound(Society, S.)
compound(Society, geological)
obl(available, Society)
punct(Society, ,)
appos(Society, Washington)
nummod(Washington, 25)
punct(Society, ,)
appos(Society, D.)
flat(D., C.)
punct(inexpensive, .)
case(year, in)
amod(year, recent)
obl(take, year)
amod(county, many)
nsubj(take, county)
cc(Service, and)
det(Service, the)
compound(Service, U.)
compound(Service, S.)
compound(Service, Forest)
conj(county, Service)
aux(take, have)
root(ROOT, take)
amod(photo, aerial)
obj(take, photo)
nsubj(show, which)
acl:relcl(photo, show)
obj(show, feature)
case(detail, in)
obl(show, detail)
cc(good, and)
cop(good, be)
advmod(good, very)
conj(take, good)
case(use, for)
compound(use, planning)
obl(good, use)
punct(have, .)
amod(county, most)
nsubj(have, county)
advmod(have, also)
parataxis(good, have)
obj(have, map)
amod(map, available)
case(engineer, from)
det(engineer, the)
compound(engineer, county)
obl(available, engineer)
acl(engineer, show)
obj(show, road)
cc(feature, and)
amod(feature, other)
conj(road, feature)
cc(office, and)
case(office, from)
det(assessor, the)
nmod:poss(office, assessor)
case(assessor, 's)
conj(road, office)
acl(office, show)
obj(show, ownership)
case(land, of)
nmod(ownership, land)
punct(take, .)
root(ROOT, inspect)
det(site, the)
obj(inspect, site)
case(field, in)
det(field, the)
obl(inspect, field)
case(time, during)
det(time, the)
obl(inspect, time)
case(year, of)
det(year, the)
nmod(time, year)
mark(use, when)
det(area, the)
nsubj:pass(use, area)
aux(use, will)
aux:pass(use, be)
advmod(heavily, most)
advmod(use, heavily)
advcl(inspect, use)
case(recreation, for)
obl(use, recreation)
punct(inspect, .)
nsubj(give, this)
root(ROOT, give)
iobj(give, you)
det(opportunity, a)
amod(opportunity, better)
obj(give, opportunity)
mark(get, to)
acl(opportunity, get)
det(feel, the)
obj(get, feel)
case(condition, of)
det(condition, the)
compound(condition, climate)
nmod(feel, condition)
punct(exposure, ,)
det(exposure, the)
conj(feel, exposure)
case(sun, to)
det(sun, the)
nmod(exposure, sun)
cc(wind, and)
conj(sun, wind)
punct(interest, ,)
det(interest, the)
compound(interest, water)
conj(sun, interest)
punct(interest, ,)
advmod(interest, etcetera)
punct(interest, ,)
nsubj(vary, which)
acl:relcl(interest, vary)
advmod(vary, greatly)
case(season, with)
det(season, the)
obl(vary, season)
punct(give, .)
expl(helpful, it)
cop(helpful, be)
advmod(helpful, usually)
root(ROOT, helpful)
mark(make, to)
csubj(helpful, make)
det(map, a)
compound(map, sketch)
obj(make, map)
case(field, in)
det(field, the)
nmod(map, field)
punct(make, ,)
advcl(make, show)
det(size, the)
obj(show, size)
cc(location, and)
conj(size, location)
case(feature, of)
det(feature, the)
nmod(size, feature)
case(interest, of)
nmod(feature, interest)
cc(take, and)
mark(take, to)
conj(show, take)
obj(take, photograph)
case(site, at)
det(site, the)
obl(take, site)
punct(helpful, .)
nsubj(aid, these)
cop(aid, be)
det(aid, a)
amod(aid, great)
root(ROOT, aid)
case(use, for)
compound(use, planning)
nmod(aid, use)
advmod(use, back)
case(office, at)
det(office, the)
obl(back, office)
punct(aid, .)
case(work, for)
compound(work, site)
compound(work, planning)
nmod(aid, work)
punct(aid, ,)
nsubj(best, it)
cop(best, be)
parataxis(aid, best)
mark(have, to)
csubj(best, have)
det(planner, a)
amod(planner, qualified)
cc(experience, and)
conj(qualified, experience)
compound(planner, park)
obj(have, planner)
mark(carry, to)
acl(planner, carry)
case(study, through)
det(study, the)
obl(carry, study)
punct(aid, .)
advmod(be, however)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(be, also)
nsubj(be, much)
mark(gain, to)
aux:pass(gain, be)
acl(much, gain)
mark(make, by)
advcl(gain, make)
obj(make, use)
case(ability, of)
det(ability, the)
nmod(use, ability)
case(people, of)
det(people, the)
amod(people, local)
nmod(ability, people)
nsubj(available, who)
cop(available, be)
acl:relcl(people, available)
cc(interested, and)
conj(available, interested)
case(recreation, in)
obl(interested, recreation)
punct(be, .)
compound(judge, County)
nsubj(have, judge)
punct(commissioner, ,)
conj(judge, commissioner)
punct(engineer, ,)
conj(judge, engineer)
punct(assessor, ,)
conj(judge, assessor)
punct(other, ,)
cc(other, and)
conj(judge, other)
nsubj(live, who)
aux(live, have)
acl:relcl(other, live)
case(area, in)
det(area, the)
obl(live, area)
case(time, for)
det(time, a)
amod(time, long)
obl(live, time)
aux(have, may)
root(ROOT, have)
amod(knowledge, valuable)
obj(have, knowledge)
case(site, regard)
det(site, the)
nmod(knowledge, site)
cc(opinion, or)
conj(site, opinion)
mark(offer, to)
acl(site, offer)
case(experience, from)
nmod:poss(experience, they)
amod(experience, varied)
amod(experience, professional)
obl(offer, experience)
punct(have, . )
det(visit, a)
nsubj(bring, visit)
case(site, to)
det(site, the)
nmod(visit, site)
case(group, by)
det(group, a)
nmod(visit, group)
case(person, of)
amod(person, several)
nmod(group, person)
aux(bring, can)
advmod(bring, usually)
root(ROOT, bring)
compound:prt(bring, out)
amod(idea, new)
obj(bring, idea)
cc(verify, or)
conj(bring, verify)
obj(verify, opinion)
advmod(helpful, most)
amod(opinion, helpful)
case(study, to)
det(study, the)
compound(study, planning)
obl(helpful, study)
case(area, of)
det(area, any)
compound(area, recreation)
nmod(study, area)
punct(bring, .)
advmod(much, how)
amod(study, much)
nsubj:pass(require, study)
aux:pass(require, be)
root(ROOT, require)
punct(require, ?)
punct(require, ?)
nsubj(depend, this)
punct(depend, ,)
advmod(depend, of)
fixed(of, course)
punct(depend, ,)
root(ROOT, depend)
case(character, on)
det(character, the)
obl(depend, character)
case(site, of)
det(site, the)
nmod(character, site)
nmod:npmod(site, itself)
punct(experience, ,)
det(experience, the)
amod(experience, previous)
appos(character, experience)
case(investigator, of)
det(investigator, the)
nmod(experience, investigator)
punct(number, ,)
cc(number, and)
det(number, the)
conj(experience, number)
case(factor, of)
nmod(number, factor)
acl(factor, need)
mark(arrive, to)
xcomp(need, arrive)
case(decision, at)
det(decision, a)
amod(decision, good)
obl(arrive, decision)
punct(depend, .)
expl(easy, it)
cop(easy, be)
advmod(easy, too)
root(ROOT, easy)
case(person, for)
det(person, the)
amod(person, inexperienced)
obl(easy, person)
mark(make, to)
acl(person, make)
det(judgment, a)
amod(judgment, quick)
obj(make, judgment)
case(value, of)
det(value, a)
amod(value, few)
nmod(judgment, value)
case(area, of)
det(area, the)
nmod(value, area)
cc(base, and)
conj(make, base)
det(decision, a)
obj(base, decision)
case(alone, on)
det(alone, these)
nmod(decision, alone)
punct(easy, .)
advmod(be, usually)
expl(be, there)
root(ROOT, be)
amod(factor, more)
nsubj(be, factor)
case(planning, to)
amod(planning, good)
compound(planning, site)
nmod(factor, planning)
case(impression, than)
amod(impression, first)
obl(be, impression)
punct(be, . )
det(site, a)
nsubj(slum, site)
aux(slum, may)
cop(slum, be)
det(slum, a)
compound(slum, rundown)
root(ROOT, slum)
cc(piece, or)
det(piece, a)
amod(piece, desolate)
conj(slum, piece)
case(desert, of)
nmod(piece, desert)
case(appearance, in)
nmod(piece, appearance)
obl:tmod(slum, today)
cc(have, but)
conj(slum, have)
amod(potential, excellent)
obj(have, potential)
case(future, for)
det(future, the)
nmod(potential, future)
case(development, with)
det(development, a)
amod(development, little)
obl(have, development)
cc(water, or)
conj(development, water)
punct(slum, .)
det(same, the)
nsubj(true, same)
cop(true, be)
root(ROOT, true)
case(area, of)
obl(true, area)
nsubj(look, which)
advmod(first, at)
advmod(look, first)
acl:relcl(area, look)
xcomp(look, good)
case(feature, because)
fixed(because, of)
det(feature, a)
amod(feature, few)
amod(feature, exist)
compound(feature, recreation)
obl(look, feature)
cc(area, but)
aux(area, may)
advmod(area, actually)
cop(area, be)
amod(area, poor)
conj(look, area)
mark(develop, to)
acl(area, develop)
case(use, for)
amod(use, general)
amod(use, public)
obl(develop, use)
punct(true, .)
mark(look, in)
advcl(need, look)
case(site, for)
det(site, the)
amod(site, best)
obl(look, site)
amod(site, available)
nsubj(meet, that)
acl:relcl(site, meet)
det(requirement, the)
obj(meet, requirement)
punct(need, ,)
nsubj(need, you)
root(ROOT, need)
obj(need, information)
mark(compare, to)
acl(information, compare)
det(site, the)
obj(compare, site)
case(other, with)
obl(compare, other)
punct(need, .)
nsubj(need, you)
root(ROOT, need)
obj(need, answer)
case(question, to)
nummod(question, four)
amod(question, important)
nmod(answer, question)
punct(need, .)
root(ROOT, what)
cop(what, be)
det(feature, the)
amod(feature, exist)
compound(feature, recreation)
nsubj(what, feature)
punct(what, ?)
punct(what, ?)
advmod(well, how)
advmod(develop, well)
aux(develop, can)
det(site, the)
nsubj:pass(develop, site)
aux:pass(develop, be)
root(ROOT, develop)
punct(develop, ?)
punct(develop, ?)
advmod(useful, how)
root(ROOT, useful)
aux(useful, will)
nsubj(public, it)
cop(useful, be)
case(public, to)
det(public, the)
obl(useful, public)
punct(useful, ?)
punct(useful, ?)
cop(available, be)
det(site, this)
nsubj(available, site)
root(ROOT, available)
punct(available, ?)
punct(available, ?)
root(ROOT, check)
det(quantity, the)
obj(check, quantity)
cc(quality, and)
conj(quantity, quality)
case(all, of)
nmod(quantity, all)
case(interest, of)
det(interest, the)
compound(interest, recreation)
nmod(all, interest)
advmod(exist, already)
acl(interest, exist)
case(site, at)
det(site, the)
obl(exist, site)
punct(check, .)
advmod(attract, naturally)
punct(attract, ,)
det(site, a)
compound(site, park)
nsubj(attract, site)
case(view, with)
compound(view, scenic)
nmod(site, view)
punct(lake, ,)
det(lake, a)
amod(lake, good)
conj(site, lake)
punct(tree, ,)
conj(lake, tree)
punct(dune, ,)
cc(dune, and)
compound(dune, sand)
conj(lake, dune)
punct(attract, ,)
aux(attract, will)
root(ROOT, attract)
amod(people, more)
obj(attract, people)
case(area, than)
det(area, a)
amod(area, nearby)
nmod(people, area)
case(tree, with)
advmod(tree, only)
nmod(area, tree)
cc(dune, and)
conj(tree, dune)
punct(important, .)
nsubj(important, quality)
cop(important, be)
advmod(important, vitally)
parataxis(tree, important)
punct(Frontage, .)
nsubj(important, Frontage)
case(body, on)
det(body, a)
nmod(Frontage, body)
case(water, of)
amod(water, clear)
punct(water, ,)
amod(water, clean)
nmod(body, water)
aux(different, will)
cop(different, be)
advmod(different, vastly)
parataxis(Frontage, different)
case(amount, from)
det(amount, the)
amod(amount, same)
obl(different, amount)
case(frontage, of)
nmod(amount, frontage)
case(water, on)
amod(water, pollute)
nmod(frontage, water)
punct(different, .)
det(feature, some)
compound(feature, recreation)
nsubj(have, feature)
punct(feature, ,)
case(value, such)
fixed(such, as)
compound(value, scenic)
nmod(feature, value)
cc(interest, and)
compound(interest, water)
conj(value, interest)
punct(have, ,)
advmod(have, also)
root(ROOT, have)
amod(value, greater)
amod(value, overall)
obj(have, value)
case(interest, than)
amod(interest, other)
nmod(value, interest)
punct(have, .)
nsubj(view, one)
case(feature, of)
det(feature, the)
advmod(desirable, most)
amod(feature, desirable)
nmod(one, feature)
case(park, for)
det(park, a)
nmod(feature, park)
cop(view, be)
amod(view, beautiful)
root(ROOT, view)
cc(scenery, or)
conj(view, scenery)
punct(view, .)
nsubj(view, it)
aux(view, may)
cop(view, be)
amod(view, distant)
root(ROOT, view)
case(valley, of)
det(valley, a)
nmod(view, valley)
cc(mountain, or)
det(mountain, the)
conj(valley, mountain)
cc(feature, or)
amod(feature, natural)
conj(mountain, feature)
case(lake, such)
fixed(such, as)
det(lake, a)
amod(lake, small)
compound(formation, lake)
punct(formation, ,)
amod(formation, colorful)
compound(formation, rock)
conj(valley, formation)
punct(tree, ,)
cc(tree, or)
amod(tree, unusual)
conj(lake, tree)
punct(view, . )
det(site, a)
nsubj(offer, site)
nsubj(overlook, which)
acl:relcl(site, overlook)
det(harbor, a)
obj(overlook, harbor)
cc(river, or)
conj(harbor, river)
aux(offer, may)
root(ROOT, offer)
obj(offer, interest)
case(activity, in)
det(activity, the)
nmod(interest, activity)
case(traffic, of)
compound(traffic, boat)
nmod(activity, traffic)
punct(offer, .)
det(area, a)
nsubj(have, area)
case(coast, on)
det(coast, the)
nmod(area, coast)
aux(have, may)
root(ROOT, have)
amod(view, relax)
obj(have, view)
case(surf, of)
det(surf, the)
nmod(view, surf)
acl(surf, roll)
compound:prt(roll, in)
case(beach, on)
det(beach, a)
obl(roll, beach)
punct(have, . )
det(site, a)
nsubj(attractive, site)
aux(attractive, may)
advmod(attractive, also)
cop(attractive, be)
root(ROOT, attractive)
advmod(beauty, just)
case(beauty, through)
det(beauty, the)
obl(attractive, beauty)
case(tree, of)
nmod:poss(tree, its)
nmod(beauty, tree)
cc(shrub, and)
conj(tree, shrub)
punct(attractive, .)
root(ROOT, note)
obj(note, extent)
case(interest, of)
det(interest, these)
nmod(extent, interest)
cc(available, and)
advmod(available, how)
conj(note, available)
nsubj(be, they)
aux(be, will)
cop(available, be)
case(public, for)
det(public, the)
obl(be, public)
mark(enjoy, to)
advcl(be, enjoy)
punct(note, .)
compound(interest, Water)
nsubj(one, interest)
cop(one, be)
root(ROOT, one)
case(factor, of)
det(factor, the)
advmod(valuable, most)
amod(factor, valuable)
nmod(one, factor)
nsubj(find, you)
aux(find, can)
acl:relcl(factor, find)
case(site, for)
det(site, a)
compound(site, recreation)
obl(find, site)
punct(one, .)
amod(planner, most)
compound(planner, park)
nsubj(look, planner)
parataxis(one, look)
case(frontage, to)
compound(frontage, water)
obl(look, frontage)
case(area, for)
amod(area, basic)
compound(area, park)
nmod(frontage, area)
punct(follow, .)
nsubj(follow, this)
parataxis(look, follow)
advmod(follow, naturally)
case(frontage, since)
obl(follow, frontage)
case(ocean, on)
det(ocean, a)
obl(follow, ocean)
punct(stream, ,)
conj(ocean, stream)
punct(provide, ,)
cc(lake, or)
conj(ocean, lake)
conj(follow, provide)
compound(value, scenic)
obj(provide, value)
cc(opportunity, and)
conj(value, opportunity)
case(activity, for)
det(activity, the)
advmod(popular, very)
amod(activity, popular)
compound(activity, recreation)
nmod(opportunity, activity)
case(bathing, of)
nmod(activity, bathing)
punct(fishing, ,)
conj(bathing, fishing)
punct(boat, ,)
conj(bathing, boat)
punct(sport, ,)
cc(sport, and)
amod(sport, other)
compound(sport, water)
conj(bathing, sport)
punct(one, . )
det(body, a)
nsubj(center, body)
case(water, of)
nmod(body, water)
cop(center, be)
advmod(center, usually)
det(center, the)
root(ROOT, center)
case(interest, of)
nmod(center, interest)
case(park, at)
nmod(interest, park)
nsubj(attract, which)
acl:relcl(interest, attract)
det(use, the)
amod(use, greatest)
compound(use, picnic)
cc(camp, and)
conj(picnic, camp)
obj(attract, use)
punct(center, .)
nsubj(cool, it)
advmod(cool, also)
root(ROOT, cool)
det(air, the)
obj(cool, air)
case(summer, in)
obl(cool, summer)
cc(nourish, and)
conj(cool, nourish)
det(tree, the)
obj(nourish, tree)
cc(life, and)
amod(life, wild)
conj(tree, life)
punct(cool, .)
det(amount, the)
nsubj(important, amount)
case(frontage, of)
compound(frontage, water)
nmod(amount, frontage)
punct(quantity, ,)
det(quantity, the)
conj(amount, quantity)
cc(quality, and)
conj(quantity, quality)
case(water, of)
det(water, the)
nmod(quantity, water)
punct(recreation, ,)
cc(recreation, and)
det(recreation, the)
conj(amount, recreation)
acl(recreation, afford)
case(it, by)
obl(afford, it)
cop(important, be)
root(ROOT, important)
punct(important, .)
det(frontage, a)
amod(frontage, restrict)
nsubj(crowded, frontage)
aux(crowded, may)
cop(crowded, be)
advmod(crowded, too)
parataxis(important, crowded)
det(area, a)
obj(crowded, area)
case(use, for)
amod(use, public)
nmod(area, use)
punct(important, .)
det(quantity, the)
nsubj(critical, quantity)
case(flow, of)
compound(flow, water)
nmod(quantity, flow)
aux(critical, may)
cop(critical, be)
root(ROOT, critical)
punct(critical, ;)
punct(critical, ;)
det(stream, a)
nsubj(become, stream)
cc(pond, or)
conj(stream, pond)
nsubj(attractive, which)
cop(attractive, be)
acl:relcl(stream, attractive)
case(springtime, in)
det(springtime, the)
obl(attractive, springtime)
aux(become, may)
conj(critical, become)
xcomp(become, stagnant)
cc(dry, or)
conj(stagnant, dry)
case(summer, in)
amod(summer, late)
obl(stagnant, summer)
punct(critical, .)
mark(reservoir, if)
det(site, the)
nsubj(reservoir, site)
cop(reservoir, be)
case(reservoir, on)
det(reservoir, a)
advcl(study, reservoir)
punct(study, ,)
det(level, the)
nsubj:pass(study, level)
case(water, of)
det(water, the)
nmod(level, water)
case(season, at)
amod(season, various)
nmod(level, season)
mark(affect, as)
nsubj(affect, it)
advcl(study, affect)
obj(affect, recreation)
aux(study, should)
aux:pass(study, be)
root(ROOT, study)
punct(study, .)
root(ROOT, check)
det(quality, the)
obj(check, quality)
case(water, of)
det(water, the)
nmod(quality, water)
punct(check, . )
det(stream, a)
nsubj(likely, stream)
nsubj(have, which)
acl:relcl(stream, have)
obj(have, all)
case(watersh, of)
nmod:poss(watersh, its)
nmod(all, watersh)
case(forest, within)
det(forest, a)
amod(forest, national)
nmod(all, forest)
cc(land, or)
amod(land, other)
conj(forest, land)
case(practice, under)
amod(practice, good)
compound(practice, conservation)
nmod(land, practice)
cop(likely, be)
advmod(likely, less)
root(ROOT, likely)
mark(affect, to)
aux:pass(affect, be)
xcomp(likely, affect)
case(pollution, by)
obl(affect, pollution)
case(passing, than)
nummod(passing, one)
obl(affect, passing)
case(log, through)
amod(log, unrestrict)
nmod(passing, log)
cc(area, or)
case(area, past)
det(area, a)
amod(area, industrial)
conj(log, area)
punct(likely, .)
amod(factor, other)
nsubj(affect, factor)
punct(factor, ,)
case(temperature, such)
fixed(such, as)
compound(temperature, water)
nmod(factor, temperature)
punct(depth, ,)
conj(temperature, depth)
case(water, of)
nmod(depth, water)
punct(life, ,)
det(life, the)
compound(life, fish)
conj(temperature, life)
nsubj(support, it)
acl:relcl(life, support)
punct(affect, ,)
compound(action, wave)
nsubj(affect, action)
punct(flooding, ,)
conj(action, flooding)
punct(etcetera, ,)
advmod(action, etcetera)
punct(affect, ,)
aux(affect, will)
root(ROOT, affect)
nmod:poss(value, its)
compound(value, recreation)
obj(affect, value)
punct(affect, .)
amod(feature, other)
amod(feature, natural)
nsubj(forest, feature)
nsubj(interest, which)
aux(interest, can)
cop(interest, be)
case(interest, of)
amod(interest, high)
acl:relcl(feature, interest)
cop(forest, be)
det(forest, the)
root(ROOT, forest)
punct(canyon, ,)
conj(forest, canyon)
punct(mountain, ,)
conj(forest, mountain)
punct(desert, ,)
conj(forest, desert)
punct(seacoast, ,)
conj(forest, seacoast)
punct(beach, ,)
conj(forest, beach)
punct(dune, ,)
compound(dune, sand)
conj(forest, dune)
punct(waterfall, ,)
conj(forest, waterfall)
punct(spring, ,)
conj(forest, spring)
punct(etcetera, ,)
conj(forest, etcetera)
case(which, with)
obl(bless, which)
det(area, the)
nsubj:pass(bless, area)
aux:pass(bless, be)
acl:relcl(forest, bless)
punct(forest, .)
advmod(park, just)
case(park, as)
det(park, the)
amod(park, national)
cc(state, and)
conj(national, state)
nsubj(place, park)
advcl(seek, place)
obj(place, emphasis)
case(feature, on)
nmod(emphasis, feature)
nsubj(significance, which)
cop(significance, be)
case(significance, of)
amod(significance, national)
cc(state, or)
conj(national, state)
acl:relcl(feature, significance)
punct(seek, ,)
nsubj(seek, county)
aux(seek, should)
root(ROOT, seek)
compound:prt(seek, out)
det(feature, these)
obj(seek, feature)
nsubj(distinctive, which)
cop(distinctive, be)
acl:relcl(feature, distinctive)
case(area, of)
nmod:poss(area, they)
obl(distinctive, area)
punct(seek, .)
mark(contain, although)
det(site, the)
nsubj(contain, site)
aux(contain, may)
advmod(contain, not)
advcl(be, contain)
det(feature, the)
obj(contain, feature)
nmod:npmod(feature, themselves)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(be, often)
nsubj(be, opportunity)
mark(include, to)
acl(opportunity, include)
obj(include, they)
case(interest, as)
amod(interest, additional)
obl(include, interest)
case(site, to)
det(site, the)
nmod(interest, site)
punct(be, .)
det(route, the)
nsubj(lead, route)
case(park, to)
det(park, the)
nmod(route, park)
aux(lead, may)
root(ROOT, lead)
obj(lead, people)
case(they, past)
obl(lead, they)
cc(display, or)
conj(lead, display)
obj(display, view)
case(they, of)
nmod(view, they)
punct(lead, . )
det(group, a)
nsubj:pass(feature, group)
case(tree, of)
amod(tree, native)
nmod(group, tree)
cc(plant, or)
conj(tree, plant)
nsubj(outstanding, which)
cop(outstanding, be)
acl:relcl(group, outstanding)
case(county, in)
det(county, a)
amod(county, particular)
obl(outstanding, county)
aux(feature, can)
aux:pass(feature, be)
root(ROOT, feature)
case(site, at)
det(site, the)
obl(feature, site)
punct(feature, .)
det(fish, the)
nsubj(interest, fish)
punct(animal, ,)
conj(fish, animal)
punct(bird, ,)
cc(bird, and)
conj(fish, bird)
nsubj:pass(find, which)
aux(find, may)
aux:pass(find, be)
acl:relcl(fish, find)
case(site, at)
det(site, the)
obl(find, site)
cop(interest, be)
det(interest, another)
root(ROOT, interest)
punct(interest, .)
compound(interest, fishing)
compound(call, interest)
appos(interest, call)
case(check, for)
det(check, a)
nmod(call, check)
case(species, of)
det(species, the)
nmod(check, species)
acl(species, find)
punct(quantity, ,)
obj(find, quantity)
cc(size, and)
conj(quantity, size)
punct(season, ,)
det(season, the)
conj(quantity, season)
nsubj(available, they)
cop(available, be)
acl:relcl(season, available)
punct(program, ,)
cc(program, and)
det(program, the)
compound(program, stock)
conj(available, program)
case(commission, of)
det(commission, the)
compound(commission, fish)
nmod(program, commission)
punct(interest, .)
nsubj(present, animal)
aux(present, may)
cop(present, be)
root(ROOT, present)
case(site, at)
det(site, the)
obl(present, site)
cc(provide, or)
conj(present, provide)
obj(provide, hunt)
case(area, in)
amod(area, nearby)
obl(provide, area)
punct(present, .)
det(site, the)
nsubj(one, site)
aux(one, may)
cop(one, be)
case(one, on)
root(ROOT, one)
case(flyways, of)
det(flyways, the)
amod(flyways, major)
nmod(one, flyways)
case(bird, of)
amod(bird, migratory)
nmod(flyways, bird)
cc(have, or)
conj(one, have)
nsubj(life, it)
cop(life, be)
amod(life, own)
compound(life, resident)
compound(life, bird)
ccomp(have, life)
punct(one, .)
nsubj(add, clam)
punct(crab, ,)
conj(clam, crab)
punct(life, ,)
cc(life, and)
amod(life, other)
compound(life, marine)
conj(clam, life)
aux(add, may)
root(ROOT, add)
obj(add, interest)
case(area, at)
amod(area, coastal)
obl(add, area)
punct(add, .)
det(area, each)
nsubj(have, area)
root(ROOT, have)
nmod:poss(interest, its)
amod(interest, own)
amod(interest, historical)
obj(have, interest)
case(which, with)
obl(do, which)
nsubj:pass(do, much)
aux(do, can)
aux:pass(do, be)
acl:relcl(interest, do)
punct(have, .)
compound(visitor, Park)
nsubj(eager, visitor)
cop(eager, be)
advmod(eager, always)
root(ROOT, eager)
mark(learn, to)
xcomp(eager, learn)
obj(learn, more)
case(area, about)
det(area, the)
obl(more, area)
nsubj(in, they)
cop(in, be)
acl:relcl(area, in)
punct(tell, .)
det(sign, the)
amod(sign, historical)
nsubj(tell, sign)
parataxis(eager, tell)
nmod:poss(story, its)
obj(tell, story)
punct(get, ,)
cc(get, but)
nsubj(get, nothing)
conj(tell, get)
obj(get, interest)
advmod(get, across)
cc(some, as)
fixed(as, well)
fixed(as, as)
conj(interest, some)
case(item, of)
det(item, the)
amod(item, original)
amod(item, historical)
nmod(some, item)
cc(place, or)
conj(item, place)
nmod:npmod(item, themselves)
nsubj(have, which)
advmod(have, still)
acl:relcl(item, have)
det(character, the)
obj(have, character)
case(period, of)
det(period, the)
nmod(character, period)
acl(period, cover)
punct(eager, .)
nsubj:pass(take, notice)
aux(take, should)
aux:pass(take, be)
root(ROOT, take)
case(formation, of)
amod(formation, unusual)
compound(formation, rock)
obl(take, formation)
punct(deposit, ,)
conj(formation, deposit)
punct(shape, ,)
cc(shape, or)
conj(formation, shape)
case(crust, of)
det(earth, the)
nmod:poss(crust, earth)
case(earth, 's)
nmod(shape, crust)
case(region, in)
nmod:poss(region, you)
nmod(crust, region)
punct(take, .)
nsubj(add, those)
nsubj(tell, which)
acl:relcl(those, tell)
det(story, a)
obj(tell, story)
case(formation, of)
det(earth, the)
nmod:poss(formation, earth)
case(earth, 's)
nmod(story, formation)
case(area, in)
det(area, each)
nmod(formation, area)
aux(add, can)
root(ROOT, add)
amod(interest, geological)
obj(add, interest)
case(site, to)
det(site, the)
compound(site, recreation)
nmod(interest, site)
punct(add, .)
det(shipwreck, a)
amod(shipwreck, old)
nsubj(interest, shipwreck)
punct(shipwreck, ,)
det(dam, a)
amod(dam, high)
appos(shipwreck, dam)
punct(shipwreck, ,)
det(bridge, a)
amod(bridge, old)
amod(bridge, cover)
appos(shipwreck, bridge)
punct(place, ,)
det(place, a)
conj(shipwreck, place)
mark(find, to)
acl(place, find)
obj(find, agate)
cc(stone, or)
amod(stone, other)
amod(stone, semi-precious)
conj(agate, stone)
cc(place, or)
det(place, a)
conj(agate, place)
mark(pan, to)
acl(place, pan)
obj(pan, gold)
punct(interest, ,)
nsubj(interest, etcetera)
aux(interest, may)
cop(interest, be)
case(interest, of)
root(ROOT, interest)
punct(interest, .)
det(area, some)
nsubj(provide, area)
aux(provide, may)
root(ROOT, provide)
amod(value, archeological)
obj(provide, value)
case(site, such)
fixed(such, as)
amod(site, ancient)
amod(site, indian)
compound(site, village)
nmod(value, site)
cc(area, or)
compound(area, hunt)
conj(site, area)
punct(cave, ,)
conj(site, cave)
punct(artifact, ,)
conj(cave, artifact)
punct(etcetera, ,)
conj(site, etcetera)
punct(provide, .)
advmod(well, how)
advmod(develop, well)
aux(develop, can)
det(site, the)
nsubj:pass(develop, site)
aux:pass(develop, be)
root(ROOT, develop)
punct(develop, ?)
punct(develop, ?)
root(ROOT, look)
case(feature, at)
det(feature, the)
amod(feature, physical)
obl(look, feature)
case(land, of)
det(land, the)
nmod(feature, land)
mark(determine, to)
advcl(look, determine)
advmod(desirable, how)
ccomp(determine, desirable)
nsubj(desirable, it)
cop(desirable, be)
case(use, for)
obl(desirable, use)
punct(look, ,)
nsubj:pass(do, what)
aux(do, can)
aux:pass(do, be)
parataxis(desirable, do)
mark(correct, to)
advcl(do, correct)
det(fault, the)
obj(correct, fault)
punct(cost, ,)
cc(what, and)
conj(fault, what)
nsubj(cost, it)
aux(cost, will)
acl:relcl(what, cost)
mark(make, to)
xcomp(cost, make)
det(area, the)
obj(make, area)
xcomp(make, meet)
nmod:poss(need, you)
obj(meet, need)
case(comparison, in)
obl(meet, comparison)
case(site, to)
amod(site, other)
nmod(comparison, site)
punct(look, .)
amod(thing, many)
nsubj(need, thing)
root(ROOT, need)
mark(check, to)
aux:pass(check, be)
xcomp(need, check)
punct(size, :)
appos(check, size)
cc(shape, and)
conj(size, shape)
punct(need, --)
det(size, the)
nsubj(factor, size)
case(area, of)
det(area, the)
nmod(size, area)
advmod(area, alone)
aux(factor, can)
cop(factor, be)
det(factor, a)
compound(factor, determine)
root(ROOT, factor)
punct(factor, .)
det(area, a)
nsubj(small, area)
aux(small, may)
cop(small, be)
advmod(small, too)
root(ROOT, small)
case(need, for)
det(need, the)
obl(small, need)
case(project, of)
det(project, the)
nmod(need, project)
punct(small, .)
nsubj(large, Areas)
aux(large, should)
cop(large, be)
parataxis(small, large)
advmod(large, enough)
mark(include, to)
advcl(large, include)
det(attraction, the)
obj(include, attraction)
punct(have, ,)
conj(include, have)
amod(space, ample)
obj(have, space)
case(use, for)
det(use, the)
nmod(space, use)
case(facility, of)
nmod(use, facility)
acl(facility, need)
punct(have, ,)
cc(have, and)
conj(need, have)
obj(have, room)
case(edge, around)
det(edge, the)
nmod(room, edge)
mark(protect, to)
advcl(have, protect)
det(value, the)
obj(protect, value)
case(area, of)
det(area, the)
nmod(value, area)
case(encroachment, from)
nmod(value, encroachment)
case(development, by)
amod(development, private)
nmod(encroachment, development)
punct(small, .)
nsubj(practice, acreage)
case(excess, in)
nmod(acreage, excess)
case(minimum, of)
det(minimum, the)
nmod(excess, minimum)
cop(practice, be)
amod(practice, good)
root(ROOT, practice)
mark(large, as)
compound(area, recreation)
nsubj(large, area)
cop(large, be)
advmod(large, never)
advmod(large, too)
advcl(practice, large)
case(future, for)
det(future, the)
obl(large, future)
cc(economical, and)
nsubj(economical, it)
cop(economical, be)
advmod(economical, often)
advmod(economical, more)
conj(practice, economical)
mark(operate, to)
advcl(economical, operate)
nummod(area, one)
amod(area, large)
obj(operate, area)
case(one, than)
amod(one, several)
amod(one, small)
obl(operate, one)
punct(practice, .)
nsubj(related, Shape)
case(area, of)
det(area, the)
nmod(Shape, area)
cop(related, be)
advmod(related, also)
root(ROOT, related)
case(attraction, to)
det(attraction, the)
compound(attraction, use)
obl(related, attraction)
cc(need, and)
conj(attraction, need)
case(development, of)
det(development, the)
nmod(need, development)
punct(related, . )
det(area, a)
amod(area, large)
amod(area, picnic)
nsubj(efficient, area)
cc(development, or)
compound(development, camp)
conj(area, development)
cop(efficient, be)
advmod(efficient, most)
root(ROOT, efficient)
case(shape, in)
obl(efficient, shape)
case(square, as)
det(square, a)
obl(efficient, square)
cc(rectangle, or)
conj(square, rectangle)
amod(foot, several)
nummod(foot, hundred)
nmod:npmod(square, foot)
case(width, in)
obl(efficient, width)
case(preference, in)
obl(efficient, preference)
case(area, to)
det(area, a)
amod(area, long)
amod(area, narrow)
nmod(preference, area)
advmod(wide, less)
fixed(less, than)
compound(hundred, one)
nummod(foot, hundred)
obl:npmod(wide, foot)
advmod(preference, wide)
punct(efficient, .)
nsubj(true, this)
cop(true, be)
root(ROOT, true)
case(savings, because)
fixed(because, of)
obl(true, savings)
case(line, in)
compound(line, utility)
nmod(savings, line)
cc(fact, and)
det(fact, the)
conj(true, fact)
mark(have, that)
nmod:poss(building, you)
nsubj(have, building)
acl(fact, have)
det(radius, a)
amod(radius, useful)
obj(have, radius)
amod(radius, equal)
case(direction, in)
det(direction, all)
obl(equal, direction)
punct(true, .)
advmod(practical, however)
punct(practical, ,)
det(strip, a)
amod(strip, narrow)
nsubj(practical, strip)
aux(practical, may)
cop(practical, be)
advmod(practical, very)
root(ROOT, practical)
case(development, for)
amod(development, small)
obl(practical, development)
punct(provide, ,)
cc(provide, or)
mark(provide, to)
conj(practical, provide)
amod(frontage, additional)
compound(frontage, stream)
obj(provide, frontage)
case(trail, for)
det(fisherman, a)
nmod:poss(trail, fisherman)
case(fisherman, 's)
obl(provide, trail)
punct(include, ,)
cc(include, or)
conj(provide, include)
compound(strip, scenic)
obj(include, strip)
case(unit, within)
det(unit, the)
compound(unit, park)
obl(include, unit)
punct(area, .)
amod(area, adjoin)
obl(include, area)
punct(practical, --)
det(value, the)
nsubj:pass(affect, value)
case(site, of)
det(site, the)
nmod(value, site)
aux(affect, may)
aux:pass(affect, be)
root(ROOT, affect)
case(appearance, by)
det(appearance, the)
obl(affect, appearance)
case(land, of)
det(land, the)
amod(land, adjoin)
nmod(appearance, land)
punct(ownership, ,)
conj(land, ownership)
cc(use, and)
conj(land, use)
case(land, of)
det(land, the)
nmod(use, land)
punct(utility, ,)
cc(utility, and)
det(utility, the)
conj(land, utility)
amod(utility, available)
advmod(available, there)
punct(affect, .)
case(instance, for)
obl(desirable, instance)
punct(desirable, ,)
det(site, a)
nsubj(desirable, site)
acl(site, adjoin)
amod(land, other)
advmod(own, publicly)
amod(land, own)
obj(adjoin, land)
punct(land, ,)
case(forest, such)
fixed(such, as)
det(forest, a)
amod(forest, national)
nmod(land, forest)
cc(road, or)
det(road, a)
amod(road, public)
conj(forest, road)
punct(desirable, ,)
aux(desirable, may)
cop(desirable, be)
root(ROOT, desirable)
punct(desirable, ,)
mark(might, whereas)
det(site, a)
nsubj(might, site)
case(plant, next)
case(plant, to)
det(plant, a)
amod(plant, industrial)
nmod(site, plant)
advcl(desirable, might)
advmod(might, not)
punct(desirable, .)
det(utility, the)
nsubj(provide, utility)
amod(utility, available)
advmod(available, nearby)
aux(provide, may)
root(ROOT, provide)
det(savings, a)
obj(provide, savings)
case(cost, in)
det(cost, the)
nmod(savings, cost)
mark(extend, of)
acl(cost, extend)
obj(extend, electricity)
cc(water, or)
conj(electricity, water)
case(site, to)
det(site, the)
obl(extend, site)
punct(topography, .)
parataxis(provide, topography)
punct(provide, --)
nsubj(important, topography)
cop(important, be)
advmod(important, very)
root(ROOT, important)
punct(important, .)
root(ROOT, check)
det(elevation, the)
obj(check, elevation)
case(ground, of)
det(ground, the)
nmod(elevation, ground)
punct(degree, ,)
conj(ground, degree)
cc(direction, and)
conj(degree, direction)
case(slope, of)
nmod(degree, slope)
punct(drainage, ,)
conj(slope, drainage)
punct(outcrop, ,)
compound(outcrop, rock)
conj(slope, outcrop)
punct(type, ,)
compound(type, topsoil)
conj(slope, type)
cc(quality, and)
conj(slope, quality)
punct(subsoil, ,)
cc(subsoil, as)
fixed(as, well)
fixed(as, as)
conj(slope, subsoil)
punct(check, .)
advmod(level, nearly)
compound(area, level)
nsubj:pass(require, area)
aux:pass(require, be)
root(ROOT, require)
case(area, for)
compound(area, parking)
obl(require, area)
punct(beach, ,)
conj(area, beach)
punct(area, ,)
compound(area, camp)
conj(area, area)
punct(ballfield, ,)
conj(area, ballfield)
punct(etcetera, ,)
conj(area, etcetera)
punct(Determine, .)
parataxis(require, Determine)
advmod(much, how)
amod(topography, much)
nsubj(limit, topography)
ccomp(Determine, limit)
amod(area, useful)
obj(limit, area)
cc(what, or)
conj(limit, what)
det(cost, the)
nsubj(be, cost)
case(earth, of)
nmod(cost, earth)
acl(cost, move)
cc(grade, or)
conj(move, grade)
aux(be, might)
acl:relcl(what, be)
punct(require, .)
root(ROOT, Water)
punct(Water, --)
case(addition, in)
obl(need, addition)
case(interest, to)
nmod:poss(interest, its)
compound(interest, recreation)
nmod(addition, interest)
punct(need, ,)
nsubj:pass(need, water)
aux:pass(need, be)
root(ROOT, need)
case(drinking, for)
obl(need, drinking)
punct(sanitation, ,)
conj(drinking, sanitation)
punct(irrigation, ,)
cc(irrigation, and)
conj(drinking, irrigation)
punct(need, .)
det(quantity, the)
nsubj(factor, quantity)
cc(quality, and)
conj(quantity, quality)
case(source, of)
compound(source, water)
nmod(quantity, source)
cop(factor, be)
advmod(factor, often)
det(factor, a)
amod(factor, big)
root(ROOT, factor)
case(selection, in)
compound(selection, site)
nmod(factor, selection)
punct(factor, .)
det(area, the)
nsubj(provide, area)
aux(provide, may)
root(ROOT, provide)
amod(spring, good)
obj(provide, spring)
cc(opportunity, or)
conj(spring, opportunity)
case(near, for)
det(near, a)
advmod(near, well)
cc(be, or)
cop(near, be)
obl(provide, near)
case(line, to)
amod(line, municipal)
compound(line, water)
obl(near, line)
punct(provide, .)
root(ROOT, Figure)
det(cost, the)
obj(Figure, cost)
mark(provide, of)
acl(cost, provide)
obj(provide, water)
case(area, to)
det(area, the)
compound(area, use)
obl(provide, area)
punct(Figure, .)
root(ROOT, plant)
punct(plant, --)
det(growth, the)
amod(growth, exist)
compound(growth, plant)
nsubj(call, growth)
root(ROOT, call)
case(check, for)
amod(check, thorough)
obl(call, check)
punct(call, .)
root(ROOT, look)
case(tree, at)
det(tree, the)
obl(look, tree)
case(size, as)
fixed(as, to)
obl(look, size)
cc(interest, and)
conj(size, interest)
punct(size, ,)
det(amount, the)
conj(size, amount)
case(shade, of)
nmod(amount, shade)
nsubj(provide, they)
acl:relcl(amount, provide)
punct(healthy, ,)
advmod(healthy, how)
ccomp(provide, healthy)
nsubj(healthy, they)
cop(healthy, be)
punct(problem, ,)
det(problem, the)
conj(healthy, problem)
case(maintenance, of)
nmod(problem, maintenance)
punct(hazard, ,)
compound(hazard, fire)
conj(maintenance, hazard)
punct(throw, ,)
compound(throw, wind)
conj(maintenance, throw)
punct(etcetera, ,)
conj(maintenance, etcetera)
punct(look, .)
det(area, a)
nsubj:pass(log, area)
aux(log, may)
aux(log, have)
aux:pass(log, be)
advmod(log, partially)
root(ROOT, log)
cc(require, and)
conj(log, require)
obj(require, removal)
case(stump, of)
nmod(removal, stump)
cc(up, or)
amod(up, clean)
punct(up, -)
conj(stump, up)
punct(log, .)
det(shrub, some)
nsubj(value, shrub)
aux(value, may)
cop(value, be)
case(value, of)
amod(value, good)
compound(value, landscaping)
root(ROOT, value)
punct(value, ,)
amod(area, other)
nsubj(need, area)
case(brush, of)
nmod(area, brush)
aux(need, may)
parataxis(value, need)
mark(clear, to)
aux:pass(clear, be)
xcomp(need, clear)
punct(value, .)
det(extent, the)
nsubj:pass(note, extent)
cc(location, and)
conj(extent, location)
case(area, of)
amod(area, open)
nmod(extent, area)
aux:pass(note, be)
root(ROOT, note)
punct(note, .)
root(ROOT, exposure)
punct(exposure, --)
advmod(much, how)
advmod(rain, much)
aux(rain, will)
nsubj(rain, wind)
punct(rain, ,)
root(ROOT, rain)
punct(sun, ,)
conj(rain, sun)
punct(affect, ,)
cc(affect, and)
nsubj(affect, temperature)
conj(rain, affect)
det(use, the)
obj(affect, use)
punct(rain, ?)
punct(rain, ?)
det(area, a)
nsubj(desirable, area)
acl(area, shelter)
case(wind, from)
amod(wind, strong)
obl(shelter, wind)
aux(desirable, may)
cop(desirable, be)
advmod(desirable, highly)
root(ROOT, desirable)
case(use, for)
compound(use, recreation)
obl(desirable, use)
punct(desirable, .)
det(direction, the)
nsubj:pass(note, direction)
punct(velocity, ,)
conj(direction, velocity)
punct(season, ,)
cc(season, and)
conj(direction, season)
case(wind, of)
det(wind, these)
nmod(season, wind)
aux(note, should)
aux:pass(note, be)
root(ROOT, note)
mark(affect, as)
fixed(as, to)
advmod(affect, just)
advmod(affect, how)
nsubj(affect, they)
aux(affect, will)
advcl(note, affect)
det(use, the)
compound(use, recreation)
obj(affect, use)
cc(maintenance, and)
nmod:poss(maintenance, you)
conj(use, maintenance)
cc(operation, and)
conj(maintenance, operation)
case(area, of)
det(area, the)
nmod(operation, area)
punct(note, .)
nsubj(call, lack)
case(rainfall, of)
nmod(lack, rainfall)
cc(temperature, and)
amod(temperature, extreme)
conj(rainfall, temperature)
aux(call, may)
root(ROOT, call)
case(development, for)
det(development, the)
obl(call, development)
case(shade, of)
nmod(development, shade)
cc(irrigation, and)
conj(shade, irrigation)
case(site, of)
det(site, a)
nmod(shade, site)
mark(make, to)
acl(site, make)
obj(make, it)
xcomp(make, useable)
punct(call, .)
advmod(have, sometimes)
punct(have, ,)
nsubj(have, you)
root(ROOT, have)
det(choice, a)
obj(have, choice)
case(exposure, of)
nmod(choice, exposure)
case(site, for)
nmod(exposure, site)
advmod(provide, where)
det(topography, the)
nsubj(provide, topography)
cc(tree, or)
conj(topography, tree)
case(area, of)
det(area, the)
nmod(topography, area)
aux(provide, will)
acl:relcl(site, provide)
compound(shade, afternoon)
obj(provide, shade)
punct(sun, ,)
compound(sun, morning)
conj(shade, sun)
punct(desirable, ,)
cc(desirable, or)
nsubj(desirable, whatever)
aux(desirable, may)
cop(desirable, be)
advmod(desirable, most)
conj(provide, desirable)
case(use, for)
det(use, the)
obl(desirable, use)
acl(use, intend)
punct(have, .)
root(ROOT, improvement)
punct(improvement, --)
det(area, some)
nsubj:pass(improve, area)
aux(improve, may)
advmod(improve, already)
aux(improve, have)
aux:pass(improve, be)
root(ROOT, improve)
cc(contain, and)
conj(improve, contain)
obj(contain, building)
punct(road, ,)
conj(building, road)
punct(utility, ,)
conj(building, utility)
punct(land, ,)
amod(land, clear)
conj(building, land)
punct(land, ,)
conj(building, etcetera)
nsubj(raise, which)
aux(raise, may)
acl:relcl(building, raise)
det(cost, the)
obj(raise, cost)
case(site, of)
det(site, the)
nmod(cost, site)
punct(improve, .)
nmod:poss(invitation, you)
nsubj:pass(accept, invitation)
mark(write, to)
acl(invitation, write)
case(serge, about)
obl(write, serge)
flat(serge, Prokofieff)
mark(honor, to)
advcl(write, honor)
nmod:poss(Anniversary, he)
compound(Anniversary, 70th)
obj(honor, Anniversary)
case(issue, for)
det(issue, the)
compound(issue, April)
obl(honor, issue)
case(Sovietskaya, of)
nmod(issue, Sovietskaya)
flat(Sovietskaya, Muzyka)
aux:pass(accept, be)
root(ROOT, accept)
case(pleasure, with)
obl(accept, pleasure)
punct(accept, ,)
mark(admire, because)
nsubj(admire, I)
advcl(accept, admire)
det(music, the)
obj(admire, music)
case(Prokofieff, of)
nmod(music, Prokofieff)
punct(admire, ;)
punct(admire, ;)
cc(purpose, and)
case(purpose, with)
amod(purpose, sober)
obl(personify, purpose)
punct(personify, ,)
mark(personify, because)
det(development, the)
nsubj(personify, development)
case(Prokofieff, of)
nmod(development, Prokofieff)
advcl(admire, personify)
punct(personify, ,)
case(way, in)
amod(way, many)
nmod(course, way)
punct(course, ,)
det(course, the)
obj(personify, course)
case(music, of)
nmod(course, music)
case(union, in)
det(union, the)
nmod(course, union)
case(republic, of)
compound(republic, Soviet)
compound(republic, socialist)
nmod(union, republic)
punct(accept, .)
det(serge, the)
nsubj(gay, serge)
flat(serge, Prokofieff)
obj(know, whom)
nsubj(know, we)
acl:relcl(serge, know)
case(States, in)
det(States, the)
compound(States, United)
obl(know, States)
case(America, of)
nmod(States, America)
cop(gay, be)
root(ROOT, gay)
punct(witty, ,)
conj(gay, witty)
punct(mercurial, ,)
conj(gay, mercurial)
punct(full, ,)
conj(gay, full)
case(prank, of)
obl(full, prank)
cc(bonheur, and)
conj(prank, bonheur)
punct(prank, --)
cc(capable, and)
advmod(capable, very)
conj(gay, capable)
case(musician, as)
det(musician, a)
amod(musician, professional)
obl(capable, musician)
punct(gay, .)
det(quality, these)
nsubj(endear, quality)
root(ROOT, endear)
obj(endear, he)
case(musician, to)
cc:preconj(musician, both)
det(musician, the)
obl(endear, musician)
cc(monde, and)
det(monde, the)
amod(economic, social)
punct(economic, -)
amod(monde, economic)
compound(monde, haute)
conj(musician, monde)
nsubj(support, which)
acl:relcl(monde, support)
det(world, the)
compound(world, concert)
obj(support, world)
case(War, of)
det(War, the)
amod(War, post)
compound(War, -World)
nmod(world, War)
nummod(War, 1)
punct(War, ,)
appos(War, era)
punct(era, .)
nmod:poss(outlook, Prokofieff)
case(Prokofieff, 's)
appos(world, outlook)
mark(brilliant, as)
det(conductor, a)
compound(conductor, composer)
punct(conductor, -)
compound(conductor, pianist)
punct(conductor, -)
nsubj(brilliant, conductor)
case(America, in)
nmod(conductor, America)
cop(brilliant, be)
punct(brilliant, ,)
advmod(brilliant, indeed)
punct(brilliant, ,)
parataxis(outlook, brilliant)
punct(endear, .)
nmod:poss(Symphony, Prokofieff)
case(Prokofieff, 's)
compound(Symphony, classical)
nsubj:pass(hail, Symphony)
aux:pass(hail, be)
root(ROOT, hail)
case(work, as)
det(work, a)
amod(work, ingenious)
obl(hail, work)
case(musician, from)
det(musician, a)
advmod(gift, naturally)
amod(musician, gift)
cc(train, and)
advmod(train, well)
punct(train, -)
amod(musician, train)
nmod(work, musician)
advmod(twenty, still)
case(twenty, in)
nmod:poss(twenty, he)
nmod(musician, twenty)
punct(hail, .)
case(Traditionalists, to)
det(Traditionalists, the)
obl(satire, Traditionalists)
punct(satire, ,)
nsubj(satire, it)
cop(satire, be)
det(satire, a)
amod(satire, brilliant)
root(ROOT, satire)
case(modernism, on)
nmod(satire, modernism)
punct(satire, ;)
punct(satire, ;)
case(Classicists, to)
det(Classicists, the)
compound(Classicists, Neo)
punct(Classicists, -)
obl(challenge, Classicists)
punct(challenge, ,)
nsubj(challenge, it)
cop(challenge, be)
det(challenge, a)
parataxis(satire, challenge)
case(world, to)
det(world, the)
amod(world, pre-war)
nmod(challenge, world)
punct(satire, .)
nsubj(stylization, what)
cop(what, be)
nsubj(Prokofieff, it)
case(Prokofieff, to)
obl(what, Prokofieff)
punct(Prokofieff, ?)
punct(stylization, ?)
det(stylization, a)
compound(stylization, tongue)
punct(tongue, -)
case(cheek, in)
punct(cheek, -)
nmod(tongue, cheek)
root(ROOT, stylization)
case(idea, of)
amod(century, 18th)
punct(century, -)
compound(idea, century)
nmod(stylization, idea)
punct(stylization, ;)
punct(balloon, ;)
det(balloon, a)
compound(balloon, trial)
appos(stylization, balloon)
mark(test, to)
acl(balloon, test)
det(climate, the)
amod(climate, aesthetic)
obj(test, climate)
case(time, of)
det(time, the)
nmod(climate, time)
punct(balloon, ;)
punct(resistance, ;)
det(resistance, a)
amod(piece, brilliant)
compound(resistance, piece)
compound(resistance, de)
parataxis(balloon, resistance)
punct(resistance, ?)
punct(resistance, ?)
advmod(star, certainly)
nmod:poss(composer, its)
nsubj(star, composer)
cop(star, be)
det(star, a)
amod(star, ascend)
root(ROOT, star)
case(horizon, on)
det(horizon, a)
amod(horizon, new)
compound(horizon, world)
nmod(star, horizon)
punct(star, . )
nsubj(hear, I)
root(ROOT, hear)
det(Symphony, the)
compound(Symphony, classical)
obj(hear, Symphony)
case(time, for)
det(time, the)
amod(time, first)
obl(hear, time)
mark(conduct, when)
nsubj(conduct, Koussevitzky)
advcl(hear, conduct)
obj(conduct, it)
case(Paris, in)
obl(conduct, Paris)
case(1927, in)
obl(conduct, 1927)
punct(hear, .)
det(Paris, all)
amod(Paris, musical)
nsubj(there, Paris)
cop(there, be)
root(ROOT, there)
punct(there, .)
det(musician, some)
nsubj(enthusiastic, musician)
cop(enthusiastic, be)
root(ROOT, enthusiastic)
punct(enthusiastic, ,)
nsubj(skeptical, some)
parataxis(enthusiastic, skeptical)
punct(enthusiastic, . )
nsubj(one, I)
nsubj(one, myself)
cop(one, be)
root(ROOT, one)
case(skeptic, of)
det(skeptic, the)
nmod(one, skeptic)
punct(ago, ()
nummod(year, 35)
obl:npmod(ago, year)
advmod(one, ago)
punct(ago, ))
punct(one, . )
nsubj(remember, I)
root(ROOT, remember)
obj(remember, Ernest)
flat(Ernest, Bloch)
case(foyer, in)
det(foyer, the)
obl(remember, foyer)
punct(remember, ,)
advcl(remember, shout)
case(voice, in)
nmod:poss(voice, he)
amod(pitch, high)
punct(pitch, -)
amod(voice, pitch)
obl(shout, voice)
punct(remember, :)
punct(remember, ``)
nsubj(force, it)
aux(force, may)
cop(force, be)
det(force, a)
compound(force, tour)
compound(force, de)
root(ROOT, force)
punct(force, ,)
case(mon, may)
nmod(force, mon)
vocative(take, dieu)
punct(take, ,)
aux(take, can)
nsubj(take, anyone)
root(ROOT, take)
det(music, this)
obj(take, music)
advmod(take, seriously)
punct(take, '')
punct(take, ?)
punct(take, ?)
det(answer, the)
nsubj(be, answer)
root(ROOT, be)
punct(be, ,)
punct(be, ``)
root(ROOT, yes)
punct(yes, '')
punct(yes, !)
punct(yes, !)
advmod(take, certainly)
punct(take, ,)
nsubj(take, America)
root(ROOT, take)
obj(take, Prokofieff)
cc(Symphony, and)
nmod:poss(Symphony, he)
compound(Symphony, classical)
conj(Prokofieff, Symphony)
advmod(take, seriously)
punct(deal, ,)
cc(deal, and)
case(deal, with)
det(deal, a)
amod(deal, good)
conj(take, deal)
case(pleasure, of)
nmod(deal, pleasure)
punct(take, .)
nmod:poss(friend, he)
obl:npmod(long, life)
punct(long, -)
amod(friend, long)
nsubj(give, friend)
punct(friend, ,)
appos(friend, serge)
flat(serge, Koussevitzky)
punct(give, ,)
root(ROOT, give)
advmod(give, unreservedly)
case(praise, of)
nmod:poss(praise, he)
obl(give, praise)
cc(performance, and)
amod(performance, brilliant)
conj(praise, performance)
case(Boston, in)
nmod(performance, Boston)
punct(York, ,)
compound(York, New)
conj(Boston, York)
punct(Washington, ,)
cc(Washington, and)
conj(Boston, Washington)
punct(Washington, ,)
appos(Washington, D.C.)
punct(give, ,)
punct(add, ,)
case(which, to)
obl(add, which)
nsubj(add, he)
acl:relcl(Washington, add)
obj(add, broadcastings)
cc(recording, and)
conj(broadcastings, recording)
case(nation, for)
det(nation, the)
amod(nation, whole)
obl(add, nation)
punct(host, .)
nsubj(host, Chicago)
cop(host, be)
advmod(host, also)
det(host, a)
amod(host, welcome)
parataxis(give, host)
punct(host, :)
advmod(host, there)
punct(host, ,)
case(1921, in)
obl(conduct, 1921)
punct(conduct, ,)
nsubj(conduct, Prokofieff)
parataxis(host, conduct)
det(premiere, the)
compound(premiere, world)
obj(conduct, premiere)
case(Love, of)
det(Love, the)
nmod(premiere, Love)
case(orange, for)
compound(orange, Three)
nmod(Love, orange)
punct(play, ,)
cc(play, and)
conj(conduct, play)
det(performance, the)
amod(performance, first)
obj(play, performance)
case(Concerto, of)
nmod:poss(Concerto, he)
amod(Concerto, third)
compound(Concerto, Piano)
nmod(performance, Concerto)
punct(give, .)
punct(give, ``)
compound(Sam, uncle)
nsubj(uncle, Sam)
punct(Sam, '')
cop(uncle, be)
punct(uncle, ,)
advmod(uncle, indeed)
punct(uncle, ,)
det(uncle, a)
amod(uncle, rich)
root(ROOT, uncle)
case(Prokofieff, to)
nmod(uncle, Prokofieff)
punct(uncle, ,)
case(year, in)
det(year, those)
amod(year, opulent)
punct(war, ,)
compound(war, post)
punct(war, -)
compound(year, war)
compound(year, victory)
nmod(uncle, year)
case(peace, of)
nmod(year, peace)
cc(prosperity, and)
conj(peace, prosperity)
punct(speculation, ,)
amod(speculation, bold)
conj(peace, speculation)
cc(extravaganzas, and)
conj(peace, extravaganzas)
punct(enjoyment, ,)
conj(peace, enjoyment)
cc(pleasure, and)
conj(peace, pleasure)
punct(uncle, :)
punct(uncle, ``)
det(Twenties, the)
amod(Twenties, golden)
nsubj(attend, Twenties)
punct(Twenties, '')
punct(Twenties, .)
nsubj(attend, we)
root(ROOT, attend)
det(premiere, the)
obj(attend, premiere)
case(concerto, of)
nmod:poss(concerto, he)
nmod(premiere, concerto)
punct(symphony, ,)
conj(concerto, symphony)
punct(suite, ,)
cc(suite, and)
conj(concerto, suite)
punct(attend, ;)
punct(attend, ;)
nsubj(study, we)
parataxis(attend, study)
punct(teach, ,)
conj(study, teach)
punct(perform, ,)
cc(perform, and)
conj(study, perform)
nmod:poss(sonata, he)
compound(sonata, piano)
obj(perform, sonata)
punct(music, ,)
compound(music, chamber)
conj(sonata, music)
punct(gavott, ,)
conj(sonata, gavott)
punct(march, ,)
cc(march, and)
conj(sonata, march)
punct(buy, ;)
punct(attend, ;)
nsubj(buy, we)
parataxis(attend, buy)
nmod:poss(record, he)
obj(buy, record)
cc(play, and)
conj(buy, play)
obj(play, they)
case(school, in)
nmod:poss(school, we)
obl(play, school)
cc(university, and)
conj(school, university)
punct(attend, .)
nsubj(agree, we)
advmod(agree, unanimously)
root(ROOT, agree)
mark(win, that)
nsubj(win, Prokofieff)
aux(win, have)
ccomp(agree, win)
nmod:poss(rights, he)
obj(win, rights)
case(citizen, as)
det(citizen, a)
compound(citizen, world)
obl(win, citizen)
case(rank, to)
det(rank, the)
amod(rank, first)
obl(win, rank)
case(composer, of)
compound(Century, Twentieth)
punct(Century, -)
compound(composer, Century)
nmod(rank, composer)
punct(agree, .)
advmod(influence, nevertheless)
punct(influence, ,)
nsubj:pass(influence, Prokofieff)
aux:pass(influence, be)
advmod(influence, much)
root(ROOT, influence)
case(Paris, by)
obl(influence, Paris)
case(Twenties, during)
det(Twenties, the)
obl(influence, Twenties)
punct(influence, :)
det(Paris, the)
obl:npmod(influence, Paris)
nsubj(center, which)
cop(center, be)
det(center, the)
amod(center, artistic)
acl:relcl(Paris, center)
case(World, of)
det(World, the)
compound(World, Western)
nmod(center, World)
punct(World, --)
det(Paris, the)
amod(Paris, social)
appos(World, Paris)
case(which, to)
obl(migrate, which)
amod(aristocracy, russian)
nsubj(migrate, aristocracy)
acl:relcl(Paris, migrate)
punct(Paris, --)
det(Paris, the)
amod(Paris, chic)
appos(Paris, Paris)
nsubj(attract, which)
acl:relcl(Paris, attract)
det(dollar, the)
compound(dollar, tourist)
obj(attract, dollar)
case(America, of)
amod(America, rich)
nmod(dollar, America)
punct(dollar, --)
det(Paris, the)
obl:npmod(garde, avant)
punct(garde, -)
amod(Paris, garde)
appos(dollar, Paris)
case(diaghileff, of)
nmod(Paris, diaghileff)
punct(stravinsky, ,)
conj(diaghileff, stravinsky)
punct(Koussevitzky, ,)
conj(diaghileff, Koussevitzky)
punct(Cocteau, ,)
conj(diaghileff, Cocteau)
punct(Picasso, ,)
conj(diaghileff, Picasso)
punct(Paris, --)
det(Paris, the)
compound(Paris, laissez)
punct(faire, -)
compound(Paris, faire)
appos(diaghileff, Paris)
case(Dadaism, of)
nmod(Paris, Dadaism)
cc(art, and)
amod(art, ultramodern)
conj(Dadaism, art)
punct(sympathique, --)
det(sympathique, the)
compound(sympathique, Paris)
appos(Paris, sympathique)
nsubj(take, which)
acl:relcl(sympathique, take)
amod(composer, young)
obj(take, composer)
case(bosom, to)
nmod:poss(bosom, she)
obl(take, bosom)
case(enthusiasm, with)
amod(enthusiasm, such)
amod(enthusiasm, quick)
cc(easy, and)
conj(quick, easy)
nmod(bosom, enthusiasm)
punct(influence, .)
advmod(darling, so)
amod(Prokofieff, young)
nsubj(darling, Prokofieff)
cop(darling, be)
det(darling, the)
root(ROOT, darling)
case(success, of)
nmod(darling, success)
punct(darling, :)
case(motherland, in)
nmod:poss(motherland, he)
nmod(darling, motherland)
punct(darling, ;)
punct(darling, ;)
case(grounds, in)
det(grounds, the)
amod(grounds, spacious)
compound(grounds, hunt)
nmod(darling, grounds)
nmod(grounds, of)
punct(darling, ``)
root(ROOT, uncle)
flat(uncle, Sam)
punct(uncle, '')
punct(uncle, ;)
punct(uncle, ;)
case(salon, in)
det(salon, the)
amod(salon, exciting)
nmod(uncle, salon)
case(Paris, of)
nmod:poss(Paris, he)
amod(Paris, lovely)
punct(Paris, ,)
amod(Paris, brilliant)
nmod(salon, Paris)
punct(mistress, --)
appos(salon, mistress)
case(gaiety, of)
nmod(mistress, gaiety)
punct(mistress, --)
conj(mistress, excess)
cc(abandon, and)
conj(mistress, abandon)
punct(theatre, --)
compound(theatre, world)
conj(mistress, theatre)
case(freedom, of)
amod(find, new)
punct(find, -)
amod(freedom, find)
nmod(theatre, freedom)
case(tone, in)
nmod(freedom, tone)
punct(color, ,)
conj(tone, color)
punct(dance, ,)
conj(tone, dance)
punct(design, ,)
conj(tone, design)
punct(think, ,)
cc(think, and)
conj(tone, think)
punct(think, .)
advmod(coagulate, meanwhile)
punct(coagulate, ,)
nummod(force, three)
amod(force, great)
amod(force, terrible)
nsubj(coagulate, force)
aux(coagulate, be)
ccomp(think, coagulate)
cc(crystallize, and)
conj(coagulate, crystallize)
punct(coagulate, .)
case(conscription, in)
det(conscription, this)
compound(wide, world)
punct(wide, -)
amod(conscription, wide)
obl(recall, conscription)
case(man, of)
nmod(conscription, man)
punct(mind, ,)
conj(man, mind)
punct(machine, ,)
cc(machine, and)
conj(man, machine)
punct(recall, ,)
nsubj:pass(recall, Prokofieff)
aux:pass(recall, be)
root(ROOT, recall)
case(land, to)
nmod:poss(land, he)
amod(land, native)
obl(recall, land)
punct(recall, .)
det(world, the)
nsubj(explode, world)
root(ROOT, explode)
mark(challenge, when)
nsubj(challenge, Fascism)
advcl(explode, challenge)
det(concept, all)
obj(challenge, concept)
case(peace, of)
nmod(concept, peace)
cc(liberty, and)
conj(peace, liberty)
punct(combine, ,)
cc(combine, and)
det(people, the)
amod(people, outrage)
punct(people, ,)
obl:npmod(loving, freedom)
punct(loving, -)
amod(people, loving)
nsubj(combine, people)
case(world, of)
det(world, the)
compound(world, Capitalist)
cc(socialist, and)
conj(Capitalist, socialist)
nmod(people, world)
conj(explode, combine)
obj(combine, force)
mark(stamp, to)
xcomp(combine, stamp)
amod(tyranny, fascist)
obj(stamp, tyranny)
case(submission, into)
amod(submission, cring)
obl(stamp, submission)
punct(explode, .)
case(holocaust, after)
det(holocaust, this)
obl(occupy, holocaust)
punct(occupy, ,)
det(world, a)
compound(world, changing)
nsubj(occupy, world)
root(ROOT, occupy)
det(mind, the)
obj(occupy, mind)
case(man, of)
nmod(mind, man)
punct(occupy, ;)
punct(occupy, ;)
det(world, a)
appos(mind, world)
acl(world, beset)
case(boundary, with)
amod(boundary, new)
obl(beset, boundary)
punct(treaty, ,)
amod(treaty, new)
conj(boundary, treaty)
cc(government, and)
conj(boundary, government)
punct(goal, ,)
amod(goal, new)
conj(boundary, goal)
cc(method, and)
conj(goal, method)
punct(fear, ,)
cc(fear, and)
det(fear, the)
amod(fear, age-)
amod(fear, old)
conj(boundary, fear)
case(aggression, of)
nmod(fear, aggression)
cc(subjugation, and)
conj(aggression, subjugation)
punct(aggression, --)
conj(aggression, hunger)
cc(exposure, and)
conj(hunger, exposure)
punct(occupy, .)
case(world, in)
det(world, this)
amod(world, change)
obl(settle, world)
punct(settle, ,)
nsubj(settle, Prokofieff)
root(ROOT, settle)
mark(find, to)
xcomp(settle, find)
obj(find, himself)
punct(create, ,)
cc(create, and)
mark(create, to)
conj(find, create)
case(purpose, for)
amod(purpose, large)
amod(purpose, national)
obl(create, purpose)
punct(settle, .)
advmod(prove, here)
punct(prove, ,)
det(son, this)
nsubj(prove, happy)
punct(prove, ,)
amod(son, rove)
nsubj(prove, son)
case(fortune, of)
amod(fortune, good)
nmod(son, fortune)
root(ROOT, prove)
mark(accept, that)
nsubj(accept, he)
aux(accept, could)
ccomp(prove, accept)
det(discipline, the)
obj(accept, discipline)
case(order, of)
det(order, a)
amod(order, new)
amod(economic, social)
punct(economic, -)
amod(order, economic)
nmod(discipline, order)
acl(order, fight)
case(existence, for)
nmod:poss(existence, its)
amod(existence, very)
obl(fight, existence)
cc(ideal, and)
conj(existence, ideal)
case(world, in)
det(world, a)
amod(world, truculent)
nmod(existence, world)
punct(prove, .)
advmod(become, here)
punct(become, ,)
nsubj(become, Prokofieff)
root(ROOT, become)
det(workman, a)
xcomp(become, workman)
case(vineyard, in)
det(vineyard, the)
nmod(workman, vineyard)
case(Socialism, of)
nmod(vineyard, Socialism)
punct(workman, --)
acl(workman, produce)
obj(produce, music)
case(mass, for)
det(mass, the)
obl(produce, mass)
punct(workman, .)
nsubj(point, it)
root(ROOT, be)
case(point, at)
det(point, this)
obl(be, point)
case(life, in)
nmod:poss(life, he)
nmod(point, life)
mark(emerge, that)
det(Prokofieff, the)
amod(Prokofieff, mature)
nsubj(emerge, Prokofieff)
acl:relcl(point, emerge)
punct(point, .)
nsubj(expect, one)
aux(expect, might)
aux(expect, have)
root(ROOT, expect)
mark(destroy, that)
det:predet(epoch, such)
det(epoch, a)
amod(epoch, violent)
nsubj(destroy, epoch)
case(transition, of)
nmod(epoch, transition)
aux(destroy, would)
aux(destroy, have)
ccomp(expect, destroy)
det(flair, the)
amod(flair, creative)
obj(destroy, flair)
case(composer, of)
det(composer, a)
nmod(flair, composer)
punct(destroy, ,)
advmod(one, especially)
obl:npmod(destroy, one)
nmod:poss(work, whose)
nsubj(fluent, work)
cop(fluent, be)
advmod(fluent, so)
acl:relcl(one, fluent)
cc(spontaneous, and)
conj(fluent, spontaneous)
punct(expect, .)
cc(grow, but)
discourse(grow, no)
punct(grow, :)
nsubj(grow, Prokofieff)
root(ROOT, grow)
punct(grow, .)
nsubj(accept, he)
root(ROOT, accept)
det(environment, the)
obj(accept, environment)
case(destiny, of)
nmod:poss(destiny, he)
nmod(environment, destiny)
punct(accept, --)
parataxis(accept, take)
obj(take, root)
cc(grow, and)
conj(take, grow)
mark(fulfill, to)
advcl(grow, fulfill)
det(stature, the)
obj(fulfill, stature)
case(promise, of)
nmod:poss(promise, he)
amod(promise, early)
nmod(stature, promise)
punct(accept, .)
case(1937, by)
obl(clarify, 1937)
nsubj(clarify, he)
aux(clarify, have)
root(ROOT, clarify)
nmod:poss(intention, he)
obj(clarify, intention)
mark(serve, to)
advcl(clarify, serve)
nmod:poss(people, he)
obj(serve, people)
punct(clarify, :)
punct(clarify, ``)
nsubj(strive, I)
aux(strive, have)
root(ROOT, strive)
case(clarity, for)
obl(strive, clarity)
cc(melodious, and)
amod(idiom, melodious)
conj(clarity, idiom)
punct(have, ,)
cc(have, but)
case(time, at)
det(time, the)
amod(time, same)
obl(have, time)
nsubj(have, I)
conj(strive, have)
case(means, by)
det(means, no)
obl(have, means)
acl(means, attempt)
mark(restrict, to)
xcomp(attempt, restrict)
obj(restrict, myself)
case(method, to)
det(method, the)
amod(method, accept)
obl(restrict, method)
case(harmony, of)
nmod(method, harmony)
cc(melody, and)
conj(harmony, melody)
punct(strive, .)
nsubj(what, this)
cop(what, be)
advmod(what, precisely)
root(ROOT, what)
acl:relcl(what, make)
xcomp(make, lucid)
punct(music, ,)
amod(music, straightforward)
obj(make, music)
advmod(difficult, so)
xcomp(make, difficult)
mark(compose, to)
advcl(difficult, compose)
punct(difficult, --)
det(clarity, the)
nsubj(new, clarity)
aux(new, must)
cop(new, be)
parataxis(difficult, new)
punct(old, ,)
advmod(old, not)
conj(new, old)
punct(new, '')
punct(new, .)
advmod(right, how)
advmod(be, right)
nsubj(be, he)
parataxis(new, be)
punct(see, ;)
punct(see, ;)
advmod(see, how)
advmod(see, clearly)
nsubj(see, he)
ccomp(be, see)
det(defection, the)
amod(defection, cultural)
obj(see, defection)
case(experimentation, of)
nmod(defection, experimentation)
case(escape, as)
det(escape, a)
nmod(defection, escape)
case(those, for)
nmod(escape, those)
nsubj(dare, who)
acl:relcl(those, dare)
advmod(dare, not)
cc(prefer, or)
conj(dare, prefer)
advmod(face, not)
mark(face, to)
xcomp(prefer, face)
det(discipline, the)
obj(face, discipline)
case(traditionalism, of)
amod(traditionalism, modern)
nmod(discipline, traditionalism)
punct(what, .)
cc(back, and)
case(resource, with)
det(resource, what)
obl(back, resource)
aux(back, do)
nsubj(back, Prokofieff)
root(ROOT, back)
compound:prt(back, up)
nmod:poss(Credo, he)
obj(back, Credo)
case(word, of)
nmod(Credo, word)
punct(back, --)
case(torrent, with)
obl(back, torrent)
case(music, of)
amod(music, powerful)
nmod(torrent, music)
punct(back, .)
root(ROOT, Compare)
det(difference, the)
amod(difference, vast)
obj(Compare, difference)
case(scope, in)
nmod(difference, scope)
cc(beauty, and)
conj(scope, beauty)
case(Symphony, between)
nmod:poss(Symphony, he)
amod(Symphony, neat)
cc(witty, and)
conj(neat, witty)
amod(Symphony, little)
compound(Symphony, classical)
nmod(scope, Symphony)
cc(Symphony, and)
nmod:poss(Symphony, he)
amod(Symphony, big)
punct(muscular, ,)
conj(big, muscular)
punct(passionate, ,)
conj(big, passionate)
punct(Symphony, ,)
cc(eloquent, and)
conj(big, eloquent)
compound(Symphony, fifth)
conj(Symphony, Symphony)
punct(Symphony, ;)
punct(Compare, ;)
cc(love, or)
det(love, the)
conj(Symphony, love)
case(orange, for)
nummod(orange, three)
nmod(love, orange)
punct(gay, ()
amod(orange, gay)
mark(be, as)
nsubj(be, it)
advcl(gay, be)
punct(gay, ))
case(tenderness, with)
det(tenderness, the)
amod(tenderness, wonderful)
punct(imaginative, ,)
conj(wonderful, imaginative)
punct(colorful, ,)
conj(wonderful, colorful)
punct(subtle, ,)
cc(subtle, and)
conj(wonderful, subtle)
nmod(love, tenderness)
case(ballet, of)
det(ballet, the)
amod(ballet, magnificent)
nmod(tenderness, ballet)
punct(ballet, ,)
det(Flower, the)
compound(Flower, Stone)
appos(ballet, Flower)
punct(Compare, .)
det(masterpiece, this)
nsubj(have, masterpiece)
root(ROOT, have)
obj(have, gaiety)
punct(have, ,)
advmod(have, too)
punct(gaiety, ,)
cc(gaiety, but)
nsubj(gaiety, it)
cop(gaiety, be)
det(gaiety, the)
conj(have, gaiety)
case(people, of)
compound(people, dancing)
nmod(gaiety, people)
punct(people, :)
appos(people, earthy)
punct(salty, ,)
conj(earthy, salty)
cc(humorous, and)
conj(earthy, humorous)
punct(have, .)
advmod(comparable, of)
fixed(of, course)
punct(comparable, ,)
det(work, these)
nsubj(comparable, work)
cop(comparable, be)
advmod(comparable, not)
root(ROOT, comparable)
punct(comparable, ,)
advmod(conceive, even)
mark(conceive, though)
det(brain, the)
amod(brain, same)
nsubj(conceive, brain)
advcl(comparable, conceive)
obj(conceive, they)
punct(comparable, .)
det(work, the)
amod(work, early)
nsubj:pass(conceive, work)
aux:pass(conceive, be)
root(ROOT, conceive)
case(audience, for)
det(audience, a)
amod(audience, sophisticated)
punct(audience, ,)
amod(audience, international)
obl(conceive, audience)
punct(conceive, ;)
punct(conceive, ;)
det(work, the)
amod(work, later)
nsubj:pass(conceive, work)
aux:pass(conceive, be)
parataxis(conceive, conceive)
mark(affirm, to)
xcomp(conceive, affirm)
det(way, a)
obj(affirm, way)
case(life, of)
nmod(way, life)
case(citizen, for)
amod(citizen, fellow)
obl(affirm, citizen)
punct(conceive, .)
advmod(find, however)
punct(find, ,)
case(all, in)
obl(find, all)
case(music, of)
nmod:poss(music, Prokofieff)
case(Prokofieff, 's)
nmod(all, music)
punct(young, ,)
amod(music, young)
cc(mature, or)
conj(young, mature)
punct(find, ,)
nsubj(find, we)
root(ROOT, find)
nmod:poss(profile, he)
obj(find, profile)
punct(profile, --)
nmod:poss(signature, he)
punct(signature, ``)
appos(profile, signature)
punct(signature, '')
punct(signature, --)
nmod:poss(craftsman, he)
nmod:poss(attitude, craftsman)
case(craftsman, 's)
appos(signature, attitude)
punct(find, .)
nsubj(forsake, Prokofieff)
advmod(forsake, never)
root(ROOT, forsake)
nmod:poss(medium, he)
obj(forsake, medium)
case(cause, for)
det(cause, the)
obl(forsake, cause)
case(experimentation, of)
nmod(cause, experimentation)
case(se, per)
nmod(experimentation, se)
punct(forsake, .)
case(orchestration, in)
obl(stretch, orchestration)
punct(stretch, ,)
nsubj(stretch, he)
root(ROOT, stretch)
det(limit, the)
obj(stretch, limit)
case(instrumentation, of)
nmod(limit, instrumentation)
case(judgment, with)
amod(judgment, good)
nmod(limit, judgment)
cc(imagination, and)
det(imagination, a)
amod(imagination, fine)
conj(judgment, imagination)
case(color, for)
nmod(imagination, color)
punct(stretch, .)
nmod:poss(sense, he)
nsubj(impeccable, sense)
case(variety, for)
amod(variety, rhythmic)
nmod(sense, variety)
cc(timing, and)
conj(variety, timing)
cop(impeccable, be)
root(ROOT, impeccable)
punct(impeccable, .)
nmod:poss(development, he)
amod(development, creative)
nsubj(captivate, development)
case(design, of)
amod(design, melodic)
nmod(development, design)
case(tune, of)
amod(tune, Slavic)
compound(tune, dance)
nmod(design, tune)
cc(song, and)
compound(song, love)
conj(tune, song)
cop(captivate, be)
root(ROOT, captivate)
punct(witty, :)
appos(captivate, witty)
punct(clever, ,)
conj(witty, clever)
punct(adroit, ,)
conj(witty, adroit)
punct(subtle, ,)
cc(subtle, and)
conj(witty, subtle)
punct(captivate, .)
nmod:poss(counterpoint, he)
nsubj(pertinent, counterpoint)
cop(pertinent, be)
root(ROOT, pertinent)
punct(skillful, ,)
conj(pertinent, skillful)
punct(thick, ,)
cc(thick, and)
advmod(thick, rarely)
conj(pertinent, thick)
punct(pertinent, .)
advmod(note, also)
punct(note, ,)
expl(note, it)
aux(note, should)
aux:pass(note, be)
root(ROOT, note)
mark(lose, that)
det(freedom, the)
amod(freedom, polytonal)
nsubj:pass(lose, freedom)
case(melody, of)
nmod:poss(melody, he)
nmod(freedom, melody)
cc(modulation, and)
amod(modulation, harmonic)
conj(melody, modulation)
punct(orchestration, ,)
det(orchestration, the)
amod(orchestration, brilliant)
conj(freedom, orchestration)
punct(orchestration, ,)
det(adroitness, the)
conj(freedom, adroitness)
mark(evade, for)
acl(adroitness, evade)
det(heaviness, the)
obj(evade, heaviness)
case(bass, of)
amod(bass, figure)
nmod(heaviness, bass)
punct(skill, ,)
det(skill, the)
nsubj:pass(lose, skill)
case(counterpoint, in)
amod(counterpoint, florid)
nmod(skill, counterpoint)
aux:pass(lose, be)
advmod(lose, not)
ccomp(note, lose)
case(output, in)
nmod:poss(output, he)
amod(output, mature)
obl(lose, output)
punct(lose, ,)
advmod(drama, even)
case(drama, in)
det(drama, the)
amod(drama, spectacular)
amod(drama, historical)
obl(lose, drama)
case(stage, of)
det(stage, the)
nmod(drama, stage)
cc(cinema, and)
conj(stage, cinema)
punct(drama, ,)
advmod(require, where)
det(canva, a)
amod(canva, large)
punct(canva, ,)
amod(canva, dramatic)
nsubj:pass(require, canva)
case(sound, of)
nmod(canva, sound)
aux:pass(require, be)
acl:relcl(drama, require)
punct(note, .)
mark(seem, that)
nmod:poss(harmony, Prokofieff)
case(Prokofieff, 's)
nsubj(seem, harmony)
cc(form, and)
conj(harmony, form)
advmod(seem, sometimes)
advcl(symptom, seem)
advmod(routine, professionally)
xcomp(seem, routine)
case(ear, to)
nmod:poss(ear, we)
nmod(routine, ear)
punct(indicate, ,)
aux(indicate, may)
cc(indicate, or)
aux(indicate, may)
advmod(indicate, not)
conj(seem, indicate)
mark(less, that)
nsubj(less, he)
cop(less, be)
ccomp(indicate, less)
case(original, of)
det(original, a)
punct(original, ``)
obl(less, original)
punct(original, '')
mark(prefer, than)
nsubj(prefer, we)
advcl(original, prefer)
mark(believe, to)
xcomp(prefer, believe)
punct(need, .)
parataxis(symptom, need)
case(novelty, for)
obl(need, novelty)
aux(symptom, may)
cop(symptom, be)
det(symptom, a)
root(ROOT, symptom)
case(fatigue, of)
amod(fatigue, cultural)
nmod(symptom, fatigue)
cc(instability, and)
conj(fatigue, instability)
punct(symptom, .)
nsubj(emerge, Prokofieff)
aux(emerge, might)
advmod(emerge, well)
root(ROOT, emerge)
case(hero, as)
det(hero, a)
amod(hero, cultural)
obl(emerge, hero)
punct(hero, ,)
nsubj(help, who)
punct(hero, ,)
case(force, by)
det(force, the)
obl(help, force)
case(life, of)
nmod:poss(life, he)
amod(life, creative)
nmod(force, life)
punct(help, ,)
acl:relcl(hero, help)
xcomp(help, preserve)
det(stream, the)
amod(stream, main)
obj(preserve, stream)
case(tradition, of)
nmod(stream, tradition)
punct(preserve, ,)
case(which, to)
obl(add, which)
det(idiom, the)
amod(idiom, survive)
nsubj:pass(add, idiom)
case(experimentalism, of)
amod(experimentalism, current)
nmod(idiom, experimentalism)
aux(add, may)
aux:pass(add, be)
advmod(add, eventually)
acl:relcl(hero, add)
cc(integrate, and)
conj(add, integrate)
punct(emerge, .)
case(date, at)
det(date, this)
obl(seem, date)
punct(seem, ,)
nsubj(seem, it)
root(ROOT, seem)
xcomp(seem, probable)
mark(appear, that)
det(name, the)
nsubj(appear, name)
case(serge, of)
nmod(name, serge)
flat(serge, Prokofieff)
aux(appear, will)
ccomp(probable, appear)
case(archive, in)
det(archive, the)
obl(appear, archive)
case(history, of)
nmod(archive, history)
punct(appear, ,)
case(traditionalist, as)
det(traditionalist, a)
amod(traditionalist, effective)
obl(appear, traditionalist)
punct(traditionalist, ,)
nsubj(aware, who)
cop(aware, be)
advmod(aware, fully)
acl:relcl(traditionalist, aware)
case(lure, of)
det(lure, the)
obl(aware, lure)
cc(danger, and)
conj(lure, danger)
case(experimentation, of)
nmod(lure, experimentation)
punct(use, ,)
cc(use, and)
conj(aware, use)
obj(use, it)
mark(serve, as)
nsubj(serve, it)
advcl(use, serve)
nmod:poss(purpose, he)
obj(serve, purpose)
punct(use, ;)
punct(use, ;)
cc(catch, yet)
aux:pass(catch, be)
advmod(catch, never)
conj(serve, catch)
compound:prt(catch, up)
case(it, in)
obl(catch, it)
punct(slave, --)
advmod(slave, never)
det(slave, a)
parataxis(catch, slave)
case(dialectic, to)
nmod:poss(dialectic, its)
amod(dialectic, academic)
nmod(slave, dialectic)
punct(slave, .)
advmod(clarity, certainly)
punct(clarity, ,)
nsubj(clarity, it)
cop(clarity, be)
det(clarity, the)
amod(clarity, traditional)
root(ROOT, clarity)
case(music, of)
nmod:poss(music, he)
nmod(clarity, music)
nsubj(endear, which)
aux(endear, have)
acl:relcl(music, endear)
obj(endear, he)
case(World, to)
det(World, the)
compound(World, Western)
obl(endear, World)
punct(World, --)
advmod(experimentation, not)
nmod:poss(experimentation, he)
conj(World, experimentation)
punct(clarity, .)
advmod(able, so)
nsubj(able, Prokofieff)
cop(able, be)
root(ROOT, able)
mark(cultivate, to)
xcomp(able, cultivate)
nmod:poss(talent, he)
amod(talent, musical)
obj(cultivate, talent)
cc(harvest, and)
conj(cultivate, harvest)
det(reward, a)
amod(reward, rich)
obj(harvest, reward)
case(they, from)
obl(harvest, they)
punct(able, .)
cc(certain, nor)
aux(certain, can)
nsubj(certain, anyone)
cop(certain, be)
root(ROOT, certain)
mark(do, that)
nsubj(do, Prokofieff)
aux(do, would)
aux(do, have)
ccomp(certain, do)
xcomp(do, better)
punct(circumstance, ,)
cc(circumstance, or)
advmod(as, even)
cc(circumstance, as)
fixed(as, well)
punct(circumstance, ,)
case(circumstance, under)
amod(circumstance, different)
conj(do, circumstance)
punct(certain, .)
nmod:poss(countryman, he)
amod(countryman, fellow)
punct(countryman, -)
root(ROOT, countryman)
punct(countryman, ,)
appos(countryman, igor)
nsubj(expand, stravinsky)
punct(expand, ,)
advmod(do, certainly)
parataxis(expand, do)
advmod(do, not)
punct(expand, .)
advmod(expand, why)
aux(expand, do)
nsubj(expand, Prokofieff)
root(ROOT, expand)
case(stature, in)
obl(expand, stature)
cc(fecundity, and)
conj(stature, fecundity)
punct(expand, ,)
mark(dwindle, while)
nsubj(dwindle, stravinsky)
punct(leap, ()
nsubj(leap, who)
acl:relcl(stravinsky, leap)
case(fame, into)
obl(leap, fame)
case(giant, like)
det(giant, a)
amod(giant, young)
obl(leap, giant)
punct(leap, ))
advcl(expand, dwindle)
case(stature, in)
obl(dwindle, stature)
cc(fruitfulness, and)
conj(stature, fruitfulness)
punct(dwindle, ?)
punct(expand, ? )
nsubj(think, I)
root(ROOT, think)
det(answer, the)
nsubj(be, answer)
ccomp(think, be)
mark(find, to)
aux:pass(find, be)
xcomp(be, find)
case(word, in)
nmod:poss(word, Prokofieff)
case(Prokofieff, 's)
amod(word, own)
obl(find, word)
punct(think, :)
punct(think, ``)
det(clarity, the)
nsubj(new, clarity)
aux(new, must)
cop(new, be)
root(ROOT, new)
punct(new, ,)
advmod(old, not)
list(new, old)
punct(old, '')
punct(new, .)
mark(forge, when)
nsubj(forge, Prokofieff)
advcl(new, forge)
nmod:poss(clarity, he)
amod(clarity, new)
obj(forge, clarity)
case(music, of)
punct(music, ``)
amod(music, lucid)
punct(music, ,)
amod(music, straightforward)
nmod(clarity, music)
punct(difficult, ,)
advmod(difficult, so)
amod(music, difficult)
mark(compose, to)
advcl(difficult, compose)
punct(shape, '')
punct(shape, ,)
nsubj(shape, he)
parataxis(new, shape)
nmod:poss(talent, he)
obj(shape, talent)
case(purpose, to)
nmod:poss(purpose, he)
obl(shape, purpose)
punct(shape, .)
mark(shape, when)
nsubj(shape, stravinsky)
advcl(shape, shape)
nmod:poss(purpose, he)
obj(shape, purpose)
case(scene, to)
det(scene, the)
amod(scene, shift)
obl(shape, scene)
case(culture, of)
amod(culture, many)
nmod(scene, culture)
punct(salon, ,)
amod(salon, many)
conj(culture, salon)
punct(dialectic, ,)
amod(dialectic, many)
conj(culture, dialectic)
punct(personality, ,)
amod(personality, many)
conj(culture, personality)
punct(try, ,)
nsubj(try, he)
parataxis(salon, try)
mark(refashion, to)
xcomp(try, refashion)
obj(refashion, himself)
case(stylist, into)
det(stylist, a)
obl(refashion, stylist)
case(style, of)
amod(style, many)
nmod(stylist, style)
punct(stylist, ,)
acl(style, determine)
case(culture, by)
amod(culture, many)
amod(culture, disparate)
obl(determine, culture)
punct(new, .)
nsubj:pass(guide, Prokofieff)
aux:pass(guide, be)
root(ROOT, guide)
case(direction, in)
det(direction, a)
amod(direction, consistent)
obl(guide, direction)
case(life, by)
det(life, the)
nmod(direction, life)
case(people, of)
nmod:poss(people, he)
amod(people, own)
nmod(life, people)
punct(guide, --)
case(compass, by)
det(compass, the)
obl(guide, compass)
case(idea, of)
nmod:poss(idea, they)
amod(idea, national)
nmod(compass, idea)
punct(guide, .)
cc(sway, but)
nsubj:pass(sway, stravinsky)
aux:pass(sway, be)
root(ROOT, sway)
case(attitude, by)
det(attitude, the)
obl(sway, attitude)
case(culture, of)
det(culture, whatever)
nmod(attitude, culture)
nsubj(reflect, he)
aux(reflect, be)
acl:relcl(culture, reflect)
punct(sway, .)
case(miscalculation, in)
det:predet(miscalculation, all)
nmod:poss(miscalculation, he)
obl(make, miscalculation)
punct(make, ,)
nsubj(make, stravinsky)
root(ROOT, make)
det(blunder, the)
amod(blunder, fatal)
amod(blunder, historical)
obj(make, blunder)
mark(presume, of)
acl(blunder, presume)
mark(transform, that)
nsubj(transform, he)
aux(transform, could)
ccomp(presume, transform)
amod(composer, other)
nmod:poss(inspiration, composer)
case(composer, 's)
obj(transform, inspiration)
punct(transform, --)
advcl(transform, represent)
amod(people, many)
obj(represent, people)
punct(period, ,)
compound(period, time)
conj(people, period)
cc(style, and)
conj(people, style)
punct(people, --)
case(music, into)
nmod:poss(music, he)
amod(music, own)
obl(represent, music)
mark(warping, by)
advcl(represent, warping)
det(harmony, the)
obj(warping, harmony)
punct(melody, ,)
conj(harmony, melody)
punct(form, ,)
cc(form, or)
conj(harmony, form)
punct(verify, ,)
mark(verify, to)
advcl(warping, verify)
nmod:poss(experiment, he)
amod(experiment, own)
obj(verify, experiment)
punct(make, .)
case(homogeneity, because)
fixed(because, of)
det(homogeneity, the)
amod(homogeneity, authentic)
obl(keep, homogeneity)
case(material, of)
nmod:poss(material, he)
amod(material, early)
amod(material, Nationalistic)
nmod(homogeneity, material)
punct(flair, ,)
cc(flair, and)
nmod:poss(flair, he)
conj(homogeneity, flair)
case(orchestration, for)
nmod(flair, orchestration)
punct(flair, --)
nmod:poss(Petruchka, he)
amod(Petruchka, brilliant)
appos(flair, Petruchka)
punct(Petruchka, ,)
nmod:poss(savage, he)
conj(Petruchka, savage)
conj(Petruchka, Sacre)
compound(Printemps, Du)
flat(Sacre, Printemps)
punct(Noces, ,)
nmod:poss(Noces, he)
amod(Noces, incisive)
compound(Noces, Les)
conj(Petruchka, Noces)
punct(keep, --)
det(world, the)
nsubj(keep, world)
root(ROOT, keep)
xcomp(keep, hope)
mark(recapture, that)
nsubj(recapture, he)
aux(recapture, could)
ccomp(hope, recapture)
det(direction, the)
amod(direction, historical)
obj(recapture, direction)
case(which, for)
obl(predispose, which)
nmod:poss(talent, he)
amod(talent, native)
nsubj:pass(predispose, talent)
aux:pass(predispose, be)
acl:relcl(direction, predispose)
punct(keep, .)
cc(begin, but)
nsubj(run, time)
aux(run, be)
root(ROOT, run)
compound:prt(run, out)
punct(begin, ,)
cc(begin, and)
nsubj(begin, many)
case(admirer, of)
nmod:poss(admirer, stravinsky)
case(stravinsky, 's)
nmod(many, admirer)
conj(run, begin)
mark(fear, to)
xcomp(begin, fear)
mark(find, that)
nsubj(find, he)
aux(find, will)
advmod(find, never)
ccomp(fear, find)
compound(firma, terra)
obj(find, firma)
punct(run, .)
nmod:poss(postulate, he)
amod(postulate, various)
amod(postulate, aesthetic)
nsubj(remain, postulate)
root(ROOT, remain)
case(landmark, as)
obl(remain, landmark)
case(house, of)
det(house, a)
nmod(landmark, house)
acl(house, divide)
case(itself, against)
obl(divide, itself)
punct(Expressionism, :)
compound(Expressionism, Supra)
punct(Expressionism, -)
appos(landmark, Expressionism)
punct(Neo-Paganism, ,)
conj(Expressionism, Neo-Paganism)
punct(Classicism, ,)
compound(Classicism, Neo-)
conj(Expressionism, Classicism)
punct(Romanticism, ,)
compound(Romanticism, Neo-)
conj(Expressionism, Romanticism)
punct(Neo, ,)
conj(Expressionism, Neo)
punct(Expressionism, -)
conj(Expressionism, Jazz)
punct(Neo-, ,)
conj(Expressionism, Neo-)
flat(Neo-, Ecclesiasticism)
punct(neo-popularism, ,)
conj(Expressionism, neo-popularism)
punct(Serialism, ,)
cc(Serialism, and)
advmod(recently, most)
advmod(Serialism, recently)
punct(Serialism, ,)
compound(Serialism, Post)
punct(Serialism, -)
conj(Expressionism, Serialism)
punct(Serialism, --)
nsubj(compete, all)
acl(Serialism, compete)
case(other, with)
det(other, each)
obl(compete, other)
case(composer, within)
nummod(composer, one)
obl(compete, composer)
punct(remain, !)
punct(remain, !)
det(patchwork, what)
det(patchwork, a)
nsubj(linger, patchwork)
case(proclamation, of)
nmod(patchwork, proclamation)
cc(renunciation, and)
conj(proclamation, renunciation)
punct(patchwork, !)
punct(patchwork, !)
amod(by-product, meager)
cc(shabby, and)
conj(meager, shabby)
nsubj(linger, by-product)
root(ROOT, linger)
mark(haunt, to)
xcomp(linger, haunt)
nmod:poss(memory, we)
obj(haunt, memory)
case(protagonist, of)
det(protagonist, a)
advmod(mighty, once)
compound(protagonist, mighty)
nmod(memory, protagonist)
punct(haunt, ;)
punct(reharmonization, ;)
det(reharmonization, a)
amod(reharmonization, maladroit)
appos(patchwork, reharmonization)
case(anthem, of)
nmod:poss(anthem, we)
compound(anthem, National)
nmod(reharmonization, anthem)
punct(Banner, ()
det(Banner, the)
compound(Banner, Star)
punct(spangled, -)
amod(Banner, spangled)
appos(anthem, Banner)
punct(Banner, ))
punct(attempt, ;)
punct(attempt, ;)
det(attempt, a)
amod(attempt, poor)
conj(reharmonization, attempt)
mark(write, to)
acl(attempt, write)
det(concerto, a)
amod(concerto, idiomatic)
compound(concerto, jazz)
obj(write, concerto)
punct(attempt, ;)
punct(polka, ;)
det(polka, a)
compound(polka, circus)
appos(concerto, polka)
case(elephant, for)
nmod(polka, elephant)
punct(polka, ;)
punct(polka, ;)
nmod:poss(hope, he)
parataxis(polka, hope)
mark(use, that)
det(tune, the)
nsubj:pass(use, tune)
case(music, from)
nmod:poss(music, he)
amod(music, old)
nmod(tune, music)
aux(use, might)
aux:pass(use, be)
acl(hope, use)
case(song, for)
amod(song, popular)
amod(song, american)
amod(song, commercial)
obl(use, song)
punct(linger, !)
punct(linger, !)
nsubj(bird, stravinsky)
punct(bird, ,)
csubj(bird, near)
det(age, the)
obj(near, age)
case(eighty, of)
nmod(age, eighty)
punct(bird, ,)
cop(bird, be)
case(bird, like)
det(bird, a)
amod(bird, lose)
cc(frantic, and)
conj(lose, frantic)
root(ROOT, bird)
punct(bird, ,)
advcl(bird, flitting)
case(nest, from)
nummod(nest, one)
amod(nest, abandon)
obl(flitting, nest)
case(another, to)
obl(flitting, another)
punct(flitting, ,)
conj(flitting, search)
case(home, for)
det(home, a)
obl(search, home)
punct(bird, .)
advmod(differently, how)
advmod(unfolded, differently)
nmod:poss(life, Prokofieff)
case(Prokofieff, 's)
nsubj(unfolded, life)
root(ROOT, unfolded)
punct(unfolded, .)
nsubj(able, Prokofieff)
cop(able, be)
root(ROOT, able)
mark(adjust, to)
xcomp(able, adjust)
nmod:poss(personality, he)
amod(personality, creative)
obj(adjust, personality)
case(world, to)
det(world, a)
advmod(changing, swiftly)
compound(world, changing)
obl(adjust, world)
mark(lose, without)
advcl(adjust, lose)
nmod:poss(force, he)
amod(force, particular)
obj(lose, force)
cc(direction, and)
conj(force, direction)
punct(able, .)
case(process, in)
det(process, the)
obl(stretch, process)
punct(stretch, ,)
nmod:poss(endowment, he)
amod(endowment, native)
nsubj:pass(stretch, endowment)
aux:pass(stretch, be)
root(ROOT, stretch)
punct(strengthen, ,)
conj(stretch, strengthen)
cc(disciplined, and)
conj(stretch, disciplined)
mark(serve, to)
xcomp(disciplined, serve)
nmod:poss(purpose, they)
amod(purpose, human)
obj(serve, purpose)
punct(stretch, .)
case(technique, with)
det(technique, a)
amod(technique, large)
cc(circumspect, and)
conj(large, circumspect)
amod(century, 20th)
punct(century, -)
compound(technique, century)
obl(wove, technique)
punct(wove, ,)
nsubj(wove, he)
root(ROOT, wove)
det(material, the)
obj(wove, material)
case(heroes, of)
amod(heroes, national)
nmod(material, heroes)
cc(event, and)
conj(heroes, event)
punct(folklore, ,)
amod(folklore, national)
conj(heroes, folklore)
cc(child, and)
conj(folklore, child)
case(child, 's)
compound(tale, fairy)
conj(heroes, tale)
punct(tale, --)
amod(dance, Slavic)
appos(tale, dance)
cc(song, and)
compound(song, love)
conj(dance, song)
punct(dance, --)
case(literature, into)
det(literature, a)
amod(literature, solid)
amod(literature, musical)
obl(wove, literature)
nsubj(serve, which)
acl:relcl(literature, serve)
nmod:poss(people, he)
obj(serve, people)
advmod(serve, well)
punct(provide, ,)
cc(provide, and)
aux(provide, be)
conj(serve, provide)
amod(enjoyment, much)
obj(provide, enjoyment)
case(World, to)
det(World, the)
nmod(enjoyment, World)
case(large, at)
obl(provide, large)
punct(wove, .)
advmod(forget, of)
fixed(of, course)
punct(forget, ,)
expl(forget, it)
aux(forget, must)
advmod(forget, not)
aux:pass(forget, be)
root(ROOT, forget)
mark(have, that)
mark(achieve, in)
advcl(forget, achieve)
det(feat, this)
amod(feat, historical)
obj(achieve, feat)
punct(have, ,)
nsubj(have, Prokofieff)
ccomp(forget, have)
det(resource, the)
amod(resource, vast)
obj(have, resource)
case(people, of)
nmod:poss(people, he)
nmod(resource, people)
case(he, behind)
nmod(people, he)
punct(have, ;)
punct(have, ;)
appos(resource, time)
cc(security, and)
amod(security, economic)
conj(time, security)
punct(orchestras, ;)
punct(orchestras, ;)
compound(orchestras, symphony)
appos(resource, orchestras)
punct(opera, ,)
conj(orchestras, opera)
cc(company, and)
compound(company, ballet)
conj(orchestras, company)
punct(orchestras, ;)
punct(orchestras, ;)
conj(orchestras, choruse)
punct(ensemble, ,)
compound(ensemble, chamber)
compound(ensemble, music)
conj(orchestras, ensemble)
punct(ensemble, ;)
punct(soloist, ;)
conj(orchestras, soloist)
punct(soloist, ;)
punct(soloist, ;)
conj(orchestras, recording)
punct(recording, ;)
punct(broadcastings, ;)
conj(orchestras, broadcastings)
punct(broadcastings, ;)
punct(television, ;)
list(orchestras, television)
punct(television, ;)
punct(audience, ;)
amod(audience, large)
cc(eager, and)
conj(large, eager)
conj(orchestras, audience)
punct(forget, .)
expl(conced, it)
aux(conced, must)
aux:pass(conced, be)
root(ROOT, conced)
mark(provide, that)
nmod:poss(land, he)
amod(land, native)
nsubj(provide, land)
ccomp(conced, provide)
obj(provide, Prokofieff)
case(many, with)
obl(provide, many)
case(condition, of)
det(condition, the)
amod(condition, necessary)
nmod(many, condition)
case(incentive, for)
amod(incentive, great)
amod(incentive, creative)
nmod(condition, incentive)
punct(security, :)
amod(security, economic)
appos(incentive, security)
cc(opportunity, and)
amod(opportunity, cultural)
conj(security, opportunity)
punct(idiom, ,)
amod(idiom, incisive)
conj(security, idiom)
punct(fermentation, ,)
amod(fermentation, social)
conj(security, fermentation)
case(ideology, for)
det(ideology, a)
amod(ideology, new)
amod(ideology, national)
nmod(fermentation, ideology)
punct(ideology, --)
det(public, a)
amod(public, sympathetic)
appos(ideology, public)
cc(body, and)
det(body, a)
amod(body, large)
conj(public, body)
case(performer, of)
nmod(body, performer)
advmod(train, especially)
acl(body, train)
mark(fulfill, to)
xcomp(train, fulfill)
nmod:poss(purpose, he)
obj(fulfill, purpose)
punct(Prokofieff, .)
advmod(produce, thus)
case(Prokofieff, in)
obl(produce, Prokofieff)
det(Union, the)
nsubj(produce, Union)
case(republic, of)
compound(socialist, Soviet)
compound(republic, socialist)
nmod(Union, republic)
ccomp(conced, produce)
obj(produce, one)
case(composer, of)
det(composer, the)
amod(composer, great)
nmod(one, composer)
case(Century, of)
det(Century, the)
compound(Century, Twentieth)
nmod(composer, Century)
punct(conced, .)
mark(do, that)
nmod:poss(mood, he)
nsubj(do, mood)
punct(mood, ,)
advmod(year, even)
case(year, in)
nmod:poss(year, he)
amod(year, early)
obl(those, year)
punct(those, ,)
cop(those, be)
nsubj(do, those)
case(people, of)
nmod:poss(people, he)
nmod(those, people)
punct(do, ,)
root(ROOT, do)
obj(do, he)
xcomp(do, honor)
punct(do, ,)
mark(honor, as)
nmod:poss(music, he)
nsubj(honor, music)
advcl(do, honor)
obj(honor, those)
nsubj(inspire, who)
acl:relcl(those, inspire)
obj(inspire, it)
punct(do, .)
mark(master, that)
nsubj(master, he)
csubj(symbol, master)
det(aspect, every)
obj(master, aspect)
case(medium, of)
nmod:poss(medium, he)
nmod(aspect, medium)
case(talent, accord)
fixed(accord, to)
nmod:poss(talent, he)
amod(talent, own)
amod(talent, great)
nmod(aspect, talent)
cc(judgment, and)
amod(judgment, contemporary)
conj(talent, judgment)
punct(symbol, ,)
cop(symbol, be)
det(symbol, a)
amod(symbol, good)
cc(solid, and)
conj(good, solid)
root(ROOT, symbol)
case(people, of)
nmod:poss(people, he)
nmod(symbol, people)
case(pressure, under)
det(pressure, the)
amod(pressure, tremendous)
nmod(symbol, pressure)
mark(proclaim, of)
acl(pressure, proclaim)
cc(practise, and)
conj(proclaim, practise)
det(rigor, the)
obj(proclaim, rigor)
case(culture, of)
det(culture, a)
amod(culture, new)
nmod(rigor, culture)
punct(proclaim, ;)
punct(significance, ;)
cc(significance, and)
advmod(significance, perhaps)
case(significance, of)
advmod(greater, even)
amod(significance, greater)
conj(symbol, significance)
punct(significance, --)
nmod:poss(music, he)
nsubj(evidence, music)
cop(evidence, be)
amod(evidence, strong)
amod(century, 20th)
punct(century, -)
compound(evidence, century)
parataxis(significance, evidence)
case(effectiveness, of)
det(effectiveness, the)
nmod(evidence, effectiveness)
case(Evolution, of)
nmod(effectiveness, Evolution)
punct(effectiveness, ,)
case(Traditionalism, base)
case(Traditionalism, on)
det(Traditionalism, a)
amod(Traditionalism, broad)
nmod(effectiveness, Traditionalism)
case(art, for)
det(art, the)
amod(art, creative)
nmod(Traditionalism, art)
case(music, of)
nmod(art, music)
punct(symbol, .)
nsubj(mark, April)
nummod(April, 10)
root(ROOT, mark)
det(date, a)
amod(date, memorable)
obj(mark, date)
case(history, in)
compound(York, New)
nmod:poss(history, York)
case(York, 's)
amod(history, musical)
nmod(date, history)
punct(date, --)
advmod(history, indeed)
case(history, in)
det(history, the)
amod(history, musical)
obl(mark, history)
case(States, of)
det(States, the)
amod(States, entire)
amod(States, eastern)
compound(States, United)
nmod(history, States)
punct(mark, .)
case(date, on)
det(date, that)
obl(organize, date)
det(Fund, the)
compound(Fund, Musicians)
compound(Fund, emergency)
nsubj(organize, Fund)
punct(organize, ,)
root(ROOT, organize)
mark(furnish, to)
xcomp(organize, furnish)
obj(furnish, employment)
case(musician, for)
obl(furnish, musician)
amod(musician, unable)
mark(obtain, to)
xcomp(unable, obtain)
obj(obtain, engagement)
case(depression, during)
det(depression, the)
obl(obtain, depression)
cc(provide, and)
mark(provide, to)
conj(obtain, provide)
obj(provide, relief)
case(musician, for)
amod(musician, older)
obl(provide, musician)
nsubj(lose, who)
acl:relcl(musician, lose)
nmod:poss(fortune, they)
obj(lose, fortune)
case(crash, in)
det(crash, the)
compound(market, stock)
compound(crash, market)
obl(lose, crash)
punct(observe, ,)
conj(lose, observe)
nmod:poss(anniversary, its)
amod(anniversary, 30th)
obj(observe, anniversary)
punct(observe, .)
nsubj(painter, Roy)
flat(Roy, Mason)
cop(painter, be)
advmod(painter, essentially)
det(painter, a)
amod(painter, landscape)
root(ROOT, painter)
nmod:poss(style, whose)
nsubj(have, style)
cc(direction, and)
conj(style, direction)
acl:relcl(painter, have)
det(kinship, a)
obj(have, kinship)
case(watercolorist, with)
det(watercolorist, the)
compound(watercolorist, English)
nmod(kinship, watercolorist)
case(century, of)
det(century, the)
amod(century, early)
amod(century, nineteenth)
nmod(watercolorist, century)
punct(have, ,)
advmod(art, especially)
det(art, the)
advmod(patterned, beautifully)
amod(art, patterned)
appos(watercolorist, art)
case(John, of)
nmod(art, John)
acl(art, sell)
obj(sell, Cotman)
punct(painter, .)
cc(realize, and)
case(master, like)
det(master, this)
amod(master, english)
obl(realize, master)
punct(realize, ,)
nsubj(realize, Mason)
root(ROOT, realize)
nmod:poss(subject, he)
nsubj(result, subject)
case(mass, in)
amod(mass, large)
punct(mass, ,)
amod(mass, simplify)
nmod(subject, mass)
nsubj(result, which)
punct(result, ,)
mark(seem, though)
nsubj(seem, they)
advcl(result, seem)
xcomp(seem, effortless)
punct(result, ,)
cop(result, be)
case(reality, in)
obl(result, reality)
det(result, the)
ccomp(realize, result)
case(design, of)
amod(design, skilled)
nmod(result, design)
acl(design, bear)
case(work, of)
amod(work, hard)
obl(bear, work)
cc(distillation, and)
det(distillation, a)
amod(distillation, thorough)
conj(work, distillation)
case(form, of)
det(form, the)
amod(form, natural)
nmod(distillation, form)
nsubj(inspire, that)
acl:relcl(form, inspire)
obj(inspire, they)
punct(realize, .)
case(boy, as)
det(boy, a)
obl(begin, boy)
nsubj(begin, Roy)
flat(Roy, Mason)
root(ROOT, begin)
det(process, the)
amod(process, long)
obj(begin, process)
mark(extract, of)
acl(process, extract)
det(goodness, the)
obj(extract, goodness)
case(door, of)
det(door, the)
case(door, out)
punct(door, -)
case(door, of)
punct(door, -)
nmod(goodness, door)
punct(tang, ,)
nsubj(tang, it)
cop(tang, be)
parataxis(begin, tang)
case(weather, of)
nmod(tang, weather)
punct(tang, ,)
nsubj(change, it)
cop(change, be)
parataxis(tang, change)
case(season, of)
nmod(change, season)
punct(mood, ,)
nsubj(mood, it)
cop(mood, be)
amod(mood, variable)
parataxis(change, mood)
punct(tang, .)
nmod:poss(father, he)
nsubj(take, father)
punct(father, ,)
det(engraver, a)
amod(engraver, professional)
conj(father, engraver)
cc(painter, and)
det(painter, a)
amod(painter, amateur)
compound(painter, landscape)
conj(father, painter)
punct(take, ,)
root(ROOT, take)
nmod:poss(son, he)
obj(take, son)
case(expedition, on)
amod(expedition, numerous)
compound(expedition, hunt)
obl(take, expedition)
punct(impart, ,)
cc(impart, and)
conj(take, impart)
case(they, to)
obl(impart, they)
nmod:poss(knowledge, he)
obj(impart, knowledge)
cc(love, and)
conj(knowledge, love)
case(nature, of)
nmod(knowledge, nature)
punct(take, .)
case(background, out)
case(background, of)
det(background, this)
obl(natural, background)
case(hunt, of)
nmod(background, hunt)
cc(fishing, and)
conj(hunt, fishing)
punct(natural, ,)
expl(natural, it)
cop(natural, be)
advmod(natural, only)
root(ROOT, natural)
mark(paint, that)
nsubj(paint, Roy)
advmod(paint, first)
ccomp(natural, paint)
obj(paint, subject)
nsubj(know, he)
acl:relcl(subject, know)
xcomp(know, best)
punct(hunter, :)
obj(know, hunter)
case(field, in)
det(field, the)
nmod(hunter, field)
punct(fishermen, ,)
conj(hunter, fishermen)
case(stream, in)
det(stream, the)
nmod(fishermen, stream)
punct(duck, ,)
conj(stream, duck)
cc(geese, and)
conj(stream, geese)
case(wing, on)
det(wing, the)
nmod(stream, wing)
punct(hunter, --)
advmod(backdrop, almost)
advmod(backdrop, always)
case(backdrop, against)
det(backdrop, a)
amod(backdrop, vast)
conj(wing, backdrop)
case(landscape, of)
compound(landscape, weather)
nmod(backdrop, landscape)
punct(natural, .)
nsubj(matter, it)
cop(matter, be)
det(matter, this)
amod(matter, subject)
root(ROOT, matter)
nsubj(bring, that)
aux(bring, have)
acl:relcl(matter, bring)
iobj(bring, Mason)
det(large, a)
xcomp(bring, large)
cc(enthusiastic, and)
conj(large, enthusiastic)
xcomp(bring, follow)
case(sportsman, among)
obl(follow, sportsman)
punct(performance, ,)
cc(performance, but)
nsubj(performance, it)
cop(performance, be)
nmod:poss(performance, he)
amod(performance, exceptional)
conj(matter, performance)
case(motif, with)
det(motif, this)
nmod(performance, motif)
nsubj(commend, that)
acl:relcl(motif, commend)
obj(commend, he)
case(artist, to)
obl(commend, artist)
cc(collector, and)
amod(collector, discerning)
conj(artist, collector)
punct(matter, . )
nsubj(have, Mason)
root(ROOT, have)
mark(earn, to)
xcomp(have, earn)
det(privilege, the)
obj(earn, privilege)
mark(devote, of)
acl(privilege, devote)
obj(devote, himself)
advmod(devote, exclusively)
case(painting, to)
obl(devote, painting)
punct(have, .)
case(other, like)
amod(other, many)
obl(have, other)
punct(have, ,)
nsubj(have, he)
root(ROOT, have)
mark(work, to)
xcomp(have, work)
advmod(work, hard)
punct(work, ,)
amod(hour, long)
obj(work, hour)
case(business, in)
det(business, a)
amod(business, struggle)
compound(business, family)
obl(work, business)
nsubj:pass(ally, which)
punct(ally, ,)
mark(ally, though)
nsubj:pass(ally, it)
aux:pass(ally, be)
advcl(work, ally)
case(art, to)
obl(ally, art)
case(kind, of)
det(kind, a)
nmod(art, kind)
punct(kind, --)
det(design, the)
appos(kind, design)
cc(production, and)
conj(design, production)
case(seal, of)
amod(seal, engrave)
nmod(design, seal)
punct(bear, --)
parataxis(have, bear)
det(relation, no)
obj(bear, relation)
case(painting, to)
det(painting, the)
nmod(relation, painting)
case(picture, of)
nmod(painting, picture)
punct(have, .)
cc(teach, but)
nsubj(teach, it)
aux(teach, do)
root(ROOT, teach)
iobj(teach, Roy)
det(technique, the)
amod(technique, basic)
obj(teach, technique)
case(art, of)
amod(art, commercial)
nmod(technique, art)
punct(conduct, ,)
cc(conduct, and)
advmod(conduct, later)
punct(conduct, ,)
case(year, for)
nummod(year, twelve)
obl(conduct, year)
punct(conduct, ,)
nsubj(conduct, he)
cc(sister, and)
nmod:poss(sister, he)
conj(he, sister)
conj(he, Nina)
conj(teach, conduct)
det(studio, a)
compound(art, advertising)
compound(studio, art)
obj(conduct, studio)
case(Philadelphia, in)
obl(conduct, Philadelphia)
punct(teach, .)
case(death, on)
det(death, the)
obl(return, death)
case(father, of)
nmod:poss(father, they)
nmod(death, father)
punct(return, ,)
nsubj(return, they)
root(ROOT, return)
case(home, to)
nmod:poss(home, they)
obl(return, home)
case(Batavia, in)
obl(return, Batavia)
punct(Batavia, ,)
compound(York, New)
appos(Batavia, York)
punct(return, .)
case(year, after)
amod(year, more)
obl(establish, year)
case(effort, of)
amod(effort, concentrate)
nmod(year, effort)
punct(establish, ,)
nsubj(establish, Roy)
cc(brother, and)
nmod:poss(brother, he)
conj(Roy, brother)
conj(Roy, Max)
advmod(establish, finally)
root(ROOT, establish)
det(business, a)
amod(business, thrive)
compound(business, family)
obj(establish, business)
case(stand, at)
det(stand, the)
amod(stand, old)
obl(establish, stand)
punct(establish, .)
case(time, during)
det:predet(time, all)
det(time, this)
obl(continue, time)
nsubj(continue, Roy)
root(ROOT, continue)
mark(paint, to)
xcomp(continue, paint)
punct(paint, ,)
advmod(only, first)
advmod(weekend, only)
case(weekend, on)
obl(paint, weekend)
punct(permit, ,)
cc(permit, and)
advmod(permit, then)
punct(permit, ,)
mark(permit, as)
det(business, the)
compound(business, family)
nsubj(permit, business)
advcl(paint, permit)
punct(permit, ,)
case(period, for)
amod(period, longer)
obl(permit, period)
punct(continue, .)
advmod(withdraw, gradually)
nsubj(withdraw, he)
root(ROOT, withdraw)
case(shop, from)
det(shop, the)
obl(withdraw, shop)
advmod(withdraw, altogether)
punct(work, ,)
cc(work, and)
case(year, for)
det(year, the)
amod(year, past)
nummod(year, thirty)
obl(work, year)
punct(work, ,)
nsubj(work, he)
aux(work, have)
conj(withdraw, work)
advmod(work, independently)
case(painter, as)
det(painter, a)
obl(work, painter)
punct(work, ,)
case(expedition, except)
case(expedition, for)
nmod:poss(expedition, he)
amod(expedition, continue)
compound(expedition, hunt)
cc(fishing, and)
conj(hunt, fishing)
obl(work, expedition)
punct(withdraw, .)
cc(take, but)
advmod(these, even)
case(these, on)
obl(take, these)
punct(take, ,)
det(palette, the)
nsubj(take, palette)
advmod(take, often)
root(ROOT, take)
compound:prt(take, over)
mark(cool, while)
det(shotgun, the)
nsubj(cool, shotgun)
advcl(take, cool)
compound:prt(cool, off)
punct(take, !)
punct(take, !)
case(friendship, Except)
case(friendship, for)
det(friendship, a)
amod(friendship, rich)
obl(develop, friendship)
case(painter, with)
det(painter, the)
nmod(friendship, painter)
punct(Chauncey, ,)
appos(painter, Chauncey)
flat(Chauncey, Ryder)
nsubj(give, who)
acl:relcl(Chauncey, give)
iobj(give, he)
det(instruction, the)
advmod(instruction, only)
amod(instruction, professional)
obj(give, instruction)
nsubj(have, he)
advmod(have, ever)
acl:relcl(instruction, have)
punct(limit, --)
cc(limit, and)
nsubj:pass(limit, this)
aux:pass(limit, be)
conj(give, limit)
case(lesson, to)
det(lesson, a)
amod(lesson, few)
obl(limit, lesson)
punct(limit, ,)
mark(go, though)
det(artist, the)
nummod(artist, two)
nsubj(go, artist)
advmod(go, often)
advcl(limit, go)
case(trip, on)
compound(trip, painting)
obl(go, trip)
advmod(go, together)
punct(develop, --)
nsubj(develop, Roy)
root(ROOT, develop)
nmod:poss(art, he)
obj(develop, art)
case(himself, by)
obl(develop, himself)
punct(develop, .)
case(tradition, in)
det(tradition, the)
amod(tradition, best)
obl(teach, tradition)
punct(teach, ,)
nsubj(teach, he)
advmod(teach, first)
root(ROOT, teach)
obj(teach, himself)
mark(see, to)
xcomp(teach, see)
punct(see, ,)
advmod(draw, then)
mark(draw, to)
advcl(see, draw)
case(accuracy, with)
obl(draw, accuracy)
cc(assurance, and)
conj(accuracy, assurance)
punct(paint, ,)
cc(paint, and)
advmod(paint, then)
mark(paint, to)
conj(draw, paint)
punct(teach, .)
nsubj(work, he)
root(ROOT, work)
case(oil, in)
obl(work, oil)
case(year, for)
obl(work, year)
mark(begin, before)
advcl(work, begin)
nmod:poss(work, he)
obj(begin, work)
case(watercolor, in)
obl(begin, watercolor)
punct(claim, ,)
cc(claim, and)
nmod:poss(recognition, he)
amod(recognition, first)
amod(recognition, public)
nsubj(claim, recognition)
cc(honor, and)
amod(honor, early)
conj(recognition, honor)
punct(recognition, ,)
case(election, include)
nmod:poss(election, he)
nmod(recognition, election)
case(Academy, to)
det(Academy, the)
nmod(election, Academy)
punct(essays, ,)
cop(essays, be)
case(essays, for)
nmod:poss(essays, he)
obl(claim, essays)
case(medium, in)
det(medium, the)
amod(medium, heavier)
nmod(essays, medium)
punct(essays, .)
advmod(claim, gradually)
nsubj(claim, watercolor)
conj(work, claim)
nmod:poss(affection, he)
amod(affection, greater)
obj(claim, affection)
case(today, until)
obl(become, today)
nsubj(become, it)
aux(become, have)
ccomp(claim, become)
nmod:poss(major, he)
xcomp(become, major)
punct(become, ,)
mark(exclusive, if)
advmod(exclusive, not)
amod(technique, exclusive)
punct(technique, ,)
advcl(become, technique)
punct(work, .)
expl(privilege, it)
aux(privilege, have)
cop(privilege, be)
nmod:poss(privilege, my)
root(ROOT, privilege)
mark(paint, to)
csubj(privilege, paint)
case(Roy, with)
obl(paint, Roy)
flat(Roy, Mason)
case(occasion, on)
amod(occasion, numerous)
obl(paint, occasion)
punct(paint, ,)
advmod(vicinity, mostly)
case(vicinity, in)
det(vicinity, the)
obl(paint, vicinity)
case(Batavia, of)
nmod(vicinity, Batavia)
punct(privilege, .)
advmod(often, more)
advmod(find, often)
mark(find, than)
advmod(often, not)
nsubj(find, I)
aux(find, have)
root(ROOT, find)
amod(excuse, easy)
obj(find, excuse)
mark(leave, to)
acl(excuse, leave)
nmod:poss(work, my)
amod(work, own)
obj(leave, work)
cc(stand, and)
conj(leave, stand)
case(distance, at)
det(distance, a)
amod(distance, respectable)
obl(stand, distance)
advmod(watch, where)
nsubj(watch, I)
aux(watch, could)
acl:relcl(distance, watch)
det(man, this)
obj(watch, man)
xcomp(watch, transform)
amod(nature, raw)
obj(transform, nature)
case(painting, into)
det(painting, a)
amod(painting, compose)
punct(painting, ,)
advmod(imitative, not)
amod(painting, imitative)
punct(painting, ,)
obl(transform, painting)
punct(find, .)
obj(observe, what)
nsubj(observe, I)
aux(observe, have)
csubj(process, observe)
obj(observe, time)
cc(time, and)
conj(time, time)
advmod(observe, again)
cop(process, be)
det(process, a)
root(ROOT, process)
case(integration, of)
nmod(process, integration)
punct(integration, ,)
conj(integration, integration)
nsubj(begin, that)
acl:relcl(integration, begin)
case(design, as)
amod(design, abstract)
obl(begin, design)
cc(take, and)
advmod(take, gradually)
conj(begin, take)
case(form, on)
amod(form, recognizable)
obl(take, form)
punct(pattern, ;)
punct(pattern, ;)
compound(pattern, color)
appos(process, pattern)
nsubj:pass(make, that)
aux:pass(make, be)
acl:relcl(pattern, make)
mark(weave, to)
xcomp(make, weave)
case(composition, throughout)
det(composition, the)
amod(composition, whole)
obl(weave, composition)
punct(make, ;)
punct(make, ;)
cc(control, and)
det(all, that)
advmod(all, over)
punct(all, -)
det(control, all)
punct(control, ,)
amod(control, amazing)
conj(pattern, control)
case(wash, of)
amod(wash, large)
nmod(control, wash)
nsubj(stylemark, which)
cop(stylemark, be)
det(stylemark, the)
compound(stylemark, Mason)
acl:relcl(wash, stylemark)
punct(process, . )
advmod(come, finally)
root(ROOT, come)
det(flick, those)
amod(flick, little)
obj(come, flick)
case(brush, of)
det(brush, a)
compound(brush, rigger)
nmod(flick, brush)
cc(do, and)
det(job, the)
nsubj:pass(do, job)
aux:pass(do, be)
conj(come, do)
punct(come, .)
root(ROOT, inspir)
punct(inspir, --)
discourse(inspir, yes)
punct(inspir, ;)
punct(inspir, ;)
parataxis(inspir, instructive)
punct(instructive, --)
advmod(duplicable, maybe)
punct(duplicable, ;)
punct(duplicable, ;)
discourse(instructive, duplicable)
punct(duplicable, --)
discourse(duplicable, no)
punct(duplicable, !)
punct(duplicable, !)
cc(have, but)
case(fact, for)
det(fact, the)
amod(fact, technical)
obl(have, fact)
punct(have, ,)
nsubj(have, we)
root(ROOT, have)
det(artist, the)
nmod:poss(testimony, artist)
case(artist, 's)
amod(testimony, own)
obj(have, testimony)
punct(have, :)
punct(have, ``)
case(year, of)
amod(year, late)
obl(find, year)
punct(find, ,)
nsubj(find, I)
root(ROOT, find)
mark(like, that)
nsubj(like, I)
ccomp(find, like)
obj(like, best)
mark(work, to)
acl(best, work)
case(door, out)
punct(out, -)
case(door, of)
punct(door, -)
obl(work, door)
punct(find, .)
advmod(make, first)
nsubj(make, I)
root(ROOT, make)
amod(sketch, preliminary)
compound(sketch, watercolor)
obj(make, sketch)
case(scale, in)
compound(scale, quarter)
nmod(sketch, scale)
punct(inch, ()
advmod(inch, approximately)
compound(inch, Af)
appos(scale, inch)
punct(inch, ))
case(which, in)
obl(pay, which)
nsubj(pay, I)
acl:relcl(scale, pay)
amod(attention, particular)
obj(pay, attention)
case(principle, to)
det(principle, the)
compound(principle, design)
obl(pay, principle)
case(value, of)
nummod(value, three)
amod(value, simple)
nmod(principle, value)
punct(value, --)
det(light, the)
amod(light, lightest)
appos(value, light)
punct(tone, ,)
det(tone, the)
amod(tone, middle)
conj(light, tone)
punct(dark, ,)
cc(dark, and)
det(dark, the)
amod(dark, darkest)
conj(light, dark)
punct(dark, --)
mark(reduce, by)
advcl(dark, reduce)
det(form, the)
obj(reduce, form)
case(subject, of)
nmod:poss(subject, my)
nmod(form, subject)
case(pattern, to)
det(pattern, these)
amod(pattern, large)
nmod(subject, pattern)
punct(make, .)
mark(be, if)
det(figure, a)
amod(figure, human)
nsubj(be, figure)
cc(life, or)
amod(life, wild)
conj(figure, life)
advcl(try, be)
mark(part, to)
cop(part, be)
xcomp(be, part)
case(picture, of)
det(picture, the)
amod(picture, project)
amod(picture, final)
nmod(part, picture)
punct(try, ,)
nsubj(try, I)
root(ROOT, try)
mark(place, to)
xcomp(try, place)
obj(place, they)
case(sketch, in)
det(sketch, the)
amod(sketch, initial)
obl(place, sketch)
punct(place, .)
case(I, for)
obl(belong, I)
punct(belong, ,)
nsubj(belong, these)
aux(belong, will)
conj(try, belong)
advmod(completely, more)
advmod(belong, completely)
case(surroundings, to)
nmod:poss(surroundings, they)
obl(belong, surroundings)
mark(conceive, if)
nsubj:pass(conceive, they)
aux:pass(conceive, be)
advcl(belong, conceive)
case(stage, in)
det(stage, this)
amod(stage, early)
obl(conceive, stage)
punct(admit, ,)
mark(admit, though)
nsubj(admit, I)
advmod(admit, freely)
advcl(conceive, admit)
mark(hesitate, that)
nsubj(hesitate, I)
aux(hesitate, do)
advmod(hesitate, not)
ccomp(admit, hesitate)
mark(add, to)
xcomp(hesitate, add)
cc(eliminate, or)
conj(add, eliminate)
obj(eliminate, figure)
case(sheet, on)
det(sheet, the)
amod(sheet, full)
obl(eliminate, sheet)
mark(serve, when)
nsubj(serve, it)
advcl(eliminate, serve)
nmod:poss(purpose, my)
amod(purpose, final)
obj(serve, purpose)
punct(try, .)
punct(try, ``)
nsubj(convinced, I)
cop(convinced, be)
advmod(convinced, thoroughly)
root(ROOT, convinced)
mark(suffer, that)
amod(watercolor, most)
nsubj(suffer, watercolor)
ccomp(convinced, suffer)
mark(expect, because)
det(artist, the)
nsubj(expect, artist)
advcl(suffer, expect)
nsubj(do, nature)
aux(do, will)
ccomp(expect, do)
nmod:poss(compose, he)
obj(do, compose)
case(he, for)
obl(do, he)
punct(convinced, ;)
punct(convinced, ;)
case(result, as)
det(result, a)
obl(translation, result)
punct(translation, ,)
amod(picture, such)
nsubj(translation, picture)
cop(translation, be)
advmod(translation, only)
det(translation, a)
amod(translation, literal)
parataxis(convinced, translation)
case(what, of)
nmod(translation, what)
det(artist, the)
nsubj(find, artist)
acl:relcl(what, find)
case(scene, in)
det(scene, the)
obl(find, scene)
case(he, before)
obl(find, he)
punct(convinced, .)
advmod(appear, just)
mark(appear, because)
det(tree, a)
nsubj(appear, tree)
cc(object, or)
amod(object, other)
conj(tree, object)
advcl(be, appear)
case(spot, in)
det(spot, a)
amod(spot, certain)
obl(appear, spot)
root(ROOT, be)
advmod(be, absolutely)
det(reason, no)
nsubj(be, reason)
mark(place, to)
acl(reason, place)
obj(place, it)
case(position, in)
det(position, the)
amod(position, same)
obl(place, position)
case(painting, in)
det(painting, the)
nmod(position, painting)
punct(place, ,)
mark(serve, unless)
det(position, the)
nsubj(serve, position)
advcl(place, serve)
det(design, the)
obj(serve, design)
case(composition, of)
det(composition, the)
amod(composition, whole)
nmod(design, composition)
punct(be, .)
mark(study, if)
det(artist, the)
nsubj(study, artist)
aux(study, would)
advcl(result, study)
nmod:poss(work, he)
obj(study, work)
advmod(thoroughly, more)
advmod(study, thoroughly)
cc(move, and)
conj(study, move)
amod(unit, certain)
obj(move, unit)
case(design, in)
nmod:poss(design, he)
obl(move, design)
punct(result, ,)
advmod(result, often)
advmod(slightly, only)
advmod(result, slightly)
punct(result, ,)
amod(picture, finer)
nsubj(result, picture)
aux(result, would)
root(ROOT, result)
punct(result, .)
case(experience, out)
case(experience, of)
amod(experience, long)
obl(find, experience)
nsubj(find, I)
aux(find, have)
root(ROOT, find)
mark(trace, that)
amod(figure, incidental)
nsubj:pass(trace, figure)
cc(object, and)
amod(object, other)
conj(figure, object)
case(tree, like)
nmod(object, tree)
punct(log, ,)
conj(tree, log)
punct(bush, ,)
cc(bush, and)
conj(tree, bush)
aux(trace, can)
aux:pass(trace, be)
ccomp(find, trace)
case(sketch, from)
det(sketch, the)
amod(sketch, original)
obl(trace, sketch)
cc(move, and)
conj(trace, move)
obl(move, about)
case(area, in)
det(area, the)
amod(area, major)
obl(move, area)
case(sheet, on)
det(sheet, the)
amod(sheet, final)
nmod(area, sheet)
mark(occupy, until)
nsubj(occupy, they)
advcl(move, occupy)
det(position, the)
amod(position, right)
obj(occupy, position)
punct(position, ,)
obj(call, which)
nsubj(call, I)
acl:relcl(position, call)
xcomp(call, click)
punct(find, .)
punct(find, ``)
nsubj(valid, speed)
mark(painting, in)
acl(speed, painting)
det(picture, a)
obj(painting, picture)
cop(valid, be)
root(ROOT, valid)
advmod(valid, only)
mark(impart, when)
nsubj(impart, it)
advcl(valid, impart)
obj(impart, spontaneity)
cc(crispness, and)
conj(spontaneity, crispness)
punct(do, ,)
cc(do, but)
mark(have, unless)
det(artist, the)
nsubj(have, artist)
conj(valid, have)
obj(have, lot)
case(experience, of)
nmod(lot, experience)
mark(control, so)
fixed(so, that)
nsubj(control, he)
aux(control, can)
advcl(do, control)
amod(execution, rapid)
obj(control, execution)
punct(do, ,)
nsubj(do, he)
aux(do, would)
parataxis(valid, do)
advmod(do, well)
mark(take, to)
xcomp(do, take)
det(sketch, these)
amod(sketch, first)
obj(take, sketch)
cc(reorder, and)
advmod(reorder, soberly)
conj(take, reorder)
nmod:poss(design, they)
obj(reorder, design)
mark(achieve, to)
advcl(reorder, achieve)
det(composition, a)
amod(composition, unified)
obj(achieve, composition)
punct(valid, .)
punct(valid, ``)
mark(seem, if)
nsubj(seem, I)
aux(seem, have)
advcl(mean, seem)
mark(emphasize, to)
xcomp(seem, emphasize)
det(structure, the)
obj(emphasize, structure)
case(composition, of)
det(composition, the)
nmod(structure, composition)
punct(mean, ,)
nsubj(mean, I)
root(ROOT, mean)
mark(project, to)
xcomp(mean, project)
amod(concern, equal)
obj(project, concern)
case(color, for)
nmod(concern, color)
punct(mean, .)
advmod(bright, often)
punct(bright, ,)
mark(work, in)
advcl(bright, work)
case(door, out)
punct(door, -)
case(door, of)
punct(door, -)
obl(work, door)
case(condition, under)
det(condition, all)
obl(work, condition)
case(light, of)
nmod(condition, light)
cc(atmosphere, and)
conj(light, atmosphere)
punct(bright, ,)
det(passage, a)
amod(passage, particular)
nsubj(bright, passage)
nsubj(look, that)
acl:relcl(passage, look)
xcomp(look, favorable)
case(relation, in)
obl(favorable, relation)
case(subject, to)
det(subject, the)
nmod(relation, subject)
aux(bright, will)
cop(bright, be)
advmod(bright, too)
root(ROOT, bright)
punct(dull, ,)
advmod(dull, too)
conj(bright, dull)
punct(light, ,)
cc(light, or)
advmod(light, too)
conj(bright, light)
punct(dark, ,)
cc(dark, or)
advmod(dark, too)
conj(light, dark)
mark(view, when)
advcl(dark, view)
advmod(view, indoors)
case(mat, in)
det(mat, a)
obl(view, mat)
punct(make, .)
mark(occur, when)
nsubj(occur, this)
advcl(make, occur)
punct(make, ,)
nsubj(make, I)
conj(bright, make)
det(change, the)
obj(make, change)
case(sketch, on)
det(sketch, the)
obl(make, sketch)
cc(watercolor, or)
case(watercolor, on)
det(watercolor, the)
amod(watercolor, final)
conj(sketch, watercolor)
punct(make, --)
mark(work, if)
nsubj(work, I)
aux(work, have)
aux(work, be)
advcl(make, work)
case(sheet, on)
det(sheet, a)
amod(sheet, full)
obl(work, sheet)
case(field, in)
det(field, the)
nmod(sheet, field)
punct(bright, .)
punct(bright, ``)
mark(work, when)
advcl(square, work)
case(one, from)
obl(work, one)
case(sketch, of)
nmod:poss(sketch, my)
nmod(one, sketch)
nsubj(square, I)
root(ROOT, square)
obj(square, it)
compound:prt(square, up)
cc(project, and)
conj(square, project)
nmod:poss(freehand, its)
amod(form, linear)
compound(freehand, form)
obj(project, freehand)
case(sheet, to)
det(sheet, the)
compound(sheet, watercolor)
obl(project, sheet)
case(charcoal, with)
nmod(sheet, charcoal)
punct(square, .)
mark(complete, when)
det(draft, this)
amod(draft, linear)
nsubj:pass(complete, draft)
aux:pass(complete, be)
advcl(dust, complete)
punct(dust, ,)
nsubj(dust, I)
root(ROOT, dust)
obj(dust, it)
compound:prt(dust, down)
case(image, to)
det(image, a)
amod(image, faint)
obl(dust, image)
punct(dust, .)
case(point, from)
det(point, this)
obl(paint, point)
punct(paint, ,)
nsubj(paint, I)
conj(dust, paint)
advmod(paint, in)
advmod(direct, as)
advmod(paint, direct)
det(manner, a)
obj(paint, manner)
mark(possible, as)
advcl(as, possible)
punct(paint, ,)
mark(flow, by)
advcl(paint, flow)
case(wash, on)
det(wash, the)
obl(flow, wash)
case(mixture, with)
advmod(pure, as)
amod(mixture, pure)
det(mixture, a)
compound(mixture, color)
obl(flow, mixture)
mark(manage, as)
nsubj(manage, I)
aux(manage, can)
advcl(mixture, manage)
punct(paint, .)
advmod(study, however)
punct(study, ,)
advmod(study, first)
nsubj(study, I)
advmod(study, thoughtfully)
root(ROOT, study)
nmod:poss(sketch, my)
obj(study, sketch)
case(improvement, for)
obl(study, improvement)
case(color, of)
nmod(improvement, color)
cc(design, and)
conj(color, design)
case(line, along)
det(line, the)
obl(study, line)
nsubj(describe, I)
aux(describe, have)
acl:relcl(line, describe)
punct(study, .)
advmod(plan, then)
nsubj(plan, I)
root(ROOT, plan)
nmod:poss(attack, my)
obj(plan, attack)
punct(plan, :)
det(part, the)
parataxis(plan, part)
nsubj(finish, I)
aux(finish, will)
acl:relcl(part, finish)
advmod(finish, first)
punct(range, ,)
det(range, the)
conj(part, range)
case(value, of)
nmod(range, value)
punct(accent, ,)
det(accent, the)
conj(part, accent)
case(detail, of)
amod(detail, minor)
nmod(accent, detail)
punct(accent, --)
appos(accent, all)
case(all, in)
nmod(all, all)
punct(mechanic, ,)
conj(all, mechanic)
mark(produce, of)
acl(mechanic, produce)
det(job, the)
amod(job, finish)
obj(produce, job)
case(maximum, with)
det(maximum, a)
obl(produce, maximum)
case(crispness, of)
nmod(maximum, crispness)
punct(plan, .)
mark(longer, the)
advmod(work, longer)
nsubj(work, I)
root(ROOT, work)
punct(sure, ,)
mark(more, the)
advmod(sure, more)
nsubj(sure, I)
cop(sure, be)
parataxis(work, sure)
mark(important, that)
case(I, for)
obl(important, I)
punct(important, ,)
advmod(important, at)
fixed(at, least)
punct(important, ,)
det(method, a)
amod(method, workmanlike)
nsubj(important, method)
cop(important, be)
ccomp(sure, important)
punct(important, .)
nsubj:pass(place, trial)
cc(error, and)
conj(trial, error)
aux:pass(place, be)
advmod(place, better)
conj(important, place)
case(sketch, in)
det(sketch, the)
amod(sketch, preliminary)
obl(place, sketch)
mark(hope, than)
mark(hope, in)
advcl(place, hope)
case(miracle, for)
obl(hope, miracle)
case(painting, in)
det(painting, the)
amod(painting, final)
obl(hope, painting)
punct(place, .)
punct(place, ``)
case(material, as)
fixed(as, for)
obl(use, material)
punct(use, ,)
nsubj(use, I)
root(ROOT, use)
det(best, the)
obj(use, best)
xcomp(use, available)
punct(use, . )
nsubj(work, I)
root(ROOT, work)
case(easel, on)
det(easel, a)
compound(easel, watercolor)
obl(work, easel)
case(field, in)
det(field, the)
obl(work, field)
punct(resort, ,)
cc(resort, and)
advmod(resort, frequently)
conj(work, resort)
case(umbrella, to)
det(umbrella, a)
amod(umbrella, large)
compound(umbrella, garden)
obl(resort, umbrella)
mark(protect, to)
advcl(resort, protect)
nmod:poss(eye, my)
obj(protect, eye)
case(strain, from)
amod(strain, undue)
obl(protect, strain)
punct(work, .)
case(studio, in)
nmod:poss(studio, my)
obl(work, studio)
nsubj(work, I)
root(ROOT, work)
case(table, at)
det(table, a)
compound(top, tilt)
punct(top, -)
amod(table, top)
obl(work, table)
punct(leave, ,)
cc(leave, but)
conj(work, leave)
det(paper, the)
obj(leave, paper)
xcomp(leave, unfixed)
mark(move, so)
fixed(so, that)
nsubj(move, I)
aux(move, can)
advcl(leave, move)
obj(move, it)
advmod(move, freely)
mark(control, to)
advcl(move, control)
det(wash, the)
obj(control, wash)
punct(work, . )
nsubj(use, I)
aux(use, have)
root(ROOT, use)
det(variety, a)
obj(use, variety)
case(papers, of)
amod(weight, heavy)
punct(weight, -)
compound(papers, weight)
compound(make, hand)
punct(make, -)
amod(papers, make)
nmod(variety, papers)
punct(prefer, ,)
cc(prefer, but)
conj(use, prefer)
det(make, a)
amod(make, english)
obj(prefer, make)
punct(make, ,)
amod(surface, rough)
conj(make, surface)
punct(prefer, ,)
case(weight, in)
nummod(pound, 400)
punct(pound, -)
compound(weight, pound)
obl(prefer, weight)
punct(use, .)
mark(select, after)
advcl(sponge, select)
det(sheet, a)
obj(select, sheet)
cc(inspect, and)
conj(select, inspect)
obj(inspect, it)
case(flaw, for)
obl(inspect, flaw)
punct(have, ()
advmod(best, even)
det(best, the)
nsubj(have, best)
advmod(have, sometimes)
parataxis(inspect, have)
amod(nubbin, foreign)
punct(nubbin, ')
obj(have, nubbin)
punct(nubbin, ')
case(surface, on)
nmod:poss(surface, its)
obl(have, surface)
punct(have, ))
punct(sponge, ,)
nsubj(sponge, I)
root(ROOT, sponge)
obj(sponge, it)
advmod(sponge, thoroughly)
case(side, on)
det(side, both)
obl(sponge, side)
case(water, with)
amod(water, clean)
punct(water, ,)
amod(water, cold)
nmod(side, water)
punct(sponge, .)
advmod(dry, then)
nsubj(dry, I)
parataxis(sponge, dry)
det(sheet, the)
obj(dry, sheet)
case(pressure, under)
amod(pressure, mild)
obl(dry, pressure)
mark(lie, so)
fixed(so, that)
nsubj(lie, it)
aux(lie, will)
advcl(dry, lie)
xcomp(lie, flat)
case(board, as)
det(board, a)
obl(lie, board)
punct(dry, .)
punct(dry, ``)
case(addition, in)
obl(make, addition)
case(tool, to)
det(tool, the)
amod(tool, usual)
nmod(addition, tool)
punct(make, ,)
nsubj(make, I)
root(ROOT, make)
amod(use, constant)
obj(make, use)
case(tissue, of)
compound(tissue, cleansing)
nmod(use, tissue)
punct(use, ,)
advmod(only, not)
advmod(wipe, only)
mark(wipe, to)
advcl(make, wipe)
nmod:poss(brush, my)
obj(wipe, brush)
punct(mop, ,)
cc(mop, but)
mark(mop, to)
conj(wipe, mop)
compound:prt(mop, up)
amod(area, certain)
obj(mop, area)
punct(soften, ,)
mark(soften, to)
advcl(mop, soften)
obj(soften, edge)
punct(open, ,)
cc(open, and)
mark(open, to)
conj(soften, open)
compound:prt(open, up)
obj(open, light)
case(wash, in)
amod(wash, dark)
obl(open, wash)
punct(make, .)
det(absorbency, the)
amod(absorbency, great)
root(ROOT, absorbency)
case(tissue, of)
det(tissue, this)
nmod(absorbency, tissue)
cc(fact, and)
det(fact, the)
conj(absorbency, fact)
mark(easier, that)
expl(easier, it)
cop(easier, be)
acl(fact, easier)
mark(control, to)
xcomp(easier, control)
mark(make, than)
det(sponge, a)
nsubj(make, sponge)
advcl(control, make)
obj(make, it)
det(tool, a)
amod(tool, ideal)
xcomp(make, tool)
case(watercolorist, for)
det(watercolorist, the)
nmod(tool, watercolorist)
punct(absorbency, . )
nsubj(use, I)
advmod(use, also)
root(ROOT, use)
det(blower, a)
amod(blower, small)
amod(blower, electric)
compound(blower, hand)
punct(blower, -)
obj(use, blower)
mark(dry, to)
advcl(use, dry)
amod(wash, large)
obj(dry, wash)
case(studio, in)
det(studio, the)
obl(dry, studio)
punct(use, .)
punct(use, ``)
nmod:poss(brush, my)
nsubj(different, brush)
cop(different, be)
root(ROOT, different)
case(those, from)
obl(different, those)
acl(those, use)
case(watercolorist, by)
amod(watercolorist, most)
obl(use, watercolorist)
punct(different, ,)
mark(combine, for)
nsubj(combine, I)
advcl(different, combine)
det(sable, the)
obj(combine, sable)
cc(bristle, and)
det(bristle, the)
conj(sable, bristle)
punct(different, .)
det(sable, the)
amod(sable, red)
nsubj(8, sable)
cop(8, be)
root(ROOT, 8)
punct(8, ;)
punct(8, ;)
nummod(rigger, two)
parataxis(8, rigger)
punct(6, ,)
conj(rigger, 6)
cc(10, and)
conj(rigger, 10)
punct(rigger, ;)
punct(rigger, ;)
cc(brush, and)
det(brush, a)
advmod(large, very)
amod(brush, large)
punct(brush, ,)
amod(brush, flat)
compound(brush, wash)
conj(rigger, brush)
punct(8, .)
det(bristle, the)
nsubj(fitch, bristle)
cop(fitch, be)
det(fitch, a)
root(ROOT, fitch)
nummod(fitch, 2)
cc(brush, and)
det(brush, a)
nummod(half, one)
punct(half, -)
nummod(inch, half)
compound(brush, inch)
conj(fitch, brush)
acl(brush, shave)
case(edge, to)
det(edge, a)
amod(edge, sharp)
compound(edge, chisel)
obl(shave, edge)
punct(fitch, .)
punct(fitch, ``)
nmod:poss(palette, my)
amod(palette, usual)
nsubj(consist, palette)
root(ROOT, consist)
case(color, of)
amod(quality, top)
punct(quality, -)
compound(color, quality)
obl(consist, color)
punct(color, :)
amod(crimson, alizarin)
appos(color, crimson)
punct(orange, ,)
conj(crimson, orange)
punct(sienna, ,)
amod(sienna, raw)
conj(crimson, sienna)
punct(umber, ,)
amod(umber, raw)
conj(crimson, umber)
punct(bur, ,)
conj(crimson, bur)
advmod(sienna, not)
conj(crimson, sienna)
punct(sepia, ,)
conj(crimson, sepia)
punct(crimson, ,)
amod(blue, cerulean)
conj(crimson, blue)
punct(cobalt, ,)
conj(crimson, cobalt)
conj(crimson, blue)
punct(french, ,)
conj(blue, french)
amod(green, ultramarine)
amod(green, blue)
punct(green, ,)
compound(green, Winsor)
conj(crimson, green)
punct(green, ,)
nmod:poss(2, Hooker)
case(Hooker, 's)
amod(2, green)
appos(green, 2)
punct(cadmium, ,)
conj(pale, cadmium)
amod(pale, yellow)
amod(ochre, pale)
punct(ochre, ,)
amod(ochre, yellow)
conj(crimson, ochre)
punct(gray, ,)
nmod:poss(gray, Payne)
case(Payne, 's)
amod(gray, gray)
punct(gray, ,)
compound(gray, charcoal)
conj(crimson, gray)
punct(gray, ,)
nmod:poss(gray, Davy)
case(Davy, 's)
amod(black, gray)
punct(ivory, ,)
cc(ivory, and)
compound(black, ivory)
conj(crimson, black)
punct(black, '')
punct(consist, .)
mark(analyze, in)
advcl(decorativeness, analyze)
det(watercolor, the)
obj(analyze, watercolor)
case(Roy, of)
nmod(watercolor, Roy)
flat(Roy, Mason)
punct(decorativeness, ,)
det(thing, the)
amod(thing, first)
nsubj(decorativeness, thing)
nsubj(come, that)
acl:relcl(thing, come)
case(mind, to)
obl(come, mind)
cop(decorativeness, be)
nmod:poss(decorativeness, they)
amod(decorativeness, essential)
root(ROOT, decorativeness)
punct(have, ,)
cc(have, yet)
det(word, this)
nsubj(have, word)
conj(decorativeness, have)
det:predet(connotation, such)
det(connotation, a)
amod(connotation, varied)
obj(have, connotation)
mark(need, that)
nsubj(need, it)
acl(connotation, need)
det(elaboration, some)
obj(need, elaboration)
advmod(need, here)
punct(true, .)
xcomp(need, true)
punct(synthesis, ,)
det(watercolor, a)
compound(watercolor, Mason)
nsubj(synthesis, watercolor)
cop(synthesis, be)
advmod(synthesis, unmistakably)
det(synthesis, a)
parataxis(true, synthesis)
case(nature, of)
nmod(synthesis, nature)
cc(inventory, rather)
fixed(rather, than)
det(inventory, a)
amod(inventory, detailed)
conj(synthesis, inventory)
punct(decorativeness, .)
case(pattern, unlike)
amod(pattern, many)
amod(pattern, decorative)
obl(full, pattern)
nsubj(present, that)
acl:relcl(pattern, present)
det(convention, a)
amod(convention, static)
amod(convention, flat)
obj(present, convention)
punct(full, ,)
det(artist, this)
nmod:poss(picture, artist)
case(artist, 's)
nsubj(full, picture)
cop(full, be)
root(ROOT, full)
case(atmosphere, of)
obl(full, atmosphere)
cc(climate, and)
conj(atmosphere, climate)
punct(full, .)
amod(observation, long)
nsubj(teach, observation)
aux(teach, have)
parataxis(full, teach)
obj(teach, Mason)
mark(reduce, that)
amod(landscape, most)
nsubj:pass(reduce, landscape)
aux(reduce, can)
aux:pass(reduce, be)
ccomp(teach, reduce)
case(plane, to)
nummod(plane, three)
amod(plane, essential)
obl(reduce, plane)
punct(foreground, :)
det(foreground, a)
appos(plane, foreground)
case(focus, in)
amod(focus, sharp)
nmod(foreground, focus)
punct(foreground, --)
cc:preconj(area, either)
det(area, a)
compound(area, light)
conj(foreground, area)
case(accent, with)
amod(accent, dark)
nmod(area, accent)
cc(one, or)
det(one, a)
amod(one, dark)
conj(accent, one)
case(light, with)
nmod(one, light)
punct(area, ;)
punct(distance, ;)
det(distance, a)
amod(distance, middle)
appos(area, distance)
advmod(contain, often)
acl(distance, contain)
det(motif, the)
amod(motif, major)
obj(contain, motif)
punct(contain, ;)
punct(contain, ;)
cc(background, and)
det(background, a)
conj(motif, background)
punct(background, ,)
advmod(form, usually)
det(form, a)
amod(form, silhouet)
appos(background, form)
acl(form, foil)
case(sky, against)
det(sky, the)
obl(foil, sky)
punct(full, .)
case(principle, in)
case(principle, follow)
det(principle, this)
amod(principle, general)
obl(provide, principle)
punct(provide, ,)
nsubj(provide, Mason)
root(ROOT, provide)
det(observer, the)
obj(provide, observer)
case(progression, with)
det(progression, a)
amod(progression, natural)
compound(progression, eye)
nmod(observer, progression)
case(foreground, from)
nmod(progression, foreground)
case(background, to)
nmod(foreground, background)
punct(create, ,)
cc(create, and)
det(illusion, the)
nsubj:pass(create, illusion)
case(depth, of)
nmod(illusion, depth)
aux:pass(create, be)
advmod(create, instantly)
conj(provide, create)
punct(create, .)
mark(close, when)
nsubj:pass(close, painting)
punct(painting, ,)
nmod:poss(eye, Mason)
case(Mason, 's)
amod(eye, physical)
nsubj:pass(close, eye)
aux:pass(close, be)
advmod(close, half)
punct(close, -)
advcl(create, close)
punct(close, ,)
mark(open, while)
nmod:poss(mind, he)
nmod:poss(eye, mind)
case(mind, 's)
nsubj(open, eye)
cop(open, be)
advmod(open, wide)
advcl(close, open)
punct(account, ,)
cc(account, and)
det(circumstance, this)
nsubj(account, circumstance)
conj(open, account)
case(part, in)
obl(account, part)
case(impression, for)
det(impression, the)
obl(account, impression)
nsubj(wish, he)
acl:relcl(impression, wish)
mark(convey, to)
xcomp(wish, convey)
punct(provide, .)
nsubj(insist, he)
aux(insist, do)
advmod(insist, not)
root(ROOT, insist)
mark(tell, on)
advcl(insist, tell)
obj(tell, all)
nsubj(know, he)
acl:relcl(all, know)
case(subject, about)
det(subject, any)
amod(subject, give)
obl(know, subject)
punct(insist, ;)
punct(insist, ;)
cc(invite, rather)
nmod:poss(picture, he)
nsubj(invite, picture)
conj(insist, invite)
det(observer, the)
obj(invite, observer)
mark(draw, to)
acl(observer, draw)
case(memory, on)
nmod:poss(memory, he)
obl(draw, memory)
punct(memory, ,)
nmod:poss(imagination, he)
conj(memory, imagination)
punct(memory, ,)
nmod:poss(nostalgia, he)
conj(memory, nostalgia)
punct(insist, .)
nsubj(be, it)
root(ROOT, be)
case(reason, for)
det(reason, this)
obl(be, reason)
mark(avoid, that)
nsubj(avoid, Roy)
acl(reason, avoid)
xcomp(avoid, select)
obj(select, subject)
nsubj(require, that)
acl:relcl(subject, require)
amod(recognition, specific)
obj(require, recognition)
case(place, of)
nmod(recognition, place)
case(enjoyment, for)
nmod:poss(enjoyment, they)
nmod(recognition, enjoyment)
punct(reason, .)
nmod:poss(picture, he)
nsubj(generalize, picture)
root(ROOT, generalize)
punct(generalize, ,)
mark(inspire, though)
nsubj:pass(inspire, they)
aux:pass(inspire, be)
advcl(generalize, inspire)
case(locale, by)
det(locale, a)
amod(locale, particular)
obl(inspire, locale)
punct(generalize, ;)
punct(generalize, ;)
nsubj(universalize, they)
parataxis(generalize, universalize)
case(term, in)
obl(universalize, term)
case(weather, of)
nmod(term, weather)
punct(sky, ,)
conj(weather, sky)
punct(earth, ,)
conj(weather, earth)
punct(people, ,)
cc(people, and)
conj(weather, people)
punct(generalize, .)
mark(deal, by)
advcl(find, deal)
case(landscape, with)
amod(landscape, common)
obl(deal, landscape)
case(way, in)
det(way, a)
amod(way, uncommon)
obl(deal, way)
punct(find, ,)
nsubj(find, Roy)
flat(Roy, Mason)
aux(find, have)
root(ROOT, find)
det(niche, a)
amod(niche, particular)
obj(find, niche)
case(art, in)
amod(art, american)
compound(art, landscape)
nmod(niche, art)
punct(find, .)
csubj(experience, live)
case(watercolor, with)
nmod:poss(watercolor, he)
obl(live, watercolor)
cop(experience, be)
det(experience, a)
amod(experience, vicarious)
root(ROOT, experience)
mark(see, of)
acl(experience, see)
obj(see, nature)
xcomp(see, distilled)
case(eye, through)
det(eye, the)
obl(distilled, eye)
case(interpretor, of)
det(interpretor, a)
amod(interpretor, sensitive)
nmod(eye, interpretor)
punct(breath, ,)
det(breath, a)
appos(interpretor, breath)
cc(breadth, and)
conj(breath, breadth)
case(world, of)
det(world, the)
amod(world, outdoor)
nmod(breadth, world)
mark(help, to)
acl(breath, help)
obj(help, man)
xcomp(help, honor)
det(creator, the)
obj(honor, creator)
case(it, of)
nmod(creator, it)
det(it, all)
punct(experience, .)
det(artist, the)
nsubj:pass(bear, artist)
aux:pass(bear, be)
root(ROOT, bear)
case(Gilbert, in)
obl(bear, Gilbert)
flat(Gilbert, Mills)
punct(Gilbert, ,)
compound(York, New)
appos(Gilbert, York)
punct(York, ,)
case(1886, in)
obl(bear, 1886)
punct(York, ,)
cc(move, and)
case(year, until)
nummod(year, two)
obl:tmod(ago, year)
advmod(move, ago)
mark(move, when)
nsubj(move, he)
cc(wife, and)
nmod:poss(wife, he)
conj(he, wife)
advcl(live, move)
case(California, to)
obl(move, California)
punct(live, ,)
nsubj(live, he)
conj(bear, live)
case(York, in)
amod(York, western)
compound(York, New)
obl(live, York)
punct(York, ,)
case(Batavia, in)
nmod(York, Batavia)
punct(live, .)
mark(look, when)
nsubj(look, I)
advcl(live, look)
compound:prt(look, up)
det(date, the)
amod(date, actual)
obj(look, date)
case(birth, of)
nmod:poss(birth, he)
nmod(date, birth)
cc(find, and)
conj(look, find)
obj(find, it)
mark(March, to)
cop(March, be)
xcomp(find, March)
nummod(March, 15th)
punct(realize, ,)
nsubj(realize, I)
parataxis(bear, realize)
mark(bear, that)
nsubj:pass(bear, Roy)
aux:pass(bear, be)
ccomp(realize, bear)
case(sign, under)
det(sign, the)
amod(sign, right)
amod(sign, zodiacal)
obl(bear, sign)
case(watercolorist, for)
det(watercolorist, a)
nmod(sign, watercolorist)
punct(sign, :)
det(sign, the)
compound(sign, water)
appos(sign, sign)
case(Pisces, of)
nmod(sign, Pisces)
punct(February, ()
appos(sign, February)
nummod(February, 18)
case(March, through)
nmod(February, March)
nummod(March, 20)
punct(February, ))
punct(February, .)
cc(feature, and)
advmod(often, how)
advmod(often, very)
advmod(feature, often)
det(plane, a)
compound(plane, water)
nsubj:pass(feature, plane)
aux:pass(feature, be)
conj(sign, feature)
case(landscape, in)
nmod:poss(landscape, he)
obl(feature, landscape)
punct(appropriate, ,)
cc(appropriate, and)
advmod(appropriate, how)
advmod(appear, appropriate)
mark(appear, that)
nsubj(appear, he)
aux(appear, should)
advcl(feature, appear)
case(Artist, in)
amod(Artist, american)
obl(appear, Artist)
advmod(appear, again)
punct(appear, ,)
case(month, in)
nmod:poss(month, he)
amod(month, natal)
obl(appear, month)
case(March, of)
nmod(month, March)
punct(month, !)
punct(month, !)
case(year, over)
det(year, the)
obl(begin, year)
punct(award, ,)
advcl(award, begin)
case(1929, in)
obl(begin, 1929)
punct(award, ,)
nsubj:pass(award, Mason)
aux(award, have)
aux:pass(award, be)
parataxis(bear, award)
nummod(prize, seventeen)
amod(prize, major)
obj(award, prize)
case(medal, include)
nummod(medal, two)
compound(medal, gold)
nmod(prize, medal)
punct(award, ;)
punct(award, ;)
nummod(award, two)
compound(award, Ranger)
compound(award, fund)
compound(award, purchase)
appos(medal, award)
punct(award, ;)
punct(award, ;)
det(Joseph, the)
appos(award, Joseph)
flat(Joseph, Pennell)
compound(Medal, memorial)
appos(Joseph, Medal)
punct(Joseph, ;)
punct(Joseph, ;)
nummod(prize, two)
compound(prize, American)
compound(prize, Watercolor)
compound(prize, Society)
appos(Joseph, prize)
punct(prize, ;)
punct(prize, ;)
det(Prize, the)
compound(Prize, Blair)
compound(Prize, purchase)
appos(prize, Prize)
case(watercolor, for)
nmod(Prize, watercolor)
punct(Institute, ,)
compound(Institute, Art)
conj(watercolor, Institute)
case(Chicago, of)
nmod(Institute, Chicago)
punct(Prize, ;)
punct(Prize, ;)
cc(other, and)
conj(Prize, other)
case(Buffalo, in)
nmod(other, Buffalo)
punct(York, ,)
compound(York, New)
conj(Buffalo, York)
punct(Chautauqua, ,)
conj(Buffalo, Chautauqua)
punct(Haven, ,)
compound(Haven, New)
conj(Buffalo, Haven)
punct(Rochester, ,)
conj(Buffalo, Rochester)
punct(Rockport, ,)
conj(Buffalo, Rockport)
punct(prize, ,)
cc(prize, and)
advmod(recently, most)
advmod(prize, recently)
punct(prize, ,)
det(prize, the)
compound(prize, $)
nummod($, 300)
conj(Buffalo, prize)
case(watercolor, for)
det(watercolor, a)
nmod(prize, watercolor)
case(Association, at)
det(Association, the)
compound(Association, Laguna)
compound(Art, Beach)
compound(Association, Art)
nmod(watercolor, Association)
punct(elect, ,)
nsubj:pass(elect, he)
aux:pass(elect, be)
acl:relcl(prize, elect)
case(Academy, to)
det(Academy, the)
compound(Academy, National)
obl(elect, Academy)
case(Design, of)
nmod(Academy, Design)
case(associate, as)
det(associate, a)
nmod(Academy, associate)
case(class, in)
det(class, the)
compound(class, oil)
nmod(associate, class)
case(1931, in)
nmod(associate, 1931)
punct(receive, ()
mark(receive, after)
acl(associate, receive)
nmod:poss(Prize, he)
amod(Prize, first)
compound(Fund, Ranger)
compound(Prize, Fund)
compound(Prize, purchase)
obj(receive, Prize)
case(Academy, at)
det(Academy, the)
nmod(Prize, Academy)
case(1930, in)
nmod(Academy, 1930)
punct(receive, ))
punct(elevate, ,)
cc(elevate, and)
conj(receive, elevate)
case(Academicianship, to)
obl(elevate, Academicianship)
case(1940, in)
obl(elevate, 1940)
punct(bear, .)
amod(membership, other)
nsubj(include, membership)
root(ROOT, include)
det(Society, the)
compound(Society, American)
compound(Society, Watercolor)
obj(include, Society)
punct(Society, ,)
compound(Club, Philadelphia)
compound(Color, Water)
compound(Club, Color)
conj(Society, Club)
punct(Society, ,)
compound(artist, ally)
conj(Society, artist)
case(America, of)
nmod(artist, America)
punct(artist, ,)
compound(artist, Audubon)
conj(Society, artist)
punct(Society, ,)
compound(Society, Baltimore)
compound(Society, Watercolor)
appos(Society, Society)
punct(beat, .)
det(gymnast, the)
amod(gymnast, russian)
nsubj(beat, gymnast)
parataxis(include, beat)
det(tar, the)
obj(beat, tar)
case(gymnast, out)
case(gymnast, of)
det(gymnast, the)
amod(gymnast, american)
obl(beat, gymnast)
case(Olympics, in)
det(Olympics, the)
nummod(Olympics, 1960)
obl(beat, Olympics)
case(reason, for)
nummod(reason, one)
obl(beat, reason)
punct(better, --)
nsubj(better, they)
cop(better, be)
parataxis(beat, better)
punct(include, .)
nsubj:pass(train, they)
aux:pass(train, be)
advmod(train, better)
root(ROOT, train)
punct(train, ,)
advmod(look, better)
conj(train, look)
punct(build, ,)
advmod(build, better)
conj(look, build)
punct(disciplined, ,)
advmod(disciplined, better)
conj(build, disciplined)
cc(something, and)
conj(disciplined, something)
amod(something, else)
punct(train, --)
nsubj(dancer, they)
cop(dancer, be)
amod(dancer, better)
parataxis(train, dancer)
punct(train, .)
nmod:poss(athlete, we)
nsubj(begin, athlete)
aux(begin, be)
advmod(begin, only)
advmod(begin, just)
root(ROOT, begin)
mark(learn, to)
xcomp(begin, learn)
mark(study, that)
nsubj(study, they)
aux(study, must)
ccomp(learn, study)
obj(study, dance)
punct(begin, .)
det(Russians, the)
nsubj:pass(train, Russians)
aux:pass(train, be)
advmod(train, all)
root(ROOT, train)
case(dancer, as)
obl(train, dancer)
mark(start, before)
nsubj(start, they)
advcl(train, start)
mark(study, to)
xcomp(start, study)
obj(study, gymnastic)
punct(train, .)
cc(gymnastic, but)
advmod(gymnastic, why)
root(ROOT, gymnastic)
case(all, at)
nmod(gymnastic, all)
punct(gymnastic, ?)
punct(gymnastic, ?)
cc(important, and)
cop(important, be)
det(sport, the)
nsubj(important, sport)
advmod(important, really)
root(ROOT, important)
punct(important, ?)
punct(important, ?)
advmod(all, after)
obl(do, all)
punct(do, ,)
nsubj(do, we)
root(ROOT, do)
advmod(well, pretty)
advmod(do, well)
case(area, in)
det(area, some)
amod(area, other)
obl(do, area)
case(competition, of)
det(competition, the)
compound(competition, Olympics)
nmod(area, competition)
punct(do, .)
cc(do, but)
mark(important, if)
nsubj(important, it)
cop(important, be)
advcl(do, important)
punct(do, ,)
obj(improve, what)
aux(do, can)
nsubj(do, we)
root(ROOT, do)
mark(improve, to)
xcomp(do, improve)
obj(improve, ourselves)
punct(do, ?)
punct(do, ?)
nsubj(more, it)
cop(more, be)
root(ROOT, more)
case(lack, than)
advmod(lack, just)
obl(more, lack)
case(training, of)
compound(training, dance)
nmod(lack, training)
nsubj(problem, that)
cop(problem, be)
nmod:poss(problem, we)
acl:relcl(lack, problem)
punct(more, ,)
mark(learn, for)
advmod(learn, just)
mark(learn, as)
nsubj(learn, gymnastic)
aux(learn, can)
advcl(problem, learn)
case(dance, from)
obl(learn, dance)
punct(have, ,)
nsubj(have, dance)
parataxis(learn, have)
det(thing, some)
advmod(important, very)
amod(thing, important)
obj(have, thing)
mark(learn, to)
acl(thing, learn)
case(gymnastic, from)
obl(learn, gymnastic)
punct(take, .)
advcl(learn, take)
amod(thing, first)
obj(take, thing)
advmod(take, first)
punct(let, ,)
conj(take, let)
obj(let, 's)
xcomp(let, understand)
det(sport, the)
obj(understand, sport)
acl(sport, call)
obj(call, gymnastic)
punct(more, .)
nsubj:pass(make, it)
aux:pass(make, be)
root(ROOT, make)
case(tumble, up)
case(tumble, of)
obl(make, tumble)
punct(tumble, ,)
nsubj:pass(say, which)
aux(say, might)
aux:pass(say, be)
acl:relcl(tumble, say)
mark(start, to)
xcomp(say, start)
case(somersault, with)
det(somersault, a)
obl(start, somersault)
punct(start, ,)
advcl(start, run)
case(stunt, through)
amod(stunt, such)
obl(run, stunt)
case(headstand, as)
nmod(stunt, headstand)
punct(handstand, ,)
conj(headstand, handstand)
punct(cartwheel, ,)
conj(headstand, cartwheel)
punct(backbend, ,)
conj(headstand, backbend)
punct(culminate, ,)
cc(culminate, and)
conj(headstand, culminate)
case(combination, in)
advmod(impossible, nearly)
amod(combination, impossible)
obl(culminate, combination)
case(flip, of)
amod(flip, aerial)
nmod(combination, flip)
cc(twist, and)
conj(flip, twist)
cc(work, and)
compound(work, apparatus)
conj(flip, work)
punct(make, .)
det(apparatus, the)
nsubj(sight, apparatus)
acl(apparatus, use)
case(gymnast, by)
obl(use, gymnast)
cop(sight, be)
advmod(sight, once)
det(sight, a)
amod(sight, common)
root(ROOT, sight)
case(gym, in)
amod(gym, american)
nmod(sight, gym)
punct(drop, ,)
cc(drop, but)
case(1930, about)
obl(drop, 1930)
nsubj:pass(drop, it)
aux:pass(drop, be)
conj(sight, drop)
case(favor, in)
obl(drop, favor)
case(game, of)
nmod(favor, game)
punct(sight, .)
det(bar, the)
amod(bar, parallel)
nsubj:pass(replace, bar)
punct(horse, ,)
conj(bar, horse)
punct(buck, ,)
conj(bar, buck)
punct(springboard, ,)
conj(bar, springboard)
punct(bar, ,)
amod(bar, horizontal)
conj(bar, bar)
punct(ring, ,)
conj(bar, ring)
punct(mat, ,)
cc(mat, and)
conj(bar, mat)
advmod(replace, formerly)
case(gym, in)
det(gym, the)
compound(gym, school)
nsubj:pass(replace, gym)
aux:pass(replace, be)
root(ROOT, replace)
case(baseball, by)
obl(replace, baseball)
punct(volleyball, ,)
conj(baseball, volleyball)
punct(basketball, ,)
conj(baseball, basketball)
cc(football, and)
conj(baseball, football)
punct(replace, .)
cc(use, but)
det(Russians, the)
nsubj(use, Russians)
root(ROOT, use)
obj(use, gymnastic)
case(step, as)
det(step, the)
amod(step, first)
obl(use, step)
case(training, in)
nmod(step, training)
case(sport, for)
det(sport, all)
amod(sport, other)
obl(use, sport)
mark(provide, because)
nsubj(provide, it)
advcl(use, provide)
obj(provide, training)
case(quality, in)
det(quality, every)
amod(quality, basic)
obl(provide, quality)
case(one, except)
nmod(quality, one)
punct(endurance, ,)
nmod(quality, endurance)
punct(use, .)
det(gymnast, the)
nsubj(develop, gymnast)
aux(develop, must)
root(ROOT, develop)
obj(develop, strength)
punct(flexibility, ,)
conj(strength, flexibility)
punct(coordination, ,)
conj(strength, coordination)
punct(timing, ,)
conj(strength, timing)
punct(rhythm, ,)
conj(strength, rhythm)
punct(courage, ,)
conj(strength, courage)
punct(discipline, ,)
conj(strength, discipline)
punct(persistence, ,)
conj(strength, persistence)
cc(desire, and)
det(desire, the)
conj(strength, desire)
case(perfection, for)
nmod(desire, perfection)
punct(develop, .)
case(short, in)
obl(use, short)
punct(use, ,)
nsubj(use, gymnastic)
root(ROOT, use)
det(part, every)
obj(use, part)
case(body, of)
det(body, the)
nmod(part, body)
cc(require, and)
conj(use, require)
det(deal, a)
amod(deal, great)
obj(require, deal)
case(character, of)
nmod(deal, character)
advmod(require, as)
fixed(as, well)
punct(use, .)
det(addition, the)
nsubj(provide, addition)
case(training, of)
compound(training, endurance)
nmod(addition, training)
advmod(addition, later)
punct(provide, ,)
mark(mature, when)
det(body, the)
nsubj(mature, body)
cop(mature, be)
acl:relcl(addition, mature)
advmod(mature, enough)
mark(benefit, to)
advcl(enough, benefit)
case(it, from)
obl(benefit, it)
case(danger, without)
obl(benefit, danger)
case(injury, of)
nmod(danger, injury)
punct(provide, ,)
root(ROOT, provide)
det(quality, that)
amod(quality, final)
obj(provide, quality)
nsubj(make, that)
acl:relcl(quality, make)
det(athlete, the)
amod(athlete, top)
obj(make, athlete)
punct(soldier, ,)
conj(athlete, soldier)
cc(citizen, or)
conj(athlete, citizen)
punct(athlete, .)
det(reason, another)
nsubj(be, reason)
amod(study, gymnastic)
nsubj(valuable, study)
cop(valuable, be)
acl:relcl(reason, valuable)
parataxis(provide, be)
mark(start, that)
nsubj:pass(start, it)
aux(start, can)
aux:pass(start, be)
ccomp(be, start)
advmod(early, very)
advmod(start, early)
case(life, in)
obl(start, life)
punct(provide, . )
punct(start, ()
det(teacher, a)
amod(teacher, enterprising)
nsubj(start, teacher)
cc(parent, or)
conj(teacher, parent)
aux(start, could)
root(ROOT, start)
xcomp(start, train)
det(child, a)
amod(child, healthy)
obj(train, child)
case(age, at)
det(age, the)
obl(train, age)
case(day, of)
nummod(day, seven)
nmod(age, day)
punct(start, . )
amod(Europeans, most)
nsubj(exercise, Europeans)
aux(exercise, have)
aux(exercise, be)
root(ROOT, exercise)
amod(infant, newborn)
obj(exercise, infant)
case(century, for)
obl(exercise, century)
punct(exercise, .)
punct(exercise, ))
case(sport, in)
amod(sport, most)
obl(side, sport)
punct(side, ,)
case(walk, as)
case(walk, in)
amod(walk, most)
obl(side, walk)
case(life, of)
nmod(walk, life)
punct(side, ,)
det(angel, the)
nsubj(side, angel)
cop(side, be)
case(side, on)
det(side, the)
root(ROOT, side)
case(those, of)
nmod(side, those)
nsubj(begin, who)
acl:relcl(those, begin)
xcomp(begin, young)
punct(have, ,)
cc(have, and)
det(competitor, the)
amod(competitor, russian)
nsubj(have, competitor)
case(16, of)
nmod(competitor, 16)
conj(side, have)
case(least, at)
nmod(thirteen, least)
nummod(year, thirteen)
obj(have, year)
case(training, of)
nmod(year, training)
case(he, behind)
nmod(training, he)
punct(side, .)
det(American, the)
nsubj(lucky, American)
cop(lucky, be)
advmod(lucky, very)
root(ROOT, lucky)
mark(have, if)
nsubj(have, he)
advcl(lucky, have)
obj(have, three)
punct(lucky, .)
mark(wish, if)
det(nation, a)
nsubj(wish, nation)
advcl(start, wish)
mark(get, to)
xcomp(wish, get)
det(start, a)
compound(start, head)
obj(get, start)
case(fitness, in)
amod(fitness, physical)
nmod(start, fitness)
case(nation, over)
det(nation, all)
amod(nation, other)
nmod(fitness, nation)
punct(start, ,)
nsubj(start, it)
aux(start, would)
root(ROOT, start)
nmod:poss(student, its)
compound(student, kindergarten)
obj(start, student)
case(program, on)
det(program, a)
obl(start, program)
case(gymnastic, of)
nmod(program, gymnastic)
det(day, the)
nmod:tmod(program, day)
nsubj(enter, they)
acl:relcl(day, enter)
cc(eliminate, and)
advmod(eliminate, thus)
conj(enter, eliminate)
det(number, a)
amod(number, large)
obj(eliminate, number)
case(problem, of)
det(problem, the)
nmod(number, problem)
nsubj(plague, that)
acl:relcl(problem, plague)
amod(school, american)
obj(plague, school)
punct(start, .)
advmod(fatigue, first)
case(problem, of)
det(problem, the)
obl(first, problem)
acl(problem, attack)
aux(fatigue, would)
cop(fatigue, be)
root(ROOT, fatigue)
cc(tension, and)
amod(tension, emotional)
conj(fatigue, tension)
punct(fatigue, ,)
mark(relieve, since)
nsubj(relieve, action)
advcl(fatigue, relieve)
obj(relieve, both)
punct(fatigue, .)
advmod(enough, oddly)
advmod(prove, enough)
punct(prove, ,)
nsubj:pass(prove, it)
aux:pass(prove, be)
root(ROOT, prove)
mark(be, that)
expl(be, there)
aux(be, would)
ccomp(prove, be)
amod(difficulty, less)
compound(difficulty, reading)
nsubj(be, difficulty)
punct(prove, .)
advmod(be, certainly)
expl(be, there)
aux(be, would)
root(ROOT, be)
amod(anxiety, less)
nsubj(be, anxiety)
punct(accident, ,)
amod(accident, fewer)
conj(anxiety, accident)
punct(child, ()
nsubj(child, it)
cop(child, be)
det(child, the)
amod(child, clumsy)
parataxis(anxiety, child)
nsubj(sustain, who)
acl:relcl(child, sustain)
det(injury, the)
amod(injury, worst)
obj(sustain, injury)
punct(sustain, ))
punct(average, ,)
cc(average, and)
amod(average, higher)
amod(average, scholastic)
conj(anxiety, average)
punct(be, ,)
mark(work, since)
compound(child, alert)
nsubj(work, child)
advcl(be, work)
xcomp(work, better)
punct(be, .)
nsubj(know, Russia)
root(ROOT, know)
obj(know, this)
punct(be, ,)
cc(be, and)
nsubj(be, that)
conj(know, be)
advmod(be, why)
expl(be, there)
ccomp(be, be)
advmod(800,000, over)
nsubj(be, 800,000)
nsubj(be, compete)
case(place, for)
obl(compete, place)
case(candidate, as)
obl(compete, candidate)
case(team, for)
det(team, the)
compound(team, Olympic)
amod(team, gymnastic)
nmod(candidate, team)
punct(know, .)
compound(thousand, eighty)
nsubj(win, thousand)
root(ROOT, win)
amod(honor, top)
obj(win, honor)
cc(chance, and)
det(chance, a)
conj(honor, chance)
mark(try, to)
acl(chance, try)
case(team, for)
det(team, the)
obl(try, team)
nmod:npmod(team, itself)
punct(win, .)
nsubj(find, we)
aux(find, could)
advmod(find, scarcely)
root(ROOT, find)
obj(find, eighty)
case(land, in)
nmod:poss(land, we)
amod(land, great)
obl(find, land)
case(people, of)
advmod(million, over)
compound(million, 180)
nummod(people, million)
nmod(land, people)
punct(find, .)
cc(dancing, and)
nsubj(dancing, what)
aux(dancing, have)
root(ROOT, dancing)
mark(do, to)
xcomp(dancing, do)
case(this, with)
det:predet(this, all)
obl(do, this)
punct(dancing, ?)
punct(dancing, ? )
det(deal, a)
amod(deal, great)
nsubj(learn, deal)
punct(deal, .)
nmod:poss(gymnast, Russia)
case(Russia, 's)
amod(gymnast, young)
nsubj(study, gymnast)
aux(study, have)
parataxis(deal, study)
obj(study, dance)
mark(have, before)
advcl(study, have)
det(training, the)
amod(training, rigorous)
obj(have, training)
case(apparatus, on)
nmod(training, apparatus)
punct(training, .)
advmod(stretch, well)
punct(stretch, -)
amod(training, stretch)
punct(train, ,)
conj(stretch, train)
case(posture, in)
obl(train, posture)
cc(movement, and)
amod(movement, coordinate)
conj(posture, movement)
punct(wedded, ,)
cc(wedded, and)
conj(present, wedded)
case(rhythm, to)
obl(wedded, rhythm)
punct(present, ,)
nsubj(present, they)
parataxis(study, present)
det(audience, the)
obj(present, audience)
case(Rome, in)
nmod(audience, Rome)
case(one, with)
nmod(audience, one)
case(sight, of)
det(sight, the)
advmod(beautiful, most)
amod(sight, beautiful)
nmod(one, sight)
advmod(see, ever)
acl(sight, see)
case(contest, at)
det(contest, any)
compound(contest, Olympic)
obl(see, contest)
punct(learn, .)
amod(audience, american)
nsubj(learn, audience)
case(particular, in)
nmod(audience, particular)
root(ROOT, learn)
nummod(lesson, two)
amod(lesson, valuable)
obj(learn, lesson)
punct(learn, .)
nsubj(see, they)
root(ROOT, see)
advmod(masculine, completely)
amod(man, masculine)
cc(virile, and)
advmod(virile, obviously)
conj(masculine, virile)
obj(see, man)
acl(man, perform)
case(grace, with)
amod(grace, incredible)
obl(perform, grace)
punct(see, .)
nsubj:pass(strip, they)
aux:pass(strip, be)
advmod(strip, further)
root(ROOT, strip)
case(tale, of)
amod(wive, old)
nmod:poss(tale, wive)
case(wive, 's)
obl(strip, tale)
mark(see, by)
advcl(strip, see)
det(girl, the)
amod(girl, slender)
punct(girl, ,)
amod(girl, lovely)
amod(girl, russian)
obj(see, girl)
acl(girl, perform)
obj(perform, feat)
acl(feat, require)
amod(strength, tremendous)
obj(require, strength)
cc(muscle, and)
case(muscle, with)
advmod(muscle, not)
nummod(muscle, one)
compound(muscle, bulg)
conj(strength, muscle)
punct(strip, .)
nsubj(ask, President)
flat(President, Kennedy)
aux(ask, have)
root(ROOT, ask)
mark(become, that)
nsubj(become, we)
ccomp(ask, become)
det(nation, a)
advmod(fit, physically)
amod(nation, fit)
xcomp(become, nation)
punct(ask, .)
mark(wait, if)
nsubj(wait, we)
advcl(manage, wait)
mark(high, until)
nsubj(high, child)
cop(high, be)
case(high, in)
amod(high, junior)
advcl(wait, high)
cc(school, or)
amod(school, high)
conj(high, school)
punct(manage, ,)
nsubj(manage, we)
aux(manage, will)
advmod(manage, never)
root(ROOT, manage)
obj(manage, it)
punct(manage, . )
mark(fit, to)
cop(fit, be)
advcl(have, fit)
punct(have, ,)
nsubj(have, one)
root(ROOT, have)
mark(start, to)
xcomp(have, start)
advmod(start, early)
case(child, with)
amod(child, young)
obl(start, child)
punct(teacher, ,)
cc(teacher, and)
obl:tmod(teacher, today)
det(person, the)
amod(person, only)
nsubj(teacher, person)
nsubj(reach, who)
advmod(reach, really)
acl:relcl(person, reach)
amod(child, such)
obj(reach, child)
cop(teacher, be)
det(teacher, the)
conj(have, teacher)
case(dance, of)
nmod(teacher, dance)
punct(have, .)
mark(make, if)
det(teacher, the)
compound(teacher, dance)
nsubj(make, teacher)
case(America, of)
nmod(teacher, America)
advcl(need, make)
obj(make, it)
nmod:poss(business, they)
obj(make, business)
mark(prepare, to)
acl(business, prepare)
nmod:poss(charge, they)
amod(charge, young)
obj(prepare, charge)
case(gymnastic, for)
det(gymnastic, the)
obl(prepare, gymnastic)
nsubj(come, that)
aux(come, must)
acl:relcl(gymnastic, come)
det(day, some)
obl:tmod(come, day)
mark(responsible, if)
nmod:poss(school, we)
nsubj(responsible, school)
cop(responsible, be)
advmod(responsible, really)
advcl(come, responsible)
punct(ahead, ,)
nsubj(ahead, we)
aux(ahead, will)
cop(ahead, be)
advmod(much, that)
advmod(ahead, much)
advmod(teacher, ahead)
punct(ahead, .)
compound(teacher, school)
nsubj(need, teacher)
punct(teacher, ,)
advmod(unprepare, all)
advmod(unprepare, too)
amod(teacher, unprepare)
case(job, for)
det(job, the)
obl(unprepare, job)
nsubj(do, they)
aux(do, must)
acl:relcl(job, do)
punct(need, ,)
aux(need, will)
root(ROOT, need)
obj(need, demonstrator)
punct(need, .)
expl(be, there)
aux(be, should)
root(ROOT, be)
nsubj(be, youngster)
nsubj(know, who)
acl:relcl(youngster, know)
advmod(do, how)
mark(do, to)
ccomp(know, do)
det(headstand, a)
obj(do, headstand)
punct(help, ,)
cc(help, and)
advmod(help, also)
advmod(help, how)
mark(help, to)
conj(do, help)
amod(child, other)
obj(help, child)
xcomp(help, learn)
obj(learn, it)
punct(be, .)
nsubj(know, they)
aux(know, should)
root(ROOT, know)
amod(exercise, simple)
obj(know, exercise)
nsubj(prepare, that)
aux(prepare, could)
acl:relcl(exercise, prepare)
advmod(fortunate, less)
amod(child, fortunate)
obj(prepare, child)
case(sport, for)
det(sport, the)
obl(prepare, sport)
nsubj(demand, we)
aux(demand, will)
acl:relcl(sport, demand)
aux:pass(teach, be)
ccomp(demand, teach)
punct(know, .)
compound(teacher, dance)
nsubj(respond, teacher)
aux(respond, can)
root(ROOT, respond)
case(request, to)
nmod:poss(request, President)
flat(President, Kennedy)
case(President, 's)
obl(respond, request)
advmod(only, not)
cc:preconj(work, only)
case(work, through)
nmod:poss(work, they)
amod(work, regular)
compound(work, dance)
obl(respond, work)
punct(kind, ,)
cc(kind, but)
advmod(kind, also)
case(kind, through)
det(kind, the)
conj(work, kind)
case(work, of)
amod(work, basic)
amod(work, gymnastic)
nmod(kind, work)
nsubj(make, that)
acl:relcl(work, make)
case(strength, for)
obl(make, strength)
cc(flexibility, and)
conj(strength, flexibility)
punct(respond, .)
advmod(little, very)
obl:npmod(provide, little)
case(living, in)
nmod:poss(living, today)
case(today, 's)
nsubj(provide, living)
root(ROOT, provide)
det(strength, the)
obj(provide, strength)
nsubj(need, we)
acl:relcl(strength, need)
cc(provide, and)
nsubj(provide, nothing)
conj(provide, provide)
det(flexibility, the)
obj(provide, flexibility)
punct(provide, .)
nsubj(have, Dancers)
aux(have, do)
root(ROOT, have)
obj(have, flexibility)
punct(have, .)
nsubj(fail, they)
advmod(fail, often)
root(ROOT, fail)
punct(fail, ,)
advmod(fail, however)
punct(fail, ,)
mark(develop, to)
xcomp(fail, develop)
amod(strength, real)
amod(strength, abdominal)
punct(back, ,)
conj(abdominal, back)
punct(chest, ,)
conj(abdominal, chest)
punct(shoulder, ,)
conj(abdominal, shoulder)
cc(arm, and)
conj(abdominal, arm)
obj(develop, strength)
punct(fail, .)
root(ROOT, ask)
det(group, any)
obj(ask, group)
case(ballerinas, of)
nmod(group, ballerinas)
mark(do, to)
advcl(ask, do)
nummod(up, ten)
compound(up, push)
punct(up, -)
obj(do, up)
cc(chin-up, or)
nummod(chin-up, three)
conj(up, chin-up)
cc(result, and)
det(result, the)
conj(up, result)
punct(do, ,)
advcl(do, consider)
det(amount, the)
obj(consider, amount)
case(training, of)
amod(training, physical)
nmod(amount, training)
nsubj(have, they)
aux(have, have)
acl:relcl(training, have)
punct(disappointing, ,)
aux(disappointing, will)
cop(disappointing, be)
advmod(disappointing, very)
parataxis(ask, disappointing)
punct(ask, .)
advmod(boy, even)
det(boy, the)
nsubj(outstanding, boy)
aux(outstanding, will)
advmod(outstanding, not)
cop(outstanding, be)
root(ROOT, outstanding)
case(area, in)
det(area, these)
obl(outstanding, area)
punct(outstanding, .)
nsubj(surprising, this)
cop(surprising, be)
advmod(surprising, not)
parataxis(outstanding, surprising)
mark(consider, when)
nsubj(consider, we)
advcl(surprising, consider)
mark(chin, that)
advmod(29, over)
nummod(percent, 29)
nsubj(chin, percent)
case(boy, of)
det(boy, the)
nummod(year, 11)
punct(year, -)
obl:npmod(old, year)
punct(old, -)
amod(boy, old)
nmod(percent, boy)
case(America, in)
nmod(boy, America)
aux(chin, can)
advmod(chin, not)
ccomp(consider, chin)
obj(chin, themselves)
advmod(chin, once)
punct(outdo, ,)
cc(outdo, and)
mark(outdo, that)
amod(girl, english)
compound(girl, school)
nsubj(outdo, girl)
conj(chin, outdo)
obj(outdo, they)
case(test, in)
advmod(test, almost)
det(test, every)
obl(outdo, test)
punct(dash, ()
advmod(dash, even)
appos(test, dash)
cc(endurance, and)
conj(dash, endurance)
punct(dash, ))
punct(outstanding, .)
det(area, the)
amod(area, only)
nsubj(throw, area)
case(which, in)
obl(hold, which)
amod(boy, american)
nsubj(hold, boy)
acl:relcl(area, hold)
nmod:poss(own, they)
obj(hold, own)
cop(throw, be)
det(throw, the)
compound(throw, baseball)
root(ROOT, throw)
punct(throw, .)
det(bar, the)
compound(bar, chin)
nsubj:pass(recommend, bar)
case(arm, for)
nmod(bar, arm)
cc(strength, and)
compound(strength, shoulder)
conj(arm, strength)
det(bar, a)
compound(bar, chin)
conj(arm, bar)
aux:pass(recommend, be)
root(ROOT, recommend)
punct(recommend, .)
nsubj:pass(install, it)
aux(install, should)
aux:pass(install, be)
root(ROOT, install)
case(door, over)
det(door, a)
obl(install, door)
nsubj(view, that)
cop(view, be)
case(view, in)
amod(view, full)
acl:relcl(door, view)
case(everyone, of)
nmod(view, everyone)
punct(place, ,)
cc(place, and)
det(chair, a)
nsubj:pass(place, chair)
aux(place, should)
aux:pass(place, be)
conj(install, place)
case(it, under)
obl(place, it)
punct(place, ,)
det(little, a)
nmod:npmod(side, little)
case(side, to)
nummod(side, one)
obl(place, side)
punct(install, .)
det(child, those)
nsubj:pass(tell, child)
nsubj(chin, who)
aux(chin, can)
acl:relcl(child, chin)
obj(chin, themselves)
aux(tell, should)
aux:pass(tell, be)
root(ROOT, tell)
mark(do, to)
xcomp(tell, do)
nummod(up, one)
compound(up, chin)
punct(up, -)
advmod(do, up)
det(time, each)
obl:tmod(do, time)
nsubj(pass, they)
acl:relcl(time, pass)
case(it, under)
obl(pass, it)
punct(tell, .)
nsubj(climb, those)
nsubj(weak, who)
cop(weak, be)
advmod(weak, too)
acl:relcl(those, weak)
punct(climb, ,)
aux(climb, should)
root(ROOT, climb)
case(chair, on)
det(chair, the)
obl(climb, chair)
cc(let, and)
punct(let, ,)
conj(climb, start)
case(top, at)
det(top, the)
obl(start, top)
case(chin, of)
det(chin, the)
nmod(top, chin)
punct(let, ,)
conj(climb, let)
obj(let, themselves)
advmod(let, slowly)
compound:prt(let, down)
punct(climb, .)
mark(take, when)
nsubj(take, they)
aux(take, can)
advcl(have, take)
nummod(seconds, ten)
obj(take, seconds)
mark(accomplish, to)
advcl(take, accomplish)
det(descent, the)
obj(accomplish, descent)
punct(have, ,)
nsubj(have, they)
aux(have, will)
root(ROOT, have)
det(strength, the)
obj(have, strength)
mark(chin, to)
acl(strength, chin)
punct(chin, -)
compound:prt(chin, up)
punct(have, .)
nsubj:pass(inform, Parents)
aux(inform, should)
aux:pass(inform, be)
root(ROOT, inform)
case(system, about)
det(system, this)
obl(inform, system)
cc(encourage, and)
conj(inform, encourage)
mark(do, to)
xcomp(encourage, do)
det(same, the)
obj(do, same)
case(family, with)
det(family, the)
amod(family, whole)
obl(do, family)
case(home, at)
obl(do, home)
punct(inform, .)
det(Arm, the)
compound(Arm, horse)
compound(Arm, kick)
nsubj:pass(aid, Arm)
punct(shoulder, ,)
conj(Arm, shoulder)
punct(chest, ,)
conj(Arm, chest)
punct(upper, ,)
conj(Arm, upper)
cc(strength, and)
amod(strength, lower)
amod(strength, back)
conj(Arm, strength)
aux(aid, will)
aux:pass(aid, be)
root(ROOT, aid)
case(kick, with)
det(kick, the)
compound(kick, horse)
obl(aid, kick)
punct(aid, .)
root(ROOT, start)
case(hand, on)
obl(start, hand)
cc(foot, and)
conj(hand, foot)
punct(start, .)
advcl(run, keep)
det(hand, the)
obj(keep, hand)
case(position, in)
det(position, the)
compound(position, starting)
obl(keep, position)
punct(run, ,)
root(ROOT, run)
case(place, in)
obl(run, place)
case(rhythm, to)
det(rhythm, a)
amod(rhythm, quick)
obl(run, rhythm)
punct(run, .)
mark(become, after)
nsubj(become, this)
aux(become, have)
advcl(use, become)
xcomp(become, easy)
punct(use, ,)
root(ROOT, use)
amod(rhythm, slower)
cc(slower, and)
conj(slower, slower)
obj(use, rhythm)
punct(kick, ,)
conj(use, kick)
xcomp(kick, higher)
cc(higher, and)
conj(higher, higher)
punct(follow, .)
conj(use, follow)
obj(follow, this)
mark(cross, by)
advcl(follow, cross)
case(corner, from)
nummod(corner, one)
obl(cross, corner)
case(room, of)
det(room, the)
nmod(corner, room)
case(other, to)
det(other, the)
nmod(room, other)
case(four, on)
det(four, all)
nmod(other, four)
punct(kick, ,)
conj(cross, kick)
advmod(high, as)
advmod(kick, high)
mark(possible, as)
advcl(as, possible)
punct(push, .)
compound(up, push)
punct(up, -)
compound(up, up)
compound(up, push)
punct(up, -)
nsubj(essential, up)
cop(essential, be)
advcl(as, essential)
punct(have, ,)
cc(have, but)
nsubj(have, few)
conj(essential, have)
det(strength, the)
obj(have, strength)
case(they, for)
nmod(strength, they)
case(first, at)
obl(have, first)
punct(use, .)
root(ROOT, start)
case(knee, on)
det(knee, the)
obl(start, knee)
case(circle, in)
det(circle, a)
amod(circle, large)
obl(start, circle)
punct(start, .)
parataxis(start, fall)
advmod(forward, slowly)
advmod(fall, forward)
case(hand, onto)
det(hand, the)
obl(fall, hand)
cc(let, and)
conj(fall, let)
det(body, the)
obj(let, body)
compound:prt(let, down)
case(rest, to)
obl(let, rest)
case(floor, on)
det(floor, the)
nmod(rest, floor)
punct(push, .)
parataxis(let, push)
advmod(push, back)
compound:prt(push, up)
cc(repeat, and)
conj(push, repeat)
punct(start, .)
root(ROOT, do)
det(exercise, this)
obj(do, exercise)
nummod(time, six)
obl:tmod(do, time)
det(period, each)
compound(period, class)
obl:tmod(do, period)
punct(do, .)
mark(improve, as)
nsubj(improve, strength)
root(ROOT, improve)
obj(improve, start)
case(position, in)
det(position, a)
compound(position, standing)
obl(improve, position)
case(leg, with)
nmod(position, leg)
amod(leg, wide)
advmod(leg, apart)
cc(body, and)
amod(body, upper)
conj(leg, body)
acl(body, bend)
advmod(bend, forward)
punct(improve, .)
root(ROOT, start)
mark(fall, by)
advcl(start, fall)
advmod(fall, forward)
case(point, to)
det(point, a)
obl(fall, point)
amod(point, close)
case(foot, to)
det(foot, the)
obl(close, foot)
punct(fall, ,)
cc(fall, and)
punct(fall, ,)
mark(improve, as)
nsubj(improve, strength)
advcl(fall, improve)
punct(fall, ,)
conj(start, fall)
advmod(fall, farther)
cc(out, and)
advmod(out, farther)
advmod(fall, out)
punct(try, .)
conj(start, try)
mark(push, to)
xcomp(try, push)
compound:prt(push, back)
case(position, to)
det(position, the)
compound(position, stand)
obl(push, position)
case(position, from)
det(position, the)
amod(position, stretch)
nmod(position, position)
case(push, without)
det(push, any)
amod(push, intermediate)
obl(push, push)
case(hand, from)
det(hand, the)
nmod(push, hand)
punct(start, .)
det(up, the)
compound(up, push)
punct(up, -)
nsubj:pass(teach, up)
nmod:npmod(up, itself)
aux(teach, can)
aux:pass(teach, be)
root(ROOT, teach)
mark(start, by)
advcl(teach, start)
case(top, at)
det(top, the)
obl(start, top)
case(up, of)
det(up, the)
compound(up, push)
punct(up, -)
nmod(top, up)
case(leg, with)
nmod(up, leg)
acl(leg, spread)
advmod(spread, wide)
punct(teach, .)
root(ROOT, let)
det(body, the)
obj(let, body)
compound:prt(let, down)
advmod(let, slowly)
punct(let, ,)
advcl(let, take)
case(least, at)
nmod(five, least)
nummod(seconds, five)
obj(take, seconds)
case(let, for)
det(let, the)
compound(down, let)
obl(take, down)
punct(let, .)
nsubj(develop, five)
case(these, of)
nmod(five, these)
acl(five, do)
advmod(do, daily)
case(week, for)
advmod(week, about)
det(week, a)
obl(do, week)
aux(develop, will)
root(ROOT, develop)
det(strength, the)
obj(develop, strength)
case(up, for)
nummod(up, one)
compound(up, push)
punct(up, -)
nmod(strength, up)
punct(develop, .)
compound(Handstands, Handstands)
nsubj(come, Handstands)
root(ROOT, come)
case(arm, after)
obl(come, arm)
punct(chest, ,)
conj(arm, chest)
cc(shoulder, and)
conj(arm, shoulder)
aux(develop, have)
conj(come, develop)
case(least, at)
nmod(minimum, least)
det(minimum, a)
obj(develop, minimum)
case(strength, of)
nmod(minimum, strength)
punct(develop, .)
advmod(find, of)
fixed(of, course)
nsubj(find, those)
nsubj(develop, who)
aux(develop, have)
acl:relcl(those, develop)
obj(develop, more)
aux(find, will)
root(ROOT, find)
obj(find, they)
xcomp(find, easier)
punct(find, .)
root(ROOT, start)
case(class, with)
det(class, the)
obl(start, class)
advcl(start, stand)
case(circle, in)
det(circle, a)
obl(stand, circle)
punct(start, ,)
case(weight, with)
obl(stand, weight)
case(foot, on)
det(foot, the)
amod(foot, right)
nmod(weight, foot)
cc(left, and)
det(left, the)
conj(weight, left)
acl(left, extend)
det(way, a)
amod(way, little)
obl:npmod(extend, way)
case(circle, into)
det(circle, the)
obl(extend, circle)
punct(start, .)
case(first, at)
obl(do, first)
det(child, each)
nsubj(do, child)
aux(do, should)
root(ROOT, do)
det(up, a)
compound(up, kick)
punct(up, -)
obj(do, up)
case(himself, by)
obl(do, himself)
mark(determine, so)
fixed(so, that)
det(teacher, the)
nsubj(determine, teacher)
aux(determine, can)
advcl(do, determine)
obj(determine, those)
amod(those, ready)
mark(work, to)
xcomp(ready, work)
advmod(work, alone)
punct(Drop, ,)
cc(Drop, and)
nsubj(Drop, those)
nsubj(need, who)
acl:relcl(those, need)
obj(need, help)
punct(Drop, .)
conj(do, Drop)
det(hand, both)
obj(Drop, hand)
case(floor, to)
det(floor, the)
obl(Drop, floor)
cc(kick, and)
case(time, at)
det(time, the)
amod(time, same)
obl(kick, time)
conj(Drop, kick)
det(foot, the)
amod(foot, right)
obj(kick, foot)
compound:prt(kick, up)
case(back, in)
obl(kick, back)
punct(do, .)
det(left, the)
nsubj(follow, left)
aux(follow, will)
root(ROOT, follow)
case(once, at)
obl(follow, once)
punct(follow, .)
det(right, the)
nsubj(land, right)
aux(land, will)
root(ROOT, land)
advmod(land, first)
punct(land, ,)
advcl(land, follow)
case(left, by)
det(left, the)
obl(follow, left)
punct(land, .)
root(ROOT, return)
case(position, to)
det(position, the)
compound(position, standing)
obl(return, position)
punct(return, .)
nsubj:pass(take, care)
aux(take, should)
aux:pass(take, be)
root(ROOT, take)
mark(see, to)
advcl(take, see)
mark(place, that)
det(hand, the)
nsubj:pass(place, hand)
aux:pass(place, be)
ccomp(see, place)
case(floor, on)
det(floor, the)
obl(place, floor)
mark(start, before)
det(kick, the)
nsubj(start, kick)
advcl(place, start)
cc(also, and)
advmod(bring, also)
mark(bring, that)
det(foot, the)
compound(foot, landing)
nsubj:pass(bring, foot)
aux:pass(bring, be)
conj(start, bring)
advmod(close, as)
advmod(bring, close)
case(hand, to)
det(hand, the)
obl(close, hand)
mark(possible, as)
advcl(as, possible)
punct(take, .)
nsubj(prevent, this)
aux(prevent, will)
root(ROOT, prevent)
amod(falls, flat)
obj(prevent, falls)
cc(injury, and)
compound(injury, toe)
conj(falls, injury)
punct(prevent, .)
amod(foot, Bare)
nsubj(better, foot)
cop(better, be)
root(ROOT, better)
case(work, for)
amod(work, such)
obl(better, work)
case(form, than)
det(form, any)
obl(better, form)
case(slipper, of)
nmod(form, slipper)
punct(better, .)
advmod(able, eventually)
det(class, the)
nsubj(able, class)
aux(able, will)
cop(able, be)
root(ROOT, able)
mark(kick, to)
xcomp(able, kick)
compound:prt(kick, up)
advmod(kick, high)
advmod(kick, enough)
mark(catch, so)
fixed(so, that)
det(teacher, the)
nsubj(catch, teacher)
aux(catch, can)
advcl(kick, catch)
det(leg, the)
amod(leg, lead)
obj(catch, leg)
punct(able, .)
det(child, the)
nsubj(bring, child)
aux(bring, should)
advmod(bring, then)
root(ROOT, bring)
det(leg, both)
obj(bring, leg)
advmod(bring, together)
advmod(bring, overhead)
punct(point, ,)
conj(bring, point)
det(toe, the)
obj(point, toe)
cc(tighten, and)
conj(point, tighten)
det(muscle, the)
compound(muscle, seat)
obj(tighten, muscle)
punct(bring, .)
cop(sure, be)
root(ROOT, sure)
mark(bring, that)
det(foot, the)
compound(foot, landing)
nsubj:pass(bring, foot)
aux:pass(bring, be)
ccomp(sure, bring)
advmod(bring, close)
case(hand, to)
det(hand, the)
obl(bring, hand)
cc(land, and)
mark(land, that)
advmod(foot, only)
nummod(foot, one)
nsubj(land, foot)
conj(bring, land)
case(time, at)
det(time, a)
obl(land, time)
punct(sure, .)
nsubj(importance, backbend)
det(backbend, the)
nsubj(importance, backbend)
cop(importance, be)
case(importance, of)
amod(importance, extreme)
root(ROOT, importance)
case(form, to)
det(form, any)
nmod(importance, form)
case(gymnastic, of)
amod(gymnastic, free)
nmod(form, gymnastic)
punct(begin, ,)
cc(begin, and)
punct(begin, ,)
case(acrobatics, as)
fixed(as, with)
det(acrobatics, all)
obl(begin, acrobatics)
punct(begin, ,)
mark(sooner, the)
advmod(begin, sooner)
conj(importance, begin)
det(result, the)
xcomp(begin, better)
det(result, the)
obj(begin, result)
punct(importance, .)
root(ROOT, have)
det(lie, the)
compound(lie, class)
obj(have, lie)
obj(have, supine)
case(knee, with)
obl(have, knee)
advmod(have, apart)
cc(bent, and)
conj(apart, bent)
punct(have, .)
root(ROOT, place)
amod(palm, flat)
obj(place, palm)
case(side, on)
cc:preconj(side, either)
obl(place, side)
case(head, of)
det(head, the)
nmod(side, head)
det(inch, a)
amod(inch, few)
obl:npmod(away, inch)
advmod(place, away)
case(ear, from)
det(ear, the)
obl(away, ear)
punct(place, ,)
appos(ear, finger)
acl(finger, point)
case(shoulder, toward)
det(shoulder, the)
obl(point, shoulder)
punct(place, .)
root(ROOT, Arch)
det(back, the)
obj(Arch, back)
advmod(Arch, upwards)
mark(make, to)
advcl(Arch, make)
det(bridge, a)
obj(make, bridge)
punct(Arch, .)
cop(sure, be)
root(ROOT, sure)
det(head, the)
nsubj(drop, head)
ccomp(sure, drop)
advmod(drop, backward)
mark(look, so)
fixed(so, that)
det(child, the)
nsubj(look, child)
advcl(drop, look)
case(floor, at)
det(floor, the)
obl(look, floor)
cc(ceiling, rather)
fixed(rather, than)
fixed(rather, toward)
det(ceiling, the)
conj(floor, ceiling)
punct(sure, .)
mark(improve, as)
nsubj(improve, flexibility)
advcl(move, improve)
punct(move, ,)
det(foot, the)
nsubj(move, foot)
aux(move, will)
root(ROOT, move)
advmod(move, closer)
case(hand, to)
det(hand, the)
obl(move, hand)
cc(rise, and)
det(bridge, the)
nsubj(rise, bridge)
conj(move, rise)
xcomp(rise, higher)
punct(move, .)
advmod(combine, later)
nsubj:pass(combine, this)
aux(combine, can)
aux:pass(combine, be)
parataxis(move, combine)
case(handstand, with)
det(handstand, the)
obl(combine, handstand)
mark(provide, to)
advcl(combine, provide)
det(walkover, a)
obj(provide, walkover)
punct(move, .)
amod(circle, back)
root(ROOT, circle)
mark(increase, to)
advmod(increase, further)
acl(circle, increase)
compound(flexibility, back)
obj(increase, flexibility)
punct(work, ,)
conj(increase, work)
case(circle, on)
det(circle, the)
amod(circle, back)
obl(work, circle)
punct(circle, .)
root(ROOT, have)
det(lie, the)
compound(lie, class)
obj(have, lie)
xcomp(have, prone)
punct(have, .)
root(ROOT, place)
det(hand, the)
obj(place, hand)
case(front, in)
obl(place, front)
case(chest, of)
det(chest, the)
nmod(front, chest)
punct(place, .)
root(ROOT, keep)
det(leg, the)
obj(keep, leg)
advmod(keep, straight)
cc(point, and)
det(toe, the)
nsubj(point, toe)
conj(keep, point)
punct(keep, .)
root(ROOT, Straighten)
det(arm, the)
obj(Straighten, arm)
advmod(Straighten, slowly)
punct(Straighten, ,)
nsubj(arch, this)
parataxis(Straighten, arch)
det(back, the)
obj(arch, back)
punct(Straighten, .)
case(peak, at)
det(peak, the)
obl(tip, peak)
case(arch, of)
det(arch, the)
nmod(peak, arch)
punct(tip, ,)
root(ROOT, tip)
det(head, the)
obj(tip, head)
advmod(tip, back)
cc(bend, and)
conj(tip, bend)
det(knee, the)
obj(bend, knee)
case(effort, in)
det(effort, a)
obl(bend, effort)
mark(touch, to)
acl(effort, touch)
obj(touch, toe)
case(head, to)
obl(touch, head)
punct(tip, .)
nsubj:pass(measure, improvement)
aux(measure, can)
aux:pass(measure, be)
root(ROOT, measure)
case(distance, by)
det(distance, the)
amod(distance, lessen)
obl(measure, distance)
case(toe, between)
nmod(distance, toe)
cc(head, and)
conj(toe, head)
punct(measure, .)
nsubj(roll, somersault)
det(somersault, the)
amod(somersault, last)
amod(somersault, essential)
case(program, to)
det(beginner, the)
nmod:poss(program, beginner)
case(beginner, 's)
amod(program, gymnastic)
obl(essential, program)
cop(roll, be)
det(roll, the)
compound(roll, somersault)
punct(forward, ,)
cc(forward, or)
conj(somersault, forward)
root(ROOT, roll)
punct(roll, .)
nsubj(use, this)
root(ROOT, use)
mark(part, to)
cop(part, be)
xcomp(use, part)
case(bag, of)
det(child, every)
nmod:poss(bag, child)
case(child, 's)
nmod(part, bag)
case(trick, of)
nmod(bag, trick)
punct(do, ,)
cc(do, but)
amod(child, few)
nsubj(do, child)
aux(do, can)
conj(use, do)
obj(do, it)
obl:tmod(do, today)
punct(use, ;)
punct(use, ;)
nsubj(incapable, some)
cop(incapable, be)
advmod(incapable, actually)
parataxis(use, incapable)
mark(roll, of)
advcl(incapable, roll)
advmod(roll, forward)
cc(confused, and)
cop(confused, be)
advmod(confused, completely)
conj(incapable, confused)
mark(sit, when)
advmod(sit, not)
advcl(confused, sit)
cc(stand, or)
conj(sit, stand)
advmod(stand, upright)
punct(use, .)
case(child, for)
advmod(small, most)
amod(child, small)
obl(matter, child)
punct(matter, ,)
csubj(matter, learn)
det(roll, a)
amod(roll, forward)
obj(learn, roll)
cop(matter, be)
advmod(matter, simply)
det(matter, a)
root(ROOT, matter)
mark(copy, of)
acl(matter, copy)
det(child, another)
obj(copy, child)
nsubj(can, who)
acl:relcl(child, can)
punct(matter, .)
mark(see, after)
nsubj:pass(see, it)
aux(see, have)
aux:pass(see, be)
advcl(have, see)
punct(have, ,)
root(ROOT, have)
det(start, the)
compound(start, child)
obj(have, start)
case(mat, on)
det(mat, a)
nmod(start, mat)
case(hand, on)
nmod(mat, hand)
cc(knee, and)
conj(hand, knee)
punct(sufficient, ()
det(mat, a)
amod(mat, thin)
punct(mat, ,)
amod(mat, inexpensive)
nsubj(sufficient, mat)
cop(sufficient, be)
advmod(sufficient, quite)
parataxis(have, sufficient)
case(anything, for)
obl(sufficient, anything)
nsubj(require, that)
aux(require, do)
advmod(require, not)
acl:relcl(anything, require)
xcomp(require, fall)
punct(sufficient, ))
punct(have, .)
nsubj(place, he)
root(ROOT, place)
det(hand, the)
obj(place, hand)
case(side, on)
det(side, either)
obl(place, side)
case(head, of)
det(head, the)
nmod(side, head)
punct(place, ,)
advcl(place, keep)
det(chin, the)
obj(keep, chin)
advmod(keep, down)
case(chest, on)
det(chest, the)
obl(keep, chest)
punct(place, .)
nsubj(push, he)
advmod(push, then)
root(ROOT, push)
nmod:poss(seat, he)
obj(push, seat)
case(air, into)
det(air, the)
obl(push, air)
cc(guide, and)
det(teacher, the)
nsubj(guide, teacher)
conj(push, guide)
obj(guide, it)
advmod(guide, over)
punct(push, .)
nummod(run, one)
cc(two, or)
conj(one, two)
compound(run, practice)
nsubj(sufficient, run)
aux(sufficient, should)
cop(sufficient, be)
root(ROOT, sufficient)
case(solo, for)
obl(sufficient, solo)
punct(sufficient, .)
mark(weak, if)
punct(weak, ,)
advmod(weak, however)
punct(weak, ,)
det(child, the)
nsubj(weak, child)
cop(weak, be)
root(ROOT, weak)
punct(overweight, ,)
conj(weak, overweight)
punct(afraid, ,)
cc(afraid, or)
conj(weak, afraid)
punct(need, ,)
amod(help, more)
nsubj:pass(need, help)
aux(need, will)
aux:pass(need, be)
conj(weak, need)
punct(weak, .)
mark(raise, when)
det(child, the)
nsubj(raise, child)
advcl(take, raise)
nmod:poss(seat, he)
obj(raise, seat)
case(air, into)
det(air, the)
obl(raise, air)
punct(take, ,)
det(teacher, the)
nsubj(take, teacher)
root(ROOT, take)
obj(take, hold)
case(side, under)
det(side, both)
obl(take, side)
case(pelvis, of)
det(pelvis, the)
nmod(side, pelvis)
punct(take, ;)
punct(take, ;)
advmod(matter, then)
advmod(matter, no)
advmod(control, matter)
nsubj(happen, what)
acl:relcl(matter, happen)
punct(control, ,)
det(child, the)
nmod:poss(performance, child)
case(child, 's)
nsubj:pass(control, performance)
aux(control, will)
aux:pass(control, be)
parataxis(take, control)
punct(take, .)
mark(lift, by)
advcl(take, lift)
det(seat, the)
obj(lift, seat)
case(little, upwards)
det(little, a)
obl(lift, little)
punct(take, ,)
det(weight, the)
nsubj:pass(take, weight)
aux:pass(take, be)
root(ROOT, take)
case(neck, off)
det(neck, the)
obl(take, neck)
cc(round, and)
det(back, the)
nsubj:pass(keep, back)
aux:pass(keep, be)
conj(take, keep)
xcomp(keep, round)
punct(take, .)
nsubj(beginnings, these)
cop(beginnings, be)
root(ROOT, beginnings)
punct(learn, ,)
cc(learn, but)
advmod(learn, correctly)
conj(beginnings, learn)
nsubj(prepare, they)
ccomp(learn, prepare)
case(stunt, for)
amod(stunt, satisfy)
cc(exciting, and)
conj(satisfy, exciting)
obl(prepare, stunt)
nsubj:pass(perform, that)
aux(perform, can)
aux:pass(perform, be)
acl:relcl(stunt, perform)
case(body, by)
det(body, a)
amod(body, strong)
punct(body, ,)
amod(body, flexible)
obl(perform, body)
punct(talk, ()
nsubj(talk, we)
aux(talk, be)
advmod(talk, not)
parataxis(body, talk)
case(extreme, of)
amod(extreme, eccentric)
obl(talk, extreme)
punct(talk, ))
punct(beginnings, .)
advmod(goal, even)
mark(goal, if)
nsubj(goal, gymnastic)
cop(goal, be)
advmod(goal, not)
det(goal, the)
amod(goal, ultimate)
advcl(dancer, goal)
punct(dancer, ,)
det(tumbler, the)
amod(tumbler, good)
nsubj(dancer, tumbler)
aux(dancer, will)
cop(dancer, be)
det(dancer, a)
amod(dancer, better)
root(ROOT, dancer)
punct(athlete, ,)
det(athlete, a)
amod(athlete, better)
conj(dancer, athlete)
punct(human, ,)
cc(human, and)
det(human, a)
amod(margin, human)
cop(margin, be)
case(margin, with)
det(margin, a)
amod(margin, greater)
conj(dancer, margin)
case(safety, of)
nmod(margin, safety)
case(activity, in)
det(activity, any)
nmod(safety, activity)
punct(dancer, .)
expl(important, it)
cop(important, be)
advmod(important, very)
root(ROOT, important)
case(parent, for)
obl(important, parent)
mark(understand, to)
csubj(important, understand)
mark(imperative, that)
amod(training, early)
nsubj(imperative, training)
cop(imperative, be)
ccomp(understand, imperative)
punct(important, .)
cc(contribute, and)
compound(school, dancing)
nsubj(contribute, school)
punct(school, ,)
advmod(helpful, so)
amod(school, helpful)
case(development, in)
amod(development, artistic)
cc(psychological, and)
conj(artistic, psychological)
obl(helpful, development)
punct(contribute, ,)
advmod(contribute, also)
root(ROOT, contribute)
case(training, to)
det(training, this)
amod(training, essential)
amod(training, early)
obl(contribute, training)
punct(contribute, --)
cc(contribute, and)
aux(contribute, can)
conj(contribute, contribute)
advmod(more, even)
obj(contribute, more)
punct(contribute, .)
det(taxpayer, every)
nsubj(aware, taxpayer)
cop(aware, be)
advmod(aware, well)
root(ROOT, aware)
case(size, of)
det(size, the)
amod(size, vast)
obl(aware, size)
case(budget, of)
nmod:poss(budget, we)
amod(budget, annual)
compound(budget, defense)
nmod(size, budget)
cc(realize, and)
nsubj(realize, most)
case(reader, of)
nmod:poss(reader, we)
nmod(most, reader)
advmod(realize, also)
conj(aware, realize)
mark(go, that)
det(portion, a)
amod(portion, large)
nsubj(go, portion)
case(expenditure, of)
det(expenditure, these)
nmod(portion, expenditure)
ccomp(realize, go)
case(electronics, for)
amod(electronics, military)
obl(go, electronics)
punct(aware, .)
nsubj(note, we)
aux(note, have)
root(ROOT, note)
advmod(use, how)
det(technique, some)
amod(technique, electronic)
nsubj:pass(use, technique)
punct(technique, ,)
acl(technique, develop)
case(effort, for)
det(effort, the)
compound(effort, defense)
obl(develop, effort)
punct(use, ,)
aux(use, have)
advmod(use, evenutally)
aux:pass(use, be)
ccomp(note, use)
case(commerce, in)
obl(use, commerce)
cc(industry, and)
conj(commerce, industry)
punct(note, .)
det(host, the)
nsubj(thrilling, host)
case(application, of)
compound(application, novel)
nmod(host, application)
case(electronics, of)
nmod(application, electronics)
case(problem, to)
amod(problem, medical)
nmod(electronics, problem)
cop(thrilling, be)
advmod(more, far)
advmod(thrilling, more)
root(ROOT, thrilling)
case(implication, because)
fixed(because, of)
nmod:poss(implication, they)
obl(thrilling, implication)
case(matter, in)
nmod(implication, matter)
case(health, concern)
nmod:poss(health, we)
nmod(matter, health)
cc(vitality, and)
conj(health, vitality)
punct(thrilling, .)
mark(consider, when)
nsubj(consider, we)
advcl(stagger, consider)
det(potential, the)
amod(potential, electronic)
compound(potential, industry)
obj(consider, potential)
case(betterment, for)
amod(betterment, human)
nmod(potential, betterment)
punct(stagger, ,)
det(prospect, the)
nsubj(stagger, prospect)
aux(stagger, be)
parataxis(thrilling, stagger)
punct(thrilling, .)
det(author, the)
nsubj(study, author)
aux(study, have)
advmod(study, recently)
root(ROOT, study)
det(field, the)
obj(study, field)
case(electronics, of)
amod(electronics, medical)
nmod(field, electronics)
cc(convinced, and)
aux(convinced, have)
aux:pass(convinced, be)
conj(study, convinced)
mark(have, that)
punct(have, ,)
case(area, in)
det(area, this)
obl(have, area)
advmod(area, alone)
punct(have, ,)
det(application, the)
nsubj(have, application)
case(equipment, of)
amod(equipment, electronic)
nmod(application, equipment)
ccomp(convinced, have)
amod(possibility, enormous)
obj(have, possibility)
punct(study, .)
det(electronics, the)
compound(electronics, benefit)
nsubj(bring, electronics)
aux(bring, can)
csubj(greater, bring)
case(bio-medicine, to)
obl(bring, bio-medicine)
aux(greater, may)
cop(greater, be)
root(ROOT, greater)
advmod(far, by)
advmod(greater, far)
case(discovery, than)
det(discovery, any)
amod(discovery, previous)
amod(discovery, medical)
obl(far, discovery)
punct(greater, .)
nsubj(use, we)
root(ROOT, use)
det(term, the)
obj(use, term)
punct(bio-medicine, ``)
appos(term, bio-medicine)
punct(bio-medicine, '')
case(interrelation, because)
fixed(because, of)
det(interrelation, the)
amod(interrelation, close)
obl(use, interrelation)
case(research, between)
compound(research, biology)
cc(medical, and)
conj(biology, medical)
nmod(interrelation, research)
punct(use, .)
nsubj:pass(apply, electronics)
aux(apply, have)
aux:pass(apply, be)
root(ROOT, apply)
case(medicine, to)
obl(apply, medicine)
case(year, for)
amod(year, many)
obl(apply, year)
case(form, in)
det(form, the)
obl(apply, form)
case(equipment, of)
amod(equipment, such)
amod(equipment, familiar)
nmod(form, equipment)
case(machine, as)
det(machine, the)
compound(ray, x)
punct(ray, -)
compound(machine, ray)
nmod(form, machine)
punct(electrocardiograph, ,)
det(electrocardiograph, the)
conj(machine, electrocardiograph)
punct(machine, ,)
cc(machine, and)
det(machine, the)
compound(machine, diathermy)
conj(machine, machine)
punct(apply, .)
advmod(many, recently)
amod(doctor, many)
nsubj(install, doctor)
aux(install, have)
root(ROOT, install)
amod(machine, ultrasonic)
compound(machine, vibration)
obj(install, machine)
case(massage, for)
amod(massage, deep)
nmod(machine, massage)
case(bruise, of)
nmod(massage, bruise)
punct(contusion, ,)
conj(bruise, contusion)
punct(bursitis, ,)
cc(bursitis, and)
amod(bursitis, simple)
conj(bruise, bursitis)
punct(install, .)
advmod(use, commonly)
amod(device, use)
amod(device, electronic)
nsubj:pass(close, device)
nsubj:pass(find, which)
aux:pass(find, be)
acl:relcl(device, find)
case(hospital, in)
advmod(hospital, practically)
det(hospital, every)
obl(find, hospital)
aux:pass(close, be)
root(ROOT, close)
punct(circuit, -)
compound(tv, circuit)
obj(close, tv)
cc(system, and)
compound(system, audio)
conj(tv, system)
case(pag, for)
amod(pag, internal)
obl(close, pag)
cc(instruction, and)
conj(pag, instruction)
punct(close, ,)
case(counter, along)
case(counter, with)
compound(counter, radiation)
obl(close, counter)
punct(timer, ,)
conj(counter, timer)
punct(device, ,)
cc(device, and)
amod(device, similar)
conj(counter, device)
punct(close, .)
case(article, in)
det(article, this)
obl(concentrate, article)
nsubj(concentrate, we)
aux(concentrate, will)
root(ROOT, concentrate)
case(advance, on)
det(advance, the)
obl(concentrate, advance)
case(application, in)
det(application, the)
nmod(advance, application)
case(electronics, of)
nmod(application, electronics)
case(laboratory, in)
amod(laboratory, bio-medical)
compound(laboratory, research)
nmod(application, laboratory)
mark(where, because)
nsubj(where, this)
cop(where, be)
advcl(concentrate, where)
nmod:poss(equipment, tomorrow)
case(tomorrow, 's)
amod(equipment, commonplace)
nsubj(originate, equipment)
acl:relcl(where, originate)
punct(concentrate, .)
case(wealth, from)
det(wealth, the)
obl(select, wealth)
case(material, of)
nmod(wealth, material)
cc(variety, and)
det(variety, the)
amod(variety, wide)
conj(wealth, variety)
case(technique, of)
amod(technique, different)
amod(technique, electronic)
nmod(variety, technique)
acl(technique, perfect)
case(year, in)
det(year, the)
amod(year, past)
amod(year, few)
obl(perfect, year)
nsubj(select, we)
aux(select, have)
root(ROOT, select)
det(example, a)
amod(example, few)
obj(select, example)
nsubj(appear, which)
acl:relcl(example, appear)
mark(head, to)
aux:pass(head, be)
xcomp(appear, head)
case(use, for)
obl(head, use)
case(future, in)
det(future, the)
amod(future, immediate)
nmod(use, future)
cc(offer, and)
nsubj(offer, which)
conj(appear, offer)
advmod(new, completely)
amod(tool, new)
obj(offer, tool)
case(research, in)
amod(research, medical)
nmod(tool, research)
punct(select, .)
compound(microscopy, ultraviolet)
nsubj(transparent, microscopy)
amod(cell, many)
nsubj(transparent, cell)
punct(bacteria, ,)
conj(cell, bacteria)
punct(microorganism, ,)
cc(microorganism, and)
amod(microorganism, other)
conj(cell, microorganism)
cop(transparent, be)
root(ROOT, transparent)
case(light, to)
amod(light, visible)
obl(transparent, light)
cc(stain, and)
aux(stain, must)
aux:pass(stain, be)
conj(transparent, stain)
case(investigation, for)
amod(investigation, microscopic)
obl(stain, investigation)
punct(transparent, .)
det(stain, this)
nsubj(disrupt, stain)
advmod(disrupt, often)
root(ROOT, disrupt)
det(activity, the)
amod(activity, normal)
compound(activity, cell)
obj(disrupt, activity)
cc(color, or)
amod(color, else)
conj(activity, color)
advmod(outside, only)
det(outside, the)
obj(disrupt, outside)
punct(disrupt, . )
det(insight, a)
advmod(new, completely)
amod(insight, new)
nsubj(possible, insight)
case(cell, into)
compound(cell, living)
nmod(insight, cell)
cc(structure, and)
nmod:poss(structure, they)
conj(cell, structure)
aux(possible, will)
cop(possible, be)
root(ROOT, possible)
case(use, by)
obl(possible, use)
case(technique, of)
det(technique, a)
amod(technique, new)
nmod(use, technique)
nsubj(replace, which)
acl:relcl(technique, replace)
amod(light, visible)
obj(replace, light)
case(radiation, with)
amod(radiation, ultraviolet)
nmod(light, radiation)
cc(combine, and)
conj(replace, combine)
det(microscope, a)
obj(combine, microscope)
case(system, with)
det(system, a)
compound(tv, color)
punct(tv, -)
compound(system, tv)
nmod(microscope, system)
mark(view, to)
acl(system, view)
det(result, the)
obj(view, result)
punct(fig, .)
obj(view, fig)
punct(possible, .)
nummod(diagram, 1)
cop(diagram, be)
det(diagram, a)
amod(diagram, simplify)
compound(diagram, block)
root(ROOT, diagram)
case(system, of)
det(system, the)
amod(system, ultraviolet)
compound(system, microscopy)
nmod(diagram, system)
acl(system, develop)
case(Center, at)
det(Center, the)
compound(Center, Medical)
compound(Center, electronics)
obl(develop, Center)
case(Institute, of)
compound(Institute, Rockefeller)
nmod(Center, Institute)
punct(diagram, .)
mark(combine, by)
advcl(develop, combine)
det(talent, the)
obj(combine, talent)
case(man, of)
det(man, a)
amod(man, medical)
nmod(talent, man)
punct(Dr., ,)
nsubj:pass(develop, Dr.)
flat(Dr., Aterman)
punct(Dr., ,)
det(biophysicist, a)
appos(Dr., biophysicist)
punct(Mr., ,)
conj(Dr., Mr.)
flat(Mr., Berkely)
punct(expert, ,)
cc(expert, and)
det(expert, a)
compound(expert, electronics)
conj(Dr., expert)
punct(Dr., ,)
nsubj:pass(develop, Dr.)
flat(Dr., zworykin)
punct(develop, ,)
det(technique, this)
compound(technique, novel)
nsubj:pass(develop, technique)
aux(develop, have)
aux:pass(develop, be)
root(ROOT, develop)
nsubj(promise, which)
ccomp(develop, promise)
mark(open, to)
xcomp(promise, open)
amod(avenue, broad)
obj(open, avenue)
mark(understanding, to)
advcl(open, understanding)
compound(process, life)
obj(understanding, process)
punct(develop, .)
nummod(wavelength, three)
amod(wavelength, different)
nsubj:pass(select, wavelength)
case(radiation, of)
amod(radiation, ultraviolet)
nmod(wavelength, radiation)
aux:pass(select, be)
root(ROOT, select)
case(filter, by)
det(filter, the)
amod(filter, variable)
obl(select, filter)
acl(filter, place)
case(front, in)
obl(place, front)
case(light, of)
det(light, the)
nummod(light, three)
compound(xenon, mercury)
compound(light, xenon)
nmod(front, light)
nsubj(serve, which)
acl:relcl(light, serve)
case(source, as)
det(source, the)
compound(source, ultraviolet)
obl(serve, source)
punct(select, .)
det(wavelength, these)
nsubj:pass(reflect, wavelength)
aux:pass(reflect, be)
root(ROOT, reflect)
case(sequence, in)
obl(reflect, sequence)
case(specimen, through)
det(specimen, the)
obl(reflect, specimen)
case(mirror, by)
det(mirror, the)
compound(mirror, rotate)
obl(reflect, mirror)
punct(reflect, ;)
punct(reflect, ;)
det(specimen, the)
nsubj:pass(magnify, specimen)
aux:pass(magnify, be)
parataxis(reflect, magnify)
case(microscope, by)
det(microscope, the)
obl(magnify, microscope)
punct(reflect, .)
case(eye, instead)
case(eye, of)
det(observer, the)
nmod:poss(eye, observer)
case(observer, 's)
obl(do, eye)
det(orthicon, the)
compound(orthicon, image)
nsubj(do, orthicon)
case(camera, in)
det(camera, the)
compound(camera, tv)
nmod(orthicon, camera)
root(ROOT, do)
det(look, the)
punct(look, ``)
obj(do, look)
punct(look, '')
punct(do, .)
det(microscope, the)
nsubj:pass(select, microscope)
cc(orthicon, and)
conj(microscope, orthicon)
aux:pass(select, be)
advmod(select, both)
parataxis(do, select)
mark(operate, to)
xcomp(select, operate)
advmod(operate, well)
case(spectrum, into)
det(spectrum, the)
compound(spectrum, ultraviolet)
obl(operate, spectrum)
punct(spectrum, ,)
nsubj(mean, which)
acl:relcl(spectrum, mean)
mark(quartz, that)
det(lense, all)
nsubj(quartz, lense)
aux(quartz, must)
cop(quartz, be)
ccomp(mean, quartz)
punct(do, .)
det(signal, the)
compound(signal, video)
nsubj:pass(amplify, signal)
aux:pass(amplify, be)
root(ROOT, amplify)
cc(switch, and)
advmod(switch, then)
conj(amplify, switch)
punct(switch, ,)
case(synchronism, in)
obl(switch, synchronism)
case(source, with)
det(source, the)
nummod(source, three)
compound(source, ultraviolet)
compound(source, light)
nmod(synchronism, source)
nsubj:pass(sequence, which)
aux:pass(sequence, be)
acl:relcl(source, sequence)
case(mirror, by)
det(mirror, the)
compound(mirror, rotate)
obl(sequence, mirror)
mark(see, so)
fixed(so, that)
case(twentieth, during)
nummod(twentieth, one)
punct(twentieth, -)
nsubj:pass(see, twentieth)
case(wavelength, of)
det(wavelength, a)
amod(wavelength, second)
advmod(wavelength, only)
nummod(wavelength, one)
nmod(twentieth, wavelength)
punct(wavelength, ,)
acl(wavelength, corresponding)
case(red, to)
obl(corresponding, red)
punct(green, ,)
conj(red, green)
punct(blue, ,)
cc(blue, or)
conj(red, blue)
punct(see, ,)
aux:pass(see, be)
advcl(sequence, see)
punct(amplify, . )
punct(note, ()
root(ROOT, note)
punct(note, :)
case(leakage, because)
fixed(because, of)
compound(leakage, light)
obl(switch, leakage)
case(source, from)
nummod(source, one)
compound(source, ultraviolet)
nmod(leakage, source)
case(another, to)
nmod(source, another)
punct(switch, ,)
det(light, the)
nsubj:pass(switch, light)
aux:pass(switch, be)
root(ROOT, switch)
case(assembly, by)
det(assembly, a)
obl:npmod(like, commutator)
punct(like, -)
amod(assembly, like)
obl(switch, assembly)
acl(assembly, rotate)
case(motor, by)
det(motor, a)
amod(motor, synchronous)
obl(rotate, motor)
punct(switch, .)
det(assembly, this)
nsubj(supply, assembly)
advmod(supply, also)
root(ROOT, supply)
det(gate, a)
nummod(cp, 20)
punct(cp, -)
compound(gate, cp)
compound(gate, switch)
obj(supply, gate)
case(circuitry, for)
det(circuitry, the)
compound(circuitry, electronics)
nmod(gate, circuitry)
punct(supply, .)
punct(supply, ))
nsubj(system, this)
cop(system, be)
det(system, the)
amod(system, same)
root(ROOT, system)
mark(use, as)
aux:pass(use, be)
advcl(system, use)
case(system, in)
det(system, the)
obl:npmod(sequential, field)
punct(sequential, -)
amod(system, sequential)
compound(tv, color)
punct(tv, -)
compound(system, tv)
obl(use, system)
nsubj(precede, which)
acl:relcl(system, precede)
det(system, the)
amod(system, present)
amod(system, simultaneous)
obj(precede, system)
punct(system, .)
nummod(amplifier, three)
amod(amplifier, separate)
nsubj(drive, amplifier)
advmod(drive, then)
root(ROOT, drive)
det(tube, a)
nummod(inch, 21)
punct(inch, -)
compound(tube, inch)
compound(tube, tricolor)
obj(drive, tube)
punct(drive, .)
det(result, the)
nsubj(picture, result)
cop(picture, be)
det(picture, a)
compound(picture, color)
root(ROOT, picture)
case(specimen, of)
det(specimen, the)
nmod(picture, specimen)
advmod(correspond, where)
det(color, the)
amod(color, primary)
nsubj(correspond, color)
acl:relcl(specimen, correspond)
case(wavelength, to)
det(wavelength, the)
nummod(wavelength, three)
amod(wavelength, different)
amod(wavelength, ultraviolet)
obl(correspond, wavelength)
punct(picture, .)
nsubj(absorb, many)
case(cell, of)
det(cell, the)
nmod(many, cell)
cc(microorganism, and)
conj(cell, microorganism)
nsubj(transparent, which)
cop(transparent, be)
acl:relcl(cell, transparent)
case(light, to)
amod(light, visible)
obl(transparent, light)
punct(absorb, ,)
conj(transparent, absorb)
cc(reflect, or)
conj(transparent, reflect)
det(wavelength, the)
advmod(shorter, much)
amod(wavelength, shorter)
obj(absorb, wavelength)
case(spectrum, of)
det(spectrum, the)
compound(spectrum, ultraviolet)
nmod(wavelength, spectrum)
punct(absorb, .)
amod(part, different)
nsubj(absorb, part)
case(cell, of)
det(cell, these)
nmod(part, cell)
advmod(absorb, sometimes)
root(ROOT, absorb)
cc(reflect, or)
conj(absorb, reflect)
amod(wavelength, different)
obj(reflect, wavelength)
mark(possible, so)
fixed(so, that)
expl(possible, it)
cop(possible, be)
advmod(possible, often)
advcl(absorb, possible)
mark(see, to)
csubj(possible, see)
amod(portion, internal)
obj(see, portion)
case(cell, of)
nmod(portion, cell)
case(color, in)
det(color, a)
amod(color, different)
obl(see, color)
punct(absorb, .)
mark(show, where)
det(microscope, the)
nsubj(show, microscope)
case(light, under)
amod(light, visible)
nmod(microscope, light)
aux(show, may)
advcl(reveal, show)
advmod(vague, only)
amod(shadow, vague)
obj(show, shadow)
cc(nothing, or)
conj(shadow, nothing)
case(all, at)
nmod(nothing, all)
punct(illumination, ,)
amod(illumination, ultraviolet)
nsubj(reveal, illumination)
cc(translation, and)
amod(translation, subsequent)
conj(illumination, translation)
case(picture, into)
det(picture, a)
compound(tv, color)
compound(picture, tv)
nmod(translation, picture)
root(ROOT, reveal)
det(wealth, a)
obj(reveal, wealth)
case(detail, of)
nmod(wealth, detail)
punct(reveal, .)
case(time, at)
det(time, the)
amod(time, present)
obl(interested, time)
det(team, the)
compound(team, research)
nsubj(interested, team)
nsubj(pioneer, which)
acl:relcl(team, pioneer)
det(technique, this)
amod(technique, new)
obj(pioneer, technique)
cop(interested, be)
advmod(interested, primarily)
root(ROOT, interested)
mark(advancing, in)
advcl(interested, advancing)
cc(perfect, and)
conj(advancing, perfect)
obj(perfect, it)
punct(breathe, .)
nsubj(analyze, breathe)
punct(analyze, --)
advmod(analyze, electronically)
parataxis(interested, analyze)
det(title, the)
amod(title, medical)
obj(analyze, title)
case(ventilation, of)
punct(ventilation, ``)
compound(ventilation, lobar)
nmod(title, ventilation)
case(man, in)
nmod(ventilation, man)
punct(ventilation, '')
case(Drs., by)
nmod(ventilation, Drs.)
flat(Drs., C.)
flat(Drs., J.)
flat(Drs., Martin)
cc(A., and)
conj(Drs., A.)
flat(A., C.)
advmod(cover, young)
punct(cover, ,)
root(ROOT, cover)
det(paper, a)
amod(paper, brief)
obj(cover, paper)
nsubj(part, which)
cop(part, be)
nummod(part, one)
acl:relcl(paper, part)
case(effort, of)
det(effort, a)
advmod(larger, much)
amod(effort, larger)
nmod(part, effort)
mark(apply, to)
acl(effort, apply)
obj(apply, electronics)
case(study, to)
det(study, the)
obl(apply, study)
case(process, of)
det(process, the)
amod(process, respiratory)
nmod(study, process)
punct(cover, .)
case(University, at)
det(University, the)
obl(develop, University)
case(School, of)
compound(School, Washington)
compound(School, Medical)
nmod(University, School)
punct(develop, ,)
det(group, the)
compound(group, electronics)
nsubj(develop, group)
aux(develop, have)
root(ROOT, develop)
det(analyzer, the)
punct(analyzer, ``)
compound(Gas, respiratory)
compound(analyzer, Gas)
obj(develop, analyzer)
punct(analyzer, '')
acl(analyzer, show)
case(fig, in)
obl(show, fig)
punct(develop, .)
nummod(dub, 3)
punct(3, .)
det(unit, this)
nsubj(dub, unit)
punct(dub, ,)
advmod(dub, affectionately)
root(ROOT, dub)
punct(3, ``)
det(Monster, the)
nsubj:pass(wheel, Monster)
punct(Monster, '')
punct(wheel, ,)
aux(wheel, can)
aux:pass(wheel, be)
root(ROOT, wheel)
case(location, to)
det(location, any)
amod(location, convenient)
obl(wheel, location)
cc(provide, and)
conj(wheel, provide)
det(wealth, a)
obj(provide, wealth)
case(information, of)
nmod(wealth, information)
case(breathing, about)
det(patient, the)
nmod:poss(breathing, patient)
case(patient, 's)
nmod(information, breathing)
punct(wheel, .)
case(rack, in)
det(rack, the)
amod(rack, lower)
compound(rack, center)
obl(indicate, rack)
det(recorder, a)
nummod(channel, 8)
punct(channel, -)
compound(recorder, channel)
nsubj(indicate, recorder)
root(ROOT, indicate)
det(percentage, the)
obj(indicate, percentage)
case(dioxide, of)
compound(dioxide, carbon)
nmod(percentage, dioxide)
cc(nitrogen, and)
conj(dioxide, nitrogen)
case(lobe, from)
det(lobe, the)
amod(lobe, upper)
cc(lower, and)
conj(upper, lower)
nmod(percentage, lobe)
case(lung, of)
nummod(lung, one)
nmod(lobe, lung)
punct(volume, ,)
det(volume, the)
amod(volume, total)
conj(percentage, volume)
case(inhalation, of)
nmod(volume, inhalation)
case(breath, per)
nmod(inhalation, breath)
punct(flow, ,)
det(flow, the)
conj(volume, flow)
case(air, of)
nmod(flow, air)
case(lobe, from)
det(lobe, both)
nmod(flow, lobe)
punct(pressure, ,)
cc(pressure, and)
det(pressure, the)
conj(flow, pressure)
case(lobe, of)
det(lobe, the)
nummod(lobe, two)
nmod(pressure, lobe)
case(respect, with)
nmod(pressure, respect)
case(other, to)
det(other, each)
nmod(respect, other)
punct(indicate, .)
advmod(breathe, usually)
det(patient, the)
nsubj(breathe, patient)
root(ROOT, breathe)
case(mouthpiece, into)
det(mouthpiece, a)
obl(breathe, mouthpiece)
mark(walk, while)
advcl(breathe, walk)
det(treadmill, a)
obj(walk, treadmill)
punct(stand, ,)
conj(walk, stand)
advmod(stand, still)
punct(position, ,)
cc(position, or)
case(position, in)
det(position, some)
amod(position, other)
advmod(significant, medically)
amod(position, significant)
conj(stand, position)
punct(breathe, .)
case(data, from)
det(data, the)
amod(data, result)
obl(determine, data)
det(doctor, the)
nsubj(determine, doctor)
aux(determine, can)
root(ROOT, determine)
compound(defect, lung)
obj(determine, defect)
case(accuracy, with)
amod(accuracy, hitherto)
amod(accuracy, unknown)
nmod(defect, accuracy)
cc(detail, and)
conj(accuracy, detail)
punct(accuracy, .)
compound(measure, Heart)
punct(measure, -)
compound(technique, measure)
appos(defect, technique)
det(electrocardiograph, the)
amod(electrocardiograph, original)
nsubj(indicate, electrocardiograph)
advmod(indicate, primarily)
acl:relcl(technique, indicate)
obj(indicate, irregularity)
case(heartbeat, in)
det(heartbeat, the)
nmod(irregularity, heartbeat)
punct(allow, ,)
cc(allow, but)
nmod:poss(technique, today)
case(today, 's)
nsubj(allow, technique)
conj(indicate, allow)
amod(measurement, exact)
obj(allow, measurement)
case(flow, of)
det(flow, the)
nmod(measurement, flow)
case(blood, of)
nmod(flow, blood)
case(aorta, through)
det(aorta, the)
nmod(flow, aorta)
punct(dimension, ,)
conj(flow, dimension)
case(heart, of)
det(heart, the)
nmod(dimension, heart)
cc(chamber, and)
nmod:poss(chamber, its)
conj(heart, chamber)
punct(study, ,)
cc(study, and)
det(study, a)
advmod(more, much)
advmod(detailed, more)
amod(study, detailed)
conj(flow, study)
case(heartbeat, of)
det(heartbeat, each)
nmod(study, heartbeat)
punct(determine, .)
case(many, for)
obl(open, many)
case(measurement, of)
det(measurement, these)
nmod(many, measurement)
det(chest, the)
nsubj:pass(open, chest)
aux(open, must)
aux:pass(open, be)
root(ROOT, open)
punct(undisturb, ,)
cc(undisturb, but)
det(vessel, the)
compound(vessel, blood)
nsubj(remain, vessel)
cc(heart, and)
det(heart, the)
conj(vessel, heart)
nmod:npmod(heart, itself)
conj(open, remain)
conj(open, undisturb)
punct(open, . )
det(group, a)
nsubj(give, group)
case(researcher, of)
nmod(group, researcher)
case(University, at)
det(University, the)
nmod(group, University)
case(Washington, of)
nmod(University, Washington)
aux(give, have)
root(ROOT, give)
det(paper, a)
obj(give, paper)
nsubj(outline, which)
advmod(outline, briefly)
acl:relcl(paper, outline)
obj(outline, some)
case(technique, of)
det(technique, these)
nmod(some, technique)
punct(give, .)
nummod(method, one)
amod(method, simple)
nsubj(be, method)
mark(measure, of)
acl(method, measure)
det(expansion, the)
obj(measure, expansion)
case(heart, of)
det(heart, the)
nmod(expansion, heart)
root(ROOT, be)
mark(tie, to)
ccomp(be, tie)
det(tube, a)
amod(tube, thin)
compound(tube, rubber)
obj(tie, tube)
punct(tube, ,)
acl(tube, fill)
case(mercury, with)
obl(fill, mercury)
punct(fill, ,)
case(heart, around)
det(heart, the)
obl(fill, heart)
cc(record, and)
conj(heart, record)
det(change, the)
appos(heart, change)
case(resistance, in)
nmod(change, resistance)
mark(stretch, as)
det(tube, the)
nsubj:pass(stretch, tube)
aux:pass(stretch, be)
acl(change, stretch)
punct(be, . )
det(bridge, a)
amod(bridge, balance)
compound(bridge, resistance)
nsubj(instrumentation, bridge)
cc(recorder, and)
det(recorder, a)
compound(recorder, pen)
conj(bridge, recorder)
cop(instrumentation, be)
det:predet(instrumentation, all)
det(instrumentation, the)
amod(instrumentation, electronic)
root(ROOT, instrumentation)
acl(instrumentation, need)
punct(need, .)
nsubj:pass(use, Sonar)
aux(use, can)
aux:pass(use, be)
root(ROOT, use)
mark(measure, to)
xcomp(use, measure)
det(thickness, the)
obj(measure, thickness)
case(heart, of)
det(heart, the)
nmod(thickness, heart)
mark(place, by)
advcl(measure, place)
amod(transducer, small)
compound(transducer, crystal)
obj(place, transducer)
case(side, at)
amod(side, opposite)
obl(place, side)
case(heart, of)
det(heart, the)
nmod(side, heart)
cc(vessel, or)
compound(vessel, blood)
conj(heart, vessel)
cc(one, and)
amod(one, exciting)
conj(heart, one)
case(energy, with)
det(energy, some)
amod(energy, pul)
amod(energy, ultrasonic)
nmod(one, energy)
punct(use, .)
det(time, the)
compound(time, travel)
nsubj(meter, time)
case(sound, of)
nmod(time, sound)
case(tissue, in)
nmod(sound, tissue)
cop(meter, be)
advmod(1500, about)
nummod(meter, 1500)
root(ROOT, meter)
case(second, per)
nmod(meter, second)
punct(meter, ;)
punct(meter, ;)
advmod(take, thus)
nsubj(take, it)
parataxis(meter, take)
advmod(16, about)
nummod(Msec., 16)
obj(take, Msec.)
mark(traverse, to)
csubj(take, traverse)
nummod(mm., 25)
obj(traverse, mm.)
case(tissue, of)
nmod(mm., tissue)
punct(meter, . )
det(sonar, a)
nsubj:pass(require, sonar)
cc(type, or)
compound(type, radar)
punct(type, -)
conj(sonar, type)
case(generator, of)
compound(generator, pulse)
nmod(type, generator)
cc(system, and)
compound(system, time)
punct(delay, -)
compound(measure, delay)
compound(system, measure)
conj(generator, system)
aux:pass(require, be)
root(ROOT, require)
case(evaluation, for)
compound(tissue, body)
punct(tissue, -)
compound(evaluation, tissue)
obl(require, evaluation)
punct(require, .)
case(addition, in)
obl(make, addition)
case(heart, to)
det(heart, the)
nmod(addition, heart)
cc(aorta, and)
conj(heart, aorta)
punct(make, ,)
amod(measurement, successful)
nsubj:pass(make, measurement)
case(liver, of)
nmod(measurement, liver)
cc(spleen, and)
conj(liver, spleen)
aux(make, have)
advmod(make, also)
aux:pass(make, be)
root(ROOT, make)
case(technique, by)
det(technique, this)
obl(make, technique)
punct(make, .)
det(effect, the)
compound(effect, Doppler)
nsubj:pass(employ, effect)
punct(effect, ,)
acl(effect, use)
amod(signal, ultrasonic)
obj(use, signal)
punct(employ, ,)
aux(employ, can)
aux:pass(employ, be)
root(ROOT, employ)
mark(measure, to)
xcomp(employ, measure)
det(flow, the)
obj(measure, flow)
case(blood, of)
nmod(flow, blood)
mark(cut, without)
advcl(measure, cut)
case(vessel, into)
det(vessel, the)
compound(vessel, blood)
obl(cut, vessel)
punct(employ, . )
det(system, a)
advmod(sophisticated, still)
advmod(sophisticated, more)
amod(system, sophisticated)
nsubj:pass(devise, system)
aux(devise, have)
aux:pass(devise, be)
root(ROOT, devise)
mark(determine, for)
advcl(devise, determine)
det(power, the)
amod(power, effective)
obj(determine, power)
case(heart, of)
det(heart, the)
nmod(power, heart)
nmod:npmod(heart, itself)
punct(devise, .)
nsubj(use, it)
root(ROOT, use)
cc:preconj(arrangement, both)
det(arrangement, a)
amod(arrangement, ultrasonic)
compound(arrangement, dimension)
obj(use, arrangement)
case(heart, of)
det(heart, the)
nmod(arrangement, heart)
cc(catheter, and)
det(catheter, a)
conj(heart, catheter)
acl(catheter, carry)
det(thermistor, a)
obj(carry, thermistor)
acl(thermistor, insert)
case(bloodstream, into)
det(bloodstream, the)
obl(insert, bloodstream)
punct(use, .)
det(measure, the)
amod(measure, latter)
root(ROOT, measure)
det(heat, the)
nsubj(carry, heat)
acl(measure, carry)
advmod(carry, away)
case(bloodstream, by)
det(bloodstream, the)
obl(carry, bloodstream)
case(indication, as)
det(indication, a)
obl(carry, indication)
case(velocity, of)
det(velocity, the)
nmod(indication, velocity)
case(flow, of)
det(flow, the)
compound(flow, blood)
nmod(velocity, flow)
punct(measure, .)
expl(possible, it)
cop(possible, be)
advmod(possible, also)
root(ROOT, possible)
mark(utilize, to)
csubj(possible, utilize)
det(transducer, a)
compound(transducer, pressure)
obj(utilize, transducer)
punct(transducer, ,)
acl(transducer, mount)
case(end, at)
det(end, the)
obl(mount, end)
case(catheter, of)
det(catheter, a)
nmod(end, catheter)
nsubj:pass(insert, which)
aux:pass(insert, be)
acl:relcl(catheter, insert)
case(ventricle, into)
det(heart, the)
nmod:poss(ventricle, heart)
case(heart, 's)
amod(ventricle, left)
obl(insert, ventricle)
punct(insert, ,)
mark(indicate, to)
advcl(insert, indicate)
det(pressure, the)
compound(pressure, blood)
obj(indicate, pressure)
case(heart, in)
det(heart, the)
nmod(pressure, heart)
nmod:npmod(heart, itself)
punct(possible, .)
det(measurement, this)
compound(measurement, pressure)
nsubj:pass(make, measurement)
aux(make, may)
aux:pass(make, be)
root(ROOT, make)
case(time, at)
det(time, the)
amod(time, same)
obl(make, time)
obj(make, that)
det(measurement, the)
amod(measurement, ultrasonic)
compound(measurement, dimension)
nsubj:pass(make, measurement)
aux:pass(make, be)
acl:relcl(time, make)
punct(make, . )
det(version, a)
amod(version, simplify)
nsubj:pass(show, version)
case(instrumentation, of)
det(instrumentation, the)
nmod(version, instrumentation)
case(procedure, for)
det(procedure, this)
nmod(instrumentation, procedure)
aux:pass(show, be)
root(ROOT, show)
case(fig, in)
obl(show, fig)
punct(show, .)
nummod(measure, 2)
punct(2, .)
nsubj:pass(measure, Outputs)
case(system, of)
det(system, the)
nummod(system, two)
nmod(Outputs, system)
aux:pass(measure, be)
root(ROOT, measure)
case(circuit, by)
det(circuit, a)
compound(timing, pulse)
punct(timing, -)
compound(circuit, timing)
obl(measure, circuit)
cc(bridge, and)
det(bridge, a)
compound(bridge, resistance)
conj(circuit, bridge)
punct(bridge, ,)
acl(bridge, follow)
case(computer, by)
det(computer, a)
amod(computer, simple)
compound(computer, analogue)
obl(follow, computer)
nsubj(feed, which)
acl:relcl(computer, feed)
det(recorder, a)
amod(recorder, multichannel)
obj(feed, recorder)
punct(feed, .)
case(doctor, from)
det(doctor, this)
obl(read, doctor)
aux(read, can)
conj(feed, read)
compound(rate, heart)
obj(read, rate)
punct(change, ,)
conj(rate, change)
case(diameter, in)
nmod(change, diameter)
punct(pressure, ,)
conj(diameter, pressure)
punct(power, ,)
cc(power, and)
amod(power, effective)
compound(power, heart)
conj(diameter, power)
punct(pill, .)
compound(transmitter, Radio)
punct(transmitter, -)
compound(pill, transmitter)
appos(power, pill)
amod(year, several)
obl:npmod(ago, year)
advmod(make, ago)
nsubj:pass(make, headline)
aux:pass(make, be)
acl:relcl(pill, make)
case(capsule, by)
det(capsule, a)
amod(capsule, small)
compound(capsule, radio)
compound(capsule, transmitter)
obl(make, capsule)
nsubj:pass(swallow, which)
aux(swallow, could)
aux:pass(swallow, be)
acl:relcl(capsule, swallow)
case(patient, by)
det(patient, the)
obl(swallow, patient)
cc(radio, and)
nsubj(radio, which)
aux(radio, would)
advmod(radio, then)
conj(swallow, radio)
amod(pressure, internal)
compound(data, pressure)
obj(radio, data)
case(receiver, to)
amod(receiver, external)
obl(radio, receiver)
punct(measure, .)
det(capsule, this)
amod(capsule, original)
nsubj(contain, capsule)
root(ROOT, contain)
det(battery, a)
obj(contain, battery)
cc(oscillator, and)
det(oscillator, a)
compound(oscillator, transistor)
conj(battery, oscillator)
cc(cm., and)
cop(cm., be)
advmod(1, about)
nummod(cm., 1)
conj(contain, cm.)
case(diameter, in)
nmod(cm., diameter)
punct(contain, .)
compound(life, battery)
nsubj(limit, life)
root(ROOT, limit)
det(use, the)
obj(limit, use)
case(pill, of)
det(pill, this)
punct(pill, ``)
nmod(use, pill)
punct(pill, '')
case(maximum, to)
advmod(30, about)
nummod(hour, 8)
case(30, to)
nmod(8, 30)
obl:npmod(maximum, hour)
obl(limit, maximum)
punct(limit, . )
det(refinement, a)
nsubj:pass(describe, refinement)
case(technique, of)
det(technique, this)
nmod(refinement, technique)
aux(describe, have)
aux:pass(describe, be)
root(ROOT, describe)
case(Drs., by)
obl(describe, Drs.)
flat(Drs., zworykin)
cc(Farrar, and)
conj(Drs., Farrar)
cc(Mr., and)
conj(Drs., Mr.)
flat(Mr., Berkely)
case(Center, of)
det(Center, the)
compound(electronics, Medical)
compound(Center, electronics)
nmod(Mr., Center)
case(Institute, of)
det(Institute, the)
compound(Institute, Rockefeller)
nmod(Center, Institute)
punct(describe, .)
case(arrangement, in)
det(arrangement, this)
compound(arrangement, novel)
obl(smaller, arrangement)
det(pill, the)
punct(pill, ``)
nsubj(smaller, pill)
punct(pill, '')
cop(smaller, be)
advmod(smaller, much)
root(ROOT, smaller)
cc(contain, and)
conj(smaller, contain)
advmod(circuit, only)
det(circuit, a)
amod(circuit, resonant)
obj(contain, circuit)
case(which, in)
obl(form, which)
det(capacitor, the)
nsubj:pass(form, capacitor)
aux:pass(form, be)
acl:relcl(circuit, form)
case(transducer, by)
det(transducer, a)
compound(sense, pressure)
punct(sense, -)
compound(transducer, sense)
obl(form, transducer)
punct(smaller, .)
mark(show, as)
advcl(place, show)
case(Fig., in)
obl(show, Fig.)
nummod(Fig., 4)
punct(place, ,)
det(antenna, a)
amod(antenna, external)
nsubj:pass(place, antenna)
aux:pass(place, be)
root(ROOT, place)
case(patient, over)
cc(patient, or)
case(patient, around)
det(patient, the)
obl(place, patient)
cc(excite, and)
conj(patient, excite)
nummod(time, 3000)
obl:tmod(excite, time)
det(second, a)
obj(excite, second)
case(burst, with)
amod(burst, short)
nummod(kc., 400)
punct(kc., -)
compound(burst, kc.)
obl(second, burst)
punct(place, .)
det(energy, the)
nsubj(cause, energy)
acl(energy, receive)
case(pill, by)
det(pill, the)
punct(pill, ``)
obl(receive, pill)
punct(pill, '')
root(ROOT, cause)
det(circuit, the)
amod(circuit, resonant)
obj(cause, circuit)
case(ring, to)
punct(ring, ``)
nmod(circuit, ring)
punct(ring, '')
advmod(ring, on)
case(burst, after)
det(burst, the)
obl(on, burst)
cc(take, and)
det(ring, this)
punct(ring, ``)
nsubj(take, ring)
punct(ring, '')
conj(cause, take)
obj(take, place)
case(frequency, at)
det(frequency, the)
amod(frequency, resonant)
obl(take, frequency)
case(pill, of)
det(pill, the)
punct(pill, ``)
nmod(frequency, pill)
punct(pill, '')
punct(amplify, .)
det(frequency, these)
nsubj:pass(amplify, frequency)
aux:pass(amplify, be)
acl:relcl(frequency, amplify)
cc(detect, and)
conj(amplify, detect)
case(receiver, by)
det(receiver, the)
compound(receiver, FM)
obl(detect, receiver)
case(burst, after)
det(burst, each)
obl(detect, burst)
case(energy, of)
amod(energy, transmit)
nmod(burst, energy)
cc(obtain, and)
punct(calibrate, ,)
mark(calibrate, after)
det(pill, the)
punct(pill, ``)
nsubj:pass(calibrate, pill)
punct(pill, '')
aux(calibrate, have)
aux:pass(calibrate, be)
advcl(amplify, calibrate)
punct(obtain, ,)
amod(indication, precise)
amod(pressure, internal)
compound(indication, pressure)
nsubj:pass(obtain, indication)
aux(obtain, can)
aux:pass(obtain, be)
conj(calibrate, obtain)
punct(cause, .)
nsubj(be, one)
case(advantage, of)
det(advantage, the)
nmod(one, advantage)
case(method, of)
det(method, this)
nmod(advantage, method)
root(ROOT, be)
mark(remain, that)
det(pill, the)
punct(pill, ``)
nsubj(remain, pill)
punct(pill, '')
aux(remain, can)
ccomp(be, remain)
case(patient, in)
det(patient, the)
obl(remain, patient)
case(day, for)
amod(day, several)
obl(remain, day)
punct(remain, ,)
advcl(remain, permit)
obj(permit, observation)
case(condition, under)
amod(condition, natural)
obl(permit, condition)
punct(be, .)
nsubj:pass(plan, application)
case(organ, to)
nmod(application, organ)
amod(application, other)
mark(plan, than)
det(tract, the)
amod(tract, gastrointestinal)
nsubj:pass(plan, tract)
aux:pass(plan, be)
root(ROOT, plan)
case(experiment, for)
amod(experiment, future)
obl(plan, experiment)
punct(plan, .)
nsubj(exploration, Sonar)
case(research, in)
amod(research, medical)
nmod(Sonar, research)
nmod(Sonar, one)
case(application, of)
det(application, the)
advmod(gratifying, most)
amod(application, gratifying)
nmod(one, application)
case(technique, of)
det(technique, a)
amod(technique, important)
nmod(application, technique)
case(detection, of)
compound(detection, submarine)
nmod(technique, detection)
cop(exploration, be)
case(exploration, in)
det(exploration, the)
root(ROOT, exploration)
case(body, of)
det(body, the)
amod(body, human)
nmod(exploration, body)
punct(exploration, .)
nmod:poss(reader, we)
nsubj(familiar, reader)
cop(familiar, be)
root(ROOT, familiar)
case(principle, with)
det(principle, the)
obl(familiar, principle)
case(sonar, of)
nmod(principle, sonar)
advmod(send, where)
compound(wave, sound)
nsubj:pass(send, wave)
aux:pass(send, be)
acl:relcl(principle, send)
compound:prt(send, out)
case(water, in)
obl(send, water)
cc(indicate, and)
det(echoe, the)
nsubj(indicate, echoe)
advmod(indicate, then)
conj(familiar, indicate)
amod(object, submerge)
obj(indicate, object)
punct(familiar, .)
amod(method, various)
nsubj:pass(use, method)
case(pulse, of)
nmod(method, pulse)
punct(scanning, ,)
conj(pulse, scanning)
punct(displaying, ,)
cc(displaying, and)
conj(pulse, displaying)
det(wave, these)
compound(wave, sound)
obj(displaying, wave)
aux:pass(use, be)
root(ROOT, use)
mark(detect, to)
xcomp(use, detect)
obj(detect, submarine)
punct(floor, ,)
compound(ocean, map)
compound(floor, ocean)
conj(submarine, floor)
punct(communicate, ,)
cc(communicate, and)
advmod(communicate, even)
conj(detect, communicate)
case(water, under)
obl(communicate, water)
punct(use, .)
case(medicine, in)
obl(higher, medicine)
det(frequency, the)
nsubj(higher, frequency)
cop(higher, be)
advmod(higher, much)
root(ROOT, higher)
punct(transducer, ,)
conj(higher, transducer)
cc(smaller, and)
det(beam, the)
compound(beam, sonar)
nsubj(smaller, beam)
nmod:npmod(beam, themselves)
cop(smaller, be)
advmod(smaller, much)
conj(higher, smaller)
punct(use, ,)
cc(use, and)
amod(technique, different)
compound(technique, scanning)
nsubj:pass(use, technique)
aux(use, may)
aux:pass(use, be)
conj(smaller, use)
punct(same, ,)
cc(same, but)
det(principle, the)
nsubj(same, principle)
acl(principle, involve)
cop(same, be)
det(same, the)
conj(use, same)
case(sonar, as)
case(sonar, in)
obl(same, sonar)
punct(higher, .)
mark(contain, because)
det(body, the)
nsubj(contain, body)
advcl(proceed, contain)
advmod(much, so)
amod(liquid, much)
obj(contain, liquid)
punct(proceed, ,)
nsubj(proceed, transmission)
case(signal, of)
amod(signal, ultrasonic)
nmod(transmission, signal)
root(ROOT, proceed)
advmod(well, fairly)
advmod(proceed, well)
case(muscle, in)
obl(proceed, muscle)
cc(vessel, and)
compound(vessel, blood)
conj(muscle, vessel)
punct(proceed, .)
nsubj(transmit, Bones)
cc(cartilage, and)
conj(Bones, cartilage)
root(ROOT, transmit)
advmod(transmit, poorly)
cc(tend, and)
conj(transmit, tend)
mark(reflect, to)
xcomp(tend, reflect)
det(signal, the)
amod(signal, ultrasonic)
obj(reflect, signal)
punct(transmit, .)
case(phenomenon, base)
case(phenomenon, on)
det(phenomenon, this)
obl(use, phenomenon)
punct(use, ,)
det(number, a)
nsubj(use, number)
case(investigator, of)
nmod(number, investigator)
aux(use, have)
root(ROOT, use)
det(method, this)
obj(use, method)
mark(look, to)
punct(look, ``)
acl(method, look)
case(organ, through)
punct(look, '')
amod(organ, human)
obl(look, organ)
punct(use, . )
det(example, a)
amod(example, good)
nsubj:pass(contain, example)
case(result, of)
det(result, the)
nmod(example, result)
amod(result, obtainable)
case(radiation, with)
amod(radiation, ultrasonic)
obl(obtainable, radiation)
aux:pass(contain, be)
root(ROOT, contain)
case(papers, in)
obl(contain, papers)
acl(papers, present)
case(Dr., by)
obl(present, Dr.)
flat(Dr., G.)
flat(Dr., Baum)
nsubj(explore, who)
aux(explore, have)
acl:relcl(Dr., explore)
det(eye, the)
amod(eye, human)
obj(explore, eye)
punct(contain, .)
nsubj(diagnose, he)
aux(diagnose, can)
root(ROOT, diagnose)
obj(diagnose, detachment)
case(retina, of)
det(retina, the)
nmod(detachment, retina)
advmod(indicate, where)
amod(method, conventional)
nsubj(indicate, method)
acl:relcl(retina, indicate)
obj(indicate, blindness)
case(glaucoma, due)
fixed(due, to)
obl(indicate, glaucoma)
punct(diagnose, .)
det(method, the)
nsubj:pass(illustrate, method)
acl(method, use)
mark(scan, to)
xcomp(use, scan)
det(eye, the)
obj(scan, eye)
advmod(scan, ultrasonically)
aux:pass(illustrate, be)
root(ROOT, illustrate)
case(fig, in)
obl(illustrate, fig)
punct(illustrate, .)
nummod(couple, 6)
punct(6, .)
det(transducer, the)
nsubj:pass(couple, transducer)
aux:pass(couple, be)
root(ROOT, couple)
case(body, to)
det(body, the)
obl(couple, body)
case(bath, through)
det(bath, a)
compound(bath, water)
nmod(body, bath)
punct(bath, ,)
advmod(show, not)
amod(bath, show)
punct(show, .)
case(display, for)
obl(use, display)
punct(use, ,)
nsubj(use, Dr.)
flat(Dr., Baum)
parataxis(couple, use)
det(portion, a)
obj(use, portion)
case(Af, of)
det(Af, a)
nmod(portion, Af)
punct(indicator, ,)
det(indicator, a)
amod(indicator, airborne)
compound(indicator, radar)
conj(Af, indicator)
punct(photograph, ,)
cc(photograph, and)
advmod(photograph, then)
conj(use, photograph)
det(screen, the)
obj(photograph, screen)
mark(obtain, to)
advcl(photograph, obtain)
det(record, a)
amod(record, permanent)
obj(obtain, record)
punct(couple, . )
det(sonogram, a)
amod(sonogram, typical)
punct(sonogram, ``)
nsubj:pass(show, sonogram)
punct(sonogram, '')
case(eye, of)
det(eye, a)
amod(eye, human)
nmod(sonogram, eye)
punct(sonogram, ,)
advmod(eye, together)
case(description, with)
det(description, a)
obl(together, description)
case(part, of)
det(part, the)
amod(part, anatomical)
nmod(description, part)
punct(show, ,)
aux:pass(show, be)
root(ROOT, show)
case(fig, in)
obl(show, fig)
punct(show, .)
nummod(mc., 5)
punct(5, .)
det(frequency, the)
nsubj(mc., frequency)
acl(frequency, use)
case(experiment, for)
det(experiment, these)
obl(use, experiment)
cop(mc., be)
nummod(mc., 15)
root(ROOT, mc.)
cc(crystal, and)
det(transducer, the)
nsubj(crystal, transducer)
cop(crystal, be)
det(crystal, a)
advmod(cut, specially)
amod(crystal, cut)
conj(mc., crystal)
case(lens, with)
det(lens, a)
compound(lens, epoxy)
nmod(crystal, lens)
amod(lens, capable)
mark(provide, of)
advcl(capable, provide)
compound(diameter, beam)
obj(provide, diameter)
xcomp(provide, smaller)
case(millimeter, than)
nummod(millimeter, one)
obl(smaller, millimeter)
punct(mc., .)
det(transducer, the)
nsubj(move, transducer)
nmod:npmod(transducer, itself)
root(ROOT, move)
det(beam, the)
obj(move, beam)
case(scan, in)
det(scan, a)
compound(scan, sector)
obl(move, scan)
punct(move, ,)
advmod(antenna, just)
case(antenna, like)
det(antenna, a)
compound(antenna, radar)
obl(move, antenna)
punct(move, ,)
mark(move, while)
det(structure, the)
amod(structure, entire)
compound(structure, transducer)
nsubj:pass(move, structure)
aux:pass(move, be)
advcl(move, move)
case(arc, over)
det(arc, a)
nummod(degree, 90)
punct(degree, -)
compound(arc, degree)
obl(move, arc)
case(front, in)
nmod(arc, front)
case(eye, of)
det(eye, the)
nmod(front, eye)
mark(look, to)
punct(look, ``)
acl(eye, look)
obl(look, into)
punct(look, '')
det(corner, all)
obl(look, corner)
punct(move, .)
det(picture, the)
amod(picture, total)
nsubj:pass(see, picture)
aux:pass(see, be)
advmod(see, only)
root(ROOT, see)
case(camera, by)
det(camera, the)
obl(see, camera)
nsubj(integrate, which)
acl:relcl(camera, integrate)
det(scan, the)
amod(scan, many)
compound(scan, sector)
obj(integrate, scan)
case(period, over)
det(period, the)
amod(period, entire)
nummod(degree, 90)
punct(degree, -)
compound(period, degree)
compound(period, rotation)
nmod(scan, period)
punct(see, .)
nsubj(apply, Drs.)
flat(Drs., howry)
cc(Holmes, and)
conj(Drs., Holmes)
case(University, at)
det(University, the)
obl(apply, University)
case(School, of)
compound(School, Colorado)
compound(School, Medical)
nmod(University, School)
aux(apply, have)
ccomp(see, apply)
det(technique, the)
amod(technique, same)
compound(technique, sonar)
obj(apply, technique)
case(area, to)
amod(area, other)
nmod(technique, area)
case(tissue, of)
amod(tissue, soft)
nmod(area, tissue)
cc(obtain, and)
aux(obtain, have)
conj(apply, obtain)
advmod(good, extremely)
amod(result, good)
obj(obtain, result)
punct(see, .)
mark(submerge, by)
advcl(able, submerge)
det(patient, the)
obj(submerge, patient)
case(tub, in)
det(tub, a)
obl(submerge, tub)
cc(rotate, and)
conj(submerge, rotate)
det(transducer, the)
obj(rotate, transducer)
mark(go, while)
det(scanning, the)
nsubj(go, scanning)
advcl(rotate, go)
advmod(go, on)
punct(able, ,)
nsubj(able, they)
aux(able, have)
cop(able, be)
root(ROOT, able)
mark(get, to)
xcomp(able, get)
amod(view, cross-section)
obj(get, view)
case(neck, of)
det(neck, the)
nmod(view, neck)
punct(get, ,)
mark(show, as)
advcl(get, show)
case(fig, in)
obl(show, fig)
punct(able, .)
nummod(insight, 7)
punct(insight, ,)
cc(insight, as)
fixed(as, well)
fixed(as, as)
amod(insight, many)
amod(insight, other)
amod(insight, hitherto)
amod(insight, impossible)
root(ROOT, insight)
punct(7, .)
mark(mention, as)
advcl(reflect, mention)
advmod(mention, before)
punct(reflect, ,)
nsubj(reflect, bone)
root(ROOT, reflect)
det(energy, the)
compound(energy, sound)
obj(reflect, energy)
cc(fig, and)
case(fig, in)
conj(energy, fig)
punct(reflect, .)
nummod(show, 7)
det(portion, the)
nsubj(show, portion)
case(spine, of)
det(spine, the)
nmod(portion, spine)
root(ROOT, show)
case(area, as)
det(area, the)
amod(area, black)
obl(show, area)
case(center, in)
det(center, the)
nmod(area, center)
punct(show, .)
nsubj(apparent, artery)
cc(vein, and)
conj(artery, vein)
cop(apparent, be)
root(ROOT, apparent)
case(center, by)
nmod:poss(center, they)
amod(center, black)
punct(center, ,)
obl:npmod(fill, blood)
punct(fill, -)
amod(center, fill)
obl(apparent, center)
cc(wall, and)
det(wall, the)
amod(wall, surround)
amod(wall, white)
conj(center, wall)
punct(apparent, . )
det(cross-section, a)
nsubj:pass(show, cross-section)
case(leg, of)
det(leg, a)
amod(leg, normal)
amod(leg, lower)
amod(leg, human)
nmod(cross-section, leg)
aux:pass(show, be)
root(ROOT, show)
case(Fig., in)
obl(show, Fig.)
root(ROOT, 8)
case(part, with)
det(part, the)
amod(part, various)
nmod(8, part)
acl(part, label)
punct(8, .)
nmod:poss(boyhood, oerst)
case(oerst, 's)
nsubj(represent, boyhood)
root(ROOT, represent)
det(chance, a)
amod(chance, minimal)
obj(represent, chance)
mark(attain, of)
cc:preconj(attain, either)
acl(chance, attain)
obj(attain, greatness)
cc(serve, or)
conj(attain, serve)
nmod:poss(people, he)
obj(serve, people)
advmod(well, so)
advmod(serve, well)
cc(span, and)
advmod(long, over)
advmod(long, so)
advmod(span, long)
det(span, a)
conj(represent, span)
case(life, of)
nmod(span, life)
punct(represent, .)
nsubj:pass(bear, he)
aux:pass(bear, be)
root(ROOT, bear)
case(town, in)
det(town, the)
amod(town, small)
amod(town, danish)
obl(bear, town)
case(Rudkoebing, of)
nmod(town, Rudkoebing)
case(island, on)
det(island, the)
obl(bear, island)
case(Langeland, of)
nmod(island, Langeland)
case(part, in)
det(part, the)
obl:npmod(central, south)
punct(central, -)
amod(part, central)
nmod(island, part)
case(Denmark, of)
nmod(part, Denmark)
case(August, on)
nmod(part, August)
nummod(August, 14)
punct(August, ,)
nummod(August, 1777)
punct(bear, .)
nmod:poss(father, he)
nsubj(apothecary, father)
appos(father, Soeren)
cop(apothecary, be)
det(apothecary, the)
compound(apothecary, village)
root(ROOT, apothecary)
nmod:poss(income, whose)
amod(income, slender)
nsubj(make, income)
acl:relcl(apothecary, make)
obj(make, it)
xcomp(make, difficult)
mark(feed, to)
advcl(difficult, feed)
nmod:poss(family, he)
obj(feed, family)
punct(apothecary, ,)
cc(educate, let)
advmod(educate, alone)
conj(apothecary, educate)
obj(educate, they)
case(town, in)
det(town, a)
obl(educate, town)
mark(school, without)
advmod(school, even)
det(school, a)
advcl(educate, school)
punct(apothecary, .)
det(boy, the)
nummod(boy, two)
amod(boy, older)
nsubj(go, boy)
punct(Hans, ,)
appos(boy, Hans)
cc(ander, and)
conj(Hans, ander)
punct(boy, ,)
nmod:poss(junior, he)
appos(boy, junior)
case(year, by)
det(year, a)
nmod(junior, year)
punct(go, ,)
advmod(go, therefore)
root(ROOT, go)
advmod(go, daily)
case(home, to)
det(home, the)
obl(go, home)
case(wigmaker, of)
det(wigmaker, a)
amod(wigmaker, warm)
cc(friendly, and)
conj(warm, friendly)
nmod(home, wigmaker)
advmod(wigmaker, nearby)
case(instruction, for)
obl(go, instruction)
case(german, in)
nmod(instruction, german)
punct(go, ;)
punct(go, ;)
nmod:poss(wife, he)
nsubj(teach, wife)
parataxis(go, teach)
det(boy, the)
nummod(boy, two)
obj(teach, boy)
mark(read, to)
acl(boy, read)
cc(write, and)
conj(read, write)
obj(write, danish)
punct(go, .)
amod(brother, other)
nsubj(join, brother)
advmod(join, later)
root(ROOT, join)
obj(join, they)
case(instruction, for)
obl(join, instruction)
case(Oldenburg, with)
nmod(instruction, Oldenburg)
punct(wigmaker, ,)
det(wigmaker, the)
conj(Oldenburg, wigmaker)
punct(add, ,)
cc(add, and)
advmod(add, also)
nsubj:pass(add, arithmetic)
aux:pass(add, be)
conj(join, add)
case(reading, to)
compound(reading, Bible)
obl(add, reading)
punct(german, ,)
conj(reading, german)
punct(danish, ,)
cc(danish, and)
conj(reading, danish)
case(curriculum, in)
det(curriculum, the)
amod(curriculum, informal)
nmod(reading, curriculum)
punct(join, .)
nmod:poss(contribution, Oldenburg)
case(Oldenburg, 's)
nsubj:pass(exhaust, contribution)
aux:pass(exhaust, be)
advmod(exhaust, soon)
root(ROOT, exhaust)
cc(have, and)
det(boy, the)
nsubj(have, boy)
conj(exhaust, have)
mark(turn, to)
xcomp(have, turn)
case(circle, to)
det(circle, a)
amod(circle, wider)
obl(turn, circle)
case(learn, of)
det(town, the)
nmod(circle, town)
case(town, 's)
acl(circle, learn)
punct(circle, ,)
case(pastor, such)
fixed(such, as)
det(pastor, the)
obl(learn, pastor)
punct(turn, ,)
mark(supplement, to)
advcl(turn, supplement)
det(teaching, the)
amod(teaching, simple)
obj(supplement, teaching)
punct(exhaust, .)
case(surveyor, from)
det(surveyor, the)
compound(surveyor, town)
obl(learn, surveyor)
punct(learn, ,)
nsubj(learn, Hans)
root(ROOT, learn)
obj(learn, draw)
cc(mathematics, and)
conj(draw, mathematics)
cc(subject, and)
punct(learn, ,)
case(student, from)
det(student, a)
compound(student, university)
nmod(draw, student)
punct(subject, ,)
det(subject, some)
amod(subject, academic)
conj(draw, subject)
punct(learn, .)
det(mayor, the)
nsubj(teach, mayor)
case(town, of)
det(town, the)
nmod(mayor, town)
root(ROOT, teach)
obj(teach, they)
obj(teach, English)
cc(french, and)
conj(English, french)
punct(teach, .)
obj(learn, whatever)
nsubj(learn, Hans)
cc(ander, or)
conj(Hans, ander)
parataxis(teach, learn)
advmod(pass, separately)
nsubj(pass, they)
ccomp(learn, pass)
compound:prt(pass, on)
case(other, to)
det(other, each)
obl(pass, other)
punct(teach, ;)
punct(teach, ;)
nsubj(read, they)
parataxis(teach, read)
det(book, every)
obj(read, book)
obj(borrow, that)
nsubj(borrow, they)
aux(borrow, could)
acl:relcl(book, borrow)
case(village, in)
det(village, the)
obl(borrow, village)
punct(teach, .)
case(12, at)
obl(mature, 12)
punct(mature, ,)
nsubj(mature, Hans)
cop(mature, be)
advmod(mature, sufficiently)
root(ROOT, mature)
mark(help, to)
advcl(mature, help)
nmod:poss(father, he)
obj(help, father)
case(shop, in)
det(shop, the)
compound(shop, apothecary)
obl(help, shop)
punct(shop, ,)
nsubj(help, which)
acl:relcl(shop, help)
xcomp(help, stimulate)
nmod:poss(interest, he)
obj(stimulate, interest)
case(medicine, in)
nmod(interest, medicine)
cc(science, and)
conj(medicine, science)
punct(mature, .)
nmod:poss(love, he)
amod(love, earlier)
nsubj(remain, love)
case(literature, for)
nmod(love, literature)
cc(history, and)
conj(literature, history)
root(ROOT, remain)
case(he, with)
obl(remain, he)
case(life, for)
nmod:poss(life, he)
amod(life, entire)
obl(remain, life)
punct(remain, .)
case(1793, in)
obl(decide, 1793)
det(brother, the)
nsubj(decide, brother)
root(ROOT, decide)
mark(enter, to)
xcomp(decide, enter)
det(University, the)
obj(enter, University)
case(Copenhagen, of)
nmod(University, Copenhagen)
punct(found, ()
acl(University, found)
case(1479, in)
obl(found, 1479)
punct(found, ))
cc(find, and)
det(spring, the)
amod(spring, follow)
nsubj(find, spring)
conj(decide, find)
obj(find, they)
case(university, at)
det(university, the)
obl(find, university)
acl(university, prepare)
mark(matriculate, to)
xcomp(prepare, matriculate)
case(session, for)
det(session, the)
compound(session, autumn)
obl(matriculate, session)
punct(find, .)
mark(devote, while)
nsubj(devote, Hans)
advcl(study, devote)
obj(devote, himself)
case(science, to)
det(science, the)
obl(devote, science)
case(medicine, of)
nmod(science, medicine)
punct(physics, ,)
conj(medicine, physics)
punct(astronomy, ,)
cc(astronomy, and)
conj(medicine, astronomy)
punct(study, ,)
nmod:poss(brother, he)
nsubj(study, brother)
conj(decide, study)
obj(study, law)
punct(decide, .)
det(brother, the)
nsubj(continue, brother)
root(ROOT, continue)
mark(help, to)
xcomp(continue, help)
det(other, each)
obj(help, other)
case(study, during)
nmod:poss(study, they)
obl(help, study)
punct(help, ,)
advcl(help, share)
det(purse, a)
amod(purse, joint)
obj(share, purse)
punct(lodging, ,)
conj(purse, lodging)
advmod(lodging, together)
case(dormitory, in)
det(dormitory, the)
nmod(lodging, dormitory)
cc(together, and)
obl:npmod(together, dining)
conj(dormitory, together)
case(home, at)
det(home, the)
obl(together, home)
case(aunt, of)
nmod:poss(aunt, they)
nmod(home, aunt)
punct(continue, .)
nsubj(supplement, they)
root(ROOT, supplement)
nmod:poss(income, they)
obj(supplement, income)
case(assistance, by)
amod(assistance, small)
compound(assistance, government)
obl(supplement, assistance)
punct(supplement, ,)
case(tutor, by)
obl(supplement, tutor)
cc(economize, and)
conj(supplement, economize)
mark(could, wherever)
nsubj(could, they)
advcl(economize, could)
punct(supplement, .)
advmod(impressive, so)
root(ROOT, impressive)
cop(impressive, be)
det(year, those)
amod(year, serious)
nsubj(impressive, year)
case(study, of)
nmod(year, study)
case(university, at)
det(university, the)
nmod(year, university)
mark(write, that)
nsubj(write, Hans)
advmod(write, later)
acl:relcl(year, write)
punct(write, ,)
punct(write, ``)
mark(free, to)
cop(free, be)
advmod(free, perfectly)
xcomp(write, free)
punct(revel, ,)
det(man, the)
amod(man, young)
nsubj(revel, man)
aux(revel, must)
ccomp(free, revel)
case(kingdom, in)
det(kingdom, the)
amod(kingdom, great)
obl(revel, kingdom)
case(thought, of)
nmod(kingdom, thought)
cc(imagination, and)
conj(thought, imagination)
punct(revel, ;)
punct(impressive, ;)
expl(be, there)
parataxis(revel, be)
det(struggle, a)
nsubj(be, struggle)
advmod(struggle, there)
punct(struggle, ,)
case(which, in)
obl(easy, which)
punct(easy, ,)
mark(fall, if)
nsubj(fall, he)
advcl(easy, fall)
punct(easy, ,)
nsubj(easy, it)
cop(easy, be)
parataxis(be, easy)
mark(rise, for)
nsubj(rise, he)
mark(rise, to)
advcl(easy, rise)
advmod(rise, again)
punct(be, ,)
expl(be, there)
parataxis(easy, be)
nsubj(be, freedom)
case(utterance, of)
nmod(freedom, utterance)
advmod(freedom, there)
punct(be, ,)
nsubj(draw, which)
acl:relcl(freedom, draw)
case(it, after)
obl(draw, it)
det(consequence, no)
amod(consequence, irreparable)
obj(draw, consequence)
case(society, on)
nmod(consequence, society)
punct(impressive, . )
nsubj(live, I)
root(ROOT, live)
case(contest, in)
det(contest, this)
amod(driving, onward)
punct(driving, -)
compound(contest, driving)
obl(live, contest)
advmod(overcame, where)
det(day, each)
nsubj(overcame, day)
acl:relcl(contest, overcame)
det(difficulty, a)
amod(difficulty, new)
obj(overcame, difficulty)
punct(gain, ,)
conj(overcame, gain)
det(truth, a)
amod(truth, new)
obj(gain, truth)
punct(banish, ,)
cc(banish, or)
conj(overcame, banish)
det(error, a)
amod(error, previous)
obj(banish, error)
punct(banish, '')
punct(proclaim, .)
nsubj(proclaim, he)
advmod(proclaim, openly)
parataxis(live, proclaim)
nmod:poss(pleasure, he)
obj(proclaim, pleasure)
mark(lecture, in)
acl(pleasure, lecture)
cc(write, and)
conj(lecture, write)
case(science, about)
obl(lecture, science)
punct(live, .)
case(year, in)
det(year, this)
amod(year, third)
obl(award, year)
case(university, at)
det(university, the)
nmod(year, university)
punct(award, ,)
nsubj:pass(award, Hans)
punct(award, ,)
case(1797, in)
obl(award, 1797)
punct(award, ,)
aux:pass(award, be)
root(ROOT, award)
det(take, the)
amod(take, first)
amod(take, important)
obj(award, take)
case(recognition, of)
nmod(take, recognition)
punct(medal, ,)
det(medal, a)
compound(medal, gold)
conj(take, medal)
case(essay, for)
nmod:poss(essay, he)
nmod(medal, essay)
case(limit, on)
punct(limit, ``)
nmod(essay, limit)
case(Poetry, of)
nmod(limit, Poetry)
cc(prose, and)
conj(Poetry, prose)
punct(limit, '')
punct(complete, .)
nsubj(complete, he)
parataxis(award, complete)
nmod:poss(training, he)
obj(complete, training)
case(pharmacy, in)
obl(complete, pharmacy)
advmod(take, also)
punct(complete, ,)
advcl(complete, take)
nmod:poss(degree, he)
obj(take, degree)
case(honor, with)
amod(honor, high)
obl(take, honor)
case(1797, in)
obl(take, 1797)
punct(award, ,)
cc(award, and)
case(1799, in)
obl(award, 1799)
aux:pass(award, be)
conj(complete, award)
det(degree, the)
obj(award, degree)
case(Doctor, of)
nmod(degree, Doctor)
case(Philosophy, of)
nmod(Doctor, Philosophy)
case(prize, along)
case(prize, with)
det(prize, a)
obl(award, prize)
case(essay, for)
det(essay, a)
nmod(prize, essay)
case(medicine, in)
nmod(essay, medicine)
punct(award, .)
nsubj(propose, he)
root(ROOT, propose)
det(theory, a)
amod(theory, fresh)
obj(propose, theory)
case(alkalis, of)
nmod(theory, alkalis)
nsubj:pass(accept, which)
advmod(accept, later)
aux:pass(accept, be)
acl:relcl(alkalis, accept)
case(practice, in)
amod(practice, chemical)
obl(accept, practice)
punct(propose, .)
obj(accept, Ferment)
case(activity, of)
amod(activity, scientific)
nmod(Ferment, activity)
nmod:poss(day, Hans)
case(Hans, 's)
compound(day, student)
nmod(Ferment, day)
cop(time, be)
case(time, at)
det(time, a)
conj(propose, time)
mark(ferment, when)
nsubj(ferment, Europe)
cop(ferment, be)
case(ferment, in)
det(ferment, a)
amod(ferment, new)
amod(ferment, intellectual)
advcl(time, ferment)
case(revolution, follow)
det(revolution, the)
nmod(ferment, revolution)
case(America, in)
nmod(revolution, America)
cc(France, and)
case(France, in)
obl(rise, France)
punct(Germany, ,)
conj(France, Germany)
cc(Italy, and)
conj(France, Italy)
aux(rise, be)
conj(ferment, rise)
case(nationalism, from)
amod(nationalism, divisive)
obl(rise, nationalism)
cc(wave, and)
det(wave, a)
amod(wave, strong)
nsubj(sweeping, wave)
case(awareness, of)
amod(awareness, intellectual)
nmod(wave, awareness)
aux(sweeping, be)
conj(rise, sweeping)
det(continent, the)
obj(sweeping, continent)
punct(propose, .)
det(century, the)
amod(century, new)
nsubj(open, century)
root(ROOT, open)
case(oerst, with)
obl(open, oerst)
acl(oerst, begin)
nmod:poss(career, he)
amod(career, professional)
obj(begin, career)
case(charge, in)
obl(begin, charge)
case(shop, of)
det(shop, a)
compound(shop, apothecary)
nmod(charge, shop)
case(Copenhagen, in)
nmod(shop, Copenhagen)
cc(lecturer, and)
case(lecturer, as)
conj(Copenhagen, lecturer)
case(university, at)
det(university, the)
nmod(lecturer, university)
punct(open, .)
nsubj:pass(stir, he)
aux:pass(stir, be)
root(ROOT, stir)
case(announcement, by)
det(announcement, the)
obl(stir, announcement)
case(discovery, of)
nmod:poss(discovery, Volta)
case(Volta, 's)
nmod(announcement, discovery)
case(electricity, of)
amod(electricity, chemical)
nmod(discovery, electricity)
cc(apply, and)
nsubj(apply, he)
advmod(apply, immediately)
conj(stir, apply)
det(pile, the)
amod(pile, voltaic)
obj(apply, pile)
case(experiment, to)
obl(apply, experiment)
case(acid, with)
nmod(experiment, acid)
cc(alkalis, and)
conj(acid, alkalis)
punct(stir, .)
det(year, the)
amod(year, follow)
obl:tmod(devote, year)
nsubj(devote, he)
root(ROOT, devote)
case(customary, to)
det(customary, the)
obl(devote, customary)
punct(devote, ``)
root(ROOT, Wanderjahr)
punct(Wanderjahr, '')
punct(Wanderjahr, ,)
acl(Wanderjahr, travel)
case(Germany, in)
obl(travel, Germany)
punct(France, ,)
conj(Germany, France)
punct(Netherlands, ,)
cc(Netherlands, and)
det(Netherlands, the)
conj(Germany, Netherlands)
punct(meet, ,)
conj(travel, meet)
det(philosopher, the)
obj(meet, philosopher)
appos(philosopher, Schelling)
punct(Fichte, ,)
conj(Schelling, Fichte)
punct(Tieck, ,)
cc(Tieck, and)
conj(Schelling, Tieck)
punct(Wanderjahr, .)
nsubj(meet, he)
advmod(meet, also)
root(ROOT, meet)
obj(meet, count)
flat(count, Rumford)
punct(bear, ()
acl(count, bear)
xcomp(bear, Benjamin)
flat(Benjamin, Thompson)
case(Woburn, in)
obl(bear, Woburn)
punct(Woburn, ,)
appos(Woburn, Mass.)
punct(Woburn, ))
nsubj(serve, who)
aux(serve, be)
advmod(serve, then)
acl:relcl(count, serve)
det(Elector, the)
obj(serve, Elector)
case(Bavaria, of)
nmod(Elector, Bavaria)
punct(physicist, ,)
cc(physicist, and)
det(physicist, the)
conj(Elector, physicist)
flat(physicist, ritter)
punct(meet, ;)
punct(meet, ;)
nsubj(contact, these)
cop(contact, be)
nmod:poss(contact, oerst)
case(oerst, 's)
amod(contact, main)
parataxis(meet, contact)
case(science, in)
nmod(contact, science)
punct(meet, .)
case(Gottingen, from)
obl(write, Gottingen)
punct(1801, ()
appos(Gottingen, 1801)
punct(1801, ))
advmod(stay, where)
nsubj(stay, he)
acl:relcl(Gottingen, stay)
case(day, for)
nummod(day, 10)
obl(stay, day)
punct(write, ,)
nsubj(write, he)
root(ROOT, write)
punct(write, ,)
punct(write, ``)
det(question, the)
amod(question, first)
nsubj(ask, question)
root(ROOT, ask)
advmod(ask, everywhere)
ccomp(ask, be)
case(galvanism, about)
obl(ask, galvanism)
punct(ask, .)
mark(curious, as)
nsubj(curious, everybody)
cop(curious, be)
advcl(have, curious)
mark(see, to)
xcomp(curious, see)
det(battery, the)
obj(see, battery)
case(tube, of)
compound(tube, glass)
nmod(battery, tube)
nsubj(invent, I)
aux(invent, have)
acl:relcl(tube, invent)
punct(have, ,)
nsubj(have, I)
aux(have, have)
root(ROOT, have)
det:predet(one, quite)
det(one, a)
amod(one, small)
obj(have, one)
acl(one, make)
advmod(make, here)
case(tube, of)
nummod(tube, four)
compound(tube, glass)
obl(make, tube)
punct(use, ()
case(Copenhagen, in)
nmod(tube, Copenhagen)
nsubj(use, I)
acl:relcl(Copenhagen, use)
obj(use, 30)
punct(use, ))
cc(intend, and)
conj(use, intend)
mark(carry, to)
xcomp(intend, carry)
obj(carry, it)
case(I, with)
obl(carry, I)
punct(join, '')
punct(join, .)
nsubj(join, oerst)
parataxis(have, join)
obj(join, ritter)
case(Jena, at)
obl(join, Jena)
cc(stay, and)
conj(join, stay)
case(he, with)
obl(stay, he)
case(week, for)
nummod(week, 3)
obl(stay, week)
punct(stay, ,)
advcl(stay, continue)
nmod:poss(correspondence, they)
obj(continue, correspondence)
mark(leave, after)
nsubj(leave, he)
advcl(continue, leave)
punct(have, .)
case(ritter, with)
obl(expose, ritter)
nsubj:pass(expose, he)
aux:pass(expose, be)
root(ROOT, expose)
case(profusion, to)
det(profusion, the)
amod(profusion, fantastic)
obl(expose, profusion)
case(idea, of)
nmod(profusion, idea)
nsubj(stor, that)
acl:relcl(idea, stor)
case(mind, through)
nmod:poss(host, he)
nmod:poss(mind, host)
case(host, 's)
amod(mind, fertile)
cc(disorganize, but)
conj(fertile, disorganize)
obl(stor, mind)
punct(expose, .)
nsubj(remodel, oerst)
root(ROOT, remodel)
nmod:poss(note, ritter)
case(ritter, 's)
obj(remodel, note)
case(essay, into)
det(essay, a)
obl(remodel, essay)
case(french, in)
nmod(essay, french)
nsubj:pass(submit, which)
aux:pass(submit, be)
acl:relcl(essay, submit)
case(France, to)
det(France, the)
compound(France, Institut)
compound(France, De)
obl(submit, France)
case(prize, for)
nmod:poss(prize, its)
amod(prize, annual)
obl(submit, prize)
case(franc, of)
nummod(franc, 3,000)
nmod(prize, franc)
punct(remodel, .)
det(discovery, the)
compound(discovery, sound)
nsubj:pass(dilut, discovery)
case(genius, of)
det(genius, this)
amod(genius, quixotic)
nmod(discovery, genius)
aux:pass(dilut, be)
advmod(dilut, so)
root(ROOT, dilut)
case(those, by)
obl(dilut, those)
case(fantasy, of)
nmod(those, fantasy)
obj(award, that)
det(prize, the)
nsubj:pass(award, prize)
aux:pass(award, be)
advmod(award, never)
acl:relcl(those, award)
case(he, to)
obl(award, he)
punct(dilut, .)
case(May, in)
obl(write, May)
punct(write, ,)
nummod(May, 1803)
punct(write, ,)
nsubj(write, ritter)
punct(write, ,)
case(flight, in)
det(flight, another)
obl(write, flight)
case(fancy, of)
nmod(flight, fancy)
punct(write, ,)
root(ROOT, write)
case(oerst, to)
obl(write, oerst)
det(letter, a)
obj(write, letter)
nsubj(contain, that)
acl:relcl(letter, contain)
det(prophecy, a)
amod(prophecy, remarkable)
obj(contain, prophecy)
punct(write, .)
nsubj(relate, he)
root(ROOT, relate)
obj(relate, event)
case(earth, on)
nmod(event, earth)
case(phenomena, to)
amod(phenomena, periodic)
amod(phenomena, celestial)
obl(relate, phenomena)
cc(indicate, and)
conj(relate, indicate)
mark(coincide, that)
det(year, the)
nsubj(coincide, year)
case(inclination, of)
amod(inclination, maximum)
nmod(year, inclination)
case(ecliptic, of)
det(ecliptic, the)
nmod(inclination, ecliptic)
ccomp(indicate, coincide)
case(year, with)
det(year, the)
obl(coincide, year)
case(discovery, of)
amod(discovery, important)
amod(discovery, electrical)
nmod(year, discovery)
punct(relate, .)
advmod(correspond, thus)
punct(correspond, ,)
nsubj(correspond, 1745)
root(ROOT, correspond)
case(invention, to)
det(invention, the)
obl(correspond, invention)
case(jar, of)
det(jar, the)
punct(jar, ``)
compound(jar, Leiden)
punct(Leiden, '')
nmod(invention, jar)
case(Kleist, by)
nmod(jar, Kleist)
punct(Kleist, ,)
nummod(Kleist, 1764)
nsubj(produce, that)
case(electrophorus, of)
det(electrophorus, the)
nmod(that, electrophorus)
case(Wilcke, by)
nmod(electrophorus, Wilcke)
punct(Wilcke, ,)
appos(Wilcke, 1782)
acl:relcl(invention, produce)
det(condenser, the)
obj(produce, condenser)
case(Volta, of)
nmod(condenser, Volta)
punct(pile, ,)
cc(pile, and)
nummod(pile, 1801)
det(pile, the)
amod(pile, voltaic)
conj(condenser, pile)
punct(correspond, .)
nsubj(proceed, ritter)
root(ROOT, proceed)
punct(proceed, ,)
punct(proceed, ``)
nsubj(emerge, you)
advmod(emerge, now)
root(ROOT, emerge)
case(epoch, into)
det(epoch, a)
amod(epoch, new)
obl(emerge, epoch)
case(which, in)
obl(have, which)
advmod(have, late)
case(year, in)
det(year, the)
obl(late, year)
nummod(year, 1819)
cc(1820, or)
conj(1819, 1820)
punct(have, ,)
nsubj(have, you)
aux(have, will)
parataxis(emerge, have)
mark(reckon, to)
xcomp(have, reckon)
punct(emerge, .)
nsubj(witness, this)
nsubj(witness, we)
aux(witness, might)
advmod(witness, well)
parataxis(die, witness)
punct(witness, '')
punct(die, .)
nsubj(die, ritter)
root(ROOT, die)
case(1810, in)
obl(die, 1810)
cc(live, and)
nsubj(live, oerst)
advmod(only, not)
advmod(live, only)
conj(die, live)
mark(see, to)
advcl(live, see)
det(event, the)
obj(see, event)
xcomp(see, occur)
cc(author, but)
cop(author, be)
det(author, the)
conj(occur, author)
case(it, of)
nmod(author, it)
punct(die, .)
case(1803, in)
obl(return, 1803)
nsubj(return, oerst)
root(ROOT, return)
case(Copenhagen, to)
obl(return, Copenhagen)
cc(apply, and)
conj(return, apply)
case(chair, for)
det(university, the)
nmod:poss(chair, university)
case(university, 's)
obl(apply, chair)
case(physics, in)
nmod(chair, physics)
cc(reject, but)
aux:pass(reject, be)
conj(return, reject)
mark(consider, because)
nsubj:pass(consider, he)
aux:pass(consider, be)
advmod(consider, probably)
advcl(reject, consider)
advmod(philosopher, more)
det(philosopher, a)
xcomp(consider, philosopher)
case(physicist, than)
det(physicist, a)
nmod(philosopher, physicist)
punct(return, .)
advmod(continue, however)
punct(continue, ,)
nsubj(continue, he)
root(ROOT, continue)
xcomp(continue, experiment)
cc(lecture, and)
conj(experiment, lecture)
punct(publish, ,)
conj(experiment, publish)
det(result, the)
obj(publish, result)
case(experiment, of)
nmod:poss(experiment, he)
nmod(result, experiment)
case(periodical, in)
amod(periodical, german)
cc(danish, and)
conj(german, danish)
nmod(experiment, periodical)
punct(continue, .)
case(1806, in)
obl(realize, 1806)
nmod:poss(ambition, he)
nsubj:pass(realize, ambition)
aux:pass(realize, be)
root(ROOT, realize)
cc(become, and)
nsubj(become, he)
conj(realize, become)
xcomp(become, professor)
case(physics, of)
nmod(professor, physics)
case(University, at)
det(University, the)
compound(University, Copenhagen)
nmod(professor, University)
punct(professor, ,)
mark(realize, though)
advmod(realize, not)
advcl(become, realize)
amod(professorship, full)
obj(realize, professorship)
punct(ordinarius, ()
appos(professorship, ordinarius)
punct(ordinarius, ))
case(1817, until)
obl(realize, 1817)
punct(professorship, .)
case(attendance, during)
nmod:poss(attendance, oerst)
case(oerst, 's)
obl(realize, attendance)
case(university, at)
det(university, the)
nmod(attendance, university)
punct(equip, ,)
nsubj:pass(equip, it)
aux:pass(equip, be)
advmod(equip, poorly)
acl:relcl(attendance, equip)
case(apparatus, with)
amod(apparatus, physical)
obl(equip, apparatus)
mark(experiment, for)
acl(apparatus, experiment)
case(science, in)
det(science, the)
obl(experiment, science)
punct(realize, .)
nsubj(fortunate, he)
cop(fortunate, be)
punct(fortunate, ,)
advmod(fortunate, however)
punct(fortunate, ,)
root(ROOT, fortunate)
case(contact, in)
nmod:poss(contact, he)
obl(fortunate, contact)
case(Prof., with)
nmod(contact, Prof.)
flat(Prof., J.)
flat(Prof., G.)
flat(Prof., L.)
flat(Prof., Manthey)
punct(1769, ()
nmod:npmod(Prof., 1769)
case(1842, -)
nmod(1769, 1842)
punct(1769, ))
punct(teacher, ,)
appos(Prof., teacher)
case(chemistry, of)
nmod(teacher, chemistry)
punct(teacher, ,)
nsubj(proprietor, who)
punct(proprietor, ,)
case(addition, in)
obl(proprietor, addition)
case(chair, to)
nmod:poss(chair, he)
amod(chair, academic)
nmod(addition, chair)
punct(proprietor, ,)
cop(proprietor, be)
advmod(proprietor, also)
acl:relcl(teacher, proprietor)
case(pharmacy, of)
det(pharmacy, the)
punct(pharmacy, ``)
compound(pharmacy, Lion)
nmod(proprietor, pharmacy)
punct(pharmacy, '')
case(Copenhagen, in)
nmod(pharmacy, Copenhagen)
advmod(assist, where)
nsubj(assist, oerst)
acl:relcl(pharmacy, assist)
obj(assist, he)
punct(maintain, .)
nsubj(maintain, Manthey)
parataxis(fortunate, maintain)
det(collection, a)
amod(collection, valuable)
obj(maintain, collection)
case(apparatus, of)
amod(apparatus, physical)
cc(chemical, and)
conj(physical, chemical)
nmod(collection, apparatus)
nsubj(disposal, which)
cop(disposal, be)
case(disposal, at)
nmod:poss(disposal, oerst)
case(oerst, 's)
acl:relcl(apparatus, disposal)
case(graduation, during)
cc(graduation, and)
case(graduation, after)
nmod:poss(graduation, he)
obl(disposal, graduation)
punct(fortunate, .)
case(1800, in)
obl(go, 1800)
punct(go, ,)
nsubj(go, Manthey)
root(ROOT, go)
advmod(go, abroad)
cc(appoint, and)
nsubj:pass(appoint, oerst)
aux:pass(appoint, be)
conj(go, appoint)
xcomp(appoint, manager)
case(pharmacy, of)
det(pharmacy, the)
compound(pharmacy, Lion)
nmod(manager, pharmacy)
punct(go, .)
case(February, in)
obl(manage, February)
nummod(February, 1801)
punct(manage, ,)
nsubj(manage, oerst)
aux(manage, do)
root(ROOT, manage)
mark(experiment, to)
xcomp(manage, experiment)
case(apparatus, with)
amod(apparatus, physical)
obl(experiment, apparatus)
cc(report, and)
conj(manage, report)
obj(report, experiment)
acl(experiment, make)
case(battery, with)
det(battery, a)
amod(battery, voltaic)
obl(make, battery)
case(plate, of)
nummod(plate, 600)
nmod(battery, plate)
case(zinc, of)
nmod(plate, zinc)
cc(silver, and)
conj(zinc, silver)
cc(experiment, and)
case(experiment, of)
amod(experiment, later)
conj(plate, experiment)
case(battery, with)
det(battery, a)
nmod(experiment, battery)
case(plate, of)
nummod(plate, 60)
nmod(battery, plate)
case(zinc, of)
nmod(plate, zinc)
cc(lead, and)
conj(zinc, lead)
punct(manage, .)
case(year, in)
det(year, the)
amod(year, follow)
obl(discover, year)
punct(discover, ,)
nummod(year, 1803)
punct(discover, ,)
nsubj(discover, oerst)
punct(oerst, ,)
advmod(oerst, simultaneously)
case(Davy, with)
obl(simultaneously, Davy)
punct(discover, ,)
root(ROOT, discover)
mark(increase, that)
nsubj(increase, acid)
ccomp(discover, increase)
det(strength, the)
obj(increase, strength)
case(battery, of)
det(battery, a)
amod(battery, voltaic)
nmod(strength, battery)
advmod(increase, more)
mark(salt, than)
aux(salt, do)
obl(more, salt)
punct(discover, .)
advcl(load, eager)
mark(be, as)
nsubj(be, he)
advcl(eager, be)
mark(pursue, to)
xcomp(be, pursue)
det(line, this)
amod(line, promise)
obj(pursue, line)
punct(load, ,)
nsubj:pass(load, he)
aux:pass(load, be)
advmod(load, so)
root(ROOT, load)
compound:prt(load, down)
case(management, with)
det(management, the)
obl(load, management)
case(pharmacy, of)
det(pharmacy, the)
nmod(management, pharmacy)
cc(lecture, and)
conj(pharmacy, lecture)
case(faculty, in)
det(faculty, the)
amod(faculty, medical)
cc(pharmaceutical, and)
conj(medical, pharmaceutical)
nmod(management, faculty)
case(university, at)
det(university, the)
nmod(faculty, university)
mark(devote, that)
nsubj(devote, he)
aux(devote, could)
acl(university, devote)
advmod(afternoon, only)
compound(afternoon, Sunday)
obj(devote, afternoon)
mark(galvanizing, to)
punct(galvanizing, ``)
obl(devote, galvanizing)
punct(galvanizing, '')
punct(assume, .)
nsubj(assume, he)
parataxis(devote, assume)
nmod:poss(career, he)
amod(career, academic)
obj(assume, career)
case(intensity, with)
det(intensity, the)
amod(intensity, same)
nmod(career, intensity)
cc(thoroughness, and)
conj(intensity, thoroughness)
nsubj(mark, that)
aux(mark, have)
acl:relcl(intensity, mark)
det(step, every)
obj(mark, step)
case(rise, in)
nmod:poss(rise, he)
obl(mark, rise)
case(boyhood, from)
nmod(rise, boyhood)
punct(eager, .)
det(university, the)
nsubj(one, university)
cop(one, be)
det(one, the)
amod(one, only)
root(ROOT, one)
case(Denmark, in)
nmod(one, Denmark)
cc(represent, and)
det(status, the)
nsubj(represent, status)
case(professor, of)
nmod(status, professor)
conj(one, represent)
det(level, the)
amod(level, upper)
amod(level, social)
obj(represent, level)
punct(one, .)
nmod:poss(interest, he)
amod(interest, broad)
nsubj(open, interest)
case(movement, in)
amod(movement, literary)
punct(political, ,)
conj(literary, political)
punct(philosophical, ,)
cc(philosophical, and)
conj(literary, philosophical)
nmod(interest, movement)
root(ROOT, open)
amod(door, many)
obj(open, door)
case(he, to)
obl(open, he)
punct(open, .)
nmod:poss(friend, he)
nsubj(numerous, friend)
cop(numerous, be)
root(ROOT, numerous)
cc(strong, and)
nmod:poss(tie, they)
nsubj(strong, tie)
case(he, to)
nmod(tie, he)
cop(strong, be)
conj(numerous, strong)
punct(numerous, .)
det(year, the)
obl:tmod(see, year)
nummod(year, 1812)
cc(1813, and)
conj(1812, 1813)
root(ROOT, see)
obj(see, he)
case(Germany, in)
obl(see, Germany)
cc(France, and)
conj(Germany, France)
advmod(see, again)
punct(seek, ,)
cc(seek, but)
case(visit, on)
det(visit, this)
obl(seek, visit)
case(Berlin, to)
nmod(visit, Berlin)
nsubj(seek, he)
aux(seek, do)
advmod(seek, not)
conj(see, seek)
compound:prt(seek, out)
det(philosopher, the)
obj(seek, philosopher)
mark(have, as)
nsubj(have, he)
advcl(seek, have)
case(journey, on)
nmod:poss(journey, he)
amod(journey, first)
obl(have, journey)
punct(see, .)
case(Berlin, in)
obl(publish, Berlin)
nsubj(publish, he)
root(ROOT, publish)
nmod:poss(view, he)
obj(publish, view)
case(law, of)
det(law, the)
amod(law, chemical)
nmod(view, law)
case(nature, of)
nmod(law, nature)
case(german, in)
nmod(law, german)
cc(issue, and)
nsubj:pass(issue, this)
aux:pass(issue, be)
conj(publish, issue)
case(translation, in)
amod(translation, french)
obl(issue, translation)
punct(Paris, ()
appos(translation, Paris)
punct(Paris, ,)
nummod(Paris, 1813)
punct(Paris, ))
case(title, under)
det(title, the)
obl(issue, title)
appos(title, recherch)
compound(l'identite, Sur)
compound(force, l'identite)
compound(force, Des)
nsubj(chimique, force)
root(ROOT, chimique)
amod(electrique, et)
obj(chimique, electrique)
punct(electrique, ,)
det(work, a)
appos(electrique, work)
acl(work, hold)
case(esteem, in)
advmod(high, very)
amod(esteem, high)
obl(hold, esteem)
case(generation, by)
det(generation, the)
amod(generation, new)
obl(hold, generation)
case(chemist, of)
compound(chemist, research)
nmod(generation, chemist)
punct(chimique, .)
nmod:poss(interest, he)
nsubj:pass(indicate, interest)
mark(find, in)
acl(interest, find)
det(relationship, a)
obj(find, relationship)
case(electricity, between)
amod(electricity, voltaic)
nmod(relationship, electricity)
cc(magnetism, and)
conj(electricity, magnetism)
cop(here, be)
advmod(indicate, here)
advmod(indicate, first)
root(ROOT, indicate)
punct(indicate, .)
obl:tmod(entitle, Chapter)
nummod(Chapter, 8)
punct(entitle, ,)
aux:pass(entitle, be)
root(ROOT, entitle)
punct(entitle, ``)
case(Magnetism, on)
obl(include, Magnetism)
punct(Magnetism, '')
cc(include, and)
advmod(include, in)
nsubj:pass(include, it)
aux:pass(include, be)
root(ROOT, include)
amod(remark, such)
obj(include, remark)
obl(include, as)
punct(include, ,)
punct(include, ``)
nsubj:pass(tempte, one)
aux(tempte, have)
advmod(tempte, always)
aux:pass(tempte, be)
root(ROOT, tempte)
mark(compare, to)
xcomp(tempte, compare)
det(force, the)
amod(force, magnetic)
obj(compare, force)
case(force, with)
det(force, the)
amod(force, electrical)
obl(compare, force)
punct(tempte, .)
det(resemblance, the)
amod(resemblance, great)
nsubj(bring, resemblance)
case(attraction, between)
amod(attraction, electrical)
cc(magnetic, and)
conj(electrical, magnetic)
nmod(resemblance, attraction)
cc(repulsion, and)
conj(attraction, repulsion)
cc(similarity, and)
det(similarity, the)
conj(resemblance, similarity)
case(law, of)
nmod:poss(law, they)
nmod(similarity, law)
advmod(bring, necessarily)
aux(bring, would)
root(ROOT, bring)
case(comparison, about)
det(comparison, this)
obl(bring, comparison)
punct(bring, .)
nsubj(true, it)
cop(true, be)
root(ROOT, true)
punct(true, ,)
mark(find, that)
nsubj:pass(find, nothing)
aux(find, have)
aux:pass(find, be)
csubj(true, find)
xcomp(find, comparable)
case(electricity, with)
obl(comparable, electricity)
case(communication, by)
obl(find, communication)
punct(true, ;)
punct(true, ;)
cc(have, but)
det(phenomena, the)
nsubj(have, phenomena)
acl(phenomena, observe)
conj(true, have)
det:predet(degree, such)
det(degree, a)
obj(have, degree)
case(analogy, of)
nmod(degree, analogy)
case(those, to)
nmod(degree, those)
case(distribution, depend)
case(distribution, on)
amod(distribution, electrical)
nmod(those, distribution)
mark(find, that)
nsubj(find, one)
aux(find, could)
advmod(find, not)
acl(those, find)
det(difference, the)
amod(difference, slightest)
obj(find, difference)
punct(true, .)
det(form, the)
nsubj(form, form)
case(activity, of)
amod(activity, galvanic)
nmod(form, activity)
cop(form, be)
advmod(form, halfway)
case(form, between)
det(form, the)
amod(form, magnetic)
root(ROOT, form)
cc(form, and)
det(form, the)
amod(form, electrical)
conj(form, form)
punct(form, .)
advmod(latent, there)
punct(latent, ,)
nsubj(latent, force)
cop(latent, be)
advmod(latent, more)
root(ROOT, latent)
case(electricity, than)
case(electricity, in)
obl(latent, electricity)
punct(magnetism, ,)
cc(magnetism, and)
conj(latent, less)
fixed(less, than)
case(magnetism, in)
obl(less, magnetism)
punct(latent, .)
cc(satisfied, but)
case(question, in)
det:predet(question, such)
det(question, a)
amod(question, important)
obl(satisfied, question)
punct(satisfied, ,)
nsubj(satisfied, we)
aux(satisfied, would)
cop(satisfied, be)
root(ROOT, satisfied)
mark(be, if)
det(judgment, the)
nsubj(be, judgment)
advcl(satisfied, be)
mark(difficulty, that)
det(objection, the)
amod(objection, principal)
nsubj(difficulty, objection)
case(identity, to)
det(identity, the)
nmod(objection, identity)
case(force, of)
nmod(identity, force)
nsubj(produce, which)
acl:relcl(identity, produce)
obj(produce, electricity)
cc(magnetism, and)
conj(electricity, magnetism)
cop(difficulty, be)
advmod(difficulty, only)
det(difficulty, a)
ccomp(be, difficulty)
punct(thing, ,)
cc(thing, and)
advmod(thing, not)
det(thing, a)
conj(difficulty, thing)
nsubj(contrary, which)
cop(contrary, be)
acl:relcl(thing, contrary)
case(it, to)
obl(contrary, it)
punct(satisfied, .)
nsubj(add, one)
aux(add, could)
advmod(add, also)
root(ROOT, add)
case(analogy, to)
det(analogy, these)
obl(add, analogy)
obj(lose, that)
nsubj(lose, steel)
acl:relcl(analogy, lose)
nmod:poss(magnetism, its)
obj(lose, magnetism)
case(heat, by)
obl(lose, heat)
punct(analogy, ,)
nsubj(prove, which)
acl:relcl(analogy, prove)
mark(become, that)
nsubj(become, steel)
ccomp(prove, become)
det(conductor, a)
amod(conductor, better)
xcomp(become, conductor)
case(rise, through)
det(rise, a)
nmod(conductor, rise)
case(temperature, in)
nmod(rise, temperature)
punct(conductor, ,)
advmod(do, just)
mark(do, as)
amod(body, electrical)
nsubj(do, body)
advcl(conductor, do)
punct(add, .)
nsubj:pass(find, it)
aux:pass(find, be)
advmod(find, also)
root(ROOT, find)
mark(exist, that)
nsubj(exist, magnetism)
ccomp(find, exist)
case(body, in)
det(body, all)
obl(exist, body)
case(nature, of)
nmod(body, nature)
punct(exist, ,)
mark(prove, as)
advcl(exist, prove)
case(Bruckmann, by)
obl(prove, Bruckmann)
cc(Coulomb, and)
conj(Bruckmann, Coulomb)
punct(find, .)
case(that, by)
obl(feel, that)
punct(feel, ,)
nsubj(feel, one)
root(ROOT, feel)
mark(general, that)
amod(force, magnetic)
nsubj(general, force)
cop(general, be)
advmod(general, as)
ccomp(feel, general)
case(force, as)
amod(force, electrical)
obl(general, force)
punct(feel, .)
det(attempt, a)
nsubj:pass(make, attempt)
aux(make, should)
aux:pass(make, be)
root(ROOT, make)
mark(see, to)
xcomp(make, see)
mark(have, if)
nsubj(have, electricity)
punct(electricity, ,)
case(stage, in)
nmod:poss(stage, its)
advmod(latent, most)
amod(stage, latent)
obl(have, stage)
punct(have, ,)
advcl(see, have)
det(action, any)
obj(have, action)
case(magnet, on)
det(magnet, the)
nmod(action, magnet)
case(such, as)
nmod(magnet, such)
punct(have, '')
punct(make, .)
nmod:poss(plan, he)
nsubj:pass(chart, plan)
cc(intent, and)
conj(plan, intent)
aux:pass(chart, be)
advmod(chart, clearly)
conj(make, chart)
punct(make, .)
nsubj(return, oerst)
root(ROOT, return)
case(1814, in)
obl(return, 1814)
cc(resume, and)
conj(return, resume)
det(part, a)
amod(part, active)
obj(resume, part)
case(university, in)
nmod(part, university)
cc(discussion, and)
amod(discussion, political)
conj(university, discussion)
punct(return, .)
case(debate, in)
nummod(debate, one)
obl(support, debate)
nsubj(support, he)
root(ROOT, support)
det(freedom, the)
obj(support, freedom)
case(judgment, of)
nmod(freedom, judgment)
case(dogma, as)
fixed(as, oppose)
fixed(as, to)
obl(support, dogma)
punct(hold, ,)
case(another, in)
obl(hold, another)
nsubj(hold, he)
advcl(support, hold)
mark(act, that)
det(practice, the)
nsubj(act, practice)
case(science, of)
nmod(practice, science)
cop(act, be)
case(fact, in)
obl(act, fact)
det(act, a)
ccomp(hold, act)
case(worship, of)
amod(worship, religious)
nmod(act, worship)
punct(support, .)
nsubj(continue, he)
root(ROOT, continue)
case(lecturer, as)
det(lecturer, a)
amod(lecturer, popular)
obl(continue, lecturer)
punct(continue, .)
nsubj(devise, he)
root(ROOT, devise)
det(fuse, a)
compound(fuse, detonate)
obj(devise, fuse)
case(which, in)
obl(cause, which)
det(wire, a)
amod(wire, short)
nsubj:pass(cause, wire)
aux:pass(cause, be)
acl:relcl(fuse, cause)
mark(glow, to)
xcomp(cause, glow)
case(current, by)
det(current, a)
amod(current, electric)
obl(glow, current)
punct(devise, .)
case(1819, in)
obl(undertake, 1819)
case(command, under)
compound(command, royal)
nmod(1819, command)
nsubj(undertake, he)
root(ROOT, undertake)
det(expedition, a)
advmod(successful, very)
amod(expedition, successful)
amod(expedition, geological)
obj(undertake, expedition)
case(Bornholm, to)
nmod(expedition, Bornholm)
punct(Bornholm, ,)
appos(expedition, one)
case(island, of)
det(island, the)
amod(island, danish)
nmod(one, island)
punct(undertake, ,)
cop(one, be)
advcl(undertake, one)
case(scientist, of)
nummod(scientist, three)
nmod(one, scientist)
case(expedition, in)
det(expedition, the)
nmod(scientist, expedition)
punct(undertake, .)
nsubj(be, it)
root(ROOT, be)
case(assistance, with)
det(assistance, the)
obl(be, assistance)
case(one, of)
nmod(assistance, one)
case(member, of)
det(member, the)
nmod(one, member)
case(expedition, of)
det(expedition, this)
nmod(member, expedition)
punct(Lauritz, ,)
appos(assistance, Lauritz)
flat(Lauritz, Esmarch)
punct(Lauritz, ,)
mark(succeed, that)
nsubj(succeed, oerst)
acl:relcl(Lauritz, succeed)
mark(produce, in)
advcl(succeed, produce)
obj(produce, light)
mark(create, by)
advcl(produce, create)
det(discharge, a)
amod(discharge, electric)
obj(create, discharge)
case(vapor, in)
compound(vapor, mercury)
nmod(discharge, vapor)
case(which, through)
obl(make, which)
det(current, a)
amod(current, electric)
nsubj:pass(make, current)
aux:pass(make, be)
acl:relcl(discharge, make)
mark(flow, to)
xcomp(make, flow)
punct(develop, .)
advmod(develop, together)
nsubj(develop, they)
advmod(develop, also)
parataxis(be, develop)
det(form, a)
amod(form, new)
obj(develop, form)
case(cell, of)
amod(cell, voltaic)
nmod(form, cell)
case(which, in)
obl(replace, which)
det(trough, the)
compound(trough, wooden)
nsubj:pass(replace, trough)
aux:pass(replace, be)
acl:relcl(form, replace)
case(one, by)
obl(replace, one)
case(copper, of)
nmod(one, copper)
punct(replace, ,)
advmod(replace, there)
mark(produce, by)
advcl(replace, produce)
amod(current, stronger)
obj(produce, current)
punct(develop, .)
nsubj(those, Esmarch)
cop(those, be)
case(those, among)
root(ROOT, those)
nsubj(witness, who)
acl:relcl(those, witness)
nmod:poss(demonstration, oerst)
case(oerst, 's)
amod(demonstration, first)
obj(witness, demonstration)
case(discovery, of)
nmod:poss(discovery, he)
nmod(demonstration, discovery)
punct(Discovery, .)
appos(those, Discovery)
case(electromagnetism, of)
nmod(Discovery, electromagnetism)
det(association, the)
nsubj:pass(recognize, association)
case(force, between)
nmod(association, electric)
punct(electrostatic, ()
cc:preconj(electrostatic, both)
amod(force, electrostatic)
cc(voltaic, and)
conj(electrostatic, voltaic)
punct(electrostatic, ))
nmod(association, force)
cc(force, and)
amod(force, magnetic)
conj(force, force)
aux(recognize, have)
aux:pass(recognize, be)
acl:relcl(Discovery, recognize)
case(investigator, by)
obl(recognize, investigator)
case(decade, for)
amod(decade, many)
obl(recognize, decade)
punct(Discovery, .)
amod(literature, electrical)
nsubj(contain, literature)
root(ROOT, contain)
amod(reference, numerous)
obj(contain, reference)
case(lightning, to)
nmod(reference, lightning)
nsubj(magnetize, that)
aux(magnetize, have)
acl:relcl(reference, magnetize)
obj(magnetize, iron)
cc(alter, and)
aux(alter, have)
conj(magnetize, alter)
det(polarity, the)
obj(alter, polarity)
case(needle, of)
compound(needle, compass)
nmod(polarity, needle)
punct(contain, .)
case(Beccaria, in)
det(Beccaria, the)
amod(1700, late)
nmod:poss(Beccaria, 1700)
case(1700, 's)
obl(magnetize, Beccaria)
cc(Van, and)
conj(Beccaria, Van)
flat(Van, Marum)
punct(Beccaria, ,)
case(other, among)
nmod(Beccaria, other)
punct(magnetize, ,)
aux(magnetize, have)
root(ROOT, magnetize)
obj(magnetize, iron)
mark(send, by)
advcl(magnetize, send)
det(charge, a)
amod(charge, electrostatic)
obj(send, charge)
case(it, through)
obl(send, it)
punct(magnetize, .)
nsubj(stumble, Beccaria)
aux(stumble, have)
advmod(stumble, almost)
root(ROOT, stumble)
case(lead, on)
det(lead, a)
obl(stumble, lead)
case(relationship, to)
det(relationship, the)
obl(stumble, relationship)
case(electricity, between)
nmod(relationship, electricity)
cc(magnetism, and)
conj(electricity, magnetism)
mark(send, when)
det(discharge, a)
nsubj:pass(send, discharge)
case(jar, from)
det(jar, a)
compound(jar, Leyden)
nmod(discharge, jar)
aux:pass(send, be)
advcl(stumble, send)
advmod(send, transversally)
case(piece, through)
det(piece, a)
obl(send, piece)
case(steel, of)
compound(steel, watch)
punct(spring, -)
compound(steel, spring)
nmod(piece, steel)
acl(piece, make)
nmod:poss(end, its)
obj(make, end)
xcomp(make, magnetic)
punct(stumble, .)
det(effect, the)
amod(effect, result)
amod(effect, magnetic)
nsubj(prove, effect)
root(ROOT, prove)
xcomp(prove, stronger)
mark(make, than)
mark(make, when)
det(discharge, the)
nsubj:pass(make, discharge)
aux:pass(make, be)
advcl(stronger, make)
xcomp(make, lengthwise)
punct(prove, .)
det(experiment, the)
nsubj:pass(note, experiment)
case(Romagnosi, of)
nmod(experiment, Romagnosi)
cc(other, and)
conj(Romagnosi, other)
aux(note, have)
advmod(note, already)
aux:pass(note, be)
root(ROOT, note)
cc(determine, but)
det(one, no)
nsubj(determine, one)
aux(determine, have)
conj(note, determine)
det(relationship, the)
compound(relationship, cause)
punct(cause, -)
cc(effect, and)
punct(effect, -)
conj(cause, effect)
obj(determine, relationship)
case(force, between)
det(force, these)
nummod(force, two)
amod(force, primary)
nmod(relationship, force)
punct(note, .)
nmod:poss(experiment, oerst)
case(oerst, 's)
amod(experiment, own)
amod(experiment, earlier)
nsubj(unimpressive, experiment)
cop(unimpressive, be)
root(ROOT, unimpressive)
punct(unimpressive, ,)
advmod(have, possibly)
mark(have, because)
nsubj(have, he)
advcl(unimpressive, have)
punct(have, ,)
case(experimenter, like)
amod(experimenter, other)
obl(have, experimenter)
punct(lay, ,)
conj(unimpressive, lay)
det(wire, the)
xcomp(lay, conduct)
obj(conduct, wire)
case(needle, across)
det(needle, the)
compound(needle, compass)
obl(conduct, needle)
case(parallel, instead)
fixed(instead, of)
obl(lay, parallel)
case(it, with)
nmod(parallel, it)
punct(unimpressive, .)
det(sequence, the)
nsubj(remain, sequence)
case(event, of)
nmod(sequence, event)
acl(event, lead)
case(discovery, to)
nmod:poss(discovery, he)
amod(discovery, important)
obl(lead, discovery)
advmod(remain, still)
root(ROOT, remain)
xcomp(remain, ambiguous)
cc(seem, but)
nsubj(seem, it)
conj(remain, seem)
mark(occur, that)
nsubj(occur, one)
case(student, of)
det(student, the)
amod(student, advanced)
nmod(one, student)
case(university, at)
det(university, the)
nmod(student, university)
xcomp(seem, related)
mark(occur, that)
det(event, the)
amod(event, first)
amod(event, direct)
nsubj(occur, event)
nsubj(lead, that)
acl:relcl(event, lead)
case(publication, to)
det(publication, the)
obl(lead, publication)
case(discovery, of)
nmod:poss(discovery, oerst)
case(oerst, 's)
nmod(publication, discovery)
ccomp(seem, occur)
case(lecture, during)
det(lecture, a)
amod(lecture, private)
obl(occur, lecture)
acl(lecture, make)
case(group, before)
det(group, a)
obl(make, group)
case(student, of)
amod(student, other)
amod(student, advanced)
nmod(group, student)
case(spring, in)
det(spring, the)
obl(make, spring)
case(1820, of)
nmod(spring, 1820)
punct(ambiguous, .)
case(lecture, at)
det(lecture, this)
obl(happen, lecture)
nsubj(happen, oerst)
root(ROOT, happen)
mark(place, to)
xcomp(happen, place)
det(wire, the)
compound(wire, conduct)
obj(place, wire)
advmod(place, over)
cc(parallel, and)
conj(over, parallel)
case(needle, to)
det(needle, a)
amod(needle, magnetic)
obl(place, needle)
punct(happen, .)
root(ROOT, know)
advmod(know, specifically)
obj(do, what)
det(additive, the)
amod(additive, many)
compound(additive, feed)
nsubj(do, additive)
aux(do, can)
ccomp(know, do)
cc(make, and)
advmod(make, how)
cc(make, and)
mark(feed, when)
mark(feed, to)
advcl(make, feed)
obj(feed, they)
aux(make, can)
conj(do, make)
det(business, a)
advmod(competitive, highly)
amod(business, competitive)
obj(make, business)
advmod(profitable, more)
amod(business, profitable)
case(beef, for)
obl(profitable, beef)
punct(dairy, ,)
conj(beef, dairy)
punct(man, ,)
cc(man, and)
compound(man, sheep)
conj(beef, man)
punct(make, .)
det(chart, the)
compound(chart, target)
root(ROOT, chart)
advmod(chart, quickly)
cc(tell, and)
advmod(tell, briefly)
conj(chart, tell)
iobj(tell, you)
det(additive, which)
nsubj(do, additive)
ccomp(tell, do)
obj(do, what)
punct(chart, .)
det:predet(additive, all)
det(additive, the)
nsubj:pass(sanction, additive)
acl(additive, list)
advmod(list, here)
aux:pass(sanction, be)
root(ROOT, sanction)
case(use, for)
obl(sanction, use)
case(Food, by)
det(Food, the)
nmod(use, Food)
cc(administration, and)
compound(administration, drug)
conj(Food, administration)
case(government, of)
det(government, the)
amod(government, federal)
nmod(administration, government)
punct(sanction, .)
det(comment, all)
nsubj:pass(review, comment)
case(effectiveness, concern)
nmod(comment, effectiveness)
cc(use, and)
conj(effectiveness, use)
case(drug, of)
nmod(effectiveness, drug)
aux(review, have)
aux:pass(review, be)
advmod(review, carefully)
root(ROOT, review)
case(officer, by)
det(officer, a)
compound(officer, veterinary)
amod(officer, medical)
obl(review, officer)
case(Aj, with)
nmod(officer, Aj)
punct(review, .)
det(article, this)
nsubj(assume, article)
parataxis(review, assume)
mark(balance, that)
det(ration, the)
nsubj:pass(balance, ration)
nsubj(feed, you)
aux(feed, be)
acl:relcl(ration, feed)
nmod:poss(beef, you)
obj(feed, beef)
punct(cattle, ,)
compound(cattle, dairy)
conj(beef, cattle)
punct(sheep, ,)
cc(sheep, and)
conj(beef, sheep)
aux:pass(balance, be)
advmod(balance, adequately)
ccomp(assume, balance)
case(protein, with)
obl(balance, protein)
punct(vitamin, ,)
conj(protein, vitamin)
punct(mineral, ,)
cc(mineral, and)
conj(protein, mineral)
punct(review, .)
det(drug, the)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
nsubj:pass(list, name)
aux:pass(list, be)
root(ROOT, list)
punct(list, ,)
mark(require, since)
amod(state, most)
nsubj(require, state)
advcl(list, require)
compound(processor, feed)
obj(require, processor)
mark(use, to)
xcomp(require, use)
det(name, this)
obj(use, name)
case(name, instead)
fixed(instead, of)
det(name, the)
compound(name, trade)
obl(use, name)
case(tag, on)
det(tag, the)
compound(tag, feed)
nmod(name, tag)
punct(list, .)
case(instance, in)
det(instance, some)
obl(show, instance)
punct(show, ,)
det(name, the)
compound(name, trade)
nsubj:pass(show, name)
aux:pass(show, be)
root(ROOT, show)
case(parentheses, in)
obl(show, parentheses)
case(name, follow)
det(name, the)
amod(name, chemical)
obl(show, name)
punct(show, .)
nsubj(indicate, this)
root(ROOT, indicate)
mark(market, that)
det(drug, this)
nsubj:pass(market, drug)
aux(market, be)
aux:pass(market, be)
ccomp(indicate, market)
case(name, under)
nummod(name, one)
compound(name, trade)
obl(market, name)
advmod(organization, only)
cc(organization, or)
compound(regulatory, state)
amod(organization, regulatory)
nsubj(approve, organization)
aux(approve, have)
acl:relcl(name, approve)
nmod:poss(use, it)
case(it, 's)
obj(approve, use)
case(tag, on)
det(tag, the)
compound(tag, feed)
nmod(use, tag)
punct(here, .)
parataxis(approve, here)
cop(here, be)
nmod:poss(guide, you)
compound(additive, feed)
compound(guide, additive)
nsubj(here, guide)
case(ruminant, for)
nmod(guide, ruminant)
punct(guide, :)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
appos(guide, name)
punct(name, :)
compound(hydrochloride, oxytetracycline)
appos(name, hydrochloride)
punct(terramycin, ()
appos(hydrochloride, terramycin)
punct(terramycin, ))
obj(do, what)
nsubj(do, it)
acl:relcl(hydrochloride, do)
punct(increase, :)
ccomp(do, increase)
obj(increase, rate)
case(gain, of)
nmod(rate, gain)
cc(improve, and)
conj(increase, improve)
compound(efficiency, feed)
obj(improve, efficiency)
punct(aid, ,)
conj(efficiency, aid)
case(prevention, in)
det(prevention, the)
nmod(efficiency, prevention)
cc(treatment, or)
conj(prevention, treatment)
punct(depend, ()
case(level, depend)
case(level, on)
obl(feed, level)
acl(prevention, feed)
punct(feed, ))
case(stage, of)
det(stage, the)
amod(stage, early)
obl(feed, stage)
case(fever, of)
compound(fever, shipping)
nmod(stage, fever)
punct(prevent, ,)
conj(fever, prevent)
cc(treat, or)
conj(fever, treat)
amod(diarrhea, bacterial)
conj(fever, diarrhea)
punct(aid, ,)
cc(aid, and)
conj(fever, aid)
mark(reduce, in)
acl(aid, reduce)
obj(reduce, incidence)
case(bloat, of)
nmod(incidence, bloat)
cc(abscess, and)
conj(bloat, liver)
nmod(incidence, abscess)
punct(indicate, .)
compound(production, Milk)
nsubj:pass(increase, production)
aux(increase, may)
aux:pass(increase, be)
root(ROOT, increase)
case(property, by)
det(property, the)
amod(property, anti-infective)
obl(increase, property)
case(drug, of)
det(drug, this)
nmod(property, drug)
punct(increase, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(cattle, :)
compound(cattle, beef)
obj(feed, cattle)
punct(ration, ()
compound(ration, finish)
appos(cattle, ration)
punct(ration, ))
punct(feed, --)
mark(increase, to)
advcl(feed, increase)
obj(increase, rate)
case(gain, of)
nmod(rate, gain)
cc(improve, and)
conj(increase, improve)
compound(efficiency, feed)
obj(improve, efficiency)
punct(feed, ,)
root(ROOT, feed)
nummod(milligram, 75)
obj(feed, milligram)
case(head, per)
nmod(milligram, head)
case(supplement, in)
amod(supplement, daily)
obl(feed, supplement)
punct(feed, .)
root(ROOT, calve)
punct(calve, --)
mark(increase, to)
advcl(feed, increase)
obj(increase, rate)
case(gain, of)
nmod(rate, gain)
cc(improve, and)
conj(increase, improve)
compound(efficiency, feed)
obj(improve, efficiency)
punct(feed, ,)
root(ROOT, feed)
nummod(gram, 10)
case(25, to)
nmod(10, 25)
obj(feed, gram)
case(ton, per)
obl(feed, ton)
case(feed, of)
amod(feed, complete)
nmod(ton, feed)
punct(feed, .)
case(aid, as)
det(aid, a)
obl(feed, aid)
case(prevention, in)
det(prevention, the)
nmod(aid, prevention)
case(diarrhea, of)
amod(diarrhea, bacterial)
nmod(prevention, diarrhea)
punct(scour, ()
appos(diarrhea, scour)
punct(scour, ))
punct(feed, ,)
root(ROOT, feed)
nummod(gram, 50)
obj(feed, gram)
case(ton, per)
obl(feed, ton)
case(feed, of)
amod(feed, complete)
nmod(ton, feed)
punct(feed, .)
case(treatment, for)
det(treatment, the)
obl(feed, treatment)
case(scour, of)
amod(scour, bacterial)
nmod(treatment, scour)
punct(feed, ,)
root(ROOT, feed)
nummod(gram, 100)
case(200, -)
nmod(100, 200)
obj(feed, gram)
punct(feed, .)
case(prevention, for)
obl(feed, prevention)
cc(treatment, or)
conj(prevention, treatment)
case(scour, of)
amod(scour, bacterial)
nmod(prevention, scour)
punct(feed, ,)
root(ROOT, feed)
nummod(milligram, 0.1)
case(5, to)
nmod(0.1, 5)
obj(feed, milligram)
case(pound, per)
nmod(milligram, pound)
case(weight, of)
compound(weight, body)
nmod(pound, weight)
advmod(feed, daily)
punct(feed, .)
root(ROOT, beef)
cc(dairy, and)
conj(beef, dairy)
punct(beef, --)
case(aid, as)
det(aid, a)
obl(provide, aid)
mark(reduce, in)
acl(aid, reduce)
obj(reduce, incidence)
cc(severity, and)
conj(incidence, severity)
case(bloat, of)
nmod(incidence, bloat)
punct(provide, ,)
root(ROOT, provide)
nummod(milligram, 75)
obj(provide, milligram)
case(hydrochloride, of)
amod(hydrochloride, oxytetracycline)
nmod(milligram, hydrochloride)
case(animal, per)
nmod(hydrochloride, animal)
advmod(provide, daily)
punct(provide, . )
mark(reduce, to)
root(ROOT, reduce)
obj(reduce, incidence)
case(abscess, of)
compound(abscess, liver)
nmod(incidence, abscess)
punct(abscess, ,)
compound(milligram, supply)
nummod(milligram, 75)
conj(abscess, milligram)
case(activity, of)
compound(activity, oxytetracycline)
nmod(milligram, activity)
case(head, per)
nmod(activity, head)
advmod(head, daily)
punct(reduce, .)
mark(prevent, to)
advcl(furnish, prevent)
cc(treat, or)
conj(prevent, treat)
amod(diarrhea, bacterial)
obj(prevent, diarrhea)
punct(furnish, ,)
root(ROOT, furnish)
nummod(milligram, 0.1)
case(5, to)
nmod(0.1, 5)
obj(furnish, milligram)
case(pound, per)
nmod(milligram, pound)
case(weight, of)
compound(weight, body)
nmod(pound, weight)
advmod(weight, daily)
punct(furnish, .)
case(prevention, for)
det(prevention, the)
root(ROOT, prevention)
cc(treatment, or)
conj(prevention, treatment)
case(stage, of)
det(stage, the)
amod(stage, early)
nmod(prevention, stage)
case(complex, of)
compound(complex, shipping)
compound(complex, fever)
nmod(stage, complex)
punct(level, ,)
compound(level, increase)
compound(level, feeding)
conj(prevention, level)
case(gram, to)
nummod(gram, 0.5)
case(2, to)
nmod(0.5, 2)
nmod(level, gram)
case(head, per)
nmod(gram, head)
case(day, per)
nmod(head, day)
punct(gram, .)
case(result, for)
det(result, the)
amod(result, best)
obl(feed, result)
punct(feed, ,)
root(ROOT, feed)
det(level, this)
obj(feed, level)
case(cattle, to)
obl(feed, cattle)
nummod(day, 3)
case(5, to)
nmod(3, 5)
obl(feed, day)
advcl(feed, precede)
obj(precede, shipment)
cc(or, and)
punct(or, /)
cc(3, or)
conj(shipment, 3)
case(5, to)
nmod(3, 5)
obj(precede, day)
case(arrival, follow)
nmod:poss(arrival, they)
obl(precede, arrival)
case(lot, in)
nmod:poss(lot, you)
compound(lot, feed)
nmod(arrival, lot)
punct(feed, .)
case(treatment, for)
obl(feed, treatment)
case(fever, of)
compound(fever, shipping)
nmod(treatment, fever)
punct(feed, ,)
det(level, this)
nsubj:pass(feed, level)
aux(feed, should)
aux:pass(feed, be)
root(ROOT, feed)
case(onset, at)
det(onset, the)
obl(feed, onset)
case(symptom, of)
det(symptom, the)
compound(symptom, disease)
nmod(onset, symptom)
mark(disappear, until)
nsubj(disappear, symptom)
advcl(feed, disappear)
punct(feed, .)
root(ROOT, sheep)
punct(sheep, --)
mark(increase, to)
advcl(feed, increase)
obj(increase, rate)
case(gain, of)
nmod(rate, gain)
cc(improve, and)
conj(increase, improve)
compound(efficiency, feed)
obj(improve, efficiency)
punct(feed, ,)
root(ROOT, feed)
nummod(gram, 10)
case(20, to)
nmod(10, 20)
obj(feed, gram)
case(ton, per)
nmod(gram, ton)
punct(feed, .)
case(aid, as)
det(aid, a)
obl(feed, aid)
case(prevention, in)
det(prevention, the)
nmod(aid, prevention)
case(diarrhea, of)
amod(diarrhea, bacterial)
nmod(prevention, diarrhea)
punct(scour, ()
appos(diarrhea, scour)
punct(scour, ))
punct(feed, ,)
root(ROOT, feed)
nummod(gram, 50)
obj(feed, gram)
case(ton, per)
nmod(gram, ton)
punct(feed, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
obj(feed, name)
punct(name, :)
appos(name, chlortetracycline)
punct(Aureomycin, ()
appos(chlortetracycline, Aureomycin)
punct(Aureomycin, ))
obj(do, what)
nsubj(do, it)
acl:relcl(chlortetracycline, do)
punct(do, :)
compound(gain, increase)
obj(do, gain)
punct(improve, ,)
conj(gain, improve)
compound(efficiency, feed)
obj(improve, efficiency)
punct(reduce, ,)
cc(reduce, and)
conj(do, reduce)
obj(reduce, loss)
case(infection, from)
amod(infection, bacterial)
obl(reduce, infection)
acl(infection, list)
advmod(list, under)
punct(feed, ``)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, '')
obj(feed, section)
punct(feed, .)
compound(production, Milk)
nsubj:pass(increase, production)
aux(increase, may)
aux:pass(increase, be)
root(ROOT, increase)
case(property, by)
det(property, the)
amod(property, anti-infective)
obl(increase, property)
case(drug, of)
det(drug, this)
nmod(property, drug)
punct(increase, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, :)
obj(feed, beef)
punct(feed, --)
advmod(less, not)
advmod(70, less)
fixed(less, than)
nummod(milligram, 70)
root(ROOT, milligram)
case(Aureomycin, of)
nmod(milligram, Aureomycin)
case(head, per)
nmod(milligram, head)
advmod(aid, daily)
mark(aid, to)
acl(milligram, aid)
case(prevention, in)
det(prevention, the)
obl(aid, prevention)
case(abscess, of)
compound(abscess, liver)
nmod(prevention, abscess)
case(cattle, in)
compound(lot, feed)
punct(lot, -)
compound(cattle, lot)
compound(cattle, beef)
nmod(prevention, cattle)
punct(milligram, .)
root(ROOT, prevention)
case(pneumonia, of)
amod(pneumonia, bacterial)
nmod(prevention, pneumonia)
punct(fever, ,)
compound(fever, shipping)
conj(pneumonia, fever)
punct(prevention, ,)
case(aid, as)
det(aid, a)
nmod(prevention, aid)
case(reduction, in)
nmod(aid, reduction)
case(loss, of)
nmod(reduction, loss)
case(infection, due)
fixed(due, to)
amod(infection, respiratory)
nmod(aid, infection)
punct(rhinotracheitis, ()
amod(rhinotracheitis, infectious)
appos(infection, rhinotracheitis)
punct(rhinotracheitis, --)
compound(fever, shipping)
compound(complex, fever)
appos(rhinotracheitis, complex)
punct(rhinotracheitis, ))
punct(prevention, .)
root(ROOT, feed)
case(level, at)
obl(feed, level)
case(milligram, of)
nummod(milligram, 70)
nmod(level, milligram)
case(head, per)
nmod(milligram, head)
case(day, per)
obl(feed, day)
punct(feed, .)
root(ROOT, treatment)
case(disease, of)
det(disease, the)
amod(disease, above)
nmod(treatment, disease)
punct(treatment, :)
nummod(milligram, 350)
parataxis(treatment, milligram)
case(head, per)
nmod(milligram, head)
case(day, per)
nmod(milligram, day)
case(day, for)
nummod(day, 30)
nmod(milligram, day)
advmod(day, only)
punct(milligram, .)
case(prevention, for)
nmod(milligram, prevention)
case(disease, of)
det(disease, these)
nmod(prevention, disease)
case(period, during)
nmod(prevention, period)
case(stress, of)
nmod(period, stress)
case(shipping, such)
fixed(such, as)
nmod(period, shipping)
punct(shipping, ,)
amod(handling, excessive)
conj(shipping, handling)
punct(vaccination, ,)
conj(shipping, vaccination)
punct(condition, ,)
amod(condition, extreme)
compound(condition, weather)
conj(shipping, condition)
punct(milligram, :)
nummod(milligram, 350)
conj(shipping, milligram)
case(head, per)
nmod(milligram, head)
case(day, per)
nmod(milligram, day)
case(day, for)
nummod(day, 30)
nmod(milligram, day)
advmod(day, only)
punct(milligram, .)
case(aid, as)
det(aid, a)
root(ROOT, aid)
mark(reduce, in)
acl(aid, reduce)
amod(diarrhea, bacterial)
obj(reduce, diarrhea)
cc(prevent, and)
conj(reduce, prevent)
compound(rot, foot)
obj(prevent, rot)
punct(feed, ,)
conj(rot, feed)
advmod(less, not)
advmod(0.1, less)
fixed(less, than)
nummod(milligram, 0.1)
nmod(feed, milligram)
case(pound, per)
nmod(milligram, pound)
case(weight, of)
compound(weight, body)
nmod(pound, weight)
advmod(weight, daily)
punct(milligram, .)
mark(aid, to)
advcl(feed, aid)
case(prevention, in)
det(prevention, the)
obl(aid, prevention)
case(anaplasmosis, of)
nmod(prevention, anaplasmosis)
punct(feed, ,)
root(ROOT, feed)
advmod(less, not)
advmod(0.5, less)
fixed(less, than)
nummod(milligram, 0.5)
obj(feed, milligram)
case(pound, per)
nmod(milligram, pound)
case(weight, of)
compound(weight, body)
nmod(pound, weight)
advmod(weight, daily)
punct(feed, .)
root(ROOT, Dairy)
punct(Dairy, --)
case(calve, for)
obl(feed, calve)
punct(feed, ,)
root(ROOT, feed)
advmod(less, not)
advmod(50, less)
fixed(less, than)
nummod(gram, 50)
obj(feed, gram)
case(Aureomycin, of)
nmod(gram, Aureomycin)
case(ton, per)
nmod(feed, ton)
amod(feed, complete)
appos(gram, feed)
case(aid, as)
det(aid, a)
nmod(feed, aid)
mark(prevent, in)
acl(aid, prevent)
amod(diarrhea, bacterial)
obj(prevent, diarrhea)
cc(rot, and)
compound(rot, foot)
conj(diarrhea, rot)
punct(diarrhea, .)
case(cow, for)
obl(feed, cow)
punct(feed, ,)
conj(prevent, feed)
xcomp(feed, provide)
det(intake, a)
obj(provide, intake)
case(milligram, of)
nummod(milligram, 0.1)
nmod(intake, milligram)
case(Aureomycin, of)
nmod(milligram, Aureomycin)
case(pound, per)
nmod(Aureomycin, pound)
case(weight, of)
compound(weight, body)
compound(aid, weight)
amod(aid, daily)
conj(milligram, aid)
case(reduction, in)
det(reduction, the)
nmod(aid, reduction)
case(diarrhea, of)
amod(diarrhea, bacterial)
nmod(reduction, diarrhea)
punct(prevention, ,)
case(prevention, in)
det(prevention, the)
nmod(reduction, prevention)
case(rot, of)
compound(rot, foot)
nmod(prevention, rot)
punct(reduction, ,)
cc(reduction, and)
case(reduction, in)
det(reduction, the)
conj(prevention, reduction)
case(loss, of)
nmod(reduction, loss)
case(infection, due)
fixed(due, to)
amod(infection, respiratory)
nmod(reduction, infection)
punct(rhinotracheitis, ()
amod(rhinotracheitis, infectious)
appos(infection, rhinotracheitis)
punct(rhinotracheitis, --)
compound(complex, shipping)
compound(complex, fever)
appos(rhinotracheitis, complex)
punct(rhinotracheitis, ))
punct(feed, .)
root(ROOT, sheep)
punct(sheep, --)
case(aid, as)
det(aid, a)
obl(feed, aid)
mark(reduce, in)
acl(aid, reduce)
obj(reduce, loss)
case(enterotoxemia, due)
fixed(due, to)
obl(reduce, enterotoxemia)
punct(disease, ()
compound(disease, overeating)
appos(enterotoxemia, disease)
punct(disease, ))
punct(feed, ,)
root(ROOT, feed)
det(ration, a)
amod(ration, complete)
obj(feed, ration)
acl(ration, contain)
advmod(less, not)
advmod(20, less)
fixed(less, than)
obj(contain, 20)
cc(more, and)
advmod(more, not)
advmod(20, more)
fixed(more, than)
nummod(gram, 50)
obl(more, gram)
case(Aureomycin, of)
nmod(gram, Aureomycin)
case(ton, per)
nmod(Aureomycin, ton)
punct(gram, .)
mark(reduce, to)
acl(gram, reduce)
amod(abortion, vibrionic)
obj(reduce, abortion)
case(sheep, in)
compound(sheep, breeding)
obl(reduce, sheep)
punct(feed, ,)
conj(reduce, feed)
nummod(milligram, 80)
obj(feed, milligram)
case(head, per)
obl(feed, head)
advmod(feed, daily)
punct(feed, . )
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
root(ROOT, name)
punct(name, :)
appos(name, Dynafac)
punct(name, .)
root(ROOT, what)
nsubj(do, it)
acl:relcl(what, do)
punct(do, :)
det(aid, a)
obj(do, aid)
mark(get, in)
acl(aid, get)
obj(get, cattle)
cc(sheep, and)
conj(cattle, sheep)
case(feed, on)
amod(feed, full)
obl(get, feed)
punct(get, ,)
mark(improve, in)
advcl(get, improve)
compound(conversion, feed)
obj(improve, conversion)
cc(growth, and)
conj(conversion, growth)
punct(improve, ,)
mark(reduce, in)
advcl(improve, reduce)
obj(reduce, bloat)
cc(founder, and)
conj(bloat, founder)
punct(control, ,)
cc(control, and)
mark(control, in)
conj(reduce, control)
obj(control, scour)
punct(what, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, :)
compound(calve, beef)
cc(dairy, and)
conj(beef, dairy)
obj(feed, calve)
punct(calve, --)
nummod(gram, 0.2)
compound(Dynafac, gram)
appos(calve, Dynafac)
case(head, per)
nmod(Dynafac, head)
advmod(Dynafac, daily)
punct(gram, ()
nummod(gram, 1)
appos(Dynafac, gram)
case(premix, of)
nmod(gram, premix)
case(head, per)
nmod(premix, head)
advmod(gram, daily)
punct(gram, ))
mark(promote, for)
acl(Dynafac, promote)
obj(promote, growth)
punct(conversion, ,)
compound(conversion, feed)
conj(growth, conversion)
punct(bloom, ,)
conj(growth, bloom)
punct(feed, ,)
cc(feed, and)
amod(feed, full)
conj(growth, feed)
advmod(cattle, earlier)
punct(cattle, .)
compound(cattle, Feeder)
conj(growth, cattle)
punct(cattle, --)
root(ROOT, Dynafac)
case(ration, in)
det(ration, a)
amod(ration, complete)
nmod(Dynafac, ration)
cc(gram, or)
nummod(gram, 0.3)
case(0.4, to)
nmod(0.3, 0.4)
nmod(ration, gram)
case(head, per)
nmod(gram, head)
case(day, per)
nmod(gram, day)
punct(gram, ()
nummod(gram, 200)
appos(gram, gram)
case(premix, of)
nmod(gram, premix)
case(ton, per)
nmod(gram, ton)
amod(ration, complete)
appos(gram, ration)
cc(equivalent, or)
conj(ration, equivalent)
punct(ration, .)
appos(ration, animal)
acl(animal, consume)
nummod(pound, 20)
compound(feed, pound)
obj(consume, feed)
advmod(receive, daily)
parataxis(consume, receive)
nummod(gram, 2)
obj(receive, gram)
appos(gram, Dynafac)
punct(receive, ))
punct(aids, .)
obj(receive, aids)
mark(minimize, in)
acl(aids, minimize)
det(occurrence, the)
obj(minimize, occurrence)
case(bloat, of)
compound(lot, feed)
punct(lot, -)
compound(bloat, lot)
nmod(occurrence, bloat)
case(consumption, due)
fixed(due, to)
amod(consumption, high)
obl(minimize, consumption)
case(concentrate, of)
nmod(consumption, concentrate)
punct(aids, .)
root(ROOT, sheep)
cc(lamb, and)
conj(sheep, lamb)
punct(sheep, --)
nummod(premix, 1.0)
compound(premix, gram)
parataxis(sheep, premix)
case(head, per)
nmod(premix, head)
case(day, per)
nmod(premix, day)
mark(promote, for)
acl(premix, promote)
obj(promote, growth)
punct(conversion, ,)
compound(conversion, feed)
conj(growth, conversion)
punct(get, ,)
cc(get, and)
conj(promote, get)
obj(get, lamb)
case(feed, on)
amod(feed, full)
obl(get, feed)
advmod(get, earlier)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
obj(get, name)
punct(name, :)
appos(name, diethylstilbestrol)
punct(name, .)
nsubj(increase, what)
nsubj(do, it)
acl:relcl(what, do)
punct(increase, :)
root(ROOT, increase)
obj(increase, rate)
case(efficiency, of)
compound(efficiency, gain)
cc(improve, and)
conj(gain, improve)
compound(efficiency, feed)
nmod(rate, efficiency)
punct(increase, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(cattle, :)
compound(cattle, beef)
obj(feed, cattle)
punct(cattle, --)
nummod(milligram, 10)
appos(cattle, milligram)
case(diethylstilbestrol, of)
nmod(milligram, diethylstilbestrol)
case(head, per)
nmod(diethylstilbestrol, head)
advmod(feed, daily)
punct(feed, .)
nsubj:pass(incorporate, this)
aux(incorporate, may)
aux:pass(incorporate, be)
root(ROOT, incorporate)
case(feed, in)
amod(feed, complete)
obl(incorporate, feed)
case(level, at)
det(level, the)
obl(incorporate, level)
case(milligram, of)
nummod(milligram, 0.4)
nmod(level, milligram)
case(diethylstilbestrol, of)
nmod(milligram, diethylstilbestrol)
case(pound, per)
nmod(milligram, pound)
case(ration, of)
nmod(pound, ration)
punct(incorporate, --)
advcl(incorporate, assume)
nsubj(consume, animal)
ccomp(assume, consume)
advmod(25, about)
nummod(pound, 25)
obl:npmod(daily, pound)
advmod(consume, daily)
punct(incorporate, .)
det(drug, the)
nsubj:pass(incorporate, drug)
aux:pass(incorporate, be)
advmod(incorporate, also)
root(ROOT, incorporate)
case(supplement, in)
obl(incorporate, supplement)
punct(incorporate, .)
nsubj(be, these)
root(ROOT, be)
mark(feed, to)
aux:pass(feed, be)
xcomp(be, feed)
case(rate, at)
det(rate, a)
obl(feed, rate)
mark(provide, to)
acl(rate, provide)
nummod(milligram, 10)
obj(provide, milligram)
obj(provide, DES)
case(head, per)
nmod(DES, head)
advmod(provide, daily)
punct(be, .)
det(level, the)
amod(level, recommend)
nummod(milligram, 10)
punct(milligram, -)
compound(level, milligram)
amod(level, daily)
compound(level, intake)
nsubj:pass(maintain, level)
aux(maintain, should)
aux:pass(maintain, be)
root(ROOT, maintain)
punct(maintain, .)
nsubj:pass(incorporate, it)
aux(incorporate, may)
aux:pass(incorporate, be)
root(ROOT, incorporate)
case(feed, into)
compound(feed, cattle)
compound(feed, creep)
obl(incorporate, feed)
case(level, in)
obl(incorporate, level)
case(milligram, from)
nummod(milligram, 1.0)
case(1.5, to)
nmod(1.0, 1.5)
obl(incorporate, milligram)
case(diethylstilbestrol, of)
nmod(milligram, diethylstilbestrol)
case(pound, per)
nmod(milligram, pound)
case(feed, of)
nmod(pound, feed)
punct(incorporate, .)
compound(ration, sheep)
compound(ration, fattening)
root(ROOT, ration)
punct(ration, --)
det(level, the)
amod(level, recommend)
nsubj(milligram, level)
case(sheep, for)
nmod(level, sheep)
cop(milligram, be)
nummod(milligram, 2)
root(ROOT, milligram)
advmod(milligram, daily)
punct(maintain, ,)
cc(maintain, and)
det(level, this)
nsubj:pass(maintain, level)
aux(maintain, should)
aux:pass(maintain, be)
conj(milligram, maintain)
punct(milligram, .)
root(ROOT, include)
obj(include, supplement)
acl(supplement, contain)
nummod(milligram, 0.4)
case(2, to)
nmod(0.4, 2)
obj(contain, milligram)
case(pound, per)
nmod(milligram, pound)
mark(provide, to)
advcl(contain, provide)
nummod(milligram, 2)
obj(provide, milligram)
case(head, per)
nmod(milligram, head)
case(day, per)
obl(provide, day)
punct(include, .)
root(ROOT, Caution)
punct(Caution, :)
appos(Caution, discontinue)
obj(discontinue, medication)
nummod(hour, 48)
obj(discontinue, hour)
case(slaughter, before)
obl(discontinue, slaughter)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
obj(discontinue, name)
punct(name, :)
compound(hydrochloride, Hydroxazine)
appos(name, hydrochloride)
punct(Caution, .)
nsubj(improve, what)
nsubj(do, it)
acl:relcl(what, do)
punct(improve, :)
root(ROOT, improve)
compound(rate, growth)
obj(improve, rate)
cc(efficiency, and)
compound(efficiency, feed)
conj(rate, efficiency)
case(animal, of)
compound(animal, fattening)
compound(animal, beef)
nmod(efficiency, animal)
punct(improve, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, :)
case(rate, at)
det(rate, the)
obl(feed, rate)
case(milligram, of)
nummod(milligram, 2)
case(1/2, -)
nmod(2, 1/2)
nmod(rate, milligram)
case(head, per)
nmod(milligram, head)
case(day, per)
nmod(head, day)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
parataxis(feed, name)
punct(name, :)
amod(casein, iodinate)
appos(name, casein)
punct(feed, .)
root(ROOT, what)
nsubj(do, it)
acl:relcl(what, do)
punct(what, : )
nsubj(elevate, drug)
root(ROOT, elevate)
det(rate, the)
compound(rate, metabolic)
obj(elevate, rate)
case(cow, of)
det(cow, the)
nmod(rate, cow)
punct(elevate, . )
root(ROOT, Fed)
case(cattle, to)
compound(cattle, dairy)
obl(Fed, cattle)
mark(increase, to)
advcl(Fed, increase)
compound(production, milk)
obj(increase, production)
cc(percentage, and)
compound(percentage, butterfat)
conj(production, percentage)
punct(Fed, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
iobj(feed, : )
nummod(gram, 1)
case(1, to)
nmod(1, 1)
case(1, -)
compound(2, 1)
punct(2, /)
nmod(1, 2)
obj(feed, gram)
case(pound, per)
nummod(pound, 100)
nmod(gram, pound)
case(weight, of)
compound(weight, body)
nmod(pound, weight)
punct(feed, .)
root(ROOT, Caution)
punct(Caution, :)
nsubj:pass(test, cow)
acl(cow, receive)
obj(receive, drug)
aux(test, may)
advmod(test, not)
aux:pass(test, be)
advmod(test, officially)
root(ROOT, test)
case(program, under)
compound(program, breed)
compound(testing, registry)
compound(program, testing)
obl(test, program)
punct(program, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
appos(program, name)
punct(name, :)
amod(enzyme, bacterial)
cc(fungal, and)
conj(bacterial, fungal)
appos(name, enzyme)
punct(test, . )
punct(appear, ()
det(preparation, these)
compound(preparation, enzyme)
nsubj(appear, preparation)
root(ROOT, appear)
case(tags, on)
nmod:poss(tags, today)
case(today, 's)
compound(tags, feed)
obl(appear, tags)
case(extract, as)
compound(extract, fermentation)
nmod(tags, extract)
case(subtilis, of)
compound(subtilis, Bacillus)
nmod(extract, subtilis)
punct(orzae, ,)
compound(orzae, Apergillus)
conj(subtilis, orzae)
punct(Niger, ,)
conj(subtilis, Niger)
punct(Flavus, ,)
cc(Flavus, and)
conj(subtilis, Flavus)
punct(appear, .)
punct(appear, ))
nsubj(improve, what)
nsubj(do, it)
acl:relcl(what, do)
punct(improve, :)
root(ROOT, improve)
obj(improve, utilization)
case(corn, of)
amod(moisture, low)
punct(moisture, -)
compound(corn, moisture)
nmod(utilization, corn)
punct(%, ()
advmod(14, less)
fixed(less, than)
nummod(%, 14)
appos(corn, %)
punct(%, ))
punct(improve, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, : )
amod(benefit, Greatest)
nsubj:pass(associate, benefit)
aux(associate, have)
aux:pass(associate, be)
root(ROOT, associate)
mark(feed, with)
advcl(associate, feed)
amod(moisture, low)
punct(moisture, -)
compound(corn, moisture)
obj(feed, corn)
case(program, in)
compound(feeding, beef)
punct(feeding, -)
compound(program, feeding)
obl(feed, program)
punct(associate, .)
amod(firm, several)
nsubj(merchandising, firm)
aux(merchandising, be)
root(ROOT, merchandising)
compound(preparation, enzyme)
obj(merchandising, preparation)
case(manufacturer, through)
compound(manufacturer, feed)
obl(merchandising, manufacturer)
punct(merchandising, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
root(ROOT, name)
punct(name, :)
appos(name, Ronnel)
punct(name, .)
nsubj(controls, what)
nsubj(do, it)
acl:relcl(what, do)
punct(controls, :)
advmod(controls, effectively)
root(ROOT, controls)
compound(grub, cattle)
obj(controls, grub)
obj(hide, which)
nsubj(hide, damage)
acl:relcl(grub, hide)
cc(reduce, and)
aux(reduce, can)
conj(hide, reduce)
obj(reduce, gain)
punct(controls, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, : )
nsubj:pass(add, drug)
aux:pass(add, be)
root(ROOT, add)
case(protein, to)
cc:preconj(protein, either)
det(supplement, a)
compound(supplement, protein)
cc(mineral, or)
conj(protein, mineral)
obl(add, supplement)
case(period, for)
det(period, a)
obl(add, period)
case(day, of)
nummod(day, 7)
cc(14, or)
conj(7, 14)
nmod(period, day)
punct(add, . )
root(ROOT, follow)
nmod:poss(recommendation, manufacturer)
case(manufacturer, 's)
obj(follow, recommendation)
advmod(follow, carefully)
punct(follow, .)
root(ROOT, Caution)
punct(Caution, :)
aux(feed, do)
advmod(feed, not)
root(ROOT, feed)
case(cow, to)
compound(cow, dairy)
obl(feed, cow)
cc(feed, and)
aux(feed, do)
advmod(feed, not)
conj(feed, feed)
case(day, within)
nummod(day, 60)
obl(feed, day)
case(slaughter, of)
nmod(day, slaughter)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
obj(feed, name)
punct(name, :)
compound(polysiloxane, Methyl)
appos(name, polysiloxane)
punct(feed, .)
nsubj(aids, what)
nsubj(do, it)
acl:relcl(what, do)
punct(aids, :)
root(ROOT, aids)
mark(prevent, in)
acl(aids, prevent)
compound(bloat, foamy)
obj(prevent, bloat)
punct(aids, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, : )
case(prevention, for)
obl(feed, prevention)
case(bloat, of)
compound(bloat, foamy)
nmod(prevention, bloat)
punct(feed, ,)
root(ROOT, feed)
case(rate, at)
det(rate, a)
obl(feed, rate)
case(milligram, of)
nummod(milligram, 0.5)
case(2, to)
nmod(0.5, 2)
nmod(rate, milligram)
case(head, per)
nmod(milligram, head)
case(day, per)
nmod(head, day)
case(mineral, in)
obl(feed, mineral)
cc(salt, or)
conj(mineral, salt)
cc(feed, or)
conj(mineral, feed)
punct(feed, .)
case(treatment, for)
obl(feed, treatment)
case(bloat, of)
nmod(treatment, bloat)
punct(feed, ,)
nsubj:pass(feed, drug)
aux:pass(feed, be)
root(ROOT, feed)
case(level, at)
det(level, a)
amod(level, higher)
obl(feed, level)
punct(level, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
parataxis(feed, name)
punct(name, :)
appos(name, phenothiazine)
punct(feed, .)
nsubj(reduce, what)
nsubj(do, it)
acl:relcl(what, do)
punct(reduce, :)
root(ROOT, reduce)
obj(reduce, loss)
case(stomach, from)
nmod(loss, stomach)
punct(hookworm, ,)
conj(stomach, hookworm)
punct(worm, ,)
cc(worm, and)
amod(worm, nodular)
conj(stomach, worm)
mark(interfere, by)
advcl(reduce, interfere)
case(reproduction, with)
obl(interfere, reproduction)
case(worm, of)
det(worm, the)
amod(worm, female)
nmod(reproduction, worm)
mark(reduce, by)
advcl(interfere, reduce)
det(number, the)
obj(reduce, number)
case(egg, of)
nmod(number, egg)
acl(number, lay)
cc(render, and)
advmod(render, essentially)
conj(lay, render)
det(egg, all)
amod(egg, lay)
obj(render, egg)
xcomp(render, sterile)
punct(reduce, .)
advmod(fly, also)
punct(fly, ,)
nsubj(fly, aid)
case(control, in)
det(control, the)
nmod(aid, control)
case(horn, of)
nmod(control, horn)
root(ROOT, fly)
mark(prevent, by)
advcl(fly, prevent)
obj(prevent, they)
mark(hatch, from)
advcl(prevent, hatch)
case(drop, in)
det(drop, the)
obl(hatch, drop)
punct(fly, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(treat, :)
parataxis(feed, treat)
obj(treat, cattle)
case(gram, with)
nummod(gram, 10)
obl(treat, gram)
case(weight, per)
nummod(pound, 100)
compound(weight, pound)
compound(weight, body)
nmod(gram, weight)
case(maximum, with)
det(maximum, a)
obl(treat, maximum)
case(gram, of)
nummod(gram, 70)
nmod(maximum, gram)
case(animal, per)
nmod(gram, animal)
punct(treat, .)
advmod(feed, then)
punct(feed, ,)
case(parasite, for)
det(parasite, the)
amod(parasite, above)
obl(feed, parasite)
punct(feed, ,)
root(ROOT, feed)
advmod(feed, continuously)
case(level, at)
det(level, these)
obl(feed, level)
punct(feed, :)
compound(cattle, Feeder)
root(ROOT, cattle)
punct(cattle, --)
nummod(gram, 2)
case(5, -)
nmod(2, 5)
appos(cattle, gram)
case(daily, of)
compound(daily, phenothiazine)
nmod(gram, daily)
punct(cattle, ;)
punct(cattle, ;)
compound(calve, beef)
list(cattle, calve)
punct(cattle, --)
case(gram, to)
nummod(gram, 1.5)
list(cattle, gram)
advmod(gram, daily)
case(weight, depend)
case(weight, on)
nmod(gram, weight)
case(animal, of)
nmod(weight, animal)
punct(cattle, .)
root(ROOT, treat)
obj(treat, lamb)
case(gram, with)
nummod(gram, 12)
obl(treat, gram)
case(head, per)
nmod(gram, head)
case(lamb, for)
obl(treat, lamb)
advcl(treat, weigh)
case(pound, up)
fixed(up, to)
nummod(pound, 50)
obj(weigh, pound)
punct(treat, ;)
punct(treat, ;)
parataxis(treat, treat)
obj(treat, lamb)
case(pound, over)
nummod(pound, 50)
obl(treat, pound)
cc(adult, and)
conj(pound, adult)
case(gram, with)
nummod(gram, 24)
nmod(pound, gram)
case(animal, per)
nmod(gram, animal)
punct(gram, .)
case(control, for)
amod(control, continuous)
nmod(gram, control)
punct(feed, ,)
conj(treat, feed)
nummod(part, 1)
compound(phenothiazine, part)
obj(feed, phenothiazine)
case(mineral, to)
nummod(mineral, 9)
compound(mineral, part)
obl(feed, mineral)
cc(salt, or)
conj(mineral, salt)
punct(treat, .)
mark(include, to)
advcl(add, include)
case(feed, in)
obl(include, feed)
punct(add, ,)
root(ROOT, add)
obj(add, phenothiazine)
mark(supply, to)
xcomp(add, supply)
nummod(gram, 0.5)
case(1, to)
nmod(0.5, 1)
obj(supply, gram)
case(sheep, per)
nmod(gram, sheep)
advmod(supply, daily)
punct(add, .)
root(ROOT, Caution)
punct(Caution, :)
amod(administration, Continuous)
nsubj:pass(recommend, administration)
aux:pass(recommend, be)
advmod(recommend, not)
appos(Caution, recommend)
case(cow, for)
compound(cow, lactate)
obl(recommend, cow)
punct(Caution, . )
case(treatment, follow)
amod(dose, single)
punct(dose, -)
compound(treatment, dose)
obl(discard, treatment)
punct(discard, ,)
nsubj:pass(discard, milk)
aux(discard, should)
aux:pass(discard, be)
root(ROOT, discard)
case(treatment, for)
nummod(day, 4)
compound(treatment, day)
amod(treatment, follow)
obl(discard, treatment)
punct(treatment, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
obj(discard, name)
punct(name, :)
compound(penicillin, procaine)
appos(name, penicillin)
punct(discard, .)
root(ROOT, what)
nsubj(do, it)
acl:relcl(what, do)
punct(aids, :)
obj(do, aids)
mark(reduce, in)
acl(aids, reduce)
det(incidence, the)
obj(reduce, incidence)
cc(severity, and)
conj(incidence, severity)
case(bloat, of)
nmod(incidence, bloat)
case(beef, in)
compound(cattle, beef)
cc(dairy, or)
conj(beef, dairy)
nmod(bloat, cattle)
case(pasture, on)
compound(pasture, legume)
nmod(cattle, pasture)
punct(aids, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, :)
xcomp(feed, feed)
nummod(unit, 75,000)
obj(feed, unit)
cc(75, or)
conj(unit, 75)
conj(unit, milligram)
case(head, per)
nmod(milligram, head)
advmod(feed, daily)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
obj(feed, name)
punct(name, :)
compound(propionate, Sodium)
appos(name, propionate)
punct(feed, .)
root(ROOT, what)
nsubj(do, it)
acl:relcl(what, do)
punct(what, : )
case(prevention, for)
det(prevention, the)
root(ROOT, prevention)
cc(treatment, or)
conj(prevention, treatment)
case(acetonemia, of)
nmod(prevention, acetonemia)
punct(ketosis, ()
appos(acetonemia, ketosis)
punct(ketosis, ))
case(cow, in)
compound(cow, dairy)
nmod(prevention, cow)
punct(prevention, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, : )
case(prevention, for)
det(prevention, the)
obl(feed, prevention)
case(acetonemia, of)
nmod(prevention, acetonemia)
punct(ketosis, ()
appos(acetonemia, ketosis)
punct(ketosis, ))
root(ROOT, feed)
nummod(pound, 1)
case(4, /)
nmod(1, 4)
compound(beginning, pound)
case(day, per)
compound(beginning, day)
obj(feed, beginning)
case(calve, at)
obl(feed, calve)
cc(continue, and)
conj(feed, continue)
case(week, for)
nummod(week, 6)
obl(continue, week)
punct(feed, .)
case(treatment, for)
det(treatment, the)
root(ROOT, treatment)
case(feed, of)
compound(feed, ketosis)
nmod(treatment, feed)
nummod(feed, 1)
punct(4, /)
nmod(1, 4)
case(pound, to)
nummod(pound, 1)
case(2, /)
nmod(1, 2)
nmod(feed, pound)
case(day, per)
nmod(pound, day)
case(day, for)
nummod(day, 10)
nmod(pound, day)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
appos(pound, name)
punct(name, :)
appos(name, sulfaquinoxaline)
punct(name, .)
nsubj(help, what)
nsubj(do, it)
aux(help, do)
punct(help, :)
root(ROOT, help)
compound(dysentery, control)
compound(dysentery, shipping)
obj(help, dysentery)
cc(coccidiosis, and)
conj(dysentery, coccidiosis)
case(lamb, in)
obl(help, lamb)
punct(help, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, :)
obj(feed, lamb)
punct(feed, --)
parataxis(feed, feed)
case(level, at)
obl(feed, level)
case(day, for)
nummod(day, 2)
cc(3, or)
conj(2, 3)
obl(feed, day)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
parataxis(feed, name)
punct(name, :)
amod(bacteria, dry)
compound(bacteria, rume)
appos(name, bacteria)
punct(feed, .)
obj(Stimulates, what)
nsubj(do, it)
acl:relcl(what, do)
punct(Stimulates, :)
root(ROOT, Stimulates)
compound(activity, rume)
obj(Stimulates, activity)
punct(Stimulates, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, :)
xcomp(feed, Incorporated)
case(feed, in)
advmod(prepare, commercially)
amod(feed, prepare)
obl(Incorporated, feed)
case(level, at)
amod(level, proper)
nmod(feed, level)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
parataxis(feed, name)
punct(name, :)
compound(lactate, Calcium)
cc(sodium, and)
conj(Calcium, sodium)
appos(name, lactate)
punct(feed, .)
root(ROOT, what)
nsubj(do, it)
acl:relcl(what, do)
punct(prevent, :)
obj(do, prevent)
cc(treat, and)
compound(acetonemia, treat)
conj(prevent, acetonemia)
punct(ketosis, ()
appos(prevent, ketosis)
punct(ketosis, ))
case(cow, in)
compound(cow, dairy)
nmod(prevent, cow)
punct(do, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, : )
case(prevention, for)
obl(feed, prevention)
case(ketosis, of)
nmod(prevention, ketosis)
punct(feed, ,)
root(ROOT, feed)
nummod(pound, 1)
case(4, /)
nmod(1, 4)
obj(feed, pound)
case(head, per)
nmod(pound, head)
advmod(feed, daily)
case(week, for)
nummod(week, 6)
obl(feed, week)
acl(week, commence)
case(time, at)
compound(time, calve)
obl(commence, time)
punct(feed, .)
case(treatment, for)
obl(feed, treatment)
case(ketosis, of)
nmod(treatment, ketosis)
punct(feed, ,)
root(ROOT, feed)
nummod(pound, 1)
case(2, /)
nmod(1, 2)
obj(feed, pound)
advmod(feed, daily)
mark(disappear, until)
nsubj(disappear, symptom)
advcl(feed, disappear)
punct(feed, .)
advmod(feed, then)
punct(feed, ,)
root(ROOT, feed)
amod(dose, preventive)
obj(feed, dose)
case(week, until)
nummod(week, 6)
obl(feed, week)
mark(calve, after)
advcl(feed, calve)
punct(name, .)
nmod:poss(name, drug)
case(drug, 's)
amod(name, chemical)
obj(feed, name)
punct(name, :)
compound(hydrochloride, Promazine)
appos(name, hydrochloride)
punct(feed, .)
root(ROOT, what)
nsubj(do, it)
acl:relcl(what, do)
punct(what, : )
det(tranquilizer, a)
nsubj:pass(subject, tranquilizer)
acl(tranquilizer, feed)
case(cattle, to)
obl(feed, cattle)
punct(other, ()
amod(cattle, other)
case(cow, than)
amod(cow, lactate)
compound(cow, dairy)
obl(other, cow)
punct(other, ))
mark(subject, prior)
fixed(prior, to)
nsubj:pass(subject, they)
aux:pass(subject, be)
root(ROOT, subject)
case(condition, to)
compound(condition, stress)
obl(subject, condition)
case(vaccinating, such)
fixed(such, as)
nmod(condition, vaccinating)
punct(shipping, ,)
conj(vaccinating, shipping)
punct(calve, ,)
compound(calve, wean)
conj(vaccinating, calve)
punct(handling, ,)
cc(handling, and)
amod(handling, excessive)
conj(vaccinating, handling)
punct(subject, .)
advmod(feed, how)
mark(feed, to)
root(ROOT, feed)
punct(feed, : )
advmod(less, not)
advmod(milligram, less)
fixed(less, than)
root(ROOT, milligram)
cc(milligram, but)
advmod(more, not)
advmod(1.25, more)
fixed(more, than)
nummod(milligram, 1.25)
conj(milligram, milligram)
case(additive, of)
nmod(milligram, additive)
case(pound, per)
nmod(additive, pound)
case(weight, of)
compound(weight, body)
nmod(pound, weight)
punct(milligram, .)
root(ROOT, Caution)
punct(Caution, :)
nsubj:pass(feed, additive)
aux(feed, should)
advmod(feed, not)
aux:pass(feed, be)
root(ROOT, feed)
nummod(hour, 72)
obl:tmod(feed, hour)
mark(slaughter, before)
nsubj:pass(slaughter, animal)
aux:pass(slaughter, be)
advcl(feed, slaughter)
punct(feed, .)
expl(be, there)
root(ROOT, be)
nummod(type, three)
amod(type, principal)
compound(type, feed)
compound(type, bunk)
nsubj(be, type)
case(cattle, for)
compound(cattle, dairy)
cc(beef, and)
conj(dairy, beef)
nmod(type, cattle)
punct(cattle, :)
punct(1, ()
nummod(bunk, 1)
punct(1, ))
compound(line, Fence)
punct(line, -)
compound(bunk, line)
appos(cattle, bunk)
punct(be, --)
nsubj(eat, cattle)
parataxis(be, eat)
case(side, from)
nummod(side, one)
obl(eat, side)
mark(put, while)
nsubj:pass(put, feed)
aux:pass(put, be)
advcl(eat, put)
compound:prt(put, in)
case(side, from)
det(side, the)
amod(side, opposite)
obl(put, side)
case(fence, of)
det(fence, the)
nmod(side, fence)
case(wagon, by)
compound(unloading, self)
punct(unloading, -)
compound(wagon, unloading)
nmod(side, wagon)
punct(side, ;)
punct(bunk, ;)
punct(2, ()
nummod(bunk, 2)
punct(2, ))
amod(bunk, mechanize)
appos(wagon, bunk)
punct(bunk, --)
nsubj(sit, they)
parataxis(bunk, sit)
case(lot, within)
det(lot, the)
compound(lot, feed)
obl(sit, lot)
punct(fill, ,)
aux:pass(fill, be)
conj(sit, fill)
case(conveyor, by)
det(conveyor, a)
amod(conveyor, mechanical)
obl(fill, conveyor)
case(surface, above)
compound(surface, feeding)
nmod(conveyor, surface)
punct(fill, ;)
punct(fill, ;)
punct(3, ()
nummod(bunk, 3)
punct(3, ))
amod(bunk, special)
appos(conveyor, bunk)
punct(bunk, --)
mark(discuss, as)
advcl(permit, discuss)
advmod(discuss, here)
punct(permit, ,)
nsubj(permit, they)
parataxis(bunk, permit)
obj(permit, cattle)
mark(eat, to)
xcomp(permit, eat)
case(side, from)
det(side, all)
obl(eat, side)
punct(be, .)
nsubj:pass(put, feed)
aux:pass(put, be)
root(ROOT, put)
compound:prt(put, in)
case(elevator, with)
det(elevator, a)
obl(put, elevator)
punct(put, .)
amod(material, several)
nsubj:pass(use, material)
cc(combination, or)
conj(material, combination)
case(material, of)
nmod(combination, material)
aux(use, can)
aux:pass(use, be)
root(ROOT, use)
mark(construct, to)
advcl(use, construct)
det(bunk, a)
amod(bunk, satisfactory)
compound(bunk, feed)
obj(construct, bunk)
punct(use, .)
det(selection, the)
nsubj(depend, selection)
case(material, of)
nmod(selection, material)
root(ROOT, depend)
case(skill, on)
obl(depend, skill)
case(labor, of)
amod(labor, available)
nmod(skill, labor)
case(installation, for)
nmod(labor, installation)
punct(cost, ,)
conj(installation, cost)
case(material, of)
nmod(cost, material)
amod(material, available)
advmod(available, locally)
punct(preference, ,)
cc(preference, and)
nmod:poss(preference, you)
amod(preference, own)
conj(installation, preference)
punct(depend, .)
det(material, no)
nummod(material, one)
nsubj(best, material)
cop(best, be)
root(ROOT, best)
case(situation, for)
det(situation, all)
obl(best, situation)
punct(best, .)
csubj(problem, select)
obj(select, bunk)
case(comparison, by)
amod(comparison, economic)
obl(select, comparison)
cop(problem, be)
advmod(problem, usually)
det(problem, a)
amod(problem, individual)
root(ROOT, problem)
punct(problem, .)
compound(line, Fence)
punct(line, -)
compound(feeding, line)
appos(problem, feeding)
punct(problem, .)
nsubj(eat, animal)
root(ROOT, eat)
advmod(side, only)
case(side, from)
nummod(side, one)
obl(eat, side)
punct(eat, ,)
advmod(long, so)
det(bunk, the)
compound(line, fence)
punct(line, -)
compound(bunk, line)
nsubj(long, bunk)
aux(long, must)
cop(long, be)
advmod(long, twice)
advmod(long, as)
conj(eat, long)
case(bunk, as)
det(bunk, the)
amod(bunk, mechanical)
obl(long, bunk)
punct(eat, .)
det(bunk, these)
nsubj(serve, bunk)
advmod(serve, also)
root(ROOT, serve)
case(fence, as)
det(fence, a)
obl(serve, fence)
punct(serve, ,)
advmod(attribute, so)
nsubj:pass(attribute, part)
case(cost, of)
det(cost, the)
amod(cost, additional)
nmod(part, cost)
aux(attribute, must)
aux:pass(attribute, be)
conj(serve, attribute)
case(fence, to)
det(fence, the)
obl(attribute, fence)
punct(serve, .)
case(location, because)
fixed(because, of)
nmod:poss(location, they)
obl(way, location)
punct(way, ,)
case(edge, on)
det(edge, the)
nmod(location, edge)
case(lot, of)
det(lot, the)
compound(lot, feed)
nmod(edge, lot)
punct(way, ,)
compound(line, fence)
punct(line, -)
compound(bunk, line)
nsubj(way, bunk)
cop(way, be)
advmod(way, not)
case(way, in)
det(way, the)
root(ROOT, way)
case(removal, of)
amod(removal, mechanical)
compound(removal, manure)
nmod(way, removal)
punct(fill, .)
acl(way, fill)
det(bunk, these)
obj(fill, bunk)
case(wagon, by)
det(wagon, the)
amod(wagon, same)
compound(unloading, self)
punct(unloading, -)
compound(wagon, unloading)
obl(fill, wagon)
acl(wagon, use)
mark(fill, to)
xcomp(use, fill)
obj(fill, silo)
conj(fill, spread)
obj(spread, cost)
case(wagon, of)
det(wagon, the)
nmod(cost, wagon)
case(time, over)
amod(time, more)
obl(spread, time)
cc(operation, and)
conj(time, operation)
punct(provide, .)
det(road, all)
punct(weather, -)
compound(road, weather)
nsubj:pass(provide, road)
aux(provide, must)
aux:pass(provide, be)
parataxis(spread, provide)
advmod(provide, next)
case(floor, to)
det(floor, the)
compound(floor, feeding)
obl(provide, floor)
advmod(possible, so)
nsubj(possible, access)
aux(possible, will)
cop(possible, be)
conj(provide, possible)
det(year, all)
obl:tmod(possible, year)
punct(provide, .)
nsubj(problem, this)
aux(problem, will)
cop(problem, be)
det(problem, a)
root(ROOT, problem)
case(area, in)
nmod(problem, area)
case(snowfall, of)
amod(snowfall, heavy)
nmod(area, snowfall)
punct(problem, .)
nsubj(picnic, marketing)
case(decade, in)
det(decade, the)
amod(decade, new)
nmod(marketing, decade)
aux(picnic, will)
cop(picnic, be)
det(picnic, no)
parataxis(problem, picnic)
punct(picnic, --)
case(sixty, for)
det(sixty, the)
obl(present, sixty)
aux(present, will)
advcl(picnic, present)
advmod(present, possibly)
det(activity, the)
advmod(intense, most)
amod(activity, intense)
amod(activity, competitive)
obj(present, activity)
obj(experience, that)
nsubj(experience, you)
aux(experience, have)
acl:relcl(activity, experience)
case(year, in)
det(year, the)
amod(year, last)
nummod(year, 20)
case(25, -)
nmod(20, 25)
obl(experience, year)
punct(picnic, .)
punct(picnic, .)
root(ROOT, why)
punct(why, ?)
punct(why, ?)
nsubj(make, company)
case(type, of)
det(type, all)
nmod(company, type)
aux(make, have)
root(ROOT, make)
amod(advance, great)
obj(make, advance)
case(capability, in)
compound(capability, production)
nmod(advance, capability)
cc(efficiency, and)
conj(capability, efficiency)
punct(capability, --)
case(equipment, in)
amod(equipment, modern)
obl(make, equipment)
cc(process, and)
amod(process, new)
conj(equipment, process)
punct(facility, ,)
amod(facility, enlarge)
compound(facility, R)
cc(d, &)
conj(R, d)
conj(equipment, facility)
punct(development, ,)
amod(development, faster)
amod(development, new)
compound(development, product)
conj(equipment, development)
punct(make, .)
amod(company, many)
nsubj(upgrade, company)
aux(upgrade, have)
root(ROOT, upgrade)
nmod:poss(manpower, they)
compound(manpower, sale)
obj(upgrade, manpower)
cc(test, and)
conj(upgrade, test)
amod(sell, new)
obj(test, sell)
punct(distribution, ,)
conj(sell, distribution)
punct(technique, ,)
cc(technique, and)
compound(technique, promotion)
conj(sell, technique)
mark(gain, to)
advcl(test, gain)
det(edge, a)
amod(edge, bigger)
amod(edge, competitive)
obj(gain, edge)
punct(upgrade, .)
case(kind, give)
det(kind, this)
obl(face, kind)
case(climate, of)
compound(climate, business)
nmod(kind, climate)
punct(face, ,)
det(problem, what)
amod(problem, competitive)
compound(problem, marketing)
obj(face, problem)
aux(face, will)
nmod:poss(company, you)
nsubj(face, company)
root(ROOT, face)
case(year, in)
det(year, the)
amod(year, next)
nummod(year, 10)
obl(face, year)
punct(face, .)
punct(face, ?)
punct(face, ?)
case(experience, base)
case(experience, on)
nmod:poss(experience, we)
obl(see, experience)
case(client, with)
nmod(experience, client)
punct(see, ,)
punct(see, ,)
nsubj(see, we)
root(ROOT, see)
nummod(problem, 14)
amod(problem, major)
obj(see, problem)
nsubj(fall, which)
acl:relcl(problem, fall)
case(group, into)
nummod(group, three)
amod(group, broad)
obl(fall, group)
punct(group, --)
det(place, the)
compound(place, market)
appos(group, place)
nmod:npmod(place, itself)
punct(method, ,)
compound(method, marketing)
conj(place, method)
punct(management, ,)
cc(management, and)
compound(management, marketing)
conj(place, management)
punct(see, . )
nummod(problem, 1)
punct(1, .)
root(ROOT, problem)
case(market, in)
det(market, the)
nmod(problem, market)
amod(consciousness, greater)
compound(consciousness, price)
punct(consciousness, -)
nmod(problem, consciousness)
punct(problem, .)
expl(be, there)
aux(be, have)
root(ROOT, be)
det(intensification, a)
nsubj(be, intensification)
case(consciousness, of)
compound(consciousness, price)
punct(consciousness, -)
nmod(intensification, consciousness)
case(year, in)
amod(year, recent)
nmod(intensification, year)
punct(be, ;)
punct(be, ;)
expl(be, there)
parataxis(be, be)
det(indication, every)
nsubj(be, indication)
nsubj(continue, it)
aux(continue, will)
acl:relcl(indication, continue)
punct(be, . )
advmod(foster, frequently)
punct(foster, ,)
advmod(foster, wittingly)
cc(unwittingly, or)
conj(wittingly, unwittingly)
punct(foster, ,)
compound(consciousness, price)
punct(consciousness, -)
nsubj:pass(foster, consciousness)
aux(foster, have)
aux:pass(foster, be)
root(ROOT, foster)
case(manufacturer, by)
obl(foster, manufacturer)
punct(distributor, ,)
conj(manufacturer, distributor)
punct(dealer, ,)
cc(dealer, and)
conj(manufacturer, dealer)
punct(manufacturer, .)
case(level, despite)
advmod(good, generally)
amod(level, good)
obl(see, level)
case(income, of)
nmod(level, income)
punct(see, ,)
nsubj(see, we)
parataxis(foster, see)
amod(pressure, greater)
compound(pressure, price)
obj(see, pressure)
case(ever, than)
advmod(before, ever)
advmod(pressure, before)
punct(see, --)
advcl(see, travel)
advmod(travel, back)
case(chain, along)
det(chain, the)
obl(travel, chain)
case(consumer, from)
obl(travel, consumer)
case(distributor, to)
obl(travel, distributor)
case(manufacturer, to)
obl(travel, manufacturer)
punct(foster, .)
root(ROOT, here)
cop(here, be)
det(area, some)
amod(area, key)
nsubj(here, area)
mark(examine, to)
acl(area, examine)
mark(make, to)
xcomp(examine, make)
xcomp(make, sure)
nmod:poss(strategy, you)
compound(strategy, pricing)
nsubj(target, strategy)
aux(target, will)
cop(target, be)
case(target, on)
ccomp(sure, target)
punct(here, :)
aux(forecast, have)
det(situation, the)
amod(situation, probable)
compound(situation, price)
nsubj:pass(forecast, situation)
case(field, in)
nmod:poss(field, you)
nmod(situation, field)
aux:pass(forecast, be)
parataxis(target, forecast)
case(basis, as)
det(basis, a)
obl(forecast, basis)
case(planning, for)
amod(planning, future)
nmod(basis, planning)
punct(here, ?)
punct(here, ?)
aux(make, have)
compound(study, cost)
nsubj:pass(make, study)
aux:pass(make, be)
root(ROOT, make)
case(phase, of)
det(phase, every)
obl(make, phase)
case(operation, of)
nmod:poss(operation, you)
nmod(phase, operation)
mark(determine, to)
advcl(make, determine)
nsubj:pass(do, what)
aux(do, might)
aux:pass(do, be)
ccomp(determine, do)
mark(get, if)
nsubj(get, thing)
advcl(do, get)
xcomp(get, worse)
punct(make, ?)
punct(make, ?)
aux(check, have)
nsubj(check, you)
advmod(check, actually)
root(ROOT, check)
compound:prt(check, out)
punct(test, ()
advmod(just, not)
advmod(test, just)
advmod(test, mentally)
amod(approach, test)
punct(test, ))
amod(approach, different)
compound(approach, sell)
obj(check, approach)
acl(approach, design)
mark(counter, to)
advcl(design, counter)
det(problem, the)
compound(competition, price)
compound(problem, competition)
obj(counter, problem)
punct(check, ?)
punct(check, ?)
amod(sophistication, increase)
compound(sophistication, customer)
root(ROOT, sophistication)
punct(sophistication, .)
amod(consumer, average)
nsubj(become, consumer)
aux(become, be)
root(ROOT, become)
advmod(sophisticated, more)
xcomp(become, sophisticated)
case(claim, regard)
compound(claim, product)
cc(advertising, and)
conj(product, advertising)
obl(sophisticated, claim)
punct(sophisticated, ,)
advmod(criticism, partly)
case(criticism, because)
fixed(because, of)
amod(criticism, widespread)
obl(sophisticated, criticism)
case(assertion, of)
amod(assertion, such)
nmod(criticism, assertion)
punct(become, .)
det(problem, this)
nsubj(force, problem)
aux(force, can)
root(ROOT, force)
det(change, a)
obj(force, change)
case(approach, in)
compound(approach, marketing)
nmod(change, approach)
case(kind, in)
amod(kind, many)
obl(force, kind)
case(business, of)
nmod(kind, business)
punct(force, .)
aux(examine, have)
nsubj(examine, you)
root(ROOT, examine)
det(problem, this)
obj(examine, problem)
mark(increase, of)
acl(problem, increase)
compound(sophistication, consumer)
obj(increase, sophistication)
case(standpoint, from)
det(standpoint, the)
obl(increase, standpoint)
case(company, of)
nmod:poss(company, you)
amod(company, own)
nmod(standpoint, company)
punct(examine, ?)
punct(examine, ?)
amod(demand, Greater)
root(ROOT, demand)
case(service, for)
nmod(demand, service)
punct(demand, .)
root(ROOT, need)
case(service, for)
obl(need, service)
cop(here, be)
ccomp(need, here)
mark(stay, to)
advcl(here, stay)
punct(here, --)
cc(go, and)
det(problem, the)
nsubj(go, problem)
aux(go, be)
conj(here, go)
mark(tougher, to)
cop(tougher, be)
xcomp(go, tougher)
mark(solve, to)
advcl(tougher, solve)
case(sixty, in)
det(sixty, the)
obl(solve, sixty)
punct(need, .)
expl(be, there)
root(ROOT, be)
nummod(reason, two)
nsubj(be, reason)
case(this, for)
nmod(reason, this)
punct(be, .)
advmod(tend, first)
punct(tend, ,)
amod(product, most)
nsubj(tend, product)
root(ROOT, tend)
mark(become, to)
xcomp(tend, become)
advmod(complex, more)
xcomp(become, complex)
punct(tend, .)
advmod(feel, second)
punct(feel, ,)
case(market, in)
det(market, a)
amod(market, competitive)
obl(feel, market)
punct(feel, ,)
det(customer, the)
nsubj(feel, customer)
root(ROOT, feel)
nmod:poss(weight, he)
obj(feel, weight)
cc(throw, and)
conj(feel, throw)
obj(throw, it)
advmod(throw, around)
punct(feel, .)
csubj(require, provide)
amod(service, good)
compound(service, customer)
obj(provide, service)
root(ROOT, require)
mark(thorough, as)
advcl(require, thorough)
det(marketing, a)
obj(thorough, marketing)
cc(job, and)
amod(management, general)
compound(job, management)
compound(job, planning)
conj(marketing, job)
case(sell, as)
det(sell, the)
amod(sell, original)
nmod(job, sell)
case(product, of)
det(product, the)
nmod(sell, product)
punct(require, .)
advmod(often, too)
advmod(think, often)
nsubj:pass(think, it)
aux:pass(think, be)
root(ROOT, think)
obl(think, of)
case(moment, at)
det(moment, the)
amod(moment, last)
obl(think, moment)
case(introduction, of)
amod(introduction, new)
compound(introduction, product)
nmod(moment, introduction)
punct(think, .)
amod(service, good)
nsubj(start, service)
root(ROOT, start)
case(design, with)
compound(design, product)
obl(start, design)
cc(planning, and)
conj(design, planning)
punct(start, :)
amod(product, many)
nsubj(seem, product)
root(ROOT, seem)
mark(design, to)
aux:pass(design, be)
xcomp(seem, design)
case(economy, for)
det(economy, a)
compound(economy, production)
obl(design, economy)
punct(economy, ,)
cc(one, not)
case(one, for)
det(one, a)
compound(one, service)
conj(economy, one)
punct(seem, .)
amod(follow, Proper)
nsubj(require, follow)
punct(follow, -)
compound:prt(follow, through)
root(ROOT, require)
xcomp(require, train)
nmod:poss(organization, you)
amod(organization, own)
compound(organization, sale)
obj(train, organization)
punct(organization, ,)
cc(organization, and)
nmod:poss(organization, you)
compound(organization, distributor)
conj(organization, organization)
punct(organization, ,)
advmod(only, not)
cc:preconj(technique, only)
case(technique, in)
det(technique, the)
nmod(organization, technique)
cc(relation, but)
advmod(relation, also)
case(relation, in)
amod(relation, good)
compound(relation, customer)
conj(technique, relation)
punct(require, .)
aux(assess, have)
nsubj(assess, you)
root(ROOT, assess)
det(importance, the)
obj(assess, importance)
case(service, of)
nmod(importance, service)
cc(give, and)
conj(assess, give)
iobj(give, it)
amod(attention, proper)
obj(give, attention)
punct(assess, ?)
punct(assess, ?)
amod(choice, Wider)
amod(choice, discretionary)
root(ROOT, choice)
case(customer, for)
nmod(choice, customer)
punct(choice, .)
mark(spend, in)
advcl(pull, spend)
nmod:poss(money, he)
obj(spend, money)
obl:tmod(spend, today)
punct(pull, ,)
det(consumer, the)
nsubj:pass(pull, consumer)
aux:pass(pull, be)
root(ROOT, pull)
case(direction, in)
amod(direction, many)
obl(pull, direction)
punct(pull, .)
case(manufacturer, to)
det(manufacturer, the)
obl(important, manufacturer)
case(product, of)
det(product, the)
advmod(type, more)
amod(type, convenient)
punct(type, -)
compound(product, type)
nmod(manufacturer, product)
punct(product, --)
det(purchase, the)
nsubj(important, purchase)
case(which, of)
obl(switch, which)
aux(switch, can)
aux:pass(switch, be)
acl:relcl(purchase, switch)
punct(delay, ,)
conj(switch, delay)
punct(put, ,)
cc(put, or)
conj(switch, put)
compound:prt(put, off)
advmod(put, entirely)
punct(important, --)
det(implication, the)
nsubj(important, implication)
cop(important, be)
root(ROOT, important)
punct(important, .)
nmod:poss(competition, you)
nsubj(greater, competition)
cop(greater, be)
advmod(greater, now)
advmod(greater, proportionately)
root(ROOT, greater)
punct(greater, --)
nsubj(compete, you)
aux(compete, be)
parataxis(greater, compete)
advmod(only, not)
cc:preconj(manufacturer, only)
case(manufacturer, against)
obl(compete, manufacturer)
case(field, in)
det(field, the)
amod(field, same)
nmod(manufacturer, field)
cc(array, but)
advmod(array, also)
case(array, against)
det(array, a)
amod(array, vast)
conj(compete, array)
case(manufacturer, of)
nmod(array, manufacturer)
case(product, of)
amod(product, other)
amod(product, appeal)
compound(product, consumer)
nmod(manufacturer, product)
punct(greater, .)
amod(association, many)
compound(association, industry)
compound(association, trade)
nsubj(develop, association)
aux(develop, be)
root(ROOT, develop)
obj(develop, campaign)
mark(protect, to)
xcomp(develop, protect)
cc(enhance, or)
conj(protect, enhance)
det(share, the)
obj(protect, share)
case(dollar, of)
det(consumer, the)
nmod:poss(dollar, consumer)
case(consumer, 's)
nmod(share, dollar)
aux:pass(spend, be)
acl(dollar, spend)
case(product, on)
nmod:poss(product, they)
amod(product, particular)
obl(spend, product)
punct(develop, .)
aux(think, have)
nmod:poss(company, you)
nsubj(think, company)
root(ROOT, think)
case(strategy, through)
nsubj(strategy, it)
cop(strategy, be)
ccomp(think, strategy)
case(area, in)
det(area, this)
amod(area, whole)
punct(buying, ``)
amod(buying, discretionary)
compound(area, buying)
punct(buying, '')
nmod(strategy, area)
punct(strategy, ?)
punct(shift, ?)
amod(shift, Geographic)
appos(strategy, shift)
case(customer, of)
nmod(shift, customer)
punct(think, .)
det(trend, the)
nsubj(evidence, trend)
aux(evidence, have)
cop(evidence, be)
case(evidence, in)
root(ROOT, evidence)
case(year, for)
amod(year, many)
nmod(evidence, year)
punct(evidence, --)
compound(shift, population)
parataxis(evidence, shift)
case(Southwest, to)
det(Southwest, the)
nmod(shift, Southwest)
cc(West, and)
compound(West, Far)
conj(Southwest, West)
punct(city, ,)
cc(city, and)
case(city, from)
conj(shift, city)
case(suburb, to)
nmod(city, suburb)
punct(evidence, .)
det(shift, these)
nsubj(continue, shift)
aux(continue, will)
root(ROOT, continue)
case(year, in)
det(year, the)
amod(year, next)
nummod(year, 10)
obl(continue, year)
punct(continue, .)
punct(continue, .)
aux(consider, have)
nsubj(consider, you)
root(ROOT, consider)
det(implication, the)
obj(consider, implication)
mark(continue, of)
acl(implication, continue)
amod(shift, geographic)
obj(continue, shift)
case(term, in)
obl(continue, term)
case(allocation, of)
compound(force, sale)
compound(allocation, force)
nmod(term, allocation)
punct(strength, ,)
conj(allocation, strength)
case(organization, of)
compound(organization, distributor)
nmod(strength, organization)
punct(location, ,)
cc(location, and)
advmod(location, even)
compound(location, plant)
conj(allocation, location)
punct(consider, ?)
punct(consider, ?)
compound(concentration, market)
root(ROOT, concentration)
cc(distribution, and)
conj(concentration, distribution)
case(account, in)
amod(account, fewer)
nmod(concentration, account)
punct(concentration, .)
nsubj(witness, we)
aux(witness, have)
advmod(witness, already)
root(ROOT, witness)
amod(change, great)
obj(witness, change)
case(merger, through)
nmod(change, merger)
cc(acquisition, and)
conj(merger, acquisition)
case(industry, in)
det(industry, the)
compound(industry, food)
nmod(merger, industry)
punct(witness, --)
case(end, at)
cc:preconj(end, both)
det(end, the)
compound(end, manufacturing)
cc(retail, and)
conj(manufacturing, retail)
obl(witness, end)
punct(witness, .)
case(sale, instead)
case(sale, of)
advmod(small, relatively)
amod(sale, small)
obl(be, sale)
case(account, to)
amod(account, many)
nmod(sale, account)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(be, now)
amod(sale, larger)
nsubj(be, sale)
case(account, to)
cc(account, or)
case(account, through)
amod(account, fewer)
nmod(sale, account)
punct(be, .)
det(change, the)
nsubj(require, change)
aux(require, may)
root(ROOT, require)
amod(product, different)
obj(require, product)
punct(pricing, ,)
conj(product, pricing)
punct(package, ,)
conj(product, package)
punct(warehousing, ,)
conj(product, warehousing)
punct(salesmanship, ,)
conj(product, salesmanship)
punct(advertising, ,)
conj(product, advertising)
cc(attention, and)
amod(attention, executive)
conj(product, attention)
punct(require, --)
advmod(have, practically)
det(link, every)
nsubj(have, link)
case(network, in)
det(network, the)
compound(network, marketing)
nmod(link, network)
aux(have, may)
parataxis(require, have)
mark(adjust, to)
aux:pass(adjust, be)
xcomp(have, adjust)
punct(require, .)
aux(examine, have)
nsubj(examine, you)
root(ROOT, examine)
det(trend, these)
obj(examine, trend)
punct(forecast, ,)
conj(examine, forecast)
det(effect, the)
obj(forecast, effect)
punct(plan, ,)
cc(plan, and)
conj(examine, plan)
nmod:poss(strategy, you)
compound(strategy, marketing)
obj(plan, strategy)
mark(compete, to)
xcomp(plan, compete)
advmod(compete, effectively)
case(circumstance, under)
amod(circumstance, change)
obl(compete, circumstance)
punct(2, ?)
punct(problem, ? )
nummod(problem, 2)
punct(2, .)
parataxis(examine, problem)
case(method, in)
compound(method, marketing)
nmod(problem, method)
advmod(private, more)
amod(competition, private)
compound(competition, label)
conj(problem, competition)
punct(problem, .)
case(area, in)
det(area, the)
obl(logical, area)
case(competition, of)
amod(label, private)
compound(competition, label)
nmod(area, competition)
punct(logical, ,)
expl(logical, it)
cop(logical, be)
root(ROOT, logical)
mark(expect, to)
csubj(logical, expect)
det(continuation, a)
obj(expect, continuation)
case(trend, of)
nmod(continuation, trend)
nsubj(way, which)
aux(way, have)
cop(way, be)
case(way, under)
acl:relcl(trend, way)
case(decade, during)
det(decade, the)
amod(decade, first)
obl(way, decade)
punct(logical, .)
mark(grow, as)
amod(dealer, mass)
nsubj(grow, dealer)
cc(organization, and)
compound(organization, distributor)
conj(dealer, organization)
advcl(be, grow)
case(size, in)
obl(grow, size)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(reason, every)
nsubj(be, reason)
mark(expect, to)
acl(reason, expect)
obj(expect, they)
mark(try, to)
xcomp(expect, try)
mark(share, to)
xcomp(try, share)
case(manufacturer, in)
det(manufacturer, the)
obl(share, manufacturer)
case(manufacturer, 's)
cc(profit, as)
fixed(as, well)
fixed(as, as)
det(distributor, the)
nmod:poss(profit, distributor)
case(distributor, 's)
obl(share, profit)
punct(profit, --)
nsubj(be, which)
acl:relcl(profit, be)
punct(profit, ,)
case(effect, in)
obl(what, effect)
punct(what, ,)
acl:relcl(profit, what)
det(sale, the)
nsubj(tend, sale)
case(brand, of)
amod(brand, private)
nmod(sale, brand)
acl:relcl(what, tend)
mark(do, to)
xcomp(tend, do)
punct(help, .)
amod(manufacturer, average)
nsubj(help, manufacturer)
advmod(help, frequently)
aux(help, have)
conj(tend, help)
xcomp(help, build)
amod(business, private)
compound(business, brand)
obj(build, business)
punct(build, ,)
advcl(build, deliver)
advmod(quality, largely)
det(quality, the)
amod(quality, same)
obj(deliver, quality)
cc(style, and)
conj(quality, style)
case(merchandise, in)
amod(merchandise, private)
compound(merchandise, brand)
nmod(quality, merchandise)
mark(brand, as)
fixed(as, in)
amod(merchandise, brand)
punct(quality, .)
advmod(insist, moreover)
punct(insist, ,)
det(outlet, the)
amod(outlet, larger)
cc(aggressive, and)
advmod(aggressive, more)
conj(larger, aggressive)
compound(distribution, mass)
compound(outlet, distribution)
nsubj(insist, outlet)
cc(store, and)
compound(store, chain)
conj(outlet, store)
aux(insist, have)
conj(help, insist)
case(quality, on)
amod(quality, high)
obl(insist, quality)
punct(insist, --)
cc(seem, and)
det(customer, the)
nsubj(seem, customer)
conj(insist, seem)
mark(catch, to)
aux(catch, have)
xcomp(seem, catch)
compound:prt(catch, on)
punct(be, .)
mark(up, if)
nsubj(up, you)
cop(up, be)
advcl(formulate, up)
case(competition, against)
amod(competition, private)
compound(competition, brand)
obl(up, competition)
punct(formulate, ,)
aux(formulate, have)
nsubj(formulate, you)
root(ROOT, formulate)
det(program, a)
amod(term, long)
punct(term, -)
compound(program, term)
obj(formulate, program)
mark(research, for)
acl(program, research)
cc(strengthen, and)
conj(research, strengthen)
nmod:poss(position, you)
compound(position, market)
obj(strengthen, position)
punct(formulate, ?)
punct(formulate, ?)
mark(feel, if)
amod(competition, private)
compound(competition, brand)
nsubj:pass(feel, competition)
aux(feel, have)
advmod(feel, not)
aux:pass(feel, be)
advcl(think, feel)
case(field, in)
nmod:poss(field, you)
compound(field, product)
obl(feel, field)
advmod(feel, as)
fixed(as, yet)
punct(think, ,)
aux(think, have)
nsubj(think, you)
root(ROOT, think)
advmod(cope, how)
nsubj(cope, you)
aux(cope, will)
ccomp(think, cope)
case(it, with)
obl(cope, it)
mark(appear, if)
cc(appear, and)
mark(appear, when)
nsubj(appear, it)
aux(appear, do)
advcl(cope, appear)
punct(think, ?)
punct(think, ?)
advmod(salesmanship, less)
amod(salesmanship, personal)
nsubj(continue, salesmanship)
punct(salesmanship, .)
compound(merchandising, Display)
nsubj(continue, merchandising)
punct(merchandising, ,)
acl(merchandising, back)
mark(pre-selling, by)
advcl(back, pre-selling)
case(advertising, through)
obl(pre-selling, advertising)
cc(promotion, and)
conj(advertising, promotion)
punct(continue, ,)
aux(continue, will)
root(ROOT, continue)
mark(make, to)
xcomp(continue, make)
obj(make, stride)
case(sixty, in)
det(sixty, the)
obl(make, sixty)
punct(continue, .)
nsubj(have, it)
root(ROOT, have)
amod(implication, multiple)
obj(have, implication)
cc(headach, and)
amod(headach, possible)
conj(implication, headach)
case(program, for)
nmod:poss(program, you)
compound(program, marketing)
nmod(implication, program)
punct(have, .)
advmod(cash, how)
aux(cash, can)
nsubj(cash, you)
root(ROOT, cash)
compound:prt(cash, in)
case(type, on)
det(type, this)
amod(grow, fast)
punct(grow, -)
amod(type, grow)
obl(cash, type)
case(outlet, of)
nmod(type, outlet)
cc(maintain, and)
advmod(maintain, still)
conj(cash, maintain)
obj(maintain, relationship)
case(outlet, with)
amod(outlet, older)
amod(outlet, exist)
nmod(relationship, outlet)
nsubj(important, which)
cop(important, be)
advmod(important, still)
acl:relcl(outlet, important)
punct(cash, ?)
punct(cash, ?)
mark(have, if)
nsubj(have, you)
advcl(make, have)
det(product, a)
amod(quality, higher)
punct(quality, -)
compound(product, quality)
obj(have, product)
punct(make, ,)
advmod(make, how)
aux(make, can)
nsubj(make, you)
root(ROOT, make)
obj(make, it)
xcomp(make, stand)
compound:prt(stand, out)
punct(make, --)
parataxis(make, justify)
obj(justify, it)
cop(price, be)
compound(price, premium)
obj(justify, price)
punct(price, --)
case(word, without)
det(word, the)
amod(word, speak)
obl(price, word)
punct(word, ?)
punct(necessary, ?)
nsubj(necessary, Salesmanship)
cop(necessary, be)
advmod(necessary, still)
parataxis(make, necessary)
punct(brand, ,)
cc(brand, but)
nsubj(brand, it)
cop(brand, be)
det(brand, a)
amod(brand, different)
conj(necessary, brand)
case(salesmanship, of)
nmod(brand, salesmanship)
punct(make, .)
aux(examine, have)
nsubj(examine, you)
advmod(examine, carefully)
root(ROOT, examine)
det(technique, the)
compound(technique, sell)
obj(examine, technique)
nsubj(suit, which)
nsubj(suit, best)
acl:relcl(technique, suit)
nmod:poss(product, you)
obj(suit, product)
punct(examine, ?)
punct(examine, ?)
aux(study, have)
nsubj(study, you)
root(ROOT, study)
det(approach, the)
compound(approach, caliber)
cc(sale, and)
conj(caliber, sale)
obj(study, approach)
case(force, of)
nmod:poss(force, you)
compound(force, sale)
nmod(approach, force)
case(relation, in)
obl(study, relation)
case(requirement, to)
nmod(relation, requirement)
case(marketing, for)
amod(marketing, effective)
nmod(requirement, marketing)
punct(study, ?)
punct(study, ?)
aux(experiment, be)
nsubj(experiment, you)
root(ROOT, experiment)
case(slant, with)
amod(slant, different)
compound(slant, sell)
obl(experiment, slant)
mark(develop, in)
acl(slant, develop)
amod(customer, new)
obj(develop, customer)
punct(experiment, ?)
punct(experiment, ?)
amod(cost, Higher)
root(ROOT, cost)
case(distribution, of)
nmod(cost, distribution)
advmod(cost, generally)
punct(cost, .)
det(cost, some)
compound(cost, distribution)
nsubj:pass(keep, cost)
aux:pass(keep, be)
root(ROOT, keep)
compound:prt(keep, up)
case(pressure, by)
amod(pressure, competitive)
obl(keep, pressure)
punct(keep, ,)
obl:npmod(keep, some)
case(fact, by)
det(fact, the)
obl(keep, fact)
mark(come, that)
det(customer, the)
nsubj(come, customer)
aux(come, have)
acl(fact, come)
mark(expect, to)
xcomp(come, expect)
amod(nicety, certain)
obj(expect, nicety)
cc(flourish, and)
conj(nicety, flourish)
punct(keep, .)
det(manufacturer, no)
nsubj(take, manufacturer)
aux(take, have)
root(ROOT, take)
det(initiative, the)
obj(take, initiative)
mark(point, in)
advcl(take, point)
compound:prt(point, out)
det(cost, the)
obj(point, cost)
acl(cost, involve)
punct(take, .)
det(use, the)
nsubj(grow, use)
case(handling, of)
compound(handling, bulk)
nmod(use, handling)
aux(grow, be)
advmod(grow, continuously)
root(ROOT, grow)
punct(grow, .)
nsubj:pass(use, Computers)
aux(use, be)
aux:pass(use, be)
root(ROOT, use)
mark(keep, to)
advcl(use, keep)
compound(inventory, branch)
obj(keep, inventory)
case(level, at)
advmod(workable, more)
amod(level, workable)
obl(keep, level)
punct(use, .)
punct(use, ``)
amod(sell, selective)
nsubj:pass(use, sell)
punct(sell, '')
punct(sell, --)
acl(sell, concentrate)
obj(concentrate, sale)
case(account, on)
det(account, the)
amod(account, larger)
nmod(sale, account)
punct(use, --)
aux(use, have)
aux:pass(use, be)
root(ROOT, use)
advmod(use, effectively)
case(manufacturer, by)
det(manufacturer, some)
obl(use, manufacturer)
punct(use, .)
expl(be, there)
aux(be, may)
root(ROOT, be)
amod(economy, possible)
nsubj(be, economy)
case(one, at)
det(one, any)
nmod(economy, one)
case(number, of)
det(number, a)
nmod(one, number)
case(link, of)
nmod(number, link)
case(marketing, in)
nmod:poss(marketing, you)
nmod(link, marketing)
cc(distribution, and)
conj(marketing, distribution)
conj(marketing, chain)
punct(be, .)
aux(have, do)
nsubj(have, you)
root(ROOT, have)
det(program, a)
obj(have, program)
mark(scrutinize, for)
acl(program, scrutinize)
det:predet(link, all)
det(link, these)
obj(scrutinize, link)
advmod(scrutinize, regularly)
cc(carefully, and)
conj(regularly, carefully)
punct(scrutinize, --)
cc(imagination, and)
case(imagination, with)
det(imagination, some)
obl(carefully, imagination)
punct(have, ?)
punct(have, ?)
case(force, in)
nmod:poss(force, you)
compound(force, sale)
obl(serve, force)
punct(serve, ,)
aux(serve, will)
det(number, a)
amod(number, smaller)
nsubj(serve, number)
case(salesmen, of)
amod(price, higher)
punct(price, -)
amod(salesmen, price)
punct(salesmen, ,)
amod(quality, high)
punct(quality, -)
compound(salesmen, quality)
nmod(number, salesmen)
root(ROOT, serve)
obj(serve, you)
xcomp(serve, best)
punct(make, ,)
cc(make, or)
aux(make, can)
nsubj(make, you)
conj(serve, make)
compound:prt(make, out)
xcomp(make, better)
case(number, with)
det(number, a)
amod(number, larger)
obl(better, number)
case(salesmen, of)
amod(pay, lower)
punct(pay, -)
amod(salesmen, pay)
nmod(number, salesmen)
punct(serve, ?)
punct(serve, ?)
aux(settle, will)
nmod:poss(customer, you)
compound(customer, trade)
nsubj(settle, customer)
root(ROOT, settle)
case(attention, for)
amod(attention, less)
obl(settle, attention)
cc(frill, and)
amod(frill, fewer)
conj(attention, frill)
case(return, in)
obl(settle, return)
case(benefit, for)
det(benefit, some)
nmod(return, benefit)
nsubj(share, they)
aux(share, can)
acl:relcl(benefit, share)
punct(settle, ?)
punct(settle, ?)
case(company, in)
nummod(company, one)
obl(phone, company)
acl(company, cover)
det(country, the)
obj(cover, country)
case(force, with)
det(force, a)
amod(quality, high)
punct(quality, -)
compound(force, quality)
compound(force, sale)
obl(cover, force)
case(man, of)
nummod(man, 10)
nmod(force, man)
punct(phone, ,)
det(president, the)
nsubj(phone, president)
advmod(phone, personally)
root(ROOT, phone)
det(account, each)
amod(account, major)
obj(phone, account)
det(mos, every)
nummod(mos, 6)
obl:tmod(phone, mos)
punct(phone, .)
punct(phone, .)
case(result, as)
det(result, a)
obl(cut, result)
punct(cut, ,)
compound(cost, distribution)
nsubj:pass(cut, cost)
aux:pass(cut, be)
root(ROOT, cut)
punct(cut, ,)
compound(relation, customer)
nsubj(improve, relation)
parataxis(cut, improve)
punct(cut, .)
compound(cost, distribution)
nsubj(bound, cost)
cop(bound, be)
advmod(bound, almost)
root(ROOT, bound)
mark(increase, to)
advcl(bound, increase)
case(sixty, in)
det(sixty, the)
obl(increase, sixty)
punct(bound, --)
cc(know, and)
nsubj(know, you)
aux(know, will)
advmod(know, never)
conj(bound, know)
obj(do, what)
nsubj(do, you)
aux(do, can)
ccomp(know, do)
mark(control, to)
xcomp(do, control)
obj(control, they)
mark(study, unless)
nsubj(study, you)
advcl(control, study)
det(element, each)
obj(study, element)
cc(experiment, and)
conj(study, experiment)
case(way, with)
amod(way, alternative)
obl(experiment, way)
mark(do, of)
acl(way, do)
det(job, the)
obj(do, job)
punct(bound, .)
amod(cost, Higher)
root(ROOT, cost)
case(advertising, of)
nmod(cost, advertising)
cc(promotion, and)
conj(advertising, promotion)
punct(cost, .)
case(point, from)
det(manufacturer, the)
nmod:poss(point, manufacturer)
case(manufacturer, 's)
obl(problem, point)
case(view, of)
nmod(point, view)
punct(problem, ,)
det(cost, the)
amod(cost, increase)
nsubj(problem, cost)
case(advertising, of)
nmod(cost, advertising)
cc(promotion, and)
conj(advertising, promotion)
cop(problem, be)
det(problem, a)
advmod(real, very)
amod(problem, real)
root(ROOT, problem)
mark(face, to)
aux:pass(face, be)
acl(problem, face)
case(sixty, in)
det(sixty, the)
obl(face, sixty)
punct(problem, .)
nsubj:pass(accentuate, it)
aux:pass(accentuate, be)
root(ROOT, accentuate)
case(need, by)
det(need, the)
obl(accentuate, need)
case(goods, for)
amod(goods, pre-selling)
nmod(need, goods)
punct(competition, ,)
cc(competition, and)
amod(competition, private)
compound(competition, label)
conj(goods, competition)
punct(accentuate, .)
advmod(much, how)
amod(thinking, much)
amod(thinking, fundamental)
nsubj(have, thinking)
cc(research, and)
conj(thinking, research)
root(ROOT, have)
nmod:poss(company, you)
obj(have, company)
xcomp(have, do)
case(program, on)
nmod:poss(program, its)
compound(program, advertising)
obl(do, program)
punct(have, ?)
punct(have, ?)
aux(follow, be)
nsubj(follow, you)
root(ROOT, follow)
obj(follow, competition)
obj(follow, willy)
punct(follow, -)
advmod(follow, nilly)
punct(follow, --)
parataxis(follow, try)
mark(match, to)
xcomp(try, match)
obj(match, dollar)
case(dollar, for)
obl(match, dollar)
punct(follow, --)
cc(experiment, or)
aux(experiment, be)
nsubj(experiment, you)
conj(follow, experiment)
case(means, with)
amod(means, new)
obl(experiment, means)
mark(reach, for)
acl(means, reach)
cc(influence, and)
conj(reach, influence)
obj(influence, consumer)
punct(follow, ?)
punct(follow, ?)
aux(evaluate, have)
nsubj(evaluate, you)
root(ROOT, evaluate)
det(place, the)
amod(place, proper)
obj(evaluate, place)
case(advertising, of)
nmod(place, advertising)
cc(phase, and)
det(phase, all)
conj(place, phase)
case(promotion, of)
nmod(phase, promotion)
case(program, in)
nmod:poss(program, you)
amod(program, total)
compound(program, marketing)
nmod(phase, program)
punct(evaluate, --)
case(standpoint, from)
det(standpoint, the)
obl(evaluate, standpoint)
case(effort, of)
nmod(standpoint, effort)
punct(money, ,)
conj(effort, money)
punct(effectiveness, ,)
cc(effectiveness, and)
conj(effort, effectiveness)
punct(evaluate, ?)
punct(evaluate, ?)
csubj(mention, increase)
obj(increase, tempo)
case(development, of)
amod(development, new)
compound(development, product)
nmod(tempo, development)
punct(mention, .)
advmod(mention, practically)
det(forecast, all)
nsubj(mention, forecast)
root(ROOT, mention)
amod(product, new)
cc(exciting, and)
conj(new, exciting)
obj(mention, product)
case(horizon, on)
det(horizon, the)
obl(mention, horizon)
punct(mention, .)
aux(out, will)
nsubj(out, you)
cop(out, be)
root(ROOT, out)
case(place, in)
det(place, the)
compound(place, market)
obl(out, place)
case(some, with)
nmod(place, some)
case(sale, of)
det(sale, these)
nmod(some, sale)
punct(place, -)
parataxis(place, build)
amod(product, new)
obj(build, product)
punct(out, ?)
punct(out, ?)
mark(beat, if)
nsubj(beat, competition)
advcl(have, beat)
obj(beat, you)
case(it, to)
obl(beat, it)
punct(have, ,)
det(era, this)
amod(era, exciting)
amod(era, new)
compound(era, product)
nsubj(have, era)
aux(have, can)
root(ROOT, have)
amod(headach, real)
obj(have, headach)
case(store, in)
nmod(headach, store)
punct(have, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(expensive, hand)
punct(expensive, ,)
det(process, the)
nsubj(expensive, process)
mark(obsoleting, of)
acl(process, obsoleting)
det(product, a)
amod(product, old)
obj(obsoleting, product)
cc(introduce, and)
conj(obsoleting, introduce)
det(one, the)
amod(one, new)
obj(introduce, one)
cop(expensive, be)
advmod(expensive, usually)
advmod(expensive, mighty)
root(ROOT, expensive)
punct(expensive, .)
mark(become, as)
nsubj(become, market)
advcl(become, become)
xcomp(become, larger)
cc(marketing, and)
conj(larger, marketing)
amod(complex, more)
obj(marketing, complex)
punct(become, ,)
det(cost, the)
nsubj(become, cost)
case(error, of)
det(error, a)
nmod(cost, error)
root(ROOT, become)
advmod(larger, progressively)
xcomp(become, larger)
punct(larger, .)
cop(program, be)
nmod:poss(program, you)
compound(program, R)
cc(d, &)
conj(R, d)
cc(d, or)
compound(development, product)
compound(program, development)
root(ROOT, program)
acl(program, tune)
case(reality, in)
case(reality, to)
det(reality, the)
amod(reality, commercial)
obl(tune, reality)
case(market, of)
det(market, the)
nmod(reality, market)
punct(program, ?)
punct(program, ?)
root(ROOT, be)
expl(be, there)
amod(communication, regular)
nsubj(be, communication)
case(field, from)
det(field, the)
nmod(communication, field)
punct(meeting, ,)
cc(meeting, or)
conj(communication, meeting)
case(personnel, of)
compound(personnel, sale)
cc(marketing, and)
conj(sale, marketing)
nmod(meeting, personnel)
case(people, with)
compound(people, R)
cc(d, &)
conj(R, d)
nmod(personnel, people)
punct(be, ?)
punct(be, ?)
amod(knowledge, technical)
nsubj(thing, knowledge)
cop(thing, be)
det(thing, a)
amod(thing, wonderful)
parataxis(be, thing)
punct(useless, ,)
cc(useless, but)
expl(useless, it)
cop(useless, be)
conj(thing, useless)
mark(feed, unless)
nsubj(feed, it)
advmod(feed, eventually)
advcl(useless, feed)
det(register, the)
compound(register, cash)
obj(feed, register)
punct(be, .)
cop(individual, be)
nmod:poss(individual, there)
root(ROOT, individual)
case(organization, in)
nmod:poss(organization, you)
nmod(individual, organization)
nsubj(shepherd, who)
aux(shepherd, can)
acl:relcl(organization, shepherd)
det(product, a)
amod(product, new)
obj(shepherd, product)
case(commercialization, through)
case(commercialization, to)
obl(shepherd, commercialization)
punct(shepherd, ;)
punct(shepherd, ;)
nsubj(develop, who)
aux(develop, can)
parataxis(shepherd, develop)
amod(estimate, reliable)
obj(develop, estimate)
case(volume, of)
compound(volume, sale)
nmod(estimate, volume)
punct(production, ,)
conj(volume, production)
punct(cost, ,)
cc(cost, and)
compound(cost, distribution)
conj(volume, cost)
punct(estimate, ;)
punct(estimate, ;)
cc(translate, and)
conj(develop, translate)
det(whole, the)
obj(translate, whole)
case(profit, into)
obl(translate, profit)
cc(loss, and)
conj(profit, loss)
cc(sheet, and)
compound(sheet, balance)
compound(figure, sheet)
conj(profit, figure)
obj(act, which)
nsubj(act, management)
aux(act, can)
acl:relcl(figure, act)
compound:prt(act, on)
case(assurance, with)
det(assurance, some)
obl(act, assurance)
punct(individual, ?)
punct(individual, ?)
nsubj(see, we)
aux(see, have)
root(ROOT, see)
amod(product, good)
amod(product, new)
obj(see, product)
xcomp(see, shel)
mark(have, because)
det(one, no)
nsubj(have, one)
advcl(see, have)
det(assignment, the)
obj(have, assignment)
mark(develop, to)
acl(assignment, develop)
amod(fact, such)
obj(develop, fact)
cc(plan, and)
conj(fact, plan)
punct(see, --)
cc(make, and)
nsubj(make, management)
aux(make, could)
advmod(make, not)
conj(see, make)
compound:prt(make, up)
nmod:poss(mind, its)
obj(make, mind)
punct(see, . )
nummod(., 3)
punct(problem, .)
root(ROOT, problem)
case(shortage, in)
compound(management, marketing)
compound(shortage, management)
nmod(problem, shortage)
case(salesmen, of)
amod(salesmen, skilled)
nmod(shortage, salesmen)
punct(problem, .)
expl(be, there)
root(ROOT, be)
det(shortage, a)
nsubj(be, shortage)
case(salesmen, of)
nmod(shortage, salesmen)
obl:tmod(be, today)
punct(be, .)
case(future, in)
det(future, the)
obl(greater, future)
punct(greater, ,)
amod(demand, quantitative)
nsubj(greater, demand)
aux(greater, will)
cop(greater, be)
root(ROOT, greater)
case(expansion, because)
fixed(because, of)
det(expansion, the)
obl(greater, expansion)
case(economy, of)
det(economy, the)
nmod(expansion, economy)
punct(greater, ,)
cc(greater, and)
det(need, the)
amod(need, qualitative)
nsubj(greater, need)
aux(greater, will)
cop(greater, be)
conj(greater, greater)
advmod(greater, still)
punct(greater, .)
mark(do, while)
amod(company, many)
nsubj(do, company)
aux(do, have)
advcl(greater, do)
amod(work, fine)
obj(do, work)
mark(develop, in)
acl(work, develop)
compound(personnel, sale)
obj(develop, personnel)
punct(product, ,)
nsubj(product, much)
case(it, of)
nmod(much, it)
aux(product, have)
cop(product, be)
conj(do, product)
cc(training, rather)
fixed(rather, than)
compound(training, sale)
conj(product, training)
punct(greater, .)
cc(agree, nor)
aux(enough, have)
det(training, the)
nsubj(enough, training)
cop(enough, be)
root(ROOT, enough)
case(relation, in)
obl(enough, relation)
case(need, to)
det(need, the)
nmod(relation, need)
punct(enough, .)
amod(people, most)
compound(people, marketing)
nsubj(agree, people)
parataxis(enough, agree)
nsubj(go, it)
aux(go, be)
ccomp(agree, go)
mark(take, to)
xcomp(go, take)
amod(effort, redouble)
obj(take, effort)
mark(satisfy, to)
acl(effort, satisfy)
amod(requirement, future)
obj(satisfy, requirement)
punct(agree, .)
aux(estimate, have)
nsubj(estimate, you)
root(ROOT, estimate)
nmod:poss(need, you)
compound(need, sale)
compound(need, manpower)
obj(estimate, need)
case(future, for)
det(future, the)
nmod(need, future)
punct(quantitatively, ()
cc:preconj(quantitatively, both)
advmod(estimate, quantitatively)
cc(qualitatively, and)
conj(quantitatively, qualitatively)
punct(quantitatively, ))
punct(estimate, ?)
punct(estimate, ?)
aux(develop, have)
nmod:poss(company, you)
nsubj(develop, company)
root(ROOT, develop)
obj(develop, selection)
cc(process, and)
compound(process, training)
conj(selection, process)
nsubj:pass(gear, that)
aux:pass(gear, be)
acl:relcl(selection, gear)
mark(provide, to)
advcl(gear, provide)
det(caliber, the)
obj(provide, caliber)
case(salesmen, of)
nmod(caliber, salesmen)
nsubj(need, you)
aux(need, will)
acl:relcl(salesmen, need)
case(year, in)
det(year, the)
amod(year, next)
nummod(year, 10)
obl(need, year)
punct(develop, .)
punct(develop, ?)
punct(develop, ?)
root(ROOT, shortage)
case(talent, of)
compound(management, sale)
compound(talent, management)
nmod(shortage, talent)
punct(shortage, .)
case(complexity, with)
det(complexity, the)
amod(complexity, grow)
obl(job, complexity)
case(market, of)
nmod(complexity, market)
cc(intensity, and)
conj(market, intensity)
case(competition, of)
nmod(market, competition)
punct(management, ,)
compound(management, sale)
nsubj(job, management)
punct(management, ,)
mark(job, whether)
case(district, at)
det(district, the)
obl(job, district)
punct(region, ,)
conj(district, region)
cc(headquarters, or)
compound(level, headquarters)
conj(district, level)
punct(job, ,)
cop(job, be)
det(job, a)
amod(job, tough)
root(ROOT, job)
obl:tmod(job, today)
punct(job, --)
cc(tougher, and)
nsubj(tougher, it)
aux(tougher, will)
cop(tougher, be)
conj(job, tougher)
case(future, in)
det(future, the)
obl(tougher, future)
punct(tougher, .)
nsubj(tougher, Men)
amod(Men, qualified)
case(task, for)
det(task, the)
amod(task, broader)
obl(qualified, task)
case(manager, of)
compound(manager, marketing)
nmod(task, manager)
cop(scarce, be)
advmod(more, even)
advmod(scarce, more)
conj(qualified, scarce)
case(combination, due)
fixed(due, to)
det(combination, the)
amod(combination, demand)
obl(scarce, combination)
case(qualification, of)
nmod(combination, qualification)
acl(qualification, call)
obl(call, for)
case(type, by)
det(type, this)
obl(call, type)
case(management, of)
nmod(type, management)
obl(call, work)
punct(scarce, .)
det(growth, the)
nsubj(outdistanced, growth)
case(business, of)
nmod(growth, business)
aux(outdistanced, have)
root(ROOT, outdistanced)
det(supply, the)
amod(supply, available)
obj(outdistanced, supply)
punct(continue, ,)
cc(continue, and)
det(demand, the)
nsubj(continue, demand)
aux(continue, will)
conj(outdistanced, continue)
mark(exceed, to)
xcomp(continue, exceed)
det(supply, the)
obj(exceed, supply)
case(sixty, in)
det(sixty, the)
obl(exceed, sixty)
punct(outdistanced, .)
aux(have, do)
nmod:poss(company, you)
nsubj(have, company)
root(ROOT, have)
det(program, a)
obj(have, program)
mark(select, for)
acl(program, select)
cc(develop, and)
conj(select, develop)
compound(personnel, sale)
cc(management, and)
compound(management, marketing)
conj(sale, management)
obj(develop, personnel)
case(term, for)
det(term, the)
amod(term, longer)
obl(select, term)
punct(have, ?)
punct(have, ?)
aux(attract, do)
nmod:poss(climate, you)
compound(climate, management)
nsubj(attract, climate)
cc(plan, and)
nmod:poss(plan, you)
compound(plan, management)
compound(plan, compensation)
conj(climate, plan)
root(ROOT, attract)
cc(keep, and)
conj(attract, keep)
amod(notch, top)
punct(notch, -)
compound(people, notch)
compound(people, marketing)
obj(keep, people)
punct(attract, ?)
punct(attract, ?)
root(ROOT, complexity)
case(planning, of)
amod(planning, complete)
compound(planning, marketing)
nmod(complexity, planning)
punct(complexity, .)
det(problem, every)
amod(problem, single)
nsubj(related, problem)
acl(problem, touch)
case(far, on)
advmod(far, thus)
obl(touch, far)
cop(related, be)
root(ROOT, related)
case(planning, to)
amod(planning, good)
compound(planning, marketing)
obl(related, planning)
punct(related, .)
punct(related, ``)
nsubj(go, Hip-pocket)
punct(Hip-pocket, '')
nsubj(go, tactic)
aux(go, be)
root(ROOT, go)
mark(harder, to)
cop(harder, be)
xcomp(go, harder)
mark(apply, to)
advcl(harder, apply)
punct(go, .)
amod(food, many)
nsubj(basis, food)
cc(company, and)
compound(company, beverage)
conj(food, company)
cop(basis, be)
advmod(basis, already)
case(basis, on)
det(basis, a)
advmod(plan, highly)
amod(basis, plan)
root(ROOT, basis)
punct(basis, .)
nsubj(have, they)
root(ROOT, have)
mark(be, to)
xcomp(have, be)
punct(have, .)
case(investment, with)
amod(investment, greater)
obl(be, investment)
case(facility, in)
compound(facility, plant)
nmod(investment, facility)
punct(investment, ,)
case(automation, with)
nsubj(grow, automation)
advcl(switch, grow)
punct(have, ,)
nsubj(switch, you)
aux(switch, can)
advmod(switch, not)
parataxis(have, switch)
advmod(switch, around)
punct(switch, ,)
cc:preconj(volume, either)
case(volume, in)
obl(switch, volume)
cc(design, or)
case(design, in)
compound(design, product)
conj(volume, design)
punct(much, ,)
advmod(much, as)
conj(volume, much)
mark(possible, as)
cop(possible, be)
advmod(possible, formerly)
advcl(much, possible)
punct(much, --)
cc(economically, or)
advmod(as, at)
fixed(at, least)
advmod(economically, not)
advmod(possible, as)
fixed(as, economically)
punct(have, .)
aux(plan, be)
root(ROOT, plan)
cc(strategy, and)
compound(development, strategy)
obj(plan, development)
acl(development, emphasize)
advmod(emphasize, sufficiently)
case(company, in)
nmod:poss(company, you)
obl(emphasize, company)
punct(plan, ?)
punct(plan, ?)
nsubj(find, we)
root(ROOT, find)
advmod(many, too)
amod(sale, many)
obj(find, sale)
cc(executive, and)
compound(executive, marketing)
conj(sale, executive)
advmod(burden, so)
advcl(find, burden)
case(detail, with)
obl(burden, detail)
mark(change, that)
nsubj(change, they)
aux(change, be)
obl:npmod(change, short)
punct(change, -)
ccomp(burden, change)
obj(change, planning)
punct(find, .)
aux:pass(review, be)
amod(plan, annual)
compound(plan, marketing)
root(ROOT, plan)
acl(plan, review)
case(group, throughout)
nmod:poss(group, you)
compound(group, management)
obl(review, group)
mark(get, to)
advcl(review, get)
det(perspective, the)
obj(get, perspective)
case(individual, of)
det(individual, all)
nmod(perspective, individual)
cc(get, and)
conj(get, get)
obj(get, everyone)
case(team, on)
det(team, the)
compound(team, marketing)
obl(get, team)
punct(plan, ?)
punct(plan, ?)
aux(have, do)
nsubj(have, you)
root(ROOT, have)
det(term, a)
amod(term, long)
punct(term, -)
obj(have, term)
punct(5, ()
appos(term, 5)
case(or, -)
cc(10, or)
nmod(5, 10)
case(yr., -)
nmod(10, yr.)
punct(have, ))
compound(program, marketing)
root(ROOT, program)
punct(program, ?)
punct(program, ?)
det(key, the)
nsubj:pass(wrap, key)
case(marketing, to)
amod(marketing, effective)
nmod(key, marketing)
aux:pass(wrap, be)
root(ROOT, wrap)
compound:prt(wrap, up)
mark(define, in)
advcl(wrap, define)
nmod:poss(company, you)
nmod:poss(problem, company)
case(company, 's)
compound(problem, marketing)
obj(define, problem)
advmod(define, realistically)
punct(wrap, .)
nsubj(suggest, solution)
advmod(suggest, frequently)
root(ROOT, suggest)
obj(suggest, themselves)
mark(pinpoint, when)
nsubj(pinpoint, you)
advmod(pinpoint, accurately)
advcl(suggest, pinpoint)
nmod:poss(problem, you)
obj(pinpoint, problem)
punct(suggest, ,)
mark(market, whether)
nsubj(market, they)
cop(market, be)
case(market, in)
det(market, the)
advcl(pinpoint, market)
punct(market, ,)
case(method, in)
compound(method, marketing)
nmod(market, method)
cc(management, or)
case(management, in)
compound(management, marketing)
conj(method, management)
punct(suggest, .)
mark(take, if)
nsubj(take, company)
aux(take, will)
advcl(take, take)
det(time, the)
obj(take, time)
mark(give, to)
acl(time, give)
amod(consideration, objective)
obj(give, consideration)
case(problem, to)
nmod:poss(problem, they)
amod(problem, major)
nmod(consideration, problem)
cc(question, and)
case(question, to)
det(question, the)
conj(problem, question)
nsubj(provoke, they)
acl:relcl(question, provoke)
punct(take, ,)
advmod(take, then)
det(step, a)
amod(step, long)
amod(step, constructive)
nsubj:pass(take, step)
aux(take, will)
aux(take, have)
aux:pass(take, be)
root(ROOT, take)
case(marketing, toward)
advmod(effective, more)
amod(marketing, effective)
obl(take, marketing)
case(decade, in)
amod(decade, next)
obl(take, decade)
punct(take, .)
det(controversy, the)
nsubj(bring, controversy)
case(year, of)
det(year, the)
amod(year, last)
amod(year, few)
nmod(controversy, year)
mark(plan, over)
mark(plan, whether)
nsubj(plan, architect)
cc(designer, or)
amod(designer, interior)
conj(architect, designer)
aux(plan, should)
advcl(bring, plan)
det(interior, the)
obj(plan, interior)
case(building, of)
amod(building, modern)
nmod(interior, building)
aux(bring, have)
root(ROOT, bring)
advmod(bring, clearly)
case(focus, into)
obl(bring, focus)
nummod(difference, one)
amod(difference, important)
obj(bring, difference)
case(opinion, of)
nmod(difference, opinion)
punct(bring, .)
det(architect, the)
nsubj(believe, architect)
aux(believe, do)
advmod(believe, not)
root(ROOT, believe)
mark(good, that)
det(education, the)
nsubj(good, education)
case(designer, of)
det(designer, the)
amod(designer, interior)
nmod(education, designer)
cop(good, be)
advmod(good, sufficiently)
ccomp(believe, good)
cc(extend, or)
advmod(extend, sufficiently)
conj(good, extend)
mark(compare, to)
xcomp(extend, compare)
case(that, with)
obl(compare, that)
case(architect, of)
det(architect, the)
nmod(that, architect)
cc(incapable, and)
mark(incapable, that)
punct(incapable, ,)
advmod(incapable, therefore)
punct(incapable, ,)
det(designer, the)
amod(designer, interior)
nsubj(incapable, designer)
cop(incapable, be)
conj(good, incapable)
case(understanding, of)
obl(incapable, understanding)
det(principle, the)
amod(principle, architectural)
nsubj(incapable, principle)
amod(principle, involved)
mark(plan, in)
advcl(involved, plan)
det(interior, the)
obj(plan, interior)
case(building, of)
det(building, a)
nmod(interior, building)
punct(believe, .)
amod(politeness, ordinary)
nsubj(militate, politeness)
aux(militate, may)
aux(militate, have)
root(ROOT, militate)
case(opinion, against)
det(opinion, this)
obl(militate, opinion)
aux:pass(state, be)
advcl(militate, state)
advmod(badly, so)
advmod(state, badly)
cc(recognize, but)
nsubj(recognize, anyone)
case(acquaintance, with)
det(acquaintance, a)
amod(acquaintance, wide)
nmod(anyone, acquaintance)
case(group, in)
det(group, both)
nmod(acquaintance, group)
cc(sit, and)
nsubj(sit, who)
aux(sit, have)
conj(militate, sit)
case(table, through)
det(table, the)
amod(table, many)
amod(table, round)
obl(sit, table)
punct(workshop, ,)
conj(table, workshop)
cc(discussion, or)
compound(discussion, panel)
conj(table, discussion)
punct(table, --)
appos(discussion, whatever)
nsubj:pass(call, they)
aux:pass(call, be)
acl:relcl(whatever, call)
punct(recognize, --)
case(subject, on)
det(subject, this)
obl(recognize, subject)
aux(recognize, will)
conj(militate, recognize)
mark(education, that)
det(crux, the)
amod(crux, final)
punct(crux, ,)
amod(crux, boil)
compound(boil, down)
nsubj(education, crux)
case(matter, of)
det(matter, the)
nmod(crux, matter)
cop(education, be)
ccomp(recognize, education)
punct(militate, .)
expl(true, it)
cop(true, be)
root(ROOT, true)
mark(have, that)
amod(school, most)
amod(school, architectural)
nsubj(have, school)
csubj(true, have)
nummod(year, five)
compound(course, year)
obj(have, course)
punct(true, ,)
nsubj(have, some)
advmod(have, even)
parataxis(true, have)
obj(have, six)
cc(more, or)
conj(six, more)
punct(true, .)
det(element, the)
nsubj(demand, element)
case(danger, of)
amod(danger, public)
nmod(element, danger)
nsubj(enter, which)
acl:relcl(element, enter)
advmod(largely, so)
advmod(certification, largely)
case(certification, into)
amod(certification, architectural)
obl(enter, certification)
punct(demand, ,)
advmod(demand, however)
punct(demand, ,)
aux(demand, would)
root(ROOT, demand)
det(study, a)
amod(study, prolong)
obj(demand, study)
case(structure, of)
nmod(study, structure)
punct(demand, .)
nsubj(lengthen, this)
aux(lengthen, would)
punct(lengthen, ,)
advmod(lengthen, naturally)
punct(lengthen, ,)
root(ROOT, lengthen)
nmod:poss(course, they)
obj(lengthen, course)
advmod(lengthen, far)
case(demand, beyond)
det(demand, the)
advmod(esthetic, largely)
amod(demand, esthetic)
obl(lengthen, demand)
case(training, of)
amod(designer, interior)
nmod:poss(training, designer)
case(designer, 's)
nmod(demand, training)
punct(lengthen, .)
nsubj(dismiss, we)
aux(dismiss, may)
advmod(dismiss, then)
root(ROOT, dismiss)
det(difference, the)
compound(difference, time)
obj(dismiss, difference)
case(course, between)
det(course, these)
nmod(difference, course)
cc(course, and)
det(course, the)
amod(course, usual)
nummod(year, four)
compound(course, year)
conj(difference, course)
case(student, of)
det(student, the)
amod(student, interior)
compound(student, design)
nmod(course, student)
mark(have, as)
advmod(have, not)
advcl(dismiss, have)
amod(bear, serious)
obj(have, bear)
case(subject, on)
det(subject, the)
nmod(bear, subject)
punct(dismiss, .)
det(question, the)
amod(question, real)
nsubj(be, question)
nsubj(follow, that)
acl:relcl(question, follow)
root(ROOT, be)
punct(be, --)
advmod(use, how)
cop(use, be)
det(year, those)
nummod(year, four)
nsubj(use, year)
ccomp(be, use)
cc(what, and)
conj(use, what)
cop(what, be)
nmod:poss(value, they)
nsubj(what, value)
case(training, as)
nmod(value, training)
punct(be, ?)
punct(be, ?)
det(Institute, the)
compound(Institute, American)
nsubj(publish, Institute)
case(Designers, of)
compound(Designers, Interior)
nmod(Institute, Designers)
aux(publish, have)
root(ROOT, publish)
det(course, a)
amod(course, recommend)
obj(publish, course)
case(designer, for)
nmod(course, designer)
cc(layout, and)
det(layout, a)
compound(layout, percentage)
conj(designer, layout)
case(course, of)
det:predet(course, such)
det(course, a)
nmod(layout, course)
punct(publish, .)
det(examination, a)
root(ROOT, examination)
case(catalog, of)
det(catalog, some)
nummod(catalog, forty)
nmod(examination, catalog)
case(school, of)
nmod(catalog, school)
acl(school, offer)
obj(offer, course)
case(design, in)
amod(design, interior)
obl(offer, design)
punct(offer, ,)
case(school, for)
det(school, the)
advmod(part, most)
compound(school, part)
nmod(examination, school)
acl(school, accredite)
case(membership, by)
obl(accredite, membership)
case(Association, in)
det(Association, the)
compound(Association, National)
obl(accredite, Association)
case(Schools, of)
nmod(Association, Schools)
case(Art, of)
nmod(Schools, Art)
punct(inspection, ,)
cc(inspection, and)
det(inspection, a)
amod(inspection, further)
punct(spot, ``)
case(spot, on)
det(spot, the)
compound(inspection, spot)
punct(spot, '')
conj(Association, inspection)
case(number, of)
det(number, a)
nmod(inspection, number)
case(school, of)
nmod(number, school)
punct(show, ,)
acl(inspection, show)
nmod:poss(course, they)
nsubj(adhere, course)
ccomp(show, adhere)
advmod(closely, pretty)
advmod(adhere, closely)
case(recommendation, to)
det(recommendation, the)
obl(adhere, recommendation)
punct(show, .)
nsubj(have, one)
cc(two, or)
conj(one, two)
case(school, of)
det(school, the)
nmod(one, school)
root(ROOT, have)
det(curriculum, a)
nummod(year, five)
compound(curriculum, year)
obj(have, curriculum)
punct(limit, ,)
cc(limit, but)
det(pattern, the)
amod(pattern, usual)
nsubj(limit, pattern)
case(education, of)
amod(education, american)
nmod(pattern, education)
aux(limit, have)
conj(have, limit)
obj(limit, most)
case(they, of)
nmod(most, they)
case(plan, to)
det(plan, the)
nummod(year, four)
punct(year, -)
compound(plan, year)
obl(limit, plan)
nsubj(seem, which)
acl:relcl(plan, seem)
mark(minimum, to)
cop(minimum, be)
det(minimum, the)
xcomp(seem, minimum)
case(institution, in)
amod(institution, acceptable)
nmod(minimum, institution)
punct(have, .)
det(course, the)
amod(course, suggest)
nsubj:pass(base, course)
case(A.I.D., of)
det(A.I.D., the)
nmod(course, A.I.D.)
aux:pass(base, be)
root(ROOT, base)
case(course, on)
det(course, the)
amod(course, usual)
obl(base, course)
acl(course, offer)
cc(opinion, and)
case(opinion, on)
det(opinion, the)
conj(offer, opinion)
case(educator, of)
amod(educator, many)
nmod(opinion, educator)
case(necessity, as)
fixed(as, to)
compound(necessity, curricular)
nmod(opinion, necessity)
punct(base, .)
advmod(limit, obviously)
punct(limit, ,)
det(provision, the)
nummod(year, four)
compound(provision, year)
nsubj(limit, provision)
root(ROOT, limit)
obj(limit, this)
case(fundamental, to)
obl(limit, fundamental)
cc(eliminate, and)
advmod(desirable, much)
amod(material, desirable)
nsubj:pass(eliminate, material)
aux(eliminate, must)
aux:pass(eliminate, be)
conj(limit, eliminate)
punct(limit, .)
mark(compare, without)
advcl(let, compare)
det(merit, the)
amod(merit, relative)
obj(compare, merit)
case(course, of)
det(course, the)
nummod(course, two)
nmod(merit, course)
punct(course, --)
appos(course, architecture)
case(design, versus)
amod(design, interior)
nmod(architecture, design)
punct(let, --)
root(ROOT, let)
obj(let, we)
xcomp(let, examine)
det(need, the)
amod(need, educational)
obj(examine, need)
case(designer, of)
det(designer, the)
amod(designer, interior)
nmod(need, designer)
punct(let, .)
mark(begin, to)
advcl(what, begin)
obl(begin, with)
punct(what, ,)
root(ROOT, what)
cop(what, be)
det(designer, a)
amod(designer, interior)
nsubj(what, designer)
punct(what, ?)
punct(what, ?)
punct(what, ``)
det(dictionary, the)
nsubj(describe, dictionary)
case(Titles, of)
compound(Titles, occupational)
nmod(dictionary, Titles)
punct(Titles, '')
acl(dictionary, publish)
case(Department, by)
det(Department, the)
compound(Department, U.)
compound(Department, S.)
obl(publish, Department)
case(Labor, of)
nmod(Department, Labor)
root(ROOT, describe)
obj(describe, he)
mark(follow, as)
advcl(describe, follow)
punct(describe, :)
punct(describe, ``)
root(ROOT, Designs)
punct(plan, ,)
conj(Designs, plan)
cc(furnish, and)
conj(Designs, furnish)
obj(furnish, interior)
case(house, of)
nmod(interior, house)
punct(structure, ,)
amod(structure, commercial)
cc(institutional, and)
conj(commercial, institutional)
conj(house, structure)
punct(hotel, ,)
conj(house, hotel)
punct(club, ,)
conj(house, club)
punct(ship, ,)
conj(house, ship)
punct(theater, ,)
conj(house, theater)
punct(decoration, ,)
cc(decoration, as)
fixed(as, well)
fixed(as, as)
amod(decoration, set)
conj(Designs, decoration)
case(art, for)
compound(art, motion)
compound(art, picture)
nmod(decoration, art)
cc(television, and)
conj(art, television)
punct(make, .)
parataxis(decoration, make)
obj(make, drawing)
cc(plan, and)
conj(drawing, plan)
case(room, of)
nmod(drawing, room)
acl(room, show)
obj(show, placement)
case(furniture, of)
nmod(placement, furniture)
punct(covering, ,)
compound(covering, floor)
conj(furniture, covering)
punct(decoration, ,)
compound(decoration, wall)
conj(furniture, decoration)
punct(determine, ,)
cc(determine, and)
conj(show, determine)
compound(scheme, color)
obj(determine, scheme)
punct(make, . )
amod(estimate, furnish)
amod(estimate, complete)
compound(estimate, cost)
nsubj(make, estimate)
case(approval, for)
compound(approval, client)
nmod(estimate, approval)
punct(estimate, .)
root(ROOT, make)
amod(purchase, necessary)
obj(make, purchase)
punct(contract, ,)
compound(contract, place)
conj(purchase, contract)
punct(construction, ,)
compound(construction, supervise)
conj(purchase, construction)
punct(installation, ,)
conj(purchase, installation)
punct(finish, ,)
conj(purchase, finish)
cc(placement, and)
conj(purchase, placement)
case(furniture, of)
nmod(placement, furniture)
punct(fixture, ,)
conj(furniture, fixture)
cc(furnishings, and)
amod(furnishings, other)
amod(furnishings, correlate)
conj(furniture, furnishings)
punct(follow, ,)
cc(follow, and)
conj(make, follow)
case(completion, through)
case(completion, to)
obl(follow, completion)
case(project, of)
nmod(completion, project)
punct(completion, '')
punct(completion, .)
case(addition, in)
obl(follow, addition)
case(Bureau, to)
det(Bureau, this)
det(Bureau, the)
compound(Bureau, U.)
compound(Service, S.)
compound(Service, Civil)
compound(Bureau, Service)
nmod(addition, Bureau)
punct(examine, ,)
mark(examine, when)
acl(addition, examine)
obj(examine, applicant)
case(position, for)
compound(position, government)
nmod(applicant, position)
case(designer, as)
amod(designer, interior)
nmod(position, designer)
punct(expect, ,)
advcl(examine, expect)
mark(design, that)
punct(design, ``)
mark(obtainable, when)
amod(object, various)
amod(object, need)
nsubj(obtainable, object)
cop(obtainable, be)
advmod(obtainable, not)
advcl(design, obtainable)
case(market, on)
det(market, the)
obl(obtainable, market)
nsubj(design, he)
aux(design, will)
ccomp(expect, design)
obj(design, they)
punct(expect, .)
nsubj(capable, he)
aux(capable, must)
cop(capable, be)
root(ROOT, capable)
mark(design, of)
advcl(capable, design)
obl(design, for)
cc(supervising, and)
conj(design, supervising)
det(manufacture, the)
obj(supervising, manufacture)
case(material, of)
det(material, any)
compound(material, craft)
nmod(manufacture, material)
acl(material, need)
case(furnishings, in)
det(furnishings, the)
obl(need, furnishings)
punct(need, '')
punct(capable, .)
nsubj(seem, this)
parataxis(capable, seem)
case(order, like)
det(order, a)
amod(order, large)
obl(seem, order)
punct(capable, .)
det(designer, the)
amod(designer, interior)
nsubj(artist, designer)
punct(designer, ,)
advmod(artist, then)
punct(artist, ,)
aux(artist, must)
advmod(artist, first)
cop(artist, be)
det(artist, a)
root(ROOT, artist)
cc(understand, but)
advmod(understand, also)
conj(artist, understand)
obj(understand, carpentry)
cc(painting, and)
conj(carpentry, painting)
cc(lighting, and)
conj(carpentry, lighting)
cc(plumb, and)
conj(carpentry, plumb)
cc(finance, and)
conj(carpentry, finance)
punct(artist, .)
cc(question, yet)
nsubj(question, nobody)
aux(question, will)
root(ROOT, question)
det(necessity, the)
obj(question, necessity)
case(this, of)
det:predet(this, all)
nmod(necessity, this)
cc(know, and)
det(designer, any)
amod(designer, reputable)
amod(designer, interior)
nsubj(know, designer)
aux(know, do)
conj(question, know)
det:predet(this, all)
obj(know, this)
cc(practice, and)
aux(practice, do)
conj(know, practice)
obj(practice, it)
punct(question, .)
cc(understand, and)
advmod(understand, further)
nsubj(understand, he)
aux(understand, must)
root(ROOT, understand)
nmod:poss(obligation, he)
obj(understand, obligation)
case(client, to)
det(client, the)
nmod(obligation, client)
mark(meet, to)
advmod(only, not)
advmod(meet, only)
advcl(understand, meet)
nmod:poss(necessity, he)
amod(necessity, physical)
obj(meet, necessity)
cc(enhance, but)
advmod(enhance, also)
mark(enhance, to)
conj(meet, enhance)
cc(improve, and)
conj(enhance, improve)
nmod:poss(life, he)
obj(enhance, life)
cc(enlarge, and)
mark(enlarge, to)
conj(enhance, enlarge)
det(horizon, the)
amod(horizon, cultural)
obj(enlarge, horizon)
case(society, of)
nmod:poss(society, we)
nmod(horizon, society)
punct(quarrel, .)
nsubj(quarrel, few)
aux(quarrel, will)
parataxis(understand, quarrel)
case(aim, with)
det(aim, the)
obl(quarrel, aim)
case(school, of)
det(school, the)
nmod(aim, school)
cc(wording, or)
case(wording, with)
det(wording, the)
conj(school, wording)
case(curriculum, of)
nmod:poss(curriculum, they)
nmod(wording, curriculum)
punct(quarrel, .)
nsubj(quality, it)
cop(quality, be)
case(quality, in)
det(quality, the)
root(ROOT, quality)
case(teaching, of)
det(teaching, the)
nmod(quality, teaching)
case(this, of)
det:predet(this, all)
nmod(teaching, this)
obj(arise, that)
det(question, a)
nsubj(arise, question)
aux(arise, may)
acl:relcl(this, arise)
punct(quality, .)
det(school, the)
amod(school, old)
amod(school, establish)
amod(school, independent)
compound(school, art)
nsubj(try, school)
root(ROOT, try)
nmod:poss(best, they)
obj(try, best)
mark(fulfill, to)
advcl(try, fulfill)
nmod:poss(obligation, they)
obj(fulfill, obligation)
punct(try, .)
cc(present, yet)
advmod(here, even)
advmod(present, here)
det:predet(problem, many)
det(problem, a)
nsubj:pass(present, problem)
aux:pass(present, be)
root(ROOT, present)
punct(present, ;)
punct(present, ;)
case(competition, as)
case(competition, in)
det(competition, a)
amod(competition, recent)
compound(competition, design)
obl(present, competition)
case(plan, with)
det(plan, a)
compound(plan, floor)
nmod(competition, plan)
cc(command, and)
det(command, the)
amod(command, simple)
conj(plan, command)
punct(design, --)
punct(design, ``)
appos(command, design)
det(apartment, a)
compound(apartment, luxury)
obj(design, apartment)
punct(design, '')
punct(description, ;)
punct(description, ;)
det(description, no)
parataxis(design, description)
case(client, of)
det(client, the)
nmod(description, client)
cc(level, or)
nmod:poss(level, he)
amod(level, cultural)
conj(client, level)
punct(assertion, ,)
det(assertion, no)
conj(description, assertion)
case(area, of)
amod(area, geographical)
nmod(assertion, area)
cc(necessity, or)
amod(necessity, local)
amod(necessity, social)
conj(area, necessity)
punct(assertion, --)
advmod(assertion, simply)
punct(assertion, ``)
det(apartment, a)
compound(apartment, luxury)
nsubj(result, apartment)
punct(apartment, '')
punct(apartment, .)
acl(apartment, work)
case(vacuum, in)
det(vacuum, a)
obl(work, vacuum)
case(information, of)
amod(information, minimal)
nmod(vacuum, information)
aux(result, can)
root(ROOT, result)
advmod(piece, only)
case(piece, in)
compound(piece, show)
obl(result, piece)
nsubj(look, that)
acl:relcl(piece, look)
xcomp(look, good)
case(exhibition, in)
obl(look, exhibition)
cc(catalog, and)
conj(exhibition, catalog)
cc(department, and)
aux(department, may)
discourse(department, please)
det(department, the)
amod(relation, public)
compound(department, relation)
obj(have, department)
cc(have, but)
conj(result, have)
obj(have, little)
mark(do, to)
acl(little, do)
case(essence, with)
det(essence, the)
obl(do, essence)
case(design, of)
amod(design, interior)
nmod(essence, design)
punct(result, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
punct(possible, ,)
advmod(work, of)
fixed(of, course)
punct(possible, ,)
mark(work, to)
csubj(possible, work)
case(building, on)
amod(building, extant)
cc(project, or)
conj(extant, project)
obl(work, building)
advmod(explain, where)
cc:preconj(architect, either)
nsubj(explain, architect)
cc(owner, or)
conj(architect, owner)
aux(explain, will)
acl:relcl(building, explain)
nmod:poss(necessity, they)
obj(explain, necessity)
mark(get, so)
fixed(so, that)
det(student, the)
nsubj(get, student)
aux(get, may)
advcl(explain, get)
punct(feel, ``)
det(feel, the)
obj(get, feel)
punct(feel, '')
case(demand, of)
amod(demand, real)
amod(design, interior)
compound(demand, design)
nmod(feel, demand)
punct(possible, .)
advmod(rule, unfortunately)
punct(rule, ,)
det(problem, the)
advmod(synthetic, purely)
amod(problem, synthetic)
nsubj(rule, problem)
cop(rule, be)
det(rule, the)
root(ROOT, rule)
punct(rule, .)
nsubj(school, it)
cop(school, be)
case(school, like)
amod(school, medical)
root(ROOT, school)
case(India, in)
nmod(school, India)
advmod(frow, where)
punct(frow, ,)
case(land, in)
det(land, that)
compound(land, fairy)
punct(land, -)
nmod(school, land)
case(inhibition, of)
amod(inhibition, religious)
nmod(land, inhibition)
punct(frow, ,)
det(dissection, the)
nsubj:pass(frow, dissection)
case(body, of)
amod(body, dead)
nmod(dissection, body)
aux:pass(frow, be)
acl:relcl(school, frow)
obl(frow, upon)
punct(school, .)
advmod(learn, instead)
nsubj(learn, they)
root(ROOT, learn)
nmod:poss(dissection, they)
obj(learn, dissection)
case(bulb, on)
det(bulb, the)
nmod(dissection, bulb)
case(plant, of)
nmod(bulb, plant)
punct(learn, .)
advmod(achieve, thus)
amod(efficiency, technical)
nsubj:pass(achieve, efficiency)
aux:pass(achieve, be)
root(ROOT, achieve)
case(expense, at)
det(expense, the)
obl(achieve, expense)
case(experience, of)
amod(experience, actual)
nmod(expense, experience)
punct(achieve, .)
case(year, in)
det(year, the)
amod(year, earlier)
obl(cover, year)
mark(train, of)
acl(year, train)
amod(phase, certain)
obj(train, phase)
case(work, of)
det(work, the)
nmod(phase, work)
aux(cover, must)
aux:pass(cover, be)
root(ROOT, cover)
cc(have, and)
det(problem, the)
amod(problem, synthetic)
nsubj(have, problem)
conj(cover, have)
nmod:poss(use, its)
obj(have, use)
punct(cover, .)
cc(inexcusable, but)
mark(continue, to)
csubj(inexcusable, continue)
mark(divorce, to)
xcomp(continue, divorce)
amod(student, advanced)
obj(divorce, student)
case(reality, from)
nmod(student, reality)
cop(inexcusable, be)
root(ROOT, inexcusable)
punct(inexcusable, .)
nsubj(essential, consultation)
case(architect, with)
nmod(consultation, architect)
punct(client, ,)
conj(architect, client)
punct(man, ,)
amod(man, real)
compound(man, estate)
conj(architect, man)
punct(house, ,)
compound(house, fabric)
conj(architect, house)
cc(company, and)
compound(company, furniture)
conj(architect, company)
cop(essential, be)
root(ROOT, essential)
case(development, to)
det(development, the)
amod(development, proper)
obl(essential, development)
case(problem, of)
compound(problem, class)
nmod(development, problem)
advmod(work, just)
case(work, as)
case(work, in)
amod(work, actual)
nmod(development, work)
punct(essential, . )
advmod(welcome, fortunately)
punct(welcome, ,)
mark(hold, although)
advmod(ago, only)
det(year, a)
amod(year, few)
obl:npmod(ago, year)
advmod(hold, ago)
nsubj(hold, they)
advcl(welcome, hold)
det(student, the)
obj(hold, student)
case(length, at)
compound(length, arm)
obl(hold, length)
punct(welcome, ,)
obl:tmod(welcome, today)
det(house, the)
compound(house, business)
nsubj(welcome, house)
root(ROOT, welcome)
det(opportunity, the)
obj(welcome, opportunity)
mark(aid, to)
acl(opportunity, aid)
det(student, the)
obj(aid, student)
punct(aid, ,)
advmod(only, not)
advmod(sense, only)
case(sense, from)
det(sense, a)
amod(sense, increase)
obl(aid, sense)
case(responsibility, of)
compound(responsibility, community)
nmod(sense, responsibility)
cc(realization, but)
advmod(realization, also)
case(realization, from)
det(realization, the)
conj(sense, realization)
mark(designer, that)
det(student, the)
nsubj(designer, student)
case(today, of)
nmod(student, today)
cop(designer, be)
det(designer, the)
amod(designer, interior)
acl(realization, designer)
case(tomorrow, of)
nmod(designer, tomorrow)
punct(designer, --)
mark(trade, that)
det(student, the)
nsubj(trade, student)
advmod(trade, already)
cop(trade, be)
punct(trade, ``)
case(trade, in)
det(trade, the)
nmod(history, trade)
punct(trade, '')
punct(trade, .)
advmod(history, even)
det(history, the)
punct(history, ``)
nsubj:pass(teach, history)
case(furniture, of)
nmod(history, furniture)
punct(history, '')
aux(teach, can)
advmod(teach, hardly)
aux:pass(teach, be)
acl(realization, teach)
advmod(teach, exclusively)
case(photograph, from)
obl(teach, photograph)
cc(slide, and)
compound(slide, lantern)
conj(photograph, slide)
punct(welcome, .)
advmod(experience, here)
punct(experience, ,)
advmod(experience, too)
punct(experience, ,)
det(reality, the)
nsubj:pass(experience, reality)
case(furniture, of)
amod(furniture, actual)
nmod(reality, furniture)
aux(experience, must)
aux:pass(experience, be)
root(ROOT, experience)
punct(experience, .)
det(organization, the)
amod(organization, professional)
nsubj(aid, organization)
case(Institute, such)
fixed(such, as)
compound(Institute, American)
nmod(organization, Institute)
case(Designers, of)
compound(Designers, Interior)
nmod(Institute, Designers)
punct(Society, ,)
compound(Society, National)
conj(Institute, Society)
case(Designers, of)
compound(Designers, Interior)
nmod(Society, Designers)
punct(League, ,)
compound(fashions, Home)
compound(League, fashions)
conj(Designers, League)
cc(association, and)
amod(association, various)
compound(association, trade)
conj(Institute, association)
punct(aid, ,)
aux(aid, can)
cc(aid, and)
aux(aid, do)
root(ROOT, aid)
advmod(aid, greatly)
case(work, in)
det(work, this)
obl(aid, work)
punct(aid, .)
advmod(member, certainly)
det(educator, every)
nsubj(member, educator)
amod(educator, involved)
case(design, in)
amod(design, interior)
obl(involved, design)
aux(member, should)
cop(member, be)
det(member, a)
root(ROOT, member)
cc(active, and)
conj(member, active)
case(work, in)
det(work, the)
obl(active, work)
case(one, of)
nmod(work, one)
case(organization, of)
det(organization, these)
nmod(one, organization)
punct(member, .)
advmod(only, not)
advmod(expect, only)
aux(expect, should)
det(educator, every)
nsubj:pass(expect, educator)
case(rank, above)
det(rank, the)
nmod(educator, rank)
case(instructor, of)
nmod(rank, instructor)
aux:pass(expect, be)
root(ROOT, expect)
mark(member, to)
cop(member, be)
det(member, a)
xcomp(expect, member)
case(one, of)
nmod(member, one)
case(organization, of)
det(organization, the)
amod(organization, professional)
nmod(one, organization)
punct(scrutinize, ,)
cc(scrutinize, but)
nmod:poss(qualification, he)
amod(qualification, first)
nsubj:pass(scrutinize, qualification)
case(membership, for)
nmod(qualification, membership)
case(educator, as)
det(educator, a)
nmod(qualification, educator)
aux(scrutinize, should)
aux:pass(scrutinize, be)
advmod(sharply, so)
advmod(scrutinize, sharply)
conj(expect, scrutinize)
det(membership, that)
nsubj(equivalent, membership)
aux(equivalent, would)
cop(equivalent, be)
conj(scrutinize, equivalent)
case(certification, to)
obl(equivalent, certification)
mark(teach, to)
advcl(equivalent, teach)
det(subject, the)
obj(teach, subject)
punct(expect, .)
nsubj(have, participation)
case(educator, for)
det(educator, the)
nmod(participation, educator)
case(case, in)
det(case, this)
nmod(participation, case)
punct(have, ,)
advmod(have, however)
punct(have, ,)
aux(have, would)
root(ROOT, have)
mark(raise, to)
aux:pass(raise, be)
xcomp(have, raise)
case(membership, to)
amod(membership, full)
cc(complete, and)
conj(full, complete)
obl(raise, membership)
punct(have, .)
det(largest, the)
nsubj(deny, largest)
case(organization, of)
det(organization, these)
nmod(largest, organization)
case(present, at)
nmod(organization, present)
root(ROOT, deny)
case(educator, to)
det(educator, the)
amod(educator, full)
compound(educator, time)
obl(deny, educator)
det(vote, any)
obj(deny, vote)
case(conduct, on)
det(conduct, the)
nmod(vote, conduct)
cc(standard, and)
conj(conduct, standard)
case(group, of)
det(group, the)
nmod(conduct, group)
cc(refuse, and)
punct(refuse, ,)
advmod(refuse, indeed)
punct(refuse, ,)
conj(deny, refuse)
obj(refuse, he)
advmod(right, even)
det(right, the)
xcomp(refuse, right)
mark(attach, to)
acl(right, attach)
det(initial, the)
amod(initial, customary)
obj(attach, initial)
case(name, after)
nmod:poss(name, he)
obl(attach, name)
case(catalog, in)
det(catalog, the)
compound(catalog, college)
obl(attach, catalog)
punct(deny, .)
det(status, this)
amod(status, anomalous)
nsubj(fail, status)
case(educator, of)
det(educator, the)
nmod(status, educator)
aux(fail, can)
advmod(fail, not)
root(ROOT, fail)
mark(lower, to)
xcomp(fail, lower)
nmod:poss(standing, he)
obj(lower, standing)
case(eye, in)
det(eye, the)
obl(lower, eye)
case(student, of)
det(student, the)
nmod(eye, student)
punct(fail, .)
det(professor, the)
nsubj(dare, professor)
case(turn, in)
nmod(professor, turn)
root(ROOT, dare)
advmod(tolerate, not)
xcomp(dare, tolerate)
det(influence, the)
obj(tolerate, influence)
case(class, in)
nmod:poss(class, he)
nmod(influence, class)
case(organization, of)
det(organization, a)
nmod(class, organization)
case(policy, in)
det(policy, the)
nmod(organization, policy)
cc(standard, and)
conj(policy, standard)
case(which, of)
obl(have, which)
nsubj(have, he)
acl:relcl(policy, have)
det(voice, no)
obj(have, voice)
punct(seem, .)
nsubj(seem, this)
parataxis(dare, seem)
advmod(shortsight, somewhat)
xcomp(seem, shortsight)
mark(have, since)
mark(enforce, if)
det(qualification, the)
amod(qualification, absolute)
amod(qualification, educational)
nsubj(have, qualification)
case(membership, for)
nmod(qualification, membership)
obj(profess, which)
det(organization, the)
nsubj(profess, organization)
acl:relcl(qualification, profess)
aux:pass(enforce, be)
advmod(enforce, ever)
advcl(have, enforce)
punct(have, ,)
det(educator, the)
nsubj(have, educator)
aux(have, will)
conj(seem, have)
det(molding, the)
obj(have, molding)
case(profession, of)
det(profession, the)
amod(profession, entire)
nmod(molding, profession)
case(hand, in)
nmod:poss(hand, he)
obl(have, hand)
punct(dare, .)
case(way, in)
nummod(way, one)
obl(do, way)
det(Institutes, the)
nsubj(do, Institutes)
cc(Societyes, and)
conj(Institutes, Societyes)
root(ROOT, do)
det(disservice, a)
obj(do, disservice)
case(school, to)
det(school, the)
nmod(disservice, school)
punct(do, .)
nsubj(continuance, that)
cop(continuance, be)
case(continuance, in)
det(continuance, the)
root(ROOT, continuance)
case(clause, of)
det(clause, the)
punct(clause, ``)
compound(clause, grandfather)
nmod(continuance, clause)
punct(clause, '')
case(requirement, in)
nmod:poss(requirement, they)
compound(requirement, membership)
nmod(clause, requirement)
punct(clause, .)
mark(form, when)
det(group, these)
nsubj:pass(form, group)
aux:pass(form, be)
advmod(form, first)
advcl(continuance, form)
amod(decorator, many)
amod(decorator, prominent)
cc(accomplish, and)
conj(prominent, accomplish)
nsubj(have, decorator)
aux(have, could)
advmod(have, not)
aux(have, have)
ccomp(form, have)
det(advantage, the)
obj(have, advantage)
case(training, of)
compound(training, school)
nmod(advantage, training)
mark(rare, since)
amod(course, interior)
compound(course, design)
nsubj(rare, course)
cop(rare, be)
advcl(have, rare)
cc(undeveloped, and)
conj(rare, undeveloped)
case(youth, during)
nmod:poss(youth, they)
obl(rare, youth)
punct(year, .)
amod(year, long)
amod(year, hard)
obl(rare, year)
case(job, of)
punct(job, ``)
case(job, on)
det(job, the)
nmod(year, job)
punct(job, '')
nsubj(bring, training)
aux(bring, have)
acl:relcl(year, bring)
obj(bring, they)
case(competence, to)
nmod:poss(competence, they)
obl(bring, competence)
punct(continuance, .)
det(necessity, the)
nsubj(disappear, necessity)
case(day, of)
det(day, that)
nmod(necessity, day)
aux(disappear, have)
advmod(disappear, long)
root(ROOT, disappear)
punct(disappear, .)
expl(be, there)
root(ROOT, be)
nsubj(be, plenty)
case(opportunity, of)
nmod(plenty, opportunity)
case(education, for)
amod(education, proper)
nmod(opportunity, education)
obl:tmod(be, today)
punct(be, .)
nsubj(discourage, it)
aux(discourage, be)
root(ROOT, discourage)
case(student, for)
obl(discourage, student)
mark(realize, to)
advcl(discourage, realize)
mark(uphold, that)
det(society, the)
nsubj(uphold, society)
aux(uphold, do)
advmod(uphold, not)
advmod(uphold, truly)
ccomp(realize, uphold)
det(standard, the)
obj(uphold, standard)
case(which, for)
obl(suppose, which)
nsubj(suppose, they)
aux(suppose, be)
acl:relcl(standard, suppose)
mark(stand, to)
xcomp(suppose, stand)
punct(discourage, .)
det(reason, the)
nsubj(pass, reason)
cc(day, and)
det(day, the)
conj(reason, day)
case(clause, of)
punct(clause, ``)
compound(clause, grandfather)
nmod(day, clause)
punct(clause, '')
aux(pass, have)
advmod(pass, long)
advmod(pass, since)
root(ROOT, pass)
punct(pass, .)
det(one, no)
nsubj(deny, one)
aux(deny, can)
root(ROOT, deny)
mark(abuse, that)
det(admission, these)
punct(door, ``)
amod(door, back)
compound(admission, door)
punct(door, '')
nsubj:pass(abuse, admission)
case(provision, to)
compound(provision, membership)
nmod(admission, provision)
aux(abuse, have)
aux:pass(abuse, be)
advmod(abuse, seriously)
ccomp(deny, abuse)
cc(result, nor)
mark(result, that)
nsubj(result, they)
aux(result, have)
advmod(result, not)
conj(abuse, result)
case(admission, in)
det(admission, the)
obl(result, admission)
case(incompetent, of)
amod(incompetent, downright)
nmod(admission, incompetent)
case(membership, to)
nmod(incompetent, membership)
case(society, in)
advmod(learn, supposedly)
amod(society, learn)
nmod(admission, society)
punct(deny, .)
case(question, beyond)
det(question, any)
obl(quality, question)
case(curriculum, of)
nmod(question, curriculum)
cc(approach, and)
conj(curriculum, approach)
case(subject, to)
nmod(approach, subject)
aux(quality, must)
cop(quality, be)
det(quality, the)
root(ROOT, quality)
case(teacher, of)
det(teacher, the)
nmod(quality, teacher)
nmod:npmod(teacher, themselves)
punct(quality, .)
nsubj(occur, it)
aux(occur, will)
root(ROOT, occur)
case(anyone, to)
obl(occur, anyone)
obj(have, that)
det(teacher, the)
nsubj(have, teacher)
aux(have, must)
acl:relcl(anyone, have)
amod(education, adequate)
obj(have, education)
punct(depth, ,)
det(depth, a)
conj(education, depth)
cc(breadth, and)
conj(depth, breadth)
case(knowledge, of)
nmod(depth, knowledge)
advmod(depth, far)
case(necessity, beyond)
det(necessity, the)
amod(necessity, immediate)
nmod(depth, necessity)
case(course, of)
nmod:poss(course, he)
nmod(necessity, course)
cc(dedication, plus)
amod(dedication, complete)
conj(necessity, dedication)
case(subject, to)
nmod:poss(subject, he)
nmod(dedication, subject)
cc(student, and)
case(student, to)
nmod:poss(student, he)
conj(subject, student)
punct(occur, .)
det(decorator, the)
amod(decorator, local)
nsubj(have, decorator)
nsubj(rush, who)
acl:relcl(decorator, rush)
advmod(rush, in)
case(hour, for)
det(hour, a)
amod(hour, few)
obl(rush, hour)
case(teaching, of)
nmod(hour, teaching)
root(ROOT, may)
cc(have, but)
advmod(likely, more)
advmod(have, likely)
aux(have, may)
advmod(have, not)
conj(may, have)
det(qualification, these)
obj(have, qualification)
punct(have, .)
cc(find, nor)
aux(find, will)
det(hack, the)
nsubj(find, hack)
punct(hack, ,)
det(trade, the)
compound(trade, Jack)
punct(Jack, -)
case(trade, of)
punct(trade, -)
det(trade, all)
punct(trade, -)
appos(hack, trade)
punct(find, ,)
advmod(find, still)
root(ROOT, find)
case(some, in)
obl(find, some)
case(school, of)
det(school, the)
amod(school, smaller)
compound(school, art)
nmod(some, school)
punct(suffice, ,)
conj(find, suffice)
punct(suffice, .)
advmod(ago, only)
det(year, a)
amod(year, few)
obl:npmod(ago, year)
advmod(circulate, ago)
det(college, a)
amod(college, middle)
amod(college, western)
nsubj(circulate, college)
root(ROOT, circulate)
det(request, a)
obj(circulate, request)
case(teacher, for)
det(teacher, a)
nmod(request, teacher)
case(design, of)
amod(design, interior)
nmod(teacher, design)
punct(circulate, .)
case(end, at)
det(end, the)
nmod(information, end)
case(letter, of)
nmod:poss(letter, its)
nmod(end, letter)
cop(information, be)
det(information, the)
root(ROOT, information)
mark(prepare, that)
nsubj:pass(prepare, applicant)
case(position, for)
det(position, this)
nmod(applicant, position)
punct(prepare, ``)
aux(prepare, must)
advmod(prepare, also)
aux:pass(prepare, be)
acl(information, prepare)
mark(teach, to)
xcomp(prepare, teach)
compound(design, costume)
obj(teach, design)
cc(art, and)
compound(art, advertising)
conj(design, art)
punct(design, '')
punct(build, .)
det(kind, this)
nsubj(build, kind)
case(irresponsibility, of)
nmod(kind, irresponsibility)
case(student, toward)
nmod:poss(student, they)
nmod(irresponsibility, student)
aux(build, can)
advmod(build, scarcely)
acl(information, build)
det(attitude, a)
amod(attitude, strong)
amod(attitude, professional)
obj(build, attitude)
case(designer, in)
det(designer, the)
amod(designer, future)
nmod(attitude, designer)
punct(information, .)
nsubj(build, we)
aux(build, must)
root(ROOT, build)
det(corps, a)
obj(build, corps)
case(teacher, of)
advmod(professional, highly)
amod(teacher, professional)
nmod(corps, teacher)
case(design, of)
amod(design, interior)
nmod(teacher, design)
nsubj(have, who)
aux(have, have)
acl:relcl(teacher, have)
obj(have, education)
punct(experience, ,)
conj(education, experience)
case(profession, in)
det(profession, the)
obl(have, profession)
cc(willing, and)
cop(willing, be)
conj(have, willing)
mark(take, to)
xcomp(willing, take)
compound:prt(take, on)
det(accompaniment, the)
amod(accompaniment, usual)
obj(take, accompaniment)
case(teaching, of)
nmod(accompaniment, teaching)
punct(accompaniment, --)
amod(income, minimal)
appos(accompaniment, income)
cc(status, and)
amod(status, minimal)
conj(income, status)
case(confrer, among)
nmod:poss(confrer, they)
nmod(status, confrer)
punct(build, .)
amod(specialization, considerable)
nsubj(desirable, specialization)
case(subject, in)
compound(subject, teaching)
nmod(specialization, subject)
case(architecture, such)
fixed(such, as)
nmod(specialization, architecture)
punct(design, ,)
compound(design, furniture)
conj(architecture, design)
punct(textile, ,)
conj(architecture, textile)
cc(color, and)
conj(architecture, color)
cop(desirable, be)
advmod(desirable, also)
root(ROOT, desirable)
punct(desirable, .)
case(course, in)
det(course, all)
punct(course, ``)
compound(course, degree)
punct(course, '')
obl(include, course)
case(design, in)
amod(design, interior)
nmod(course, design)
det(number, a)
nsubj:pass(include, number)
case(academic, of)
punct(academic, ``)
nmod(number, academic)
punct(academic, '')
cc(study, or)
punct(study, ``)
amod(study, general)
conj(academic, study)
punct(study, '')
nsubj:pass(include, course)
aux:pass(include, be)
root(ROOT, include)
punct(include, .)
expl(fair, it)
cop(fair, be)
advmod(fair, only)
root(ROOT, fair)
mark(demand, to)
csubj(fair, demand)
mark(inform, that)
nsubj:pass(inform, teacher)
case(course, of)
nmod(teacher, course)
case(English, in)
nmod(teacher, English)
punct(history, ,)
conj(English, history)
punct(psychology, ,)
conj(English, psychology)
cc(so, and)
conj(English, so)
mark(inform, on)
aux:pass(inform, be)
advmod(well, as)
advmod(inform, well)
ccomp(demand, inform)
case(matter, in)
obl(inform, matter)
case(art, of)
nmod(matter, art)
punct(design, ,)
advmod(design, especially)
amod(design, interior)
conj(art, design)
punct(inform, ,)
mark(teacher, as)
cop(teacher, be)
det(teacher, the)
compound(teacher, art)
advcl(inform, teacher)
acl(teacher, educated)
case(subject, in)
det(subject, the)
amod(subject, academic)
obl(educated, subject)
punct(fair, .)
det(correlation, the)
amod(correlation, proper)
nsubj:pass(achieve, correlation)
case(art, of)
det(art, the)
nmod(correlation, art)
case(academic, with)
det(academic, the)
nmod(art, academic)
aux(achieve, can)
aux:pass(achieve, be)
root(ROOT, achieve)
advmod(achieve, only)
mark(observe, if)
det(standard, this)
nsubj:pass(observe, standard)
aux:pass(observe, be)
advcl(achieve, observe)
punct(achieve, .)
det(matter, the)
nsubj:pass(take, matter)
case(sympathy, of)
nmod(matter, sympathy)
case(professor, of)
det(professor, the)
amod(professor, academic)
nmod(sympathy, professor)
case(objective, for)
compound(objective, art)
nmod(professor, objective)
advmod(take, also)
aux(take, must)
aux:pass(take, be)
root(ROOT, take)
case(account, into)
obl(take, account)
punct(take, .)
nummod(question, one)
amod(question, technical)
nsubj(come, question)
case(organization, of)
compound(organization, school)
nmod(question, organization)
root(ROOT, come)
case(mind, to)
obl(come, mind)
advmod(come, here)
punct(come, .)
case(accreditation, for)
amod(accreditation, proper)
obl(have, accreditation)
case(school, of)
nmod(accreditation, school)
punct(have, ,)
nsubj(have, teacher)
case(course, in)
det(course, any)
nmod(teacher, course)
aux(have, must)
conj(come, have)
det(degree, a)
obj(have, degree)
case(least, at)
nmod(one, least)
nummod(level, one)
nmod(degree, level)
case(that, above)
nmod(level, that)
case(which, for)
obl(candidate, which)
det(student, the)
nsubj(candidate, student)
cop(candidate, be)
det(candidate, a)
acl:relcl(level, candidate)
punct(come, .)
mark(be, since)
expl(be, there)
advcl(observe, be)
advmod(school, almost)
det(school, no)
nsubj(be, school)
case(country, in)
det(country, the)
nmod(school, country)
acl(country, offer)
compound(work, graduate)
obj(offer, work)
case(design, in)
amod(design, interior)
obl(offer, design)
det(rule, this)
nsubj:pass(observe, rule)
aux(observe, can)
advmod(present, not)
case(present, at)
obl(observe, present)
aux:pass(observe, be)
root(ROOT, observe)
punct(observe, .)
advmod(matter, indeed)
punct(matter, ,)
nsubj(matter, it)
aux(matter, have)
advmod(matter, only)
cop(matter, be)
det(matter, a)
root(ROOT, matter)
case(year, of)
det(year, the)
amod(year, last)
amod(year, few)
nmod(matter, year)
mark(grant, that)
amod(school, reputable)
nsubj(grant, school)
case(art, of)
nmod(school, art)
aux(grant, have)
acl:relcl(year, grant)
obj(grant, degree)
case(all, at)
obl(grant, all)
punct(matter, .)
det(question, the)
nsubj:pass(ignore, question)
punct(ignore, ,)
advmod(ignore, however)
punct(ignore, ,)
aux(ignore, can)
advmod(ignore, not)
aux:pass(ignore, be)
root(ROOT, ignore)
case(long, for)
advmod(ignore, long)
punct(ignore, .)
det(problem, the)
amod(problem, basic)
nsubj(be, problem)
acl(problem, involve)
root(ROOT, be)
mark(have, that)
det(college, a)
nsubj(have, college)
acl(college, set)
compound:prt(set, up)
det(school, a)
compound(school, graduate)
obj(set, school)
aux(have, must)
ccomp(be, have)
det(faculty, a)
advmod(separate, entirely)
amod(faculty, separate)
obj(have, faculty)
case(degree, for)
det(degree, the)
amod(degree, advanced)
nmod(faculty, degree)
punct(have, .)
amod(professor, most)
nsubj(have, professor)
case(course, in)
det(course, the)
nmod(professor, course)
aux(have, must)
punct(have, ,)
advmod(have, naturally)
punct(have, ,)
advmod(have, again)
parataxis(be, have)
det(degree, a)
amod(degree, higher)
obj(have, degree)
case(offer, than)
det(offer, the)
compound(offer, course)
nmod(degree, offer)
punct(be, .)
nummod(solution, one)
nsubj(aquisition, solution)
cop(aquisition, be)
det(aquisition, the)
root(ROOT, aquisition)
case(degree, of)
nmod(aquisition, degree)
case(education, in)
nmod(aquisition, education)
cc(substitute, but)
nsubj(substitute, it)
cop(substitute, be)
det(substitute, a)
amod(substitute, poor)
conj(aquisition, substitute)
punct(aquisition, .)
nsubj(sort, it)
cop(sort, be)
det(sort, a)
root(ROOT, sort)
case(a-rosy, of)
amod(ring, academic)
nmod(sort, ring)
punct(a-rosy, -)
advmod(a-rosy, around)
punct(a-rosy, -)
nmod(sort, a-rosy)
cc(solve, and)
nsubj(solve, you)
conj(sort, solve)
obj(solve, it)
punct(sort, .)
nsubj(bring, this)
parataxis(sort, bring)
obj(bring, we)
case(question, to)
det(question, the)
obl(bring, question)
case(accreditation, of)
nmod(question, accreditation)
case(school, of)
compound(school, art)
nmod(accreditation, school)
case(general, in)
nmod(accreditation, general)
punct(sort, .)
advmod(school, only)
det(school, the)
amod(school, independent)
compound(school, art)
nsubj(receive, school)
punct(school, ,)
nsubj:pass(connect, that)
aux:pass(connect, be)
punct(connect, ,)
nsubj:pass(connect, those)
advmod(connect, not)
parataxis(school, connect)
case(university, with)
det(university, any)
obl(connect, university)
cc(college, or)
conj(university, college)
punct(receive, ,)
root(ROOT, receive)
amod(investigation, severe)
cc(separate, and)
conj(severe, separate)
obj(receive, investigation)
case(accreditation, before)
obl(receive, accreditation)
case(organization, by)
det(organization, the)
amod(organization, various)
amod(organization, regional)
obl(receive, organization)
punct(receive, .)
expl(custom, it)
aux(custom, have)
cop(custom, be)
det(custom, the)
root(ROOT, custom)
case(university, for)
amod(university, most)
nmod(custom, university)
mark(stretch, to)
csubj(custom, stretch)
det(blanket, the)
obj(stretch, blanket)
case(accreditation, of)
nmod(blanket, accreditation)
case(school, for)
nmod:poss(school, they)
amod(art, liberal)
compound(school, art)
obl(stretch, school)
mark(cover, to)
advcl(stretch, cover)
det(body, the)
amod(body, shiver)
obj(cover, body)
case(department, of)
nmod:poss(department, they)
amod(art, fine)
compound(department, art)
nmod(body, department)
punct(custom, .)
nsubj(contribute, this)
punct(habit, ,)
cc(habit, plus)
det(habit, the)
conj(this, habit)
case(school, of)
amod(school, many)
nmod(habit, school)
mark(add, of)
advmod(add, simply)
acl(school, add)
amod(design, interior)
obj(add, design)
case(subject, to)
det(subject, the)
amod(subject, many)
obl(add, subject)
case(department, of)
nmod:poss(department, they)
compound(economics, home)
compound(department, economics)
nmod(subject, department)
punct(add, ,)
advmod(claim, yet)
punct(claim, ,)
advmod(claim, nevertheless)
punct(claim, ,)
advcl(contribute, claim)
mark(teach, that)
nsubj(teach, they)
ccomp(claim, teach)
amod(design, interior)
obj(teach, design)
punct(contribute, ,)
aux(contribute, have)
root(ROOT, contribute)
case(repute, to)
det(repute, the)
amod(repute, low)
obl(contribute, repute)
case(course, of)
amod(course, many)
compound(course, university)
nmod(repute, course)
case(design, in)
amod(design, interior)
nmod(course, design)
punct(contribute, .)
case(spite, in)
obl(offer, spite)
case(this, of)
nmod(spite, this)
punct(offer, ,)
amod(university, many)
nsubj(offer, university)
root(ROOT, offer)
amod(course, adequate)
cc(distinguished, and)
advmod(distinguished, even)
conj(adequate, distinguished)
obj(offer, course)
case(subject, in)
det(subject, the)
obl(offer, subject)
punct(offer, .)
expl(be, there)
aux(be, will)
root(ROOT, be)
det(mitigation, no)
nsubj(be, mitigation)
case(offence, of)
det(offence, these)
nmod(mitigation, offence)
case(school, until)
det(school, all)
compound(school, art)
nmod(mitigation, school)
punct(be, ,)
mark(have, whether)
nsubj(have, independent)
cc(attach, or)
conj(independent, attach)
case(university, to)
nmod(independent, university)
parataxis(be, have)
amod(accreditation, separate)
obj(have, accreditation)
punct(have, --)
mark(do, as)
advcl(have, do)
amod(school, medical)
obj(do, school)
punct(school, --)
case(group, by)
det(group, a)
compound(accreditation, art)
compound(group, accreditation)
nmod(school, group)
case(Association, such)
fixed(such, as)
det(Association, the)
punct(Association, ``)
compound(Association, National)
nmod(group, Association)
case(Schools, of)
nmod(Association, Schools)
case(Art, of)
nmod(Schools, Art)
punct(Association, '')
punct(Association, .)
amod(school, independent)
compound(school, art)
appos(Association, school)
acl(school, grant)
obj(grant, degree)
aux(follow, must)
punct(follow, ,)
advmod(follow, naturally)
punct(follow, ,)
conj(grant, follow)
obj(follow, this)
case(accreditation, with)
amod(accreditation, academic)
obl(follow, accreditation)
case(group, by)
det(group, the)
amod(group, appropriate)
amod(group, regional)
nmod(accreditation, group)
punct(follow, .)
nsubj(be, General)
advmod(long, how)
advmod(be, long)
aux(be, have)
nsubj(be, it)
parataxis(follow, be)
mark(review, since)
nsubj(review, you)
advcl(be, review)
det(objective, the)
obj(review, objective)
case(program, of)
nmod:poss(program, you)
compound(program, benefit)
cc(service, and)
conj(benefit, service)
nmod(objective, program)
punct(be, ?)
punct(be, ?)
aux(permit, have)
nsubj(permit, you)
root(ROOT, permit)
obj(permit, it)
mark(become, to)
xcomp(permit, become)
det(program, a)
compound(program, giveaway)
xcomp(become, program)
cc(one, rather)
fixed(rather, than)
conj(program, one)
nsubj(have, that)
acl:relcl(one, have)
det(goal, the)
obj(have, goal)
case(morale, of)
amod(morale, improve)
compound(morale, employee)
nmod(goal, morale)
cc(productivity, and)
punct(productivity, ,)
advmod(productivity, consequently)
punct(productivity, ,)
amod(productivity, increase)
conj(morale, productivity)
punct(permit, ?)
punct(permit, ?)
det(effort, what)
obj(assess, effort)
aux(make, do)
nsubj(make, you)
root(ROOT, make)
mark(assess, to)
xcomp(make, assess)
obj(assess, result)
case(program, of)
nmod:poss(program, you)
nmod(result, program)
punct(make, ?)
punct(make, ?)
aux(measure, do)
nsubj(measure, you)
root(ROOT, measure)
nmod:poss(relation, its)
obj(measure, relation)
case(absenteeism, to)
amod(absenteeism, reduce)
nmod(relation, absenteeism)
punct(turnover, ,)
conj(absenteeism, turnover)
punct(accident, ,)
conj(absenteeism, accident)
punct(grievance, ,)
cc(grievance, and)
conj(absenteeism, grievance)
punct(quality, ,)
cc(quality, and)
case(quality, to)
amod(quality, improve)
conj(absenteeism, quality)
cc(output, and)
conj(quality, output)
punct(measure, ?)
punct(measure, ?)
aux(set, have)
nsubj(set, you)
root(ROOT, set)
amod(objective, specific)
obj(set, objective)
case(publication, for)
nmod:poss(publication, you)
compound(publication, employee)
nmod(objective, publication)
punct(set, ?)
punct(set, ?)
aux(reach, be)
nsubj(reach, it)
root(ROOT, reach)
det(goal, these)
obj(reach, goal)
punct(reach, ?)
punct(reach, ?)
cop(larger, be)
nsubj(larger, it)
root(ROOT, larger)
cc(fancier, or)
conj(larger, fancier)
mark(need, than)
nsubj(need, you)
advmod(need, really)
advcl(larger, need)
punct(larger, ?)
punct(larger, ?)
aux(use, be)
nsubj(use, you)
root(ROOT, use)
det(method, the)
advmod(economical, most)
amod(method, economical)
compound(method, printing)
obj(use, method)
punct(paper, ,)
conj(method, paper)
punct(etc, ,)
conj(method, etc)
punct(use, .)
punct(use, .)
root(ROOT, be)
expl(be, there)
amod(technique, other)
punct(technique, ,)
amod(technique, cheaper)
compound(technique, communication)
nsubj(be, technique)
nsubj:pass(substitute, that)
aux(substitute, could)
aux:pass(substitute, be)
acl:relcl(technique, substitute)
punct(be, ?)
punct(be, ?)
aux(encourage, have)
nmod:poss(attitude, you)
nsubj(encourage, attitude)
case(benefit, toward)
compound(benefit, employee)
nmod(attitude, benefit)
root(ROOT, encourage)
det(excess, a)
obj(encourage, excess)
case(work, of)
amod(work, free)
punct(government, ``)
compound(work, government)
punct(government, '')
nmod(excess, work)
case(plant, in)
nmod:poss(plant, you)
nmod(work, plant)
punct(encourage, ?)
punct(encourage, ?)
aux(offer, be)
nmod:poss(agent, you)
compound(agent, purchase)
nsubj(offer, agent)
ccomp(make, offer)
advmod(much, too)
advmod(buying, much)
amod(buying, free)
punct(buying, -)
compound(service, buying)
obj(offer, service)
case(employee, for)
nmod(service, employee)
punct(offer, ?)
punct(offer, ?)
mark(recommend, when)
nsubj:pass(recommend, improvement)
aux:pass(recommend, be)
advcl(offer, recommend)
case(condition, in)
compound(condition, working)
obl(recommend, condition)
punct(condition, --)
case(lighting, such)
fixed(such, as)
nmod(condition, lighting)
punct(room, ,)
compound(room, rest)
conj(lighting, room)
punct(facility, ,)
compound(facility, eating)
conj(lighting, facility)
punct(air-conditioning, ,)
conj(lighting, air-conditioning)
punct(try, --)
aux(try, do)
nsubj(try, you)
parataxis(air-conditioning, try)
mark(set, to)
xcomp(try, set)
det(measure, a)
obj(set, measure)
case(effectiveness, of)
nmod:poss(effectiveness, they)
nmod(measure, effectiveness)
case(productivity, on)
nmod(effectiveness, productivity)
punct(set, ?)
punct(set, ?)
mark(negotiate, when)
advcl(make, negotiate)
case(union, with)
nmod:poss(union, you)
obl(negotiate, union)
punct(make, ,)
aux(make, do)
nsubj(make, you)
root(ROOT, make)
xcomp(make, sure)
nsubj(have, employee)
ccomp(sure, have)
det(choice, a)
obj(have, choice)
case(benefit, between)
amod(benefit, new)
nmod(choice, benefit)
cc(cost, and)
nmod:poss(cost, they)
compound(cost, cent)
punct(cent, -)
case(hour, per)
punct(hour, -)
nmod(cent, hour)
conj(benefit, cost)
case(wage, in)
nmod(cost, wage)
punct(make, .)
aux(consider, can)
nsubj(consider, you)
root(ROOT, consider)
xcomp(consider, restrict)
det(benefit, any)
amod(benefit, additional)
compound(benefit, employee)
obj(restrict, benefit)
case(those, to)
nmod(benefit, those)
acl(those, pay)
obl(pay, for)
case(money, by)
compound(share, profit)
punct(share, -)
compound(money, share)
obl(pay, money)
punct(restrict, ,)
mark(do, such)
fixed(such, as)
aux:pass(do, be)
acl(money, do)
case(contract, in)
det(contract, the)
compound(contract, union)
obl(do, contract)
advmod(sign, recently)
acl(contract, sign)
case(Corporation, by)
compound(Corporation, American)
compound(Corporation, Motors)
obl(sign, Corporation)
punct(consider, ?)
punct(consider, ?)
obj(understand, insurance)
aux(understand, do)
nmod:poss(employee, you)
nsubj(understand, employee)
root(ROOT, understand)
det:predet(benefit, all)
det(benefit, the)
obj(understand, benefit)
case(which, to)
obl(entitle, which)
nmod:poss(insurance, you)
nsubj(entitle, insurance)
acl:relcl(benefit, entitle)
obj(entitle, they)
punct(understand, ?)
punct(understand, ?)
aux:pass(encourage, be)
nsubj:pass(encourage, they)
root(ROOT, encourage)
mark(take, to)
xcomp(encourage, take)
amod(advantage, full)
amod(advantage, legal)
obj(take, advantage)
case(benefit, of)
det(benefit, these)
nmod(advantage, benefit)
punct(encourage, ?)
punct(encourage, ?)
aux(publicize, have)
nsubj(publicize, you)
root(ROOT, publicize)
det(value, the)
compound(value, cent)
punct(cent, -)
case(hour, per)
punct(hour, -)
compound(value, hour)
obj(publicize, value)
case(share, of)
det(company, the)
nmod:poss(share, company)
case(company, 's)
nmod(value, share)
case(premium, of)
compound(premium, insurance)
nmod(share, premium)
punct(value, ?)
punct(publicize, ?)
advmod(last, when)
aux(last, do)
nsubj(last, you)
advcl(publicize, last)
xcomp(last, compare)
nmod:poss(cost, you)
amod(premium, present)
compound(cost, premium)
obj(compare, cost)
case(cost, with)
det(cost, the)
obl(compare, cost)
case(insurance, of)
nmod(cost, insurance)
case(source, from)
amod(source, other)
nmod(cost, source)
punct(publicize, ?)
punct(publicize, ?)
aux(aid, can)
nmod:poss(company, you)
compound(company, insurance)
nsubj(aid, company)
root(ROOT, aid)
obj(aid, you)
mark(reduce, in)
advcl(aid, reduce)
amod(cost, administrative)
obj(reduce, cost)
punct(aid, ?)
punct(aid, ?)
aux(try, do)
nsubj(try, you)
root(ROOT, try)
mark(maintain, to)
xcomp(try, maintain)
det(principle, the)
obj(maintain, principle)
case(contribute, of)
compound(contribute, employee)
punct(contribute, -)
acl(principle, contribute)
punct(program, ()
case(program, as)
fixed(as, oppose)
fixed(as, to)
advmod(pay, fully)
compound(pay, company)
punct(pay, -)
amod(program, pay)
punct(pay, ))
obl(maintain, program)
punct(try, ?)
punct(try, ?)
vocative(protect, Holidays)
punct(Holidays, ,)
parataxis(Holidays, time)
nummod(time, off)
punct(protect, ,)
obl:npmod(protect, overtime)
aux(protect, do)
nsubj(protect, you)
root(ROOT, protect)
nmod:poss(privileges, you)
compound(privileges, holiday)
obj(protect, privileges)
case(requirement, with)
det(requirement, a)
compound(requirement, attendance)
obl(protect, requirement)
cc:preconj(before, both)
advmod(requirement, before)
cc(holiday, and)
case(holiday, after)
det(holiday, the)
conj(before, holiday)
punct(protect, ?)
punct(protect, ?)
aux(plan, do)
nsubj(plan, you)
root(ROOT, plan)
mark(limit, to)
xcomp(plan, limit)
amod(holiday, additional)
obj(limit, holiday)
case(area, to)
nmod(holiday, area)
cc(or, and)
punct(or, /)
cc(industrial, or)
conj(area, industrial)
conj(holiday, pattern)
punct(plan, ?)
punct(plan, ?)
aux(investigate, have)
nsubj(investigate, you)
root(ROOT, investigate)
det(possibility, the)
obj(investigate, possibility)
mark(move, of)
acl(possibility, move)
compound(holiday, midweek)
obj(move, holiday)
advmod(move, forward)
case(Monday, to)
obl(move, Monday)
cc(back, or)
conj(Monday, back)
case(Friday, to)
obl(back, Friday)
mark(have, in)
fixed(in, order)
mark(have, to)
advcl(move, have)
det(week, a)
amod(week, uninterrupted)
compound(week, work)
obj(have, week)
punct(investigate, ?)
punct(investigate, ?)
aux(police, be)
nsubj(police, you)
advmod(police, carefully)
root(ROOT, police)
compound(time, wash)
punct(wash, -)
compound(wash, up)
obj(police, time)
cc(period, and)
compound(period, rest)
conj(time, period)
mark(certain, to)
cop(certain, be)
advcl(police, certain)
mark(productive, that)
det(time, all)
amod(time, other)
nsubj(productive, time)
cop(productive, be)
ccomp(certain, productive)
punct(police, ?)
punct(police, ?)
aux(watch, be)
nsubj(watch, you)
root(ROOT, watch)
compound(schedule, work)
obj(watch, schedule)
case(operator, for)
compound(operator, boiler)
nmod(schedule, operator)
punct(guard, ,)
conj(operator, guard)
punct(operation, ,)
cc(operation, and)
amod(operation, other)
nummod(hour, 24)
punct(hour, -)
compound(day, hour)
punct(day, -)
compound(operation, day)
punct(operation, ,)
nummod(day, 7)
punct(day, -)
compound(week, day)
punct(week, -)
compound(operation, week)
conj(operator, operation)
mark(minimize, in)
fixed(in, order)
mark(minimize, to)
acl(operation, minimize)
obj(minimize, overtime)
punct(watch, ?)
punct(watch, ?)
cop(careful, be)
nsubj(careful, you)
root(ROOT, careful)
mark(restrict, to)
xcomp(careful, restrict)
det(number, the)
obj(restrict, number)
case(people, of)
nmod(number, people)
case(leave, on)
nmod(number, leave)
case(time, at)
nummod(time, one)
obl(restrict, time)
mark(minimize, so)
fixed(so, that)
nmod:poss(obligation, you)
amod(obligation, total)
compound(obligation, employment)
nsubj:pass(minimize, obligation)
aux:pass(minimize, be)
advcl(restrict, minimize)
punct(careful, ?)
punct(careful, ?)
compound(feeding, Plant)
compound(facility, feeding)
obj(consider, facility)
aux(consider, have)
nsubj(consider, you)
root(ROOT, consider)
xcomp(consider, use)
compound(equipment, vend)
obj(use, equipment)
mark(replace, to)
advcl(use, replace)
cc(reduce, or)
conj(replace, reduce)
det(number, the)
obj(reduce, number)
case(employee, of)
compound(employee, cafeteria)
nmod(number, employee)
punct(consider, ?)
punct(consider, ?)
root(ROOT, what)
cop(what, be)
det(possibility, the)
nsubj(what, possibility)
mark(operate, for)
acl(possibility, operate)
nmod:poss(cafeteria, you)
obj(operate, cafeteria)
case(shift, for)
det(shift, a)
amod(shift, single)
obl(operate, shift)
advmod(rely, only)
cc(rely, and)
conj(operate, rely)
case(machine, upon)
compound(machine, vend)
obl(rely, machine)
cc(sandwich, or)
amod(sandwich, prepackage)
conj(machine, sandwich)
case(operation, for)
det(operation, the)
amod(operation, second)
punct(shift, -)
cc(shift, and)
amod(shift, third)
punct(shift, -)
compound(operation, shift)
obl(rely, operation)
punct(what, ?)
punct(what, ?)
aux(check, have)
nsubj(check, you)
root(ROOT, check)
det(cost, the)
obj(check, cost)
mark(subcontract, of)
acl(cost, subcontract)
nmod:poss(operation, you)
compound(operation, cafeteria)
obj(subcontract, operation)
mark(save, in)
fixed(in, order)
mark(save, to)
advcl(subcontract, save)
amod(cost, administrative)
obj(save, cost)
punct(check, ?)
punct(check, ?)
cop(possibility, be)
nmod:poss(possibility, there)
root(ROOT, possibility)
mark(have, of)
acl(possibility, have)
compound(help, cafeteria)
obj(have, help)
xcomp(have, work)
compound(time, part)
punct(time, -)
obj(work, time)
case(job, on)
amod(job, custodial)
cc(other, or)
conj(custodial, other)
obl(work, job)
punct(possibility, ?)
punct(possibility, ?)
aux(relieve, can)
amod(period, stagger)
compound(period, lunch)
nsubj(relieve, period)
root(ROOT, relieve)
det(strain, the)
compound(strain, capacity)
obj(relieve, strain)
case(facility, on)
nmod:poss(facility, you)
compound(facility, feeding)
obl(relieve, facility)
punct(relieve, ?)
punct(relieve, ?)
aux(feasible, would)
expl(feasible, it)
cop(feasible, be)
root(ROOT, feasible)
mark(limit, to)
csubj(feasible, limit)
det(menu, the)
obj(limit, menu)
mark(reduce, in)
fixed(in, order)
mark(reduce, to)
advcl(limit, reduce)
compound(cost, feeding)
obj(reduce, cost)
punct(feasible, ?)
punct(feasible, ?)
aux(consider, have)
nsubj(consider, you)
root(ROOT, consider)
amod(withdrawal, gradual)
obj(consider, withdrawal)
case(subsidy, of)
nmod(withdrawal, subsidy)
case(operation, to)
nmod:poss(operation, you)
case(plant, in)
punct(plant, -)
compound(operation, plant)
compound(operation, feeding)
obl(consider, operation)
punct(consider, ?)
punct(consider, ?)
aux(utilize, be)
nsubj(utilize, you)
root(ROOT, utilize)
compound(space, cafeteria)
obj(utilize, space)
case(meeting, for)
compound(meeting, company)
nmod(space, meeting)
cc(discussion, or)
conj(meeting, discussion)
punct(utilize, ?)
punct(utilize, ?)
compound(facility, recreation)
nsubj(expense, facility)
cop(expense, be)
nmod:poss(expense, you)
root(ROOT, expense)
case(area, in)
det(area, this)
nmod(expense, area)
amod(expense, commensurate)
case(number, with)
det(number, the)
obl(commensurate, number)
case(employee, of)
nmod(number, employee)
nsubj(benefit, who)
acl:relcl(employee, benefit)
case(program, from)
nmod:poss(program, you)
obl(benefit, program)
punct(expense, ?)
punct(expense, ?)
aux(audit, have)
nsubj(audit, you)
root(ROOT, audit)
nmod:poss(program, you)
obj(audit, program)
advmod(audit, recently)
mark(weed, to)
advcl(audit, weed)
compound:prt(weed, out)
det(phase, those)
obj(weed, phase)
nsubj(draw, that)
acl:relcl(phase, draw)
nmod(participation, least)
obj(draw, participation)
punct(audit, ?)
punct(audit, ?)
aux(contribute, do)
nsubj(contribute, employee)
root(ROOT, contribute)
nmod:poss(share, they)
obj(contribute, share)
case(money, of)
nmod(share, money)
case(facility, to)
amod(facility, recreational)
nmod(money, facility)
punct(contribute, ?)
punct(contribute, ?)
aux(consider, have)
nsubj(consider, you)
root(ROOT, consider)
xcomp(consider, delegate)
amod(responsibility, operational)
obj(delegate, responsibility)
case(association, to)
nmod:poss(association, you)
compound(association, employee)
nmod(responsibility, association)
cc(restrict, and)
advmod(restrict, carefully)
conj(delegate, restrict)
nmod:poss(plant, you)
nmod:poss(contribution, plant)
case(plant, 's)
amod(contribution, financial)
obj(restrict, contribution)
punct(consider, ?)
punct(consider, ?)
aux(take, could)
det(employee, a)
nmod:poss(club, employee)
case(employee, 's)
compound(club, garden)
nsubj(take, club)
root(ROOT, take)
compound:prt(take, over)
amod(care, partial)
obj(take, care)
case(grounds, of)
compound(grounds, plant)
nmod(care, grounds)
punct(take, ?)
punct(take, ?)
aux(useful, would)
det(club, a)
compound(club, camera)
nsubj(useful, club)
cop(useful, be)
root(ROOT, useful)
mark(take, in)
advcl(useful, take)
obj(take, picture)
xcomp(take, pertinent)
case(safety, to)
compound(safety, plant)
obl(pertinent, safety)
punct(useful, ?)
punct(useful, ?)
aux(spend, be)
nsubj(spend, you)
root(ROOT, spend)
advmod(much, too)
amod(money, much)
obj(spend, money)
case(uniform, on)
compound(uniform, team)
nmod(money, uniform)
nsubj(benefit, that)
acl:relcl(uniform, benefit)
advmod(employee, only)
det(employee, a)
amod(employee, few)
obj(benefit, employee)
punct(spend, ?)
punct(spend, ?)
aux(underwriting, be)
nsubj(underwriting, you)
root(ROOT, underwriting)
amod(trip, expensive)
compound(trip, team)
obj(underwriting, trip)
punct(underwriting, ?)
punct(underwriting, ?)
aux(utilize, be)
nsubj(utilize, you)
root(ROOT, utilize)
compound(machine, vend)
compound(proceed, machine)
obj(utilize, proceed)
mark(help, to)
advcl(utilize, help)
xcomp(help, pay)
case(program, for)
nmod:poss(program, you)
obl(pay, program)
punct(utilize, ?)
punct(utilize, ?)
parataxis(utilize, transportation)
cc(parking, and)
conj(transportation, parking)
aux(know, do)
nsubj(know, you)
parataxis(utilize, know)
det(trend, the)
obj(know, trend)
case(cost, in)
nmod:poss(cost, you)
nmod(trend, cost)
mark(maintain, of)
acl(cost, maintain)
compound(road, access)
obj(maintain, road)
cc(lot, and)
compound(lot, parking)
conj(road, lot)
punct(utilize, ?)
punct(utilize, ?)
mark(use, if)
nsubj(use, you)
advcl(replace, use)
compound(attendant, parking)
obj(use, attendant)
punct(replace, ,)
aux(replace, can)
nsubj:pass(replace, they)
aux:pass(replace, be)
root(ROOT, replace)
case(gate, by)
amod(gate, automatic)
compound(gate, parking)
obl(replace, gate)
punct(replace, ?)
punct(replace, ?)
aux(erect, will)
nmod:poss(company, you)
amod(company, local)
compound(company, bus)
nsubj(erect, company)
root(ROOT, erect)
cc(or, and)
punct(or, /)
cc(maintain, or)
conj(erect, maintain)
det(stop, the)
compound(stop, bus)
obj(maintain, stop)
case(plant, at)
nmod:poss(plant, you)
nmod(stop, plant)
punct(erect, ?)
punct(erect, ?)
mark(provide, if)
nsubj(provide, you)
advcl(replace, provide)
amod(transportation, inter-plant)
obj(provide, transportation)
punct(replace, ,)
aux(replace, can)
nsubj:pass(replace, this)
aux:pass(replace, be)
root(ROOT, replace)
case(transportation, by)
amod(transportation, available)
amod(transportation, public)
obl(replace, transportation)
punct(replace, ?)
punct(replace, ?)
mark(use, if)
nsubj(use, you)
advcl(cheaper, use)
compound(transportation, company)
obj(use, transportation)
mark(meet, to)
acl(transportation, meet)
obj(meet, train)
cc(haul, or)
mark(haul, to)
conj(meet, haul)
obj(haul, visitor)
punct(cheaper, ,)
aux(cheaper, would)
nsubj(cheaper, taxis)
cop(cheaper, be)
root(ROOT, cheaper)
punct(cheaper, ?)
punct(cheaper, ?)
advmod(efficient, how)
root(ROOT, efficient)
cc(necessary, and)
conj(efficient, necessary)
cop(efficient, be)
nmod:poss(vehicle, you)
amod(vehicle, intra-company)
nsubj(efficient, vehicle)
punct(efficient, ?)
punct(efficient, ?)
aux(re-schedule, can)
nsubj:pass(re-schedule, they)
aux:pass(re-schedule, be)
root(ROOT, re-schedule)
punct(re-schedule, ?)
punct(re-schedule, ?)
aux(assign, can)
compound(time, part)
punct(time, -)
compound(driver, time)
nsubj:pass(assign, driver)
aux:pass(assign, be)
root(ROOT, assign)
case(work, to)
amod(work, other)
amod(work, productive)
obl(assign, work)
punct(assign, ?)
punct(assign, ?)
amod(vacation, pay)
root(ROOT, vacation)
nsubj(economical, which)
cop(economical, be)
advmod(economical, more)
acl:relcl(vacation, economical)
case(plant, for)
nmod:poss(plant, you)
obl(economical, plant)
punct(vacation, --)
det(shutdown, a)
compound(shutdown, vacation)
appos(vacation, shutdown)
cc(vacation, or)
amod(vacation, space)
conj(shutdown, vacation)
nsubj(require, that)
acl:relcl(shutdown, require)
amod(employee, extra)
obj(require, employee)
case(in, for)
compound(in, vacation)
compound(in, fill)
punct(in, -)
nmod(employee, in)
punct(vacation, ?)
punct(vacation, ?)
aux(space, can)
nsubj:pass(space, vacation)
aux:pass(space, be)
root(ROOT, space)
case(month, throughout)
det(month, the)
nummod(month, 12)
obl(space, month)
mark(minimize, to)
advcl(space, minimize)
det(number, the)
obj(minimize, number)
case(in, of)
compound(in, employee)
compound(in, fill)
punct(in, -)
nmod(number, in)
punct(space, ?)
punct(space, ?)
aux(insist, do)
nsubj(insist, you)
root(ROOT, insist)
mark(take, that)
amod(employee, unneeded)
compound(employee, salary)
nsubj(take, employee)
ccomp(insist, take)
nmod:poss(vacation, they)
obj(take, vacation)
case(shutdown, during)
compound(shutdown, plant)
obl(take, shutdown)
punct(insist, ?)
punct(insist, ?)
obj(do, what)
aux(do, can)
nmod:poss(sale, you)
nsubj(do, sale)
cc(purchase, and)
conj(sale, purchase)
conj(sale, department)
root(ROOT, do)
mark(curtail, to)
xcomp(do, curtail)
obj(curtail, order)
punct(shipment, ,)
conj(order, shipment)
punct(receipt, ,)
cc(receipt, and)
conj(order, receipt)
case(period, during)
compound(period, vacation)
compound(period, shutdown)
obl(curtail, period)
punct(do, ?)
punct(do, ?)
nsubj(age, retirement)
cop(age, be)
det(age, a)
amod(age, arbitrary)
compound(age, retirement)
root(ROOT, age)
case(65, of)
nmod(age, 65)
advmod(cost, actually)
acl(age, cost)
nmod:poss(money, you)
compound(money, plant)
obj(cost, money)
punct(age, ?)
punct(age, ?)
det(sort, what)
obj(make, sort)
case(effort, of)
nmod(sort, effort)
aux(make, do)
nsubj(make, you)
root(ROOT, make)
mark(assure, to)
xcomp(make, assure)
mark(productive, that)
amod(worker, older)
cc(disable, or)
conj(older, disable)
nsubj(productive, worker)
cop(productive, be)
advmod(productive, fully)
ccomp(assure, productive)
punct(productive, ?)
punct(productive, ?)
aux(reduce, would)
amod(retirement, early)
nsubj(reduce, retirement)
case(non-productive, of)
nmod(retirement, non-productive)
punct(employee, ,)
amod(employee, disable)
nmod(retirement, employee)
conj(productive, reduce)
det(number, the)
obj(reduce, number)
case(job, of)
compound(work, make)
punct(work, -)
compound(job, work)
nmod(number, job)
punct(make, ?)
punct(make, ?)
aux(accept, will)
nmod:poss(union, you)
nsubj(accept, union)
root(ROOT, accept)
compound(concession, seniority)
obj(accept, concession)
mark(assign, in)
acl(concession, assign)
obj(assign, work)
case(employee, for)
amod(employee, older)
cc(disable, or)
conj(older, disable)
obl(assign, employee)
punct(accept, ?)
punct(accept, ?)
nsubj(share, Medical)
cc(health, and)
conj(Medical, health)
aux(share, can)
nsubj(share, you)
parataxis(accept, share)
amod(facility, medical)
obj(share, facility)
cc(staff, and)
conj(facility, staff)
case(plant, with)
amod(plant, neighbor)
obl(share, plant)
punct(accept, ?)
punct(accept, ?)
mark(have, if)
nsubj(have, you)
advcl(replace, have)
det(doctor, a)
amod(time, full)
punct(time, -)
compound(doctor, time)
obj(have, doctor)
advmod(have, now)
punct(replace, ,)
aux(replace, can)
nsubj:pass(replace, he)
aux:pass(replace, be)
root(ROOT, replace)
case(doctor, with)
det(doctor, a)
compound(time, part)
punct(time, -)
compound(doctor, time)
obl(replace, doctor)
cc(one, or)
conj(doctor, one)
nsubj(serve, who)
acl:relcl(doctor, serve)
case(basis, on)
det(basis, a)
compound(basis, fee)
punct(fee, -)
case(case, per)
punct(case, -)
nmod(fee, case)
obl(serve, basis)
advmod(serve, only)
punct(replace, ?)
punct(replace, ?)
aux(replace, can)
nmod:poss(nurse, you)
compound(nurse, plant)
nsubj:pass(replace, nurse)
aux:pass(replace, be)
root(ROOT, replace)
case(man, by)
det(man, a)
amod(man, train)
amod(aid, first)
punct(aid, -)
compound(man, aid)
obl(replace, man)
nsubj(work, who)
acl:relcl(man, work)
amod(time, full)
punct(time, -)
obj(work, time)
case(assignment, on)
det(assignment, some)
amod(assignment, other)
obl(work, assignment)
punct(replace, ?)
punct(replace, ?)
aux(distinguish, do)
nsubj(distinguish, you)
advmod(distinguish, rigidly)
root(ROOT, distinguish)
case(problem, between)
compound(problem, job)
punct(job, -)
cc(connect, and)
amod(connect, non-job)
punct(connect, -)
amod(problem, connect)
compound(problem, health)
obl(distinguish, problem)
cc(avoid, and)
conj(distinguish, avoid)
xcomp(avoid, treat)
det(latter, the)
obj(treat, latter)
punct(distinguish, ?)
punct(distinguish, ?)
aux(offer, be)
nsubj(offer, you)
advmod(offer, indiscriminantly)
root(ROOT, offer)
amod(service, unnecessary)
amod(service, medical)
obj(offer, service)
punct(service, --)
compound(shot, flu)
appos(service, shot)
punct(treatment, ,)
compound(lamp, sun)
compound(treatment, lamp)
conj(shot, treatment)
punct(etc, ,)
conj(shot, etc)
punct(offer, .)
punct(offer, ?)
punct(offer, ?)
mark(have, if)
nsubj(have, you)
advcl(worth, have)
det(program, a)
amod(program, annual)
cc(regular, or)
conj(annual, regular)
amod(program, physical)
compound(program, examination)
obj(have, program)
punct(worth, ,)
cop(worth, be)
nsubj(worth, it)
root(ROOT, worth)
obj(cost, what)
nsubj(cost, it)
aux(cost, be)
ccomp(worth, cost)
obj(cost, you)
punct(worth, ?)
punct(program, ?)
det(program, a)
nsubj(worth, program)
mark(fit, to)
acl(program, fit)
nmod:poss(need, you)
obj(fit, need)
xcomp(fit, consider)
obj(afford, what)
nsubj(afford, you)
aux(afford, can)
ccomp(consider, afford)
mark(spend, to)
xcomp(afford, spend)
cc(what, and)
conj(spend, what)
nmod:poss(goal, you)
nsubj(what, goal)
cop(what, be)
mark(set, before)
acl:relcl(what, set)
compound:prt(set, up)
cc(revamp, or)
conj(set, revamp)
nmod:poss(program, you)
compound(benefit, employee)
compound(program, benefit)
obj(revamp, program)
punct(program, .)
advmod(many, too)
amod(official, many)
compound(official, plant)
nsubj(eager, official)
cop(eager, be)
advmod(eager, all)
advmod(eager, too)
root(ROOT, eager)
mark(buy, to)
xcomp(eager, buy)
det(program, a)
compound(program, package)
obj(buy, program)
case(company, from)
det(company, a)
compound(company, insurance)
obl(buy, company)
advmod(work, simply)
mark(work, because)
nsubj(work, it)
advcl(buy, work)
case(plant, for)
det(plant, another)
obl(work, plant)
punct(eager, .)
cc(be, but)
advmod(employ, even)
mark(employ, if)
det(plant, that)
amod(plant, other)
nsubj(employ, plant)
advcl(be, employ)
det(number, the)
amod(number, same)
obj(employ, number)
case(worker, of)
nmod(number, worker)
cc(make, and)
conj(employ, make)
det(product, the)
amod(product, same)
obj(make, product)
punct(be, ,)
expl(be, there)
root(ROOT, be)
amod(fact, other)
nsubj(be, fact)
mark(consider, to)
acl(fact, consider)
punct(be, .)
advmod(old, how)
root(ROOT, old)
cop(old, be)
nmod:poss(force, you)
compound(force, working)
nsubj(old, force)
punct(old, ?)
punct(old, ?)
root(ROOT, what)
cop(what, be)
nmod:poss(margin, you)
compound(margin, profit)
nsubj(what, margin)
punct(what, ?)
punct(what, ?)
case(section, in)
det(section, what)
obl(locate, section)
case(country, of)
det(country, the)
nmod(section, country)
aux:pass(locate, be)
nsubj:pass(locate, you)
root(ROOT, locate)
punct(locate, ?)
punct(locate, ?)
cop(area, be)
nsubj(area, you)
case(area, in)
det(area, a)
amod(area, rural)
cc(urban, or)
conj(rural, urban)
root(ROOT, area)
punct(area, ?)
punct(area, ?)
det(factor, these)
nsubj(make, factor)
aux(make, can)
root(ROOT, make)
det(difference, the)
obj(make, difference)
case(waste, between)
nmod(difference, waste)
cc(efficiency, and)
conj(waste, efficiency)
case(program, in)
det(program, any)
compound(program, benefit)
nmod(waste, program)
punct(make, .)
case(all, above)
obl(set, all)
punct(set, ,)
aux(set, do)
advmod(set, not)
root(ROOT, set)
compound:prt(set, up)
amod(benefit, extravagant)
compound(benefit, fringe)
obj(set, benefit)
advmod(buy, just)
mark(buy, to)
advcl(set, buy)
compound(good, employee)
nsubj(will, good)
xcomp(buy, will)
punct(set, .)
nsubj(stress, Unions)
root(ROOT, stress)
compound(benefit, fringe)
obj(stress, benefit)
punct(prefer, ,)
cc(prefer, but)
det(worker, the)
amod(worker, individual)
amod(worker, hourly)
nsubj(prefer, worker)
conj(stress, prefer)
obj(prefer, cash)
det(time, every)
obl:tmod(prefer, time)
punct(Aim, .)
obj(prefer, Aim)
mark(balance, to)
acl(Aim, balance)
nmod:poss(package, you)
compound(benefit, employee)
compound(package, benefit)
obj(balance, package)
punct(stress, .)
det(plant, some)
nsubj(go, plant)
root(ROOT, go)
advmod(go, overboard)
case(type, on)
nummod(type, one)
obl(go, type)
case(fringe, of)
nmod(type, fringe)
punct(go, --)
parataxis(go, say)
det(plan, a)
amod(plan, liberal)
compound(plan, retirement)
obj(say, plan)
punct(plan, --)
cc(find, and)
conj(say, find)
obj(find, themselves)
xcomp(find, vulnerable)
advmod(find, elsewhere)
punct(go, .)
nsubj(ask, they)
aux(ask, be)
root(ROOT, ask)
case(trouble, for)
compound(trouble, union)
obl(ask, trouble)
punct(ask, .)
nsubj(let, Communications)
mark(want, if)
nsubj(want, you)
advcl(let, want)
obj(want, credit)
case(program, for)
nmod:poss(program, you)
compound(service, employee)
compound(program, service)
obl(want, program)
punct(let, ,)
root(ROOT, let)
nmod:poss(worker, you)
obj(let, worker)
xcomp(let, know)
obl(entitle, what)
nsubj:pass(entitle, they)
aux:pass(entitle, be)
ccomp(know, entitle)
obl(entitle, to)
punct(let, .)
root(ROOT, encourage)
obj(encourage, they)
mark(exercise, to)
xcomp(encourage, exercise)
nmod:poss(benefit, they)
obj(exercise, benefit)
punct(encourage, .)
nsubj:pass(do, this)
aux(do, can)
aux:pass(do, be)
root(ROOT, do)
case(story, by)
obl(do, story)
case(organ, in)
nmod:poss(organ, you)
compound(organ, house)
obl(do, organ)
punct(poster, ,)
conj(organ, poster)
punct(publication, ,)
amod(publication, special)
conj(organ, publication)
punct(letter, ,)
conj(organ, letter)
case(home, to)
nmod:poss(home, worker)
case(worker, 's)
nmod(letter, home)
cc(word, as)
fixed(as, well)
fixed(as, as)
case(word, by)
conj(organ, word)
case(mouth, of)
nmod(word, mouth)
case(chain, through)
nmod:poss(chain, you)
nmod(word, chain)
case(command, of)
nmod(chain, command)
punct(do, .)
det(company, some)
nsubj(find, company)
root(ROOT, find)
det(imagination, a)
amod(imagination, little)
obj(find, imagination)
xcomp(find, helpful)
punct(find, .)
root(ROOT, Hallmark)
compound(Inc., card)
punct(Inc., ,)
nsubj(have, Inc.)
punct(Inc., ,)
compound(City, Kansas)
list(card, City)
punct(City, ,)
appos(City, mo.)
punct(have, ,)
root(ROOT, have)
det(game, a)
compound(it, do)
punct(yourself, -)
compound(yourself, it)
punct(yourself, -)
compound(game, yourself)
compound(game, quiz)
obj(have, game)
acl(game, call)
punct(have, ``)
compound(Bafflers, benefit)
root(ROOT, Bafflers)
punct(Bafflers, '')
punct(Bafflers, ,)
obj(distribute, which)
nsubj(distribute, it)
acl:relcl(Bafflers, distribute)
case(employee, to)
obl(distribute, employee)
punct(Bafflers, . )
nummod(Dietetic, m)
cc(R, &)
conj(m, R)
root(ROOT, Dietetic)
compound(Inc., Laboratories)
punct(Inc., ,)
nsubj(give, Inc.)
punct(Inc., ,)
appos(Inc., Columbus)
punct(give, ,)
root(ROOT, give)
det:predet(worker, all)
nmod:poss(worker, its)
iobj(give, worker)
det(checkbook, a)
compound(checkbook, facsimile)
obj(give, checkbook)
punct(give, --)
det(check, each)
obl:npmod(give, check)
acl(check, show)
det(amount, the)
obj(show, amount)
det(company, the)
nsubj(spend, company)
acl:relcl(amount, spend)
case(fringe, on)
det(fringe, a)
amod(fringe, particular)
obl(spend, fringe)
punct(give, . )
compound(Company, U.)
compound(Company, S.)
compound(Company, rubber)
nsubj(pass, Company)
punct(Company, ,)
compound(York, New)
appos(Company, York)
punct(pass, ,)
root(ROOT, pass)
compound:prt(pass, out)
det(form, a)
obj(pass, form)
acl(form, itemize)
det(value, the)
obj(itemize, value)
case(benefit, of)
nmod(value, benefit)
punct(pass, .)
det(worker, the)
amod(collar, blue)
punct(collar, -)
compound(worker, collar)
nsubj(know, worker)
advmod(know, thus)
root(ROOT, know)
nmod:poss(package, he)
compound(package, insurance)
obj(know, package)
punct(know, ,)
case(example, for)
obl(cost, example)
punct(cost, ,)
parataxis(know, cost)
obj(cost, $)
nummod($, 227.72)
punct(know, .)
nsubj(have, insurance)
parataxis(know, have)
det(company, the)
compound(company, insurance)
obj(have, company)
cc(department, or)
nmod:poss(department, you)
amod(department, own)
compound(department, accounting)
conj(company, department)
conj(have, break)
compound:prt(break, down)
det(cost, the)
obj(break, cost)
case(package, of)
nmod:poss(package, you)
compound(package, insurance)
nmod(cost, package)
advmod(break, periodically)
punct(know, .)
nsubj(find, you)
aux(find, may)
root(ROOT, find)
amod(coverage, certain)
obj(find, coverage)
acl(coverage, cost)
advmod(more, much)
obj(cost, more)
mark(feasible, than)
cop(feasible, be)
advmod(feasible, economically)
advcl(more, feasible)
punct(cost, ,)
advmod(feasible, there)
mark(alerting, by)
advcl(cost, alerting)
obj(alerting, you)
case(revision, to)
amod(revision, desirable)
obl(alerting, revision)
punct(find, .)
root(ROOT, check)
mark(see, to)
xcomp(check, see)
mark(put, if)
nsubj:pass(put, some)
case(benefit, of)
nmod:poss(benefit, you)
nmod(some, benefit)
punct(benefit, --)
case(disability, such)
fixed(such, as)
case(job, on)
punct(job, -)
det(job, the)
punct(job, -)
compound(disability, job)
nsubj(pay, disability)
acl:relcl(benefit, pay)
punct(put, --)
aux(put, can)
aux:pass(put, be)
ccomp(see, put)
case(payment, on)
det(payment, a)
amod(payment, direct)
obl(put, payment)
cc(basis, rather)
fixed(rather, than)
det(basis, a)
amod(basis, insure)
conj(payment, basis)
case(savings, at)
det(savings, a)
nmod(basis, savings)
case(you, to)
nmod(savings, you)
punct(check, .)
root(ROOT, use)
amod(insurance, deductable)
obj(use, insurance)
advmod(feasible, wherever)
xcomp(use, feasible)
punct(use, .)
nsubj(put, it)
aux(put, can)
root(ROOT, put)
det(end, a)
obj(put, end)
case(claim, to)
amod(claim, marginal)
obl(put, claim)
nsubj(play, which)
acl:relcl(claim, play)
obj(play, havoc)
case(rate, with)
nmod:poss(rate, you)
compound(rate, insurance)
nmod(havoc, rate)
punct(put, .)
advmod(beware, also)
punct(beware, ,)
root(ROOT, beware)
case(policy, of)
amod(end, open)
punct(end, -)
compound(policy, end)
nmod(beware, policy)
punct(beware, ,)
advmod(field, especially)
case(field, in)
det(field, the)
amod(field, medical)
nmod(beware, field)
punct(beware, .)
nsubj(mean, this)
aux(mean, will)
root(ROOT, mean)
mark(go, that)
det(time, every)
obl:tmod(go, time)
expl(be, there)
ccomp(mean, be)
det(increase, a)
nsubj(be, increase)
case(rate, in)
compound(rate, hospital)
nmod(increase, rate)
nmod:poss(cost, you)
nsubj(go, cost)
aux(go, will)
ccomp(mean, go)
advmod(go, up)
case(manner, in)
amod(manner, like)
obl(go, manner)
punct(mean, .)
root(ROOT, put)
det(limit, a)
compound(limit, dollar)
punct(dollar, -)
cc(cent, and)
punct(cent, -)
conj(dollar, cent)
obj(put, limit)
case(benefit, on)
obl(put, benefit)
punct(put, .)
aux(go, do)
advmod(go, not)
root(ROOT, go)
advmod(go, overboard)
case(insurance, on)
obl(go, insurance)
nsubj(pay, that)
acl:relcl(insurance, pay)
obj(pay, benefit)
advmod(death, only)
case(death, upon)
obl(pay, death)
punct(go, .)
advmod(appreciate, generally)
punct(appreciate, ,)
nmod:poss(employee, you)
nsubj(appreciate, employee)
aux(appreciate, will)
advmod(appreciate, greatly)
parataxis(go, appreciate)
obj(appreciate, benefit)
nsubj(protect, that)
acl:relcl(benefit, protect)
obj(protect, he)
case(life, during)
nmod:poss(life, he)
compound(life, working)
obl(protect, life)
cc(retirement, or)
case(retirement, during)
conj(life, retirement)
punct(go, .)
amod(time, special)
nsubj(specify, time)
advmod(time, off)
mark(grant, in)
acl(time, grant)
compound(leave, bereavement)
obj(grant, leave)
punct(specify, ,)
root(ROOT, specify)
det(time, the)
amod(time, maximum)
obj(specify, time)
advmod(specify, off)
cc(list, and)
conj(specify, list)
obj(list, what)
det(worker, the)
nmod:poss(relation, worker)
case(worker, 's)
nsubj(be, relation)
case(decease, to)
det(decease, the)
nmod(relation, decease)
aux(be, must)
ccomp(list, be)
mark(qualify, to)
xcomp(be, qualify)
punct(specify, .)
advmod(avoid, thus)
punct(avoid, ,)
nsubj(avoid, you)
root(ROOT, avoid)
obj(avoid, headach)
mark(want, when)
det(employee, a)
nsubj(want, employee)
advcl(avoid, want)
compound:prt(want, off)
case(funeral, for)
nmod:poss(cousin, he)
amod(cousin, fourth)
nmod:poss(funeral, cousin)
case(cousin, 's)
obl(want, funeral)
punct(avoid, .)
advmod(reserve, also)
punct(reserve, ,)
root(ROOT, reserve)
det(right, the)
obj(reserve, right)
mark(demand, to)
acl(right, demand)
obj(demand, proof)
case(death, of)
nmod(proof, death)
case(fact, despite)
det(fact, the)
obl(demand, fact)
mark(use, that)
nsubj(use, you)
aux(use, will)
advmod(use, probably)
advmod(use, never)
acl(fact, use)
obj(use, it)
punct(reserve, .)
compound(break, Coffee)
nsubj(headache, break)
aux(headache, can)
cop(headache, be)
det(headache, a)
amod(headache, real)
root(ROOT, headache)
mark(regulate, if)
advmod(regulate, not)
advcl(headache, regulate)
punct(headache, .)
compound(machine, vend)
nsubj(alleviate, machine)
aux(alleviate, can)
root(ROOT, alleviate)
det(hike, the)
amod(hike, long)
obj(alleviate, hike)
case(cafeteria, to)
det(cafeteria, the)
obl(alleviate, cafeteria)
case(break, during)
det(break, the)
obl(alleviate, break)
case(waste, with)
amod(waste, result)
nmod(break, waste)
case(time, of)
compound(time, production)
nmod(waste, time)
punct(alleviate, .)
mark(sell, if)
nsubj:pass(sell, coffee)
aux:pass(sell, be)
advcl(let, sell)
case(cafeteria, at)
det(cafeteria, the)
obl(sell, cafeteria)
punct(let, ,)
root(ROOT, let)
det(worker, a)
amod(worker, few)
obj(let, worker)
case(department, in)
det(department, each)
nmod(worker, department)
advcl(let, get)
obj(get, it)
case(group, for)
det(group, the)
amod(group, whole)
obl(get, group)
punct(let, .)
root(ROOT, consider)
xcomp(consider, install)
amod(line, supplemental)
compound(line, serving)
obj(install, line)
case(area, in)
compound(area, production)
obl(install, area)
punct(consider, .)
root(ROOT, make)
xcomp(make, sure)
nsubj:pass(place, milk)
case(coffee, for)
det(coffee, the)
nmod(milk, coffee)
aux:pass(place, be)
ccomp(sure, place)
case(dispenser, in)
obl(place, dispenser)
cc(container, rather)
fixed(rather, than)
case(container, in)
conj(dispenser, container)
punct(place, ,)
mark(supply, if)
nsubj(supply, you)
aux(supply, be)
advcl(place, supply)
det(coffee, the)
obj(supply, coffee)
punct(make, .)
advmod(saddle, otherwise)
punct(saddle, ,)
nsubj:pass(saddle, you)
aux(saddle, may)
aux:pass(saddle, be)
root(ROOT, saddle)
case(bill, with)
det(bill, a)
amod(size, good)
punct(size, -)
compound(bill, size)
compound(bill, milk)
obl(saddle, bill)
case(drinker, by)
compound(drinker, milk)
nmod(bill, drinker)
punct(saddle, .)
compound(policy, retirement)
nsubj(keep, policy)
root(ROOT, keep)
det(craftsmen, the)
compound(age, retirement)
obl:npmod(flexible, age)
amod(craftsmen, flexible)
advmod(skilled, so)
amod(craftsmen, skilled)
obj(keep, craftsmen)
case(tool, such)
fixed(such, as)
nmod(craftsmen, tool)
cc(die, and)
conj(keep, die)
obj(die, maker)
aux(keep, can)
aux:pass(keep, be)
conj(keep, keep)
case(job, on)
det(job, the)
obl(keep, job)
case(convenience, for)
det(convenience, the)
obl(keep, convenience)
case(company, of)
det(company, the)
nmod(convenience, company)
punct(keep, .)
cc(ease, and)
advmod(ease, so)
nsubj:pass(ease, deadhead)
case(payroll, on)
det(payroll, the)
nmod(deadhead, payroll)
aux(ease, can)
aux:pass(ease, be)
root(ROOT, ease)
compound:prt(ease, out)
case(age, at)
det(age, the)
amod(age, earliest)
amod(age, possible)
obl(ease, age)
punct(ease, .)
root(ROOT, make)
xcomp(make, sure)
nsubj(have, you)
ccomp(sure, have)
amod(age, minimum)
obj(have, age)
cc(time, and)
conj(age, time)
punct(time, -)
case(job, on)
punct(job, -)
det(job, the)
punct(job, -)
compound(requirement, job)
nmod(age, requirement)
acl(requirement, tie)
case(plan, into)
nmod:poss(plan, you)
compound(plan, pension)
obl(tie, plan)
punct(make, .)
amod(man, younger)
nsubj(think, man)
advmod(think, usually)
aux(think, do)
advmod(think, not)
parataxis(make, think)
case(pension, of)
obl(think, pension)
case(factor, as)
det(factor, a)
amod(factor, important)
compound(benefit, job)
compound(factor, benefit)
obl(think, factor)
advmod(think, anyhow)
cc(liable, and)
nsubj(liable, they)
cop(liable, be)
conj(think, liable)
mark(change, to)
xcomp(liable, change)
obj(change, job)
amod(time, several)
obl:tmod(settle, time)
mark(settle, before)
advcl(change, settle)
advmod(settle, down)
punct(make, .)
root(ROOT, Choose)
advmod(Choose, carefully)
case(plan, between)
amod(plan, contributory)
cc(non-contributory, or)
conj(contributory, non-contributory)
compound(plan, pension)
obl(Choose, plan)
punct(Choose, .)
expl(be, there)
root(ROOT, be)
nummod(side, two)
nsubj(be, side)
case(coin, of)
det(coin, a)
nmod(side, coin)
case(decision, for)
det(decision, this)
obl(be, decision)
punct(be, .)
nsubj(think, worker)
advmod(think, usually)
root(ROOT, think)
obj(think, more)
case(plan, of)
det(plan, a)
obl(more, plan)
nsubj(contribute, they)
acl:relcl(plan, contribute)
obl(contribute, to)
punct(think, .)
cc(collect, and)
nsubj(collect, they)
aux(collect, can)
case(least, at)
obl(collect, least)
root(ROOT, collect)
det(money, the)
obj(collect, money)
nsubj(put, they)
acl:relcl(money, put)
compound:prt(put, in)
punct(interest, ,)
cc(interest, plus)
conj(money, interest)
punct(collect, ,)
mark(leave, when)
nsubj(leave, they)
advcl(collect, leave)
det(company, the)
obj(leave, company)
punct(collect, . )
det(plan, a)
amod(plan, non-contributory)
nsubj(pay, plan)
advmod(pay, usually)
aux(pay, will)
advmod(pay, not)
root(ROOT, pay)
compound:prt(pay, off)
case(worker, for)
det(worker, the)
obl(pay, worker)
mark(retire, until)
nsubj(retire, he)
advcl(pay, retire)
punct(pay, .)
advmod(be, thus)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(incentive, a)
amod(incentive, add)
nsubj(be, incentive)
mark(stay, to)
acl(incentive, stay)
case(job, on)
det(job, the)
obl(stay, job)
punct(be, .)
nsubj(make, Holidays)
root(ROOT, make)
xcomp(make, sure)
nsubj(pay, you)
aux(pay, do)
advmod(pay, not)
ccomp(sure, pay)
case(holiday, for)
obl(pay, holiday)
nsubj(occur, that)
acl:relcl(holiday, occur)
mark(work, when)
det(employee, a)
nsubj(work, employee)
aux(work, would)
advmod(work, not)
advmod(work, otherwise)
aux(work, be)
advcl(occur, work)
punct(make, .)
nsubj(include, these)
root(ROOT, include)
punct(include, :)
obj(include, leave)
case(absence, of)
nmod(leave, absence)
punct(illness, ,)
conj(absence, illness)
punct(layoff, ,)
cc(layoff, and)
conj(absence, layoff)
punct(include, .)
root(ROOT, consider)
xcomp(consider, adop)
det(system, a)
obj(adop, system)
case(holiday, of)
nmod(system, holiday)
case(time, in)
det(time, which)
obl(grant, time)
advmod(time, off)
aux:pass(grant, be)
conj(consider, grant)
case(eye, with)
det(eye, a)
obl(grant, eye)
case(inconvenience, to)
amod(inconvenience, minimum)
nmod(eye, inconvenience)
case(operation, to)
det(operation, the)
nmod(inconvenience, operation)
case(plant, of)
det(plant, the)
nmod(operation, plant)
punct(consider, .)
expl(hard, it)
cop(hard, be)
advmod(hard, usually)
advmod(hard, not)
advmod(hard, too)
root(ROOT, hard)
mark(sell, to)
csubj(hard, sell)
obj(sell, worker)
case(this, on)
obl(sell, this)
mark(give, as)
nsubj(give, it)
advcl(sell, give)
iobj(give, they)
amod(period, longer)
compound(period, holiday)
obj(give, period)
punct(hard, .)
case(example, for)
obl(substitute, example)
punct(substitute, ,)
det(Friday, the)
nsubj:pass(substitute, Friday)
case(Thanksgiving, after)
nmod(Friday, Thanksgiving)
aux(substitute, can)
aux:pass(substitute, be)
root(ROOT, substitute)
case(birthday, for)
nmod:poss(birthday, Washington)
case(Washington, 's)
obl(substitute, birthday)
punct(substitute, .)
nsubj(reduce, this)
root(ROOT, reduce)
det(number, the)
obj(reduce, number)
case(shutdown, of)
amod(shutdown, expensive)
compound(shutdown, plant)
nmod(number, shutdown)
cc(startup, and)
conj(shutdown, startup)
punct(reduce, .)
root(ROOT, Require)
det(employee, each)
obj(Require, employee)
mark(work, to)
xcomp(Require, work)
nmod:poss(shift, he)
amod(shift, last)
obj(work, shift)
cc:preconj(before, both)
advmod(work, before)
cc(holiday, and)
case(holiday, after)
det(holiday, the)
conj(before, holiday)
mark(eligible, to)
cop(eligible, be)
acl(holiday, eligible)
case(pay, for)
obl(eligible, pay)
punct(Require, .)
nsubj(cut, this)
root(ROOT, cut)
det(rate, the)
amod(rate, absentee)
obj(cut, rate)
punct(cut, .)
compound(facility, eat)
nsubj(consider, facility)
root(ROOT, consider)
xcomp(consider, use)
compound(machine, vend)
obj(use, machine)
cc(cafeterias, rather)
fixed(rather, than)
amod(cafeterias, subsidize)
conj(machine, cafeterias)
punct(consider, .)
amod(model, latest)
nsubj(serve, model)
parataxis(consider, serve)
amod(meal, hot)
obj(serve, meal)
case(price, at)
amod(price, reasonable)
obl(serve, price)
punct(profit, ,)
cc(profit, and)
case(profit, at)
det(profit, a)
conj(serve, profit)
case(you, to)
nmod(profit, you)
punct(consider, .)
mark(run, if)
det(concessionaire, a)
nsubj(run, concessionaire)
advcl(keep, run)
det(cafeteria, the)
obj(run, cafeteria)
punct(keep, ,)
root(ROOT, keep)
det(eye, a)
obj(keep, eye)
compound:prt(keep, out)
case(quality, for)
obl(keep, quality)
cc(price, and)
conj(quality, price)
punct(keep, .)
mark(taste, if)
det(soup, the)
nsubj(taste, soup)
advcl(blame, taste)
case(dishwater, like)
obl(taste, dishwater)
punct(blame, ,)
nmod:poss(employee, you)
nsubj(blame, employee)
aux(blame, will)
advmod(blame, not)
root(ROOT, blame)
det(concessionaire, the)
obj(blame, concessionaire)
punct(blame, .)
nsubj(take, you)
aux(take, will)
root(ROOT, take)
det(rap, the)
obj(take, rap)
punct(take, .)
parataxis(take, check)
nmod:poss(location, you)
compound(location, cafeteria)
obj(check, location)
mark(make, to)
advcl(check, make)
xcomp(make, sure)
nsubj(convenient, it)
cop(convenient, be)
ccomp(sure, convenient)
case(employee, for)
amod(employee, most)
obl(convenient, employee)
punct(take, .)
nsubj(save, you)
aux(save, may)
root(ROOT, save)
amod(minute, valuable)
compound(minute, production)
obj(save, minute)
case(change, with)
det(change, a)
obl(save, change)
punct(save, .)
nsubj(spread, Vacations)
parataxis(save, spread)
nmod:poss(period, you)
compound(period, vacation)
obj(spread, period)
case(span, over)
det(span, the)
amod(span, widest)
amod(span, possible)
obl(spread, span)
case(time, of)
nmod(span, time)
cc(shut, or)
conj(spread, shut)
det(plant, the)
obj(shut, plant)
compound:prt(shut, down)
case(week, for)
nummod(week, two)
obl(shut, week)
punct(save, .)
nsubj(cut, this)
aux(cut, will)
root(ROOT, cut)
det(expense, the)
obj(cut, expense)
case(replacement, of)
compound(replacement, vacation)
nmod(expense, replacement)
punct(cut, .)
cc(be, and)
case(method, with)
det(method, the)
compound(method, shutdown)
obl(be, method)
expl(be, there)
aux(be, will)
root(ROOT, be)
det(argument, no)
nsubj(be, argument)
mark(get, as)
fixed(as, to)
nsubj(get, who)
acl(argument, get)
det(date, the)
compound(date, choice)
compound(date, vacation)
obj(get, date)
punct(be, .)
advmod(make, also)
root(ROOT, make)
xcomp(make, sure)
nsubj(have, you)
ccomp(sure, have)
amod(requirement, reasonable)
obj(have, requirement)
mark(work, as)
case(hour, to)
nsubj(work, hour)
advcl(have, work)
mark(entitle, before)
det(employee, a)
compound(employee, production)
nsubj:pass(entitle, employee)
aux:pass(entitle, be)
advcl(work, entitle)
case(vacation, to)
det(vacation, a)
obl(entitle, vacation)
punct(make, .)
nsubj(try, you)
aux(try, might)
root(ROOT, try)
xcomp(try, provide)
amod(time, standard)
compound(time, vacation)
obj(provide, time)
advmod(provide, off)
cc(make, but)
conj(provide, make)
det(vacation, the)
obj(make, vacation)
xcomp(make, pay)
xcomp(make, depend)
case(number, on)
det(number, the)
obl(depend, number)
case(hour, of)
nmod(number, hour)
advcl(depend, work)
case(year, in)
det(year, the)
amod(year, previous)
obl(work, year)
punct(try, .)
det(column, the)
amod(column, long)
cc(ever-, and)
conj(long, ever-)
amod(column, increase)
nsubj(move, column)
case(sportsman, of)
nmod(column, sportsman)
aux(move, be)
advmod(move, now)
root(ROOT, move)
case(era, into)
det(era, a)
amod(era, new)
obl(move, era)
punct(move, .)
amod(time, modern)
nsubj(change, time)
aux(change, have)
parataxis(move, change)
det(world, the)
obj(change, world)
case(recognition, beyond)
obl(change, recognition)
punct(move, .)
det(year, the)
amod(year, early)
nsubj(seem, year)
case(century, of)
det(century, the)
amod(century, twentieth)
nmod(year, century)
root(ROOT, seem)
advmod(far, very)
advmod(away, far)
advmod(seem, away)
punct(seem, .)
cc(remain, but)
case(change, with)
det:predet(change, all)
det(change, the)
obl(remain, change)
case(philosophy, in)
nmod(change, philosophy)
punct(dress, ,)
conj(philosophy, dress)
cc(terrain, and)
conj(philosophy, terrain)
punct(constant, --)
det(thing, a)
amod(thing, few)
nsubj(remain, thing)
root(ROOT, remain)
xcomp(remain, constant)
punct(constant, ,)
case(devotion, include)
det(devotion, the)
obl(constant, devotion)
case(Americans, of)
nmod(devotion, Americans)
case(sport, to)
det(sport, the)
amod(sport, great)
compound(sport, field)
nmod(devotion, sport)
punct(hunt, ,)
conj(sport, hunt)
cc(fishing, and)
conj(sport, fishing)
punct(constant, .)
mark(move, as)
det(generation, the)
nsubj(move, generation)
advcl(become, move)
advmod(move, on)
punct(become, ,)
nsubj(become, clothes)
root(ROOT, become)
advmod(suitable, more)
xcomp(become, suitable)
case(enjoyment, for)
det(enjoyment, the)
obl(suitable, enjoyment)
case(sport, of)
amod(sport, outdoor)
nmod(enjoyment, sport)
punct(suitable, .)
csubj(change, spor)
obj(spor, firearm)
root(ROOT, change)
punct(change, ,)
advmod(better, markedly)
case(better, for)
det(better, the)
obl(change, better)
punct(change, .)
advmod(outmode, just)
mark(outmode, as)
amod(transportation, modern)
nsubj(outmode, transportation)
aux(outmode, have)
advcl(necessitate, outmode)
det(wagon, the)
amod(wagon, early)
compound(cover, Studebaker)
amod(wagon, cover)
obj(outmode, wagon)
punct(necessitate, ,)
det(demand, the)
nsubj(necessitate, demand)
case(sportsman, of)
nmod:poss(sportsman, today)
case(today, 's)
nmod(demand, sportsman)
cc(woman, and)
conj(sportsman, woman)
aux(necessitate, have)
root(ROOT, necessitate)
obj(necessitate, change)
case(equipment, in)
nmod:poss(equipment, they)
nmod(change, equipment)
punct(necessitate, .)
det(firearm, the)
amod(firearm, american)
nsubj(replace, firearm)
cc(manufacturer, and)
compound(manufacturer, ammunition)
conj(firearm, manufacturer)
case(research, through)
amod(research, diligent)
nmod(manufacturer, research)
cc(development, and)
amod(development, technical)
conj(research, development)
aux(replace, have)
root(ROOT, replace)
det(loader, the)
compound(loader, muzzle)
obj(replace, loader)
cc(fire, and)
amod(shot, slow)
punct(fire, -)
conj(loader, fire)
amod(shot, single)
punct(shot, -)
compound(arm, shot)
obj(fire, arm)
case(auto-loader, with)
amod(auto-loader, modern)
amod(auto-loader, fast)
compound(auto-loader, fire)
nmod(arm, auto-loader)
punct(bolt, ,)
advmod(accurate, extremely)
amod(bolt, accurate)
conj(auto-loader, bolt)
punct(lever, ,)
conj(auto-loader, lever)
punct(firearm, ,)
cc(firearm, and)
compound(action, slide)
compound(firearm, action)
conj(auto-loader, firearm)
punct(replace, .)
cc(million, and)
root(ROOT, million)
case(round, of)
nmod(million, round)
case(ammunition, of)
advmod(new, entirely)
amod(ammunition, new)
cc(modern, and)
conj(new, modern)
amod(arm, small)
punct(arm, -)
compound(ammunition, arm)
nmod(million, ammunition)
punct(ammunition, ,)
acl(ammunition, design)
case(shooting, for)
nmod:poss(shooting, today)
case(today, 's)
compound(shooting, hunt)
cc(target, and)
conj(hunt, target)
obl(design, shooting)
punct(million, .)
cc(be, and)
case(practice, due)
fixed(due, to)
amod(use, modern)
compound(use, resource)
punct(use, -)
obl(be, use)
cc(practice, and)
compound(management, game)
compound(practice, management)
conj(use, practice)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(be, still)
nsubj(be, game)
mark(shoot, to)
acl(game, shoot)
punct(shoot, ,)
advmod(encroachment, even)
case(encroachment, with)
det(encroachment, the)
advmod(expand, ever)
punct(expand, -)
amod(encroachment, expand)
obl(shoot, encroachment)
case(land, on)
nmod(encroachment, land)
cc(water, and)
conj(land, water)
punct(be, .)
amod(practice, present)
compound(practice, conservation)
nsubj(regard, practice)
root(ROOT, regard)
obj(regard, wildlife)
punct(wildlife, ,)
cc(resource, not)
case(resource, as)
det(resource, a)
amod(resource, expendable)
amod(resource, natural)
conj(wildlife, resource)
punct(harvest, ,)
cc(harvest, but)
case(harvest, as)
det(harvest, a)
amod(harvest, annual)
conj(wildlife, harvest)
mark(sow, to)
aux:pass(sow, be)
acl(harvest, sow)
cc(reap, and)
advmod(reap, also)
conj(sow, reap)
punct(regard, .)
amod(bag, Unlimited)
compound(bag, game)
nsubj(possible, bag)
cop(possible, be)
root(ROOT, possible)
cc(legal, and)
conj(possible, legal)
case(state, in)
advmod(40, more)
fixed(more, than)
nummod(state, 40)
obl(possible, state)
punct(possible, ,)
case(preserve, on)
compound(preserve, shooting)
obl(possible, preserve)
punct(one, ()
appos(preserve, one)
case(phase, of)
det(phase, the)
amod(phase, newer)
nmod(one, phase)
case(management, of)
amod(management, modern)
compound(management, game)
punct(management, -)
nmod(phase, management)
punct(phase, ))
case(month, for)
nummod(month, five)
cc(six, and)
conj(five, six)
nmod(phase, month)
det(year, each)
nmod:npmod(month, year)
punct(possible, .)
advmod(harvest, Close)
case(million, to)
compound(million, two)
nummod(game, million)
compound(bird, game)
nsubj:pass(harvest, bird)
aux:pass(harvest, be)
root(ROOT, harvest)
case(preserve, on)
nummod(preserve, 1,500)
amod(preserve, commercial)
cc(private, and)
conj(commercial, private)
compound(preserve, shooting)
obl(harvest, preserve)
punct(area, ,)
cc(area, and)
case(area, on)
obl:npmod(control, State)
compound(control, game)
compound(control, commission)
punct(control, -)
amod(area, control)
compound(area, upland)
compound(area, game)
conj(preserve, area)
case(season, during)
det(season, the)
nummod(season, 1960)
case(61, -)
nmod(1960, 61)
nmod(area, season)
punct(harvest, .)
det(program, the)
compound(program, shooting)
compound(program, development)
root(ROOT, program)
case(manufacturer, of)
det(manufacturer, the)
compound(arm, spor)
compound(manufacturer, arm)
cc(ammunition, and)
conj(arm, ammunition)
nmod(program, manufacturer)
punct(program, ')
nsubj(publish, Institute)
aux(publish, have)
advmod(publish, successfully)
root(ROOT, publish)
det(fact, these)
obj(publish, fact)
case(magazine, in)
det(magazine, all)
amod(magazine, major)
amod(magazine, outdoor)
obl(publish, magazine)
punct(weekly, ,)
amod(weekly, many)
amod(weekly, national)
conj(magazine, weekly)
cc(papers, and)
det(papers, the)
compound(papers, trade)
conj(magazine, papers)
punct(publish, .)
det(way, the)
advmod(effective, most)
amod(way, effective)
nsubj(be, way)
mark(develop, to)
acl(way, develop)
amod(place, more)
obj(develop, place)
case(sportsman, for)
amod(sportsman, more)
nmod(place, sportsman)
mark(shoot, to)
acl(sportsman, shoot)
root(ROOT, be)
mark(encourage, to)
ccomp(be, encourage)
advmod(manage, properly)
xcomp(encourage, manage)
compound(preserve, shooting)
obj(manage, preserve)
punct(be, .)
nsubj(aim, this)
aux(aim, have)
cop(aim, be)
det(aim, the)
root(ROOT, aim)
case(director, of)
det(director, the)
nmod(aim, director)
case(program, of)
det(program, the)
compound(program, shooting)
compound(program, development)
nmod(director, program)
punct(program, ,)
det(staff, the)
compound(York, New)
compound(staff, York)
appos(program, staff)
case(Bureau, of)
det(Sportsmen, the)
nmod:poss(Bureau, Sportsmen)
case(Sportsmen, 's)
compound(Bureau, Service)
nmod(staff, Bureau)
punct(preserve, ,)
cc(preserve, and)
det(shooting, the)
compound(shooting, SAAMI)
nsubj(preserve, shooting)
conj(aim, preserve)
compound(consultant, field)
obj(preserve, consultant)
case(start, since)
det(start, the)
obl(preserve, start)
case(program, of)
det(program, the)
nmod(start, program)
case(1954, in)
obl(preserve, 1954)
punct(aim, . )
case(program, follow)
det(program, the)
compound(program, kick)
punct(kick, -)
case(program, off)
case(program, of)
nmod:poss(program, SAAMI)
case(SAAMI, 's)
compound(development, shooting)
compound(program, development)
obl(take, program)
case(1954, in)
nmod(program, 1954)
punct(take, ,)
det(meeting, a)
advmod(interesting, most)
amod(meeting, interesting)
nsubj(take, meeting)
root(ROOT, take)
obj(take, place)
case(Washington, in)
obl(take, Washington)
punct(Washington, ,)
appos(Washington, D.C.)
punct(take, .)
det(group, the)
nsubj(initiate, group)
acl(group, know)
case(Association, as)
det(Association, the)
compound(Association, American)
obl(know, Association)
case(Health, for)
nmod(Association, Health)
punct(Education, ,)
punct(Education, ,)
compound(Education, Physical)
conj(Association, Education)
punct(recreation, ,)
cc(recreation, and)
conj(Association, recreation)
punct(division, ()
det(division, a)
appos(recreation, division)
case(Association, of)
det(Association, the)
compound(Association, National)
compound(Association, Education)
nmod(division, Association)
punct(division, ))
root(ROOT, initiate)
det(conference, a)
obj(initiate, conference)
nsubj(bring, which)
acl:relcl(conference, bring)
advmod(bring, together)
obj(bring, representative)
case(Association, of)
det(Association, the)
compound(Association, National)
compound(Association, Rifle)
nmod(representative, Association)
punct(SAAMI, ,)
conj(Association, SAAMI)
cc(manufacturer, and)
det(manufacturer, the)
compound(manufacturer, American)
compound(tackle, fishing)
compound(manufacturer, tackle)
conj(Association, manufacturer)
punct(initiate, .)
det(meeting, this)
nsubj:pass(call, meeting)
aux:pass(call, be)
root(ROOT, call)
mark(determine, to)
advcl(call, determine)
advmod(cooperate, how)
det(group, these)
nsubj(cooperate, group)
aux(cooperate, might)
ccomp(determine, cooperate)
mark(launch, to)
xcomp(cooperate, launch)
nsubj:pass(know, what)
aux:pass(know, be)
ccomp(launch, know)
case(Project, as)
det(Project, the)
compound(Project, outdoor)
compound(Project, Education)
obl(know, Project)
punct(call, .)
det(Project, the)
compound(Education, outdoor)
compound(Project, Education)
nsubj(take, Project)
root(ROOT, take)
obj(take, cognizance)
case(fact, of)
det(fact, the)
nmod(cognizance, fact)
punct(take, ,)
advmod(overlook, so)
advmod(overlook, often)
advcl(take, overlook)
punct(overlook, ,)
mark(have, that)
amod(activity, athletic)
nsubj(have, activity)
acl(activity, stress)
case(program, in)
amod(program, most)
compound(program, school)
obl(stress, program)
ccomp(overlook, have)
obj(have, little)
cc(no, or)
conj(little, no)
obj(have, relationship)
case(need, to)
det(need, the)
amod(need, physical)
cc(mental, and)
conj(physical, mental)
nmod(relationship, need)
cc(interest, and)
conj(need, interest)
case(life, of)
amod(life, later)
nmod(interest, life)
punct(take, .)
det(sport, the)
amod(sport, various)
compound(sport, team)
nsubj(have, sport)
advmod(have, assuredly)
root(ROOT, have)
nmod:poss(place, they)
obj(have, place)
case(school, in)
det(school, every)
obl(have, school)
punct(important, ,)
cc(important, and)
nsubj(important, they)
cop(important, be)
conj(have, important)
case(development, to)
amod(development, proper)
amod(development, physical)
obl(important, development)
punct(have, .)
cc(have, but)
case(exception, with)
det(exception, the)
obl(have, exception)
case(athlete, of)
amod(athlete, professional)
nmod(exception, athlete)
punct(have, ,)
amod(sport, few)
compound(sport, contact)
nsubj(have, sport)
cc(activity, and)
amod(activity, physical)
compound(activity, education)
conj(sport, activity)
case(school, in)
nmod:poss(school, we)
nmod(activity, school)
root(ROOT, have)
det(carryover, any)
obj(have, carryover)
case(life, in)
det(life, the)
amod(life, adult)
nmod(carryover, life)
case(man, of)
det(man, the)
amod(man, average)
amod(man, american)
nmod(life, man)
cc(woman, or)
conj(man, woman)
punct(have, . )
case(campaign, follow)
det(campaign, a)
amod(campaign, vigorous)
obl(have, campaign)
case(interpretation, of)
nmod(campaign, interpretation)
cc(development, and)
compound(development, leadership)
conj(campaign, development)
case(director, by)
compound(director, oep)
compound(Dr., director)
nmod(development, Dr.)
flat(Dr., Julian)
flat(Dr., Smith)
punct(Dr., ,)
obl:tmod(have, today)
nsubj(have, thousand)
case(school, of)
amod(school, secondary)
nmod(thousand, school)
punct(college, ,)
conj(school, college)
cc(university, and)
conj(school, university)
root(ROOT, have)
xcomp(have, shoot)
cc(hunt, and)
conj(shoot, hunt)
obj(hunt, education)
case(program, in)
nmod:poss(program, they)
amod(education, physical)
compound(program, education)
cc(recreation, and)
conj(education, recreation)
obl(hunt, program)
punct(have, .)
nmod:poss(support, SAAMI)
case(SAAMI, 's)
amod(support, financial)
nsubj(contribute, support)
case(1955, since)
nmod(support, 1955)
aux(contribute, have)
root(ROOT, contribute)
case(success, to)
det(success, the)
obl(contribute, success)
case(project, of)
det(project, this)
nmod(success, project)
case(education, in)
nmod(success, education)
punct(contribute, .)
nsubj(participate, Personnel)
acl(Personnel, assign)
case(program, through)
det(program, the)
compound(development, shooting)
compound(program, development)
obl(assign, program)
aux(participate, have)
advmod(participate, proudly)
root(ROOT, participate)
case(workshop, in)
advmod(53, over)
nummod(state, 53)
compound(workshop, state)
cc(regional, and)
conj(state, regional)
obl(participate, workshop)
punct(participate, ,)
case(which, at)
obl(introduce, which)
nsubj:pass(introduce, hundred)
case(administrator, of)
compound(administrator, school)
nmod(hundred, administrator)
punct(teacher, ,)
conj(administrator, teacher)
punct(professor, ,)
conj(administrator, professor)
punct(leader, ,)
cc(leader, and)
amod(leader, recreational)
conj(administrator, leader)
aux(introduce, have)
aux:pass(introduce, be)
acl:relcl(workshop, introduce)
case(Education, to)
compound(Education, outdoor)
obl(introduce, Education)
punct(participate, .)
advcl(have, consider)
mark(youth, that)
det(potential, the)
amod(potential, current)
compound(age, school)
punct(age, -)
compound(potential, age)
nsubj(youth, potential)
cop(youth, be)
compound(million, 23)
nummod(youth, million)
ccomp(consider, youth)
punct(have, ,)
det(project, the)
nsubj(have, project)
cc(message, and)
nmod:poss(message, its)
conj(project, message)
case(hunt, on)
nmod(message, hunt)
cc(education, and)
compound(education, shooting)
conj(hunt, education)
root(ROOT, have)
amod(more, many)
obj(have, more)
mark(reach, to)
acl(more, reach)
punct(have, .)
case(1959, in)
obl(announce, 1959)
nmod:poss(program, SAAMI)
case(SAAMI, 's)
compound(development, shooting)
compound(program, development)
nsubj(announce, program)
root(ROOT, announce)
det(activity, a)
amod(activity, new)
obj(announce, activity)
acl(activity, design)
mark(expose, to)
xcomp(design, expose)
obj(expose, thousand)
case(boy, of)
compound(age, teen)
punct(age, -)
compound(boy, age)
nmod(thousand, boy)
cc(girl, and)
conj(boy, girl)
case(fun, to)
det(fun, the)
amod(fun, healthy)
nmod(boy, fun)
acl(fun, enjoy)
case(participation, through)
det(participation, the)
obl(enjoy, participation)
case(sport, in)
det(sport, the)
compound(sport, shooting)
nmod(participation, sport)
punct(announce, .)
det(program, this)
nsubj:pass(know, program)
aux:pass(know, be)
advmod(know, now)
advmod(know, nationally)
root(ROOT, know)
obl(know, as)
punct(know, ``)
compound(club, teen)
compound(club, Hunter)
nsubj:pass(sponsor, club)
punct(club, '')
punct(club, .)
compound(club, teen)
compound(club, Hunter)
nsubj:pass(sponsor, club)
aux:pass(sponsor, be)
advmod(sponsor, initially)
root(ROOT, sponsor)
case(member, by)
amod(member, affiliate)
obl(sponsor, member)
case(Corporation, of)
det(Corporation, the)
compound(Corporation, ally)
compound(Corporation, Merchandising)
nmod(member, Corporation)
punct(sponsor, .)
det(program, the)
amod(program, first)
nsubj:pass(sponsor, program)
aux:pass(sponsor, be)
root(ROOT, sponsor)
case(Abraham, by)
obl(sponsor, Abraham)
cc(strauss, &)
conj(Abraham, strauss)
punct(Abraham, ,)
appos(Abraham, hempstead)
punct(Abraham, ,)
compound(York, New)
appos(Abraham, York)
punct(sponsor, ,)
case(direction, under)
det(direction, the)
obl(sponsor, direction)
case(Jennings, of)
amod(event, special)
compound(director, event)
compound(Jennings, director)
nmod(direction, Jennings)
flat(Jennings, Dennis)
punct(sponsor, .)
amod(program, other)
compound(program, pilot)
nsubj:pass(conduct, program)
aux:pass(conduct, be)
root(ROOT, conduct)
case(A, by)
obl(conduct, A)
cc(S, &)
conj(A, S)
punct(Babylon, ,)
conj(A, Babylon)
punct(York, ,)
compound(York, New)
conj(A, York)
punct(conduct, ;)
punct(conduct, ;)
conj(A, J.)
flat(J., L.)
flat(J., Hudson)
punct(Detroit, ,)
conj(A, Detroit)
punct(Hudson, ;)
punct(Joseph, ;)
conj(A, Joseph)
flat(Joseph, Horne)
punct(Joseph, ,)
appos(Joseph, Pittsburgh)
punct(conduct, .)
amod(activity, other)
compound(activity, THC)
root(ROOT, activity)
acl(activity, follow)
punct(activity, ,)
acl(activity, conduct)
case(center, by)
compound(center, shopping)
obl(conduct, center)
punct(store, ,)
compound(store, department)
conj(center, store)
punct(dealer, ,)
compound(equipment, recreation)
compound(dealer, equipment)
conj(center, dealer)
punct(station, ,)
compound(tv, radio)
punct(tv, -)
compound(station, tv)
conj(center, station)
punct(newspaper, ,)
conj(center, newspaper)
punct(organization, ,)
cc(organization, and)
amod(organization, other)
conj(center, organization)
amod(organization, interested)
case(need, in)
det(need, the)
obl(interested, need)
acl(need, exist)
mark(acquaint, to)
xcomp(exist, acquaint)
obj(acquaint, youngster)
case(use, with)
det(use, the)
amod(use, proper)
obl(acquaint, use)
case(firearm, of)
amod(firearm, sport)
nmod(use, firearm)
cc(development, and)
det(development, the)
conj(use, development)
case(attitude, of)
amod(attitude, correct)
nmod(development, attitude)
cc(appreciation, and)
conj(attitude, appreciation)
amod(development, related)
case(use, to)
compound(use, hunt)
cc(wise, and)
conj(hunt, wise)
obl(related, use)
case(resource, of)
nmod:poss(resource, we)
amod(resource, natural)
nmod(use, resource)
punct(related, .)
nmod:poss(man, SAAMI)
case(SAAMI, 's)
compound(man, field)
nsubj(serve, man)
aux(serve, have)
root(ROOT, serve)
case(consultant, as)
obl(serve, consultant)
cc(or, and)
punct(or, /)
cc(participate, or)
aux(participate, have)
conj(serve, participate)
case(activity, in)
nummod(activity, 75)
compound(activity, teen)
compound(Club, Hunter)
compound(activity, Club)
obl(participate, activity)
nsubj(reach, which)
aux(reach, have)
acl:relcl(activity, reach)
advmod(40,000, over)
nummod(Americans, 40,000)
amod(Americans, enthusiastic)
amod(Americans, young)
obj(reach, Americans)
punct(reach, .)
case(effort, through)
det(effort, the)
obl(reach, effort)
case(program, of)
nmod:poss(program, SAAMI)
case(SAAMI, 's)
compound(development, shooting)
compound(program, development)
nmod(effort, program)
det(activity, these)
compound(activity, shooting)
appos(program, activity)
punct(other, ,)
cc(other, and)
amod(other, many)
conj(activity, other)
punct(other, ,)
case(assist, include)
nmod(other, assist)
case(development, in)
det(development, the)
nmod(assist, development)
case(park, of)
amod(park, public)
cc(finance, and)
advmod(finance, privately)
conj(public, finance)
compound(park, shooting)
nmod(development, park)
punct(trap, ,)
conj(park, trap)
cc(league, and)
compound(league, skeet)
conj(park, league)
punct(program, ,)
compound(program, rifle)
cc(pistol, and)
conj(rifle, pistol)
compound(program, marksmanship)
nsubj:pass(promote, program)
aux(promote, have)
aux:pass(promote, be)
acl:relcl(park, promote)
punct(promote, ,)
mark(few, to)
case(few, mention)
advmod(few, only)
det(few, a)
obl(promote, few)
punct(serve, .)
det(continuation, the)
nsubj(assure, continuation)
cc(expansion, and)
conj(continuation, expansion)
case(program, of)
det(program, the)
compound(development, shooting)
compound(program, development)
nmod(continuation, program)
aux(assure, will)
root(ROOT, assure)
case(degree, to)
det(degree, some)
obl(assure, degree)
mark(make, that)
amod(leader, national)
cc(community, and)
conj(national, community)
nsubj:pass(make, leader)
aux(make, will)
aux:pass(make, be)
acl(degree, make)
xcomp(make, aware)
case(need, of)
det(need, the)
advmod(grow, ever)
punct(grow, -)
amod(need, grow)
obl(aware, need)
case(facility, for)
compound(facility, shooting)
nmod(need, facility)
cc(activity, and)
conj(facility, activity)
mark(hunt, for)
acl(facility, hunt)
cc(shoot, and)
conj(hunt, shoot)
case(answer, in)
obl(shoot, answer)
case(demand, to)
amod(demand, public)
nmod(answer, demand)
punct(aware, .)
mark(aware, while)
amod(sportsman, individual)
nsubj(aware, sportsman)
cop(aware, be)
advcl(shoot, aware)
case(situation, of)
det(situation, this)
obl(aware, situation)
punct(forget, ,)
advmod(many, too)
nsubj(forget, many)
case(political, of)
nmod:poss(political, we)
nmod(many, political)
punct(social, ,)
conj(political, social)
punct(educational, ,)
conj(political, educational)
cc(leader, and)
advmod(religious, even)
amod(leader, religious)
conj(political, leader)
advmod(often, too)
advmod(forget, often)
conj(aware, forget)
obj(forget, it)
punct(assure, .)
nsubj:pass(need, help)
aux:pass(need, be)
root(ROOT, need)
case(dealer, from)
obl(need, dealer)
punct(need, ,)
case(level, at)
det(level, the)
compound(root, grass)
punct(root, -)
compound(level, root)
obl(need, level)
punct(need, .)
det(producer, the)
amod(producer, american)
compound(producer, gun)
cc(ammunition, and)
conj(gun, ammunition)
nsubj(sponsor, producer)
root(ROOT, sponsor)
det(program, a)
amod(program, successful)
amod(program, promotional)
obj(sponsor, program)
case(association, through)
nmod:poss(association, they)
compound(association, industry)
compound(association, trade)
obl(sponsor, association)
punct(sponsor, .)
case(conception, since)
nmod:poss(conception, SAAMI)
case(SAAMI, 's)
obl(go, conception)
case(1926, in)
nmod(conception, 1926)
punct(adoption, ,)
cc(adoption, and)
advmod(specifically, more)
advmod(adoption, specifically)
case(adoption, since)
det(adoption, the)
conj(conception, adoption)
case(Program, of)
det(Program, the)
compound(Program, shoot)
compound(Program, Development)
nmod(adoption, Program)
case(1954, in)
nmod(adoption, 1954)
punct(go, ,)
nsubj(go, million)
case(dollar, of)
nmod(million, dollar)
cc(man-hour, and)
amod(man-hour, promotional)
conj(dollar, man-hour)
aux(go, have)
root(ROOT, go)
case(development, into)
det(development, the)
obl(go, development)
case(place, of)
amod(place, more)
nmod(development, place)
mark(shoot, to)
acl(place, shoot)
case(youth, for)
amod(youth, more)
obl(shoot, youth)
cc(adult, and)
conj(youth, adult)
punct(go, .)
nsubj(trust, we)
root(ROOT, trust)
mark(benefite, that)
nsubj(benefite, you)
punct(you, ,)
case(dealer, as)
det(dealer, a)
compound(dealer, gun)
cc(ammunition, and)
conj(gun, ammunition)
nmod(you, dealer)
punct(benefite, ,)
aux(benefite, have)
ccomp(trust, benefite)
case(sale, through)
amod(sale, additional)
obl(benefite, sale)
case(equipment, of)
nmod(sale, equipment)
punct(trust, .)
aux(get, be)
nsubj(get, you)
root(ROOT, get)
amod(dollar, top)
obj(get, dollar)
case(sport, from)
det(sport, the)
compound(sport, shooting)
nmod(dollar, sport)
punct(get, ?)
punct(get, ?)
aux(look, be)
nsubj(look, you)
root(ROOT, look)
advmod(look, ahead)
case(market, to)
det(market, the)
amod(market, explode)
obl(look, market)
case(million, of)
nmod(market, million)
case(boy, of)
amod(boy, american)
nmod(million, boy)
cc(girl, and)
conj(boy, girl)
punct(boy, ,)
nsubj(grow, who)
aux(grow, will)
acl:relcl(market, grow)
advmod(grow, up)
mark(enjoy, to)
advcl(grow, enjoy)
det(way, a)
amod(way, traditional)
amod(way, american)
obj(enjoy, way)
case(life, of)
nmod(way, life)
punct(enjoy, --)
advcl(enjoy, range)
det(field, the)
obj(range, field)
case(gun, with)
det(gun, a)
amod(gun, fine)
amod(gun, american)
nmod(field, gun)
cc(ammunition, and)
advmod(excellent, uniformly)
amod(ammunition, excellent)
conj(gun, ammunition)
punct(look, ?)
punct(look, ?)
aux(primed, be)
nmod:poss(firearm, you)
compound(firearm, sport)
nsubj(primed, firearm)
cc(department, and)
compound(department, ammunition)
conj(firearm, department)
root(ROOT, primed)
case(horizon, for)
det(horizon, the)
amod(horizon, expand)
obl(primed, horizon)
punct(primed, ?)
punct(primed, ?)
aux(like, would)
nsubj(like, you)
root(ROOT, like)
mark(organize, to)
xcomp(like, organize)
compound(club, teen)
compound(club, Hunters)
obj(organize, club)
punct(shoot, ,)
conj(organize, shoot)
obj(shoot, program)
punct(have, ,)
cc(have, and)
conj(organize, have)
obj(have, information)
case(season, on)
nmod(information, season)
case(month, include)
nummod(month, six)
nmod(season, month)
mark(hunt, of)
nmod(month, hunt)
case(bag, with)
amod(bag, unlimited)
compound(bag, game)
nmod(hunt, bag)
case(preserve, on)
compound(preserve, shooting)
nmod(bag, preserve)
punct(like, ?)
punct(like, ?)
root(ROOT, ask)
obj(ask, Sammy)
flat(Sammy, shooter)
punct(ask, .)
nsubj(camp, we)
aux(camp, be)
root(ROOT, camp)
det(week, a)
amod(week, few)
obl:npmod(ago, week)
advmod(camp, ago)
case(Campground, on)
compound(Campground, cape)
compound(Campground, hattera)
obl(camp, Campground)
case(land, in)
det(land, that)
obl(camp, land)
case(pirate, of)
nmod(land, pirate)
punct(seagull, ,)
conj(pirate, seagull)
cc(bluefish, and)
conj(pirate, bluefish)
case(Banks, on)
compound(Carolina, North)
nmod:poss(Banks, Carolina)
case(Carolina, 's)
amod(Banks, fame)
compound(Banks, Outer)
obl(camp, Banks)
punct(camp, .)
det(campground, this)
compound(campground, beach)
nsubj(present, campground)
case(tree, with)
det(tree, no)
nmod(campground, tree)
cc(hill, or)
conj(tree, hill)
root(ROOT, present)
det(show, a)
amod(show, constant)
compound(show, camp)
obj(present, show)
case(manner, with)
det(manner, all)
nmod(show, manner)
case(equipment, of)
nmod(manner, equipment)
case(use, in)
amod(use, actual)
nmod(manner, use)
punct(present, .)
case(camp, with)
det(camp, the)
amod(camp, whole)
obl(see, camp)
acl(camp, expose)
case(view, to)
obl(expose, view)
nsubj(see, we)
aux(see, could)
root(ROOT, see)
det(variety, the)
obj(see, variety)
case(shelter, of)
compound(shelter, canva)
nmod(variety, shelter)
case(which, in)
obl(camp, which)
nsubj(camp, Americans)
aux(camp, be)
acl:relcl(shelter, camp)
advmod(camp, now)
punct(see, .)
expl(be, there)
root(ROOT, be)
compound(tent, umbrella)
nsubj(be, tent)
punct(tent, ,)
compound(tent, wall)
conj(tent, tent)
punct(tent, ,)
compound(tent, cottage)
conj(tent, tent)
punct(tent, ,)
compound(tent, station)
compound(tent, wagon)
conj(tent, tent)
punct(tent, ,)
compound(tent, pup)
conj(tent, tent)
punct(tent, ,)
compound(tent, pop)
conj(tent, tent)
punct(tent, ,)
compound(tent, Baker)
conj(tent, tent)
punct(tent, ,)
conj(tent, tent)
case(frame, with)
compound(frame, exterior)
nmod(tent, frame)
punct(trailer, ,)
compound(trailer, camper)
conj(tent, trailer)
punct(trailer, ,)
compound(trailer, travel)
conj(tent, trailer)
punct(parachute, ,)
cc(parachute, and)
advmod(parachute, even)
det(parachute, a)
amod(parachute, few)
compound(parachute, surplus)
conj(tent, parachute)
acl(parachute, serve)
case(sunshade, as)
obl(serve, sunshade)
case(camp, over)
amod(camp, entire)
compound(camp, family)
obl(serve, camp)
punct(be, .)
advcl(see, move)
advmod(camp, around)
obj(move, camp)
nsubj(see, we)
root(ROOT, see)
det(kind, all)
obj(see, kind)
case(stove, of)
compound(stove, camp)
nmod(kind, stove)
punct(lantern, ,)
conj(stove, lantern)
punct(cooler, ,)
conj(stove, cooler)
punct(bedding, ,)
conj(stove, bedding)
punct(game, ,)
conj(stove, game)
punct(tackle, ,)
compound(tackle, fishing)
conj(stove, tackle)
punct(windbreak, ,)
conj(stove, windbreak)
cc(sunshade, and)
conj(stove, sunshade)
punct(see, .)
nsubj(see, we)
root(ROOT, see)
amod(display, similar)
obj(see, display)
case(campground, in)
det(campground, the)
amod(campground, other)
nummod(campground, three)
nmod(display, campground)
case(Area, in)
det(Area, this)
nummod(mile, 70)
punct(mile, -)
compound(Area, mile)
punct(Area, -)
amod(Area, long)
compound(Area, National)
compound(recreation, Seashore)
compound(Area, recreation)
nmod(campground, Area)
punct(see, .)
nsubj(do, dealer)
aux(do, would)
parataxis(see, do)
advmod(do, well)
mark(visit, to)
advcl(do, visit)
det:predet(campground, such)
det(campground, a)
obj(visit, campground)
advmod(visit, often)
punct(look, ,)
conj(visit, look)
case(equipment, at)
det(equipment, the)
obl(look, equipment)
cc(talk, and)
conj(look, talk)
case(camper, with)
det(camper, the)
obl(talk, camper)
punct(see, .)
root(ROOT, here)
nsubj(begin, you)
acl:relcl(here, begin)
mark(appreciate, to)
xcomp(begin, appreciate)
det(scope, the)
obj(appreciate, scope)
case(challenge, of)
det(challenge, the)
nmod(scope, challenge)
cc(possibility, and)
conj(challenge, possibility)
acl(challenge, face)
det(industry, the)
obj(face, industry)
punct(here, .)
nsubj(big, camping)
cop(big, be)
root(ROOT, big)
cc(get, and)
conj(big, get)
xcomp(get, bigger)
punct(big, .)
det(one, no)
nsubj(know, one)
root(ROOT, know)
advmod(stop, where)
nsubj(stop, it)
aux(stop, will)
ccomp(know, stop)
punct(know, .)
advmod(official, almost)
det(official, every)
nsubj(think, official)
nsubj(reflect, who)
acl:relcl(official, reflect)
obl(reflect, on)
nsubj(think, it)
conj(know, think)
det(movement, this)
nsubj(open, movement)
case(Americans, of)
nmod(movement, Americans)
case(dwelling, to)
compound(dwelling, canva)
nmod(movement, dwelling)
ccomp(think, open)
obj(open, one)
case(promise, of)
det(promise, the)
advmod(promise, most)
nmod(one, promise)
case(market, of)
det(market, all)
amod(market, outdoor)
obl(promise, market)
punct(know, .)
nsubj(read, you)
root(ROOT, read)
amod(guess, various)
obj(read, guess)
mark(camp, on)
advmod(many, how)
amod(Americans, many)
nsubj(camp, Americans)
aux(camp, be)
acl(guess, camp)
punct(read, .)
det(number, the)
nsubj(depend, number)
root(ROOT, depend)
mark(talk, on)
nsubj(talk, who)
aux(talk, be)
advcl(depend, talk)
case(moment, at)
det(moment, the)
obl(talk, moment)
punct(depend, .)
det(figure, the)
nsubj(range, figure)
root(ROOT, range)
advmod(high, as)
advmod(range, high)
case(family, as)
compound(million, 15)
nummod(family, million)
obl(range, family)
punct(range, . )
nsubj(hear, I)
aux(hear, have)
root(ROOT, hear)
compound(million, 10)
obj(hear, million)
xcomp(hear, mention)
advmod(hear, often)
punct(inclined, ,)
cc(inclined, but)
nsubj(inclined, I)
cop(inclined, be)
advmod(inclined, more)
conj(hear, inclined)
mark(think, to)
xcomp(inclined, think)
expl(be, there)
aux(be, may)
ccomp(think, be)
det(total, a)
nsubj(be, total)
case(family, of)
det(family, some)
nummod(family, five)
case(seven, to)
nmod(five, seven)
nmod(five, million)
nmod(total, family)
acl(family, camp)
punct(hear, .)
compound(million, Seven)
nummod(family, million)
nsubj(total, family)
aux(total, would)
root(ROOT, total)
compound(million, 30)
nummod(Americans, million)
obj(total, Americans)
cc(more, or)
conj(Americans, more)
punct(total, .)
root(ROOT, consider)
det(equipment, the)
obj(consider, equipment)
acl(equipment, need)
mark(protect, to)
xcomp(need, protect)
det(many, this)
obj(protect, many)
case(weather, from)
det(weather, the)
obl(protect, weather)
punct(make, ,)
mark(make, to)
advcl(protect, make)
nmod:poss(cooking, they)
obj(make, cooking)
xcomp(make, easy)
cc(comfortable, and)
nmod:poss(sleeping, they)
nsubj(comfortable, sleeping)
conj(easy, comfortable)
punct(consider, .)
amod(camper, more)
nsubj(have, camper)
case(campsite, than)
nmod(camper, campsite)
acl(campsite, Harassed)
compound(park, state)
compound(official, park)
obj(Harassed, official)
advmod(have, often)
root(ROOT, have)
amod(camper, more)
obj(have, camper)
mark(know, than)
nsubj(know, they)
advcl(more, know)
nsubj(do, what)
mark(do, to)
ccomp(know, do)
obl(do, with)
punct(have, .)
nsubj(struggle, they)
aux(struggle, be)
root(ROOT, struggle)
mark(meet, to)
xcomp(struggle, meet)
det(demand, the)
obj(meet, demand)
case(space, for)
compound(space, camp)
nmod(demand, space)
punct(turn, ,)
cc(turn, but)
nsubj:pass(turn, family)
aux(turn, be)
aux:pass(turn, be)
conj(struggle, turn)
advmod(turn, away)
punct(turn, ,)
advmod(weekend, especially)
case(weekend, on)
compound(weekend, holiday)
obl(turn, weekend)
punct(struggle, .)
det(Parks, the)
compound(Parks, National)
nsubj(face, Parks)
punct(Parks, ,)
advmod(place, always)
amod(place, popular)
compound(place, camp)
appos(Parks, place)
punct(face, ,)
aux(face, be)
root(ROOT, face)
det(pressure, the)
amod(pressure, same)
obj(face, pressure)
punct(face, .)
det(Service, the)
compound(Park, National)
compound(Service, Park)
nsubj(hope, Service)
root(ROOT, hope)
case(1966, by)
obl(hope, 1966)
mark(have, to)
xcomp(hope, have)
nummod(campsite, 30,000)
obj(have, campsite)
amod(campsite, available)
case(camper, for)
nummod(camper, 100,000)
obl(available, camper)
det(day, a)
obl:tmod(available, day)
punct(hope, --)
advmod(twice, almost)
advmod(what, twice)
parataxis(hope, what)
expl(be, there)
acl:relcl(what, be)
case(present, at)
obl(be, present)
punct(hope, .)
det(Service, the)
compound(Service, U.S.)
compound(Service, Forest)
nsubj(care, Service)
root(ROOT, care)
case(hundred, for)
obl(care, hundred)
case(thousand, of)
nmod(hundred, thousand)
case(camper, of)
nmod(thousand, camper)
case(forest, in)
nmod:poss(forest, its)
nummod(forest, 149)
compound(forest, National)
obl(care, forest)
cc(increase, and)
aux(increase, be)
conj(care, increase)
nmod:poss(facility, its)
obj(increase, facility)
advmod(increase, steadily)
punct(care, .)
cc(come, but)
det(camper, the)
nsubj(come, camper)
advmod(come, still)
root(ROOT, come)
punct(come, .)
nsubj(bring, they)
root(ROOT, bring)
nmod:poss(family, they)
obj(bring, family)
cc(tent, and)
conj(family, tent)
cc(kitchen, and)
compound(kitchen, camp)
conj(family, kitchen)
cc(bedding, and)
conj(kitchen, bedding)
punct(bring, .)
nsubj(bring, they)
root(ROOT, bring)
nmod:poss(rod, they)
compound(rod, fishing)
obj(bring, rod)
cc(binocular, and)
conj(rod, binocular)
cc(suit, and)
compound(suit, bathing)
conj(rod, suit)
punct(bring, .)
nsubj(prepared, they)
cop(prepared, come)
root(ROOT, prepared)
case(fun, for)
compound(fun, family)
obl(prepared, fun)
mark(learn, because)
nsubj(learn, Americans)
case(number, in)
advmod(grow, ever)
punct(grow, -)
amod(number, grow)
nmod(Americans, number)
aux(learn, be)
advcl(prepared, learn)
mark(here, that)
ccomp(learn, here)
cop(here, be)
det(way, the)
nsubj(here, way)
case(vacation, to)
det(vacation, a)
amod(vacation, fine)
amod(vacation, economical)
nmod(way, vacation)
nsubj(become, that)
acl:relcl(vacation, become)
det(experience, a)
compound(experience, family)
xcomp(become, experience)
case(importance, of)
amod(importance, last)
nmod(experience, importance)
punct(prepared, .)
advmod(keep, why)
nsubj(keep, they)
advcl(be, keep)
xcomp(keep, come)
expl(be, there)
root(ROOT, be)
det(reason, a)
nmod(dozen, half)
nummod(reason, dozen)
nsubj(be, reason)
acl(reason, help)
mark(account, to)
xcomp(help, account)
case(migration, for)
det(migration, the)
obl(account, migration)
case(campground, to)
det(campground, the)
nmod(migration, campground)
punct(be, .)
case(they, among)
obl(be, they)
punct(be, ,)
case(Department, accord)
fixed(accord, to)
det(Department, the)
compound(Department, U.S.)
obl(be, Department)
case(commerce, of)
nmod(Department, commerce)
punct(be, ,)
root(ROOT, be)
punct(be, :)
punct(1, ()
nummod(shorter, 1)
punct(1, ))
amod(week, shorter)
compound(week, work)
nsubj(be, week)
punct(week, ,)
punct(2, ()
nummod(week, 2)
punct(2, ))
amod(pay, higher)
appos(week, pay)
punct(3, ,)
punct(3, ()
nummod(pay, 3)
punct(3, ))
advmod(pay, longer)
amod(vacation, pay)
conj(pay, vacation)
punct(4, ,)
punct(4, ()
nummod(transportation, 4)
punct(4, ))
amod(transportation, better)
conj(vacation, transportation)
punct(5, ,)
punct(5, ()
nummod(retirement, 5)
punct(5, ))
amod(retirement, earlier)
conj(transportation, retirement)
punct(education, ,)
cc(education, and)
punct(6, ()
nummod(education, 6)
punct(6, ))
amod(education, more)
conj(transportation, education)
punct(be, .)
det(people, the)
amod(people, more)
nsubj(learn, people)
root(ROOT, learn)
case(country, about)
nmod:poss(country, they)
obl(learn, country)
punct(learn, ,)
mark(more, the)
advmod(learn, more)
nsubj(want, they)
acl:relcl(more, want)
mark(learn, to)
xcomp(want, learn)
punct(learn, .)
nsubj(fun, camping)
cop(fun, be)
compound(fun, family)
root(ROOT, fun)
punct(help, ,)
cc(help, and)
nsubj(help, it)
aux(help, be)
conj(fun, help)
amod(Americans, more)
obj(help, Americans)
xcomp(help, see)
obj(see, more)
case(country, of)
det(country, the)
obl(more, country)
mark(see, than)
nsubj(see, they)
advmod(see, ever)
advcl(see, see)
advmod(see, before)
punct(fun, .)
cc(make, but)
root(ROOT, make)
det(mistake, no)
obj(make, mistake)
case(it, about)
nmod(mistake, it)
punct(one, ,)
det(reason, the)
amod(reason, first)
nsubj(one, reason)
nsubj(turn, people)
acl:relcl(reason, turn)
case(camp, to)
obl(turn, camp)
cop(one, be)
conj(make, one)
case(economy, of)
nmod(one, economy)
punct(make, .)
root(ROOT, here)
cop(here, be)
det(promise, the)
nsubj(here, promise)
case(trip, of)
det(trip, a)
compound(trip, vacation)
nmod(promise, trip)
nsubj(afford, they)
aux(afford, can)
acl:relcl(trip, afford)
punct(here, .)
det(Association, the)
compound(Association, American)
compound(Association, Automobile)
nsubj(come, Association)
punct(Association, ,)
acl(Association, compute)
det(cost, the)
obj(compute, cost)
case(people, for)
nummod(people, two)
nmod(cost, people)
case(vacation, to)
nmod(people, vacation)
case(automobile, by)
nmod(vacation, automobile)
punct(come, ,)
root(ROOT, come)
compound:prt(come, up)
case(figure, with)
det(figure, a)
amod(figure, average)
amod(figure, daily)
compound(figure, expenditure)
obl(come, figure)
case($, of)
nmod(figure, $)
nummod($, 29)
punct(split, .)
det(AAA, the)
nsubj(split, AAA)
advmod(split, then)
parataxis(come, split)
obj(split, it)
compound:prt(split, down)
det(way, this)
obl:npmod(split, way)
punct($, :)
parataxis(split, $)
nummod($, 10.50)
case(meal, for)
nmod($, meal)
punct($, ,)
appos(meal, $)
nummod($, 9.50)
case(lodging, for)
nmod(meal, lodging)
punct($, ,)
conj(lodging, $)
nummod($, 7)
case(gas, for)
nmod($, gas)
cc(oil, and)
conj(gas, oil)
punct($, ,)
cc($, and)
conj(lodging, $)
nummod($, 2)
case(tip, for)
nmod($, tip)
cc(miscellaneous, and)
conj(tip, miscellaneous)
punct(come, .)
obj(do, what)
aux(do, do)
det(couple, the)
compound(couple, camp)
nsubj(do, couple)
root(ROOT, do)
case(set, to)
det(set, this)
obl(do, set)
case(figure, of)
nmod(set, figure)
punct(do, ?)
punct(do, ?)
det($, the)
root(ROOT, $)
nummod($, 9.50)
case(lodging, for)
nmod($, lodging)
nsubj(save, they)
acl:relcl(lodging, save)
punct($, .)
mark(prepare, because)
nsubj(prepare, they)
advcl(keep, prepare)
nmod:poss(meal, they)
amod(meal, own)
obj(prepare, meal)
nsubj(keep, they)
advmod(keep, also)
root(ROOT, keep)
case(pocket, in)
nmod:poss(pocket, they)
obl(keep, pocket)
det(portion, a)
amod(portion, good)
obj(keep, portion)
case(bill, of)
det(bill, that)
compound(bill, $)
nummod($, 10.50)
compound(bill, food)
nmod(portion, bill)
case(most, along)
case(most, with)
obl(keep, most)
case(money, of)
det(money, the)
compound(money, tip)
nmod(most, money)
punct(keep, .)
det(expense, the)
compound(expense, automobile)
nsubj(cost, expense)
cop(cost, be)
case(cost, about)
det(cost, the)
amod(cost, only)
compound(cost, vacationing)
root(ROOT, cost)
nsubj(eliminate, they)
aux(eliminate, can)
advmod(eliminate, not)
advmod(eliminate, either)
acl:relcl(cost, eliminate)
cc(pare, or)
conj(eliminate, pare)
compound:prt(pare, down)
advmod(pare, drastically)
mark(camp, by)
advcl(pare, camp)
case(way, along)
det(way, the)
obl(camp, way)
punct(cost, .)
mark(use, where)
nsubj(use, Americans)
advcl(think, use)
mark(think, to)
xcomp(use, think)
case(vacation, of)
det(vacation, a)
amod(vacation, single)
obl(think, vacation)
det(summer, each)
obl:tmod(think, summer)
punct(think, ,)
nsubj(think, they)
advmod(think, now)
root(ROOT, think)
mark(have, about)
advmod(many, how)
amod(vacation, many)
obj(have, vacation)
nsubj(have, they)
aux(have, can)
advcl(think, have)
punct(enable, .)
amod(weekend, long)
nsubj(enable, weekend)
ccomp(think, enable)
obj(enable, many)
mark(get, to)
acl(many, get)
advmod(get, away)
case(home, from)
obl(get, home)
case(day, for)
nummod(day, three)
cc(four, or)
conj(three, four)
obl(get, day)
amod(time, several)
nmod:tmod(day, time)
det(year, a)
nmod:npmod(time, year)
punct(enable, .)
cc(develop, and)
advmod(stay, even)
mark(stay, if)
nsubj(stay, they)
advcl(develop, stay)
case(resort, in)
compound(part, resort)
obl(stay, part)
case(time, of)
det(time, the)
nmod(part, time)
punct(might, ,)
nsubj(might, they)
root(ROOT, might)
punct(develop, ,)
mark(get, if)
det(salesman, the)
amod(salesman, right)
nsubj(get, salesman)
advcl(develop, get)
obj(get, they)
case(tow, in)
obl(get, tow)
punct(develop, ,)
conj(might, develop)
det(yearn, a)
obj(develop, yearn)
mark(spice, to)
acl(yearn, spice)
det(fare, the)
amod(fare, usual)
compound(fare, vacation)
obj(spice, fare)
case(trip, with)
det(trip, a)
compound(trip, camp)
obl(spice, trip)
case(space, into)
det(space, the)
amod(space, wide)
amod(space, open)
nmod(trip, space)
punct(develop, .)
expl(mistake, it)
aux(mistake, would)
cop(mistake, be)
det(mistake, a)
root(ROOT, mistake)
mark(sell, to)
csubj(mistake, sell)
det(thousand, those)
obj(sell, thousand)
case(camper, of)
amod(camper, begin)
nmod(thousand, camper)
case(idea, on)
det(idea, the)
obl(sell, idea)
nsubj(buy, they)
aux(buy, be)
acl:relcl(idea, buy)
det(comfort, the)
obj(buy, comfort)
case(home, of)
nmod(comfort, home)
punct(mistake, .)
nsubj(be, they)
root(ROOT, be)
advmod(be, not)
punct(be, .)
nsubj(place, Home)
cop(place, be)
det(place, the)
root(ROOT, place)
mark(find, to)
acl(place, find)
det(comfort, the)
obj(find, comfort)
case(home, of)
nmod(comfort, home)
punct(place, .)
nsubj(buy, they)
aux(buy, be)
root(ROOT, buy)
obj(buy, fun)
cc(adventure, and)
conj(fun, adventure)
cc(experience, and)
compound(experience, family)
conj(fun, experience)
punct(buy, .)
cc(mistake, but)
expl(mistake, it)
aux(mistake, would)
advmod(mistake, also)
cop(mistake, be)
det(mistake, a)
root(ROOT, mistake)
mark(realize, for)
nsubj(realize, they)
advmod(realize, not)
mark(realize, to)
csubj(mistake, realize)
advmod(comfortable, how)
advmod(become, comfortable)
nsubj(become, camp)
aux(become, have)
ccomp(realize, become)
punct(mistake, .)
nsubj(way, this)
cop(way, be)
advmod(longer, no)
advmod(way, longer)
det(way, a)
root(ROOT, way)
case(life, of)
nmod(way, life)
case(logger, for)
det(logger, the)
amod(logger, beard)
nmod(way, logger)
cc(cowboy, and)
det(cowboy, the)
compound(cowboy, wander)
conj(logger, cowboy)
punct(way, . )
nmod:poss(camper, today)
case(today, 's)
nsubj(want, camper)
root(ROOT, want)
obj(want, comfort)
punct(have, ,)
cc(have, and)
nsubj(have, they)
conj(want, have)
obj(have, they)
punct(want, .)
cc(help, and)
nsubj(help, this)
root(ROOT, help)
xcomp(help, explain)
advmod(go, why)
advmod(many, so)
amod(people, many)
nsubj(go, people)
aux(go, be)
advmod(go, now)
ccomp(explain, go)
xcomp(go, camp)
punct(help, .)
nsubj(fun, it)
cop(fun, be)
root(ROOT, fun)
punct(easy, ,)
cc(easy, and)
nsubj(easy, it)
cop(easy, be)
conj(fun, easy)
punct(easy, --)
advmod(easy, so)
parataxis(easy, easy)
mark(be, that)
expl(be, there)
ccomp(easy, be)
nsubj(be, time)
acl(time, leave)
case(cooking, after)
obl(leave, cooking)
punct(keep, ,)
cc(tent, and)
nsubj(keep, tent)
conj(be, keep)
punct(keep, ,)
mark(get, for)
det(woman, the)
nsubj(get, woman)
mark(get, to)
advcl(keep, get)
advmod(get, out)
cc(enjoy, and)
conj(get, enjoy)
amod(fun, outdoor)
obj(enjoy, fun)
case(family, with)
nmod:poss(family, they)
nmod(fun, family)
punct(fun, .)
compound(meal, Camp)
nsubj(problem, meal)
cop(problem, be)
det(problem, no)
amod(problem, great)
root(ROOT, problem)
punct(problem, .)
cc(shelter, neither)
cop(bed, be)
root(ROOT, bed)
punct(thanks, ,)
parataxis(bed, thanks)
case(mattress, to)
compound(mattress, air)
nmod(thanks, mattress)
cc(bag, and)
compound(bag, sleeping)
conj(mattress, bag)
punct(thanks, .)
cc(shelter, neither)
cop(shelter, be)
conj(bed, shelter)
punct(shelter, ,)
mark(be, because)
expl(be, there)
advcl(shelter, be)
nsubj(be, one)
mark(meet, to)
acl(one, meet)
det(need, the)
obj(meet, need)
case(camper, of)
det(camper, every)
nmod(need, camper)
cc(camper, or)
conj(camper, prospective)
conj(camper, camper)
punct(bed, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
advmod(be, still)
det(problem, the)
advmod(complex, sometimes)
amod(problem, complex)
nsubj(be, problem)
mark(help, of)
acl(problem, help)
obj(help, camper)
xcomp(help, choose)
det(equipment, the)
amod(equipment, best)
obj(choose, equipment)
case(need, for)
nmod:poss(need, they)
amod(need, individual)
nmod(equipment, need)
punct(equipment, .)
case(history, throughout)
obl(choose, history)
punct(become, ,)
det(man, the)
nsubj(become, man)
nsubj(show, who)
acl:relcl(man, show)
amod(performance, superior)
obj(show, performance)
aux(become, have)
conj(be, become)
det(commander, the)
xcomp(become, commander)
case(other, of)
nmod(commander, other)
punct(commander, --)
case(good, for)
nmod(commander, good)
cc(bad, or)
conj(good, bad)
punct(be, .)
case(Revolution, since)
det(Revolution, the)
compound(Revolution, Industrial)
obl(follow, Revolution)
punct(follow, ,)
mark(emerge, when)
nsubj(emerge, factory)
advcl(follow, emerge)
punct(follow, ,)
det(pattern, this)
amod(pattern, classical)
nsubj:pass(follow, pattern)
aux(follow, have)
aux:pass(follow, be)
root(ROOT, follow)
punct(follow, .)
case(recently, until)
root(ROOT, recently)
punct(recently, .)
expl(be, there)
aux(be, have)
advmod(be, always)
root(ROOT, be)
nsubj(be, tale)
case(disillusionment, of)
nmod(tale, disillusionment)
punct(tale, --)
det(technician, the)
amod(technician, competent)
appos(tale, technician)
nsubj(become, who)
acl:relcl(technician, become)
det(administrator, a)
xcomp(become, administrator)
punct(administrator, ,)
advmod(administrator, willingly)
cc(not, or)
conj(willingly, not)
punct(find, ,)
cc(find, and)
conj(be, find)
nsubj(like, he)
aux(like, do)
advmod(like, not)
ccomp(find, like)
obj(like, it)
punct(find, ;)
punct(be, ;)
det(scientist, the)
nsubj(find, scientist)
nsubj(rebel, who)
acl:relcl(scientist, rebel)
case(personnel, against)
det(personnel, the)
obl(rebel, personnel)
cc(paper, and)
conj(personnel, paper)
obl(rebel, work)
punct(rebel, ;)
punct(rebel, ;)
cc(engineer, and)
advmod(more, much)
advmod(commonly, more)
advmod(year, commonly)
case(year, in)
amod(year, recent)
obl(engineer, year)
punct(engineer, ,)
det(engineer, the)
conj(scientist, engineer)
nsubj(find, who)
acl:relcl(engineer, find)
mark(interfere, that)
amod(duty, other)
nsubj(interfere, duty)
ccomp(find, interfere)
obl(interfere, with)
punct(find, --)
cc(eliminate, or)
conj(interfere, eliminate)
punct(contribution, --)
nmod:poss(contribution, he)
compound(contribution, engineering)
obj(eliminate, contribution)
punct(be, .)
expl(be, there)
aux(be, have)
root(ROOT, be)
amod(man, many)
advmod(competent, extremely)
amod(man, competent)
nsubj(be, man)
nsubj:pass(converted, who)
aux(converted, have)
aux:pass(converted, be)
acl:relcl(man, converted)
case(manager, into)
advmod(incompetent, very)
amod(manager, incompetent)
obl(converted, manager)
cc(submerge, or)
conj(manager, submerge)
case(work, in)
compound(work, paper)
obl(submerge, work)
punct(own, ,)
case(own, to)
nmod:poss(own, they)
nmod(manager, own)
cc(dissatisfaction, and)
det(public, the)
nmod:poss(dissatisfaction, public)
case(public, 's)
conj(own, dissatisfaction)
cc(loss, and)
conj(dissatisfaction, loss)
punct(be, .)
nsubj(evident, this)
aux(evident, have)
cop(evident, be)
advmod(evident, more)
root(ROOT, evident)
mark(incorporate, since)
nmod:poss(product, we)
nsubj(incorporate, product)
aux(incorporate, have)
advcl(evident, incorporate)
advmod(increase, astronomically)
amod(technology, increase)
obj(incorporate, technology)
punct(evident, .)
det(remedy, the)
nsubj(many, remedy)
aux(many, have)
cop(many, be)
root(ROOT, many)
cc(varied, and)
conj(many, varied)
punct(many, --)
parataxis(many, attempt)
mark(teach, to)
acl(attempt, teach)
compound(technique, management)
obj(teach, technique)
punct(technique, --)
cc:preconj(plant, either)
case(plant, in)
obl(teach, plant)
punct(plant, ,)
case(school, at)
amod(school, special)
nmod(plant, school)
punct(university, ,)
cc(university, or)
case(university, in)
conj(school, university)
punct(course, ``)
compound(course, crash)
punct(course, '')
nmod(university, course)
punct(course, --)
appos(course, provision)
case(assistant, of)
obl:npmod(train, management)
punct(train, -)
amod(assistant, train)
nmod(provision, assistant)
cc(associate, or)
conj(assistant, associate)
punct(provision, .)
cc(grow, but)
det(realization, the)
nsubj(grow, realization)
aux(grow, have)
aux(grow, be)
root(ROOT, grow)
mark(answer, that)
nsubj(answer, these)
cop(answer, be)
advmod(answer, not)
det(answer, the)
amod(answer, complete)
ccomp(grow, answer)
punct(grow, .)
det(man, some)
nsubj(have, man)
root(ROOT, have)
det(talent, no)
obj(have, talent)
case(interest, for)
cc(interest, or)
conj(talent, interest)
case(management, in)
nmod(interest, management)
punct(have, ;)
punct(have, ;)
csubj(create, force)
obj(force, they)
case(management, into)
obl(force, management)
aux(create, can)
advmod(create, only)
parataxis(have, create)
obj(create, trouble)
punct(have, .)
det(adage, the)
amod(adage, old)
compound(adage, shop)
nsubj(hold, adage)
advmod(hold, still)
root(ROOT, hold)
punct(hold, :)
punct(hold, ``)
det(mechanic, a)
amod(mechanic, good)
nsubj(boss, mechanic)
cop(boss, be)
advmod(boss, usually)
det(boss, a)
amod(boss, bad)
root(ROOT, boss)
punct(boss, '')
punct(boss, .)
cc(cling, yet)
nmod:poss(economy, we)
nsubj(cling, economy)
conj(boss, cling)
advmod(cling, inexorably)
case(recognition, to)
obl(cling, recognition)
case(status, of)
amod(status, managerial)
nmod(recognition, status)
case(gige, as)
det(gige, the)
obl(cling, gige)
case(success, of)
nmod(gige, success)
punct(fight, .)
nsubj(fight, Labor)
parataxis(cling, fight)
mark(change, to)
xcomp(fight, change)
nmod:poss(collar, its)
obj(change, collar)
case(blue, from)
obl(change, blue)
case(white, to)
nmod(blue, white)
punct(boss, .)
det(grade, all)
nsubj(seek, grade)
case(management, of)
nmod(grade, management)
root(ROOT, seek)
advmod(resounding, more)
amod(title, resounding)
obj(seek, title)
cc(income, and)
conj(title, income)
case(pressure, because)
fixed(because, of)
amod(pressure, social)
obl(seek, pressure)
punct(seek, .)
mark(emphasize, as)
amod(book, several)
amod(book, recent)
nsubj(emphasize, book)
aux(emphasize, have)
advmod(emphasize, over)
punct(emphasize, -)
advcl(become, emphasize)
punct(become, ,)
nsubj(become, we)
aux(become, have)
root(ROOT, become)
det(nation, the)
advmod(conscious, most)
obl:npmod(conscious, status)
punct(conscious, -)
amod(nation, conscious)
xcomp(become, nation)
case(world, in)
det(world, the)
nmod(nation, world)
punct(become, .)
nsubj:pass(do, what)
aux(do, can)
aux:pass(do, be)
root(ROOT, do)
case(contributor, for)
det(contributor, the)
punct(contributor, ``)
amod(contributor, individual)
obl(do, contributor)
punct(contributor, '')
nsubj(important, who)
cop(important, be)
advmod(important, extremely)
acl:relcl(contributor, important)
punct(do, --)
cc(likely, and)
conj(important, likely)
mark(more, to)
cop(more, be)
advmod(so, more)
advmod(likely, so)
punct(likely, --)
case(operation, in)
det(operation, the)
obl(more, operation)
case(company, of)
det(company, the)
advmod(oriented, technically)
amod(company, oriented)
nmod(operation, company)
punct(do, ?)
punct(do, ?)
nsubj(conscious, he)
cop(conscious, be)
advmod(conscious, usually)
root(ROOT, conscious)
case(pressure, of)
det(pressure, the)
amod(pressure, social)
obl(conscious, pressure)
case(home, at)
nmod(pressure, home)
cc(outside, and)
conj(home, outside)
punct(conscious, ;)
punct(conscious, ;)
advmod(concerned, usually)
parataxis(conscious, concerned)
case(belief, about)
nmod:poss(belief, America)
case(America, 's)
obl(concerned, belief)
mark(measure, that)
nsubj:pass(measure, attainment)
cc(success, and)
conj(attainment, success)
aux:pass(measure, be)
acl(belief, measure)
case(dollar, in)
obl(measure, dollar)
cc(title, and)
conj(dollar, title)
punct(conscious, .)
cc(tend, yet)
nsubj:pass(give, title)
aux:pass(give, be)
advmod(give, traditionally)
root(ROOT, give)
advmod(man, only)
case(man, to)
compound(man, management)
obl(give, man)
punct(tend, ,)
cc(tend, and)
nsubj(tend, income)
conj(give, tend)
mark(rise, to)
xcomp(tend, rise)
case(title, with)
obl(rise, title)
punct(give, .)
advmod(professor, even)
det(professor, the)
compound(professor, college)
nsubj:pass(affect, professor)
case(America, in)
nmod(professor, America)
aux(affect, have)
aux:pass(affect, be)
conj(give, affect)
punct(give, .)
nsubj(be, it)
cop(thing, be)
punct(thing, ,)
mark(say, as)
nummod(engineer, one)
nsubj(say, engineer)
advcl(thing, say)
punct(thing, ,)
punct(thing, ``)
advmod(thing, indeed)
det(thing, a)
amod(thing, difficult)
root(ROOT, thing)
case(engineer, for)
det(engineer, the)
nmod(thing, engineer)
mark(accept, to)
acl(thing, accept)
mark(go, that)
nsubj(go, he)
aux(go, can)
ccomp(accept, go)
advmod(far, as)
advmod(go, far)
case(merit, on)
nmod:poss(merit, he)
amod(merit, technical)
obl(far, merit)
mark(employ, as)
nsubj(employ, he)
aux(employ, could)
advcl(as, employ)
amod(skill, managerial)
obj(employ, skill)
punct(thing, .)
det(difficulty, this)
nsubj(arise, difficulty)
root(ROOT, arise)
advmod(give, even)
mark(give, though)
nsubj(give, we)
aux(give, can)
advcl(arise, give)
obj(give, example)
case(man, of)
nmod(example, man)
nsubj(follow, who)
aux(follow, have)
advmod(follow, actually)
acl:relcl(man, follow)
det(course, this)
obj(follow, course)
punct(arise, .)
nsubj(lead, this)
root(ROOT, lead)
obj(lead, one)
mark(conclude, to)
acl(one, conclude)
punct(lead, ,)
mark(have, as)
nsubj(have, you)
advcl(lead, have)
punct(lead, ,)
mark(be, that)
expl(be, there)
ccomp(have, be)
advmod(more, inevitably)
amod(prestige, more)
nsubj(be, prestige)
case(position, in)
det(position, a)
compound(position, management)
nmod(prestige, position)
case(mind, in)
det(mind, the)
nmod(position, mind)
case(people, of)
nmod:poss(people, we)
nmod(mind, people)
punct(mind, '')
punct(able, .)
nsubj(able, nobody)
aux(able, should)
cop(able, be)
advmod(able, more)
parataxis(lead, able)
mark(answer, to)
xcomp(able, answer)
det(question, the)
obj(answer, question)
case(score, on)
det(score, this)
nmod(question, score)
case(president, than)
compound(president, engineering)
compound(president, vice)
punct(president, -)
nmod(score, president)
cc(engineer, and)
amod(engineer, chief)
conj(president, engineer)
punct(lead, .)
advmod(ask, so)
nsubj(ask, we)
root(ROOT, ask)
amod(man, such)
obj(ask, man)
case(company, in)
amod(company, major)
nmod(man, company)
case(field, in)
det(field, the)
compound(field, design)
obl(ask, field)
mark(offer, to)
advcl(ask, offer)
nmod:poss(opinion, they)
obj(offer, opinion)
case(problem, on)
det(problem, the)
punct(up, ``)
amod(road, dual)
punct(up, -)
compound(up, road)
punct(up, -)
compound(problem, up)
punct(up, '')
nmod(opinion, problem)
punct(problem, --)
cc(solution, and)
advmod(importantly, more)
advmod(solution, importantly)
punct(solution, --)
nmod:poss(solution, they)
conj(problem, solution)
punct(ask, .)
case(paragraph, in)
det(paragraph, the)
obl(quote, paragraph)
nsubj(follow, that)
acl:relcl(paragraph, follow)
punct(quote, ,)
nsubj(quote, we)
root(ROOT, quote)
case(man, from)
nummod(man, 32)
obl(quote, man)
nsubj:pass(identify, who)
aux:pass(identify, be)
acl:relcl(man, identify)
case(page, on)
det(page, the)
amod(page, final)
obl(identify, page)
punct(quote, .)
root(ROOT, first)
punct(first, :)
det(title, what)
parataxis(first, title)
punct(title, ,)
det(setup, what)
parataxis(title, setup)
punct(first, ?)
punct(first, ?)
case(plan, among)
det(plan, the)
advmod(familiar, more)
amod(plan, familiar)
root(ROOT, plan)
case(advancement, for)
amod(channel, dual)
punct(channel, -)
compound(advancement, channel)
nmod(plan, advancement)
cop(that, be)
conj(plan, that)
case(electric, of)
compound(electric, General)
nmod(that, electric)
punct(plan, .)
nsubj(plan, this)
cop(plan, be)
advmod(plan, not)
det(plan, a)
advmod(exclusive, mutually)
amod(plan, exclusive)
root(ROOT, plan)
punct(plan, ;)
punct(plan, ;)
expl(be, there)
parataxis(plan, be)
det(point, no)
nummod(point, one)
nsubj(be, point)
case(career, in)
det(man, a)
nmod:poss(career, man)
case(man, 's)
nmod(point, career)
case(which, at)
obl(select, which)
nsubj(select, he)
aux(select, must)
acl:relcl(career, select)
cc:preconj(path, either)
det(path, the)
amod(path, technical)
cc(the, or)
conj(technical, the)
conj(technical, managerial)
obj(select, path)
advmod(select, upward)
punct(plan, . )
advmod(open, further)
punct(open, ,)
det(path, the)
compound(path, management)
nsubj(open, path)
aux(open, do)
advmod(open, not)
root(ROOT, open)
det(door, the)
obj(open, door)
case(opportunity, to)
amod(opportunity, higher)
obl(open, opportunity)
mark(offer, than)
aux:pass(offer, be)
acl(opportunity, offer)
case(path, by)
det(path, the)
advmod(technical, more)
amod(path, technical)
obl(offer, path)
punct(open, .)
expl(common, it)
cop(common, be)
root(ROOT, common)
mark(shift, to)
csubj(common, shift)
advmod(shift, back)
cc(forth, and)
conj(back, forth)
punct(work, ,)
conj(shift, work)
compound:prt(work, up)
case(number, through)
det(number, a)
obl(work, number)
case(position, of)
amod(position, supervisory)
cc(contributor, and)
amod(contributor, individual)
punct(contributor, -)
conj(supervisory, contributor)
nmod(number, position)
punct(common, .)
advmod(be, actually)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(number, a)
nsubj(be, number)
case(position, of)
amod(contributor, individual)
punct(contributor, -)
compound(position, contributor)
nmod(number, position)
case(department, in)
det(department, both)
compound(department, operating)
nmod(position, department)
cc(operation, and)
case(operation, in)
det(operation, the)
obl:npmod(wide, company)
punct(wide, -)
amod(service, wide)
punct(service, ``)
compound(operation, service)
punct(service, '')
conj(department, operation)
nsubj:pass(fill, that)
aux:pass(fill, be)
acl:relcl(operation, fill)
case(man, by)
obl(fill, man)
case(experience, with)
amod(experience, successful)
amod(experience, managerial)
nmod(man, experience)
nsubj(broaden, who)
aux(broaden, be)
advmod(broaden, currently)
acl:relcl(experience, broaden)
nmod:poss(capability, they)
obj(broaden, capability)
punct(be, .)
advmod(end, also)
punct(end, ,)
csubj(end, move)
case(position, into)
det(position, a)
amod(position, managerial)
obl(move, position)
aux(end, do)
advmod(end, not)
advmod(end, necessarily)
root(ROOT, end)
det(man, a)
nmod:poss(recognition, man)
case(man, 's)
obj(end, recognition)
case(expert, as)
det(expert, a)
amod(expert, technical)
obl(end, expert)
punct(end, .)
case(example, as)
root(ROOT, example)
case(GE, at)
nmod(example, GE)
punct(example, :)
nsubj(recognize, Glen)
flat(Glen, B.)
flat(Glen, Warren)
punct(Glen, ,)
advmod(manager, formerly)
appos(Glen, manager)
case(division, of)
det(division, the)
compound(division, turbine)
nmod(manager, division)
punct(recognize, ,)
advmod(recognize, widely)
parataxis(example, recognize)
case(designer, as)
det(designer, a)
compound(designer, turbine)
obl(recognize, designer)
punct(recognize, .)
det(W., the)
amod(W., late)
root(ROOT, W.)
flat(W., R.)
flat(W., G.)
flat(W., Baker)
punct(W., ,)
det(pioneer, a)
appos(W., pioneer)
case(design, in)
compound(design, television)
nmod(pioneer, design)
cc(vp, and)
amod(time, long)
punct(time, -)
compound(vp, time)
conj(W., vp)
cc(gm, &)
conj(vp, gm)
case(division, of)
det(division, the)
compound(division, electronics)
nmod(gm, division)
punct(consultant, ,)
cc(consultant, and)
advmod(consultant, later)
punct(consultant, ,)
case(choice, by)
nmod:poss(choice, he)
amod(choice, own)
nmod(consultant, choice)
punct(consultant, ,)
det(consultant, a)
amod(consultant, individual)
conj(vp, consultant)
punct(consultant, .)
root(ROOT, Harold)
flat(Harold, E.)
flat(Harold, Strang)
punct(Harold, ,)
appos(Harold, expert)
case(design, in)
compound(design, switchgear)
nmod(expert, design)
punct(expert, ,)
case(vp, for)
det(vp, a)
amod(period, long)
compound(vp, period)
nmod(expert, vp)
cc(gm, &)
conj(vp, gm)
case(division, of)
det(division, the)
compound(division, measurement)
cc(Products, &)
conj(measurement, Industrial)
conj(measurement, Products)
nmod(vp, division)
punct(who, ,)
cc(who, and)
conj(division, who)
advmod(approach, currently)
punct(approach, ,)
advcl(who, approach)
obj(approach, retirement)
punct(president, ,)
cop(president, be)
amod(president, vice)
punct(president, -)
obj(approach, president)
cc(engineer, and)
compound(engineer, consulting)
conj(president, engineer)
case(division, in)
det(division, the)
compound(division, Switchgear)
cc(Control, &)
conj(Switchgear, Control)
nmod(engineer, division)
punct(president, .)
case(plan, in)
det(plan, the)
compound(plan, GE)
obl(have, plan)
punct(have, ,)
det(number, a)
nsubj(have, number)
case(contributor, of)
amod(contributor, individual)
nmod(number, contributor)
root(ROOT, have)
obj(have, position)
cc(compensation, and)
conj(position, compensation)
amod(position, higher)
case(those, than)
obl(higher, those)
case(manager, of)
amod(manager, many)
nmod(those, manager)
punct(have, .)
det(position, these)
nsubj(carry, position)
root(ROOT, carry)
amod(title, such)
obj(carry, title)
case(consultant, as)
punct(consultant, :)
nmod(title, consultant)
punct(engineer, ,)
compound(Development, Advanced)
compound(engineer, Development)
compound(engineer, Consulting)
conj(consultant, engineer)
punct(engineer, ,)
compound(engineer, Consulting)
conj(consultant, engineer)
punct(engineer, ,)
compound(Transfer, heat)
compound(engineer, Transfer)
compound(engineer, Consulting)
compound(engineer, electrical)
conj(consultant, engineer)
punct(engineer, ,)
compound(engineer, Senior)
compound(engineer, electrical)
conj(consultant, engineer)
punct(engineer, ,)
compound(physicist, Senior)
conj(consultant, physicist)
punct(have, .)
nsubj(have, westinghouse)
parataxis(carry, have)
det(system, a)
amod(system, similar)
obj(have, system)
punct(system, ,)
case(classification, with)
nummod(classification, two)
nmod(system, classification)
acl(classification, represent)
amod(level, various)
obj(represent, level)
case(competence, of)
nmod(level, competence)
case(side, on)
det(side, the)
advmod(technical, strictly)
amod(side, technical)
nmod(competence, side)
punct(engineer, :)
compound(engineer, consulting)
appos(side, engineer)
cc(scientist, or)
conj(engineer, scientist)
punct(engineer, ,)
mark(engineer, as)
det(case, the)
nsubj(engineer, case)
aux(engineer, may)
cop(engineer, be)
punct(engineer, ,)
cc(engineer, and)
amod(engineer, advisory)
conj(engineer, engineer)
cc(scientist, or)
conj(engineer, scientist)
punct(carry, .)
amod(company, many)
nsubj(have, company)
root(ROOT, have)
obj(have, system)
punct(system, ,)
advmod(R, particularly)
case(R, in)
nmod(system, R)
cc(D, &)
conj(R, D)
punct(system, ,)
nsubj(work, which)
acl:relcl(system, work)
obj(work, more)
cc(less, or)
conj(more, less)
conj(more, well)
punct(work, ,)
case(size, depend)
case(size, upon)
obl(work, size)
cc(belief, and)
amod(belief, actual)
conj(size, belief)
case(policy, in)
det(policy, the)
nmod(belief, policy)
case(part, on)
det(part, the)
nmod(policy, part)
case(administration, of)
nmod(part, administration)
punct(policy, ,)
mark(apparent, as)
aux(apparent, will)
cop(apparent, be)
advmod(apparent, abundantly)
advcl(work, apparent)
case(quotation, in)
amod(quotation, subsequent)
obl(apparent, quotation)
punct(have, .)
det(factor, another)
nsubj(be, factor)
nsubj(hold, that)
aux(hold, may)
acl:relcl(factor, hold)
obj(hold, hope)
root(ROOT, be)
case(recognition, for)
amod(recognition, parallel)
nsubj(be, recognition)
ccomp(be, be)
punct(be, ,)
mark(say, as)
nummod(man, one)
nsubj(say, man)
advcl(be, say)
obj(say, it)
punct(say, :)
punct(say, ``)
mark(yield, that)
det(fad, the)
nsubj(yield, fad)
mark(educate, for)
acl(fad, educate)
amod(people, top)
obj(educate, people)
case(line, along)
compound(line, managerial)
obl(educate, line)
aux(yield, be)
ccomp(say, yield)
case(approach, to)
det(approach, the)
advmod(train, technically)
amod(approach, train)
obl(yield, approach)
punct(approach, '')
punct(engineer, .)
amod(engineer, senior)
compound(engineer, staff)
appos(approach, engineer)
punct(be, ?)
punct(be, ?)
nummod(company, one)
nsubj(system, company)
acl(company, institute)
punct(institute, ,)
advmod(institute, early)
case(1959, in)
obl(institute, 1959)
punct(system, ,)
det(system, a)
amod(system, vertical)
compound(system, classification)
root(ROOT, system)
acl(system, consist)
case(level, of)
nummod(level, four)
obl(consist, level)
punct(system, .)
expl(be, there)
root(ROOT, be)
det(equivalence, no)
amod(equivalence, formal)
nsubj(be, equivalence)
case(rank, to)
det(rank, the)
amod(rank, supervisory)
nmod(equivalence, rank)
punct(be, ;)
punct(be, ;)
det(level, the)
amod(level, top)
amod(level, non-supervisory)
nsubj(enjoy, level)
punct(engineer, ,)
amod(engineer, senior)
compound(engineer, staff)
conj(level, engineer)
punct(enjoy, ,)
conj(be, enjoy)
obj(enjoy, status)
cc(pay, and)
conj(enjoy, pay)
xcomp(pay, range)
compound:prt(range, up)
case(that, to)
obl(range, that)
case(level, for)
det(level, the)
amod(level, second)
obl(range, level)
case(supervision, of)
compound(supervision, engineering)
nmod(level, supervision)
punct(be, .)
det(level, the)
amod(level, second)
nsubj(supervision, level)
punct(level, ,)
amod(engineer, senior)
appos(level, engineer)
punct(rate, ,)
conj(level, rate)
advmod(supervision, slightly)
case(supervision, below)
amod(level, first)
punct(level, -)
compound(supervision, level)
root(ROOT, supervision)
punct(level, .)
det(expectation, the)
nsubj(be, expectation)
root(ROOT, be)
mark(select, that)
amod(level, first)
punct(level, -)
compound(supervisor, level)
nsubj:pass(select, supervisor)
aux(select, will)
aux:pass(select, be)
ccomp(be, select)
case(number, in)
advmod(equal, approximately)
amod(number, equal)
obl(select, number)
case(level, from)
det(level, the)
amod(level, second)
cc(third, and)
conj(second, third)
compound(level, engineering)
nmod(number, level)
punct(select, ,)
case(few, with)
advmod(few, very)
advmod(come, few)
advcl(select, come)
case(level, from)
det(level, the)
amod(level, first)
obl(come, level)
punct(be, .)
det(company, the)
nsubj(expect, company)
root(ROOT, expect)
mark(extend, to)
xcomp(expect, extend)
case(compensation, upward)
cc:preconj(compensation, both)
obl(extend, compensation)
cc(status, and)
conj(compensation, status)
case(engineer, for)
amod(engineer, non-supervisory)
nmod(compensation, engineer)
punct(level, ,)
cc(level, but)
advmod(level, probably)
advmod(level, not)
case(level, into)
amod(level, executive)
conj(compensation, level)
punct(expect, .)
case(organization, in)
det(organization, this)
obl(supervision, organization)
punct(supervision, ,)
advmod(half, about)
nsubj(supervision, half)
case(engineer, of)
det(engineer, the)
nmod(half, engineer)
case(year, with)
nummod(year, 15)
cc(more, or)
conj(15, more)
nmod(half, year)
case(employment, of)
nmod(year, employment)
cop(supervision, be)
case(supervision, in)
root(ROOT, supervision)
punct(engineering, ,)
conj(supervision, engineering)
cc(elsewhere, or)
conj(supervision, elsewhere)
punct(supervision, .)
nsubj(reflect, this)
root(ROOT, reflect)
det(content, the)
advmod(heavy, very)
amod(content, heavy)
compound(content, engineering)
obj(reflect, content)
case(product, of)
det(product, the)
nmod(content, product)
punct(product, --)
nsubj(military, which)
cop(military, be)
advmod(military, not)
acl:relcl(product, military)
punct(reflect, .)
amod(example, several)
amod(example, other)
root(ROOT, example)
punct(example, :)
appos(example, central)
cc(satellite, and)
conj(central, satellite)
punct(example, ``)
nsubj(have, we)
root(ROOT, have)
advmod(20, over)
nummod(division, 20)
obj(have, division)
punct(division, --)
nsubj(have, each)
case(which, of)
obl(have, which)
acl:relcl(division, have)
det(department, a)
compound(department, engineering)
obj(have, department)
acl(department, head)
case(engineer, by)
det(engineer, a)
amod(engineer, chief)
obl(head, engineer)
punct(have, .)
nsubj(set, we)
aux(set, have)
root(ROOT, set)
compound:prt(set, up)
det(department, a)
amod(department, central)
compound(department, R)
cc(d, &)
conj(R, d)
obj(set, department)
punct(department, ,)
cc(department, as)
fixed(as, well)
fixed(as, as)
compound(management, engineering)
punct(management, -)
compound(department, management)
conj(department, department)
punct(department, --)
advmod(80, about)
nummod(people, 80)
appos(department, people)
acl(people, work)
case(problem, on)
obl(work, problem)
acl(problem, relate)
case(those, to)
obl(relate, those)
case(plant, of)
nmod:poss(plant, we)
nmod(those, plant)
punct(set, . )
det(department, a)
amod(department, separate)
compound(department, research)
nsubj(be, department)
root(ROOT, be)
punct(confine, ,)
advmod(confine, of)
fixed(of, course)
punct(confine, ,)
advcl(be, confine)
case(design, to)
amod(design, new)
cc(future, or)
conj(new, future)
obl(confine, design)
punct(be, .)
nsubj(engineering, Part)
case(staff, of)
det(staff, this)
compound(staff, headquarters)
nmod(Part, staff)
punct(engineering, ,)
advmod(engineering, however)
punct(engineering, ,)
aux(engineering, be)
root(ROOT, engineering)
obj(engineering, manager)
nsubj(work, who)
acl:relcl(manager, work)
case(engineer, between)
amod(engineer, divisional)
amod(engineer, chief)
obl(work, engineer)
cc(management, and)
compound(management, headquarters)
conj(engineer, management)
punct(engineering, .)
det(engineer, these)
compound(engineer, headquarters)
root(ROOT, engineer)
punct(engineer, ,)
acl(engineer, head)
case(president, by)
det(president, the)
compound(president, vice)
punct(president, -)
obl(head, president)
punct(engineer, --)
root(ROOT, Engineering)
punct(counsel, ,)
conj(Engineering, counsel)
cc(advise, and)
conj(Engineering, advise)
amod(manager, divisional)
obj(advise, manager)
cc(engineer, and)
amod(engineer, chief)
conj(manager, engineer)
case(problem, on)
compound(problem, product)
nmod(engineer, problem)
cc(aid, as)
fixed(as, well)
fixed(as, as)
conj(manager, aid)
case(design, with)
nmod(aid, design)
punct(aid, ;)
punct(aid, ;)
cc(engineer, and)
nsubj(engineer, many)
cop(engineer, be)
conj(aid, engineer)
nsubj:pass(advanced, who)
aux(advanced, have)
aux:pass(advanced, be)
acl:relcl(engineer, advanced)
case(division, from)
det(division, the)
obl(advanced, division)
punct(Engineering, .)
det(man, these)
nsubj:pass(consider, man)
aux:pass(consider, be)
root(ROOT, consider)
xcomp(consider, manager)
case(engineer, of)
nmod(manager, engineer)
punct(consider, .)
nsubj(learn, they)
aux(learn, must)
root(ROOT, learn)
mark(wear, to)
xcomp(learn, wear)
amod(hat, several)
obj(wear, hat)
punct(wear, ,)
advmod(speak, so)
mark(speak, to)
advcl(wear, speak)
punct(speak, ,)
conj(speak, work)
case(management, with)
obl(work, management)
punct(sale, ,)
conj(management, sale)
cc(engineering, and)
compound(problem, engineering)
conj(management, problem)
amod(problem, related)
case(product, to)
det(product, the)
obl(related, product)
punct(learn, .)
punct(learn, ``)
nsubj(have, we)
aux(have, do)
advmod(have, not)
root(ROOT, have)
obj(have, people)
case(organization, in)
nmod:poss(organization, we)
nmod(people, organization)
acl(organization, term)
punct(consultant, ')
obj(term, consultant)
punct(consultant, ')
cc(fellow, or)
punct(fellow, ')
conj(consultant, fellow)
punct(fellow, ')
punct(fellow, ,)
nsubj(specialist, who)
cop(specialist, be)
acl:relcl(fellow, specialist)
case(subject, in)
nummod(subject, one)
amod(subject, particular)
amod(subject, technical)
obl(specialist, subject)
punct(have, . )
nsubj(suppose, I)
root(ROOT, suppose)
nsubj(be, it)
ccomp(suppose, be)
mark(enough, because)
nsubj(enough, we)
cop(enough, be)
advmod(enough, just)
advmod(enough, not)
amod(enough, big)
advcl(be, enough)
punct(suppose, .)
nsubj(have, we)
root(ROOT, have)
det(consultant, a)
amod(consultant, few)
punct(consultant, ')
obj(have, consultant)
punct(consultant, ')
punct(consultant, --)
amod(engineer, retire)
appos(consultant, engineer)
acl(engineer, retain)
cc(call, and)
conj(retain, call)
compound:prt(call, in)
case(problem, on)
amod(problem, certain)
obl(call, problem)
punct(have, .)
det(fellow, the)
amod(fellow, only)
punct(fellow, ')
nsubj(those, fellow)
punct(fellow, ')
case(company, in)
nmod:poss(company, we)
nmod(fellow, company)
cop(those, be)
root(ROOT, those)
nsubj:pass(honor, who)
aux(honor, have)
aux:pass(honor, be)
acl:relcl(those, honor)
case(asme, by)
obl(honor, asme)
punct(AIEE, ,)
conj(asme, AIEE)
cc(AIChE, or)
conj(asme, AIChE)
punct(those, . )
nsubj(sure, I)
cop(sure, be)
root(ROOT, sure)
mark(open, that)
det(engineer, the)
nsubj(open, engineer)
nsubj(enter, who)
acl:relcl(engineer, enter)
obj(enter, management)
aux(open, be)
advmod(always, nearly)
advmod(open, always)
ccomp(sure, open)
det(door, the)
obj(open, door)
case(possibility, to)
amod(possibility, greater)
obl(open, possibility)
mark(have, than)
nsubj(have, he)
aux(have, would)
acl(possibility, have)
case(specialist, as)
det(specialist, a)
amod(specialist, technical)
obl(have, specialist)
punct(specialist, --)
case(accountability, because)
fixed(because, of)
nmod:poss(accountability, he)
amod(accountability, wider)
nmod(specialist, accountability)
punct(accountability, '')
punct(structure, .)
det(structure, another)
appos(accountability, structure)
punct(sure, ``)
nsubj(try, we)
aux(try, have)
root(ROOT, try)
mark(make, to)
xcomp(try, make)
det(path, both)
obj(make, path)
amod(path, attractive)
punct(make, ,)
mark(find, so)
fixed(so, that)
amod(man, good)
nsubj(find, man)
aux(find, could)
advcl(make, find)
obj(find, opportunity)
cc(satisfaction, and)
conj(opportunity, satisfaction)
case(either, in)
obl(find, either)
punct(try, .)
nummod(way, one)
nsubj(structure, way)
mark(formalize, to)
acl(way, formalize)
obj(formalize, this)
cop(structure, be)
case(structure, in)
det(structure, the)
compound(structure, job)
root(ROOT, structure)
punct(structure, .)
nsubj(have, we)
root(ROOT, have)
det(position, these)
obj(have, position)
punct(position, ,)
nsubj(compare, which)
acl:relcl(position, compare)
advmod(compare, directly)
punct(have, :)
root(ROOT, Af)
punct(Af, ``)
case(job, above)
det(job, these)
obl(have, job)
nsubj(have, we)
root(ROOT, have)
amod(engineer, chief)
obj(have, engineer)
case(company, for)
det(company, the)
nmod(engineer, company)
cc(president, and)
compound(president, vice)
punct(president, -)
conj(company, president)
case(Engrg, of)
nmod(president, Engrg)
punct(R, ,)
appos(Engrg, R)
cc(Aj, &)
conj(R, Aj)
punct(include, .)
det(job, the)
amod(job, latter)
nsubj(include, job)
parataxis(have, include)
amod(responsibility, major)
compound(responsibility, management)
obj(include, responsibility)
cc(fill, and)
aux(fill, have)
aux:pass(fill, be)
conj(include, fill)
case(those, by)
obl(fill, those)
nsubj(come, who)
aux(come, have)
acl:relcl(those, come)
compound:prt(come, up)
advmod(come, primarily)
case(side, through)
det(side, the)
compound(management, engineering)
punct(management, -)
compound(side, management)
obl(come, side)
punct(have, .)
nsubj(succeed, we)
aux(succeed, have)
advmod(succeed, not)
advmod(succeed, yet)
root(ROOT, succeed)
mark(establish, in)
advcl(succeed, establish)
obj(establish, recognition)
case(specialization, of)
amod(specialization, technical)
nmod(recognition, specialization)
amod(recognition, comparable)
case(level, to)
nmod:poss(level, we)
amod(level, higher)
obl(comparable, level)
case(management, of)
nmod(level, management)
punct(believe, ,)
cc(believe, but)
nsubj(believe, I)
conj(succeed, believe)
nsubj(trend, we)
aux(trend, will)
ccomp(believe, trend)
case(direction, in)
det(direction, this)
obl(trend, direction)
cc(exceed, but)
advmod(exceed, not)
mark(exceed, to)
conj(trend, exceed)
compound(president, vice)
punct(president, -)
obj(exceed, president)
punct(president, '')
punct(president, .)
amod(job, top)
obj(exceed, job)
punct(scientist, :)
compound(scientist, research)
appos(job, scientist)
punct(scientist, ``)
punct(scientist, .)
advmod(year, approximately)
nummod(year, four)
obl:npmod(ago, year)
advmod(initiate, ago)
punct(initiate, ,)
nsubj(initiate, we)
parataxis(succeed, initiate)
det(ladder, a)
amod(ladder, dual)
obj(initiate, ladder)
case(advancement, of)
nmod(ladder, advancement)
case(person, for)
amod(person, technical)
nmod(advancement, person)
punct(succeed, .)
det(position, the)
amod(position, highest)
nsubj:pass(know, position)
aux:pass(know, be)
root(ROOT, know)
case(scientist, as)
det(scientist, a)
punct(scientist, ')
compound(scientist, research)
obl(know, scientist)
punct(know, .)
det(approach, this)
nsubj(satisfactory, approach)
aux(satisfactory, have)
advmod(satisfactory, not)
cop(satisfactory, be)
advmod(satisfactory, entirely)
root(ROOT, satisfactory)
punct(satisfactory, .)
det(deterrent, the)
amod(deterrent, primary)
nsubj(appear, deterrent)
root(ROOT, appear)
mark(lie, to)
xcomp(appear, lie)
case(people, with)
det(people, the)
amod(people, technical)
obl(lie, people)
nmod:npmod(people, themselves)
punct(reluctant, ,)
cc(reluctant, and)
nmod:poss(concept, they)
nsubj(reluctant, concept)
case(what, of)
nmod(concept, what)
acl:relcl(what, constitute)
obj(constitute, status)
case(society, in)
amod(day, present)
punct(day, -)
compound(society, day)
obl(constitute, society)
punct(appear, .)
nsubj(reluctant, scientist)
nsubj(agitate, who)
acl:relcl(scientist, agitate)
obj(agitate, hardest)
case(recognition, for)
amod(recognition, technical)
obl(hardest, recognition)
cop(reluctant, be)
advmod(reluctant, often)
det(reluctant, the)
advmod(reluctant, most)
conj(appear, reluctant)
mark(accept, to)
advcl(reluctant, accept)
obj(accept, it)
punct(appear, .)
nsubj(discover, we)
aux(discover, have)
root(ROOT, discover)
mark(important, that)
det(trap, the)
amod(trap, outward)
nsubj(important, trap)
case(office, such)
fixed(such, as)
amod(office, private)
nsubj(important, office)
cc(secretary, and)
amod(secretary, private)
conj(office, secretary)
cop(important, be)
advmod(important, extremely)
ccomp(discover, important)
punct(discover, ;)
punct(discover, ;)
cc(heart, and)
mark(attempt, although)
nsubj(attempt, we)
aux(attempt, have)
advcl(important, attempt)
mark(provide, to)
xcomp(attempt, provide)
det(symbol, these)
compound(symbol, status)
obj(provide, symbol)
punct(support, ,)
conj(symbol, support)
case(plan, of)
det(plan, the)
punct(ladder, ')
amod(ladder, dual)
punct(ladder, -)
compound(plan, ladder)
punct(ladder, ')
nmod(support, plan)
aux(heart, have)
cop(heart, be)
advmod(heart, half)
punct(heart, -)
ccomp(discover, heart)
case(creation, despite)
det(creation, the)
obl(heart, creation)
case(potential, of)
det(potential, a)
amod(potential, salary)
nmod(creation, potential)
case(scientist, for)
det(scientist, a)
compound(scientist, research)
nmod(potential, scientist)
amod(scientist, commensurate)
case(that, with)
obl(commensurate, that)
case(man, of)
nmod(that, man)
case(position, in)
amod(position, top)
compound(position, managerial)
nmod(man, position)
punct(discover, .)
punct(discover, ``)
det(problem, a)
amod(problem, serious)
nsubj(difficulty, problem)
amod(problem, accompany)
det(approach, the)
amod(ladder, technical)
punct(ladder, -)
compound(approach, ladder)
nsubj(difficulty, approach)
cop(difficulty, be)
det(difficulty, the)
root(ROOT, difficulty)
mark(define, of)
advmod(define, clearly)
acl(difficulty, define)
obj(define, responsibility)
cc(standard, and)
conj(responsibility, standard)
case(performance, of)
nmod(responsibility, performance)
case(level, for)
det(level, each)
nmod(performance, level)
punct(difficulty, .)
case(standard, with)
det(standard, no)
amod(standard, set)
obl(be, standard)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(tendency, the)
nsubj(be, tendency)
mark(promote, to)
acl(tendency, promote)
case(level, to)
det(level, the)
amod(level, next)
amod(level, highest)
obl(promote, level)
mark(reach, when)
det(top, the)
nsubj:pass(reach, top)
case(band, of)
det(band, a)
compound(band, salary)
nmod(top, band)
aux:pass(reach, be)
advcl(promote, reach)
advmod(reach, regardless)
case(performance, of)
obl(reach, performance)
punct(be, .)
nsubj:pass(base, promotion)
aux:pass(base, be)
advmod(often, too)
advmod(base, often)
root(ROOT, base)
case(longevity, on)
obl(base, longevity)
cc(time, and)
conj(longevity, time)
case(grade, in)
compound(grade, salary)
nmod(longevity, grade)
case(merit, instead)
fixed(instead, of)
obl(base, merit)
punct(base, .)
mark(exist, if)
det(plan, no)
amod(plan, specific)
compound(plan, organization)
nsubj(exist, plan)
advcl(department, exist)
xcomp(exist, limiting)
det(number, the)
obj(limiting, number)
case(scientist, of)
nmod(number, scientist)
case(level, at)
det(level, each)
compound(level, salary)
obl(limiting, level)
punct(department, ,)
det(result, the)
nsubj(department, result)
cop(department, be)
det(department, a)
root(ROOT, department)
obl:npmod(heavy, top)
punct(heavy, -)
amod(department, heavy)
case(level, with)
amod(level, high)
punct(level, -)
obl(heavy, level)
punct(personnel, ,)
amod(salary, high)
punct(salary, -)
amod(personnel, salary)
appos(level, personnel)
punct(personnel, '')
punct(manager, .)
compound(engineer, staff)
compound(manager, engineer)
compound(manager, dept.)
appos(department, manager)
punct(manager, ``)
nsubj(have, we)
root(ROOT, have)
nummod(approach, two)
obj(have, approach)
case(man, for)
det(man, the)
amod(man, technical)
nmod(approach, man)
punct(approach, :)
det(position, the)
appos(approach, position)
case(engineer, of)
compound(engineer, staff)
nmod(position, engineer)
punct(position, ,)
nsubj:pass(rate, which)
aux:pass(rate, be)
acl:relcl(position, rate)
advmod(high, as)
advmod(rate, high)
case(salary, in)
obl(high, salary)
case(manager, as)
compound(manager, department)
nmod(salary, manager)
punct(have, ;)
punct(have, ;)
cc(organization, and)
det(organization, a)
amod(organization, administrative)
conj(position, organization)
mark(take, to)
acl(organization, take)
det(load, the)
compound(load, routine)
obj(take, load)
advmod(take, away)
case(manager, from)
compound(manager, department)
obl(away, manager)
cc(engineer, and)
compound(engineer, project)
conj(manager, engineer)
advmod(much, as)
amod(manager, much)
mark(possible, as)
advcl(much, possible)
punct(allow, ,)
advmod(allow, thus)
advcl(much, allow)
iobj(allow, they)
amod(time, more)
obj(allow, time)
case(work, for)
advmod(technical, strictly)
amod(work, technical)
nmod(time, work)
punct(have, .)
nsubj(measure, these)
cop(measure, be)
advmod(measure, only)
amod(measure, halfway)
root(ROOT, measure)
punct(come, ,)
cc(come, and)
det(answer, the)
nsubj(come, answer)
aux(come, will)
conj(measure, come)
mark(find, when)
det(way, some)
nsubj:pass(find, way)
aux:pass(find, be)
advcl(come, find)
mark(allow, to)
xcomp(find, allow)
det(man, the)
amod(man, technical)
obj(allow, man)
case(industry, in)
obl(allow, industry)
mark(progress, to)
xcomp(allow, progress)
case(limit, without)
obl(progress, limit)
case(salary, in)
obl(progress, salary)
cc(prestige, and)
conj(salary, prestige)
punct(salary, '')
punct(plan, .)
det(plan, a)
amod(plan, complete)
parataxis(measure, plan)
punct(measure, ``)
nsubj(make, we)
aux(make, have)
root(ROOT, make)
amod(application, limit)
obj(make, application)
case(plan, of)
det(plan, the)
punct(ladder, ')
amod(ladder, parallel)
compound(plan, ladder)
punct(ladder, ')
nmod(application, plan)
punct(make, .)
det(title, the)
amod(title, highest)
amod(title, rate)
amod(title, non-supervisory)
compound(title, engineering)
nsubj(engineer, title)
cop(engineer, be)
case(engineer, 's)
compound(engineer, research)
root(ROOT, engineer)
punct(engineer, .)
det(schedule, the)
compound(schedule, salary)
nsubj(permit, schedule)
root(ROOT, permit)
obj(permit, remuneration)
amod(remuneration, greater)
case(average, than)
det(average, the)
obl(greater, average)
acl(average, pay)
case(level, to)
det(level, the)
amod(level, first)
obl(pay, level)
case(supervision, of)
compound(supervision, engineering)
nmod(level, supervision)
punct(head, ()
compound(section, engineering)
compound(head, section)
appos(supervision, head)
punct(head, ))
punct(permit, .)
nsubj(have, we)
advmod(have, also)
root(ROOT, have)
det(head, a)
punct(head, ')
compound(section, engineering)
compound(head, section)
obj(have, head)
punct(head, --)
compound(engineer, research)
appos(head, engineer)
punct(engineer, ')
appos(head, classification)
nsubj(have, which)
acl:relcl(classification, have)
amod(possibility, salary)
obj(have, possibility)
amod(possibility, equivalent)
case(that, to)
obl(equivalent, that)
case(engineer, of)
det(engineer, a)
compound(engineer, research)
nmod(that, engineer)
punct(be, .)
case(point, above)
det(point, this)
obl(be, point)
expl(be, there)
parataxis(have, be)
det(ladder, no)
advmod(use, generally)
amod(ladder, use)
amod(ladder, parallel)
nsubj(be, ladder)
punct(have, .)
punct(have, ``)
nsubj(do, we)
advmod(do, also)
root(ROOT, do)
det(number, a)
obj(do, number)
case(thing, of)
nmod(number, thing)
mark(build, to)
acl(thing, build)
compound:prt(build, up)
det(prestige, the)
obj(build, prestige)
case(engineer, of)
det(engineer, the)
nmod(prestige, engineer)
case(professional, as)
det(professional, a)
punct(professional, ')
obl(build, professional)
punct(professional, ')
cc(give, and)
advmod(give, also)
mark(give, to)
conj(build, give)
amod(recognition, public)
obj(give, recognition)
case(competence, to)
amod(competence, individual)
amod(competence, technical)
nmod(recognition, competence)
punct(do, .)
nsubj(include, these)
root(ROOT, include)
obj(include, encouragement)
nmod(encouragement, of)
punct(assistance, ,)
cc(assistance, and)
conj(encouragement, assistance)
nmod(assistance, to)
punct(engineer, ,)
det(engineer, the)
conj(encouragement, engineer)
case(preparation, in)
nmod(engineer, preparation)
cc(publication, and)
conj(preparation, publication)
case(papers, of)
amod(papers, technical)
nmod(publication, papers)
punct(include, .)
nsubj(have, we)
root(ROOT, have)
nummod(media, two)
obj(have, media)
mark(publicize, for)
acl(media, publicize)
amod(activity, individual)
amod(activity, technical)
obj(publicize, activity)
punct(activity, ,)
det(magazine, a)
appos(activity, magazine)
advmod(distribute, widely)
acl(magazine, distribute)
cc:preconj(distribute, both)
case(company, within)
cc(without, and)
conj(within, without)
det(company, the)
obl(distribute, company)
punct(bulletin, ,)
cc(bulletin, and)
det(bulletin, a)
compound(bulletin, information)
conj(activity, bulletin)
case(personnel, for)
compound(personnel, engineering)
nmod(bulletin, personnel)
acl(personnel, distribute)
case(home, to)
det(home, the)
obl(distribute, home)
case(engineer, of)
det(engineer, all)
nmod(home, engineer)
punct(have, .)
nsubj:pass(give, publicity)
aux:pass(give, be)
root(ROOT, give)
case(award, to)
det(award, the)
obl(give, award)
case(patent, of)
nmod(award, patent)
case(engineer, to)
nmod:poss(engineer, we)
nmod(patent, engineer)
cc(support, and)
amod(support, financial)
conj(engineer, support)
aux:pass(provide, be)
conj(give, provide)
case(membership, for)
amod(membership, individual)
obl(provide, membership)
case(society, in)
amod(society, technical)
nmod(membership, society)
punct(give, .)
punct(give, ``)
det(action, a)
amod(action, recent)
punct(action, ,)
cc(pertinent, and)
advmod(pertinent, more)
amod(action, pertinent)
nsubj(establishment, action)
punct(establishment, ,)
aux(establishment, have)
cop(establishment, be)
det(establishment, the)
root(ROOT, establishment)
case(staff, of)
det(staff, a)
amod(staff, technical)
nmod(establishment, staff)
acl(staff, report)
case(president, to)
det(president, the)
compound(president, vice)
punct(president, -)
obl(report, president)
case(Engineering, for)
nmod(president, Engineering)
punct(establishment, .)
det(function, this)
nsubj:pass(staff, function)
aux:pass(staff, be)
root(ROOT, staff)
case(engineer, by)
obl(staff, engineer)
acl(engineer, choose)
case(competence, for)
nmod:poss(competence, they)
amod(competence, technical)
obl(choose, competence)
cc(have, and)
nsubj(have, who)
conj(staff, have)
det(title, the)
obj(have, title)
punct(title, ,)
appos(title, member)
case(staff, of)
det(staff, the)
amod(staff, technical)
nmod(member, staff)
punct(staff, .)
nsubj(compare, salary)
root(ROOT, compare)
advmod(compare, favorably)
case(those, with)
obl(compare, those)
acl(those, pay)
case(level, to)
det(level, the)
amod(level, first)
nummod(level, two)
cc(three, or)
conj(two, three)
obl(pay, level)
case(management, of)
nmod(level, management)
punct(compare, .)
amod(symbol, additional)
nsubj:pass(grant, symbol)
case(status, of)
nmod(symbol, status)
aux:pass(grant, be)
root(ROOT, grant)
punct(grant, ,)
case(parking, such)
fixed(such, as)
amod(parking, reserve)
obl(grant, parking)
punct(pass, ,)
amod(pass, distinctive)
compound(pass, badge)
conj(parking, pass)
acl(pass, authorize)
amod(privileges, special)
obj(authorize, privileges)
punct(difference, ,)
cc(difference, and)
det(difference, a)
conj(parking, difference)
case(treatment, in)
det(treatment, the)
nmod(difference, treatment)
case(progress, of)
amod(progress, financial)
nmod(treatment, progress)
case(merit, through)
nmod(progress, merit)
punct(grant, .)
punct(grant, ``)
nsubj(involved, we)
advmod(involved, presently)
cop(involved, be)
root(ROOT, involved)
mark(inaugurate, in)
advcl(involved, inaugurate)
det(center, a)
amod(center, new)
compound(center, development)
obj(inaugurate, center)
punct(involved, .)
nsubj(offer, Operations)
case(nature, of)
det(nature, this)
nmod(Operations, nature)
root(ROOT, offer)
det(opportunity, the)
amod(opportunity, best)
obj(offer, opportunity)
mark(recognize, to)
acl(opportunity, recognize)
amod(status, scientific)
obj(recognize, status)
punct(offer, .)
det(member, all)
amod(staff, scientific)
compound(member, staff)
nsubj(have, member)
aux(have, will)
root(ROOT, have)
det(title, the)
obj(have, title)
punct(title, ,)
punct(member, ')
compound(staff, research)
punct(staff, -)
compound(member, staff)
appos(title, member)
punct(have, .)
det(level, the)
amod(level, salary)
nsubj(reflect, level)
case(individual, of)
det(individual, a)
nmod(level, individual)
case(group, within)
det(group, the)
nmod(individual, group)
aux(reflect, will)
root(ROOT, reflect)
det(community, the)
amod(community, scientific)
nmod:poss(acceptance, community)
case(community, 's)
obj(reflect, acceptance)
case(he, of)
nmod(acceptance, he)
case(authority, as)
det(authority, a)
obl(reflect, authority)
case(field, in)
nmod:poss(field, he)
amod(field, scientific)
nmod(authority, field)
punct(reflect, .)
advmod(encompass, contrary)
case(evaluation, to)
amod(evaluation, usual)
compound(position, organization)
punct(position, -)
compound(evaluation, position)
obl(contrary, evaluation)
punct(encompass, ,)
det(position, the)
nsubj(encompass, position)
case(which, to)
obl(report, which)
compound(staff, research)
punct(staff, -)
compound(member, staff)
nsubj(report, member)
acl:relcl(position, report)
advmod(report, administratively)
aux(encompass, will)
advmod(encompass, not)
advmod(encompass, necessarily)
root(ROOT, encompass)
det(duty, the)
obj(encompass, duty)
case(member, of)
det(member, the)
compound(staff, research)
punct(staff, -)
compound(member, staff)
nmod(duty, member)
punct(evaluate, ,)
advmod(evaluate, therefore)
punct(evaluate, ,)
aux:pass(evaluate, be)
advmod(evaluate, not)
advmod(evaluate, necessarily)
parataxis(encompass, evaluate)
case(highly, as)
advmod(evaluate, highly)
punct(evaluate, .)
punct(evaluate, ``)
det(step, these)
amod(step, recent)
nsubj(offer, step)
aux(offer, do)
advmod(offer, not)
root(ROOT, offer)
det(possibility, the)
obj(offer, possibility)
case(extension, of)
nmod(possibility, extension)
case(number, to)
det(number, the)
amod(number, great)
nmod(possibility, number)
case(engineer, of)
amod(engineer, senior)
nmod(number, engineer)
nsubj(display, who)
aux(display, have)
acl:relcl(engineer, display)
amod(competence, technical)
obj(display, competence)
punct(offer, .)
expl(doubtful, it)
cop(doubtful, be)
root(ROOT, doubtful)
mark(result, that)
det(solution, the)
amod(solution, complete)
nsubj(result, solution)
case(problem, to)
det(problem, the)
amod(all, over)
punct(all, -)
det(problem, all)
nmod(solution, problem)
aux(result, can)
csubj(doubtful, result)
advmod(effort, entirely)
case(effort, from)
compound(effort, company)
obl(result, effort)
punct(doubtful, . )
advcl(fact, Fundamental)
case(difficulty, to)
det(difficulty, the)
obl(Fundamental, difficulty)
mark(create, of)
acl(difficulty, create)
det(prestige, the)
amod(prestige, desire)
obj(create, prestige)
cop(fact, be)
det(fact, the)
root(ROOT, fact)
mark(confer, that)
punct(confer, ,)
case(community, in)
det(community, the)
compound(community, business)
obl(confer, community)
punct(prestige, ,)
conj(community, prestige)
cc(status, and)
conj(community, status)
aux:pass(confer, be)
acl(fact, confer)
case(proportion, in)
obl(confer, proportion)
case(authority, to)
det(authority, the)
nmod(proportion, authority)
obj(have, that)
nummod(man, one)
nsubj(have, man)
acl:relcl(authority, have)
case(other, over)
obl(have, other)
cc(extent, and)
det(extent, the)
conj(other, extent)
case(which, of)
obl(participate, which)
nsubj(participate, he)
acl:relcl(extent, participate)
case(function, in)
det(function, the)
compound(function, management)
obl(participate, function)
punct(function, '')
punct(function, .)
nummod(mile, Sixty)
obl:npmod(north, mile)
advmod(function, north)
case(City, of)
compound(York, New)
compound(City, York)
obl(north, City)
advmod(meet, where)
det(hill, the)
amod(hill, wood)
nsubj(meet, hill)
case(County, of)
compound(County, dutchess)
nmod(hill, County)
acl:relcl(City, meet)
det(sweep, the)
amod(sweep, broad)
obj(meet, sweep)
case(River, of)
det(River, the)
compound(River, Hudson)
nmod(sweep, River)
expl(be, there)
conj(meet, be)
det(development, a)
amod(development, new)
compound(development, home)
nsubj(be, development)
acl(development, call)
punct(fact, ``)
compound(Heights, oakwood)
nsubj(find, Heights)
punct(Heights, '')
punct(Heights, .)
case(matter, as)
det(matter, a)
obl(find, matter)
case(fact, of)
nmod(matter, fact)
nsubj(find, you)
aux(find, could)
advmod(find, probably)
root(ROOT, find)
det(development, a)
amod(development, new)
compound(development, home)
obj(find, development)
case(county, in)
det(county, every)
amod(county, populate)
nmod(development, county)
case(country, in)
det(country, the)
nmod(county, country)
case(cottage, with)
nummod(bedroom, three)
punct(bedroom, -)
compound(cottage, bedroom)
compound(style, ranch)
compound(cottage, style)
nmod(county, cottage)
case(range, in)
det(range, the)
compound(range, $)
nummod($, 14,000)
nmod(cottage, range)
punct(find, .)
cc(unique, but)
compound(Heights, oakwood)
nsubj(unique, Heights)
cop(unique, be)
root(ROOT, unique)
case(particular, in)
nummod(particular, one)
obl(unique, particular)
punct(unique, .)
nsubj:pass(meter, it)
aux:pass(meter, be)
nsubj:pass(meter, oil)
case(heating, for)
nmod(oil, heating)
aux:pass(meter, be)
root(ROOT, meter)
xcomp(meter, monthly)
case(home, to)
det(home, each)
obl(monthly, home)
case(line, from)
det(line, a)
obl(meter, line)
nsubj(start, that)
acl:relcl(line, start)
case(point, at)
det(point, a)
amod(point, central)
compound(point, storage)
obl(start, point)
punct(meter, .)
nsubj(operation, this)
cop(operation, be)
det(operation, a)
compound(operation, pilot)
root(ROOT, operation)
acl(operation, sponsor)
case(entity, by)
det(entity, a)
amod(entity, new)
obl(sponsor, entity)
acl(entity, charter)
case(Delaware, in)
obl(charter, Delaware)
case(Corporation, as)
det(Corporation, the)
compound(Corporation, tri-state)
compound(Corporation, Pipeline)
obl(charter, Corporation)
punct(charter, ,)
case(office, with)
amod(office, principal)
obl(charter, office)
case(State, in)
compound(York, New)
compound(State, York)
nmod(office, State)
punct(operation, .)
nmod:poss(president, its)
nsubj(otis, president)
cop(otis, be)
root(ROOT, otis)
flat(otis, M.)
flat(otis, Waters)
punct(otis, ,)
list(otis, partner)
case(firm, in)
det(firm, the)
compound(firm, law)
nmod(partner, firm)
case(Timen, of)
nmod(firm, Timen)
cc(Waters, &)
conj(Timen, Waters)
punct(Timen, ,)
nummod(Bldg., 540)
punct(otis, -)
compound(Bldg., K)
compound(Bldg., Chrysler)
list(otis, Bldg.)
punct(Bldg., ,)
compound(York, New)
compound(City, York)
appos(Bldg., City)
punct(otis, .)
compound(president, vice)
punct(president, -)
nsubj(Louis, president)
cop(Louis, be)
root(ROOT, Louis)
flat(Louis, Berkman)
cc(Mark, and)
det(treasurer, the)
compound(treasurer, secretary)
punct(treasurer, -)
nsubj(Mark, treasurer)
cop(Mark, be)
conj(Louis, Mark)
flat(Mark, ritter)
punct(Louis, .)
nsubj(builder, ritter)
cop(builder, be)
det(builder, the)
root(ROOT, builder)
case(Heights, of)
compound(Heights, oakwood)
nmod(builder, Heights)
cc(president, and)
conj(Heights, president)
case(Kahler, of)
nmod(president, Kahler)
punct(Heights, -)
compound(Inc., craft)
compound(Inc., distributor)
punct(Inc., ,)
list(Heights, Inc.)
punct(Newburgh, ,)
list(Heights, Newburgh)
punct(Newburgh, ,)
appos(Newburgh, N.Y.)
punct(builder, .)
det(idea, the)
nsubj(novelty, idea)
case(tank, of)
det(tank, a)
amod(tank, central)
nmod(idea, tank)
case(line, with)
nmod(idea, line)
case(house, to)
det(house, each)
nmod(line, house)
cop(novelty, be)
advmod(novelty, not)
case(itself, in)
obl(novelty, itself)
det(novelty, a)
root(ROOT, novelty)
punct(novelty, .)
advmod(year, not)
det(year, a)
obl:tmod(go, year)
root(ROOT, go)
obl(go, by)
cc(write, but)
det(company, what)
amod(company, several)
amod(company, local)
nsubj(write, company)
case(U.S., in)
det(U.S., the)
nmod(company, U.S.)
cc(Canada, and)
conj(U.S., Canada)
punct(write, ,)
advmod(overseas, even)
advmod(write, overseas)
punct(write, ,)
conj(go, write)
case(Fueloil, to)
obl(write, Fueloil)
cc(heat, &)
compound(heat, oil)
conj(Fueloil, heat)
mark(inquire, to)
advcl(write, inquire)
mark(feasible, if)
nsubj(feasible, it)
cop(feasible, be)
advcl(inquire, feasible)
cc(do, and)
advmod(do, where)
nsubj:pass(do, it)
aux(do, be)
aux:pass(do, be)
conj(feasible, do)
punct(go, .)
nmod:poss(editor, its)
nsubj(know, editor)
advmod(know, only)
root(ROOT, know)
case(example, of)
nummod(example, one)
obl(know, example)
mark(point, to)
acl(example, point)
obl(point, to)
punct(point, ,)
det(development, a)
amod(development, public)
compound(development, housing)
obl(point, development)
case(home, of)
nummod(home, 278)
nmod(development, home)
case(Haven, in)
compound(Haven, New)
nmod(home, Haven)
acl(Haven, describe)
case(John, by)
obl(describe, John)
flat(John, Schulz)
case(issue, in)
det(issue, the)
compound(issue, March)
punct(March, ,)
nummod(March, 1950)
obl(describe, issue)
punct(know, .)
nsubj(survive, this)
aux(survive, have)
root(ROOT, survive)
det(year, the)
obj(survive, year)
cc(be, but)
expl(be, there)
aux(be, have)
conj(survive, be)
amod(concern, considerable)
nsubj(be, concern)
case(tenant, among)
det(tenant, the)
nmod(concern, tenant)
case(fact, over)
det(fact, the)
nmod(concern, fact)
mark(meter, that)
det(oil, the)
nsubj:pass(meter, oil)
aux:pass(meter, be)
advmod(meter, not)
acl(fact, meter)
punct(survive, .)
advmod(divide, Rather)
det(consumption, the)
amod(consumption, monthly)
amod(consumption, total)
nsubj:pass(divide, consumption)
aux:pass(divide, be)
root(ROOT, divide)
cc(charge, and)
conj(divide, charge)
case(basis, on)
det(basis, the)
obl(charge, basis)
case(number, of)
nmod(basis, number)
case(room, of)
nmod(number, room)
cc(person, and)
conj(room, person)
case(family, in)
det(family, the)
nmod(room, family)
punct(divide, .)
amod(complaint, common)
root(ROOT, complaint)
acl(complaint, include)
punct(include, ``)
root(ROOT, Mrs.)
flat(Mrs., Murphy)
punct(Mrs., '')
acl(Mrs., leave)
nmod:poss(window, she)
obj(leave, window)
xcomp(leave, open)
det:predet(time, all)
det(time, the)
obl:tmod(leave, time)
punct(fan, ,)
det(fan, a)
amod(fan, fresh)
compound(fan, air)
conj(time, fan)
punct(visit, ,)
cc(visit, or)
det(family, the)
nsubj(visit, family)
aux(visit, be)
conj(leave, visit)
punct(leave, ``)
nsubj(shut, aunt)
flat(aunt, Minnie)
punct(aunt, '')
case(house, with)
det(house, the)
nmod(aunt, house)
root(ROOT, shut)
compound:prt(shut, up)
cc(pay, but)
nsubj(pay, they)
advmod(pay, still)
conj(shut, pay)
det(rate, the)
amod(rate, same)
obj(pay, rate)
case(oil, for)
obl(pay, oil)
punct(shut, .)
case(result, as)
det(result, a)
obl(discourage, result)
case(attitude, of)
det(attitude, that)
nmod(result, attitude)
punct(discourage, ,)
nsubj:pass(discourage, other)
aux(discourage, have)
aux:pass(discourage, be)
root(ROOT, discourage)
mark(try, from)
advcl(discourage, try)
amod(distribution, central)
obj(try, distribution)
punct(discourage, . )
det(meter, a)
amod(meter, new)
amod(capacity, low)
compound(meter, capacity)
nsubj(key, meter)
cop(key, be)
det(key, the)
root(ROOT, key)
nsubj(unlock, that)
acl:relcl(key, unlock)
det(situation, the)
obj(unlock, situation)
case(Heights, at)
compound(Heights, oakwood)
obl(unlock, Heights)
punct(key, .)
root(ROOT, call)
obj(call, a)
punct(call, ``)
root(ROOT, slo)
punct(slo, -)
flat(slo, flo)
punct(slo, '')
appos(slo, meter)
nsubj:pass(design, it)
aux:pass(design, be)
acl:relcl(meter, design)
case(job, for)
det(job, this)
obl(design, job)
case(Power, by)
nmod(job, Power)
cc(industry, plus)
conj(Power, industry)
case(Angeles, of)
compound(Angeles, Los)
nmod(Power, Angeles)
punct(Angeles, ,)
det(individual, a)
amod(individual, key)
appos(Angeles, individual)
cop(Don, be)
nmod(individual, Don)
flat(Don, Nelson)
punct(acquire, .)
nsubj(acquire, tri-state)
aux(acquire, have)
ccomp(design, acquire)
nmod:poss(distribution, its)
amod(distribution, exclusive)
obj(acquire, distribution)
case(state, for)
det(state, the)
amod(state, northern)
punct(state, ,)
amod(state, principal)
compound(state, heating)
nmod(distribution, state)
punct(acquire, .)
expl(be, there)
root(ROOT, be)
det(advantage, a)
nsubj(be, advantage)
mark(have, in)
acl(advantage, have)
det(firm, a)
obj(have, firm)
case(tri-state, like)
nmod(firm, tri-state)
acl(firm, head)
case(lawyer, by)
det(lawyer, a)
obl(head, lawyer)
punct(be, .)
det(development, the)
amod(development, earlier)
compound(Haven, New)
compound(development, Haven)
nsubj(housing, development)
cop(housing, be)
amod(housing, public)
root(ROOT, housing)
punct(housing, ,)
advmod(leap, so)
nsubj(leap, it)
advmod(leap, easily)
conj(housing, leap)
compound:prt(leap, over)
det(problem, the)
obj(leap, problem)
acl(problem, meet)
case(venture, in)
det(venture, a)
amod(venture, private)
obl(meet, venture)
punct(housing, .)
nsubj(have, these)
root(ROOT, have)
mark(do, to)
xcomp(have, do)
case(rights, with)
compound(rights, property)
obl(do, rights)
punct(attitude, ,)
amod(attitude, municipal)
amod(attitude, official)
conj(rights, attitude)
cc(host, and)
det(host, a)
conj(rights, host)
case(other, of)
nmod(host, other)
punct(have, .)
mark(work, in)
advcl(think, work)
compound:prt(work, out)
det(conclusion, the)
amod(conclusion, practical)
amod(conclusion, legal)
obj(work, conclusion)
nsubj(think, President)
flat(President, Waters)
aux(think, be)
advmod(think, not)
root(ROOT, think)
advmod(project, only)
case(project, of)
det(project, this)
compound(project, pilot)
obl(think, project)
punct(think, ,)
mark(plan, for)
nsubj:pass(plan, it)
aux:pass(plan, be)
advcl(think, plan)
mark(duplicate, to)
xcomp(plan, duplicate)
det(program, this)
obj(duplicate, program)
cc(system, or)
conj(program, system)
case(development, in)
amod(development, other)
compound(development, builder)
obl(duplicate, development)
advmod(duplicate, nationally)
punct(think, .)
nsubj(difficult, it)
cop(difficult, be)
advmod(difficult, always)
root(ROOT, difficult)
punct(consume, ,)
cc(consume, or)
case(least, at)
nmod(time, least)
compound(consume, time)
punct(consume, -)
conj(difficult, consume)
punct(difficult, ,)
mark(get, to)
advcl(consume, get)
obj(get, approval)
case(kind, of)
det(kind, any)
nmod(approval, kind)
case(line, of)
nmod(kind, line)
case(street, under)
det(street, a)
amod(street, public)
nmod(kind, street)
punct(get, ,)
case(example, as)
nummod(example, one)
obl(get, example)
punct(difficult, .)
mark(overcome, to)
advcl(deed, overcome)
obj(overcome, this)
punct(lay, ,)
det(builder, the)
nsubj(lay, builder)
root(ROOT, lay)
cc(complete, and)
conj(lay, complete)
det(street, the)
obj(complete, street)
nmod:npmod(street, himself)
punct(deed, ,)
advmod(deed, then)
conj(lay, deed)
obj(deed, it)
case(community, to)
det(community, the)
obl(deed, community)
mark(retain, while)
advcl(deed, retain)
det(easement, a)
amod(easement, perpetual)
obj(retain, easement)
case(line, for)
det(line, the)
compound(line, oil)
obl(retain, line)
punct(lay, .)
mark(buys, when)
det(family, a)
nsubj(buys, family)
advcl(subject, buys)
det(home, a)
obj(buys, home)
det(title, the)
nsubj(subject, title)
cop(subject, be)
root(ROOT, subject)
case(easement, to)
det(easement, a)
amod(easement, perpetual)
obl(subject, easement)
case(tri-state, to)
obl(subject, tri-state)
punct(subject, .)
case(storage, for)
det(storage, the)
amod(storage, central)
obl(buys, storage)
punct(buys, ,)
nsubj(buys, tri-state)
root(ROOT, buys)
nummod(acre, one)
obj(buys, acre)
punct(bury, ,)
conj(buys, bury)
nmod:poss(tank, its)
obj(bury, tank)
cc(hold, and)
advmod(hold, simply)
conj(buys, hold)
amod(title, permanent)
obj(hold, title)
case(piece, to)
det(piece, that)
obl(hold, piece)
punct(buys, .)
case(word, in)
amod(word, other)
obl(belong, word)
punct(belong, ,)
det(storage, the)
amod(storage, whole)
nsubj(belong, storage)
cc(system, and)
compound(system, pipeline)
conj(storage, system)
aux(belong, do)
advmod(belong, not)
root(ROOT, belong)
case(homeowner, to)
det(homeowner, the)
obl(belong, homeowner)
cc(town, nor)
case(town, to)
det(town, the)
conj(homeowner, town)
cc(tri-state, but)
advmod(tri-state, rather)
fixed(rather, to)
conj(homeowner, tri-state)
punct(belong, .)
advmod(get, how)
aux(get, do)
nsubj(get, tri-state)
root(ROOT, get)
obj(get, it)
cop(revenue, be)
obj(get, revenue)
case(plan, from)
det(plan, this)
nmod(revenue, plan)
punct(get, ?)
punct(get, ?)
nsubj(lease, it)
root(ROOT, lease)
det(facility, the)
amod(facility, whole)
obj(lease, facility)
case(company, to)
det(company, a)
amod(company, large)
compound(company, oil)
obl(lease, company)
punct(lease, ,)
case(least, at)
obl(large, least)
amod(enough, large)
advmod(lease, enough)
mark(have, to)
advcl(enough, have)
det(position, a)
amod(position, strong)
compound(position, credit)
obj(have, position)
punct(lease, .)
det(test, this)
amod(test, first)
nsubj:pass(lease, test)
aux(lease, be)
aux:pass(lease, be)
root(ROOT, lease)
case(year, for)
nummod(year, ten)
obl(lease, year)
cc(require, but)
amod(project, future)
nsubj(require, project)
aux(require, will)
conj(lease, require)
case(least, at)
nmod(15, least)
nummod(year, 15)
obj(require, year)
punct(lease, .)
det(amount, the)
nsubj(subject, amount)
acl(amount, pay)
case(company, by)
det(company, the)
compound(company, oil)
obl(pay, company)
case(tri-state, to)
obl(pay, tri-state)
case(use, for)
det(use, the)
obl(pay, use)
case(system, of)
nmod:poss(system, its)
compound(distribution, oil)
compound(system, distribution)
nmod(use, system)
cc(privilege, and)
det(privilege, the)
conj(system, privilege)
mark(supply, of)
acl(privilege, supply)
det:predet(home, all)
det(home, the)
obj(supply, home)
punct(subject, ,)
cop(subject, be)
root(ROOT, subject)
case(negotiation, to)
obl(subject, negotiation)
cc(profitable, but)
advmod(profitable, naturally)
aux(profitable, must)
cop(profitable, be)
conj(subject, profitable)
case(party, to)
det(party, both)
obl(profitable, party)
punct(subject, .)
case(venture, on)
det(venture, this)
amod(venture, first)
obl(gallon, venture)
det(storage, the)
amod(storage, central)
nsubj(gallon, storage)
cop(gallon, be)
nummod(gallon, 20,000)
root(ROOT, gallon)
punct(gallon, ,)
case(tank, in)
nummod(tank, two)
nmod(gallon, tank)
punct(average, ,)
cc(average, or)
det(average, a)
conj(gallon, average)
case(gallon, of)
nummod(gallon, 400)
nmod(average, gallon)
case(each, for)
nmod(average, each)
case(home, of)
det(home, the)
nummod(home, 50)
nmod(each, home)
punct(gallon, .)
det(supplier, the)
nsubj(deliver, supplier)
root(ROOT, deliver)
case(convenience, at)
nmod:poss(convenience, he)
obl(deliver, convenience)
case(load, in)
compound(load, transport)
obl(deliver, load)
punct(deliver, ,)
advmod(maintain, so)
mark(maintain, as)
mark(maintain, to)
advcl(deliver, maintain)
nummod(supply, two)
punct(two, -)
case(three, to)
punct(three, -)
nmod(two, three)
compound(supply, week)
amod(supply, reserve)
obj(maintain, supply)
case(contingency, against)
compound(contingency, weather)
nmod(supply, contingency)
punct(deliver, .)
advmod(all, however)
punct(all, ,)
nsubj(all, that)
cop(all, be)
advmod(all, not)
root(ROOT, all)
nsubj(have, he)
acl:relcl(all, have)
mark(do, to)
xcomp(have, do)
punct(all, .)
nsubj(undertake, he)
aux(undertake, must)
root(ROOT, undertake)
amod(service, complete)
obj(undertake, service)
case(equipment, of)
det(equipment, the)
compound(equipment, oilheate)
nmod(service, equipment)
mark(assure, to)
advcl(undertake, assure)
amod(heating, fine)
obj(assure, heating)
punct(undertake, .)
case(project, in)
det(project, the)
amod(project, present)
obl(be, project)
det(heating, the)
nsubj(be, heating)
root(ROOT, be)
mark(circulate, by)
advcl(be, circulate)
amod(water, hot)
obj(circulate, water)
case(unit, from)
compound(unit, Paragon)
compound(burner, boiler)
punct(burner, -)
compound(unit, burner)
obl(circulate, unit)
case(hookup, with)
compound(winter, summer)
punct(winter, -)
compound(hookup, winter)
amod(hookup, domestic)
amod(hookup, hot)
compound(hookup, water)
nmod(unit, hookup)
punct(be, .)
advmod(read, again)
punct(read, ,)
det(man, the)
compound(man, oil)
nsubj(read, man)
aux(read, must)
root(ROOT, read)
det(meter, the)
obj(read, meter)
case(interval, at)
amod(interval, such)
obl(read, interval)
mark(find, as)
nsubj(find, he)
advcl(read, find)
obj(find, best)
punct(read, .)
case(development, for)
det(development, this)
amod(development, first)
obl(company, development)
det(supplier, the)
nsubj(company, supplier)
acl(supplier, sign)
det(lease, the)
obj(sign, lease)
cop(company, be)
det(company, a)
amod(company, major)
compound(company, oil)
root(ROOT, company)
cc(transfer, but)
case(turn, in)
obl(transfer, turn)
det(deal, the)
nsubj:pass(transfer, deal)
aux(transfer, be)
aux:pass(transfer, be)
conj(company, transfer)
case(operation, for)
obl(transfer, operation)
case(distributor, to)
nmod:poss(distributor, its)
amod(distributor, local)
compound(distributor, fueloil)
obl(transfer, distributor)
punct(company, .)
det(major, the)
nsubj(get, major)
root(ROOT, get)
det(gallonage, the)
amod(gallonage, assure)
obj(get, gallonage)
case(life, for)
det(life, the)
nmod(gallonage, life)
case(lease, of)
det(lease, the)
nmod(life, lease)
cc(do, and)
det(distributor, the)
nsubj(do, distributor)
advmod(do, apparently)
aux(do, can)
conj(get, do)
advmod(do, well)
mark(low, because)
compound(cost, delivery)
nsubj(low, cost)
cop(low, be)
advcl(do, low)
punct(get, .)
amod(consideration, initial)
nsubj(explore, consideration)
det(officer, the)
nsubj(explore, officer)
case(corporation, of)
det(corporation, the)
amod(corporation, new)
nmod(officer, corporation)
aux(explore, have)
advmod(explore, naturally)
root(ROOT, explore)
amod(angles, many)
obj(explore, angles)
punct(personality, ,)
cc(personality, as)
fixed(as, well)
fixed(as, as)
conj(angles, personality)
nsubj:pass(affect, that)
aux(affect, might)
aux:pass(affect, be)
acl:relcl(personality, affect)
punct(explore, .)
case(example, for)
obl(think, example)
punct(think, ,)
det(official, the)
nsubj(think, official)
case(town, of)
compound(town, Poughkeepsie)
nmod(official, town)
punct(township, ()
appos(town, township)
punct(township, ))
advmod(locate, where)
det(project, the)
nsubj:pass(locate, project)
aux:pass(locate, be)
acl:relcl(town, locate)
root(ROOT, think)
advmod(think, highly)
case(it, of)
obl(highly, it)
mark(simplify, because)
nsubj(simplify, it)
advcl(think, simplify)
nmod:poss(problem, they)
compound(problem, snow)
compound(problem, clear)
obj(simplify, problem)
punct(think, .)
det(storage, the)
amod(storage, central)
nsubj(artery, storage)
cop(artery, be)
case(artery, near)
det(artery, a)
amod(artery, main)
root(ROOT, artery)
advmod(easy, quite)
amod(artery, easy)
mark(reach, to)
advcl(easy, reach)
case(transport, with)
amod(transport, large)
obl(reach, transport)
case(swing, on)
det(swing, a)
amod(swing, short)
compound(swing, crescent)
nmod(transport, swing)
punct(reach, ,)
case(truck, with)
amod(truck, fewer)
obl(reach, truck)
case(street, in)
det(street, the)
amod(street, residential)
nmod(truck, street)
punct(artery, .)
det(Commission, the)
compound(Service, Public)
compound(Commission, Service)
nsubj(rule, Commission)
aux(rule, have)
root(ROOT, rule)
mark(utility, that)
nsubj(utility, this)
cop(utility, be)
advmod(utility, not)
det(utility, a)
amod(utility, public)
ccomp(rule, utility)
punct(utility, ,)
amod(utility, subject)
case(regulation, to)
nmod:poss(regulation, they)
amod(regulation, many)
obl(subject, regulation)
punct(rule, .)
amod(institution, several)
amod(institution, financial)
nsubj:pass(sound, institution)
punct(institution, ,)
cc:preconj(bank, both)
appos(institution, bank)
cc(company, and)
compound(company, insurance)
conj(bank, company)
punct(sound, ,)
aux(sound, have)
aux:pass(sound, be)
root(ROOT, sound)
compound:prt(sound, out)
punct(sound, .)
nsubj(like, they)
root(ROOT, like)
obj(like, it)
cc(supply, and)
aux(supply, would)
conj(like, supply)
obj(supply, most)
case(capital, of)
det(capital, the)
nmod(most, capital)
case(lease, because)
fixed(because, of)
det(lease, the)
amod(term, long)
compound(lease, term)
obl(supply, lease)
case(company, by)
amod(company, strong)
compound(company, oil)
nmod(lease, company)
punct(like, .)
det(agency, the)
compound(agency, government)
compound(agency, housing)
nsubj(consider, agency)
root(ROOT, consider)
obj(consider, it)
xcomp(consider, feasible)
case(stipulation, with)
nummod(stipulation, one)
amod(stipulation, special)
obl(feasible, stipulation)
punct(consider, .)
expl(be, there)
aux(be, must)
root(ROOT, be)
det(restriction, a)
nsubj(be, restriction)
case(deed, in)
det(deed, the)
nmod(restriction, deed)
mark(provide, to)
acl(deed, provide)
mark(charge, that)
det(customer, the)
nsubj:pass(charge, customer)
aux(charge, may)
advmod(charge, not)
aux:pass(charge, be)
ccomp(provide, charge)
advmod(charge, more)
case(price, than)
det(price, the)
amod(price, current)
compound(price, market)
obl(more, price)
case(oil, for)
det(oil, the)
nmod(price, oil)
punct(price, ,)
det(precaution, a)
amod(precaution, obvious)
appos(oil, precaution)
punct(charge, ,)
mark(wedded, since)
det(account, the)
nsubj:pass(wedded, account)
aux:pass(wedded, be)
advmod(wedded, permanently)
advcl(charge, wedded)
punct(wedded, ,)
advmod(gas, just)
case(gas, like)
case(gas, with)
obl(wedded, gas)
cc(electricity, or)
conj(gas, electricity)
punct(be, .)
case(detail, for)
det(detail, a)
amod(detail, few)
obl(4, detail)
case(system, of)
det(system, the)
nmod(detail, system)
det(line, the)
nsubj(4, line)
cop(4, be)
nummod(4, 1)
case(1, -)
nmod(1, 1)
punct(4, /)
root(ROOT, 4)
punct(4, '')
punct(X, '')
root(ROOT, X)
punct(X, -)
flat(X, Tru)
flat(X, -Coat)
punct(product, ,)
det(product, a)
appos(X, product)
case(Corp., of)
compound(Corp., Republic)
compound(Corp., Steel)
nmod(product, Corp.)
punct(weld, ,)
cc(weld, and)
det(line, all)
nsubj:pass(weld, line)
aux:pass(weld, be)
conj(X, weld)
punct(X, .)
nsubj:pass(lay, they)
aux:pass(lay, be)
root(ROOT, lay)
det(minimum, a)
obj(lay, minimum)
case(24, of)
nmod(minimum, 24)
punct(24, '')
punct(deep, '')
amod(minimum, deep)
cc(down, and)
case(area, in)
det(area, some)
obl(down, area)
nummod(foot, four)
obl:npmod(down, foot)
conj(lay, down)
punct(down, ,)
advmod(road, particularly)
case(road, under)
obl(down, road)
punct(stay, ,)
mark(stay, to)
advcl(down, stay)
xcomp(stay, clear)
case(piping, of)
det(piping, all)
amod(piping, other)
obl(clear, piping)
case(water, such)
fixed(such, as)
nmod(piping, water)
cc(sewer, and)
conj(water, sewer)
cc(minimize, and)
mark(minimize, to)
conj(stay, minimize)
obj(minimize, shock)
case(truck, from)
amod(truck, heavy)
obl(minimize, truck)
punct(lay, .)
det(meter, the)
nsubj:pass(mount, meter)
aux:pass(mount, be)
root(ROOT, mount)
advmod(mount, high)
case(wall, on)
det(wall, the)
compound(wall, basement)
obl(mount, wall)
punct(mount, .)
nsubj(high, it)
cop(high, be)
nsubj(high, figure)
cop(high, be)
det(inch, a)
nummod(inch, half)
obl:npmod(high, inch)
root(ROOT, high)
cc(easy, and)
advmod(easy, very)
conj(high, easy)
mark(read, to)
advcl(easy, read)
punct(read, ,)
advmod(gallon, even)
case(gallon, into)
amod(gallon, tenth)
obl(read, gallon)
punct(high, .)
nsubj(accommodate, it)
aux(accommodate, will)
root(ROOT, accommodate)
xcomp(accommodate, fire)
obj(fire, rate)
advmod(low, as)
advmod(fire, low)
case(gallon, as)
det(gallon, a)
amod(gallon, half)
obl(fire, gallon)
det(hour, a)
obl(fire, hour)
punct(accommodate, .)
vocative(convinced, ritter)
punct(ritter, ,)
det(builder, the)
appos(ritter, builder)
punct(convinced, ,)
aux:pass(convinced, be)
root(ROOT, convinced)
mark(greater, that)
det(cost, the)
amod(cost, total)
nsubj(greater, cost)
case(system, of)
det:predet(system, all)
det(system, the)
compound(system, heating)
nmod(cost, system)
cc(system, plus)
det(system, the)
compound(distribution, oil)
compound(system, distribution)
conj(system, system)
cop(greater, be)
advmod(greater, no)
ccomp(convinced, greater)
mark(system, than)
aux(system, would)
cop(system, be)
compound(heating, gas)
compound(system, heating)
advcl(greater, system)
case(house, in)
det(house, the)
nmod(system, house)
cc(line, plus)
nmod:poss(line, they)
conj(house, line)
cc(meter, and)
conj(line, meter)
punct(convinced, .)
nsubj(believe, he)
root(ROOT, believe)
mark(approach, that)
nsubj(approach, this)
cop(approach, be)
det(approach, a)
compound(approach, sound)
ccomp(believe, approach)
case(competition, to)
compound(competition, gas)
nmod(approach, competition)
case(development, in)
compound(development, builder)
nmod(competition, development)
advmod(available, where)
nsubj(available, gas)
cop(available, be)
acl:relcl(development, available)
punct(believe, .)
expl(difficult, it)
aux(difficult, would)
cop(difficult, be)
advmod(difficult, pretty)
root(ROOT, difficult)
mark(install, to)
csubj(difficult, install)
det(system, a)
compound(system, tri-state)
obj(install, system)
case(neighborhood, in)
amod(neighborhood, old)
obl(install, neighborhood)
punct(understatement, ,)
cc(understatement, and)
nsubj(understatement, that)
cop(understatement, be)
det(understatement, a)
conj(difficult, understatement)
punct(difficult, .)
det(job, the)
nsubj(become, job)
mark(get, of)
acl(job, get)
compound(easement, property)
obj(get, easement)
cc(easement, and)
compound(easement, street)
conj(easement, easement)
cc(acre, and)
det(acre, the)
conj(easement, acre)
case(tank, for)
det(tank, the)
nmod(acre, tank)
aux(become, would)
root(ROOT, become)
advmod(discouraging, pretty)
xcomp(become, discouraging)
punct(discouraging, .)
cc(simple, but)
case(development, in)
det(development, a)
amod(development, new)
obl(simple, development)
advmod(start, where)
nsubj(start, everything)
acl:relcl(development, start)
case(scratch, from)
obl(start, scratch)
det(solution, the)
nsubj(simple, solution)
cop(simple, be)
root(ROOT, simple)
punct(simple, .)
compound(plan, Future)
conj(simple, plan)
obj(want, what)
aux(want, do)
nsubj(want, tri-state)
advmod(want, actually)
acl:relcl(plan, want)
mark(do, to)
xcomp(want, do)
punct(now, ,)
advmod(want, now)
mark(have, that)
nsubj(have, it)
ccomp(now, have)
det(meter, the)
obj(have, meter)
case(franchise, under)
nmod(meter, franchise)
cc(phase, and)
amod(phase, certain)
conj(meter, phase)
case(system, of)
nmod:poss(system, its)
compound(system, piping)
nmod(phase, system)
case(patent, in)
det(patent, the)
punct(patent, ``)
nmod(system, patent)
acl(patent, apply)
case(stage, for)
punct(stage, '')
obl(apply, stage)
punct(now, ?)
punct(simple, ?)
nsubj(want, it)
root(ROOT, want)
mark(interest, to)
xcomp(want, interest)
obj(interest, builder)
cc(company, and)
compound(company, oil)
conj(builder, company)
case(idea, in)
det(idea, the)
obl(interest, idea)
mark(include, of)
acl(idea, include)
nmod:poss(facility, its)
obj(include, facility)
case(project, in)
nmod:poss(project, they)
amod(project, new)
compound(project, home)
nmod(facility, project)
punct(facility, ,)
mark(financing, by)
advcl(install, financing)
cc(install, and)
conj(include, install)
det(storage, the)
obj(install, storage)
punct(piping, ,)
conj(storage, piping)
cc(meter, and)
conj(storage, meter)
punct(leasing, ,)
cc(leasing, and)
conj(install, leasing)
obj(leasing, these)
case(year, for)
nummod(year, 15)
obl(leasing, year)
punct(leasing, ,)
case(option, with)
compound(option, renewal)
obl(leasing, option)
punct(leasing, ,)
case(company, to)
det(company, a)
amod(company, strong)
compound(company, oil)
obl(leasing, company)
punct(want, .)
nsubj(work, it)
aux(work, may)
advmod(work, also)
root(ROOT, work)
case(way, in)
nummod(way, one)
amod(way, other)
obl(work, way)
punct(work, --)
mark(license, by)
advcl(work, license)
nmod:poss(patent, its)
compound(patent, system)
obj(license, patent)
cc(supply, and)
conj(license, supply)
det(meter, the)
obj(supply, meter)
punct(work, ,)
advcl(supply, let)
det(company, the)
compound(company, oil)
obj(let, company)
cc(builder, or)
advmod(builder, even)
det(builder, the)
conj(company, builder)
conj(let, install)
det(facility, the)
obj(install, facility)
punct(work, .)
det(development, this)
amod(development, whole)
nsubj(certain, development)
cop(certain, be)
root(ROOT, certain)
mark(interest, to)
cop(interest, be)
case(interest, of)
xcomp(certain, interest)
case(reader, to)
det(reader, the)
nmod(interest, reader)
punct(certain, ,)
case(idea, for)
det(idea, the)
obl(mention, idea)
aux(mention, have)
advmod(often, so)
advmod(mention, often)
aux:pass(mention, be)
conj(certain, mention)
punct(mention, ,)
advmod(wistfully, somewhat)
advmod(mention, wistfully)
punct(certain, .)
cc(early, but)
expl(early, it)
cop(early, be)
advmod(early, too)
root(ROOT, early)
advmod(early, yet)
mark(go, to)
csubj(early, go)
xcomp(go, visit)
compound(Heights, oakwood)
obj(visit, Heights)
punct(early, .)
advmod(eight, only)
nsubj:pass(complete, eight)
case(house, of)
det(house, the)
nummod(house, 50)
nmod(eight, house)
aux:pass(complete, be)
root(ROOT, complete)
case(time, at)
det(time, the)
obl(complete, time)
case(visit, of)
det(editor, the)
nmod:poss(visit, editor)
case(editor, 's)
nmod(time, visit)
case(June, on)
nmod(visit, June)
nummod(June, 8th)
punct(complete, ;)
punct(complete, ;)
nsubj(build, other)
aux(build, be)
parataxis(complete, build)
punct(complete, .)
det(tank, the)
amod(tank, big)
nsubj(site, tank)
cop(site, be)
case(site, at)
det(site, the)
root(ROOT, site)
cc(sun, but)
advmod(sun, still)
conj(site, sun)
obj(sun, themselves)
punct(site, . )
det(ditcher, a)
amod(ditcher, big)
amod(ditcher, mechanical)
nsubj(run, ditcher)
aux(run, be)
root(ROOT, run)
det(trench, the)
obj(run, trench)
punct(pay, ,)
cc(pay, and)
det(inspector, the)
compound(inspector, town)
compound(inspector, building)
nsubj(pay, inspector)
aux(pay, be)
conj(run, pay)
det(visit, a)
amod(visit, friendly)
punct(pay, ,)
mark(curious, if)
amod(visit, curious)
punct(visit, ,)
advcl(pay, visit)
punct(run, .)
det(industry, the)
compound(industry, oilheate)
nsubj(look, industry)
aux(look, be)
root(ROOT, look)
compound:prt(look, up)
punct(look, ,)
advcl(look, lead)
case(revival, by)
det(revival, a)
obl(lead, revival)
case(research, of)
nmod(revival, research)
cc(development, and)
conj(research, development)
punct(look, . )
det(ingredient, a)
amod(ingredient, primary)
nsubj(imagination, ingredient)
case(field, in)
det(field, these)
nmod(ingredient, field)
cop(imagination, be)
root(ROOT, imagination)
punct(deserve, ,)
cc(deserve, and)
compound(Corporation, tri-state)
compound(Corporation, Pipeline)
nsubj(deserve, Corporation)
conj(imagination, deserve)
det(mark, a)
advmod(good, very)
amod(mark, good)
obj(deserve, mark)
punct(imagination, .)
det(year, every)
obl:tmod(roll, year)
case(time, about)
det(time, this)
nmod(year, time)
compound(Gargle, National)
nsubj(roll, Gargle)
nmod:poss(week, you)
compound(week, cooling)
compound(week, system)
nsubj(roll, week)
root(ROOT, roll)
advmod(roll, around)
punct(roll, .)
nsubj(pay, it)
root(ROOT, pay)
case(long, in)
det(long, the)
amod(run, long)
punct(hot, ()
amod(run, hot)
punct(hot, ))
advcl(pay, run)
mark(take, to)
advcl(run, take)
amod(care, good)
obj(take, care)
case(work, of)
det(work, the)
compound(work, water)
obl(take, work)
punct(pay, .)
root(ROOT, do)
obj(do, it)
det(way, this)
obj(do, way)
case(gargle, for)
det(gargle, the)
compound(gargle, summer)
obl(do, gargle)
punct(do, :)
advmod(drain, first)
punct(drain, ,)
parataxis(do, drain)
det(coolant, that)
amod(coolant, old)
obj(drain, coolant)
case(sewer, down)
det(sewer, the)
compound(sewer, storm)
obl(drain, sewer)
punct(do, .)
aux(save, do)
advmod(save, not)
root(ROOT, save)
det(anti-freeze, the)
obj(save, anti-freeze)
punct(save, ,)
advmod(type, even)
mark(type, if)
nsubj(type, it)
det(type, the)
amod(type, expensive)
punct(type, ``)
amod(type, permanent)
punct(type, '')
advcl(save, type)
punct(save, .)
det(word, the)
nsubj(mean, word)
root(ROOT, mean)
nsubj(boil, it)
aux(boil, will)
advmod(boil, not)
ccomp(mean, boil)
advmod(easily, away)
advmod(boil, easily)
punct(mean, ,)
parataxis(mean, nothing)
amod(nothing, else)
punct(mean, .)
det(inhibitor, the)
compound(inhibitor, rust)
nsubj:pass(use, inhibitor)
case(fluid, in)
det(fluid, the)
nmod(inhibitor, fluid)
aux:pass(use, be)
root(ROOT, use)
compound:prt(use, up)
case(year, after)
nummod(year, one)
obl(use, year)
punct(want, ,)
cc(want, and)
nsubj(want, you)
aux(want, do)
advmod(want, not)
conj(use, want)
mark(risk, to)
xcomp(want, risk)
det(rust, the)
obj(risk, rust)
mark(mean, that)
nummod(year, two)
nmod:poss(use, year)
case(year, 's)
nsubj(mean, use)
aux(mean, could)
ccomp(risk, mean)
punct(use, .)
root(ROOT, Pitch)
obj(Pitch, it)
compound:prt(Pitch, out)
punct(Pitch, .)
mark(show, if)
det(lot, a)
nsubj(show, lot)
case(rust, of)
nmod(lot, rust)
advcl(use, show)
case(drain, in)
det(drain, the)
obl(show, drain)
punct(use, ,)
root(ROOT, use)
det(cleaner, a)
amod(cleaner, good)
compound(cleaner, flush)
obj(use, cleaner)
punct(use, .)
advmod(fill, then)
root(ROOT, fill)
det(system, the)
obj(fill, system)
cc(add, and)
conj(fill, add)
det(inhibitor, a)
compound(inhibitor, rust)
obj(add, inhibitor)
punct(fill, .)
advmod(want, of)
fixed(of, course)
punct(want, ,)
nsubj(want, you)
aux(want, will)
root(ROOT, want)
mark(use, to)
xcomp(want, use)
det(water, the)
amod(water, softest)
obj(use, water)
nsubj(radiator, you)
acl:relcl(water, can)
case(radiator, in)
nmod:poss(radiator, you)
acl:relcl(water, radiator)
punct(want, .)
advmod(check, now)
punct(check, ,)
root(ROOT, check)
case(leak, for)
obl(check, leak)
case(hose, in)
nmod:poss(hose, you)
nmod(leak, hose)
cc(connection, and)
compound(connection, hose)
conj(hose, connection)
punct(check, ,)
case(plug, around)
det(plug, the)
compound(out, freeze)
punct(out, -)
compound(plug, out)
obl(check, plug)
punct(gasket, ,)
conj(plug, gasket)
punct(seal, ,)
compound(pump, water)
compound(seal, pump)
conj(plug, seal)
cc(fitting, and)
compound(fitting, heater)
conj(plug, fitting)
punct(check, .)
advmod(run, next)
punct(run, ,)
root(ROOT, run)
det(engine, the)
obj(run, engine)
cc(let, and)
conj(run, let)
obj(let, it)
xcomp(let, heat)
compound:prt(heat, up)
mark(open, so)
det(thermostat, the)
nsubj(open, thermostat)
advcl(heat, open)
punct(look, ,)
cc(look, and)
advmod(look, then)
conj(run, look)
case(leak, for)
obl(look, leak)
advmod(look, again)
punct(run, .)
cop(sure, be)
root(ROOT, sure)
det(bug, the)
nsubj:pass(blow, bug)
cc(dirt, and)
conj(bug, dirt)
aux:pass(blow, be)
ccomp(sure, blow)
case(fin, out)
case(fin, of)
det(fin, the)
compound(fin, radiator)
obl(blow, fin)
punct(sure, .)
root(ROOT, use)
det(hose, the)
compound(hose, air)
obj(use, hose)
case(job, for)
det(job, this)
obl(use, job)
punct(use, .)
root(ROOT, check)
det(gige, the)
compound(gige, temperature)
obj(check, gige)
cc(sure, and)
cop(sure, be)
conj(check, sure)
nsubj(work, it)
aux(work, be)
ccomp(sure, work)
punct(check, .)
mark(use, if)
nsubj(use, you)
root(ROOT, use)
obj(use, one)
case(fluid, of)
det(fluid, the)
amod(fluid, new)
obl:npmod(round, year)
punct(round, -)
amod(fluid, round)
compound(system, cool)
compound(fluid, system)
nmod(one, fluid)
case(fluid, such)
fixed(such, as)
punct(use, ``)
nsubj(sure, Dowguard)
punct(sure, '')
cop(sure, be)
ccomp(say, sure)
mark(check, to)
xcomp(sure, check)
obj(check, it)
punct(say, .)
nsubj(say, Dow)
root(ROOT, say)
mark(use, that)
det(fluid, the)
nsubj:pass(use, fluid)
aux(use, can)
aux:pass(use, be)
ccomp(say, use)
advmod(use, now)
case(year, for)
nummod(year, two)
obl(use, year)
punct(say, .)
root(ROOT, check)
nmod:poss(effectiveness, its)
compound(effectiveness, inhibitor)
obj(check, effectiveness)
mark(leave, before)
advcl(check, leave)
obj(leave, it)
advmod(leave, in)
case(summer, during)
det(summer, the)
obl(leave, summer)
punct(check, .)
root(ROOT, take)
obj(take, precaution)
advmod(take, now)
punct(take, ,)
mark(sure, to)
cop(sure, be)
advcl(take, sure)
nsubj(avoid, you)
ccomp(sure, avoid)
det(breakdown, those)
amod(breakdown, unpleasant)
cc(costly, and)
conj(unpleasant, costly)
compound(breakdown, heat)
obj(avoid, breakdown)
mark(zoom, when)
det(temperature, the)
nsubj(zoom, temperature)
advcl(avoid, zoom)
det(summer, this)
obl:tmod(zoom, summer)
punct(take, .)
aux(let, do)
advmod(let, not)
root(ROOT, let)
nmod:poss(mechanic, you)
obj(let, mechanic)
xcomp(let, pull)
det(thermostat, the)
obj(pull, thermostat)
case(truck, out)
case(truck, of)
det(truck, those)
amod(truck, fueloil)
compound(truck, delivery)
obl(pull, truck)
cc(rigs, or)
compound(rigs, installation)
conj(truck, rigs)
case(yours, of)
nmod(rigs, yours)
punct(let, .)
nsubj(here, spring)
cc(summer, and)
conj(spring, summer)
aux(here, may)
cop(here, be)
root(ROOT, here)
advmod(here, officially)
punct(be, ,)
cc(stay, but)
det(thermos, those)
nsubj(stay, thermos)
csubj(be, stay)
obl(stay, in)
punct(stay, .)
det(fact, the)
nsubj(be, fact)
parataxis(here, be)
mark(increase, that)
ccomp(be, remove)
cc(leave, and)
conj(remove, leave)
compound:prt(leave, out)
det(thermostat, a)
obj(remove, thermostat)
case(vehicle, from)
det(vehicle, any)
compound(cool, water)
amod(vehicle, cool)
nmod(thermostat, vehicle)
punct(increase, ,)
aux(increase, will)
advmod(increase, greatly)
ccomp(be, increase)
det(consumption, the)
compound(consumption, fuel)
obj(increase, consumption)
punct(reduce, ,)
conj(increase, reduce)
obj(reduce, power)
cc(contribute, and)
conj(reduce, contribute)
case(foul, to)
compound(plug, spark)
compound(foul, plug)
obl(contribute, foul)
case(accumulation, due)
fixed(due, to)
det(accumulation, a)
obl(contribute, accumulation)
case(deposit, of)
amod(deposit, excessive)
compound(deposit, carbon)
nmod(accumulation, deposit)
case(insulator, on)
det(insulator, the)
nmod(deposit, insulator)
punct(here, .)
mark(run, if)
nsubj(run, you)
advcl(check, run)
case(plug, into)
compound(plug, excess)
obl(run, plug)
advcl(run, foul)
case(truck, on)
nummod(truck, one)
obl(foul, truck)
punct(check, ,)
root(ROOT, check)
mark(sure, to)
cop(sure, be)
xcomp(check, sure)
mark(have, that)
det(rig, the)
nsubj(have, rig)
ccomp(sure, have)
det(thermostat, a)
obj(have, thermostat)
punct(check, .)
det(thermostat, the)
nsubj(important, thermostat)
cop(important, be)
root(ROOT, important)
mark(get, to)
xcomp(important, get)
nmod:poss(engine, you)
obj(get, engine)
compound:prt(get, up)
case(temperature, to)
compound(temperature, operating)
obl(get, temperature)
advmod(get, quickly)
punct(keep, ,)
cc(keep, and)
mark(keep, to)
conj(get, keep)
obj(keep, it)
xcomp(keep, run)
case(temperature, at)
nmod:poss(temperature, its)
advmod(efficient, most)
amod(temperature, efficient)
obl(run, temperature)
case(circulation, through)
det(circulation, the)
amod(circulation, proper)
nmod(temperature, circulation)
case(coolant, of)
det(coolant, the)
nmod(circulation, coolant)
punct(important, .)
aux(pay, be)
nsubj(pay, you)
root(ROOT, pay)
advmod(much, too)
advmod(pay, much)
case(insurance, for)
nmod:poss(insurance, you)
compound(insurance, truck)
obl(pay, insurance)
punct(pay, ?)
punct(pay, ?)
expl(be, there)
root(ROOT, be)
det(chance, a)
amod(chance, good)
nsubj(be, chance)
nsubj(double, you)
aux(double, be)
acl:relcl(chance, double)
case(coverage, on)
det(coverage, some)
obl(double, coverage)
punct(take, ,)
advmod(take, not)
conj(double, take)
obj(take, discount)
xcomp(take, come)
case(you, to)
obl(come, you)
cc(cut, and)
advmod(cut, not)
conj(come, cut)
det(corner, some)
obj(cut, corner)
nsubj:pass(cut, that)
aux(cut, can)
aux:pass(cut, be)
acl:relcl(corner, cut)
punct(be, .)
root(ROOT, have)
det(talk, a)
obj(have, talk)
case(agent, with)
nmod:poss(agent, you)
compound(agent, insurance)
nmod(talk, agent)
punct(have, .)
cop(careful, be)
root(ROOT, careful)
mark(keep, that)
nsubj(keep, you)
ccomp(careful, keep)
amod(coverage, adequate)
obj(keep, coverage)
punct(look, ,)
cc(look, but)
conj(careful, look)
case(place, for)
obl(look, place)
mark(save, to)
acl(place, save)
obj(save, money)
punct(careful, .)
advmod(go, first)
root(ROOT, go)
case(type, over)
det(type, the)
obl(go, type)
case(coverage, of)
nmod(type, coverage)
nsubj(have, you)
advmod(have, now)
acl:relcl(coverage, have)
punct(go, .)
root(ROOT, look)
case(feature, for)
det(feature, these)
obl(look, feature)
nsubj(mean, which)
aux(mean, may)
acl:relcl(feature, mean)
nsubj(save, you)
aux(save, can)
ccomp(mean, save)
punct(duplicate, :)
parataxis(save, duplicate)
obj(duplicate, coverage)
punct(look, .)
parataxis(look, avoid)
xcomp(avoid, double)
compound:prt(double, up)
case(item, on)
det(item, the)
amod(item, same)
obl(double, item)
punct(look, .)
case(example, for)
obl(pay, example)
punct(pay, ,)
aux(pay, do)
advmod(pay, not)
root(ROOT, pay)
case(policy, in)
det(policy, a)
compound(policy, truck)
obl(pay, policy)
case(coverage, for)
amod(coverage, medical)
nmod(policy, coverage)
obj(pay, that)
nsubj(pay, you)
aux(pay, may)
aux(pay, be)
acl:relcl(coverage, pay)
case(that, for)
case(policy, in)
det(policy, a)
compound(policy, health)
cc(accident, and)
conj(health, accident)
obl(pay, policy)
punct(pay, .)
aux(have, do)
nmod:poss(policy, you)
nsubj(have, policy)
root(ROOT, have)
det(clause, a)
compound(up, lay)
punct(up, -)
compound(clause, up)
obj(have, clause)
punct(have, ?)
punct(have, ?)
nsubj(mean, this)
root(ROOT, mean)
mark(suspend, that)
mark(lay, if)
nmod:poss(vehicle, you)
amod(vehicle, insure)
nsubj:pass(lay, vehicle)
aux:pass(lay, be)
advcl(suspend, lay)
compound:prt(lay, up)
case(day, for)
advmod(30, more)
fixed(more, than)
nummod(day, 30)
obl(lay, day)
punct(suspend, ,)
nsubj:pass(suspend, insurance)
aux(suspend, can)
aux:pass(suspend, be)
ccomp(mean, suspend)
cc(return, and)
det(return, a)
amod(return, proportionate)
conj(suspend, return)
case(premium, of)
nmod:poss(premium, you)
nmod(return, premium)
acl(return, make)
case(you, to)
obl(make, you)
punct(mean, .)
nsubj(apply, this)
root(ROOT, apply)
mark(repair, to)
xcomp(apply, repair)
obj(repair, work)
case(storage, of)
compound(storage, winter)
nmod(work, storage)
punct(apply, .)
det(five, the)
nsubj(important, figure)
nummod(figure, five)
cop(important, be)
root(ROOT, important)
case(insurance, in)
obl(important, insurance)
punct(important, .)
case(policy, with)
amod(policy, many)
compound(policy, company)
obl(get, policy)
nsubj(get, you)
root(ROOT, get)
det(discount, a)
compound(discount, fleet)
obj(get, discount)
mark(insure, if)
nsubj(insure, you)
advcl(get, insure)
nummod(rigs, five)
cc(more, or)
conj(five, more)
obj(insure, rigs)
punct(get, .)
nsubj(mean, this)
root(ROOT, mean)
cc:preconj(car, either)
obj(mean, car)
cc(truck, or)
conj(car, truck)
punct(mean, .)
nsubj(run, discount)
root(ROOT, run)
advmod(2, up)
fixed(up, to)
nummod(%, 2)
obl(run, %)
case(cost, of)
nmod(%, cost)
punct(run, .)
advmod(obtain, usually)
compound(reduction, premium)
nsubj:pass(obtain, reduction)
aux(obtain, can)
aux:pass(obtain, be)
root(ROOT, obtain)
mark(apply, by)
advcl(obtain, apply)
obj(apply, deductible)
case(plan, to)
nmod:poss(plan, you)
compound(plan, liability)
obl(apply, plan)
punct(apply, .)
case(example, for)
obl(apply, example)
punct(obtain, :)
mark(claim, if)
nmod:poss(injury, you)
compound(injury, bodily)
nsubj(claim, injury)
advcl(make, claim)
xcomp(claim, start)
obj(start, payment)
case($, after)
det($, the)
amod($, first)
obl(start, $)
nummod($, 250)
punct(make, ,)
det(premium, a)
nummod(%, 25)
compound(premium, %)
nsubj:pass(make, premium)
acl(premium, save)
aux:pass(make, be)
advmod(make, often)
root(ROOT, make)
punct(make, .)
case(period, in)
det(period, the)
obl(come, period)
case(end, since)
det(end, the)
nmod(period, end)
case(War, of)
compound(War, World)
nmod(end, War)
nummod(War, 2)
punct(period, ,)
punct(period, --)
det(period, a)
nsubj(come, period)
acl(period, coincide)
case(demand, with)
compound(demand, merchandising)
obl(coincide, demand)
case(colorful, for)
det(colorful, the)
nmod(demand, colorful)
punct(unusual, ,)
det(unusual, the)
conj(colorful, unusual)
punct(original, ,)
cc(original, and)
det(original, the)
conj(unusual, original)
case(sign, in)
nmod(original, sign)
cc(display, and)
conj(sign, display)
punct(come, --)
nsubj(come, plastic)
aux(come, have)
root(ROOT, come)
case(strong, on)
advmod(strong, so)
obl(come, strong)
mark(leader, that)
obl:tmod(leader, today)
nsubj(leader, they)
cop(leader, be)
det(leader, the)
amod(leader, acknowledge)
ccomp(come, leader)
case(field, in)
det(field, the)
nmod(leader, field)
punct(come, .)
det(importance, the)
nsubj(term, importance)
case(industry, of)
det(industry, the)
compound(industry, sign)
nmod(importance, industry)
case(industry, to)
det(industry, the)
compound(industry, plastic)
nmod(industry, industry)
punct(importance, ,)
advmod(term, however)
punct(term, ,)
cop(term, be)
advmod(term, not)
case(term, in)
root(ROOT, term)
case(volume, of)
nmod(term, volume)
advmod(volume, alone)
punct(term, .)
nsubj(show, Designers)
case(sign, of)
nmod(Designers, sign)
cc(display, and)
conj(sign, display)
aux(show, have)
conj(term, show)
det(approach, a)
amod(approach, refresh)
obj(show, approach)
case(adaptation, to)
det(adaptation, the)
nmod(approach, adaptation)
case(plastic, of)
nmod(adaptation, plastic)
nsubj(influence, that)
aux(influence, have)
acl:relcl(adaptation, influence)
det(working, the)
obj(influence, working)
case(industry, of)
amod(industry, other)
nmod(working, industry)
punct(show, .)
nsubj:pass(perfect, many)
case(development, of)
nmod:poss(development, today)
case(today, 's)
nmod(many, development)
case(stem, in)
compound(stem, thermoforming)
nmod(development, stem)
case(work, from)
amod(work, original)
nmod(development, work)
acl(work, do)
case(sign, with)
obl(do, sign)
cc(display, and)
conj(sign, display)
punct(do, ;)
punct(do, ;)
det(art, the)
nsubj:pass(perfect, art)
mark(preprint, of)
acl(art, preprint)
case(distortion, in)
obl(preprint, distortion)
aux:pass(perfect, be)
advmod(perfect, similarly)
root(ROOT, perfect)
case(maker, by)
det(maker, the)
compound(maker, sign)
obl(perfect, maker)
punct(perfect, ;)
punct(perfect, ;)
cc(technique, and)
det(technique, the)
compound(surface, reverse)
punct(surface, -)
compound(technique, surface)
compound(technique, decorate)
conj(maker, technique)
advmod(use, now)
acl(technique, use)
case(escutcheon, for)
obl(use, escutcheon)
punct(medallion, ,)
conj(escutcheon, medallion)
punct(etc., ,)
conj(escutcheon, etc.)
punct(owe, ,)
conj(use, owe)
obj(owe, much)
case(field, to)
det(field, the)
obl(much, field)
punct(owe, ,)
mark(do, as)
advcl(owe, do)
det(technology, the)
obj(do, technology)
mark(design, of)
acl(technology, design)
case(property, with)
det(property, the)
compound(transmit, light)
punct(transmit, -)
amod(property, transmit)
obl(design, property)
case(plastic, of)
det(plastic, the)
amod(plastic, transparent)
nmod(property, plastic)
punct(perfect, .)
expl(be, there)
root(ROOT, be)
nsubj(be, much)
mark(continue, that)
amod(industry, many)
nsubj(continue, industry)
aux(continue, can)
acl(much, continue)
mark(learn, to)
xcomp(continue, learn)
case(some, from)
obl(learn, some)
case(development, of)
det(development, the)
advmod(recent, more)
amod(development, recent)
nmod(some, development)
acl(development, describe)
advmod(describe, below)
punct(be, .)
det(concept, the)
nsubj(offer, concept)
case(illumination, of)
compound(illumination, tran)
punct(illumination, -)
nmod(concept, illumination)
punct(show, ()
mark(show, as)
acl(concept, show)
case(photo, by)
det(photo, the)
obl(show, photo)
case(p., on)
nmod(photo, p.)
nummod(p., 92)
punct(show, ))
punct(offer, ,)
case(example, as)
advmod(example, just)
nummod(example, one)
obl(offer, example)
punct(offer, ,)
root(ROOT, offer)
det(approach, a)
advmod(new, entirely)
amod(approach, new)
obj(offer, approach)
case(problem, to)
compound(problem, lighting)
nmod(approach, problem)
punct(approach, --)
advmod(matter, no)
advmod(offer, matter)
det(industry, what)
nsubj(involved, industry)
cop(involved, be)
acl:relcl(matter, involved)
punct(offer, . )
det(market, a)
compound(market, volume)
nsubj(account, market)
case(survey, accord)
fixed(accord, to)
det(survey, a)
amod(survey, recent)
compound(Street, Wall)
compound(Journal, Street)
compound(survey, Journal)
nmod(market, survey)
punct(survey, ,)
compound(unit, plastic)
nsubj(account, unit)
advmod(account, now)
root(ROOT, account)
case(%, for)
advmod(50, more)
fixed(more, than)
nummod(%, 50)
obl(account, %)
case(sale, of)
det(sale, all)
compound(sale, sign)
nmod(%, sale)
punct(account, .)
nummod(year, five)
obl:npmod(ago, year)
advmod(have, ago)
punct(have, ,)
nsubj(have, they)
root(ROOT, have)
advmod(10, only)
nummod(%, 10)
obj(have, %)
case(market, of)
det(market, the)
nmod(%, market)
punct(have, ,)
case(remainder, with)
det(remainder, the)
obl(have, remainder)
advmod(entrench, firmly)
acl(remainder, entrench)
case(stronghold, in)
det(stronghold, the)
obl(entrench, stronghold)
case(tube, of)
compound(tube, neon)
nmod(stronghold, tube)
punct(have, .)
cc(far, and)
nsubj(far, it)
cop(far, be)
root(ROOT, far)
case(end, from)
det(end, the)
obl(far, end)
case(plastic, for)
nmod(end, plastic)
punct(far, .)
compound(source, Industry)
nsubj(estimate, source)
aux(estimate, be)
advmod(estimate, now)
root(ROOT, estimate)
mark(construction, that)
nummod(%, 75)
nsubj(construction, %)
case(sign, of)
det(sign, the)
nmod(%, sign)
acl(sign, make)
case(1960', during)
det(1960', the)
obl(make, 1960')
aux(construction, will)
cop(construction, be)
case(construction, of)
amod(construction, plastic)
ccomp(estimate, construction)
punct(estimate, .)
nsubj:pass(see, evidence)
case(trend, of)
det(trend, this)
nmod(evidence, trend)
aux(see, can)
advmod(see, best)
aux:pass(see, be)
root(ROOT, see)
case(activity, in)
det(activity, the)
amod(activity, recent)
obl(see, activity)
case(company, of)
amod(company, such)
amod(company, lead)
nmod(activity, company)
case(field, in)
det(field, the)
nmod(company, field)
case(Co., as)
compound(Neon, Advance)
compound(Co., Neon)
compound(Co., sign)
nmod(field, Co.)
punct(Co., ,)
compound(Angeles, Los)
appos(Co., Angeles)
punct(Angeles, ,)
appos(Co., Calif)
punct(see, .)
punct(see, .)
nummod(year, four)
obl:npmod(ago, year)
advmod(devote, ago)
punct(devote, ,)
det(company, the)
nmod:poss(line, company)
case(company, 's)
amod(line, entire)
nsubj:pass(devote, line)
aux:pass(devote, be)
root(ROOT, devote)
case(sign, to)
compound(sign, neon)
obl(devote, sign)
punct(devote, ;)
punct(devote, ;)
obl:tmod(plastic, today)
punct(plastic, ,)
nummod(%, 85)
nsubj(plastic, %)
cop(plastic, be)
case(plastic, in)
parataxis(devote, plastic)
punct(devote, .)
