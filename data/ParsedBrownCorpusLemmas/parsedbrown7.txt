case(year, for)
det(year, the)
compound(year, school)
root(ROOT, year)
punct(year, ,)
appos(year, 1959)
case(1960, -)
nmod(1959, 1960)
punct(County, ,)
det(County, the)
compound(County, Prince)
compound(County, Edward)
appos(1959, County)
punct(Virginia, ()
appos(County, Virginia)
punct(Virginia, ))
nsubj(vote, board)
case(Supervisors, of)
nmod(board, Supervisors)
root(ROOT, vote)
advmod(provide, not)
mark(provide, to)
xcomp(vote, provide)
obj(provide, fund)
case(education, for)
amod(education, public)
nmod(fund, education)
punct(provide, ,)
cc(provide, and)
det(board, the)
compound(board, school)
nsubj(provide, board)
advmod(provide, therefore)
aux(provide, could)
conj(vote, provide)
det(education, no)
amod(education, public)
obj(provide, education)
punct(provide, --)
case(child, for)
amod(child, white)
cc(Negro, or)
conj(white, Negro)
obl(provide, child)
punct(vote, .)
cop(education, be)
amod(education, public)
root(ROOT, education)
case(democracy, in)
det(democracy, this)
amod(democracy, american)
nmod(education, democracy)
case(importance, of)
amod(importance, such)
nmod(democracy, importance)
mark(deny, that)
det(child, no)
nsubj:pass(deny, child)
aux(deny, should)
aux:pass(deny, be)
acl(importance, deny)
amod(education, public)
obj(deny, education)
punct(education, ?)
punct(education, ?)
cc(matter, or)
cop(matter, be)
det(subject, this)
nsubj(matter, subject)
det(matter, a)
root(ROOT, matter)
case(determination, of)
compound(determination, self)
punct(determination, -)
nmod(matter, determination)
punct(matter, ,)
det(matter, a)
conj(matter, matter)
case(rights, of)
compound(rights, state)
nmod(matter, rights)
cc(rights, or)
compound(rights, county)
conj(rights, rights)
punct(matter, ?)
punct(matter, ?)
mark(want, if)
nsubj(want, people)
aux(want, do)
advmod(want, not)
advcl(force, want)
mark(provide, to)
xcomp(want, provide)
amod(education, public)
obj(provide, education)
punct(force, ,)
aux(force, should)
nsubj:pass(force, they)
aux:pass(force, be)
root(ROOT, force)
mark(do, to)
xcomp(force, do)
advmod(do, so)
punct(force, ?)
punct(force, ?)
advmod(marshal, even)
mark(marshal, if)
nsubj(marshal, we)
advcl(expect, marshal)
amod(agreement, substantial)
obj(marshal, agreement)
case(education, behind)
amod(education, mandatory)
amod(education, public)
nmod(agreement, education)
punct(expect, ,)
nsubj(expect, we)
advmod(expect, likely)
aux(expect, can)
advmod(expect, not)
root(ROOT, expect)
mark(enact, that)
det:predet(state, all)
det(state, the)
nsubj(enact, state)
aux(enact, will)
ccomp(expect, enact)
det(legislation, the)
obj(enact, legislation)
punct(enact, .)
aux(legislate, should)
det(requirement, the)
nsubj(enact, requirement)
punct(requirement, ,)
nsubj(federal, which)
aux(federal, must)
advmod(federal, therefore)
cop(federal, be)
acl:relcl(requirement, federal)
case(nature, in)
obl(federal, nature)
punct(legislate, ,)
aux:pass(legislate, be)
conj(federal, legislate)
case(Congress, by)
det(Congress, the)
compound(States, United)
compound(Congress, States)
obl(legislate, Congress)
punct(expect, ?)
punct(expect, ?)
cc(become, or)
aux(become, must)
nsubj(become, it)
root(ROOT, become)
xcomp(become, law)
case(amendment, by)
nmod(law, amendment)
case(Constitution, of)
det(Constitution, the)
compound(States, United)
compound(Constitution, States)
nmod(amendment, Constitution)
punct(law, ?)
punct(law, ?)
nsubj(have, we)
advmod(have, actually)
root(ROOT, have)
nummod(issue, two)
obj(have, issue)
case(question, in)
det(question, this)
nmod(issue, question)
punct(issue, --)
appos(issue, goal)
cc(method, and)
conj(goal, method)
punct(have, .)
compound(responsibility, Issue)
discourse(responsibility, no)
punct(6, .)
nummod(responsibility, 6)
punct(6, .)
amod(responsibility, federal)
root(ROOT, responsibility)
case(education, for)
nmod(responsibility, education)
case(citizen, of)
det(citizen, the)
nmod(education, citizen)
punct(responsibility, .)
mark(settle, if)
det(issue, the)
amod(issue, above)
nsubj:pass(settle, issue)
aux:pass(settle, be)
advcl(moot, settle)
mark(require, by)
advcl(settle, require)
amod(education, public)
obj(require, education)
case(citizen, for)
det(citizen, all)
obl(require, citizen)
punct(moot, ,)
nsubj(moot, Issue)
compound(Issue, no.)
nummod(no., 6)
aux(moot, may)
cop(moot, be)
root(ROOT, moot)
punct(moot, .)
mark(settle, if)
punct(settle, ,)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(settle, hand)
punct(settle, ,)
nsubj:pass(settle, it)
aux:pass(settle, be)
advmod(settle, not)
root(ROOT, settle)
punct(have, ,)
cc(debate, or)
mark(debate, while)
nsubj:pass(debate, it)
aux(debate, be)
aux:pass(debate, be)
advcl(settle, debate)
cc(resolve, and)
conj(debate, resolve)
punct(have, ,)
aux(have, do)
det(government, the)
amod(government, federal)
nsubj(have, government)
conj(settle, have)
det(responsibility, a)
obj(have, responsibility)
case(situation, in)
nmod(responsibility, situation)
case(that, like)
nmod(situation, that)
case(County, in)
compound(County, Prince)
compound(County, Edward)
nmod(that, County)
punct(have, ?)
punct(have, ?)
advmod(half, nearly)
det:predet(child, half)
det(child, the)
nsubj(receive, child)
advmod(receive, still)
root(ROOT, receive)
det(education, no)
obj(receive, education)
punct(receive, .)
aux(help, must)
cc(help, or)
aux(help, should)
det(government, the)
amod(government, federal)
nsubj(help, government)
root(ROOT, help)
punct(help, ?)
punct(help, ?)
aux(provide, should)
det(government, the)
nsubj(provide, government)
advmod(provide, directly)
parataxis(help, provide)
obj(provide, education)
case(child, for)
det(child, the)
nmod(education, child)
nsubj(want, who)
acl:relcl(child, want)
amod(education, public)
obj(want, education)
punct(help, ?)
punct(help, ?)
det(question, the)
amod(question, next)
nsubj(be, question)
root(ROOT, be)
mark(favor, whether)
compound(member, board)
nsubj(favor, member)
ccomp(be, favor)
nmod:poss(class, they)
amod(class, own)
amod(class, social)
obj(favor, class)
case(role, in)
nmod:poss(role, they)
obl(favor, role)
case(maker, as)
amod(maker, educational)
compound(maker, policy)
punct(maker, -)
nmod(role, maker)
punct(be, .)
case(whole, on)
det(whole, the)
obl(appear, whole)
punct(appear, ,)
expl(appear, it)
root(ROOT, appear)
mark(favor, that)
nsubj(favor, they)
aux(favor, do)
advmod(favor, not)
ccomp(appear, favor)
nmod:poss(class, they)
amod(class, own)
amod(class, social)
obj(favor, class)
case(way, in)
det(way, a)
amod(way, explicit)
obl(favor, way)
punct(appear, .)
advmod(be, seldom)
root(ROOT, be)
expl(be, there)
det(issue, a)
nsubj(be, issue)
case(which, in)
obl(draw, which)
compound(line, class)
nsubj:pass(draw, line)
aux(draw, can)
aux:pass(draw, be)
advmod(draw, clearly)
acl:relcl(issue, draw)
punct(be, . )
det(issue, a)
amod(issue, hypothetical)
nsubj(deal, issue)
case(sort, of)
det(sort, this)
nmod(issue, sort)
aux(deal, might)
root(ROOT, deal)
case(establishment, with)
det(establishment, the)
obl(deal, establishment)
case(college, of)
det(college, a)
amod(college, free)
amod(college, public)
compound(college, junior)
nmod(establishment, college)
case(community, in)
det(community, a)
nmod(establishment, community)
advmod(be, where)
expl(be, there)
advmod(be, already)
acl:relcl(community, be)
det(college, a)
amod(college, good)
amod(college, private)
nsubj(be, college)
nsubj(serve, which)
acl:relcl(college, serve)
det(youth, the)
amod(class, middle)
punct(class, -)
compound(youth, class)
obj(serve, youth)
advmod(serve, adequately)
cc(expensive, but)
cop(expensive, be)
advmod(expensive, too)
conj(serve, expensive)
case(youth, for)
amod(youth, work)
punct(class, -)
compound(youth, class)
obl(expensive, youth)
punct(deal, .)
case(situation, in)
obl(favor, situation)
case(sort, of)
det(sort, this)
nmod(situation, sort)
det(board, the)
nsubj(favor, board)
advmod(favor, generally)
root(ROOT, favor)
det(expansion, the)
obj(favor, expansion)
case(education, of)
amod(education, free)
nmod(expansion, education)
punct(favor, .)
nsubj(study, Campbell)
root(ROOT, study)
det(record, the)
obj(study, record)
case(member, of)
nummod(member, 172)
compound(member, school)
compound(member, board)
nmod(record, member)
case(city, in)
nummod(city, twelve)
amod(city, western)
obl(study, city)
case(period, over)
det(period, the)
obl(study, period)
case(1931, of)
nmod(period, 1931)
case(40, -)
nmod(1931, 40)
cc(find, and)
conj(study, find)
punct(little, ``)
amod(relationship, little)
cc(no, or)
conj(little, no)
obj(find, relationship)
case(factor, between)
amod(factor, certain)
amod(factor, social)
cc(economic, and)
conj(social, economic)
nmod(relationship, factor)
cc(competence, and)
compound(competence, school)
compound(competence, board)
conj(factor, competence)
punct(competence, '')
punct(judge, ,)
mark(judge, as)
acl(relationship, judge)
case(panel, by)
det(panel, a)
obl(judge, panel)
case(educator, of)
amod(educator, professional)
nmod(panel, educator)
nsubj(study, who)
acl:relcl(educator, study)
det(record, the)
compound(record, voting)
obj(study, record)
case(issue, on)
amod(issue, educational)
obl(study, issue)
punct(study, .)
det(case, the)
amod(case, few)
nsubj(likely, case)
case(favoritism, of)
amod(favoritism, clear)
nmod(case, favoritism)
case(line, along)
amod(class, social)
punct(class, -)
compound(line, class)
nmod(favoritism, line)
cop(likely, be)
advmod(likely, as)
root(ROOT, likely)
mark(involve, as)
advmod(involve, not)
mark(involve, to)
advcl(likely, involve)
obj(involve, representative)
case(class, of)
det(class, the)
compound(class, working)
nmod(representative, class)
case(board, on)
det(board, the)
compound(board, school)
nmod(class, board)
nsubj(favor, who)
acl:relcl(board, favor)
det(practice, some)
amod(practice, such)
obj(favor, practice)
case(wage, as)
amod(wage, higher)
obl(favor, wage)
case(janitor, for)
nmod(wage, janitor)
cc(pay, rather)
fixed(rather, than)
conj(favor, pay)
obj(pay, increase)
case(teacher, for)
nmod(increase, teacher)
punct(issue, ,)
cc(issue, and)
amod(issue, such)
nsubj(issue, issue)
cop(issue, be)
advmod(issue, not)
conj(pay, issue)
case(policy, of)
amod(policy, educational)
nmod(issue, policy)
punct(likely, .)
case(general, in)
obl(appear, general)
punct(appear, ,)
expl(appear, it)
root(ROOT, appear)
mark(attempt, that)
nsubj(attempt, trustee)
cc(member, and)
compound(member, board)
conj(trustee, member)
ccomp(appear, attempt)
mark(represent, to)
xcomp(attempt, represent)
det(interest, the)
amod(interest, public)
obj(represent, interest)
case(administration, in)
nmod:poss(administration, they)
nmod(interest, administration)
case(policy, of)
amod(policy, educational)
nmod(administration, policy)
punct(make, ,)
cc(make, and)
nsubj:pass(make, this)
aux:pass(make, be)
conj(appear, make)
xcomp(make, easier)
case(fact, by)
det(fact, the)
obl(make, fact)
mark(value, that)
det(value, the)
amod(value, dominant)
nsubj(value, value)
case(society, of)
det(society, the)
nmod(value, society)
cop(value, be)
amod(class, middle)
punct(class, -)
compound(value, class)
acl(fact, value)
punct(value, ,)
nsubj:pass(think, which)
aux:pass(think, be)
advmod(think, generally)
acl:relcl(value, think)
mark(valid, to)
cop(valid, be)
xcomp(think, valid)
case(society, for)
det(society, the)
amod(society, entire)
obl(valid, society)
punct(appear, .)
expl(be, there)
aux(be, have)
root(ROOT, be)
advmod(few, very)
amod(case, few)
nsubj(be, case)
case(conflict, of)
amod(conflict, explicit)
nmod(case, conflict)
case(interest, of)
nmod(conflict, interest)
case(class, between)
det(class, the)
amod(class, middle)
nmod(interest, class)
cc(class, and)
det(class, any)
amod(class, other)
conj(class, class)
case(field, in)
det(field, the)
nmod(class, field)
case(policy, of)
amod(policy, educational)
nmod(field, policy)
punct(be, .)
mark(be, if)
expl(be, there)
advcl(easier, be)
amod(case, more)
amod(case, such)
nsubj(be, case)
punct(easier, ,)
expl(easier, it)
aux(easier, would)
cop(easier, be)
root(ROOT, easier)
mark(answer, to)
csubj(easier, answer)
det(question, the)
obj(answer, question)
mark(favor, whether)
det(maker, the)
compound(maker, policy)
punct(maker, -)
nsubj(favor, maker)
acl(question, favor)
nmod:poss(class, they)
amod(class, own)
amod(class, social)
obj(favor, class)
punct(easier, .)
expl(be, there)
root(ROOT, be)
advmod(be, currently)
det(controversy, a)
amod(controversy, major)
nsubj(be, controversy)
case(education, of)
amod(education, public)
nmod(controversy, education)
case(which, in)
obl(engage, which)
compound(interest, group)
nsubj:pass(engage, interest)
cc(value, and)
conj(interest, value)
aux:pass(engage, be)
advmod(engage, heavily)
acl:relcl(controversy, engage)
punct(be, .)
nsubj(issue, this)
cop(issue, be)
det(issue, the)
root(ROOT, issue)
case(school, of)
amod(school, segregate)
nmod(issue, school)
case(South, in)
det(South, the)
nmod(school, South)
punct(issue, .)
case(case, in)
det(case, this)
obl(matter, case)
nsubj(matter, it)
cop(matter, be)
advmod(matter, primarily)
det(matter, a)
root(ROOT, matter)
case(conflict, of)
nmod(matter, conflict)
case(group, of)
amod(group, racial)
nmod(conflict, group)
cc(group, rather)
fixed(rather, than)
amod(class, social)
punct(class, -)
compound(group, class)
conj(conflict, group)
punct(matter, .)
advmod(array, thus)
punct(array, ,)
det(middle, the)
amod(middle, white)
nsubj:pass(array, middle)
cc(class, and)
amod(class, lower)
conj(middle, class)
aux:pass(array, be)
root(ROOT, array)
case(class, against)
det(class, the)
compound(middle, Negro)
amod(class, middle)
cc(lower, and)
conj(middle, lower)
obl(array, class)
punct(array, .)
det(conflict, this)
nsubj:pass(resolve, conflict)
aux(resolve, may)
aux:pass(resolve, be)
root(ROOT, resolve)
case(way, in)
det(way, a)
obl(resolve, way)
nsubj(suit, which)
aux(suit, will)
acl:relcl(way, suit)
amod(people, white)
amod(class, middle)
punct(class, -)
compound(people, class)
obj(suit, people)
xcomp(suit, better)
mark(suit, than)
nsubj(suit, it)
advcl(better, suit)
amod(people, white)
amod(class, lower)
punct(class, -)
compound(people, class)
obj(suit, people)
punct(resolve, .)
mark(happen, if)
nsubj(happen, this)
advcl(be, happen)
punct(be, ,)
expl(be, there)
aux(be, may)
root(ROOT, be)
det(conflict, some)
compound(conflict, class)
nsubj(be, conflict)
case(South, in)
det(South, the)
nmod(conflict, South)
punct(conflict, ,)
case(board, with)
compound(board, school)
nmod(conflict, board)
cc(teacher, and)
compound(teacher, school)
conj(board, teacher)
acl(board, take)
det(position, the)
amod(class, middle)
punct(class, -)
compound(position, class)
obj(take, position)
punct(be, .)
det(profession, the)
amod(profession, educational)
nsubj(have, profession)
det(member, the)
nsubj(have, member)
case(profession, of)
det(profession, the)
amod(profession, educational)
nmod(member, profession)
root(ROOT, have)
det(voice, a)
amod(voice, major)
obj(have, voice)
case(determination, in)
det(determination, the)
nmod(voice, determination)
case(policy, of)
amod(policy, educational)
nmod(determination, policy)
punct(policy, ,)
nmod:poss(position, they)
appos(determination, position)
cop(strongest, be)
acl(position, strongest)
case(university, in)
det(university, the)
obl(strongest, university)
punct(have, .)
nsubj(people, they)
cop(people, be)
advmod(people, mostly)
amod(people, upper-middle)
punct(upper-middle, -)
cc(people, and)
amod(class, lower)
punct(class, -)
amod(class, middle)
punct(class, -)
compound(people, class)
root(ROOT, people)
punct(people, ,)
case(few, with)
det(few, a)
nmod(people, few)
case(class, in)
det(class, the)
amod(class, upper)
obl(few, class)
punct(people, .)
aux(make, do)
nsubj(make, they)
root(ROOT, make)
compound(biased, class)
punct(biased, -)
amod(decision, biased)
obj(make, decision)
punct(make, ?)
punct(make, ?)
case(society, in)
det(society, a)
obl(clear, society)
acl(society, dominate)
case(value, by)
amod(class, middle)
punct(class, -)
compound(value, class)
obl(dominate, value)
cc(work, and)
conj(dominate, work)
case(institution, in)
det(institution, a)
obl(work, institution)
nsubj(transmit, which)
acl:relcl(institution, transmit)
cc(strengthen, and)
conj(transmit, strengthen)
det(value, these)
amod(value, social)
obj(transmit, value)
punct(clear, ,)
expl(clear, it)
cop(clear, be)
root(ROOT, clear)
mark(work, that)
det(profession, the)
amod(profession, educational)
nsubj(work, profession)
aux(work, must)
csubj(clear, work)
case(value, for)
det(value, the)
obl(work, value)
nsubj(characteristic, which)
cop(characteristic, be)
acl:relcl(value, characteristic)
case(society, of)
det(society, the)
obl(characteristic, society)
punct(clear, .)
expl(be, there)
root(ROOT, be)
det(problem, no)
nsubj(be, problem)
advmod(be, here)
punct(be, .)
det(problem, the)
nsubj(arise, problem)
root(ROOT, arise)
punct(arise, ,)
mark(arise, if)
nsubj(arise, it)
aux(arise, do)
advcl(arise, arise)
punct(arise, ,)
mark(have, when)
det(educator, the)
nsubj(have, educator)
advcl(arise, have)
mark(make, to)
xcomp(have, make)
det(choice, a)
obj(make, choice)
cc(decision, or)
det(decision, a)
conj(choice, decision)
case(area, within)
det(area, the)
nmod(choice, area)
case(competence, of)
nmod:poss(competence, he)
amod(competence, professional)
nmod(area, competence)
punct(bear, ,)
cc(bear, but)
nsubj(bear, which)
conj(have, bear)
det(relation, some)
obj(bear, relation)
case(structure, to)
det(structure, the)
amod(structure, social)
nmod(relation, structure)
punct(bear, .)
case(instance, for)
obl(give, instance)
punct(give, ,)
mark(give, in)
advcl(bear, give)
compound(grade, school)
obj(give, grade)
cc(make, or)
mark(make, in)
conj(give, make)
obj(make, recommendation)
case(award, for)
det(award, the)
nmod(recommendation, award)
case(scholarship, of)
det(scholarship, a)
compound(scholarship, college)
nmod(award, scholarship)
punct(favor, ,)
aux(favor, do)
nsubj(favor, he)
advmod(favor, consciously)
cc(favor, or)
advmod(favor, unconsciously)
conj(make, favor)
obj(favor, student)
case(one, of)
nmod(student, one)
cc(class, or)
det(class, another)
amod(class, social)
conj(one, class)
punct(arise, ?)
punct(arise, ?)
advmod(favor, again)
punct(favor, ,)
mark(decide, in)
advcl(favor, decide)
case(content, on)
det(content, the)
obl(decide, content)
cc(method, and)
conj(content, method)
case(teaching, of)
nmod:poss(teaching, he)
nmod(content, teaching)
punct(favor, ,)
aux(favor, do)
nsubj(favor, he)
root(ROOT, favor)
det(curriculum, a)
obj(favor, curriculum)
nsubj(make, which)
aux(make, will)
acl:relcl(curriculum, make)
nmod:poss(student, he)
iobj(make, student)
amod(competitor, stronger)
obj(make, competitor)
case(race, in)
det(race, the)
nmod(competitor, race)
case(status, for)
amod(status, higher)
amod(status, economic)
nmod(race, status)
punct(favor, ,)
cc(favor, or)
aux(favor, do)
nsubj(favor, he)
conj(favor, favor)
det(curriculum, a)
obj(favor, curriculum)
nsubj(strengthen, which)
acl:relcl(curriculum, strengthen)
obj(strengthen, student)
case(way, in)
amod(way, other)
obl(strengthen, way)
punct(favor, ?)
punct(favor, ?)
det(answer, the)
root(ROOT, answer)
case(question, to)
nmod(answer, question)
mark(depend, such)
fixed(such, as)
nsubj(depend, these)
advmod(depend, certainly)
acl(answer, depend)
case(extent, to)
det(extent, some)
obl(depend, extent)
case(position, upon)
det(educator, the)
nmod:poss(position, educator)
case(educator, 's)
amod(position, own)
amod(class, social)
punct(class, -)
compound(position, class)
nmod(extent, position)
cc(history, and)
cc(history, also)
case(history, upon)
nmod:poss(history, he)
amod(history, social)
conj(position, history)
punct(personality, ,)
cc(personality, as)
fixed(as, well)
fixed(as, as)
fixed(as, upon)
nmod:poss(personality, he)
conj(position, personality)
cc(what, and)
conj(personality, what)
nsubj(conceive, he)
acl:relcl(what, conceive)
nmod:poss(mission, he)
obj(conceive, mission)
mark(educator, to)
cop(educator, be)
case(educator, as)
det(educator, a)
advcl(conceive, educator)
punct(answer, .)
case(set, in)
det(set, a)
obl(illustrate, set)
case(study, of)
compound(study, case)
nmod(set, study)
case(teacher, of)
nmod(study, teacher)
case(background, with)
amod(background, various)
amod(class, social)
punct(class, -)
compound(background, class)
nmod(study, background)
punct(illustrate, ,)
nsubj(illustrate, wattenberg)
root(ROOT, illustrate)
det(variety, a)
obj(illustrate, variety)
case(approach, of)
nmod(variety, approach)
case(student, to)
nmod(approach, student)
cc(teaching, and)
case(teaching, to)
conj(student, teaching)
nsubj(depend, which)
acl:relcl(teaching, depend)
case(personality, upon)
det(teacher, the)
nmod:poss(personality, teacher)
case(teacher, 's)
obl(depend, personality)
cc(background, as)
fixed(as, well)
fixed(as, as)
case(background, on)
nmod:poss(background, he)
amod(class, social)
punct(class, -)
compound(background, class)
conj(personality, background)
punct(illustrate, .)
nummod(teacher, one)
amod(mobile, upward)
punct(mobile, -)
amod(teacher, mobile)
nsubj(taskmaster, teacher)
aux(taskmaster, may)
cop(taskmaster, be)
det(taskmaster, a)
amod(taskmaster, hard)
root(ROOT, taskmaster)
case(pupil, for)
amod(class, lower)
punct(class, -)
compound(pupil, class)
nmod(taskmaster, pupil)
mark(want, because)
nsubj(want, she)
advcl(taskmaster, want)
obj(want, they)
mark(develop, to)
xcomp(want, develop)
det(attitude, the)
obj(develop, attitude)
cc(skill, and)
conj(attitude, skill)
nsubj(enable, that)
aux(enable, will)
acl:relcl(attitude, enable)
obj(enable, they)
mark(climb, to)
xcomp(enable, climb)
punct(enable, ,)
mark(person, while)
det(teacher, another)
amod(mobile, upward)
punct(mobile, -)
amod(teacher, mobile)
nsubj(person, teacher)
aux(person, may)
cop(person, be)
det(person, a)
advmod(permissive, very)
amod(person, permissive)
advcl(enable, person)
case(pupil, with)
amod(class, lower)
punct(class, -)
compound(pupil, class)
nmod(person, pupil)
mark(know, because)
nsubj(know, he)
advcl(person, know)
nmod:poss(disadvantage, they)
obj(know, disadvantage)
cc(deprivation, and)
conj(disadvantage, deprivation)
case(home, at)
nmod(disadvantage, home)
punct(hope, ,)
cc(hope, and)
nsubj(hope, he)
conj(know, hope)
mark(encourage, to)
xcomp(hope, encourage)
obj(encourage, they)
case(treatment, by)
amod(treatment, friendly)
obl(encourage, treatment)
punct(taskmaster, .)
nummod(factor, one)
amod(class, social)
punct(class, -)
compound(factor, class)
nsubj(fact, factor)
nsubj(play, which)
acl:relcl(factor, play)
det(part, a)
amod(part, large)
obj(play, part)
case(policy, in)
amod(policy, educational)
nmod(part, policy)
obl:tmod(fact, today)
cop(fact, be)
det(fact, the)
root(ROOT, fact)
mark(mobile, that)
det(school, a)
amod(school, great)
amod(school, many)
nsubj(mobile, school)
cc(teacher, and)
compound(teacher, college)
conj(school, teacher)
cop(mobile, be)
amod(mobile, upward)
acl(fact, mobile)
case(class, from)
amod(class, urban)
amod(class, lower)
punct(class, -)
nmod(mobile, class)
cc(family, and)
amod(family, lower)
punct(family, -)
amod(class, middle)
punct(class, -)
compound(family, class)
nmod(experience, family)
punct(family, .)
nmod:poss(experience, they)
amod(experience, own)
nsubj(influence, experience)
case(system, in)
det(system, the)
amod(system, social)
nmod(experience, system)
parataxis(fact, influence)
nmod:poss(work, they)
obj(influence, work)
cc(attitude, and)
conj(work, attitude)
case(teacher, as)
nmod(work, teacher)
punct(influence, .)
mark(matter, while)
det(influence, this)
nsubj(matter, influence)
cop(matter, be)
det(matter, a)
amod(matter, complex)
advcl(influence, matter)
punct(matter, ,)
case(factor, depend)
case(factor, upon)
compound(factor, personality)
nmod(matter, factor)
case(individual, in)
det(individual, the)
nmod(factor, individual)
cc(experience, as)
fixed(as, well)
fixed(as, as)
case(experience, upon)
nmod:poss(experience, he)
amod(class, social)
punct(class, -)
compound(experience, class)
conj(factor, experience)
punct(be, ,)
expl(be, there)
advmod(be, probably)
acl:relcl(experience, be)
det(statement, some)
amod(statement, general)
nsubj(be, statement)
case(policy, about)
amod(class, social)
punct(class, -)
compound(background, class)
compound(policy, background)
cc(educational, and)
conj(background, educational)
nmod(statement, policy)
nsubj:pass(make, that)
aux(make, can)
aux:pass(make, be)
acl:relcl(policy, make)
case(degree, with)
det(degree, a)
amod(degree, fair)
obl(make, degree)
case(truth, of)
nmod(degree, truth)
punct(see, .)
appos(degree, teacher)
nsubj(mobile, who)
aux(upward, have)
cop(mobile, be)
amod(mobile, upward)
nsubj(see, mobile)
advmod(see, probably)
acl:relcl(teacher, see)
obj(see, education)
advmod(most, as)
advmod(valuable, most)
xcomp(see, valuable)
case(student, for)
nmod:poss(student, they)
obl(valuable, student)
mark(serve, if)
nsubj(serve, it)
advcl(see, serve)
obj(serve, student)
mark(serve, as)
nsubj(serve, it)
aux(serve, have)
advcl(serve, serve)
obj(serve, they)
punct(be, ;)
punct(fact, ;)
nsubj(be, that)
parataxis(see, be)
punct(be, ,)
nsubj(likely, they)
cop(likely, be)
ccomp(be, likely)
mark(favor, to)
xcomp(likely, favor)
det(kind, a)
obj(favor, kind)
case(education, of)
nmod(kind, education)
nsubj(have, that)
acl:relcl(kind, have)
amod(advancement, vocational)
punct(advancement, -)
compound(value, advancement)
obj(have, value)
punct(fact, .)
nsubj(mean, this)
aux(mean, do)
advmod(mean, not)
advmod(mean, necessarily)
root(ROOT, mean)
mark(favor, that)
amod(teacher, such)
nsubj(favor, teacher)
aux(favor, will)
ccomp(mean, favor)
amod(education, vocational)
obj(favor, education)
punct(favor, ,)
mark(contrast, as)
advcl(favor, contrast)
case(education, with)
amod(education, liberal)
obl(contrast, education)
punct(likely, ,)
cc(likely, but)
nsubj(likely, they)
cop(likely, be)
conj(mean, likely)
mark(favor, to)
xcomp(likely, favor)
det(approach, a)
obj(favor, approach)
case(education, to)
amod(education, liberal)
nmod(approach, education)
nsubj(have, which)
acl:relcl(education, have)
det(value, a)
amod(value, maximal)
amod(advancement, vocational)
punct(advancement, -)
compound(value, advancement)
obj(have, value)
punct(value, ,)
case(kind, as)
fixed(as, against)
det(kind, a)
nmod(value, kind)
case(education, of)
punct(education, ``)
amod(education, pure)
punct(education, '')
amod(education, liberal)
nmod(kind, education)
nsubj:pass(design, that)
aux:pass(design, be)
advmod(design, not)
acl:relcl(education, design)
mark(help, to)
advcl(design, help)
obj(help, people)
xcomp(help, get)
amod(job, better)
obj(get, job)
punct(mean, .)
expl(be, there)
root(ROOT, be)
det(doubt, no)
nsubj(be, doubt)
mark(move, that)
amod(education, higher)
nsubj(move, education)
case(War, since)
compound(War, World)
nmod(education, War)
nummod(War, 2)
punct(move, ,)
aux(move, have)
acl(doubt, move)
advmod(move, away)
case(education, from)
punct(education, ``)
amod(education, pure)
punct(education, '')
amod(education, liberal)
obl(move, education)
case(emphasis, toward)
amod(emphasis, greater)
obl(move, emphasis)
case(technology, on)
nmod(emphasis, technology)
cc(specialization, and)
conj(technology, specialization)
punct(be, .)
expl(be, there)
root(ROOT, be)
amod(cause, several)
nsubj(be, cause)
case(this, for)
nmod(cause, this)
punct(be, ,)
nsubj(development, one)
cop(development, be)
amod(development, rapid)
amod(development, economic)
acl(cause, development)
case(number, with)
amod(number, increase)
nmod(development, number)
case(position, of)
case(position, of)
amod(class, middle)
punct(class, -)
compound(position, class)
nmod(number, position)
acl(position, require)
compound(training, engineering)
cc(scientific, or)
conj(engineering, scientific)
obj(require, training)
punct(be, .)
cc(lie, but)
det(cause, another)
nsubj(lie, cause)
aux(lie, may)
root(ROOT, lie)
case(experience, in)
det(experience, the)
obl(lie, experience)
case(member, of)
advmod(many, so)
amod(member, many)
amod(member, new)
amod(member, postwar)
compound(member, faculty)
nmod(experience, member)
case(use, with)
nmod:poss(use, they)
amod(use, own)
nmod(experience, use)
case(education, of)
nmod(use, education)
case(means, as)
det(means, a)
nmod(use, means)
case(advancement, of)
amod(advancement, social)
nmod(means, advancement)
punct(lie, .)
case(member, compare)
case(member, with)
det(member, the)
compound(member, college)
cc(university, and)
conj(college, university)
compound(member, faculty)
nsubj(consist, member)
case(period, of)
det(period, the)
nmod(member, period)
case(1900, from)
nmod(period, 1900)
case(1930, to)
nmod(1900, 1930)
punct(consist, ,)
det(member, the)
amod(member, new)
amod(member, postwar)
compound(member, faculty)
nsubj(consist, member)
root(ROOT, consist)
case(child, of)
amod(child, more)
obl(consist, child)
case(immigrant, of)
nmod(child, immigrant)
cc(child, and)
amod(child, more)
conj(immigrant, child)
case(father, of)
amod(father, urban)
compound(class, working)
punct(class, -)
compound(father, class)
nmod(child, father)
punct(contrast, .)
nmod:poss(experience, they)
nsubj(contrast, experience)
cop(contrast, be)
advmod(contrast, quite)
case(contrast, in)
conj(consist, contrast)
case(that, with)
nmod(contrast, that)
case(child, of)
nmod(that, child)
case(parent, of)
amod(parent, upper)
punct(class, -)
cc(class, and)
amod(class, upper-middle)
punct(class, -)
compound(parent, class)
amod(bear, native)
punct(bear, -)
amod(parent, bear)
nmod(child, parent)
punct(parent, ,)
nsubj(likely, who)
cop(likely, be)
advmod(likely, more)
acl:relcl(parent, likely)
mark(regard, to)
xcomp(likely, regard)
obj(regard, education)
advmod(good, as)
xcomp(regard, good)
case(sake, for)
nmod:poss(sake, its)
amod(sake, own)
obl(regard, sake)
cc(discount, and)
mark(discount, to)
conj(regard, discount)
det(emphase, the)
amod(emphase, vocational)
obj(discount, emphase)
case(curriculum, in)
det(curriculum, the)
obl(discount, curriculum)
punct(consist, .)
det(group, the)
punct(interest, ``)
amod(interest, public)
compound(group, interest)
punct(interest, '')
nsubj:pass(form, group)
amod(policy, educational)
nsubj:pass(form, policy)
aux:pass(form, be)
root(ROOT, form)
case(group, by)
amod(group, several)
obl(form, group)
nsubj:pass(appoint, who)
aux:pass(appoint, be)
advmod(appoint, officially)
cc(unofficially, or)
advmod(appoint, unofficially)
acl:relcl(group, appoint)
mark(act, to)
xcomp(appoint, act)
case(interest, in)
det(interest, the)
amod(interest, public)
obl(act, interest)
punct(interest, .)
nsubj(group, legislator)
cop(group, be)
nummod(group, one)
amod(group, such)
acl:relcl(interest, group)
punct(have, ,)
cc(have, and)
compound(legislator, state)
nsubj(have, legislator)
conj(group, have)
amod(responsibility, major)
obj(have, responsibility)
case(legislation, for)
amod(legislation, educational)
nmod(responsibility, legislation)
punct(form, .)
nsubj(vote, they)
advmod(vote, generally)
root(ROOT, vote)
advmod(vote, so)
mark(serve, as)
mark(serve, to)
advcl(vote, serve)
nmod:poss(constituency, they)
amod(constituency, own)
obj(serve, constituency)
punct(expect, ,)
cc(expect, and)
mark(class, if)
det(constituency, the)
nsubj(class, constituency)
aux(class, should)
cop(class, be)
advmod(class, solidly)
amod(class, middle)
advcl(expect, class)
cc(class, or)
advmod(lower, solidly)
amod(class, lower)
conj(class, class)
punct(expect, ,)
nsubj:pass(expect, they)
aux(expect, might)
aux:pass(expect, be)
conj(vote, expect)
mark(vote, to)
xcomp(expect, vote)
cc(work, and)
conj(vote, work)
case(interest, for)
compound(interest, middle)
punct(middle, -)
cc(class, or)
case(class, for)
amod(class, lower)
punct(class, -)
nmod(middle, class)
obl(work, interest)
case(education, in)
nmod(interest, education)
punct(vote, .)
advmod(be, however)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(few, relatively)
amod(constituency, few)
amod(constituency, such)
amod(constituency, political)
nsubj(be, constituency)
punct(be, ,)
cc(be, and)
punct(be, ,)
mark(point, as)
aux(point, have)
aux:pass(point, be)
advcl(be, point)
compound:prt(point, out)
punct(be, ,)
expl(be, there)
parataxis(be, be)
advmod(be, seldom)
det(distinction, a)
compound(cut, clear)
punct(cut, -)
amod(distinction, cut)
nsubj(be, distinction)
case(interest, between)
det(interest, the)
amod(interest, educational)
nmod(distinction, interest)
case(class, of)
nummod(class, one)
amod(class, social)
nmod(interest, class)
cc(those, and)
conj(interest, those)
case(another, of)
nmod(those, another)
punct(those, .)
det(group, another)
amod(group, public)
compound(group, interest)
nsubj(commission, group)
cop(commission, be)
det(commission, the)
parataxis(be, commission)
case(lay, of)
nmod(commission, lay)
cc(educator, or)
conj(lay, educator)
nsubj:pass(appoint, which)
aux:pass(appoint, be)
acl:relcl(commission, appoint)
mark(study, to)
xcomp(appoint, study)
det(problem, a)
amod(problem, educational)
obj(study, problem)
cc(make, and)
mark(make, to)
conj(study, make)
obj(make, recommendation)
punct(be, .)
advmod(work, generally)
det(commission, these)
nsubj(work, commission)
root(ROOT, work)
advmod(work, earnestly)
mark(represent, to)
advcl(work, represent)
det(interest, the)
obj(represent, interest)
case(society, of)
det(society, the)
amod(society, entire)
nmod(interest, society)
punct(work, ,)
mark(conceive, as)
nsubj(conceive, they)
advcl(represent, conceive)
obj(conceive, it)
punct(work, .)
advmod(everybody, nevertheless)
punct(everybody, ,)
nmod:poss(conclusion, they)
nsubj(everybody, conclusion)
cc(recommendation, and)
conj(conclusion, recommendation)
aux(everybody, can)
advmod(everybody, not)
discourse(everybody, please)
root(ROOT, everybody)
punct(represent, ,)
cc(represent, and)
nsubj(represent, they)
advmod(represent, often)
conj(everybody, represent)
det(point, a)
amod(point, particular)
amod(point, economic)
cc(political, or)
conj(economic, political)
obj(represent, point)
case(view, of)
nmod(point, view)
punct(represent, .)
case(instance, for)
obl(be, instance)
punct(be, ,)
expl(be, there)
aux(be, have)
conj(everybody, be)
nummod(commission, two)
amod(commission, presidential)
nsubj(be, commission)
case(education, on)
amod(education, higher)
nmod(commission, education)
case(War, since)
compound(War, World)
nmod(education, War)
nummod(War, 2)
punct(everybody, .)
nmod:poss(Commission, President)
flat(President, Truman)
case(President, 's)
nsubj(tend, Commission)
case(Education, on)
compound(Education, Higher)
nmod(Commission, Education)
root(ROOT, tend)
mark(take, to)
xcomp(tend, take)
det(position, a)
amod(position, liberal)
punct(position, ,)
amod(position, expansionist)
obj(take, position)
punct(take, ,)
mark(conservative, while)
nmod:poss(Committee, President)
flat(President, Eisenhower)
case(President, 's)
nsubj(conservative, Committee)
case(Education, on)
nmod(Committee, Education)
nmod(Committee, Beyond)
det(School, the)
compound(School, High)
nsubj(conservative, School)
cop(conservative, be)
advmod(more, slightly)
advmod(conservative, more)
advcl(tend, conservative)
punct(tend, .)
det(commission, both)
nsubj(consist, commission)
root(ROOT, consist)
case(people, of)
amod(people, upper-middle)
punct(upper-class, -)
cc(upper-class, and)
conj(upper-middle, upper-class)
obl(consist, people)
punct(people, ,)
nsubj(attempt, who)
acl:relcl(people, attempt)
mark(act, to)
xcomp(attempt, act)
case(interest, in)
det(interest, the)
amod(interest, public)
obl(act, interest)
punct(consist, .)
det(example, a)
nsubj:pass(note, example)
case(bias, of)
det(bias, a)
advmod(definite, more)
amod(bias, definite)
compound(bias, class)
nmod(example, bias)
aux:pass(note, be)
root(ROOT, note)
case(proceedings, in)
obl(note, proceedings)
case(Commission, of)
det(Commission, the)
nmod(proceedings, Commission)
case(financing, on)
det(financing, the)
nmod(proceedings, financing)
case(Education, of)
compound(Education, Higher)
nmod(financing, Education)
acl(financing, sponsor)
case(Association, by)
det(Association, the)
obl(sponsor, Association)
case(Universities, of)
amod(Universities, american)
nmod(Association, Universities)
cc(support, and)
conj(sponsor, support)
case(foundation, by)
det(foundation, the)
compound(foundation, Rockefeller)
obl(support, foundation)
cc(Corporation, and)
det(Corporation, the)
compound(Corporation, Carnegie)
conj(foundation, Corporation)
punct(recommend, .)
det(Commission, this)
nsubj(recommend, Commission)
parataxis(note, recommend)
case(use, against)
det(use, the)
obl(recommend, use)
case(fund, of)
amod(fund, federal)
compound(fund, government)
nmod(use, fund)
case(assistance, for)
det(assistance, the)
nmod(use, assistance)
case(university, of)
amod(university, private)
nmod(assistance, university)
cc(program, and)
case(program, against)
det(program, a)
amod(program, broad)
conj(university, program)
case(scholarship, of)
obl:npmod(support, government)
punct(support, -)
amod(scholarship, support)
nmod(program, scholarship)
punct(recommend, .)
nsubj:pass(say, this)
aux(say, might)
aux:pass(say, be)
root(ROOT, say)
mark(bias, to)
cop(bias, be)
det(bias, a)
compound(bias, upper)
punct(upper, -)
cc(bias, or)
det(bias, a)
amod(class, upper-middle)
punct(class, -)
compound(bias, class)
xcomp(say, bias)
punct(publish, ,)
cc(publish, but)
det(commission, the)
nsubj(publish, commission)
conj(say, publish)
mark(study, as)
nsubj(study, one)
case(staff, of)
nmod:poss(staff, its)
nmod(one, staff)
advcl(publish, study)
det(book, a)
obj(study, book)
case(Byron, by)
nmod(book, Byron)
flat(Byron, S.)
flat(Byron, Hollingshead)
acl(Byron, entitle)
nsubj(go, who)
aux(go, should)
ccomp(entitle, go)
case(College, to)
obl(go, College)
punct(go, ?)
punct(go, ?)
nsubj(recommend, which)
parataxis(go, recommend)
det(program, a)
amod(program, federal)
compound(scholarship, government)
compound(program, scholarship)
obj(recommend, program)
punct(say, . )
advmod(set, furthermore)
punct(set, ,)
det(Commission, the)
nsubj(set, Commission)
root(ROOT, set)
compound:prt(set, up)
det(Council, the)
obj(set, Council)
case(Aid, for)
compound(Aid, Financial)
nmod(Council, Aid)
case(Education, to)
obl(set, Education)
case(means, as)
det(means, a)
obl(set, means)
mark(encourage, of)
acl(means, encourage)
amod(business, private)
obj(encourage, business)
mark(increase, to)
xcomp(encourage, increase)
nmod:poss(support, its)
obj(increase, support)
case(education, of)
amod(education, private)
amod(education, higher)
nmod(support, education)
punct(set, .)
advmod(act, thus)
punct(act, ,)
det(Commission, the)
nsubj(act, Commission)
root(ROOT, act)
case(sense, with)
det(sense, a)
obl(act, sense)
case(responsibility, of)
amod(responsibility, social)
nmod(sense, responsibility)
case(area, within)
det(area, the)
nmod(sense, area)
case(conviction, of)
nmod:poss(conviction, its)
amod(conviction, own)
nmod(area, conviction)
case(problem, about)
det(problem, the)
nmod(conviction, problem)
case(support, of)
compound(support, government)
nmod(problem, support)
case(education, to)
amod(education, private)
nmod(support, education)
punct(act, .)
advmod(be, then)
expl(be, there)
root(ROOT, be)
det(trustee, the)
nsubj(be, trustee)
cc(officer, and)
conj(trustee, officer)
case(foundation, of)
det(foundation, the)
amod(foundation, great)
amod(foundation, educational)
nmod(trustee, foundation)
punct(foundation, ,)
nsubj(exert, who)
advmod(exert, inevitably)
acl:relcl(foundation, exert)
det(influence, a)
obj(exert, influence)
case(decision, on)
amod(decision, educational)
nmod(influence, decision)
case(support, by)
nmod:poss(support, they)
nmod(decision, support)
cc(refusal, or)
conj(support, refusal)
mark(support, to)
acl(refusal, support)
amod(program, various)
amod(program, educational)
obj(support, program)
punct(experiment, ,)
conj(program, experiment)
punct(demonstration, ,)
cc(demonstration, and)
conj(program, demonstration)
punct(be, .)
det(people, these)
nsubj(person, people)
cop(person, be)
advmod(person, practically)
advmod(person, always)
amod(person, upper)
punct(upper, -)
cc(class, or)
amod(class, upper-middle)
punct(class, -)
compound(person, class)
root(ROOT, person)
punct(person, ,)
nsubj(attempt, who)
acl:relcl(person, attempt)
mark(act, to)
xcomp(attempt, act)
case(what, in)
obl(act, what)
nsubj(regard, they)
acl:relcl(what, regard)
case(interest, as)
det(interest, the)
obl(regard, interest)
case(society, of)
det(society, the)
amod(society, entire)
nmod(interest, society)
punct(be, .)
advmod(be, finally)
expl(be, there)
parataxis(person, be)
det(organization, the)
compound(organization, parent)
nsubj(be, organization)
cc(organization, and)
det(lay, the)
nmod:poss(organization, lay)
case(lay, 's)
conj(organization, organization)
case(Association, such)
fixed(such, as)
det(Association, the)
compound(Association, National)
nmod(organization, Association)
case(Parents, of)
nmod(Association, Parents)
cc(teacher, and)
conj(Parents, teacher)
punct(Committee, ,)
cc(Committee, and)
det(Committee, the)
compound(Committee, Citizens)
conj(Association, Committee)
case(Schools, on)
compound(Schools, Public)
nmod(Committee, Schools)
punct(be, .)
nsubj(have, these)
root(ROOT, have)
det(leadership, a)
amod(class, upper-middle)
punct(class, -)
compound(leadership, class)
obj(have, leadership)
cc(membership, and)
det(membership, a)
amod(class, middle)
punct(class, -)
compound(membership, class)
conj(leadership, membership)
punct(leadership, ,)
case(exception, with)
amod(exception, rare)
nmod(leadership, exception)
punct(exception, ,)
advmod(active, where)
amod(parent, work)
punct(class, -)
compound(parent, class)
nsubj(active, parent)
cop(active, be)
acl:relcl(exception, active)
case(matter, in)
amod(matter, local)
compound(t.a., P.)
punct(t.a., -)
compound(matter, t.a.)
obl(active, matter)
punct(have, .)
case(group, like)
det(group, the)
amod(group, other)
compound(making, policy)
punct(making, -)
compound(group, making)
obl(class, group)
punct(class, ,)
nsubj(class, these)
cop(class, be)
amod(class, middle)
root(ROOT, class)
case(attitude, in)
nmod:poss(attitude, they)
amod(attitude, educational)
nmod(class, attitude)
punct(attempt, ,)
cc(attempt, and)
nsubj(attempt, they)
conj(class, attempt)
mark(act, to)
xcomp(attempt, act)
case(interest, in)
det(interest, the)
amod(interest, general)
amod(interest, public)
obl(act, interest)
punct(act, ,)
mark(see, as)
nsubj(see, they)
advcl(act, see)
obj(see, it)
punct(class, .)
case(general, in)
obl(appear, general)
punct(appear, ,)
expl(appear, it)
root(ROOT, appear)
mark(make, that)
amod(decision, educational)
nsubj:pass(make, decision)
cc(policy, and)
amod(policy, educational)
conj(decision, policy)
aux:pass(make, be)
ccomp(appear, make)
case(people, by)
obl(make, people)
nsubj(intend, who)
acl:relcl(people, intend)
mark(act, to)
xcomp(intend, act)
case(interest, in)
det(interest, the)
obl(act, interest)
case(society, of)
det(society, the)
nmod(interest, society)
case(whole, as)
det(whole, a)
obl(act, whole)
punct(appear, .)
nsubj(people, they)
cop(people, be)
advmod(people, predominantly)
amod(people, middle)
punct(upper-class, -)
cc(upper-class, and)
conj(middle, upper-class)
root(ROOT, people)
punct(share, ,)
cc(share, and)
advmod(share, undoubtedly)
conj(people, share)
det(value, the)
obj(share, value)
cc(attitude, and)
conj(value, attitude)
case(class, of)
det(class, those)
nmod(value, class)
punct(people, .)
nsubj(unaware, they)
aux(unaware, may)
cop(unaware, be)
root(ROOT, unaware)
case(existence, of)
det(existence, the)
obl(unaware, existence)
case(value, of)
amod(class, lower)
punct(class, -)
compound(value, class)
nmod(existence, value)
cc(fail, and)
advmod(fail, consequently)
conj(unaware, fail)
mark(take, to)
xcomp(fail, take)
obj(take, they)
case(account, into)
obl(take, account)
punct(unaware, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
advmod(little, very)
amod(espousal, little)
amod(espousal, frank)
cc(conscious, and)
conj(frank, conscious)
nsubj(be, espousal)
case(interest, of)
det(interest, the)
nmod(espousal, interest)
case(class, of)
det(class, any)
nummod(class, one)
amod(class, social)
nmod(interest, class)
case(people, by)
det(people, the)
nmod(interest, people)
nsubj(have, who)
acl:relcl(people, have)
det(power, the)
obj(have, power)
mark(make, to)
acl(power, make)
obj(make, decision)
case(education, in)
nmod(decision, education)
punct(be, .)
nsubj(think, they)
root(ROOT, think)
case(themselves, of)
obl(think, themselves)
case(trustee, as)
obl(think, trustee)
case(society, for)
det(society, the)
amod(society, entire)
nmod(trustee, society)
cc(try, and)
conj(think, try)
mark(serve, to)
xcomp(try, serve)
det(society, the)
amod(society, entire)
obj(serve, society)
punct(think, .)
root(ROOT, attempt)
mark(influence, to)
xcomp(attempt, influence)
amod(structure, social)
obj(influence, structure)
case(policy, through)
compound(policy, education)
amod(policy, educational)
obl(influence, policy)
case(States, in)
det(States, the)
compound(States, United)
nmod(policy, States)
advcl(attempt, have)
case(goal, as)
det(goal, a)
amod(goal, explicit)
obl(have, goal)
det(maximization, the)
appos(goal, maximization)
case(opportunity, of)
amod(opportunity, economic)
cc(cultural, and)
conj(economic, cultural)
nmod(maximization, opportunity)
punct(attempt, .)
advmod(far, in)
advmod(far, so)
advmod(become, far)
mark(achieve, as)
det(goal, this)
nsubj:pass(achieve, goal)
aux:pass(achieve, be)
advcl(far, achieve)
punct(become, ,)
det(society, the)
nsubj(become, society)
root(ROOT, become)
amod(fluid, more)
xcomp(become, fluid)
punct(fluid, ,)
amod(barrier, artificial)
nsubj:pass(reduce, barrier)
case(mobility, to)
amod(mobility, social)
nmod(barrier, mobility)
aux:pass(reduce, be)
acl:relcl(fluid, reduce)
punct(share, ,)
cc(share, and)
nsubj(share, people)
case(end, at)
det(end, the)
amod(end, lower)
nmod(people, end)
case(hierarchy, of)
det(hierarchy, the)
amod(hierarchy, social)
nmod(end, hierarchy)
conj(become, share)
advmod(fully, more)
advmod(share, fully)
case(goods, in)
det(goods, the)
amod(goods, material)
cc(cultural, and)
conj(material, cultural)
obl(share, goods)
case(society, of)
nmod(goods, society)
punct(fluid, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(be, hand)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(purpose, a)
compound(purpose, counterbalancing)
nsubj(be, purpose)
case(education, in)
nmod(purpose, education)
nsubj(be, which)
acl:relcl(purpose, be)
mark(pass, to)
ccomp(be, pass)
case(advantage, on)
det(advantage, the)
obl(pass, advantage)
case(parent, of)
det(parent, the)
nmod(advantage, parent)
case(child, to)
nmod:poss(child, they)
nmod(advantage, child)
punct(be, .)
nsubj(lead, this)
root(ROOT, lead)
case(effort, to)
obl(lead, effort)
case(exclusiveness, at)
nmod(effort, exclusiveness)
case(school, through)
amod(school, private)
nmod(exclusiveness, school)
cc(maintenance, and)
case(maintenance, to)
det(maintenance, the)
conj(effort, maintenance)
case(stratification, of)
amod(stratification, social)
nmod(maintenance, stratification)
case(school, in)
det(school, the)
nmod(maintenance, school)
punct(lead, .)
nsubj(exist, both)
case(purpose, of)
det(purpose, these)
nmod(both, purpose)
root(ROOT, exist)
obj(exist, side)
case(side, by)
obl(exist, side)
case(conflict, without)
advmod(over, much)
amod(conflict, over)
obl(exist, conflict)
case(condition, under)
amod(condition, present)
nmod(conflict, condition)
punct(exist, . )
csubj(example, maximize)
amod(opportunity, economic)
cc(cultural, and)
conj(economic, cultural)
obj(maximize, opportunity)
det(expansion, the)
amod(expansion, broad)
appos(opportunity, expansion)
case(result, of)
amod(education, free)
compound(result, education)
nmod(expansion, result)
advmod(result, both)
mark(raise, in)
acl(result, raise)
det(level, the)
amod(level, average)
amod(level, economic)
cc(cultural, and)
conj(economic, cultural)
obj(raise, level)
case(society, of)
det(society, the)
nmod(level, society)
cc(promote, and)
mark(promote, in)
conj(raise, promote)
obj(promote, fluidity)
case(structure, within)
det(structure, the)
amod(structure, social)
nmod(fluidity, structure)
punct(structure, .)
nummod(year, fifty)
obl:npmod(ago, year)
advmod(raising, ago)
det(raising, the)
amod(raising, general)
nsubj(example, raising)
case(age, of)
det(age, the)
compound(leave, school)
punct(leave, -)
acl(raising, leave)
obj(leave, age)
case(sixteen, to)
nmod(age, sixteen)
cop(example, be)
det(example, a)
root(ROOT, example)
case(movement, of)
det(movement, this)
nmod(example, movement)
punct(example, .)
case(decade, during)
det(decade, the)
amod(decade, past)
obl(carry, decade)
det(program, the)
nsubj:pass(carry, program)
aux(carry, have)
aux:pass(carry, be)
parataxis(example, carry)
compound:prt(carry, on)
case(expansion, through)
obl(carry, expansion)
case(education, of)
amod(education, free)
amod(education, higher)
nmod(expansion, education)
case(university, in)
compound(university, state)
nmod(education, university)
punct(college, ,)
compound(college, state)
conj(university, college)
punct(college, ,)
cc(college, and)
compound(college, community)
conj(university, college)
punct(example, .)
det(reaffirmation, the)
nsubj(indication, reaffirmation)
case(faith, of)
amod(faith, american)
nmod(reaffirmation, faith)
case(school, in)
det(school, the)
amod(school, comprehensive)
amod(school, high)
nmod(reaffirmation, school)
punct(reaffirmation, ,)
mark(express, as)
acl(reaffirmation, express)
case(study, in)
det(study, the)
compound(study, Conant)
obl(express, study)
punct(indication, ,)
cop(indication, be)
det(indication, another)
root(ROOT, indication)
case(liveliness, of)
det(liveliness, the)
nmod(indication, liveliness)
case(ideal, of)
det(ideal, the)
nmod(liveliness, ideal)
mark(maximize, of)
advcl(ideal, maximize)
obj(maximize, opportunity)
case(equalize, through)
det(equalize, the)
obl(maximize, equalize)
case(opportunity, of)
amod(opportunity, educational)
nmod(equalize, opportunity)
punct(indication, .)
det(government, the)
amod(government, recent)
amod(government, federal)
nmod:poss(program, government)
case(government, 's)
compound(loan, student)
punct(loan, -)
compound(program, loan)
nsubj(step, program)
cop(step, be)
det(step, another)
root(ROOT, step)
case(direction, in)
det(direction, the)
nmod(step, direction)
mark(make, of)
acl(direction, make)
amod(education, higher)
obj(make, education)
advmod(available, more)
xcomp(make, available)
case(youth, to)
amod(status, lower)
punct(status, -)
compound(youth, status)
obl(available, youth)
punct(step, .)
nsubj(effective, it)
cop(effective, be)
advmod(effective, probably)
advmod(effective, more)
root(ROOT, effective)
case(program, than)
det(program, the)
amod(program, expand)
compound(program, scholarship)
obl(effective, program)
case(decade, of)
det(decade, the)
amod(decade, past)
nmod(program, decade)
punct(effective, ,)
mark(aid, because)
det(program, the)
compound(program, scholarship)
nsubj(aid, program)
advmod(aid, mainly)
advcl(effective, aid)
det(student, the)
obj(aid, student)
case(record, with)
det(record, the)
amod(record, best)
amod(record, academic)
obl(aid, record)
punct(class, ()
nsubj(class, who)
cop(class, be)
advmod(class, usually)
amod(class, middle)
punct(class, -)
acl:relcl(record, class)
punct(class, ))
punct(tend, ,)
cc(tend, and)
det(student, these)
nsubj(tend, student)
conj(class, tend)
mark(use, to)
xcomp(tend, use)
det(fund, the)
compound(fund, scholarship)
obj(use, fund)
mark(go, to)
acl(fund, go)
case(college, to)
advmod(expensive, more)
amod(college, expensive)
obl(go, college)
punct(increase, .)
advmod(increase, meanwhile)
punct(increase, ,)
det(college, the)
amod(college, private)
nsubj(increase, college)
aux(increase, have)
parataxis(effective, increase)
nmod:poss(rate, they)
compound(rate, tuition)
obj(increase, rate)
advmod(much, so)
advmod(increase, much)
mark(raise, that)
nsubj(raise, they)
aux(raise, have)
advcl(much, raise)
det(barrier, a)
amod(barrier, economic)
obj(raise, barrier)
nsubj(dwarf, which)
acl:relcl(barrier, dwarf)
nmod:poss(fund, they)
compound(fund, scholarship)
obj(dwarf, fund)
punct(effective, .)
det(gain, the)
nsubj(take, gain)
case(opportunity, in)
amod(opportunity, educational)
nmod(gain, opportunity)
case(decade, during)
det(decade, the)
amod(decade, past)
nmod(opportunity, decade)
aux(take, have)
root(ROOT, take)
obj(take, place)
advmod(institution, largely)
case(institution, in)
det(institution, the)
advmod(support, publicly)
amod(institution, support)
obl(take, institution)
punct(take, .)
advmod(make, unfortunately)
punct(make, ,)
advmod(make, however)
punct(make, ,)
cc(reason, and)
case(reason, for)
obl(make, reason)
mark(discuss, to)
aux:pass(discuss, be)
acl(reason, discuss)
case(chapter, in)
det(chapter, the)
amod(chapter, follow)
obl(discuss, chapter)
punct(make, ,)
det(relationship, no)
compound(relationship, rate)
nsubj:pass(make, relationship)
aux(make, can)
aux:pass(make, be)
root(ROOT, make)
advmod(nondiscriminatory, completely)
xcomp(make, nondiscriminatory)
advmod(long, as)
advmod(make, long)
mark(set, as)
nsubj:pass(set, all)
cc(some, or)
conj(all, some)
case(rate, of)
det(rate, the)
nmod(all, rate)
aux(set, must)
aux:pass(set, be)
advcl(as, set)
case(cost, above)
amod(cost, marginal)
obl(set, cost)
mark(yield, in)
fixed(in, order)
mark(yield, to)
advcl(set, yield)
amod(revenue, adequate)
obj(yield, revenue)
punct(make, .)
cc(explain, and)
det(fact, this)
nsubj(explain, fact)
aux(explain, may)
root(ROOT, explain)
obj(explain, some)
case(disagreement, of)
det(disagreement, the)
nmod(some, disagreement)
case(expert, among)
det(expert, the)
nmod(disagreement, expert)
case(formula, as)
fixed(as, to)
det(formula, the)
advmod(rational, more)
amod(formula, rational)
obl(explain, formula)
case(apportionment, for)
det(apportionment, the)
nmod(formula, apportionment)
case(cost, of)
amod(cost, total)
nmod(apportionment, cost)
case(unit, among)
amod(unit, different)
nmod(cost, unit)
case(service, of)
nmod(unit, service)
punct(explain, .)
nummod(disagreement, one)
amod(disagreement, such)
nsubj(concern, disagreement)
punct(disagreement, ,)
nsubj(receive, which)
aux(receive, will)
acl:relcl(disagreement, receive)
obj(receive, attention)
case(chapter, in)
det(chapter, this)
amod(chapter, next)
obl(receive, chapter)
punct(concern, ,)
root(ROOT, concern)
det(question, the)
obj(concern, question)
mark(make, whether)
nsubj:pass(make, rate)
case(kind, for)
amod(kind, different)
nmod(rate, kind)
case(service, of)
nmod(kind, service)
punct(avoid, ,)
mark(avoid, in)
fixed(in, order)
mark(avoid, to)
advcl(make, avoid)
det(attribute, the)
obj(avoid, attribute)
case(discrimination, of)
nmod(attribute, discrimination)
punct(make, ,)
aux(make, must)
aux:pass(make, be)
acl(question, make)
advmod(proportional, directly)
xcomp(make, proportional)
case(cost, to)
amod(cost, marginal)
obl(proportional, cost)
punct(base, ,)
cc(base, or)
mark(base, whether)
nsubj:pass(base, they)
aux(base, should)
aux:pass(base, be)
conj(make, base)
case(difference, instead)
fixed(instead, on)
obl(base, difference)
case(cost, in)
amod(cost, marginal)
nmod(difference, cost)
punct(concern, .)
root(ROOT, here)
punct(here, ,)
det(choice, the)
nsubj(be, choice)
cop(here, be)
mark(horn, that)
case(horn, between)
det(horn, the)
obl(be, horn)
case(dilemma, of)
det(dilemma, a)
nmod(horn, dilemma)
punct(be, .)
nummod(type, two)
amod(type, major)
root(ROOT, type)
case(analysis, of)
advmod(distribute, fully)
amod(analysis, distribute)
compound(analysis, cost)
nmod(type, analysis)
nummod(type, 1)
punct(type, .)
det(type, the)
amod(step, double)
punct(step, -)
compound(type, step)
appos(type, type)
case(ambiguity, despite)
det(ambiguity, a)
nmod(type, ambiguity)
case(failure, due)
fixed(due, to)
nmod:poss(failure, its)
nmod(ambiguity, failure)
advmod(define, clearly)
mark(define, to)
acl(failure, define)
punct(cost, ``)
amod(cost, relative)
obj(define, cost)
punct(cost, '')
punct(go, ,)
det(exposition, the)
amod(exposition, above)
nsubj(go, exposition)
case(cost, of)
advmod(distribute, fully)
amod(cost, distribute)
nmod(exposition, cost)
parataxis(type, go)
advmod(far, about)
advmod(far, as)
advmod(go, far)
mark(go, as)
nsubj(go, one)
aux(go, can)
advcl(far, go)
mark(express, toward)
advcl(go, express)
det(philosophy, the)
amod(philosophy, basic)
obj(express, philosophy)
case(practice, of)
det(practice, the)
nmod(philosophy, practice)
punct(express, .)
case(exposition, for)
amod(exposition, more)
amod(exposition, explicit)
obl(distinguish, exposition)
punct(distinguish, ,)
nsubj(distinguish, one)
aux(distinguish, must)
parataxis(go, distinguish)
amod(type, different)
obj(distinguish, type)
case(analysis, of)
nmod(type, analysis)
punct(distinguish, .)
case(means, by)
det(means, all)
obl(be, means)
det(distinction, the)
advmod(important, most)
amod(distinction, important)
nsubj(be, distinction)
root(ROOT, be)
mark(apportionment, that)
case(apportionment, between)
det(apportionment, those)
amod(cost, total)
punct(cost, -)
compound(apportionment, cost)
obl(be, apportionment)
nsubj(superimpose, which)
acl:relcl(apportionment, superimpose)
det(distribution, a)
obj(superimpose, distribution)
case(residue, of)
advmod(unallocable, admittedly)
amod(residue, unallocable)
compound(residue, cost)
nmod(distribution, residue)
case(estimate, on)
nmod(residue, estimate)
case(cost, of)
amod(cost, incremental)
cc(marginal, or)
conj(incremental, marginal)
nmod(estimate, cost)
punct(apportionment, ,)
cc(apportionment, and)
det(apportionment, those)
amod(apportionment, other)
conj(cost, apportionment)
nsubj(recognize, which)
acl:relcl(apportionment, recognize)
det(difference, no)
obj(recognize, difference)
case(allocation, between)
amod(allocation, true)
compound(allocation, cost)
nmod(difference, allocation)
cc(distribution, and)
amod(distribution, mere)
amod(cost, total)
punct(cost, -)
compound(distribution, cost)
conj(allocation, distribution)
punct(be, .)
det(first, the)
nsubj:pass(call, first)
punct(step, ,)
cc(step, or)
amod(step, double)
punct(step, -)
conj(first, step)
punct(call, ,)
nsubj:pass(call, type)
aux(call, might)
advmod(call, also)
aux:pass(call, be)
root(ROOT, call)
det(type, the)
punct(type, ``)
compound(type, railroad)
xcomp(call, type)
punct(type, '')
case(application, because)
fixed(because, of)
nmod:poss(application, its)
obl(call, application)
case(railroad, to)
nmod(application, railroad)
punct(agency, ()
cc(agency, and)
amod(agency, other)
compound(agency, transportation)
conj(railroad, agency)
punct(agency, ))
case(section, by)
det(section, the)
compound(section, Cost)
nmod(application, section)
case(Commission, of)
det(Commission, the)
compound(Commission, Interstate)
compound(Commission, commerce)
nmod(section, Commission)
punct(call, .)
det(section, the)
compound(section, Cost)
nsubj(distinguishes, section)
root(ROOT, distinguishes)
case(cost, between)
punct(directly, ()
advmod(distinguishes, directly)
punct(directly, ))
amod(cost, variable)
obl(distinguishes, cost)
cc(cost, and)
amod(cost, constant)
conj(cost, cost)
case(manner, in)
det(manner, a)
nmod(cost, manner)
acl(manner, note)
case(chapter, in)
det(chapter, the)
amod(chapter, precede)
obl(note, chapter)
punct(distinguishes, .)
det(cost, the)
amod(cost, variable)
nsubj:pass(assign, cost)
advmod(cost, alone)
aux:pass(assign, be)
root(ROOT, assign)
case(unit, to)
det(unit, the)
amod(unit, different)
obl(assign, unit)
case(traffic, of)
compound(traffic, freight)
nmod(unit, traffic)
mark(represent, as)
advcl(assign, represent)
punct(run, ``)
compound(run, long)
punct(run, -)
amod(cost, run)
compound(run, out)
punct(run, -)
case(pocket, of)
punct(pocket, -)
obl(out, pocket)
obj(represent, cost)
punct(cost, '')
punct(cost, --)
det(term, a)
appos(cost, term)
case(meaning, with)
det(meaning, a)
nmod(term, meaning)
advmod(meaning, here)
advmod(distinctly, not)
advmod(different, distinctly)
amod(meaning, different)
case(that, from)
obl(different, that)
case(cost, of)
det(economist, the)
nmod:poss(cost, economist)
case(economist, 's)
punct(cost, ``)
amod(run, long)
punct(run, -)
amod(cost, run)
amod(cost, marginal)
nmod(that, cost)
punct(cost, '')
punct(remain, .)
expl(remain, there)
parataxis(different, remain)
det(residue, a)
xcomp(remain, residue)
case(cost, of)
amod(cost, total)
nmod(residue, cost)
punct(requirement, ,)
cc(requirement, or)
amod(requirement, total)
punct(requirement, ``)
compound(requirement, revenue)
conj(cost, requirement)
punct(requirement, '')
nsubj:pass(find, which)
punct(requirement, ,)
mark(find, since)
nsubj:pass(find, it)
aux:pass(find, be)
acl:relcl(requirement, find)
mark(behave, to)
xcomp(find, behave)
mark(constant, as)
mark(constant, if)
nsubj(constant, it)
cop(constant, be)
advcl(behave, constant)
case(variation, over)
amod(variation, substantial)
obl(constant, variation)
case(density, in)
compound(density, traffic)
nmod(variation, density)
punct(unallocable, ,)
cop(unallocable, be)
advmod(unallocable, strictly)
conj(constant, unallocable)
case(basis, on)
det(basis, a)
compound(basis, cost-find)
obl(unallocable, basis)
punct(assign, .)
advmod(apportion, nevertheless)
punct(apportion, ,)
mark(feel, because)
det(section, the)
compound(section, Cost)
nsubj(feel, section)
aux(feel, have)
advcl(apportion, feel)
xcomp(feel, impel)
mark(make, to)
xcomp(impel, make)
det(kind, some)
obj(make, kind)
case(distribution, of)
det(distribution, a)
nmod(kind, distribution)
case(cost, of)
amod(cost, total)
nmod(distribution, cost)
punct(apportion, ,)
nsubj(apportion, it)
aux(apportion, have)
root(ROOT, apportion)
det(residue, this)
obj(apportion, residue)
punct(residue, ,)
obj(call, which)
nsubj(call, it)
advmod(call, sometimes)
acl:relcl(residue, call)
punct(burden, ``)
obj(call, burden)
punct(burden, '')
punct(call, ,)
case(unit, among)
det(unit, the)
obl(call, unit)
case(traffic, of)
compound(traffic, carload)
nmod(unit, traffic)
case(basis, on)
det(basis, a)
nmod(unit, basis)
punct(ton, ()
amod(ton, partly)
appos(basis, ton)
punct(ton, ,)
advmod(ton-mile, partly)
appos(ton, ton-mile)
punct(ton, ))
nsubj(arbitrary, which)
cop(arbitrary, be)
advmod(arbitrary, concededly)
advmod(arbitrary, quite)
acl:relcl(ton, arbitrary)
case(standpoint, from)
det(standpoint, the)
obl(arbitrary, standpoint)
case(determination, of)
compound(determination, cost)
nmod(standpoint, determination)
punct(apportion, .)
case(year, in)
amod(year, recent)
obl(amount, year)
punct(amount, ,)
det(burden, this)
nsubj(amount, burden)
punct(include, ()
nsubj(include, which)
acl:relcl(burden, include)
obj(include, allowance)
case(deficiency, for)
compound(deficiency, revenue)
nmod(allowance, deficiency)
case(business, in)
det(business, the)
compound(business, passenger)
nmod(deficiency, business)
cc(traffic, and)
case(traffic, in)
advmod(carload, less)
punct(less, -)
case(carload, than)
punct(carload, -)
compound(traffic, carload)
compound(traffic, freight)
conj(business, traffic)
punct(traffic, !)
punct(traffic, !)
punct(traffic, ))
aux(amount, have)
root(ROOT, amount)
case(third, to)
advmod(one, about)
nummod(third, one)
obl(amount, third)
case(requirement, of)
det(requirement, those)
amod(requirement, total)
compound(requirement, revenue)
nmod(third, requirement)
obj(suppose, which)
det(business, the)
compound(business, carload)
compound(business, freight)
nsubj(suppose, business)
aux(suppose, be)
acl:relcl(requirement, suppose)
mark(call, to)
aux:pass(call, be)
xcomp(suppose, call)
mark(meet, upon)
mark(meet, to)
advcl(call, meet)
punct(amount, .)
mark(concerned, since)
det(book, this)
nsubj(concerned, book)
cop(concerned, be)
advcl(attempt, concerned)
advmod(incidentally, only)
advmod(concerned, incidentally)
case(rate, with)
compound(rate, railroad)
obl(concerned, rate)
punct(attempt, ,)
nsubj(attempt, it)
aux(attempt, will)
advmod(attempt, not)
root(ROOT, attempt)
mark(analyze, to)
xcomp(attempt, analyze)
det(method, the)
obj(analyze, method)
case(which, by)
obl(estimate, which)
det(staff, the)
nsubj(estimate, staff)
case(Commission, of)
det(Commission, the)
compound(Commission, Interstate)
compound(Commission, commerce)
nmod(staff, Commission)
aux(estimate, have)
acl:relcl(method, estimate)
compound:prt(estimate, out)
punct(cost, -)
case(pocket, of)
punct(pocket, -)
compound(cost, pocket)
obj(estimate, cost)
cc(cost, and)
amod(cost, apportion)
compound(cost, residue)
conj(cost, cost)
punct(attempt, .)
root(ROOT, suffice)
obj(suffice, it)
mark(say, to)
xcomp(suffice, say)
mark(questionable, that)
det(usefulness, the)
nsubj(questionable, usefulness)
case(apportionment, of)
det(apportionment, the)
amod(apportionment, latter)
nmod(usefulness, apportionment)
cop(questionable, be)
ccomp(say, questionable)
punct(suffice, .)
cc(give, but)
case(event, in)
det(event, any)
obl(give, event)
punct(give, ,)
amod(credit, full)
nsubj:pass(give, credit)
aux(give, should)
aux:pass(give, be)
root(ROOT, give)
case(section, to)
det(section, the)
compound(section, Cost)
obl(give, section)
case(recognition, for)
nmod:poss(recognition, its)
amod(recognition, express)
cc(over, and)
conj(express, over)
nmod(section, recognition)
case(distinction, of)
det(distinction, a)
amod(distinction, vital)
nmod(recognition, distinction)
advmod(often, too)
advmod(ignore, often)
acl(distinction, ignore)
case(analysis, in)
compound(cost, utility)
punct(cost, -)
compound(analysis, cost)
obl(ignore, analysis)
punct(analysis, :)
advmod(allocation, namely)
punct(analysis, ,)
mark(allocation, that)
case(allocation, between)
det(allocation, a)
compound(allocation, cost)
nmod(analysis, allocation)
acl(allocation, design)
mark(reflect, to)
xcomp(design, reflect)
det(behavior, the)
amod(behavior, actual)
obj(reflect, behavior)
case(cost, of)
nmod(behavior, cost)
case(response, in)
nmod(cost, response)
case(change, to)
nmod(response, change)
case(rate, in)
nmod(change, rate)
case(output, of)
nmod(rate, output)
case(class, of)
amod(class, different)
nmod(output, class)
case(service, of)
compound(service, utility)
nmod(class, service)
punct(apportionment, ;)
punct(give, ;)
cc(apportionment, and)
det(apportionment, a)
amod(apportionment, mere)
compound(apportionment, cost)
conj(allocation, apportionment)
nsubj(spread, which)
advmod(spread, somehow)
acl:relcl(apportionment, spread)
case(class, among)
det(class, the)
obl(spread, class)
cc(unit, and)
conj(class, unit)
case(service, of)
nmod(unit, service)
advmod(cost, even)
det(cost, those)
conj(class, cost)
nsubj(unallocable, that)
cop(unallocable, be)
advmod(unallocable, strictly)
acl:relcl(cost, unallocable)
case(standpoint, from)
det(standpoint, the)
obl(unallocable, standpoint)
case(determination, of)
amod(determination, specific)
compound(determination, cost)
nmod(standpoint, determination)
punct(give, . )
nummod(turn, 2)
punct(2, .)
det(type, the)
amod(step, single)
punct(step, -)
compound(type, step)
nsubj(draw, type)
nsubj(turn, we)
acl:relcl(type, turn)
advmod(turn, now)
case(type, to)
det(type, a)
obl(turn, type)
case(analysis, of)
advmod(distribute, fully)
amod(analysis, distribute)
compound(analysis, cost)
nmod(type, analysis)
nsubj(type, which)
punct(type, ,)
case(type, unlike)
det(type, the)
punct(type, ``)
compound(type, railroad)
appos(analysis, type)
punct(type, '')
punct(draw, ,)
root(ROOT, draw)
det(distinction, no)
obj(draw, distinction)
case(allocation, between)
compound(allocation, cost)
nmod(distinction, allocation)
cc(apportionment, and)
compound(apportionment, cost)
conj(allocation, apportionment)
punct(allocation, :)
det(type, the)
amod(step, single)
punct(step, -)
compound(type, step)
appos(allocation, type)
punct(draw, .)
nsubj:pass(call, it)
aux(call, might)
aux:pass(call, be)
root(ROOT, call)
det(type, the)
punct(type, ``)
amod(type, public)
compound(type, utility)
punct(type, '')
obj(call, type)
case(use, because)
fixed(because, of)
det(use, the)
amod(use, considerable)
obl(call, use)
case(which, to)
obl(put, which)
nsubj:pass(put, it)
aux(put, have)
aux:pass(put, be)
acl:relcl(use, put)
case(gas, in)
obl(put, gas)
cc(case, and)
amod(rate, electric)
compound(rate, utility)
compound(case, rate)
obl(put, case)
punct(call, .)
advmod(make, here)
det(attempt, no)
nsubj:pass(make, attempt)
aux:pass(make, be)
root(ROOT, make)
punct(make, ,)
advmod(make, first)
mark(determine, to)
advcl(make, determine)
case(cost, out)
punct(out, -)
case(pocket, of)
punct(pocket, -)
compound(cost, pocket)
cc(marginal, or)
conj(pocket, marginal)
obj(determine, cost)
cc(superimpose, and)
advmod(superimpose, then)
mark(superimpose, to)
conj(determine, superimpose)
case(cost, on)
det(cost, these)
obl(superimpose, cost)
punct(distribute, ``)
advmod(distribute, reasonably)
amod(residue, distribute)
punct(distribute, '')
obj(superimpose, residue)
case(cost, of)
amod(cost, total)
nmod(residue, cost)
punct(make, .)
advmod(treat, instead)
punct(treat, ,)
nsubj:pass(treat, all)
case(cost, of)
det(cost, the)
amod(cost, total)
nmod(all, cost)
aux:pass(treat, be)
root(ROOT, treat)
case(cost, as)
amod(cost, variable)
obl(treat, cost)
punct(treat, ,)
mark(divide, although)
det(cost, these)
nsubj:pass(divide, cost)
aux:pass(divide, be)
advcl(treat, divide)
case(cost, into)
obl(divide, cost)
nsubj:pass(deem, that)
aux:pass(deem, be)
acl:relcl(cost, deem)
mark(function, to)
cop(function, be)
xcomp(deem, function)
case(variable, of)
amod(variable, different)
nmod(function, variable)
punct(treat, . )
advmod(mean, moreover)
punct(mean, ,)
mark(mean, whereas)
case(parlance, in)
compound(Commission, Interstate)
compound(Commission, commerce)
compound(parlance, Commission)
obl(mean, parlance)
punct(cost, ``)
amod(cost, variable)
appos(parlance, cost)
punct(cost, '')
root(ROOT, mean)
det(cost, a)
obj(mean, cost)
acl(cost, deem)
mark(vary, to)
xcomp(deem, vary)
case(proportion, in)
amod(proportion, direct)
obl(vary, proportion)
case(change, to)
nmod(proportion, change)
case(rate, in)
nmod(change, rate)
case(output, of)
nmod(rate, output)
punct(type, ,)
case(type, in)
det(type, the)
obl(vary, type)
case(analysis, of)
nmod(type, analysis)
advmod(type, now)
case(review, under)
nmod(type, review)
punct(cost, ``)
amod(cost, variable)
appos(review, cost)
punct(cost, '')
aux(use, have)
aux:pass(use, be)
acl:relcl(review, use)
advmod(broadly, more)
advmod(use, broadly)
punct(use, ,)
advmod(use, so)
mark(cover, as)
mark(cover, to)
advcl(use, cover)
obj(cover, cost)
nsubj:pass(use, which)
punct(function, ,)
mark(function, while)
det(function, a)
nsubj(function, function)
case(variable, of)
det(variable, some)
nummod(variable, one)
nmod(function, variable)
punct(output, ()
case(output, such)
fixed(such, as)
nmod(variable, output)
case(energy, of)
nmod(output, energy)
punct(number, ,)
cc(number, or)
conj(output, number)
case(customer, of)
nmod(number, customer)
punct(output, ))
punct(function, ,)
cop(function, be)
advmod(function, not)
advmod(function, necessarily)
det(function, a)
amod(function, linear)
conj(use, function)
punct(use, .)
mark(note, as)
advmod(note, already)
advcl(divide, note)
case(paragraph, in)
det(paragraph, a)
amod(paragraph, earlier)
obl(note, paragraph)
punct(divide, ,)
det(analysis, the)
advmod(familiar, more)
amod(analysis, familiar)
compound(analysis, cost)
nsubj(divide, analysis)
case(enterprise, of)
compound(enterprise, utility)
nmod(analysis, enterprise)
cc(system, or)
compound(system, utility)
conj(enterprise, system)
root(ROOT, divide)
det(cost, the)
amod(cost, total)
obj(divide, cost)
case(number, among)
det(number, a)
nmod(cost, number)
case(class, of)
amod(class, major)
nmod(number, class)
case(service, of)
nmod(class, service)
punct(class, ,)
case(residential, such)
fixed(such, as)
nmod(class, residential)
punct(commercial, ,)
conj(residential, commercial)
punct(power, ,)
amod(power, industrial)
conj(residential, power)
punct(lighting, ,)
compound(lighting, street)
conj(residential, lighting)
punct(etc, ,)
list(residential, etc)
punct(divide, .)
punct(divide, .)
root(ROOT, this)
punct(this, ``)
amod(division, grand)
nsubj(permit, division)
punct(permit, '')
root(ROOT, permit)
amod(cost, many)
obj(permit, cost)
mark(assign, to)
aux:pass(assign, be)
acl(cost, assign)
case(entirety, in)
nmod:poss(entirety, they)
obl(assign, entirety)
case(class, to)
det(class, some)
nummod(class, one)
nmod(entirety, class)
punct(assign, ,)
case(lighting, such)
fixed(such, as)
compound(lighting, street)
nmod(class, lighting)
punct(exclude, ,)
cc(exclude, or)
advmod(exclude, at)
fixed(at, least)
mark(exclude, to)
aux:pass(exclude, be)
conj(lighting, exclude)
advmod(exclude, completely)
case(class, from)
det(class, some)
amod(class, important)
obl(exclude, class)
cc(class, or)
conj(class, class)
punct(permit, .)
amod(tension, high)
punct(tension, -)
compound(service, tension)
amod(service, industrial)
compound(service, power)
nsubj:pass(charge, service)
punct(charge, ,)
case(example, for)
obl(charge, example)
punct(charge, ,)
aux(charge, would)
advmod(charge, not)
aux:pass(charge, be)
root(ROOT, charge)
case(share, with)
det(share, any)
obl(charge, share)
case(cost, of)
det(cost, the)
compound(cost, maintenance)
nmod(share, cost)
cc(cost, or)
amod(cost, capital)
conj(cost, cost)
case(line, of)
det(line, the)
amod(tension, low)
punct(tension, -)
compound(distribution, tension)
compound(line, distribution)
nmod(cost, line)
punct(charge, .)
cc(common, but)
det(portion, the)
amod(portion, major)
nsubj(common, portion)
case(cost, of)
det(cost, the)
amod(cost, total)
nmod(portion, cost)
case(business, of)
det(business, a)
compound(business, utility)
nmod(cost, business)
cop(common, be)
root(ROOT, common)
cc(joint, or)
conj(common, joint)
case(all, to)
obl(common, all)
punct(class, ,)
cc(class, or)
advmod(all, nearly)
det(class, all)
punct(class, ,)
conj(common, class)
case(customer, of)
nmod(class, customer)
punct(common, ;)
punct(common, ;)
cc(apportion, and)
det(cost, these)
nsubj:pass(apportion, cost)
aux(apportion, must)
advmod(apportion, somehow)
aux:pass(apportion, be)
conj(common, apportion)
case(class, among)
det(class, the)
amod(class, various)
obl(apportion, class)
cc(reapportion, and)
advmod(reapportion, then)
aux(reapportion, must)
advmod(reapportion, somehow)
aux:pass(reapportion, be)
conj(apportion, reapportion)
case(unit, among)
det(unit, the)
obl(reapportion, unit)
case(service, of)
nmod(unit, service)
mark(report, in)
fixed(in, order)
mark(report, to)
advcl(reapportion, report)
compound(cost, unit)
obj(report, cost)
nsubj(serve, that)
aux(serve, can)
acl:relcl(cost, serve)
case(measure, as)
amod(measure, tentative)
obl(serve, measure)
case(rate, of)
amod(rate, reasonable)
nmod(measure, rate)
punct(common, .)
det(basis, the)
amod(basis, general)
nsubj:pass(illustrate, basis)
case(which, on)
obl(assign, which)
det(cost, these)
amod(cost, common)
nsubj:pass(assign, cost)
aux:pass(assign, be)
acl:relcl(basis, assign)
case(unit, to)
advmod(measure, differently)
amod(unit, measure)
obl(assign, unit)
case(service, of)
nmod(unit, service)
aux(illustrate, will)
aux:pass(illustrate, be)
root(ROOT, illustrate)
case(problem, by)
det(problem, the)
amod(problem, follow)
advmod(simplify, highly)
amod(problem, simplify)
obl(illustrate, problem)
case(analysis, of)
det(analysis, a)
amod(utility, electric)
punct(utility, -)
compound(analysis, utility)
compound(analysis, cost)
nmod(problem, analysis)
punct(illustrate, .)
cc(distinguish, but)
mark(turn, before)
advcl(distinguish, turn)
case(example, to)
det(example, this)
obl(turn, example)
punct(distinguish, ,)
nsubj(distinguish, we)
aux(distinguish, must)
root(ROOT, distinguish)
nummod(subtype, two)
obj(distinguish, subtype)
case(analysis, of)
nmod(subtype, analysis)
punct(subtype, ,)
nsubj(belong, both)
case(which, of)
nmod(both, which)
acl:relcl(subtype, belong)
case(type, to)
det(type, the)
amod(step, single)
punct(step, -)
compound(type, step)
obl(belong, type)
cc(type, rather)
fixed(rather, than)
fixed(rather, to)
det(type, the)
amod(step, double)
punct(step, -)
compound(type, step)
conj(type, type)
punct(distinguish, .)
case(subtype, in)
det(subtype, the)
amod(subtype, first)
obl(distribute, subtype)
punct(distribute, ,)
det(analyst, the)
nsubj(distribute, analyst)
punct(analyst, ()
case(practice, follow)
det(practice, the)
nmod(analyst, practice)
case(analysis, of)
compound(analysis, railroad)
nmod(practice, analysis)
case(respect, in)
det(respect, this)
amod(respect, particular)
nmod(analysis, respect)
punct(practice, ))
root(ROOT, distribute)
cc:preconj(cost, both)
amod(cost, total)
compound(cost, operating)
obj(distribute, cost)
cc(cost, and)
amod(cost, total)
amod(cost, annual)
compound(cost, capital)
conj(cost, cost)
punct(allowance, ()
case(allowance, include)
det(allowance, a)
nmod(cost, allowance)
case(cost, for)
punct(cost, ``)
nmod(allowance, cost)
case(capital, of)
nmod(cost, capital)
punct(cost, '')
cc(rate, or)
punct(rate, ``)
amod(rate, fair)
conj(cost, rate)
case(return, of)
nmod(rate, return)
punct(rate, '')
punct(rate, ))
case(class, among)
det(class, the)
amod(class, different)
nmod(cost, class)
cc(unit, and)
conj(class, unit)
case(service, of)
nmod(unit, service)
punct(distribute, .)
advmod(say, here)
punct(say, ,)
det(apportionment, a)
nsubj(say, apportionment)
punct(say, ,)
root(ROOT, say)
punct(say, ,)
case($, of)
obl(say, $)
nummod($, 5,000,000)
case(cost, of)
det(cost, the)
amod(cost, total)
nmod($, cost)
case(service, to)
amod(service, residential)
nmod(cost, service)
mark(include, as)
det(class, a)
nsubj(include, class)
aux(include, would)
advcl(say, include)
det(allowance, a)
obj(include, allowance)
case(cent, of)
advmod(cent, perhaps)
nummod(cent, 6)
compound(cent, per)
nmod(allowance, cent)
case(cost, as)
det(cost, the)
nmod(cent, cost)
mark(deem, of)
det(capital, whatever)
nsubj:pass(deem, capital)
aux:pass(deem, be)
acl(cost, deem)
mark(devote, to)
aux(devote, have)
aux:pass(devote, be)
xcomp(deem, devote)
case(service, to)
det(service, the)
obl(devote, service)
case(consumer, of)
det(consumer, the)
amod(consumer, residential)
nmod(service, consumer)
punct(say, .)
cc(apportion, but)
case(subtype, in)
det(subtype, the)
amod(subtype, second)
obl(apportion, subtype)
punct(subtype, ,)
obj(take, which)
nsubj(take, I)
acl:relcl(subtype, take)
mark(one, to)
cop(one, be)
det(one, the)
xcomp(take, one)
advmod(apply, more)
advmod(apply, frequently)
acl(one, apply)
punct(expense, ,)
cc:preconj(expense, only)
det(expense, the)
compound(expense, operating)
obj(apply, expense)
cc(cost, and)
advmod(cost, not)
det(cost, the)
punct(cost, ``)
conj(expense, cost)
case(capital, of)
nmod(cost, capital)
punct(cost, '')
cc(return, or)
punct(return, ``)
amod(return, fair)
conj(cost, return)
punct(return, '')
aux:pass(apportion, be)
root(ROOT, apportion)
advmod(apportion, directly)
case(class, among)
det(class, the)
amod(class, various)
obl(apportion, class)
case(service, of)
nmod(class, service)
punct(apportion, . )
mark(sure, to)
cop(sure, be)
advcl(apportion, sure)
punct(apportion, ,)
det(investment, the)
compound(investment, capital)
nsubj:pass(apportion, investment)
advmod(investment, in)
punct(value, ()
cc(value, or)
punct(value, ,)
advmod(value, alternatively)
punct(value, ,)
det(value, the)
amod(value, estimate)
punct(value, ``)
amod(value, fair)
conj(investment, value)
punct(value, '')
nmod(value, of)
punct(value, ))
det(plant, the)
nsubj:pass(apportion, plant)
cc(equipment, and)
conj(plant, equipment)
aux:pass(apportion, be)
root(ROOT, apportion)
case(class, among)
det(class, the)
amod(class, different)
obl(apportion, class)
punct(apportion, ,)
mark(revenue, as)
cop(revenue, be)
advmod(revenue, also)
det(revenue, the)
amod(revenue, gross)
advcl(apportion, revenue)
acl(revenue, receive)
case(sale, from)
det(sale, the)
obl(receive, sale)
case(service, of)
det(service, the)
amod(service, different)
nmod(sale, service)
punct(apportion, .)
cc(report, but)
det(excess, any)
amod(excess, result)
nsubj:pass(report, excess)
case(revenue, of)
nmod(excess, revenue)
acl(revenue, receive)
case(class, from)
det(class, a)
amod(class, give)
obl(receive, class)
case(service, of)
nmod(class, service)
case(cost, over)
det(cost, the)
compound(cost, operating)
nmod(service, cost)
acl(cost, impute)
case(class, to)
det(class, this)
obl(impute, class)
aux:pass(report, be)
root(ROOT, report)
case(return, as)
det(return, a)
punct(return, ``)
obl(realize, return)
punct(return, '')
xcomp(report, realize)
case(investment, on)
det(investment, the)
amod(investment, capital)
obl(realize, investment)
acl(investment, attribute)
case(service, to)
det(service, the)
amod(service, same)
obl(attribute, service)
punct(attribute, .)
advmod(realize, thus)
punct(report, ,)
case(year, during)
det(year, any)
amod(year, give)
obl($, year)
punct(a, ()
nummod($, a)
punct(a, ))
mark($, if)
det(revenue, the)
nsubj($, revenue)
case(service, from)
det(service, the)
amod(service, residential)
nmod(revenue, service)
cop($, be)
advcl(report, $)
nummod($, 7,000,000)
punct($, ,)
punct(b, ()
nummod(come, b)
punct(b, ))
mark(come, if)
det(expense, the)
compound(expense, operating)
nsubj(come, expense)
acl(expense, impute)
case(class, to)
det(class, this)
obl(impute, class)
case(service, of)
nmod(class, service)
advcl($, come)
case($, to)
obl(come, $)
nummod($, 5,000,000)
punct(c, ,)
cc(c, and)
punct(c, ()
conj($, c)
punct(c, ))
mark(amount, if)
det(investment, the)
compound(investment, net)
nsubj(amount, investment)
case(value, in)
punct(value, ()
cc(value, or)
conj(investment, value)
nmod(value, of)
punct(value, ))
det(plant, the)
appos(investment, plant)
cc(equipment, and)
conj(plant, equipment)
acl(plant, deem)
xcomp(deem, devote)
case(service, to)
det(service, this)
obl(devote, service)
advcl(report, amount)
case($, to)
obl(amount, $)
nummod($, 30,000,000)
punct(report, ,)
det(analyst, the)
compound(analyst, cost)
nsubj(report, analyst)
aux(report, will)
conj(report, report)
mark(yield, that)
amod(service, residential)
nsubj(yield, service)
punct(service, ,)
case(aggregate, in)
det(aggregate, the)
nmod(service, aggregate)
punct(yield, ,)
aux(yield, have)
ccomp(report, yield)
det(return, a)
obj(yield, return)
case($, of)
nmod(return, $)
nummod($, 2,000,000)
cc(6, or)
conj($, 6)
case(2/, -)
nmod(6, 2/)
nummod(cent, 3)
compound(cent, per)
nmod(return, cent)
punct(report, .)
amod(service, other)
nsubj(show, service)
aux(show, will)
root(ROOT, show)
amod(rate, different)
obj(show, rate)
case(return, of)
nmod(rate, return)
punct(show, ,)
nsubj(lower, some)
advmod(lower, probably)
advmod(lower, much)
parataxis(show, lower)
cc(higher, and)
nsubj(higher, some)
conj(lower, higher)
punct(show, .)
expl(be, there)
root(ROOT, be)
amod(reason, obvious)
nsubj(be, reason)
case(convenience, of)
nmod(reason, convenience)
case(practice, for)
det(practice, this)
nmod(reason, practice)
mark(exclude, of)
acl(practice, exclude)
punct(cost, ``)
obj(exclude, cost)
case(capital, of)
nmod(cost, capital)
punct(cost, '')
case(apportionment, from)
det(apportionment, the)
amod(apportionment, direct)
obl(exclude, apportionment)
case(cost, of)
amod(cost, annual)
nmod(apportionment, cost)
case(class, among)
det(class, the)
amod(class, different)
nmod(cost, class)
case(service, of)
nmod(class, service)
punct(avoidance, --)
advmod(avoidance, notably)
punct(avoidance, ,)
det(avoidance, the)
parataxis(be, avoidance)
case(question, of)
det(question, the)
amod(question, controversial)
nmod(avoidance, question)
det(rate, what)
nsubj:pass(hold, rate)
case(return, of)
nmod(rate, return)
aux(hold, should)
aux:pass(hold, be)
acl:relcl(question, hold)
mark(constitute, to)
advcl(hold, constitute)
punct(cost, ``)
obj(constitute, cost)
case(capital, of)
nmod(cost, capital)
punct(cost, '')
cc(rate, or)
punct(rate, ``)
amod(rate, fair)
conj(cost, rate)
case(return, of)
nmod(rate, return)
punct(rate, '')
punct(likely, .)
cc(likely, but)
det(practice, the)
nsubj(likely, practice)
cop(likely, be)
conj(be, likely)
mark(misleading, to)
cop(misleading, be)
xcomp(likely, misleading)
punct(likely, ,)
mark(seem, since)
nsubj(seem, it)
aux(seem, may)
advcl(likely, seem)
mark(support, to)
xcomp(seem, support)
det(conclusion, a)
obj(support, conclusion)
nsubj(compensatory, that)
punct(compensatory, ,)
advmod(long, as)
advmod(compensatory, long)
mark(cover, as)
det(revenue, the)
nsubj(cover, revenue)
case(class, from)
det(class, any)
nmod(revenue, class)
case(service, of)
nmod(class, service)
acl(conclusion, cover)
det(expense, the)
amod(expense, impute)
compound(expense, operating)
obj(cover, expense)
cc(return, plus)
det(return, some)
conj(expense, return)
case(investment, on)
amod(investment, capital)
nmod(return, investment)
punct(low, ,)
advmod(low, however)
advmod(return, low)
punct(compensatory, ,)
det(rate, the)
nsubj(compensatory, rate)
case(charge, of)
nmod(rate, charge)
case(service, for)
det(service, this)
nmod(charge, service)
cop(compensatory, be)
conj(cover, compensatory)
punct(be, .)
advcl(unwarranted, needless)
mark(say, to)
csubj(needless, say)
punct(unwarranted, ,)
det(inference, any)
amod(inference, such)
nsubj(unwarranted, inference)
aux(unwarranted, would)
cop(unwarranted, be)
advmod(unwarranted, quite)
root(ROOT, unwarranted)
punct(unwarranted, .)
case(reason, for)
det(reason, the)
obl(assume, reason)
advmod(suggest, just)
advcl(assume, suggest)
punct(assume, ,)
nsubj(assume, I)
aux(assume, shall)
root(ROOT, assume)
det(use, the)
obj(assume, use)
case(subtype, of)
det(subtype, the)
amod(subtype, first)
nmod(use, subtype)
case(apportionment, of)
advmod(distribute, fully)
amod(apportionment, distribute)
compound(apportionment, cost)
nmod(subtype, apportionment)
case(example, in)
det(example, the)
amod(example, follow)
amod(example, simplify)
nmod(apportionment, example)
punct(assume, .)
nsubj(be, that)
root(ROOT, be)
mark(say, to)
ccomp(be, say)
punct(say, ,)
det(allowance, a)
nsubj:pass(assume, allowance)
case(cost, for)
punct(cost, ``)
nmod(allowance, cost)
case(capital, of)
nmod(cost, capital)
punct(cost, '')
aux(assume, will)
aux:pass(assume, be)
ccomp(say, assume)
mark(include, to)
aux:pass(include, be)
xcomp(assume, include)
advmod(include, directly)
case(apportionment, in)
det(apportionment, the)
compound(apportionment, cost)
obl(include, apportionment)
punct(apportionment, .)
nummod(part, three)
punct(part, -)
compound(analysis, part)
appos(apportionment, analysis)
case(cost, of)
det(cost, the)
nmod(analysis, cost)
case(business, of)
det(business, a)
amod(business, electric)
compound(business, utility)
nmod(cost, business)
mark(simplify, in)
fixed(in, order)
mark(simplify, to)
advcl(include, simplify)
det(exposition, the)
obj(simplify, exposition)
case(analysis, of)
det(analysis, a)
amod(analysis, typical)
advmod(apportion, fully)
amod(analysis, apportion)
compound(analysis, cost)
nmod(exposition, analysis)
punct(let, ,)
acl(exposition, let)
obj(let, we)
xcomp(let, assume)
det(application, the)
obj(let, application)
case(analysis, of)
det(analysis, the)
nmod(application, analysis)
case(company, to)
det(company, a)
amod(company, electric)
compound(company, utility)
nmod(analysis, company)
acl(analysis, supply)
det(city, a)
amod(city, single)
obj(supply, city)
case(power, with)
nmod(city, power)
acl(power, generate)
case(plant, by)
nmod:poss(plant, its)
amod(plant, own)
compound(generation, steam)
punct(generation, -)
compound(plant, generation)
obl(generate, plant)
punct(be, .)
root(ROOT, let)
obj(let, we)
advmod(assume, also)
xcomp(let, assume)
det(existence, the)
obj(assume, existence)
case(class, of)
advmod(class, only)
nummod(class, one)
nmod(existence, class)
cc(type, or)
conj(class, type)
case(service, of)
nmod(type, service)
punct(existence, ,)
nsubj:pass(supply, all)
case(which, of)
obl(supply, which)
aux:pass(supply, be)
acl:relcl(existence, supply)
case(voltage, at)
det(voltage, the)
amod(voltage, same)
obl(supply, voltage)
punct(phase, ,)
conj(voltage, phase)
punct(etc., ,)
conj(voltage, etc.)
case(customer, to)
amod(customer, residential)
punct(commercial, ,)
conj(residential, commercial)
punct(industrial, ,)
cc(industrial, and)
conj(residential, industrial)
nmod(voltage, customer)
punct(let, .)
det(assumption, this)
amod(assumption, latter)
nsubj(permit, assumption)
aux(permit, will)
root(ROOT, permit)
obj(permit, we)
mark(center, to)
xcomp(permit, center)
obj(center, attention)
case(aspect, on)
det(aspect, the)
advmod(controversial, most)
amod(aspect, controversial)
obl(center, aspect)
case(analysis, of)
amod(analysis, modern)
amod(analysis, public)
compound(cost, utility)
compound(analysis, cost)
nmod(aspect, analysis)
punct(aspect, --)
det(distinction, the)
appos(aspect, distinction)
case(cost, among)
nmod(distinction, cost)
nsubj(function, that)
cop(function, be)
acl:relcl(cost, function)
case(output, of)
nmod(function, output)
case(service, of)
det(service, the)
amod(service, same)
nmod(output, service)
acl(service, measure)
case(dimension, along)
amod(dimension, different)
obl(measure, dimension)
punct(permit, .)
mark(supply, since)
det(company, the)
nsubj(supply, company)
case(review, under)
nmod(company, review)
aux(supply, be)
advcl(suppose, supply)
obj(supply, what)
nsubj(here, we)
cop(here, be)
ccomp(supply, here)
case(kind, regard)
case(kind, as)
advmod(kind, only)
nummod(kind, one)
obl(here, kind)
case(service, of)
nmod(kind, service)
punct(suppose, ,)
nsubj(suppose, we)
aux(suppose, might)
root(ROOT, suppose)
mark(simple, that)
det(problem, the)
nsubj(simple, problem)
case(apportionment, of)
amod(apportionment, total)
compound(apportionment, cost)
nmod(problem, apportionment)
aux(simple, would)
cop(simple, be)
advmod(simple, very)
ccomp(suppose, simple)
punct(simple, ;)
punct(suppose, ;)
advmod(limit, indeed)
punct(limit, ,)
mark(limit, that)
nsubj:pass(limit, it)
aux(limit, would)
aux:pass(limit, be)
parataxis(simple, limit)
case(finding, to)
det(finding, a)
obl(limit, finding)
case(cost, of)
det(cost, the)
amod(cost, total)
amod(cost, annual)
compound(cost, operating)
cc(capital, and)
conj(operating, capital)
nmod(finding, cost)
case(business, of)
det(business, the)
nmod(cost, business)
punct(finding, ,)
acl(finding, follow)
case(calculation, by)
det(calculation, a)
obl(follow, calculation)
case(total, of)
det(total, this)
nmod(calculation, total)
case(term, in)
nmod(calculation, term)
case(cost, of)
amod(cost, annual)
nmod(term, cost)
case(hour, per)
compound(hour, kilowatt)
punct(hour, -)
nmod(cost, hour)
case(consumption, of)
nmod(hour, consumption)
punct(suppose, .)
case(fact, in)
obl(simple, fact)
punct(simple, ,)
advmod(simple, however)
punct(simple, ,)
det(problem, the)
nsubj(simple, problem)
cop(simple, be)
advmod(simple, not)
advmod(simple, so)
root(ROOT, simple)
punct(simple, .)
case(statement, for)
det(statement, a)
obl(ignore, statement)
case(cost, of)
nmod(statement, cost)
case(hour, per)
compound(hour, kilowatt)
punct(hour, -)
nmod(cost, hour)
aux(ignore, would)
root(ROOT, ignore)
det(fact, the)
obj(ignore, fact)
mark(function, that)
nsubj(function, many)
case(cost, of)
det(cost, these)
nmod(many, cost)
cop(function, be)
advmod(function, not)
det(function, a)
acl(fact, function)
case(output, of)
compound(hour, kilowatt)
punct(hour, -)
compound(output, hour)
nmod(function, output)
punct(output, ()
cc(consumption, or)
conj(output, consumption)
punct(output, ))
case(energy, of)
nmod(output, energy)
punct(ignore, . )
det(recognition, a)
nsubj:pass(require, recognition)
case(function, of)
amod(function, multiple)
compound(function, cost)
nmod(recognition, function)
aux:pass(require, be)
advmod(require, therefore)
root(ROOT, require)
punct(require, .)
det(division, the)
amod(division, simplest)
nsubj(division, division)
punct(one, ,)
cc(one, and)
det(one, the)
conj(division, one)
advmod(frequently, most)
advmod(use, frequently)
acl:relcl(one, use)
punct(subdivision, ()
case(subdivision, with)
obl(use, subdivision)
punct(subdivision, ))
case(gas, in)
obl(use, gas)
cc(case, and)
amod(rate, electric)
compound(case, rate)
conj(gas, case)
punct(division, ,)
cop(division, be)
det(division, a)
amod(division, threefold)
root(ROOT, division)
case(cost, of)
det(cost, the)
amod(cost, total)
compound(cost, operating)
cc(capital, and)
conj(operating, capital)
nmod(division, cost)
case(cost, into)
punct(cost, ``)
compound(cost, customer)
nmod(cost, cost)
punct(cost, '')
punct(cost, ,)
punct(energy, ``)
appos(cost, energy)
punct(energy, '')
cc(cost, or)
punct(cost, ``)
amod(cost, volumetric)
conj(energy, cost)
punct(cost, '')
punct(demand, ,)
cc(demand, and)
punct(demand, ``)
conj(cost, demand)
punct(demand, '')
cc(capacity, or)
punct(capacity, ``)
nsubj(cost, capacity)
punct(capacity, '')
acl:relcl(demand, cost)
punct(cost, .)
mark(be, if)
det(division, this)
amod(division, threefold)
nsubj(be, division)
case(cost, of)
nmod(division, cost)
advcl(result, be)
mark(have, to)
ccomp(be, have)
nmod:poss(counterpart, its)
obj(have, counterpart)
case(rate, in)
det(rate, the)
amod(rate, actual)
nmod(counterpart, rate)
case(charge, of)
nmod(rate, charge)
case(service, for)
nmod(charge, service)
punct(have, ,)
mark(have, as)
nsubj(have, it)
advmod(have, actually)
aux(have, do)
advcl(result, have)
case(rate, in)
det(rate, some)
obl(have, rate)
punct(result, ,)
nsubj(result, there)
aux(result, would)
root(ROOT, result)
det(rate, a)
nummod(part, three)
punct(part, -)
compound(rate, part)
obj(result, rate)
case(class, for)
det(class, any)
nummod(class, one)
nmod(rate, class)
case(service, of)
nmod(class, service)
punct(rate, .)
case(example, for)
obl(sum, example)
punct(sum, ,)
det(bill, the)
amod(bill, monthly)
nsubj(sum, bill)
case(consumer, of)
det(consumer, a)
amod(consumer, residential)
nmod(bill, consumer)
aux(sum, might)
cop(sum, be)
det(sum, the)
conj(result, sum)
case(charge, of)
det(charge, a)
compound(charge, $)
nummod($, 1)
compound(charge, customer)
nmod(sum, charge)
punct(charge, ,)
det(charge, a)
compound(charge, $)
compound($, 5)
appos(charge, charge)
case(hour, for)
nummod(hour, 250)
compound(hour, kilowatt)
punct(hour, -)
nmod(charge, hour)
case(energy, of)
nmod(hour, energy)
case(hour, at)
case(hour, per)
compound(hour, kilowatt)
punct(hour, -)
nmod(hour, hour)
punct(charge, ,)
cc(charge, and)
det(charge, a)
compound(charge, $)
nummod($, 2)
conj(charge, charge)
case(demand, for)
det(demand, a)
amod(demand, maximum)
nmod(charge, demand)
case(kilowatt, of)
nummod(kilowatt, 2)
nmod(demand, kilowatt)
case(month, during)
det(month, the)
nmod(demand, month)
case(rate, at)
det(rate, the)
nmod(demand, rate)
case($, of)
nmod(rate, $)
nummod($, 1)
case(kilowatt, per)
nmod($, kilowatt)
punct(bill, --)
det(bill, a)
amod(bill, total)
appos(charge, bill)
case($, of)
nmod(bill, $)
compound($, 8)
case(month, for)
det(month, that)
nmod($, month)
punct(bill, .)
cc(lie, but)
nmod:poss(interest, we)
amod(interest, present)
nsubj(lie, interest)
root(ROOT, lie)
case(measurement, in)
det(measurement, the)
obl(lie, measurement)
case(cost, of)
nmod(measurement, cost)
case(service, of)
nmod(cost, service)
punct(rate, ,)
cc(rate, and)
advmod(indirectly, only)
advmod(rate, indirectly)
case(rate, in)
conj(measurement, rate)
nsubj:pass(design, that)
aux(design, may)
cc(design, or)
aux(design, may)
advmod(design, not)
aux:pass(design, be)
acl:relcl(rate, design)
mark(cover, to)
advcl(design, cover)
det(cost, these)
obj(cover, cost)
punct(lie, .)
root(ROOT, let)
obj(let, we)
advmod(consider, therefore)
xcomp(let, consider)
obj(consider, each)
case(type, of)
det(type, the)
nummod(type, three)
nmod(each, type)
case(cost, of)
nmod(type, cost)
case(turn, in)
nmod(type, turn)
punct(consider, ,)
advcl(consider, recognize)
mark(use, that)
det(classification, this)
amod(classification, simplify)
nsubj:pass(use, classification)
aux:pass(use, be)
ccomp(recognize, use)
advmod(use, only)
case(purpose, for)
amod(purpose, illustrative)
obl(use, purpose)
punct(vary, ;)
punct(let, ;)
nsubj(vary, cost)
advmod(vary, actually)
parataxis(let, vary)
case(way, in)
advmod(more, much)
advmod(complex, more)
amod(way, complex)
obl(vary, way)
punct(1, . )
nummod(cost, 1)
punct(1, .)
det(customer, the)
nsubj(cost, customer)
parataxis(vary, cost)
obj(cost, these)
cop(cost, be)
det(cost, those)
compound(cost, operating)
cc(capital, and)
conj(operating, capital)
obj(cost, cost)
acl(cost, find)
mark(vary, to)
xcomp(find, vary)
case(number, with)
obl(vary, number)
case(customer, of)
nmod(number, customer)
advmod(vary, regardless)
punct(consumption, ,)
cc(regardless, or)
advmod(regardless, almost)
advmod(consumption, regardless)
punct(consumption, ,)
case(consumption, of)
compound(consumption, power)
nmod(number, consumption)
punct(let, .)
csubj(cost, include)
case(minimum, as)
det(minimum, a)
obl(include, minimum)
cop(cost, be)
det(cost, the)
root(ROOT, cost)
case(metering, of)
nmod(cost, metering)
cc(billing, and)
conj(metering, billing)
case(expense, along)
case(expense, with)
det(expense, whatever)
amod(expense, other)
obl(incur, expense)
det(company, the)
nsubj(incur, company)
aux(incur, must)
acl:relcl(cost, incur)
mark(take, in)
advcl(incur, take)
compound:prt(take, on)
det(consumer, another)
obj(take, consumer)
punct(cost, .)
det(cost, these)
amod(cost, minimum)
nsubj(come, cost)
aux(come, may)
root(ROOT, come)
case($, to)
obl(come, $)
nummod($, 1)
case(month, per)
nmod($, month)
punct(come, ,)
advmod(come, more)
cc(less, or)
conj(more, less)
punct(come, ,)
case(customer, for)
amod(customer, residential)
cc(small, and)
conj(residential, small)
amod(customer, commercial)
obl(more, customer)
punct(come, ,)
mark(higher, although)
nsubj(higher, they)
cop(higher, be)
advmod(higher, substantially)
advcl(come, higher)
case(user, for)
amod(user, large)
amod(user, industrial)
obl(higher, user)
punct(user, ,)
nsubj(require, who)
acl:relcl(user, require)
advmod(costly, more)
amod(connection, costly)
obj(require, connection)
cc(device, and)
compound(device, metering)
conj(connection, device)
punct(require, .)
mark(charge, while)
nsubj:pass(charge, cost)
case(order, on)
det(order, this)
nmod(cost, order)
aux:pass(charge, be)
advmod(charge, sometimes)
advmod(charge, separately)
advcl(require, charge)
case(rate, for)
case(rate, in)
amod(rate, residential)
cc(commercial, and)
conj(residential, commercial)
obl(charge, rate)
punct(charge, ,)
case(form, in)
det(form, the)
obl(charge, form)
case(charge, of)
det(charge, a)
amod(charge, mere)
punct(charge, ``)
compound(charge, service)
nmod(form, charge)
punct(charge, '')
punct(cover, ,)
nsubj:pass(cover, they)
aux:pass(cover, be)
advmod(frequently, more)
advmod(wholly, frequently)
advmod(cover, wholly)
cc(partly, or)
conj(wholly, partly)
acl:relcl(charge, cover)
case(charge, by)
det(charge, a)
amod(charge, minimum)
obl(cover, charge)
nsubj(entitle, which)
acl:relcl(charge, entitle)
det(consumer, the)
obj(entitle, consumer)
case(amount, to)
det(amount, a)
advmod(small, very)
amod(amount, small)
obl(entitle, amount)
case(gas, of)
nmod(amount, gas)
cc(electricity, or)
conj(gas, electricity)
case(payment, with)
det(payment, no)
amod(payment, further)
nmod(amount, payment)
punct(come, .)
cc(arise, but)
det(aspect, the)
advmod(controversial, really)
amod(aspect, controversial)
nsubj(arise, aspect)
case(imputation, of)
compound(cost, customer)
punct(cost, -)
compound(imputation, cost)
nmod(aspect, imputation)
root(ROOT, arise)
case(practice, because)
fixed(because, of)
det(analyst, the)
compound(analyst, cost)
nmod:poss(practice, analyst)
case(analyst, 's)
amod(practice, frequent)
obl(arise, practice)
case(include, of)
nmod(practice, include)
punct(cost, ,)
advmod(just, not)
advmod(cost, just)
det(cost, those)
conj(practice, cost)
nsubj:pass(earmark, that)
aux(earmark, can)
aux:pass(earmark, be)
advmod(earmark, definitely)
acl:relcl(cost, earmark)
mark(incur, as)
advcl(earmark, incur)
case(benefit, for)
det(benefit, the)
obl(incur, benefit)
case(customer, of)
amod(customer, specific)
nmod(benefit, customer)
cc(fraction, but)
advmod(fraction, also)
det(fraction, a)
amod(fraction, substantial)
conj(benefit, fraction)
case(maintenance, of)
det(maintenance, the)
amod(maintenance, annual)
nmod(fraction, maintenance)
cc(cost, and)
amod(cost, capital)
conj(maintenance, cost)
case(system, of)
det(system, the)
amod(system, secondary)
punct(voltage, ()
amod(voltage, low)
punct(voltage, -)
compound(system, voltage)
punct(voltage, ))
compound(system, distribution)
nmod(cost, system)
punct(system, --)
det(fraction, a)
appos(system, fraction)
amod(fraction, equal)
case(cost, to)
det(cost, the)
amod(cost, estimate)
amod(cost, annual)
obl(equal, cost)
case(system, of)
det(system, a)
amod(system, hypothetical)
nmod(cost, system)
case(capacity, of)
amod(capacity, minimum)
nmod(system, capacity)
punct(arise, .)
det(precondition, the)
nsubj(remain, precondition)
case(sociology, of)
nmod(precondition, sociology)
aux(remain, have)
root(ROOT, remain)
advmod(unexamined, largely)
xcomp(remain, unexamined)
case(sociologist, by)
det(sociologist, the)
obl(unexamined, sociologist)
punct(remain, .)
case(number, like)
amod(number, primitive)
obl(take, number)
case(mathematics, in)
nmod(number, mathematics)
punct(take, ,)
det(framework, the)
amod(framework, entire)
amod(framework, axiological)
nsubj:pass(take, framework)
aux:pass(take, be)
root(ROOT, take)
mark(rest, to)
xcomp(take, rest)
case(worth, upon)
nmod:poss(worth, its)
amod(worth, operational)
obl(rest, worth)
punct(take, .)
cc(what, but)
root(ROOT, what)
cop(what, be)
det(worth, the)
amod(worth, operational)
nsubj(what, worth)
case(sociology, of)
det(sociology, a)
nmod(worth, sociology)
nsubj(reproduce, which)
advmod(reproduce, mimetically)
acl:relcl(sociology, reproduce)
det(idea, the)
obj(reproduce, idea)
case(model, of)
amod(model, physical)
nmod(idea, model)
punct(what, ?)
punct(what, ?)
cop(task, be)
expl(task, it)
advmod(task, not)
det(task, the)
root(ROOT, task)
case(philosophy, of)
nmod(task, philosophy)
mark(see, to)
csubj(task, see)
det(meaning, what)
amod(meaning, intelligible)
nsubj:pass(assign, meaning)
aux(assign, can)
aux:pass(assign, be)
ccomp(see, assign)
case(canon, to)
det(canon, the)
advmod(sacred, most)
amod(canon, sacred)
obl(assign, canon)
case(science, in)
amod(science, social)
nmod(canon, science)
punct(task, ?)
punct(task, ?)
nsubj(become, it)
aux(become, have)
root(ROOT, become)
advmod(clear, painfully)
xcomp(become, clear)
mark(response, that)
det(attempt, the)
amod(attempt, very)
nsubj(response, attempt)
mark(make, to)
acl(attempt, make)
det(language, the)
obj(make, language)
case(research, of)
amod(research, social)
nmod(language, research)
amod(language, free)
case(value, of)
obl(free, value)
mark(erect, by)
advcl(free, erect)
amod(model, mathematical)
cc(physical, and)
conj(mathematical, physical)
obj(erect, model)
punct(response, ,)
cop(response, be)
nsubj(response, itself)
det(response, a)
amod(response, condition)
ccomp(clear, response)
case(world, to)
det(world, a)
nmod(response, world)
nsubj(pay, which)
acl:relcl(world, pay)
det(price, a)
compound(price, premium)
obj(pay, price)
case(manipulation, for)
amod(manipulation, technological)
obl(pay, manipulation)
punct(clear, .)
det(push, this)
nsubj(lead, push)
mark(confine, to)
acl(push, confine)
det(study, the)
obj(confine, study)
case(behaviour, of)
amod(behaviour, mass)
nmod(study, behaviour)
case(measurement, to)
det(measurement, the)
nmod(study, measurement)
case(parameter, of)
nmod(measurement, parameter)
acl(parameter, involve)
case(equation, in)
amod(equation, differential)
obl(involve, equation)
aux(lead, have)
root(ROOT, lead)
obj(lead, sociology)
advmod(close, perilously)
amod(sociology, close)
case(reduction, to)
det(reduction, the)
obl(close, reduction)
case(word, of)
det(word, the)
nmod(reduction, word)
punct(mass, ``)
appos(word, mass)
punct(mass, '')
mark(mean, to)
acl(word, mean)
det(group, a)
amod(group, small)
obj(mean, group)
case(which, in)
obl(study, which)
amod(relation, certain)
nsubj:pass(study, relation)
case(pair, between)
det(pair, all)
nmod(relation, pair)
case(individual, of)
nmod(pair, individual)
case(group, in)
det:predet(group, such)
det(group, a)
nmod(pair, group)
aux(study, can)
aux:pass(study, be)
acl:relcl(group, study)
punct(lead, . )
punct(cf., ()
root(ROOT, cf.)
flat(cf., Rapoport)
punct(cf., ,)
nmod:tmod(cf., 1959)
punct(cf., :)
punct(cf., :)
list(cf., Ch.)
nummod(Ch., 11)
punct(cf., .)
punct(cf., ))
advmod(think, here)
nsubj(think, I)
root(ROOT, think)
det(role, the)
nsubj(become, role)
case(philosopher, of)
det(philosopher, the)
nmod(role, philosopher)
ccomp(think, become)
xcomp(become, apparent)
punct(think, .)
det(success, the)
amod(success, simple)
amod(success, pragmatic)
nsubj(need, success)
case(sociology, of)
det(sociology, the)
nmod(success, sociology)
case(group, of)
amod(group, small)
nmod(sociology, group)
root(ROOT, need)
mark(question, to)
aux:pass(question, be)
xcomp(need, question)
punct(need, .)
mark(involve, for)
mark(involve, if)
det(notion, the)
amod(notion, small)
compound(notion, group)
nsubj(involve, notion)
advcl(question, involve)
det(claim, the)
amod(claim, implicit)
obj(involve, claim)
mark(proportion, that)
det(phenomena, the)
nsubj(proportion, phenomena)
case(investigation, of)
amod(investigation, sociological)
nmod(phenomena, investigation)
cop(proportion, be)
case(proportion, of)
amod(proportion, atomic)
cc(subatomic, or)
conj(atomic, subatomic)
acl(claim, proportion)
punct(need, ,)
det(philosopher, the)
nsubj(need, philosopher)
acl:relcl(proportion, need)
mark(know, to)
xcomp(need, know)
det(extent, the)
obj(know, extent)
case(entity, to)
det(entity, which)
amod(entity, such)
nmod(extent, entity)
cop(valid, be)
acl(extent, valid)
punct(need, .)
det(exploration, the)
amod(exploration, mere)
nsubj(offer, exploration)
case(ground, of)
det(ground, the)
amod(ground, unconscious)
nmod(exploration, ground)
case(sociology, of)
amod(day, present)
punct(day, -)
compound(sociology, day)
nmod(ground, sociology)
root(ROOT, offer)
det(vein, a)
amod(vein, rich)
obj(offer, vein)
case(investigation, of)
amod(investigation, philosophical)
cc(logical, and)
conj(philosophical, logical)
nmod(vein, investigation)
punct(offer, . )
punct(cf., ()
root(ROOT, cf.)
flat(cf., Brodbeck)
punct(cf., ,)
amod(cf., 1959)
punct(cf., :)
punct(cf., :)
compound(12, Ch.)
nummod(study, 12)
punct(12, .)
punct(12, ))
det(function, a)
amod(function, parallel)
nsubj(study, function)
case(philosophy, for)
nmod(function, philosophy)
cop(study, be)
det(study, the)
parataxis(cf., study)
case(relation, of)
det(relation, the)
nmod(study, relation)
case(perception, between)
nmod(relation, perception)
advmod(receive, experientially)
acl(perception, receive)
cc(conception, and)
conj(receive, conception)
advmod(form, logically)
conj(receive, form)
punct(study, .)
nsubj(supply, Philosophy)
aux(supply, can)
root(ROOT, supply)
amod(criterion, adequate)
obj(supply, criterion)
mark(mean, of)
acl(criterion, mean)
case(selection, in)
det(selection, the)
obl(mean, selection)
case(category, of)
advmod(viable, socially)
amod(category, viable)
nmod(selection, category)
punct(supply, .)
nsubj(involve, this)
root(ROOT, involve)
det(sift, a)
obj(involve, sift)
case(element, of)
det(element, the)
amod(element, empirical)
cc(rational, and)
conj(empirical, rational)
nmod(sift, element)
acl(element, enter)
case(statement, into)
det(statement, each)
amod(statement, social)
compound(statement, science)
obl(enter, statement)
punct(involve, .)
nmod:poss(sociology, Merton)
case(Merton, 's)
amod(sociology, functional)
nsubj(have, sociology)
aux(have, may)
parataxis(involve, have)
amod(use, great)
amod(use, practical)
obj(have, use)
case(study, in)
det(study, the)
nmod(use, study)
case(culture, of)
amod(culture, different)
nmod(study, culture)
punct(clear, ,)
cc(clear, yet)
nsubj(clear, it)
cop(clear, be)
advmod(clear, perfectly)
conj(involve, clear)
punct(clear, ,)
case(Nagel, as)
obl(clear, Nagel)
punct(1957, ()
appos(Nagel, 1957)
punct(1957, :)
punct(1957, :)
nummod(1957, 247)
case(83, -)
nmod(247, 83)
punct(247, ))
cc(Hempel, and)
conj(247, Hempel)
punct(1959, ()
appos(Hempel, 1959)
punct(1959, :)
appos(1959, : )
root(ROOT, 271)
punct(271, -)
nummod(271, 307)
punct(307, ))
parataxis(271, indicate)
punct(indicate, ,)
mark(build, that)
det(concept, the)
nsubj:pass(build, concept)
case(function, of)
nmod(concept, function)
case(sociology, in)
nmod(function, sociology)
aux(build, have)
aux:pass(build, be)
ccomp(indicate, build)
advmod(build, up)
case(model, from)
amod(model, physiological)
cc(biological, and)
conj(physiological, biological)
obl(build, model)
punct(central, ,)
case(which, in)
obl(central, which)
det(notion, the)
nsubj(central, notion)
case(teleology, of)
nmod(notion, teleology)
punct(i.e., ,)
conj(teleology, i.e.)
punct(purpose, ,)
amod(purpose, metaphysical)
conj(teleology, purpose)
punct(central, ,)
cop(central, be)
conj(build, central)
punct(271, . )
punct(Chapter, ()
punct(Chapter, cf.)
root(ROOT, Chapter)
nummod(Chapter, 9)
punct(Chapter, .)
punct(Chapter, ))
root(ROOT, Functionalism)
mark(consequence, as)
det(credo, a)
amod(credo, sociological)
nsubj(consequence, credo)
cop(consequence, be)
punct(consequence, ,)
advmod(consequence, therefore)
punct(consequence, ,)
advmod(consequence, not)
det(consequence, a)
amod(consequence, direct)
conj(Functionalism, consequence)
case(observation, of)
nmod(consequence, observation)
punct(consequence, ,)
cc(consequence, but)
advmod(consequence, rather)
det(consequence, a)
amod(consequence, indirect)
conj(consequence, consequence)
case(inference, of)
amod(inference, philosophical)
nmod(consequence, inference)
cc(judgment, and)
conj(inference, judgment)
punct(Functionalism, .)
det(purpose, the)
nsubj(be, purpose)
case(sort, of)
det(sort, this)
nmod(purpose, sort)
case(study, of)
amod(study, philosophical)
nmod(sort, study)
case(sociology, of)
nmod(study, sociology)
cop(tyrannize, be)
advmod(tyrannize, not)
mark(tyrannize, to)
root(ROOT, tyrannize)
cc(clarify, but)
mark(clarify, to)
conj(tyrannize, clarify)
det(principle, the)
obj(clarify, principle)
case(science, of)
amod(science, social)
nmod(principle, science)
punct(tyrannize, .)
expl(absurd, it)
cop(absurd, be)
root(ROOT, absurd)
mark(speak, to)
csubj(absurd, speak)
case(philosophy, of)
obl(speak, philosophy)
case(enterprise, as)
det(enterprise, a)
amod(enterprise, superior)
obl(speak, enterprise)
case(sociology, to)
nmod(enterprise, sociology)
punct(speak, ,)
mark(discipline, since)
det(former, the)
nsubj(discipline, former)
cop(discipline, be)
det(discipline, a)
amod(discipline, logical)
punct(discipline, ,)
amod(discipline, rational)
advcl(speak, discipline)
punct(discipline, ,)
advmod(descriptive, where)
nsubj(descriptive, sociology)
cop(descriptive, be)
advmod(descriptive, essentially)
acl:relcl(discipline, descriptive)
cc(empirical, and)
conj(descriptive, empirical)
punct(absurd, .)
det:predet(position, such)
det(position, a)
nsubj(entail, position)
root(ROOT, entail)
det(negation, the)
obj(entail, negation)
case(philosophy, of)
nmod(negation, philosophy)
case(form, in)
nmod:poss(form, its)
amod(form, Platonic)
nmod(negation, form)
case(something, as)
nmod(negation, something)
acl(something, soar)
advmod(soar, above)
cc(embrace, and)
conj(soar, embrace)
det(science, the)
amod(science, empirical)
cc(mathematical, and)
conj(empirical, mathematical)
obj(embrace, science)
punct(entail, .)
cc(synonym, but)
advcl(synonym, contrary)
case(whitehead, to)
obl(contrary, whitehead)
punct(synonym, ,)
nsubj(synonym, philosophy)
cop(synonym, be)
advmod(synonym, not)
det(synonym, a)
root(ROOT, synonym)
case(Plato, for)
nmod(synonym, Plato)
punct(synonym, .)
det(use, the)
nsubj(manifest, use)
case(philosophy, of)
nmod(use, philosophy)
case(house, as)
det(house, a)
amod(house, logical)
compound(house, clear)
nmod(use, house)
cop(manifest, be)
root(ROOT, manifest)
case(approach, to)
det(approach, any)
obl(manifest, approach)
nsubj(descend, that)
aux(descend, do)
advmod(descend, not)
acl:relcl(approach, descend)
case(sensationalism, to)
amod(sensationalism, pure)
obl(descend, sensationalism)
punct(manifest, .)
advmod(become, however)
punct(become, ,)
mark(attempt, when)
nsubj(attempt, philosophy)
advcl(become, attempt)
mark(stand, to)
xcomp(attempt, stand)
case(science, above)
det(science, the)
obl(stand, science)
punct(stand, ,)
mark(dictate, to)
advcl(stand, dictate)
det(condition, the)
obj(dictate, condition)
case(research, of)
amod(research, empirical)
nmod(condition, research)
punct(become, ,)
expl(become, it)
root(ROOT, become)
amod(metaphysics, formal)
xcomp(become, metaphysics)
punct(metaphysics, ;)
punct(metaphysics, ;)
acl(metaphysics, shape)
det(contour, the)
obj(shape, contour)
case(life, of)
nmod(contour, life)
mark(fit, to)
advcl(shape, fit)
det(need, the)
obj(fit, need)
case(legend, of)
nmod(need, legend)
punct(metaphysics, .)
det(notion, the)
root(ROOT, notion)
case(philosophy, of)
nmod(notion, philosophy)
case(Queen, as)
nmod(notion, Queen)
nsubj(fit, bee)
aux(fit, may)
root(ROOT, fit)
advmod(fit, well)
case(mode, with)
amod(mode, authoritarian)
obl(fit, mode)
case(ideology, of)
amod(ideology, political)
nmod(mode, ideology)
punct(note, ,)
cc(note, but)
nsubj:pass(note, it)
aux(note, have)
aux:pass(note, be)
conj(fit, note)
mark(frustration, that)
det(price, the)
nsubj(frustration, price)
case(notion, of)
det:predet(notion, such)
det(notion, a)
amod(notion, imperial)
nmod(price, notion)
case(philosophy, of)
nmod(notion, philosophy)
cop(frustration, be)
det(frustration, the)
ccomp(note, frustration)
cc(flagellation, and)
conj(frustration, flagellation)
case(science, of)
det(science, the)
amod(science, social)
nmod(frustration, science)
punct(fit, . )
punct(cf, ()
nummod(Wetter, cf)
punct(cf, .)
root(ROOT, Wetter)
punct(Wetter, ,)
nmod:tmod(Wetter, 1952)
punct(Wetter, :)
punct(Pt., :)
list(Wetter, Pt.)
nummod(Pt., 2)
punct(Pt., ,)
appos(Pt., Ch.)
nummod(Ch., 5)
punct(Pt., ;)
punct(Pt., ;)
appos(Pt., Horowitz)
nummod(Horowitz, 1957)
nummod(Horowitz, b)
punct(Wetter, .)
punct(Pt., ))
nsubj(grappling, Metaphysics)
cop(grappling, be)
advmod(longer, no)
advmod(grappling, longer)
det(grappling, a)
amod(grappling, direct)
root(ROOT, grappling)
case(nature, with)
nmod(grappling, nature)
mark(antiquity, as)
nsubj(antiquity, it)
cop(antiquity, be)
case(antiquity, in)
advcl(grappling, antiquity)
punct(grappling, .)
nsubj(surrender, it)
aux(surrender, have)
root(ROOT, surrender)
det(claim, any)
obj(surrender, claim)
case(description, of)
nmod(claim, description)
case(favor, in)
nmod(claim, favor)
case(account, of)
amod(account, psychological)
nmod(favor, account)
case(nothingness, of)
nmod(account, nothingness)
punct(surrender, ,)
case(system, as)
fixed(as, in)
nmod:poss(system, Heidegger)
case(Heidegger, 's)
obl(surrender, system)
punct(1929, ()
appos(system, 1929)
punct(1929, ))
punct(mock, .)
nsubj:pass(mock, Science)
aux:pass(mock, be)
parataxis(surrender, mock)
mark(wish, for)
advcl(mock, wish)
mark(know, to)
xcomp(wish, know)
obj(know, nothing)
case(nothing, of)
nmod(nothing, nothing)
punct(know, ,)
case(effort, in)
det(effort, a)
amod(effort, last)
compound(effort, ditch)
obl(know, effort)
mark(save, to)
acl(effort, save)
det(god, the)
obj(save, god)
case(expense, at)
det(expense, the)
obl(save, expense)
case(man, of)
nmod(expense, man)
punct(surrender, .)
nsubj(positivism, it)
cop(positivism, be)
advmod(positivism, not)
root(ROOT, positivism)
nsubj(isolate, which)
aux(isolate, have)
acl:relcl(positivism, isolate)
obj(isolate, metaphysics)
case(reality, from)
obl(isolate, reality)
case(distinguishing, by)
obl(isolate, distinguishing)
case(description, between)
nmod(distinguishing, description)
cc(prescription, and)
conj(description, prescription)
punct(positivism, .)
nsubj(revealing, it)
aux(revealing, be)
advmod(revealing, simply)
root(ROOT, revealing)
det(state, the)
obj(revealing, state)
case(which, to)
obl(fall, which)
amod(thinking, metaphysical)
nsubj(fall, thinking)
aux(fall, have)
acl:relcl(state, fall)
case(century, during)
det(century, this)
obl(fall, century)
punct(revealing, .)
root(ROOT, consider)
det(field, the)
amod(field, traditional)
punct(field, ``)
nummod(field, four)
obj(consider, field)
punct(field, '')
case(philosophy, of)
nmod(field, philosophy)
punct(field, :)
appos(field, logic)
punct(ethic, ,)
conj(logic, ethic)
punct(epistemology, ,)
conj(logic, epistemology)
cc(esthetics, and)
conj(logic, esthetics)
punct(consider, .)
expl(commonplace, it)
cop(commonplace, be)
det(commonplace, a)
root(ROOT, commonplace)
mark(establish, that)
case(degree, to)
det(degree, the)
obl(establish, degree)
det(preserve, these)
amod(preserve, special)
nsubj(establish, preserve)
case(grounds, of)
amod(grounds, past)
amod(grounds, philosophic)
compound(grounds, hunt)
nmod(preserve, grounds)
csubj(commonplace, establish)
det(content, a)
amod(content, empirical)
obj(establish, content)
cc(criterion, and)
amod(criterion, suitable)
amod(criterion, methodological)
conj(content, criterion)
punct(move, ,)
nsubj(move, they)
parataxis(commonplace, move)
advmod(move, away)
case(philosophy, from)
obl(move, philosophy)
case(such, as)
obl(move, such)
punct(commonplace, .)
nsubj:pass(leave, what)
aux:pass(leave, be)
csubj(be, leave)
case(system, to)
amod(system, traditional)
obl(leave, system)
case(philosophy, of)
nmod(system, philosophy)
root(ROOT, be)
punct(be, ,)
case(effect, in)
obl(be, effect)
punct(history, ,)
advmod(history, only)
det(history, the)
obl(be, history)
case(field, of)
det(field, these)
nmod(history, field)
mark(become, prior)
fixed(prior, to)
nsubj(become, they)
acl(history, become)
amod(enough, rigorous)
advmod(become, enough)
mark(abide, to)
advcl(enough, abide)
case(canon, by)
det(canon, the)
obl(abide, canon)
case(method, of)
amod(method, scientific)
nmod(canon, method)
punct(be, .)
case(situation, in)
det(situation, this)
obl(survive, situation)
punct(survive, ,)
nsubj(survive, philosophy)
aux(survive, have)
root(ROOT, survive)
mark(separate, by)
advcl(survive, separate)
obj(separate, itself)
case(metaphysics, from)
obl(separate, metaphysics)
punct(separate, ,)
mark(show, by)
advcl(separate, show)
det(question, the)
amod(question, ultimate)
obj(show, question)
mark(question, to)
cop(question, be)
det(question, the)
amod(question, meaningless)
advcl(show, question)
punct(survive, .)
det(relinquish, the)
nsubj(give, relinquish)
case(philosophy, by)
nmod(relinquish, philosophy)
case(claim, of)
amod(claim, pretentious)
nmod(philosophy, claim)
case(priority, to)
amod(priority, empirical)
nmod(claim, priority)
root(ROOT, give)
iobj(give, it)
det(ability, a)
obj(give, ability)
mark(treat, to)
acl(ability, treat)
obj(treat, problem)
case(meaning, of)
nmod(problem, meaning)
cc(truth, and)
conj(meaning, truth)
obj(unable, which)
case(past, in)
det(past, the)
obl(unable, past)
nsubj(unable, it)
cop(unable, be)
acl:relcl(ability, unable)
mark(examine, to)
xcomp(unable, examine)
case(attitude, because)
fixed(because, of)
nmod:poss(attitude, its)
amod(attitude, missionary)
obl(examine, attitude)
case(knowledge, to)
nmod(attitude, knowledge)
case(sort, of)
advmod(humble, more)
amod(sort, humble)
nmod(knowledge, sort)
punct(give, .)
case(situation, in)
det(situation, the)
amod(situation, new)
obl(able, situation)
punct(able, ,)
nsubj(able, philosophy)
cop(able, be)
root(ROOT, able)
mark(provide, to)
xcomp(able, provide)
det(science, the)
amod(science, social)
obj(provide, science)
case(guidance, with)
det(guidance, the)
amod(guidance, same)
nmod(science, guidance)
obj(offer, that)
nsubj(offer, mathematics)
acl:relcl(guidance, offer)
det(science, the)
amod(science, physical)
obj(offer, science)
punct(science, ,)
det(reservoir, a)
appos(science, reservoir)
case(relation, of)
amod(relation, logical)
nmod(reservoir, relation)
nsubj:pass(use, that)
aux(use, can)
aux:pass(use, be)
acl:relcl(relation, use)
case(hypothese, in)
compound(hypothese, frame)
obl(use, hypothese)
acl(hypothese, have)
amod(value, explanatory)
cc(predictive, and)
conj(explanatory, predictive)
obj(have, value)
punct(able, .)
case(this, beyond)
obl(urge, this)
punct(urge, ,)
nsubj(urge, philosophy)
aux(urge, may)
root(ROOT, urge)
det(science, the)
amod(science, social)
obj(urge, science)
advmod(urge, forward)
mark(ask, by)
advcl(urge, ask)
det(type, the)
obj(ask, type)
case(question, of)
nmod(type, question)
nsubj(fall, that)
acl:relcl(type, fall)
case(scope, outside)
det(scope, the)
amod(scope, present)
obl(fall, scope)
case(inquiry, of)
amod(inquiry, social)
nmod(scope, inquiry)
punct(domain, ,)
cc(domain, but)
case(domain, within)
nmod:poss(domain, its)
amod(domain, potential)
conj(scope, domain)
case(relevance, of)
nmod(domain, relevance)
punct(urge, .)
case(connection, in)
det(connection, this)
obl(note, connection)
punct(note, ,)
nsubj:pass(note, it)
aux(note, might)
aux:pass(note, be)
root(ROOT, note)
mark(long, that)
det(theory, the)
nsubj(long, theory)
case(game, of)
nmod(theory, game)
cop(long, be)
det(discovery, a)
amod(discovery, mathematical)
obl:npmod(long, discovery)
ccomp(note, long)
mark(exploit, before)
nmod:poss(use, its)
nsubj:pass(exploit, use)
case(science, in)
amod(science, political)
nmod(use, science)
aux:pass(exploit, be)
advcl(long, exploit)
punct(note, .)
advmod(formulate, likewise)
punct(formulate, ,)
nsubj(formulate, Kant)
root(ROOT, formulate)
det(hypothesis, the)
amod(hypothesis, nebular)
obj(formulate, hypothesis)
punct(formulate, ,)
case(which, accord)
fixed(accord, to)
obl(evolve, which)
det(system, the)
amod(system, solar)
nsubj:pass(evolve, system)
aux:pass(evolve, be)
acl:relcl(hypothesis, evolve)
case(mass, from)
det(mass, a)
amod(mass, rotate)
obl(evolve, mass)
case(gas, of)
amod(gas, incandescent)
nmod(mass, gas)
punct(mass, ,)
advmod(half, nearly)
det(century, a)
amod(century, half)
appos(mass, century)
mark(make, before)
nmod:poss(value, its)
amod(value, scientific)
nsubj:pass(make, value)
aux:pass(make, be)
advcl(evolve, make)
xcomp(make, plain)
case(Laplace, by)
obl(plain, Laplace)
case(Monde, in)
nmod:poss(Monde, he)
compound(Monde, Systeme)
compound(Monde, Du)
obl(make, Monde)
punct(formulate, .)
nsubj(mean, this)
aux(mean, do)
advmod(mean, not)
root(ROOT, mean)
mark(resolve, that)
nsubj(resolve, philosophy)
ccomp(mean, resolve)
det(problem, the)
obj(resolve, problem)
nsubj(generate, it)
acl:relcl(problem, generate)
punct(settle, ,)
advmod(more, any)
advmod(so, more)
advmod(settle, so)
case(geometry, than)
nmod:poss(geometry, Riemann)
case(Riemann, 's)
obl(so, geometry)
ccomp(mean, settle)
det(status, the)
amod(status, physical)
obj(settle, status)
case(continuum, of)
det(continuum, the)
compound(time, space)
punct(time, -)
compound(continuum, time)
nmod(status, continuum)
punct(mean, .)
cc(task, but)
det(presentation, the)
amod(presentation, forceful)
nsubj(task, presentation)
case(issue, of)
amod(issue, new)
nmod(presentation, issue)
case(science, for)
det(science, the)
nmod(issue, science)
mark(work, to)
acl(science, work)
obl(work, on)
cop(task, be)
nsubj(task, itself)
det(task, a)
amod(task, monumental)
root(ROOT, task)
punct(task, .)
case(those, to)
obl(seem, those)
acl(those, raise)
case(Viator, on)
nmod:poss(Viator, Marcel)
case(Marcel, 's)
compound(Viator, Homo)
obl(raise, Viator)
cc(Heidegger, and)
conj(Viator, Heidegger)
case(Heidegger, 's)
conj(Viator, das)
flat(das, Nichtige)
punct(seem, ,)
nsubj(seem, this)
aux(seem, may)
parataxis(task, seem)
det(role, a)
amod(role, modest)
obj(seem, role)
case(philosophy, for)
nmod(role, philosophy)
punct(task, .)
advmod(quality, however)
punct(quality, ,)
nsubj(quality, modesty)
cc(triviality, and)
conj(modesty, triviality)
cop(quality, be)
amod(quality, different)
root(ROOT, quality)
punct(quality, .)
appos(quality, Philosophy)
acl(Philosophy, conceive)
obl(conceive, of)
case(servant, as)
obl(conceive, servant)
case(science, to)
det(science, the)
nmod(servant, science)
aux(appear, might)
conj(quality, appear)
advmod(less, as)
advmod(dramatic, less)
xcomp(appear, dramatic)
case(philosophy, than)
obl(dramatic, philosophy)
nsubj(jeer, which)
acl:relcl(philosophy, jeer)
mark(evolve, as)
det(science, the)
nsubj(evolve, science)
advcl(jeer, evolve)
punct(quality, .)
det(effort, the)
amod(effort, ceaseless)
nsubj(traverse, effort)
mark(understand, to)
acl(effort, understand)
cc(measure, and)
conj(understand, measure)
det(mankind, the)
compound(mankind, distance)
obj(measure, mankind)
aux(traverse, have)
root(ROOT, traverse)
mark(offer, since)
nmod:poss(status, its)
amod(status, primitive)
amod(status, anthropological)
nsubj(offer, status)
advcl(traverse, offer)
det(sort, a)
advmod(durable, more)
amod(sort, durable)
obj(offer, sort)
case(drama, of)
nmod(sort, drama)
punct(traverse, .)
mark(clarify, by)
advcl(offer, clarify)
amod(premise, fundamental)
obj(clarify, premise)
case(science, in)
det(science, the)
amod(science, social)
nmod(premise, science)
punct(define, ,)
cc(define, and)
conj(clarify, define)
det(problem, the)
amod(problem, logical)
obj(define, problem)
amod(problem, emergent)
case(borderland, at)
det(borderland, the)
obl(emergent, borderland)
case(discipline, of)
det(discipline, each)
amod(discipline, new)
amod(discipline, scientific)
nmod(borderland, discipline)
punct(offer, ,)
nsubj(offer, philosophy)
aux(offer, can)
root(ROOT, offer)
det(sort, the)
obj(offer, sort)
case(distinction, of)
nmod(sort, distinction)
nsubj(accelerate, that)
aux(accelerate, can)
acl:relcl(distinction, accelerate)
obj(accelerate, growth)
case(understanding, in)
amod(understanding, human)
obl(accelerate, understanding)
punct(offer, .)
nsubj(prevent, Philosophy)
aux(prevent, can)
root(ROOT, prevent)
det(scientist, the)
compound(scientist, working)
obj(prevent, scientist)
mark(become, from)
advcl(prevent, become)
xcomp(become, slothful)
cc(content, and)
compound(content, self)
punct(content, -)
conj(slothful, content)
mark(noting, by)
advcl(become, noting)
det(assumption, the)
obj(noting, assumption)
cc(level, and)
conj(assumption, level)
case(which, at)
obl(frame, which)
det(hypothesis, a)
nsubj:pass(frame, hypothesis)
cc(theory, or)
conj(hypothesis, theory)
aux:pass(frame, be)
acl:relcl(assumption, frame)
punct(prevent, .)
det(dissection, the)
nsubj(contribution, dissection)
case(theory, of)
amod(theory, scientific)
nmod(dissection, theory)
punct(dissection, ,)
det(examination, the)
conj(dissection, examination)
case(theory, of)
det(theory, a)
nmod(examination, theory)
case(point, from)
det(point, the)
compound(point, vantage)
punct(point, -)
nmod(theory, point)
case(language, of)
nmod(point, language)
punct(epistemology, ,)
conj(language, epistemology)
punct(ethic, ,)
cc(ethic, and)
conj(language, ethic)
punct(contribution, ,)
cop(contribution, be)
nsubj(contribution, itself)
det(contribution, a)
amod(contribution, distinct)
root(ROOT, contribution)
case(knowledge, to)
nmod(contribution, knowledge)
punct(contribution, ,)
advmod(less, no)
advmod(so, less)
advmod(contribution, so)
case(removal, because)
fixed(because, of)
nmod:poss(removal, its)
nmod(contribution, removal)
case(research, from)
amod(research, empirical)
nmod(removal, research)
punct(contribution, .)
det(realm, the)
nsubj(cover, realm)
case(science, of)
nmod(realm, science)
punct(realm, ,)
det(degree, whatever)
det(degree, the)
conj(realm, degree)
case(precision, of)
nmod(degree, precision)
case(formulation, in)
nmod(precision, formulation)
punct(cover, ,)
root(ROOT, cover)
det(range, the)
obj(cover, range)
case(prediction, of)
nmod(range, prediction)
cc(explanation, and)
conj(prediction, explanation)
punct(cover, . )
punct(cf., ()
root(ROOT, cf.)
flat(cf., Hempel)
cc(Oppenheim, and)
conj(cf., Oppenheim)
punct(cf., ,)
nmod:tmod(cf., 1948)
punct(cf., :)
punct(cf., :)
list(cf., 135)
case(75, -)
nmod(135, 75)
punct(cf., .)
punct(cf., ))
det(philosophy, whatever)
nsubj:pass(conceive, philosophy)
aux:pass(conceive, be)
advcl(make, conceive)
mark(be, to)
cop(rationalist, be)
punct(attitude, ,)
nmod:poss(attitude, its)
amod(attitude, rationalist)
punct(attitude, ,)
amod(attitude, logistic)
nsubj(make, attitude)
case(evidence, to)
nmod(attitude, evidence)
aux(make, should)
root(ROOT, make)
expl(make, it)
xcomp(make, clear)
mark(something, that)
nsubj(something, it)
cop(something, be)
ccomp(clear, something)
amod(something, other)
case(science, than)
obl(other, science)
punct(make, .)
case(form, for)
det(form, some)
nmod(sign, form)
case(philosophy, of)
nmod(form, philosophy)
punct(become, ,)
det(division, this)
amod(division, very)
nsubj(become, division)
case(empirical, between)
det(empirical, the)
nmod(division, empirical)
cc(rational, and)
det(rational, the)
conj(empirical, rational)
root(ROOT, become)
det(sign, a)
xcomp(become, sign)
case(superiority, of)
det(superiority, the)
amod(superiority, metaphysical)
nmod(sign, superiority)
case(latter, of)
det(latter, the)
nmod(superiority, latter)
punct(sign, .)
nsubj(announce, Bergson)
cc(Leroy, and)
conj(Bergson, Leroy)
root(ROOT, announce)
mark(center, that)
punct(center, ``)
det(secret, the)
nsubj(center, secret)
cop(center, be)
det(center, the)
ccomp(announce, center)
case(philosophy, of)
det(philosophy, a)
nmod(center, philosophy)
punct(center, '')
cc(declare, and)
advmod(declare, thereafter)
det(follower, a)
nummod(follower, hundred)
nsubj(declare, follower)
conj(announce, declare)
obj(declare, secrecy)
det(verity, a)
amod(verity, higher)
obj(declare, verity)
punct(announce, .)
nsubj(confession, this)
cop(confession, be)
advmod(confession, simply)
det(confession, a)
root(ROOT, confession)
case(sterility, of)
amod(sterility, intellectual)
nmod(confession, sterility)
acl(sterility, spruce)
compound:prt(spruce, up)
mark(look, to)
advcl(spruce, look)
xcomp(look, virtuous)
punct(look, .)
mark(indicate, for)
case(Merleau, as)
nsubj(indicate, Merleau)
punct(Ponty, -)
flat(Merleau, Ponty)
conj(confession, indicate)
punct(1953, ()
nummod(indicate, 1953)
punct(1953, ))
punct(secret, ,)
nsubj(secret, it)
cop(secret, be)
advmod(secret, not)
det(secret, the)
ccomp(indicate, secret)
nsubj(important, which)
cop(important, be)
acl:relcl(secret, important)
punct(removal, ,)
cc(removal, but)
det(removal, the)
conj(secret, removal)
case(secrecy, of)
nmod(removal, secrecy)
punct(confession, .)
case(this, in)
obl(share, this)
punct(share, ,)
nsubj(share, philosophy)
cc(science, and)
conj(philosophy, science)
root(ROOT, share)
det(goal, a)
amod(goal, common)
obj(share, goal)
punct(share, .)
det(hypostatization, the)
nsubj(guarantee, hypostatization)
case(secret, of)
det(secret, the)
nmod(hypostatization, secret)
advmod(guarantee, nonetheless)
root(ROOT, guarantee)
mark(overcome, that)
det(division, the)
nsubj:pass(overcome, division)
case(philosophy, of)
amod(philosophy, analytical)
cc(synthetic, and)
conj(analytical, synthetic)
nmod(division, philosophy)
aux(overcome, shall)
advmod(overcome, not)
aux:pass(overcome, be)
ccomp(guarantee, overcome)
case(argument, by)
advmod(argument, even)
det(argument, the)
advmod(persuasive, most)
amod(argument, persuasive)
obl(overcome, argument)
punct(overcome, ;)
punct(guarantee, ;)
case(division, for)
det(division, this)
obl(representation, division)
cop(representation, be)
cc(representation, but)
det(representation, a)
amod(representation, abstract)
conj(overcome, representation)
case(struggle, of)
det(struggle, the)
amod(struggle, social)
nmod(representation, struggle)
case(mysticism, between)
nmod(struggle, mysticism)
cc(science, and)
conj(mysticism, science)
punct(guarantee, .)
det(mystification, the)
nsubj(imply, mystification)
case(system, of)
amod(system, metaphysical)
nmod(mystification, system)
aux(imply, do)
advmod(imply, not)
root(ROOT, imply)
det(demise, the)
obj(imply, demise)
case(philosophy, of)
nmod(demise, philosophy)
punct(demise, ,)
advmod(close, only)
det(close, the)
conj(demise, close)
case(age, of)
det(age, a)
amod(age, philosophic)
nmod(close, age)
nsubj(demand, which)
acl:relcl(age, demand)
obj(demand, metaphysics)
mark(rational, to)
cop(rational, be)
xcomp(demand, rational)
cc(logical, and)
conj(rational, logical)
punct(imply, .)
det(tenacity, the)
nsubj(offer, tenacity)
case(which, with)
obl(offer, which)
amod(attitude, present)
amod(attitude, metaphysical)
nsubj(offer, attitude)
case(intuition, fetishize)
amod(intuition, private)
nmod(attitude, intuition)
root(ROOT, offer)
det(evidence, the)
amod(evidence, strongest)
obj(offer, evidence)
mark(build, that)
det(gulf, the)
nsubj:pass(build, gulf)
case(way, between)
amod(way, scientific)
cc(delphic, and)
conj(scientific, delphic)
nmod(gulf, way)
case(philosophizing, of)
nmod(way, philosophizing)
aux:pass(build, be)
acl(evidence, build)
case(conflict, into)
det(conflict, the)
amod(conflict, present)
obl(build, conflict)
case(limit, over)
det(limit, the)
nmod(conflict, limit)
cc(purpose, and)
conj(limit, purpose)
case(science, of)
nmod(limit, science)
punct(religion, ,)
conj(science, religion)
cc(ideology, and)
conj(science, ideology)
punct(offer, . )
punct(McGlynn, ()
advmod(McGlynn, cf.)
root(ROOT, McGlynn)
punct(McGlynn, :)
appos(McGlynn, 1958)
punct(McGlynn, .)
punct(McGlynn, ))
amod(system, scientific)
nsubj:pass(build, system)
punct(include, ,)
cc(include, and)
nsubj(include, this)
conj(system, include)
advmod(relation, even)
det(relation, the)
obj(include, relation)
case(mechanist, of)
nmod(relation, mechanist)
case(physics, to)
amod(physics, relativist)
nmod(mechanist, physics)
punct(build, ,)
aux:pass(build, be)
root(ROOT, build)
case(refine, upon)
punct(refine, ,)
conj(build, refine)
cc(correct, and)
conj(refine, correct)
punct(build, .)
amod(system, Philosophic)
nsubj:pass(overthrown, system)
punct(system, ,)
case(nature, by)
det(nature, the)
amod(nature, very)
obl(overthrown, nature)
case(completeness, of)
nmod:poss(completeness, they)
nmod(nature, completeness)
punct(overthrown, ,)
aux:pass(overthrown, be)
root(ROOT, overthrown)
case(system, by)
amod(system, rival)
obl(overthrown, system)
punct(overthrown, .)
case(addition, in)
obl(differ, addition)
case(incompleteness, to)
det(incompleteness, the)
nmod(addition, incompleteness)
case(science, of)
nmod(incompleteness, science)
cc(completeness, and)
det(completeness, the)
conj(science, completeness)
case(metaphysics, of)
nmod(completeness, metaphysics)
punct(differ, ,)
nsubj(differ, they)
root(ROOT, differ)
case(science, in)
det(science, that)
obl(differ, science)
cop(descriptive, be)
advmod(descriptive, essentially)
ccomp(differ, descriptive)
punct(descriptive, ,)
mark(tend, while)
nsubj(tend, philosophy)
case(form, in)
nmod:poss(form, its)
amod(form, inherite)
nmod(philosophy, form)
punct(tend, ,)
advcl(descriptive, tend)
mark(oriented, to)
cop(oriented, be)
obl:npmod(oriented, goal)
punct(oriented, -)
xcomp(tend, oriented)
punct(teleological, ,)
conj(oriented, teleological)
cc(prescriptive, and)
conj(oriented, prescriptive)
punct(descriptive, .)
det(notion, the)
amod(notion, threadbare)
nsubj(have, notion)
mark(subject, that)
nsubj(subject, belief)
punct(belief, ,)
case(behaviour, unlike)
nmod(belief, behaviour)
punct(subject, ,)
cop(subject, be)
advmod(subject, not)
acl(notion, subject)
case(analysis, to)
amod(analysis, objective)
obl(subject, analysis)
punct(place, ,)
aux(place, have)
conj(subject, place)
amod(metaphysics, intuitive)
obj(place, metaphysics)
advmod(place, squarely)
case(sociology, against)
det(sociology, the)
obl(place, sociology)
case(knowledge, of)
nmod(sociology, knowledge)
punct(place, ,)
mark(job, since)
nsubj(job, it)
cop(job, be)
advmod(job, precisely)
det(job, the)
advcl(place, job)
case(sociology, of)
det(sociology, the)
nmod(job, sociology)
case(knowledge, of)
nmod(sociology, knowledge)
mark(treat, to)
acl(sociology, treat)
obj(treat, belief)
case(fact, as)
amod(fact, social)
obl(treat, fact)
advmod(less, no)
advmod(viable, less)
xcomp(treat, viable)
case(behaviour, than)
amod(behaviour, social)
obl(viable, behaviour)
punct(viable, .)
mark(deal, when)
advcl(viable, deal)
case(relation, with)
det(relation, the)
amod(relation, actual)
obl(deal, relation)
case(philosophy, of)
nmod(relation, philosophy)
case(sociology, to)
det(sociology, the)
nmod(relation, sociology)
case(knowledge, of)
nmod(sociology, knowledge)
punct(role, ,)
cc(role, or)
advmod(role, better)
det(role, the)
conj(relation, role)
case(philosophy, of)
nmod(role, philosophy)
mark(assist, in)
acl(role, assist)
obj(assist, research)
case(source, on)
det(source, the)
amod(source, social)
obl(assist, source)
case(idea, of)
nmod(source, idea)
punct(have, ,)
nsubj(have, one)
root(ROOT, have)
mark(become, to)
xcomp(have, become)
advmod(selective, necessarily)
xcomp(become, selective)
punct(have, .)
amod(feature, Certain)
root(ROOT, feature)
nsubj(touch, we)
aux(touch, have)
acl:relcl(feature, touch)
case(philosophy, upon)
punct(philosophy, :)
obl(touch, philosophy)
case(system, as)
det(system, a)
amod(system, logical)
punct(system, ,)
amod(system, deductive)
nmod(philosophy, system)
case(which, from)
obl(build, which)
det(methodology, a)
amod(methodology, social)
compound(methodology, science)
nsubj:pass(build, methodology)
aux(build, can)
aux:pass(build, be)
acl:relcl(system, build)
compound:prt(build, up)
punct(analysis, ;)
punct(analysis, ;)
amod(analysis, philosophic)
conj(philosophy, analysis)
case(assumption, of)
det(assumption, the)
nmod(analysis, assumption)
cc(presumption, and)
conj(assumption, presumption)
case(science, of)
det(science, the)
amod(science, social)
nmod(assumption, science)
punct(assumption, ;)
punct(assumption, ;)
cc(philosophy, and)
conj(assumption, philosophy)
case(guide, as)
det(guide, a)
nmod(philosophy, guide)
case(integration, to)
amod(integration, possible)
nmod(guide, integration)
case(investigation, of)
advmod(disparate, supposedly)
amod(investigation, disparate)
amod(investigation, sociological)
nmod(integration, investigation)
punct(analysis, .)
det(objection, the)
nsubj:pass(raise, objection)
aux(raise, will)
aux:pass(raise, be)
root(ROOT, raise)
mark(omit, that)
det(role, the)
advmod(important, most)
amod(role, important)
nsubj:pass(omit, role)
case(philosophy, of)
nmod(role, philosophy)
case(relation, in)
nmod(role, relation)
case(science, to)
amod(science, social)
nmod(relation, science)
aux(omit, have)
aux:pass(omit, be)
ccomp(raise, omit)
punct(omit, ,)
advmod(status, namely)
det(status, the)
obl(omit, status)
case(question, of)
amod(question, ultimate)
compound(question, value)
nmod(status, question)
cc(norm, and)
conj(question, norm)
amod(question, operative)
case(science, in)
det(science, the)
amod(science, social)
obl(operative, science)
punct(raise, .)
advmod(ask, specifically)
punct(ask, ,)
nsubj:pass(ask, it)
aux(ask, will)
aux:pass(ask, be)
root(ROOT, ask)
mark(ask, whether)
det(question, the)
punct(question, ``)
amod(question, real)
punct(question, '')
nsubj(question, question)
nsubj(ask, people)
acl:relcl(question, ask)
cop(question, be)
advmod(question, not)
det(question, the)
punct(question, ``)
amod(question, ultimate)
punct(question, '')
ccomp(ask, question)
obj(find, that)
amod(science, social)
nsubj(find, science)
acl:relcl(question, find)
obj(find, itself)
xcomp(find, impotent)
case(face, in)
det(face, the)
obl(impotent, face)
nmod(face, of)
punct(ask, .)
root(ROOT, what)
advmod(what, then)
cop(what, be)
det(status, the)
nsubj(what, status)
case(question, of)
amod(question, such)
nmod(status, question)
mark(ground, as)
punct(society, :)
cop(ground, be)
nsubj(ground, society)
det(ground, the)
appos(status, ground)
case(existence, of)
amod(existence, human)
nmod(ground, existence)
cc(means, or)
det(means, a)
conj(ground, means)
case(goal, to)
det(goal, a)
amod(goal, individual)
nmod(means, goal)
punct(what, ?)
punct(what, ?)
aux(develop, do)
nsubj(develop, society)
root(ROOT, develop)
case(pattern, accord)
fixed(accord, to)
amod(pattern, cosmic)
obl(develop, pattern)
cc(subject, or)
cop(subject, be)
nsubj(subject, they)
conj(develop, subject)
advmod(choice, only)
case(choice, to)
det(choice, the)
amod(choice, free)
obl(subject, choice)
case(individual, of)
nmod(choice, individual)
punct(develop, ?)
punct(develop, ?)
aux(exist, do)
nsubj(exist, society)
advmod(exist, really)
root(ROOT, exist)
case(entity, as)
det(entity, a)
obl(exist, entity)
case(agglomeration, over)
cc(agglomeration, and)
conj(over, above)
det(agglomeration, the)
conj(entity, agglomeration)
case(man, of)
nmod(agglomeration, man)
punct(exist, ?)
punct(exist, ? )
nsubj(think, I)
root(ROOT, think)
nsubj:pass(say, it)
aux(say, must)
aux:pass(say, be)
ccomp(think, say)
mark(contrary, that)
punct(contrary, ,)
conj(say, contrary)
case(insistence, to)
amod(insistence, metaphysical)
obl(contrary, insistence)
punct(question, ,)
nsubj(question, these)
cop(question, be)
parataxis(contrary, question)
advmod(frame, so)
amod(question, frame)
mark(defy, as)
mark(defy, to)
advcl(frame, defy)
cc:preconj(exploration, either)
amod(exploration, empirical)
obj(defy, exploration)
cc(solution, or)
amod(solution, rational)
conj(exploration, solution)
punct(exploration, .)
case(Simmel, as)
nmod(exploration, Simmel)
punct(1908, ()
appos(Simmel, 1908)
punct(1908, ))
cc(Dilthey, and)
conj(Simmel, Dilthey)
punct(1922, ()
appos(Dilthey, 1922)
punct(1922, ))
parataxis(think, indicate)
punct(indicate, ,)
obj(indicate, question)
mark(individual, of)
mark(individual, whether)
det(value, the)
nsubj(individual, value)
case(life, of)
nmod(value, life)
cop(individual, be)
acl(question, individual)
cc(social, or)
conj(individual, social)
cop(question, be)
advmod(question, not)
conj(individual, question)
punct(assertion, ,)
cc(assertion, but)
conj(question, assertion)
case(faith, of)
nmod(assertion, faith)
acl(assertion, make)
mark(appear, to)
xcomp(make, appear)
case(question, as)
amod(question, legitimate)
obl(appear, question)
punct(think, .)
amod(question, such)
amod(question, pseudo-)
nsubj(assume, question)
root(ROOT, assume)
mark(supply, that)
nsubj:pass(supply, answer)
case(significance, of)
amod(significance, concrete)
nmod(answer, significance)
aux(supply, can)
aux:pass(supply, be)
ccomp(assume, supply)
case(statement, to)
obl(supply, statement)
acl(statement, involve)
amod(universal, undefined)
obj(involve, universal)
punct(assume, .)
amod(theory, social)
nsubj(have, theory)
root(ROOT, have)
advmod(more, no)
amod(right, more)
obj(have, right)
mark(expect, to)
acl(right, expect)
obj(expect, result)
case(question, from)
amod(question, meaningless)
obl(expect, question)
punct(have, ,)
mark(have, than)
nsubj(have, physics)
advcl(have, have)
det(right, the)
obj(have, right)
mark(expect, to)
acl(right, expect)
det(solution, a)
amod(solution, theological)
obj(expect, solution)
case(controversy, to)
det(controversy, the)
compound(particle, wave)
punct(particle, -)
compound(controversy, particle)
obl(expect, controversy)
punct(have, .)
nsubj(be, it)
root(ROOT, be)
advmod(be, not)
mark(ask, that)
amod(question, such)
nsubj:pass(ask, question)
aux:pass(ask, be)
advmod(ask, not)
ccomp(be, ask)
punct(be, .)
nsubj(be, it)
root(ROOT, be)
cc(reflect, rather)
fixed(rather, that)
csubj(reflect, introduce)
obj(introduce, they)
case(analysis, into)
amod(analysis, social)
obl(introduce, analysis)
ccomp(be, reflect)
advmod(much, not)
advmod(much, so)
advmod(search, much)
det(search, a)
obj(reflect, search)
case(truth, for)
nmod(search, truth)
case(certainty, as)
case(certainty, for)
nmod(search, certainty)
punct(be, .)
det(approach, a)
amod(approach, operational)
nsubj(expect, approach)
case(sociology, to)
nmod(approach, sociology)
aux(expect, can)
advmod(expect, never)
root(ROOT, expect)
amod(certainty, abstract)
obj(expect, certainty)
punct(expect, ,)
mark(certainty, since)
nsubj(certainty, it)
cop(certainty, be)
advcl(expect, certainty)
obj(replace, which)
det(discovery, every)
amod(discovery, new)
nsubj(replace, discovery)
case(science, in)
nmod(discovery, science)
cc:preconj(replace, either)
acl:relcl(certainty, replace)
cc(reshape, or)
conj(replace, reshape)
punct(expect, .)
mark(raise, to)
advcl(sense, raise)
det(objection, the)
amod(objection, add)
obj(raise, objection)
mark(require, that)
nsubj(require, man)
acl(objection, require)
obj(require, certainty)
case(grounds, on)
amod(grounds, psychological)
nmod(certainty, grounds)
punct(answer, ,)
conj(certainty, answer)
case(question, to)
amod(question, ultimate)
nmod(answer, question)
acl(answer, have)
det(basis, a)
amod(basis, irrational)
cc(scientific, rather)
fixed(rather, than)
amod(basis, scientific)
obj(have, basis)
punct(sense, ,)
cop(sense, be)
case(sense, in)
det(sense, a)
amod(sense, real)
root(ROOT, sense)
mark(undermine, to)
acl(sense, undermine)
det(objection, the)
obj(undermine, objection)
nmod:npmod(objection, itself)
punct(sense, .)
mark(concern, for)
nsubj(concern, what)
advcl(be, concern)
det(discipline, all)
amod(discipline, scientific)
obj(concern, discipline)
root(ROOT, be)
advmod(concern, precisely)
mark(capture, that)
nsubj:pass(capture, which)
aux(capture, can)
aux:pass(capture, be)
ccomp(precisely, capture)
case(rational, for)
det(rational, the)
obl(capture, rational)
punct(capture, ,)
advmod(capture, i.e.)
punct(consider, ,)
case(determination, for)
det(determination, the)
amod(determination, scientific)
obl(capture, determination)
case(what, of)
nmod(determination, what)
case(age, in)
amod(age, past)
nmod(what, age)
aux:pass(consider, be)
acl(determination, consider)
xcomp(consider, ultimate)
cc(irrational, and)
conj(ultimate, irrational)
punct(be, . )
det(philosophy, a)
nsubj(reveal, philosophy)
nsubj(attempt, which)
acl:relcl(philosophy, attempt)
mark(supply, to)
xcomp(attempt, supply)
amod(answer, ultimate)
obj(supply, answer)
case(way, in)
det(way, a)
amod(way, ultimate)
obl(supply, way)
root(ROOT, reveal)
nmod:poss(acquiescence, its)
obj(reveal, acquiescence)
case(shortcoming, in)
det(shortcoming, the)
nmod(acquiescence, shortcoming)
case(man, of)
nmod(shortcoming, man)
punct(impatience, ,)
det(impatience, a)
conj(shortcoming, impatience)
case(solution, with)
amod(solution, partial)
punct(solution, ,)
amod(solution, tentative)
nmod(impatience, solution)
punct(reveal, .)
nsubj(live, Men)
aux(live, have)
advmod(live, always)
root(ROOT, live)
case(world, in)
det(world, a)
amod(world, tentative)
obl(live, world)
punct(suspension, ,)
cc(suspension, and)
case(suspension, in)
conj(live, suspension)
case(judgment, of)
amod(judgment, ultimate)
nmod(suspension, judgment)
advmod(necessary, where)
cc(necessary, and)
conj(where, when)
advcl(suspension, necessary)
punct(live, .)
compound(overcoming, uncertainty)
nsubj(precondition, overcoming)
nmod:npmod(overcoming, itself)
cop(precondition, be)
det(precondition, the)
root(ROOT, precondition)
case(quest, of)
det(quest, the)
nmod(precondition, quest)
case(information, for)
amod(information, new)
cc(precise, and)
advmod(precise, more)
conj(new, precise)
nmod(quest, information)
case(world, about)
det(world, the)
nmod(information, world)
punct(precondition, .)
case(uncertainty, without)
amod(uncertainty, such)
obl(leave, uncertainty)
nsubj:pass(leave, we)
aux:pass(leave, be)
root(ROOT, leave)
case(set, with)
det(set, a)
obl(leave, set)
case(dogma, of)
nmod(set, dogma)
cc(myth, and)
conj(dogma, myth)
punct(leave, .)
det(interplay, the)
amod(interplay, functional)
nsubj(guarantee, interplay)
case(philosophy, of)
nmod(interplay, philosophy)
cc(science, and)
conj(philosophy, science)
aux(guarantee, should)
punct(guarantee, ,)
case(minimum, as)
det(minimum, a)
obl(guarantee, minimum)
punct(guarantee, ,)
root(ROOT, guarantee)
det(option, a)
amod(option, meaningful)
obj(guarantee, option)
case(myth-make, to)
obl(guarantee, myth-make)
punct(guarantee, . )
det(degree, a)
nsubj(condition, degree)
case(indefiniteness, of)
nmod(degree, indefiniteness)
cop(condition, be)
det(condition, a)
amod(condition, salutary)
root(ROOT, condition)
case(growth, for)
det(growth, the)
nmod(condition, growth)
case(science, of)
nmod(growth, science)
punct(condition, .)
cc(quality, but)
advmod(quality, neither)
cop(quality, be)
det(statement, the)
nsubj(quality, statement)
amod(statement, empirical)
punct(quality, ,)
case(goodness, for)
obl(quality, goodness)
cop(quality, be)
advmod(quality, not)
det(quality, a)
root(ROOT, quality)
case(red, like)
nmod(quality, red)
cc(squeaky, or)
conj(red, squeaky)
nsubj:pass(see, that)
aux(see, could)
aux:pass(see, be)
acl:relcl(quality, see)
cc(hear, or)
conj(see, hear)
punct(quality, .)
obj(do, what)
aux(do, be)
nsubj(do, they)
mark(do, to)
root(ROOT, do)
punct(do, ,)
advmod(judgment, then)
punct(do, ,)
case(judgment, with)
det(judgment, these)
amod(judgment, awkward)
obl(do, judgment)
case(value, of)
nmod(judgment, value)
punct(judgment, ?)
punct(do, ?)
mark(find, to)
conj(do, find)
det(place, a)
obj(find, place)
case(they, for)
nmod(place, they)
case(theory, in)
nmod:poss(theory, they)
nmod(place, theory)
case(knowledge, of)
nmod(theory, knowledge)
aux(require, would)
conj(find, require)
obj(require, they)
mark(revise, to)
xcomp(require, revise)
det(theory, the)
obj(revise, theory)
advmod(revise, radically)
punct(what, ,)
cc(what, and)
advmod(what, yet)
det(theory, that)
nsubj(what, theory)
cop(what, be)
conj(require, what)
nsubj(regard, they)
acl:relcl(what, regard)
case(discovery, as)
nmod:poss(discovery, they)
advmod(important, most)
amod(discovery, important)
obl(regard, discovery)
punct(require, .)
nsubj(appear, it)
root(ROOT, appear)
mark(save, that)
det(theory, the)
nsubj:pass(save, theory)
aux(save, could)
aux:pass(save, be)
ccomp(appear, save)
case(way, in)
nummod(way, one)
obl(save, way)
advmod(save, only)
punct(appear, .)
mark(show, if)
expl(show, it)
aux(show, could)
aux:pass(show, be)
root(ROOT, show)
mark(judgment, that)
nsubj(judgment, judgment)
case(good, of)
nmod(judgment, good)
cc(bad, and)
conj(good, bad)
cop(judgment, be)
advmod(judgment, not)
ccomp(show, judgment)
case(all, at)
obl(judgment, all)
punct(judgment, ,)
mark(assert, that)
nsubj(assert, they)
acl:relcl(judgment, assert)
obj(assert, nothing)
amod(nothing, true)
cc(false, or)
conj(true, false)
punct(express, ,)
cc(express, but)
advmod(express, merely)
conj(assert, express)
obj(express, emotion)
case(Hurrah, like)
punct(Hurrah, ``)
nmod(emotion, Hurrah)
punct(Hurrah, '')
cc(express, or)
punct(Hurrah, ``)
vocative(cease, Fiddlesticks)
punct(Fiddlesticks, '')
punct(cease, ,)
advmod(cease, then)
det(judgment, these)
amod(judgment, wayward)
nsubj(cease, judgment)
aux(cease, would)
root(ROOT, cease)
case(head, from)
amod(head, troubling)
cc(weary, and)
conj(troubling, weary)
obl(cease, head)
aux(rest, could)
cop(rest, be)
case(rest, at)
advcl(cease, rest)
punct(cease, .)
nsubj(course, this)
cop(course, be)
det(course, the)
root(ROOT, course)
det(positivist, the)
nsubj(take, positivist)
acl:relcl(course, take)
punct(course, .)
nsubj(explain, they)
root(ROOT, explain)
compound(judgment, value)
obj(explain, judgment)
mark(explain, by)
advcl(explain, explain)
obj(explain, they)
advmod(explain, away)
punct(explain, .)
advmod(think, now)
nsubj(think, I)
aux(think, do)
advmod(think, not)
root(ROOT, think)
nmod:poss(view, they)
nsubj(do, view)
aux(do, will)
ccomp(think, do)
punct(think, .)
cc(like, but)
mark(discuss, before)
advcl(like, discuss)
obj(discuss, it)
punct(like, ,)
nsubj(like, I)
aux(like, should)
root(ROOT, like)
mark(record, to)
xcomp(like, record)
nummod(vote, one)
obj(record, vote)
case(thanks, of)
nmod(vote, thanks)
case(they, to)
nmod(thanks, they)
case(clarity, for)
det(clarity, the)
obl(record, clarity)
case(which, with)
obl(state, which)
nsubj(state, they)
aux(state, have)
acl:relcl(clarity, state)
nmod:poss(case, they)
obj(state, case)
punct(like, .)
nsubj:pass(say, it)
aux(say, have)
aux:pass(say, be)
root(ROOT, say)
case(John, of)
obl(say, John)
flat(John, Stuart)
flat(John, mill)
mark(write, that)
nsubj(write, he)
ccomp(say, write)
advmod(clearly, so)
advmod(write, clearly)
mark(find, that)
nsubj:pass(find, he)
aux(find, could)
aux:pass(find, be)
ccomp(write, find)
compound:prt(find, out)
punct(say, .)
det(theory, this)
nsubj:pass(put, theory)
aux(put, have)
aux:pass(put, be)
root(ROOT, put)
advmod(clearly, so)
advmod(put, clearly)
cc(precisely, and)
advmod(deserve, precisely)
mark(deserve, that)
nsubj(deserve, it)
conj(put, deserve)
obj(deserve, criticism)
case(kind, of)
det(kind, the)
amod(kind, same)
nmod(criticism, kind)
punct(do, ,)
cc(do, and)
nsubj(do, this)
nsubj(do, I)
aux(do, will)
conj(put, do)
nmod:poss(best, my)
obj(do, best)
mark(supply, to)
advcl(do, supply)
punct(put, .)
det(theory, the)
nsubj(claim, theory)
root(ROOT, claim)
mark(show, to)
xcomp(claim, show)
case(analysis, by)
obl(show, analysis)
mark(say, that)
mark(say, when)
nsubj(say, we)
advcl(show, say)
punct(claim, ,)
punct(claim, ``)
nsubj(good, that)
cop(good, be)
root(ROOT, good)
punct(good, '')
punct(good, ,)
nsubj(mean, we)
aux(mean, do)
advmod(mean, not)
parataxis(good, mean)
mark(assert, to)
xcomp(mean, assert)
det(character, a)
obj(assert, character)
case(subject, of)
det(subject, the)
nmod(character, subject)
case(which, of)
obj(think, which)
nsubj(think, we)
aux(think, be)
acl:relcl(subject, think)
punct(good, . )
nsubj(argue, I)
aux(argue, shall)
root(ROOT, argue)
mark(mean, that)
nsubj(mean, we)
aux(mean, do)
ccomp(argue, mean)
mark(do, to)
xcomp(mean, do)
advmod(that, just)
obj(do, that)
punct(argue, .)
root(ROOT, let)
obj(let, we)
xcomp(let, work)
case(example, through)
det(example, a)
obl(work, example)
punct(better, ,)
cc(better, and)
det(simpler, the)
nsubj(better, simpler)
cc(commoner, and)
conj(simpler, commoner)
det(better, the)
conj(let, better)
punct(let, .)
expl(be, there)
root(ROOT, be)
advmod(be, perhaps)
det(statement, no)
compound(statement, value)
nsubj(be, statement)
case(which, on)
obl(agree, which)
nsubj(agree, people)
aux(agree, would)
advmod(agree, more)
advmod(agree, universally)
acl:relcl(statement, agree)
case(statement, than)
det(statement, the)
obl(agree, statement)
mark(bad, that)
amod(pain, intense)
nsubj(bad, pain)
cop(bad, be)
acl(statement, bad)
punct(be, .)
root(ROOT, let)
obj(let, we)
xcomp(let, take)
det(set, a)
obj(take, set)
case(circumstance, of)
nmod(set, circumstance)
case(which, in)
obl(happen, which)
nsubj(happen, I)
acl:relcl(circumstance, happen)
mark(interested, to)
cop(interested, be)
xcomp(happen, interested)
case(side, on)
det(side, the)
amod(side, legislative)
obl(interested, side)
cc(think, and)
case(which, in)
obl(think, which)
nsubj(think, I)
conj(let, think)
det(one, every)
nsubj(make, one)
case(we, of)
nmod(one, we)
aux(make, might)
advmod(make, naturally)
ccomp(think, make)
det:predet(statement, such)
det(statement, a)
obj(make, statement)
punct(let, .)
nsubj(come, we)
root(ROOT, come)
case(rabbit, upon)
det(rabbit, a)
obl(come, rabbit)
nsubj:pass(catch, that)
aux(catch, have)
aux:pass(catch, be)
acl:relcl(rabbit, catch)
case(one, in)
obl(catch, one)
case(trap, of)
det(trap, the)
amod(trap, brutal)
nmod(one, trap)
case(use, in)
amod(use, common)
nmod(trap, use)
punct(come, .)
expl(be, there)
root(ROOT, be)
nsubj(be, sign)
mark(struggle, that)
nsubj(struggle, it)
aux(struggle, have)
acl(sign, struggle)
case(day, for)
obl(struggle, day)
mark(escape, to)
advcl(struggle, escape)
cc(frenzy, and)
mark(frenzy, that)
case(frenzy, in)
det(frenzy, a)
obl(escape, frenzy)
case(hunger, of)
nmod(frenzy, hunger)
punct(pain, ,)
conj(hunger, pain)
punct(fear, ,)
cc(fear, and)
conj(hunger, fear)
punct(eat, ,)
nsubj(eat, it)
aux(eat, have)
advmod(eat, all)
cc(eat, but)
conj(struggle, eat)
compound:prt(eat, off)
nmod:poss(leg, it)
case(it, 's)
amod(leg, own)
obj(eat, leg)
punct(be, .)
det(attempt, the)
nsubj(fail, attempt)
root(ROOT, fail)
punct(fail, :)
det(animal, the)
nsubj(dead, animal)
cop(dead, be)
advmod(dead, now)
ccomp(fail, dead)
punct(fail, .)
mark(think, as)
nsubj(think, we)
advcl(likely, think)
case(pain, of)
det(pain, the)
amod(pain, long)
cc(excruciating, and)
conj(long, excruciating)
obl(think, pain)
nsubj(suffer, it)
aux(suffer, must)
aux(suffer, have)
advcl(likely, suffer)
punct(likely, ,)
nsubj(likely, we)
cop(likely, be)
advmod(likely, very)
root(ROOT, likely)
mark(say, to)
xcomp(likely, say)
punct(likely, :)
punct(likely, ``)
expl(thing, it)
cop(thing, be)
det(thing, a)
amod(thing, bad)
root(ROOT, thing)
mark(suffer, that)
det(animal, the)
amod(animal, little)
nsubj(suffer, animal)
aux(suffer, should)
csubj(thing, suffer)
advmod(suffer, so)
punct(thing, '')
punct(tell, .)
det(positivist, the)
nsubj(tell, positivist)
parataxis(thing, tell)
obj(tell, we)
mark(express, that)
mark(say, when)
nsubj(say, we)
advcl(tell, say)
nsubj(express, this)
nsubj(express, we)
aux(express, be)
advmod(express, only)
ccomp(say, express)
nmod:poss(emotion, we)
amod(emotion, present)
obj(express, emotion)
punct(tell, . )
nsubj(hold, I)
root(ROOT, hold)
punct(hold, ,)
case(contrary, on)
det(contrary, the)
obl(hold, contrary)
punct(hold, ,)
mark(mean, that)
nsubj(mean, we)
ccomp(hold, mean)
mark(assert, to)
xcomp(mean, assert)
obj(assert, something)
case(pain, of)
det(pain, the)
nmod(something, pain)
nmod:npmod(pain, itself)
punct(assert, ,)
advmod(bad, namely)
punct(bad, ,)
mark(bad, that)
nsubj(bad, it)
cop(bad, be)
parataxis(hold, bad)
punct(bad, --)
parataxis(bad, bad)
mark(occur, when)
cc(occur, and)
mark(occur, as)
nsubj(occur, it)
advcl(bad, occur)
punct(hold, .)
root(ROOT, consider)
nsubj(follow, what)
ccomp(consider, follow)
case(view, from)
det(view, the)
amod(view, positivist)
obl(follow, view)
punct(consider, .)
case(view, on)
det(view, that)
obl(happen, view)
punct(happen, ,)
nsubj(happen, nothing)
amod(nothing, good)
cc(bad, or)
conj(good, bad)
root(ROOT, happen)
case(case, in)
det(case, the)
obl(happen, case)
mark(come, until)
nsubj(come, I)
advcl(happen, come)
case(scene, on)
det(scene, the)
obl(come, scene)
cc(make, and)
conj(come, make)
nmod:poss(remark, my)
obj(make, remark)
punct(make, .)
case(what, for)
nsubj(something, what)
nsubj(express, I)
acl:relcl(what, express)
case(remark, in)
nmod:poss(remark, my)
obl(express, remark)
cop(something, be)
conj(happen, something)
acl(something, go)
compound:prt(go, on)
case(I, in)
obl(go, I)
case(time, at)
det(time, the)
obl(go, time)
punct(exist, ,)
cc(exist, and)
mark(exist, that)
advmod(exist, of)
fixed(of, course)
aux(exist, do)
advmod(exist, not)
conj(something, exist)
mark(come, until)
nsubj(come, I)
aux(come, do)
advcl(exist, come)
case(scene, on)
det(scene, the)
obl(come, scene)
punct(happen, .)
det(pain, the)
nsubj(bad, pain)
case(rabbit, of)
det(rabbit, the)
nmod(pain, rabbit)
cop(bad, be)
advmod(bad, not)
obl:npmod(bad, itself)
root(ROOT, bad)
punct(bad, ;)
punct(bad, ;)
parataxis(bad, nothing)
nsubj(happen, evil)
aux(happen, be)
acl:relcl(nothing, happen)
mark(endure, when)
det(pain, that)
nsubj:pass(endure, pain)
aux(endure, be)
aux:pass(endure, be)
advcl(happen, endure)
punct(bad, ;)
punct(bad, ;)
parataxis(bad, badness)
punct(sense, ,)
case(sense, in)
det(sense, the)
amod(sense, only)
nmod(badness, sense)
case(which, in)
obl(involved, which)
nsubj(involved, it)
cop(involved, be)
acl:relcl(sense, involved)
case(all, at)
obl(involved, all)
punct(wait, ,)
acl:relcl(sense, wait)
case(appearance, for)
nmod:poss(appearance, it)
case(it, 's)
obl(wait, appearance)
mark(come, till)
nsubj(come, I)
advcl(wait, come)
cc(look, and)
conj(come, look)
cc(feel, and)
conj(come, feel)
punct(bad, .)
advmod(show, now)
mark(odd, that)
nsubj(odd, this)
cop(odd, be)
case(odd, at)
ccomp(now, odd)
case(meaning, with)
nmod:poss(meaning, we)
nmod(odd, meaning)
aux(show, may)
aux:pass(show, be)
root(ROOT, show)
mark(follow, as)
advcl(show, follow)
punct(show, .)
root(ROOT, let)
obj(let, we)
xcomp(let, put)
case(ourselves, to)
obl(put, ourselves)
det(hypothesis, the)
obj(put, hypothesis)
mark(come, that)
nsubj(come, we)
aux(come, have)
advmod(come, not)
acl(hypothesis, come)
case(scene, on)
det(scene, the)
obl(come, scene)
cc(discover, and)
mark(discover, that)
det(rabbit, the)
nsubj:pass(discover, rabbit)
advmod(discover, never)
aux:pass(discover, be)
conj(come, discover)
punct(let, .)
aux:pass(prepare, be)
nsubj:pass(prepare, we)
root(ROOT, prepare)
mark(say, to)
xcomp(prepare, say)
mark(occur, that)
case(case, in)
det(case, that)
obl(occur, case)
nsubj(occur, nothing)
amod(nothing, bad)
ccomp(say, occur)
case(sense, in)
det(sense, the)
obl(occur, sense)
case(which, in)
obl(say, which)
nsubj(say, we)
acl:relcl(sense, say)
nsubj(do, it)
ccomp(say, do)
punct(prepare, ?)
punct(prepare, ?)
advmod(not, clearly)
root(ROOT, not)
punct(not, .)
advmod(say, indeed)
punct(say, ,)
nsubj(say, we)
aux(say, should)
root(ROOT, say)
punct(say, ,)
case(contrary, on)
det(contrary, the)
obl(say, contrary)
punct(say, ,)
mark(make, that)
det(accident, the)
nsubj(make, accident)
case(discovery, of)
nmod:poss(discovery, we)
amod(discovery, later)
nmod(accident, discovery)
ccomp(say, make)
det(difference, no)
obj(make, difference)
obj(make, whatever)
case(badness, to)
det(badness, the)
obl(make, badness)
case(pain, of)
det(animal, the)
nmod:poss(pain, animal)
case(animal, 's)
nmod(badness, pain)
punct(make, ,)
mark(be, that)
nsubj(be, it)
aux(be, would)
aux(be, have)
cop(whit, be)
det(whit, every)
obj(make, whit)
advmod(bad, as)
amod(whit, bad)
mark(passer, whether)
det(chance, a)
compound(passer, chance)
advcl(bad, passer)
punct(passer, -)
mark(happen, by)
advcl(bad, happen)
advmod(happen, later)
mark(discover, to)
advcl(happen, discover)
det(body, the)
obj(discover, body)
cc(feel, and)
conj(discover, feel)
obj(feel, repugnance)
cc(not, or)
conj(repugnance, not)
punct(say, .)
mark(so, if)
advcl(clear, so)
punct(clear, ,)
advmod(clear, then)
expl(clear, it)
cop(clear, be)
root(ROOT, clear)
mark(express, that)
mark(say, in)
advcl(express, say)
det(suffering, the)
nsubj(bad, suffering)
cop(bad, be)
ccomp(say, bad)
nsubj(express, we)
aux(express, be)
advmod(express, not)
csubj(clear, express)
nmod:poss(feeling, we)
obj(express, feeling)
advmod(express, only)
punct(clear, .)
nsubj(say, we)
aux(say, be)
root(ROOT, say)
mark(bad, that)
det(pain, the)
nsubj(bad, pain)
cop(bad, be)
ccomp(say, bad)
mark(occur, when)
cc(occur, and)
mark(occur, as)
nsubj(occur, it)
advcl(bad, occur)
cc(take, and)
mark(take, before)
nsubj(take, anyone)
conj(occur, take)
det(attitude, a)
obj(take, attitude)
case(it, toward)
nmod(attitude, it)
punct(say, .)
det(argument, the)
amod(argument, first)
nsubj(experiment, argument)
cop(experiment, be)
advmod(experiment, thus)
det(experiment, a)
amod(experiment, ideal)
root(ROOT, experiment)
case(which, in)
obl(use, which)
nsubj(use, we)
acl:relcl(experiment, use)
det(method, the)
obj(use, method)
case(difference, of)
nmod(method, difference)
punct(experiment, .)
nsubj(remove, it)
root(ROOT, remove)
nmod:poss(expression, we)
amod(expression, present)
obj(remove, expression)
cc(show, and)
conj(remove, show)
mark(affect, that)
det(badness, the)
nsubj:pass(affect, badness)
nsubj(mean, we)
acl:relcl(badness, mean)
aux(affect, would)
advmod(affect, not)
aux:pass(affect, be)
ccomp(show, affect)
case(this, by)
obl(affect, this)
punct(affect, ,)
mark(grounds, whereas)
case(grounds, on)
amod(grounds, positivist)
advcl(affect, grounds)
nsubj(be, it)
aux(be, should)
cop(grounds, be)
punct(remove, .)
det(argument, the)
amod(argument, second)
nsubj(apply, argument)
root(ROOT, apply)
det(method, the)
obj(apply, method)
case(way, in)
det(way, the)
amod(way, reverse)
obl(apply, way)
punct(apply, .)
nsubj(remove, it)
advmod(remove, ideally)
root(ROOT, remove)
det(event, the)
amod(event, past)
obj(remove, event)
punct(show, ,)
cc(show, and)
conj(remove, show)
mark(render, that)
nsubj(render, this)
aux(render, would)
ccomp(show, render)
xcomp(render, false)
obj(render, what)
nsubj(mean, we)
acl:relcl(what, mean)
mark(say, to)
xcomp(mean, say)
punct(render, ,)
mark(should, whereas)
case(grounds, on)
amod(grounds, positivist)
obl(should, grounds)
nsubj(should, it)
advcl(render, should)
advmod(should, not)
punct(remove, .)
root(ROOT, let)
obj(let, we)
xcomp(let, suppose)
mark(fall, that)
det(animal, the)
nsubj(fall, animal)
aux(fall, do)
advmod(fall, not)
case(fact, in)
obl(fall, fact)
ccomp(suppose, fall)
case(trap, into)
det(trap, the)
obl(fall, trap)
cc(suffer, and)
aux(suffer, do)
advmod(suffer, not)
conj(fall, suffer)
case(all, at)
obl(suffer, all)
punct(believe, ,)
cc(believe, but)
mark(believe, that)
nsubj(believe, we)
advmod(believe, mistakenly)
conj(suffer, believe)
nsubj(do, it)
ccomp(believe, do)
punct(say, ,)
cc(say, and)
conj(believe, say)
mark(suffer, as)
mark(suffer, before)
mark(suffer, that)
nsubj(suffer, it)
aux(suffer, be)
advcl(say, suffer)
cop(thing, be)
det(thing, a)
amod(thing, evil)
ccomp(suffer, thing)
punct(let, .)
case(theory, on)
det(theory, the)
amod(theory, positivist)
obl(present, theory)
punct(present, ,)
nsubj(present, everything)
nsubj(seek, I)
acl:relcl(everything, seek)
mark(express, to)
xcomp(seek, express)
mark(call, by)
advcl(express, call)
obj(call, it)
obj(call, evil)
case(case, in)
det(case, the)
amod(case, first)
obl(call, case)
cop(present, be)
advmod(present, still)
root(ROOT, present)
case(second, in)
det(second, the)
obl(present, second)
punct(present, .)
case(sense, in)
det(sense, the)
amod(sense, only)
obl(present, sense)
case(which, in)
obl(involved, which)
nsubj(involved, badness)
cop(involved, be)
acl:relcl(sense, involved)
case(all, at)
obl(involved, all)
punct(bad, ,)
root(ROOT, whatever)
cop(bad, be)
acl:relcl(whatever, bad)
case(case, in)
det(case, the)
amod(case, first)
obl(bad, case)
cop(present, be)
advmod(present, still)
conj(bad, present)
case(entirety, in)
nmod:poss(entirety, its)
obl(present, entirety)
punct(present, ,)
mark(state, since)
nsubj(state, all)
nsubj:pass(express, that)
aux:pass(express, be)
acl:relcl(all, express)
case(case, in)
det(case, either)
obl(express, case)
cop(state, be)
det(state, a)
advcl(present, state)
case(feeling, of)
nmod(state, feeling)
punct(there, ,)
cc(there, and)
det(feeling, that)
nsubj(there, feeling)
cop(there, be)
advmod(there, still)
conj(state, there)
punct(state, .)
cc(be, and)
nmod:poss(question, we)
nsubj(be, question)
root(ROOT, be)
punct(be, ,)
cop(implication, be)
det:predet(implication, such)
det(implication, a)
ccomp(be, implication)
amod(implication, consistent)
case(what, with)
obl(consistent, what)
nsubj(mean, we)
acl:relcl(what, mean)
punct(be, ?)
punct(be, ?)
advmod(be, clearly)
nsubj(be, it)
root(ROOT, be)
advmod(be, not)
punct(be, .)
mark(ask, if)
nsubj(ask, anyone)
advcl(say, ask)
obj(ask, we)
punct(ask, ,)
mark(make, after)
nsubj(make, we)
advcl(ask, make)
det(remark, the)
obj(make, remark)
mark(thing, that)
det(suffering, the)
nsubj(thing, suffering)
cop(thing, be)
det(thing, a)
amod(thing, bad)
acl(remark, thing)
punct(thing, ,)
mark(think, whether)
nsubj(think, we)
aux(think, should)
advcl(thing, think)
obj(think, it)
xcomp(think, relevant)
case(what, to)
obl(relevant, what)
nsubj(say, we)
acl:relcl(what, say)
mark(learn, to)
xcomp(say, learn)
mark(occur, that)
det(incident, the)
nsubj(occur, incident)
aux(occur, have)
advmod(occur, never)
ccomp(learn, occur)
cc(suffer, and)
det(pain, no)
nsubj:pass(suffer, pain)
aux(suffer, have)
aux:pass(suffer, be)
conj(occur, suffer)
case(all, at)
obl(suffer, all)
punct(say, ,)
nsubj(say, we)
aux(say, should)
root(ROOT, say)
mark(make, that)
nsubj(make, it)
ccomp(say, make)
det:predet(difference, all)
det(difference, the)
obj(make, difference)
case(world, in)
det(world, the)
nmod(difference, world)
punct(make, ,)
mark(suffering, that)
obj(assert, what)
nsubj(assert, we)
aux(assert, be)
acl:relcl(suffering, assert)
mark(bad, to)
cop(bad, be)
xcomp(assert, bad)
cop(suffering, be)
advmod(suffering, precisely)
det(suffering, the)
conj(make, suffering)
nsubj(think, we)
acl:relcl(suffering, think)
aux(occur, have)
ccomp(think, occur)
advmod(there, back)
advmod(occur, there)
punct(suffering, ,)
mark(be, that)
mark(occur, if)
nsubj(occur, this)
aux(occur, have)
advmod(occur, not)
advcl(be, occur)
punct(be, ,)
expl(be, there)
conj(suffering, be)
nsubj(be, nothing)
acl(nothing, leave)
mark(bad, to)
cop(bad, be)
xcomp(leave, bad)
punct(mistaken, ,)
cc(mistaken, and)
mark(mistaken, that)
nmod:poss(assertion, we)
nsubj(mistaken, assertion)
cop(mistaken, be)
case(case, in)
det(case, that)
obl(mistaken, case)
conj(be, mistaken)
punct(say, .)
det(suggestion, the)
nsubj(be, suggestion)
mark(occur, that)
mark(say, in)
acl(suggestion, say)
obj(say, something)
nsubj(occur, evil)
aux(occur, have)
acl:relcl(something, occur)
nsubj(be, we)
root(ROOT, be)
mark(make, after)
advmod(make, all)
advcl(be, make)
det(mistake, no)
obj(make, mistake)
punct(make, ,)
mark(mean, because)
nsubj(mean, we)
aux(mean, have)
advmod(mean, never)
advcl(make, mean)
advmod(mean, anyhow)
mark(say, to)
xcomp(mean, say)
obj(say, anything)
case(suffering, about)
det(suffering, the)
amod(suffering, past)
nmod(anything, suffering)
punct(seem, ,)
parataxis(suggestion, seem)
case(I, to)
obl(seem, I)
advmod(frivolous, merely)
xcomp(seem, frivolous)
punct(seem, .)
mark(mean, if)
nsubj(mean, we)
aux(mean, do)
advmod(mean, not)
advcl(relieved, mean)
mark(say, to)
xcomp(mean, say)
obj(say, this)
punct(relieved, ,)
advmod(relieved, why)
aux(relieved, should)
nsubj(relieved, we)
cop(relieved, be)
advmod(relieved, so)
root(ROOT, relieved)
mark(find, on)
advcl(relieved, find)
mark(occur, that)
det(suffering, the)
nsubj(occur, suffering)
aux(occur, have)
advmod(occur, not)
ccomp(find, occur)
punct(relieved, ?)
punct(relieved, ?)
case(theory, on)
det(theory, the)
obl(groundless, theory)
case(we, before)
nmod(theory, we)
punct(groundless, ,)
amod(relief, such)
nsubj(groundless, relief)
aux(groundless, would)
cop(groundless, be)
root(ROOT, groundless)
punct(groundless, ,)
mark(be, for)
mark(be, in)
mark(be, that)
advcl(be, suffer)
obj(suffer, itself)
expl(be, there)
advcl(groundless, be)
nsubj(be, nothing)
amod(nothing, bad)
case(all, at)
obl(bad, all)
punct(be, ,)
cc(be, and)
advmod(nonoccurrence, hence)
case(nonoccurrence, in)
nmod:poss(nonoccurrence, its)
obl(be, nonoccurrence)
expl(be, there)
aux(be, would)
conj(groundless, be)
nsubj(be, nothing)
mark(relieved, to)
aux:pass(relieved, be)
acl(nothing, relieved)
obl(relieved, about)
punct(groundless, .)
det(theory, the)
amod(theory, positivist)
nsubj(distort, theory)
aux(distort, would)
advmod(distort, here)
root(ROOT, distort)
nmod:poss(meaning, we)
obj(distort, meaning)
case(recognition, beyond)
obl(distort, recognition)
punct(distort, .)
advmod(far, so)
advmod(be, far)
mark(see, as)
nsubj(see, I)
aux(see, can)
advcl(far, see)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(way, only)
nummod(way, one)
nsubj(be, way)
advmod(way, out)
case(positivist, for)
det(positivist, the)
nmod(way, positivist)
punct(be, .)
nsubj(hold, he)
root(ROOT, hold)
mark(lie, that)
nsubj(lie, goodness)
cc(badness, and)
conj(goodness, badness)
ccomp(hold, lie)
case(feeling, in)
obl(lie, feeling)
case(approval, of)
nmod(feeling, approval)
cc(disapproval, or)
conj(approval, disapproval)
punct(hold, .)
cc(be, and)
expl(be, there)
root(ROOT, be)
det(way, a)
nsubj(be, way)
case(which, in)
obl(hold, which)
nsubj(hold, he)
aux(hold, might)
acl:relcl(way, hold)
mark(precede, that)
nsubj(precede, badness)
aux(precede, do)
case(case, in)
det(case, this)
obl(precede, case)
ccomp(hold, precede)
nmod:poss(feeling, we)
amod(feeling, own)
obj(precede, feeling)
case(disapproval, of)
nmod(feeling, disapproval)
mark(belong, without)
advcl(precede, belong)
case(pain, to)
det(pain, the)
obl(belong, pain)
nmod:npmod(pain, itself)
punct(be, .)
det(pain, the)
nsubj(neutral, pain)
case(itself, in)
nmod(pain, itself)
cop(neutral, be)
root(ROOT, neutral)
punct(neutral, ;)
punct(neutral, ;)
cc(take, but)
advmod(take, unfortunately)
det(rabbit, the)
nsubj(take, rabbit)
punct(rabbit, ,)
case(grounds, on)
det(grounds, no)
obl(take, grounds)
case(all, at)
nmod(grounds, all)
punct(take, ,)
conj(neutral, take)
compound:prt(take, up)
case(object, toward)
det(object, this)
amod(object, neutral)
obl(take, object)
det(attitude, a)
obj(take, attitude)
case(disapproval, of)
nmod(attitude, disapproval)
cc(make, and)
nsubj(make, that)
conj(attitude, make)
obj(make, it)
case(time, for)
det(time, the)
amod(time, first)
obl(make, time)
punct(sense, ,)
cc(sense, and)
case(sense, in)
det(sense, the)
advmod(sense, only)
amod(sense, intelligible)
conj(time, sense)
punct(sense, ,)
amod(sense, bad)
punct(neutral, .)
det(way, this)
nsubj(possible, way)
case(escape, of)
nmod(way, escape)
cop(possible, be)
advmod(possible, theoretically)
root(ROOT, possible)
punct(best, ,)
cc(best, but)
mark(have, since)
nsubj(have, it)
advcl(best, have)
compound(difficulty, grave)
obj(have, difficulty)
case(own, of)
nmod:poss(own, its)
nmod(difficulty, own)
cc(have, and)
aux(urge, have)
advmod(urge, not)
punct(best, ,)
advmod(far, so)
advmod(best, far)
mark(know, as)
nsubj(know, I)
advcl(far, know)
punct(urge, ,)
aux:pass(urge, be)
advcl(far, urge)
case(positivist, by)
obl(urge, positivist)
punct(best, ,)
expl(best, it)
cop(best, be)
advmod(best, perhaps)
conj(possible, best)
advmod(spend, not)
mark(spend, to)
csubj(best, spend)
obj(spend, time)
case(it, over)
obl(spend, it)
punct(possible, . )
nsubj(come, I)
root(ROOT, come)
advmod(come, now)
case(argument, to)
det(argument, a)
amod(argument, third)
obl(come, argument)
punct(argument, ,)
nsubj(simple, which)
advmod(simple, again)
cop(simple, be)
advmod(simple, very)
acl:relcl(argument, simple)
punct(come, .)
mark(come, when)
nsubj(come, we)
advcl(make, come)
case(rabbit, upon)
det(rabbit, the)
obl(come, rabbit)
cc(make, and)
conj(come, make)
nmod:poss(remark, we)
obj(make, remark)
mark(suffer, about)
nsubj(suffer, it)
aux(suffer, be)
advcl(make, suffer)
cop(thing, be)
det(thing, a)
amod(thing, bad)
xcomp(suffer, thing)
punct(make, ,)
nsubj(make, we)
advmod(make, presumably)
root(ROOT, make)
obj(make, it)
case(feeling, with)
det(feeling, some)
obl(make, feeling)
punct(make, ;)
punct(make, ;)
det(positivist, the)
nsubj(right, positivist)
cop(right, be)
advmod(right, plainly)
parataxis(make, right)
mark(say, in)
advcl(right, say)
mark(express, that)
amod(remark, such)
nsubj(express, remark)
aux(express, do)
advmod(express, usually)
ccomp(say, express)
obj(express, feeling)
punct(make, .)
cc(suppose, but)
root(ROOT, suppose)
obj(suppose, that)
det(week, a)
obl:npmod(later, week)
advmod(revert, later)
nsubj(revert, we)
ccomp(suppose, revert)
case(incident, to)
det(incident, the)
obl(revert, incident)
case(thought, in)
obl(revert, thought)
cc(make, and)
conj(revert, make)
nmod:poss(statement, we)
obj(make, statement)
advmod(make, again)
punct(suppose, .)
cc(suppose, and)
root(ROOT, suppose)
mark(change, that)
det(circumstance, the)
nsubj(change, circumstance)
aux(change, have)
advmod(change, now)
advmod(change, so)
ccomp(suppose, change)
mark(fad, that)
det(feeling, the)
nsubj(fad, feeling)
case(which, with)
obl(make, which)
nsubj(make, we)
acl:relcl(feeling, make)
det(remark, the)
obj(make, remark)
case(place, in)
det(place, the)
amod(place, first)
nmod(remark, place)
aux(fad, have)
ccomp(change, fad)
punct(suppose, .)
det(evidence, the)
amod(evidence, pathetic)
nsubj(we, evidence)
cop(we, be)
advmod(longer, no)
advmod(we, longer)
case(we, before)
root(ROOT, we)
punct(we, ;)
punct(we, ;)
cc(fatigue, and)
nsubj(fatigue, we)
cop(fatigue, be)
advmod(fatigue, now)
advmod(fatigue, so)
conj(we, fatigue)
case(body, in)
obl(fatigue, body)
cc(mind, and)
conj(body, mind)
det(feeling, that)
nsubj(be, feeling)
conj(fatigue, be)
punct(be, ,)
mark(say, as)
nsubj(say, we)
advcl(be, say)
punct(dead, ,)
advmod(dead, quite)
ccomp(say, dead)
punct(we, .)
case(circumstance, in)
det(circumstance, these)
obl(express, circumstance)
punct(express, ,)
mark(express, since)
nsubj:pass(express, what)
aux:pass(express, be)
advcl(express, express)
case(remark, by)
det(remark, the)
obl(express, remark)
mark(make, when)
advmod(make, first)
advcl(express, make)
cop(make, be)
punct(theory, ,)
case(theory, on)
det(theory, the)
obl(make, theory)
case(we, before)
nmod(theory, we)
punct(absent, ,)
advmod(absent, simply)
conj(theory, absent)
punct(express, ,)
det(remark, the)
nsubj(express, remark)
advmod(express, now)
root(ROOT, express)
obj(express, nothing)
punct(express, .)
nsubj(empty, it)
cop(empty, be)
advmod(empty, as)
root(ROOT, empty)
mark(be, as)
det(word, the)
nsubj(be, word)
punct(Hurrah, ``)
appos(word, Hurrah)
punct(Hurrah, '')
aux(be, would)
ccomp(empty, be)
mark(be, when)
expl(be, there)
advcl(be, be)
det(enthusiasm, no)
nsubj(be, enthusiasm)
case(it, behind)
nmod(enthusiasm, it)
punct(empty, .)
cc(seem, and)
nsubj(seem, this)
root(ROOT, seem)
case(I, to)
obl(seem, I)
xcomp(seem, untrue)
punct(seem, .)
mark(repeat, when)
nsubj(repeat, we)
advcl(seem, repeat)
det(remark, the)
obj(repeat, remark)
mark(thing, that)
amod(suffering, such)
nsubj(thing, suffering)
cop(thing, be)
det(thing, a)
amod(thing, bad)
acl(remark, thing)
punct(thing, ,)
det(feeling, the)
nsubj(answer, feeling)
case(which, with)
obl(make, which)
nsubj(make, we)
acl:relcl(feeling, make)
obj(make, it)
amod(week, last)
obl:tmod(make, week)
aux(point, may)
cop(point, be)
case(point, at)
cc(point, or)
conj(at, near)
det(point, the)
compound(point, vanish)
ccomp(ask, point)
punct(answer, ,)
cc(answer, but)
mark(ask, if)
nsubj:pass(ask, we)
aux:pass(ask, be)
advcl(answer, ask)
mark(mean, whether)
nsubj(mean, we)
ccomp(ask, mean)
mark(say, to)
xcomp(mean, say)
obj(do, what)
nsubj(do, we)
ccomp(say, do)
advmod(do, before)
punct(answer, ,)
nsubj(answer, we)
aux(answer, should)
advmod(answer, certainly)
conj(seem, answer)
discourse(answer, yes)
punct(seem, .)
nsubj(say, we)
aux(say, should)
root(ROOT, say)
mark(make, that)
nsubj(make, we)
ccomp(say, make)
nmod:poss(point, we)
obj(make, point)
mark(feel, with)
advcl(make, feel)
det(time, the)
amod(time, first)
obj(feel, time)
cc(little, and)
conj(time, little)
cc(feel, or)
det(feel, no)
conj(make, feel)
det(time, the)
amod(time, second)
obl:tmod(feel, time)
punct(point, ,)
cc(point, but)
mark(point, that)
nsubj(point, it)
cop(point, be)
det(point, the)
amod(point, same)
conj(feel, point)
nsubj(make, we)
aux(make, be)
acl:relcl(point, make)
punct(say, .)
cc(feeling, and)
mark(see, if)
nsubj(see, we)
aux(see, can)
advcl(feeling, see)
mark(remain, that)
obj(remain, what)
nsubj(mean, we)
acl:relcl(what, mean)
mark(say, to)
xcomp(mean, say)
ccomp(see, remain)
det(same, the)
xcomp(remain, same)
punct(same, ,)
mark(vary, while)
det(feeling, the)
nsubj(vary, feeling)
advcl(feeling, vary)
case(intensity, from)
obl(vary, intensity)
case(zero, to)
case(zero, near)
obl(vary, zero)
punct(feeling, ,)
nsubj(feeling, it)
cop(feeling, be)
advmod(feeling, not)
det(feeling, the)
root(ROOT, feeling)
mark(mean, that)
nsubj(mean, we)
advmod(mean, primarily)
acl:relcl(feeling, mean)
mark(express, to)
xcomp(mean, express)
punct(feeling, . )
nsubj(come, I)
root(ROOT, come)
advmod(come, now)
case(consideration, to)
det(consideration, a)
amod(consideration, fourth)
obl(come, consideration)
punct(come, .)
nsubj(believe, we)
det(we, all)
root(ROOT, believe)
mark(fitting, that)
case(act, toward)
obl(fitting, act)
cc(effect, or)
conj(act, effect)
case(kind, of)
det(kind, a)
amod(kind, certain)
nmod(act, kind)
nummod(attitude, one)
nsubj(fitting, attitude)
aux(fitting, be)
ccomp(believe, fitting)
cc(not, and)
nsubj(not, another)
conj(fitting, not)
punct(believe, ;)
punct(believe, ;)
cc(theory, but)
case(theory, on)
det(theory, the)
obl(make, theory)
mark(make, before)
nsubj(make, we)
det:predet(belief, such)
det(belief, a)
nsubj(make, belief)
aux(make, would)
advmod(make, not)
advcl(fitting, make)
obj(make, sense)
punct(believe, .)
nsubj(contend, Broad)
cc(Ross, and)
conj(Broad, Ross)
aux(contend, have)
advmod(contend, lately)
root(ROOT, contend)
mark(one, that)
det(fitness, this)
nsubj(one, fitness)
cop(one, be)
ccomp(contend, one)
case(fact, of)
det(fact, the)
amod(fact, main)
nmod(one, fact)
case(ethic, of)
nmod(fact, ethic)
punct(suspect, ,)
cc(suspect, and)
nsubj(suspect, I)
conj(contend, suspect)
nsubj(right, they)
cop(right, be)
ccomp(suspect, right)
punct(contend, .)
cc(point, but)
nsubj(point, that)
cop(point, be)
advmod(point, not)
advmod(point, exactly)
nmod:poss(point, my)
root(ROOT, point)
punct(point, .)
nmod:poss(point, my)
nsubj(this, point)
cop(this, be)
root(ROOT, this)
punct(this, :)
mark(be, whether)
expl(be, there)
parataxis(this, be)
amod(fitness, such)
nsubj(be, fitness)
cc(not, or)
conj(fitness, not)
punct(assume, ,)
nsubj(assume, we)
det(we, all)
parataxis(this, assume)
mark(be, that)
expl(be, there)
ccomp(assume, be)
punct(express, ,)
cc(express, and)
mark(do, if)
nsubj(do, we)
advcl(express, do)
punct(express, ,)
nsubj(express, we)
conj(assume, express)
case(judgment, in)
amod(judgment, moral)
obl(express, judgment)
advmod(express, more)
mark(say, than)
det(subjectivist, the)
nsubj(say, subjectivist)
advcl(more, say)
nsubj(do, we)
ccomp(say, do)
punct(this, .)
root(ROOT, let)
obj(let, I)
xcomp(let, illustrate)
punct(let, .)
case(novel, in)
nmod:poss(novel, he)
obl(tell, novel)
det(House, the)
nsubj(tell, House)
case(dead, of)
det(dead, the)
nmod(House, dead)
punct(tell, ,)
nsubj(tell, dostoevsky)
root(ROOT, tell)
case(experience, of)
nmod:poss(experience, he)
obl(tell, experience)
case(camp, in)
det(camp, a)
amod(camp, siberian)
compound(camp, prison)
nmod(experience, camp)
punct(tell, .)
obj(tell, whatever)
det(inmate, the)
amod(inmate, unhappy)
nsubj(whatever, inmate)
case(camp, of)
amod(camp, such)
nmod(inmate, camp)
cop(today, be)
case(today, like)
obl(whatever, today)
punct(grim, ,)
nmod:poss(companion, dostoevsky)
case(dostoevsky, 's)
nsubj(grim, companion)
cop(grim, be)
case(grim, about)
advmod(grim, as)
parataxis(today, grim)
det(lot, a)
obl:npmod(grim, lot)
mark(imagine, as)
aux(imagine, can)
aux:pass(imagine, be)
advcl(grim, imagine)
punct(grim, .)
punct(grim, ``)
nsubj(hear, I)
aux(hear, have)
root(ROOT, hear)
obj(hear, story)
punct(hear, '')
punct(hear, ,)
nsubj(write, he)
parataxis(hear, write)
punct(write, ,)
punct(write, ``)
case(action, of)
det(action, the)
advmod(terrible, most)
amod(action, terrible)
punct(action, ,)
det(action, the)
advmod(unnatural, most)
amod(action, unnatural)
obl(write, action)
punct(action, ,)
case(murder, of)
det(murder, the)
advmod(monstrous, most)
amod(murder, monstrous)
nmod(action, murder)
punct(murder, ,)
acl(murder, tell)
case(laughter, with)
det(laughter, the)
advmod(spontaneous, most)
amod(laughter, spontaneous)
punct(laughter, ,)
advmod(merry, childishly)
amod(laughter, merry)
obl(tell, laughter)
punct(laughter, '')
punct(say, .)
nsubj(say, most)
case(we, of)
nmod(most, we)
aux(say, would)
parataxis(hear, say)
mark(be, that)
case(delight, in)
det(delight, this)
obl(say, delight)
case(killing, at)
det(killing, the)
nmod(delight, killing)
case(other, of)
nmod(killing, other)
cc(cause, or)
det(cause, the)
conj(killing, cause)
mark(suffer, of)
acl(cause, suffer)
expl(be, there)
acl(cause, be)
nsubj(be, something)
advmod(unfitting, very)
advmod(be, unfitting)
punct(hear, .)
mark(ask, if)
nsubj:pass(ask, we)
aux:pass(ask, be)
advcl(say, ask)
advmod(think, why)
nsubj(think, we)
advcl(ask, think)
advmod(think, so)
punct(say, ,)
nsubj(say, we)
aux(say, should)
root(ROOT, say)
mark(involve, that)
det(thing, these)
nsubj(involve, thing)
ccomp(say, involve)
amod(evil, great)
obj(involve, evil)
cc(wrong, and)
cop(wrong, be)
conj(involve, wrong)
punct(take, ,)
cc(take, and)
nsubj(take, that)
mark(take, to)
conj(wrong, take)
obj(take, delight)
case(what, in)
nmod(delight, what)
cop(evil, be)
acl:relcl(what, evil)
cc(unfitting, or)
conj(evil, wrong)
aux(unfitting, be)
advmod(unfitting, plainly)
conj(evil, unfitting)
punct(say, .)
advmod(rule, now)
case(view, on)
det(view, the)
amod(view, subjectivist)
obl(rule, view)
punct(rule, ,)
det(answer, this)
nsubj:pass(rule, answer)
aux:pass(rule, be)
root(ROOT, rule)
compound:prt(rule, out)
punct(rule, .)
mark(take, for)
mark(take, before)
nsubj(take, someone)
advcl(have, take)
compound:prt(take, up)
det(attitude, a)
obj(take, attitude)
case(death, toward)
nmod(attitude, death)
punct(suffer, ,)
conj(death, suffer)
punct(infliction, ,)
cc(infliction, or)
nmod:poss(infliction, they)
conj(death, infliction)
punct(have, ,)
nsubj(have, they)
root(ROOT, have)
det(quality, no)
amod(quality, moral)
obj(have, quality)
case(all, at)
nmod(quality, all)
punct(have, .)
expl(be, there)
root(ROOT, be)
advmod(be, therefore)
nsubj(be, nothing)
case(they, about)
nmod(nothing, they)
case(which, to)
obl(fitting, which)
det(attitude, a)
nsubj(fitting, attitude)
case(approval, of)
nmod(attitude, approval)
cc(condemnation, or)
conj(approval, condemnation)
aux(fitting, could)
aux(fitting, be)
acl:relcl(nothing, fitting)
punct(be, .)
nsubj(neutral, they)
cop(neutral, be)
case(themselves, in)
obl(neutral, themselves)
root(ROOT, neutral)
punct(get, ,)
cc(get, and)
punct(get, ,)
advmod(far, so)
advmod(get, far)
mark(get, as)
nsubj(get, they)
advcl(far, get)
det(quality, a)
amod(quality, moral)
obj(get, quality)
punct(get, ,)
nsubj(get, they)
conj(neutral, get)
obj(get, it)
advmod(invest, only)
mark(invest, through)
aux:pass(invest, be)
advcl(get, invest)
case(it, with)
obl(invest, it)
case(attitude, by)
det(attitude, the)
obl(invest, attitude)
case(onlooker, of)
det(onlooker, the)
nmod(attitude, onlooker)
punct(neutral, .)
cc(fitting, but)
mark(true, if)
nsubj(true, that)
cop(true, be)
advcl(fitting, true)
punct(fitting, ,)
advmod(fitting, why)
cop(fitting, be)
det(attitude, any)
nsubj(fitting, attitude)
advmod(fitting, more)
root(ROOT, fitting)
case(other, than)
det(other, any)
obl(fitting, other)
punct(fitting, ?)
punct(fitting, ?)
aux(fitting, would)
nsubj(fitting, applause)
punct(fitting, ,)
case(example, for)
obl(fitting, example)
punct(fitting, ,)
aux(fitting, be)
root(ROOT, fitting)
mark(be, if)
punct(fitting, ,)
advmod(be, apart)
case(applause, from)
det(applause, the)
obl(apart, applause)
punct(be, ,)
expl(be, there)
parataxis(fitting, be)
nsubj(be, nothing)
amod(nothing, good)
mark(applaud, to)
advcl(good, applaud)
punct(fitting, ?)
punct(fitting, ?)
aux(fitting, would)
nsubj(fitting, condemnation)
aux(fitting, be)
root(ROOT, fitting)
mark(be, if)
punct(be, ,)
advmod(be, independently)
case(condemnation, of)
det(condemnation, the)
obl(independently, condemnation)
punct(be, ,)
expl(be, there)
parataxis(fitting, be)
nsubj(be, nothing)
amod(nothing, bad)
mark(condemn, to)
advcl(bad, condemn)
punct(fitting, ?)
punct(fitting, ?)
case(case, in)
det:predet(case, such)
det(case, a)
obl(be, case)
punct(be, ,)
det(attitude, any)
nsubj(be, attitude)
aux(be, would)
root(ROOT, be)
mark(fitting, as)
advcl(be, fitting)
cc(unfitting, or)
conj(fitting, unfitting)
case(other, as)
det(other, any)
obl(fitting, other)
punct(be, ,)
nsubj(mean, which)
ccomp(be, mean)
mark(lose, that)
det(notion, the)
nsubj(lose, notion)
case(fitness, of)
nmod(notion, fitness)
aux(lose, have)
ccomp(mean, lose)
det(point, all)
obj(lose, point)
punct(be, .)
advmod(force, indeed)
punct(force, ,)
nsubj:pass(force, we)
aux:pass(force, be)
root(ROOT, force)
mark(go, to)
xcomp(force, go)
advmod(farther, much)
advmod(go, farther)
punct(force, .)
mark(lie, if)
nsubj(lie, goodness)
cc(badness, and)
conj(goodness, badness)
advcl(take, lie)
case(attitude, in)
obl(lie, attitude)
advmod(lie, only)
cc(bring, and)
advmod(bring, hence)
aux:pass(bring, be)
conj(lie, bring)
mark(they, into)
cop(they, be)
case(they, by)
advcl(bring, they)
punct(take, ,)
det(man, those)
nsubj(take, man)
nsubj(greet, who)
acl:relcl(man, greet)
obj(greet, death)
cc(misery, and)
conj(death, misery)
case(laughter, with)
advmod(merry, childishly)
amod(laughter, merry)
obl(greet, laughter)
aux(take, be)
root(ROOT, take)
det(line, the)
advmod(sensible, only)
amod(line, sensible)
obj(take, line)
punct(take, .)
mark(be, if)
expl(be, there)
advcl(turn, be)
nsubj(be, nothing)
amod(nothing, evil)
case(thing, in)
det(thing, these)
obl(evil, thing)
punct(be, ,)
mark(get, if)
nsubj(get, they)
advcl(be, get)
nmod:poss(complexion, they)
amod(complexion, moral)
obj(get, complexion)
advmod(feeling, only)
case(feeling, from)
nmod:poss(feeling, we)
obl(get, feeling)
case(they, about)
nmod(feeling, they)
punct(greet, ,)
advmod(greet, why)
aux(greet, should)
advmod(greet, not)
nsubj:pass(greet, they)
aux:pass(greet, be)
parataxis(turn, greet)
case(cheer, with)
det(cheer, a)
obl(greet, cheer)
punct(greet, ?)
punct(greet, ?)
mark(greet, to)
advcl(greet, greet)
obj(greet, they)
case(repulsion, with)
obl(greet, repulsion)
aux(turn, would)
root(ROOT, turn)
obj(turn, what)
mark(neutral, before)
cop(neutral, be)
advcl(turn, neutral)
case(something, into)
obl(neutral, something)
amod(something, bad)
punct(turn, ;)
punct(turn, ;)
nsubj(bring, it)
aux(bring, would)
advmod(bring, needlessly)
parataxis(turn, bring)
obj(bring, badness)
case(world, into)
det(world, the)
obl(bring, world)
punct(bring, ;)
punct(bring, ;)
cc(assumption, and)
advmod(assumption, even)
case(assumption, on)
amod(assumption, subjectivist)
conj(bring, assumption)
nsubj(seem, that)
aux(seem, do)
advmod(seem, not)
acl:relcl(assumption, seem)
advmod(bright, very)
xcomp(seem, bright)
punct(turn, .)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(convert, hand)
punct(convert, ,)
mark(greet, to)
csubj(convert, greet)
obj(greet, they)
case(delight, with)
obl(greet, delight)
aux(convert, would)
root(ROOT, convert)
obj(convert, what)
mark(neutral, before)
cop(neutral, be)
advcl(convert, neutral)
case(something, into)
obl(neutral, something)
amod(something, good)
punct(convert, ;)
punct(convert, ;)
nsubj(bring, it)
aux(bring, would)
parataxis(convert, bring)
obj(bring, goodness)
case(world, into)
det(world, the)
obl(bring, world)
punct(convert, .)
det(veteran, the)
amod(veteran, injure)
amod(veteran, german)
nsubj(miner, veteran)
cop(miner, be)
det(miner, a)
amod(miner, former)
root(ROOT, miner)
punct(miner, ,)
compound(four, twenty)
punct(four, -)
nummod(year, four)
appos(miner, year)
amod(year, old)
punct(miner, ,)
nsubj:pass(wounded, who)
aux(wounded, have)
aux:pass(wounded, be)
acl:relcl(miner, wounded)
case(shrapnel, by)
obl(wounded, shrapnel)
case(back, in)
det(back, the)
obl(wounded, back)
case(head, of)
det(head, the)
nmod(back, head)
punct(miner, .)
nsubj(result, this)
root(ROOT, result)
case(damage, in)
obl(result, damage)
case(lobe, to)
det(lobe, the)
amod(lobe, occipital)
nmod(damage, lobe)
cc(side, and)
advmod(side, very)
advmod(side, probably)
case(side, to)
det(side, the)
amod(side, left)
conj(damage, side)
case(cerebellum, of)
det(cerebellum, the)
nmod(side, cerebellum)
advmod(side, also)
punct(result, .)
case(event, in)
det(event, any)
obl(be, event)
punct(be, ,)
det(result, the)
amod(result, extraordinary)
nsubj(be, result)
case(injury, of)
det(injury, this)
nmod(result, injury)
root(ROOT, be)
mark(become, that)
nsubj(become, he)
ccomp(be, become)
punct(blind, ``)
advmod(blind, psychically)
xcomp(become, blind)
punct(blind, '')
punct(blind, ,)
mark(remain, while)
case(time, at)
det(time, the)
amod(time, same)
obl(remain, time)
punct(remain, ,)
advmod(remain, apparently)
punct(remain, ,)
det(sense, the)
nsubj(remain, sense)
case(touch, of)
nmod(sense, touch)
parataxis(be, remain)
advmod(intact, essentially)
xcomp(remain, intact)
punct(remain, .)
amod(blindness, psychical)
nsubj(condition, blindness)
cop(condition, be)
det(condition, a)
parataxis(remain, condition)
case(which, in)
obl(be, which)
expl(be, there)
acl:relcl(condition, be)
det(absence, a)
amod(absence, total)
nsubj(be, absence)
case(image, of)
amod(image, visual)
compound(image, memory)
punct(image, -)
nmod(absence, image)
punct(image, ,)
det(condition, a)
appos(image, condition)
case(which, in)
nmod(condition, which)
punct(condition, ,)
case(example, for)
obl(unable, example)
punct(unable, ,)
nsubj(unable, one)
cop(unable, be)
acl:relcl(condition, unable)
mark(remember, to)
xcomp(unable, remember)
obj(remember, something)
advmod(see, just)
ccomp(remember, see)
cc(conjure, or)
mark(conjure, to)
conj(see, conjure)
compound:prt(conjure, up)
det(picture, a)
compound(picture, memory)
punct(picture, -)
obj(conjure, picture)
case(appearance, of)
det(appearance, the)
amod(appearance, visible)
nmod(picture, appearance)
case(friend, of)
det(friend, a)
advmod(know, well)
punct(know, -)
amod(friend, know)
nmod(appearance, friend)
case(absence, in)
nmod:poss(absence, he)
nmod(friend, absence)
punct(friend, .)
det(circumstance, this)
appos(friend, circumstance)
case(case, in)
det(patient, the)
nmod:poss(case, patient)
case(patient, 's)
nmod(circumstance, case)
cc(fact, plus)
det(fact, the)
conj(circumstance, fact)
mark(remain, that)
nmod:poss(capacity, he)
amod(capacity, tactual)
nsubj(remain, capacity)
acl(fact, remain)
advmod(remain, basically)
case(order, in)
compound(order, sound)
compound(order, working)
nsubj(constitute, order)
ccomp(remain, constitute)
nmod:poss(value, its)
amod(value, exceptional)
obj(constitute, value)
case(problem, for)
det(problem, the)
nmod(value, problem)
case(hand, at)
nmod(problem, hand)
mark(overwhelming, since)
det(evidence, the)
nsubj(overwhelming, evidence)
acl(evidence, present)
case(author, by)
det(author, the)
obl(present, author)
cop(overwhelming, be)
advcl(constitute, overwhelming)
mark(have, that)
punct(have, ,)
mark(close, when)
det(patient, the)
nsubj(close, patient)
advcl(have, close)
nmod:poss(eye, he)
obj(close, eye)
punct(have, ,)
nsubj(have, he)
conj(overwhelming, have)
advmod(spatial, absolutely)
det(spatial, no)
obj(have, spatial)
punct(dimensional, ()
nsubj(awareness, that)
cop(awareness, be)
punct(dimensional, ,)
advmod(dimensional, third)
punct(dimensional, -)
amod(awareness, dimensional)
punct(dimensional, ))
appos(spatial, awareness)
advmod(awareness, whatsoever)
punct(be, .)
det(inference, the)
amod(inference, necessary)
nsubj(seem, inference)
punct(seem, ,)
mark(interpret, as)
det(author, the)
nsubj(interpret, author)
nmod:npmod(author, themselves)
advcl(seem, interpret)
obj(interpret, it)
punct(seem, ,)
aux(seem, would)
root(ROOT, seem)
mark(this, to)
cop(this, be)
xcomp(seem, this)
punct(seem, :)
punct(seem, ``)
punct(1, ()
punct(1, ()
nummod(those, 1)
punct(1, ))
amod(quality, spatial)
nsubj(those, quality)
cop(those, be)
advmod(those, not)
case(those, among)
parataxis(seem, those)
acl(those, grasp)
case(sense, by)
det(sense, the)
obl(grasp, sense)
case(touch, of)
nmod(sense, touch)
punct(those, ,)
case(such, as)
obl(those, such)
punct(seem, .)
nsubj(arrive, we)
aux(arrive, do)
advmod(arrive, not)
root(ROOT, arrive)
case(image, at)
amod(image, spatial)
obl(arrive, image)
case(means, by)
obl(arrive, means)
case(sense, of)
det(sense, the)
nmod(means, sense)
case(touch, of)
nmod(sense, touch)
case(itself, by)
nmod(sense, itself)
obl:tmod(arrive, . )
punct(2, ()
parataxis(arrive, 2)
punct(2, ))
nsubj(become, spatiality)
root(ROOT, become)
xcomp(become, part)
case(sensation, of)
det(sensation, the)
amod(sensation, tactual)
nmod(part, sensation)
advmod(way, only)
case(way, by)
nmod(part, way)
case(representation, of)
amod(representation, visual)
nmod(way, representation)
punct(part, ;)
punct(part, ;)
nsubj(be, that)
parataxis(part, be)
punct(be, ,)
expl(be, there)
ccomp(be, be)
punct(be, ,)
case(sense, in)
det(sense, the)
amod(sense, true)
obl(be, sense)
punct(space, ,)
advmod(space, only)
det(space, a)
amod(space, visual)
appos(sense, space)
punct(space, '')
punct(space, .)
det(assumption, the)
amod(assumption, underlying)
appos(space, assumption)
punct(enable, ,)
advmod(enable, of)
fixed(of, course)
punct(enable, ,)
aux(enable, be)
det(sight, that)
amod(sight, only)
nsubj(enable, sight)
cc(touch, and)
conj(sight, touch)
acl:relcl(assumption, enable)
obj(enable, we)
punct(enable, ,)
case(way, in)
det(way, any)
amod(way, precise)
cc(dependable, and)
advmod(dependable, fully)
conj(precise, dependable)
obl(locate, way)
punct(locate, ,)
mark(locate, to)
advcl(enable, locate)
obj(locate, object)
case(space, in)
obl(locate, space)
case(we, beyond)
obl(locate, we)
punct(inferior, ,)
det(sense, the)
amod(sense, other)
nsubj(inferior, sense)
cop(inferior, be)
advmod(inferior, decidedly)
advcl(locate, inferior)
punct(inferior, ,)
mark(inadequate, if)
advmod(inadequate, not)
advmod(inadequate, totally)
advcl(inferior, inadequate)
punct(inferior, ,)
case(regard, in)
det(regard, this)
obl(inadequate, regard)
punct(part, .)
nsubj(assumption, this)
cop(assumption, be)
det(assumption, a)
root(ROOT, assumption)
case(which, with)
obl(dispose, which)
nsubj:pass(dispose, few)
aux(dispose, would)
aux:pass(dispose, be)
acl:relcl(assumption, dispose)
mark(quarrel, to)
xcomp(dispose, quarrel)
punct(assumption, .)
advmod(function, therefore)
punct(assumption, ,)
mark(function, if)
det(sense, the)
nsubj(function, sense)
case(touch, of)
nmod(sense, touch)
aux(function, be)
advcl(dispose, function)
advmod(function, normally)
cc(be, and)
expl(be, there)
conj(function, be)
det(absence, a)
amod(absence, complete)
nsubj(be, absence)
case(awareness, of)
amod(awareness, spatial)
nmod(absence, awareness)
case(person, in)
det(person, a)
advmod(blind, psychically)
punct(blind, -)
amod(person, blind)
nmod(awareness, person)
mark(close, when)
det(eye, the)
nsubj:pass(close, eye)
aux:pass(close, be)
advcl(seem, close)
cc(handle, and)
det(object, a)
nsubj:pass(handle, object)
aux:pass(handle, be)
conj(close, handle)
punct(seem, ,)
det(conclusion, the)
nsubj(seem, conclusion)
conj(assumption, seem)
xcomp(seem, unavoidable)
mark(focus, that)
nsubj(focus, touch)
case(itself, by)
nmod(touch, itself)
aux(focus, can)
advmod(focus, not)
ccomp(unavoidable, focus)
cc(take, and)
conj(focus, take)
obj(take, possession)
case(dimensionality, of)
det(dimensionality, the)
amod(dimensionality, third)
punct(dimensionality, -)
nmod(possession, dimensionality)
case(thing, of)
nmod(dimensionality, thing)
cc(necessary, and)
mark(necessary, that)
amod(sight, actual)
nsubj(necessary, sight)
cc(representation, or)
conj(sight, visual)
conj(sight, representation)
cop(necessary, be)
conj(focus, necessary)
punct(assumption, .)
det(force, the)
nsubj:pass(feel, force)
case(analysis, of)
det(author, the)
nmod:poss(analysis, author)
case(author, 's)
nmod(force, analysis)
punct(have, ()
mark(have, if)
advmod(have, indeed)
nsubj(have, it)
advcl(feel, have)
det(force, any)
obj(have, force)
punct(have, ))
aux(feel, can)
aux:pass(feel, be)
ccomp(believe, feel)
case(reader, by)
det(reader, the)
obl(feel, reader)
punct(believe, ,)
nsubj(believe, I)
root(ROOT, believe)
punct(believe, ,)
advmod(answer, only)
mark(answer, after)
nummod(question, three)
nsubj:pass(answer, question)
aux(answer, have)
aux:pass(answer, be)
advmod(answer, successfully)
advcl(believe, answer)
punct(1, . )
punct(1, ()
nummod(allow, 1)
punct(1, ))
nsubj(allow, what)
parataxis(answer, allow)
obj(allow, we)
mark(think, to)
xcomp(allow, think)
mark(have, that)
det(patient, the)
nsubj(have, patient)
ccomp(think, have)
det(representation, no)
amod(dimensional, third)
punct(dimensional, -)
amod(representation, dimensional)
obj(have, representation)
mark(close, when)
nmod:poss(eye, he)
nsubj:pass(close, eye)
aux:pass(close, be)
acl(representation, close)
punct(2, ?)
punct(2, ? )
punct(2, ()
nummod(there, 2)
punct(2, ))
det(evidence, what)
nsubj(there, evidence)
cop(there, be)
advmod(close, there)
mark(blind, that)
nsubj(blind, he)
cop(blind, be)
advmod(blind, psychically)
ccomp(there, blind)
punct(blind, ?)
punct(blind, ? )
punct(3, ()
nummod(sure, 3)
punct(3, ))
advmod(sure, how)
aux(sure, can)
nsubj(sure, we)
cop(sure, be)
parataxis(there, sure)
mark(disturb, that)
nmod:poss(sense, he)
nsubj:pass(disturb, sense)
case(touch, of)
nmod(sense, touch)
aux:pass(disturb, be)
advmod(disturb, not)
advmod(disturb, profoundly)
ccomp(sure, disturb)
case(injury, by)
nmod:poss(injury, he)
compound(injury, head)
obl(disturb, injury)
punct(believe, ?)
punct(believe, ?)
nsubj(consider, we)
aux(consider, shall)
root(ROOT, consider)
obj(consider, these)
case(order, in)
det(order, the)
amod(order, inverse)
obl(consider, order)
case(presentation, of)
nmod:poss(presentation, they)
nmod(order, presentation)
punct(consider, .)
advmod(imperative, obviously)
punct(imperative, ,)
det(answer, a)
amod(answer, satisfactory)
nsubj(imperative, answer)
case(question, to)
det(question, the)
amod(question, third)
nmod(answer, question)
cop(imperative, be)
parataxis(consider, imperative)
punct(imperative, ,)
mark(be, if)
det(argument, the)
nsubj(be, argument)
advcl(imperative, be)
mark(get, to)
xcomp(be, get)
case(way, under)
obl(get, way)
case(all, at)
obl(get, all)
punct(get, ,)
mark(be, for)
mark(be, if)
expl(be, there)
advcl(get, be)
det(possibility, any)
nsubj(be, possibility)
case(doubt, of)
nmod(possibility, doubt)
mark(impair, whether)
det(patient, the)
nmod:poss(sensitivity, patient)
case(patient, 's)
amod(sensitivity, tactual)
nsubj:pass(impair, sensitivity)
aux(impair, have)
aux:pass(impair, be)
acl(doubt, impair)
case(lesion, by)
det(lesion, the)
amod(lesion, occipital)
obl(impair, lesion)
punct(become, ,)
det(finding, any)
nsubj(become, finding)
advmod(finding, whatsoever)
case(regard, in)
nmod(finding, regard)
case(question, to)
det(question, the)
amod(question, first)
nmod(regard, question)
acl:relcl(doubt, become)
advmod(ambiguous, completely)
xcomp(become, ambiguous)
cc(fail, and)
conj(ambiguous, fail)
advmod(fail, altogether)
punct(fail, ,)
advmod(evidence, of)
fixed(of, course)
punct(fail, ,)
case(evidence, as)
obl(fail, evidence)
mark(establish, to)
acl(evidence, establish)
det(conclusion, the)
amod(conclusion, desire)
obj(establish, conclusion)
punct(consider, .)
det(answer, the)
nsubj(importance, answer)
det(author, the)
nsubj(give, author)
acl:relcl(answer, give)
case(it, to)
obl(give, it)
punct(importance, ,)
advmod(importance, therefore)
punct(importance, ,)
cop(importance, be)
case(importance, of)
amod(importance, supreme)
root(ROOT, importance)
punct(importance, .)
nsubj(be, it)
root(ROOT, be)
mark(follow, as)
advcl(be, follow)
punct(be, :)
punct(be, ``)
det(test, the)
amod(test, usual)
compound(test, sensitivity)
nsubj(show, test)
root(ROOT, show)
mark(intact, that)
det(quality, the)
amod(quality, specific)
nsubj(intact, quality)
case(perceptiveness, of)
compound(perceptiveness, skin-)
nmod(quality, perceptiveness)
punct(pressure, ()
appos(quality, pressure)
punct(pain, ,)
conj(pressure, pain)
punct(temperature, ,)
conj(pressure, temperature)
punct(pressure, ))
punct(sensation, ,)
cc(sensation, as)
fixed(as, well)
fixed(as, as)
det(sensation, the)
amod(sensation, kinesthetic)
conj(quality, sensation)
punct(feeling, ()
amod(feeling, muscular)
appos(sensation, feeling)
punct(feeling, ,)
conj(feeling, feeling)
case(tendon, in)
det(tendon, the)
nmod(feeling, tendon)
cc(joint, and)
conj(tendon, joint)
punct(feeling, ))
punct(intact, ,)
cop(intact, be)
punct(intact, ,)
case(such, as)
obl(intact, such)
punct(intact, ,)
advmod(intact, essentially)
ccomp(show, intact)
punct(intact, ,)
mark(seem, although)
nsubj(seem, they)
advcl(intact, seem)
punct(seem, ,)
case(comparison, in)
obl(seem, comparison)
case(reaction, with)
amod(reaction, normal)
nmod(comparison, reaction)
punct(diminish, ,)
mark(diminish, to)
aux:pass(diminish, be)
advmod(diminish, somewhat)
advcl(seem, diminish)
case(body, over)
det(body, the)
amod(body, entire)
obl(diminish, body)
punct(show, .)
det(sense, the)
amod(sense, suppose)
amod(sense, tactual)
nsubj(prove, sense)
case(location, of)
amod(location, spatial)
nmod(sense, location)
cc(orientation, and)
conj(location, orientation)
case(patient, in)
det(patient, the)
nmod(location, patient)
cc(ability, and)
nmod:poss(ability, he)
conj(patient, ability)
mark(specify, to)
acl(ability, specify)
det(location, the)
obj(specify, location)
case(member, of)
det(member, a)
nmod(location, member)
punct(direction, ,)
cc(direction, as)
fixed(as, well)
fixed(as, as)
det(direction, the)
conj(location, direction)
cc(scope, and)
conj(direction, scope)
case(movement, of)
det(movement, a)
nmod(direction, movement)
punct(execute, ,)
advmod(execute, passively)
acl(movement, execute)
punct(one, ()
case(one, with)
obl(execute, one)
case(member, of)
nmod:poss(member, he)
nmod(one, member)
punct(one, ))
punct(prove, ,)
ccomp(insist, prove)
mark(affect, to)
aux(affect, have)
cop(affect, be)
punct(affect, ,)
case(contrary, on)
det(contrary, the)
amod(affect, contrary)
punct(affect, ,)
advmod(affect, very)
advmod(affect, considerably)
ccomp(insist, affect)
punct(affect, '')
punct(insist, .)
det(author, the)
nsubj(insist, author)
root(ROOT, insist)
punct(insist, ,)
advmod(insist, however)
punct(insist, ,)
mark(disorder, that)
det(abnormality, these)
nsubj(disorder, abnormality)
case(sense, in)
det(sense, the)
nmod(abnormality, sense)
case(touch, of)
nmod(sense, touch)
cop(disorder, be)
case(disorder, due)
fixed(due, absolutely)
fixed(due, to)
det(disorder, no)
amod(disorder, organic)
ccomp(insist, disorder)
case(faculty, in)
det(faculty, that)
compound(faculty, sense)
nmod(disorder, faculty)
cc(injury, but)
cc(injury, rather)
fixed(rather, to)
det(injury, the)
conj(disorder, injury)
obj(sustain, which)
det(patient, the)
nsubj(sustain, patient)
aux(sustain, have)
acl:relcl(injury, sustain)
case(sense, to)
det(sense, the)
obl(sustain, sense)
case(sight, of)
nmod(sense, sight)
punct(insist, .)
advmod(what, first)
case(all, of)
obl(what, all)
punct(what, ,)
parataxis(have, what)
cop(what, be)
nmod:poss(evidence, they)
nsubj(what, evidence)
mark(undamaged, that)
det(apparatus, the)
amod(apparatus, tactual)
nsubj(undamaged, apparatus)
cop(undamaged, be)
advmod(undamaged, fundamentally)
acl(evidence, undamaged)
punct(undamaged, ?)
punct(undamaged, ? )
punct(1, ()
nummod(undamaged, 1)
punct(1, ))
mark(place, when)
det(object, a)
nsubj:pass(place, object)
aux:pass(place, be)
advcl(have, place)
case(hand, in)
det(patient, the)
nmod:poss(hand, patient)
case(patient, 's)
obl(place, hand)
punct(have, ,)
nsubj(have, he)
root(ROOT, have)
det(difficulty, no)
obj(have, difficulty)
acl(difficulty, determine)
mark(warm, whether)
nsubj(warm, it)
cop(warm, be)
ccomp(determine, warm)
cc(cold, or)
conj(warm, cold)
punct(sharp, ,)
conj(warm, sharp)
cc(blunt, or)
conj(warm, blunt)
punct(rough, ,)
conj(warm, rough)
cc(smooth, or)
conj(rough, smooth)
punct(flexible, ,)
conj(warm, flexible)
punct(soft, ,)
conj(warm, soft)
punct(hard, ,)
cc(hard, or)
conj(warm, hard)
punct(tell, ;)
punct(tell, ;)
cc(tell, and)
nsubj(tell, he)
aux(tell, could)
conj(what, tell)
punct(tell, ,)
advmod(feel, simply)
case(feel, by)
det(feel, the)
obl(tell, feel)
case(it, of)
nmod(feel, it)
punct(make, ,)
mark(make, whether)
nsubj:pass(make, it)
aux:pass(make, be)
acl:relcl(feel, make)
case(wood, of)
obl(make, wood)
punct(iron, ,)
conj(wood, iron)
punct(cloth, ,)
conj(wood, cloth)
punct(rubber, ,)
conj(wood, rubber)
punct(on, ,)
cc(on, and)
advmod(on, so)
conj(wood, on)
punct(on, .)
cc(recognize, and)
nsubj(recognize, he)
aux(recognize, could)
conj(make, recognize)
punct(recognize, ,)
case(touch, by)
obl(recognize, touch)
advmod(touch, alone)
punct(article, ,)
appos(touch, article)
obj(handle, which)
nsubj(handle, he)
aux(handle, have)
acl:relcl(article, handle)
advmod(handle, immediately)
advmod(handle, before)
punct(handle, ,)
advmod(unfamiliar, even)
mark(unfamiliar, though)
nsubj(unfamiliar, they)
cop(unfamiliar, be)
advmod(unfamiliar, altogether)
advcl(handle, unfamiliar)
case(he, to)
obl(unfamiliar, he)
cc(identify, and)
aux(identify, could)
advmod(identify, not)
aux:pass(identify, be)
conj(unfamiliar, identify)
case(he, by)
obl(identify, he)
punct(unaware, ;)
punct(unaware, ;)
nsubj(be, that)
parataxis(identify, be)
punct(be, ,)
nsubj(unaware, he)
cop(unaware, be)
ccomp(be, unaware)
det(kind, what)
obj(unaware, kind)
case(object, of)
nmod(kind, object)
nsubj(be, they)
cop(kind, be)
cc(what, or)
obj(. , what)
nmod:poss(use, they)
nsubj(. , use)
cop(. , be)
conj(be, . )
punct(2, ()
nummod(. , 2)
punct(2, ))
det(patient, the)
nsubj(attain, patient)
root(ROOT, attain)
det(efficiency, a)
amod(efficiency, astonishing)
obj(attain, efficiency)
case(trade, in)
det(trade, a)
amod(trade, new)
obl(attain, trade)
punct(attain, .)
case(injury, because)
fixed(because, of)
nmod:poss(injury, he)
compound(injury, brain)
obl(have, injury)
cc(suffer, and)
det(damage, the)
amod(damage, extreme)
nsubj(suffer, damage)
advcl(have, suffer)
case(sight, to)
nmod:poss(sight, he)
obl(suffer, sight)
punct(have, ,)
det(patient, the)
nsubj(have, patient)
root(ROOT, have)
mark(train, to)
xcomp(have, train)
obj(train, himself)
case(line, for)
det(line, a)
amod(line, new)
obl(train, line)
case(work, of)
nmod(line, work)
punct(line, ,)
appos(line, that)
case(maker, of)
det(maker, a)
compound(maker, portfolio)
punct(maker, -)
nmod(that, maker)
punct(maker, ,)
det(occupation, a)
appos(maker, occupation)
acl(occupation, require)
det(deal, a)
amod(deal, great)
obj(require, deal)
case(precision, of)
nmod(deal, precision)
case(making, in)
det(making, the)
nmod(deal, making)
case(measurement, of)
nmod(making, measurement)
cc(sense, and)
det(sense, a)
advmod(develop, fairly)
advmod(develop, well)
punct(develop, -)
amod(sense, develop)
conj(measurement, sense)
case(form, of)
nmod(sense, form)
cc(contour, and)
conj(form, contour)
punct(have, .)
nsubj(seem, it)
root(ROOT, seem)
xcomp(seem, clear)
punct(seem, ,)
mark(take, when)
nsubj(take, one)
advcl(seem, take)
case(consideration, into)
obl(take, consideration)
det(eyesight, the)
advmod(defective, exceedingly)
amod(eyesight, defective)
obj(take, eyesight)
case(patient, of)
det(patient, the)
nmod(eyesight, patient)
punct(describe, ()
nsubj(describe, we)
aux(describe, shall)
parataxis(eyesight, describe)
obj(describe, it)
case(detail, in)
obl(describe, detail)
case(connection, in)
obl(describe, connection)
case(question, with)
nmod:poss(question, we)
amod(question, second)
nmod(connection, question)
punct(one, ,)
det(one, the)
appos(question, one)
case(blindness, concern)
det(blindness, the)
amod(blindness, psychical)
nmod(one, blindness)
case(patient, of)
det(patient, the)
nmod(blindness, patient)
punct(blindness, ))
punct(have, ,)
mark(have, that)
nsubj(have, he)
parataxis(describe, have)
mark(rely, to)
xcomp(have, rely)
case(sense, on)
nmod:poss(sense, he)
obl(rely, sense)
case(touch, of)
nmod(sense, touch)
advmod(more, much)
amod(sense, more)
case(maker, than)
det(maker, the)
amod(maker, usual)
compound(maker, portfolio-)
obl(more, maker)
cc(sensitive, and)
mark(sensitive, that)
advmod(sensitive, consequently)
det(faculty, that)
nsubj(sensitive, faculty)
cop(sensitive, be)
advmod(more, most)
advmod(sensitive, probably)
advmod(sensitive, more)
conj(have, sensitive)
case(shape, to)
obl(sensitive, shape)
cc(size, and)
conj(shape, size)
case(that, than)
obl(sensitive, that)
case(person, of)
det(person, a)
nmod(that, person)
case(vision, with)
amod(vision, normal)
nmod(person, vision)
punct(seem, .)
cc(conclude, and)
mark(conclude, so)
det(author, the)
nsubj(conclude, author)
root(ROOT, conclude)
punct(conclude, :)
punct(conclude, ``)
det(conduct, the)
nsubj(leave, conduct)
case(patient, of)
det(patient, the)
nmod(conduct, patient)
case(life, in)
nmod:poss(life, he)
det(day, every)
punct(day, -)
compound(life, day)
nmod(patient, life)
cc(work, and)
case(work, in)
nmod:poss(work, he)
conj(life, work)
punct(more, ,)
advmod(more, even)
advmod(work, more)
case(fact, than)
det(fact, the)
amod(fact, forego)
obl(more, fact)
punct(mention, ()
acl(fact, mention)
advmod(mention, above)
case(1, under)
obl(mention, 1)
punct(mention, ))
punct(leave, ,)
root(ROOT, leave)
advmod(leave, positively)
det(room, no)
obj(leave, room)
case(doubt, for)
nmod(room, doubt)
mark(unaffected, that)
det(sense, the)
nsubj(unaffected, sense)
case(touch, of)
nmod(sense, touch)
punct(sense, ,)
case(sense, in)
det(sense, the)
amod(sense, ordinary)
nmod(sense, sense)
case(word, of)
det(word, the)
nmod(sense, word)
punct(unaffected, ,)
cop(unaffected, be)
acl(doubt, unaffected)
punct(unaffected, ;)
punct(unaffected, ;)
cc(put, or)
punct(put, ,)
mark(put, to)
advcl(unaffected, put)
det(thing, the)
amod(thing, same)
obj(put, thing)
case(term, in)
amod(term, physiological)
obl(put, term)
punct(put, ,)
mark(unimpaired, that)
det(capacity, the)
compound(capacity, performance)
punct(capacity, -)
obj(put, capacity)
case(apparatus, of)
det(apparatus, the)
amod(apparatus, tactual)
nmod(capacity, apparatus)
punct(capacity, ,)
case(periphery, from)
det(periphery, the)
nmod(apparatus, periphery)
case(center, up)
case(center, to)
det(center, the)
amod(center, tactual)
nmod(periphery, center)
case(brain, in)
det(brain, the)
nmod(center, brain)
punct(center, ,)
punct(center, --)
nsubj(be, that)
cop(center, be)
punct(end, ,)
case(end, from)
nummod(end, one)
obl(unimpaired, end)
case(other, to)
det(other, the)
nmod(end, other)
punct(unimpaired, --)
cop(unimpaired, be)
ccomp(be, unimpaired)
punct(unimpaired, '')
punct(be, .)
mark(accept, if)
det(argument, the)
nsubj:pass(accept, argument)
aux:pass(accept, be)
advcl(remain, accept)
mark(sound, as)
advmod(sound, essentially)
advcl(accept, sound)
compound:prt(sound, up)
case(point, to)
det(point, this)
obl(sound, point)
punct(remain, ,)
nsubj(remain, it)
root(ROOT, remain)
mark(consider, for)
nsubj(consider, we)
mark(consider, to)
xcomp(remain, consider)
mark(explain, whether)
det(patient, the)
nmod:poss(difficulty, patient)
case(patient, 's)
nsubj:pass(explain, difficulty)
mark(orienting, in)
acl(difficulty, orienting)
obj(orienting, himself)
advmod(orienting, spatially)
cc(locate, and)
mark(locate, in)
conj(orienting, locate)
obj(locate, object)
case(space, in)
obl(locate, space)
case(sense, with)
det(sense, the)
obl(locate, sense)
case(touch, of)
nmod(sense, touch)
aux(explain, can)
aux:pass(explain, be)
ccomp(consider, explain)
case(condition, by)
nmod:poss(condition, he)
amod(condition, defective)
amod(condition, visual)
obl(explain, condition)
punct(remain, .)
cc(find, but)
mark(do, before)
nsubj(do, we)
aux(do, can)
advcl(find, do)
obj(do, this)
punct(find, ,)
nsubj(find, we)
aux(find, must)
advmod(find, first)
root(ROOT, find)
obj(find, answer)
case(question, to)
nmod:poss(question, we)
amod(question, original)
nmod(answer, question)
nummod(question, 1)
cc(2, and)
conj(1, 2)
punct(find, ;)
punct(find, ;)
advmod(position, then)
nsubj(position, we)
aux(position, shall)
advmod(position, perhaps)
cop(position, be)
case(position, in)
det(position, a)
parataxis(find, position)
mark(provide, to)
acl(position, provide)
obj(provide, something)
case(answer, like)
det(answer, a)
amod(answer, complete)
nmod(something, answer)
case(question, to)
det(question, the)
nmod(answer, question)
case(hand, at)
nmod(question, hand)
punct(find, .)
case(way, in)
det(way, what)
obl(manifest, way)
punct(manifest, ,)
advmod(manifest, then)
punct(manifest, ,)
aux(manifest, do)
det(patient, the)
nmod:poss(blindness, patient)
case(patient, 's)
amod(blindness, psychical)
nsubj(manifest, blindness)
root(ROOT, manifest)
obj(manifest, itself)
punct(manifest, ?)
punct(manifest, ?)
nsubj(see, he)
aux(see, could)
advmod(see, not)
root(ROOT, see)
obj(see, object)
case(figure, as)
amod(figure, unified)
punct(contain, ,)
compound(contain, self)
punct(contain, -)
conj(unified, contain)
punct(organized, ,)
cc(organized, and)
conj(unified, organized)
obl(see, figure)
punct(see, ,)
mark(do, as)
det(person, a)
nsubj(do, person)
advcl(see, do)
case(vision, with)
amod(vision, normal)
obl(do, vision)
punct(see, .)
det(meaning, the)
nsubj(be, meaning)
case(this, of)
nmod(meaning, this)
punct(be, ,)
mark(see, as)
nsubj(see, we)
aux(see, shall)
advcl(be, see)
punct(be, ,)
root(ROOT, be)
mark(have, that)
nsubj(have, he)
ccomp(be, have)
det(fund, no)
obj(have, fund)
case(image, of)
amod(image, visual)
compound(image, memory)
punct(image, -)
nmod(fund, image)
case(object, of)
nmod(image, object)
case(object, as)
nmod(object, object)
punct(be, ;)
punct(be, ;)
cc(recognize, and)
punct(recognize, ,)
advmod(recognize, therefore)
punct(recognize, ,)
nsubj(recognize, he)
aux(recognize, could)
advmod(recognize, not)
parataxis(be, recognize)
advmod(familiar, even)
advmod(familiar, long)
punct(familiar, -)
amod(thing, familiar)
obj(recognize, thing)
mark(see, upon)
advcl(recognize, see)
obj(see, they)
advmod(see, again)
punct(be, .)
advmod(become, instead)
punct(become, ,)
nsubj(become, he)
advmod(become, constantly)
root(ROOT, become)
xcomp(become, lose)
case(part, in)
obl(lose, part)
cc(component, and)
conj(part, component)
case(they, of)
nmod(part, they)
punct(confuse, ,)
conj(lose, confuse)
obj(confuse, some)
case(detail, of)
nmod:poss(detail, they)
nmod(some, detail)
case(those, with)
obl(confuse, those)
case(object, of)
amod(object, neighbor)
nmod(those, object)
punct(on, ,)
cc(on, and)
advmod(on, so)
conj(those, on)
punct(on, ,)
mark(allow, unless)
nsubj(allow, he)
advcl(on, allow)
obj(allow, time)
mark(trace, to)
punct(trace, ``)
acl(time, trace)
punct(trace, '')
det(object, the)
obj(trace, object)
case(question, in)
nmod(object, question)
case(movement, through)
compound(movement, minute)
obl(trace, movement)
case(head, of)
det(head, the)
nmod(movement, head)
cc(hand, and)
conj(head, hand)
cc(way, and)
case(way, in)
det(way, this)
conj(head, way)
mark(discover, to)
acl(way, discover)
nmod:poss(contour, its)
obj(discover, contour)
punct(become, .)
case(testimony, accord)
case(testimony, to)
nmod:poss(testimony, he)
amod(testimony, own)
obl(see, testimony)
punct(see, ,)
nsubj(see, he)
advmod(see, never)
advmod(see, actually)
root(ROOT, see)
obj(see, thing)
mark(shape, as)
advcl(see, shape)
cc(blot, but)
advmod(shape, only)
case(blot, as)
advmod(amorphous, generally)
amod(blot, amorphous)
punct(blot, ``)
obl(shape, blot)
punct(blot, '')
case(color, of)
nmod(blot, color)
case(size, of)
det(size, a)
amod(size, more)
cc(indefinite, or)
advmod(indefinite, less)
conj(more, indefinite)
nmod(color, size)
punct(see, ;)
punct(see, ;)
case(edge, at)
nmod:poss(edge, they)
obl(slip, edge)
nsubj(slip, they)
parataxis(see, slip)
advmod(much, pretty)
advmod(slip, much)
case(focus, out)
case(focus, of)
obl(slip, focus)
advmod(slip, altogether)
punct(see, .)
cc(find, but)
case(procedure, by)
det(procedure, the)
compound(procedure, trace)
obl(find, procedure)
punct(find, ,)
nsubj(find, he)
aux(find, could)
punct(find, ,)
case(manner, in)
det(manner, a)
amod(manner, strange)
advmod(kinesthetic, obviously)
amod(manner, kinesthetic)
obl(find, manner)
punct(find, ,)
root(ROOT, find)
det(form, the)
amod(form, unseen)
obj(find, form)
punct(find, ;)
punct(find, ;)
aux(piece, could)
parataxis(find, piece)
punct(piece, ,)
mark(be, as)
nsubj(be, it)
cop(mass, be)
punct(mass, ,)
det(mass, the)
amod(mass, jumble)
advcl(piece, mass)
advmod(mass, together)
case(whole, into)
det(whole, a)
amod(whole, organized)
nmod(mass, whole)
cc(recognize, and)
advmod(recognize, then)
conj(mass, recognize)
obj(recognize, it)
case(man, as)
det(man, a)
obl(recognize, man)
cc(triangle, or)
det(triangle, a)
conj(man, triangle)
cc(whatever, or)
conj(triangle, whatever)
nsubj(turn, it)
acl:relcl(whatever, turn)
compound:prt(turn, out)
mark(be, to)
xcomp(turn, be)
punct(find, .)
mark(complicated, if)
punct(complicated, ,)
advmod(complicated, however)
punct(complicated, ,)
det(figure, the)
nsubj:pass(complicated, figure)
mark(discerned, to)
aux:pass(discerned, be)
acl(figure, discerned)
aux:pass(complicated, be)
root(ROOT, complicated)
punct(complicated, ,)
advcl(complicated, compose)
case(subfigure, of)
amod(subfigure, several)
amod(subfigure, interlock)
obl(compose, subfigure)
punct(on, ,)
cc(on, and)
advmod(on, so)
conj(complicated, on)
punct(fail, ,)
advmod(process, even)
det(process, the)
compound(process, trace)
nsubj(fail, process)
conj(complicated, fail)
obj(fail, he)
punct(focus, ,)
cc(focus, and)
nsubj(focus, he)
aux(focus, could)
advmod(focus, not)
conj(fail, focus)
advmod(relatively, even)
advmod(simple, relatively)
amod(shape, simple)
obj(focus, shape)
case(part, among)
nmod:poss(part, its)
nmod(shape, part)
punct(complicated, .)
nsubj(mean, this)
root(ROOT, mean)
punct(mean, ,)
advmod(mean, concretely)
punct(mean, ,)
mark(read, that)
det(patient, the)
nsubj(read, patient)
aux(read, could)
advmod(read, not)
ccomp(mean, read)
case(all, at)
obl(read, all)
mark(make, without)
advcl(read, make)
obj(make, writing)
punct(make, -)
case(movement, like)
obl(make, movement)
case(head, of)
det(head, the)
nmod(movement, head)
cc(body, or)
conj(head, body)
punct(become, ,)
ccomp(mean, become)
advmod(confused, easily)
xcomp(become, confused)
case(mark, by)
punct(mark, ``)
compound(mark, hasher)
obl(confused, mark)
punct(mark, '')
acl(mark, insert)
case(word, between)
compound(write, hand)
punct(write, -)
amod(word, write)
obl(insert, word)
cc(confuse, and)
advmod(confuse, thus)
conj(insert, confuse)
det(mark, the)
obj(confuse, mark)
case(one, for)
obl(confuse, one)
case(letter, of)
det(letter, the)
nmod(one, letter)
punct(recognize, ,)
cc(recognize, and)
aux(recognize, could)
conj(confuse, recognize)
det(line, a)
amod(line, simple)
amod(line, straight)
obj(recognize, line)
cc(one, or)
det(one, a)
amod(one, curve)
conj(line, one)
advmod(trace, only)
mark(trace, by)
advcl(recognize, trace)
obj(trace, it)
punct(mean, .)
det(patient, the)
nsubj(deny, patient)
nmod:npmod(patient, himself)
root(ROOT, deny)
mark(have, that)
nsubj(have, he)
ccomp(deny, have)
det(imagery, any)
amod(imagery, visual)
obj(have, imagery)
case(all, at)
nmod(imagery, all)
punct(deny, ;)
punct(deny, ;)
cc(be, and)
expl(be, there)
conj(deny, be)
amod(evidence, ample)
nsubj(be, evidence)
case(sort, of)
det(sort, the)
amod(sort, follow)
nmod(evidence, sort)
mark(corroborate, to)
acl(sort, corroborate)
obj(corroborate, he)
punct(deny, .)
case(conversation, after)
det(conversation, a)
obl(able, conversation)
case(man, with)
det(man, another)
nmod(conversation, man)
punct(able, ,)
nsubj(able, he)
cop(able, be)
root(ROOT, able)
mark(recount, to)
xcomp(able, recount)
advmod(recount, practically)
obj(recount, everything)
nsubj:pass(say, that)
aux(say, have)
aux:pass(say, be)
acl:relcl(everything, say)
cc(describe, but)
aux(describe, could)
advmod(describe, not)
conj(say, describe)
case(what, at)
det:predet(what, all)
obl(describe, what)
det(man, the)
amod(man, other)
nsubj(look, man)
acl:relcl(what, look)
obl(look, like)
punct(call, .)
cc(call, nor)
aux(call, could)
nsubj(call, he)
conj(able, call)
compound:prt(call, up)
compound(picture, memory)
punct(picture, -)
obj(call, picture)
case(friend, of)
amod(friend, close)
nmod(picture, friend)
cc(relative, or)
conj(friend, relative)
punct(able, .)
case(short, in)
obl(seem, short)
punct(seem, ,)
cc:preconj(declaration, both)
nmod:poss(declaration, he)
amod(declaration, own)
nsubj(seem, declaration)
cc(blindness, and)
nmod:poss(blindness, he)
amod(blindness, figural)
conj(declaration, blindness)
punct(seem, ,)
mark(look, when)
nsubj(look, he)
advcl(seem, look)
case(object, at)
obl(look, object)
punct(seem, ,)
root(ROOT, seem)
mark(present, to)
xcomp(seem, present)
amod(evidence, undeniable)
obj(present, evidence)
mark(have, that)
nsubj(have, he)
acl(evidence, have)
advmod(have, simply)
det(memory, no)
amod(memory, visual)
obj(have, memory)
case(all, at)
nmod(memory, all)
punct(seem, .)
nsubj(oblivious, he)
cop(oblivious, be)
root(ROOT, oblivious)
case(form, of)
det(form, the)
obl(oblivious, form)
case(object, of)
det(object, the)
nmod(form, object)
advmod(view, actually)
aux:pass(view, be)
acl(form, view)
punct(oblivious, ,)
advmod(assign, precisely)
mark(assign, because)
nsubj(assign, he)
aux(assign, could)
advmod(assign, not)
advcl(view, assign)
obj(assign, it)
case(shape, to)
det(shape, a)
amod(shape, visual)
obl(assign, shape)
punct(learn, ,)
advmod(learn, already)
acl(shape, learn)
cc(hold, and)
conj(learn, hold)
case(memory, in)
amod(memory, visual)
obl(hold, memory)
punct(learn, ,)
mark(do, as)
nsubj(do, person)
case(vision, of)
amod(vision, normal)
nmod(person, vision)
advcl(learn, do)
punct(oblivious, .)
nsubj(recognize, he)
aux(recognize, could)
advmod(recognize, not)
root(ROOT, recognize)
obj(recognize, it)
punct(recognize, ;)
punct(recognize, ;)
nsubj(unfamiliar, he)
cop(unfamiliar, be)
advmod(unfamiliar, absolutely)
parataxis(recognize, unfamiliar)
case(it, with)
obl(unfamiliar, it)
mark(have, because)
nsubj(have, he)
advcl(unfamiliar, have)
det(memory, no)
amod(memory, visual)
obj(have, memory)
case(all, at)
nmod(memory, all)
punct(recognize, .)
advmod(be, therefore)
punct(be, ,)
nmod:poss(recourse, he)
amod(recourse, only)
nsubj(be, recourse)
root(ROOT, be)
mark(learn, to)
ccomp(be, learn)
det(shape, the)
obj(learn, shape)
advmod(again, all)
advmod(again, over)
advmod(learn, again)
case(experience, for)
det(experience, each)
amod(experience, new)
amod(experience, visual)
obl(learn, experience)
case(object, of)
det(object, the)
amod(object, same)
amod(object, individual)
nmod(experience, object)
cc(type, or)
conj(object, type)
case(object, of)
nmod(type, object)
punct(be, ;)
punct(be, ;)
cc(do, and)
nsubj(do, this)
nsubj(do, he)
aux(do, could)
conj(be, do)
advmod(go, only)
mark(go, by)
advcl(do, go)
compound:prt(go, over)
nmod:poss(mass, its)
obj(go, mass)
case(procedure, with)
det(procedure, the)
compound(procedure, trace)
obl(go, procedure)
punct(be, .)
advmod(recognize, then)
nsubj(recognize, he)
aux(recognize, might)
advmod(recognize, finally)
root(ROOT, recognize)
obj(recognize, it)
punct(recognize, ,)
advmod(combine, apparently)
mark(combine, by)
advcl(recognize, combine)
det(blot, the)
amod(blot, visual)
obj(combine, blot)
punct(blot, ,)
advmod(see, actually)
aux:pass(see, be)
acl(blot, see)
punct(see, ,)
case(feeling, with)
amod(feeling, tactual)
obl(see, feeling)
case(head, in)
det(head, the)
nmod(feeling, head)
cc(body, or)
conj(head, body)
acl(head, accompany)
det(movement, the)
compound(movement, trace)
obj(accompany, movement)
punct(recognize, .)
nsubj(mean, this)
aux(mean, would)
root(ROOT, mean)
punct(see, ,)
nsubj:pass(see, it)
aux(see, can)
advmod(see, readily)
aux:pass(see, be)
ccomp(mean, see)
punct(see, ,)
nsubj:pass(see, that)
punct(see, ,)
advmod(see, again)
punct(have, ,)
case(experience, for)
det(experience, each)
amod(experience, new)
amod(experience, visual)
obl(have, experience)
punct(have, ,)
det(motion, the)
compound(motion, trace)
nsubj(have, motion)
aux(have, would)
ccomp(see, have)
mark(repeat, to)
aux:pass(repeat, be)
xcomp(have, repeat)
case(absence, because)
fixed(because, of)
det(absence, the)
obl(repeat, absence)
case(imagery, of)
amod(imagery, visual)
nmod(absence, imagery)
punct(see, .)
mark(surmise, as)
nsubj(surmise, one)
aux(surmise, would)
advcl(repeat, surmise)
punct(repeat, ,)
det(procedure, the)
nsubj:pass(repeat, procedure)
punct(repeat, ,)
advmod(repeat, however)
punct(repeat, ,)
aux(repeat, could)
aux:pass(repeat, be)
root(ROOT, repeat)
case(object, with)
det(object, the)
amod(object, same)
obl(repeat, object)
cc(type, or)
case(type, with)
det(type, the)
amod(type, same)
conj(object, type)
case(object, of)
nmod(type, object)
advmod(enough, often)
advmod(type, enough)
punct(repeat, ,)
mark(provide, so)
fixed(so, that)
det(blot, the)
amod(blot, corresponding)
amod(blot, visual)
nsubj(provide, blot)
cc(beginning, and)
det(beginning, the)
amod(beginning, merest)
conj(blot, beginning)
case(movement, of)
det(movement, the)
compound(movement, trace)
nmod(beginning, movement)
aux(provide, would)
advcl(repeat, provide)
obj(provide, clue)
case(shape, as)
fixed(as, to)
det(shape, the)
amod(shape, actual)
obl(provide, shape)
punct(shape, ,)
obj(determine, which)
det(patient, the)
nsubj(determine, patient)
advmod(determine, then)
advmod(determine, immediately)
aux(determine, could)
acl:relcl(shape, determine)
case(kind, by)
det(kind, a)
obl(determine, kind)
case(inference, of)
nmod(kind, inference)
punct(repeat, .)
nsubj(have, Men)
punct(tree, ,)
conj(Men, tree)
punct(automobile, ,)
conj(Men, automobile)
punct(house, ,)
conj(Men, house)
punct(on, ,)
cc(on, and)
advmod(on, so)
conj(Men, on)
punct(object, --)
conj(Men, object)
advmod(confront, continually)
acl(object, confront)
case(life, in)
amod(life, everyday)
obl(confront, life)
punct(have, --)
root(ROOT, have)
det(appearance, each)
nmod:poss(appearance, its)
amod(appearance, characteristic)
compound(appearance, blot)
punct(appearance, -)
obj(have, appearance)
cc(become, and)
conj(have, become)
advmod(become, easily)
xcomp(become, recognizable)
punct(recognizable, ,)
case(beginning, at)
det(beginning, the)
amod(beginning, very)
obl(recognizable, beginning)
case(trace, of)
nmod(beginning, trace)
punct(beginning, ,)
case(inference, by)
det(inference, a)
obl(recognizable, inference)
case(what, as)
fixed(as, to)
nmod(inference, what)
nsubj(be, each)
acl:relcl(what, be)
punct(have, .)
vocative(infer, Dice)
punct(infer, ,)
case(example, for)
obl(infer, example)
punct(infer, ,)
nsubj(infer, he)
root(ROOT, infer)
case(dot, from)
amod(dot, black)
obl(infer, dot)
case(surface, on)
det(surface, a)
amod(surface, white)
obl(infer, surface)
punct(infer, .)
nsubj(see, he)
advmod(see, evidently)
aux(see, could)
advmod(see, not)
advmod(see, actually)
root(ROOT, see)
det(corner, the)
obj(see, corner)
case(object, of)
det(object, these)
nmod(corner, object)
punct(give, ,)
cc(give, but)
nmod:poss(size, they)
nsubj(give, size)
cc(dot, and)
det(dot, the)
conj(size, dot)
conj(see, give)
obj(give, they)
advmod(give, away)
punct(see, .)
cc(give, and)
det(author, the)
nsubj(give, author)
root(ROOT, give)
amod(instance, numerous)
obj(give, instance)
mark(calculate, of)
acl(instance, calculate)
xcomp(calculate, gue)
case(part, on)
det(patient, the)
nmod:poss(part, patient)
case(patient, 's)
obl(gue, part)
mark(show, to)
advcl(gue, show)
advmod(large, how)
ccomp(show, large)
det(role, a)
nsubj(large, role)
nsubj(play, it)
acl:relcl(role, play)
case(process, in)
nmod:poss(process, he)
obl(play, process)
mark(readapt, of)
acl(process, readapt)
obj(readapt, himself)
cc(proficient, and)
advmod(proficient, how)
conj(readapt, proficient)
nsubj(become, he)
ccomp(proficient, become)
case(it, at)
obl(become, it)
punct(give, .)
advmod(seem, often)
nsubj(seem, he)
root(ROOT, seem)
advmod(able, even)
mark(able, to)
aux(able, have)
cop(able, be)
xcomp(seem, able)
mark(guess, to)
xcomp(able, guess)
advmod(guess, correctly)
punct(guess, ,)
case(motion, without)
det(motion, the)
compound(motion, trace)
obl(guess, motion)
punct(motion, ,)
advmod(basis, solely)
case(basis, on)
det(basis, the)
obl(guess, basis)
case(difference, of)
amod(difference, qualitative)
nmod(basis, difference)
case(thing, among)
det(thing, the)
nmod(difference, blot)
punct(blot, -)
case(thing, like)
nmod(difference, thing)
nsubj(appear, which)
acl:relcl(thing, appear)
case(experience, in)
nmod:poss(experience, he)
amod(experience, visual)
obl(appear, experience)
punct(seem, .)
advmod(question, perhaps)
det(question, the)
advmod(important, very)
amod(question, important)
root(ROOT, question)
punct(question, --)
nsubj(role, what)
cop(role, be)
punct(role, ,)
advmod(role, then)
punct(role, ,)
advmod(role, exactly)
det(role, the)
root(ROOT, role)
case(sensation, of)
amod(sensation, kinesthetic)
nmod(role, sensation)
case(ability, in)
det(patient, the)
nmod:poss(ability, patient)
case(patient, 's)
nmod(role, ability)
mark(recognize, to)
acl(ability, recognize)
obj(recognize, form)
cc(shape, and)
conj(form, shape)
case(means, by)
obl(recognize, means)
case(movement, of)
det(movement, the)
compound(movement, trace)
nmod(means, movement)
mark(look, when)
nsubj(look, he)
aux(look, be)
advmod(look, actually)
advcl(recognize, look)
case(thing, at)
obl(look, thing)
punct(role, ?)
punct(role, ?)
punct(role, --)
aux(raise, have)
advmod(raise, now)
aux:pass(raise, be)
root(ROOT, raise)
case(mind, in)
det(reader, the)
nmod:poss(mind, reader)
case(reader, 's)
obl(raise, mind)
cc(form, and)
case(form, in)
det(form, the)
amod(form, follow)
conj(mind, form)
punct(raise, .)
mark(perceive, if)
det(patient, the)
nsubj(perceive, patient)
aux(perceive, can)
advcl(seem, perceive)
xcomp(perceive, figure)
advmod(figure, kinesthetically)
mark(perceive, when)
nsubj(perceive, he)
aux(perceive, can)
advmod(perceive, not)
advcl(figure, perceive)
obj(perceive, it)
advmod(perceive, visually)
punct(seem, ,)
advmod(seem, then)
punct(seem, ,)
nsubj(seem, it)
aux(seem, would)
root(ROOT, seem)
punct(seem, ,)
det(sense, the)
nsubj(have, sense)
case(touch, of)
nmod(sense, touch)
ccomp(seem, have)
amod(contact, immediate)
obj(have, contact)
case(aspect, with)
det(aspect, the)
amod(aspect, spatial)
nmod(contact, aspect)
case(thing, of)
nmod(aspect, thing)
case(independence, in)
nmod(aspect, independence)
case(representation, of)
amod(representation, visual)
nmod(independence, representation)
punct(regard, ,)
case(regard, at)
fixed(at, least)
case(regard, in)
nmod(independence, regard)
case(dimension, to)
nummod(dimension, two)
nmod(regard, dimension)
punct(see, ,)
cc(see, and)
punct(regard, ,)
mark(see, as)
nsubj(see, we)
aux(see, shall)
advcl(regard, see)
punct(deny, ,)
advmod(awareness, even)
det(awareness, this)
advmod(spatial, much)
amod(awareness, spatial)
nsubj:pass(deny, awareness)
case(part, on)
det(part, the)
nmod(awareness, part)
case(touch, of)
amod(touch, unaided)
nmod(part, touch)
aux:pass(deny, be)
ccomp(see, deny)
case(author, by)
det(author, the)
obl(deny, author)
punct(seem, .)
advmod(function, how)
punct(function, ,)
advmod(function, then)
punct(function, ,)
aux(function, do)
det(sensation, the)
amod(sensation, kinesthetic)
nsubj(function, sensation)
root(ROOT, function)
advmod(function, in)
det:predet(this, all)
obj(function, this)
punct(function, ?)
punct(function, ?)
det(author, the)
nsubj(set, author)
root(ROOT, set)
mark(answer, about)
advcl(set, answer)
det(question, this)
amod(question, fundamental)
obj(answer, question)
case(investigation, through)
det(investigation, a)
amod(investigation, detailed)
obl(answer, investigation)
case(ability, of)
det(patient, the)
nmod:poss(ability, patient)
case(patient, 's)
nmod(investigation, ability)
punct(ability, ,)
advmod(1, tactually)
punct(1, ,)
punct(1, ()
nummod(perceive, 1)
punct(1, ))
mark(perceive, to)
advcl(answer, perceive)
obj(perceive, figure)
cc(2, and)
punct(2, ()
nummod(locate, 2)
punct(2, ))
mark(locate, to)
advcl(perceive, locate)
obj(locate, object)
case(space, in)
obl(locate, space)
punct(locate, ,)
case(eye, with)
nmod:poss(eye, he)
obl(locate, eye)
acl(eye, close)
punct(turn, ()
cc(turn, or)
conj(close, turn)
advmod(turn, away)
mark(concerned, from)
det(object, the)
nsubj(concerned, object)
obl(away, concerned)
punct(make, ))
punct(make, .)
advmod(naturally, Quite)
advmod(make, naturally)
punct(make, ,)
nsubj(make, they)
parataxis(set, make)
det(investigation, the)
obj(make, investigation)
punct(make, ,)
advmod(prohibiting, first)
punct(make, ,)
mark(prohibiting, by)
advcl(make, prohibiting)
det(patient, the)
obj(prohibiting, patient)
mark(make, from)
acl(patient, make)
det(movement, any)
obj(make, movement)
case(all, at)
nmod(movement, all)
cc(then, and)
advmod(later, then)
punct(later, ,)
advmod(repeat, later)
punct(repeat, ,)
mark(repeat, by)
advcl(make, repeat)
obj(repeat, it)
cc(allow, and)
conj(repeat, allow)
det(patient, the)
obj(allow, patient)
mark(move, to)
xcomp(allow, move)
case(way, in)
det(way, any)
obl(move, way)
nsubj(want, he)
acl:relcl(way, want)
xcomp(want, to)
punct(want, .)
mark(allow, when)
det(patient, the)
nsubj:pass(allow, patient)
aux:pass(allow, be)
advmod(allow, not)
advcl(want, allow)
mark(move, to)
xcomp(allow, move)
nmod:poss(body, he)
obj(move, body)
case(way, in)
det(way, any)
obl(move, way)
case(all, at)
nmod(way, all)
punct(occur, ,)
det(result, the)
amod(result, follow)
amod(result, strike)
nsubj(occur, result)
acl:relcl(way, occur)
punct(occur, .)
advmod(turn, whenever)
nsubj(turn, artist)
punct(turn, ,)
advmod(turn, indeed)
punct(turn, ,)
conj(occur, turn)
case(representation, to)
amod(representation, actual)
obl(turn, representation)
cc(mold, or)
conj(turn, mold)
compound(dimensional, three)
punct(dimensional, -)
amod(figure, dimensional)
obj(mold, figure)
punct(figure, ,)
nsubj(rare, which)
cop(rare, be)
acl:relcl(figure, rare)
case(B.C., down)
case(B.C., to)
nummod(B.C., 800)
obl(rare, B.C.)
punct(tend, ,)
nsubj(tend, they)
conj(rare, tend)
mark(reflect, to)
xcomp(tend, reflect)
obj(reflect, reality)
punct(see, ()
parataxis(tend, see)
obj(see, plate)
nummod(plate, 6)
det(b, a)
punct(b, ,)
nummod(b, 9)
obj(see, b)
punct(see, ))
punct(see, ;)
punct(see, ;)
det(treatment, a)
amod(treatment, schematic)
punct(treatment, ,)
amod(treatment, abstract)
appos(plate, treatment)
case(man, of)
nmod(treatment, man)
cc(animal, and)
conj(man, animal)
punct(treatment, ,)
case(intent, by)
nmod(man, intent)
punct(rise, ,)
acl(treatment, rise)
advmod(century, only)
case(century, in)
det(century, the)
amod(century, late)
amod(century, eighth)
obl(rise, century)
punct(set, . )
mark(speak, to)
csubj(be, speak)
case(view, of)
det(view, this)
amod(view, underlying)
obl(speak, view)
case(world, of)
det(world, the)
nmod(view, world)
root(ROOT, be)
mark(embark, to)
ccomp(be, embark)
case(matter, upon)
obl(embark, matter)
case(judgment, of)
amod(judgment, subjective)
nmod(matter, judgment)
punct(be, .)
case(least, at)
det(least, the)
obl(conclude, least)
punct(conclude, ,)
advmod(conclude, however)
punct(conclude, ,)
nsubj(conclude, one)
aux(conclude, may)
root(ROOT, conclude)
mark(sense, that)
amod(potter, Geometric)
nsubj(sense, potter)
ccomp(conclude, sense)
det(order, a)
amod(order, logical)
obj(sense, order)
punct(conclude, ;)
punct(conclude, ;)
nmod:poss(principle, they)
nsubj(stand, principle)
case(composition, of)
nmod(principle, composition)
parataxis(conclude, stand)
advmod(close, very)
xcomp(stand, close)
case(those, to)
obl(close, those)
nsubj(appear, which)
acl:relcl(those, appear)
case(epic, in)
det(epic, the)
amod(epic, homeric)
obl(appear, epic)
cc(line, and)
det(line, the)
compound(line, hexameter)
conj(epic, line)
punct(line, .)
nmod:poss(world, they)
appos(line, world)
punct(world, ,)
advmod(age, again)
punct(age, ,)
cop(age, be)
det(age, a)
advmod(simple, still)
amod(age, simple)
punct(age, ,)
amod(age, traditional)
parataxis(conclude, age)
nsubj(begin, which)
aux(begin, be)
advmod(begin, only)
advmod(begin, slowly)
acl:relcl(age, begin)
mark(appreciate, to)
xcomp(begin, appreciate)
det(complexity, the)
obj(appreciate, complexity)
case(life, of)
nmod(complexity, life)
punct(conclude, .)
cc(go, and)
advmod(go, perhaps)
det(observer, a)
nsubj(go, observer)
case(vase, of)
det(vase, the)
nmod(observer, vase)
aux(go, will)
advmod(go, not)
root(ROOT, go)
advmod(far, too)
advmod(go, far)
mark(deducing, in)
advcl(go, deducing)
mark(stable, that)
det(outlook, the)
nsubj(stable, outlook)
case(maker, of)
nmod:poss(maker, they)
nmod(outlook, maker)
cc(user, and)
conj(maker, user)
cop(stable, be)
advmod(stable, basically)
ccomp(deducing, stable)
cc(secure, and)
conj(stable, secure)
punct(go, .)
det(storm, the)
nsubj(die, storm)
case(past, of)
det(past, the)
nmod(storm, past)
aux(die, have)
root(ROOT, die)
advmod(die, away)
punct(begin, ,)
cc(begin, and)
det(upheaval, the)
amod(upheaval, great)
nsubj(begin, upheaval)
nsubj(be, which)
acl:relcl(upheaval, be)
mark(mark, to)
xcomp(be, mark)
det(century, the)
amod(century, follow)
obj(mark, century)
aux(begin, have)
advmod(begin, not)
advmod(begin, yet)
conj(die, begin)
mark(disturb, to)
xcomp(begin, disturb)
nmod:poss(mind, man)
case(man, 's)
obj(disturb, mind)
punct(disturb, .)
case(work, throughout)
det(work, the)
obl(disturb, work)
case(century, of)
det(century, the)
amod(century, later)
amod(century, ninth)
nmod(work, century)
det(serenity, a)
amod(serenity, calm)
punct(display, ,)
amod(serenity, severe)
nsubj(display, serenity)
conj(begin, display)
obj(display, itself)
punct(die, .)
case(vase, in)
det(vase, the)
obl(bear, vase)
det(spirit, this)
nsubj(bear, spirit)
aux(bear, may)
advmod(bear, perhaps)
case(time, at)
obl(bear, time)
root(ROOT, bear)
cc(repel, or)
conj(bear, repel)
obj(bear, one)
case(satisfaction, in)
nmod:poss(satisfaction, its)
amod(satisfaction, internal)
compound(satisfaction, self)
punct(satisfaction, -)
nmod(one, satisfaction)
punct(consider, ,)
cc(consider, but)
det(best, the)
nsubj:pass(consider, best)
case(pin, of)
det(pin, the)
amod(pin, Geometric)
nmod(best, pin)
aux(consider, have)
advmod(consider, rightly)
aux:pass(consider, be)
conj(bear, consider)
mark(make, among)
det(beautiful, the)
advmod(beautiful, most)
amod(make, beautiful)
advmod(make, ever)
advcl(consider, make)
case(world, in)
det(world, the)
amod(world, Greek)
obl(make, world)
punct(bear, .)
det(century, the)
amod(century, ninth)
nsubj(work, century)
cop(work, be)
case(work, in)
nmod:poss(work, its)
amod(work, artistic)
root(ROOT, work)
punct(freest, ``)
det(freest, the)
advmod(freest, spiritually)
appos(work, freest)
cc(sufficient, and)
advmod(sufficient, most)
obl:npmod(sufficient, self)
punct(sufficient, -)
conj(freest, sufficient)
case(past, between)
obl(sufficient, past)
cc(future, and)
conj(past, future)
punct(freest, '')
punct(testimonial, ,)
cc(testimonial, and)
det(skill, the)
amod(skill, loving)
nsubj(testimonial, skill)
acl(skill, spend)
case(artist, by)
nmod:poss(artist, its)
obl(spend, artist)
case(product, upon)
nmod:poss(product, they)
obl(spend, product)
cop(testimonial, be)
det(testimonial, a)
conj(work, testimonial)
case(sense, to)
nmod:poss(sense, they)
nmod(testimonial, sense)
mark(important, that)
obj(do, what)
nsubj(do, they)
aux(do, be)
acl:relcl(sense, do)
cop(important, be)
conj(testimonial, important)
cc(appreciate, and)
aux:pass(appreciate, be)
conj(important, appreciate)
punct(work, .)
det(aegean, the)
nsubj(receive, aegean)
case(pottery, in)
nummod(pottery, 800)
compound(pottery, B.C.)
compound(pottery, Geometric)
nmod(aegean, pottery)
aux(receive, have)
advmod(receive, not)
advmod(receive, yet)
root(ROOT, receive)
det(study, the)
amod(study, thorough)
punct(study, ,)
amod(study, detailed)
obj(receive, study)
obj(deserve, which)
nsubj(deserve, it)
acl:relcl(study, deserve)
punct(deserve, ,)
advmod(deserve, partly)
mark(one, because)
det(task, the)
nsubj(one, task)
cop(one, be)
det(one, a)
amod(one, mammoth)
advcl(receive, one)
cc(partly, and)
advmod(one, partly)
mark(come, because)
nsubj(come, some)
case(manifestation, of)
nmod:poss(manifestation, its)
amod(manifestation, local)
nmod(some, manifestation)
punct(manifestation, ,)
case(Argos, as)
case(Argos, at)
obl(come, Argos)
punct(come, ,)
aux(come, be)
advmod(come, only)
advmod(come, now)
conj(one, come)
case(light, to)
obl(come, light)
punct(come, .)
case(inspection, from)
advmod(inspection, even)
det(inspection, a)
amod(inspection, cursory)
obl(come, inspection)
case(aspect, of)
nmod:poss(aspect, its)
amod(aspect, many)
nmod(inspection, aspect)
punct(deduce, ,)
advmod(deduce, however)
punct(deduce, ,)
det(historian, the)
nsubj(deduce, historian)
aux(deduce, can)
parataxis(inspection, deduce)
amod(conclusion, several)
amod(conclusion, fundamental)
obj(deduce, conclusion)
case(progress, about)
det(progress, the)
nmod(conclusion, progress)
case(world, of)
det(world, the)
compound(world, aegean)
nmod(progress, world)
case(b.c, down)
case(b.c, to)
nummod(b.c, 800)
nmod(progress, b.c)
punct(b.c, .)
punct(outlook, .)
det(outlook, the)
amod(outlook, general)
amod(outlook, intellectual)
nsubj(deduce, outlook)
nsubj(appear, which)
aux(appear, have)
acl:relcl(outlook, appear)
case(century, in)
det(century, the)
amod(century, eleventh)
obl(appear, century)
aux:pass(consolidate, be)
advmod(consolidate, now)
ccomp(appear, consolidate)
case(degree, to)
det(degree, a)
amod(degree, significant)
obl(consolidate, degree)
punct(receive, . )
nsubj(become, much)
nsubj(embryo, which)
cop(embryo, be)
case(embryo, in)
acl:relcl(much, embryo)
case(1000, in)
nmod(embryo, 1000)
aux(become, have)
root(ROOT, become)
advmod(well, reasonably)
advmod(develop, well)
xcomp(become, develop)
case(800, by)
obl(develop, 800)
punct(become, .)
case(process, in)
det(process, this)
obl(transmute, process)
det(inheritance, the)
compound(mycenaean, Minoan)
punct(mycenaean, -)
compound(inheritance, mycenaean)
nsubj:pass(transmute, inheritance)
aux(transmute, have)
aux:pass(transmute, be)
root(ROOT, transmute)
cc(reject, or)
advmod(reject, finally)
conj(transmute, reject)
punct(transmute, ;)
punct(transmute, ;)
det(world, the)
compound(world, aegean)
nsubj(differ, world)
nsubj(exist, which)
aux(exist, have)
acl:relcl(world, exist)
case(1000, before)
obl(exist, 1000)
conj(transmute, differ)
case(that, from)
obl(differ, that)
nsubj(rise, which)
acl:relcl(that, rise)
advmod(clearly, more)
advmod(rise, clearly)
case(vision, in)
nmod:poss(vision, we)
obl(rise, vision)
case(800, after)
obl(rise, 800)
punct(transmute, .)
det(scholar, those)
amod(scholar, modern)
nsubj(correct, scholar)
nsubj(urge, who)
acl:relcl(scholar, urge)
mark(keep, that)
nsubj(keep, we)
aux(keep, must)
ccomp(urge, keep)
case(mind, in)
obl(keep, mind)
det(continuity, the)
amod(continuity, fundamental)
obj(keep, continuity)
case(development, of)
compound(development, aegean)
nmod(continuity, development)
case(time, from)
amod(time, earliest)
nmod(continuity, time)
punct(continuity, --)
acl(continuity, grant)
amod(irruption, occasional)
obj(grant, irruption)
case(people, of)
nmod(irruption, people)
cc(idea, and)
conj(people, idea)
case(outside, from)
nmod(people, outside)
punct(correct, --)
cop(correct, be)
root(ROOT, correct)
punct(correct, ;)
punct(correct, ;)
cc(misl, but)
det(observer, all)
advmod(many, too)
amod(observer, many)
nsubj:pass(misl, observer)
aux(misl, have)
aux:pass(misl, be)
conj(correct, misl)
case(fact, by)
det(fact, this)
obl(misl, fact)
mark(minimize, into)
acl(fact, minimize)
det(degree, the)
obj(minimize, degree)
case(change, of)
nmod(degree, change)
nsubj(take, which)
acl:relcl(change, take)
obj(take, place)
case(millennium, in)
det(millennium, the)
amod(millennium, early)
amod(millennium, first)
obl(take, millennium)
punct(correct, .)
det(focus, the)
nsubj(lay, focus)
case(novelty, of)
nmod(focus, novelty)
case(world, in)
det(world, this)
nmod(novelty, world)
advmod(lay, now)
root(ROOT, lay)
case(district, in)
det(district, the)
obl:npmod(eastern, south)
punct(eastern, -)
amod(district, eastern)
obl(lay, district)
case(mainland, of)
det(mainland, the)
amod(mainland, Greek)
nmod(district, mainland)
punct(accept, ,)
cc(accept, and)
case(800, by)
nummod(aegean, 800)
advmod(aegean, virtually)
det(aegean, the)
amod(aegean, entire)
nsubj(except, aegean)
punct(aegean, ,)
advmod(except, always)
advcl(accept, except)
nmod:poss(shore, its)
amod(shore, northern)
obj(except, shore)
punct(accept, ,)
aux(accept, have)
conj(lay, accept)
det(style, the)
amod(style, Geometric)
obj(accept, style)
case(pottery, of)
nmod(style, pottery)
punct(accept, .)
mark(turn, while)
compound(vase, Protogeometric)
nsubj(turn, vase)
advmod(turn, usually)
advcl(accept, turn)
compound:prt(turn, up)
punct(turn, ,)
advmod(outside, especially)
advmod(turn, outside)
nsubj(proper, Greece)
root(ROOT, proper)
punct(proper, ,)
advmod(proper, together)
case(example, with)
advmod(many, as)
amod(example, many)
cc(more, or)
conj(many, more)
obl(proper, example)
case(stamp, of)
amod(stamp, local)
nmod(example, stamp)
punct(stamp, ,)
appos(stamp, these)
punct(proper, ``)
advmod(Greek, non-)
amod(pattern, Greek)
punct(Greek, '')
nsubj(vanish, pattern)
aux(vanish, have)
advmod(vanish, mostly)
root(ROOT, vanish)
case(century, by)
det(century, the)
amod(century, later)
amod(century, ninth)
obl(vanish, century)
punct(vanish, .)
case(place, in)
nmod:poss(place, they)
obl(come, place)
root(ROOT, come)
amod(variation, local)
obj(come, variation)
case(style, within)
det(style, the)
amod(style, common)
obl(come, style)
punct(come, --)
appos(style, tentative)
punct(come, ,)
mark(be, as)
nsubj(be, it)
advcl(tentative, be)
punct(product, ,)
case(product, in)
compound(product, Protogeometric)
obl(be, product)
cc(distinct, but)
advmod(distinct, truly)
conj(product, distinct)
cc(define, and)
advmod(define, sharply)
conj(distinct, define)
mark(develop, as)
det(spirit, the)
amod(spirit, Geometric)
nsubj(develop, spirit)
advcl(define, develop)
punct(come, .)
nsubj(teacher, Attica)
punct(teacher, ,)
mark(important, though)
advcl(teacher, important)
punct(teacher, ,)
cop(teacher, be)
advmod(teacher, not)
det(teacher, the)
amod(teacher, only)
root(ROOT, teacher)
case(age, of)
det(age, this)
nmod(teacher, age)
punct(teacher, .)
nsubj(take, one)
aux(take, can)
root(ROOT, take)
det(vase, a)
obj(take, vase)
case(B.C., of)
advmod(800, about)
nummod(B.C., 800)
nmod(vase, B.C.)
cc(become, and)
punct(take, ,)
case(knowledge, without)
det(knowledge, any)
obl(become, knowledge)
case(place, of)
nmod:poss(place, its)
nmod(knowledge, place)
case(origin, of)
nmod(place, origin)
punct(venture, ,)
conj(origin, venture)
mark(assign, to)
acl(place, assign)
obj(assign, it)
case(area, to)
det(area, a)
amod(area, specific)
obl(assign, area)
punct(take, ;)
punct(take, ;)
nsubj(become, imitation)
cc(borrowing, and)
conj(imitation, borrowing)
case(motif, of)
nmod(borrowing, motif)
advmod(become, now)
conj(take, become)
xcomp(become, ascertainable)
punct(take, .)
det(potter, the)
nsubj(stand, potter)
case(island, of)
det(island, the)
compound(island, aegean)
nmod(potter, island)
advmod(stand, thus)
root(ROOT, stand)
advmod(stand, apart)
case(those, from)
obl(stand, those)
case(mainland, of)
det(mainland, the)
nmod(those, mainland)
punct(have, ,)
cc(have, and)
case(Greece, in)
obl(have, Greece)
nsubj(argive, itself)
conj(Greece, argive)
punct(Corinthian, ,)
conj(argive, Corinthian)
punct(Attic, ,)
conj(argive, Attic)
punct(boeotian, ,)
conj(argive, boeotian)
punct(sequence, ,)
cc(sequence, and)
amod(sequence, other)
amod(sequence, Geometric)
conj(argive, sequence)
conj(stand, have)
det(hallmark, each)
nmod:poss(hallmark, they)
amod(hallmark, own)
obj(have, hallmark)
punct(stand, .)
det(variation, these)
amod(variation, local)
nsubj(be, variation)
root(ROOT, be)
mark(become, to)
ccomp(be, become)
advmod(sharper, ever)
xcomp(become, sharper)
case(century, in)
det(century, the)
amod(century, next)
obl(sharper, century)
cc(half, and)
det(half, a)
conj(century, half)
punct(be, .)
det(conclusion, the)
amod(conclusion, same)
nsubj:pass(draw, conclusion)
aux(draw, can)
aux:pass(draw, be)
root(ROOT, draw)
case(evidence, from)
det(evidence, the)
amod(evidence, other)
amod(evidence, physical)
obl(draw, evidence)
case(age, of)
det(age, the)
amod(age, Dark)
nmod(evidence, age)
punct(age, ,)
case(distribution, from)
amod(distribution, linguistic)
nmod(age, distribution)
punct(survival, ,)
cc(survival, and)
case(survival, from)
det(survival, the)
conj(evidence, survival)
case(pattern, of)
amod(social, early)
amod(pattern, social)
punct(political, ,)
conj(social, political)
punct(religious, ,)
cc(religious, and)
conj(social, religious)
nmod(survival, pattern)
case(age, into)
amod(age, later)
nmod(pattern, age)
punct(draw, .)
case(B.C., by)
nummod(B.C., 800)
obl(area, B.C.)
det(aegean, the)
nsubj(area, aegean)
cop(area, be)
det(area, a)
root(ROOT, area)
case(tongue, of)
amod(tongue, common)
nmod(area, tongue)
cc(culture, and)
case(culture, of)
amod(culture, common)
conj(tongue, culture)
punct(area, .)
case(pillar, on)
det(pillar, these)
obl(rest, pillar)
root(ROOT, rest)
det(basis, that)
amod(basis, solid)
obj(rest, basis)
case(life, for)
obl(rest, life)
cc(think, and)
conj(rest, think)
nsubj(soon, which)
cop(soon, be)
advmod(manifest, soon)
mark(manifest, to)
aux:pass(manifest, be)
ccomp(think, manifest)
case(ken, in)
det(ken, the)
advmod(unlimited, remarkably)
amod(ken, unlimited)
obl(manifest, ken)
case(Iliad, of)
det(Iliad, the)
nmod(ken, Iliad)
punct(rest, .)
advmod(find, everywhere)
case(pattern, within)
det(pattern, the)
amod(pattern, common)
obl(everywhere, pattern)
punct(find, ,)
advmod(find, however)
punct(find, ,)
nsubj(find, one)
root(ROOT, find)
amod(diversity, local)
obj(find, diversity)
punct(find, ;)
punct(find, ;)
amod(history, Greek)
nsubj:pass(fertilize, history)
cc(culture, and)
conj(history, culture)
aux:pass(fertilize, be)
advmod(fertilize, enduringly)
root(ROOT, fertilize)
punct(plague, ,)
cc(plague, and)
conj(fertilize, plague)
punct(fertilize, ,)
case(interplay, by)
det(interplay, the)
obl(fertilize, interplay)
case(factor, of)
det(factor, these)
amod(factor, conjoin)
advmod(oppose, yet)
amod(factor, oppose)
nmod(interplay, factor)
punct(fertilize, . )
advmod(go, further)
nsubj(go, we)
aux(go, can)
advmod(go, not)
root(ROOT, go)
punct(go, ,)
case(age, for)
det(age, the)
amod(age, Dark)
obl(deserve, age)
conj(go, deserve)
nmod:poss(name, they)
obj(deserve, name)
punct(go, .)
amod(aspect, many)
nsubj:pass(crystallize, aspect)
case(civilization, of)
nmod(aspect, civilization)
aux:pass(crystallize, be)
advmod(crystallize, not)
advmod(crystallize, yet)
advmod(crystallize, sufficiently)
root(ROOT, crystallize)
mark(find, to)
advcl(crystallize, find)
obj(find, expression)
punct(support, ,)
cc(support, nor)
aux(support, could)
det(foundation, the)
amod(foundation, simple)
amod(foundation, economic)
cc(social, and)
conj(economic, social)
nsubj(support, foundation)
case(world, of)
det(world, this)
nmod(foundation, world)
conj(crystallize, support)
det(structure, a)
amod(structure, lofty)
obj(support, structure)
punct(crystallize, .)
det(poem, the)
amod(poem, epic)
root(ROOT, poem)
punct(poem, ,)
det(consolidation, the)
appos(poem, consolidation)
case(pantheon, of)
det(pantheon, the)
amod(pantheon, Greek)
nmod(consolidation, pantheon)
punct(rise, ,)
det(rise, the)
appos(poem, rise)
case(unit, of)
amod(unit, firm)
amod(unit, political)
nmod(rise, unit)
punct(unit, ,)
det(awareness, the)
compound(awareness, self)
punct(awareness, -)
appos(rise, awareness)
nsubj(permit, which)
aux(permit, could)
acl:relcl(awareness, permit)
amod(representation, paint)
cc(sculpture, and)
conj(paint, sculpture)
obj(permit, representation)
case(man, of)
nmod(representation, man)
punct(representation, --)
obj(have, all)
nsubj(have, these)
parataxis(permit, have)
mark(await, to)
xcomp(have, await)
det(progress, the)
obj(await, progress)
case(decade, of)
amod(decade, follow)
nmod(progress, decade)
punct(have, .)
obj(see, what)
nsubj(see, we)
aux(see, have)
advcl(see, see)
case(chapter, in)
det(chapter, this)
obl(see, chapter)
punct(see, ,)
nsubj(see, we)
aux(see, have)
root(ROOT, see)
advmod(dimly, only)
advmod(see, dimly)
punct(worth, ,)
cc(worth, and)
cc(worth, yet)
det(result, the)
nsubj(worth, result)
punct(result, ,)
advmod(general, however)
amod(result, general)
punct(worth, ,)
cop(worth, be)
conj(see, worth)
det(search, the)
obj(worth, search)
punct(see, .)
nsubj(century, these)
cop(century, be)
det(century, the)
root(ROOT, century)
case(which, in)
obl(settle, which)
det(inhabitant, the)
nsubj(settle, inhabitant)
case(world, of)
det(world, the)
compound(world, aegean)
nmod(inhabitant, world)
acl:relcl(century, settle)
advmod(settle, firmly)
case(mind, into)
nmod:poss(mind, they)
obl(settle, mind)
cc(foundation, and)
case(institution, into)
nmod:poss(institution, they)
nmod(foundation, institution)
det(foundation, the)
conj(settle, foundation)
case(outlook, of)
det(outlook, the)
amod(outlook, Hellenic)
nmod(foundation, outlook)
punct(outlook, ,)
amod(outlook, independent)
case(force, of)
amod(force, outside)
obl(independent, force)
punct(century, .)
mark(interpret, to)
advcl(defect, interpret)
punct(defect, ,)
advmod(defect, indeed)
punct(defect, ,)
det(era, the)
nsubj(defect, era)
case(1000, from)
nmod(era, 1000)
case(800, to)
nmod(1000, 800)
case(period, as)
det(period, a)
nmod(era, period)
advmod(period, mainly)
case(consolidation, of)
nmod(period, consolidation)
aux(defect, may)
cop(defect, be)
det(defect, a)
amod(defect, necessary)
cc(unfortunate, but)
conj(necessary, unfortunate)
root(ROOT, defect)
acl(defect, bear)
case(lack, of)
nmod:poss(lack, we)
obl(bear, lack)
case(information, of)
amod(information, detailed)
nmod(lack, information)
punct(bear, ;)
punct(bear, ;)
mark(see, if)
nsubj(see, we)
aux(see, could)
advcl(find, see)
advmod(deeply, more)
advmod(see, deeply)
punct(find, ,)
nsubj(find, we)
advmod(find, probably)
aux(find, would)
parataxis(defect, find)
amod(issue, many)
compound(issue, side)
obj(find, issue)
cc(turning, and)
amod(turning, wrong)
conj(issue, turning)
nsubj(come, which)
acl:relcl(issue, come)
case(end, to)
det(end, a)
obl(come, end)
case(period, within)
det(period, the)
obl(come, period)
punct(defect, .)
det(historian, the)
nsubj(point, historian)
aux(point, can)
advmod(point, only)
root(ROOT, point)
compound:prt(point, out)
det(line, those)
obj(point, line)
nsubj(enough, which)
cop(enough, be)
amod(enough, major)
acl:relcl(line, enough)
mark(find, to)
advcl(enough, find)
obj(find, reflection)
case(evidence, in)
nmod:poss(evidence, we)
amod(evidence, limited)
obl(find, evidence)
punct(hope, ,)
cc(hope, and)
aux(hope, must)
conj(point, hope)
mark(enrich, that)
amod(excavation, future)
nsubj(enrich, excavation)
aux(enrich, will)
ccomp(hope, enrich)
nmod:poss(understanding, we)
obj(enrich, understanding)
punct(enrich, .)
case(age, throughout)
det(age, the)
amod(age, Dark)
obl(clear, age)
punct(clear, ,)
nsubj(clear, it)
cop(clear, be)
ccomp(hope, clear)
punct(clear, ,)
det(world, the)
amod(world, Greek)
nsubj(develop, world)
aux(develop, have)
aux(develop, be)
ccomp(clear, develop)
advmod(develop, slowly)
cc(consistently, but)
conj(slowly, consistently)
punct(point, .)
det(pace, the)
nsubj:pass(accelerate, pace)
aux(accelerate, could)
advmod(accelerate, now)
aux:pass(accelerate, be)
root(ROOT, accelerate)
punct(accelerate, ,)
case(inhabitant, for)
det(inhabitant, the)
obl(stand, inhabitant)
case(aegean, of)
det(aegean, the)
nmod(inhabitant, aegean)
ccomp(accelerate, stand)
case(ground, on)
amod(ground, firm)
obl(stand, ground)
punct(Chapter, .)
obl:tmod(stand, Chapter)
nummod(Chapter, 5)
det(century, the)
amod(century, early)
amod(century, eighth)
nmod(Chapter, century)
det(landscape, the)
nsubj(broaden, landscape)
case(history, of)
amod(history, Greek)
nmod(landscape, history)
acl:relcl(century, broaden)
advmod(broaden, widely)
punct(dispel, ,)
cc(rather, and)
advmod(abruptly, rather)
advmod(broaden, abruptly)
punct(broaden, ,)
case(century, in)
det(century, the)
amod(century, eighth)
nmod(age, century)
nmod(century, B.C.)
punct(age, ,)
det(age, the)
nsubj(dispel, age)
case(Dawn, of)
nmod:poss(Dawn, Homer)
case(Homer, 's)
punct(Dawn, ``)
amod(finger, rosy)
punct(finger, -)
amod(Dawn, finger)
nmod(age, Dawn)
punct(Dawn, '')
punct(age, .)
det(ray, the)
amod(ray, first)
compound(ray, slanting)
nsubj(dispel, ray)
case(day, of)
det(day, the)
amod(day, new)
nmod(ray, day)
aux(dispel, can)
advmod(dispel, not)
advmod(dispel, yet)
ccomp(accelerate, dispel)
det:predet(shadow, all)
det(shadow, the)
amod(shadow, dark)
obj(dispel, shadow)
nsubj(lie, which)
acl:relcl(shadow, lie)
case(world, across)
det(world, the)
compound(world, aegean)
obl(lie, world)
punct(dispel, ;)
punct(dispel, ;)
cc(grow, but)
nmod:poss(evidence, we)
nsubj(grow, evidence)
conj(dispel, grow)
advmod(grow, considerably)
case(variety, in)
obl(grow, variety)
cc(show, and)
conj(grow, show)
advmod(unmistakably, more)
advmod(show, unmistakably)
obj(show, some)
case(line, of)
det(line, the)
nmod(some, line)
case(change, of)
nmod(line, change)
punct(accelerate, .)
case(period, for)
det(period, this)
obl(remain, period)
punct(remain, ,)
case(century, as)
case(century, for)
amod(century, earlier)
obl(remain, century)
punct(remain, ,)
nsubj(remain, pottery)
root(ROOT, remain)
det(source, the)
advmod(secure, most)
amod(source, secure)
xcomp(remain, source)
punct(source, ;)
punct(source, ;)
det(material, the)
amod(material, ceramic)
nsubj(abundant, material)
case(age, of)
det(age, the)
nmod(material, age)
cop(abundant, be)
advmod(abundant, more)
parataxis(source, abundant)
punct(diversify, ,)
advmod(diversify, more)
conj(abundant, diversify)
punct(indicative, ,)
cc(indicative, and)
advmod(indicative, more)
conj(abundant, indicative)
case(hope, of)
det(hope, the)
obl(indicative, hope)
cc(fear, and)
conj(hope, fear)
case(maker, of)
nmod:poss(maker, its)
nmod(hope, maker)
punct(maker, ,)
nsubj(begin, who)
acl:relcl(maker, begin)
mark(show, to)
xcomp(begin, show)
obj(show, scene)
case(life, of)
amod(life, human)
nmod(scene, life)
cc(death, and)
conj(life, death)
punct(figurine, .)
nsubj(presage, figurine)
cc(chapel, and)
amod(chapel, simple)
conj(figurine, chapel)
conj(begin, presage)
det(emergence, the)
obj(presage, emergence)
case(sculpture, of)
nmod(emergence, sculpture)
cc(architecture, and)
conj(sculpture, architecture)
case(Greece, in)
nmod(sculpture, Greece)
punct(presage, ;)
punct(presage, ;)
appos(emergence, object)
case(gold, in)
nmod(object, gold)
punct(ivory, ,)
conj(gold, ivory)
punct(bronze, ,)
cc(bronze, and)
conj(gold, bronze)
conj(presage, grow)
advmod(numerous, more)
xcomp(grow, numerous)
punct(source, .)
mark(practice, since)
nsubj:pass(practice, writing)
aux:pass(practice, be)
advcl(hope, practice)
case(aegean, in)
det(aegean, the)
obl(practice, aegean)
case(end, before)
det(end, the)
obl(practice, end)
case(century, of)
det(century, the)
nmod(end, century)
punct(hope, ,)
nsubj(hope, we)
aux(hope, may)
root(ROOT, hope)
mark(useful, that)
det(detail, the)
nsubj(useful, detail)
case(tradition, of)
nmod(detail, tradition)
aux(useful, will)
advmod(useful, now)
cop(useful, be)
advmod(useful, occasionally)
ccomp(hope, useful)
punct(hope, .)
mark(easy, though)
expl(easy, it)
cop(easy, be)
advmod(easy, not)
advcl(useful, easy)
mark(apply, to)
csubj(easy, apply)
det(evidence, the)
obj(apply, evidence)
case(Iliad, of)
det(Iliad, the)
nmod(evidence, Iliad)
case(era, to)
det(era, any)
amod(era, specific)
obl(apply, era)
punct(take, ,)
det(product, this)
amod(product, marvelous)
nsubj(take, product)
case(tradition, of)
det(tradition, the)
amod(tradition, epic)
nmod(product, tradition)
aux(take, have)
advmod(take, certainly)
ccomp(hope, take)
amod(shape, definitive)
obj(take, shape)
case(750, by)
obl(take, 750)
punct(hope, .)
det(pottery, the)
compound(pottery, Dipylon)
compound(pottery, Geometric)
nsubj(manifestation, pottery)
case(athen, of)
nmod(pottery, athen)
cc(Iliad, and)
det(Iliad, the)
conj(athen, Iliad)
cop(manifestation, be)
amod(manifestation, amazing)
root(ROOT, manifestation)
case(potentiality, of)
det(potentiality, the)
amod(potentiality, inherent)
nmod(manifestation, potentiality)
case(civilization, of)
amod(civilization, Greek)
nmod(potentiality, civilization)
punct(manifestation, ;)
punct(manifestation, ;)
cc(product, but)
nsubj(product, both)
cop(product, be)
case(product, among)
det(product, the)
amod(product, last)
conj(manifestation, product)
case(phase, of)
det(phase, a)
nmod(product, phase)
nsubj(end, which)
aux(end, be)
acl:relcl(phase, end)
punct(swirl, .)
amod(civilization, Greek)
nsubj(swirl, civilization)
aux(swirl, be)
conj(product, swirl)
case(revolution, toward)
nmod:poss(revolution, its)
amod(revolution, great)
obl(swirl, revolution)
punct(revolution, ,)
case(which, in)
obl(break, which)
det(quality, the)
amod(quality, develop)
nsubj(be, quality)
case(outlook, of)
det(outlook, the)
amod(outlook, Hellenic)
nmod(quality, outlook)
acl:relcl(revolution, be)
advmod(be, suddenly)
mark(break, to)
advcl(be, break)
compound:prt(break, forth)
punct(manifestation, .)
det(revolution, the)
nsubj(way, revolution)
cop(way, be)
advmod(way, well)
case(way, under)
root(ROOT, way)
case(B.C., before)
nummod(B.C., 700)
nmod(way, B.C.)
punct(go, ,)
cc(go, and)
amod(sign, premonitory)
nsubj(go, sign)
conj(well, go)
advmod(go, back)
advmod(century, virtually)
case(century, across)
det(century, the)
obl(go, century)
punct(well, .)
det(era, the)
nsubj(face, era)
punct(face, ,)
advmod(face, however)
punct(face, ,)
cop(face, be)
compound(face, Janus)
punct(face, -)
root(ROOT, face)
punct(face, .)
mark(point, while)
amod(token, many)
nsubj(point, token)
advcl(stand, point)
advmod(point, forward)
punct(stand, ,)
det(achievement, the)
amod(achievement, main)
nsubj(stand, achievement)
conj(face, stand)
case(culmination, as)
det(culmination, a)
obl(stand, culmination)
case(pattern, of)
det(pattern, the)
amod(pattern, simple)
nmod(culmination, pattern)
case(age, of)
det(age, the)
amod(age, Dark)
nmod(pattern, age)
punct(face, .)
det(pottery, the)
amod(pottery, dominant)
nsubj(Geometric, pottery)
case(century, of)
det(century, the)
nmod(pottery, century)
cop(Geometric, be)
root(ROOT, Geometric)
punct(Geometric, ;)
punct(Geometric, ;)
amod(organization, political)
nsubj(revolve, organization)
parataxis(Geometric, revolve)
case(basileis, about)
det(basileis, the)
obl(revolve, basileis)
punct(Geometric, ;)
punct(Geometric, ;)
nsubj(begin, trade)
aux(begin, be)
advmod(begin, just)
parataxis(Geometric, begin)
mark(expand, to)
xcomp(begin, expand)
punct(begin, ;)
punct(Geometric, ;)
det(god, the)
nsubj(put, god)
nsubj(protect, who)
acl:relcl(god, protect)
det(countryside, the)
amod(countryside, Greek)
obj(protect, countryside)
aux(put, be)
advmod(put, only)
advmod(put, now)
parataxis(Geometric, put)
compound:prt(put, on)
nmod:poss(dress, they)
advmod(anthropomorphic, sharply)
amod(dress, anthropomorphic)
obj(put, dress)
punct(Geometric, .)
det(student, the)
amod(student, modern)
nsubj(likely, student)
punct(student, ,)
nsubj(know, who)
acl:relcl(student, know)
nsubj(be, what)
ccomp(know, be)
mark(come, to)
xcomp(be, come)
advmod(come, next)
punct(likely, ,)
cop(likely, be)
root(ROOT, likely)
mark(place, to)
xcomp(likely, place)
advmod(place, first)
det(factor, the)
obj(place, factor)
case(change, of)
nmod(factor, change)
nsubj(visible, which)
cop(visible, be)
acl:relcl(factor, visible)
case(century, in)
det(century, the)
amod(century, eighth)
obl(visible, century)
punct(likely, .)
advmod(man, not)
det(man, all)
nsubj(accept, man)
case(period, of)
det(period, the)
nmod(man, period)
aux(accept, would)
aux(accept, have)
root(ROOT, accept)
det(emphasis, this)
obj(accept, emphasis)
punct(accept, .)
amod(potter, many)
nsubj(clung, potter)
root(ROOT, clung)
case(past, to)
det(past, the)
obl(clung, past)
det(more, the)
advmod(determinedly, more)
advmod(clung, determinedly)
mark(confront, as)
nsubj:pass(confront, they)
aux:pass(confront, be)
advcl(clung, confront)
case(idea, with)
advmod(new, radically)
amod(idea, new)
obl(confront, idea)
punct(clung, ;)
punct(clung, ;)
det(poet, the)
nsubj(archaize, poet)
case(Iliad, of)
det(Iliad, the)
nmod(poet, Iliad)
advmod(archaize, deliberately)
parataxis(clung, archaize)
punct(clung, .)
mark(possible, although)
expl(possible, it)
cop(possible, be)
advmod(possible, not)
advcl(consider, possible)
mark(sunder, to)
csubj(possible, sunder)
xcomp(sunder, old)
cc(new, and)
conj(old, new)
case(era, in)
det(era, this)
obl(new, era)
punct(consider, ,)
nsubj(consider, I)
aux(consider, shall)
root(ROOT, consider)
case(chapter, in)
det(chapter, the)
amod(chapter, present)
obl(consider, chapter)
advmod(decade, primarily)
det(decade, the)
amod(decade, first)
appos(chapter, decade)
case(century, of)
det(century, the)
amod(century, eighth)
nmod(decade, century)
cc(interpret, and)
aux(interpret, shall)
conj(consider, interpret)
obj(interpret, they)
case(apogee, as)
det(apogee, a)
obl(interpret, apogee)
case(stage, of)
det(stage, the)
amod(stage, first)
nmod(apogee, stage)
case(civilization, of)
amod(civilization, Greek)
nmod(stage, civilization)
punct(consider, .)
case(principle, on)
det(principle, this)
obl(postpone, principle)
case(division, of)
nmod(principle, division)
nsubj(postpone, I)
aux(postpone, must)
root(ROOT, postpone)
det(evolution, the)
obj(postpone, evolution)
case(sculpture, of)
nmod(evolution, sculpture)
punct(architecture, ,)
conj(sculpture, architecture)
punct(society, ,)
conj(sculpture, society)
punct(politics, ,)
cc(politics, and)
conj(sculpture, politics)
punct(postpone, ;)
punct(postpone, ;)
case(development, for)
det(development, the)
obl(make, development)
case(area, in)
det(area, these)
nmod(development, area)
conj(postpone, make)
obj(make, sense)
advmod(connect, only)
mark(connect, if)
nsubj:pass(connect, they)
aux:pass(connect, be)
advcl(make, connect)
case(age, to)
det(age, the)
obl(connect, age)
case(revolution, of)
nmod(age, revolution)
nmod:npmod(revolution, itself)
punct(postpone, .)
det(contact, the)
amod(contact, grow)
nsubj(phase, contact)
case(aegean, between)
nmod(contact, aegean)
cc(Orient, and)
conj(aegean, Orient)
cop(phase, be)
advmod(phase, also)
det(phase, a)
root(ROOT, phase)
nsubj:pass(link, which)
aux(link, should)
aux:pass(link, be)
acl:relcl(phase, link)
advmod(link, primarily)
case(broaden, to)
det(broaden, the)
amod(broaden, remarkable)
obl(link, broaden)
case(culture, of)
amod(culture, Hellenic)
nmod(broaden, culture)
case(750, after)
nmod(broaden, 750)
punct(phase, .)
nsubj(able, we)
aux(able, shall)
advmod(able, not)
cop(able, be)
root(ROOT, able)
advmod(pass, entirely)
mark(pass, to)
xcomp(able, pass)
compound:prt(pass, over)
det(connection, these)
obj(pass, connection)
case(East, to)
det(East, the)
obl(pass, East)
mark(consider, as)
nsubj(consider, we)
advcl(pass, consider)
amod(pottery, Ripe)
amod(pottery, Geometric)
obj(consider, pottery)
punct(epic, ,)
det(epic, the)
conj(pottery, epic)
cc(myth, and)
det(myth, the)
conj(pottery, myth)
punct(evolution, ,)
cc(evolution, and)
det(evolution, the)
amod(evolution, religious)
conj(pottery, evolution)
case(Greece, of)
amod(Greece, early)
nmod(evolution, Greece)
punct(be, ;)
punct(be, ;)
det(point, the)
amod(point, important)
nsubj(be, point)
punct(be, ,)
advmod(be, however)
punct(be, ,)
parataxis(able, be)
mark(influence, that)
det(achievement, these)
amod(achievement, magnificent)
nsubj:pass(influence, achievement)
punct(achievement, ,)
case(those, unlike)
nmod(achievement, those)
case(decade, of)
amod(decade, later)
nmod(those, decade)
punct(influence, ,)
aux:pass(influence, be)
advmod(influence, only)
advmod(influence, incidentally)
ccomp(be, influence)
case(model, by)
amod(model, Oriental)
obl(influence, model)
punct(able, .)
det(antecedent, the)
nsubj(lie, antecedent)
case(vase, of)
compound(vase, Dipylon)
nmod(antecedent, vase)
cc(Iliad, and)
case(Iliad, of)
det(Iliad, the)
conj(vase, Iliad)
root(ROOT, lie)
case(past, in)
det(past, the)
compound(past, aegean)
obl(lie, past)
punct(lie, .)
compound(pottery, Dipylon)
nsubj:pass(call, pottery)
det(pottery, the)
nsubj:pass(call, pottery)
case(half, of)
det(half, the)
amod(half, first)
nmod(pottery, half)
case(century, of)
det(century, the)
amod(century, eighth)
nmod(half, century)
aux:pass(call, be)
advmod(call, commonly)
conj(lie, call)
compound(Geometric, Ripe)
xcomp(call, Geometric)
punct(call, .)
det(vase, the)
amod(vase, severe)
advmod(harmonious, yet)
amod(vase, harmonious)
nsubj(display, vase)
case(year, of)
det(year, the)
amod(year, previous)
nummod(year, fifty)
nmod(vase, year)
punct(vase, ,)
det(style, the)
amod(style, strong)
amod(style, Geometric)
conj(vase, style)
case(century, of)
det(century, the)
amod(century, late)
amod(century, ninth)
nmod(style, century)
punct(display, ,)
root(ROOT, display)
case(firm, as)
obl(display, firm)
det(mastery, a)
obj(display, mastery)
case(principle, of)
det(principle, the)
nmod(mastery, principle)
amod(pottery, underlying)
amod(pottery, Geometric)
nmod(principle, pottery)
punct(mastery, ;)
punct(display, ;)
cc(ready, but)
nsubj(ready, artist)
advmod(ready, now)
cop(ready, be)
conj(display, ready)
mark(refine, to)
xcomp(ready, refine)
cc(elaborate, and)
conj(refine, elaborate)
nmod:poss(inheritance, they)
obj(refine, inheritance)
punct(display, .)
det(vase, the)
root(ROOT, vase)
nsubj(result, which)
acl:relcl(vase, result)
xcomp(result, have)
amod(shape, different)
obj(have, shape)
punct(decoration, ,)
advmod(more, far)
advmod(complex, more)
amod(decoration, complex)
conj(shape, decoration)
punct(sense, ,)
cc(sense, and)
det(sense, a)
amod(sense, larger)
conj(shape, sense)
case(style, of)
nmod(sense, style)
punct(vase, .)
case(aspect, beyond)
det(aspect, the)
amod(aspect, aesthetic)
cc(technical, and)
conj(aesthetic, technical)
obl(consider, aspect)
case(expansion, of)
det(expansion, this)
nmod(aspect, expansion)
nsubj(consider, we)
aux(consider, must)
root(ROOT, consider)
det(change, the)
obj(consider, change)
case(style, in)
compound(style, pottery)
nmod(change, style)
case(line, on)
amod(line, broader)
obl(consider, line)
punct(consider, .)
case(century, in)
amod(century, earlier)
obl(have, century)
nsubj(have, man)
aux(have, have)
root(ROOT, have)
obj(have, enough)
mark(do, to)
acl(enough, do)
mark(rebuild, in)
advcl(do, rebuild)
det(sense, a)
amod(sense, fundamental)
obj(rebuild, sense)
case(order, of)
nmod(sense, order)
case(chaos, after)
obl(rebuild, chaos)
punct(have, .)
nsubj(have, they)
aux(have, have)
root(ROOT, have)
mark(work, to)
xcomp(have, work)
case(foundation, on)
advmod(simple, very)
amod(foundation, simple)
obl(work, foundation)
cc(dare, and)
aux(dare, have)
advmod(dare, not)
conj(have, dare)
mark(give, to)
xcomp(dare, give)
obj(give, rein)
case(impulse, to)
obl(give, impulse)
punct(have, .)
det(potter, the)
nsubj(eschew, potter)
punct(potter, ,)
case(particular, in)
obl(eschew, particular)
punct(eschew, ,)
aux(eschew, have)
advmod(eschew, virtually)
root(ROOT, eschew)
compound(draw, freehand)
obj(eschew, draw)
punct(motif, ,)
amod(motif, elaborate)
conj(draw, motif)
punct(line, ,)
cc(line, and)
det(line, the)
compound(line, curve)
conj(draw, line)
case(nature, of)
nmod(line, nature)
punct(eschew, ,)
mark(express, while)
advmod(express, yet)
advcl(eschew, express)
det(belief, a)
obj(express, belief)
mark(be, that)
expl(be, there)
acl(belief, be)
nsubj(be, order)
case(universe, in)
det(universe, the)
obl(be, universe)
punct(eschew, .)
case(vase, in)
nmod:poss(vase, they)
obl(embody, vase)
aux:pass(embody, be)
root(ROOT, embody)
det(characteristic, the)
amod(characteristic, basic)
amod(characteristic, aesthetic)
cc(logical, and)
conj(aesthetic, logical)
obj(embody, characteristic)
case(civilization, of)
amod(civilization, Greek)
nmod(characteristic, civilization)
punct(characteristic, ,)
case(first, at)
advmod(hesitantly, first)
advmod(work, hesitantly)
case(work, in)
compound(work, Protogeometric)
nmod(characteristic, work)
punct(stage, ,)
cc(stage, and)
advmod(confidently, then)
advmod(confidently, more)
advmod(stage, confidently)
case(stage, in)
det(stage, the)
amod(stage, initial)
conj(work, stage)
case(style, of)
det(style, the)
amod(style, Geometric)
nmod(stage, style)
punct(embody, .)
case(security, by)
nummod(security, 800)
amod(security, social)
cc(cultural, and)
conj(social, cultural)
obl(achieve, security)
aux(achieve, have)
aux:pass(achieve, be)
root(ROOT, achieve)
punct(achieve, ,)
case(least, at)
nmod(plane, least)
case(plane, on)
det(plane, a)
amod(plane, simple)
obl(achieve, plane)
punct(achieve, ;)
punct(achieve, ;)
nsubj(time, it)
cop(time, be)
parataxis(achieve, time)
mark(take, to)
acl(time, take)
amod(step, bigger)
obj(take, step)
punct(take, ,)
mark(venture, to)
advcl(take, venture)
case(experiment, on)
obl(venture, experiment)
punct(achieve, .)
amod(potter, Ripe)
amod(potter, Geometric)
nsubj(continue, potter)
root(ROOT, continue)
mark(employ, to)
xcomp(continue, employ)
det(syntax, the)
amod(syntax, old)
obj(employ, syntax)
case(ornament, of)
nmod(syntax, ornament)
cc(shape, and)
conj(ornament, shape)
cc(make, and)
conj(continue, make)
obj(make, use)
case(range, of)
det(range, the)
advmod(define, well)
punct(define, -)
amod(range, define)
advmod(limit, though)
amod(range, limit)
nmod(use, range)
case(motif, of)
nmod(range, motif)
obj(inherite, which)
nsubj(inherite, they)
aux(inherite, have)
acl:relcl(motif, inherite)
punct(continue, .)
case(respects, in)
det(respects, these)
obl(represent, respects)
det(vase, the)
nsubj(represent, vase)
case(century, of)
det(century, the)
amod(century, early)
amod(century, eighth)
nmod(vase, century)
root(ROOT, represent)
det(culmination, a)
obj(represent, culmination)
case(line, of)
amod(line, earlier)
nmod(culmination, line)
case(progress, of)
nmod(line, progress)
punct(represent, .)
case(lore, to)
det(lore, the)
amod(lore, ancestral)
obl(add, lore)
punct(add, ,)
advmod(add, however)
punct(add, ,)
amod(material, new)
nsubj:pass(add, material)
aux:pass(add, be)
root(ROOT, add)
punct(add, .)
nsubj(leave, Painters)
parataxis(add, leave)
obj(leave, less)
cc(less, and)
conj(less, less)
case(vase, of)
det(vase, a)
obl(less, vase)
case(color, in)
det(color, a)
amod(color, plain)
amod(color, dark)
obl(leave, color)
punct(leave, ;)
punct(leave, ;)
advmod(divide, instead)
nsubj(divide, they)
parataxis(leave, divide)
det(surface, the)
obj(divide, surface)
case(band, into)
amod(band, many)
obl(divide, band)
cc(cover, or)
conj(divide, cover)
obj(cover, it)
case(pattern, by)
det(pattern, all)
punct(all, -)
case(pattern, over)
obl(cover, pattern)
case(draw, into)
det(draw, which)
compound(draw, freehand)
nsubj(begin, draw)
advcl(cover, begin)
mark(creep, to)
xcomp(begin, creep)
punct(add, .)
amod(line, Wavy)
root(ROOT, line)
punct(line, ,)
compound(pattern, feather)
punct(feather, -)
case(pattern, like)
nmod(line, pattern)
punct(rosette, ,)
conj(line, rosette)
case(nature, of)
advmod(floral, indefinitely)
amod(nature, floral)
nmod(rosette, nature)
punct(bird, ,)
list(line, bird)
cc:preconj(singly, either)
advmod(bird, singly)
cc(row, or)
case(row, in)
amod(row, stylize)
conj(singly, row)
punct(animal, ,)
conj(line, animal)
case(band, in)
amod(band, solemn)
compound(band, frieze)
nmod(animal, band)
punct(see, ()
parataxis(line, see)
obj(see, plate)
nummod(plate, 11)
case(12, -)
nmod(11, 12)
punct(see, ))
punct(turn, --)
det:predet(these, all)
nsubj(turn, these)
parataxis(line, turn)
compound:prt(turn, up)
case(fabric, in)
det(fabric, the)
advmod(develop, more)
amod(fabric, develop)
obl(turn, fabric)
case(sign, as)
amod(sign, preliminary)
nmod(fabric, sign)
obj(broaden, that)
det(potter, the)
nsubj(broaden, potter)
aux(broaden, be)
acl:relcl(sign, broaden)
nmod:poss(gaze, they)
obj(broaden, gaze)
punct(line, .)
det(row, the)
nsubj(suggest, row)
case(animal, of)
nmod(row, animal)
cc(bird, and)
conj(animal, bird)
punct(suggest, ,)
case(particular, in)
obl(suggest, particular)
punct(suggest, ,)
root(ROOT, suggest)
obj(suggest, awareness)
case(frieze, of)
amod(frieze, Oriental)
compound(frieze, animal)
nmod(awareness, frieze)
punct(awareness, ,)
acl(awareness, transmit)
advmod(bowl, perhaps)
case(bowl, via)
amod(bowl, syrian)
compound(bowl, silver)
obl(transmit, bowl)
cc(textile, and)
conj(bowl, textile)
punct(Greek, ,)
cc(Greek, but)
det(form, the)
amod(form, specific)
nsubj(Greek, form)
case(row, of)
det(row, these)
nmod(form, row)
case(vase, on)
amod(vase, local)
nmod(row, vase)
cc(product, and)
compound(product, metal)
conj(vase, product)
cop(Greek, be)
advmod(Greek, nonetheless)
conj(suggest, Greek)
punct(Greek, .)
mark(determine, though)
det(spread, the)
nsubj:pass(determine, spread)
case(type, of)
det(type, this)
nmod(spread, type)
case(decoration, of)
nmod(type, decoration)
case(aegean, in)
det(aegean, the)
nmod(decoration, aegean)
aux(determine, have)
advmod(determine, not)
advmod(determine, yet)
aux:pass(determine, be)
advmod(determine, precisely)
advcl(seem, determine)
punct(seem, ,)
nsubj(seem, it)
conj(Greek, seem)
mark(appear, to)
xcomp(seem, appear)
advmod(appear, first)
case(Cyclades, in)
det(Cyclades, the)
obl(appear, Cyclades)
punct(Cyclades, ,)
nsubj(exporter, which)
cop(exporter, be)
case(exporter, among)
det(exporter, the)
amod(exporter, lead)
acl:relcl(Cyclades, exporter)
case(pottery, of)
nmod(exporter, pottery)
case(century, throughout)
det(century, the)
nmod(pottery, century)
punct(suggest, .)
mark(grow, as)
det(material, the)
nsubj(grow, material)
case(command, at)
det(command, the)
nmod(material, command)
case(potter, of)
det(potter, the)
nmod(command, potter)
advcl(become, grow)
cc(become, and)
det(volume, the)
conj(grow, volume)
case(production, of)
nmod:poss(production, they)
nmod(volume, production)
acl(volume, increase)
punct(become, ,)
det(variation, the)
amod(variation, local)
nsubj(become, variation)
case(style, within)
det(style, a)
amod(style, common)
nmod(variation, style)
root(ROOT, become)
advmod(evident, more)
xcomp(become, evident)
punct(become, .)
compound(12, plate)
nsubj(illustrate, 12)
root(ROOT, illustrate)
nummod(example, four)
obj(illustrate, example)
punct(example, ,)
nsubj(Ripe, which)
cop(Ripe, be)
acl:relcl(example, Ripe)
cc(work, or)
amod(work, late)
amod(work, Geometric)
acl:relcl(example, work)
case(spirit, of)
amod(spirit, common)
nmod(work, spirit)
cc(school, but)
case(school, of)
amod(school, different)
conj(spirit, school)
punct(illustrate, .)
nsubj(discover, Cook)
aux(discover, have)
root(ROOT, discover)
det(beef, a)
obj(discover, beef)
case(possession, in)
nmod:poss(possession, he)
nmod(beef, possession)
det(day, a)
amod(day, few)
obl:npmod(earlier, day)
advmod(discover, earlier)
cc(arrest, and)
punct(arrest, ,)
mark(show, when)
nsubj(show, he)
aux(show, could)
advmod(show, not)
advcl(release, show)
det(hide, the)
obj(show, hide)
punct(arrest, ,)
conj(show, arrest)
obj(arrest, he)
punct(arrest, .)
advcl(arrest, think)
det(evidence, the)
obj(think, evidence)
amod(evidence, insufficient)
mark(get, to)
advcl(insufficient, get)
det(conviction, a)
obj(get, conviction)
punct(release, ,)
nsubj(release, he)
advmod(release, later)
parataxis(discover, release)
obj(release, he)
punct(discover, .)
advmod(suffer, even)
mark(suffer, while)
advcl(swore, suffer)
det(trip, the)
obj(suffer, trip)
case(home, to)
nmod:poss(home, he)
obl(suffer, home)
punct(swore, ,)
nsubj(swore, Cook)
advcl(ride, swore)
case(Moore, to)
obl(swore, Moore)
cc(Lane, and)
conj(Moore, Lane)
mark(kill, that)
nsubj(kill, he)
aux(kill, would)
ccomp(swore, kill)
det(indian, the)
amod(week, indian)
punct(week, .)
nummod(week, three)
obl:npmod(later, week)
advmod(kill, later)
punct(kill, ,)
case(recovery, follow)
nmod:poss(recovery, he)
obl(kill, recovery)
punct(recovery, ,)
amod(recovery, armed)
case(writ, with)
det(writ, a)
obl(armed, writ)
acl(writ, issue)
case(justice, by)
det(justice, the)
compound(justice, Catskill)
obl(issue, justice)
case(affidavit, on)
obl(issue, affidavit)
acl(affidavit, prepare)
case(attorney, by)
det(attorney, the)
compound(attorney, district)
obl(prepare, attorney)
punct(ride, ,)
nsubj(ride, Cook)
cc(Russell, and)
conj(Cook, Russell)
root(ROOT, ride)
mark(arrest, to)
xcomp(ride, arrest)
obj(arrest, Martinez)
punct(ride, .)
advcl(find, arrive)
case(daybreak, at)
obl(arrive, daybreak)
punct(find, ,)
nsubj(find, they)
root(ROOT, find)
obj(find, Julio)
case(corral, in)
nmod:poss(corral, he)
obl(find, corral)
cc(demand, and)
conj(find, demand)
mark(surrender, that)
nsubj(surrender, he)
ccomp(demand, surrender)
punct(find, .)
advmod(whirl, instead)
punct(whirl, ,)
nsubj(whirl, he)
ccomp(report, whirl)
cc(run, and)
conj(whirl, run)
case(house, to)
nmod:poss(house, he)
obl(run, house)
case(gun, for)
det(gun, a)
obl(run, gun)
punct(whirl, ,)
advcl(run, force)
obj(force, they)
mark(kill, to)
xcomp(force, kill)
obj(kill, he)
punct(report, ,)
nsubj(report, Cook)
root(ROOT, report)
punct(report, .)
cc:preconj(Cook, both)
nmod:poss(life, Cook)
case(Cook, 's)
cc(Russell, and)
nmod:poss(life, Russell)
case(Russell, 's)
nsubj:pass(threaten, life)
aux:pass(threaten, be)
root(ROOT, threaten)
case(Mexicans, by)
det(Mexicans, the)
obl(threaten, Mexicans)
case(killing, follow)
det(killing, the)
obl(threaten, killing)
punct(feel, ,)
cc(feel, but)
det(officer, the)
compound(officer, company)
nsubj(feel, officer)
conj(threaten, feel)
mark(serve, that)
case(end, in)
det(end, the)
obl(serve, end)
punct(serve, ,)
nsubj(serve, it)
aux(serve, would)
ccomp(feel, serve)
mark(quiet, to)
xcomp(serve, quiet)
obj(quiet, they)
case(emotion, despite)
nmod:poss(emotion, they)
amod(emotion, immediate)
obl(quiet, emotion)
punct(manager, .)
amod(manager, general)
obj(quiet, manager)
nsubj(suggest, pel)
advmod(suggest, even)
root(ROOT, suggest)
mark(wise, that)
expl(wise, it)
aux(wise, might)
cop(wise, be)
ccomp(suggest, wise)
mark(keep, to)
csubj(wise, keep)
det(Mexicans, the)
obj(keep, Mexicans)
case(suspense, in)
obl(keep, suspense)
cc(accept, rather)
fixed(rather, than)
conj(keep, accept)
nmod:poss(offer, they)
obj(accept, offer)
mark(sell, to)
advcl(accept, sell)
compound:prt(sell, out)
cc(move, and)
conj(sell, move)
advmod(move, away)
punct(try, ,)
cc(try, and)
conj(sell, try)
mark(have, to)
xcomp(try, have)
det(few, a)
amod(punish, few)
xcomp(have, punish)
punct(suggest, .)
case(February, on)
obl(send, February)
nummod(February, 17)
punct(send, ,)
nsubj:pass(send, Russell)
cc(Cook, and)
conj(Russell, Cook)
aux:pass(send, be)
root(ROOT, send)
case(community, to)
det(community, the)
compound(community, Pena)
flat(Pena, flor)
obl(send, community)
case(Vermejo, on)
det(Vermejo, the)
nmod(community, Vermejo)
mark(see, to)
advcl(send, see)
mark(rent, about)
advcl(see, rent)
compound:prt(rent, out)
obj(rent, ranch)
det(company, the)
nsubj(purchase, company)
aux(purchase, have)
acl:relcl(ranch, purchase)
punct(rent, .)
mark(talk, while)
advcl(purchase, talk)
case(Julian, with)
obl(talk, Julian)
flat(Julian, M.)
flat(Julian, Beall)
punct(Francisco, ,)
conj(Julian, Francisco)
flat(Francisco, Archuleta)
cc(Juan, and)
conj(Julian, Juan)
flat(Juan, Marcus)
acl:relcl(Julian, appear)
punct(appear, ,)
cc:preconj(armed, both)
advmod(armed, heavily)
xcomp(appear, armed)
punct(ride, ,)
cc(watch, and)
mark(watch, after)
advcl(ride, watch)
det(house, the)
obj(watch, house)
case(while, for)
det(while, a)
obl(watch, while)
punct(ride, ,)
conj(appear, ride)
advmod(ride, away)
punct(send, .)
nsubj(sundown, it)
cop(sundown, be)
advmod(sundown, nearly)
root(ROOT, sundown)
mark(finish, before)
nsubj(finish, they)
advcl(sundown, finish)
det(business, the)
obj(finish, business)
case(Beall, with)
obl(finish, Beall)
cc(begin, and)
conj(finish, begin)
xcomp(begin, ride)
compound:prt(ride, down)
det(stream, the)
obj(ride, stream)
punct(sundown, .)
nsubj(travel, they)
aux(travel, have)
root(ROOT, travel)
advmod(distance, only)
det(distance, a)
amod(distance, short)
obj(travel, distance)
mark(spot, when)
nsubj(spot, they)
advcl(travel, spot)
nummod(Mexicans, five)
obj(spot, Mexicans)
advcl(spot, ride)
case(trail, along)
det(trail, a)
compound(trail, horse)
punct(trail, -)
obl(ride, trail)
case(stream, across)
det(stream, the)
obl(ride, stream)
advmod(they, just)
case(they, ahead)
case(they, of)
obl(ride, they)
punct(travel, .)
advcl(decide, suspect)
det(ambush, a)
obj(suspect, ambush)
punct(decide, ,)
det(deputy, the)
nummod(deputy, two)
nsubj(decide, deputy)
root(ROOT, decide)
mark(ride, to)
xcomp(decide, ride)
compound:prt(ride, up)
det(canyon, a)
compound(canyon, side)
obj(ride, canyon)
advcl(ride, take)
det(cut, a)
amod(cut, short)
obj(take, cut)
case(Catskill, into)
obl(take, Catskill)
punct(decide, .)
mark(spend, after)
advcl(head, spend)
nummod(night, two)
obj(spend, night)
punct(Wednesday, ()
appos(night, Wednesday)
cc(Thursday, and)
conj(Wednesday, Thursday)
punct(Wednesday, ))
case(Catskill, in)
nmod(Wednesday, Catskill)
punct(head, ,)
det(deputy, the)
nsubj(head, deputy)
advmod(head, again)
root(ROOT, head)
case(Vermejo, for)
det(Vermejo, the)
obl(head, Vermejo)
mark(finish, to)
advcl(head, finish)
nmod:poss(business, they)
obj(finish, business)
punct(head, .)
nsubj(stay, they)
root(ROOT, stay)
case(rancher, with)
det(rancher, a)
obl(stay, rancher)
compound(night, Friday)
obl:tmod(stay, night)
cc(pass, and)
case(o'clock, by)
nummod(o'clock, eleven)
obl(pass, o'clock)
compound(morning, Saturday)
obl:tmod(pass, morning)
conj(stay, pass)
det(ranch, the)
amod(ranch, old)
compound(ranch, Garnett)
flat(Garnett, Lee)
obj(pass, ranch)
punct(stay, .)
det:predet(mile, half)
det(mile, a)
nsubj(ranch, mile)
advmod(mile, below)
case(mouth, at)
det(mouth, the)
nmod(mile, mouth)
case(Canyon, of)
nmod:poss(Canyon, Salyer)
case(Salyer, 's)
nmod(mouth, Canyon)
cop(ranch, be)
det(ranch, a)
amod(ranch, old)
root(ROOT, ranch)
obj(purchase, that)
det(company, the)
nsubj(purchase, company)
aux(purchase, have)
acl:relcl(ranch, purchase)
case(A., from)
obl(purchase, A.)
flat(A., J.)
flat(A., armstrong)
punct(A., ,)
acl(A., occupy)
case(mexican, by)
det(mexican, a)
obl(occupy, mexican)
punct(wife, ,)
nmod:poss(wife, he)
conj(mexican, wife)
punct(trapper, ,)
cc(trapper, and)
det(trapper, a)
amod(trapper, old)
conj(mexican, trapper)
punct(ranch, .)
expl(be, there)
root(ROOT, be)
nummod(house, three)
nsubj(be, house)
case(Canyon, in)
nmod:poss(Canyon, Salyer)
case(Salyer, 's)
nmod(house, Canyon)
advmod(foot, just)
case(foot, at)
det(foot, the)
obl(be, foot)
case(bluff, of)
det(bluff, a)
amod(bluff, low)
nmod(foot, bluff)
punct(bluff, ,)
det(wind, the)
compound(wind, road)
appos(bluff, wind)
case(top, along)
det(top, the)
nmod(wind, top)
punct(enter, ,)
advcl(pass, enter)
advmod(enter, above)
punct(pass, ,)
cc(pass, and)
advmod(pass, then)
conj(be, pass)
compound:prt(pass, down)
case(front, in)
obl(pass, front)
case(house, of)
det(house, the)
nmod(front, house)
punct(thence, ,)
acl(front, thence)
case(Vermejo, to)
det(Vermejo, the)
obl(thence, Vermejo)
punct(thence, .)
case(west, to)
det(west, the)
obl(bluff, west)
case(road, of)
det(road, this)
nmod(west, road)
cop(bluff, be)
det(bluff, another)
amod(bluff, low)
parataxis(be, bluff)
punct(high, ,)
nummod(foot, forty)
cc(fifty, or)
conj(forty, fifty)
obl:npmod(high, foot)
conj(bluff, high)
punct(high, ,)
advcl(high, cover)
case(oak, with)
amod(oak, scrub)
obl(cover, oak)
cc(brush, and)
amod(brush, other)
conj(oak, brush)
punct(be, .)
mark(ride, as)
nsubj(ride, they)
aux(ride, be)
advcl(crash, ride)
case(road, along)
det(road, this)
compound(road, wind)
obl(ride, road)
case(bench, on)
det(bench, the)
obl(ride, bench)
case(land, of)
nmod(bench, land)
case(bluff, between)
det(bluff, the)
nummod(bluff, two)
nmod(bench, bluff)
punct(crash, ,)
det(volley, a)
nsubj(crash, volley)
case(fire, of)
compound(fire, rifle)
nmod(volley, fire)
advmod(crash, suddenly)
root(ROOT, crash)
case(officer, around)
det(officer, the)
nummod(officer, two)
obl(crash, officer)
punct(crash, .)
advmod(bullet, not)
det(bullet, a)
root(ROOT, bullet)
acl(bullet, touch)
obj(touch, Cook)
nsubj(nearer, who)
cop(nearer, be)
acl:relcl(Cook, nearer)
det(ambush, the)
obj(nearer, ambush)
punct(hit, ,)
cc(hit, but)
nsubj(hit, one)
conj(touch, hit)
obj(hit, Russell)
case(leg, in)
det(leg, the)
obl(hit, leg)
cc(break, and)
nsubj(break, another)
conj(hit, break)
nmod:poss(arm, he)
obj(break, arm)
punct(break, ,)
advcl(break, pass)
compound:prt(pass, on)
case(body, through)
nmod:poss(body, he)
obl(pass, body)
punct(bullet, .)
case(report, with)
det(report, the)
amod(report, first)
obl(wheel, report)
punct(wheel, ,)
nmod:poss(horse, Russell)
case(Russell, 's)
nsubj(wheel, horse)
root(ROOT, wheel)
case(right, to)
det(right, the)
obl(wheel, right)
cc(run, and)
conj(wheel, run)
case(building, towards)
det(building, the)
obl(run, building)
mark(follow, while)
nsubj(follow, Cook)
punct(Cook, ,)
advcl(run, follow)
case(hail, by)
det(hail, a)
obl(follow, hail)
case(bullet, of)
nmod(hail, bullet)
punct(race, ,)
conj(follow, race)
case(arroyo, towards)
det(arroyo, the)
obl(race, arroyo)
case(Canyon, of)
nmod:poss(Canyon, Salyer)
case(Salyer, 's)
nmod(arroyo, Canyon)
advmod(front, immediately)
case(front, in)
obl(race, front)
case(he, of)
nmod(front, he)
punct(reach, ,)
advmod(reach, just)
acl(front, reach)
obj(reach, it)
mark(fall, as)
nmod:poss(horse, he)
nsubj(fall, horse)
advcl(reach, fall)
punct(grab, .)
advcl(fall, grab)
nmod:poss(Winchester, he)
obj(grab, Winchester)
case(sheath, from)
nmod:poss(sheath, its)
obl(grab, sheath)
punct(prepare, ,)
nsubj(prepare, Cook)
parataxis(grab, prepare)
mark(fight, to)
xcomp(prepare, fight)
obl(fight, from)
case(bank, behind)
det(bank, the)
compound(bank, arroyo)
obl(fight, bank)
punct(thick, .)
nsubj(thick, Bullets)
cop(thick, be)
advmod(thick, so)
parataxis(prepare, thick)
punct(thick, ,)
advcl(thick, throw)
obj(throw, sand)
case(face, in)
nmod:poss(face, he)
obl(throw, face)
punct(thick, ,)
mark(find, that)
nsubj(find, he)
parataxis(thick, find)
obj(find, it)
xcomp(find, difficult)
mark(return, to)
advcl(difficult, return)
det(fire, the)
obj(return, fire)
punct(wheel, .)
advcl(assume, notice)
nmod:poss(horse, Russell)
case(Russell, 's)
obj(notice, horse)
case(front, in)
obl(notice, front)
case(building, of)
det(building, the)
amod(building, long)
compound(building, log)
nmod(front, building)
punct(assume, ,)
nsubj(assume, he)
root(ROOT, assume)
nmod:poss(friend, he)
nsubj(slip, friend)
aux(slip, have)
ccomp(assume, slip)
advmod(slip, inside)
cc(able, and)
aux(able, would)
cop(able, be)
conj(slip, able)
mark(put, to)
xcomp(able, put)
compound:prt(put, up)
det(fight, a)
amod(fight, good)
obj(put, fight)
punct(begin, ,)
advmod(begin, so)
nsubj(begin, he)
conj(assume, begin)
xcomp(begin, work)
nmod:poss(way, he)
obj(work, way)
case(ditch, down)
det(ditch, the)
obl(work, ditch)
mark(join, to)
advcl(work, join)
obj(join, he)
punct(assume, .)
case(place, at)
det(place, a)
advmod(shallow, very)
amod(place, shallow)
obl(rush, place)
punct(rush, ,)
nummod(Mexicans, two)
nsubj(rush, Mexicans)
root(ROOT, rush)
case(open, into)
det(open, the)
obl(rush, open)
case(shot, for)
det(shot, a)
obl(rush, shot)
punct(rush, .)
advcl(fell, drop)
case(knee, to)
nummod(knee, one)
obl(drop, knee)
punct(fell, ,)
nsubj(fell, Cook)
root(ROOT, fell)
obj(fell, one)
punct(struggle, ,)
cc(struggle, and)
det(other, the)
nsubj(struggle, other)
conj(fell, struggle)
compound:prt(struggle, off)
case(comrade, with)
nmod:poss(comrade, he)
obl(struggle, comrade)
punct(struggle, ,)
advcl(struggle, send)
det(fire, no)
amod(fire, further)
obj(send, fire)
case(direction, in)
nmod:poss(direction, he)
obl(send, direction)
punct(fell, .)
advmod(leave, just)
mark(leave, before)
advcl(hear, leave)
det(arroyo, the)
obj(leave, arroyo)
advmod(conceal, where)
nsubj:pass(conceal, he)
aux:pass(conceal, be)
advmod(conceal, partially)
acl:relcl(arroyo, conceal)
punct(hear, ,)
nsubj(hear, he)
aux(hear, do)
root(ROOT, hear)
obj(hear, shot)
advmod(hear, down)
case(house, at)
det(house, the)
obl(hear, house)
punct(hear, .)
nsubj(reach, Russell)
aux(reach, have)
root(ROOT, reach)
det(house, the)
obj(reach, house)
mark(surmise, as)
nsubj(surmise, Cook)
advcl(reach, surmise)
punct(dismount, ,)
conj(surmise, dismount)
punct(fall, ,)
cc(fall, but)
advmod(open, just)
mark(open, as)
det(trapper, the)
amod(trapper, old)
nsubj(open, trapper)
advcl(fall, open)
det(door, the)
obj(open, door)
mark(receive, to)
advcl(open, receive)
obj(receive, he)
punct(fall, ,)
nsubj(fall, he)
conj(reach, fall)
case(arm, into)
det(trapper, the)
nmod:poss(arm, trapper)
case(trapper, 's)
obl(fall, arm)
punct(fall, --)
advmod(fall, dead)
punct(reach, . )
det(bullet, a)
nsubj(pass, bullet)
acl(bullet, fire)
case(one, by)
obl(fire, one)
case(Mexicans, of)
det(Mexicans, the)
nmod(one, Mexicans)
acl(Mexicans, hide)
case(house, in)
det(house, a)
amod(house, little)
compound(house, chicken)
obl(hide, house)
aux(pass, have)
root(ROOT, pass)
case(head, through)
nmod:poss(head, he)
obl(pass, head)
punct(pass, ,)
advcl(pass, tear)
det(square, a)
obj(tear, hole)
nummod(inch, two)
punct(inch, -)
compound(square, inch)
obj(tear, square)
case(side, on)
det(side, the)
amod(side, outgoing)
nmod(square, side)
punct(tear, .)
conj(tear, find)
obj(find, he)
xcomp(find, dead)
punct(catch, ,)
nsubj(catch, Cook)
conj(find, catch)
nmod:poss(horse, Russell)
case(Russell, 's)
obj(catch, horse)
cc(ride, and)
conj(catch, ride)
case(house, to)
det(foreman, the)
compound(foreman, cattle)
nmod:poss(house, foreman)
case(foreman, 's)
obl(ride, house)
mark(report, to)
advcl(ride, report)
det(incident, the)
obj(report, incident)
cc(request, and)
conj(report, request)
obj(request, bloodhound)
mark(trail, to)
advcl(request, trail)
det(assassin, the)
obj(trail, assassin)
punct(pass, .)
case(daylight, before)
compound(morning, daylight)
compound(morning, Sunday)
obl(follow, morning)
punct(follow, ,)
det(posse, a)
nsubj(follow, posse)
case(man, of)
compound(three, twenty)
punct(three, -)
nummod(man, three)
nmod(posse, man)
case(leadership, under)
det(leadership, the)
nmod(man, leadership)
case(Sheriff, of)
compound(Sheriff, deputy)
nmod(leadership, Sheriff)
flat(Sheriff, Frank)
flat(Sheriff, MacPherson)
case(Catskill, of)
nmod(Sheriff, Catskill)
root(ROOT, follow)
det(trail, the)
obj(follow, trail)
case(house, to)
det(house, the)
obl(follow, house)
case(Francisco, of)
nmod(house, Francisco)
flat(Francisco, chave)
punct(Francisco, ,)
advmod(gather, where)
nummod(Mexicans, 100)
case(150, to)
nmod(100, 150)
nsubj(gather, Mexicans)
aux(gather, have)
acl:relcl(house, gather)
punct(approach, .)
nsubj(approach, MacPherson)
advmod(approach, boldly)
parataxis(follow, approach)
det(house, the)
amod(house, fortify)
compound(house, adobe)
obj(approach, house)
cc(demand, and)
conj(approach, demand)
obj(demand, entrance)
punct(follow, .)
det(man, the)
nsubj(inform, man)
advmod(man, inside)
root(ROOT, inform)
obj(inform, he)
mark(have, that)
nsubj(have, they)
ccomp(inform, have)
det(man, some)
amod(man, wounded)
obj(have, man)
case(they, among)
nmod(man, they)
cc(allow, but)
nsubj:pass(allow, he)
aux(allow, would)
advmod(allow, not)
aux:pass(allow, be)
conj(inform, allow)
mark(see, to)
xcomp(allow, see)
obj(see, they)
advmod(offer, even)
mark(offer, though)
nsubj(offer, he)
advcl(see, offer)
amod(aid, medical)
obj(offer, aid)
punct(inform, .)
det(officer, the)
nsubj(demand, officer)
root(ROOT, demand)
det(name, the)
obj(demand, name)
case(man, of)
det(man, the)
amod(man, injure)
nmod(name, man)
punct(demand, ;)
punct(demand, ;)
det(Mexicans, the)
nsubj(refuse, Mexicans)
advmod(only, not)
advmod(refuse, only)
parataxis(demand, refuse)
mark(give, to)
xcomp(refuse, give)
obj(give, they)
punct(tell, ,)
cc(tell, but)
conj(demand, tell)
det(possemen, the)
obj(tell, possemen)
mark(want, if)
nsubj(want, they)
advcl(tell, want)
det(fight, a)
obj(want, fight)
nsubj(have, they)
aux(have, could)
ccomp(tell, have)
obj(have, it)
punct(demand, .)
mark(underrate, since)
det(strength, the)
nsubj(underrate, strength)
case(Mexicans, of)
det(Mexicans, the)
nmod(strength, Mexicans)
aux(underrate, have)
cop(underrate, be)
advcl(collect, underrate)
punct(collect, ,)
advmod(small, too)
advmod(collect, small)
det(posse, a)
nsubj:pass(collect, posse)
aux(collect, have)
aux:pass(collect, be)
root(ROOT, collect)
punct(decide, ,)
cc(decide, and)
mark(provide, since)
det(deputy, the)
nsubj:pass(provide, deputy)
aux(provide, have)
advmod(provide, not)
aux:pass(provide, be)
conj(collect, provide)
case(warrant, with)
compound(warrant, search)
obl(provide, warrant)
punct(decide, ,)
nsubj(decide, MacPherson)
cc(man, and)
nmod:poss(man, he)
conj(MacPherson, man)
conj(collect, decide)
nsubj(wiser, it)
cop(wiser, be)
advmod(wiser, much)
ccomp(decide, wiser)
mark(withdraw, to)
advcl(wiser, withdraw)
punct(decide, .)
det(posse, the)
nmod:poss(retreat, posse)
case(posse, 's)
nsubj(encourage, retreat)
root(ROOT, encourage)
det(Mexicans, the)
obj(encourage, Mexicans)
mark(overbearing, to)
cop(overbearing, be)
xcomp(encourage, overbearing)
cc(impudent, and)
conj(overbearing, impudent)
punct(encourage, .)
case(week, during)
det(week, the)
amod(week, follow)
obl(burn, week)
punct(burn, ,)
nummod(ton, six)
nsubj:pass(burn, ton)
case(hay, of)
nmod(ton, hay)
acl(ton, belong)
case(rancher, to)
nummod(rancher, one)
obl(belong, rancher)
aux:pass(burn, be)
parataxis(encourage, burn)
punct(burn, ;)
punct(burn, ;)
det(building, some)
nsubj:pass(burn, building)
punct(tool, ,)
compound(tool, farm)
conj(building, tool)
punct(horse, ,)
nummod(horse, two)
conj(building, horse)
punct(plow, ,)
conj(building, plow)
punct(hay, ,)
cc(hay, and)
conj(building, hay)
acl(hay, own)
case(Bonito, by)
obl(own, Bonito)
flat(Bonito, Lavato)
punct(interpreter, ,)
det(interpreter, a)
amod(interpreter, friendly)
appos(Bonito, interpreter)
case(company, for)
det(company, the)
nmod(interpreter, company)
punct(steal, ,)
cc(steal, and)
nmod:poss(hay, Pedro)
flat(Pedro, Chavez)
case(Pedro, 's)
nsubj:pass(steal, hay)
aux:pass(steal, be)
acl:relcl(interpreter, steal)
cc(destroy, or)
conj(steal, destroy)
punct(steal, ;)
punct(steal, ;)
cc(break, and)
det(store, a)
nsubj:pass(break, store)
aux:pass(break, be)
conj(steal, break)
advmod(break, into)
cc(rob, and)
conj(break, rob)
punct(encourage, .)
compound(Attorney, District)
nsubj(warn, Attorney)
flat(Attorney, M.)
flat(Attorney, W.)
flat(Attorney, Mills)
root(ROOT, warn)
mark(prosecute, that)
nsubj(prosecute, he)
aux(prosecute, would)
advmod(prosecute, vigorously)
ccomp(warn, prosecute)
nsubj(catch, person)
ccomp(prosecute, catch)
xcomp(catch, commit)
det(crime, these)
obj(commit, crime)
cc(carry, or)
conj(commit, carry)
obj(carry, arm)
punct(warn, --)
nsubj(catch, he)
advmod(catch, just)
aux(catch, do)
advmod(catch, not)
parataxis(warn, catch)
obj(catch, anyone)
punct(warn, .)
csubj(convinced, increase)
obj(increase, threat)
case(life, on)
nmod:poss(life, he)
nmod(threat, life)
advmod(convinced, finally)
root(ROOT, convinced)
obj(convinced, Cook)
mark(leave, that)
nsubj(leave, he)
aux(leave, should)
ccomp(convinced, leave)
compound(Mexico, New)
obj(leave, Mexico)
punct(convinced, .)
nmod:poss(friend, he)
nsubj(advise, friend)
root(ROOT, advise)
mark(question, that)
nsubj(question, it)
aux(question, would)
cop(question, be)
advmod(question, only)
det(question, a)
ccomp(advise, question)
case(time, of)
nmod(question, time)
mark(kill, until)
cc:preconj(kill, either)
det(Mexicans, the)
nsubj(kill, Mexicans)
advcl(question, kill)
obj(kill, he)
case(ambuscade, by)
obl(kill, ambuscade)
cc(compel, or)
nsubj:pass(compel, he)
aux(compel, would)
aux:pass(compel, be)
conj(kill, compel)
mark(kill, to)
xcomp(compel, kill)
obj(kill, they)
case(defense, in)
compound(defense, self)
punct(defense, -)
obl(kill, defense)
punct(kill, ,)
advcl(kill, perpetuating)
det(trouble, the)
obj(perpetuating, trouble)
punct(advise, .)
case(summer, by)
amod(summer, early)
obl(write, summer)
punct(write, ,)
nsubj(write, he)
root(ROOT, write)
case(Laramie, from)
obl(write, Laramie)
mark(suffer, that)
nsubj(suffer, he)
aux(suffer, be)
ccomp(write, suffer)
case(wound, from)
det(wound, the)
obl(suffer, wound)
xcomp(suffer, inflict)
case(ambush, in)
det(ambush, the)
obl(inflict, ambush)
cc(way, and)
cop(way, be)
case(way, in)
det(way, a)
amod(way, bad)
conj(send, way)
advmod(way, financially)
punct(send, ,)
advmod(send, so)
nsubj(send, pel)
conj(write, send)
iobj(send, he)
det(draft, a)
obj(send, draft)
case($, for)
nmod(draft, $)
nummod($, 100)
punct(send, ,)
advcl(send, warning)
mark(wise, that)
nsubj(wise, it)
cop(wise, be)
advmod(wise, still)
advmod(wise, not)
ccomp(warning, wise)
mark(return, for)
nsubj(return, he)
mark(return, to)
advcl(wise, return)
punct(write, .)
nsubj(send, pel)
advmod(send, also)
root(ROOT, send)
det(check, a)
obj(send, check)
case($, for)
nmod(check, $)
nummod($, 100)
case(widow, to)
nmod:poss(widow, Russell)
case(Russell, 's)
nmod(check, widow)
cc(have, and)
conj(send, have)
det(monument, a)
amod(monument, white)
amod(monument, marble)
obj(have, monument)
acl(monument, erect)
case(grave, on)
nmod:poss(grave, he)
obl(erect, grave)
punct(send, .)
nsubj(place, Cattle)
advcl(place, steal)
cc(kill, and)
conj(steal, kill)
punct(steal, ,)
advmod(serious, again)
conj(steal, serious)
case(spring, during)
det(spring, the)
obl(serious, spring)
case(1891, of)
nmod(spring, 1891)
punct(place, ,)
root(ROOT, place)
det(officer, the)
compound(grant, land)
compound(officer, grant)
compound(officer, company)
obj(place, officer)
case(position, in)
det(position, a)
amod(position, perplex)
obl(place, position)
punct(place, .)
nsubj(reluctant, they)
cop(reluctant, be)
root(ROOT, reluctant)
mark(appoint, to)
xcomp(reluctant, appoint)
obj(appoint, sheriff)
mark(protect, to)
xcomp(appoint, protect)
det(property, the)
obj(protect, property)
punct(protect, ,)
advmod(run, thus)
conj(protect, run)
det(risk, the)
obj(run, risk)
mark(create, of)
acl(risk, create)
obj(create, disturbance)
case(that, such)
fixed(such, as)
nmod(disturbance, that)
case(Vermejo, on)
det(Vermejo, the)
nmod(that, Vermejo)
punct(protest, ,)
cc(protest, and)
cc(protest, yet)
det(cowboy, the)
nsubj(protest, cowboy)
conj(reluctant, protest)
mark(get, that)
nsubj(get, they)
ccomp(protest, get)
det(salary, no)
obj(get, salary)
mark(arrest, for)
acl(salary, arrest)
compound(thief, cattle)
obj(arrest, thief)
cc(run, and)
conj(arrest, run)
det(risk, the)
obj(run, risk)
mark(shoot, of)
aux:pass(shoot, be)
acl(risk, shoot)
punct(reluctant, .)
cc(ignore, and)
det(law, the)
nsubj(ignore, law)
advmod(ignore, virtually)
root(ROOT, ignore)
det(situation, the)
obj(ignore, situation)
punct(ignore, .)
det(judge, the)
nsubj(become, judge)
root(ROOT, become)
xcomp(become, ill)
advmod(conven, just)
mark(conven, as)
det(Court, the)
compound(Court, Colfax)
compound(Court, District)
nsubj(conven, Court)
advcl(bring, conven)
punct(bring, ,)
det(substitute, no)
nsubj:pass(bring, substitute)
aux:pass(bring, be)
parataxis(ill, bring)
advmod(bring, in)
punct(hear, ,)
det(case, no)
amod(case, criminal)
nsubj(hear, case)
parataxis(bring, hear)
punct(hear, ,)
advmod(5, only)
nummod(case, 5)
case(122, out)
case(122, of)
nmod(5, 122)
nsubj:pass(try, case)
acl(case, docket)
aux:pass(try, be)
conj(hear, try)
punct(die, ,)
cc(adjourn, and)
nsubj(adjourn, court)
amod(die, adjourn)
compound(die, sine)
conj(try, die)
mark(sit, after)
advcl(adjourn, sit)
det(day, a)
amod(day, few)
obl:tmod(sit, day)
case(week, instead)
fixed(instead, of)
det(week, the)
amod(week, usual)
nummod(week, three)
obl(sit, week)
punct(ill, .)
nsubj(complain, pel)
root(ROOT, complain)
punct(complain, :)
punct(complain, ``)
nsubj:pass(put, Litigants)
cc(witness, and)
conj(Litigants, witness)
aux:pass(put, be)
root(ROOT, put)
case(expense, to)
det(expense, the)
obl(put, expense)
cc(inconvenience, and)
conj(expense, inconvenience)
mark(go, of)
acl(inconvenience, go)
amod(distance, long)
obj(go, distance)
mark(transact, to)
advcl(go, transact)
obj(transact, business)
punct(put, ;)
punct(put, ;)
amod(money, public)
nsubj(spend, money)
parataxis(put, spend)
punct(put, ;)
punct(put, ;)
nsubj(delay, justice)
parataxis(accomplish, delay)
punct(put, ;)
punct(put, ;)
nsubj(accomplish, nothing)
parataxis(put, accomplish)
punct(seem, ,)
cc(seem, and)
det(distribution, the)
amod(distribution, whole)
nsubj(seem, distribution)
case(justice, of)
nmod(distribution, justice)
case(county, in)
det(county, this)
nmod(justice, county)
advcl(reach, seem)
mark(farce, to)
cop(farce, be)
det(farce, a)
amod(farce, absolute)
xcomp(seem, farce)
punct(farce, '')
punct(reach, .)
nsubj(reach, Word)
parataxis(put, reach)
det(company, the)
obj(reach, company)
nsubj(Manuel, that)
det(man, the)
nsubj(Manuel, man)
case(depredation, behind)
det(depredation, these)
nmod(man, depredation)
cop(Manuel, be)
acl:relcl(company, Manuel)
flat(Manuel, Gonzales)
punct(Manuel, ,)
det(man, a)
appos(Manuel, man)
case(follower, with)
amod(follower, many)
nmod(man, follower)
punct(follower, ,)
case(number, include)
det(number, a)
nmod(follower, number)
nsubj:pass(keep, who)
aux:pass(keep, be)
acl:relcl(number, keep)
case(line, in)
obl(keep, line)
case(fear, through)
obl(keep, fear)
case(he, of)
nmod(fear, he)
punct(put, .)
mark(want, although)
advcl(serve, want)
case(sheriff, by)
det(sheriff, the)
obl(want, sheriff)
mark(kill, for)
acl(sheriff, kill)
det(man, a)
amod(man, old)
obj(kill, man)
acl(man, name)
xcomp(name, Asher)
flat(Asher, Jones)
punct(serve, ,)
det(warrant, the)
nsubj:pass(serve, warrant)
case(arrest, for)
nmod:poss(arrest, he)
nmod(warrant, arrest)
aux(serve, have)
advmod(serve, never)
aux:pass(serve, be)
root(ROOT, serve)
punct(serve, .)
case(May, on)
obl(leave, May)
nummod(May, 19)
punct(leave, ,)
det(sheriff, a)
compound(sheriff, deputy)
nmod:poss(posse, sheriff)
case(sheriff, 's)
nsubj(leave, posse)
case(man, of)
nummod(man, eight)
nmod(posse, man)
root(ROOT, leave)
compound(City, Maxwell)
obj(leave, City)
cc(ride, and)
conj(leave, ride)
compound(five, thirty)
punct(five, -)
nummod(mile, five)
obj(ride, mile)
case(Vermejo, up)
det(Vermejo, the)
obl(ride, Vermejo)
advmod(join, where)
nsubj:pass(join, they)
aux:pass(join, be)
acl:relcl(Vermejo, join)
case(Juan, by)
obl(join, Juan)
flat(Juan, Jose)
flat(Juan, Martinez)
punct(leave, .)
case(a.m., by)
nummod(a.m., 3:00)
obl(reach, a.m.)
nsubj(reach, they)
root(ROOT, reach)
nmod:poss(house, he)
obj(reach, house)
cc(find, and)
conj(reach, find)
obj(find, it)
xcomp(find, vacant)
punct(reach, .)
mark(refuse, when)
nsubj:pass(refuse, they)
aux:pass(refuse, be)
advcl(smashed, refuse)
obj(refuse, entrance)
case(house, to)
nmod:poss(brother, he)
nmod:poss(house, brother)
case(brother, 's)
obl(refuse, house)
advmod(refuse, nearby)
punct(smashed, ,)
nsubj(smashed, they)
conj(reach, smashed)
compound:prt(smashed, down)
det(door, the)
obj(smashed, door)
punct(break, ,)
conj(smashed, break)
det(window, the)
obj(break, window)
punct(throw, ,)
cc(throw, and)
conj(smashed, throw)
amod(clothes, light)
obj(throw, clothes)
xcomp(throw, wet)
case(kerosene, with)
obl(wet, kerosene)
case(room, into)
det(room, the)
obl(wet, room)
punct(reach, .)
advmod(be, still)
expl(be, there)
root(ROOT, be)
det(Gonzales, no)
nsubj(be, Gonzales)
cc(say, and)
det(family, the)
nsubj(say, family)
aux(say, would)
conj(be, say)
obj(say, nothing)
punct(nothing, .)
advmod(300, about)
nummod(yard, 300)
appos(nothing, yard)
advmod(nothing, up)
det(creek, the)
nsubj(cluster, creek)
cop(cluster, be)
det(cluster, a)
parataxis(be, cluster)
case(house, of)
amod(house, mexican)
nmod(cluster, house)
acl(house, contain)
nummod(room, six)
obj(contain, room)
case(form, in)
det(form, the)
obl(contain, form)
case(square, of)
det(square, a)
nmod(form, square)
punct(contain, .)
mark(prowling, while)
advcl(recognize, prowling)
case(building, around)
det(building, these)
obl(prowling, building)
punct(recognize, ,)
nsubj(recognize, two)
case(posse, of)
det(posse, the)
nmod(two, posse)
parataxis(be, recognize)
det(voice, the)
obj(recognize, voice)
case(Gonzales, of)
nmod(voice, Gonzales)
acl(voice, speak)
case(people, to)
det(people, the)
obl(speak, people)
advmod(speak, inside)
punct(be, .)
nsubj:pass(promise, he)
aux:pass(promise, be)
root(ROOT, promise)
mark(befall, that)
det(harm, no)
nsubj(befall, harm)
aux(befall, would)
ccomp(promise, befall)
obj(befall, he)
mark(come, if)
nsubj(come, he)
aux(come, would)
advcl(befall, come)
advmod(come, out)
punct(curse, ,)
cc(curse, but)
nsubj(curse, he)
conj(promise, curse)
cc(reply, and)
conj(curse, reply)
mark(shoot, that)
nsubj(shoot, he)
aux(shoot, would)
ccomp(reply, shoot)
det(man, any)
obj(shoot, man)
acl(man, come)
case(door, near)
det(door, the)
obl(come, door)
punct(promise, .)
det(posse, the)
nsubj(ask, posse)
advmod(ask, then)
root(ROOT, ask)
mark(send, that)
nsubj(send, he)
ccomp(ask, send)
compound:prt(send, out)
det(woman, the)
obj(send, woman)
cc(child, and)
conj(woman, child)
mark(fire, as)
det(building, the)
nsubj:pass(fire, building)
aux(fire, would)
aux:pass(fire, be)
advcl(send, fire)
cc(tear, or)
conj(fire, tear)
compound:prt(tear, down)
case(head, over)
nmod:poss(head, he)
obl(tear, head)
mark(necessary, if)
advcl(fire, necessary)
mark(take, to)
xcomp(necessary, take)
obj(take, he)
xcomp(take, dead)
cc(alive, or)
conj(dead, alive)
punct(ask, .)
advmod(refuse, again)
nsubj(refuse, he)
root(ROOT, refuse)
punct(refuse, .)
case(earnest, in)
amod(earnest, deadly)
obl(strip, earnest)
punct(strip, ,)
det(besieger, the)
nsubj(strip, besieger)
advmod(strip, methodically)
root(ROOT, strip)
compound:prt(strip, away)
obj(strip, portion)
case(roof, of)
det(roof, the)
nmod(portion, roof)
cc(toss, and)
conj(strip, toss)
amod(rag, light)
obj(toss, rag)
advmod(toss, inside)
punct(toss, ,)
advmod(stamp, only)
mark(stamp, to)
aux(stamp, have)
advmod(stamp, most)
advcl(toss, stamp)
compound:prt(stamp, out)
case(woman, by)
det(woman, the)
obl(stamp, woman)
advmod(soon, as)
advmod(stamp, soon)
mark(hit, as)
nsubj(hit, they)
advcl(soon, hit)
det(floor, the)
obj(hit, floor)
punct(obvious, .)
mark(become, when)
nsubj(become, it)
advcl(strip, become)
xcomp(become, obvious)
mark(stay, that)
nsubj(stay, he)
aux(stay, could)
ccomp(obvious, stay)
advmod(stay, inside)
advmod(longer, no)
advmod(stay, longer)
punct(stay, ,)
advcl(stay, take)
det(thousand, a)
obj(take, thousand)
case(chance, to)
nummod(chance, one)
obl(take, chance)
nsubj(rush, Gonzales)
acl:relcl(chance, rush)
advmod(rush, outside)
punct(square, ,)
obj(rush, square)
case(muzzle, against)
det(muzzle, the)
obl(rush, muzzle)
case(Winchester, of)
det(Winchester, a)
nmod(muzzle, Winchester)
punct(strip, .)
obl:tmod(turn, shot)
case(heart, near)
det(heart, the)
nmod(shot, heart)
punct(turn, ,)
nsubj(turn, he)
root(ROOT, turn)
case(side, to)
nummod(side, one)
obl(turn, side)
cc(plunge, and)
conj(turn, plunge)
case(door, for)
det(door, a)
obl(plunge, door)
case(room, to)
det(room, another)
obl(plunge, room)
amod(foot, several)
obl:npmod(away, foot)
advmod(plunge, away)
punct(bullet, ,)
nummod(bullet, three)
parataxis(turn, bullet)
case(he, follow)
nmod(bullet, he)
punct(turn, .)
mark(push, as)
nsubj(push, he)
advcl(fall, push)
xcomp(push, open)
det(door, the)
obj(open, door)
nsubj(fall, he)
ccomp(warn, fall)
case(face, on)
nmod:poss(face, he)
obl(fall, face)
punct(fall, ,)
nsubj(fall, one)
case(comrade, of)
nmod:poss(comrade, he)
nmod(one, comrade)
advcl(one, pull)
obj(pull, he)
advmod(pull, inside)
punct(fall, .)
advmod(realize, not)
conj(fall, realize)
det(seriousness, the)
obj(realize, seriousness)
case(wound, of)
det(wound, the)
nmod(seriousness, wound)
punct(warn, ,)
det(besieger, the)
nsubj(warn, besieger)
root(ROOT, warn)
mark(burn, that)
mark(surrender, if)
nsubj(surrender, he)
aux(surrender, do)
advmod(surrender, not)
advcl(burn, surrender)
det(house, the)
obj(surrender, house)
aux(burn, would)
aux:pass(burn, be)
ccomp(warn, burn)
compound:prt(burn, down)
case(he, around)
obl(burn, he)
punct(warn, .)
advcl(set, receive)
det(answer, no)
obj(receive, answer)
punct(set, ,)
nsubj(set, they)
root(ROOT, set)
det(fire, the)
obj(set, fire)
punct(set, .)
mark(consume, when)
det(house, the)
nsubj(consume, house)
cop(consume, be)
advmod(half, about)
advmod(consume, half)
advcl(run, consume)
punct(run, ,)
nmod:poss(comrade, he)
nsubj(run, comrade)
parataxis(set, run)
case(door, to)
det(door, the)
obl(run, door)
cc(throw, and)
conj(run, throw)
compound:prt(throw, up)
nmod:poss(hand, he)
obj(throw, hand)
punct(throw, ,)
advcl(throw, declare)
advmod(declare, repeatedly)
mark(know, that)
nsubj(know, he)
aux(know, do)
advmod(know, not)
ccomp(declare, know)
det(whereabouts, the)
obj(know, whereabouts)
case(Manuel, of)
nmod(whereabouts, Manuel)
punct(find, .)
advcl(know, find)
obj(find, it)
xcomp(find, true)
mark(inside, that)
nsubj(inside, he)
cop(inside, be)
advmod(inside, not)
ccomp(true, inside)
punct(return, ,)
det(deputy, the)
nsubj(return, deputy)
conj(inside, return)
case(house, to)
det(house, the)
amod(house, first)
obl(return, house)
cc(tore, and)
conj(return, tore)
obj(tore, hole)
case(side, through)
det(side, the)
obl(tore, side)
cc(roof, and)
det(roof, the)
conj(side, roof)
mark(see, until)
nsubj(see, they)
aux(see, could)
advcl(tore, see)
det(body, a)
obj(see, body)
case(bed, on)
det(bed, the)
nmod(body, bed)
acl(body, cover)
case(blanket, by)
det(blanket, a)
obl(cover, blanket)
punct(set, .)
amod(slug, several)
nsubj(fire, slug)
root(ROOT, fire)
case(bed, into)
det(bed, the)
obl(fire, bed)
conj(fire, jerk)
case(blanket, aside)
det(blanket, the)
obl(jerk, blanket)
mark(reveal, to)
advcl(jerk, reveal)
det(hand, a)
advmod(lifeless, apparently)
amod(hand, lifeless)
obj(reveal, hand)
punct(jerk, .)
compound(time, shot)
nummod(time, six)
cc(eight, or)
conj(six, eight)
obl:tmod(drape, time)
det(body, the)
nsubj:pass(drape, body)
aux:pass(drape, be)
root(ROOT, drape)
case(pistol, with)
nmod:poss(pistol, Russell)
case(Russell, 's)
obl(drape, pistol)
punct(belt, ,)
conj(pistol, belt)
punct(cartridge, ,)
cc(cartridge, and)
conj(pistol, cartridge)
punct(drape, .)
expl(be, there)
root(ROOT, be)
det(horse, no)
amod(horse, extra)
nsubj(be, horse)
advmod(leave, so)
nsubj:pass(leave, it)
aux:pass(leave, be)
conj(be, leave)
case(comrade, to)
nmod:poss(comrade, he)
obl(leave, comrade)
nsubj(stand, who)
punct(stand, ,)
mark(number, though)
advcl(stand, number)
case(fifty, in)
det(fifty, the)
obl(number, fifty)
punct(stand, ,)
aux(stand, have)
conj(leave, stand)
advmod(stand, around)
case(hillside, on)
det(hillside, the)
obl(stand, hillside)
advmod(stand, nearby)
mark(fire, without)
advcl(stand, fire)
det(shot, a)
obj(fire, shot)
case(attack, during)
det(attack, the)
amod(attack, entire)
obl(fire, attack)
punct(be, .)
advmod(morning, early)
det(morning, the)
amod(morning, next)
obl:tmod(telephone, morning)
punct(telephone, ,)
det(mexican, a)
nsubj(telephone, mexican)
root(ROOT, telephone)
obj(telephone, pel)
mark(surround, that)
nsubj:pass(surround, Celso)
flat(Celso, Chavez)
punct(Celso, ,)
appos(Celso, one)
case(member, of)
det(member, the)
compound(member, posse)
nmod(one, member)
punct(surround, ,)
aux:pass(surround, be)
ccomp(telephone, surround)
case(Mexicans, by)
nummod(Mexicans, ten)
obl(surround, Mexicans)
case(home, at)
nmod:poss(father, he)
nmod:poss(home, father)
case(father, 's)
obl(surround, home)
case(Vermejo, on)
det(Vermejo, the)
amod(Vermejo, upper)
nmod(home, Vermejo)
punct(telephone, .)
det(sheriff, the)
nsubj(swore, sheriff)
cc(District, and)
compound(Attorney, District)
nsubj(swore, Attorney)
flat(Attorney, Mills)
advmod(swore, hastily)
root(ROOT, swore)
compound:prt(swore, out)
det(number, a)
obj(swore, number)
case(warrant, of)
nmod(number, warrant)
case(man, against)
nmod(warrant, man)
nsubj(ride, who)
aux(ride, have)
aux(ride, be)
acl:relcl(man, ride)
case(armed, about)
obl(ride, armed)
punct(ride, ,)
case(statement, accord)
fixed(accord, to)
amod(statement, sign)
obl(ride, statement)
case(Chavez, by)
nmod(statement, Chavez)
cc(Dr., and)
conj(Chavez, Dr.)
flat(Dr., i.)
flat(Dr., P.)
flat(Dr., George)
punct(order, ,)
cc(order, and)
conj(swore, order)
obj(order, deputy)
flat(deputy, Barney)
flat(deputy, Clark)
case(Raton, of)
nmod(deputy, Raton)
mark(rescue, to)
advcl(order, rescue)
det(posseman, the)
obj(rescue, posseman)
punct(rescue, .)
advcl(rescue, travel)
det(night, all)
obl:tmod(travel, night)
punct(Clark, ,)
nsubj(arrive, Clark)
cc(man, and)
nummod(man, twelve)
nsubj(arrive, man)
ccomp(travel, arrive)
case(o'clock, at)
advmod(seven, about)
nummod(o'clock, seven)
compound(May, o'clock)
obl(arrive, May)
nummod(May, 22)
punct(arrive, .)
advmod(hear, occasionally)
nsubj(hear, they)
parataxis(arrive, hear)
amod(signal, gun-shot)
obj(hear, signal)
cc(sight, and)
det(number, a)
nsubj:pass(sight, number)
case(horsem, of)
nmod(number, horsem)
aux:pass(sight, be)
conj(hear, sight)
case(hill, on)
det(hill, the)
obl(sight, hill)
punct(sight, ,)
advcl(sight, disappearing)
case(approach, at)
det(posse, the)
nmod:poss(approach, posse)
case(posse, 's)
obl(disappearing, approach)
punct(swore, . )
det(justice, a)
amod(justice, mexican)
nsubj(issue, justice)
case(peace, of)
det(peace, the)
nmod(justice, peace)
aux(issue, have)
root(ROOT, issue)
det(writ, a)
obj(issue, writ)
case(Chavez, against)
nmod(writ, Chavez)
mark(take, for)
advcl(issue, take)
obj(take, part)
case(murder, in)
det(murder, the)
punct(murder, ``)
obl(take, murder)
punct(murder, '')
case(Manuel, of)
nmod(murder, Manuel)
flat(Manuel, Gonzales)
advmod(anxious, so)
nsubj(anxious, he)
cc(father, and)
nmod:poss(father, he)
conj(he, father)
cop(anxious, be)
conj(issue, anxious)
mark(take, to)
aux:pass(take, be)
xcomp(anxious, take)
case(danger, out)
case(danger, of)
obl(take, danger)
punct(issue, .)
det(man, the)
nsubj(help, man)
root(ROOT, help)
obj(help, they)
xcomp(help, gather)
nmod:poss(belonging, they)
obj(gather, belonging)
cc(escort, and)
conj(help, escort)
obj(escort, they)
case(Raton, to)
obl(escort, Raton)
advmod(escort, along)
case(family, with)
nummod(family, three)
amod(family, other)
obl(escort, family)
acl(family, desire)
mark(leave, to)
xcomp(desire, leave)
punct(help, .)
det(party, the)
nummod(party, ten)
cc(more, or)
advmod(dangerous, more)
amod(party, dangerous)
nsubj(large, party)
acl(party, single)
compound:prt(single, out)
case(prosecution, for)
obl(single, prosecution)
cop(large, be)
advmod(large, still)
case(large, at)
root(ROOT, large)
punct(realize, ,)
cc(realize, and)
nsubj(realize, pel)
conj(large, realize)
mark(difficult, that)
mark(entrench, if)
det(man, these)
nsubj(entrench, man)
advcl(difficult, entrench)
obj(entrench, themselves)
case(house, in)
nmod:poss(house, they)
compound(house, adobe)
obl(entrench, house)
punct(defend, ,)
advcl(entrench, defend)
obj(defend, themselves)
case(loophole, through)
obl(defend, loophole)
punct(difficult, ,)
nsubj(difficult, it)
aux(difficult, would)
cop(difficult, be)
advmod(difficult, most)
ccomp(realize, difficult)
mark(capture, to)
csubj(difficult, capture)
obj(capture, they)
punct(large, .)
advmod(wire, thus)
nsubj(wire, he)
root(ROOT, wire)
obj(wire, J.)
flat(J., P.)
obj(wire, lower)
cc(son, and)
conj(lower, son)
case(denver, of)
nmod(son, denver)
punct(wire, :)
punct(wire, ``)
root(ROOT, have)
obj(have, you)
det(grenade, any)
compound(hand, percussion)
compound(grenade, hand)
obj(have, grenade)
mark(throw, for)
acl(grenade, throw)
case(house, in)
det(house, a)
obl(throw, house)
cc(load, or)
mark(load, across)
det(load, a)
advmod(load, well)
amod(ball, load)
case(ball, with)
conj(house, ball)
cc(shot, or)
compound(shot, shrapnel)
conj(ball, shot)
punct(have, ?)
punct(have, ?)
mark(not, if)
advcl(long, not)
punct(order, ,)
advmod(long, how)
advmod(order, long)
mark(order, to)
root(ROOT, order)
cc(what, and)
conj(order, what)
cop(what, be)
det(price, the)
nsubj(what, price)
punct(what, '')
punct(order, ?)
punct(order, ?)
nsubj(decide, he)
advmod(decide, wisely)
root(ROOT, decide)
mark(foolish, that)
expl(foolish, it)
aux(foolish, would)
cop(foolish, be)
ccomp(decide, foolish)
mark(create, to)
csubj(foolish, create)
det(disturbance, a)
obj(create, disturbance)
case(roundup, during)
det(roundup, the)
compound(roundup, come)
obl(create, roundup)
punct(create, ,)
advmod(guard, particularly)
mark(guard, since)
det(Mexicans, the)
nsubj(guard, Mexicans)
cop(guard, be)
case(guard, on)
nmod:poss(guard, they)
advcl(create, guard)
punct(decide, .)
nmod:poss(problem, he)
nsubj(become, problem)
advmod(become, then)
root(ROOT, become)
xcomp(become, one)
mark(restraining, of)
acl(one, restraining)
det(fighter, the)
amod(fighter, american)
obj(restraining, fighter)
nsubj(want, who)
acl:relcl(fighter, want)
mark(clean, to)
xcomp(want, clean)
compound:prt(clean, out)
det(Vermejo, the)
obj(clean, Vermejo)
case(force, by)
obl(clean, force)
advmod(clean, immediately)
punct(one, .)
det(plant, the)
nsubj:pass(locate, plant)
aux:pass(locate, be)
root(ROOT, locate)
advmod(locate, west)
case(Battenkill, of)
det(Battenkill, the)
obl(west, Battenkill)
cc(south, and)
conj(Battenkill, south)
case(location, of)
det(location, the)
nmod(Battenkill, location)
case(plant, of)
det(plant, the)
amod(plant, former)
amod(light, electric)
compound(plant, light)
nmod(location, plant)
punct(locate, .)
det(Company, the)
compound(Depot, Manchester)
compound(Company, Depot)
compound(Company, sewer)
nsubj(issue, Company)
root(ROOT, issue)
nummod(share, 214)
obj(issue, share)
case(stock, of)
nmod(share, stock)
case($, at)
obl(issue, $)
nummod($, 10)
nummod($, each)
case(construction, for)
obl(issue, construction)
case(sewer, of)
det(sewer, a)
nmod(construction, sewer)
case(locality, in)
det(locality, that)
nmod(sewer, locality)
punct(make, ,)
cc(make, and)
nsubj:pass(make, assessment)
aux:pass(make, be)
conj(issue, make)
case(maintenance, for)
nmod:poss(maintenance, its)
obl(make, maintenance)
punct(issue, .)
nsubj(give, it)
aux(give, have)
root(ROOT, give)
amod(trouble, considerable)
obj(give, trouble)
case(time, at)
obl(give, time)
cc(empty, and)
conj(give, empty)
advmod(Battenkill, right)
case(Battenkill, into)
det(Battenkill, the)
obl(empty, Battenkill)
punct(give, .)
compound(District, Fire)
compound(no., District)
nsubj(discuss, no.)
nummod(no., 1)
root(ROOT, discuss)
nmod:poss(purchase, its)
amod(purchase, possible)
obj(discuss, purchase)
case(1945, in)
obl(discuss, 1945)
punct(consider, ,)
cc(consider, but)
conj(discuss, consider)
obj(consider, it)
det(investment, a)
amod(investment, unwise)
xcomp(consider, investment)
punct(discuss, .)
det(sewer, the)
nsubj:pass(construct, sewer)
case(Street, on)
compound(Street, Bonnet)
nmod(sewer, Street)
aux:pass(construct, be)
root(ROOT, construct)
mark(be, when)
expl(be, there)
advcl(construct, be)
advmod(house, only)
det(house, a)
amod(house, few)
nsubj(be, house)
case(street, on)
det(street, the)
nmod(house, street)
punct(construct, .)
mark(build, as)
amod(home, new)
nsubj:pass(build, home)
aux:pass(build, be)
advcl(connect, build)
nsubj:pass(connect, they)
aux:pass(connect, be)
root(ROOT, connect)
mark(serve, so)
fixed(so, that)
det(residence, all)
nsubj:pass(serve, residence)
advmod(serve, south)
case(Street, of)
compound(Street, School)
obl(south, Street)
aux:pass(serve, be)
advcl(connect, serve)
case(it, by)
obl(serve, it)
punct(connect, .)
nsubj(treasurer, B.)
flat(B., J.)
flat(B., Connell)
cop(treasurer, be)
det(treasurer, the)
amod(treasurer, present)
parataxis(serve, treasurer)
cc(manager, and)
conj(treasurer, manager)
punct(vote, .)
det(meeting, the)
nummod(meeting, 1946)
compound(meeting, town)
nsubj(vote, meeting)
ccomp(connect, vote)
mark(have, to)
xcomp(vote, have)
det(selectman, the)
nsubj(appoint, selectman)
xcomp(have, appoint)
det(committee, a)
obj(appoint, committee)
mark(investigate, to)
acl(committee, investigate)
cc(report, and)
conj(investigate, report)
case(feasibility, on)
det(feasibility, the)
obl(report, feasibility)
case(system, of)
det(system, some)
nmod(feasibility, system)
case(disposal, of)
compound(disposal, sewage)
nmod(system, disposal)
cc(plant, and)
det(plant, a)
compound(plant, disposal)
conj(system, plant)
mark(serve, to)
acl(plant, serve)
compound(Center, Manchester)
obj(serve, Center)
punct(Depot, ,)
conj(Center, Depot)
punct(Lane, ,)
cc(Lane, and)
nmod:poss(Lane, Way)
case(Way, 's)
conj(Center, Lane)
punct(connect, .)
det(committee, the)
nsubj(submit, committee)
root(ROOT, submit)
det(report, a)
obj(submit, report)
acl(report, sign)
case(Louis, by)
obl(sign, Louis)
flat(Louis, Martin)
cc(Leon, and)
conj(Louis, Leon)
flat(Louis, Wiley)
case(map, with)
det(map, a)
obl(sign, map)
acl(map, publish)
case(report, in)
det(report, the)
nummod(town, 1946)
compound(report, town)
obl(publish, report)
punct(submit, .)
det(layout, the)
nsubj:pass(design, layout)
case(line, of)
det(line, the)
compound(line, sewer)
nmod(layout, line)
aux:pass(design, be)
root(ROOT, design)
case(Henry, by)
obl(design, Henry)
flat(Henry, W.)
flat(Henry, Taylor)
punct(Henry, ,)
nsubj(engineer, who)
cop(engineer, be)
det(engineer, the)
acl:relcl(Henry, engineer)
case(plant, for)
det(plant, the)
compound(Village, Manchester)
compound(plant, Village)
compound(plant, disposal)
nmod(engineer, plant)
punct(design, .)
det(figure, no)
nsubj:pass(submit, figure)
aux:pass(submit, be)
root(ROOT, submit)
case(report, with)
det(report, the)
obl(submit, report)
cc(take, and)
det(action, no)
nsubj:pass(take, action)
aux:pass(take, be)
conj(submit, take)
case(it, on)
obl(take, it)
case(town, by)
det(town, the)
obl(take, town)
punct(direct, .)
det(meeting, the)
nummod(meeting, 1958)
compound(meeting, town)
nsubj(direct, meeting)
parataxis(submit, direct)
compound(authority, town)
obj(direct, authority)
mark(seek, to)
xcomp(direct, seek)
amod(fund, federal)
cc(state, and)
conj(federal, state)
obj(seek, fund)
case(which, with)
obl(conduct, which)
mark(conduct, to)
acl(fund, conduct)
det(survey, a)
amod(survey, preliminary)
obj(conduct, survey)
case(plant, of)
det(plant, a)
amod(plant, propose)
compound(plant, sewage)
nmod(survey, plant)
case(facility, with)
nmod:poss(facility, its)
compound(facility, attendant)
nmod(plant, facility)
punct(submit, .)
det(step, the)
amod(step, final)
nsubj(vote, step)
cop(vote, be)
det(vote, a)
root(ROOT, vote)
case(issue, for)
det(issue, a)
compound(issue, $)
nummod($, 230,000)
compound(issue, bond)
nmod(vote, issue)
case(construction, for)
det(construction, the)
nmod(issue, construction)
case(system, of)
det(system, a)
compound(system, sewage)
nmod(construction, system)
case(meeting, by)
det(meeting, the)
nummod(town, 1959)
compound(meeting, town)
nmod(system, meeting)
punct(construction, ,)
advmod(confirm, later)
acl(meeting, confirm)
case(vote, by)
det(vote, a)
nummod(third, two)
punct(third, -)
compound(vote, third)
obl(confirm, vote)
case(meeting, at)
det(meeting, a)
amod(town, special)
compound(meeting, town)
nmod(vote, meeting)
appos(meeting, June)
nummod(June, 21)
punct(June, ,)
nummod(June, 1960)
punct(vote, .)
expl(stand, there)
det(matter, the)
nsubj(stand, matter)
root(ROOT, stand)
case(prospect, with)
det(prospect, the)
obl(stand, prospect)
mark(remove, that)
advmod(remove, soon)
nsubj:pass(remove, Manchester)
aux(remove, may)
aux:pass(remove, be)
acl(prospect, remove)
case(roster, from)
det(roster, the)
obl(remove, roster)
case(town, of)
nmod(roster, town)
acl(roster, contribute)
amod(sewage, raw)
obj(contribute, sewage)
case(stream, to)
nmod:poss(stream, its)
amod(stream, main)
obl(contribute, stream)
punct(remove, .)
nsubj:pass(attribute, Telephone)
cc(interest, and)
compound(Manchester, telegraph)
nmod:poss(interest, Manchester)
case(Manchester, 's)
amod(interest, unusual)
conj(Telephone, interest)
case(telegraphy, in)
nmod(interest, telegraphy)
aux(attribute, have)
advmod(attribute, often)
aux:pass(attribute, be)
parataxis(stand, attribute)
case(fact, to)
det(fact, the)
obl(attribute, fact)
mark(friend, that)
det(Rev., the)
nsubj(friend, Rev.)
flat(Rev., J.)
flat(Rev., D.)
flat(Rev., Wickham)
punct(headmaster, ,)
appos(Rev., headmaster)
case(Burr, of)
nmod(headmaster, Burr)
cc(Burton, and)
conj(Burr, Burton)
conj(Burr, seminary)
punct(friend, ,)
cop(friend, be)
det(friend, a)
amod(friend, personal)
acl(fact, friend)
cc(correspondent, and)
conj(friend, correspondent)
case(inventor, of)
det(inventor, the)
nmod(correspondent, inventor)
punct(inventor, ,)
appos(inventor, Samuel)
flat(Samuel, F.)
flat(Samuel, B.)
flat(Samuel, morse)
punct(attribute, .)
case(rate, at)
det(rate, any)
obl(lag, rate)
punct(lag, ,)
nsubj(lag, Manchester)
aux(lag, do)
advmod(lag, not)
root(ROOT, lag)
advmod(lag, far)
case(system, behind)
det(system, the)
amod(system, first)
amod(system, commercial)
obl(lag, system)
nsubj:pass(set, which)
aux:pass(set, be)
acl:relcl(system, set)
compound:prt(set, up)
case(1844, in)
obl(set, 1844)
case(Baltimore, between)
nmod(1844, Baltimore)
cc(Washington, and)
conj(Baltimore, Washington)
punct(lag, .)
case(1846, in)
obl(become, 1846)
nsubj(become, Matthew)
flat(Matthew, B.)
flat(Matthew, Goodwin)
punct(Matthew, ,)
appos(Matthew, jeweler)
cc(watchmaker, and)
conj(jeweler, watchmaker)
punct(become, ,)
root(ROOT, become)
det(town, the)
nmod:poss(telegrapher, town)
case(town, 's)
amod(telegrapher, first)
xcomp(become, telegrapher)
case(dwelling, in)
det(dwelling, a)
nmod(telegrapher, dwelling)
nsubj(build, he)
acl:relcl(dwelling, build)
case(himself, for)
obl(build, himself)
cc(business, and)
nmod:poss(business, he)
conj(himself, business)
punct(door, ``)
nummod(door, two)
appos(business, door)
advmod(door, north)
case(House, of)
det(House, the)
compound(House, Equinox)
obl(north, House)
punct(door, '')
cc(door, or)
punct(door, ``)
nummod(door, one)
conj(door, door)
advmod(door, north)
case(Bank, of)
det(Bank, the)
obl(north, Bank)
punct(Manchester, ,)
appos(Bank, Manchester)
punct(Vermont, ,)
appos(Manchester, Vermont)
punct(Manchester, '')
punct(telegrapher, .)
nsubj(telegrapher, Goodwin)
cop(telegrapher, be)
acl:relcl(door, telegrapher)
case(Company, for)
det(Company, the)
punct(Company, ``)
compound(telegraph, American)
compound(Company, telegraph)
obl(telegrapher, Company)
punct(Company, '')
cc(the, and)
conj(Company, the)
punct(telegrapher, ``)
nsubj(payable, Troy)
cc(Company, and)
compound(junction, Canada)
compound(Company, junction)
compound(Company, telegraph)
appos(Troy, Company)
punct(Company, '')
punct(Company, .)
nsubj(payable, Shares)
case(stock, of)
amod(stock, capital)
nmod(Shares, stock)
case($, at)
nmod(Shares, $)
nummod($, 15)
advmod($, each)
case(company, in)
det(company, the)
amod(company, latter)
nmod(each, company)
cop(payable, be)
root(ROOT, payable)
case(Bank, at)
det(Bank, the)
obl(payable, Bank)
case(Manchester, of)
nmod(Bank, Manchester)
cc(bank, or)
case(bank, at)
amod(bank, various)
amod(bank, other)
compound(bank, Vermont)
conj(Bank, bank)
punct(payable, . )
det(message, a)
root(ROOT, message)
case(word, of)
advmod(fifteen, less)
fixed(less, than)
nummod(word, fifteen)
nmod(message, word)
case(cost, to)
compound(cost, Bennington)
nmod(word, cost)
compound(five, twenty)
punct(five, -)
nummod(cent, five)
nmod(message, cent)
punct(message, .)
case(1871, by)
obl(express, 1871)
nsubj(express, L.)
flat(L., C.)
flat(L., Orvis)
punct(L., ,)
appos(L., manager)
case(Company, of)
det(Company, the)
punct(Company, ``)
compound(Union, Western)
compound(Company, Union)
compound(Company, telegraph)
nmod(manager, Company)
punct(Company, '')
punct(express, ,)
root(ROOT, express)
obj(express, willingness)
mark(send, to)
acl(willingness, send)
compound(telegram, emergency)
obj(send, telegram)
case(Sundays, on)
obl(send, Sundays)
case(drugstore, from)
nmod:poss(drugstore, he)
compound(drugstore, Village)
obl(send, drugstore)
punct(express, .)
nsubj(need, Orvis)
advmod(need, even)
root(ROOT, need)
mark(hire, to)
xcomp(need, hire)
det(assistant, a)
obj(hire, assistant)
punct(Clark, ,)
appos(assistant, Clark)
flat(Clark, J.)
flat(Clark, wait)
punct(need, .)
det(Journal, the)
compound(Journal, Manchester)
nsubj(comment, Journal)
root(ROOT, comment)
advmod(comment, editorially)
case(amount, on)
det(amount, the)
amod(amount, surprising)
obl(comment, amount)
case(business, of)
amod(business, local)
amod(business, telegraphic)
nmod(amount, business)
punct(comment, .)
case(fall, in)
det(fall, the)
obl(establish, fall)
case(1878, of)
nmod(fall, 1878)
punct(establish, ,)
det(line, the)
punct(line, ``)
compound(line, popular)
compound(line, telegraph)
nsubj:pass(establish, line)
punct(line, '')
aux:pass(establish, be)
root(ROOT, establish)
case(Manchester, between)
obl(establish, Manchester)
cc(Point, and)
compound(Point, factory)
conj(Manchester, Point)
case(owner, by)
det(owner, the)
obl(establish, owner)
punct(Paul, ,)
conj(owner, Paul)
flat(Paul, W.)
flat(Paul, Orvis)
punct(Henry, ,)
conj(Paul, Henry)
flat(Henry, Gray)
punct(J., ,)
conj(Paul, J.)
flat(J., N.)
flat(J., hard)
punct(Clark, ,)
cc(Clark, and)
conj(owner, Clark)
flat(Clark, J.)
flat(Clark, wait)
punct(establish, .)
det(line, the)
nsubj(live, line)
advmod(live, soon)
root(ROOT, live)
compound:prt(live, up)
case(name, to)
nmod:poss(name, its)
obl(live, name)
punct(live, ,)
mark(send, as)
amod(message, local)
nsubj:pass(send, message)
case(length, of)
amod(length, moderate)
nmod(message, length)
aux(send, could)
aux:pass(send, be)
advcl(live, send)
case(dime, for)
det(dime, a)
obl(send, dime)
cc(able, and)
det(company, the)
nsubj(able, company)
cop(able, be)
advmod(able, quickly)
conj(send, able)
mark(declare, to)
xcomp(able, declare)
advmod(liberal, very)
amod(dividend, liberal)
obj(declare, dividend)
case(stock, on)
nmod:poss(stock, its)
amod(stock, capital)
nmod(dividend, stock)
punct(live, .)
case(1879, in)
obl(form, 1879)
det(Clark, the)
amod(Clark, same)
nsubj(form, Clark)
obl:tmod(form, wait)
punct(form, ,)
case(H., with)
obl(form, H.)
flat(H., H.)
flat(H., Holley)
case(Dorset, of)
compound(Dorset, South)
nmod(H., Dorset)
punct(form, ,)
root(ROOT, form)
det(line, the)
punct(line, ``)
compound(line, American)
compound(line, telegraph)
obj(form, line)
punct(line, '')
punct(line, ,)
advcl(form, extend)
case(Depot, from)
compound(Depot, Manchester)
obl(extend, Depot)
case(Point, via)
compound(Point, factory)
obl(extend, Point)
cc(Dorset, and)
compound(Dorset, South)
conj(Point, Dorset)
case(Dorset, to)
nmod(Point, Dorset)
punct(form, .)
mark(convenient, besides)
cop(convenient, be)
advmod(convenient, most)
advcl(Aaron, convenient)
punct(prove, ,)
det(line, the)
nsubj(prove, line)
punct(prove, ``)
advmod(prove, soon)
parataxis(convenient, prove)
det(investment, a)
amod(investment, good)
obj(prove, investment)
case(owner, for)
det(owner, the)
nmod(investment, owner)
punct(prove, '')
punct(prove, .)
nsubj(Aaron, Telegraphers)
case(Depot, at)
det(Depot, the)
nmod(Telegraphers, Depot)
case(time, at)
det(time, this)
nmod(Depot, time)
cop(Aaron, be)
root(ROOT, Aaron)
flat(Aaron, C.)
flat(Aaron, Burr)
cc(Mark, and)
conj(Aaron, Mark)
flat(Mark, manley)
case(Burr, of)
punct(Burr, ``)
nmod(Mark, Burr)
cc(manley, and)
conj(Burr, manley)
punct(Burr, '')
punct(dealer, ,)
conj(Aaron, dealer)
case(goods, in)
compound(goods, lumber)
cc(dry, and)
conj(lumber, dry)
nmod(dealer, goods)
punct(Aaron, .)
amod(equipment, early)
nsubj(flimsy, equipment)
cop(flimsy, be)
advmod(flimsy, very)
root(ROOT, flimsy)
punct(flimsy, ;)
punct(flimsy, ;)
det(gust, the)
amod(gust, smallest)
nsubj(topple, gust)
case(wind, of)
nmod(gust, wind)
parataxis(flimsy, topple)
obj(topple, pole)
punct(topple, ,)
advcl(topple, make)
obj(make, communication)
xcomp(make, impossible)
punct(flimsy, .)
cc(continue, but)
nsubj(continue, company)
root(ROOT, continue)
mark(spring, to)
xcomp(continue, spring)
compound:prt(spring, up)
punct(continue, .)
case(1883, by)
obl(existence, 1883)
det(Company, the)
punct(Company, ``)
compound(Company, Battenkill)
compound(Company, telegraph)
nsubj(existence, Company)
punct(Company, '')
cop(existence, be)
case(existence, in)
root(ROOT, existence)
cc(president, and)
nsubj(president, Alvin)
flat(Alvin, Pettibone)
cop(president, be)
nmod:poss(president, its)
conj(existence, president)
punct(existence, .)
csubj(line, operating)
case(1887, in)
obl(operating, 1887)
cop(line, be)
det(line, the)
punct(line, ``)
compound(line, Valley)
compound(line, telegraph)
root(ROOT, line)
punct(line, '')
punct(line, ,)
appos(line, officer)
case(which, of)
nmod(E., which)
cop(E., be)
acl:relcl(officer, E.)
flat(E., C.)
flat(E., Orvis)
punct(president, ,)
appos(Orvis, president)
punct(E., ;)
punct(K, ;)
compound(K, H)
punct(K, .)
appos(E., K)
punct(line, .)
root(ROOT, fowler)
punct(fowler, ,)
compound(president, vice)
punct(president, -)
appos(fowler, president)
cc(secretary, and)
conj(president, secretary)
punct(fowler, ;)
punct(fowler, ;)
appos(fowler, J.)
flat(J., N.)
flat(J., hard)
punct(treasurer, ,)
appos(J., treasurer)
punct(J., ;)
punct(F, ;)
list(fowler, F)
punct(H., .)
appos(fowler, H.)
flat(H., Walker)
punct(H., ,)
appos(H., superintendent)
punct(H., ;)
punct(H., ;)
conj(H., H.)
flat(H., S.)
flat(H., Walker)
punct(H., ,)
amod(superintendent, assistant)
appos(H., superintendent)
punct(fowler, .)
nummod(company, two)
nsubj(have, company)
advmod(have, now)
root(ROOT, have)
obj(have, headquarters)
case(Clark, with)
nmod(headquarters, Clark)
flat(Clark, J.)
flat(Clark, wait)
punct(Clark, ,)
nsubj(have, who)
mark(have, by)
advmod(have, then)
acl:relcl(headquarters, have)
nmod:poss(drugstore, he)
amod(drugstore, own)
obj(have, drugstore)
case(Point, at)
compound(Point, factory)
obl(have, Point)
punct(Point, --)
det(Company, the)
punct(Company, ``)
compound(Union, Northern)
compound(telegraph, Union)
compound(Company, telegraph)
appos(Point, Company)
punct(Company, '')
cc(the, and)
conj(Company, the)
punct(Company, ``)
amod(union, western)
nsubj(Arthur, union)
punct(union, '')
punct(Arthur, .)
nsubj(Arthur, Operators)
cop(Arthur, be)
root(ROOT, Arthur)
flat(Arthur, Koop)
cc(Norman, and)
conj(Arthur, Norman)
flat(Norman, Taylor)
punct(Arthur, .)
advmod(exist, still)
parataxis(Arthur, exist)
case(a, on)
obl(exist, a)
punct(Arthur, ``)
amod(union, northern)
compound(form, union)
punct(union, '')
compound(form, telegraph)
nsubj(message, form)
cop(message, be)
det(message, a)
amod(message, typical)
amod(message, peremptory)
root(ROOT, message)
case(grocer, from)
compound(grocer, peru)
nmod(message, grocer)
nmod(message, J.)
flat(J., J.)
flat(J., hapgood)
case(store, to)
nmod:poss(store, Burton)
cc(Graves, and)
conj(Burton, Graves)
case(Graves, 's)
nmod(message, store)
case(Manchester, in)
nmod(store, Manchester)
punct(message, --)
punct(message, ``)
root(ROOT, get)
cc(send, and)
conj(get, send)
case(stage, by)
compound(pound, stage)
nummod(pound, four)
obl:npmod(best, pound)
amod(porterhouse, best)
compound(stake, porterhouse)
cc(serloin, or)
conj(porterhouse, serloin)
obj(get, stake)
punct(get, ,)
case(Mrs., for)
nsubj(send, Mrs.)
flat(Mrs., hapgood)
parataxis(get, send)
nummod(orange, six)
amod(orange, sweet)
obj(send, orange)
punct(orange, '')
punct(send, .)
case(1888, about)
nmod(J., 1888)
obl(send, J.)
flat(J., E.)
flat(J., McNaughton)
case(Barnumville, of)
nmod(J., Barnumville)
cc(E., and)
conj(Barnumville, E.)
flat(E., G.)
flat(E., Bacon)
conj(get, become)
xcomp(become, proprietor)
case(Company, of)
det(Company, the)
punct(Company, ``)
compound(Company, Green)
compound(Company, Mountain)
compound(Company, telegraph)
nmod(proprietor, Company)
punct(Company, '')
punct(proprietor, ,)
acl(proprietor, connect)
det(office, all)
obj(connect, office)
case(line, on)
det(line, the)
compound(Union, Western)
compound(line, Union)
nmod(office, line)
cc(extend, and)
conj(connect, extend)
case(mountain, over)
det(mountain, the)
obl(extend, mountain)
case(Barnumville, from)
obl(extend, Barnumville)
case(peru, to)
nmod(Barnumville, peru)
punct(Londonderry, ,)
conj(peru, Londonderry)
punct(Londonderry, ,)
compound(Londonderry, South)
conj(peru, Londonderry)
punct(Lake, ,)
compound(Lake, Lowell)
conj(peru, Lake)
punct(Windham, ,)
conj(peru, Windham)
punct(Windham, ,)
compound(Windham, North)
conj(peru, Windham)
punct(Grafton, ,)
conj(peru, Grafton)
punct(Cambridgeport, ,)
conj(peru, Cambridgeport)
punct(River, ,)
nmod:poss(River, Saxton)
case(Saxton, 's)
conj(peru, River)
punct(Falls, ,)
cc(Falls, and)
compound(Falls, Bellows)
conj(peru, Falls)
punct(Falls, .)
case(1896, from)
obl(manager, 1896)
case(1910, until)
nmod(John, 1910)
nsubj(manager, John)
flat(John, H.)
flat(John, Whipple)
cop(manager, be)
acl:relcl(Falls, manager)
case(Union, of)
compound(Union, Western)
nmod(manager, Union)
case(Center, at)
det(Center, the)
nmod(manager, Center)
case(drugstore, in)
det(drugstore, the)
nmod(Center, drugstore)
nsubj(purchase, he)
acl:relcl(drugstore, purchase)
case(Clark, from)
obl(purchase, Clark)
obl(purchase, wait)
punct(office, .)
det(office, the)
compound(office, Village)
obj(purchase, office)
case(Union, of)
compound(Union, Western)
nmod(office, Union)
case(George, with)
nmod(office, George)
flat(George, Towsley)
case(manager, as)
obl(continue, manager)
cc(telegrapher, and)
conj(manager, telegrapher)
acl:relcl(George, continue)
case(drugstore, in)
nmod:poss(drugstore, hard)
case(hard, 's)
obl(continue, drugstore)
case(1905, until)
obl(continue, 1905)
punct(continue, .)
case(summer, during)
det(summer, the)
obl(need, summer)
punct(need, ,)
nsubj(need, Towsley)
advmod(need, often)
parataxis(continue, need)
det(assistance, the)
obj(need, assistance)
case(operator, of)
det(operator, a)
compound(operator, company)
nmod(assistance, operator)
punct(get, .)
nsubj(year, these)
cop(year, be)
det(year, the)
root(ROOT, year)
mark(flock, when)
nsubj(flock, people)
advcl(year, flock)
case(Manchester, to)
obl(flock, Manchester)
advmod(only, not)
advmod(play, only)
mark(play, to)
advcl(flock, play)
obj(play, golf)
punct(golf, ,)
nsubj(come, which)
aux(come, have)
acl:relcl(golf, come)
case(vogue, into)
obl(come, vogue)
punct(witness, ,)
cc(witness, but)
advmod(witness, also)
mark(witness, to)
conj(come, witness)
det(tournament, the)
compound(Club, Ekwanok)
compound(Club, country)
compound(tournament, Club)
obj(witness, tournament)
punct(keep, .)
compound(Yorkers, New)
nsubj:pass(keep, Yorkers)
aux:pass(keep, be)
parataxis(year, keep)
xcomp(keep, inform)
case(score, of)
obl(inform, score)
case(reporter, by)
nmod(score, reporter)
nsubj(telegraph, who)
acl:relcl(reporter, telegraph)
nummod(word, fifteen)
case(twenty, to)
nmod(fifteen, twenty)
nmod(fifteen, thousand)
obj(telegraph, word)
advmod(telegraph, daily)
case(newspaper, to)
det(newspaper, the)
amod(newspaper, metropolitan)
obl(daily, newspaper)
punct(year, .)
nsubj(boost, this)
root(ROOT, boost)
amod(business, local)
compound(business, telegraph)
obj(boost, business)
cc(bask, and)
nsubj(bask, Manchester)
conj(boost, bask)
case(advertising, in)
det:predet(advertising, all)
det(advertising, the)
amod(advertising, free)
obl(bask, advertising)
punct(boost, .)
case(1914, in)
obl(hurry, 1914)
mark(choose, when)
det(town, the)
nsubj:pass(choose, town)
aux:pass(choose, be)
advcl(hurry, choose)
case(tournament, for)
det(tournament, the)
compound(tournament, U.)
compound(tournament, S.)
compound(tournament, Amateur)
compound(tournament, golf)
obl(choose, tournament)
punct(hurry, ,)
det(representative, a)
nsubj(hurry, representative)
root(ROOT, hurry)
advmod(hurry, here)
case(office, from)
det(manager, the)
compound(manager, Boston)
nmod:poss(office, manager)
case(manager, 's)
obl(hurry, office)
punct(hurry, .)
case(wake, in)
nmod:poss(wake, he)
obl(come, wake)
root(ROOT, come)
det(supervisor, the)
compound(supervisor, District)
compound(supervisor, Traffic)
obj(come, supervisor)
cc(cream, and)
det(cream, the)
conj(supervisor, cream)
case(profession, of)
det(profession, the)
amod(profession, telegraphic)
nmod(cream, profession)
punct(profession, ,)
appos(profession, ten)
case(best, of)
nmod:poss(best, Boston)
case(Boston, 's)
nmod(ten, best)
punct(supervisor, ,)
acl(ten, choose)
case(experience, for)
nmod:poss(experience, they)
amod(experience, long)
obl(choose, experience)
cc(knowledge, and)
amod(knowledge, thorough)
conj(experience, knowledge)
case(golf, of)
nmod(knowledge, golf)
punct(knowledge, .)
case(tournament, during)
det(tournament, that)
obl(wing, tournament)
advmod(tournament, alone)
punct(wing, ,)
det(word, some)
nummod(word, 250,000)
nsubj(wing, word)
parataxis(come, wing)
nmod:poss(way, they)
obj(wing, way)
case(Manchester, out)
case(Manchester, of)
obl(wing, Manchester)
punct(come, .)
det(system, the)
amod(system, old)
compound(system, morse)
nsubj:pass(replace, system)
aux:pass(replace, be)
root(ROOT, replace)
advmod(replace, locally)
case(method, by)
det(method, the)
compound(method, Simplex)
amod(method, modern)
amod(method, automatic)
obl(replace, method)
case(1929, in)
obl(replace, 1929)
punct(replace, ,)
mark(manager, when)
nsubj(manager, Ellamae)
flat(Ellamae, Heckman)
punct(Wilcox, ()
appos(Ellamae, Wilcox)
punct(Wilcox, ))
cop(manager, be)
advcl(replace, manager)
case(office, of)
det(office, the)
compound(Union, Western)
compound(office, Union)
nmod(manager, office)
punct(manager, .)
case(summer, during)
obl(brisk, summer)
punct(brisk, ,)
nsubj(brisk, business)
cop(brisk, be)
advmod(brisk, so)
parataxis(replace, brisk)
mark(have, that)
nsubj(have, Mrs.)
flat(Mrs., Wilcox)
ccomp(brisk, have)
nummod(assistant, two)
obj(have, assistant)
cc(messenger, and)
det(messenger, a)
conj(assistant, messenger)
punct(replace, .)
nsubj:pass(succeed, she)
aux:pass(succeed, be)
root(ROOT, succeed)
case(clarence, by)
obl(succeed, clarence)
flat(clarence, Goyette)
punct(succeed, .)
case(time, since)
det(time, that)
obl(shift, time)
det(office, the)
compound(office, telegraph)
nsubj(shift, office)
aux(shift, have)
root(ROOT, shift)
case(location, in)
obl(shift, location)
case(station, from)
det(station, the)
compound(station, railroad)
obl(shift, station)
case(Depot, at)
det(Depot, the)
obl(shift, Depot)
cc(shop, and)
conj(Depot, shop)
case(Center, at)
det(Center, the)
nmod(Depot, Center)
advmod(shift, back)
case(office, to)
det(clerk, the)
compound(clerk, town)
nmod:poss(office, clerk)
case(clerk, 's)
obl(back, office)
cc(drugstore, and)
conj(office, drugstore)
case(Village, at)
det(Village, the)
nmod(office, Village)
punct(shift, .)
mark(locate, after)
aux:pass(locate, be)
advcl(locate, locate)
case(year, for)
det(year, some)
obl(locate, year)
case(Village, in)
det(Village, the)
nmod(year, Village)
case(pharmacy, at)
det(pharmacy, the)
compound(pharmacy, Equinox)
nmod(Village, pharmacy)
case(supervision, under)
det(supervision, the)
obl(locate, supervision)
case(Mrs., of)
nmod(supervision, Mrs.)
flat(Mrs., Harry)
flat(Mrs., Mercier)
punct(locate, ,)
nsubj:pass(locate, it)
aux:pass(locate, be)
advmod(locate, presently)
root(ROOT, locate)
case(Hill, in)
det(shop, the)
obl(locate, Hill)
cc(shop, and)
conj(Hill, Dale)
conj(Hill, shop)
punct(shop, ,)
compound(Center, Manchester)
appos(shop, Center)
punct(locate, .)
det(line, the)
compound(know, first)
amod(line, know)
compound(line, telephone)
nsubj:pass(establish, line)
case(Manchester, in)
nmod(line, Manchester)
aux:pass(establish, be)
root(ROOT, establish)
case(July, in)
obl(establish, July)
nummod(July, 1883)
case(store, between)
nmod:poss(store, Burr)
cc(manley, and)
conj(Burr, manley)
case(manley, 's)
nmod(July, store)
case(Depot, at)
compound(Depot, Manchester)
nmod(store, Depot)
cc(Company, and)
det(Company, the)
compound(Company, Kent)
cc(Company, and)
compound(Marble, Root)
compound(Company, Marble)
conj(Depot, Company)
case(Dorset, in)
compound(Dorset, South)
nmod(Company, Dorset)
punct(extend, .)
nsubj:pass(extend, this)
aux:pass(extend, be)
parataxis(establish, extend)
det(year, the)
amod(year, follow)
obl:tmod(extend, year)
mark(include, to)
advcl(extend, include)
det(agent, the)
compound(station, railroad)
compound(agent, station)
nmod:poss(office, agent)
case(agent, 's)
obj(include, office)
cc(Hotel, and)
nmod:poss(Hotel, Thayer)
case(Thayer, 's)
conj(office, Hotel)
case(Point, at)
compound(Point, factory)
nmod(Hotel, Point)
punct(establish, .)
case(November, in)
obl(extend, November)
nummod(November, 1887)
det(line, a)
nsubj:pass(extend, line)
acl(line, connect)
amod(house, several)
compound(house, dwelling)
obj(connect, house)
case(Dorset, in)
nmod(house, Dorset)
aux:pass(extend, be)
root(ROOT, extend)
case(Depot, to)
compound(Depot, Manchester)
obl(extend, Depot)
punct(extend, .)
compound(wire, Telephone)
obl(extend, wire)
case(house, from)
nmod:poss(house, Louis)
flat(Louis, Dufresne)
case(Louis, 's)
nmod(wire, house)
case(Manchester, in)
compound(Manchester, East)
nmod(house, Manchester)
case(job, to)
det(job, the)
compound(lumber, Dufresne)
compound(job, lumber)
nmod(house, job)
case(pond, near)
compound(pond, Bourn)
nmod(job, pond)
cop(up, be)
conj(extend, up)
case(1895, about)
obl(up, 1895)
punct(extend, .)
root(ROOT, eber)
flat(eber, L.)
flat(eber, Taylor)
case(Manchester, of)
nmod(Taylor, Manchester)
nsubj(record, Depot)
root(ROOT, record)
det(setting, the)
obj(record, setting)
case(pole, of)
compound(pole, phone)
nmod(setting, pole)
case(Dorset, in)
compound(Dorset, East)
nmod(pole, Dorset)
cc(Barnumville, and)
conj(Dorset, Barnumville)
case(diary, in)
nmod:poss(diary, he)
obl(record, diary)
case(1906, for)
nmod(diary, 1906)
punct(record, .)
nsubj(call, these)
aux(call, must)
aux(call, have)
cop(call, be)
case(call, for)
amod(call, local)
root(ROOT, call)
advmod(call, strictly)
punct(call, ,)
case(May, as)
case(May, in)
obl(call, May)
nummod(May, 1900)
det(telephone, the)
punct(telephone, ``)
advmod(telephone, only)
amod(telephone, long)
compound(telephone, distance)
nsubj:pass(transfer, telephone)
punct(telephone, '')
case(town, in)
nmod(telephone, town)
aux:pass(transfer, be)
conj(call, transfer)
case(Carleton, from)
obl(transfer, C.)
flat(C., B.)
flat(C., Carleton)
case(C., 's)
case(store, to)
nmod:poss(store, young)
case(young, 's)
compound(store, shoe)
obl(transfer, store)
punct(transfer, . )
det(switchboard, a)
amod(switchboard, small)
amod(switchboard, single)
nsubj:pass(install, switchboard)
aux:pass(install, be)
root(ROOT, install)
case(Village, in)
det(Village, the)
obl(install, Village)
case(store, over)
nmod:poss(store, Woodcock)
case(Woodcock, 's)
compound(store, hardware)
obl(install, store)
punct(E., ()
advmod(E., later)
appos(store, E.)
flat(E., H.)
flat(E., Hemenway)
case(E., 's)
punct(E., ))
punct(manager, .)
nsubj(manager, George)
flat(George, Woodcock)
cop(manager, be)
parataxis(install, manager)
cc(troubleshooter, and)
conj(manager, troubleshooter)
punct(manager, ;)
punct(manager, ;)
compound(Way, Elizabeth)
nsubj(operator, Way)
cop(operator, be)
det(operator, the)
amod(operator, first)
parataxis(manager, operator)
punct(operator, ;)
punct(operator, ;)
cc(employ, and)
det(operator, a)
compound(operator, night)
nsubj:pass(employ, operator)
aux:pass(employ, be)
advmod(employ, also)
conj(operator, employ)
punct(install, .)
root(ROOT, anyone)
amod(anyone, fortunate)
advmod(fortunate, enough)
mark(have, to)
advcl(fortunate, have)
obj(have, one)
case(phone, of)
det(phone, those)
amod(phone, early)
nmod(one, phone)
acl(phone, advertise)
det(fact, the)
obj(advertise, fact)
case(number, along)
case(number, with)
det(number, the)
compound(number, telephone)
nmod(fact, number)
case(Journal, in)
det(Journal, the)
compound(Journal, Manchester)
nmod(number, Journal)
punct(fortunate, .)
case(1918, in)
obl(begin, 1918)
det(Company, the)
compound(England, New)
compound(Company, England)
compound(Company, Telephone)
nsubj(begin, Company)
root(ROOT, begin)
xcomp(begin, erect)
det(building, a)
obj(erect, building)
mark(house, to)
advcl(erect, house)
nmod:poss(operation, its)
obj(house, operation)
case(corner, on)
det(corner, the)
obl(house, corner)
case(U., of)
nmod(corner, U.)
flat(U., S.)
nmod(corner, Rte.)
nummod(Rte., 7)
cc(what, and)
conj(corner, what)
cop(Avenue, be)
advmod(Avenue, now)
compound(Avenue, memorial)
acl:relcl(what, Avenue)
case(Center, at)
compound(Center, Manchester)
nmod(Avenue, Center)
punct(begin, .)
nsubj(hand, service)
acl(service, run)
case(Barnumville, through)
obl(run, Barnumville)
cc(east, and)
case(east, to)
compound(town, Bennington)
compound(town, County)
compound(east, town)
obl(run, east)
case(mountain, of)
det(mountain, the)
nmod(east, mountain)
cop(hand, be)
case(hand, in)
det(hand, the)
root(ROOT, hand)
case(Company, of)
det(Company, the)
punct(Company, ``)
compound(Company, Gleason)
compound(Company, Telephone)
nmod(hand, Company)
punct(Company, '')
case(1925, in)
nmod(hand, 1925)
punct(be, ,)
cc(be, but)
amod(supervision, major)
nsubj(be, supervision)
case(line, of)
compound(line, telephone)
nmod(supervision, line)
case(Manchester, in)
nmod(line, Manchester)
cop(hand, be)
case(Telephone, with)
det(Telephone, the)
compound(England, New)
compound(Telephone, England)
compound(Company, Telephone)
cc(Company, and)
compound(Company, telegraph)
obl(be, Company)
punct(Company, ,)
nsubj(gain, which)
advmod(gain, eventually)
acl:relcl(Company, gain)
det(control, all)
obj(gain, control)
punct(hand, .)
amod(equipment, more)
amod(equipment, aerial)
cc(underground, and)
conj(aerial, underground)
nsubj:pass(install, equipment)
aux:pass(install, be)
root(ROOT, install)
cc(improvement, as)
fixed(as, well)
fixed(as, as)
compound(improvement, office)
conj(install, improvement)
mark(take, to)
acl(improvement, take)
obj(take, care)
case(business, of)
det(business, the)
amod(business, expand)
obl(take, business)
punct(install, .)
case(1931, in)
obl(lead, 1931)
nsubj(lead, Mrs.)
flat(Mrs., F.)
flat(Mrs., H.)
flat(Mrs., Briggs)
punct(agent, ,)
appos(Mrs., agent)
cc(operator, and)
amod(operator, chief)
conj(Mrs., operator)
punct(Mrs., ,)
nsubj(be, who)
acl:relcl(Mrs., be)
mark(retire, to)
xcomp(be, retire)
case(1946, in)
obl(retire, 1946)
case(service, with)
nummod(year, thirty)
nmod:poss(service, year)
case(year, 's)
obl(retire, service)
punct(lead, ,)
root(ROOT, lead)
compound(office, agency)
obj(lead, office)
case(sale, in)
nmod(office, sale)
case(year, for)
det(year, the)
nmod(sale, year)
case($, with)
nmod(office, $)
nummod($, 2,490)
punct(lead, .)
nsubj(lead, William)
flat(William, hitchcock)
punct(William, ,)
nsubj(retire, who)
acl:relcl(William, retire)
case(1938, in)
obl(retire, 1938)
punct(veteran, ,)
cop(veteran, be)
det(veteran, a)
ccomp(retire, veteran)
case(service, of)
nummod(year, thirty)
punct(year, -)
nummod(year, four)
nmod:poss(service, year)
case(year, 's)
amod(service, local)
nmod(veteran, service)
punct(Edith, .)
det(operator, another)
amod(operator, veteran)
compound(operator, telephone)
nsubj(Edith, operator)
cop(Edith, be)
appos(service, Edith)
flat(Edith, Fleming)
flat(Edith, Blackmer)
punct(Edith, ,)
nsubj(office, who)
aux(office, have)
cop(office, be)
case(office, in)
det(office, the)
acl:relcl(Edith, office)
nummod(year, forty)
obl:tmod(office, year)
case(time, at)
det(time, the)
obl(office, time)
case(death, of)
nmod:poss(death, she)
nmod(time, death)
case(1960, in)
nmod(time, 1960)
punct(Edith, .)
case(1932, in)
obl(receive, 1932)
nsubj(receive, Dorset)
root(ROOT, receive)
nmod:poss(exchange, its)
amod(exchange, own)
obj(receive, exchange)
punct(exchange, ,)
nsubj(make, which)
acl:relcl(exchange, make)
obj(make, business)
xcomp(make, easier)
case(office, for)
det(office, the)
compound(office, Manchester)
obl(easier, office)
punct(be, ,)
cc(be, but)
nsubj(be, it)
conj(receive, be)
advmod(be, not)
case(February, until)
obl(be, February)
nummod(February, 1953)
mark(extend, that)
compound(service, area)
nsubj:pass(extend, service)
aux:pass(extend, be)
csubj(be, extend)
mark(include, to)
advcl(extend, include)
obj(include, Manchester)
cc(Dorset, and)
conj(Manchester, Dorset)
punct(receive, .)
det(toll, this)
compound(toll, eliminate)
nsubj(call, toll)
root(ROOT, call)
case(town, between)
det(town, the)
nummod(town, two)
obl(call, town)
punct(call, .)
case(month, within)
det(month, a)
obl(up, month)
punct(up, ,)
nsubj(up, call)
cop(up, be)
root(ROOT, up)
nummod(cent, seventy)
compound(cent, per)
obl:tmod(up, cent)
punct(up, .)
amod(electricity, electric)
compound(electricity, power)
nsubj(play, electricity)
root(ROOT, play)
det:predet(part, such)
det(part, a)
amod(part, important)
obj(play, part)
case(life, in)
compound(life, community)
nmod(part, life)
obl:tmod(play, today)
mark(difficult, that)
expl(difficult, it)
cop(difficult, be)
parataxis(play, difficult)
mark(envision, to)
csubj(difficult, envision)
det(time, a)
obj(envision, time)
mark(available, when)
nsubj(available, current)
cop(available, be)
advmod(available, not)
advcl(envision, available)
case(use, for)
amod(use, daily)
obl(available, use)
punct(play, .)
cc(have, yet)
nsubj(have, one)
root(ROOT, have)
mark(go, to)
xcomp(have, go)
advmod(go, back)
advmod(year, only)
det(year, some)
nummod(year, sixty)
obl:tmod(go, year)
punct(have, .)
det(mention, the)
amod(mention, first)
nsubj(seem, mention)
case(plant, of)
det(plant, a)
amod(plant, electric)
nmod(mention, plant)
case(Manchester, in)
nmod(plant, Manchester)
root(ROOT, seem)
mark(one, to)
cop(one, be)
xcomp(seem, one)
acl(one, install)
case(gristmill, in)
nmod:poss(gristmill, Reuben)
flat(Reuben, Colvin)
case(Reuben, 's)
cc(Houghton, and)
conj(Reuben, Houghton)
case(Houghton, 's)
obl(install, gristmill)
case(branch, on)
det(branch, the)
compound(branch, West)
nmod(gristmill, branch)
case(Point, in)
compound(Point, factory)
nmod(branch, Point)
punct(seem, .)
det(record, no)
nsubj(available, record)
cop(available, be)
root(ROOT, available)
case(date, as)
fixed(as, to)
det(date, the)
obl(available, date)
cc(extent, or)
conj(date, extent)
case(installation, of)
nmod(date, installation)
punct(1896, ,)
cc(1896, but)
nsubj(1896, it)
aux(1896, may)
aux(1896, have)
cop(1896, be)
case(1896, in)
conj(available, 1896)
punct(available, .)
case(June, on)
obl(report, June)
nummod(June, 14)
punct(report, ,)
nummod(June, 1900)
det(Journal, the)
compound(Journal, Manchester)
nsubj(report, Journal)
root(ROOT, report)
mark(install, that)
det(engineer, a)
amod(engineer, electrical)
nsubj(install, engineer)
aux(install, be)
ccomp(report, install)
det(plant, a)
amod(light, electric)
compound(plant, light)
obj(install, plant)
case(Edward, for)
nmod(plant, Edward)
flat(Edward, S.)
flat(Edward, Isham)
case(Edward, at)
punct(report, ``)
compound(Hill, Ormsby)
nsubj(work, Hill)
punct(Hill, '')
punct(work, .)
nsubj(work, this)
aux(work, be)
root(ROOT, work)
case(end, by)
det(end, the)
obl(work, end)
case(August, of)
nmod(end, August)
cc(give, and)
conj(work, give)
amod(service, satisfactory)
obj(give, service)
punct(work, .)
case(November, in)
obl(do, November)
nummod(November, 1900)
nsubj:pass(do, survey)
aux:pass(do, be)
root(ROOT, do)
case(John, under)
obl(do, John)
flat(John, Marsden)
case(mountain, on)
det(mountain, the)
amod(mountain, east)
obl(do, mountain)
mark(ascertain, to)
advcl(do, ascertain)
mark(possible, if)
expl(possible, it)
aux(possible, would)
cop(possible, be)
ccomp(ascertain, possible)
mark(get, to)
csubj(possible, get)
amod(water, sufficient)
obj(get, water)
cc(fall, and)
conj(water, fall)
mark(operate, to)
advcl(get, operate)
det(plant, a)
amod(plant, electric)
compound(plant, power)
obj(operate, plant)
punct(do, .)
nsubj(come, nothing)
root(ROOT, come)
case(it, of)
obl(come, it)
punct(come, ,)
advmod(lack, perhaps)
case(lack, due)
fixed(due, to)
obl(come, lack)
case(opportunity, of)
nmod(lack, opportunity)
case(storage, for)
compound(storage, water)
nmod(opportunity, storage)
punct(come, .)
det(step, the)
amod(step, next)
nsubj(construction, step)
cop(construction, be)
root(ROOT, construction)
case(Light, by)
det(Light, the)
compound(Light, Manchester)
nmod(construction, Light)
cc(Company, and)
compound(Company, Power)
conj(Light, Company)
case(plant, of)
det(plant, a)
nmod(Company, plant)
case(bank, on)
det(bank, the)
amod(bank, west)
nmod(plant, bank)
case(bridge, of)
det(bridge, the)
nmod(bank, Battenkill)
amod(bridge, south)
case(Union, of)
compound(Street, Union)
compound(bridge, Street)
nmod(bank, bridge)
punct(construction, .)
nsubj:pass(complete, this)
aux:pass(complete, be)
advmod(complete, nearly)
parataxis(construction, complete)
obl:tmod(complete, May)
nummod(May, 23)
punct(May, ,)
nummod(May, 1901)
case(promise, with)
det(promise, a)
obl(complete, promise)
case(light, of)
nmod(promise, light)
case(June, by)
nmod(promise, June)
nummod(June, 10)
punct(go, ,)
cc(go, but)
det(light, the)
amod(light, first)
nsubj(go, light)
aux(go, do)
advmod(go, not)
conj(complete, go)
advmod(go, on)
case(September, until)
obl(go, September)
nummod(September, 28)
punct(construction, .)
nsubj(be, it)
root(ROOT, be)
case(end, at)
det(end, the)
obl(be, end)
case(sidewalk, of)
det(sidewalk, the)
nmod(end, sidewalk)
case(front, in)
nmod(end, front)
case(cottage, of)
det(cottage, the)
compound(Cemetery, Dellwood)
compound(cottage, Cemetery)
nmod(front, cottage)
punct(end, .)
det(director, the)
amod(director, first)
nsubj(John, director)
case(Light, of)
det(Light, the)
compound(Light, Manchester)
nmod(director, Light)
cc(Company, and)
compound(Company, Power)
conj(Light, Company)
cop(John, be)
root(ROOT, John)
flat(John, Marsden)
punct(M., ,)
conj(John, M.)
flat(M., L.)
flat(M., manley)
punct(William, ,)
conj(John, William)
flat(William, F.)
flat(William, Orvis)
punct(George, ,)
conj(John, George)
flat(George, Smith)
punct(John, ,)
cc(John, and)
conj(John, John)
flat(John, Blackmer)
punct(John, .)
det(officer, the)
nsubj(John, officer)
cop(John, be)
root(ROOT, John)
flat(John, Marsden)
punct(John, ,)
list(John, president)
punct(John, ;)
punct(John, ;)
nsubj(manager, John)
flat(John, C.)
flat(John, Blackmer)
punct(John, ,)
compound(president, vice)
punct(president, -)
appos(John, president)
punct(John, ;)
punct(John, ;)
conj(John, George)
flat(George, Smith)
punct(George, ,)
appos(George, treasurer)
punct(George, ;)
punct(George, ;)
cc(William, and)
conj(George, William)
flat(William, F.)
flat(William, Orvis)
punct(William, ,)
appos(William, secretary)
punct(manager, .)
nsubj(manager, Marsden)
cop(manager, be)
root(ROOT, manager)
case(company, of)
det(company, the)
nmod(manager, company)
case(year, for)
nummod(year, ten)
obl(manager, year)
cc(manager, and)
conj(year, manager)
case(company, of)
nmod:poss(company, its)
compound(company, successor)
nmod(manager, company)
punct(company, ,)
det(Company, the)
compound(Light, colonial)
compound(Company, Light)
cc(Power, and)
conj(Light, Power)
appos(company, Company)
punct(Company, ,)
case(year, for)
nummod(year, one)
obl(manager, year)
punct(manager, .)
case(time, at)
case(time, about)
det(time, the)
obl(start, time)
det(Marsden, the)
nsubj(get, Marsden)
flat(Marsden, enterprise)
aux(get, be)
acl:relcl(time, get)
case(way, under)
obl(get, way)
punct(start, ,)
det(Company, the)
compound(Light, vail)
compound(Company, Light)
cc(lumber, and)
conj(Light, lumber)
nsubj(start, Company)
root(ROOT, start)
obj(start, construction)
case(factory, of)
det(factory, a)
compound(factory, chair)
compound(factory, stock)
nmod(construction, factory)
case(site, on)
det(site, the)
nmod(factory, site)
case(Creamery, of)
det(Creamery, the)
amod(Creamery, present)
compound(Creamery, Bennington)
compound(Creamery, co-operative)
nmod(site, Creamery)
punct(intend, ,)
acl(Creamery, intend)
mark(use, to)
xcomp(intend, use)
nmod:poss(power, its)
compound(power, surplus)
obj(use, power)
mark(generate, for)
advcl(use, generate)
obj(generate, electricity)
punct(have, .)
nsubj(have, Manchester)
advmod(have, then)
parataxis(use, have)
nummod(company, two)
xcomp(have, compete)
compound(company, power)
obj(compete, company)
case(1904, until)
obl(compete, 1904)
punct(have, ,)
mark(purchase, when)
det(Light, the)
compound(Light, Manchester)
nsubj(purchase, Light)
cc(Company, and)
compound(Company, Power)
nsubj(purchase, Company)
advcl(have, purchase)
det(system, the)
compound(system, transmission)
obj(purchase, system)
case(Company, of)
det(Company, the)
compound(Company, vail)
nmod(system, Company)
punct(fortunate, .)
nsubj(fortunate, this)
cop(fortunate, be)
parataxis(purchase, fortunate)
punct(fortunate, ,)
mark(burn, as)
det(plant, the)
compound(plant, vail)
nsubj(burn, plant)
advcl(fortunate, burn)
case(1905, in)
obl(burn, 1905)
punct(fortunate, .)
det(Company, the)
compound(Light, colonial)
nsubj:pass(succeed, Light)
cc(Company, and)
compound(Company, Power)
conj(Light, Company)
aux:pass(succeed, be)
root(ROOT, succeed)
case(Corporation, by)
det(Corporation, the)
compound(Corporation, Vermont)
compound(electric, Hydro)
punct(electric, -)
compound(Corporation, electric)
obl(succeed, Corporation)
punct(Corporation, ,)
nsubj:pass(absorb, which)
case(turn, in)
obl(absorb, turn)
aux:pass(absorb, be)
acl:relcl(Corporation, absorb)
case(Corporation, by)
det(Corporation, the)
compound(Corporation, Central)
compound(Corporation, Vermont)
compound(Service, Public)
compound(Corporation, Service)
obl(absorb, Corporation)
punct(succeed, .)
det(latter, the)
nsubj(furnish, latter)
advmod(furnish, now)
root(ROOT, furnish)
det(area, the)
obj(furnish, area)
case(electricity, with)
nmod(area, electricity)
acl(area, distribute)
case(sub-station, from)
det(sub-station, a)
amod(sub-station, modern)
obl(distribute, sub-station)
case(Depot, at)
compound(Depot, Manchester)
nmod(sub-station, Depot)
nsubj:pass(put, which)
aux:pass(put, be)
acl:relcl(sub-station, put)
case(operation, into)
obl(put, operation)
obl:tmod(put, February)
nummod(February, 19)
punct(February, ,)
nummod(February, 1930)
cc(improve, and)
aux:pass(improve, be)
conj(put, improve)
case(January, in)
obl(improve, January)
nummod(January, 1942)
case(installation, by)
det(installation, the)
obl(improve, installation)
case(transformer, of)
amod(transformer, larger)
nmod(installation, transformer)
punct(furnish, .)
case(time, for)
det(time, a)
obl(bring, time)
case(abandonment, follow)
det(abandonment, the)
nmod(time, abandonment)
case(plant, of)
det(plant, the)
amod(plant, local)
nmod(abandonment, plant)
punct(bring, ,)
amod(current, electric)
nsubj:pass(bring, current)
case(Manchester, for)
nmod(current, Manchester)
aux:pass(bring, be)
root(ROOT, bring)
advmod(bring, in)
case(south, from)
det(south, the)
obl(bring, south)
case(in, with)
det(in, a)
compound(in, emergency)
compound(in, tie)
punct(in, -)
obl(bring, in)
case(system, with)
det(system, the)
compound(Company, Vermont)
compound(Company, Marble)
compound(system, Company)
obl(in, system)
case(north, to)
det(north, the)
nmod(system, north)
punct(bring, .)
nsubj(treat, some)
nsubj(write, who)
aux(write, have)
acl:relcl(some, write)
case(utopia, on)
obl(write, utopia)
aux(treat, have)
ccomp(worth, treat)
obj(treat, it)
case(diversion, as)
punct(diversion, ``)
det(diversion, a)
amod(diversion, learn)
obl(treat, diversion)
case(world, of)
det(world, a)
amod(world, learn)
nmod(diversion, world)
punct(diversion, '')
punct(phantasy, ,)
punct(phantasy, ``)
det(phantasy, a)
appos(diversion, phantasy)
case(which, with)
obl(amused, which)
advmod(amused, more)
acl:relcl(phantasy, amused)
obj(amused, himself)
punct(amused, '')
punct(work, ,)
punct(work, ``)
det(work, a)
compound(work, holiday)
appos(phantasy, work)
punct(work, ,)
det(overflow, a)
amod(overflow, spontaneous)
conj(work, overflow)
case(spirit, of)
amod(spirit, intellectual)
amod(spirit, high)
nmod(overflow, spirit)
punct(revel, ,)
det(revel, a)
conj(work, revel)
case(debate, of)
nmod(revel, debate)
punct(paradox, ,)
conj(debate, paradox)
punct(comedy, ,)
conj(debate, comedy)
cc(invention, and)
conj(debate, invention)
punct(invention, '')
punct(revel, .)
case(respect, with)
nmod(revel, respect)
case(view, to)
det(view, this)
nmod(respect, view)
punct(worth, ,)
nummod(point, two)
nsubj(worth, point)
cop(worth, be)
root(ROOT, worth)
advcl(worth, make)
punct(worth, .)
advmod(appear, first)
punct(appear, ,)
expl(appear, it)
root(ROOT, appear)
mark(base, to)
aux:pass(base, be)
xcomp(appear, base)
case(fact, on)
det(fact, the)
obl(base, fact)
mark(describe, that)
case(page, on)
nmod:poss(utopia, it)
case(it, 's)
compound(page, title)
compound(utopia, page)
nsubj:pass(describe, utopia)
aux:pass(describe, be)
acl(fact, describe)
case(festivus, as)
punct(festivus, ``)
obl(describe, festivus)
punct(festivus, '')
punct(gay, ,)
punct(gay, ``)
xcomp(describe, gay)
punct(gay, '')
punct(appear, .)
nsubj(overlook, it)
root(ROOT, overlook)
det(fact, the)
amod(fact, other)
obj(overlook, fact)
mark(describe, that)
nsubj:pass(describe, it)
aux:pass(describe, be)
acl(fact, describe)
obl(describe, as)
punct(overlook, ``)
compound(festivus, Nec)
advmod(festivus, minus)
compound(festivus, salutaris)
compound(festivus, quam)
root(ROOT, festivus)
punct(festivus, '')
punct(festivus, ,)
punct(salutary, ``)
advmod(less, no)
advmod(salutary, less)
parataxis(festivus, salutary)
case(gay, than)
obl(salutary, gay)
punct(salutary, '')
punct(salutary, .)
nsubj(overlook, it)
advmod(overlook, also)
root(ROOT, overlook)
det(fact, the)
obj(overlook, fact)
mark(lexicon, that)
case(lexicon, in)
det(lexicon, a)
amod(lexicon, rational)
obl(gay, lexicon)
punct(gay, ,)
cc(gay, and)
advmod(clearly, quite)
advmod(lexicon, clearly)
case(lexicon, in)
nmod:poss(lexicon, more)
case(more, 's)
obl(gay, lexicon)
punct(gay, ,)
det(opposite, the)
nsubj(gay, opposite)
case(serious, of)
nmod(opposite, serious)
cop(gay, be)
advmod(gay, not)
acl(fact, gay)
cc(frivolous, but)
conj(gay, frivolous)
punct(serious, ,)
cc(serious, and)
det(opposite, the)
nsubj(serious, opposite)
case(gay, of)
nmod(opposite, gay)
cop(serious, be)
advmod(serious, not)
conj(gay, serious)
cc(solemn, but)
conj(serious, solemn)
punct(overlook, .)
advmod(believe, more)
root(ROOT, believe)
mark(serious, that)
det(man, a)
nsubj(serious, man)
aux(serious, could)
cop(serious, be)
advmod(serious, both)
ccomp(believe, serious)
cc(gay, and)
conj(serious, gay)
punct(believe, .)
mark(illusion, that)
det(writer, a)
nsubj(illusion, writer)
nsubj(gay, who)
cop(gay, be)
acl:relcl(writer, gay)
aux(serious, can)
advmod(serious, not)
cop(serious, be)
ccomp(gay, serious)
cop(illusion, be)
det(illusion, a)
amod(illusion, common)
amod(illusion, professional)
root(ROOT, illusion)
punct(illusion, ,)
advmod(foster, sedulously)
advcl(illusion, foster)
case(academics, by)
det(academics, all)
advmod(many, too)
amod(academics, many)
obl(foster, academics)
nsubj(believe, who)
advmod(believe, mistakenly)
acl:relcl(academics, believe)
mark(take, that)
nmod:poss(effort, they)
amod(effort, frivolous)
nsubj:pass(take, effort)
aux(take, should)
aux:pass(take, be)
ccomp(believe, take)
advmod(take, seriously)
mark(express, because)
nsubj:pass(express, they)
aux:pass(express, be)
advcl(take, express)
case(solemnity, with)
det(solemnity, that)
amod(solemnity, dreary)
obl(express, solemnity)
nsubj(mode, which)
cop(mode, be)
det(mode, the)
amod(mode, only)
acl:relcl(solemnity, mode)
case(expression, of)
nmod(mode, expression)
nmod:poss(author, they)
nsubj(capable, author)
cop(capable, be)
acl:relcl(mode, capable)
obl(capable, of)
punct(capable, .)
advmod(find, secondly)
punct(require, ,)
mark(find, to)
advcl(require, find)
det(diversion, a)
amod(diversion, learn)
obj(find, diversion)
cc(joke, and)
det(joke, a)
amod(joke, pleasing)
conj(diversion, joke)
case(account, in)
nmod:poss(account, more)
case(more, 's)
nmod(joke, account)
case(brutality, of)
det(brutality, the)
amod(brutality, stupid)
nmod(account, brutality)
case(war, of)
amod(war, early)
amod(century, sixteenth)
compound(war, century)
nmod(brutality, war)
punct(anguish, ,)
case(anguish, of)
det(anguish, the)
nmod(war, anguish)
case(poor, of)
det(poor, the)
nmod(anguish, poor)
cc(dispossessed, and)
conj(poor, dispossessed)
punct(insolence, ,)
case(insolence, of)
det(insolence, the)
obl(require, insolence)
cc(cruelty, and)
conj(insolence, cruelty)
case(rich, of)
det(rich, the)
nmod(insolence, rich)
cc(powerful, and)
conj(rich, powerful)
root(ROOT, require)
det(callousness, a)
obj(require, callousness)
case(suffering, toward)
nmod(callousness, suffering)
cc(sin, and)
conj(suffering, sin)
nsubj(surprising, that)
aux(surprising, would)
cop(surprising, be)
acl:relcl(callousness, surprising)
case(imbecile, in)
det(imbecile, a)
amod(imbecile, moral)
obl(surprising, imbecile)
cc(surprising, and)
advmod(surprising, most)
conj(imbecile, surprising)
case(himself, in)
amod(himself, more)
obl(surprising, himself)
punct(require, .)
advmod(surprising, indeed)
punct(surprising, ,)
nsubj(surprising, it)
cop(surprising, be)
advmod(surprising, even)
root(ROOT, surprising)
case(Canon, in)
det(Canon, the)
obl(surprising, Canon)
case(Church, of)
compound(Church, Christ)
nmod(Canon, Church)
cc(Professor, and)
compound(Professor, Regius)
conj(Church, Professor)
case(history, of)
compound(history, Ecclesiastical)
nmod(Professor, history)
punct(Canon, ,)
nsubj(father, who)
acl:relcl(Canon, father)
det(view, this)
advmod(peculiar, most)
amod(view, peculiar)
obj(father, view)
punct(Professor, ,)
cc(Professor, and)
case(Professor, in)
det(Professor, the)
amod(Professor, brilliant)
conj(view, Professor)
case(medieval, of)
nmod(Professor, medieval)
cc(English, and)
compound(English, Renaissance)
conj(medieval, English)
case(Cambridge, at)
nmod(English, Cambridge)
punct(Cambridge, ,)
nsubj(inherite, who)
acl:relcl(Professor, inherite)
obj(inherite, it)
cc(proponent, and)
cop(proponent, be)
advmod(proponent, now)
nmod:poss(proponent, its)
advmod(eminent, most)
amod(proponent, eminent)
conj(inherite, proponent)
punct(surprising, .)
cc(doubtful, but)
mark(return, to)
advcl(doubtful, return)
case(line, to)
det(line, the)
amod(line, main)
obl(return, line)
case(inquiry, of)
nmod:poss(inquiry, we)
nmod(line, inquiry)
punct(doubtful, ,)
nsubj(doubtful, it)
cop(doubtful, be)
root(ROOT, doubtful)
mark(read, that)
nsubj:pass(read, utopia)
aux:pass(read, be)
advmod(read, still)
advmod(read, widely)
ccomp(doubtful, read)
mark(medieval, because)
nsubj(medieval, more)
cop(medieval, be)
advcl(read, medieval)
cc(martyr, or)
advmod(martyr, even)
mark(martyr, because)
nsubj(martyr, he)
cop(martyr, be)
det(martyr, a)
conj(medieval, martyr)
punct(likely, --)
advmod(likely, indeed)
punct(likely, ,)
nsubj(likely, it)
cop(likely, be)
conj(doubtful, likely)
mark(know, that)
det(day, these)
obl:tmod(know, day)
nsubj(know, many)
nsubj(read, who)
acl:relcl(many, read)
obj(read, utopia)
case(interest, with)
obl(read, interest)
aux(know, do)
advmod(know, not)
advmod(know, even)
ccomp(likely, know)
mark(martyr, that)
nmod:poss(author, it)
case(it, 's)
nsubj(martyr, author)
cop(martyr, be)
det(martyr, a)
ccomp(know, martyr)
punct(doubtful, .)
nsubj:pass(read, utopia)
aux:pass(read, be)
advmod(read, still)
advmod(read, widely)
root(ROOT, read)
mark(stand, because)
case(sense, in)
det(sense, a)
obl(stand, sense)
advmod(stand, more)
advcl(read, stand)
case(margin, on)
det(margin, the)
obl(stand, margin)
case(modernity, of)
nmod(margin, modernity)
punct(read, .)
cc(be, and)
mark(stand, if)
nsubj(stand, he)
aux(stand, do)
advcl(be, stand)
case(margin, on)
det(margin, the)
obl(stand, margin)
case(modernity, of)
nmod(margin, modernity)
punct(be, ,)
nsubj(be, it)
root(ROOT, be)
advmod(be, not)
mark(die, in)
advcl(be, die)
det(martyr, a)
obj(die, martyr)
case(unity, for)
amod(unity, such)
obl(die, unity)
mark(able, as)
compound(supremacy, Papal)
nsubj(able, supremacy)
aux(able, might)
cop(able, be)
advcl(die, able)
mark(force, to)
xcomp(able, force)
case(Christendom, on)
compound(Christendom, Western)
obl(force, Christendom)
punct(be, .)
nsubj(be, it)
root(ROOT, be)
advmod(be, not)
advmod(be, even)
case(epigram, in)
amod(epigram, writing)
amod(epigram, latin)
obl(be, epigram)
punct(one, ,)
advmod(one, sometimes)
amod(one, bawdy)
conj(epigram, one)
punct(translating, ,)
cc(translating, or)
mark(translating, in)
conj(epigram, translating)
obj(translating, lucian)
case(Greek, from)
obl(translating, Greek)
case(Latin, into)
obl(translating, Latin)
cc(defend, or)
mark(defend, in)
conj(translating, defend)
det(study, the)
obj(defend, study)
case(Greek, of)
nmod(study, Greek)
case(attack, against)
det(attack, the)
nmod(study, attack)
case(academics, of)
amod(academics, conservative)
nmod(attack, academics)
punct(attack, ,)
cc(attack, or)
mark(attack, in)
conj(defend, attack)
det(theologian, the)
amod(theologian, conservative)
obj(attack, theologian)
nsubj(oppose, who)
acl:relcl(theologian, oppose)
nmod:poss(study, Erasmus)
case(Erasmus, 's)
amod(study, philological)
obj(oppose, study)
case(testament, of)
det(testament, the)
compound(testament, New)
nmod(study, testament)
punct(oppose, .)
amod(exercise, Similar)
amod(exercise, literary)
nsubj(doing, exercise)
cop(doing, be)
det(doing, the)
amod(doing, common)
parataxis(be, doing)
case(humanist, of)
det(humanist, a)
compound(humanist, Christian)
nmod(doing, humanist)
case(decade, of)
det(decade, the)
amod(decade, first)
nummod(decade, two)
nmod(humanist, decade)
case(century, of)
det(century, the)
amod(century, sixteenth)
nmod(decade, century)
punct(be, .)
root(ROOT, have)
nmod:poss(writings, more)
case(more, 's)
obj(have, writings)
aux:pass(limit, be)
advmod(limit, wholly)
ccomp(have, limit)
case(exercise, to)
amod(exercise, such)
obl(limit, exercise)
punct(have, ,)
nsubj:pass(remember, they)
aux(remember, would)
aux:pass(remember, be)
advmod(as, almost)
advmod(dimly, as)
advmod(remember, dimly)
parataxis(have, remember)
case(those, as)
obl(remember, those)
case(dozen, of)
det(dozen, a)
nmod(those, dozen)
cc(author, or)
advmod(author, so)
amod(author, other)
nmod(those, author)
acl(author, live)
case(time, in)
nmod:poss(time, he)
obl(live, time)
punct(survive, ,)
nmod:poss(work, whose)
nsubj(survive, work)
advmod(survive, tenuously)
acl:relcl(author, survive)
case(mind, in)
det(mind, the)
obl(survive, mind)
case(scholar, of)
det(scholar, the)
amod(scholar, few)
nummod(scholar, hundred)
nmod(mind, scholar)
obj(read, who)
det(decade, each)
nmod:npmod(pursuit, decade)
case(pursuit, in)
obl(read, pursuit)
case(occasion, of)
nmod:poss(occasion, they)
advmod(specialize, very)
amod(occasion, specialize)
nmod(pursuit, occasion)
acl:relcl(scholar, read)
det(work, those)
obj(read, work)
punct(have, .)
advmod(stand, more)
root(ROOT, stand)
case(margin, on)
det(margin, the)
obl(stand, margin)
case(modernity, of)
nmod(margin, modernity)
case(reason, for)
nummod(reason, one)
obl(stand, reason)
advmod(reason, alone)
punct(stand, --)
mark(write, because)
nsubj(write, he)
advcl(stand, write)
obj(write, utopia)
punct(stand, .)
cc(stand, and)
det(evidence, the)
nsubj(stand, evidence)
mark(do, that)
nsubj(do, he)
acl:relcl(evidence, do)
punct(stand, ,)
advmod(stand, indeed)
punct(stand, ,)
root(ROOT, stand)
expl(derive, there)
ccomp(stand, derive)
advmod(simply, quite)
advmod(derive, simply)
case(interest, from)
det(interest, the)
amod(interest, vigorous)
obl(derive, interest)
case(which, with)
obl(respond, which)
advmod(reader, rather)
amod(reader, casual)
nsubj(respond, reader)
aux(respond, have)
acl:relcl(interest, respond)
case(book, to)
det(book, that)
obl(respond, book)
case(century, for)
det(century, the)
amod(century, past)
obl(respond, century)
cc(so, or)
conj(century, so)
punct(so, .)
advmod(contemporary, only)
nummod(contemporary, one)
amod(contemporary, other)
nsubj(evoke, contemporary)
case(more, of)
obl(evoke, more)
case(more, 's)
ccomp(so, evoke)
advmod(immediate, so)
xcomp(evoke, immediate)
cc(direct, and)
conj(evoke, direct)
det(response, a)
obj(direct, response)
punct(work, ,)
cc(work, and)
advmod(work, only)
nummod(work, one)
amod(work, other)
amod(work, contemporary)
conj(response, work)
punct(work, --)
appos(work, Niccolo)
flat(Niccolo, Machiavelli)
cc(Prince, and)
det(Prince, the)
conj(Niccolo, Prince)
punct(stand, .)
aux(discover, can)
nsubj(discover, we)
root(ROOT, discover)
ccomp(discover, what)
nsubj(utopia, it)
cop(utopia, be)
case(utopia, in)
ccomp(discover, utopia)
nsubj(evok, that)
aux(evok, have)
acl:relcl(utopia, evok)
det(response, this)
obj(evok, response)
punct(discover, ?)
punct(discover, ?)
root(ROOT, remember)
mark(deny, that)
mark(seek, in)
advcl(deny, seek)
det(modern, the)
obj(seek, modern)
case(utopia, in)
obl(seek, utopia)
nsubj(deny, we)
aux(deny, do)
advmod(deny, not)
ccomp(remember, deny)
det(existence, the)
obj(deny, existence)
case(medieval, of)
det(medieval, the)
nmod(existence, medieval)
cc(Renaissance, and)
det(Renaissance, the)
conj(medieval, Renaissance)
advmod(Renaissance, there)
punct(deny, ;)
punct(remember, ;)
nsubj(need, we)
aux(need, do)
advmod(need, not)
advmod(need, even)
parataxis(deny, need)
mark(commit, to)
xcomp(need, commit)
obj(commit, ourselves)
mark(assess, to)
advcl(commit, assess)
case(scale, on)
det(scale, the)
amod(scale, same)
amod(scale, inconceivable)
obl(assess, scale)
det(importance, the)
amod(importance, relative)
appos(scale, importance)
case(medieval, of)
det(medieval, the)
nmod(importance, medieval)
punct(Renaissance, ,)
det(Renaissance, the)
conj(medieval, Renaissance)
punct(modern, ,)
cc(modern, and)
det(modern, the)
conj(medieval, modern)
punct(remember, .)
det(medieval, the)
nsubj(important, medieval)
cop(important, be)
det(important, the)
advmod(important, most)
root(ROOT, important)
case(chamber, to)
obl(important, chamber)
mark(seek, because)
nsubj(seek, he)
advcl(important, seek)
mark(place, to)
xcomp(seek, place)
obj(place, Thomas)
obj(place, more)
punct(Thomas, ,)
det(author, the)
appos(Thomas, author)
case(utopia, of)
nmod(author, utopia)
punct(place, ,)
case(relation, in)
det(relation, some)
amod(relation, intelligible)
obl(place, relation)
case(St., with)
nmod(relation, St.)
flat(St., Thomas)
amod(St., more)
punct(martyr, ,)
det(martyr, the)
appos(St., martyr)
punct(important, .)
case(other, to)
obl(concern, other)
nmod:poss(concern, whose)
nsubj(be, concern)
nsubj(be, it)
acl:relcl(other, be)
mark(penetrate, to)
ccomp(be, penetrate)
det(significance, the)
obj(penetrate, significance)
case(Humanism, of)
compound(Humanism, Christian)
nmod(significance, Humanism)
punct(concern, ,)
det(element, the)
compound(element, Renaissance)
nsubj(concern, element)
cop(concern, be)
case(concern, of)
amod(concern, primary)
root(ROOT, concern)
punct(concern, .)
cc(have, but)
advmod(have, here)
nsubj(have, we)
root(ROOT, have)
det(preoccupation, a)
advmod(modern, distinctly)
amod(preoccupation, modern)
obj(have, preoccupation)
punct(have, ;)
punct(have, ;)
nsubj(want, we)
parataxis(have, want)
mark(know, to)
xcomp(want, know)
advmod(keep, why)
det(book, that)
nsubj(keep, book)
aux(keep, have)
ccomp(know, keep)
mark(sell, on)
advcl(keep, sell)
det(way, the)
obj(sell, way)
nsubj(have, it)
acl:relcl(way, have)
punct(have, ;)
punct(have, ;)
nsubj(want, we)
parataxis(have, want)
mark(know, to)
xcomp(want, know)
nsubj(new, what)
cop(new, be)
advmod(new, perennially)
ccomp(know, new)
case(utopia, about)
obl(new, utopia)
punct(have, .)
nsubj(new, what)
cop(new, be)
parataxis(simple, new)
case(it, about)
obl(new, it)
punct(new, ?)
punct(new, ?)
case(question, to)
det(question, that)
obl(simple, question)
det(answer, the)
nsubj(simple, answer)
cop(simple, be)
root(ROOT, simple)
punct(simple, ;)
punct(simple, ;)
nsubj:pass(make, it)
aux(make, can)
aux:pass(make, be)
parataxis(simple, make)
case(word, in)
nummod(word, two)
obl(make, word)
punct(word, ,)
amod(communism, utopian)
conj(word, communism)
punct(simple, .)
cc(answer, but)
nsubj(answer, it)
cop(answer, be)
det(answer, a)
root(ROOT, answer)
nsubj(open, which)
acl:relcl(answer, open)
det(door, the)
obj(open, door)
advmod(open, wide)
case(onrush, to)
det(onrush, a)
obl(open, onrush)
case(objection, of)
nmod(onrush, objection)
cc(denial, and)
conj(objection, denial)
punct(answer, .)
advmod(be, surely)
expl(be, there)
root(ROOT, be)
nsubj(be, nothing)
amod(nothing, new)
case(communism, about)
obl(new, communism)
punct(be, .)
nsubj(find, we)
root(ROOT, find)
obj(find, it)
case(Republic, in)
nmod:poss(Republic, Plato)
case(Plato, 's)
obl(find, Republic)
punct(acknowledge, ,)
cc(acknowledge, and)
case(utopia, in)
obl(acknowledge, utopia)
advmod(acknowledge, more)
conj(find, acknowledge)
nmod:poss(debt, he)
obj(acknowledge, debt)
case(book, to)
det(book, that)
obl(acknowledge, book)
punct(find, .)
nsubj(find, we)
root(ROOT, find)
obj(find, it)
case(way, in)
det(way, that)
punct(way, ``)
amod(way, common)
obl(find, way)
case(life, of)
nmod(way, life)
amod(way, pleasing)
case(Christ, to)
obl(pleasing, Christ)
cc(use, and)
advmod(use, still)
case(use, in)
conj(way, use)
case(society, among)
det(society, the)
amod(society, truest)
nmod(use, society)
case(Christians, of)
nmod(society, Christians)
punct(society, '')
punct(find, ,)
nsubj(monastery, that)
cop(monastery, be)
punct(monastery, ,)
det(monastery, the)
amod(monastery, better)
parataxis(find, monastery)
nsubj(make, which)
acl:relcl(monastery, make)
obj(make, it)
xcomp(make, easier)
mark(convert, to)
advcl(easier, convert)
det(Utopians, the)
obj(convert, Utopians)
case(Christianity, to)
obl(convert, Christianity)
punct(find, .)
nsubj(find, we)
root(ROOT, find)
obj(find, it)
case(conception, in)
det(conception, the)
amod(conception, later)
amod(conception, Stoic)
obl(find, conception)
case(condition, of)
nmod:poss(condition, man)
case(man, 's)
amod(condition, natural)
nmod(conception, condition)
nsubj(include, which)
acl:relcl(condition, include)
det(community, the)
obj(include, community)
case(possession, of)
det(possession, all)
nmod(community, possession)
punct(find, .)
det(conception, this)
nsubj:pass(take, conception)
aux:pass(take, be)
root(ROOT, take)
compound:prt(take, up)
case(Fathers, by)
det(Fathers, the)
amod(Fathers, early)
compound(Fathers, Church)
obl(take, Fathers)
cc(lawyer, and)
case(lawyer, by)
compound(lawyer, canon)
conj(Fathers, lawyer)
cc(theologian, and)
conj(lawyer, theologian)
case(Ages, in)
det(Ages, the)
compound(Ages, Middle)
nmod(lawyer, Ages)
punct(take, ;)
punct(take, ;)
cc(read, and)
nsubj:pass(read, more)
aux:pass(read, be)
advmod(read, far)
advmod(well, too)
advmod(read, well)
conj(take, read)
advmod(come, not)
mark(come, to)
aux(come, have)
xcomp(read, come)
case(it, across)
obl(come, it)
case(one, in)
obl(come, one)
cc(several, or)
conj(one, several)
case(form, of)
det(form, the)
nmod(one, form)
advmod(give, thus)
acl(form, give)
obj(give, it)
punct(take, .)
cc(communism, but)
mark(old, although)
det(idea, the)
nsubj(old, idea)
case(communism, of)
nmod(idea, communism)
cop(old, be)
advmod(old, very)
advcl(communism, old)
advmod(day, even)
case(day, in)
nmod:poss(day, more)
case(more, 's)
obl(old, day)
cc(spring, and)
aux(spring, do)
advmod(spring, not)
conj(old, spring)
amod(clad, full)
punct(clad, -)
xcomp(spring, clad)
case(imagination, from)
nmod:poss(imagination, he)
obl(clad, imagination)
case(1515, in)
nmod(imagination, 1515)
punct(communism, ,)
nsubj(communism, it)
cop(communism, be)
advmod(communism, not)
root(ROOT, communism)
mark(concerned, as)
mark(concerned, such)
fixed(such, that)
nsubj(concerned, we)
cop(concerned, be)
advcl(communism, concerned)
obl(concerned, with)
punct(communism, .)
nsubj(concerned, we)
cop(concerned, be)
root(ROOT, concerned)
advmod(communism, not)
case(communism, with)
det(communism, the)
compound(communism, genus)
obl(concerned, communism)
cc(species, nor)
case(species, with)
amod(species, other)
conj(communism, species)
case(genus, of)
det(genus, the)
nmod(species, genus)
punct(concerned, :)
amod(communism, Platonic)
punct(Stoic, ,)
conj(Platonic, Stoic)
punct(christian, ,)
conj(christian, early)
amod(communism, christian)
punct(monastic, ,)
conj(christian, monastic)
punct(canonist, ,)
conj(christian, canonist)
cc(theological, or)
conj(christian, theological)
root(ROOT, communism)
punct(communism, ;)
punct(communism, ;)
nsubj(concerned, we)
cop(concerned, be)
parataxis(communism, concerned)
case(communism, with)
amod(communism, utopian)
obl(concerned, communism)
punct(communism, --)
nsubj(communism, that)
cop(communism, be)
punct(communism, ,)
advmod(communism, simply)
acl:relcl(communism, communism)
mark(appear, as)
nsubj(appear, it)
advcl(communism, appear)
case(commonwealth, in)
det(commonwealth, the)
amod(commonwealth, imaginary)
obl(appear, commonwealth)
case(utopia, of)
nmod(commonwealth, utopia)
punct(appear, ,)
mark(conceive, as)
advmod(conceive, more)
advcl(appear, conceive)
obj(conceive, it)
punct(communism, .)
advmod(be, perhaps)
nummod(way, one)
nsubj(be, way)
mark(sharpen, to)
acl(way, sharpen)
nmod:poss(sense, we)
obj(sharpen, sense)
case(modernity, of)
det(modernity, the)
nmod(sense, modernity)
case(communism, of)
amod(communism, utopian)
nmod(modernity, communism)
root(ROOT, be)
mark(contrast, to)
ccomp(be, contrast)
obj(contrast, it)
case(type, with)
det(type, the)
amod(type, principal)
amod(type, earlier)
obl(contrast, type)
case(theory, of)
amod(theory, communistic)
nmod(type, theory)
punct(be, .)
nsubj(achieve, we)
aux(achieve, will)
root(ROOT, achieve)
det(sense, a)
advmod(vivid, more)
amod(sense, vivid)
obj(achieve, sense)
case(what, of)
nmod(sense, what)
nsubj(be, it)
acl:relcl(what, be)
mark(realize, by)
acl:relcl(what, realize)
obj(realize, what)
nsubj(be, it)
cop(what, be)
advmod(be, not)
punct(achieve, .)
case(Republic, in)
nmod:poss(communism, Plato)
case(Plato, 's)
compound(communism, Republic)
nsubj(be, communism)
root(ROOT, be)
punct(be, --)
mark(speak, to)
ccomp(be, speak)
advmod(speak, anachronistically)
punct(communism, --)
det(communism, a)
parataxis(speak, communism)
case(Janissaries, of)
nmod(communism, Janissaries)
punct(be, .)
nmod:poss(function, its)
nsubj(be, function)
root(ROOT, be)
mark(separate, to)
ccomp(be, separate)
case(mass, from)
det(mass, the)
compound(rule, base)
amod(mass, rule)
obl(separate, mass)
punct(mass, ,)
case(whom, among)
obl(prevail, whom)
amod(ownership, private)
nsubj(prevail, ownership)
acl:relcl(mass, prevail)
punct(elite, ,)
det(elite, the)
amod(elite, govern)
compound(elite, warrior)
obj(prevail, elite)
punct(be, . )
advmod(forget, moreover)
punct(forget, ,)
expl(forget, it)
aux:pass(forget, be)
advmod(readily, too)
advmod(forget, readily)
root(ROOT, forget)
mark(give, that)
case(Republic, in)
det(Republic, the)
obl(give, Republic)
nsubj(give, what)
ccomp(forget, give)
det(impetus, the)
amod(impetus, initial)
obj(give, impetus)
case(excursus, to)
nmod:poss(excursus, Plato)
case(Plato, 's)
nmod(impetus, excursus)
case(construction, into)
det(construction, the)
nmod(impetus, construction)
case(commonwealth, of)
det(commonwealth, a)
amod(commonwealth, imaginary)
nmod(construction, commonwealth)
case(communism, with)
nmod:poss(communism, its)
compound(class, ruling)
punct(class, -)
compound(communism, class)
nmod(commonwealth, communism)
case(goods, of)
nmod(communism, goods)
punct(wife, ,)
conj(goods, wife)
punct(child, ,)
cc(child, and)
conj(goods, child)
punct(quest, ,)
cop(quest, be)
nmod:poss(quest, he)
ccomp(forget, quest)
case(canon, for)
det(canon, a)
nmod(quest, canon)
case(ordering, for)
det(ordering, the)
amod(ordering, proper)
nmod(canon, ordering)
case(psyche, of)
det(psyche, the)
amod(psyche, individual)
amod(psyche, human)
nmod(ordering, psyche)
punct(quest, ;)
punct(forget, ;)
cc(problem, and)
nsubj(problem, it)
cop(problem, be)
case(problem, to)
det(problem, this)
conj(quest, problem)
mark(return, that)
det(Republic, the)
nsubj(return, Republic)
advmod(return, ultimately)
acl:relcl(problem, return)
punct(forget, .)
case(communism, in)
nmod:poss(communism, more)
case(more, 's)
compound(communism, utopia)
nsubj(means, communism)
cop(means, be)
advmod(means, not)
det(means, a)
root(ROOT, means)
mark(separate, of)
acl(means, separate)
compound:prt(separate, out)
det(elite, a)
compound(elite, warrior)
obj(separate, elite)
case(mass, from)
det(mass, the)
amod(mass, lumpish)
obl(separate, mass)
punct(means, .)
amod(communism, utopian)
nsubj(apply, communism)
root(ROOT, apply)
case(Utopians, to)
det(Utopians, all)
obl(apply, Utopians)
punct(apply, .)
cc(peripheral, and)
case(economy, in)
det(economy, the)
obl(peripheral, economy)
case(book, of)
det(book, the)
nmod(economy, book)
nsubj(peripheral, it)
cop(peripheral, be)
advmod(peripheral, not)
conj(apply, peripheral)
cc(central, but)
conj(peripheral, central)
punct(apply, .)
det(concern, the)
nsubj(statu, concern)
case(utopia, of)
nmod(concern, utopia)
cop(statu, be)
case(statu, with)
det(statu, the)
compound(statu, optimo)
amod(statu, reipublicae)
root(ROOT, statu)
punct(statu, ,)
det(ordering, the)
amod(ordering, best)
appos(statu, ordering)
case(society, of)
det(society, a)
amod(society, civil)
nmod(ordering, society)
punct(statu, ;)
punct(statu, ;)
cc(make, and)
nsubj(make, it)
cop(again, be)
advmod(make, again)
cc(make, and)
advmod(make, again)
conj(statu, make)
xcomp(make, clear)
mark(provide, that)
amod(communism, utopian)
nsubj(provide, communism)
ccomp(make, provide)
det(array, the)
amod(array, institutional)
obj(provide, array)
amod(array, indispensible)
case(ordering, to)
det(ordering, that)
amod(ordering, best)
obl(indispensible, ordering)
punct(provide, .)
mark(derive, to)
advcl(provide, derive)
amod(communism, utopian)
obj(derive, communism)
case(community, from)
det(community, the)
compound(community, Jerusalem)
amod(community, christian)
nmod(communism, community)
case(age, of)
det(age, the)
amod(age, apostolic)
nmod(community, age)
cc(successor, or)
case(successor, from)
nmod:poss(successor, its)
amod(successor, medieval)
conj(age, successor)
punct(successor, -)
case(spirit, in)
punct(spirit, -)
nmod(successor, spirit)
punct(spirit, ,)
det(community, the)
amod(community, monastic)
appos(spirit, community)
punct(shift, ,)
cop(shift, be)
case(shift, with)
det(shift, a)
amod(shift, appropriate)
nmod(community, shift)
case(adjective, of)
nmod(shift, adjective)
punct(misleading, ,)
amod(shift, misleading)
case(way, in)
det(way, the)
amod(way, same)
obl(misleading, way)
mark(derive, as)
mark(derive, to)
advcl(misleading, derive)
obj(derive, it)
case(Republic, from)
nmod:poss(Republic, Plato)
case(Plato, 's)
obl(derive, Republic)
punct(derive, :)
case(Republic, in)
det(Republic, the)
nmod(Republic, Republic)
nsubj(have, we)
acl:relcl(Republic, have)
mark(do, to)
xcomp(have, do)
case(elite, with)
det(elite, a)
obl(do, elite)
case(athlete, of)
amod(athlete, physical)
cc(intellectual, and)
conj(physical, intellectual)
nmod(elite, athlete)
punct(elite, ,)
case(community, in)
det(community, the)
amod(community, apostolic)
cc(monastic, and)
conj(apostolic, monastic)
nmod(elite, community)
case(elite, with)
det(elite, a)
nmod(community, elite)
case(athlete, of)
amod(athlete, spiritual)
cc(religious, and)
conj(spiritual, religious)
nmod(elite, athlete)
punct(statu, .)
det(community, the)
amod(community, apostolic)
nsubj(elite, community)
cop(elite, be)
advmod(elite, literally)
det(elite, a)
root(ROOT, elite)
punct(elite, :)
acl(elite, choose)
case(Christ, by)
obl(choose, Christ)
obl:npmod(choose, himself)
punct(elite, .)
cc(suppose, and)
det(community, the)
amod(community, monastic)
nsubj(suppose, community)
aux(suppose, be)
root(ROOT, suppose)
mark(make, to)
aux:pass(make, be)
xcomp(suppose, make)
case(volunteer, up)
case(volunteer, of)
obl(make, volunteer)
acl(volunteer, select)
advmod(novitiate, only)
case(novitiate, after)
det(novitiate, a)
obl(select, novitiate)
nsubj(test, which)
aux(test, would)
acl:relcl(novitiate, test)
nmod:poss(aptitude, they)
amod(aptitude, religious)
obj(test, aptitude)
case(rigor, for)
amod(rigor, monastic)
obl(test, rigor)
punct(rigor, ,)
nmod:poss(athleticism, they)
amod(athleticism, spiritual)
conj(rigor, athleticism)
punct(suppose, .)
advmod(fix, finally)
punct(fix, ,)
det(conception, the)
nsubj:pass(fix, conception)
case(community, of)
det(community, the)
amod(community, natural)
nmod(conception, community)
case(possession, of)
det(possession, all)
nmod(community, possession)
nsubj(originate, which)
acl:relcl(possession, originate)
case(stoic, with)
det(stoic, the)
obl(originate, stoic)
aux:pass(fix, be)
advmod(fix, firmly)
root(ROOT, fix)
case(tradition, in)
det(tradition, a)
obl(fix, tradition)
case(time, by)
amod(time, more)
case(more, 's)
nmod(tradition, time)
punct(fix, ,)
mark(accept, although)
nsubj:pass(accept, it)
aux:pass(accept, be)
advmod(accept, not)
advcl(fix, accept)
case(philosopher, by)
det:predet(philosopher, all)
det(philosopher, the)
compound(philosopher, theologian)
punct(philosopher, -)
obl(accept, philosopher)
case(Ages, of)
det(Ages, the)
compound(Ages, Middle)
nmod(philosopher, Ages)
punct(fix, .)
case(tradition, in)
det(tradition, that)
obl(lay, tradition)
nsubj(lay, communism)
root(ROOT, lay)
det(distance, a)
amod(distance, safe)
obj(lay, distance)
advmod(lay, back)
case(age, in)
det(age, the)
obl(lay, age)
case(innocence, of)
nmod(age, innocence)
case(fall, before)
det(fall, the)
obl(lay, fall)
case(man, of)
nmod(fall, man)
punct(lay, .)
nsubj(serve, it)
aux(serve, do)
advmod(serve, not)
root(ROOT, serve)
mark(contrast, to)
xcomp(serve, contrast)
det(order, the)
amod(order, exist)
obj(contrast, order)
case(society, of)
nmod(order, society)
case(order, with)
det(order, a)
amod(order, possible)
amod(order, alternative)
obl(contrast, order)
punct(contrast, ,)
mark(alternative, because)
det(age, the)
nsubj(alternative, age)
case(innocence, of)
nmod(age, innocence)
cop(alternative, be)
advmod(alternative, not)
det(alternative, a)
amod(alternative, possible)
advcl(contrast, alternative)
mark(sin, once)
nsubj(sin, man)
aux(sin, have)
advcl(alternative, sin)
punct(serve, .)
det(function, the)
amod(function, actual)
nsubj:pass(set, function)
case(communism, of)
amod(communism, patristic)
nmod(function, communism)
aux:pass(set, be)
advmod(set, adequately)
root(ROOT, set)
compound:prt(set, forth)
case(St., by)
obl(set, St.)
flat(St., Gregory)
advmod(millenium, almost)
det(millenium, a)
obl:tmod(set, millenium)
mark(write, before)
advmod(write, more)
advcl(set, write)
obj(write, utopia)
punct(set, .)
punct(set, ``)
det(soil, the)
nsubj(common, soil)
cop(common, be)
root(ROOT, common)
case(man, to)
det(man, all)
obl(common, man)
punct(common, .)
mark(give, when)
nsubj(give, we)
advcl(restore, give)
det(necessity, the)
obj(give, necessity)
case(life, of)
nmod(necessity, life)
case(poor, to)
det(poor, the)
nmod(life, poor)
punct(restore, ,)
nsubj(restore, we)
parataxis(common, restore)
case(they, to)
obl(restore, they)
nsubj(theirs, what)
cop(theirs, be)
advmod(theirs, already)
ccomp(restore, theirs)
punct(common, .)
nsubj(think, we)
aux(think, should)
root(ROOT, think)
case(it, of)
obl(think, it)
advmod(think, more)
case(act, as)
det(act, a)
obl(more, act)
case(justice, of)
nmod(act, justice)
case(compassion, than)
nmod(act, compassion)
punct(act, '')
punct(think, .)
mark(law, because)
nsubj(law, community)
advmod(severalty, not)
conj(community, severalty)
case(property, of)
nmod(severalty, property)
cop(law, be)
det(law, the)
advcl(think, law)
case(nature, of)
nmod(law, nature)
det(man, no)
nsubj(assert, man)
aux(assert, can)
acl:relcl(law, assert)
det(right, a)
advmod(unalterable, absolutely)
amod(right, unalterable)
obj(assert, right)
case(what, to)
nmod(right, what)
cop(he, be)
acl:relcl(what, he)
punct(think, .)
advmod(be, indeed)
punct(be, ,)
case(all, of)
obl(nature, all)
nsubj(all, that)
cop(all, be)
nmod:poss(man, he)
det(man, every)
nsubj(nature, man)
root(ROOT, be)
case(nature, by)
obl(be, nature)
cc(reason, and)
conj(nature, reason)
cc(conscience, and)
advmod(conscience, therefore)
case(conscience, by)
conj(nature, conscience)
acl(conscience, obligate)
mark(regard, to)
xcomp(obligate, regard)
obj(regard, himself)
case(custodian, as)
det(custodian, a)
obl(regard, custodian)
punct(be, .)
nsubj(trustee, he)
cop(trustee, be)
det(trustee, a)
root(ROOT, trustee)
case(good, for)
det(good, the)
amod(good, common)
nmod(trustee, good)
punct(trustee, ,)
advmod(feeble, however)
amod(safeguard, feeble)
det(safeguard, the)
appos(trustee, safeguard)
obj(provide, which)
det(law, the)
amod(law, positive)
cc(municipal, or)
conj(positive, municipal)
nsubj(provide, law)
case(property, of)
nmod(law, property)
acl:relcl(safeguard, provide)
case(misuse, against)
nmod:poss(misuse, he)
obl(provide, misuse)
case(share, of)
det(share, that)
nmod(misuse, share)
case(fund, of)
det(fund, the)
amod(fund, common)
nmod(share, fund)
punct(fund, ,)
advmod(fund, wisely)
cc(unwisely, or)
conj(wisely, unwisely)
punct(entrust, ,)
advcl(provide, entrust)
case(keeping, to)
nmod:poss(keeping, he)
obl(entrust, keeping)
punct(trustee, .)
case(contrast, in)
obl(imply, contrast)
case(view, to)
det(view, this)
amod(patristic, Stoic)
punct(patristic, -)
amod(view, patristic)
nmod(contrast, view)
punct(imply, ,)
nsubj(imply, utopia)
root(ROOT, imply)
mark(such, that)
det(nature, the)
nsubj(such, nature)
case(man, of)
nmod(nature, man)
cop(such, be)
ccomp(imply, such)
mark(rely, that)
mark(rely, to)
csubj(such, rely)
case(conscience, on)
amod(conscience, individual)
obl(rely, conscience)
mark(supply, to)
advcl(rely, supply)
det(deficiency, the)
obj(supply, deficiency)
case(law, of)
amod(law, municipal)
nmod(deficiency, law)
ccomp(such, be)
mark(embark, to)
ccomp(be, embark)
case(sea, on)
det(sea, the)
amod(sea, bottomless)
obl(embark, sea)
case(sinfulness, of)
amod(sinfulness, human)
nmod(sea, sinfulness)
case(sieve, in)
det(sieve, a)
nmod(sea, sieve)
punct(brace, .)
det(Utopians, the)
nsubj(brace, Utopians)
parataxis(embark, brace)
obj(brace, conscience)
case(sanction, with)
amod(sanction, legal)
obl(brace, sanction)
punct(imply, .)
case(society, in)
det(society, a)
advmod(order, properly)
amod(society, order)
obl(perform, society)
det(force, the)
amod(force, massive)
nsubj(perform, force)
case(law, of)
amod(law, public)
nmod(force, law)
root(ROOT, perform)
det(function, the)
obj(perform, function)
nsubj:pass(leave, which)
case(theory, in)
amod(law, natural)
compound(theory, law)
nsubj:pass(leave, theory)
advmod(leave, ineptly)
aux:pass(leave, be)
acl:relcl(function, leave)
advmod(leave, altogether)
case(voice, to)
det(voice, a)
amod(voice, small)
obl(leave, voice)
advmod(often, so)
advmod(still, often)
advmod(leave, still)
punct(perform, .)
case(respects, in)
det:predet(respects, all)
det(respects, the)
obl(indicate, respects)
advmod(indicate, just)
root(ROOT, indicate)
amod(communism, utopian)
nsubj(differ, communism)
ccomp(indicate, differ)
case(conception, from)
amod(conception, previous)
obl(differ, conception)
case(community, in)
det(community, which)
obl(differ, community)
case(possession, of)
nmod(community, possession)
cc(living, and)
conj(possession, living)
acl:relcl(community, play)
det(role, a)
obj(play, role)
punct(play, .)
advmod(one, neither)
case(one, from)
obl(play, one)
case(conception, of)
det(conception, these)
nmod(one, conception)
cc(combination, nor)
case(combination, from)
det(combination, a)
obl(deduce, combination)
case(they, of)
nmod(combination, they)
aux(deduce, can)
nsubj:pass(deduce, it)
aux:pass(deduce, be)
conj(indicate, deduce)
punct(indicate, .)
nsubj(deny, we)
aux(deny, do)
advmod(deny, not)
root(ROOT, deny)
obj(deny, originality)
case(Agamemnon, to)
det(Agamemnon, the)
nmod(originality, Agamemnon)
mark(find, because)
nsubj(find, Aeschylus)
advcl(deny, find)
det(tale, the)
obj(find, tale)
case(house, of)
det(house, the)
nmod(tale, house)
case(atreus, of)
nmod(house, atreus)
case(lore, among)
det(lore, the)
amod(lore, folk)
nmod(house, lore)
case(Greeks, of)
det(Greeks, the)
nmod(lore, Greeks)
punct(deny, .)
case(sense, in)
det(sense, a)
amod(sense, like)
obl(remain, sense)
det(bit, whatever)
nsubj(find, bit)
cc(shred, or)
conj(bit, shred)
case(conception, of)
amod(conception, previous)
nmod(bit, conception)
nsubj(find, one)
aux(find, may)
ccomp(remain, find)
case(it, in)
obl(find, it)
punct(remain, ,)
amod(communism, utopian)
nsubj(remain, communism)
root(ROOT, remain)
punct(remain, ,)
case(original, as)
det(original, a)
amod(original, integral)
amod(original, whole)
punct(original, ,)
obl(remain, original)
punct(thing, --)
det(thing, a)
amod(thing, new)
parataxis(remain, thing)
punct(thing, .)
nsubj(thing, it)
cop(thing, be)
advmod(thing, not)
advmod(thing, merely)
det(thing, a)
amod(thing, new)
root(ROOT, thing)
punct(thing, ;)
punct(thing, ;)
nsubj(one, it)
cop(one, be)
parataxis(thing, one)
case(thing, of)
det(thing, the)
advmod(few, very)
amod(thing, few)
amod(thing, new)
nmod(one, thing)
case(utopia, in)
nmod(thing, utopia)
punct(one, ;)
punct(one, ;)
nsubj(medieval, most)
case(rest, of)
det(rest, the)
nmod(most, rest)
cop(medieval, be)
parataxis(one, medieval)
cc(humanist, or)
conj(medieval, humanist)
cc(part, or)
conj(medieval, part)
case(tradition, of)
det(tradition, a)
amod(tradition, old)
nmod(part, tradition)
case(criticism, of)
amod(criticism, social)
nmod(tradition, criticism)
punct(thing, .)
cc(be, but)
mark(say, to)
advcl(be, say)
mark(be, that)
case(moment, at)
det(moment, a)
obl(be, moment)
case(history, in)
nmod(moment, history)
nsubj(new, something)
cop(new, be)
ccomp(be, new)
root(ROOT, be)
advmod(be, not)
advmod(be, necessarily)
mark(say, to)
ccomp(be, say)
mark(modern, that)
nsubj(modern, it)
cop(modern, be)
ccomp(say, modern)
punct(be, ;)
punct(be, ;)
cc(come, and)
case(statement, for)
det(statement, this)
obl(come, statement)
det(evidence, the)
amod(evidence, best)
nsubj(come, evidence)
conj(be, come)
case(year, within)
det(year, the)
nummod(year, five)
obl(come, year)
case(publication, follow)
det(publication, the)
obl(come, publication)
case(utopia, of)
nmod(publication, utopia)
punct(elaborate, ,)
mark(elaborate, when)
nsubj(elaborate, Martin)
flat(Martin, Luther)
advcl(come, elaborate)
det(perception, a)
amod(perception, new)
obj(elaborate, perception)
case(nature, of)
det(nature, the)
nmod(perception, nature)
case(encounter, of)
det(Divine, the)
nmod:poss(encounter, Divine)
case(Divine, 's)
nmod(nature, encounter)
case(man, with)
nmod(encounter, man)
punct(encounter, .)
appos(encounter, New)
punct(perception, ,)
advmod(perception, indeed)
punct(perception, ,)
cop(perception, be)
nmod:poss(perception, Luther)
case(Luther, 's)
conj(elaborate, perception)
punct(modern, ,)
cc(modern, but)
advmod(modern, not)
conj(perception, modern)
punct(modern, ,)
mark(know, as)
nsubj(know, anyone)
advcl(modern, know)
nsubj(try, who)
aux(try, have)
advmod(try, ever)
ccomp(know, try)
mark(make, to)
xcomp(try, make)
xcomp(make, intelligible)
case(student, to)
amod(student, modern)
obl(intelligible, student)
obj(get, what)
nsubj(get, Luther)
aux(get, be)
acl:relcl(student, get)
case(what, at)
punct(perception, .)
mark(new, although)
amod(communism, utopian)
nsubj(new, communism)
cop(new, be)
advmod(new, both)
advcl(communism, new)
case(1516, in)
obl(new, 1516)
cc(modern, and)
advmod(modern, also)
conj(1516, modern)
punct(communism, ,)
nsubj(communism, it)
cop(communism, be)
advmod(communism, not)
amod(communism, modern)
root(ROOT, communism)
cc(socialism, or)
advmod(socialism, even)
amod(socialism, modern)
conj(communism, socialism)
punct(communism, ,)
mark(exist, as)
nsubj(exist, they)
advcl(communism, exist)
cc(exist, or)
aux(exist, have)
advmod(exist, ever)
conj(exist, exist)
case(theory, in)
obl(exist, theory)
cc(practice, or)
case(practice, in)
conj(theory, practice)
punct(communism, .)
root(ROOT, consider)
det(feature, the)
obj(consider, feature)
case(communism, of)
amod(communism, utopian)
nmod(feature, communism)
punct(provision, :)
amod(provision, generous)
amod(provision, public)
parataxis(consider, provision)
case(infirm, for)
det(infirm, the)
nmod(provision, infirm)
punct(provision, ;)
punct(provision, ;)
amod(election, democratic)
cc(secret, and)
conj(democratic, secret)
conj(provision, election)
case(officer, of)
det(officer, all)
nmod(election, officer)
case(priest, include)
nmod(officer, priest)
punct(meal, ,)
conj(priest, meal)
acl(priest, take)
advmod(take, publicly)
case(refectory, in)
amod(refectory, common)
obl(take, refectory)
punct(take, ;)
punct(habit, ;)
det(habit, a)
amod(habit, common)
conj(provision, habit)
cc(uniform, or)
conj(habit, uniform)
acl(habit, prescribe)
case(citizen, for)
det(citizen, all)
obl(prescribe, citizen)
punct(change, ;)
punct(consider, ;)
advmod(house, even)
nsubj(change, house)
parataxis(consider, change)
advmod(change, once)
det(decade, a)
obj(change, decade)
punct(change, ;)
punct(change, ;)
nummod(hour, six)
obl:tmod(change, hour)
case(labor, of)
amod(labor, manual)
nmod(hour, labor)
det(day, a)
nmod:npmod(hour, day)
case(all, for)
nmod(day, all)
cc(handful, but)
det(handful, a)
conj(all, handful)
case(magistrate, of)
nmod(handful, magistrate)
cc(scholar, and)
conj(magistrate, scholar)
punct(measure, ,)
cc(measure, and)
amod(measure, careful)
conj(magistrate, measure)
mark(prevent, to)
acl(measure, prevent)
obj(prevent, anyone)
case(shirk, from)
obl(prevent, shirk)
punct(property, ;)
punct(property, ;)
det(property, no)
amod(property, private)
parataxis(sort, property)
punct(money, ,)
det(money, no)
appos(property, money)
punct(money, ;)
punct(money, ;)
det(sort, no)
conj(provision, sort)
case(pricing, of)
nmod(sort, pricing)
case(all, at)
nmod(goods, all)
case(goods, for)
det(goods, any)
nmod(sort, goods)
cc(service, or)
conj(goods, service)
punct(market, ,)
cc(market, and)
advmod(market, therefore)
det(market, no)
conj(goods, market)
case(sense, in)
det(sense, the)
amod(sense, economic)
nmod(market, sense)
case(term, of)
det(term, the)
nmod(sense, term)
punct(whatever, .)
parataxis(sense, whatever)
det(merit, the)
appos(whatever, merit)
case(intent, of)
nmod:poss(intent, its)
nmod(merit, intent)
punct(naive, ,)
amod(communism, utopian)
nsubj(naive, communism)
cop(naive, be)
advmod(naive, far)
advmod(naive, too)
acl:relcl(merit, naive)
punct(naive, ,)
advmod(crude, far)
advmod(crude, too)
conj(naive, crude)
punct(naive, ,)
mark(suit, to)
advcl(naive, suit)
det(socialist, any)
amod(socialist, modern)
obj(suit, socialist)
cc(communist, or)
conj(socialist, communist)
punct(consider, .)
nsubj(detail, it)
cop(detail, be)
advmod(detail, not)
det(detail, the)
root(ROOT, detail)
case(communism, of)
amod(communism, utopian)
nmod(detail, communism)
nsubj(make, that)
acl:relcl(communism, make)
nsubj(modern, utopia)
xcomp(make, modern)
punct(spirit, ,)
nsubj(spirit, it)
cop(spirit, be)
det(spirit, the)
parataxis(detail, spirit)
punct(spirit, ,)
det(attitude, the)
conj(spirit, attitude)
case(mind, of)
nmod(attitude, mind)
nsubj(inform, that)
acl:relcl(attitude, inform)
det(detail, those)
obj(inform, detail)
punct(detail, .)
root(ROOT, what)
det(spirit, that)
nsubj(what, spirit)
cc(attitude, and)
conj(spirit, attitude)
aux(understand, be)
nsubj(understand, we)
aux(understand, can)
advmod(understand, best)
acl:relcl(what, understand)
mark(see, if)
nsubj(see, we)
advcl(understand, see)
advmod(precisely, more)
advmod(see, precisely)
advmod(contrast, how)
nsubj(contrast, it)
ccomp(see, contrast)
case(tradition, with)
det(tradition, the)
amod(tradition, communist)
obl(contrast, tradition)
case(history, with)
det(history, the)
amod(history, longest)
amod(history, continuous)
nmod(tradition, history)
punct(history, ,)
det(one, the)
appos(history, one)
nsubj(reach, which)
acl:relcl(one, reach)
obj(reach, Christianity)
case(way, by)
det(way, the)
obl(reach, way)
case(Stoicism, of)
nmod(way, Stoicism)
case(Fathers, through)
det(Fathers, the)
compound(Fathers, Church)
nmod(way, Fathers)
case(antiquity, of)
compound(antiquity, late)
nmod(Fathers, antiquity)
punct(Fathers, .)
case(trial, during)
det(trial, the)
compound(trial, dorr)
obl(condemned, trial)
det(press, the)
compound(press, Democratic)
nsubj(condemned, press)
parataxis(understand, condemned)
det(proceedings, the)
obj(condemned, proceedings)
cc(herald, and)
conj(condemned, herald)
obj(herald, dorr)
case(martyr, as)
det(martyr, a)
obl(herald, martyr)
case(principle, to)
det(principle, the)
nmod(martyr, principle)
case(Declaration, of)
det(Declaration, the)
nmod(principle, Declaration)
case(Independence, of)
nmod(Declaration, Independence)
punct(principle, .)
case(trial, during)
det(trial, the)
compound(trial, Brown)
nmod(Declaration, trial)
punct(trial, ,)
advmod(state, however)
punct(newspaper, ,)
det(state, the)
nmod:poss(newspaper, state)
case(state, 's)
advmod(powerful, most)
amod(newspaper, powerful)
compound(newspaper, Democratic)
nsubj(state, newspaper)
punct(newspaper, ,)
det(Post, the)
compound(Post, Providence)
compound(Post, Daily)
appos(newspaper, Post)
punct(state, ,)
acl:relcl(trial, state)
mark(murderer, that)
nsubj(murderer, Brown)
cop(murderer, be)
det(murderer, a)
ccomp(state, murderer)
punct(man, ,)
det(man, a)
conj(murderer, man)
case(blood, of)
nmod(man, blood)
punct(associate, ,)
cc(associate, and)
mark(associate, that)
nsubj(plot, he)
cc(associate, and)
nmod:poss(associate, he)
conj(he, associate)
punct(he, ,)
case(assistance, with)
det(assistance, the)
obl(plot, assistance)
case(Republicans, of)
nmod(assistance, Republicans)
cc(Abolitionists, and)
conj(Republicans, Abolitionists)
punct(plot, ,)
aux(plot, have)
conj(murderer, plot)
advmod(only, not)
advmod(liberation, only)
det(liberation, the)
obj(plot, liberation)
case(slave, of)
det(slave, the)
nmod(liberation, slave)
cc(overthrow, but)
advmod(overthrow, also)
det(overthrow, the)
conj(liberation, overthrow)
case(government, of)
compound(government, state)
cc(federal, and)
conj(state, federal)
nmod(overthrow, government)
punct(understand, .)
det(Journal, the)
compound(Journal, Providence)
compound(Journal, Daily)
nsubj(answer, Journal)
root(ROOT, answer)
det(Post, the)
amod(Post, daily)
obj(answer, Post)
mark(state, by)
advcl(answer, state)
mark(characteristic, that)
det(raid, the)
nsubj(characteristic, raid)
case(John, of)
nmod(raid, John)
flat(John, Brown)
cop(characteristic, be)
ccomp(state, characteristic)
case(act, of)
amod(act, democratic)
obl(characteristic, act)
case(violence, of)
nmod(act, violence)
cc(that, and)
conj(violence, that)
punct(answer, ``)
nsubj(act, he)
aux(act, be)
root(ROOT, act)
case(opposition, in)
amod(opposition, direct)
obl(act, opposition)
case(Party, to)
det(Party, the)
compound(Party, Republican)
nmod(opposition, Party)
punct(Party, ,)
nsubj(proclaim, who)
acl:relcl(Party, proclaim)
case(one, as)
obl(proclaim, one)
case(principle, of)
nmod:poss(principle, they)
amod(principle, cardinal)
nmod(one, principle)
mark(interfere, that)
nsubj(interfere, they)
aux(interfere, do)
advmod(interfere, not)
ccomp(proclaim, interfere)
case(slavery, with)
obl(interfere, slavery)
case(state, in)
det(state, the)
obl(interfere, state)
punct(interfere, '')
punct(continue, .)
det(newspaper, the)
nummod(newspaper, two)
amod(newspaper, major)
nsubj(continue, newspaper)
case(Providence, in)
nmod(newspaper, Providence)
parataxis(act, continue)
punct(continue, ,)
case(crisis, throughout)
det(crisis, the)
obl(continue, crisis)
punct(continue, ,)
mark(accuse, to)
advcl(continue, accuse)
det(other, each)
obj(accuse, other)
mark(misrepresenting, of)
acl(other, misrepresenting)
det(fact, the)
obj(misrepresenting, fact)
cc(attempt, and)
conj(misrepresenting, attempt)
mark(falsify, to)
xcomp(attempt, falsify)
obj(falsify, history)
punct(act, . )
mark(continue, while)
det(Post, the)
compound(Post, Daily)
nsubj(continue, Post)
advcl(complain, continue)
mark(accuse, to)
xcomp(continue, accuse)
obj(accuse, Republicans)
cc(Journal, and)
det(Journal, the)
compound(Journal, Daily)
conj(Republicans, Journal)
conj(continue, continue)
mark(accuse, to)
xcomp(continue, accuse)
obj(accuse, Democrats)
punct(complain, ,)
det(Patriot, the)
compound(Patriot, Woonsocket)
nsubj(complain, Patriot)
root(ROOT, complain)
mark(show, that)
det(authority, the)
compound(authority, Virginia)
nsubj(show, authority)
ccomp(complain, show)
amod(haste, indecent)
cc(cowardly, and)
conj(indecent, cowardly)
obj(show, haste)
mark(condemn, to)
advcl(show, condemn)
obj(condemn, Brown)
cc(man, and)
nmod:poss(man, he)
conj(Brown, man)
punct(state, .)
nsubj(state, Editor)
nsubj(state, foss)
ccomp(complain, state)
punct(complain, ,)
punct(complain, ``)
case(guilt, of)
nmod:poss(guilt, they)
obl(be, guilt)
expl(be, there)
aux(be, can)
root(ROOT, be)
det(doubt, no)
nsubj(be, doubt)
cc(entitle, but)
nsubj:pass(entitle, they)
aux:pass(entitle, be)
conj(be, entitle)
case(time, to)
amod(time, sufficient)
obl(entitle, time)
mark(prepare, to)
acl(time, prepare)
case(trial, for)
obl(prepare, trial)
punct(trial, ,)
cc(trial, and)
det(trial, a)
amod(trial, fair)
conj(trial, trial)
punct(trial, '')
punct(Daily, .)
det(Daily, the)
compound(Daily, Providence)
appos(trial, Daily)
nsubj(think, Post)
root(ROOT, think)
mark(be, that)
expl(be, there)
ccomp(think, be)
advmod(be, probably)
amod(reason, good)
nsubj(be, reason)
case(haste, for)
det(haste, the)
nmod(reason, haste)
case(which, in)
obl(conduct, which)
det(trial, the)
nsubj:pass(conduct, trial)
aux(conduct, be)
aux:pass(conduct, be)
acl:relcl(haste, conduct)
cc(feeling, and)
mark(feeling, that)
det(thing, the)
amod(thing, only)
nsubj(feeling, thing)
acl(thing, gain)
case(delay, by)
det(delay, a)
obl(gain, delay)
aux(feeling, would)
cop(feeling, be)
amod(feeling, calmer)
conj(conduct, feeling)
punct(think, .)
det(Journal, the)
compound(Journal, Providence)
compound(Journal, Daily)
nsubj(state, Journal)
root(ROOT, state)
mark(guarantee, that)
mark(evident, although)
det(guilt, the)
nsubj(evident, guilt)
case(Brown, of)
nmod(guilt, Brown)
cop(evident, be)
advcl(guarantee, evident)
punct(guarantee, ,)
det(South, the)
nsubj(guarantee, South)
aux(guarantee, must)
ccomp(state, guarantee)
iobj(guarantee, he)
det(trial, a)
amod(trial, fair)
obj(guarantee, trial)
mark(preserve, to)
acl(trial, preserve)
amod(peace, domestic)
obj(preserve, peace)
punct(state, .)
case(October, on)
obl(find, October)
nummod(October, 31)
punct(October, ,)
nummod(October, 1859)
punct(find, ,)
nsubj:pass(find, John)
flat(John, Brown)
aux:pass(find, be)
root(ROOT, find)
xcomp(find, guilty)
case(treason, of)
nmod(guilty, treason)
case(state, against)
det(state, the)
nmod(guilty, state)
case(Virginia, of)
nmod(state, Virginia)
punct(incite, ,)
acl(state, incite)
amod(rebellion, slave)
obj(incite, rebellion)
punct(murder, ,)
cc(murder, and)
conj(rebellion, murder)
punct(find, .)
case(crime, for)
det(crime, these)
obl(sentence, crime)
nsubj:pass(sentence, he)
aux:pass(sentence, be)
root(ROOT, sentence)
mark(hang, to)
aux:pass(hang, be)
xcomp(sentence, hang)
case(public, in)
obl(hang, public)
case(Friday, on)
obl(hang, Friday)
punct(Friday, ,)
appos(Friday, December)
nummod(December, 2)
punct(Friday, ,)
nmod:tmod(Friday, 1859)
punct(sentence, .)
mark(receive, upon)
advcl(heap, receive)
det(news, the)
obj(receive, news)
punct(heap, ,)
amod(writer, northern)
nsubj(heap, writer)
punct(editor, ,)
conj(writer, editor)
punct(clergyman, ,)
cc(clergyman, and)
conj(writer, clergyman)
root(ROOT, heap)
obj(heap, accusation)
case(murder, of)
nmod(accusation, murder)
case(states, on)
det(states, the)
compound(states, Southern)
nmod(murder, states)
punct(states, ,)
advmod(Virginia, particularly)
appos(states, Virginia)
punct(heap, .)
mark(prepare, although)
compound(Islanders, Rhode)
nsubj(prepare, Islanders)
aux(prepare, be)
advcl(watch, prepare)
case(election, for)
det(election, the)
compound(election, state)
obl(prepare, election)
punct(watch, ,)
nsubj(watch, they)
root(ROOT, watch)
nmod:poss(trial, John)
flat(John, Brown)
case(John, 's)
obj(watch, trial)
case(interest, with)
amod(interest, extreme)
nmod(trial, interest)
punct(watch, .)
case(morning, on)
compound(morning, Wednesday)
obl(state, morning)
punct(state, ,)
obl:tmod(state, November)
nummod(November, 2)
punct(November, ,)
nummod(November, 1859)
punct(state, ,)
det(Journal, the)
compound(Journal, Providence)
compound(Journal, Daily)
nsubj(state, Journal)
root(ROOT, state)
mark(ought, that)
mark(deserve, although)
nsubj(deserve, Brown)
advmod(deserve, justly)
advcl(ought, deserve)
det(penalty, the)
amod(penalty, extreme)
obj(deserve, penalty)
punct(ought, ,)
det(man, no)
nsubj(ought, man)
punct(man, ,)
advmod(criminal, however)
amod(man, criminal)
punct(ought, ,)
ccomp(state, ought)
mark(suffer, to)
xcomp(ought, suffer)
det(penalty, the)
obj(suffer, penalty)
case(trial, without)
det(trial, a)
amod(trial, fair)
obl(suffer, trial)
punct(state, .)
det(editor, the)
nmod:poss(criticism, editor)
case(editor, 's)
amod(criticism, main)
nsubj(haste, criticism)
case(trial, of)
det(trial, the)
nmod(criticism, trial)
cop(haste, be)
det(haste, the)
root(ROOT, haste)
case(which, with)
obl(conduct, which)
nsubj:pass(conduct, it)
aux:pass(conduct, be)
acl:relcl(haste, conduct)
punct(haste, .)
det(reader, the)
nsubj(learn, reader)
case(Post, of)
det(Post, the)
compound(Post, Providence)
compound(Post, Daily)
nmod(reader, Post)
punct(learn, ,)
advmod(learn, however)
punct(learn, ,)
root(ROOT, learn)
mark(conced, that)
nsubj:pass(conced, it)
aux:pass(conced, be)
advmod(conced, generally)
ccomp(learn, conced)
obj(conced, that)
punct(learn, ``)
amod(Brown, old)
nsubj(have, Brown)
punct(Brown, '')
root(ROOT, have)
det(trial, a)
amod(trial, fair)
obj(have, trial)
punct(have, .)
case(sentence, concern)
det(sentence, the)
obl(ask, sentence)
det(editor, the)
nsubj(ask, editor)
root(ROOT, ask)
punct(ask, ,)
punct(ask, ``)
obj(do, what)
amod(what, else)
aux(do, can)
nsubj(do, Virginia)
root(ROOT, do)
mark(hang, than)
mark(hang, to)
advcl(do, hang)
det(man, the)
obj(hang, man)
nsubj(defy, who)
aux(defy, have)
acl:relcl(man, defy)
nmod:poss(law, she)
obj(defy, law)
punct(treason, ,)
amod(treason, organized)
conj(law, treason)
punct(butcher, ,)
cc(butcher, and)
conj(defy, butcher)
nmod:poss(citizen, she)
obj(butcher, citizen)
punct(butcher, '')
punct(do, .)
case(section, in)
det(section, the)
amod(section, eastern)
obl(identical, section)
case(state, of)
det(state, the)
nmod(section, state)
det(newspaper, the)
nmod:poss(reaction, newspaper)
case(newspaper, 's)
nsubj(identical, reaction)
case(trial, to)
nmod:poss(trial, Brown)
case(Brown, 's)
nmod(reaction, trial)
cc(sentence, and)
conj(trial, sentence)
cop(identical, be)
advmod(identical, basically)
root(ROOT, identical)
punct(identical, . )
nsubj(state, J.)
flat(J., Wheaton)
flat(J., Smith)
punct(J., ,)
appos(J., editor)
case(telegraph, of)
det(telegraph, the)
compound(telegraph, Warren)
nmod(editor, telegraph)
root(ROOT, state)
mark(satisfied, that)
punct(satisfied, ``)
det(end, the)
nsubj(satisfied, end)
case(justice, of)
nmod(end, justice)
aux(satisfied, must)
cop(satisfied, be)
ccomp(state, satisfied)
punct(set, ,)
det(example, a)
amod(example, solitary)
nsubj(set, example)
aux(set, must)
aux:pass(set, be)
ccomp(satisfied, set)
punct(set, ,)
obl(set, in)
fixed(in, order)
mark(heed, that)
det:predet(philantropist, all)
det(philantropist, those)
amod(philantropist, misname)
nsubj:pass(set, philantropist)
punct(philantropist, ,)
appos(philantropist, who)
punct(actuate, ,)
acl(philantropist, actuate)
case(zeal, by)
det(zeal, a)
amod(zeal, blind)
obl(actuate, zeal)
punct(dare, ,)
conj(actuate, dare)
mark(instigate, to)
xcomp(dare, instigate)
obj(instigate, riot)
punct(treason, ,)
conj(riot, treason)
punct(murder, ,)
cc(murder, and)
conj(riot, murder)
punct(heed, ,)
aux(heed, may)
conj(instigate, heed)
obj(heed, it)
cc(shape, and)
conj(heed, shape)
nmod:poss(future, they)
obj(shape, future)
advmod(accordingly, course)
advmod(shape, accordingly)
punct(shape, '')
punct(heed, .)
det(editor, the)
nsubj(discover, editor)
case(Advertiser, of)
det(Advertiser, the)
compound(Advertiser, Newport)
nmod(editor, Advertiser)
aux(discover, could)
conj(heed, discover)
det(evidence, no)
obj(discover, evidence)
case(circumstance, of)
amod(circumstance, extenuating)
nmod(evidence, circumstance)
case(trial, in)
det(trial, the)
compound(trial, Brown)
nmod(circumstance, trial)
nsubj(warrant, which)
aux(warrant, would)
acl:relcl(trial, warrant)
xcomp(warrant, make)
det(exception, a)
obj(make, exception)
case(infliction, to)
det(infliction, the)
nmod(exception, infliction)
case(punishment, of)
amod(punishment, capital)
nmod(infliction, punishment)
punct(state, .)
case(contrast, in)
amod(contrast, direct)
obl(condemned, contrast)
case(editor, to)
det(editor, the)
amod(editor, other)
compound(Island, Rhode)
compound(editor, Island)
nmod(contrast, editor)
punct(condemned, ,)
nsubj(condemned, Samuel)
flat(Samuel, S.)
flat(Samuel, foss)
case(Patriot, of)
det(Patriot, the)
compound(Patriot, Woonsocket)
nmod(Samuel, Patriot)
advmod(condemned, outwardly)
root(ROOT, condemned)
det(trial, the)
obj(condemned, trial)
mark(unfair, as)
cop(unfair, be)
advmod(unfair, completely)
advcl(condemned, unfair)
punct(condemned, .)
case(sentence, concern)
det(sentence, the)
obl(write, sentence)
punct(write, ,)
nsubj(write, foss)
root(ROOT, write)
punct(write, ,)
punct(write, ``)
mark(possible, if)
expl(possible, it)
cop(possible, be)
advcl(well, possible)
mark(override, that)
nsubj(override, mercy)
aux(override, shall)
ccomp(possible, override)
obj(override, vengeance)
cc(commute, and)
mark(commute, that)
nmod:poss(sentence, John)
flat(John, Brown)
case(John, 's)
nsubj:pass(commute, sentence)
aux(commute, shall)
aux:pass(commute, be)
conj(override, commute)
case(imprisonment, to)
obl(commute, imprisonment)
punct(well, ,)
nsubj(well, it)
aux(well, would)
cop(well, be)
root(ROOT, well)
punct(well, --)
advmod(well, well)
case(country, for)
det(country, the)
obl(well, country)
cc(Virginia, and)
case(Virginia, for)
conj(country, Virginia)
punct(country, '')
punct(country, .)
mark(cause, despite)
det(excitement, the)
nsubj(turn, excitement)
aux:pass(cause, be)
acl(excitement, cause)
case(trial, by)
det(trial, the)
obl(cause, trial)
cc(sentence, and)
conj(trial, sentence)
case(John, of)
nmod(trial, John)
flat(John, Brown)
punct(John, ,)
compound(Islanders, Rhode)
nsubj(turn, Islanders)
conj(well, turn)
nmod:poss(attention, they)
obj(turn, attention)
case(election, to)
det(election, the)
compound(election, state)
obl(turn, election)
punct(well, .)
det(state, the)
nsubj(elect, state)
aux(elect, have)
root(ROOT, elect)
amod(candidate, republican)
obj(elect, candidate)
case(year, in)
det(year, the)
amod(year, past)
nummod(year, two)
obl(elect, year)
punct(elect, .)
expl(be, there)
root(ROOT, be)
det(doubt, no)
nsubj(be, doubt)
case(control, as)
fixed(as, to)
det(control, the)
nmod(doubt, control)
det(party, the)
compound(party, Republican)
appos(control, party)
acl(control, exercise)
case(state, throughout)
det(state, the)
obl(exercise, state)
punct(be, .)
mark(fail, if)
nsubj(fail, it)
advcl(remnant, fail)
case(occasion, on)
obl(fail, occasion)
mark(elect, to)
advcl(fail, elect)
nmod:poss(candidate, its)
obj(elect, candidate)
case(office, for)
amod(office, general)
compound(office, state)
nmod(candidate, office)
case(majority, by)
nmod(office, majority)
punct(remnant, ,)
det(failure, the)
nsubj(remnant, failure)
cop(remnant, be)
case(remnant, due)
fixed(due, to)
det(remnant, a)
amod(remnant, linger)
root(ROOT, remnant)
case(party, of)
det(party, the)
compound(nothing, know)
punct(nothing, -)
compound(party, nothing)
nmod(remnant, party)
punct(party, ,)
nsubj(call, which)
acl:relcl(party, call)
obj(call, itself)
det(party, the)
amod(party, american)
compound(party, Republican)
xcomp(call, party)
punct(remnant, .)
det(Republicans, the)
amod(Republicans, american)
nsubj(nominate, Republicans)
cc(Republicans, and)
det(Republicans, the)
conj(Republicans, Republicans)
det(Republicans, both)
root(ROOT, nominate)
compound(Turner, Lieutenant)
punct(Lieutenant, -)
compound(Turner, Governor)
obj(nominate, Turner)
case(governor, for)
obl(nominate, governor)
punct(nominate, .)
nsubj(candidate, Elisha)
flat(Elisha, R.)
flat(Elisha, Potter)
cop(candidate, be)
det(candidate, the)
compound(candidate, Democratic)
root(ROOT, candidate)
punct(candidate, .)
det(result, the)
nsubj(find, result)
case(election, of)
det(election, the)
nmod(result, election)
case(1859, of)
nmod(election, 1859)
root(ROOT, find)
amod(candidate, republican)
obj(find, candidate)
advmod(only, not)
cc:preconj(win, only)
ccomp(find, win)
det(office, the)
obj(win, office)
case(governor, of)
nmod(office, governor)
cc(governor, and)
compound(governor, lieutenant)
punct(governor, -)
conj(governor, governor)
cc(obtain, but)
advmod(obtain, also)
conj(win, obtain)
det(office, the)
nummod(office, two)
amod(office, congressional)
obj(obtain, office)
case(section, from)
det(section, the)
amod(section, eastern)
cc(western, and)
conj(eastern, western)
nmod(office, section)
case(state, of)
det(state, the)
nmod(section, state)
punct(section, .)
case(month, during)
det(month, the)
obl(pass, month)
case(November, of)
nmod(month, November)
advmod(day, hardly)
det(day, a)
nsubj(pass, day)
conj(find, pass)
mark(be, when)
expl(be, there)
advcl(pass, be)
advmod(be, not)
det(mention, some)
nsubj(be, mention)
case(John, of)
nmod(mention, John)
flat(John, Brown)
case(newspaper, in)
det(newspaper, the)
compound(Island, Rhode)
compound(newspaper, Island)
nmod(mention, newspaper)
punct(find, .)
case(November, on)
obl(reprint, November)
nummod(November, 7)
punct(November, ,)
nummod(November, 1859)
punct(reprint, ,)
det(Journal, the)
compound(Journal, Providence)
compound(Journal, Daily)
nsubj(reprint, Journal)
root(ROOT, reprint)
det(letter, a)
obj(reprint, letter)
acl(letter, send)
case(John, to)
obl(send, John)
flat(John, Brown)
case(E., from)
punct(E., ``)
obl(send, E.)
flat(E., B.)
punct(E., '')
punct(E., ,)
det(lady, a)
amod(lady, Quaker)
appos(E., lady)
case(Newport, in)
nmod(lady, Newport)
punct(reprint, .)
case(reference, in)
obl(write, reference)
case(raid, to)
nmod:poss(raid, Brown)
case(Brown, 's)
nmod(reference, raid)
nsubj(write, she)
root(ROOT, write)
punct(write, ,)
punct(write, ``)
mark(non-resistant, though)
nsubj(non-resistant, we)
cop(non-resistant, be)
advcl(write, non-resistant)
cc(believe, and)
advmod(believe, religiously)
conj(non-resistant, believe)
obj(believe, it)
xcomp(believe, better)
mark(reform, to)
advcl(better, reform)
case(weapon, by)
amod(weapon, moral)
cc(not, and)
conj(moral, not)
case(carnal, by)
conj(moral, carnal)
obl(reform, weapon)
punct(know, ,)
nsubj(know, we)
ccomp(write, know)
nsubj:pass(anemated, thee)
aux:pass(anemated, be)
ccomp(know, anemated)
case(motive, by)
det(motive, the)
advmod(generous, most)
amod(motive, generous)
cc(philanthropic, and)
conj(generous, philanthropic)
obl(anemated, motive)
punct(know, '')
punct(write, .)
punct(write, ``)
nsubj(compare, E.)
flat(E., B.)
punct(E., '')
root(ROOT, compare)
obj(compare, John)
flat(John, Brown)
case(Moses, to)
obl(compare, Moses)
mark(act, in)
fixed(in, that)
nsubj(act, they)
aux(act, be)
advmod(act, both)
advcl(compare, act)
mark(deliver, to)
xcomp(act, deliver)
obj(deliver, million)
case(oppression, from)
obl(deliver, oppression)
punct(compare, .)
case(contrast, in)
root(ROOT, contrast)
case(B., to)
punct(B., ``)
compound(B., E.)
nmod(contrast, B.)
punct(B., '')
punct(B., ,)
appos(B., most)
compound(Islanders, Rhode)
nsubj(think, Islanders)
advmod(think, hardly)
root(ROOT, think)
case(John, of)
obl(think, John)
flat(John, Brown)
mark(Moses, as)
cop(Moses, be)
det(Moses, another)
advcl(think, Moses)
punct(think, .)
amod(attempt, most)
nsubj(find, attempt)
mark(develop, to)
acl(attempt, develop)
det(sympathy, any)
obj(develop, sympathy)
case(Brown, for)
nmod(sympathy, Brown)
cc(action, and)
nmod:poss(action, he)
conj(Brown, action)
conj(think, find)
det(audience, a)
amod(audience, unresponsive)
obj(find, audience)
case(Island, in)
compound(Island, Rhode)
nmod(audience, Island)
punct(think, .)
case(evening, on)
compound(evening, Wednesday)
obl(give, evening)
punct(evening, ,)
appos(evening, November)
nummod(November, 23)
punct(November, ,)
nummod(November, 1859)
punct(give, ,)
case(Warren, in)
obl(give, Warren)
punct(Warren, ,)
nsubj(give, Rev.)
flat(Rev., Mark)
flat(Rev., Trafton)
case(Bedford, of)
compound(Bedford, New)
nmod(Rev., Bedford)
punct(give, ,)
root(ROOT, give)
det(lecture, a)
punct(Mission, ``)
obj(give, Mission)
case(Sympathy, of)
nmod(Mission, Sympathy)
punct(Mission, '')
nmod(Mission, lecture)
case(which, in)
obl(view, which)
nsubj(view, he)
advmod(view, favorably)
acl:relcl(lecture, view)
det(Harper, the)
nmod:poss(insurrection, Harper)
case(Harper, 's)
compound(insurrection, Ferry)
obj(view, insurrection)
punct(give, .)
det(telegraph, the)
compound(telegraph, Warren)
nsubj(state, telegraph)
root(ROOT, state)
mark(inappropriate, that)
nsubj(inappropriate, many)
case(remark, of)
nmod:poss(remark, Rev.)
flat(Rev., Trafton)
case(Rev., 's)
nmod(many, remark)
cop(inappropriate, be)
ccomp(state, inappropriate)
cc(savor, and)
conj(inappropriate, savor)
advmod(savor, strongly)
case(radicalism, of)
obl(savor, radicalism)
cc(fanaticism, and)
conj(radicalism, fanaticism)
punct(state, .)
case(account, in)
nmod:poss(account, its)
obl(say, account)
case(Trafton, of)
det(Trafton, the)
nmod(account, Trafton)
flat(Trafton, lecture)
punct(say, ,)
det(Post, the)
compound(Post, Providence)
compound(Post, Daily)
nsubj(say, Post)
root(ROOT, say)
mark(make, that)
det(remark, the)
nsubj(make, remark)
case(Rev., of)
nmod(remark, Rev.)
flat(Rev., Trafton)
ccomp(say, make)
det(people, the)
obj(make, people)
xcomp(make, indignant)
punct(say, .)
det(sympathy, no)
nsubj:pass(find, sympathy)
cc(admiration, or)
conj(sympathy, admiration)
case(Brown, for)
nmod(sympathy, Brown)
aux(find, could)
aux:pass(find, be)
root(ROOT, find)
case(Post, in)
det(Post, the)
compound(Post, Providence)
compound(Post, Daily)
obl(find, Post)
punct(find, ,)
case(editor, for)
det(editor, the)
nsubj(claim, editor)
conj(find, claim)
mark(be, that)
expl(be, there)
ccomp(claim, be)
det(score, a)
nsubj(be, score)
case(man, of)
nmod(score, man)
case(prison, in)
det(prison, the)
compound(prison, state)
nmod(score, prison)
nsubj(deserve, who)
cop(deserve, be)
det(time, a)
nummod(time, thousand)
obl:npmod(more, time)
advmod(deserve, more)
acl:relcl(prison, deserve)
case(sympathy, of)
obl(deserve, sympathy)
punct(find, .)
det(Journal, the)
compound(Journal, Providence)
compound(Journal, Daily)
nsubj(state, Journal)
punct(state, ,)
advmod(state, however)
punct(state, ,)
root(ROOT, state)
mark(make, that)
nmod:poss(courage, Brown)
case(Brown, 's)
nsubj(make, courage)
punct(bravery, ,)
conj(courage, bravery)
punct(heroism, ,)
cc(heroism, and)
conj(courage, heroism)
punct(courage, ``)
case(cause, in)
det(cause, a)
amod(cause, good)
obl(make, cause)
aux(make, would)
ccomp(state, make)
det(man, a)
iobj(make, man)
det(martyr, a)
obj(make, martyr)
punct(state, ;)
punct(state, ;)
nsubj(give, it)
parataxis(make, give)
obj(give, something)
case(dignity, of)
nmod(something, dignity)
advmod(one, even)
case(one, to)
det(one, a)
amod(one, bad)
obl(give, one)
punct(admit, '')
punct(admit, .)
det(Patriot, the)
compound(Patriot, Woonsocket)
nsubj(admit, Patriot)
parataxis(state, admit)
mark(deserve, that)
nsubj(deserve, John)
flat(John, Brown)
aux(deserve, might)
ccomp(admit, deserve)
obj(deserve, punishment)
cc(imprisonment, or)
conj(punishment, imprisonment)
punct(hang, ``)
cc(hang, but)
nsubj:pass(hang, he)
aux(hang, should)
advmod(more, no)
advmod(hang, more)
aux:pass(hang, be)
conj(deserve, hang)
case(Henry, than)
obl(hang, Henry)
flat(Henry, A.)
flat(Henry, wise)
cc(James, or)
conj(Henry, James)
flat(James, Buchanan)
punct(James, '')
punct(exhibit, .)
det(Mercury, the)
compound(Mercury, Newport)
nsubj(exhibit, Mercury)
conj(hang, exhibit)
amod(concern, more)
obj(exhibit, concern)
case(possibility, over)
det(possibility, the)
nmod(concern, possibility)
case(abolitionist, of)
det(abolitionist, the)
nmod(possibility, abolitionist)
acl(possibility, make)
det(martyr, a)
obj(make, martyr)
case(Brown, of)
nmod(martyr, Brown)
mark(do, than)
nsubj(do, it)
advcl(make, do)
case(development, over)
det(development, the)
obl(do, development)
case(sympathy, of)
nmod(development, sympathy)
case(he, for)
nmod(sympathy, he)
punct(state, .)
case(letter, in)
nmod:poss(letter, she)
root(ROOT, letter)
case(John, to)
nmod(letter, John)
flat(John, Brown)
punct(letter, ,)
punct(letter, ``)
nsubj(suggest, E.)
flat(E., B.)
punct(E., '')
punct(E., ,)
det(quakeress, the)
appos(E., quakeress)
case(Newport, from)
nmod(quakeress, Newport)
punct(suggest, ,)
aux(suggest, have)
root(ROOT, suggest)
mark(owed, that)
det(people, the)
amod(people, american)
nsubj(owed, people)
ccomp(suggest, owed)
amod(honor, more)
obj(owed, honor)
case(John, to)
nmod(honor, John)
flat(John, Brown)
mark(seek, for)
advcl(owed, seek)
mark(free, to)
xcomp(seek, free)
det(slave, the)
obj(free, slave)
mark(do, than)
nsubj(do, they)
advcl(free, do)
case(George, to)
obl(do, George)
flat(George, Washington)
punct(George, .)
case(day, during)
det(day, the)
amod(day, latter)
obl(seem, day)
case(November, of)
nmod(day, November)
case(day, to)
det(day, the)
nmod(day, day)
case(execution, of)
nmod:poss(execution, Brown)
case(Brown, 's)
nmod(day, execution)
punct(seem, ,)
nsubj(seem, it)
parataxis(suggest, seem)
mark(concur, that)
amod(Islanders, most)
compound(Islanders, Rhode)
nsubj(concur, Islanders)
aux(concur, do)
advmod(concur, not)
ccomp(seem, concur)
case(suggestion, in)
punct(suggestion, ``)
nmod:poss(suggestion, E.)
flat(E., B.)
case(E., 's)
punct(suggestion, '')
obl(concur, suggestion)
punct(suggest, .)
case(November, on)
obl(state, November)
nummod(November, 22)
punct(November, ,)
nummod(November, 1859)
punct(state, ,)
det(Journal, the)
compound(Journal, Providence)
compound(Journal, Daily)
nsubj(state, Journal)
root(ROOT, state)
mark(induce, that)
mark(pluck, although)
nsubj(pluck, Brown)
case(Brown, 's)
punct(pluck, ``)
advcl(admire, pluck)
punct(pluck, '')
cc(fanaticism, and)
amod(fanaticism, honest)
conj(pluck, fanaticism)
aux(admire, must)
aux:pass(admire, be)
ccomp(state, admire)
punct(induce, ,)
det(honor, any)
nsubj(induce, honor)
acl(honor, pay)
case(Brown, to)
obl(pay, Brown)
aux(induce, would)
advmod(induce, only)
ccomp(state, induce)
amod(fanatics, other)
obj(induce, fanatics)
mark(imitate, to)
advcl(induce, imitate)
nmod:poss(action, he)
obj(imitate, action)
punct(state, . )
det(week, a)
obl:npmod(later, week)
advmod(discover, later)
det(Journal, the)
compound(Journal, Daily)
nsubj(discover, Journal)
aux(discover, have)
root(ROOT, discover)
det(plan, the)
amod(plan, initial)
obj(discover, plan)
case(citizen, of)
det(citizen, some)
compound(citizen, Providence)
nmod(plan, citizen)
mark(hold, to)
xcomp(discover, hold)
det(meeting, a)
obj(hold, meeting)
acl(meeting, honor)
obj(honor, John)
flat(John, Brown)
case(day, on)
det(day, the)
obl(honor, day)
case(execution, of)
nmod:poss(execution, he)
nmod(day, execution)
punct(discover, .)
det(editor, the)
nsubj(warn, editor)
case(Journal, of)
det(Journal, the)
compound(Journal, Daily)
nmod(editor, Journal)
root(ROOT, warn)
punct(warn, ,)
punct(warn, ``)
mark(find, that)
mark(make, if)
det:predet(demonstration, such)
det(demonstration, a)
nsubj:pass(make, demonstration)
aux:pass(make, be)
advcl(find, make)
punct(find, ,)
nsubj(find, it)
aux(find, will)
advmod(find, not)
ccomp(warn, find)
obj(find, support)
cc(countenance, or)
conj(support, countenance)
case(any, from)
obl(find, any)
case(man, of)
det(man, the)
nmod(any, man)
nmod:poss(name, whose)
nsubj:pass(recognize, name)
aux:pass(recognize, be)
acl:relcl(man, recognize)
mark(have, as)
advcl(recognize, have)
det(right, a)
obj(have, right)
mark(speak, to)
acl(right, speak)
case(Providence, for)
obl(speak, Providence)
punct(have, '')
punct(write, .)
det(editor, the)
compound(Post, Providence)
compound(Post, Daily)
nmod:poss(editor, Post)
case(Post, 's)
nsubj(write, editor)
ccomp(warn, write)
mark(believe, that)
nsubj(believe, he)
aux(believe, could)
advmod(believe, not)
ccomp(write, believe)
mark(be, that)
det(meeting, a)
nsubj(be, meeting)
acl(meeting, honor)
obj(honor, Brown)
ccomp(believe, be)
mark(hold, to)
aux:pass(hold, be)
xcomp(be, hold)
case(Providence, in)
obl(hold, Providence)
punct(warn, .)
nsubj(call, he)
advmod(call, further)
root(ROOT, call)
case(people, upon)
det(people, the)
obl(call, people)
case(Providence, of)
nmod(people, Providence)
mark(rebuke, to)
advcl(call, rebuke)
det(meeting, the)
obj(rebuke, meeting)
cc(avoid, and)
conj(rebuke, avoid)
obj(avoid, disgrace)
punct(call, .)
case(December, on)
obl(hang, December)
nummod(December, 2)
punct(December, ,)
nummod(December, 1859)
punct(hang, ,)
nsubj:pass(hang, John)
flat(John, Brown)
aux:pass(hang, be)
root(ROOT, hang)
case(town, at)
compound(town, Charles)
obl(hang, town)
punct(town, ,)
appos(town, Virginia)
punct(hang, .)
amod(precaution, extraordinary)
nsubj:pass(take, precaution)
aux:pass(take, be)
root(ROOT, take)
mark(allow, so)
fixed(so, that)
det(stranger, no)
nsubj:pass(allow, stranger)
aux:pass(allow, be)
advcl(take, allow)
case(city, in)
det(city, the)
obl(allow, city)
cc(citizen, and)
det(citizen, no)
conj(city, citizen)
case(enclosure, within)
det(enclosure, the)
nmod(citizen, enclosure)
acl(enclosure, surround)
det(scaffold, the)
obj(surround, scaffold)
punct(take, .)
case(town, in)
amod(town, many)
amod(town, northern)
obl(hold, town)
cc(city, and)
compound(meeting, city)
nsubj:pass(hold, meeting)
aux:pass(hold, be)
root(ROOT, hold)
cc(toll, and)
compound(bell, church)
nsubj:pass(toll, bell)
aux:pass(toll, be)
conj(hold, toll)
punct(toll, .)
nsubj(case, such)
cop(case, be)
advmod(case, not)
det(case, the)
parataxis(hold, case)
case(Island, in)
compound(Island, Rhode)
nmod(case, Island)
punct(hold, .)
det(demonstration, the)
amod(demonstration, only)
amod(demonstration, public)
nsubj:pass(hold, demonstration)
case(honor, in)
nmod(demonstration, honor)
case(John, of)
nmod(honor, John)
flat(John, Brown)
aux:pass(hold, be)
root(ROOT, hold)
case(Hall, at)
nmod:poss(Hall, Pratt)
case(Pratt, 's)
obl(hold, Hall)
case(Providence, in)
nmod(Hall, Providence)
punct(hold, ,)
case(day, on)
det(day, the)
obl(hold, day)
case(execution, of)
nmod:poss(execution, he)
nmod(day, execution)
punct(opposition, .)
case(opposition, despite)
det(opposition, the)
obl(hold, opposition)
case(newspaper, of)
det(newspaper, the)
compound(newspaper, city)
nmod(opposition, newspaper)
punct(newspaper, ,)
det(meeting, the)
compound(meeting, Pratt)
compound(meeting, Hall)
appos(newspaper, meeting)
punct(meeting, ``)
acl:relcl(opposition, bring)
advmod(bring, together)
det(audience, a)
advmod(respectable, very)
amod(audience, respectable)
obj(bring, audience)
punct(audience, ,)
acl(audience, compose)
case(part, in)
obl(compose, part)
case(those, of)
nmod(part, those)
nsubj(distinguished, who)
aux(distinguished, have)
cop(distinguished, be)
acl:relcl(those, distinguished)
case(year, for)
obl(distinguished, year)
case(view, for)
nmod:poss(view, they)
amod(view, radical)
obl(distinguished, view)
case(subject, upon)
det(subject, the)
nmod(view, subject)
case(slavery, of)
nmod(subject, slavery)
punct(many, ,)
case(many, of)
nmod(slavery, many)
case(citizen, of)
nmod:poss(citizen, we)
amod(citizen, color)
nmod(many, citizen)
punct(those, ,)
cc(those, and)
case(those, of)
conj(citizen, those)
nsubj:pass(attract, who)
aux:pass(attract, be)
acl:relcl(those, attract)
case(place, to)
det(place, the)
obl(attract, place)
case(novelty, by)
det(novelty, the)
nmod(place, novelty)
case(gather, of)
det:predet(gather, such)
det(gather, a)
nmod(novelty, gather)
punct(gather, '')
punct(amo, .)
acl(gather, seat)
case(platform, on)
det(platform, the)
obl(seat, platform)
cop(amo, be)
advcl(seat, amo)
flat(amo, C.)
flat(amo, Barstow)
punct(amo, ,)
appos(amo, ex-mayor)
case(Providence, of)
nmod(ex-mayor, Providence)
cc(manufacturer, and)
det(manufacturer, a)
amod(manufacturer, wealthy)
amod(manufacturer, republican)
compound(manufacturer, stove)
conj(Providence, manufacturer)
punct(ex-mayor, ;)
punct(ex-mayor, ;)
appos(amo, Thomas)
flat(Thomas, Davis)
punct(Thomas, ,)
det(garrisonian, a)
amod(garrisonian, uncompromising)
appos(Thomas, garrisonian)
punct(Thomas, ;)
punct(Thomas, ;)
det(reverend, the)
appos(Thomas, reverend)
flat(reverend, Augustus)
flat(reverend, Woodbury)
punct(reverend, ,)
det(minister, a)
amod(minister, unitarian)
appos(reverend, minister)
punct(reverend, ;)
punct(reverend, ;)
det(reverend, the)
appos(reverend, reverend)
flat(reverend, George)
flat(reverend, T.)
flat(reverend, Day)
punct(reverend, ,)
det(baptist, a)
amod(will, free)
punct(will, -)
compound(baptist, will)
appos(reverend, baptist)
punct(reverend, ;)
punct(reverend, ;)
appos(reverend, daniel)
flat(daniel, W.)
flat(daniel, Vaughan)
punct(William, ,)
cc(William, and)
conj(daniel, William)
flat(William, H.)
flat(William, H.)
flat(William, Clements)
punct(hold, .)
det(two, the)
amod(two, latter)
nsubj:pass(appoint, two)
aux:pass(appoint, be)
root(ROOT, appoint)
xcomp(appoint, secretary)
punct(appoint, .)
det(speaker, the)
amod(speaker, first)
nsubj(amo, speaker)
cop(amo, be)
root(ROOT, amo)
flat(amo, C.)
flat(amo, Barstow)
nsubj:pass(choose, who)
aux(choose, have)
aux:pass(choose, be)
advmod(choose, unanimously)
acl:relcl(amo, choose)
xcomp(choose, president)
case(meeting, of)
det(meeting, the)
nmod(president, meeting)
punct(amo, .)
nsubj(speak, he)
root(ROOT, speak)
case(desire, of)
nmod:poss(desire, he)
obl(speak, desire)
mark(promote, to)
acl(desire, promote)
det(abolition, the)
obj(promote, abolition)
case(slavery, of)
nmod(abolition, slavery)
case(means, by)
amod(means, peaceable)
obl(promote, means)
cc(compare, and)
nsubj(compare, he)
conj(speak, compare)
obj(compare, John)
flat(John, Brown)
case(Ferry, of)
nmod:poss(Ferry, Harper)
case(Harper, 's)
nmod(John, Ferry)
case(John, to)
det(John, the)
nmod(Ferry, John)
flat(John, Brown)
case(period, of)
compound(Island, Rhode)
nmod:poss(period, Island)
case(Island, 's)
amod(period, colonial)
nmod(John, period)
punct(speak, .)
nsubj(conclude, Barstow)
root(ROOT, conclude)
mark(become, that)
mark(become, as)
compound(Island, Rhode)
nmod:poss(John, Island)
case(Island, 's)
nsubj(become, John)
flat(John, Brown)
ccomp(conclude, become)
det(hero, a)
amod(hero, canonize)
xcomp(become, hero)
punct(hero, ,)
mark(saint, if)
advmod(saint, not)
det(saint, a)
advcl(hero, saint)
punct(John, ,)
advmod(John, so)
aux(John, would)
nsubj(John, it)
cop(John, be)
case(John, with)
conj(hero, John)
flat(John, Brown)
case(Ferry, of)
nmod:poss(Ferry, Harper)
case(Harper, 's)
nmod(John, Ferry)
punct(conclude, .)
det(speaker, the)
amod(speaker, next)
nsubj(George, speaker)
cop(George, be)
root(ROOT, George)
flat(George, T.)
flat(George, Day)
punct(George, .)
mark(admit, although)
advcl(say, admit)
nmod:poss(guilt, Brown)
case(Brown, 's)
obj(admit, guilt)
case(grounds, on)
amod(grounds, legal)
nmod(guilt, grounds)
punct(say, ,)
nsubj(say, Day)
root(ROOT, say)
obj(say, that)
punct(say, ,)
punct(say, ``)
nsubj(criminal, Brown)
cop(criminal, be)
det(criminal, no)
amod(criminal, common)
root(ROOT, criminal)
punct(criminal, ;)
punct(criminal, ;)
nmod:poss(deed, he)
nsubj(below, deed)
cop(below, be)
advmod(below, not)
parataxis(criminal, below)
punct(law, ,)
cc(law, but)
case(law, above)
det(law, the)
conj(below, law)
punct(law, '')
punct(Woodbury, .)
case(Day, follow)
nsubj(Woodbury, Day)
cop(Woodbury, be)
parataxis(criminal, Woodbury)
nsubj(speak, who)
acl:relcl(Woodbury, speak)
case(disapproval, of)
nmod:poss(disapproval, he)
obl(speak, disapproval)
case(attempt, of)
nmod:poss(attempt, Brown)
case(Brown, 's)
nmod(disapproval, attempt)
case(insurrection, at)
amod(insurrection, servile)
nmod(attempt, insurrection)
punct(admiration, ,)
nmod:poss(admiration, he)
conj(attempt, admiration)
case(character, of)
nmod:poss(character, Brown)
case(Brown, 's)
nmod(admiration, character)
punct(opposition, ,)
cc(opposition, and)
nmod:poss(opposition, he)
conj(character, opposition)
case(slavery, to)
nmod(opposition, slavery)
punct(criminal, .)
nmod:poss(remark, Woodbury)
case(Woodbury, 's)
nsubj:pass(applaud, remark)
aux:pass(applaud, be)
root(ROOT, applaud)
case(portion, by)
det(portion, a)
obl(applaud, portion)
case(audience, of)
det(audience, the)
nmod(portion, audience)
amod(time, several)
obl:tmod(applaud, time)
cc(hiss, and)
mark(hiss, once)
nsubj(hiss, there)
aux(hiss, be)
conj(applaud, hiss)
punct(applaud, .)
det(speaker, the)
amod(speaker, fourth)
cc(last, and)
conj(fourth, last)
nsubj(Thomas, speaker)
cop(Thomas, be)
root(ROOT, Thomas)
flat(Thomas, Davis)
punct(Thomas, .)
case(time, by)
det(time, this)
obl(leave, time)
amod(number, large)
nsubj(leave, number)
case(audience, of)
det(audience, the)
nmod(number, audience)
aux(leave, have)
root(ROOT, leave)
det(hall, the)
obj(leave, hall)
punct(leave, .)
nsubj(commence, Davis)
root(ROOT, commence)
nmod:poss(remark, he)
obj(commence, remark)
case(allusion, by)
det(allusion, a)
obl(commence, allusion)
case(feeling, to)
det(feeling, the)
amod(feeling, general)
nmod(allusion, feeling)
case(opposition, of)
nmod(feeling, opposition)
obj(encounter, which)
det(meeting, the)
nsubj(encounter, meeting)
aux(encounter, have)
acl:relcl(feeling, encounter)
case(many, from)
obl(encounter, many)
case(citizen, of)
det(citizen, the)
nmod(many, citizen)
cc(newspaper, and)
det:predet(newspaper, all)
det(newspaper, the)
conj(many, newspaper)
case(city, of)
det(city, the)
nmod(newspaper, city)
punct(commence, .)
nsubj(say, he)
root(ROOT, say)
mark(question, that)
det(propriety, the)
nsubj(question, propriety)
cc(impropriety, or)
conj(propriety, impropriety)
case(gather, of)
det:predet(gather, such)
det(gather, a)
nmod(propriety, gather)
cop(question, be)
det(question, a)
ccomp(say, question)
nsubj(be, that)
acl:relcl(question, be)
mark(settle, to)
aux:pass(settle, be)
xcomp(be, settle)
case(man, by)
det(man, every)
obl(settle, man)
case(accordance, in)
obl(settle, accordance)
case(conviction, with)
det(conviction, the)
nmod(accordance, conviction)
case(judgment, of)
amod(judgment, private)
nmod(conviction, judgment)
punct(say, .)
case(remainder, in)
det(remainder, the)
obl(speak, remainder)
case(speech, of)
nmod:poss(speech, he)
nmod(remainder, speech)
nsubj(speak, Davis)
ccomp(recall, speak)
case(admiration, of)
nmod:poss(admiration, he)
obl(speak, admiration)
case(Brown, for)
nmod(admiration, Brown)
cc(warn, and)
conj(speak, warn)
obj(warn, those)
nsubj(take, who)
acl:relcl(those, take)
obj(take, part)
case(meeting, in)
det(meeting, the)
obl(take, meeting)
mark(liable, that)
nsubj(liable, they)
punct(liable, ``)
cop(liable, be)
ccomp(take, liable)
case(charge, to)
det(charge, the)
obl(liable, charge)
mark(support, that)
nsubj(support, they)
aux(support, be)
acl(charge, support)
obj(support, traitor)
cc(uphold, and)
conj(support, uphold)
obj(uphold, man)
obj(condemned, whom)
det(law, the)
nsubj(condemned, law)
aux(condemned, have)
acl:relcl(man, condemned)
punct(condemned, '')
punct(recall, .)
nsubj(recall, he)
root(ROOT, recall)
mark(proclaim, that)
case(Island, in)
compound(Island, Rhode)
obl(proclaim, Island)
det(party, a)
nsubj(proclaim, party)
case(condemnation, oppose)
case(condemnation, to)
det(state, the)
nmod:poss(condemnation, state)
case(state, 's)
nmod(party, condemnation)
case(man, of)
det(man, a)
nmod(condemnation, man)
punct(Thomas, ()
appos(man, Thomas)
flat(Thomas, W.)
flat(Thomas, dorr)
punct(Thomas, ))
ccomp(recall, proclaim)
det(state, the)
nmod:poss(action, state)
case(state, 's)
obj(proclaim, action)
case(violation, as)
det(violation, a)
obl(proclaim, violation)
case(law, of)
det(law, the)
nmod(violation, law)
case(land, of)
det(land, the)
nmod(law, land)
cc(principle, and)
det(principle, the)
conj(law, principle)
case(liberty, of)
amod(liberty, human)
nmod(principle, liberty)
punct(recall, .)
case(close, at)
det(close, the)
obl(read, close)
case(speech, of)
nmod:poss(speech, Davis)
case(Davis, 's)
nmod(close, speech)
det(preamble, the)
amod(preamble, follow)
nsubj:pass(read, preamble)
cc(resolution, and)
conj(preamble, resolution)
aux:pass(read, be)
root(ROOT, read)
case(president, by)
det(president, the)
obl(read, president)
punct(pass, ,)
cc(pass, and)
case(question, on)
det(question, the)
obl(pass, question)
case(adoption, of)
nmod:poss(adoption, they)
nmod(question, adoption)
conj(read, pass)
advmod(pass, unanimously)
punct(read, : )
advmod(risk, whereas)
punct(risk, ,)
nsubj(risk, John)
flat(John, Brown)
aux(risk, have)
advmod(risk, cheerfully)
root(ROOT, risk)
nmod:poss(life, he)
obj(risk, life)
mark(endeavor, in)
advcl(risk, endeavor)
mark(deliver, to)
xcomp(endeavor, deliver)
obj(deliver, those)
nsubj:pass(deny, who)
aux:pass(deny, be)
acl:relcl(those, deny)
det(rights, all)
obj(deny, rights)
cc(doom, and)
cop(doom, be)
det(day, this)
obl:npmod(doom, day)
conj(risk, doom)
mark(suffer, to)
advcl(doom, suffer)
obj(suffer, death)
case(effort, for)
nmod:poss(effort, he)
obl(suffer, effort)
case(behalf, in)
nmod(effort, behalf)
case(those, of)
nmod(behalf, those)
nsubj(have, who)
acl:relcl(those, have)
det(helper, no)
obj(have, helper)
punct(risk, :)
advmod(recognize, therefore)
punct(recognize, ,)
advcl(recognize, resolve)
mark(adopt, that)
punct(recognize, ,)
mark(disapprove, while)
nsubj(disapprove, we)
advmod(decidedly, most)
advmod(disapprove, decidedly)
advcl(recognize, disapprove)
det(method, the)
obj(disapprove, method)
nsubj(adopt, he)
acl:relcl(method, adopt)
mark(accomplish, to)
xcomp(adopt, accomplish)
nmod:poss(object, he)
obj(accomplish, object)
punct(willingness, ,)
cc(willingness, yet)
case(willingness, in)
nmod:poss(willingness, he)
obl(accomplish, willingness)
mark(die, to)
acl(willingness, die)
case(aid, in)
obl(die, aid)
case(cause, of)
det(cause, the)
amod(cause, great)
nmod(aid, cause)
case(freedom, of)
amod(freedom, human)
nmod(cause, freedom)
punct(recognize, ,)
nsubj(recognize, we)
advmod(recognize, still)
root(ROOT, recognize)
det(quality, the)
obj(recognize, quality)
case(nature, of)
det(nature, a)
amod(nature, noble)
nmod(quality, nature)
cc(exercise, and)
det(exercise, the)
conj(nature, exercise)
case(spirit, of)
det(spirit, a)
nmod(exercise, spirit)
obj(admire, which)
amod(man, true)
nsubj(admire, man)
aux(admire, have)
advmod(admire, always)
acl:relcl(spirit, admire)
cc(fail, and)
det(history, which)
nsubj(fail, history)
advmod(fail, never)
conj(admire, fail)
mark(honor, to)
xcomp(fail, honor)
punct(recognize, .)
advcl(call, resolve)
mark(call, that)
nmod:poss(wrong, he)
nsubj(call, wrong)
cc(bereavement, and)
conj(wrong, bereavement)
case(Kansas, in)
nmod(wrong, Kansas)
punct(wrong, ,)
acl(wrong, occasion)
case(violence, by)
det(violence, the)
obl(occasion, violence)
cc(brutality, and)
conj(violence, brutality)
case(those, of)
nmod(violence, those)
nsubj(intent, who)
cop(intent, be)
acl:relcl(those, intent)
case(propagation, on)
det(propagation, the)
obl(intent, propagation)
case(slavery, of)
nmod(propagation, slavery)
case(territory, in)
det(territory, that)
nmod(slavery, territory)
punct(call, ,)
root(ROOT, call)
case(judgment, for)
det(judgment, a)
amod(judgment, charitable)
obl(call, judgment)
case(effort, upon)
nmod:poss(effort, he)
amod(effort, recent)
nmod(judgment, effort)
case(Virginia, in)
nmod(effort, Virginia)
mark(undermine, to)
acl(effort, undermine)
det(despotism, the)
obj(undermine, despotism)
case(which, from)
obl(suffer, which)
nsubj(suffer, he)
aux(suffer, have)
acl:relcl(despotism, suffer)
punct(commend, ,)
cc(commend, and)
conj(suffer, commend)
nmod:poss(family, he)
obj(commend, family)
case(sympathy, to)
det(sympathy, the)
amod(sympathy, special)
obl(commend, sympathy)
cc(aid, and)
conj(sympathy, aid)
case(all, of)
nmod(aid, all)
nsubj(pity, who)
acl:relcl(all, pity)
obj(pity, suffering)
cc(justice, and)
conj(suffering, reverence)
conj(suffering, justice)
punct(call, .)
root(ROOT, resolve)
mark(become, that)
det(sentiment, the)
amod(sentiment, anti-slavery)
nsubj(become, sentiment)
aux(become, be)
ccomp(resolve, become)
xcomp(become, ripe)
case(action, for)
amod(action, resolute)
obl(ripe, action)
punct(resolve, .)
advcl(reason, resolve)
punct(reason, ,)
mark(find, that)
nsubj(find, we)
advcl(reason, find)
case(tragedy, in)
det(tragedy, this)
amod(tragedy, fearful)
obl(find, tragedy)
case(Ferry, at)
nmod:poss(Ferry, Harper)
case(Harper, 's)
nmod(tragedy, Ferry)
det(reason, a)
root(ROOT, reason)
case(effort, for)
advmod(earnest, more)
amod(effort, earnest)
nmod(reason, effort)
mark(remove, to)
acl(effort, remove)
det(evil, the)
obj(remove, evil)
case(slavery, of)
nmod(evil, slavery)
case(land, from)
det(land, the)
amod(land, whole)
nmod(evil, land)
advmod(speedily, as)
advmod(remove, speedily)
mark(possible, as)
advcl(speedily, possible)
punct(reason, .)
case(morning, on)
det(morning, the)
obl(write, morning)
case(meeting, follow)
det(meeting, the)
compound(Hall, Pratt)
compound(meeting, Hall)
nmod(morning, meeting)
det(editor, the)
nsubj(write, editor)
case(Journal, of)
det(Journal, the)
compound(Journal, Providence)
compound(Journal, Daily)
nmod(editor, Journal)
root(ROOT, write)
mark(avoid, that)
mark(milder, although)
det(meeting, the)
nsubj(milder, meeting)
cop(milder, be)
advcl(avoid, milder)
cc(extreme, and)
advmod(extreme, less)
conj(milder, extreme)
case(those, than)
obl(extreme, those)
acl(those, hold)
case(area, in)
amod(area, other)
obl(hold, area)
case(purpose, for)
amod(purpose, similar)
nmod(area, purpose)
punct(avoid, ,)
nsubj:pass(avoid, it)
aux(avoid, could)
aux(avoid, have)
aux:pass(avoid, be)
ccomp(write, avoid)
advmod(avoid, completely)
punct(write, .)
mark(deceive, Rather)
mark(deceive, than)
aux:pass(deceive, be)
advcl(puzzle, deceive)
punct(puzzle, ,)
det(eye, the)
nsubj:pass(puzzle, eye)
aux:pass(puzzle, be)
root(ROOT, puzzle)
punct(puzzle, ;)
punct(puzzle, ;)
mark(see, instead)
fixed(instead, of)
advcl(see, see)
obj(see, object)
case(space, in)
obl(see, space)
punct(see, ,)
nsubj(see, it)
conj(puzzle, see)
obj(see, nothing)
amod(nothing, more)
fixed(more, than)
punct(picture, --)
det(picture, a)
obj(see, picture)
punct(picture, .)
case(1911, through)
obl(see, 1911)
cc(1912, and)
conj(1911, 1912)
punct(see, ,)
mark(become, as)
det(tendency, the)
compound(plane, Cubist)
compound(plane, facet)
punct(plane, -)
nmod:poss(tendency, plane)
case(plane, 's)
nsubj(become, tendency)
mark(adhere, to)
acl(tendency, adhere)
case(surface, to)
det(surface, the)
amod(surface, literal)
obl(adhere, surface)
advcl(see, become)
xcomp(become, harder)
cc(harder, and)
conj(harder, harder)
mark(deny, to)
advcl(harder, deny)
punct(fall, ,)
det(task, the)
nsubj(fall, task)
mark(keep, of)
acl(task, keep)
det(surface, the)
obj(keep, surface)
case(length, at)
nmod:poss(length, arm)
case(arm, 's)
obl(keep, length)
conj(become, fall)
det:predet(contrivance, all)
det(contrivance, the)
advmod(contrivance, more)
case(contrivance, to)
compound(contrivance, eye-undeceiving)
obj(fall, contrivance)
punct(puzzle, . )
mark(reinforce, to)
advcl(begin, reinforce)
punct(replace, ,)
cc(replace, and)
advmod(replace, sometimes)
mark(replace, to)
conj(reinforce, replace)
punct(begin, ,)
det(typography, the)
amod(typography, simulate)
nsubj(begin, typography)
punct(Braque, ,)
conj(typography, Braque)
cc(Picasso, and)
conj(typography, Picasso)
root(ROOT, begin)
mark(mix, to)
xcomp(begin, mix)
obj(mix, sand)
cc(substance, and)
amod(substance, other)
amod(substance, foreign)
conj(sand, substance)
case(paint, with)
nmod:poss(paint, they)
obl(mix, paint)
punct(begin, ;)
punct(begin, ;)
det(texture, the)
amod(texture, granular)
nsubj(create, texture)
advmod(create, thus)
parataxis(begin, create)
advmod(call, likewise)
xcomp(create, call)
obj(call, attention)
case(reality, to)
det(reality, the)
obl(call, reality)
case(surface, of)
det(surface, the)
nmod(reality, surface)
cc(effective, and)
cop(effective, be)
conj(create, effective)
case(area, over)
advmod(larger, much)
amod(area, larger)
obl(effective, area)
punct(begin, .)
case(picture, in)
amod(picture, certain)
amod(picture, other)
obl(begin, picture)
punct(begin, ,)
advmod(begin, however)
punct(begin, ,)
nsubj(begin, Braque)
root(ROOT, begin)
mark(paint, to)
xcomp(begin, paint)
obj(paint, area)
case(simulation, in)
amod(simulation, exact)
obl(paint, simulation)
case(grain, of)
compound(grain, wood)
nmod(simulation, grain)
cc(marbleize, or)
conj(grain, marbleize)
punct(begin, .)
det(area, these)
nsubj(state, area)
punct(state, ,)
case(virtue, by)
obl(state, virtue)
case(density, of)
nmod:poss(density, they)
amod(density, abrupt)
nmod(virtue, density)
case(pattern, of)
nmod(density, pattern)
punct(state, ,)
root(ROOT, state)
det(surface, the)
amod(surface, literal)
obj(state, surface)
case(force, with)
amod(force, such)
amod(force, new)
cc(superior, and)
conj(new, superior)
nmod(surface, force)
mark(drive, that)
det(contrast, the)
amod(contrast, result)
nsubj(drive, contrast)
ccomp(state, drive)
det(printing, the)
amod(printing, simulate)
obj(drive, printing)
case(depth, into)
det(depth, a)
obl(drive, depth)
case(which, from)
obl(rescue, which)
nsubj:pass(rescue, it)
aux(rescue, could)
aux:pass(rescue, be)
acl:relcl(depth, rescue)
punct(set, --)
cc(set, and)
conj(rescue, set)
mark(shuttle, to)
advcl(set, shuttle)
advmod(shuttle, again)
punct(shuttle, --)
advmod(perspective, only)
case(perspective, by)
amod(perspective, conventional)
obl(shuttle, perspective)
punct(state, ;)
punct(state, ;)
nsubj(be, that)
aux:pass(place, be)
punct(be, ,)
mark(place, by)
aux:pass(place, be)
advcl(set, place)
case(relation, in)
amod(relation, such)
obl(place, relation)
case(form, to)
det(form, the)
nmod(relation, form)
acl(form, depict)
case(illusion, within)
det(illusion, the)
obl(depict, illusion)
mark(leave, that)
det(form, these)
nsubj(leave, form)
acl(illusion, leave)
det(room, no)
obj(leave, room)
case(typography, for)
det(typography, the)
nmod(room, typography)
case(surface, except)
case(surface, near)
det(surface, the)
nmod(typography, surface)
punct(state, .)
det(accumulation, the)
nsubj(have, accumulation)
case(device, of)
amod(device, such)
nmod(accumulation, device)
punct(have, ,)
advmod(have, however)
punct(have, ,)
advmod(have, soon)
root(ROOT, have)
det(effect, the)
obj(have, effect)
case(telescoping, of)
nmod(effect, telescoping)
punct(have, ,)
advmod(separate, even)
mark(separate, while)
advcl(have, separate)
punct(surface, ,)
obj(separate, surface)
cc(depth, and)
conj(surface, depth)
punct(have, .)
det(process, the)
nsubj(seem, process)
case(flattening, of)
nmod(process, flattening)
root(ROOT, seem)
xcomp(seem, inexorable)
punct(become, ,)
cc(become, and)
expl(become, it)
conj(seem, become)
xcomp(become, necessary)
mark(emphasize, to)
advcl(necessary, emphasize)
det(surface, the)
obj(emphasize, surface)
advmod(further, still)
advmod(emphasize, further)
mark(prevent, in)
fixed(in, order)
mark(prevent, to)
advcl(emphasize, prevent)
obj(prevent, it)
mark(fuse, from)
advcl(prevent, fuse)
case(illusion, with)
det(illusion, the)
obl(fuse, illusion)
punct(seem, .)
nsubj(reason, it)
cop(reason, be)
case(reason, for)
det(reason, this)
root(ROOT, reason)
punct(take, ,)
cc(take, and)
det(other, no)
conj(reason, other)
obj(see, that)
nsubj(see, I)
aux(see, can)
acl:relcl(other, see)
punct(take, ,)
mark(take, that)
case(September, in)
obl(take, September)
nummod(September, 1912)
punct(take, ,)
nsubj(take, Braque)
conj(reason, take)
det(step, the)
amod(step, radical)
cc(revolutionary, and)
conj(radical, revolutionary)
obj(take, step)
mark(pasting, of)
acl(step, pasting)
amod(piece, actual)
obj(pasting, piece)
case(wallpaper, of)
compound(woodgrain, imitation)
punct(woodgrain, -)
compound(wallpaper, woodgrain)
nmod(piece, wallpaper)
case(draw, to)
det(draw, a)
obl(pasting, draw)
case(paper, on)
nmod(draw, paper)
punct(pasting, ,)
mark(try, instead)
fixed(instead, of)
advcl(pasting, try)
mark(simulate, to)
xcomp(try, simulate)
nmod:poss(texture, it)
case(it, 's)
obj(simulate, texture)
case(paint, in)
obl(simulate, paint)
punct(reason, .)
nsubj(say, Picasso)
root(ROOT, say)
mark(make, that)
nsubj(make, he)
nmod:npmod(he, himself)
aux(make, have)
advmod(make, already)
ccomp(say, make)
nmod:poss(collage, he)
amod(collage, first)
obj(make, collage)
case(end, toward)
det(end, the)
obl(make, end)
case(1911, of)
nmod(end, 1911)
punct(make, ,)
mark(glue, when)
nsubj(glue, he)
advcl(make, glue)
det(piece, a)
obj(glue, piece)
case(oilcloth, of)
compound(can, imitation)
punct(can, -)
compound(oilcloth, can)
nmod(piece, oilcloth)
case(painting, to)
det(painting, a)
obl(glue, painting)
case(canva, on)
nmod(painting, canva)
punct(say, .)
expl(true, it)
cop(true, be)
root(ROOT, true)
mark(look, that)
nmod:poss(collage, he)
amod(collage, first)
nsubj(look, collage)
ccomp(true, look)
advmod(analytical, more)
xcomp(look, analytical)
case(Braque, than)
obl(analytical, Braque)
case(Braque, 's)
punct(look, ,)
nsubj(confirm, which)
aux(confirm, would)
parataxis(look, confirm)
det(date, the)
obj(confirm, date)
nsubj(assign, he)
acl:relcl(date, assign)
obj(assign, it)
punct(true, .)
cc(true, but)
expl(true, it)
cop(true, be)
advmod(true, also)
root(ROOT, true)
mark(pioneer, that)
nsubj(pioneer, Braque)
cop(pioneer, be)
det(pioneer, the)
amod(pioneer, consistent)
ccomp(true, pioneer)
case(use, in)
det(use, the)
nmod(pioneer, use)
case(texture, of)
amod(texture, simulate)
nmod(use, texture)
cc(typography, as)
fixed(as, well)
fixed(as, as)
fixed(as, of)
conj(use, typography)
punct(true, ;)
punct(true, ;)
cc(begin, and)
advmod(begin, moreover)
punct(begin, ,)
nsubj(begin, he)
aux(begin, have)
advmod(begin, already)
conj(true, begin)
mark(broaden, to)
xcomp(begin, broaden)
cc(simplify, and)
conj(broaden, simplify)
det(plane, the)
compound(plane, facet)
punct(plane, -)
obj(simplify, plane)
case(cubism, of)
compound(cubism, analytical)
nmod(plane, cubism)
advmod(far, as)
advmod(back, far)
advmod(plane, back)
case(end, as)
det(end, the)
obl(back, end)
case(1910, of)
nmod(end, 1910)
punct(back, .)
mark(examine, when)
nsubj(examine, we)
advcl(back, examine)
obj(examine, what)
det(master, each)
nsubj(say, master)
ccomp(examine, say)
cop(collage, be)
nmod:poss(collage, he)
amod(collage, first)
ccomp(say, collage)
nsubj(see, we)
acl:relcl(collage, see)
mark(happen, that)
advmod(happen, much)
det(thing, the)
amod(thing, same)
nsubj(happen, thing)
ccomp(see, happen)
case(each, in)
obl(happen, each)
punct(true, . )
root(ROOT, ()
nsubj(make, it)
root(ROOT, make)
det(difference, no)
amod(difference, real)
obj(make, difference)
mark(paper, that)
nmod:poss(collage, Braque)
case(Braque, 's)
nsubj(paper, collage)
cop(paper, be)
case(paper, on)
acl(difference, paper)
cc(eked, and)
conj(paper, eked)
compound:prt(eked, out)
case(charcoal, in)
obl(eked, charcoal)
punct(eked, ,)
mark(canva, while)
nsubj(canva, Picasso)
case(Picasso, 's)
cop(canva, be)
case(canva, on)
advcl(eked, canva)
cc(eked, and)
conj(canva, eked)
compound:prt(eked, out)
case(oil, in)
obl(eked, oil)
punct(make, .)
punct(make, ))
case(presence, by)
nmod:poss(presence, its)
amod(presence, greater)
amod(presence, corporeal)
obl(serve, presence)
cc(extraneousness, and)
nmod:poss(extraneousness, its)
amod(extraneousness, greater)
conj(presence, extraneousness)
punct(serve, ,)
det(paper, the)
amod(paper, affix)
nsubj(serve, paper)
cc(cloth, or)
conj(paper, cloth)
root(ROOT, serve)
case(moment, for)
det(moment, a)
amod(moment, seem)
obl(serve, moment)
mark(push, to)
acl(moment, push)
obj(push, everything)
amod(everything, else)
case(idea, into)
det(idea, a)
advmod(vivid, more)
amod(idea, vivid)
obl(push, idea)
case(depth, of)
nmod(idea, depth)
mark(do, than)
det(texture, the)
amod(texture, simulate)
compound(texture, printing)
cc(simulate, or)
conj(printing, simulate)
nsubj(do, texture)
aux(do, have)
advmod(do, ever)
acl(depth, do)
punct(serve, .)
cc(fall, but)
root(ROOT, here)
advmod(here, again)
punct(here, ,)
det(device, the)
compound(declare, surface)
punct(declare, -)
compound(device, declare)
nsubj(here, device)
cc:preconj(overshot, both)
advmod(device, overshot)
cc(fall, and)
conj(here, fall)
xcomp(fall, short)
case(aim, of)
nmod:poss(aim, its)
obl(short, aim)
punct(here, .)
case(illusion, for)
det(illusion, the)
obl(give, illusion)
case(depth, of)
nmod(illusion, depth)
acl(depth, create)
case(contrast, by)
det(contrast, the)
obl(create, contrast)
case(material, between)
det(material, the)
amod(material, affix)
nmod(contrast, material)
cc(everything, and)
nsubj(give, everything)
amod(everything, else)
root(ROOT, give)
obj(give, way)
advmod(give, immediately)
case(illusion, to)
det(illusion, a)
obl(give, illusion)
case(form, of)
nmod(illusion, form)
case(bas-relief, in)
nmod(form, bas-relief)
punct(illusion, ,)
nsubj(give, which)
acl:relcl(illusion, give)
obj(give, way)
case(turn, in)
obl(give, turn)
punct(illusion, ,)
cc(immediacy, and)
case(immediacy, with)
amod(immediacy, equal)
nmod(illusion, immediacy)
punct(illusion, ,)
case(illusion, to)
det(illusion, a)
obl(give, illusion)
nsubj(seem, that)
acl:relcl(illusion, seem)
mark(contain, to)
xcomp(seem, contain)
obj(contain, both)
punct(contain, --)
cc(neither, or)
conj(both, neither)
punct(give, .)
case(size, because)
fixed(because, of)
det(size, the)
obl(establish, size)
case(area, of)
det(area, the)
nmod(size, area)
nsubj(cover, it)
acl:relcl(area, cover)
punct(establish, ,)
det(paper, the)
amod(paper, paste)
nsubj(establish, paper)
root(ROOT, establish)
amod(bodily, undepicted)
compound(bodily, flatness)
obj(establish, bodily)
punct(bodily, ,)
case(indication, as)
advmod(indication, more)
fixed(more, than)
det(indication, a)
nmod(bodily, indication)
cc(sign, or)
conj(indication, sign)
punct(tend, .)
amod(flatness, Literal)
nsubj(tend, flatness)
advmod(tend, now)
parataxis(establish, tend)
mark(assert, to)
xcomp(tend, assert)
obj(assert, itself)
case(event, as)
det(event, the)
amod(event, main)
obl(assert, event)
case(picture, of)
det(picture, the)
nmod(event, picture)
punct(boomerang, ,)
cc(boomerang, and)
det(boomerang, the)
compound(boomerang, device)
conj(event, boomerang)
punct(boomerang, :)
det(illusion, the)
nsubj:pass(render, illusion)
case(depth, of)
nmod(illusion, depth)
aux:pass(render, be)
parataxis(boomerang, render)
advmod(more, even)
advmod(precarious, more)
xcomp(render, precarious)
case(before, than)
obl(precarious, before)
punct(render, .)
mark(isolate, instead)
mark(isolate, of)
root(ROOT, isolate)
det(flatness, the)
amod(flatness, literal)
obj(isolate, flatness)
mark(specify, by)
acl(flatness, specify)
cc(circumscribe, and)
conj(specify, circumscribe)
obj(specify, it)
punct(paper, ,)
det(paper, the)
amod(paper, paste)
nsubj(spread, paper)
cc(release, or)
compound(release, cloth)
conj(paper, release)
cc(spread, and)
conj(isolate, spread)
obj(spread, it)
punct(seem, ,)
cc(seem, and)
det(artist, the)
nsubj(seem, artist)
conj(spread, seem)
mark(have, to)
xcomp(seem, have)
obj(have, nothing)
acl(nothing, leave)
cc(flatness, but)
det(flatness, this)
amod(flatness, undepicted)
conj(nothing, flatness)
case(which, with)
obl(finish, which)
mark(finish, to)
acl(flatness, finish)
cc(start, as)
fixed(as, well)
mark(start, as)
conj(finish, start)
nmod:poss(picture, he)
obj(start, picture)
punct(seem, .)
det(surface, the)
amod(surface, actual)
nsubj(become, surface)
root(ROOT, become)
cc:preconj(ground, both)
obj(become, ground)
cc(background, and)
conj(ground, background)
punct(turn, ,)
cc(turn, and)
nsubj(turn, it)
conj(become, turn)
compound:prt(turn, out)
punct(turn, --)
advmod(turn, suddenly)
cc(paradoxically, and)
conj(suddenly, paradoxically)
punct(turn, --)
mark(front, that)
det(place, the)
amod(place, only)
nsubj(front, place)
acl(place, leave)
case(illusion, for)
det(illusion, a)
compound(dimensional, three)
punct(dimensional, -)
amod(illusion, dimensional)
obl(leave, illusion)
cop(front, be)
case(front, in)
advcl(turn, front)
case(surface, of)
punct(front, ,)
case(surface, upon)
punct(surface, ,)
det(surface, the)
obl(front, surface)
punct(become, .)
case(collage, in)
nmod:poss(collage, they)
advmod(first, very)
amod(collage, first)
obl(draw, collage)
punct(draw, ,)
nsubj(draw, Braque)
cc(Picasso, and)
conj(Braque, Picasso)
root(ROOT, draw)
cc(paint, or)
conj(draw, paint)
advmod(paint, over)
cc(paper, and)
case(paper, on)
det(paper, the)
amod(paper, affix)
obl(paint, paper)
cc(cloth, or)
conj(paper, cloth)
punct(draw, ,)
conj(draw, so)
fixed(so, that)
nsubj(so, certain)
case(feature, of)
det(feature, the)
amod(feature, principal)
nmod(certain, feature)
case(subject, of)
nmod:poss(subject, they)
nmod(feature, subject)
mark(depict, as)
advcl(seem, depict)
advcl(so, seem)
mark(thrust, to)
xcomp(seem, thrust)
compound:prt(thrust, out)
case(space, into)
amod(space, real)
punct(space, ,)
amod(space, bas-relief)
obl(thrust, space)
punct(seem, --)
cc(about, or)
mark(about, to)
cop(about, be)
conj(space, about)
mark(do, to)
xcomp(about, do)
advmod(do, so)
punct(about, --)
mark(remain, while)
det(rest, the)
nsubj(remain, rest)
case(subject, of)
det(subject, the)
nmod(rest, subject)
advcl(about, remain)
xcomp(remain, imbed)
obl(imbed, in)
punct(flat, ,)
cc(flat, or)
conj(imbed, flat)
obl(flat, upon)
punct(surface, ,)
det(surface, the)
obl(flat, surface)
punct(draw, .)
cc(drive, and)
det(surface, the)
nsubj:pass(drive, surface)
aux:pass(drive, be)
root(ROOT, drive)
advmod(drive, back)
punct(drive, ,)
case(surfaceness, in)
nmod:poss(surfaceness, its)
amod(surfaceness, very)
obl(drive, surfaceness)
punct(drive, ,)
advmod(contrast, only)
case(contrast, by)
det(contrast, this)
obl(drive, contrast)
punct(drive, .)
case(center, in)
det(center, the)
amod(center, upper)
obl(render, center)
case(collage, of)
nmod:poss(collage, Braque)
case(Braque, 's)
amod(collage, first)
nmod(center, collage)
punct(render, ,)
compound(Dish, fruit)
nsubj:pass(render, Dish)
punct(Dish, ()
case(collection, in)
nmod:poss(collection, Douglas)
flat(Douglas, Cooper)
case(Douglas, 's)
nmod(Dish, collection)
punct(Dish, ))
punct(render, ,)
det(bunch, a)
nsubj:pass(render, bunch)
case(grape, of)
nmod(bunch, grape)
aux:pass(render, be)
root(ROOT, render)
case(effect, with)
amod(effect, such)
advmod(vivid, conventionally)
amod(effect, vivid)
amod(effect, sculptural)
obl(render, effect)
mark(lift, as)
mark(lift, to)
advcl(render, lift)
obj(lift, it)
advmod(lift, practically)
case(plane, off)
det(plane, the)
compound(plane, picture)
obl(lift, plane)
punct(render, .)
det(illusion, the)
compound(l'oeil, trompe)
punct(l'oeil, -)
compound(illusion, l'oeil)
nsubj(enclose, illusion)
advmod(illusion, here)
cop(enclose, be)
advmod(longer, no)
advmod(enclose, longer)
root(ROOT, enclose)
case(flatness, between)
amod(flatness, parallel)
obl(enclose, flatness)
punct(seem, ,)
cc(seem, but)
conj(enclose, seem)
mark(thrust, to)
xcomp(seem, thrust)
case(surface, through)
det(surface, the)
obl(thrust, surface)
case(paper, of)
det(paper, the)
compound(paper, draw)
nmod(surface, paper)
cc(establish, and)
conj(thrust, establish)
obj(establish, depth)
case(top, on)
obl(establish, top)
case(it, of)
nmod(top, it)
punct(enclose, .)
cc(manage, yet)
det(immediacy, the)
amod(immediacy, violent)
nsubj(manage, immediacy)
case(strip, of)
det(strip, the)
compound(strip, wallpaper)
nmod(immediacy, strip)
acl(strip, paste)
case(paper, to)
det(paper, the)
obl(paste, paper)
punct(immediacy, ,)
cc(immediacy, and)
det(immediacy, the)
advmod(immediacy, only)
amod(immediacy, lesser)
conj(immediacy, immediacy)
case(capital, of)
compound(capital, block)
nmod(immediacy, capital)
nsubj(simulate, that)
acl:relcl(immediacy, simulate)
compound(letter, window)
obj(simulate, letter)
punct(manage, ,)
root(ROOT, manage)
advmod(manage, somehow)
mark(push, to)
xcomp(manage, push)
det(cluster, the)
compound(cluster, grape)
obj(push, cluster)
advmod(push, back)
case(place, into)
obl(push, place)
case(plane, on)
det(plane, the)
compound(plane, picture)
nmod(place, plane)
mark(jump, so)
fixed(so, that)
nsubj(jump, it)
aux(jump, do)
advmod(jump, not)
punct(jump, ``)
advcl(push, jump)
punct(jump, '')
punct(jump, .)
case(time, at)
det(time, the)
amod(time, same)
obl(seem, time)
punct(seem, ,)
det(strip, the)
compound(strip, wallpaper)
nsubj(seem, strip)
nmod:npmod(strip, themselves)
conj(jump, seem)
mark(push, to)
aux:pass(push, be)
xcomp(seem, push)
case(depth, into)
obl(push, depth)
case(line, by)
det(line, the)
obl(push, line)
cc(patch, and)
conj(line, patch)
case(shad, of)
nmod(line, shad)
acl(shad, charcoal)
case(they, upon)
obl(charcoal, they)
punct(place, ,)
cc(place, and)
case(place, by)
nmod:poss(place, they)
conj(line, place)
case(relation, in)
nmod(place, relation)
case(capital, to)
det(capital, the)
compound(capital, block)
nmod(relation, capital)
punct(seem, ;)
punct(seem, ;)
cc(seem, and)
det(capital, these)
nsubj(seem, capital)
conj(seem, seem)
case(turn, in)
obl(seem, turn)
mark(push, to)
aux:pass(push, be)
xcomp(seem, push)
advmod(push, back)
case(place, by)
nmod:poss(place, they)
obl(push, place)
punct(contrast, ,)
cc(contrast, and)
case(contrast, by)
conj(push, contrast)
case(corporeality, with)
det(corporeality, the)
nmod(contrast, corporeality)
case(woodgraining, of)
det(woodgraining, the)
nmod(corporeality, woodgraining)
punct(manage, .)
advmod(keep, thus)
det(part, every)
nsubj(keep, part)
cc(plane, and)
conj(part, plane)
case(picture, of)
det(picture, the)
nmod(part, picture)
root(ROOT, keep)
xcomp(keep, change)
obj(change, place)
case(depth, in)
amod(depth, relative)
obl(change, depth)
case(part, with)
det(part, every)
amod(part, other)
nmod(depth, part)
cc(plane, and)
conj(part, plane)
punct(keep, ;)
punct(keep, ;)
cc(be, and)
expl(be, it)
conj(keep, be)
mark(one, as)
mark(one, if)
det(relation, the)
amod(relation, only)
amod(relation, stable)
nsubj(one, relation)
acl(relation, leave)
case(part, among)
det(part, the)
amod(part, different)
obl(leave, part)
case(picture, of)
det(picture, the)
nmod(part, picture)
cop(one, be)
det(one, the)
amod(one, ambivalent)
cc(ambiguous, and)
conj(ambivalent, ambiguous)
advcl(be, one)
obj(have, that)
nsubj(have, each)
acl:relcl(one, have)
case(surface, with)
det(surface, the)
obl(have, surface)
punct(keep, .)
cc(say, and)
det(thing, the)
amod(thing, same)
nsubj:pass(say, thing)
punct(thing, ,)
amod(thing, more)
cc(less, or)
conj(more, less)
punct(say, ,)
aux(say, can)
aux:pass(say, be)
root(ROOT, say)
case(contents, of)
det(contents, the)
obl(say, contents)
case(collage, of)
nmod:poss(collage, Picasso)
case(Picasso, 's)
amod(collage, first)
nmod(contents, collage)
punct(say, .)
case(collage, in)
amod(collage, later)
obl(use, collage)
case(master, of)
det(master, both)
nmod(collage, master)
punct(use, ,)
det(variety, a)
nsubj:pass(use, variety)
case(material, of)
amod(material, extraneous)
nmod(variety, material)
aux:pass(use, be)
root(ROOT, use)
punct(use, ,)
advmod(work, sometimes)
case(work, in)
det(work, the)
amod(work, same)
obl(use, work)
punct(conjunction, ,)
cc(conjunction, and)
advmod(always, almost)
advmod(conjunction, always)
case(conjunction, in)
conj(use, conjunction)
case(deceive, with)
det(deceive, every)
amod(deceive, other)
compound(deceive, eye)
punct(deceive, -)
nmod(conjunction, deceive)
cc(device, and)
compound(-undeceive, eye)
compound(device, -undeceive)
conj(deceive, device)
nsubj(think, they)
aux(think, can)
acl:relcl(device, think)
obl(think, of)
punct(use, .)
det(area, the)
nsubj(adjacent, area)
root(ROOT, adjacent)
case(edge, to)
nummod(edge, one)
obl(adjacent, edge)
case(piece, of)
det(piece, a)
nmod(edge, piece)
case(material, of)
amod(material, affix)
nmod(piece, material)
punct(piece, --)
cc(form, or)
advmod(form, simply)
case(form, of)
det(form, a)
amod(form, paint)
punct(form, -)
case(form, in)
obl(shade, form)
punct(shade, --)
aux(shade, will)
aux:pass(shade, be)
parataxis(adjacent, shade)
mark(pry, to)
advcl(shade, pry)
det(edge, that)
obj(pry, edge)
advmod(pry, away)
case(surface, from)
det(surface, the)
obl(away, surface)
punct(pry, ,)
mark(draw, while)
nsubj:pass(draw, something)
aux(draw, will)
aux:pass(draw, be)
advcl(pry, draw)
punct(paint, ,)
conj(draw, paint)
cc(paste, or)
advmod(paste, even)
conj(draw, paste)
compound:prt(paste, over)
det(part, another)
obj(paste, part)
case(shape, of)
det(shape, the)
amod(shape, same)
nmod(part, shape)
mark(drive, to)
acl(shape, drive)
obj(drive, it)
advmod(drive, back)
case(depth, into)
obl(drive, depth)
punct(adjacent, .)
nsubj(cut, plane)
acl(plane, define)
advmod(parallel, as)
xcomp(define, parallel)
case(surface, to)
det(surface, the)
obl(parallel, surface)
advmod(cut, also)
root(ROOT, cut)
case(it, through)
obl(cut, it)
case(space, into)
amod(space, real)
obl(cut, space)
punct(suggest, ,)
cc(suggest, and)
det(depth, a)
nsubj:pass(suggest, depth)
aux:pass(suggest, be)
conj(cut, suggest)
advmod(suggest, optically)
nsubj(greater, which)
cop(greater, be)
ccomp(suggest, greater)
case(that, than)
obl(greater, that)
advcl(greater, establish)
advmod(establish, pictorially)
punct(cut, .)
det:predet(this, all)
nsubj(expand, this)
root(ROOT, expand)
det(oscillation, the)
obj(expand, oscillation)
case(surface, between)
nmod(oscillation, surface)
cc(depth, and)
conj(surface, depth)
mark(encompass, so)
fixed(so, as)
mark(encompass, to)
advcl(expand, encompass)
amod(space, fictive)
obj(encompass, space)
case(front, in)
obl(encompass, front)
case(surface, of)
det(surface, the)
nmod(front, surface)
cc(it, as)
fixed(as, well)
fixed(as, as)
case(it, behind)
obl(monopolize, it)
punct(monopolize, .)
nsubj(monopolize, Flatness)
aux(monopolize, may)
advmod(monopolize, now)
parataxis(expand, monopolize)
obj(monopolize, everything)
punct(flatness, ,)
cc(flatness, but)
nsubj(flatness, it)
cop(flatness, be)
det(flatness, a)
nsubj(become, flatness)
conj(monopolize, become)
advmod(ambiguous, so)
xcomp(become, ambiguous)
cc(expand, and)
conj(ambiguous, expand)
mark(turn, as)
mark(turn, to)
advcl(expand, turn)
case(illusion, into)
obl(turn, illusion)
obl:npmod(turn, itself)
punct(turn, --)
case(least, at)
obl(optical, least)
det(optical, a)
obl(turn, optical)
mark(speak, if)
advmod(speak, not)
punct(speak, ,)
advmod(speak, properly)
advcl(optical, speak)
punct(illusion, ,)
det(illusion, a)
amod(illusion, pictorial)
obj(speak, illusion)
punct(expand, .)
advcl(assimilate, depict)
punct(assimilate, ,)
amod(flatness, Cubist)
nsubj:pass(assimilate, flatness)
aux:pass(assimilate, be)
advmod(assimilate, now)
advmod(completely, almost)
advmod(assimilate, completely)
root(ROOT, assimilate)
case(kind, to)
det(kind, the)
amod(kind, literal)
punct(kind, ,)
amod(kind, undepicted)
obl(assimilate, kind)
punct(transform, ,)
cc(transform, but)
case(time, at)
det(time, the)
amod(time, same)
obl(transform, time)
nsubj(react, it)
acl:relcl(time, react)
obl(react, upon)
cc(transform, and)
advmod(transform, largely)
conj(assimilate, transform)
det(kind, the)
amod(kind, undepicted)
obj(transform, kind)
punct(do, --)
cc(do, and)
nsubj(do, it)
aux(transform, do)
advmod(do, so)
punct(do, ,)
advmod(deprive, moreover)
punct(so, ,)
mark(deprive, without)
advcl(do, deprive)
det(latter, the)
obj(deprive, latter)
case(literalness, of)
nmod:poss(literalness, its)
nmod(latter, literalness)
punct(deprive, ;)
punct(underpin, ;)
cc(underpin, rather)
punct(underpin, ,)
nsubj(underpin, it)
conj(deprive, underpin)
cc(reinforce, and)
conj(underpin, reinforce)
det(literalness, that)
obj(reinforce, literalness)
punct(re-create, ,)
conj(underpin, re-create)
obj(re-create, it)
punct(assimilate, .)
case(literalness, out)
case(literalness, of)
det(literalness, this)
amod(literalness, re-create)
obl(reemerge, literalness)
punct(reemerge, ,)
det(subject, the)
compound(subject, Cubist)
nsubj(reemerge, subject)
root(ROOT, reemerge)
punct(reemerge, .)
mark(turn, for)
nsubj(turn, it)
aux(turn, have)
root(ROOT, turn)
compound:prt(turn, out)
punct(turn, ,)
case(paradox, by)
det(paradox, a)
amod(paradox, further)
obl(turn, paradox)
case(cubism, of)
nmod(paradox, cubism)
punct(become, ,)
mark(become, that)
det(means, the)
nsubj(become, means)
case(illusion, to)
det(illusion, a)
nmod(means, illusion)
case(depth, of)
nmod(illusion, depth)
cc(plasticity, and)
conj(depth, plasticity)
aux(become, have)
advmod(become, now)
conj(turn, become)
advmod(divergent, widely)
xcomp(become, divergent)
case(means, from)
det(means, the)
obl(divergent, means)
case(representation, of)
nmod(means, representation)
cc(image, or)
conj(representation, image)
punct(divergent, .)
case(phase, in)
det(phase, the)
amod(phase, analytical)
obl(have, phase)
case(cubism, of)
nmod:poss(cubism, they)
nmod(phase, cubism)
punct(have, ,)
nsubj(have, Braque)
cc(Picasso, and)
conj(Braque, Picasso)
aux(have, have)
advmod(have, not)
advmod(have, only)
root(ROOT, have)
mark(minimize, to)
xcomp(have, minimize)
nummod(dimensionality, three)
punct(dimensionality, -)
obj(minimize, dimensionality)
advmod(minimize, simply)
mark(preserve, in)
fixed(in, order)
mark(preserve, to)
advcl(minimize, preserve)
obj(preserve, it)
punct(have, ;)
punct(have, ;)
nsubj(have, they)
aux(have, have)
advmod(have, also)
parataxis(have, have)
mark(generalize, to)
xcomp(have, generalize)
obj(generalize, it)
punct(generalize, --)
case(point, to)
det(point, the)
obl(generalize, point)
punct(point, ,)
advmod(become, finally)
punct(point, ,)
advmod(become, where)
det(illusion, the)
nsubj(become, illusion)
case(depth, of)
nmod(illusion, depth)
cc(relief, and)
conj(depth, relief)
acl:relcl(point, become)
xcomp(become, abstract)
case(entity, from)
amod(entity, specific)
compound(dimensional, three)
punct(dimensional, -)
amod(entity, dimensional)
obl(abstract, entity)
cc(render, and)
aux:pass(render, be)
conj(abstract, render)
advmod(render, largely)
case(illusion, as)
det(illusion, the)
obl(render, illusion)
case(depth, of)
nmod(illusion, depth)
cc(relief, and)
conj(depth, relief)
case(such, as)
nmod(illusion, such)
punct(illusion, :)
case(attribute, as)
det(attribute, a)
amod(attribute, disembody)
nmod(such, attribute)
cc(property, and)
amod(property, expropriate)
conj(attribute, property)
acl(property, detach)
case(everything, from)
obl(detach, everything)
advmod(itself, not)
nmod(everything, itself)
punct(have, .)
mark(save, in)
fixed(in, order)
mark(save, to)
aux:pass(save, be)
advcl(have, save)
punct(have, ,)
nsubj(have, plasticity)
aux(have, have)
root(ROOT, have)
mark(isolate, to)
aux:pass(isolate, be)
xcomp(have, isolate)
punct(have, ;)
punct(have, ;)
cc(transpose, and)
mark(transpose, as)
det(aspect, the)
nsubj:pass(transpose, aspect)
case(subject, of)
det(subject, the)
nmod(aspect, subject)
aux:pass(transpose, be)
conj(have, transpose)
case(cluster, into)
det(cluster, those)
obl(transpose, cluster)
case(more, of)
nmod(cluster, more)
cc(less, or)
conj(more, less)
amod(cluster, interchangeable)
cc(obliterate, and)
amod(obliterate, contour)
punct(obliterate, -)
conj(interchangeable, obliterate)
compound(plane, facet)
punct(plane, -)
obj(obliterate, plane)
case(plasticity, by)
det(plasticity, which)
nsubj:pass(isolate, plasticity)
aux:pass(isolate, be)
acl(plane, isolate)
case(method, under)
det(method, the)
compound(method, Cubist)
obl(isolate, method)
punct(become, ,)
det(subject, the)
nsubj(become, subject)
nmod:npmod(subject, itself)
conj(isolate, become)
advmod(unrecognizable, largely)
xcomp(become, unrecognizable)
punct(have, .)
nsubj(verge, cubism)
punct(verge, ,)
case(phase, in)
nmod:poss(phase, its)
nummod(phase, 1911)
case(1912, -)
nmod(1911, 1912)
obl(verge, phase)
punct(verge, ()
nsubj(verge, which)
det(french, the)
nsubj(verge, french)
punct(french, ,)
case(justice, with)
nmod(french, justice)
punct(call, ,)
conj(justice, call)
punct(hermetic, ``)
appos(call, hermetic)
punct(hermetic, '')
punct(hermetic, ))
cop(verge, be)
case(verge, on)
det(verge, the)
root(ROOT, verge)
case(art, of)
amod(art, abstract)
nmod(verge, art)
punct(verge, .)
nsubj(be, it)
root(ROOT, be)
advmod(be, then)
mark(confront, that)
nsubj:pass(confront, Picasso)
cc(Braque, and)
conj(Picasso, Braque)
aux:pass(confront, be)
ccomp(be, confront)
case(dilemma, with)
det(dilemma, a)
amod(dilemma, unique)
obl(confront, dilemma)
punct(be, :)
nsubj(have, they)
parataxis(confront, have)
mark(choose, to)
xcomp(have, choose)
case(illusion, between)
obl(choose, illusion)
cc(representation, and)
conj(illusion, representation)
punct(be, .)
mark(opt, if)
nsubj(opt, they)
advcl(illusion, opt)
case(illusion, for)
obl(opt, illusion)
punct(illusion, ,)
nsubj(illusion, it)
aux(illusion, could)
advmod(illusion, only)
cop(illusion, be)
root(ROOT, illusion)
case(se, per)
nmod(illusion, se)
punct(illusion, --)
det(illusion, a)
appos(illusion, illusion)
case(depth, of)
nmod(illusion, depth)
punct(relief, ,)
cc(relief, and)
case(relief, of)
conj(illusion, relief)
punct(general, ,)
advmod(general, so)
conj(illusion, general)
cc(abstract, and)
conj(general, abstract)
mark(exclude, as)
mark(exclude, to)
advcl(abstract, exclude)
det(representation, the)
obj(exclude, representation)
case(object, of)
amod(object, individual)
nmod(representation, object)
punct(illusion, .)
mark(opt, if)
punct(have, ,)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(opt, hand)
punct(opt, ,)
nsubj(opt, they)
advcl(have, opt)
case(representation, for)
obl(opt, representation)
punct(have, ,)
nsubj(have, it)
root(ROOT, have)
mark(representation, to)
cop(representation, be)
xcomp(have, representation)
case(se, per)
nmod(representation, se)
punct(representation, --)
appos(representation, representation)
case(pure, as)
obl:npmod(pure, image)
amod(representation, pure)
cc(simple, and)
conj(pure, simple)
punct(representation, ,)
case(connotation, without)
obl(representation, connotation)
punct(at, ()
advmod(one, at)
fixed(at, least)
punct(one, ,)
case(one, without)
advmod(one, more)
fixed(more, than)
amod(one, schematic)
nmod(connotation, one)
punct(one, ))
case(space, of)
det(space, the)
compound(dimensional, three)
punct(dimensional, -)
amod(space, dimensional)
nmod(one, space)
case(which, in)
obl(represent, which)
det(object, the)
nsubj(represent, object)
acl:relcl(space, represent)
advmod(exist, originally)
xcomp(represent, exist)
punct(have, .)
nsubj(collage, it)
cop(collage, be)
det(collage, the)
root(ROOT, collage)
nsubj(make, that)
acl:relcl(collage, make)
det(term, the)
obj(make, term)
case(dilemma, of)
det(dilemma, this)
nmod(term, dilemma)
amod(term, clear)
punct(collage, :)
det(representational, the)
nsubj:pass(restore, representational)
aux(restore, could)
aux:pass(restore, be)
ccomp(clear, restore)
cc(preserve, and)
conj(restore, preserve)
advmod(surface, only)
case(surface, on)
det(surface, the)
amod(surface, flat)
cc(literal, and)
conj(flat, literal)
obl(preserve, surface)
advmod(restore, now)
mark(become, that)
nsubj(become, illusion)
cc(representation, and)
conj(illusion, representation)
aux(become, have)
ccomp(now, become)
punct(become, ,)
case(time, for)
det(time, the)
amod(time, first)
obl(alternative, time)
punct(alternative, ,)
advmod(exclusive, mutually)
amod(alternative, exclusive)
obl(become, alternative)
punct(collage, .)
case(end, in)
det(end, the)
obl(plump, end)
punct(plump, ,)
nsubj(plump, Picasso)
cc(Braque, and)
conj(Picasso, Braque)
root(ROOT, plump)
case(representational, for)
det(representational, the)
obl(plump, representational)
punct(seem, ,)
cc(seem, and)
nsubj(seem, it)
aux(seem, would)
conj(plump, seem)
nsubj(do, they)
ccomp(seem, do)
advmod(deliberately, so)
advmod(do, deliberately)
punct(plump, . )
root(ROOT, ()
nsubj(provide, this)
root(ROOT, provide)
det(justification, whatever)
amod(justification, real)
obj(provide, justification)
expl(be, there)
ccomp(provide, be)
case(talk, for)
det(talk, the)
obl(be, talk)
case(reality, about)
punct(reality, ``)
nmod(talk, reality)
punct(reality, '')
punct(provide, .)
punct(provide, ))
cc(have, but)
det(logic, the)
amod(logic, inner)
punct(logic, ,)
amod(logic, formal)
nsubj(have, logic)
case(cubism, of)
nmod(logic, cubism)
punct(logic, ,)
mark(work, as)
nsubj(work, it)
advcl(have, work)
obj(work, itself)
compound:prt(work, out)
case(collage, through)
det(collage, the)
obl(work, collage)
punct(have, ,)
root(ROOT, have)
advmod(much, just)
advmod(much, as)
obj(have, much)
mark(do, to)
acl(much, do)
mark(shape, with)
advcl(do, shape)
nmod:poss(decision, they)
obj(shape, decision)
punct(have, .)
mark(place, when)
det(plane, the)
amod(plane, smaller)
compound(plane, facet)
punct(plane, -)
nsubj:pass(place, plane)
case(cubism, of)
compound(cubism, analytical)
nmod(plane, cubism)
aux:pass(place, be)
advcl(as, place)
obl(place, upon)
cc(juxtapose, or)
conj(place, juxtapose)
case(shape, with)
det(shape, the)
amod(shape, large)
punct(shape, ,)
amod(shape, dense)
obl(juxtapose, shape)
acl(shape, form)
case(material, by)
det(material, the)
amod(material, affix)
obl(form, material)
case(collage, of)
det(collage, the)
nmod(material, collage)
punct(have, ,)
nsubj(have, they)
acl:relcl(shape, have)
mark(coalesce, to)
xcomp(have, coalesce)
punct(become, --)
parataxis(have, become)
punct(synthesize, ``)
xcomp(become, synthesize)
punct(synthesize, '')
punct(become, --)
case(shape, into)
amod(shape, larger)
amod(shape, planar)
obl(become, shape)
nmod:npmod(shape, themselves)
advmod(maintain, simply)
mark(maintain, in)
fixed(in, order)
mark(maintain, to)
advcl(become, maintain)
det(integrity, the)
obj(maintain, integrity)
case(plane, of)
det(plane, the)
compound(plane, picture)
nmod(integrity, plane)
punct(have, .)
advcl(cut, leave)
case(smallness, in)
nmod:poss(smallness, they)
amod(smallness, previous)
obl:npmod(like, atom)
punct(like, -)
amod(smallness, like)
obl(leave, smallness)
punct(cut, ,)
nsubj(cut, they)
aux(cut, would)
aux(cut, have)
root(ROOT, cut)
compound:prt(cut, away)
advmod(abruptly, too)
advmod(cut, abruptly)
case(depth, into)
obl(cut, depth)
punct(cut, ;)
punct(cut, ;)
cc(isolate, and)
det(shape, the)
amod(shape, broad)
punct(shape, ,)
amod(shape, opaque)
nsubj:pass(isolate, shape)
case(paper, of)
amod(paper, paste)
nmod(shape, paper)
aux(isolate, would)
aux(isolate, have)
aux:pass(isolate, be)
conj(cut, isolate)
case(way, in)
det:predet(way, such)
det(way, a)
obl(isolate, way)
mark(make, as)
mark(make, to)
advcl(isolate, make)
obj(make, they)
xcomp(make, jump)
case(plane, out)
case(plane, of)
obl(jump, plane)
punct(cut, .)
amod(plane, large)
nsubj(tend, plane)
acl(plane, juxtapose)
case(plane, with)
amod(plane, other)
amod(plane, large)
obl(juxtapose, plane)
root(ROOT, tend)
mark(assert, to)
xcomp(tend, assert)
obj(assert, themselves)
case(shape, as)
amod(shape, independent)
obl(assert, shape)
punct(assert, ,)
cc(assert, and)
case(extent, to)
det(extent, the)
obl(assert, extent)
mark(flat, that)
nsubj(flat, they)
cop(flat, be)
acl(extent, flat)
punct(assert, ,)
nsubj(assert, they)
advmod(assert, also)
conj(tend, assert)
obj(assert, themselves)
case(silhouett, as)
obl(assert, silhouett)
punct(tend, ;)
punct(tend, ;)
cc(apt, and)
amod(silhouett, independent)
nsubj(apt, silhouett)
cop(apt, be)
conj(tend, apt)
mark(coincide, to)
advcl(apt, coincide)
case(contour, with)
det(contour, the)
amod(contour, recognizable)
obl(coincide, contour)
case(subject, of)
det(subject, the)
nmod(contour, subject)
case(which, from)
obl(start, which)
det(picture, a)
nsubj(start, picture)
acl:relcl(subject, start)
punct(start, ()
mark(start, if)
nsubj(start, it)
aux(start, do)
advcl(start, start)
case(subject, from)
det(subject, a)
obl(start, subject)
punct(start, ))
punct(tend, .)
nsubj(reaction, it)
cop(reaction, be)
case(reaction, because)
fixed(because, of)
det(reaction, this)
compound(reaction, chain)
punct(reaction, -)
root(ROOT, reaction)
advmod(much, as)
advmod(reaction, much)
case(reason, as)
case(reason, for)
det(reason, any)
amod(reason, other)
obl(reaction, reason)
punct(reaction, --)
nsubj(independence, that)
cop(independence, be)
punct(independence, ,)
case(independence, because)
fixed(because, of)
det(independence, the)
amod(independence, grow)
parataxis(reaction, independence)
case(unit, of)
det(unit, the)
amod(unit, planar)
nmod(independence, unit)
case(collage, in)
nmod(unit, collage)
case(shape, as)
det(shape, a)
nmod(independence, shape)
punct(independence, --)
mark(re-emerged, that)
det(identity, the)
nsubj(independence, identity)
case(object, of)
amod(object, depict)
nmod(identity, object)
punct(part, ,)
cc(part, or)
case(least, at)
nmod(part, least)
conj(identity, part)
case(they, of)
nmod(part, they)
punct(re-emerged, ,)
acl:relcl(part, re-emerged)
case(Braque, in)
nmod:poss(papiers, Braque)
case(Braque, 's)
cc(Picasso, and)
nmod:poss(papiers, Picasso)
case(Picasso, 's)
compound(colle, papiers)
obl(re-emerged, colle)
cc(continue, and)
conj(re-emerged, continue)
mark(remain, to)
xcomp(continue, remain)
advmod(conspicuous, more)
xcomp(remain, conspicuous)
advmod(remain, there)
punct(continue, --)
cc(silhouett, but)
advmod(silhouett, only)
case(silhouett, as)
amod(silhouett, flatten)
obl(conspicuous, silhouett)
punct(any, --)
case(any, than)
case(any, in)
nmod(silhouett, any)
case(painting, of)
nmod:poss(painting, they)
nmod(any, painting)
acl(any, do)
advmod(do, wholly)
case(oil, in)
obl(do, oil)
case(end, before)
det(end, the)
obl(do, end)
case(1913, of)
nmod(end, 1913)
punct(come, .)
compound(cubism, analytical)
nsubj(come, cubism)
acl:relcl(any, come)
case(end, to)
det(end, a)
obl(come, end)
case(collage, in)
det(collage, the)
nmod(end, collage)
punct(conclusively, ,)
cc(conclusively, but)
advmod(conclusively, not)
conj(come, conclusively)
punct(come, ;)
punct(come, ;)
cc(begin, nor)
aux(begin, do)
compound(cubism, Synthetic)
nsubj(begin, cubism)
advmod(begin, fully)
conj(come, begin)
advmod(begin, there)
punct(reaction, .)
advmod(translate, only)
mark(translate, when)
det(collage, the)
nsubj:pass(translate, collage)
aux(translate, have)
aux:pass(translate, be)
advmod(translate, exhaustively)
advcl(become, translate)
case(oil, into)
obl(translate, oil)
punct(transform, ,)
cc(transform, and)
conj(translate, transform)
case(translation, by)
det(translation, this)
obl(transform, translation)
punct(become, ,)
aux(become, do)
nsubj(become, cubism)
root(ROOT, become)
det(affair, a)
xcomp(become, affair)
case(color, of)
amod(color, positive)
nmod(affair, color)
cc(flat, and)
conj(color, flat)
punct(affair, ,)
amod(silhouett, interlock)
conj(color, silhouett)
nmod:poss(legibility, whose)
nsubj(create, legibility)
cc(placement, and)
conj(legibility, placement)
acl:relcl(silhouett, create)
obj(create, allusion)
obl(create, to)
punct(create, ,)
mark(illusion, if)
advmod(illusion, not)
det(illusion, the)
advcl(create, illusion)
case(identity, of)
punct(illusion, ,)
amod(identity, unmistakable)
compound(dimensional, three)
punct(dimensional, -)
amod(identity, dimensional)
nmod(illusion, identity)
punct(affair, .)
compound(cubism, Synthetic)
nsubj(begin, cubism)
root(ROOT, begin)
case(Picasso, with)
obl(begin, Picasso)
advmod(begin, alone)
punct(begin, ,)
advmod(begin, late)
case(1913, in)
obl(begin, 1913)
cc(early, or)
conj(1913, early)
case(1914, in)
nmod(1913, 1914)
punct(begin, ;)
punct(begin, ;)
nsubj(point, this)
cop(point, be)
det(point, the)
parataxis(begin, point)
case(which, at)
obl(take, which)
nsubj(take, he)
advmod(take, finally)
acl:relcl(point, take)
det(lead, the)
obj(take, lead)
case(innovation, in)
compound(innovation, Cubist)
obl(take, innovation)
advmod(take, away)
case(Braque, from)
obl(away, Braque)
punct(take, ,)
advmod(again, never)
advmod(take, again)
mark(relinquish, to)
advcl(again, relinquish)
obj(relinquish, it)
punct(begin, .)
cc(glimpse, but)
advmod(that, even)
case(that, before)
obl(glimpse, that)
punct(glimpse, ,)
nsubj(glimpse, Picasso)
aux(glimpse, have)
root(ROOT, glimpse)
cc(enter, and)
conj(glimpse, enter)
punct(glimpse, ,)
case(moment, for)
det(moment, a)
obl(path, moment)
punct(path, ,)
det(path, a)
amod(path, certain)
amod(path, revolutionary)
parataxis(glimpse, path)
case(which, in)
obl(precede, which)
det(one, no)
nsubj(precede, one)
aux(precede, have)
acl:relcl(path, precede)
obj(precede, he)
punct(glimpse, .)
nsubj(feel, it)
aux(feel, be)
advmod(feel, as)
advmod(feel, though)
punct(feel, ,)
case(instant, in)
det(instant, that)
obl(feel, instant)
punct(feel, ,)
nsubj(feel, he)
aux(feel, have)
root(ROOT, feel)
det(flatness, the)
obj(feel, flatness)
case(collage, of)
nmod(flatness, collage)
mark(constrict, as)
advmod(constrict, too)
advcl(feel, constrict)
cc(try, and)
aux(try, have)
advmod(try, suddenly)
conj(feel, try)
mark(escape, to)
xcomp(try, escape)
det:predet(way, all)
det(way, the)
obj(escape, way)
advmod(escape, back)
punct(escape, --)
cc(forward, or)
conj(back, forward)
punct(escape, --)
mark(literal, to)
advcl(escape, literal)
nummod(dimensionality, three)
punct(dimensionality, -)
obj(literal, dimensionality)
punct(feel, .)
nsubj(do, this)
nsubj(do, he)
root(ROOT, do)
mark(use, by)
advcl(do, use)
advmod(literal, utterly)
amod(means, literal)
obj(use, means)
mark(carry, to)
acl(means, carry)
det(push, the)
amod(push, forward)
obj(carry, push)
case(collage, of)
det(collage, the)
nmod(push, collage)
punct(collage, ()
cc(cubism, and)
case(cubism, of)
conj(collage, cubism)
case(general, in)
nmod(cubism, general)
punct(cubism, ))
advmod(space, literally)
case(space, into)
det(space, the)
amod(space, literal)
obl(carry, space)
case(front, in)
nmod(space, front)
case(plane, of)
det(plane, the)
compound(plane, picture)
nmod(front, plane)
punct(do, .)
det(time, some)
obl:tmod(cut, time)
case(1912, in)
nmod(time, 1912)
punct(cut, ,)
nsubj(cut, Picasso)
root(ROOT, cut)
compound:prt(cut, out)
cc(fold, and)
conj(cut, fold)
det(piece, a)
obj(fold, piece)
case(paper, of)
nmod(piece, paper)
case(shape, in)
det(shape, the)
obl(fold, shape)
case(guitar, of)
det(guitar, a)
nmod(shape, guitar)
punct(cut, ;)
punct(cut, ;)
case(this, to)
obl(glue, this)
nsubj(glue, he)
parataxis(cut, glue)
cc(fitted, and)
conj(glue, fitted)
amod(piece, other)
obj(fitted, piece)
case(paper, of)
nmod(piece, paper)
cc(string, and)
nummod(string, four)
amod(string, taut)
conj(paper, string)
punct(create, ,)
advmod(create, thus)
advcl(fitted, create)
det(sequence, a)
obj(create, sequence)
case(surface, of)
amod(surface, flat)
nmod(sequence, surface)
case(space, in)
amod(space, real)
cc(sculptural, and)
conj(real, sculptural)
nmod(surface, space)
case(which, to)
obl(clung, which)
expl(clung, there)
acl:relcl(space, clung)
advmod(vestige, only)
det(vestige, the)
obj(clung, vestige)
case(plane, of)
det(plane, a)
compound(plane, picture)
nmod(vestige, plane)
punct(cut, .)
det(element, the)
amod(element, affix)
nsubj:pass(extrude, element)
case(collage, of)
nmod(element, collage)
aux:pass(extrude, be)
root(ROOT, extrude)
punct(extrude, ,)
mark(be, as)
nsubj(be, it)
advcl(extrude, be)
punct(cut, ,)
cc(cut, and)
conj(extrude, cut)
compound:prt(cut, off)
case(surface, from)
det(surface, the)
amod(surface, literal)
amod(surface, pictorial)
obl(cut, surface)
mark(form, to)
acl(surface, form)
det(bas-relief, a)
obj(form, bas-relief)
punct(extrude, .)
compound(Angeles, Los)
nsubj(bow, Angeles)
case(1957, in)
nmod(Angeles, 1957)
advmod(bow, finally)
parataxis(extrude, bow)
case(skyscraper, to)
det(skyscraper, the)
obl(bow, skyscraper)
punct(extrude, .)
punct(extrude, ))
cc(maintain, and)
case(density, without)
amod(density, high)
obl(maintain, density)
case(core, in)
det(core, the)
nmod(density, core)
punct(maintain, ,)
amod(transit, rapid)
punct(transit, -)
compound(system, transit)
nsubj:pass(maintain, system)
aux(maintain, can)
advmod(maintain, not)
aux:pass(maintain, be)
root(ROOT, maintain)
advmod(maintain, economically)
punct(maintain, ,)
conj(maintain, let)
advmod(build, alone)
xcomp(let, build)
case(scratch, from)
obl(build, scratch)
case(price, at)
nmod:poss(price, today)
case(today, 's)
obl(build, price)
punct(maintain, .)
advmod(continue, however)
punct(continue, ,)
det(building, the)
nsubj(continue, building)
case(freeways, of)
nmod(building, freeways)
cc(garage, and)
conj(freeways, garage)
aux(continue, can)
advmod(continue, not)
root(ROOT, continue)
advmod(continue, forever)
punct(continue, .)
det(interchange, the)
amod(interchange, new)
nsubj(occupy, interchange)
case(freeways, among)
det(freeways, the)
nummod(freeways, four)
compound(freeways, Los)
compound(freeways, Angeles)
nmod(interchange, freeways)
punct(freeways, ,)
case(access, include)
det(access, the)
compound(construct, grade)
punct(construct, -)
amod(access, construct)
nmod(freeways, access)
punct(occupy, ,)
root(ROOT, occupy)
case(itself, by)
obl(occupy, itself)
advmod(less, no)
advmod(eighty, less)
fixed(less, than)
nummod(acre, eighty)
obl(occupy, acre)
case(land, of)
amod(land, downtown)
nmod(acre, land)
punct(acre, ,)
nummod(eighth, one)
punct(eighth, -)
appos(acre, eighth)
case(mile, of)
det(mile, a)
compound(mile, square)
nmod(eighth, mile)
punct(area, ,)
det(area, a)
appos(acre, area)
case(size, about)
det(size, the)
nmod(area, size)
case(Center, of)
compound(Center, Rockefeller)
nmod(size, Center)
case(York, in)
compound(York, New)
nmod(Center, York)
punct(area, .)
expl(hard, it)
cop(hard, be)
root(ROOT, hard)
mark(believe, to)
csubj(hard, believe)
mark(constitute, that)
det(mass, this)
nsubj(constitute, mass)
case(concrete, of)
amod(concrete, intertwined)
nmod(mass, concrete)
ccomp(believe, constitute)
obj(constitute, what)
det(law, the)
nsubj(call, law)
acl:relcl(what, call)
punct(use, ``)
det(highest, the)
amod(use, highest)
cc(best, and)
conj(highest, best)
obj(call, use)
punct(use, '')
case(land, of)
advmod(locate, centrally)
amod(land, locate)
amod(land, urban)
nmod(use, land)
punct(hard, .)
mark(affect, as)
nsubj(affect, it)
advcl(ruinous, affect)
det(city, the)
nmod:poss(situation, city)
case(city, 's)
amod(situation, fiscal)
obj(affect, situation)
punct(ruinous, ,)
det:predet(interchange, such)
det(interchange, a)
nsubj(ruinous, interchange)
cop(ruinous, be)
root(ROOT, ruinous)
punct(ruinous, ;)
punct(ruinous, ;)
nsubj(remove, it)
parataxis(ruinous, remove)
advmod(remove, forever)
case(property, from)
det(property, the)
compound(roll, tax)
compound(property, roll)
obl(remove, property)
nsubj:pass(tax, which)
aux(tax, should)
aux:pass(tax, be)
acl:relcl(property, tax)
mark(pay, to)
xcomp(tax, pay)
case(service, for)
det(service, the)
compound(service, city)
obl(pay, service)
punct(ruinous, .)
nsubj(improve, Subways)
root(ROOT, improve)
compound(value, land)
obj(improve, value)
mark(take, without)
advcl(improve, take)
compound:prt(take, away)
obj(take, land)
punct(improve, ;)
punct(improve, ;)
nsubj(boost, freeways)
parataxis(improve, boost)
obj(boost, valuation)
obj(boost, less)
punct(building, ()
mark(building, because)
det(garage, the)
nsubj(building, garage)
nsubj(require, they)
acl:relcl(garage, require)
cop(building, be)
advmod(building, not)
amod(building, prime)
advcl(boost, building)
case(shot, by)
det(shot, a)
amod(shot, long)
nmod(building, shot)
punct(building, ))
punct(reduce, ,)
cc(reduce, and)
conj(boost, reduce)
det(acreage, the)
obj(reduce, acreage)
nsubj:pass(tax, that)
aux(tax, can)
aux:pass(tax, be)
acl:relcl(acreage, tax)
punct(improve, .)
compound(Angeles, downtown)
compound(Angeles, Los)
nsubj(freeway, Angeles)
cop(freeway, be)
advmod(freeway, already)
nummod(third, two)
punct(third, -)
compound(freeway, third)
root(ROOT, freeway)
punct(interchange, ,)
conj(freeway, interchange)
punct(street, ,)
conj(freeway, street)
punct(lot, ,)
compound(lot, parking)
conj(freeway, lot)
cc(garage, and)
conj(lot, garage)
punct(freeway, --)
appos(freeway, one)
case(preposterous, of)
det(preposterous, those)
nmod(one, preposterous)
punct(freeway, ``)
mark(come, if)
punct(come, '')
nsubj(come, statistic)
aux(come, have)
advmod(come, already)
root(ROOT, come)
mark(pass, to)
xcomp(come, pass)
punct(come, .)
det(freeway, the)
nsubj(concentrate, freeway)
case(interchange, with)
advmod(space, narrowly)
amod(interchange, space)
nmod(freeway, interchange)
root(ROOT, concentrate)
cc(mitigate, and)
conj(concentrate, mitigate)
det(problem, the)
compound(problem, access)
obj(mitigate, problem)
punct(act, ,)
cc(act, but)
nsubj(act, it)
advmod(act, also)
conj(concentrate, act)
advmod(act, inevitably)
case(boundary, as)
det(boundary, a)
amod(boundary, artificial)
punct(boundary, ,)
amod(boundary, isolate)
obl(act, boundary)
punct(concentrate, .)
compound(planner, city)
nsubj(use, planner)
aux(use, do)
advmod(use, not)
advmod(use, always)
root(ROOT, use)
det(boundary, this)
obj(use, boundary)
advmod(effectively, as)
advmod(use, effectively)
mark(might, as)
nsubj(might, they)
advcl(effectively, might)
punct(use, .)
advmod(ambitious, less)
amod(plan, ambitious)
compound(plan, freeway)
nsubj(successful, plan)
aux(successful, may)
cop(successful, be)
advmod(successful, more)
root(ROOT, successful)
punct(successful, --)
advmod(raise, especially)
mark(raise, when)
det(roadway, the)
nsubj:pass(raise, roadway)
cc(interchange, and)
conj(roadway, interchange)
aux:pass(raise, be)
advcl(successful, raise)
punct(raise, ,)
advcl(raise, allow)
case(access, for)
compound(access, cross)
obl(allow, access)
case(point, at)
amod(point, many)
nmod(access, point)
cc(provide, and)
conj(allow, provide)
compound(area, parking)
obj(provide, area)
case(ramp, below)
det(ramp, the)
obl(provide, ramp)
punct(provide, .)
advmod(automobile, meanwhile)
punct(automobile, ,)
det(automobile, the)
nsubj(friend, automobile)
cc(friend, and)
nsubj(friend, it)
cop(friend, be)
nsubj(cost, friend)
det(truck, the)
nsubj(cost, truck)
aux(cost, have)
conj(successful, cost)
det(city, the)
amod(city, central)
obj(cost, city)
obj(cost, some)
case(dominance, of)
nmod:poss(dominance, its)
amod(dominance, industrial)
nmod(some, dominance)
punct(successful, .)
case(number, in)
advmod(greater, ever)
amod(number, greater)
obl(locate, number)
punct(locate, ,)
nsubj(locate, factory)
aux(locate, be)
root(ROOT, locate)
case(suburb, in)
det(suburb, the)
obl(locate, suburb)
cc(park, or)
case(park, in)
punct(park, ``)
amod(park, industrial)
conj(suburb, park)
punct(park, '')
acl(suburb, remove)
case(jurisdiction, from)
det(city, the)
nmod:poss(jurisdiction, city)
case(city, 's)
amod(jurisdiction, political)
obl(remove, jurisdiction)
punct(locate, .)
det(appeal, the)
nsubj(strong, appeal)
case(suburb, of)
det(suburb, the)
nmod(appeal, suburb)
cop(strong, be)
advmod(strong, particularly)
root(ROOT, strong)
case(industry, for)
amod(industry, heavy)
obl(strong, industry)
punct(industry, ,)
nsubj(move, which)
aux(move, must)
acl:relcl(industry, move)
amod(object, bulky)
obj(move, object)
case(line, along)
det(line, a)
amod(line, lengthy)
compound(line, assembly)
obl(move, line)
cc(want, and)
conj(move, want)
amod(area, enough)
compound(area, land)
obj(want, area)
mark(do, to)
acl(area, do)
det(job, the)
amod(job, entire)
obj(do, job)
case(floor, on)
nummod(floor, one)
obl(do, floor)
punct(strong, .)
case(industry, to)
compound(industry, light)
obl(slighter, industry)
punct(slighter, ,)
det(economy, the)
nsubj(slighter, economy)
mark(floor, of)
cop(floor, be)
case(floor, on)
nummod(floor, one)
nmod(economy, floor)
cop(slighter, be)
advmod(slighter, much)
root(ROOT, slighter)
punct(believe, ,)
cc(believe, but)
compound(engineer, efficiency)
nsubj(believe, engineer)
advmod(believe, usually)
conj(slighter, believe)
case(they, in)
obl(believe, they)
punct(prevent, ,)
cc(prevent, and)
nsubj:pass(prevent, manufacturer)
acl(manufacturer, look)
case(way, for)
obl(look, way)
mark(cut, to)
acl(way, cut)
obj(cut, cost)
aux(prevent, can)
advmod(prevent, not)
aux:pass(prevent, be)
ccomp(believe, prevent)
mark(turn, from)
advcl(prevent, turn)
case(engineer, to)
compound(engineer, efficiency)
obl(turn, engineer)
punct(slighter, .)
det(movement, this)
nsubj(new, movement)
case(industry, of)
nmod(movement, industry)
advmod(movement, away)
case(city, from)
det(city, the)
amod(city, central)
obl(away, city)
cop(new, be)
advmod(new, not)
advmod(new, so)
advmod(new, catastrophically)
root(ROOT, new)
mark(seem, as)
det(prophet, some)
nsubj(seem, prophet)
advcl(new, seem)
mark(believe, to)
xcomp(seem, believe)
punct(new, .)
nsubj(example, it)
cop(example, be)
advmod(example, merely)
det(example, the)
amod(example, latest)
root(ROOT, example)
case(growth, of)
det(growth, the)
compound(growth, leapfrog)
nmod(example, growth)
nsubj(form, which)
acl:relcl(growth, form)
det(pattern, the)
obj(form, pattern)
case(city, of)
advmod(city, virtually)
det(city, all)
amod(city, american)
nmod(pattern, city)
punct(example, .)
det(factory, the)
amod(factory, big)
nsubj(begin, factory)
nsubj(center, which)
cop(center, be)
advmod(center, relatively)
case(center, near)
det(center, the)
acl:relcl(factory, center)
case(city, of)
nmod:poss(city, we)
nmod(center, city)
punct(center, --)
det(factory, the)
compound(factory, rubber)
appos(factory, factory)
case(Akron, in)
nmod(factory, Akron)
punct(factory, ,)
nmod:poss(plant, Chrysler)
case(Chrysler, 's)
compound(plant, Detroit)
conj(factory, plant)
punct(work, ,)
compound(Steel, U.S.)
nmod:poss(Pittsburgh, Steel)
case(Steel, 's)
nsubj(work, Pittsburgh)
acl:relcl(factory, work)
punct(begin, --)
advmod(begin, often)
root(ROOT, begin)
case(site, on)
det(site, these)
obl(begin, site)
case(time, at)
det(time, a)
obl(begin, time)
mark(edge, when)
nsubj(edge, that)
cop(edge, be)
det(edge, the)
advcl(begin, edge)
case(city, of)
det(city, the)
nmod(edge, city)
punct(close, ,)
cc(close, yet)
conj(edge, close)
case(transport, to)
obl(close, transport)
punct(river, ()
appos(transport, river)
punct(river, ))
punct(storage, ,)
conj(transport, storage)
punct(pier, ()
appos(storage, pier)
punct(pier, ))
cc(power, and)
conj(transport, power)
punct(river, ()
appos(power, river)
punct(river, ))
punct(begin, .)
det(leapfrog, the)
punct(leapfrog, ``)
nsubj(phenomenon, leapfrog)
punct(leapfrog, '')
cop(phenomenon, be)
det(phenomenon, a)
root(ROOT, phenomenon)
case(railroad, of)
det(railroad, the)
nmod(phenomenon, railroad)
cc(turbine, and)
det(turbine, the)
compound(turbine, steam)
conj(railroad, turbine)
punct(blight, ,)
cc(blight, and)
det(time, the)
obl:tmod(blight, time)
mark(blight, when)
det(belt, the)
nsubj:pass(blight, belt)
case(residence, of)
nmod(belt, residence)
acl(belt, surround)
det(area, the)
amod(area, old)
compound(area, factory)
obj(surround, area)
aux:pass(blight, be)
advmod(blight, not)
advmod(blight, yet)
conj(phenomenon, blight)
punct(phenomenon, .)
det(truck, the)
nsubj(give, truck)
cc(car, and)
det(car, the)
conj(truck, car)
root(ROOT, give)
det(manufacturer, the)
iobj(give, manufacturer)
det(degree, a)
amod(degree, new)
obj(give, degree)
case(freedom, of)
nmod(degree, freedom)
mark(select, in)
acl(freedom, select)
nmod:poss(site, he)
compound(site, plant)
obj(select, site)
punct(give, .)
mark(become, until)
amod(combustion, internal)
nsubj(become, combustion)
advcl(have, become)
xcomp(become, cheap)
punct(have, ,)
nsubj(have, he)
root(ROOT, have)
mark(side, to)
cop(side, be)
case(side, near)
det(side, a)
compound(side, railroad)
xcomp(have, side)
cc(line, and)
det(line, a)
compound(line, trolley)
conj(side, line)
cc(community, or)
det(community, a)
amod(community, exist)
amod(community, large)
conj(line, community)
case(home, of)
amod(class, lower)
punct(class, -)
compound(home, class)
nmod(community, home)
punct(have, .)
det(side, the)
compound(side, railroad)
nsubj(important, side)
cop(important, be)
advmod(important, still)
root(ROOT, important)
punct(important, --)
nsubj(be, it)
parataxis(important, be)
advmod(be, usually)
punct(important, ,)
mark(always, though)
advmod(always, not)
advmod(true, always)
punct(cheaper, ,)
parataxis(important, true)
det(shipment, that)
amod(haul, long)
punct(haul, -)
compound(shipment, haul)
nsubj(cheaper, shipment)
case(rail, by)
nmod(shipment, rail)
cop(cheaper, be)
conj(important, cheaper)
case(truck, than)
obl(cheaper, truck)
punct(important, .)
cc(get, but)
nsubj(get, anybody)
nsubj(promise, who)
acl:relcl(anybody, promise)
det(volume, a)
amod(volume, substantial)
obj(promise, volume)
case(business, of)
nmod(volume, business)
aux(get, can)
root(ROOT, get)
det(railroad, a)
obj(get, railroad)
mark(run, to)
xcomp(get, run)
det(spur, a)
amod(spur, short)
obj(run, spur)
case(plant, to)
nmod:poss(plant, he)
obl(run, plant)
det(day, these)
obl:tmod(run, day)
punct(live, ,)
cc(live, and)
amod(business, many)
nsubj(live, business)
aux(live, can)
conj(get, live)
case(railroad, without)
det(railroad, the)
obl(live, railroad)
punct(get, .)
cc(be, and)
expl(be, there)
root(ROOT, be)
advmod(be, now)
amod(million, many)
nsubj(be, million)
case(worker, of)
nmod(million, worker)
case(whom, for)
nmod(million, whom)
det(factory, the)
nsubj(whom, factory)
case(lot, with)
det(lot, the)
amod(lot, big)
compound(lot, parking)
nmod(factory, lot)
punct(lot, ,)
nsubj:pass(reach, which)
aux(reach, can)
aux:pass(reach, be)
acl:relcl(lot, reach)
mark(drive, by)
advcl(reach, drive)
advmod(drive, across)
cc(pattern, or)
case(pattern, against)
det(pattern, the)
amod(pattern, usual)
obl(drive, pattern)
case(traffic, of)
compound(hour, rush)
compound(traffic, hour)
nmod(pattern, traffic)
cc(line, and)
compound(route, grille)
punct(route, -)
compound(line, route)
compound(line, bus)
conj(traffic, line)
punct(convenient, ,)
cop(convenient, be)
advmod(convenient, actually)
advmod(convenient, more)
conj(be, convenient)
case(walk, than)
det(walk, the)
obl(convenient, walk)
punct(walk, -)
case(factory, to)
nmod(walk, factory)
punct(convenient, .)
compound(Run, Willow)
nsubj:pass(serve, Run)
punct(Run, ,)
compound(electric, General)
nmod:poss(installation, electric)
case(electric, 's)
amod(installation, enormous)
appos(Run, installation)
case(Louisville, at)
nmod(installation, Louisville)
cc(syracuse, and)
conj(Louisville, syracuse)
punct(Run, ,)
det(Pentagon, the)
appos(Run, Pentagon)
punct(boe, ,)
conj(Pentagon, boe)
case(Seattle, in)
nmod(boe, Seattle)
punct(Douglas, ,)
conj(Seattle, Douglas)
cc(lockheed, and)
conj(Seattle, lockheed)
case(Angeles, in)
compound(Angeles, Los)
nmod(lockheed, Angeles)
punct(plant, ,)
det(plant, the)
amod(plant, new)
compound(plant, automobile)
compound(plant, assembly)
nmod(none, plant)
advmod(plant, everywhere)
punct(serve, --)
nsubj:pass(serve, none)
case(these, of)
nmod(none, these)
aux:pass(serve, be)
advmod(serve, substantially)
root(ROOT, serve)
case(sort, by)
det(sort, any)
obl(serve, sort)
case(transit, of)
amod(transit, conventional)
amod(transit, mass)
amod(transit, rapid)
nmod(sort, transit)
punct(serve, .)
nsubj(plant, they)
cop(plant, be)
advmod(plant, all)
amod(plant, suburban)
root(ROOT, plant)
punct(plant, ,)
advcl(plant, rely)
case(road, on)
det(road, the)
obl(rely, road)
mark(keep, to)
advcl(rely, keep)
obj(keep, they)
xcomp(keep, supply)
case(worker, with)
obl(supply, worker)
punct(plant, .)
cc(line, and)
mark(go, wherever)
det(thruway, the)
amod(thruway, new)
nsubj(go, thruway)
advcl(line, go)
compound:prt(go, up)
nmod:poss(bank, they)
nsubj:pass(line, bank)
aux:pass(line, be)
root(ROOT, line)
case(industry, by)
amod(industry, neat)
compound(industry, glass)
cc(metal, and)
conj(glass, metal)
cc(color, and)
conj(glass, color)
compound(light, brick)
compound(industry, light)
obl(line, industry)
punct(line, .)
det(drive, the)
nsubj(vision, drive)
case(Route, along)
nmod:poss(Route, Massachusetts)
case(Massachusetts, 's)
nmod(drive, Route)
nummod(Route, 128)
punct(vision, ,)
det(by-pass, the)
appos(drive, by-pass)
nsubj(make, which)
acl:relcl(by-pass, make)
det(arc, a)
obj(make, arc)
advmod(twenty, about)
nummod(mile, twenty)
obj(make, mile)
case(Boston, from)
compound(Boston, downtown)
nmod(mile, Boston)
punct(vision, ,)
aux(vision, may)
cop(vision, be)
det(vision, a)
root(ROOT, vision)
case(future, of)
det(future, the)
nmod(vision, future)
punct(vision, .)
det(future, the)
nsubj(worse, future)
aux(worse, could)
cop(worse, be)
root(ROOT, worse)
punct(worse, .)
det(plant, the)
nsubj:pass(design, plant)
case(Route, along)
nmod(plant, Route)
nummod(Route, 128)
aux:pass(design, be)
advmod(design, mostly)
advmod(design, well)
root(ROOT, design)
cc(set, and)
advmod(set, nicely)
conj(design, set)
case(rock, against)
det(rock, the)
compound(England, New)
compound(rock, England)
obl(set, rock)
cc(tree, and)
conj(rock, tree)
punct(design, .)
nsubj(grand, they)
aux(grand, can)
advmod(grand, even)
cop(grand, be)
advmod(grand, rather)
root(ROOT, grand)
punct(grand, ,)
case(monument, like)
nmod:poss(monument, Edward)
flat(Edward, land)
case(Edward, 's)
obl(grand, monument)
case(success, to)
det(success, the)
amod(success, astonishing)
nmod(monument, success)
case(polaroid, of)
nmod(success, polaroid)
punct(grand, .)
cc(deny, but)
nsubj(deny, they)
root(ROOT, deny)
det(value, the)
obj(deny, value)
case(city, of)
det(city, the)
nmod(value, city)
punct(city, --)
det(city, the)
amod(city, crowded)
punct(city, ,)
amod(city, competitive)
punct(city, ,)
amod(city, tolerant)
appos(value, city)
punct(city, ,)
det(pot, the)
punct(pot, ``)
compound(pot, melting)
appos(city, pot)
punct(pot, '')
nsubj(give, which)
acl:relcl(pot, give)
compound:prt(give, off)
advmod(many, so)
obj(give, many)
case(quality, of)
det(quality, the)
advmod(admirable, most)
amod(quality, admirable)
amod(quality, american)
nmod(many, quality)
punct(deny, .)
nsubj:pass(segregate, they)
aux:pass(segregate, be)
root(ROOT, segregate)
obj(segregate, business)
punct(business, ,)
advcl(segregate, combine)
advmod(combine, again)
case(site, on)
nummod(site, one)
obl(combine, site)
det(factory, the)
obj(combine, factory)
cc(office, and)
det(office, the)
conj(factory, office)
punct(segregate, ,)
conj(combine, draw)
nmod:poss(force, they)
compound(force, work)
obj(draw, force)
case(community, from)
amod(community, segregate)
obl(draw, community)
punct(segregate, .)
expl(interesting, it)
cop(interesting, be)
root(ROOT, interesting)
mark(note, to)
csubj(interesting, note)
advmod(many, how)
nsubj(draw, many)
case(plant, of)
det(plant, the)
nmod(many, plant)
case(Route, on)
nmod:poss(Route, Massachusetts)
case(Massachusetts, 's)
nmod(plant, Route)
nummod(Route, 128)
ccomp(note, draw)
obj(draw, most)
case(income, of)
nmod:poss(income, they)
nmod(most, income)
advmod(draw, either)
case(government, from)
det(government, the)
obl(draw, government)
case(arrangement, in)
amod(arrangement, non-competitive)
compound(arrangement, cost-plus)
nmod(government, arrangement)
punct(exploitation, ,)
cc(exploitation, or)
case(exploitation, from)
det(exploitation, the)
conj(arrangement, exploitation)
case(patent, of)
nmod(exploitation, patent)
nsubj(grant, which)
acl:relcl(patent, grant)
case(least, at)
nmod(a, least)
det(monopoly, a)
amod(monopoly, partial)
obj(grant, monopoly)
punct(interesting, . )
mark(center, while)
det(factory, the)
nsubj(center, factory)
cop(center, be)
advmod(center, always)
det(center, the)
advcl(periphery, center)
case(market, of)
det(market, the)
compound(market, labor)
nmod(center, market)
punct(periphery, ,)
nsubj(periphery, they)
cop(periphery, be)
advmod(periphery, often)
case(periphery, on)
det(city, the)
nmod:poss(periphery, city)
case(city, 's)
root(ROOT, periphery)
punct(periphery, .)
mark(spread, in)
advcl(change, spread)
det(factory, the)
obj(spread, factory)
advmod(farther, even)
advmod(spread, farther)
punct(change, ,)
det(automobile, the)
nsubj(change, automobile)
aux(change, may)
advmod(change, not)
aux(change, have)
root(ROOT, change)
case(extent, to)
det(extent, any)
amod(extent, great)
obl(change, extent)
det(pattern, the)
compound(pattern, growth)
obj(change, pattern)
case(city, of)
det(city, the)
nmod(pattern, city)
punct(change, .)
advmod(loss, even)
det(loss, the)
nsubj(painless, loss)
case(business, of)
compound(business, hotel)
nmod(loss, business)
case(motel, to)
det(outskirt, the)
nmod:poss(motel, outskirt)
case(outskirt, 's)
nmod(business, motel)
aux(painless, have)
cop(painless, be)
advmod(painless, relatively)
root(ROOT, painless)
punct(painless, ;)
punct(painless, ;)
det(demarcation, the)
compound(motel, hotel)
punct(motel, -)
compound(demarcation, motel)
nsubj(become, demarcation)
aux(become, be)
parataxis(painless, become)
xcomp(become, harder)
mark(find, to)
advcl(harder, find)
det(year, every)
obl:tmod(find, year)
punct(painless, .)
nsubj(hurt, what)
csubj(damage, hurt)
obj(hurt, most)
cop(damage, be)
det(damage, the)
root(ROOT, damage)
det(automobile, the)
nsubj(do, automobile)
aux(do, have)
acl:relcl(damage, do)
case(retail, to)
amod(city, central)
punct(city, -)
compound(retail, city)
obl(do, retail)
punct(damage, ,)
advmod(city, especially)
case(city, in)
det(city, those)
obl(do, city)
advmod(feeble, where)
amod(transit, public)
nsubj(feeble, transit)
cop(feeble, be)
acl:relcl(city, feeble)
punct(damage, .)
det(retail, some)
nsubj(spread, retail)
punct(spread, ,)
advmod(spread, of)
fixed(of, course)
punct(spread, ,)
advmod(spread, always)
root(ROOT, spread)
case(population, with)
det(population, the)
obl(spread, population)
punct(population, --)
compound(store, grocery)
appos(population, store)
punct(drugstore, ,)
conj(store, drugstore)
punct(haberdashery, ,)
amod(haberdashery, local)
conj(store, haberdashery)
cc(shop, and)
compound(shop, dress)
conj(population, shop)
punct(store, ,)
compound(store, candy)
conj(population, store)
cc(like, and)
det(like, the)
conj(population, like)
punct(spread, .)
cc(set, but)
mark(contemplate, whenever)
det(purchase, a)
amod(purchase, major)
nsubj:pass(contemplate, purchase)
aux:pass(contemplate, be)
root(ROOT, contemplate)
nummod(year, forty)
obl:npmod(ago, year)
advmod(contemplate, ago)
punct(contemplate, --)
det(set, a)
amod(set, new)
compound(set, bedroom)
parataxis(contemplate, set)
cc(coat, or)
det(coat, a)
compound(coat, winter)
conj(set, coat)
punct(bonnet, ,)
det(bonnet, a)
compound(bonnet, Easter)
conj(set, bonnet)
punct(bonnet, ,)
det(bicycle, a)
conj(set, bicycle)
case(Junior, for)
nmod(bicycle, Junior)
punct(set, --)
det(family, the)
nsubj(set, family)
acl(set, set)
compound:prt(set, off)
case(store, for)
det(store, the)
compound(department, downtown)
compound(store, department)
obl(set, store)
punct(store, ,)
advmod(greatest, where)
det(selection, the)
nsubj(greatest, selection)
aux(greatest, would)
cop(greatest, be)
acl:relcl(store, greatest)
punct(set, .)
compound(store, department)
root(ROOT, store)
acl(store, congregate)
case(location, in)
det(location, the)
punct(location, ``)
nummod(location, one)
nummod(location, hundred)
case(cent, per)
nmod(hundred, cent)
obl(congregate, location)
punct(location, '')
punct(location, ,)
advmod(converge, where)
det:predet(line, all)
det(line, the)
compound(line, transit)
nsubj(converge, line)
acl:relcl(location, converge)
punct(store, .)
det(store, these)
nsubj(there, store)
cop(there, be)
advmod(there, still)
root(ROOT, there)
punct(decline, ,)
cc(decline, but)
det(volume, the)
nsubj(decline, volume)
case(store, of)
det(store, the)
punct(store, ``)
compound(store, downtown)
nmod(volume, store)
punct(store, '')
aux(decline, have)
cop(decline, be)
case(decline, on)
det(decline, a)
amod(decline, relative)
conj(there, decline)
punct(decline, ,)
mark(sell, while)
case(city, in)
amod(city, many)
obl(sell, city)
det(branch, the)
amod(branch, suburban)
punct(branch, ``)
nsubj(sell, branch)
punct(branch, '')
advcl(decline, sell)
amod(goods, more)
cc(dry, and)
advmod(dry, more)
conj(more, dry)
obj(sell, goods)
punct(there, .)
mark(decrease, if)
det(retailer, the)
nsubj(decrease, retailer)
cc(hotelman, and)
nmod:poss(sale, hotelman)
case(hotelman, 's)
amod(sale, downtown)
compound(sale, unit)
nsubj(decrease, sale)
aux(decrease, have)
aux(decrease, be)
advcl(continue, decrease)
punct(continue, ,)
advmod(continue, however)
punct(continue, ,)
nmod:poss(volume, he)
compound(volume, dollar)
nsubj(continue, volume)
root(ROOT, continue)
mark(rise, to)
xcomp(continue, rise)
punct(dollar, ,)
cc(dollar, and)
nsubj(dollar, it)
cop(dollar, be)
conj(continue, dollar)
obj(put, which)
nsubj(put, you)
acl:relcl(dollar, put)
case(bank, in)
det(bank, the)
obl(put, bank)
punct(continue, .)
case(discussion, in)
amod(discussion, most)
obl(inflate, discussion)
case(phenomenon, of)
det(phenomenon, this)
nmod(discussion, phenomenon)
punct(inflate, ,)
det(figure, the)
nsubj:pass(inflate, figure)
aux:pass(inflate, be)
advmod(inflate, substantially)
root(ROOT, inflate)
punct(inflate, .)
det(branch, no)
amod(branch, suburban)
compound(center, shopping)
punct(center, -)
compound(branch, center)
nsubj(do, branch)
punct(branch, --)
advmod(even, not)
advmod(Hudson, even)
nmod:poss(Northland, Hudson)
case(Hudson, 's)
amod(Northland, vast)
appos(branch, Northland)
case(Detroit, outside)
nmod(Northland, Detroit)
punct(do, --)
root(ROOT, do)
obj(do, anything)
case(volume, like)
det(volume, the)
compound(volume, unit)
nmod(anything, volume)
case(business, of)
nmod(volume, business)
cc(carry, or)
conj(do, carry)
obj(carry, anything)
case(variety, like)
det(variety, the)
nmod(anything, variety)
case(merchandise, of)
nmod(variety, merchandise)
mark(find, to)
aux:pass(find, be)
acl(variety, find)
case(store, in)
det(store, the)
compound(store, home)
obl(find, store)
punct(distort, .)
compound(order, Telephone)
nsubj(distort, order)
parataxis(do, distort)
det(picture, the)
obj(distort, picture)
punct(distort, :)
det(suburbanite, the)
nsubj(call, suburbanite)
advmod(call, naturally)
parataxis(distort, call)
det(local, a)
obj(call, local)
cc(number, rather)
fixed(rather, than)
det(number, a)
amod(city, central)
punct(city, -)
compound(number, city)
obj(call, number)
mark(list, if)
nsubj:pass(list, both)
aux:pass(list, be)
advcl(call, list)
case(advertisement, in)
det(advertisement, a)
obl(list, advertisement)
punct(list, ,)
advmod(eliminate, especially)
mark(eliminate, if)
det(call, the)
amod(call, local)
nsubj(eliminate, call)
advcl(list, eliminate)
compound(tax, city)
compound(tax, sale)
obj(eliminate, tax)
punct(distort, .)
det(branch, the)
amod(branch, suburban)
nsubj(there, branch)
cop(there, be)
root(ROOT, there)
mark(credite, by)
advcl(there, credite)
case(sale, with)
det(sale, a)
obl(credite, sale)
nsubj:pass(make, which)
aux(make, would)
aux(make, have)
aux:pass(make, be)
acl:relcl(sale, make)
advmod(open, even)
mark(open, if)
nmod:poss(door, its)
compound(door, glass)
nsubj(open, door)
aux(open, have)
advmod(open, never)
advcl(make, open)
punct(procedure, .)
compound(procedure, accounting)
obj(open, procedure)
nsubj(continue, which)
acl:relcl(procedure, continue)
mark(charge, to)
xcomp(continue, charge)
det(overhead, a)
amod(overhead, disproportionate)
obj(charge, overhead)
cc(expense, and)
compound(expense, warehouse)
conj(overhead, expense)
case(store, to)
det(store, the)
amod(store, main)
nmod(overhead, store)
advcl(charge, make)
det(branch, the)
nsubj(seem, branch)
ccomp(make, seem)
advmod(profitable, more)
xcomp(seem, profitable)
mark(be, than)
nsubj(be, they)
advcl(profitable, be)
punct(make, .)
case(case, in)
amod(case, many)
nmod(statement, case)
det(statement, that)
root(ROOT, statement)
punct(statement, --)
punct(statement, ``)
nsubj(break, we)
root(ROOT, break)
advmod(operation, even)
case(operation, on)
nmod:poss(operation, we)
amod(operation, downtown)
obl(break, operation)
cc(make, and)
conj(break, make)
obj(make, money)
case(branch, on)
nmod:poss(branch, we)
obl(make, branch)
punct(make, '')
punct(break, --)
aux(turn, would)
aux:pass(turn, be)
parataxis(break, turn)
advmod(turn, around)
mark(recalculate, if)
det(analysis, the)
compound(analysis, cost)
nsubj:pass(recalculate, analysis)
aux:pass(recalculate, be)
advcl(turn, recalculate)
case(term, on)
obl(recalculate, term)
advmod(prejudicial, less)
amod(term, prejudicial)
case(store, to)
det(store, the)
amod(store, old)
obl(prejudicial, store)
punct(break, .)
nsubj(make, fear)
case(competition, of)
det(competition, the)
nmod(fear, competition)
punct(fear, --)
advmod(force, always)
det(force, a)
amod(force, great)
amod(force, motivate)
parataxis(fear, force)
case(economy, in)
det(economy, the)
amod(economy, american)
nmod(force, economy)
punct(make, --)
root(ROOT, make)
obj(make, retailer)
nsubj(have, who)
aux(have, do)
advmod(have, not)
acl:relcl(retailer, have)
amod(operation, suburban)
obj(have, operation)
xcomp(have, exaggerate)
cc:preconj(volume, both)
det(volume, the)
obj(exaggerate, volume)
cc(profitability, and)
det(profitability, the)
conj(volume, profitability)
case(branch, of)
nmod:poss(rival, they)
nmod:poss(branch, rival)
case(rival, 's)
amod(branch, shiny)
amod(branch, new)
nmod(profitability, branch)
punct(make, .)
det(fact, the)
nsubj(seem, fact)
root(ROOT, seem)
mark(be, to)
xcomp(seem, be)
mark(uneconomical, that)
advmod(many, very)
amod(store, many)
amod(store, large)
compound(store, branch)
nsubj(uneconomical, store)
cop(uneconomical, be)
ccomp(be, uneconomical)
punct(uneconomical, ,)
mark(important, that)
det(choice, the)
nsubj(important, choice)
case(location, of)
nmod(choice, location)
case(suburb, in)
det(suburb, the)
nmod(choice, suburb)
cop(important, be)
advmod(important, as)
parataxis(uneconomical, important)
mark(downtown, as)
nsubj(downtown, it)
cop(downtown, be)
advcl(important, downtown)
punct(support, ,)
cc(support, and)
mark(support, that)
advmod(suburbanize, even)
advmod(suburbanize, highly)
amod(city, suburbanize)
nsubj(support, city)
aux(support, will)
conj(important, support)
advmod(many, only)
advmod(many, so)
amod(branch, many)
amod(branch, big)
obj(support, branch)
punct(support, .)
advmod(high, moreover)
punct(high, ,)
det(cost, the)
nsubj(high, cost)
case(operation, of)
nmod(cost, operation)
cop(high, be)
advmod(high, always)
parataxis(support, high)
case(store, in)
det(store, any)
amod(store, new)
obl(high, store)
punct(high, ,)
case(banker, as)
det(banker, the)
amod(banker, conservative)
nmod(store, banker)
nsubj(act, who)
acl:relcl(banker, act)
mark(begin, as)
nsubj(begin, controller)
case(giant, for)
compound(giant, retail)
nmod(controller, giant)
aux(begin, be)
advcl(act, begin)
mark(discover, to)
xcomp(begin, discover)
punct(begin, .)
mark(say, when)
nsubj:pass(say, all)
aux(say, have)
aux:pass(say, be)
advcl(begin, say)
punct(remain, ,)
advmod(remain, however)
punct(remain, ,)
det(store, the)
amod(store, big)
compound(store, branch)
nsubj(remain, store)
ccomp(say, remain)
det(break, a)
amod(break, major)
xcomp(remain, break)
case(history, with)
nmod(break, history)
case(development, in)
det(development, the)
nmod(break, development)
case(retail, of)
amod(retail, american)
nmod(development, retail)
punct(break, .)
advmod(convenient, just)
mark(convenient, as)
det(factory, the)
amod(factory, suburban)
nsubj(convenient, factory)
aux(convenient, may)
cop(convenient, be)
advmod(convenient, more)
advcl(seem, convenient)
case(plant, than)
det(plant, the)
amod(plant, downtown)
obl(convenient, plant)
case(worker, to)
det(worker, the)
nmod(plant, worker)
case(car, with)
det(car, a)
nmod(worker, car)
punct(seem, ,)
det(trip, the)
nsubj(seem, trip)
case(center, to)
det(center, the)
compound(center, shopping)
nmod(trip, center)
aux(seem, may)
root(ROOT, seem)
advmod(easier, far)
xcomp(seem, easier)
case(store, than)
case(store, to)
det(store, the)
compound(department, downtown)
compound(store, department)
obl(easier, store)
punct(easier, ,)
mark(distance, though)
nsubj(distance, both)
cop(distance, be)
det(distance, the)
amod(distance, same)
advcl(easier, distance)
case(home, from)
nmod(distance, home)
punct(seem, .)
advmod(be, indeed)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(city, some)
nsubj(be, city)
advmod(pull, where)
det(shopping, the)
amod(shopping, suburban)
nsubj(pull, shopping)
acl:relcl(city, pull)
obj(pull, customer)
nsubj(nearer, who)
cop(nearer, be)
advmod(nearer, geographically)
advmod(nearer, much)
acl:relcl(customer, nearer)
case(downtown, to)
obl(nearer, downtown)
punct(be, .)
nsubj(report, Raymond)
flat(Raymond, Vernon)
root(ROOT, report)
mark(drive, that)
nsubj(drive, resident)
case(St., of)
compound(St., East)
nmod(resident, St.)
flat(St., Louis)
aux(drive, have)
aux(drive, be)
ccomp(report, drive)
case(Mississippi, across)
det(Mississippi, the)
obl(drive, Mississippi)
punct(drive, ,)
case(heart, through)
det(heart, the)
obl(drive, heart)
case(St., of)
compound(St., downtown)
nmod(heart, St.)
flat(St., Louis)
cc(suburb, and)
case(suburb, out)
case(suburb, to)
det(suburb, the)
amod(suburb, western)
conj(St., suburb)
case(shopping, for)
amod(shopping, major)
nmod(suburb, shopping)
punct(suburb, ,)
advmod(easier, simply)
mark(easier, because)
nsubj(easier, parking)
cop(easier, be)
advcl(drive, easier)
case(branch, at)
det(branch, the)
amod(branch, big)
obl(easier, branch)
mark(heart, than)
nsubj(heart, it)
cop(heart, be)
case(heart, in)
det(heart, the)
advcl(easier, heart)
case(town, of)
nmod(heart, town)
punct(report, .)
case(extent, to)
det(extent, the)
obl(fight, extent)
mark(parking, that)
det(problem, the)
nsubj(parking, problem)
cop(parking, be)
advmod(parking, merely)
acl(extent, parking)
punct(parking, ,)
det(management, a)
amod(management, aggressive)
compound(management, downtown)
conj(parking, management)
punct(management, ,)
case(that, like)
obl(parking, that)
case(Brothers, of)
compound(Brothers, Lazarus)
nmod(that, Brothers)
case(Columbus, in)
nmod(Brothers, Columbus)
punct(Columbus, ,)
appos(Columbus, Ohio)
punct(fight, ,)
aux(fight, can)
root(ROOT, fight)
advmod(fight, back)
advmod(fight, successfully)
mark(build, by)
advcl(fight, build)
det(garage, a)
obj(build, garage)
case(lot, on)
det(lot, the)
obl(build, lot)
amod(door, next)
obl(build, door)
punct(fight, .)
mark(frighten, if)
det(patron, the)
amod(patron, distant)
nsubj:pass(frighten, patron)
case(branch, of)
det(branch, the)
amod(branch, suburban)
nmod(patron, branch)
aux(frighten, have)
aux:pass(frighten, be)
advcl(pressure, frighten)
advmod(frighten, away)
case(problem, from)
compound(problem, downtown)
case(problem, by)
compound(problem, traffic)
obl(away, problem)
punct(pressure, ,)
advmod(pressure, however)
punct(pressure, ,)
det(store, the)
compound(store, city)
nsubj(pressure, store)
aux(pressure, can)
advmod(pressure, only)
root(ROOT, pressure)
det(politician, the)
obj(pressure, politician)
mark(do, to)
xcomp(pressure, do)
obj(do, something)
case(highway, about)
det(highway, the)
nmod(something, highway)
cc(await, or)
conj(do, await)
det(completion, the)
obj(await, completion)
case(program, of)
det(program, the)
amod(program, federal)
compound(program, highway)
nmod(completion, program)
punct(pressure, .)
cc(trouble, and)
mark(reflect, if)
det(affection, the)
nsubj(reflect, affection)
case(branch, for)
det(branch, the)
amod(branch, suburban)
nmod(affection, branch)
advcl(trouble, reflect)
det(desire, a)
obj(reflect, desire)
mark(shop, to)
acl(desire, shop)
case(people, with)
punct(people, ``)
amod(people, nice)
obl(shop, people)
punct(people, '')
punct(mass, ,)
cc(mass, rather)
fixed(rather, than)
case(mass, with)
det(mass, the)
amod(mass, indiscriminate)
amod(mass, urban)
conj(people, mass)
nsubj(support, which)
acl:relcl(mass, support)
det(store, the)
compound(department, downtown)
compound(store, department)
obj(support, store)
punct(trouble, ,)
det(location, the)
amod(location, central)
nsubj(trouble, location)
aux(trouble, may)
cop(trouble, be)
case(trouble, in)
amod(trouble, serious)
root(ROOT, trouble)
punct(trouble, .)
obl:tmod(trouble, today)
punct(trouble, ,)
case(economist, accord)
fixed(accord, to)
compound(economist, land)
compound(Homer, economist)
nsubj(trouble, Homer)
flat(Homer, Hoyt)
punct(center, ,)
compound(center, shopping)
conj(Homer, center)
cc(lot, and)
nmod:poss(lot, they)
amod(lot, associate)
compound(lot, parking)
conj(Homer, lot)
acl:relcl(Homer, cover)
det(acre, some)
nummod(acre, 46,000)
obj(cover, acre)
case(land, of)
nmod(acre, land)
punct(acre, ,)
nsubj(area, which)
cop(area, be)
advmod(area, almost)
advmod(area, exactly)
det(area, the)
amod(area, total)
compound(area, land)
acl:relcl(acre, area)
case(Districts, in)
det:predet(nation, all)
det(nation, the)
nmod:poss(Districts, nation)
case(nation, 's)
compound(Districts, Central)
compound(Districts, Business)
nsubj(put, Districts)
acl:relcl(area, put)
advmod(put, together)
punct(trouble, .)
det(store, the)
compound(store, downtown)
nsubj(continue, store)
root(ROOT, continue)
mark(offer, to)
xcomp(continue, offer)
det(inducement, the)
amod(inducement, great)
obj(offer, inducement)
case(variety, of)
nmod(inducement, variety)
punct(inducement, ,)
cc:preconj(gate, both)
case(gate, within)
nmod:poss(gate, its)
nmod(inducement, gate)
cc(street, and)
case(street, across)
det(street, the)
conj(gate, street)
punct(street, ,)
advmod(convenient, where)
amod(store, other)
compound(store, department)
nsubj(convenient, store)
cop(convenient, be)
advmod(convenient, immediately)
acl:relcl(street, convenient)
case(shopper, for)
det(shopper, the)
obl(convenient, shopper)
nsubj(want, who)
acl:relcl(shopper, want)
mark(see, to)
xcomp(want, see)
nsubj(available, what)
cop(available, be)
ccomp(see, available)
mark(make, before)
advcl(available, make)
compound:prt(make, up)
nmod:poss(mind, she)
obj(make, mind)
punct(continue, .)
mark(predict, if)
nsubj:pass(predict, anything)
aux(predict, may)
aux:pass(predict, be)
advcl(seem, predict)
case(world, in)
det(world, the)
amod(world, quicksilver)
obl(predict, world)
case(retail, of)
nmod(world, retail)
punct(seem, ,)
nsubj(seem, it)
root(ROOT, seem)
xcomp(seem, likely)
mark(come, that)
det(branch, the)
amod(branch, suburban)
nsubj(come, branch)
aux(come, will)
ccomp(likely, come)
mark(dominate, to)
xcomp(come, dominate)
nmod:poss(clothing, child)
case(child, 's)
obj(dominate, clothing)
punct(take, ()
advcl(dominate, take)
det(kid, the)
obj(take, kid)
obj(take, downtown)
cop(much, be)
advmod(much, too)
xcomp(take, much)
case(production, of)
det(production, a)
obl(much, production)
punct(much, ))
punct(gadgetry, ,)
compound(gadgetry, household)
conj(much, gadgetry)
cc(business, and)
det(business, the)
compound(business, discount)
conj(gadgetry, business)
case(item, in)
amod(item, big)
compound(item, -ticket)
nmod(business, item)
punct(seem, .)
compound(store, department)
nsubj:pass(build, store)
aux:pass(build, be)
root(ROOT, build)
case(goods, on)
amod(goods, dry)
obl(build, goods)
punct(goods, ,)
advmod(lady, especially)
nmod:poss(fashion, lady)
case(lady, 's)
appos(goods, fashion)
punct(put, ,)
cc(put, and)
case(area, in)
det(area, this)
obl(put, area)
punct(put, ,)
case(run, in)
det(run, the)
amod(run, long)
obl(put, run)
punct(put, ,)
det(branch, the)
amod(branch, suburban)
nsubj:pass(put, branch)
aux(put, will)
aux:pass(put, be)
advmod(put, hard)
conj(build, put)
mark(compete, to)
advcl(put, compete)
case(downtown, against)
obl(compete, downtown)
punct(build, .)
mark(correct, if)
det(analysis, this)
nsubj(correct, analysis)
cop(correct, be)
advcl(turn, correct)
punct(turn, ,)
det(branch, the)
amod(branch, suburban)
nsubj(turn, branch)
aux(turn, will)
root(ROOT, turn)
compound:prt(turn, out)
mark(be, to)
xcomp(turn, be)
det(management, what)
nmod:poss(accountant, management)
case(management, 's)
compound(accountant, cost)
nsubj(refuse, accountant)
ccomp(be, refuse)
mark(acknowledge, to)
xcomp(refuse, acknowledge)
punct(operation, ,)
amod(operation, marginal)
obj(acknowledge, operation)
cc(factor, rather)
fixed(rather, than)
amod(factor, major)
conj(operation, factor)
punct(turn, .)
advmod(color, historically)
case(America, in)
obl(color, America)
det(appeal, the)
nsubj(color, appeal)
case(city, of)
nmod(appeal, city)
aux(color, have)
cop(color, be)
nmod:poss(color, they)
root(ROOT, color)
cc(life, and)
conj(color, life)
punct(color, ,)
det(variety, the)
appos(color, variety)
case(experience, of)
nmod(variety, experience)
nsubj(offer, they)
acl:relcl(variety, offer)
punct(color, .)
punct(color, ``)
advmod(go, how)
nsubj(go, ya)
root(ROOT, go)
mark(keep, to)
xcomp(go, keep)
punct(em, ')
obj(keep, em)
advmod(keep, down)
case(farm, on)
det(farm, the)
obl(down, farm)
punct(go, '')
punct(go, ?)
punct(go, ?)
aux(like, be)
det(question, a)
nsubj(like, question)
nsubj(have, that)
acl:relcl(question, have)
mark(ask, to)
aux:pass(ask, be)
xcomp(have, ask)
advmod(ask, long)
mark(see, before)
nsubj(see, they)
advcl(ask, see)
obj(see, Paree)
punct(question, .)
mark(live, though)
nsubj(live, Americans)
advmod(live, usually)
advcl(see, live)
case(group, in)
obl(live, group)
acl(group, segregate)
case(origin, by)
amod(origin, national)
obl(segregate, origin)
cc(belief, or)
amod(belief, religious)
conj(origin, belief)
punct(like, ,)
nsubj(like, they)
root(ROOT, like)
mark(work, to)
xcomp(like, work)
cc(shop, and)
conj(work, shop)
case(noise, in)
det(noise, the)
obl(work, noise)
cc(vitality, and)
conj(noise, vitality)
case(downtown, of)
nmod(noise, downtown)
punct(like, .)
advmod(change, only)
det(change, a)
amod(change, radical)
nsubj(likely, change)
case(nature, in)
det(nature, the)
nmod(change, nature)
case(population, of)
det(population, the)
nmod(nature, population)
case(city, in)
det(city, the)
amod(city, central)
nmod(population, city)
aux(likely, would)
cop(likely, be)
root(ROOT, likely)
mark(destroy, to)
xcomp(likely, destroy)
det(preference, this)
obj(destroy, preference)
punct(likely, --)
cc(turn, and)
nsubj(turn, we)
aux(turn, must)
advmod(turn, now)
conj(likely, turn)
nmod:poss(attention, we)
obj(turn, attention)
case(question, to)
det(question, the)
obl(turn, question)
mark(be, of)
mark(be, whether)
det:predet(change, such)
det(change, a)
nsubj(be, change)
punct(change, ,)
advmod(foreseen, gloomily)
acl(change, foreseen)
case(diagnostician, by)
advmod(many, so)
amod(diagnostician, many)
amod(diagnostician, urban)
obl(foreseen, diagnostician)
punct(be, ,)
cop(we, be)
advmod(we, actually)
case(we, upon)
advcl(turn, we)
punct(likely, . )
nummod(argue, 4)
punct(4, .)
nsubj(argue, Suburbs)
cc(Negroes, and)
conj(Suburbs, Negroes)
case(book, in)
nmod:poss(book, they)
nmod(Suburbs, book)
punct(skyline, ,)
compound(skyline, American)
conj(Suburbs, skyline)
punct(Christopher, ,)
appos(skyline, Christopher)
flat(Christopher, Tunnard)
cc(Henry, and)
conj(Christopher, Henry)
flat(Henry, Hope)
flat(Henry, Reed)
root(ROOT, argue)
mark(what, that)
nmod:poss(deal, Franklin)
flat(Franklin, Roosevelt)
case(Franklin, 's)
compound(deal, New)
nsubj(what, deal)
cop(what, be)
ccomp(argue, what)
acl:relcl(what, make)
det(suburb, the)
amod(suburb, modern)
iobj(make, suburb)
det(possibility, a)
obj(make, possibility)
punct(possibility, --)
det(argument, a)
amod(argument, fine)
amod(argument, ironical)
appos(possibility, argument)
punct(argument, ,)
mark(consider, when)
nsubj(consider, you)
advcl(argument, consider)
advmod(tend, how)
nsubj(tend, suburbanite)
ccomp(consider, tend)
mark(vote, to)
xcomp(tend, vote)
punct(argue, .)
det(superhighway, the)
amod(superhighway, first)
nsubj:pass(build, superhighway)
punct(superhighway, --)
compound(York, New)
nmod:poss(Henry, York)
case(York, 's)
appos(superhighway, Henry)
flat(Henry, Hudson)
cc(Chicago, and)
nmod:poss(shore, Chicago)
case(Chicago, 's)
compound(shore, Lake)
conj(Henry, shore)
punct(Bridge, ,)
nmod:poss(Bridge, San)
flat(San, Francisco)
case(San, 's)
compound(Bridge, Bay)
appos(shore, Bridge)
cc(approach, and)
nmod:poss(approach, its)
conj(shore, approach)
punct(slice, ,)
det(slice, a)
amod(slice, good)
appos(approach, slice)
case(Turnpike, of)
det(Turnpike, the)
compound(Turnpike, Pennsylvania)
nmod(slice, Turnpike)
punct(build, --)
aux:pass(build, be)
root(ROOT, build)
case(part, as)
obl(build, part)
case(program, of)
det(program, the)
amod(work, federal)
compound(program, work)
nmod(part, program)
nsubj(go, which)
aux(go, be)
acl:relcl(program, go)
mark(cure, to)
xcomp(go, cure)
det(depression, the)
obj(cure, depression)
punct(build, .)
case(time, at)
det(time, the)
amod(time, same)
obl(permit, time)
punct(permit, ,)
nmod:poss(Administration, Roosevelt)
case(Roosevelt, 's)
compound(Housing, Federal)
compound(Administration, Housing)
nsubj(permit, Administration)
punct(Administration, ,)
acl(Administration, couple)
case(policy, with)
nmod:poss(policy, Henry)
flat(Henry, Morgenthau)
case(Henry, 's)
amod(money, cheap)
punct(money, -)
compound(policy, money)
obl(couple, policy)
punct(permit, ,)
root(ROOT, permit)
amod(family, ordinary)
amod(family, lower)
punct(class, -)
amod(class, middle)
punct(class, -)
compound(family, class)
obj(permit, family)
mark(build, to)
acl(family, build)
nmod:poss(home, they)
amod(home, own)
obj(build, home)
punct(permit, .)
nsubj(get, Bankers)
nsubj(reluctant, who)
aux(reluctant, have)
cop(reluctant, be)
acl:relcl(Bankers, reluctant)
mark(lend, to)
xcomp(reluctant, lend)
case(security, without)
amod(security, better)
obl(lend, security)
case(house, than)
det(house, the)
nmod(security, house)
nmod:npmod(house, itself)
root(ROOT, get)
mark(find, that)
nsubj(get, security)
case(government, from)
det(government, the)
compound(government, U.)
compound(government, S.)
nmod(security, government)
punct(get, ;)
punct(get, ;)
appos(security, householder)
nsubj(unable, who)
aux(unable, have)
cop(unable, be)
acl:relcl(householder, unable)
mark(pick, to)
xcomp(unable, pick)
compound:prt(pick, up)
det(burden, the)
obj(pick, burden)
case(mortgage, of)
amod(term, short)
punct(term, -)
compound(mortgage, term)
amod(interest, high)
punct(interest, -)
compound(mortgage, interest)
nmod(burden, mortgage)
ccomp(get, find)
nsubj(borrow, they)
aux(borrow, could)
ccomp(find, borrow)
case(year, for)
compound(five, twenty)
punct(five, -)
nummod(year, five)
obl(borrow, year)
case(cent, at)
nummod(cent, 4)
compound(cent, per)
obl(borrow, cent)
punct(borrow, ,)
case(aegis, under)
compound(aegis, government)
obl(borrow, aegis)
punct(get, .)
mark(lose, before)
advcl(make, lose)
obj(lose, itself)
case(sand, in)
det(sand, the)
obl(lose, sand)
case(Century, of)
det(Century, the)
amod(Century, 19th)
nmod(sand, Century)
punct(make, ,)
det(stream, the)
amod(stream, grand)
nsubj(make, stream)
case(decoration, of)
amod(decoration, italian)
compound(decoration, Renaissance)
amod(decoration, architectural)
nmod(stream, decoration)
root(ROOT, make)
det(appearance, a)
amod(appearance, last)
obj(make, appearance)
case(frescos, in)
det(frescos, the)
compound(frescos, Brumidi)
nmod(appearance, frescos)
case(Rotunda, of)
det(Rotunda, the)
compound(Rotunda, Capitol)
nmod(frescos, Rotunda)
case(Washington, in)
nmod(frescos, Washington)
punct(make, .)
det(generation, the)
amod(generation, artistic)
nsubj:pass(train, generation)
mark(train, after)
nsubj:pass(train, Brumidi)
aux:pass(train, be)
root(ROOT, train)
case(Paris, in)
det(Paris, the)
obl(train, Paris)
case(time, of)
det(time, that)
nmod(Paris, time)
case(standard, to)
det(standard, a)
advmod(meticulous, more)
amod(standard, meticulous)
obl(train, standard)
case(execution, of)
nmod(standard, execution)
punct(tend, ,)
cc(tend, and)
conj(train, tend)
mark(overlook, to)
xcomp(tend, overlook)
obj(overlook, greatness)
case(conception, of)
nmod(greatness, conception)
advmod(easy, where)
nsubj(easy, fault)
cc(weakness, and)
conj(fault, weakness)
cop(easy, be)
advcl(overlook, easy)
mark(find, to)
advcl(easy, find)
punct(train, .)
cc(conception, but)
nsubj(conception, it)
cop(conception, be)
det(conception, a)
amod(conception, great)
root(ROOT, conception)
punct(conception, .)
det(ceiling, the)
amod(ceiling, open)
nsubj(belong, ceiling)
punct(ceiling, ,)
case(figure, with)
amod(figure, allegorical)
cc(classical, and)
conj(allegorical, classical)
nmod(ceiling, figure)
acl(figure, throw)
case(mass, in)
obl(throw, mass)
case(sky, against)
det(sky, the)
nmod(mass, sky)
punct(frieze, :)
det(frieze, the)
amod(frieze, close)
appos(ceiling, frieze)
punct(frieze, ,)
advmod(divide, formally)
acl(frieze, divide)
case(scene, into)
amod(scene, historical)
obl(divide, scene)
cc(tie, and)
advmod(tie, tightly)
conj(divide, tie)
case(wall, to)
det(wall, the)
compound(wall, stone)
obl(tie, wall)
punct(belong, ,)
root(ROOT, belong)
case(ordering, in)
nmod:poss(ordering, they)
amod(ordering, large)
obl(belong, ordering)
case(line, to)
det(line, the)
nmod(ordering, line)
case(Correggio, of)
nmod(line, Correggio)
cc(follower, and)
nmod:poss(follower, he)
amod(follower, baroque)
conj(Correggio, follower)
punct(belong, .)
det(descent, the)
nsubj(remote, descent)
aux(remote, may)
cop(remote, be)
root(ROOT, remote)
punct(example, ,)
cc(example, but)
nsubj(example, this)
cop(example, be)
advmod(example, surely)
det(example, the)
advmod(example, only)
amod(scale, full)
punct(scale, -)
compound(example, scale)
conj(remote, example)
case(inheritance, of)
det(inheritance, that)
amod(inheritance, vigorous)
nmod(example, inheritance)
case(States, in)
det(States, the)
compound(States, United)
nmod(inheritance, States)
punct(remote, .)
nsubj(design, Constantino)
flat(Constantino, Brumidi)
root(ROOT, design)
det(scheme, the)
amod(scheme, decorative)
obj(design, scheme)
case(whole, as)
det(whole, a)
obl(design, whole)
punct(design, ,)
case(collaboration, in)
obl(design, collaboration)
case(architect, with)
det(architect, the)
nmod(collaboration, architect)
appos(architect, Charles)
flat(Charles, U.)
flat(Charles, Walter)
punct(design, ,)
case(time, at)
det(time, the)
obl(design, time)
mark(make, when)
nsubj:pass(make, plan)
aux(make, be)
aux:pass(make, be)
acl(time, make)
mark(replace, to)
xcomp(make, replace)
det(dome, the)
amod(dome, wooden)
obj(replace, dome)
case(Bullfinch, of)
nmod(dome, Bullfinch)
case(structure, with)
det(structure, the)
amod(structure, present)
advmod(larger, much)
amod(structure, larger)
compound(structure, iron)
obl(replace, structure)
punct(design, .)
case(year, after)
amod(year, many)
obl(able, year)
cc(interruption, and)
amod(interruption, many)
conj(year, interruption)
nsubj(able, he)
cop(able, be)
root(ROOT, able)
mark(finish, to)
xcomp(able, finish)
det(fresco, the)
compound(fresco, canopy)
obj(finish, fresco)
punct(frieze, ,)
cc(frieze, and)
advmod(less, slightly)
advmod(half, less)
fixed(less, than)
det:predet(frieze, half)
det(frieze, the)
conj(fresco, frieze)
punct(finish, ,)
advcl(finish, begin)
case(group, with)
det(group, the)
compound(group, Liberty)
obl(begin, group)
case(door, opposite)
det(door, the)
compound(door, East)
nmod(group, door)
punct(end, ,)
cc(end, and)
conj(finish, end)
case(William, with)
obl(end, William)
flat(William, Penn)
punct(William, ,)
appos(William, all)
cc(leg, but)
nummod(leg, one)
conj(William, leg)
punct(end, ,)
mark(end, when)
det(accident, a)
amod(accident, tragic)
nsubj(end, accident)
advcl(end, end)
nmod:poss(career, he)
obj(end, career)
punct(able, .)
nsubj(leave, he)
root(ROOT, leave)
case(sketch, at)
nmod:poss(sketch, he)
compound(sketch, death)
obl(leave, sketch)
punct(sketch, ,)
acl(sketch, draw)
case(scale, to)
obl(draw, scale)
punct(leave, ,)
case(rest, for)
det(rest, the)
obl(leave, rest)
case(circle, of)
det(circle, the)
nmod(rest, circle)
punct(leave, .)
nsubj:pass(carry, these)
aux:pass(carry, be)
root(ROOT, carry)
compound:prt(carry, out)
advmod(too, not)
advmod(faithfully, too)
advmod(carry, faithfully)
case(filippo, by)
obl(carry, filippo)
flat(filippo, Costaggini)
punct(filippo, ,)
nsubj(begin, who)
acl:relcl(filippo, begin)
mark(supply, by)
advcl(begin, supply)
det(member, the)
amod(member, missing)
obj(supply, member)
case(founder, to)
det(founder, the)
obl(supply, founder)
case(Pennsylvania, of)
nmod(founder, Pennsylvania)
cc(noting, and)
conj(supply, noting)
case(pencil, in)
obl(noting, pencil)
punct(noting, ,)
case(italian, in)
obl(noting, italian)
punct(begin, ,)
mark(begin, that)
nsubj(begin, he)
punct(begin, ``)
ccomp(noting, begin)
case(point, at)
det(point, this)
obl(begin, point)
punct(begin, '')
punct(begin, .)
mark(use, when)
nsubj(use, Costaggini)
aux(use, have)
advcl(begin, use)
compound:prt(use, up)
det:predet(sketch, all)
det(sketch, the)
obj(use, sketch)
nummod(foot, thirty)
punct(foot, -)
nummod(foot, six)
nsubj:pass(leave, foot)
case(frieze, of)
amod(frieze, empty)
nmod(foot, frieze)
aux:pass(leave, be)
acl:relcl(sketch, leave)
compound:prt(leave, over)
punct(carry, . )
det(void, a)
amod(void, blank)
amod(void, undecorated)
nsubj(disfigure, void)
punct(void, ,)
acl(void, plaster)
case(roughcast, in)
obl(plaster, roughcast)
punct(disfigure, ,)
root(ROOT, disfigure)
det(wall, the)
obj(disfigure, wall)
case(Rotunda, of)
det(Rotunda, the)
nmod(wall, Rotunda)
case(1951, until)
obl(disfigure, 1951)
punct(disfigure, .)
advmod(advise, then)
punct(disfigure, ,)
advcl(disfigure, advise)
case(architect, by)
det(architect, the)
obl(advise, architect)
case(Capitol, of)
det(Capitol, the)
nmod(architect, Capitol)
punct(Capitol, ,)
det(Committee, the)
compound(Committee, Joint)
appos(Capitol, Committee)
case(Library, for)
det(Library, the)
nmod(Committee, Library)
punct(responsible, ,)
advmod(responsible, traditionally)
amod(Committee, responsible)
case(work, for)
det(work, the)
obl(responsible, work)
case(art, of)
nmod(work, art)
case(building, in)
det(building, the)
nmod(work, building)
punct(order, ,)
conj(responsible, order)
det(space, the)
obj(order, space)
xcomp(order, clear)
cc(paint, and)
conj(clear, paint)
case(fresco, in)
obl(paint, fresco)
punct(show, ,)
mark(show, to)
advcl(clear, show)
punct(peace, ``)
det(peace, the)
obj(show, peace)
case(War, after)
det(War, the)
compound(War, Civil)
nmod(peace, War)
punct(peace, '')
punct(peace, ,)
punct(War, ``)
det(War, the)
compound(War, spanish)
punct(War, -)
compound(War, American)
appos(War, War)
punct(War, '')
punct(birth, ,)
cc(birth, and)
punct(birth, ``)
det(birth, the)
conj(War, birth)
case(Aviation, of)
nmod(birth, Aviation)
punct(birth, '')
punct(match, ,)
mark(match, to)
acl(birth, match)
cc(technique, as)
fixed(as, nearly)
fixed(as, as)
amod(technique, feasible)
nmod:poss(technique, Brumidi)
case(Brumidi, 's)
obl(match, technique)
cc(composition, and)
conj(technique, composition)
punct(disfigure, .)
advmod(order, later)
det(cleaning, the)
nsubj:pass(order, cleaning)
cc(restoration, and)
conj(cleaning, restoration)
aux:pass(order, be)
root(ROOT, order)
punct(order, ,)
advmod(part, first)
case(part, of)
det(part, the)
amod(part, older)
obl(order, part)
case(frieze, of)
det(frieze, the)
nmod(part, frieze)
punct(part, ,)
advmod(canopy, finally)
case(canopy, of)
det(canopy, the)
nmod(frieze, canopy)
punct(order, .)
nsubj(follow, what)
csubj(description, follow)
cop(description, be)
advmod(description, therefore)
det(description, a)
root(ROOT, description)
case(undertakings, of)
nummod(undertakings, three)
amod(undertakings, separate)
nmod(description, undertakings)
punct(undertakings, ,)
det(frescoing, the)
amod(frescoing, new)
conj(undertakings, frescoing)
case(gap, of)
det(gap, the)
nmod(frescoing, gap)
punct(essays, ,)
cc(essays, and)
det(essays, the)
amod(essays, successive)
conj(undertakings, essays)
case(conservation, in)
nmod(essays, conservation)
punct(essays, ,)
case(discussion, with)
det(discussion, some)
nmod(essays, discussion)
case(problem, of)
nmod(discussion, problem)
nsubj(arise, that)
acl:relcl(problem, arise)
case(connection, in)
obl(arise, connection)
case(each, with)
nmod(connection, each)
punct(description, .)
case(use, for)
det(use, the)
obl(keep, use)
case(student, of)
nmod(use, student)
cc(restorer, and)
amod(restorer, future)
conj(student, restorer)
punct(keep, ,)
det(record, a)
amod(record, full)
punct(record, ,)
compound(record, day)
punct(day, -)
case(day, by)
punct(day, -)
nmod(day, day)
nsubj:pass(keep, record)
aux:pass(keep, be)
root(ROOT, keep)
case(undertakings, of)
det(undertakings, all)
nummod(undertakings, three)
obl(keep, undertakings)
punct(report, ,)
amod(report, complete)
amod(report, technical)
conj(undertakings, report)
case(what, on)
nmod(report, what)
nsubj(find, we)
acl:relcl(what, find)
cc(what, and)
obj(do, what)
nsubj(do, we)
conj(find, do)
punct(keep, .)
nsubj:pass(consult, these)
aux(consult, may)
aux:pass(consult, be)
root(ROOT, consult)
case(office, in)
det(office, the)
obl(consult, office)
case(architect, of)
det(architect, the)
nmod(office, architect)
case(Capitol, of)
det(Capitol, the)
nmod(architect, Capitol)
punct(Library, ,)
cc(Library, or)
det(Library, the)
conj(architect, Library)
case(Congress, of)
nmod(Library, Congress)
punct(consult, .)
det(preliminary, the)
amod(preliminary, first)
nsubj(inspect, preliminary)
aux(inspect, be)
root(ROOT, inspect)
det(length, the)
amod(length, unfinished)
obj(inspect, length)
case(frieze, of)
nmod(length, frieze)
punct(jumble, ,)
det(jumble, a)
conj(length, jumble)
case(coat, of)
amod(coat, roughcast)
cc(finish, and)
conj(roughcast, finish)
nmod(jumble, coat)
punct(length, ,)
appos(length, all)
case(condition, in)
amod(condition, bad)
nmod(all, condition)
punct(inspect, .)
nsubj:pass(decide, it)
aux:pass(decide, be)
root(ROOT, decide)
mark(strip, to)
xcomp(decide, strip)
det(area, the)
amod(area, whole)
obj(strip, area)
advmod(strip, down)
case(brick, to)
det(brick, the)
obl(down, brick)
punct(replace, ,)
cc(replace, and)
mark(replace, to)
conj(strip, replace)
det(coat, the)
amod(coat, rough)
obj(replace, coat)
case(thickness, up)
fixed(up, to)
nummod(inch, one)
compound(thickness, inch)
obl(replace, thickness)
mark(agree, to)
acl(thickness, agree)
case(preparation, with)
det(artist, the)
amod(artist, older)
nmod:poss(preparation, artist)
case(artist, 's)
obl(agree, preparation)
punct(preparation, ,)
case(mortar, with)
det(mortar, a)
nmod(preparation, mortar)
punct(mortar, ,)
nummod(part, one)
appos(mortar, part)
amod(lime, slake)
appos(mortar, lime)
punct(sand, ,)
nummod(sand, three)
compound(sand, part)
conj(mortar, sand)
punct(put, ,)
mark(put, to)
aux:pass(put, be)
acl(mortar, put)
compound:prt(put, on)
case(layer, in)
nummod(layer, two)
obl(put, layer)
punct(decide, .)
nsubj:pass(draw, cartoon)
aux:pass(draw, be)
root(ROOT, draw)
amod(size, full)
obj(draw, size)
punct(draw, ,)
mark(make, after)
nsubj:pass(make, sketch)
aux(make, have)
aux:pass(make, be)
advcl(draw, make)
mark(satisfy, to)
xcomp(make, satisfy)
det:predet(authority, all)
det(authority, the)
obj(satisfy, authority)
punct(draw, .)
expl(be, there)
root(ROOT, be)
det(difficulty, some)
nsubj(be, difficulty)
advmod(be, here)
punct(be, .)
nsubj(have, one)
root(ROOT, have)
mark(manage, to)
xcomp(have, manage)
det(subject, the)
amod(subject, give)
obj(manage, subject)
punct(subject, ,)
nummod(event, three)
amod(event, diverse)
amod(event, recent)
appos(subject, event)
punct(manage, ,)
advmod(make, so)
mark(make, as)
mark(make, to)
advcl(manage, make)
iobj(make, they)
obj(make, part)
case(frieze, of)
det(frieze, a)
amod(frieze, classical)
nmod(part, frieze)
punct(be, ,)
punct(be, --)
nsubj(be, that)
parataxis(have, be)
punct(be, ,)
det(pattern, a)
nsubj(be, pattern)
case(figure, of)
amod(figure, large)
nmod(pattern, figure)
acl(figure, fill)
det(space, the)
obj(fill, space)
punct(fill, ,)
mark(much, with)
advmod(else, not)
advmod(else, much)
advmod(fill, else)
punct(fill, ,)
case(background, against)
det(background, a)
amod(background, blank)
obl(fill, background)
punct(have, . )
advmod(squeeze, moreover)
punct(squeeze, ,)
det(representation, all)
nummod(representation, three)
nsubj:pass(squeeze, representation)
aux(squeeze, must)
aux:pass(squeeze, be)
root(ROOT, squeeze)
advmod(squeeze, comfortably)
case(more, into)
obl(more, little)
advmod(squeeze, more)
case(length, than)
det(length, the)
obl(more, length)
nsubj(allow, Brumidi)
acl:relcl(length, allow)
case(one, for)
det(one, each)
obl(allow, one)
case(he, of)
nmod(one, he)
punct(allow, .)
mark(arrange, when)
nsubj:pass(arrange, it)
aux:pass(arrange, be)
advmod(arrange, all)
advcl(squeeze, arrange)
mark(fit, to)
xcomp(arrange, fit)
punct(interrupt, ,)
cc(interrupt, and)
advmod(interrupt, not)
mark(interrupt, to)
conj(fit, interrupt)
det(flow, the)
amod(flow, lengthwise)
obj(interrupt, flow)
case(movement, of)
nmod(flow, movement)
case(frieze, in)
det(frieze, the)
nmod(movement, frieze)
punct(try, ,)
det(cartoon, the)
nsubj:pass(try, cartoon)
aux:pass(try, be)
advcl(interrupt, try)
case(place, in)
obl(try, place)
punct(squeeze, .)
det(scaffold, the)
nsubj(strong, scaffold)
punct(scaffold, ,)
det(confusion, a)
appos(scaffold, confusion)
case(beam, of)
amod(beam, heavy)
nmod(confusion, beam)
acl(beam, hang)
case(gallery, from)
det(gallery, the)
obl(hang, gallery)
advmod(hang, above)
punct(strong, ,)
cop(strong, be)
root(ROOT, strong)
cc(safe, and)
conj(strong, safe)
punct(visibility, ,)
cc(visibility, but)
amod(visibility, obscure)
conj(strong, visibility)
punct(strong, .)
nsubj:pass(see, nothing)
aux(see, could)
aux:pass(see, be)
root(ROOT, see)
case(floor, from)
det(floor, the)
obl(see, floor)
punct(get, ,)
cc(get, but)
mark(move, by)
csubj(get, move)
case(one, around)
det(one, the)
compound(one, gallery)
obl(move, one)
aux(get, could)
conj(see, get)
obj(get, glimpse)
punct(see, ;)
punct(see, ;)
cc(able, and)
nsubj(able, we)
cop(able, be)
conj(see, able)
mark(decide, to)
xcomp(able, decide)
case(amplification, on)
det(amplification, some)
obl(decide, amplification)
case(scale, of)
nmod(amplification, scale)
punct(see, . )
mark(sure, to)
cop(sure, be)
advcl(trace, sure)
mark(match, of)
advcl(sure, match)
obj(match, color)
cc(form, as)
fixed(as, well)
fixed(as, as)
obj(match, form)
punct(trace, ,)
nsubj:pass(trace, piece)
case(cartoon, of)
nmod(piece, cartoon)
aux:pass(trace, be)
root(ROOT, trace)
case(samples, on)
det(samples, the)
amod(samples, roughcast)
punct(samples, ,)
cc(large, and)
conj(roughcast, large)
obl(trace, samples)
acl(samples, paint)
case(fresco, in)
obl(paint, fresco)
punct(leave, ,)
advmod(leave, then)
conj(trace, leave)
nummod(month, two)
obj(leave, month)
mark(dry, to)
advcl(leave, dry)
compound:prt(dry, out)
case(key, to)
nmod:poss(key, they)
amod(key, final)
obl(dry, key)
punct(trace, .)
advmod(gratifying, later)
expl(gratifying, it)
cop(gratifying, be)
root(ROOT, gratifying)
mark(note, to)
csubj(gratifying, note)
mark(set, that)
nsubj(set, they)
aux(set, have)
ccomp(note, set)
advmod(solidly, so)
advmod(set, solidly)
mark(hard, as)
mark(hard, to)
cop(hard, be)
advcl(set, hard)
mark(remove, to)
advcl(hard, remove)
mark(come, when)
det(time, the)
nsubj(come, time)
advcl(remove, come)
punct(gratifying, .)
det(scaffold, the)
nsubj(length, scaffold)
cop(length, be)
det(length, the)
root(ROOT, length)
case(space, of)
det(space, the)
nmod(length, space)
mark(paint, to)
aux:pass(paint, be)
acl(length, paint)
punct(length, .)
det(bit, what)
nsubj:pass(reach, bit)
case(Brumidi, of)
nmod(bit, Brumidi)
cc(Costaggini, and)
conj(Brumidi, Costaggini)
aux(reach, could)
aux:pass(reach, be)
root(ROOT, reach)
case(end, at)
det(end, either)
obl(reach, end)
conj(reach, seem)
case(order, in)
amod(order, good)
obl(seem, order)
punct(seem, ,)
mark(thick, though)
det(surface, the)
amod(surface, roughish)
compound(surface, sandy)
nsubj(thick, surface)
cop(thick, be)
advcl(seem, thick)
case(dust, with)
obl(thick, dust)
punct(thick, .)
conj(thick, wash)
punct(come, ,)
nsubj(come, they)
parataxis(seem, come)
advmod(come, out)
advmod(clear, surprisingly)
xcomp(come, clear)
cc(bright, and)
conj(clear, bright)
punct(seem, .)
nsubj:pass(see, it)
aux(see, could)
aux:pass(see, be)
root(ROOT, see)
mark(use, that)
det(artist, both)
nsubj(use, artist)
ccomp(see, use)
det(coat, a)
advmod(thick, very)
amod(coat, thick)
amod(coat, final)
obj(use, coat)
case(plaster, of)
nmod(coat, plaster)
punct(inch, ,)
nummod(inch, one)
amod(inch, half)
conj(coat, inch)
punct(follow, ,)
cc(follow, and)
mark(follow, that)
nsubj(follow, both)
conj(use, follow)
det(technique, the)
amod(technique, traditional)
amod(technique, italian)
compound(technique, fresco)
obj(follow, technique)
mark(describe, as)
advcl(follow, describe)
case(Cennini, by)
compound(Cennini, Cennino)
obl(describe, Cennini)
case(century, in)
det(century, the)
amod(century, 14th)
obl(describe, century)
punct(current, ,)
cc(current, and)
conj(describe, current)
case(Italy, in)
obl(current, Italy)
case(day, to)
det(day, this)
obl(current, day)
punct(see, .)
nsubj(be, that)
root(ROOT, be)
punct(be, ,)
nsubj(use, they)
ccomp(be, use)
amod(color, opaque)
obj(use, color)
advmod(use, throughout)
punct(use, ,)
advcl(use, get)
amod(highlight, solid)
obj(get, highlight)
case(paint, with)
amod(paint, active)
compound(white, lime)
amod(paint, white)
punct(paint, .)
obl(get, paint)
punct(be, ``)
det(secco, a)
nsubj(evidence, secco)
punct(secco, '')
cop(evidence, be)
advmod(evidence, much)
case(evidence, in)
root(ROOT, evidence)
punct(evidence, . )
det(hatch, a)
amod(hatch, brown)
nsubj(reinforce, hatch)
root(ROOT, reinforce)
cc(broaden, and)
conj(reinforce, broaden)
obj(reinforce, shadow)
punct(cover, ,)
cc(cover, and)
nsubj:pass(cover, much)
case(background, of)
det(background, the)
nmod(much, background)
aux:pass(cover, be)
advmod(cover, solidly)
conj(reinforce, cover)
case(coat, with)
det(coat, a)
amod(coat, dark)
obl(cover, coat)
punct(reinforce, .)
det(brown, this)
nsubj(rich, brown)
cop(rich, be)
advmod(rich, sometimes)
advmod(rich, so)
root(ROOT, rich)
case(medium, in)
obl(rich, medium)
mark(appear, as)
mark(appear, to)
advcl(rich, appear)
mark(paint, to)
cop(paint, be)
compound(paint, oil)
xcomp(appear, paint)
punct(rich, .)
case(practice, in)
nmod:poss(practice, we)
amod(practice, own)
obl(find, practice)
punct(have, ,)
mark(have, to)
acl(practice, have)
det(coat, the)
amod(coat, last)
punct(intonaco, ``)
compound(coat, intonaco)
punct(intonaco, '')
compound(coat, plaster)
obj(have, coat)
amod(coat, thick)
advmod(thick, enough)
mark(match, to)
advcl(thick, match)
punct(find, ,)
cc(find, and)
case(time, at)
det(time, the)
amod(time, same)
obl(find, time)
mark(avoid, to)
acl(time, avoid)
amod(crack, fine)
obj(avoid, crack)
case(drying, in)
nmod(crack, drying)
punct(find, ,)
nsubj(find, we)
root(ROOT, find)
mark(have, that)
nsubj(have, it)
ccomp(find, have)
mark(put, to)
aux:pass(put, be)
xcomp(have, put)
compound:prt(put, on)
case(layer, in)
nummod(layer, two)
obl(put, layer)
punct(put, ,)
advcl(put, let)
det(set, the)
amod(set, first)
obj(let, set)
advmod(let, awhile)
mark(apply, before)
advcl(let, apply)
det(second, the)
obj(apply, second)
punct(find, .)
det(mortar, the)
nsubj(sand, mortar)
cop(sand, be)
nummod(part, three)
compound(sand, part)
root(ROOT, sand)
case(two, to)
obl(sand, two)
case(lime, of)
nmod(two, lime)
punct(sand, .)
nsubj:pass(slake, some)
case(lime, of)
det(lime, the)
nmod(some, lime)
nsubj(hand, that)
cop(hand, be)
advmod(hand, always)
case(hand, on)
acl:relcl(lime, hand)
case(basement, in)
det(basement, the)
compound(basement, Capitol)
nmod(hand, basement)
case(repair, for)
compound(repair, plaster)
nmod(basement, repair)
aux:pass(slake, be)
root(ROOT, slake)
amod(month, several)
obl:tmod(slake, month)
case(we, for)
obl(slake, we)
punct(slake, ;)
punct(slake, ;)
cc(make, but)
mark(make, to)
conj(slake, make)
obj(make, it)
xcomp(make, stiffer)
punct(make, ,)
case(consistency, of)
det(consistency, a)
advmod(like, really)
obl:npmod(like, putty)
punct(like, -)
amod(consistency, like)
obl(add, consistency)
mark(avoid, to)
acl(consistency, avoid)
obj(avoid, crack)
punct(add, ,)
nsubj(add, we)
conj(slake, add)
det(lime, a)
amod(lime, little)
amod(lime, hydrate)
obj(add, lime)
punct(lime, --)
advmod(lime, hard)
case(hand, on)
det(hand, the)
obl(hard, hand)
punct(see, ,)
cc(see, but)
nsubj(see, we)
aux(see, could)
conj(add, see)
det(disadvantage, no)
amod(disadvantage, other)
obj(see, disadvantage)
punct(slake, . )
nsubj:pass(tell, I)
aux:pass(tell, be)
root(ROOT, tell)
mark(remain, that)
det(mortar, a)
nsubj(slake, mortar)
advmod(slake, longer)
nsubj(remain, slake)
aux(remain, might)
aux(remain, have)
ccomp(tell, remain)
advmod(remain, longer)
case(condition, in)
obl(remain, condition)
case(painting, for)
obl(remain, painting)
punct(tell, .)
mark(be, as)
nsubj(be, it)
advcl(take, be)
punct(take, ,)
nsubj(take, it)
root(ROOT, take)
det(pigment, the)
obj(take, pigment)
advmod(take, well)
case(hour, for)
nummod(hour, six)
obl(take, hour)
punct(enough, ,)
advmod(take, enough)
case(purpose, for)
nmod:poss(purpose, we)
obl(enough, purpose)
punct(hold, ,)
cc(hold, and)
conj(take, hold)
obj(hold, it)
advmod(hold, firmly)
case(setting, in)
obl(hold, setting)
punct(take, .)
expl(obvious, it)
cop(obvious, be)
root(ROOT, obvious)
mark(mix, that)
mark(match, to)
advcl(mix, match)
obj(match, Brumidi)
punct(mix, ,)
obj(match, white)
aux(mix, must)
aux:pass(mix, be)
csubj(obvious, mix)
case(all, with)
obl(mix, all)
cc(tone, but)
det(tone, the)
amod(tone, darkest)
conj(all, tone)
punct(obvious, .)
compound(white, Lime)
nsubj(have, white)
punct(hard, ,)
conj(white, hard)
cc(brilliant, and)
conj(white, brilliant)
punct(have, ,)
root(ROOT, have)
det(tendency, a)
obj(have, tendency)
mark(jump, to)
punct(jump, ``)
acl(tendency, jump)
punct(jump, '')
advmod(jump, away)
case(color, from)
det(color, the)
amod(color, other)
obl(away, color)
case(drying, in)
nmod(color, drying)
punct(capacity, ,)
cc(capacity, and)
cc(capacity, also)
case(capacity, by)
nmod:poss(capacity, it)
case(it, 's)
conj(color, capacity)
mark(set, to)
acl(capacity, set)
punct(preclude, ,)
mark(preclude, to)
advcl(set, preclude)
det(use, the)
obj(preclude, use)
case(gradation, of)
amod(make, ready)
punct(make, -)
amod(gradation, make)
nmod(use, gradation)
punct(useful, ,)
advmod(useful, so)
amod(gradation, useful)
case(work, in)
amod(work, decorative)
obl(useful, work)
punct(have, .)
case(practice, in)
amod(practice, older)
amod(practice, italian)
obl(enter, practice)
punct(enter, ,)
nsubj(enter, lime)
punct(dry, ,)
conj(lime, dry)
cc(sangiovanni, and)
amod(sangiovanni, reground)
punct(sangiovanni, ``)
compound(sangiovanni, bianco)
conj(lime, sangiovanni)
punct(sangiovanni, '')
punct(enter, ,)
root(ROOT, enter)
case(shade, into)
amod(shade, such)
amod(shade, prepare)
obl(enter, shade)
punct(enter, .)
case(convenience, for)
obl(choose, convenience)
nsubj(choose, we)
root(ROOT, choose)
det(pigment, a)
amod(pigment, stronger)
obj(choose, pigment)
punct(pigment, ,)
amod(pigment, unknown)
case(Italians, to)
det(Italians, the)
amod(Italians, early)
obl(unknown, Italians)
cc(Brumidi, or)
case(Brumidi, to)
conj(Italians, Brumidi)
punct(Brumidi, ,)
compound(oxide, titanium)
appos(Brumidi, oxide)
punct(choose, ,)
advcl(choose, reserve)
det(lime, the)
amod(lime, active)
compound(white, lime)
xcomp(reserve, white)
case(light, for)
amod(light, highest)
obl(white, light)
punct(light, ,)
advcl(white, put)
advmod(put, on)
case(end, at)
det(end, the)
obl(put, end)
case(stint, of)
det(day, the)
nmod:poss(stint, day)
case(day, 's)
nmod(end, stint)
punct(choose, .)
amod(pigment, other)
nsubj(umber, pigment)
cop(umber, be)
advmod(umber, mostly)
amod(umber, raw)
root(ROOT, umber)
punct(umber, ,)
det(umber, some)
amod(umber, burnt)
conj(umber, umber)
punct(ochre, ,)
cc(ochre, and)
det(little, a)
amod(ochre, little)
amod(ochre, yellow)
conj(umber, ochre)
punct(umber, .)
det(last, this)
nsubj(palette, last)
cop(palette, be)
advmod(palette, probably)
advmod(palette, not)
case(palette, in)
nmod:poss(palette, Brumidi)
case(Brumidi, 's)
root(ROOT, palette)
punct(need, ,)
cc(need, but)
aux:pass(need, be)
conj(palette, need)
mark(take, to)
xcomp(need, take)
det(look, the)
compound(look, chill)
punct(look, ,)
amod(look, bluish)
obj(take, look)
case(work, off)
det(work, the)
amod(work, new)
nmod(look, work)
case(old, next)
case(old, to)
det(old, the)
nmod(work, old)
punct(old, ,)
advmod(see, where)
amod(effect, softening)
nsubj:pass(see, effect)
case(time, of)
nmod(effect, time)
aux:pass(see, be)
acl:relcl(old, see)
punct(see, ,)
advmod(cleaning, even)
case(cleaning, after)
amod(cleaning, thorough)
obl(see, cleaning)
punct(palette, .)
det(use, the)
nsubj(try, use)
case(secco, of)
punct(secco, ``)
nmod(use, secco)
punct(secco, '')
nsubj(try, we)
root(ROOT, try)
mark(restrict, to)
xcomp(try, restrict)
obl(restrict, to)
amod(joint, cover)
obl(restrict, joint)
punct(try, .)
nsubj(show, experience)
root(ROOT, show)
punct(show, ,)
advmod(show, however)
punct(show, ,)
mark(difficult, that)
expl(difficult, it)
cop(difficult, be)
advmod(difficult, very)
ccomp(show, difficult)
mark(paint, to)
csubj(difficult, paint)
det(background, a)
amod(background, dark)
compound(background, umber)
obj(paint, background)
case(fresco, in)
nmod(background, fresco)
nsubj(dry, that)
aux(dry, will)
advmod(dry, not)
acl:relcl(background, dry)
compound:prt(dry, out)
xcomp(dry, spotty)
cc(uneven, and)
conj(spotty, uneven)
punct(dry, .)
advmod(see, later)
nsubj:pass(see, Brumidi)
cc(Costaggini, and)
conj(Brumidi, Costaggini)
aux(see, will)
aux:pass(see, be)
conj(dry, see)
advcl(see, cope)
case(problem, with)
det(problem, this)
amod(problem, same)
obl(cope, problem)
punct(show, .)
nsubj:pass(force, we)
aux:pass(force, be)
root(ROOT, force)
punct(force, ,)
mark(be, as)
nsubj(be, they)
advcl(force, be)
punct(work, ,)
mark(work, to)
advcl(force, work)
det(deal, a)
amod(deal, good)
obj(work, deal)
case(tempera, of)
nmod(deal, tempera)
case(background, into)
nmod(deal, background)
cc(area, and)
amod(area, dark)
conj(background, area)
punct(force, .)
nsubj(make, we)
root(ROOT, make)
obj(make, it)
case(recipe, by)
nmod:poss(recipe, Doerner)
case(Doerner, 's)
obl(make, recipe)
punct(make, ,)
nummod(part, five)
nsubj(wash, part)
advmod(wash, thoroughly)
conj(make, wash)
compound(curd, cheese)
obj(wash, curd)
case(one, to)
obl(wash, one)
case(putty, of)
compound(putty, lime)
nmod(one, putty)
punct(make, ;)
punct(make, ;)
nsubj(make, ground)
advmod(ground, together)
nsubj(make, they)
parataxis(make, make)
det(adhesive, a)
amod(adhesive, strong)
obj(make, adhesive)
punct(adhesive, ,)
nsubj(become, which)
acl:relcl(adhesive, become)
xcomp(become, waterproof)
case(drying, in)
obl(waterproof, drying)
punct(make, .)
nsubj:pass(take, Figure)
nummod(Figure, 1)
aux:pass(take, be)
root(ROOT, take)
case(1953, in)
obl(take, 1953)
punct(take, .)
det(part, the)
amod(part, new)
nsubj:pass(finish, part)
aux:pass(finish, be)
root(ROOT, finish)
punct(finish, .)
case(right, on)
det(right, the)
nmod(group, right)
cop(group, be)
det(group, the)
compound(Liberty, Brumidi)
compound(group, Liberty)
root(ROOT, group)
punct(group, ,)
mark(look, as)
nsubj(look, it)
advcl(group, look)
case(operation, after)
compound(operation, cleaning)
obl(look, operation)
punct(operation, ,)
nsubj(come, which)
aux(come, have)
advmod(come, not)
advmod(come, yet)
acl:relcl(operation, come)
advmod(come, around)
case(end, to)
det(end, the)
amod(end, other)
obl(come, end)
punct(come, ;)
punct(come, ;)
advmod(wash, where)
punct(wash, ,)
case(Costaggini, of)
obl(wash, Costaggini)
punct(wash, ,)
advmod(foliage, only)
det(foliage, some)
nsubj:pass(wash, foliage)
aux(wash, have)
aux:pass(wash, be)
conj(come, wash)
punct(wash, ,)
case(point, at)
det(point, the)
obl(wash, point)
advmod(stop, where)
nmod:poss(work, he)
nsubj(stop, work)
acl:relcl(point, stop)
punct(group, .)
nsubj:pass(lead, one)
aux:pass(lead, be)
root(ROOT, lead)
mark(speculate, to)
xcomp(lead, speculate)
case(why, as)
fixed(as, to)
obl(speculate, why)
det(space, the)
amod(space, empty)
nsubj(there, space)
cop(there, be)
acl:relcl(why, there)
punct(why, ,)
advcl(why, leave)
case(century, for)
nmod:poss(century, we)
obl(leave, century)
mark(finish, to)
advcl(leave, finish)
punct(lead, .)
nsubj(say, Costaggini)
root(ROOT, say)
nsubj(fault, it)
cop(fault, be)
nmod:poss(fault, Brumidi)
case(Brumidi, 's)
ccomp(say, fault)
mark(provide, in)
advmod(provide, not)
acl(fault, provide)
amod(material, enough)
obj(provide, material)
mark(fill, to)
advcl(provide, fill)
det(circle, the)
obj(fill, circle)
punct(say, .)
nmod:poss(son, Brumidi)
case(Brumidi, 's)
nsubj(maintain, son)
advmod(maintain, later)
parataxis(say, maintain)
mark(compress, that)
nsubj(compress, Costaggini)
aux(compress, have)
ccomp(maintain, compress)
cc(mutilate, and)
conj(compress, mutilate)
nmod:poss(father, he)
nmod:poss(design, father)
case(father, 's)
obj(compress, design)
punct(compress, ,)
advmod(covet, ambitiously)
advcl(compress, covet)
det(bit, a)
obj(covet, bit)
nsubj(claim, he)
aux(claim, could)
acl:relcl(bit, claim)
case(own, for)
nmod:poss(own, he)
advmod(own, very)
obl(claim, own)
punct(say, .)
det(question, this)
nsubj:pass(settle, question)
aux(settle, might)
aux:pass(settle, be)
root(ROOT, settle)
mark(compare, by)
advcl(settle, compare)
det(measurement, the)
obj(compare, measurement)
case(circumference, of)
det(circumference, the)
amod(circumference, actual)
nmod(measurement, circumference)
case(dimension, with)
det(dimension, the)
nmod(circumference, dimension)
acl(dimension, note)
punct(note, ,)
advmod(hand, presumably)
case(hand, in)
nmod:poss(hand, Brumidi)
case(Brumidi, 's)
obl(note, hand)
punct(section, ,)
case(section, above)
det(section, the)
amod(section, various)
obl(compare, section)
case(draw, of)
nmod:poss(draw, he)
amod(draw, long)
amod(draw, preparatory)
nmod(section, draw)
punct(draw, ,)
nsubj:pass(keep, which)
aux(keep, have)
aux:pass(keep, be)
acl:relcl(draw, keep)
punct(keep, .)
det(fault, whosever)
obj(keep, fault)
punct(evident, ,)
expl(evident, it)
cop(evident, be)
parataxis(settle, evident)
mark(intend, that)
nsubj(intend, Brumidi)
ccomp(evident, intend)
mark(fill, to)
xcomp(intend, fill)
compound:prt(fill, out)
det(frieze, the)
amod(frieze, whole)
obj(fill, frieze)
case(history, with)
nmod:poss(history, he)
punct(history, ``)
nmod(frieze, history)
punct(history, '')
cc(come, and)
conj(fill, come)
amod(circle, full)
obj(come, circle)
case(scene, with)
det(scene, the)
obl(come, scene)
case(discovery, of)
det(discovery, the)
nmod(scene, discovery)
case(gold, of)
compound(gold, California)
nmod(discovery, gold)
punct(settle, .)
mark(painting, in)
advcl(compel, painting)
det(fresco, a)
obj(painting, fresco)
punct(compel, ,)
det(handling, the)
nsubj(compel, handling)
case(mortar, of)
amod(mortar, wet)
nmod(handling, mortar)
root(ROOT, compel)
obj(compel, one)
advmod(compel, always)
mark(move, to)
xcomp(compel, move)
case(top, from)
obl(move, top)
case(bottom, to)
obl(move, bottom)
cc(leave, and)
mark(leave, from)
conj(move, leave)
case(right, to)
obl(leave, right)
punct(spoil, ,)
advmod(spoil, not)
mark(spoil, to)
conj(leave, spoil)
nmod:poss(work, yesterday)
case(yesterday, 's)
obj(spoil, work)
case(plaster, with)
nmod:poss(plaster, today)
case(today, 's)
obl(spoil, plaster)
punct(compel, .)
case(first, at)
det(first, the)
advmod(first, very)
obl(require, first)
punct(require, ,)
advmod(require, then)
punct(require, ,)
nsubj:pass(require, Brumidi)
aux:pass(require, be)
root(ROOT, require)
punct(require, ,)
case(shape, by)
det(shape, the)
advmod(pyramidal, classically)
amod(shape, pyramidal)
obl(require, shape)
case(group, of)
nmod:poss(group, he)
amod(group, central)
nmod(shape, group)
punct(fill, ,)
mark(fill, to)
advcl(require, fill)
compound:prt(fill, in)
det(space, the)
amod(space, triangular)
obj(fill, space)
case(girl, above)
det(girl, the)
amod(girl, seat)
nmod(space, girl)
case(right, on)
nmod:poss(right, Liberty)
case(Liberty, 's)
nmod(girl, right)
punct(fill, ,)
mark(start, before)
advcl(fill, start)
case(figure, on)
det(figure, the)
amod(figure, allegorical)
obl(start, figure)
nmod:npmod(figure, themselves)
punct(require, .)
advmod(put, here)
nsubj(put, he)
root(ROOT, put)
det(man, a)
amod(man, small)
obj(put, man)
punct(man, ,)
nmod:poss(hand, whose)
amod(hand, missing)
nsubj(leave, hand)
aux(leave, might)
aux(leave, have)
acl:relcl(man, leave)
nmod:poss(function, he)
obj(leave, function)
xcomp(leave, doubtful)
punct(put, ,)
mark(show, until)
nsubj(show, comparison)
case(sketch, with)
det(sketch, the)
amod(sketch, first)
nmod(comparison, sketch)
advcl(put, show)
mark(be, that)
mark(come, when)
det(artist, the)
nsubj(come, artist)
advcl(be, come)
advmod(come, back)
case(beginning, to)
det(beginning, the)
obl(back, beginning)
punct(be, ,)
nsubj(be, this)
ccomp(show, be)
mark(figure, to)
cop(figure, be)
det(figure, the)
compound(figure, closing)
xcomp(be, figure)
case(party, of)
det(party, the)
nmod(figure, party)
case(niner, of)
punct(niner, ``)
nummod(niner, forty)
punct(niner, -)
nmod(party, niner)
punct(niner, '')
punct(be, ,)
cc(be, and)
conj(figure, be)
mark(hold, to)
xcomp(be, hold)
det(basket, a)
obj(hold, basket)
punct(put, .)
nsubj(see, one)
root(ROOT, see)
nmod:poss(render, Costaggini)
case(Costaggini, 's)
obj(see, render)
case(figure, of)
det(figure, the)
amod(figure, same)
nmod(render, figure)
advmod(thirty, more)
fixed(more, than)
nummod(foot, thirty)
obl:npmod(away, foot)
advmod(see, away)
punct(see, .)
det(photograph, the)
nsubj(Figure, photograph)
punct(Figure, ,)
advcl(show, Figure)
obj(Figure, 1)
case(frieze, of)
det(frieze, the)
amod(frieze, complete)
nmod(1, frieze)
punct(show, ,)
root(ROOT, show)
advmod(separate, how)
punct(separate, ,)
aux(separate, have)
aux:pass(separate, be)
ccomp(show, separate)
case(fellow, from)
nmod:poss(fellow, he)
obl(separate, fellow)
case(isolation, in)
amod(isolation, useless)
obl(separate, isolation)
case(year, for)
nummod(year, eighty)
obl(separate, year)
punct(give, ,)
nsubj:pass(give, he)
aux(give, have)
advmod(give, now)
aux:pass(give, be)
ccomp(show, give)
det(hand, a)
obj(give, hand)
punct(give, ,)
cc(permission, and)
case(juxtaposition, by)
obl(give, juxtaposition)
punct(permission, ()
cc(permission, and)
det(permission, the)
conj(juxtaposition, permission)
case(committee, of)
det(committee, the)
nmod(permission, committee)
punct(permission, ))
punct(give, ,)
acl(permission, give)
det(job, a)
amod(job, new)
obj(give, job)
punct(represent, ,)
mark(represent, to)
advcl(give, represent)
det(witness, the)
obj(represent, witness)
case(flight, of)
det(flight, the)
amod(flight, first)
nmod(witness, flight)
case(Hawk, at)
compound(Hawk, Kitty)
nmod(flight, Hawk)
case(1903, in)
obl(represent, 1903)
punct(show, .)
det(effect, the)
advmod(bright, startlingly)
amod(effect, bright)
nsubj(lead, effect)
case(washing, of)
det(washing, the)
amod(washing, first)
nmod(effect, washing)
root(ROOT, lead)
det(committee, the)
obj(lead, committee)
mark(order, to)
xcomp(lead, order)
det(rest, the)
obj(order, rest)
case(cycle, of)
det(cycle, the)
compound(cycle, Brumidi)
punct(Costaggini, -)
compound(cycle, Costaggini)
nmod(rest, cycle)
acl(cycle, clean)
cc(restore, and)
conj(clean, restore)
mark(go, to)
xcomp(restore, go)
case(they, with)
obl(go, they)
punct(lead, .)
det(scaffold, the)
amod(scaffold, fix)
compound(scaffold, wooden)
nsubj:pass(remove, scaffold)
aux:pass(remove, be)
root(ROOT, remove)
punct(reach, ,)
cc(reach, and)
punct(remove, ,)
advmod(reach, so)
mark(reach, as)
mark(reach, to)
advcl(remove, reach)
det:predet(frieze, all)
det(frieze, the)
obj(reach, frieze)
punct(frieze, ,)
appos(frieze, one)
case(pipe, of)
nmod(one, pipe)
punct(frieze, ,)
case(wheel, on)
nmod(one, wheel)
punct(frieze, ,)
acl(frieze, build)
compound:prt(build, up)
case(floor, from)
det(floor, the)
obl(build, floor)
punct(remove, .)
det(day, every)
amod(day, few)
obl:tmod(appear, day)
punct(appear, ,)
case(morning, in)
det(morning, the)
amod(morning, early)
obl(appear, morning)
punct(appear, ,)
mark(progress, as)
det(work, the)
nsubj(progress, work)
advcl(appear, progress)
punct(appear, ,)
nummod(man, twenty)
nsubj(appear, man)
aux(appear, would)
root(ROOT, appear)
mark(push, to)
xcomp(appear, push)
obj(push, it)
advmod(push, ahead)
cc(shift, and)
mark(shift, to)
conj(push, shift)
det(foundation, the)
compound(foundation, plank)
obj(shift, foundation)
nsubj(distribute, that)
acl:relcl(foundation, distribute)
nmod:poss(weight, its)
obj(distribute, weight)
advmod(distribute, widely)
case(pavement, on)
det(pavement, the)
compound(pavement, Rotunda)
obl(distribute, pavement)
punct(distribute, ,)
advcl(distribute, support)
mark(vaulting, as)
nsubj(vaulting, it)
cop(vaulting, be)
case(vaulting, by)
amod(vaulting, ancient)
compound(vaulting, brick)
advcl(support, vaulting)
punct(appear, .)
case(platform, on)
det(platform, this)
amod(platform, giddy)
cc(oscillating, and)
conj(giddy, oscillating)
obl(begin, platform)
case(foot, over)
nummod(foot, fifty)
nmod(platform, foot)
case(floor, from)
det(floor, the)
nmod(foot, floor)
punct(begin, ,)
case(dusting, after)
det(dusting, a)
amod(dusting, first)
obl(begin, dusting)
punct(begin, ,)
nsubj(begin, we)
root(ROOT, begin)
mark(wash, to)
xcomp(begin, wash)
punct(begin, . )
det(tool, a)
advmod(useful, most)
amod(tool, useful)
nsubj:pass(make, tool)
mark(wet, for)
acl(tool, wet)
det(surface, the)
obj(wet, surface)
mark(run, without)
advcl(wet, run)
advmod(run, down)
aux:pass(make, be)
root(ROOT, make)
case(nozzle, from)
det(nozzle, a)
compound(nozzle, greenhouse)
punct(spray, ``)
compound(spray, mist)
compound(nozzle, spray)
punct(spray, '')
obl(make, nozzle)
acl(nozzle, weld)
case(connection, to)
det(connection, a)
compound(connection, hose)
obl(weld, connection)
punct(connection, ,)
mark(use, to)
aux:pass(use, be)
advcl(weld, use)
case(pressure, at)
amod(pressure, low)
compound(pressure, water)
obl(use, pressure)
punct(make, . )
det(valve, a)
nsubj(let, valve)
case(handle, in)
det(handle, the)
nmod(valve, handle)
root(ROOT, let)
obj(let, we)
xcomp(let, cut)
det(pressure, the)
obj(cut, pressure)
advmod(lower, still)
xcomp(cut, lower)
punct(let, .)
nummod(man, one)
nsubj(spray, man)
root(ROOT, spray)
punct(spray, ,)
case(sponge, with)
det(sponge, a)
obl(spray, sponge)
case(hand, in)
nmod(sponge, hand)
mark(check, to)
advcl(spray, check)
compound(wet, excess)
obj(check, wet)
punct(spray, . )
det(assistant, a)
amod(assistant, second)
nsubj(mop, assistant)
root(ROOT, mop)
case(sponge, with)
nummod(sponge, two)
obl(mop, sponge)
punct(mop, .)
case(part, in)
obl(need, part)
det(spong, a)
amod(spong, repeat)
nsubj:pass(need, spong)
aux:pass(need, be)
root(ROOT, need)
punct(find, ,)
cc(find, but)
advmod(find, everywhere)
nsubj(find, we)
conj(need, find)
mark(enough, that)
nsubj(enough, water)
advmod(water, alone)
cop(enough, be)
ccomp(find, enough)
mark(restore, to)
advcl(enough, restore)
det(brightness, the)
amod(brightness, original)
obj(restore, brightness)
punct(need, .)
det(soap, no)
nsubj:pass(use, soap)
cc(agent, or)
amod(agent, other)
compound(agent, cleaning)
conj(soap, agent)
aux:pass(use, be)
root(ROOT, use)
nsubj(bring, that)
aux(bring, might)
ccomp(use, bring)
case(reaction, in)
amod(reaction, unwanted)
amod(reaction, chemical)
obl(bring, reaction)
punct(bring, .)
det(painting, the)
nsubj(stand, painting)
punct(fresco, ``)
det(fresco, a)
appos(painting, fresco)
punct(fresco, '')
root(ROOT, stand)
compound:prt(stand, up)
advmod(stand, superbly)
punct(stand, ;)
punct(stand, ;)
det(little, a)
nsubj(come, little)
case(secco, of)
det(secco, the)
punct(secco, ``)
nmod(little, secco)
punct(secco, '')
parataxis(stand, come)
advmod(come, off)
punct(stand, .)
amod(retouch, Necessary)
nsubj:pass(put, retouch)
aux:pass(put, be)
root(ROOT, put)
advmod(put, on)
case(once, at)
obl(put, once)
punct(put, .)
advmod(find, altogether)
nsubj(find, we)
root(ROOT, find)
det(rate, the)
compound(rate, craftsmanship)
amod(rate, first)
obj(find, rate)
punct(find, ,)
advmod(Brumidi, especially)
vocative(find, Brumidi)
case(Brumidi, 's)
punct(find, .)
nsubj:pass(help, we)
aux:pass(help, be)
advmod(help, greatly)
root(ROOT, help)
mark(be, by)
expl(be, there)
advcl(help, be)
det(trace, no)
nsubj(be, trace)
case(restoring, of)
amod(restoring, former)
nmod(trace, restoring)
punct(help, .)
advmod(more, apparently)
advmod(more, not)
root(ROOT, more)
mark(do, than)
nsubj:pass(do, dusting)
aux(do, have)
advmod(do, ever)
aux:pass(do, be)
advcl(more, do)
punct(much, ,)
cc(much, and)
advmod(much, not)
conj(do, much)
case(that, of)
obl(much, that)
punct(more, .)
det(plaster, the)
nsubj(sound, plaster)
cop(sound, be)
root(ROOT, sound)
punct(sound, ,)
det(intonaco, the)
conj(sound, intonaco)
advmod(attach, firmly)
acl(intonaco, attach)
advmod(over, all)
advmod(attach, over)
punct(incorporate, ,)
cc(incorporate, and)
det(pigment, the)
nsubj(incorporate, pigment)
advmod(incorporate, solidly)
conj(sound, incorporate)
case(it, with)
obl(incorporate, it)
case(all, in)
obl(incorporate, all)
cc(place, but)
det(place, a)
amod(place, few)
amod(place, unimportant)
conj(all, place)
punct(sound, .)
det(source, the)
amod(source, greatest)
nsubj(rain, source)
case(trouble, of)
nmod(source, trouble)
cop(rain, be)
root(ROOT, rain)
nsubj(flow, which)
aux(flow, have)
advmod(flow, repeatedly)
acl:relcl(rain, flow)
case(opening, from)
obl(flow, opening)
advmod(flow, above)
punct(flow, ,)
advcl(flow, soak)
det(surface, the)
obj(soak, surface)
cc(leave, and)
conj(soak, leave)
obj(leave, streak)
case(lime, of)
amod(lime, dissolve)
nmod(streak, lime)
punct(conspicuous, ,)
advmod(conspicuous, very)
amod(lime, conspicuous)
advmod(cleaning, even)
case(cleaning, after)
obl(conspicuous, cleaning)
punct(conspicuous, ,)
advmod(the, particularly)
case(the, in)
conj(cleaning, the)
punct(rain, ``)
root(ROOT, landing)
case(Columbus, of)
nmod(landing, Columbus)
punct(landing, '')
punct(landing, ,)
punct(landing, ``)
nsubj(request, Oglethorpe)
cc(Indians, and)
det(Indians, the)
conj(Oglethorpe, Indians)
punct(Indians, '')
punct(Yorktown, ,)
cc(Yorktown, and)
punct(Yorktown, ``)
conj(Oglethorpe, Yorktown)
punct(Yorktown, '')
punct(Yorktown, .)
advmod(Yorktown, here)
det(architect, the)
obj(here, architect)
punct(here, ,)
advcl(here, refer)
case(use, to)
det(use, the)
obl(refer, use)
case(Capitol, of)
det(Capitol, the)
nmod(use, Capitol)
case(building, as)
det(building, a)
amod(building, public)
nmod(use, building)
punct(museum, ,)
advmod(museum, not)
det(museum, a)
conj(building, museum)
punct(request, ,)
root(ROOT, request)
det(repaint, some)
obj(request, repaint)
mark(maintain, to)
acl(repaint, maintain)
amod(effect, decorative)
obj(maintain, effect)
punct(leave, ,)
cc(leave, rather)
fixed(rather, than)
conj(maintain, leave)
obj(leave, blank)
punct(patch, ,)
amod(patch, unsightly)
obj(leave, patch)
punct(request, .)
det(frescos, these)
nsubj(have, frescos)
aux(have, have)
root(ROOT, have)
det(care, no)
obj(have, care)
case(year, for)
nummod(year, eighty)
obl(have, year)
punct(have, .)
case(jet, with)
amod(jet, naked)
compound(jet, gas)
obl(survive, jet)
advmod(jet, below)
cc(window, and)
amod(window, leaky)
conj(jet, window)
advmod(window, above)
punct(enough, ,)
root(ROOT, enough)
mark(ruin, to)
xcomp(enough, ruin)
compound(painting, wall)
obj(ruin, painting)
case(medium, in)
det(medium, any)
obl(ruin, medium)
punct(survive, ,)
nsubj(survive, they)
aux(survive, have)
parataxis(enough, survive)
punct(survive, ,)
case(building, in)
det(building, a)
obl(survive, building)
advmod(unheated, long)
xcomp(survive, unheated)
case(winter, in)
obl(unheated, winter)
punct(hot, ,)
conj(unheated, hot)
cc(damp, and)
conj(hot, damp)
case(dome, under)
det(dome, the)
compound(dome, iron)
obl(damp, dome)
case(summer, in)
nmod(dome, summer)
punct(survive, .)
det(whom, those)
obj(wish, whom)
nsubj(wish, I)
parataxis(part, wish)
mark(address, to)
xcomp(wish, address)
case(letter, with)
det(letter, this)
obl(address, letter)
cop(unknown, be)
case(part, for)
det(part, the)
advmod(part, most)
obl(unknown, part)
root(ROOT, unknown)
case(I, to)
obl(unknown, I)
punct(unknown, .)
nsubj(that, it)
aux(that, may)
advmod(that, well)
cop(that, be)
root(ROOT, that)
punct(that, ,)
mark(visit, when)
nsubj(visit, Rudy)
flat(Rudy, Pozzatti)
cc(I, and)
conj(Rudy, I)
advcl(that, visit)
nmod:poss(country, you)
obj(visit, country)
amod(spring, last)
obl:tmod(visit, spring)
punct(live, ,)
nsubj(live, you)
aux(live, be)
parataxis(that, live)
cc(work, and)
conj(live, work)
advmod(work, close)
case(place, to)
det(place, the)
obl(close, place)
nsubj(see, we)
acl:relcl(place, see)
cc(street, and)
det(street, the)
conj(place, street)
nsubj(walk, we)
acl:relcl(street, walk)
punct(street, .)
case(artist, as)
amod(artist, american)
obl(walk, artist)
punct(natural, ,)
expl(natural, it)
cop(natural, be)
parataxis(that, natural)
mark(want, that)
nsubj(want, we)
aux(want, would)
csubj(natural, want)
mark(meet, to)
xcomp(want, meet)
advmod(many, as)
amod(artist, many)
amod(artist, Soviet)
obj(meet, artist)
mark(possible, as)
advcl(as, possible)
punct(that, .)
det(letter, this)
nsubj(have, letter)
aux(have, might)
advmod(have, not)
aux(have, have)
cop(have, be)
advmod(have, necessary)
root(ROOT, have)
nmod:poss(effort, we)
obj(have, effort)
mark(meet, to)
acl(effort, meet)
cc(talk, and)
conj(meet, talk)
obl(talk, with)
nsubj(successful, you)
cop(successful, be)
advmod(successful, more)
conj(have, successful)
punct(have, .)
advmod(see, even)
mark(see, though)
nsubj(see, we)
aux(see, do)
advmod(see, not)
advcl(appear, see)
obj(see, many)
case(face, of)
nmod:poss(face, you)
obl(many, face)
punct(appear, ,)
expl(appear, it)
root(ROOT, appear)
advmod(appear, now)
advmod(evident, quite)
xcomp(appear, evident)
mark(hear, that)
det(number, a)
amod(number, considerable)
nsubj(hear, number)
case(profession, of)
nmod:poss(profession, you)
nmod(number, profession)
ccomp(evident, hear)
punct(hear, ,)
case(those, from)
obl(hear, those)
obj(have, whom)
nsubj(have, we)
acl:relcl(those, have)
det(fortune, the)
obj(have, fortune)
mark(encounter, to)
xcomp(have, encounter)
punct(midst, ,)
mark(midst, that)
nsubj(midst, we)
aux(midst, have)
cop(midst, be)
case(midst, in)
nmod:poss(midst, you)
ccomp(encounter, midst)
punct(appear, . )
nsubj(pleased, I)
cop(pleased, be)
advmod(pleased, very)
root(ROOT, pleased)
mark(find, that)
det:predet(number, quite)
det(number, a)
nsubj(find, number)
case(you, of)
nmod(number, you)
ccomp(pleased, find)
obj(find, way)
mark(communicate, to)
acl(way, communicate)
case(I, to)
obl(communicate, I)
nmod:poss(desire, you)
obj(communicate, desire)
mark(hear, to)
acl(desire, hear)
case(reaction, of)
nmod:poss(reaction, we)
obl(hear, reaction)
cc(experience, and)
conj(reaction, experience)
case(u.s.s.r, in)
det(u.s.s.r, the)
nmod(reaction, u.s.s.r)
punct(pleased, .)
punct(pleased, . )
nsubj(understand, I)
aux(understand, can)
advmod(understand, well)
parataxis(pleased, understand)
nmod:poss(curiosity, you)
obj(understand, curiosity)
punct(pleased, .)
nsubj(eager, we)
punct(eager, ,)
appos(we, ourselves)
punct(eager, ,)
cop(eager, be)
advmod(eager, always)
root(ROOT, eager)
mark(know, to)
xcomp(eager, know)
advmod(feel, how)
nsubj(feel, other)
ccomp(know, feel)
case(we, about)
obl(feel, we)
cc(way, and)
det(way, the)
conj(we, way)
case(which, in)
obl(live, which)
nsubj(live, we)
acl:relcl(way, live)
punct(eager, .)
expl(hope, it)
cop(hope, be)
nmod:poss(hope, my)
root(ROOT, hope)
mark(reach, that)
det(message, this)
amod(message, write)
nsubj(reach, message)
cc(report, and)
conj(message, report)
aux(reach, will)
csubj(hope, reach)
obj(reach, you)
case(office, through)
det(office, the)
amod(office, good)
obl(reach, office)
case(union, of)
det(union, the)
nmod(office, union)
case(artist, of)
compound(artist, Soviet)
nmod(union, artist)
punct(hope, .)
expl(be, there)
aux(be, should)
root(ROOT, be)
det(reason, no)
nsubj(be, reason)
mark(misinterpret, to)
acl(reason, misinterpret)
cc(ignore, or)
conj(misinterpret, ignore)
det(intent, the)
obj(misinterpret, intent)
case(letter, of)
det(letter, this)
nmod(intent, letter)
punct(be, .)
nsubj(endeavor, Pozzatti)
cc(I, and)
conj(Pozzatti, I)
conj(be, endeavor)
advmod(endeavor, earnestly)
mark(record, to)
xcomp(endeavor, record)
nmod:poss(impression, we)
obj(record, impression)
case(prejudice, without)
det(prejudice, the)
obl(record, prejudice)
mark(provoke, that)
det(anxiety, the)
nsubj(provoke, anxiety)
case(time, of)
nmod:poss(time, we)
nmod(anxiety, time)
advmod(provoke, so)
advmod(provoke, easily)
acl(prejudice, provoke)
punct(be, .)
det(span, the)
compound(span, time)
punct(span, -)
nsubj(entitle, span)
case(month, of)
obl(more, little)
advmod(month, more)
fixed(more, than)
det(month, a)
nmod(span, month)
aux(entitle, can)
advmod(entitle, not)
root(ROOT, entitle)
obj(entitle, I)
mark(pose, to)
xcomp(entitle, pose)
case(expert, as)
det(expert, a)
obl(pose, expert)
case(anything, on)
nmod(expert, anything)
nsubj(see, I)
acl:relcl(anything, see)
punct(do, .)
advmod(much, too)
amod(damage, much)
nsubj:pass(do, damage)
aux:pass(do, be)
parataxis(entitle, do)
case(expert, by)
punct(expert, ``)
obl(do, expert)
punct(expert, '')
nsubj(spend, who)
aux(spend, have)
acl:relcl(expert, spend)
advmod(less, even)
amod(time, less)
obj(spend, time)
punct(spend, ,)
mark(any, if)
advcl(spend, any)
case(all, at)
nmod(any, all)
punct(any, ,)
case(U.S.S.R., in)
det(U.S.S.R., the)
obl(spend, U.S.S.R.)
punct(entitle, .)
advmod(consider, nevertheless)
nsubj(consider, I)
root(ROOT, consider)
expl(consider, it)
xcomp(consider, reasonable)
punct(consider, ,)
case(commitment, because)
fixed(because, of)
nmod:poss(commitment, my)
obl(consider, commitment)
case(artist, as)
det(artist, a)
nmod(commitment, artist)
punct(consider, ,)
mark(assume, to)
advcl(consider, assume)
mark(related, that)
det(rights, the)
nsubj(related, rights)
cc(responsibility, and)
conj(rights, responsibility)
case(individual, of)
amod(individual, creative)
nmod(rights, individual)
cop(related, be)
ccomp(assume, related)
case(humanity, to)
obl(related, humanity)
case(whole, as)
det(whole, a)
obl(related, whole)
cc(interest, rather)
fixed(rather, than)
fixed(rather, to)
amod(interest, specific)
amod(interest, geo-political)
obl(related, interest)
punct(consider, .)
mark(question, if)
det(attitude, this)
nsubj:pass(question, attitude)
aux:pass(question, be)
advmod(question, seriously)
advcl(follow, question)
case(Union, in)
det(Union, the)
compound(Union, Soviet)
obl(question, Union)
punct(follow, ,)
nsubj(follow, it)
aux(follow, do)
advmod(follow, not)
advmod(follow, necessarily)
root(ROOT, follow)
mark(aware, that)
det(majority, the)
nsubj(aware, majority)
case(society, of)
det(society, the)
nmod(majority, society)
case(which, in)
obl(live, which)
nsubj(live, I)
acl:relcl(majority, live)
cop(aware, be)
advmod(aware, too)
ccomp(follow, aware)
case(necessity, of)
det(necessity, the)
obl(aware, necessity)
case(clarity, for)
nmod(necessity, clarity)
case(ethical, on)
det(ethical, this)
nmod(clarity, ethical)
cc(point, as)
fixed(as, well)
fixed(as, as)
amod(point, aesthetic)
nmod(necessity, point)
case(view, of)
nmod(point, view)
punct(follow, .)
expl(matter, it)
cop(matter, be)
det(matter, a)
root(ROOT, matter)
case(disappointment, of)
det(disappointment, some)
nmod(matter, disappointment)
case(I, to)
nmod(disappointment, I)
mark(shortsight, that)
advmod(many, still)
nsubj(shortsight, many)
case(countryman, of)
nmod:poss(countryman, my)
amod(countryman, own)
nmod(many, countryman)
cop(shortsight, be)
advmod(shortsight, too)
acl(matter, shortsight)
mark(ascribe, to)
advcl(shortsight, ascribe)
det(significance, any)
amod(significance, symbolic)
obj(ascribe, significance)
case(plight, to)
det(plight, the)
nmod(significance, plight)
case(minority, of)
det(minority, a)
nmod(plight, minority)
punct(minority, ,)
case(artist, such)
fixed(such, as)
nmod(minority, artist)
punct(artist, ,)
case(order, in)
det(order, any)
amod(order, social)
nmod(artist, order)
punct(matter, . )
nsubj(encounter, I)
root(ROOT, encounter)
amod(question, many)
obj(encounter, question)
cc(interest, and)
amod(interest, great)
conj(question, interest)
case(return, upon)
nmod:poss(return, my)
nmod(question, return)
case(Union, from)
det(Union, the)
compound(Union, Soviet)
nmod(return, Union)
case(reaction, about)
nmod:poss(reaction, my)
nmod(return, reaction)
case(experience, to)
det(experience, that)
nmod(reaction, experience)
punct(encounter, .)
nsubj(appear, that)
obj(find, which)
nsubj(find, I)
acl:relcl(that, find)
advmod(profound, most)
xcomp(find, profound)
cc(appear, and)
advmod(disturbing, most)
conj(profound, disturbing)
root(ROOT, appear)
mark(evoke, to)
xcomp(appear, evoke)
det(reaction, a)
advmod(mute, curiously)
amod(reaction, mute)
obj(evoke, reaction)
punct(appear, .)
advmod(talk, almost)
mark(talk, as)
mark(talk, if)
nsubj(talk, I)
aux(talk, be)
advcl(unreal, talk)
case(something, about)
obl(talk, something)
advmod(unreal, quite)
root(ROOT, unreal)
punct(unreal, .)
advmod(time, apparently)
nsubj(time, this)
cop(time, be)
advmod(time, not)
det(time, the)
root(ROOT, time)
cc(climate, and)
det(climate, the)
conj(time, climate)
case(which, in)
obl(listen, which)
nsubj(listen, people)
aux(listen, will)
acl:relcl(climate, listen)
advmod(listen, objectively)
punct(dispassionately, ,)
cc(dispassionately, or)
case(least, at)
obl(dispassionately, least)
advmod(impression, dispassionately)
punct(impression, ,)
case(impression, to)
amod(impression, individual)
obl(listen, impression)
case(subject, of)
det(subject, a)
nmod(impression, subject)
nsubj(preoccupy, which)
acl:relcl(subject, preoccupy)
det(deal, a)
amod(deal, good)
obj(preoccupy, deal)
case(moment, of)
nmod:poss(moment, they)
amod(moment, wake)
nmod(deal, moment)
punct(time, .)
amod(predisposition, Personal)
nsubj(tend, predisposition)
root(ROOT, tend)
mark(blunt, to)
xcomp(tend, blunt)
det(ear, the)
obj(blunt, ear)
cc(voice, and)
punct(voice, ,)
case(turn, in)
obl(voice, turn)
punct(voice, ,)
det(voice, the)
conj(blunt, voice)
advmod(blunt, as)
fixed(as, well)
punct(tend, . )
nsubj(content, I)
aux(content, can)
advmod(content, not)
cop(content, be)
root(ROOT, content)
case(talk, with)
det(talk, the)
amod(talk, anecdotal)
amod(talk, small)
nmod(content, talk)
case(travelogue, of)
det(travelogue, a)
advmod(unusual, somewhat)
amod(travelogue, unusual)
nmod(talk, travelogue)
punct(content, . )
nsubj(impatient, I)
cop(impatient, be)
advmod(impatient, equally)
root(ROOT, impatient)
case(shrug, with)
det(shrug, the)
obl(impatient, shrug)
case(shoulder, of)
det(shoulder, the)
nmod(shrug, shoulder)
punct(shake, ,)
conj(shrug, shake)
case(head, of)
det(head, the)
nmod(shake, head)
case(those, of)
nmod(head, those)
nsubj(care, who)
advmod(longer, no)
advmod(care, longer)
acl:relcl(those, care)
mark(know, because)
nsubj(know, they)
aux(know, have)
advcl(care, know)
obj(know, it)
case(long, for)
advmod(long, so)
advmod(know, long)
punct(disbelief, ;)
punct(disbelief, ;)
det(disbelief, the)
amod(disbelief, aggressive)
parataxis(impatient, disbelief)
case(those, of)
nmod(disbelief, those)
nsubj:pass(lose, who)
aux:pass(lose, be)
advmod(lose, romantically)
acl:relcl(those, lose)
case(jungle, in)
det(jungle, a)
amod(jungle, semantic)
obl(lose, jungle)
case(word, of)
det(word, the)
nmod(jungle, word)
punct(impatient, ``)
root(ROOT, Revolution)
punct(Revolution, '')
punct(Revolution, ;)
punct(Revolution, ;)
det(denunciation, the)
amod(denunciation, belligerent)
appos(Revolution, denunciation)
case(fanatics, by)
det(fanatics, the)
amod(fanatics, sick)
nmod(denunciation, fanatics)
case(ignorance, of)
nmod(fanatics, ignorance)
nsubj(try, who)
acl:relcl(fanatics, try)
mark(build, to)
xcomp(try, build)
det(wall, a)
compound(mache, papier)
punct(mache, -)
compound(wall, mache)
obj(build, wall)
case(patriotism, of)
amod(patriotism, pseudo-)
nmod(wall, patriotism)
case(horizon, on)
nmod:poss(horizon, we)
amod(horizon, physical)
nmod(wall, horizon)
punct(Revolution, .)
root(ROOT, Difficult)
mark(time, as)
nsubj(time, it)
aux(time, may)
aux(time, have)
cop(time, be)
case(time, at)
advcl(Difficult, time)
punct(see, ,)
nsubj(see, Pozzatti)
cc(I, and)
conj(Pozzatti, I)
parataxis(Difficult, see)
advmod(see, enough)
punct(talk, ,)
conj(see, talk)
case(artist, to)
amod(artist, enough)
obl(talk, artist)
punct(historian, ,)
conj(artist, historian)
cc(other, and)
conj(artist, other)
mark(realize, to)
advcl(talk, realize)
mark(clear, that)
det(issue, the)
nsubj(clear, issue)
cop(clear, be)
advmod(clear, quite)
ccomp(realize, clear)
punct(Difficult, .)
nsubj(nerve-end, artist)
cc(poet, and)
conj(artist, poet)
cop(nerve-end, be)
det(nerve-end, the)
amod(nerve-end, raw)
root(ROOT, nerve-end)
case(humanity, of)
nmod(nerve-end, humanity)
punct(nerve-end, ;)
punct(nerve-end, ;)
nsubj(small, they)
cop(small, be)
parataxis(nerve-end, small)
case(number, in)
obl(small, number)
cc(decisive, and)
nmod:poss(contribution, they)
nsubj(decisive, contribution)
cop(decisive, be)
advmod(decisive, not)
advmod(decisive, immediately)
conj(small, decisive)
case(life, in)
amod(life, everyday)
obl(decisive, life)
punct(nerve-end, .)
case(themselves, by)
obl(able, themselves)
nsubj(able, they)
aux(able, may)
advmod(able, not)
cop(able, be)
root(ROOT, able)
mark(save, to)
xcomp(able, save)
det(life, the)
obj(save, life)
case(planet, on)
det(planet, this)
obl(save, planet)
punct(leave, ,)
cc(leave, but)
case(they, without)
obl(leave, they)
expl(leave, there)
aux(leave, would)
aux(leave, be)
advmod(little, very)
obl:npmod(leave, little)
conj(able, leave)
xcomp(leave, worth)
xcomp(leave, save)
punct(able, .)
nsubj:pass(say, it)
aux(say, can)
advmod(say, not)
aux:pass(say, be)
root(ROOT, say)
mark(turn, that)
nmod:poss(day, we)
advmod(first, very)
amod(day, first)
nsubj(turn, day)
case(Union, in)
det(Union, the)
compound(Union, Soviet)
nmod(day, Union)
ccomp(say, turn)
compound:prt(turn, out)
mark(one, to)
cop(one, be)
det(one, a)
amod(one, ordinary)
xcomp(turn, one)
punct(say, .)
case(cold, on)
det(cold, that)
obl(guest, cold)
punct(bright, ,)
cc(bright, but)
conj(cold, bright)
punct(day, ,)
compound(day, April)
obl(guest, day)
nsubj(guest, we)
cop(guest, be)
root(ROOT, guest)
case(government, of)
nmod:poss(government, you)
nmod(guest, government)
case(stand, in)
det(stand, the)
compound(stand, review)
nmod(guest, stand)
case(Square, of)
compound(Square, Red)
nmod(stand, Square)
mark(witness, to)
advcl(guest, witness)
det(poeple, the)
nmod:poss(celebration, poeple)
case(poeple, 's)
obj(witness, celebration)
case(Yuri, for)
nmod(celebration, Yuri)
flat(Yuri, Gagarin)
cc(attend, and)
advmod(day, later)
case(day, on)
det(day, that)
obl(attend, day)
nsubj(attend, we)
conj(guest, attend)
det(reception, the)
advmod(more, somewhat)
advmod(exclusive, more)
amod(reception, exclusive)
obj(attend, reception)
case(he, for)
nmod(reception, he)
case(one, in)
obl(attend, one)
case(palace, of)
det(palace, the)
amod(palace, impressive)
nmod(one, palace)
case(Kremlin, of)
det(Kremlin, the)
nmod(palace, Kremlin)
punct(guest, .)
mark(spend, if)
nsubj(spend, we)
advmod(spend, thus)
advcl(impressive, spend)
nmod:poss(day, we)
advmod(first, very)
amod(day, first)
obj(spend, day)
case(midst, in)
det(midst, the)
obl(spend, midst)
case(number, of)
det(number, a)
amod(number, large)
nmod(midst, number)
case(people, of)
nmod:poss(people, you)
nmod(number, people)
acl(number, honor)
det(hero, a)
amod(hero, new)
obj(honor, hero)
cc(achievement, and)
det(achievement, a)
amod(achievement, great)
amod(achievement, national)
conj(hero, achievement)
punct(impressive, ,)
nmod:poss(day, we)
amod(day, last)
nsubj(impressive, day)
punct(impressive, ,)
case(we, to)
nmod(day, we)
case(least, at)
nmod(we, least)
punct(impressive, ,)
cop(impressive, be)
advmod(impressive, equally)
root(ROOT, impressive)
cc(move, and)
advmod(move, very)
conj(impressive, move)
punct(move, ,)
advmod(absent, even)
mark(absent, though)
det(crowd, the)
nsubj(absent, crowd)
cop(absent, be)
advcl(move, absent)
cc(be, and)
expl(be, there)
conj(absent, be)
advmod(complete, almost)
amod(silence, complete)
nsubj(be, silence)
punct(impressive, .)
nsubj(stand, we)
root(ROOT, stand)
case(tree, under)
det(tree, a)
amod(tree, gigantic)
obl(stand, tree)
case(country, in)
det(country, the)
compound(country, roll)
nmod(tree, country)
advmod(outside, just)
advmod(stand, outside)
case(moscow, of)
obl(stand, moscow)
acl(moscow, look)
case(flower, at)
amod(flower, silent)
obl(look, flower)
case(grave, on)
det(grave, the)
obl(look, grave)
case(poet, of)
det(poet, a)
amod(poet, russian)
nmod(grave, poet)
cc(writer, and)
conj(poet, writer)
nsubj(cherish, who)
acl:relcl(poet, cherish)
det(love, the)
obj(cherish, love)
case(country, for)
nmod:poss(country, he)
nmod(love, country)
case(point, to)
det(point, the)
obl(cherish, point)
mark(forego, of)
acl(point, forego)
det(honor, the)
amod(honor, highest)
amod(honor, international)
obj(forego, honor)
punct(stand, .)
det(grave, the)
nsubj(rise, grave)
punct(grave, ,)
advmod(half, about)
compound(way, half)
punct(way, -)
appos(grave, way)
case(home, between)
nmod:poss(home, he)
nmod(way, home)
cc(turret, and)
det(turret, the)
amod(turret, blue)
conj(home, turret)
case(church, of)
det(church, a)
amod(church, small)
nmod(turret, church)
punct(rise, ,)
root(ROOT, rise)
case(form, above)
det(form, the)
obl(rise, form)
cc(space, and)
conj(form, space)
case(pasture, of)
advmod(undisciplined, gently)
amod(pasture, undisciplined)
nmod(form, pasture)
case(green, of)
nmod(pasture, green)
punct(sound, ,)
det(sound, the)
conj(pasture, sound)
case(bird, of)
nmod(sound, bird)
punct(silence, ,)
det(silence, the)
conj(sound, silence)
case(grave, of)
amod(grave, other)
nmod(silence, grave)
cc(path, and)
det(path, the)
amod(path, casual)
conj(grave, path)
case(forest, through)
amod(forest, small)
nmod(path, forest)
punct(rise, .)
advmod(yesterday, just)
obl:tmod(meet, yesterday)
nsubj(meet, we)
aux(meet, have)
root(ROOT, meet)
cc(talk, and)
conj(meet, talk)
case(writer, with)
det(writer, a)
compound(writer, living)
obl(talk, writer)
punct(writer, ,)
det(contemporary, a)
appos(writer, contemporary)
case(poet, of)
det(poet, the)
amod(poet, dead)
nmod(contemporary, poet)
punct(writer, ,)
nsubj:pass(know, who)
aux:pass(know, be)
acl:relcl(poet, know)
case(ability, for)
nmod:poss(ability, he)
obl(know, ability)
mark(manipulate, of)
acl(ability, manipulate)
nmod:poss(idea, he)
obj(manipulate, idea)
cc(craft, and)
nmod:poss(craft, he)
conj(idea, craft)
advmod(advantageously, more)
advmod(manipulate, advantageously)
punct(meet, .)
cc(aware, but)
obl:tmod(aware, today)
nsubj(aware, we)
cop(aware, be)
root(ROOT, aware)
case(man, of)
advmod(man, only)
nummod(man, two)
obl(aware, man)
punct(aware, .)
nsubj(take, one)
aux(take, have)
root(ROOT, take)
det(flight, a)
obj(take, flight)
case(space, into)
amod(space, unchart)
obl(take, space)
punct(take, ,)
case(service, in)
det(service, the)
obl(take, service)
case(science, of)
nmod(service, science)
punct(take, ,)
mark(return, to)
advcl(take, return)
case(hero, as)
det(hero, a)
compound(hero, living)
obl(return, hero)
punct(take, .)
det(other, the)
nsubj(assume, other)
aux(assume, have)
root(ROOT, assume)
det(right, the)
obj(assume, right)
mark(explore, to)
acl(right, explore)
det(space, the)
advmod(unchart, equally)
amod(space, unchart)
obj(explore, space)
case(spirit, of)
det(spirit, the)
amod(spirit, human)
nmod(space, spirit)
punct(assume, .)
det(flower, the)
nsubj(attest, flower)
case(grave, on)
nmod:poss(grave, he)
nmod(flower, grave)
root(ROOT, attest)
case(fact, to)
det(fact, the)
obl(attest, fact)
mark(hero, that)
nsubj(hero, he)
advmod(hero, as)
fixed(as, well)
cop(hero, be)
nmod:poss(hero, somebody)
case(somebody, 's)
acl(fact, hero)
punct(attest, .)
det(recollection, these)
nummod(recollection, two)
nsubj(form, recollection)
root(ROOT, form)
det(frame, the)
obj(form, frame)
case(series, around)
det(series, a)
nmod(frame, series)
case(experience, of)
nmod(series, experience)
cc(sight, and)
conj(experience, sight)
nsubj(symbolize, which)
punct(symbolize, ,)
case(I, to)
obl(symbolize, I)
case(least, at)
obl(symbolize, least)
punct(symbolize, ,)
conj(form, symbolize)
det(extreme, the)
obj(symbolize, extreme)
case(aesthetic, in)
det(aesthetic, the)
nmod(extreme, aesthetic)
cc(conflict, as)
fixed(as, well)
fixed(as, as)
amod(conflict, ethical)
conj(extreme, conflict)
case(materialism, between)
nmod(conflict, materialism)
cc(humanism, and)
conj(materialism, humanism)
punct(form, . )
det(struggle, a)
root(ROOT, struggle)
nsubj:pass(wage, that)
aux(wage, be)
aux:pass(wage, be)
acl:relcl(struggle, wage)
advmod(world, all)
case(world, over)
det(world, the)
obl(wage, world)
case(light, in)
det(light, the)
compound(light, half)
punct(light, -)
obl(wage, light)
case(disinterest, of)
nmod(light, disinterest)
punct(struggle, .)
det(opinion, the)
amod(opinion, prevalent)
nsubj(deny, opinion)
obj(encounter, which)
nsubj(encounter, we)
acl:relcl(opinion, encounter)
case(variety, in)
det(variety, a)
obl(encounter, variety)
case(expression, of)
nmod(variety, expression)
case(country, in)
nmod:poss(country, you)
nmod(expression, country)
root(ROOT, deny)
advmod(only, not)
cc:preconj(existence, only)
det(existence, the)
obj(deny, existence)
case(conflict, of)
det(conflict, this)
nmod(existence, conflict)
cc(elaborate, but)
nsubj:pass(elaborate, it)
aux:pass(elaborate, be)
conj(deny, elaborate)
advmod(further, even)
advmod(elaborate, further)
case(dexterity, with)
det(dexterity, a)
amod(dexterity, incredible)
amod(dexterity, semantic)
obl(elaborate, dexterity)
punct(deny, .)
det(environment, the)
amod(environment, socialist)
nsubj:pass(accuse, environment)
punct(environment, ,)
nsubj:pass(state, it)
aux:pass(state, be)
acl:relcl(environment, state)
punct(have, ,)
ccomp(state, have)
compound(fertilize, cross)
punct(fertilize, -)
xcomp(have, fertilize)
det(seed, these)
nummod(seed, two)
amod(seed, extreme)
obj(fertilize, seed)
cc(about, and)
cop(about, be)
advmod(produce, about)
mark(produce, to)
conj(have, produce)
det(plant, a)
amod(plant, new)
obj(produce, plant)
cc(fruit, and)
conj(plant, fruit)
punct(produce, .)
mark(speculate, when)
nsubj(speculate, I)
advcl(accuse, speculate)
case(occasion, on)
nummod(occasion, one)
amod(occasion, such)
obl(speculate, occasion)
mark(unable, that)
det(growth, the)
amod(growth, new)
nsubj(unable, growth)
punct(growth, ,)
case(mutation, like)
amod(mutation, other)
nmod(growth, mutation)
punct(unable, ,)
aux(unable, might)
cop(unable, be)
acl(occasion, unable)
mark(propagate, to)
xcomp(unable, propagate)
punct(accuse, ,)
nsubj:pass(accuse, I)
aux:pass(accuse, be)
advmod(accuse, immediately)
root(ROOT, accuse)
mark(preach, of)
advcl(accuse, preach)
amod(prejudice, racial)
obj(preach, prejudice)
punct(accuse, . )
nsubj(bring, I)
aux(bring, could)
advmod(bring, not)
root(ROOT, bring)
obj(bring, myself)
mark(answer, to)
xcomp(bring, answer)
mark(non-propagating, that)
punct(non-propagating, ``)
nsubj(non-propagating, some)
case(friend, of)
nmod:poss(friend, my)
amod(friend, best)
nmod(some, friend)
aux(non-propagating, be)
ccomp(answer, non-propagating)
obj(non-propagating, mule)
punct(non-propagating, '')
punct(bring, .)
det(kind, this)
nsubj(take, kind)
case(reasoning, of)
nmod(kind, reasoning)
cc(logic, and)
conj(reasoning, logic)
conj(bring, take)
det(time, a)
amod(time, little)
obj(take, time)
mark(use, to)
aux:pass(use, get)
acl(time, use)
obl(use, to)
punct(bring, .)
case(while, after)
det(while, a)
obl(surprised, while)
nsubj(surprised, we)
cop(surprised, be)
advmod(surprised, perhaps)
advmod(surprised, less)
root(ROOT, surprised)
punct(puzzle, ,)
cc(puzzle, but)
advmod(puzzle, still)
conj(surprised, puzzle)
punct(puzzle, ,)
mark(jump, when)
det(discussion, a)
amod(discussion, friendly)
nsubj(jump, discussion)
aux(jump, would)
advmod(jump, suddenly)
advcl(puzzle, jump)
det(track, the)
obj(jump, track)
case(comparison, into)
det(comparison, the)
advmod(irrelevant, most)
amod(comparison, irrelevant)
cc(illogical, and)
conj(irrelevant, illogical)
obl(jump, comparison)
punct(surprised, . )
det(remark, a)
compound(remark, chance)
nsubj(bring, remark)
case(train, about)
nmod:poss(train, Lenin)
case(Lenin, 's)
amod(train, seal)
nmod(remark, train)
root(ROOT, bring)
det(rejoinder, the)
obj(bring, rejoinder)
mark(myth, that)
nsubj(myth, this)
cop(myth, be)
det(myth, a)
acl(rejoinder, myth)
amod(myth, akin)
case(tree, to)
nmod:poss(tree, George)
flat(George, Washington)
case(George, 's)
compound(tree, cherry)
obl(akin, tree)
punct(bring, .)
obj(bring, theory)
case(pattern, of)
det(pattern, the)
compound(pattern, behavior)
nmod(theory, pattern)
case(mass, of)
compound(mass, population)
nmod(pattern, mass)
aux:pass(compare, be)
acl:relcl(theory, compare)
case(discovery, to)
amod(discovery, scientific)
obl(compare, discovery)
case(pattern, concern)
det(pattern, the)
compound(pattern, motion)
punct(pattern, -)
nmod(discovery, pattern)
case(mass, of)
amod(mass, gaseous)
nmod(pattern, mass)
punct(bring, .)
advmod(wonder, no)
root(ROOT, wonder)
mark(have, that)
nsubj(have, Pozzatti)
cc(I, and)
conj(Pozzatti, I)
ccomp(wonder, have)
case(difficulty, at)
compound(difficulty, time)
obl(have, difficulty)
mark(remember, in)
acl(difficulty, remember)
det(purpose, the)
amod(purpose, real)
obj(remember, purpose)
case(presence, of)
nmod:poss(presence, we)
nmod(purpose, presence)
punct(presence, ,)
advmod(Exchange, namely)
punct(Exchange, ,)
compound(Exchange, cultural)
compound(Typical, Exchange)
punct(Exchange, .)
nsubj(occasion, Typical)
case(experience, of)
det:predet(experience, such)
det(experience, a)
nmod(Typical, experience)
cop(occasion, be)
det(occasion, the)
ccomp(wonder, occasion)
case(welcome, of)
det(welcome, a)
advmod(formal, somewhat)
amod(welcome, formal)
compound(welcome, official)
nmod(occasion, welcome)
case(office, in)
det(office, the)
nmod(welcome, office)
case(union, of)
det(union, the)
nmod(office, union)
case(artist, of)
compound(artist, Soviet)
nmod(union, artist)
punct(wonder, .)
nsubj(look, we)
aux(look, have)
root(ROOT, look)
advmod(look, forward)
case(what, to)
obl(look, what)
nsubj(hope, we)
acl:relcl(what, hope)
mark(meeting, to)
cop(meeting, be)
nmod:poss(meeting, we)
amod(meeting, first)
amod(meeting, informal)
xcomp(hope, meeting)
case(number, with)
det(number, a)
nmod(meeting, number)
case(artist, of)
nmod:poss(artist, moscow)
case(moscow, 's)
nmod(number, artist)
punct(look, .)
advmod(become, instead)
punct(become, ,)
nsubj(become, we)
root(ROOT, become)
xcomp(become, involved)
case(series, in)
det(series, a)
obl(involved, series)
case(address, of)
amod(address, friendly)
punct(address, ,)
cc(formal, but)
advmod(formal, overly)
amod(address, formal)
punct(address, ,)
amod(address, welcoming)
nmod(series, address)
case(which, to)
obl(have, which)
nsubj(have, we)
acl:relcl(address, have)
det(choice, no)
obj(have, choice)
cc(reply, but)
mark(reply, to)
acl(choice, reply)
case(kind, in)
obl(reply, kind)
punct(involved, .)
det(term, the)
nsubj(tend, term)
case(friendship, of)
nmod(term, friendship)
punct(understanding, ,)
conj(friendship, understanding)
punct(cooperation, ,)
conj(friendship, cooperation)
punct(etc., ,)
conj(friendship, etc.)
punct(tend, ,)
root(ROOT, tend)
mark(become, to)
xcomp(tend, become)
advmod(shopworn, somewhat)
xcomp(become, shopworn)
case(use, because)
fixed(because, of)
amod(use, constant)
cc(indiscriminate, and)
conj(constant, indiscriminate)
obl(shopworn, use)
punct(tend, . )
nsubj(hope, I)
aux(hope, can)
advmod(hope, only)
root(ROOT, hope)
mark(wear, that)
det(exchange, the)
amod(exchange, continue)
nsubj(wear, exchange)
case(group, of)
nmod(exchange, group)
cc(individual, and)
conj(group, individual)
case(country, between)
nmod:poss(country, we)
nmod(group, country)
aux(wear, will)
advmod(wear, not)
ccomp(hope, wear)
compound:prt(wear, out)
det(language, all)
obj(wear, language)
amod(language, pertinent)
case(occasion, to)
det(occasion, the)
obl(pertinent, occasion)
punct(hope, .)
det(functionary, the)
compound(functionary, preside)
amod(functionary, female)
nsubj(contribute, functionary)
punct(functionary, ,)
case(proportion, of)
amod(proportion, massive)
nmod(functionary, proportion)
cc(appearance, and)
amod(appearance, forbid)
conj(proportion, appearance)
punct(contribute, ,)
advmod(contribute, initially)
aux(contribute, do)
advmod(contribute, not)
root(ROOT, contribute)
case(expression, to)
det(expression, the)
obl(contribute, expression)
case(friendship, of)
nmod(expression, friendship)
cc(welcome, and)
conj(friendship, welcome)
case(number, by)
det(number, a)
obl(welcome, number)
case(gentleman, of)
amod(gentleman, dignify)
nmod(number, gentleman)
acl(gentleman, represent)
det(art, the)
obj(represent, art)
punct(contribute, .)
nsubj(be, it)
root(ROOT, be)
advmod(be, only)
mark(respond, after)
nsubj(respond, we)
aux(respond, have)
advcl(be, respond)
punct(respond, ,)
mark(fear, with)
obl(respond, what)
nsubj(fear, I)
acl:relcl(what, fear)
cop(clich, be)
amod(clich, similar)
obj(fear, clich)
punct(be, ,)
mark(go, that)
nsubj(go, she)
acl:relcl(clich, go)
case(action, into)
obl(go, action)
mark(question, by)
advcl(go, question)
nmod:poss(desire, we)
obj(question, desire)
case(friendship, for)
nmod(desire, friendship)
cc(understanding, and)
conj(friendship, understanding)
case(challenge, with)
det(challenge, a)
obl(question, challenge)
case(action, about)
amod(action, aggressive)
cc(warlike, and)
conj(aggressive, warlike)
nmod(challenge, action)
case(Government, by)
det(Government, the)
compound(Government, U.S.)
nmod(action, Government)
case(Cuba, in)
nmod(Government, Cuba)
cc(Laos, and)
conj(Cuba, Laos)
punct(be, .)
nsubj(retreat, she)
root(ROOT, retreat)
mark(leave, by)
advcl(retreat, leave)
det(room, the)
obj(leave, room)
mark(suggest, when)
nsubj(suggest, we)
advcl(retreat, suggest)
mark(terminate, that)
nmod:poss(meeting, we)
nsubj(terminate, meeting)
aux(terminate, might)
advmod(terminate, well)
ccomp(suggest, terminate)
advmod(then, right)
advmod(terminate, then)
cc(there, and)
conj(then, there)
punct(retreat, .)
advmod(return, unfortunately)
nsubj(return, she)
root(ROOT, return)
advmod(return, later)
punct(return, ,)
advmod(take, just)
mark(take, as)
nsubj(take, I)
aux(take, have)
advcl(return, take)
obj(take, advantage)
case(atmosphere, of)
det(atmosphere, the)
amod(atmosphere, friendlier)
nmod(advantage, atmosphere)
case(room, in)
det(room, the)
obl(take, room)
mark(state, by)
advcl(take, state)
mark(re-emergence, that)
advmod(re-emergence, perhaps)
det(result, a)
amod(result, unexpected)
nsubj(re-emergence, result)
case(Program, of)
det(Program, the)
compound(Program, cultural)
compound(Program, Exchange)
nmod(result, Program)
aux(re-emergence, would)
cop(re-emergence, be)
det(re-emergence, the)
ccomp(state, re-emergence)
case(Art, of)
compound(Art, abstract)
nmod(re-emergence, Art)
case(Russia, in)
obl(re-emergence, Russia)
punct(re-emergence, ,)
case(Realism, with)
amod(Realism, social)
nsubj(regain, Realism)
acl(re-emergence, regain)
obj(regain, dominance)
case(U.S., in)
det(U.S., the)
nmod(dominance, U.S.)
punct(return, .)
nsubj(give, this)
root(ROOT, give)
iobj(give, she)
det(opportunity, a)
obj(give, opportunity)
mark(ring, to)
acl(opportunity, ring)
compound:prt(ring, down)
det(curtain, the)
obj(ring, curtain)
case(admonition, with)
det(admonition, the)
amod(admonition, petulant)
obl(ring, admonition)
mark(presume, that)
nsubj(presume, we)
aux(presume, should)
advmod(presume, not)
acl(admonition, presume)
mark(lecture, to)
xcomp(presume, lecture)
obj(lecture, she)
case(abstraction, on)
obl(lecture, abstraction)
punct(give, .)
nsubj(go, she)
aux(go, do)
advmod(go, not)
root(ROOT, go)
advmod(far, so)
advmod(go, far)
mark(say, as)
mark(say, to)
advcl(go, say)
punct(go, ,)
mark(do, as)
aux:pass(do, be)
advcl(go, do)
case(occasion, on)
amod(occasion, other)
obl(do, occasion)
punct(do, ,)
mark(invention, that)
nsubj(invention, abstraction)
cc(invention, as)
fixed(as, well)
fixed(as, as)
nmod(abstraction, Impressionism)
cop(invention, be)
det(invention, a)
amod(invention, russian)
conj(go, invention)
nsubj:pass(discard, that)
aux(discard, have)
aux:pass(discard, be)
acl:relcl(invention, discard)
advmod(unwanted, as)
xcomp(discard, unwanted)
case(people, by)
det(people, the)
obl(discard, people)
case(u.s.s.r, of)
det(u.s.s.r, the)
nmod(people, u.s.s.r)
punct(go, .)
punct(know, .)
nsubj(know, Pozzatti)
cc(I, and)
conj(Pozzatti, I)
aux(know, could)
advmod(know, not)
root(ROOT, know)
advmod(know, then)
mark(experience, that)
nsubj(experience, we)
aux(experience, would)
ccomp(know, experience)
det(sort, this)
obj(experience, sort)
case(treatment, of)
nmod(sort, treatment)
advmod(often, more)
advmod(experience, often)
case(moscow, in)
obl(experience, moscow)
case(elsewhere, than)
obl(experience, elsewhere)
punct(know, .)
nsubj(be, we)
root(ROOT, be)
mark(discover, to)
ccomp(be, discover)
punct(discover, ,)
case(fact, in)
obl(discover, fact)
punct(be, ,)
mark(share, that)
det:predet(number, quite)
det(number, a)
nsubj(share, number)
case(people, of)
nmod(number, people)
ccomp(discover, share)
case(we, with)
obl(share, we)
det(impression, the)
obj(share, impression)
mark(subdue, that)
punct(subdue, ,)
case(contrast, in)
obl(subdue, contrast)
case(region, to)
amod(region, other)
amod(region, Soviet)
nmod(contrast, region)
punct(subdue, ,)
nmod:poss(atmosphere, moscow)
case(moscow, 's)
nsubj(subdue, atmosphere)
cop(subdue, be)
advmod(subdue, depressingly)
acl(impression, subdue)
cc(official, and)
conj(subdue, official)
punct(subdue, .)
mark(have, to)
advcl(subdue, have)
nmod:poss(intention, one)
case(one, 's)
obj(have, intention)
advmod(have, deliberately)
cc(misunderstood, or)
advmod(misunderstood, unintentionally)
csubj(waste, misunderstood)
cop(waste, be)
advmod(waste, always)
det(waste, a)
ccomp(have, waste)
case(time, of)
nmod(waste, time)
punct(be, .)
case(experience, until)
nmod:poss(experience, we)
compound(experience, moscow)
obl(consider, experience)
punct(consider, ,)
nsubj(consider, I)
aux(consider, have)
advmod(consider, not)
root(ROOT, consider)
obj(consider, it)
xcomp(consider, necessary)
mark(prepare, to)
csubj(necessary, prepare)
det(argument, any)
obj(prepare, argument)
advmod(prepare, formally)
cc(informally, or)
conj(formally, informally)
punct(consider, .)
nsubj(talk, artist)
advmod(talk, simply)
aux(talk, do)
advmod(talk, not)
root(ROOT, talk)
case(other, to)
det(other, each)
obl(talk, other)
case(fashion, in)
det(fashion, that)
obl(talk, fashion)
punct(talk, ;)
punct(talk, ;)
cc(presume, and)
punct(presume, ,)
advmod(presume, furthermore)
punct(presume, ,)
nsubj(presume, I)
aux(presume, could)
advmod(presume, not)
conj(talk, presume)
det(implication, the)
obj(presume, implication)
mark(speak, that)
nsubj(speak, I)
acl(implication, speak)
case(artist, for)
amod(artist, american)
obl(speak, artist)
case(group, as)
det(group, a)
obl(speak, group)
punct(speak, .)
mark(save, to)
advcl(speak, save)
obj(save, time)
punct(seem, ,)
det(clarification, some)
nsubj(seem, clarification)
conj(speak, seem)
xcomp(seem, necessary)
punct(talk, .)
det(statement, the)
amod(statement, follow)
cop(statement, be)
det(statement, a)
root(ROOT, statement)
acl(statement, read)
case(group, to)
det(group, a)
amod(group, large)
cc(friendly, and)
conj(large, friendly)
obl(read, group)
case(artist, of)
nmod:poss(artist, you)
amod(artist, fellow)
nmod(group, artist)
case(Leningrad, in)
nmod(artist, Leningrad)
punct(statement, :)
punct(statement, ``)
nsubj(come, we)
aux(come, have)
root(ROOT, come)
case(land, to)
nmod:poss(land, you)
obl(come, land)
case(intention, with)
det(intention, the)
amod(intention, express)
obl(come, intention)
case(understanding, of)
nmod(intention, understanding)
cc(respect, and)
conj(come, respect)
nmod:poss(idea, you)
obj(respect, idea)
cc(way, and)
nmod:poss(way, you)
conj(idea, way)
punct(come, .)
nmod:poss(presence, we)
nsubj:pass(consider, presence)
advmod(presence, here)
aux(consider, should)
advmod(consider, also)
aux:pass(consider, be)
root(ROOT, consider)
advmod(consider, further)
punct(evidence, ,)
amod(evidence, sincere)
obl(consider, evidence)
case(attempt, of)
det(attempt, the)
nmod(evidence, attempt)
case(people, by)
nmod:poss(people, we)
nmod(attempt, people)
cc(government, and)
nmod:poss(government, they)
amod(government, choose)
conj(people, government)
mark(seek, to)
acl(government, seek)
det(way, any)
cc(all, and)
conj(any, all)
amod(way, possible)
obj(seek, way)
mark(effect, to)
acl(way, effect)
advmod(effect, closer)
punct(tie, ,)
amod(tie, peaceful)
obj(effect, tie)
case(people, among)
det(people, all)
nmod(tie, people)
punct(consider, .)
nsubj(convinced, we)
cop(convinced, be)
advmod(convinced, quite)
root(ROOT, convinced)
mark(depend, that)
nsubj(depend, one)
case(hope, of)
det(hope, the)
amod(hope, main)
nmod(one, hope)
case(future, for)
det(future, the)
nmod(hope, future)
ccomp(convinced, depend)
case(contact, upon)
det(contact, the)
amod(contact, informal)
obl(depend, contact)
cc(exchange, and)
conj(contact, exchange)
case(idea, of)
nmod(contact, idea)
case(individual, between)
nmod(idea, individual)
punct(convinced, .)
case(spite, in)
obl(see, spite)
case(period, of)
det(period, the)
advmod(short, relatively)
amod(period, short)
nmod(spite, period)
case(time, of)
nmod(period, time)
obj(experience, that)
nsubj(experience, we)
aux(experience, have)
acl:relcl(period, experience)
case(you, among)
obl(experience, you)
punct(see, ,)
nsubj(see, we)
aux(see, have)
advmod(see, already)
root(ROOT, see)
amod(indication, many)
obj(see, indication)
case(character, of)
nmod:poss(character, you)
nmod(indication, character)
cc(spirit, and)
conj(character, spirit)
punct(see, .)
nsubj(aware, we)
cop(aware, be)
advmod(aware, acutely)
root(ROOT, aware)
mark(society, that)
nsubj(society, yours)
cop(society, be)
det(society, a)
ccomp(aware, society)
nsubj(develop, which)
punct(develop, ,)
case(spite, in)
obl(develop, spite)
case(war, of)
amod(war, several)
nmod(spite, war)
cc(privation, and)
amod(privation, many)
conj(war, privation)
punct(develop, ,)
aux(develop, have)
ccomp(aware, develop)
obj(develop, itself)
case(one, into)
obl(develop, one)
case(nation, of)
det(nation, the)
amod(nation, foremost)
nmod(one, nation)
case(world, of)
det(world, the)
nmod(nation, world)
punct(aware, .)
nmod:poss(history, you)
amod(history, past)
nsubj(resplendent, history)
cop(resplendent, be)
root(ROOT, resplendent)
case(fruit, with)
det(fruit, the)
obl(resplendent, fruit)
case(intellect, of)
det(intellect, the)
nmod(fruit, intellect)
punct(resplendent, .)
nmod:poss(history, you)
amod(history, present)
nsubj(admirable, history)
cop(admirable, be)
advmod(admirable, equally)
parataxis(resplendent, admirable)
case(achievement, for)
nmod:poss(achievement, its)
amod(achievement, industrial)
cc(scientific, and)
conj(industrial, scientific)
obl(admirable, achievement)
punct(resplendent, .)
nsubj(come, we)
aux(come, have)
root(ROOT, come)
case(you, to)
obl(come, you)
mark(experience, to)
xcomp(come, experience)
obj(experience, something)
case(way, of)
nmod:poss(way, you)
nmod(something, way)
case(life, of)
nmod(way, life)
mark(attempt, while)
advmod(attempt, also)
advcl(experience, attempt)
mark(acquaint, to)
xcomp(attempt, acquaint)
obj(acquaint, you)
case(that, with)
obl(acquaint, that)
case(ours, of)
nmod(that, ours)
punct(acquaint, .)
mark(believe, while)
nsubj(believe, we)
punct(believe, ,)
case(artist, as)
amod(artist, american)
nmod(we, artist)
punct(believe, ,)
advcl(acquaint, believe)
advmod(believe, deeply)
case(character, in)
det(character, the)
amod(character, universal)
obl(believe, character)
case(activity, of)
det(activity, all)
amod(activity, intellectual)
nmod(character, activity)
punct(less, ,)
nsubj(less, we)
aux(less, would)
cop(less, be)
parataxis(come, less)
case(honest, than)
obl(less, honest)
case(you, with)
obl(honest, you)
punct(ourselves, ,)
cc(ourselves, or)
conj(you, ourselves)
punct(state, ,)
mark(fail, if)
nsubj(fail, we)
advcl(less, fail)
mark(state, to)
xcomp(fail, state)
det(attitude, a)
amod(attitude, specific)
obj(state, attitude)
case(society, toward)
nmod:poss(society, we)
amod(society, own)
nmod(attitude, society)
cc(community, as)
fixed(as, well)
fixed(as, as)
det(community, the)
amod(community, international)
conj(attitude, community)
case(whole, as)
det(whole, a)
nmod(community, whole)
punct(come, .)
mark(state, in)
advcl(like, state)
det(position, this)
obj(state, position)
punct(like, ,)
nsubj(like, we)
aux(like, should)
root(ROOT, like)
mark(make, to)
xcomp(like, make)
expl(make, it)
xcomp(make, clear)
case(you, to)
obl(clear, you)
mark(expect, that)
nsubj(expect, we)
aux(expect, can)
advmod(expect, not)
ccomp(make, expect)
obj(expect, artist)
cc(intellectual, and)
conj(artist, intellectual)
case(land, in)
amod(land, other)
obl(expect, land)
mark(share, to)
advcl(expect, share)
nmod:poss(opinion, we)
obj(share, opinion)
case(respect, in)
det(respect, every)
obl(share, respect)
punct(like, .)
case(matter, as)
det(matter, a)
obl(prize, matter)
case(fact, of)
nmod(matter, fact)
punct(prize, ,)
nsubj(prize, we)
root(ROOT, prize)
det(diversity, the)
obj(prize, diversity)
case(people, among)
nmod:poss(people, we)
amod(people, own)
nmod(diversity, people)
advmod(much, so)
advmod(prize, much)
mark(presume, that)
nsubj(presume, we)
aux(presume, will)
advmod(presume, not)
advcl(much, presume)
mark(speak, to)
xcomp(presume, speak)
case(artist, for)
det(artist, all)
amod(artist, other)
amod(artist, american)
obl(speak, artist)
punct(prize, .)
cc(agree, but)
advmod(agree, certainly)
punct(agree, ,)
nsubj(agree, all)
aux(agree, will)
root(ROOT, agree)
mark(knowledge, that)
nsubj(knowledge, it)
cop(knowledge, be)
advmod(knowledge, not)
advmod(much, so)
advmod(knowledge, much)
det(knowledge, the)
ccomp(agree, knowledge)
cc(search, and)
conj(knowledge, search)
case(similarity, for)
nmod(knowledge, similarity)
case(you, between)
nmod(similarity, you)
cc(we, and)
conj(you, we)
punct(exploration, ,)
cc(exploration, but)
cc(exploration, rather)
det(exploration, the)
amod(exploration, thoughtful)
conj(knowledge, exploration)
cc(acceptance, and)
conj(exploration, acceptance)
case(difference, of)
nmod:poss(difference, we)
nmod(exploration, difference)
nsubj(lead, which)
aux(lead, may)
acl:relcl(difference, lead)
obj(lead, we)
case(goal, to)
nmod:poss(goal, we)
amod(goal, respective)
cc(desire, and)
conj(respective, desire)
obl(lead, goal)
case(minimum, with)
det(minimum, a)
nmod(goal, minimum)
case(misunderstanding, of)
nmod(minimum, misunderstanding)
punct(agree, .)
case(yourselves, like)
obl(have, yourselves)
punct(have, ,)
nsubj(have, we)
root(ROOT, have)
obj(have, pride)
cc(love, and)
conj(pride, love)
case(country, for)
nmod:poss(country, we)
obl(have, country)
punct(have, .)
case(many, to)
obl(land, many)
case(we, of)
nmod(many, we)
punct(land, ,)
nsubj(land, this)
cop(land, be)
det(land, a)
root(ROOT, land)
case(which, to)
obl(fleed, which)
nsubj(fleed, we)
cc(parent, or)
nmod:poss(parent, we)
conj(we, parent)
acl:relcl(land, fleed)
case(terror, from)
amod(terror, totalitarian)
obl(fleed, terror)
mark(live, in)
fixed(in, order)
mark(live, to)
advcl(fleed, live)
case(freedom, in)
amod(freedom, dignify)
obl(live, freedom)
punct(land, .)
case(artist, as)
obl(feel, artist)
nsubj(feel, we)
root(ROOT, feel)
det(obligation, the)
amod(obligation, same)
obj(feel, obligation)
punct(feel, ,)
mark(do, as)
advcl(feel, do)
amod(individual, other)
obj(do, individual)
punct(feel, ,)
mark(consider, in)
advcl(do, consider)
iobj(consider, ourselves)
amod(citizen, responsible)
obj(consider, citizen)
case(nation, of)
det(nation, a)
amod(nation, great)
nmod(citizen, nation)
punct(feel, .)
det(Society, the)
compound(Society, Sane)
nsubj(work, Society)
cop(work, be)
det(work, a)
amod(work, ambitious)
root(ROOT, work)
punct(work, .)
nsubj(broad, it)
cop(broad, be)
nsubj(broad, scope)
cop(broad, be)
advmod(broad, as)
root(ROOT, broad)
case(question, as)
det(question, the)
obl(broad, question)
punct(broad, :)
obj(live, what)
aux(mean, do)
nsubj(mean, it)
root(ROOT, mean)
mark(live, to)
xcomp(mean, live)
case(society, in)
amod(society, modern)
obl(live, society)
punct(mean, ?)
punct(mean, ? )
det(work, a)
root(ROOT, work)
advmod(broad, so)
amod(work, broad)
punct(work, ,)
advmod(direct, even)
mark(direct, when)
nsubj:pass(direct, it)
aux:pass(direct, be)
advcl(broad, direct)
case(idea, by)
det(idea, a)
amod(idea, lead)
obl(direct, idea)
cc(inform, and)
conj(idea, inform)
case(vision, by)
det(vision, a)
amod(vision, moral)
obl(inform, vision)
punct(fail, ,)
aux(fail, must)
advmod(fail, necessarily)
punct(fail, ``)
appos(work, fail)
punct(fail, '')
punct(fail, .)
advmod(reader, even)
det(reader, a)
amod(reader, hasty)
nsubj(find, reader)
aux(find, will)
advmod(find, easily)
conj(fail, find)
case(it, in)
obl(find, it)
amod(spot, numerous)
amod(spot, blind)
obj(find, spot)
punct(error, ,)
conj(spot, error)
case(fact, of)
nmod(error, fact)
cc(argument, and)
conj(fact, argument)
punct(exclusion, ,)
amod(exclusion, important)
conj(spot, exclusion)
punct(area, ,)
conj(exclusion, area)
case(ignorance, of)
nmod(area, ignorance)
cc(prejudice, and)
conj(ignorance, prejudice)
punct(emphase, ,)
amod(emphase, undue)
conj(exclusion, emphase)
case(trivia, on)
nmod(emphase, trivia)
punct(example, ,)
conj(trivia, example)
case(position, of)
amod(position, broad)
nmod(example, position)
acl(position, support)
case(evidence, by)
amod(evidence, flimsy)
obl(support, evidence)
punct(like, ,)
cc(like, and)
det(like, the)
conj(evidence, like)
punct(like, .)
amod(book, such)
nsubj(prey, book)
cop(prey, be)
amod(prey, easy)
conj(like, prey)
case(critic, for)
nmod(prey, critic)
punct(prey, .)
cc(need, nor)
root(ROOT, need)
det(critic, the)
nsubj(captious, critic)
cop(captious, be)
ccomp(need, captious)
punct(need, . )
det(man, a)
amod(man, careful)
cc(orderly, and)
conj(careful, orderly)
nsubj:pass(put, man)
punct(man, ,)
nsubj(value, who)
acl:relcl(man, value)
obj(value, precision)
cc(kind, and)
det(kind, a)
conj(precision, kind)
case(responsibility, of)
amod(responsibility, tough)
amod(responsibility, intellectual)
nmod(kind, responsibility)
punct(put, ,)
aux(put, might)
advmod(put, easily)
aux:pass(put, be)
root(ROOT, put)
compound:prt(put, off)
case(book, by)
det:predet(book, such)
det(book, a)
obl(put, book)
punct(put, .)
nsubj(matter, it)
cop(matter, be)
det(matter, a)
amod(matter, simple)
root(ROOT, matter)
punct(matter, ,)
case(one, for)
obl(dispose, one)
advmod(dispose, so)
advcl(matter, dispose)
punct(take, ,)
mark(take, to)
advcl(matter, take)
det(work, a)
obj(take, work)
case(Society, like)
det(Society, the)
compound(Society, Sane)
nmod(work, Society)
cc(shred, and)
conj(take, shred)
obj(shred, it)
case(odd, into)
obl(shred, odd)
cc(end, and)
conj(odd, end)
punct(matter, .)
det(thing, the)
nsubj:pass(make, thing)
aux(make, can)
aux:pass(make, be)
root(ROOT, make)
mark(look, to)
xcomp(make, look)
case(attic, like)
det(attic, the)
amod(attic, clutter)
obl(look, attic)
case(family, of)
det(family, a)
amod(family, large)
cc(vigorous, and)
conj(large, vigorous)
nmod(attic, family)
punct(attic, --)
det(jumble, a)
amod(jumble, motley)
appos(attic, jumble)
case(object, of)
amod(object, discard)
nmod(jumble, object)
punct(outworn, ,)
det(outworn, some)
conj(object, outworn)
cc(some, and)
conj(outworn, some)
nsubj(useful, that)
cop(useful, be)
advmod(useful, never)
acl:relcl(some, useful)
punct(whole, ,)
nsubj(whole, some)
advmod(whole, once)
conj(useful, whole)
cc(bright, and)
conj(whole, bright)
cc(chip, but)
advmod(chip, now)
conj(whole, chip)
cc(tarnish, and)
conj(chip, tarnish)
punct(piece, ,)
det(piece, some)
amod(piece, odd)
obj(chip, piece)
nmod:poss(history, whose)
obj(remember, history)
det(one, no)
nsubj(remember, one)
acl:relcl(piece, remember)
punct(here, ,)
advmod(remember, here)
cc(gem, and)
expl(gem, there)
det(gem, a)
conj(here, gem)
punct(gem, ,)
appos(gem, everything)
amod(everything, fascinating)
mark(suggest, because)
nsubj(suggest, it)
advcl(fascinating, suggest)
det(part, some)
obj(suggest, part)
case(condition, of)
det(condition, the)
amod(condition, human)
nmod(part, condition)
punct(add, --)
det(whole, the)
nsubj(add, whole)
amod(part, add)
compound:prt(add, up)
case(nothing, to)
obl(add, nothing)
amod(nothing, more)
case(glimpse, than)
det(glimpse, a)
obl(more, glimpse)
case(history, into)
det(history, the)
amod(history, disorderly)
nmod(glimpse, history)
case(maker, of)
det(maker, the)
nmod(history, maker)
cc(user, and)
conj(maker, user)
punct(make, .)
nsubj:pass(do, that)
aux(do, could)
aux:pass(do, be)
advmod(do, easily)
root(ROOT, do)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(do, be)
amod(reason, little)
nsubj(be, reason)
case(it, in)
nmod(reason, it)
punct(do, .)
nsubj(come, it)
aux(come, would)
root(ROOT, come)
advmod(come, down)
mark(say, to)
advcl(come, say)
mark(paint, that)
nsubj(paint, Fromm)
ccomp(say, paint)
case(brush, with)
det(brush, a)
amod(brush, broad)
obl(paint, brush)
punct(conclusion, ,)
cc(conclusion, and)
nsubj(conclusion, that)
punct(conclusion, ,)
case(all, after)
obl(conclusion, all)
punct(conclusion, ,)
cop(conclusion, be)
advmod(conclusion, not)
det(conclusion, a)
conj(come, conclusion)
nsubj(work, one)
aux(work, must)
acl:relcl(conclusion, work)
obl(work, toward)
cc(impression, but)
det(impression, a)
conj(conclusion, impression)
nsubj(have, he)
acl:relcl(impression, have)
case(outset, from)
det(outset, the)
obl(have, outset)
punct(come, . )
nsubj(mention, I)
root(ROOT, mention)
det(feature, these)
obj(mention, feature)
case(book, of)
det(book, the)
nmod(feature, book)
mark(inherent, because)
nsubj(inherent, they)
cop(inherent, be)
advcl(mention, inherent)
case(character, in)
det(book, the)
nmod:poss(character, book)
case(book, 's)
obl(inherent, character)
cc(mention, and)
advmod(mention, therefore)
aux(mention, must)
aux:pass(mention, be)
conj(inherent, mention)
punct(mention, .)
expl(superfluous, it)
aux(superfluous, would)
cop(superfluous, be)
root(ROOT, superfluous)
mark(build, to)
csubj(superfluous, build)
det(critique, a)
obj(build, critique)
case(they, around)
obl(build, they)
punct(superfluous, .)
expl(be, there)
root(ROOT, be)
amod(criticism, more)
amod(criticism, substantial)
nsubj(be, criticism)
mark(make, to)
aux:pass(make, be)
acl(criticism, make)
case(account, of)
nmod:poss(account, Fromm)
case(Fromm, 's)
obl(make, account)
case(civilization, of)
amod(civilization, capitalist)
nmod(account, civilization)
punct(be, .)
expl(worthwhile, it)
cop(worthwhile, be)
root(ROOT, worthwhile)
mark(recall, to)
csubj(worthwhile, recall)
mark(have, that)
nmod:poss(treatment, Fromm)
case(Fromm, 's)
nsubj(have, treatment)
ccomp(recall, have)
cc:preconj(descriptive, both)
amod(aspect, descriptive)
cc(normative, and)
conj(descriptive, normative)
obj(have, aspect)
punct(worthwhile, .)
root(ROOT, since)
nsubj(discuss, I)
aux(discuss, have)
advmod(discuss, already)
root(ROOT, discuss)
nmod:poss(position, he)
amod(position, moral)
obj(discuss, position)
punct(discuss, ,)
mark(incorporate, that)
nsubj:pass(incorporate, discussion)
aux:pass(incorporate, be)
ccomp(discuss, incorporate)
case(reference, by)
obl(incorporate, reference)
case(page, into)
det(page, the)
amod(page, follow)
obl(incorporate, page)
punct(page, ,)
nsubj(focus, which)
aux(focus, will)
acl:relcl(page, focus)
case(side, on)
det(side, the)
amod(side, empirical)
cc(analytic, and)
conj(empirical, analytic)
obl(focus, side)
case(treatment, of)
nmod:poss(treatment, Fromm)
case(Fromm, 's)
nmod(side, treatment)
punct(discuss, . )
nsubj(indicate, I)
aux(indicate, shall)
advmod(indicate, first)
root(ROOT, indicate)
det(couple, a)
obj(indicate, couple)
case(weakness, of)
nmod(couple, weakness)
case(analysis, in)
nmod:poss(analysis, Fromm)
case(Fromm, 's)
nmod(couple, analysis)
punct(argue, ,)
advmod(argue, then)
parataxis(indicate, argue)
mark(grant, that)
punct(grant, ,)
ccomp(argue, grant)
det(weakness, these)
obj(grant, weakness)
punct(leave, ,)
nsubj(leave, he)
advmod(leave, still)
aux(leave, have)
advmod(leave, much)
ccomp(argue, leave)
obj(leave, that)
cop(valuable, be)
xcomp(leave, valuable)
punct(raise, ,)
cc(raise, and)
punct(raise, ,)
advmod(raise, finally)
punct(raise, ,)
conj(leave, raise)
det(question, the)
amod(question, general)
obj(raise, question)
case(philosophical, of)
det(philosophical, a)
nmod(question, philosophical)
case(approach, versus)
det(approach, a)
amod(approach, sociological)
obl(philosophical, approach)
case(question, to)
det(question, the)
nmod(approach, question)
case(alienation, of)
nmod(question, alienation)
punct(indicate, .)
advmod(work, almost)
det(work, no)
amod(work, empirical)
nsubj:pass(do, work)
aux(do, have)
aux:pass(do, be)
root(ROOT, do)
case(problem, on)
det(problem, the)
obl(do, problem)
case(alienation, of)
nmod(problem, alienation)
punct(do, .)
case(history, despite)
nmod:poss(history, its)
advmod(long, rather)
amod(history, long)
amod(history, intellectual)
obl(do, history)
punct(hypothesis, ,)
nsubj(hypothesis, alienation)
cop(hypothesis, be)
advmod(hypothesis, still)
det(hypothesis, a)
amod(hypothesis, promise)
conj(do, hypothesis)
cc(theory, and)
advmod(theory, not)
det(theory, a)
amod(theory, verify)
conj(hypothesis, theory)
punct(do, .)
det(idea, the)
nsubj(receive, idea)
aux(receive, have)
root(ROOT, receive)
amod(attention, much)
obj(receive, attention)
case(philosophy, in)
nmod(attention, philosophy)
punct(receive, ,)
case(literature, in)
obl(receive, literature)
punct(work, ,)
cc(work, and)
case(work, in)
det(work, a)
amod(work, few)
conj(attention, work)
case(criticism, of)
amod(criticism, general)
amod(criticism, social)
nmod(work, criticism)
punct(work, ,)
case(Society, such)
fixed(such, as)
det(Society, the)
compound(Society, Sane)
nmod(criticism, Society)
punct(receive, .)
nsubj(miss, what)
aux(miss, be)
csubj(be, miss)
root(ROOT, be)
nsubj(be, work)
nsubj(answer, that)
aux(answer, would)
acl:relcl(work, answer)
punct(answer, ,)
advmod(use, presumably)
case(use, by)
det(use, the)
obl(answer, use)
case(method, of)
compound(method, survey)
nmod(use, method)
cc(scale, and)
compound(type, Guttman)
punct(type, -)
compound(scale, type)
compound(scale, attitude)
conj(method, scale)
punct(question, ,)
amod(question, such)
conj(method, question)
case(these, as)
nmod(question, these)
punct(be, :)
root(ROOT, what)
cop(what, be)
det(component, the)
nsubj(what, component)
case(state, of)
det(state, the)
compound(state, feeling)
punct(state, -)
nmod(component, state)
acl(component, describe)
case(alienation, as)
obl(describe, alienation)
punct(what, ?)
punct(what, ?)
advmod(widespread, how)
root(ROOT, widespread)
cop(widespread, be)
nsubj(widespread, alienation)
punct(widespread, ?)
punct(widespread, ?)
root(ROOT, what)
cop(what, be)
nmod:poss(incidence, its)
nsubj(what, incidence)
case(class, among)
det(class, the)
amod(class, various)
nmod(incidence, class)
cc(subgroup, and)
conj(class, subgroup)
case(population, of)
det(population, the)
nmod(subgroup, population)
punct(class, ?)
punct(incidence, ?)
acl(incidence, take)
obj(take, alienation)
case(variable, as)
det(variable, a)
amod(variable, dependent)
obl(take, variable)
punct(take, ,)
mark(associate, with)
det(factor, what)
compound(structural, socio)
punct(structural, -)
amod(factor, structural)
nsubj:pass(associate, factor)
aux:pass(associate, be)
nsubj:pass(associate, it)
advmod(highly, most)
advmod(associate, highly)
advcl(take, associate)
punct(take, ?)
punct(take, ?)
advcl(affect, consider)
case(variable, as)
det(variable, a)
amod(variable, independent)
obl(consider, variable)
punct(affect, ,)
advmod(affect, how)
aux(affect, do)
nsubj(affect, it)
root(ROOT, affect)
obj(affect, behavior)
case(sector, in)
amod(sector, various)
nmod(behavior, sector)
case(life, of)
nmod(sector, life)
punct(affect, ?)
punct(affect, ?)
mark(do, until)
amod(work, such)
nsubj:pass(do, work)
aux:pass(do, be)
advcl(remain, do)
punct(remain, ,)
expl(remain, there)
aux(remain, must)
root(ROOT, remain)
det(suspicion, the)
compound(suspicion, nag)
xcomp(remain, suspicion)
mark(more, that)
nsubj(more, alienation)
aux(more, may)
cop(more, be)
obl:npmod(more, little)
acl(suspicion, more)
case(expression, than)
det(expression, a)
obl(more, expression)
case(malaise, of)
det(malaise, the)
nmod(expression, malaise)
case(intellectual, of)
det(intellectual, the)
nmod(malaise, intellectual)
punct(intellectual, ,)
nsubj(reject, who)
punct(reject, ,)
acl(intellectual, reject)
obl(reject, by)
cc(turn, and)
case(turn, in)
obl(reject, turn)
conj(reject, reject)
det(society, the)
amod(society, larger)
obj(reject, society)
punct(project, ,)
conj(reject, project)
nmod:poss(fear, he)
amod(fear, own)
obj(project, fear)
cc(despair, and)
conj(fear, despair)
case(screen, onto)
det(screen, the)
amod(screen, broader)
amod(screen, social)
obl(project, screen)
punct(remain, . )
nsubj(suggest, I)
aux(suggest, be)
advmod(suggest, not)
root(ROOT, suggest)
mark(ought, that)
nsubj(ought, Fromm)
ccomp(suggest, ought)
mark(do, to)
xcomp(ought, do)
det(kind, this)
obj(do, kind)
case(work, of)
nmod(kind, work)
punct(suggest, .)
cc(think, nor)
aux(think, do)
nsubj(think, I)
conj(suggest, think)
mark(nothing, that)
nsubj(nothing, alienation)
cop(nothing, be)
ccomp(think, nothing)
amod(nothing, more)
case(projection, than)
det(projection, a)
obl(more, projection)
case(malaise, of)
det(malaise, the)
nmod(projection, malaise)
case(intellectual, of)
det(intellectual, the)
nmod(malaise, intellectual)
punct(suggest, . )
nsubj(say, I)
aux(say, be)
root(ROOT, say)
advmod(say, only)
mark(understand, that)
mark(come, until)
det(fuller, a)
nsubj(come, fuller)
cc(kind, and)
amod(kind, different)
conj(fuller, kind)
case(evidence, of)
nmod(kind, evidence)
advcl(understand, come)
advmod(come, in)
punct(understand, ,)
det(discussion, any)
nsubj:pass(understand, discussion)
case(alienation, of)
nmod(discussion, alienation)
aux(understand, must)
aux:pass(understand, be)
ccomp(say, understand)
mark(have, to)
xcomp(understand, have)
amod(limitation, certain)
amod(limitation, important)
obj(have, limitation)
punct(say, .)
mark(appear, until)
amod(evidence, such)
nsubj(appear, evidence)
advcl(make, appear)
punct(make, ,)
nsubj(make, we)
aux(make, must)
root(ROOT, make)
xcomp(make, do)
case(evidence, with)
det(evidence, the)
obl(do, evidence)
nsubj(have, we)
acl:relcl(evidence, have)
punct(make, .)
advmod(vulnerable, here)
punct(vulnerable, ,)
advmod(vulnerable, perhaps)
punct(vulnerable, ,)
nsubj(vulnerable, Fromm)
cop(vulnerable, be)
root(ROOT, vulnerable)
punct(vulnerable, ,)
mark(use, for)
nsubj(use, he)
aux(use, do)
advmod(use, not)
advmod(use, always)
advcl(vulnerable, use)
det(best, the)
obj(use, best)
cc(evidence, and)
advmod(recent, most)
amod(evidence, recent)
obj(use, evidence)
amod(evidence, available)
punct(select, ,)
cc(select, and)
nsubj(select, he)
advmod(select, sometimes)
conj(vulnerable, select)
cc(interpret, and)
conj(select, interpret)
det(evidence, the)
obj(interpret, evidence)
case(way, in)
advmod(special, rather)
amod(way, special)
nmod(evidence, way)
punct(vulnerable, .)
nummod(example, three)
nsubj(follow, example)
root(ROOT, follow)
punct(follow, . )
nmod:poss(analysis, Fromm)
case(Fromm, 's)
root(ROOT, analysis)
case(alienation, of)
nmod(analysis, alienation)
case(sphere, in)
det(sphere, the)
nmod(analysis, sphere)
case(center, of)
compound(center, production)
nmod(sphere, center)
case(concept, around)
det(concept, the)
nmod(sphere, concept)
case(bureaucratization, of)
det(bureaucratization, the)
nmod(concept, bureaucratization)
case(corporation, of)
det(corporation, the)
nmod(bureaucratization, corporation)
punct(separation, ,)
det(separation, the)
conj(bureaucratization, separation)
case(ownership, of)
nmod(separation, ownership)
case(control, from)
nmod(ownership, control)
punct(broad, ,)
cc(broad, and)
det(broad, the)
conj(separation, broad)
punct(broad, ()
cc(point, and)
advmod(point, thus)
case(point, from)
det(point, the)
nmod(broad, point)
case(view, of)
nmod(point, view)
case(control, of)
amod(control, corporate)
nmod(view, control)
punct(ineffective, ,)
amod(control, ineffective)
punct(ineffective, ))
nmod(point, dispersion)
case(ownership, of)
compound(ownership, stock)
nmod(dispersion, ownership)
punct(dispersion, .)
case(point, for)
det:predet(point, all)
det(point, these)
nmod(dispersion, point)
nsubj(rely, he)
acl:relcl(point, rely)
advmod(rely, exclusively)
case(study, on)
nmod:poss(study, Berle)
cc(means, and)
conj(Berle, means)
case(means, 's)
obl(rely, study)
case(1932, of)
nmod(study, 1932)
punct(Corporation, ,)
det(Corporation, the)
amod(Corporation, modern)
appos(study, Corporation)
cc(Property, and)
amod(Property, private)
conj(Corporation, Property)
punct(rely, .)
det(conclusion, the)
amod(conclusion, broad)
nsubj(remain, conclusion)
case(work, of)
det(work, that)
compound(work, pioneer)
nmod(conclusion, work)
root(ROOT, remain)
xcomp(remain, undisturb)
punct(expand, ,)
cc(expand, but)
amod(research, subsequent)
nsubj(expand, research)
aux(expand, have)
conj(remain, expand)
cc(alter, and)
advmod(alter, somewhat)
conj(expand, alter)
nmod:poss(support, they)
amod(support, empirical)
obj(alter, support)
punct(suggest, ,)
aux(suggest, have)
conj(expand, suggest)
amod(revision, important)
obj(suggest, revision)
case(frame, in)
det(frame, the)
amod(frame, general)
amod(frame, analytic)
nmod(revision, frame)
case(reference, of)
nmod(frame, reference)
punct(sharpen, ,)
cc(sharpen, and)
aux(sharpen, have)
conj(suggest, sharpen)
det(meaning, the)
obj(sharpen, meaning)
case(concept, of)
amod(concept, particular)
amod(concept, analytic)
nmod(meaning, concept)
case(area, in)
det(area, this)
nmod(concept, area)
punct(seem, .)
nsubj(seem, Fromm)
parataxis(sharpen, seem)
xcomp(seem, unaware)
case(development, of)
det(development, these)
obl(unaware, development)
punct(undisturb, .)
det(example, another)
nsubj(use, example)
cop(use, be)
nmod:poss(use, he)
advmod(infrequent, very)
amod(use, infrequent)
root(ROOT, use)
case(amount, of)
det(amount, the)
amod(amount, large)
nmod(use, amount)
case(data, of)
nmod(amount, data)
case(survey, from)
nmod(amount, survey)
acl(survey, design)
mark(discover, to)
xcomp(design, discover)
obj(discover, what)
cc(feel, and)
advmod(feel, how)
nsubj(feel, people)
advmod(feel, actually)
aux(feel, do)
ccomp(discover, feel)
cc(think, and)
conj(feel, think)
case(range, on)
det(range, a)
amod(range, broad)
obl(think, range)
case(topic, of)
nmod(range, topic)
punct(cite, :)
nsubj(cite, he)
parataxis(use, cite)
amod(finding, such)
compound(type, survey)
punct(type, -)
compound(finding, type)
obj(cite, finding)
advmod(time, just)
nummod(time, three)
obl:tmod(cite, time)
punct(use, . )
advmod(one, moreover)
punct(one, ,)
det(conclusion, the)
nsubj(one, conclusion)
nsubj(draw, he)
acl:relcl(conclusion, draw)
case(finding, from)
det(finding, the)
obl(draw, finding)
cop(one, be)
advmod(one, not)
advmod(one, always)
det(one, the)
amod(one, only)
root(ROOT, one)
amod(one, possible)
punct(one, .)
case(example, for)
obl(cite, example)
punct(cite, ,)
nsubj(cite, he)
root(ROOT, cite)
det(data, the)
amod(data, follow)
obj(cite, data)
case(study, from)
nummod(study, two)
obl(cite, study)
case(satisfaction, on)
compound(satisfaction, job)
nmod(study, satisfaction)
punct(cite, :)
case(study, in)
det(study, the)
amod(study, first)
nmod(study, study)
punct(cent, ,)
nummod(cent, 85)
compound(cent, per)
conj(study, cent)
case(professional, of)
nmod(cent, professional)
cc(executive, and)
conj(professional, executive)
punct(cent, ,)
nummod(cent, 64)
compound(cent, per)
conj(study, cent)
case(people, of)
amod(collar, white)
compound(people, collar)
nmod(cent, people)
punct(cent, ,)
cc(cent, and)
nummod(cent, 41)
compound(cent, per)
conj(study, cent)
case(worker, of)
compound(worker, factory)
nmod(cent, worker)
acl(worker, express)
obj(express, satisfaction)
case(job, with)
nmod:poss(job, they)
nmod(satisfaction, job)
punct(cent, ;)
punct(86, ;)
case(study, in)
det(study, the)
amod(study, second)
obl(86, study)
punct(86, ,)
det(percentage, the)
nsubj(86, percentage)
cop(86, be)
parataxis(cite, 86)
case(professional, for)
nmod(86, professional)
punct(74, ,)
conj(professional, 74)
case(person, for)
amod(person, managerial)
nmod(professional, person)
punct(42, ,)
conj(person, 42)
case(employee, for)
amod(employee, commercial)
nmod(42, employee)
punct(56, ,)
conj(employee, 56)
case(worker, for)
amod(worker, skilled)
nmod(56, worker)
punct(48, ,)
cc(48, and)
conj(86, 48)
case(worker, for)
amod(worker, semi-skill)
nmod(48, worker)
punct(cite, .)
nsubj(conclude, he)
root(ROOT, conclude)
mark(show, that)
det(data, these)
nsubj(show, data)
ccomp(conclude, show)
det(percentage, a)
punct(percentage, ``)
advmod(high, remarkably)
amod(percentage, high)
punct(percentage, '')
obj(show, percentage)
case(person, of)
advmod(dissatisfied, consciously)
amod(person, dissatisfied)
cc(unhappy, and)
conj(dissatisfied, unhappy)
nmod(percentage, person)
case(factory, among)
nmod(person, factory)
cc(worker, and)
amod(worker, clerical)
conj(factory, worker)
punct(conclude, .)
advcl(conclude, Starting)
case(premise, from)
amod(premise, other)
compound(premise, value)
obl(Starting, premise)
case(Fromm, than)
nmod(premise, Fromm)
case(Fromm, 's)
punct(conclude, ,)
det(analyst, some)
nsubj(conclude, analyst)
aux(conclude, might)
root(ROOT, conclude)
mark(tell, that)
det(percentage, the)
nsubj(tell, percentage)
advmod(tell, really)
ccomp(conclude, tell)
obj(tell, we)
advmod(little, very)
obj(tell, little)
case(all, at)
obl(little, all)
punct(tell, ,)
mark(conclude, while)
nsubj(conclude, other)
aux(conclude, might)
advmod(conclude, even)
advcl(tell, conclude)
mark(low, that)
det(figure, the)
nsubj(low, figure)
cop(low, be)
advmod(low, remarkably)
ccomp(conclude, low)
punct(conclude, .)
nsubj(say, Eric)
flat(Eric, Hoffer)
punct(say, ,)
case(example, for)
obl(say, example)
punct(say, ,)
advmod(say, once)
root(ROOT, say)
mark(paradise, that)
nsubj(paradise, America)
cop(paradise, be)
det(paradise, a)
ccomp(say, paradise)
punct(paradise, --)
det(one, the)
amod(one, only)
appos(paradise, one)
case(history, in)
det(history, the)
nmod(one, history)
case(world, of)
det(world, the)
nmod(history, world)
punct(one, --)
case(workingme, for)
obl(paradise, workingme)
cc(child, and)
amod(child, small)
conj(workingme, child)
punct(say, .)
nsubj(be, what)
csubj(be, matter)
root(ROOT, be)
mark(one, that)
mark(one, while)
nmod:poss(reading, Fromm)
case(Fromm, 's)
nsubj(one, reading)
case(data, of)
det(data, the)
nmod(reading, data)
cop(one, be)
advmod(one, not)
det(one, the)
amod(one, only)
advcl(one, one)
amod(one, possible)
punct(one, ,)
nsubj(one, it)
cop(one, be)
advmod(one, precisely)
det(one, the)
ccomp(be, one)
nsubj(expect, we)
aux(expect, would)
acl:relcl(one, expect)
case(writer, from)
det(writer, a)
obl(expect, writer)
nsubj(believe, who)
advmod(believe, earnestly)
acl:relcl(writer, believe)
mark(ought, that)
det(man, every)
nsubj(ought, man)
aux(ought, can)
cc(ought, and)
conj(believe, ought)
mark(happy, to)
cop(happy, be)
xcomp(ought, happy)
cc(satisfied, and)
conj(happy, satisfied)
punct(cite, .)
nsubj(cite, Fromm)
advmod(cite, also)
parataxis(be, cite)
det(poll, a)
obj(cite, poll)
case(attitude, on)
nmod(poll, attitude)
case(restriction, toward)
compound(restriction, work)
nmod(attitude, restriction)
acl(restriction, conduct)
case(Corporation, by)
det(Corporation, the)
compound(Corporation, opinion)
compound(Corporation, Research)
obl(conduct, Corporation)
case(1945, in)
obl(conduct, 1945)
punct(Corporation, ,)
case(which, in)
obl(say, which)
nummod(cent, 49)
compound(cent, per)
nsubj(say, cent)
case(worker, of)
amod(worker, manual)
nmod(cent, worker)
acl:relcl(restriction, say)
det(man, a)
nsubj(ought, man)
ccomp(say, ought)
mark(turn, to)
xcomp(ought, turn)
compound:prt(turn, out)
advmod(much, as)
advmod(turn, much)
mark(could, as)
nsubj(could, he)
advcl(as, could)
case(work, in)
det(day, a)
nmod:poss(work, day)
case(day, 's)
obl(turn, work)
punct(say, ,)
mark(say, while)
nummod(cent, 41)
compound(cent, per)
nsubj(say, cent)
advcl(turn, say)
nsubj(do, he)
aux(do, should)
advmod(do, not)
ccomp(say, do)
nmod:poss(best, he)
obj(do, best)
cc(turn, but)
aux(turn, should)
conj(do, turn)
compound:prt(turn, out)
advmod(amount, only)
det(amount, the)
amod(amount, average)
obj(turn, amount)
punct(say, .)
nsubj(say, Fromm)
parataxis(be, say)
det(data, these)
nsubj(show, data)
ccomp(say, show)
mark(widespread, that)
compound(dissatisfaction, job)
nsubj(widespread, dissatisfaction)
cc(resentment, and)
conj(dissatisfaction, resentment)
cop(widespread, be)
ccomp(show, widespread)
punct(be, .)
nsubj(way, that)
cop(way, be)
nummod(way, one)
root(ROOT, way)
mark(read, to)
acl(way, read)
det(finding, the)
obj(read, finding)
punct(be, ,)
cc(be, but)
advmod(be, again)
expl(be, there)
conj(way, be)
amod(way, other)
nsubj(be, way)
punct(way, .)
nsubj(use, one)
aux(use, might)
root(ROOT, use)
amod(finding, such)
obj(use, finding)
mark(indicate, to)
acl(finding, indicate)
det(strength, the)
obj(indicate, strength)
case(association, of)
amod(association, informal)
amod(association, primary)
nmod(strength, association)
case(factory, in)
det(factory, the)
nmod(association, factory)
punct(interpretation, ,)
det(interpretation, a)
appos(strength, interpretation)
nsubj(run, which)
aux(run, would)
acl:relcl(interpretation, run)
obj(run, counter)
case(theory, to)
nmod:poss(theory, Fromm)
case(Fromm, 's)
obl(run, theory)
case(alienation, of)
nmod(theory, alienation)
punct(use, .)
cc(remind, or)
punct(remind, ,)
nsubj(remind, he)
aux(remind, might)
root(ROOT, remind)
obj(remind, Fromm)
mark(low, that)
det(figure, the)
nummod(cent, 41)
compound(cent, per)
compound(figure, cent)
nsubj(low, figure)
cop(low, be)
advmod(low, really)
advmod(low, astonishingly)
ccomp(remind, low)
punct(remind, :)
advmod(all, after)
obl(dedicated, all)
punct(dedicated, ,)
det(system, the)
amod(system, medieval)
compound(system, guild)
nsubj:pass(dedicated, system)
aux:pass(dedicated, be)
parataxis(low, dedicated)
case(proposition, to)
det(proposition, the)
obl(dedicated, proposition)
mark(turn, that)
nummod(cent, 100)
compound(cent, per)
nsubj(turn, cent)
case(worker, of)
det(worker, the)
nmod(cent, worker)
aux(turn, ought)
mark(turn, to)
acl(proposition, turn)
compound:prt(turn, out)
advmod(amount, only)
det(amount, the)
amod(amount, average)
obj(turn, amount)
punct(turn, ;)
punct(remind, ;)
cc(announce, and)
nmod:poss(union, today)
case(today, 's)
compound(union, trade)
nsubj(announce, union)
conj(remind, announce)
advmod(much, pretty)
advmod(announce, much)
det(view, the)
amod(view, same)
obj(announce, view)
punct(remind, .)
case(view, in)
root(ROOT, view)
case(shortcoming, of)
det(shortcoming, these)
nmod(view, shortcoming)
case(amount, in)
cc:preconj(amount, both)
det(amount, the)
nmod(shortcoming, amount)
cc(interpretation, and)
det(interpretation, the)
conj(amount, interpretation)
case(finding, of)
compound(type, survey)
punct(type, -)
compound(finding, type)
nmod(interpretation, finding)
case(opinion, on)
amod(opinion, public)
nmod(finding, opinion)
punct(consider, ,)
cc(consider, and)
conj(amount, consider)
det(criticism, the)
obj(consider, criticism)
nsubj:pass(bring, which)
aux(bring, can)
aux:pass(bring, be)
acl:relcl(criticism, bring)
case(anthropology, against)
nmod:poss(anthropology, Fromm)
case(Fromm, 's)
amod(anthropology, philosophical)
obl(bring, anthropology)
punct(anthropology, ,)
det:predet(passage, such)
det(passage, a)
appos(anthropology, passage)
mark(take, as)
det(follow, the)
nsubj:pass(take, follow)
aux(take, can)
advmod(take, not)
aux:pass(take, be)
acl(passage, take)
advmod(take, seriously)
punct(passage, .)
punct(passage, ``)
cop(happy, be)
nsubj(happy, people)
root(ROOT, happy)
punct(happy, ,)
cop(satisfied, be)
nsubj(satisfied, they)
advmod(satisfied, as)
parataxis(happy, satisfied)
punct(satisfied, ,)
advmod(satisfied, unconsciously)
punct(satisfied, ,)
mark(believe, as)
nsubj(believe, they)
advcl(satisfied, believe)
obj(believe, themselves)
mark(be, to)
xcomp(believe, be)
punct(happy, ?)
punct(happy, ?)
advcl(be, consider)
det(nature, the)
obj(consider, nature)
case(man, of)
nmod(nature, man)
punct(condition, ,)
cc(condition, and)
det(condition, the)
conj(nature, condition)
case(happiness, for)
nmod(condition, happiness)
punct(so, ,)
nsubj(so, this)
aux(so, can)
advmod(so, hardly)
cop(so, be)
root(ROOT, so)
punct(so, '')
punct(so, .)
det(ambiguity, the)
nsubj(so, ambiguity)
acl(ambiguity, suggest)
case(stem, above)
obl(suggest, stem)
case(difficulty, from)
det(difficulty, a)
advmod(basic, more)
amod(difficulty, basic)
obl(suggest, difficulty)
case(style, in)
nmod:poss(style, Fromm)
case(Fromm, 's)
nmod(difficulty, style)
case(think, of)
acl(style, think)
punct(so, .)
nsubj(seem, he)
root(ROOT, seem)
mark(use, to)
xcomp(seem, use)
det(alienation, the)
compound(alienation, term)
obj(use, alienation)
case(way, in)
nummod(way, two)
amod(way, different)
obl(use, way)
punct(seem, .)
advmod(use, sometimes)
nsubj(use, he)
root(ROOT, use)
obj(use, it)
case(term, as)
det(term, a)
amod(term, subjective)
punct(term, ,)
conj(subjective, descriptive)
obl(use, term)
punct(one, ,)
cc(one, and)
advmod(one, sometimes)
case(objective, as)
det(objective, a)
nmod(one, objective)
punct(one, ,)
amod(one, diagnostic)
conj(term, one)
punct(use, .)
nsubj(be, that)
root(ROOT, be)
punct(use, ,)
advmod(use, sometimes)
nsubj:pass(use, it)
aux:pass(use, be)
ccomp(be, use)
mark(describe, to)
xcomp(use, describe)
xcomp(describe, feel)
amod(misery, human)
obj(feel, misery)
punct(postulate, ,)
cc(postulate, and)
amod(time, other)
obl:tmod(postulate, time)
nsubj:pass(postulate, it)
aux:pass(postulate, be)
conj(use, postulate)
mark(explain, to)
xcomp(postulate, explain)
amod(anxiety, unfelt)
obj(explain, anxiety)
cc(discontent, and)
conj(anxiety, discontent)
punct(use, .)
det(failure, the)
nsubj(present, failure)
mark(keep, to)
acl(failure, keep)
det(usage, these)
nummod(usage, two)
obj(keep, usage)
amod(usage, distinct)
root(ROOT, present)
obj(present, hazard)
case(reader, to)
det(reader, the)
obl(present, reader)
punct(present, .)
nsubj(permit, it)
advmod(permit, also)
root(ROOT, permit)
obj(permit, Fromm)
mark(do, to)
xcomp(permit, do)
det(thing, some)
amod(thing, dubious)
obj(do, thing)
case(finding, with)
amod(finding, empirical)
nmod(thing, finding)
punct(permit, .)
mark(use, when)
nsubj:pass(use, alienation)
aux:pass(use, be)
advcl(do, use)
case(category, as)
det(category, a)
amod(category, objective)
cc(diagnostic, and)
conj(objective, diagnostic)
obl(use, category)
punct(become, ,)
case(example, for)
obl(become, example)
punct(become, ,)
nsubj(become, it)
conj(permit, become)
xcomp(become, clear)
mark(have, that)
nsubj(have, Fromm)
aux(have, would)
ccomp(clear, have)
mark(say, to)
xcomp(have, say)
mark(go, that)
nsubj(go, awareness)
case(alienation, of)
nmod(awareness, alienation)
ccomp(say, go)
advmod(go, far)
mark(conquer, toward)
advcl(go, conquer)
obj(conquer, it)
punct(permit, . )
punct(say, ()
nsubj(say, he)
punct(say, ,)
case(effect, in)
obl(say, effect)
punct(say, ,)
aux(say, do)
root(ROOT, say)
obj(say, this)
case(discussion, in)
nmod:poss(discussion, he)
obl(say, discussion)
case(happiness, of)
det(happiness, the)
compound(happiness, pseudo)
punct(happiness, -)
nmod(discussion, happiness)
case(automaton, of)
det(automaton, the)
nmod(happiness, automaton)
amod(happiness, conformist)
punct(say, .)
punct(say, ))
advcl(follow, Starting)
case(this, from)
obl(Starting, this)
punct(accept, ,)
cc(accept, and)
conj(Starting, accept)
nmod:poss(estimate, he)
obj(accept, estimate)
case(iniquity, of)
det(iniquity, the)
nmod(estimate, iniquity)
case(society, of)
amod(society, modern)
nmod(iniquity, society)
punct(follow, ,)
nsubj(follow, it)
aux(follow, would)
root(ROOT, follow)
mark(that, that)
det(evidence, the)
advmod(disturbing, really)
amod(evidence, disturbing)
nsubj(that, evidence)
case(alienation, of)
nmod(evidence, alienation)
aux(that, would)
cop(that, be)
ccomp(follow, that)
case(survey, of)
det(survey, a)
compound(satisfaction, work)
punct(satisfaction, -)
compound(survey, satisfaction)
nmod(that, survey)
nsubj(report, which)
acl:relcl(survey, report)
xcomp(report, widespread)
punct(state, ,)
conj(report, state)
compound(satisfaction, worker)
obj(state, satisfaction)
punct(widespread, ,)
cc(widespread, rather)
fixed(rather, than)
conj(satisfaction, widespread)
punct(state, ,)
conj(report, state)
compound(dissatisfaction, worker)
obj(state, dissatisfaction)
punct(follow, .)
det(point, the)
nsubj(be, point)
root(ROOT, be)
mark(rest, that)
case(system, in)
det(system, a)
obl(use, system)
case(Fromm, such)
fixed(such, as)
nmod(system, Fromm)
case(Fromm, 's)
nsubj(recognize, which)
acl:relcl(system, recognize)
amod(motivation, unconscious)
obj(recognize, motivation)
punct(rest, ,)
cc(rest, and)
nsubj(rest, which)
conj(recognize, rest)
case(absolute, on)
amod(absolute, certain)
amod(absolute, ethical)
obl(rest, absolute)
punct(use, ,)
amod(data, empirical)
nsubj:pass(use, data)
aux(use, can)
aux:pass(use, be)
ccomp(be, use)
mark(support, to)
xcomp(use, support)
det(proposition, whatever)
obj(support, proposition)
det(writer, the)
nsubj(urging, writer)
aux(urging, be)
acl:relcl(proposition, urging)
case(moment, at)
det(moment, the)
obl(urging, moment)
punct(be, .)
advmod(rest, thus)
punct(rest, ,)
case(example, in)
det(example, the)
obl(rest, example)
acl(example, cite)
case(Fromm, above)
obl(cite, Fromm)
parataxis(be, rest)
nmod:poss(case, he)
amod(case, whole)
obj(rest, case)
case(premise, on)
det(premise, the)
obl(rest, premise)
mark(deprive, that)
det(worker, the)
nsubj:pass(deprive, worker)
aux(deprive, be)
aux:pass(deprive, be)
acl(premise, deprive)
advmod(deprive, unconsciously)
punct(deprive, ,)
advmod(deprive, unknowingly)
punct(deprive, ,)
case(fulfillment, of)
obl(deprive, fulfillment)
punct(support, ,)
cc(support, and)
advmod(support, then)
conj(deprive, support)
obj(support, this)
case(data, with)
compound(data, survey)
obl(support, data)
acl(data, report)
amod(frustration, conscious)
punct(frustration, ,)
amod(frustration, experience)
obj(report, frustration)
punct(be, .)
nsubj(have, he)
root(ROOT, have)
nmod:poss(cake, he)
obj(have, cake)
cc(eat, and)
conj(have, eat)
obj(eat, it)
advmod(eat, too)
punct(have, :)
mark(say, if)
det(worker, the)
nsubj(say, worker)
advcl(show, say)
nsubj(dissatisfied, they)
cop(dissatisfied, be)
ccomp(say, dissatisfied)
punct(show, ,)
nsubj(show, this)
conj(have, show)
amod(alienation, conscious)
obj(show, alienation)
punct(show, ;)
punct(show, ;)
mark(say, if)
nsubj(say, they)
advcl(show, say)
nsubj(satisfied, they)
cop(satisfied, be)
ccomp(say, satisfied)
punct(show, ,)
nsubj(show, this)
parataxis(have, show)
amod(alienation, unconscious)
obj(show, alienation)
punct(have, .)
det(sort, this)
nsubj(troublesome, sort)
case(manipulation, of)
nmod(sort, manipulation)
cop(troublesome, be)
advmod(troublesome, especially)
root(ROOT, troublesome)
case(work, in)
nmod:poss(work, Fromm)
case(Fromm, 's)
obl(troublesome, work)
mark(increase, because)
punct(troublesome, ,)
mark(derive, although)
nmod:poss(system, he)
nsubj:pass(derive, system)
aux:pass(derive, be)
advcl(assert, derive)
advmod(conviction, largely)
case(conviction, from)
amod(conviction, certain)
amod(conviction, philosophic)
obl(derive, conviction)
punct(assert, ,)
nsubj(assert, he)
parataxis(troublesome, assert)
mark(base, that)
nsubj:pass(base, it)
aux:pass(base, be)
ccomp(assert, base)
case(finding, on)
amod(finding, empirical)
obl(base, finding)
acl(finding, draw)
cc:preconj(draw, both)
case(science, from)
amod(science, social)
obl(draw, science)
cc(room, and)
case(room, from)
nmod:poss(room, he)
amod(room, own)
compound(room, consulting)
conj(science, room)
punct(science, .)
mark(shed, while)
det(label, the)
punct(label, ``)
amod(psychoanalytic, empirical)
amod(label, psychoanalytic)
punct(label, '')
nsubj(increase, label)
obj(claim, which)
nsubj(claim, Fromm)
acl:relcl(label, claim)
ccomp(claim, shed)
det(light, no)
obj(shed, light)
case(validity, on)
det(validity, the)
nmod(light, validity)
case(philosophy, of)
nmod:poss(philosophy, he)
amod(philosophy, underlying)
nmod(validity, philosophy)
punct(increase, ,)
nsubj(increase, it)
aux(increase, do)
parataxis(troublesome, increase)
det(marketability, the)
obj(increase, marketability)
case(product, of)
nmod:poss(product, he)
nmod(marketability, product)
punct(troublesome, .)
det(example, the)
amod(example, final)
nsubj(come, example)
case(failure, of)
det(failure, the)
nmod(example, failure)
mark(use, to)
acl(failure, use)
amod(evidence, available)
obj(use, evidence)
punct(example, ,)
case(evidence, through)
obl(use, evidence)
case(kind, of)
det(kind, a)
amod(kind, different)
nmod(evidence, kind)
case(that, from)
nmod(kind, that)
nsubj:pass(consider, which)
aux(consider, have)
advmod(far, so)
advmod(consider, far)
aux:pass(consider, be)
acl:relcl(kind, consider)
punct(come, ,)
root(ROOT, come)
case(treatment, from)
nmod:poss(treatment, Fromm)
case(Fromm, 's)
obl(come, treatment)
case(writer, of)
det(writer, some)
amod(writer, other)
nmod(treatment, writer)
nsubj(deal, who)
aux(deal, have)
acl:relcl(writer, deal)
case(theme, with)
det(theme, the)
amod(theme, same)
obl(deal, theme)
punct(come, .)
case(chapter, in)
det(chapter, a)
amod(chapter, brief)
root(ROOT, chapter)
acl(chapter, deal)
case(various, with)
punct(various, ``)
obl(deal, various)
amod(diagnose, other)
nsubj(quote, diagnose)
punct(diagnose, '')
punct(quote, ,)
nsubj(quote, he)
root(ROOT, quote)
amod(passage, isolate)
obj(quote, passage)
case(writer, from)
det(writer, some)
nmod(passage, writer)
nmod:poss(view, whose)
nsubj(seem, view)
acl:relcl(writer, seem)
mark(corroborate, to)
xcomp(seem, corroborate)
nmod:poss(own, he)
obj(corroborate, own)
punct(find, ,)
cc(find, and)
conj(quote, find)
obj(find, it)
punct(remarkable, ``)
advmod(remarkable, most)
xcomp(find, remarkable)
mark(hold, that)
det(view, a)
amod(view, critical)
nsubj:pass(hold, view)
case(society, of)
amod(century, twentieth)
punct(century, -)
compound(society, century)
nmod(view, society)
aux:pass(hold, be)
advmod(hold, already)
ccomp(remarkable, hold)
case(number, by)
det(number, a)
obl(hold, number)
case(thinker, of)
nmod(number, thinker)
acl(thinker, live)
case(nineteenth, in)
det(nineteenth, the)
obl(live, nineteenth)
punct(quote, .)
punct(quote, '')
nsubj(find, he)
root(ROOT, find)
expl(find, it)
advmod(find, equally)
punct(remarkable, ``)
xcomp(find, remarkable)
mark(have, that)
nmod:poss(diagnosis, they)
amod(diagnosis, critical)
nsubj(have, diagnosis)
cc(prognosis, and)
conj(diagnosis, prognosis)
aux(have, should)
ccomp(remarkable, have)
advmod(much, so)
advmod(have, much)
case(common, in)
obl(have, common)
case(themselves, among)
obl(common, themselves)
cc(critic, and)
case(critic, with)
det(critic, the)
conj(common, critic)
case(century, of)
det(century, the)
amod(century, twentieth)
nmod(critic, century)
punct(critic, '')
punct(be, .)
expl(be, there)
parataxis(find, be)
nsubj(be, nothing)
amod(nothing, remarkable)
case(this, about)
obl(remarkable, this)
case(all, at)
obl(remarkable, all)
punct(find, .)
expl(matter, it)
cop(matter, be)
advmod(matter, largely)
det(matter, a)
root(ROOT, matter)
mark(find, of)
acl(matter, find)
obj(find, passage)
nsubj(suit, that)
acl:relcl(passage, suit)
nmod:poss(purpose, one)
case(one, 's)
obj(suit, purpose)
punct(matter, .)
expl(be, there)
root(ROOT, be)
det(difference, a)
nsubj(be, difference)
case(evidence, between)
nmod(difference, evidence)
cc(illustration, and)
conj(evidence, illustration)
punct(fit, ,)
cc(fit, and)
nmod:poss(citation, Fromm)
case(Fromm, 's)
nsubj(fit, citation)
case(diagnostician, of)
det(diagnostician, the)
amod(diagnostician, other)
nmod(citation, diagnostician)
conj(be, fit)
det(category, the)
amod(category, latter)
obj(fit, category)
punct(be, .)
root(ROOT, Glance)
case(list, at)
det(list, the)
nmod(Glance, list)
punct(Glance, :)
appos(Glance, Burckhardt)
punct(tolstoy, ,)
conj(Burckhardt, tolstoy)
punct(Proudhon, ,)
conj(Burckhardt, Proudhon)
punct(Thoreau, ,)
conj(Burckhardt, Thoreau)
punct(London, ,)
conj(Burckhardt, London)
punct(Marx, ,)
conj(Burckhardt, Marx)
punct(Tawney, ,)
conj(Burckhardt, Tawney)
punct(Mayo, ,)
conj(Burckhardt, Mayo)
punct(Durkheim, ,)
conj(Burckhardt, Durkheim)
punct(Tannenbaum, ,)
conj(Burckhardt, Tannenbaum)
punct(Mumford, ,)
conj(Burckhardt, Mumford)
punct(A., ,)
conj(Burckhardt, A.)
flat(A., R.)
conj(Burckhardt, heron)
punct(Huxley, ,)
conj(Burckhardt, Huxley)
punct(Schweitzer, ,)
conj(Burckhardt, Schweitzer)
punct(Einstein, ,)
cc(Einstein, and)
conj(Burckhardt, Einstein)
punct(Glance, .)
nsubj(collection, this)
cop(collection, be)
det(collection, a)
advmod(motley, delightfully)
amod(collection, motley)
root(ROOT, collection)
punct(collection, .)
nsubj(make, one)
aux(make, can)
root(ROOT, make)
obj(make, they)
xcomp(make, say)
det(thing, the)
amod(thing, same)
obj(say, thing)
advmod(listen, only)
mark(listen, by)
advmod(listen, not)
advcl(say, listen)
case(they, to)
obl(listen, they)
advmod(carefully, very)
advmod(listen, carefully)
cc(hear, and)
conj(listen, hear)
advmod(what, only)
obj(hear, what)
nsubj(want, one)
acl:relcl(what, want)
mark(hear, to)
xcomp(want, hear)
punct(make, .)
det(method, the)
nsubj(achieve, method)
case(selection, of)
nmod(method, selection)
nsubj(use, Fromm)
acl:relcl(selection, use)
root(ROOT, achieve)
advmod(that, exactly)
obj(achieve, that)
punct(achieve, . )
advmod(interesting, furthermore)
punct(interesting, ,)
det(list, the)
nsubj(interesting, list)
cop(interesting, be)
root(ROOT, interesting)
case(omission, for)
nmod:poss(omission, its)
obl(interesting, omission)
punct(interesting, .)
nsubj(omit, it)
root(ROOT, omit)
punct(omit, ,)
case(example, for)
obl(omit, example)
punct(line, ,)
advmod(line, practically)
det(line, the)
amod(line, whole)
ccomp(omit, line)
case(century, of)
amod(century, great)
amod(century, nineteenth)
nmod(line, century)
amod(critic, english)
amod(critic, social)
nmod(line, critic)
punct(critic, ,)
advmod(writer, nearly)
det:predet(writer, all)
det(writer, the)
amod(writer, great)
conj(line, writer)
nmod:poss(position, whose)
amod(position, basic)
nsubj(religious, position)
cop(religious, be)
acl:relcl(writer, religious)
punct(those, ,)
cc(those, and)
det:predet(those, all)
conj(writer, those)
nsubj(accuracy, who)
cop(accuracy, be)
case(accuracy, with)
amod(accuracy, more)
cc(less, or)
conj(more, less)
acl:relcl(those, accuracy)
acl(accuracy, call)
obj(call, existentialist)
punct(omit, .)
advmod(exclude, of)
fixed(of, course)
punct(exclude, ,)
det(list, the)
nsubj(exclude, list)
advmod(exclude, also)
root(ROOT, exclude)
det(writer, all)
obj(exclude, writer)
nsubj(optimistic, who)
cop(optimistic, be)
advmod(optimistic, fairly)
punct(optimistic, ``)
acl:relcl(writer, optimistic)
punct(optimistic, '')
case(situation, about)
det(situation, the)
amod(situation, modern)
obl(optimistic, situation)
punct(exclude, ;)
punct(exclude, ;)
nsubj(spokesmen, these)
punct(spokesmen, ,)
advmod(definition, almost)
case(definition, by)
obl(spokesmen, definition)
punct(spokesmen, ,)
cop(spokesmen, be)
parataxis(exclude, spokesmen)
case(ideology, for)
det(ideology, a)
amod(ideology, alienate)
nmod(spokesmen, ideology)
punct(exclude, .)
expl(hard, it)
cop(hard, be)
advmod(hard, not)
root(ROOT, hard)
mark(find, to)
csubj(hard, find)
det(concurrence, that)
obj(find, concurrence)
case(opinion, of)
nmod(concurrence, opinion)
obj(find, which)
nsubj(find, Fromm)
acl:relcl(opinion, find)
advmod(remarkable, so)
xcomp(find, remarkable)
mark(ignore, when)
nsubj(ignore, you)
advcl(remarkable, ignore)
obj(ignore, all)
nsubj(hold, who)
acl:relcl(all, hold)
det(opinion, a)
amod(opinion, different)
obj(hold, opinion)
punct(hard, . )
advcl(meet, turn)
case(problem, from)
det(problem, these)
obl(turn, problem)
case(use, of)
det(use, the)
nmod(problem, use)
case(evidence, of)
nmod(use, evidence)
punct(meet, ,)
nsubj(meet, one)
root(ROOT, meet)
det(type, another)
obj(meet, type)
case(difficulty, of)
nmod(type, difficulty)
case(analysis, in)
nmod:poss(analysis, Fromm)
case(Fromm, 's)
nmod(difficulty, analysis)
punct(analysis, ,)
nsubj(use, which)
cop(use, be)
nmod:poss(use, he)
amod(use, loose)
cc(ambiguous, and)
conj(loose, ambiguous)
acl:relcl(analysis, use)
case(term, of)
amod(term, certain)
amod(term, important)
nmod(use, term)
punct(meet, .)
nummod(instance, one)
amod(instance, such)
nsubj:pass(present, instance)
aux(present, have)
advmod(present, already)
aux:pass(present, be)
root(ROOT, present)
punct(use, :)
nmod:poss(use, he)
parataxis(present, use)
case(alienation, of)
nmod(use, alienation)
punct(present, .)
det(one, the)
amod(one, only)
amod(one, other)
nsubj(use, one)
nsubj(mention, I)
aux(mention, shall)
acl:relcl(one, mention)
advmod(mention, here)
cop(use, be)
nmod:poss(use, he)
root(ROOT, use)
case(capitalism, of)
det(capitalism, the)
compound(capitalism, term)
nmod(use, capitalism)
punct(use, .)
case(Fromm, for)
nmod(use, Fromm)
punct(Fromm, ,)
nsubj(enemy, capitalism)
cop(enemy, be)
det(enemy, the)
acl:relcl(Fromm, enemy)
punct(enemy, ,)
det(root, the)
appos(enemy, root)
case(evil, of)
det(evil, all)
nmod(root, evil)
punct(use, .)
expl(useful, it)
cop(useful, be)
advmod(useful, of)
fixed(of, course)
root(ROOT, useful)
mark(have, to)
csubj(useful, have)
det(cause, a)
amod(cause, sovereign)
obj(have, cause)
case(criticism, on)
nmod:poss(criticism, one)
case(one, 's)
amod(criticism, social)
nmod(cause, criticism)
punct(have, ,)
mark(make, for)
nsubj(make, it)
advcl(have, make)
obj(make, diagnosis)
cc(prescription, and)
conj(diagnosis, prescription)
advmod(easier, much)
xcomp(make, easier)
mark(be, than)
nsubj(be, they)
aux(be, might)
advmod(be, otherwise)
advcl(easier, be)
punct(useful, .)
mark(distinguishes, if)
nummod(characteristic, one)
nsubj(distinguishes, characteristic)
advcl(consistency, distinguishes)
obj(distinguishes, Boris)
flat(Boris, Godunov)
punct(consistency, ,)
nsubj(consistency, it)
cop(consistency, be)
det(consistency, the)
root(ROOT, consistency)
case(which, with)
obl(come, which)
det(person, every)
nsubj(come, person)
case(stage, on)
det(stage, the)
nmod(person, stage)
punct(person, --)
case(chorus, include)
det(chorus, the)
nmod(person, chorus)
punct(come, --)
parataxis(consistency, come)
xcomp(come, alive)
case(music, in)
det(music, the)
obl(alive, music)
punct(come, .)
advmod(come, much)
case(result, of)
det(result, this)
amod(quality, lifelike)
compound(result, quality)
obl(much, result)
case(care, from)
nmod:poss(care, Mussorgsky)
case(Mussorgsky, 's)
nmod(result, care)
mark(base, in)
acl(care, base)
nmod:poss(line, he)
amod(line, vocal)
obj(base, line)
case(inflection, on)
amod(speech, natural)
compound(inflection, speech)
obl(base, inflection)
punct(consistency, .)
mark(follow, in)
det(he, this)
nsubj(follow, he)
root(ROOT, follow)
det(path, a)
obj(follow, path)
nsubj(lead, that)
acl:relcl(path, lead)
advmod(lead, back)
case(source, to)
det(source, the)
amod(source, very)
obl(back, source)
case(opera, of)
nmod(source, opera)
punct(follow, ;)
punct(follow, ;)
amod(composer, such)
nsubj(develop, composer)
case(Monteverdi, as)
nmod(composer, Monteverdi)
punct(Lully, ,)
conj(Monteverdi, Lully)
cc(Purcell, and)
conj(Monteverdi, Purcell)
punct(goal, ,)
case(goal, with)
det(goal, the)
amod(goal, same)
obl(develop, goal)
case(mind, in)
nmod(goal, mind)
punct(develop, ,)
aux(develop, have)
parataxis(follow, develop)
obj(develop, style)
case(recitative, of)
nmod(style, recitative)
advmod(attune, sensitively)
acl(style, attune)
case(language, to)
nmod:poss(language, they)
amod(language, own)
obl(attune, language)
punct(attune, .)
case(experimentation, through)
amod(experimentation, long)
obl(develop, experimentation)
case(song, in)
nmod:poss(song, he)
nmod(experimentation, song)
punct(develop, ,)
nsubj(develop, Mussorgsky)
parataxis(follow, develop)
det(recitative, a)
amod(recitative, russian)
obj(develop, recitative)
advmod(different, as)
amod(recitative, different)
case(other, from)
obl(different, other)
case(language, as)
det(language, the)
obl(different, language)
nmod:npmod(language, itself)
punct(develop, .)
advcl(let, give)
obj(give, most)
case(continuity, of)
nmod:poss(continuity, he)
amod(continuity, musical)
nmod(most, continuity)
case(orchestra, to)
det(orchestra, the)
nmod(continuity, orchestra)
punct(let, ,)
nsubj(let, he)
root(ROOT, let)
det(speech, the)
obj(let, speech)
xcomp(let, fall)
case(place, into)
obl(fall, place)
mark(coincidence, as)
mark(coincidence, if)
case(coincidence, by)
advcl(control, coincidence)
punct(control, ,)
cc(control, but)
conj(fall, control)
det(pace, the)
obj(control, pace)
cc(emphasis, and)
conj(pace, emphasis)
case(word, of)
det(word, the)
nmod(pace, word)
punct(let, .)
det(moment, the)
nsubj(come, moment)
case(melody, of)
amod(melody, sung)
nmod(moment, melody)
punct(come, ,)
case(sense, in)
det(sense, the)
amod(sense, usual)
obl(come, sense)
punct(come, ,)
root(ROOT, come)
advmod(often, most)
advmod(come, often)
mark(suppose, when)
det(character, the)
nsubj(suppose, character)
aux(suppose, be)
advmod(suppose, actually)
advcl(come, suppose)
mark(sing, to)
aux(sing, be)
xcomp(suppose, sing)
punct(sing, ,)
case(song, as)
fixed(as, in)
amod(song, folk)
obl(sing, song)
cc(chant, and)
amod(chant, liturgical)
conj(song, chant)
punct(come, .)
advmod(reserve, otherwise)
nsubj(reserve, Mussorgsky)
root(ROOT, reserve)
nmod:poss(melody, he)
amod(melody, vocal)
obj(reserve, melody)
case(expression, for)
amod(expression, prolong)
obl(reserve, expression)
case(emotion, of)
nmod(expression, emotion)
punct(expression, --)
nmod:poss(monologue, Boris)
case(Boris, 's)
amod(monologue, first)
appos(expression, monologue)
punct(reserve, ,)
case(example, for)
obl(reserve, example)
punct(reserve, .)
advmod(then, even)
advmod(suggest, then)
punct(suggest, ,)
det(flexibility, the)
nsubj(suggest, flexibility)
case(phrase, of)
det(phrase, the)
nmod(flexibility, phrase)
root(ROOT, suggest)
mark(come, that)
det(word, the)
nsubj(come, word)
ccomp(suggest, come)
advmod(come, first)
case(importance, in)
obl(come, importance)
punct(suggest, .)
advmod(examine, aside)
case(Boris, from)
obl(aside, Boris)
nmod:npmod(Boris, himself)
punct(examine, ,)
nummod(need, one)
obj(examine, need)
cc(examine, but)
root(ROOT, examine)
det(role, the)
amod(role, secondary)
obj(examine, role)
mark(place, to)
acl(role, place)
obj(place, Mussorgsky)
case(master, among)
det(master, the)
obl(place, master)
case(portraiture, of)
amod(portraiture, musical)
nmod(master, portraiture)
punct(examine, .)
advmod(those, even)
nsubj(personality, those)
nsubj(appear, who)
acl:relcl(those, appear)
case(scene, in)
advmod(scene, only)
nummod(scene, one)
cc(two, or)
conj(one, two)
obl(appear, scene)
cop(personality, be)
amod(personality, full)
root(ROOT, personality)
punct(personality, ,)
acl(personality, define)
case(precision, with)
amod(precision, economical)
obl(define, precision)
punct(personality, .)
root(ROOT, consider)
det(monk, the)
nummod(monk, four)
obj(consider, monk)
nsubj(figure, who)
acl:relcl(monk, figure)
advmod(figure, prominently)
case(action, in)
det(action, the)
obl(figure, action)
punct(consider, :)
appos(monk, Pimen)
punct(varlaam, ,)
conj(Pimen, varlaam)
punct(Missail, ,)
conj(Pimen, Missail)
cc(Rangoni, and)
det(Rangoni, the)
compound(Rangoni, Jesuit)
conj(Pimen, Rangoni)
punct(consider, .)
case(circumstance, under)
det(circumstance, no)
obl(mistake, circumstance)
aux(mistake, could)
nsubj(mistake, we)
root(ROOT, mistake)
obj(mistake, one)
case(other, for)
det(other, the)
nmod(one, other)
punct(mistake, ;)
punct(mistake, ;)
det(setting, each)
amod(setting, musical)
nsubj(have, setting)
parataxis(mistake, have)
det(touch, a)
amod(touch, individual)
obj(have, touch)
punct(mistake, .)
nsubj(man, Pimen)
cop(man, be)
det(man, a)
amod(man, old)
root(ROOT, man)
punct(weak, ,)
amod(man, weak)
case(body, in)
obl(weak, body)
punct(man, --)
nmod:poss(voice, he)
nsubj(rise, voice)
advmod(rise, rarely)
parataxis(man, rise)
case(forte, to)
det(forte, a)
amod(forte, full)
obl(rise, forte)
punct(forte, --)
cc(firm, but)
conj(forte, firm)
cc(clear, and)
conj(firm, clear)
case(mind, of)
obl(clear, mind)
punct(man, .)
nmod:poss(calmness, he)
nsubj(offer, calmness)
root(ROOT, offer)
obj(offer, contrast)
case(excitement, to)
nmod:poss(excitement, Grigori)
case(Grigori, 's)
amod(excitement, youthful)
nmod(contrast, excitement)
punct(offer, . )
det(theme, a)
amod(theme, quiet)
cc(sturdy, but)
conj(quiet, sturdy)
nsubj(appear, theme)
punct(theme, ,)
advmod(folklike, somewhat)
amod(theme, folklike)
case(character, in)
obl(folklike, character)
punct(appear, ,)
root(ROOT, appear)
mark(speak, whenever)
det(monk, the)
amod(monk, old)
nsubj(speak, monk)
advcl(appear, speak)
case(history, of)
det(history, the)
obl(speak, history)
nsubj(recording, he)
aux(recording, be)
acl:relcl(history, recording)
cc(life, or)
case(life, of)
nmod:poss(life, he)
amod(life, own)
amod(life, past)
conj(recording, life)
punct(appear, : )
det(theme, this)
nsubj(come, theme)
root(ROOT, come)
mark(represent, to)
xcomp(come, represent)
det(world, the)
amod(world, outer)
obj(represent, world)
punct(world, ,)
det(realm, the)
appos(world, realm)
case(battle, of)
nmod(realm, battle)
cc(banquet, and)
conj(battle, banquet)
punct(realm, --)
acl(realm, see)
case(distance, from)
det(distance, a)
obl(see, distance)
punct(distinct, ,)
advmod(distinct, quite)
conj(see, distinct)
case(life, from)
det(life, the)
amod(life, quieter)
amod(life, spiritual)
obl(distinct, life)
case(monastery, in)
det(monastery, the)
nmod(life, monastery)
punct(come, .)
nsubj(change, it)
root(ROOT, change)
cc(develop, and)
conj(change, develop)
case(text, accord)
fixed(accord, to)
det(text, the)
obl(change, text)
punct(change, ;)
punct(change, ;)
nsubj(introduce, it)
parataxis(change, introduce)
obj(introduce, Pimen)
mark(come, when)
nsubj(come, he)
advcl(introduce, come)
case(Boris, before)
obl(come, Boris)
case(act, in)
det(act, the)
amod(act, last)
obl(come, act)
punct(change, .)
mark(identify, once)
nsubj:pass(identify, he)
aux(identify, have)
aux:pass(identify, be)
advcl(use, identify)
punct(use, ,)
advmod(use, however)
punct(use, ,)
det(melody, a)
amod(melody, new)
nsubj:pass(use, melody)
aux:pass(use, be)
root(ROOT, use)
mark(accompany, to)
xcomp(use, accompany)
nmod:poss(narrative, he)
obj(accompany, narrative)
punct(narrative, ,)
det(motif, a)
amod(motif, bleak)
appos(narrative, motif)
case(octave, with)
amod(octave, barren)
nmod(motif, octave)
acl(motif, create)
det(effect, a)
advmod(ancient, rather)
amod(effect, ancient)
obj(create, effect)
punct(use, :)
det(storyteller, a)
amod(storyteller, imaginative)
nsubj(take, storyteller)
punct(storyteller, ,)
nsubj(take, Pimen)
root(ROOT, take)
case(character, on)
det(character, the)
obl(take, character)
nsubj(describe, he)
acl:relcl(character, describe)
punct(take, ,)
mark(experience, as)
mark(experience, if)
nsubj(experience, he)
aux(experience, be)
advcl(take, experience)
det(shepherd, the)
amod(shepherd, old)
nmod:poss(blindness, shepherd)
case(shepherd, 's)
obj(experience, blindness)
cc(cure, and)
amod(cure, miraculous)
conj(blindness, cure)
punct(take, .)
root(ROOT, here)
det(composer, the)
nsubj(use, composer)
acl:relcl(here, use)
det(device, a)
amod(device, favorite)
obj(use, device)
case(he, of)
nmod(device, he)
punct(device, ,)
det(intensification, the)
conj(device, intensification)
case(mood, of)
det(mood, the)
nmod(intensification, mood)
case(relationship, through)
amod(relationship, key)
nmod(mood, relationship)
punct(use, .)
det(minor, the)
amod(minor, original)
compound(minor, D)
nsubj(seem, minor)
root(ROOT, seem)
mark(symbolize, to)
xcomp(seem, symbolize)
obj(symbolize, blindness)
punct(inescapable, ,)
amod(blindness, inescapable)
case(spite, in)
obl(symbolize, spite)
case(attempt, of)
det(attempt, all)
nmod(spite, attempt)
mark(move, to)
acl(attempt, move)
advmod(move, away)
case(it, from)
obl(move, it)
punct(seem, .)
mark(address, as)
det(child, the)
nsubj(address, child)
advcl(begin, address)
det(shepherd, the)
obj(address, shepherd)
case(dream, in)
det(dream, a)
obl(address, dream)
punct(light, ,)
nsubj(begin, light)
punct(light, --)
case(form, in)
det(form, the)
obl(begin, form)
case(mode, of)
det(mode, the)
amod(mode, major)
nmod(form, mode)
punct(begin, --)
root(ROOT, begin)
mark(appear, to)
xcomp(begin, appear)
punct(begin, ,)
cc(moment, and)
case(moment, at)
det(moment, the)
obl(begin, moment)
case(miracle, of)
det(miracle, the)
nmod(moment, miracle)
nsubj(hear, we)
acl:relcl(miracle, hear)
det(clear, a)
obj(hear, clear)
cc(d, and)
compound(d, shine)
conj(clear, d)
amod(d, major)
punct(appear, .)
nsubj(appear, varlaam)
cc(Missail, and)
conj(varlaam, Missail)
advmod(appear, always)
conj(begin, appear)
advmod(appear, together)
cc(sing, and)
advmod(sing, often)
conj(appear, sing)
advmod(sing, together)
punct(appear, ,)
case(idiom, in)
det(idiom, a)
amod(idiom, straightforward)
punct(idiom, ,)
advmod(vigorous, rhythmically)
amod(idiom, vigorous)
obl(sing, idiom)
nsubj(distinguishes, that)
acl:relcl(idiom, distinguishes)
obj(distinguishes, they)
case(Pimen, from)
det(Pimen, the)
advmod(educated, more)
amod(Pimen, subtle)
cc(educated, and)
advmod(educated, well)
punct(educated, -)
amod(Pimen, educated)
obl(distinguishes, Pimen)
punct(Pimen, .)
nmod:poss(song, they)
compound(song, beg)
nsubj(melody, song)
aux(melody, might)
advmod(melody, easily)
cop(melody, be)
det(melody, a)
amod(melody, folk)
conj(distinguishes, melody)
punct(melody, : )
det(same, the)
nsubj:pass(say, same)
aux(say, could)
aux:pass(say, be)
root(ROOT, say)
case(song, for)
det(song, the)
obl(say, song)
case(which, to)
obl(make, which)
nsubj(make, they)
acl:relcl(song, make)
nmod:poss(entrance, they)
obj(make, entrance)
case(scene, in)
det(scene, the)
amod(scene, final)
obl(make, scene)
punct(say, .)
advmod(humble, apparently)
nmod:poss(origin, they)
nsubj(humble, origin)
cop(humble, be)
root(ROOT, humble)
punct(humble, ,)
nmod:poss(approach, they)
conj(humble, approach)
mark(life, to)
acl(approach, life)
obj(life, direct)
cc(unsophisticated, and)
conj(direct, unsophisticated)
punct(humble, .)
det(learning, whatever)
nsubj(disturb, learning)
nsubj(have, they)
aux(have, may)
aux(have, have)
acl:relcl(learning, have)
case(order, in)
nmod:poss(order, they)
obl(have, order)
aux(disturb, do)
advmod(disturb, not)
root(ROOT, disturb)
obj(disturb, they)
advmod(disturb, now)
punct(disturb, .)
nsubj(man, Missail)
cop(man, be)
det(man, the)
amod(man, straight)
root(ROOT, man)
punct(man, ,)
advmod(talkative, not)
advmod(talkative, very)
conj(man, talkative)
punct(mannered, ,)
amod(mannered, mild)
punct(mannered, -)
conj(man, mannered)
mark(speak, when)
nsubj(speak, he)
aux(speak, do)
advcl(mannered, speak)
punct(man, .)
nsubj(loud, varlaam)
cop(loud, be)
root(ROOT, loud)
punct(rowdy, ,)
conj(loud, rowdy)
punct(uninhibited, ,)
conj(loud, uninhibited)
case(pleasure, in)
nmod:poss(pleasure, he)
obl(uninhibited, pleasure)
cc(impatient, and)
conj(loud, impatient)
case(anyone, with)
obl(impatient, anyone)
nsubj(same, who)
cop(same, be)
advmod(same, not)
det(same, the)
acl:relcl(anyone, same)
punct(loud, . )
det(figure, a)
amod(figure, rough)
compound(figure, ostinato)
nsubj(characterize, figure)
punct(figure, ,)
parataxis(figure, hear)
advmod(hear, first)
case(introduction, in)
det(introduction, the)
obl(hear, introduction)
case(scene, to)
det(scene, the)
compound(scene, inn)
nmod(introduction, scene)
punct(characterize, ,)
root(ROOT, characterize)
obj(characterize, he)
advmod(characterize, amusingly)
cc(reappear, and)
conj(characterize, reappear)
advmod(come, whenever)
nsubj(come, he)
advcl(reappear, come)
case(action, into)
det(action, the)
obl(come, action)
punct(Song, :)
det(Song, the)
appos(action, Song)
case(Kazan, of)
nmod(Song, Kazan)
punct(Song, ,)
case(which, in)
obl(become, which)
det(figure, this)
nsubj(become, figure)
acl:relcl(Song, become)
det(accompaniment, a)
amod(sounding, wild)
punct(sounding, -)
compound(accompaniment, sounding)
xcomp(become, accompaniment)
punct(fill, ,)
parataxis(accompaniment, fill)
case(picture, in)
det(picture, the)
obl(fill, picture)
case(spirit, of)
amod(spirit, undisciplined)
amod(spirit, high)
nmod(picture, spirit)
punct(characterize, .)
det(phrase, the)
nsubj(irregular, phrase)
cop(irregular, be)
root(ROOT, irregular)
punct(have, ,)
cc(have, and)
det(change, the)
amod(change, abrupt)
amod(change, key)
nsubj(have, change)
conj(irregular, have)
det(forcefulness, a)
amod(forcefulness, primitive)
obj(have, forcefulness)
punct(irregular, . )
punct(imagine, ()
nsubj(imagine, we)
aux(imagine, can)
root(ROOT, imagine)
advmod(startle, how)
nsubj(startle, they)
ccomp(imagine, startle)
obj(startle, audience)
case(1870', of)
det(1870', the)
nmod(audience, 1870')
punct(imagine, .)
punct(imagine, ))
nmod:poss(music, varlaam)
case(varlaam, 's)
nsubj(begin, music)
root(ROOT, begin)
mark(ramble, to)
xcomp(begin, ramble)
mark(feel, as)
nsubj(feel, he)
advcl(ramble, feel)
det(effect, the)
obj(feel, effect)
case(wine, of)
det(wine, the)
nmod(effect, wine)
punct(pull, ,)
cc(pull, but)
nsubj(pull, he)
conj(begin, pull)
obj(pull, himself)
advmod(pull, together)
mark(arise, when)
det(need, the)
nsubj(arise, need)
advcl(pull, arise)
punct(begin, .)
det(monk, both)
nsubj(respond, monk)
root(ROOT, respond)
case(challenge, to)
det(guard, the)
nmod:poss(challenge, guard)
case(guard, 's)
obl(respond, challenge)
case(phrase, with)
det(phrase, a)
amod(phrase, few)
nmod(challenge, phrase)
case(song, of)
nmod:poss(song, they)
compound(song, beg)
nmod(phrase, song)
punct(respond, ;)
punct(respond, ;)
det(touch, a)
amod(touch, clever)
amod(touch, naturalistic)
nsubj(reading, touch)
cop(reading, be)
nmod:poss(reading, varlaam)
case(varlaam, 's)
amod(reading, labor)
parataxis(respond, reading)
case(warrant, of)
det(warrant, the)
nmod(reading, warrant)
punct(respond, .)
mark(come, as)
det(knack, the)
nsubj(come, knack)
advmod(come, gradually)
advcl(become, come)
advmod(come, back)
case(he, to)
obl(back, he)
punct(steadier, ,)
nmod:poss(rhythm, he)
nsubj(become, rhythm)
root(ROOT, become)
xcomp(become, steadier)
punct(steadier, ,)
case(monotony, with)
det(monotony, the)
amod(monotony, rigid)
obl(steadier, monotony)
case(reader, of)
det(reader, a)
amod(reader, unskilled)
nmod(monotony, reader)
punct(steadier, .)
case(time, for)
det(time, the)
amod(time, only)
obl(set, time)
case(opera, in)
det(opera, the)
nmod(time, opera)
punct(set, ,)
nsubj:pass(set, word)
cop(set, be)
advmod(set, not)
root(ROOT, set)
case(inflection, accord)
fixed(accord, to)
nmod:poss(inflection, they)
amod(inflection, natural)
obl(set, inflection)
punct(set, ;)
punct(set, ;)
mark(do, to)
advcl(spoiled, do)
advmod(spoiled, so)
aux(spoiled, would)
aux(spoiled, have)
conj(set, spoiled)
det(point, the)
amod(point, dramatic)
obj(spoiled, point)
case(scene, of)
det(scene, the)
nmod(point, scene)
punct(set, . )
advmod(remove, musically)
cc(dramatically, and)
conj(musically, dramatically)
punct(remove, ,)
nsubj:pass(remove, Rangoni)
aux:pass(remove, be)
advmod(far, as)
advmod(remove, far)
root(ROOT, remove)
case(monk, from)
det(monk, the)
amod(monk, conventional)
obl(remove, monk)
case(varlaam, as)
nmod(monk, varlaam)
punct(remove, .)
nmod:poss(music, he)
nsubj(show, music)
root(ROOT, show)
det(sensuality, a)
obj(show, sensuality)
acl(sensuality, couple)
case(quality, with)
det(quality, a)
amod(quality, eerie)
obl(couple, quality)
nsubj(suggest, that)
acl:relcl(quality, suggest)
advmod(suggest, somehow)
det(kinship, a)
compound(kinship, blood)
punct(kinship, -)
obj(suggest, kinship)
case(Dappertutto, with)
nmod(kinship, Dappertutto)
case(Hoffman, in)
nmod:poss(Hoffman, offenbach)
case(offenbach, 's)
nmod(kinship, Hoffman)
punct(show, .)
nmod:poss(speech, he)
nsubj(show, speech)
root(ROOT, show)
obj(show, none)
case(accent, of)
det(accent, the)
amod(accent, native)
nmod(none, accent)
case(character, of)
det(character, the)
amod(character, russian)
nmod(accent, character)
punct(show, ;)
punct(show, ;)
case(spite, in)
obl(sound, spite)
case(name, of)
det(name, the)
amod(name, italian)
nmod(spite, name)
punct(sound, ,)
nsubj(sound, he)
parataxis(show, sound)
obj(sound, french)
punct(show, .)
nmod:poss(personality, he)
nsubj(appear, personality)
root(ROOT, appear)
advmod(strike, more)
xcomp(appear, strike)
case(contrast, by)
obl(strike, contrast)
case(Marina, with)
nmod(contrast, Marina)
punct(Marina, ,)
nsubj(be, who)
acl:relcl(Marina, be)
punct(purposely, --)
advmod(purposely, perhaps)
advmod(be, purposely)
punct(purposely, --)
cc(characterize, rather)
fixed(rather, superficially)
conj(purposely, characterize)
punct(appear, .)
nmod:poss(entrance, Rangoni)
case(Rangoni, 's)
amod(entrance, first)
nsubj(shock, entrance)
cop(shock, be)
det(shock, a)
amod(shock, musical)
root(ROOT, shock)
punct(shock, ,)
det(fifth, a)
amod(fifth, sudden)
amod(fifth, open)
appos(shock, fifth)
case(key, in)
det(key, a)
nmod(fifth, key)
advmod(unrelated, totally)
amod(shock, unrelated)
case(what, to)
obl(unrelated, what)
aux(precede, have)
acl:relcl(what, precede)
obj(precede, it)
punct(shock, .)
det(effect, the)
nsubj(be, effect)
root(ROOT, be)
mark(materialize, as)
mark(materialize, if)
nsubj(materialize, he)
aux(materialize, have)
advcl(be, materialize)
case(nowhere, out)
case(nowhere, of)
obl(materialize, nowhere)
punct(be, .)
nsubj(speak, he)
root(ROOT, speak)
advmod(speak, quietly)
punct(speak, ,)
advcl(speak, conceal)
nmod:poss(authority, he)
obj(conceal, authority)
case(humility, beneath)
det(humility, a)
amod(humility, smooth)
obl(conceal, humility)
punct(conceal, ,)
advmod(harmony, just)
case(harmony, as)
det(harmony, the)
compound(harmony, shifting)
obl(speak, harmony)
nsubj(accompany, that)
acl:relcl(harmony, accompany)
obj(accompany, he)
det(he, all)
cc(hide, but)
conj(accompany, hide)
det(point, the)
compound(point, firm)
compound(point, pedal)
obj(hide, point)
case(they, beneath)
obl(hide, they)
punct(speak, .)
nsubj(address, he)
root(ROOT, address)
obj(address, Marina)
case(deference, with)
amod(deference, great)
obl(address, deference)
punct(address, ,)
advcl(address, call)
nmod:poss(princess, she)
punct(princess, ``)
obj(call, princess)
punct(princess, '')
case(first, at)
obl(call, first)
punct(address, ;)
punct(address, ;)
nsubj(be, it)
parataxis(address, be)
advmod(be, only)
mark(involve, after)
nsubj(involve, he)
aux(involve, have)
advcl(be, involve)
nmod:poss(emotion, she)
obj(involve, emotion)
case(scheme, in)
nmod:poss(scheme, he)
obl(involve, scheme)
mark(use, that)
nsubj(use, he)
acl(scheme, use)
nmod:poss(name, she)
amod(name, give)
obj(use, name)
punct(use, ,)
advcl(use, place)
obj(place, himself)
case(implication, by)
obl(place, implication)
case(position, in)
det(position, the)
obl(place, position)
case(father, of)
det(father, a)
amod(father, solicitous)
nmod(position, father)
punct(address, .)
advmod(parallel, curiously)
punct(parallel, ,)
det(scene, this)
nsubj(parallel, scene)
cop(parallel, be)
det(parallel, a)
amod(parallel, close)
root(ROOT, parallel)
case(one, to)
nmod(parallel, one)
obj(write, that)
nsubj(write, Verdi)
aux(write, be)
acl:relcl(one, write)
case(time, at)
det(time, the)
amod(time, same)
obl(write, time)
punct(scene, ,)
det(scene, the)
appos(parallel, scene)
case(Amonasro, between)
nmod(scene, Amonasro)
cc(Aida, and)
conj(Amonasro, Aida)
punct(parallel, .)
nsubj(have, Rangoni)
cc(Amonasro, and)
conj(Rangoni, Amonasro)
root(ROOT, have)
det(purpose, the)
amod(purpose, same)
obj(have, purpose)
punct(have, --)
advcl(have, force)
det(girl, the)
obj(force, girl)
mark(charm, to)
xcomp(force, charm)
det(man, the)
obj(charm, man)
nsubj(love, she)
acl:relcl(man, love)
mark(serve, into)
advcl(love, serve)
nmod:poss(country, she)
nmod:poss(cause, country)
case(country, 's)
obj(serve, cause)
punct(have, --)
cc(same, and)
nmod:poss(tactic, they)
nsubj(same, tactic)
cop(same, be)
advmod(same, much)
det(same, the)
conj(have, same)
punct(have, .)
nsubj(begin, Rangoni)
root(ROOT, begin)
mark(describe, by)
advcl(begin, describe)
det(state, the)
amod(state, sad)
obj(describe, state)
case(church, of)
det(church, the)
nmod(state, church)
punct(begin, ;)
punct(begin, ;)
nsubj(bring, this)
parataxis(begin, bring)
det(reaction, a)
obj(bring, reaction)
case(distress, of)
nmod(reaction, distress)
case(Marina, from)
nmod(distress, Marina)
punct(begin, .)
det(music, the)
nsubj(become, music)
root(ROOT, become)
xcomp(become, ethereal)
mark(call, as)
nsubj(call, he)
advcl(ethereal, call)
compound:prt(call, up)
det(vision, a)
obj(call, vision)
case(sainthood, of)
nmod:poss(sainthood, she)
amod(sainthood, own)
nmod(vision, sainthood)
punct(ethereal, :)
nsubj(be, it)
parataxis(become, be)
nsubj(tell, she)
punct(tell, ,)
nsubj(tell, he)
parataxis(ethereal, tell)
obj(tell, she)
punct(tell, ,)
nsubj(bring, who)
aux(bring, can)
ccomp(tell, bring)
det(truth, the)
obj(bring, truth)
case(Russia, to)
obl(bring, Russia)
cc(convert, and)
conj(bring, convert)
det(heretics, the)
obj(convert, heretics)
punct(ethereal, .)
mark(trance, as)
mark(trance, if)
case(trance, in)
det(trance, a)
advcl(repeat, trance)
punct(repeat, ,)
nsubj(repeat, she)
root(ROOT, repeat)
nmod:poss(word, he)
obj(repeat, word)
punct(repeat, --)
advmod(realize, then)
parataxis(repeat, realize)
punct(realize, ,)
case(shock, with)
det(shock, a)
obl(realize, shock)
punct(shock, ,)
nmod:poss(audacity, she)
amod(audacity, own)
conj(shock, audacity)
punct(realize, .)
nsubj(assignment, this)
cop(assignment, be)
det(assignment, no)
root(ROOT, assignment)
case(girl, for)
det(girl, a)
amod(girl, frivolous)
nmod(assignment, girl)
punct(assignment, ,)
nsubj(assure, she)
parataxis(assignment, assure)
obj(assure, he)
punct(assignment, .)
advmod(come, now)
nsubj(come, Rangoni)
parataxis(assignment, come)
case(point, to)
det(point, the)
obl(come, point)
punct(hear, ,)
cc(hear, and)
nsubj(hear, we)
conj(assignment, hear)
punct(hear, ,)
case(time, for)
det(time, the)
amod(time, first)
obl(scale, time)
punct(scale, ,)
det(scale, a)
amod(scale, long)
punct(scale, ,)
amod(scale, downward)
amod(scale, chromatic)
ccomp(hear, scale)
nsubj(become, that)
aux(become, will)
acl:relcl(scale, become)
det(motif, the)
amod(motif, characteristic)
xcomp(become, motif)
case(power, of)
nmod:poss(power, he)
amod(power, sinister)
nmod(motif, power)
punct(assignment, .)
expl(phrase, it)
cop(phrase, be)
det(phrase, a)
root(ROOT, phrase)
mark(arrest, as)
acl(phrase, arrest)
case(gesture, as)
det(magician, a)
nmod:poss(gesture, magician)
case(magician, 's)
obl(arrest, gesture)
punct(arrest, ,)
case(turn, with)
det(turn, a)
amod(turn, piquant)
obl(arrest, turn)
case(harmony, of)
nmod(turn, harmony)
acl(turn, give)
det(effect, a)
obj(give, effect)
case(strangeness, of)
nmod(effect, strangeness)
punct(phrase, .)
det(theme, another)
nsubj(appear, theme)
punct(theme, ,)
advmod(chromatic, sinuously)
amod(theme, chromatic)
punct(appear, ,)
root(ROOT, appear)
mark(direct, as)
nsubj(direct, he)
advcl(appear, direct)
obj(direct, she)
mark(gain, to)
xcomp(direct, gain)
obj(gain, power)
case(Grigori, over)
obl(gain, Grigori)
case(means, by)
det(means, any)
obl(gain, means)
punct(gain, ,)
advmod(cost, even)
case(cost, at)
det(cost, the)
obl(gain, cost)
case(honor, of)
nmod:poss(honor, she)
nmod(cost, honor)
punct(appear, .)
advcl(sound, come)
case(priest, from)
det(priest, a)
obl(come, priest)
punct(sound, ,)
det(music, the)
nsubj(sound, music)
root(ROOT, sound)
advmod(odd, as)
xcomp(sound, odd)
case(advice, as)
det(advice, the)
obl(odd, advice)
punct(sound, : )
compound(rebel, Marina)
root(ROOT, rebel)
case(suggestion, at)
det(suggestion, this)
nmod(rebel, suggestion)
punct(rebel, .)
nmod:poss(pride, she)
nsubj(much, pride)
cop(much, be)
advmod(much, as)
root(ROOT, much)
case(stake, at)
obl(much, stake)
case(virtue, as)
nmod:poss(virtue, she)
obl(much, virtue)
punct(much, ;)
punct(much, ;)
nsubj(beauty, she)
cop(beauty, be)
det(beauty, the)
amod(beauty, unattainable)
parataxis(much, beauty)
punct(beauty, ,)
det(princess, the)
nsubj(beauty, princess)
nsubj(turn, who)
acl:relcl(princess, turn)
compound:prt(turn, away)
obj(turn, suitor)
case(dozen, by)
det(dozen, the)
obl(turn, dozen)
punct(much, .)
advmod(denounce, indignantly)
nsubj(denounce, she)
root(ROOT, denounce)
obj(denounce, Rangoni)
case(thought, for)
nmod:poss(thought, he)
amod(thought, evil)
obl(denounce, thought)
cc(order, and)
conj(denounce, order)
obj(order, he)
mark(leave, to)
advcl(order, leave)
obj(leave, she)
punct(denounce, .)
advmod(pull, at)
mark(pull, once)
det(Jesuit, the)
nsubj(pull, Jesuit)
root(ROOT, pull)
compound:prt(pull, out)
det:predet(stop, all)
det(stop, the)
obj(pull, stop)
punct(pull, .)
case(music, to)
obl(describe, music)
case(darkness, of)
det(darkness, a)
amod(darkness, menace)
nmod(music, darkness)
punct(describe, ,)
nsubj(describe, he)
root(ROOT, describe)
det(power, the)
obj(describe, power)
case(Satan, of)
nmod(power, Satan)
acl(power, gain)
obj(gain, control)
case(girl, of)
det(girl, the)
nmod(control, girl)
punct(describe, ,)
conj(gain, poisoning)
nmod:poss(soul, she)
obj(poisoning, soul)
case(pride, with)
obl(poisoning, pride)
cc(destroy, and)
conj(poisoning, destroy)
nmod:poss(beauty, she)
obj(destroy, beauty)
punct(describe, .)
det(threat, the)
amod(threat, combine)
nsubj(much, threat)
case(fire, of)
compound(fire, hell)
punct(fire, -)
nmod(threat, fire)
cc(ugliness, and)
conj(fire, ugliness)
cop(much, be)
advmod(much, too)
root(ROOT, much)
case(she, for)
obl(much, she)
punct(fall, ,)
cc(fall, and)
nsubj(fall, she)
conj(much, fall)
xcomp(fall, terrify)
case(foot, at)
nmod:poss(foot, he)
obl(terrify, foot)
punct(much, .)
case(change, with)
det(change, another)
amod(change, sudden)
obl(calm, change)
case(mood, of)
nmod(change, mood)
punct(calm, ,)
nsubj(calm, he)
cop(calm, be)
advmod(calm, again)
root(ROOT, calm)
cc(protective, and)
conj(calm, protective)
punct(calm, ,)
advcl(calm, exhort)
obj(exhort, she)
mark(trust, to)
xcomp(exhort, trust)
cc(obey, and)
conj(trust, obey)
obj(obey, he)
case(spokesman, as)
nmod:poss(spokesman, God)
case(God, 's)
obl(trust, spokesman)
punct(calm, --)
cc(descend, and)
det(scale, the)
amod(scale, chromatic)
nsubj(descend, scale)
conj(calm, descend)
case(contradiction, in)
amod(contradiction, ominous)
obl(descend, contradiction)
punct(descend, .)
det(source, whatever)
det(source, the)
nsubj(descend, source)
case(power, of)
nmod:poss(power, Rangoni)
case(Rangoni, 's)
nmod(source, power)
punct(source, ,)
nsubj(captive, Marina)
cop(captive, be)
nmod:poss(captive, he)
acl:relcl(source, captive)
advmod(captive, now)
punct(calm, ;)
punct(calm, ;)
nsubj:pass(remind, we)
aux:pass(remind, be)
parataxis(calm, remind)
case(this, of)
obl(remind, this)
case(end, at)
det(end, the)
obl(remind, end)
case(scene, of)
det(scene, the)
amod(scene, next)
nmod(end, scene)
punct(remind, ,)
mark(cut, when)
nmod:poss(theme, he)
nsubj(cut, theme)
advcl(remind, cut)
case(warmth, through)
det(warmth, the)
obl(cut, warmth)
case(duet, of)
det(duet, the)
compound(duet, love)
nmod(warmth, duet)
punct(throw, ,)
advmod(throw, again)
advcl(cut, throw)
det(chill, a)
obj(throw, chill)
case(atmosphere, over)
det(atmosphere, the)
obl(throw, atmosphere)
punct(calm, .)
det(feature, the)
advmod(unusual, most)
amod(feature, unusual)
nsubj(use, feature)
case(Boris, of)
nmod(feature, Boris)
punct(use, ,)
advmod(use, however)
punct(use, ,)
cop(use, be)
det(use, the)
root(ROOT, use)
case(character, of)
det(character, the)
amod(character, greatest)
nmod(use, character)
case(all, of)
nmod(character, all)
punct(character, ,)
det(chorus, the)
appos(character, chorus)
punct(use, .)
nsubj(protagonist, this)
cop(protagonist, be)
det(protagonist, the)
amod(protagonist, real)
root(ROOT, protagonist)
case(drama, of)
det(drama, the)
nmod(protagonist, drama)
punct(protagonist, ;)
punct(protagonist, ;)
det(conflict, the)
nsubj(Boris, conflict)
cop(Boris, be)
advmod(Boris, not)
parataxis(protagonist, Boris)
case(Grigori, versus)
nmod(Boris, Grigori)
cc(Shuiski, or)
conj(Grigori, Shuiski)
cc(ghost, or)
advmod(ghost, even)
det(ghost, the)
conj(Boris, ghost)
case(child, of)
det(child, the)
amod(child, murder)
nmod(ghost, child)
punct(make, ,)
cc(make, but)
nsubj(make, Boris)
case(people, versus)
det(people, the)
amod(people, russian)
nmod(Boris, people)
punct(make, .)
nsubj(make, Mussorgsky)
conj(protagonist, make)
obj(make, this)
advmod(clear, quite)
xcomp(make, clear)
case(extent, by)
det(extent, the)
obl(clear, extent)
case(scene, to)
det(scene, which)
amod(scene, choral)
nmod(extent, scene)
acl:relcl(extent, propel)
det(action, the)
obj(propel, action)
punct(protagonist, .)
nmod:poss(entrance, Boris)
case(Boris, 's)
amod(entrance, first)
nsubj(seem, entrance)
root(ROOT, seem)
advmod(footnote, almost)
det(footnote, a)
obj(seem, footnote)
case(splendor, to)
det(splendor, the)
nmod(footnote, splendor)
case(scene, of)
det(scene, the)
compound(scene, coronation)
nmod(splendor, scene)
punct(footnote, ,)
case(confusion, with)
nmod:poss(confusion, its)
amod(confusion, dazzling)
obl(seem, confusion)
case(tonality, of)
nmod(confusion, tonality)
punct(seem, .)
nsubj(have, we)
root(ROOT, have)
det(glimpse, a)
amod(glimpse, brief)
obj(have, glimpse)
case(personality, of)
det(Tsar, the)
nmod:poss(personality, Tsar)
case(Tsar, 's)
amod(personality, public)
nmod(glimpse, personality)
punct(personality, ,)
det(Boris, the)
punct(Boris, ``)
amod(Boris, official)
appos(personality, Boris)
punct(Boris, '')
punct(excitement, ,)
cc(excitement, but)
nmod:poss(focus, we)
amod(focus, real)
nsubj(excitement, focus)
cop(excitement, be)
case(excitement, on)
det(excitement, the)
conj(have, excitement)
case(crowd, of)
det(crowd, the)
nmod(excitement, crowd)
punct(excitement, --)
det(contrast, a)
amod(contrast, significant)
appos(excitement, contrast)
case(acclamation, with)
nmod:poss(acclamation, its)
amod(acclamation, halfheart)
nmod(contrast, acclamation)
case(scene, in)
det(scene, the)
amod(scene, opening)
nmod(acclamation, scene)
punct(resentment, ,)
nsubj(resentment, it)
cop(resentment, be)
amod(resentment, bitter)
parataxis(contrast, resentment)
cc(fury, and)
conj(resentment, fury)
case(act, in)
det(act, the)
amod(act, final)
obl(resentment, act)
punct(have, .)
nummod(reason, one)
nsubj(variety, reason)
case(vitality, for)
det(vitality, the)
amod(vitality, unique)
nmod(reason, vitality)
case(chorus, of)
det(chorus, the)
nmod(vitality, chorus)
cop(variety, be)
nmod:poss(variety, its)
amod(variety, great)
root(ROOT, variety)
case(expression, in)
nmod(variety, expression)
punct(variety, .)
nsubj(speak, it)
advmod(speak, rarely)
root(ROOT, speak)
case(unit, as)
det(unit, a)
obl(speak, unit)
punct(speak, .)
advmod(appearance, even)
case(appearance, in)
nmod:poss(appearance, its)
advmod(conventional, most)
amod(appearance, conventional)
obl(speak, appearance)
punct(song, ,)
det(guest, the)
nmod:poss(song, guest)
case(guest, 's)
appos(appearance, song)
case(praise, of)
nmod(song, praise)
case(Marina, to)
nmod(praise, Marina)
punct(be, ,)
expl(be, there)
parataxis(speak, be)
det(dissenter, a)
amod(dissenter, few)
amod(dissenter, female)
nsubj(be, dissenter)
acl(dissenter, criticize)
det(princess, the)
obj(criticize, princess)
case(coldness, for)
nmod:poss(coldness, she)
obl(criticize, coldness)
punct(speak, .)
case(passage, in)
amod(passage, many)
obl(become, passage)
punct(become, --)
case(example, for)
obl(become, example)
punct(become, ,)
det(council, the)
nsubj(become, council)
case(boyar, of)
nmod(council, boyar)
punct(council, --)
det(section, each)
nsubj(become, section)
case(chorus, of)
det(chorus, the)
nmod(section, chorus)
root(ROOT, become)
det(group, a)
compound(group, character)
xcomp(become, group)
case(opinion, with)
det(opinion, a)
amod(opinion, particular)
nmod(group, opinion)
punct(group, .)
amod(argument, hot)
nsubj(arise, argument)
root(ROOT, arise)
case(tenor, between)
obl(arise, tenor)
cc(bass, and)
conj(tenor, bass)
punct(tenor, ,)
nsubj(sing, who)
aux(sing, will)
acl:relcl(tenor, sing)
case(harmony, in)
obl(sing, harmony)
advmod(sing, only)
mark(agree, when)
nsubj(agree, they)
advcl(sing, agree)
case(idea, on)
det(idea, a)
obl(agree, idea)
punct(arise, .)
det(scene, the)
amod(scene, opening)
nsubj(show, scene)
root(ROOT, show)
det(method, this)
obj(show, method)
case(individual, at)
nmod:poss(individual, its)
advmod(individual, most)
obl(show, individual)
punct(show, .)
nsubj(paint, Mussorgsky)
ccomp(show, paint)
det(picture, a)
xcomp(paint, tell)
obj(tell, picture)
case(people, of)
det(people, the)
amod(people, common)
nmod(picture, people)
punct(people, ,)
appos(people, those)
nsubj(suffer, who)
aux(suffer, must)
acl:relcl(those, suffer)
det(effect, the)
obj(suffer, effect)
case(struggle, of)
nmod:poss(ruler, they)
nmod:poss(struggle, ruler)
case(ruler, 's)
nmod(effect, struggle)
case(power, for)
nmod(struggle, power)
case(understanding, without)
obl(suffer, understanding)
det(cause, the)
nmod:npmod(understanding, cause)
punct(show, .)
nsubj:pass(hold, they)
aux:pass(hold, be)
root(ROOT, hold)
case(control, in)
obl(hold, control)
case(force, by)
obl(hold, force)
punct(barely, ,)
cc(barely, but)
conj(hold, barely)
punct(hold, .)
nsubj(kneel, they)
aux(kneel, will)
root(ROOT, kneel)
cc(plead, and)
conj(kneel, plead)
case(leadership, for)
nmod:poss(leadership, Boris)
case(Boris, 's)
obl(plead, leadership)
case(song, in)
det(song, a)
advmod(intense, strangely)
amod(song, intense)
nmod(leadership, song)
punct(kneel, ,)
nmod:poss(phrase, its)
parataxis(kneel, phrase)
advmod(break, irregularly)
acl(phrase, break)
mark(gasping, as)
mark(gasping, if)
advcl(break, gasping)
case(breath, for)
obl(gasping, breath)
punct(mock, ,)
cc(mock, but)
mark(move, when)
det(police, the)
nsubj(move, police)
case(cudgel, with)
nmod:poss(cudgel, they)
nmod(police, cudgel)
advcl(mock, move)
advmod(move, away)
punct(mock, ,)
nsubj(mock, they)
conj(kneel, mock)
cc(grumble, and)
conj(mock, grumble)
cc(fight, and)
conj(mock, fight)
case(themselves, among)
obl(fight, themselves)
punct(kneel, .)
expl(be, there)
root(ROOT, be)
det(change, a)
amod(change, quick)
nsubj(be, change)
case(song, from)
det(song, the)
amod(song, plaintive)
nmod(change, song)
case(tone, to)
det(tone, a)
amod(tone, conversational)
nmod(song, tone)
punct(be, .)
punct(be, ``)
discourse(ask, hey)
punct(Mityukh, ,)
nsubj(ask, Mityukh)
punct(Mityukh, '')
punct(ask, ,)
root(ROOT, ask)
nummod(group, one)
obj(ask, group)
punct(ask, ,)
punct(shout, ``)
obl(shout, what)
aux(shout, be)
nsubj(shout, we)
appos(group, shout)
case(what, about)
punct(shout, '')
punct(ask, ?)
punct(ask, ?)
cc(reply, and)
nsubj(reply, Mityukh)
punct(Mityukh, ,)
advmod(leader, apparently)
det(leader, the)
amod(leader, intellectual)
appos(Mityukh, leader)
case(crowd, of)
det(crowd, the)
nmod(leader, crowd)
punct(reply, ,)
root(ROOT, reply)
mark(have, that)
nsubj(have, he)
ccomp(reply, have)
det(notion, no)
obj(have, notion)
punct(reply, .)
det(joke, the)
nsubj(grow, joke)
cc(argument, and)
conj(joke, argument)
root(ROOT, grow)
xcomp(grow, louder)
mark(return, until)
det(police, the)
nsubj(return, police)
advcl(grow, return)
punct(grow, ;)
punct(grow, ;)
advmod(strike, then)
det(people, the)
nsubj(strike, people)
parataxis(grow, strike)
compound:prt(strike, up)
nmod:poss(song, they)
obj(strike, song)
case(fervor, with)
advmod(more, even)
amod(fervor, more)
obl(strike, fervor)
case(before, than)
obl(end, before)
punct(end, ,)
advcl(strike, end)
obj(end, it)
case(wail, with)
det(wail, a)
obl(end, wail)
case(despair, of)
nmod(wail, despair)
punct(use, .)
nsubj(use, Mussorgsky)
advmod(use, frequently)
parataxis(strike, use)
amod(music, liturgical)
obj(use, music)
case(force, with)
amod(force, considerable)
amod(force, dramatic)
obl(use, force)
punct(grow, .)
case(cell, in)
nmod:poss(cell, Pimen)
case(Pimen, 's)
obl(hear, cell)
det(prayer, the)
amod(prayer, soft)
nsubj(hear, prayer)
case(monk, of)
det(monk, the)
nmod(prayer, monk)
punct(hear, ,)
root(ROOT, hear)
case(offstage, from)
obl(hear, offstage)
punct(help, ,)
advmod(only, not)
advmod(help, only)
conj(hear, help)
mark(set, to)
xcomp(help, set)
det(scene, the)
obj(set, scene)
cc(emphasize, but)
conj(set, emphasize)
det(contrast, the)
obj(emphasize, contrast)
case(thought, between)
amod(Grigori, young)
nmod:poss(thought, Grigori)
case(Grigori, 's)
nmod(contrast, thought)
cc(situation, and)
nmod:poss(situation, he)
conj(thought, situation)
punct(hear, .)
nsubj(strike, this)
aux(strike, be)
advmod(strike, especially)
root(ROOT, strike)
case(exit, between)
nmod:poss(exit, Pimen)
case(Pimen, 's)
amod(exit, quiet)
obl(strike, exit)
cc(outburst, and)
nmod:poss(outburst, Grigori)
case(Grigori, 's)
amod(outburst, vehement)
conj(exit, outburst)
case(Boris, against)
nmod(outburst, Boris)
punct(strike, .)
advmod(feel, again)
punct(file, ,)
mark(feel, as)
nsubj(feel, Boris)
advcl(file, feel)
obj(feel, himself)
xcomp(feel, near)
obj(near, death)
punct(file, ,)
det(file, a)
compound(file, procession)
root(ROOT, file)
case(hall, into)
det(hall, the)
nmod(file, hall)
acl(file, sing)
det(hymn, a)
obj(sing, hymn)
punct(harmony, ,)
nmod:poss(harmony, its)
amod(harmony, modal)
appos(file, harmony)
acl(harmony, add)
det(touch, a)
advmod(touch, churchly)
obj(add, touch)
case(atmosphere, to)
det(atmosphere, the)
amod(atmosphere, grim)
nmod(touch, atmosphere)
punct(file, :)
det(word, the)
nsubj:pass(calculate, word)
aux:pass(calculate, be)
advmod(calculate, hardly)
root(ROOT, calculate)
mark(put, to)
advcl(calculate, put)
det(Tsar, the)
nmod:poss(mind, Tsar)
case(Tsar, 's)
obj(put, mind)
case(ease, at)
obl(put, ease)
punct(calculate, .)
nsubj(echo, they)
root(ROOT, echo)
det(word, the)
obj(echo, word)
case(which, with)
obl(describe, which)
nsubj(describe, he)
aux(describe, have)
acl:relcl(word, describe)
nmod:poss(vision, he)
amod(vision, own)
obj(describe, vision)
case(child, of)
det(child, the)
compound(child, die)
nmod(vision, child)
nsubj(tremble, who)
punct(tremble, ``)
acl:relcl(child, tremble)
cc(beg, and)
conj(tremble, beg)
case(mercy, for)
obl(tremble, mercy)
punct(echo, --)
cc(be, and)
expl(be, there)
conj(tremble, be)
det(mercy, no)
nsubj(be, mercy)
punct(mercy, '')
punct(mercy, .)
det(living, the)
appos(mercy, living)
cc(accuse, as)
fixed(as, well)
fixed(as, as)
det(dead, the)
nsubj(accuse, dead)
advmod(accuse, now)
conj(be, accuse)
obj(accuse, he)
punct(accuse, ;)
punct(echo, ;)
det(reminder, this)
amod(reminder, final)
nsubj(one, reminder)
case(guilt, of)
nmod:poss(guilt, he)
nmod(reminder, guilt)
cop(one, be)
det(one, the)
amod(one, fatal)
parataxis(echo, one)
punct(echo, .)
nsubj(restoration, one)
case(asset, of)
det(asset, the)
amod(asset, outstanding)
nmod(one, asset)
case(production, of)
det(production, the)
amod(production, present)
nmod(asset, production)
cop(restoration, be)
det(restoration, the)
root(ROOT, restoration)
case(scene, of)
det(St., the)
nmod:poss(scene, St.)
flat(St., Basil)
case(St., 's)
nmod(restoration, scene)
punct(scene, ,)
advmod(omit, usually)
acl(scene, omit)
case(performance, from)
obl(omit, performance)
cc(include, and)
advmod(include, rarely)
conj(omit, include)
case(score, in)
det(score, a)
amod(score, publish)
obl(include, score)
punct(include, .)
case(brief, though)
obl(have, brief)
punct(have, ,)
nsubj(have, it)
parataxis(restoration, have)
det(edge, a)
amod(edge, sharp)
amod(edge, dramatic)
obj(have, edge)
cc(poignancy, and)
amod(poignancy, great)
conj(edge, poignancy)
punct(restoration, .)
case(addition, in)
obl(link, addition)
punct(link, ,)
nsubj(link, it)
cop(link, be)
det(link, a)
amod(link, important)
root(ROOT, link)
case(plot, in)
det(plot, the)
nmod(link, plot)
punct(link, ,)
acl(link, give)
iobj(give, we)
det(glimpse, a)
amod(glimpse, revealing)
obj(give, glimpse)
case(attitude, of)
det(people, the)
nmod:poss(attitude, people)
case(people, 's)
nmod(glimpse, attitude)
case(Boris, toward)
nmod(attitude, Boris)
cc(Dimitri, and)
det(Dimitri, the)
amod(Dimitri, false)
conj(Boris, Dimitri)
punct(link, .)
det(mayhem, the)
nsubj(sequel, mayhem)
case(forest, in)
det(forest, the)
nmod(mayhem, forest)
case(Kromy, of)
nmod(forest, Kromy)
cop(sequel, be)
det(sequel, a)
amod(sequel, natural)
root(ROOT, sequel)
punct(sequel, .)
det(St., the)
nmod:poss(scene, St.)
flat(St., Basil)
case(St., 's)
nsubj(open, scene)
root(ROOT, open)
case(group, with)
amod(group, little)
obl(open, group)
case(beggar, of)
nmod(group, beggar)
acl(beggar, milling)
case(square, around)
det(square, the)
obl(milling, square)
punct(open, ,)
det(police, the)
advmod(present, ever)
amod(police, present)
nsubj(keep, police)
advcl(open, keep)
obj(keep, they)
case(scrutiny, under)
obl(keep, scrutiny)
punct(open, .)
case(orchestra, in)
det(orchestra, the)
obl(hear, orchestra)
nsubj(hear, we)
root(ROOT, hear)
advmod(hear, first)
det(figure, a)
amod(figure, hush)
punct(figure, ,)
amod(figure, hesitant)
compound(figure, pizzicato)
obj(hear, figure)
punct(figure, ,)
advmod(motif, then)
det(motif, the)
amod(motif, insistent)
punct(police, ``)
compound(motif, police)
punct(police, '')
obj(hear, motif)
mark(appear, as)
nsubj(appear, it)
advcl(hear, appear)
case(scene, in)
det(scene, the)
amod(scene, open)
obl(appear, scene)
punct(hear, .)
det(service, the)
nsubj(over, service)
cop(over, be)
root(ROOT, over)
punct(come, ,)
cc(come, and)
det(number, a)
nsubj(come, number)
case(people, of)
nmod(number, people)
conj(over, come)
case(church, from)
det(church, the)
obl(come, church)
case(Mityukh, with)
nmod:poss(Mityukh, they)
compound(Mityukh, spokesman)
obl(come, Mityukh)
case(lead, in)
det(lead, the)
obl(come, lead)
punct(over, .)
nsubj(bring, they)
root(ROOT, bring)
det(news, the)
obj(bring, news)
mark(excommunicated, that)
det(Pretender, the)
nsubj:pass(excommunicated, Pretender)
aux(excommunicated, have)
aux:pass(excommunicated, be)
acl(news, excommunicated)
punct(bring, ;)
punct(bring, ;)
nsubj:pass(meet, this)
aux:pass(meet, be)
parataxis(bring, meet)
case(scorn, with)
obl(meet, scorn)
case(hearer, by)
det(hearer, the)
nmod(scorn, hearer)
punct(hearer, ,)
nsubj(claim, who)
acl:relcl(hearer, claim)
mark(lie, that)
nsubj(lie, Mityukh)
aux(lie, be)
ccomp(claim, lie)
cc(drunk, or)
conj(lie, drunk)
punct(bring, . )
punct(contrast, ()
nsubj(contrast, Mussorgsky)
advmod(contrast, cleverly)
root(ROOT, contrast)
det(group, the)
nummod(group, two)
obj(contrast, group)
case(accompaniment, by)
nmod:poss(accompaniment, they)
amod(accompaniment, orchestral)
nmod(group, accompaniment)
punct(chord, ,)
amod(chord, solemn)
conj(accompaniment, chord)
cc(mock, or)
amod(staccato, mock)
conj(accompaniment, staccato)
punct(contrast, .)
punct(contrast, ))
expl(be, there)
root(ROOT, be)
advmod(be, still)
amod(news, more)
nsubj(be, news)
punct(news, ,)
nsubj(announce, Mityukh)
acl:relcl(news, announce)
punct(be, :)
nsubj(pray, they)
aux(pray, have)
ccomp(announce, pray)
case(soul, for)
det(soul, the)
obl(pray, soul)
case(Tsarevich, of)
det(Tsarevich, the)
nmod(soul, Tsarevich)
punct(be, .)
advmod(far, so)
advmod(assume, far)
det(remark, these)
nsubj(assume, remark)
punct(assume, ,)
case(criticism, like)
amod(criticism, most)
nmod(remark, criticism)
case(Hardy, of)
nmod(criticism, Hardy)
punct(assume, ,)
aux(assume, have)
advmod(assume, tacitly)
root(ROOT, assume)
mark(piece, that)
nmod:poss(poetry, he)
nsubj(piece, poetry)
cop(piece, be)
advmod(piece, all)
case(piece, of)
det(piece, a)
ccomp(assume, piece)
punct(piece, ,)
nummod(mass, one)
amod(mass, solid)
conj(piece, mass)
case(verse, of)
nmod(mass, verse)
acl(mass, express)
det(sensibility, a)
obj(express, sensibility)
case(stage, at)
det(stage, a)
amod(stage, single)
obl(express, stage)
case(development, of)
nmod(stage, development)
punct(assume, .)
case(critic, for)
obl(have, critic)
punct(have, ,)
nsubj(have, Hardy)
aux(have, have)
root(ROOT, have)
det(period, no)
amod(period, poetic)
obj(have, period)
punct(have, --)
nsubj(speak, one)
aux(speak, do)
advmod(speak, not)
parataxis(have, speak)
case(Hardy, of)
amod(Hardy, early)
obl(speak, Hardy)
cc(Hardy, or)
amod(Hardy, late)
conj(Hardy, Hardy)
punct(period, ,)
cc(period, or)
case(period, of)
det(period, the)
compound(period, London)
cc(Max, or)
conj(London, Max)
compound(period, gate)
conj(Hardy, period)
punct(Hardy, ,)
cc(Hardy, but)
advmod(Hardy, simply)
case(Hardy, of)
conj(period, Hardy)
punct(Hardy, ,)
case(monolith, as)
fixed(as, of)
det(monolith, a)
amod(monolith, poetic)
nmod(Hardy, monolith)
punct(have, .)
nsubj(seem, this)
root(ROOT, seem)
xcomp(seem, odd)
mark(recall, when)
nsubj(recall, one)
advcl(seem, recall)
mark(write, that)
nsubj(write, he)
ccomp(recall, write)
obj(write, poetry)
advmod(write, longer)
case(poet, than)
det(poet, any)
amod(poet, other)
amod(poet, major)
amod(poet, english)
obl(write, poet)
punct(seem, :)
punct(seem, ``)
nsubj:pass(date, Domicilium)
punct(Domicilium, '')
aux:pass(date, be)
root(ROOT, date)
punct(1857, ``)
case(1857, between)
obl(date, 1857)
cc(1860, and)
conj(1857, 1860)
punct(1857, '')
punct(date, ;)
punct(date, ;)
punct(date, ``)
advcl(date, see)
det(rise, the)
compound(rise, Moon)
obj(see, rise)
punct(rise, '')
aux:pass(date, be)
root(ROOT, date)
obl:tmod(date, August)
punct(August, ,)
nummod(August, 1927)
punct(date, .)
nsubj(expect, one)
aux(expect, might)
root(ROOT, expect)
obj(expect, that)
case(career, in)
det(career, a)
amod(career, poetic)
obl(expect, career)
case(year, of)
compound(odd, seventy)
punct(odd, -)
amod(year, odd)
nmod(career, year)
punct(occur, ,)
det(change, some)
nsubj(occur, change)
case(style, in)
nmod(change, style)
cc(method, and)
conj(style, method)
aux(occur, would)
aux(occur, have)
conj(expect, occur)
punct(occur, ,)
det(development, some)
nsubj(take, development)
conj(occur, take)
obj(take, place)
punct(expect, .)
nsubj(case, this)
cop(case, be)
advmod(case, not)
punct(case, ,)
advmod(case, however)
punct(case, ,)
det(case, the)
root(ROOT, case)
punct(term, ,)
cc(term, and)
nsubj(term, development)
cop(term, be)
det(term, a)
conj(case, term)
obj(apply, which)
nsubj(apply, we)
aux(apply, can)
acl:relcl(term, apply)
case(Hardy, to)
obl(apply, Hardy)
advmod(sense, only)
case(sense, in)
det(sense, a)
advmod(limited, very)
amod(sense, limited)
obl(apply, sense)
punct(case, .)
case(time, in)
det(time, a)
obl(stand, time)
mark(seem, when)
amod(style, poetic)
nsubj(seem, style)
punct(belief, ,)
cc(belief, and)
amod(belief, poetic)
conj(style, belief)
advmod(seem, as)
fixed(as, well)
punct(seem, ,)
advcl(stand, seem)
case(state, in)
det(state, a)
obl(seem, state)
case(flux, of)
amod(flux, continual)
nmod(state, flux)
punct(stand, ,)
nsubj(stand, Hardy)
root(ROOT, stand)
compound:prt(stand, out)
case(poet, as)
det(poet, a)
obl(stand, poet)
case(consistency, of)
advmod(perverse, almost)
amod(consistency, perverse)
nmod(poet, consistency)
punct(poet, .)
mark(struggle, though)
nsubj(struggle, he)
advcl(get, struggle)
case(philosophy, with)
obl(struggle, philosophy)
det:predet(life, all)
nmod:poss(life, he)
obl(struggle, life)
punct(get, ,)
nsubj(get, he)
advmod(get, never)
conj(stand, get)
advmod(get, much)
case(pessimism, beyond)
det(pessimism, the)
obl(get, pessimism)
case(twenty, of)
nmod:poss(twenty, he)
nmod(pessimism, twenty)
punct(get, ;)
punct(opinion, ;)
det(opinion, the)
punct(opinion, ``)
amod(opinion, sober)
appos(pessimism, opinion)
punct(opinion, '')
case(letter, of)
nmod:poss(letter, he)
nmod(opinion, letter)
case(Noyes, to)
nmod(letter, Noyes)
punct(opinion, ,)
acl(opinion, write)
mark(old, when)
nsubj(old, Hardy)
cop(old, be)
nummod(year, eighty)
obl:npmod(old, year)
advcl(write, old)
punct(be, ,)
cop(old, be)
advmod(be, essentially)
mark(entry, that)
case(entry, of)
nmod:poss(entry, he)
amod(entry, first)
punct(philosophical, ``)
amod(entry, philosophical)
punct(philosophical, '')
compound(entry, notebook)
obl(essentially, entry)
punct(entry, ,)
acl(entry, make)
mark(five, when)
nsubj(five, he)
cop(five, be)
compound(five, twenty)
punct(five, -)
advcl(make, five)
punct(be, :)
punct(be, ``)
det(world, the)
nsubj(despise, world)
aux(despise, do)
advmod(despise, not)
root(ROOT, despise)
obj(despise, we)
punct(despise, :)
nsubj(neglect, it)
advmod(neglect, only)
parataxis(despise, neglect)
obj(neglect, we)
punct(despise, '')
punct(life, ()
amod(life, early)
root(ROOT, life)
punct(life, ,)
appos(life, p.)
nummod(p., 63)
punct(life, ))
punct(life, .)
cc(difficult, and)
mark(revise, though)
case(year, in)
nmod:poss(year, he)
amod(year, later)
obl(revise, year)
nsubj(revise, he)
advcl(difficult, revise)
nmod:poss(poem, he)
obj(revise, poem)
amod(time, many)
obl:tmod(revise, time)
punct(alter, ,)
det(revision, the)
nsubj(alter, revision)
aux(alter, do)
advmod(alter, not)
parataxis(revise, alter)
det(nature, the)
amod(nature, essential)
obj(alter, nature)
case(style, of)
det(style, the)
nmod(nature, style)
obj(establish, which)
nsubj(establish, he)
aux(establish, have)
acl:relcl(style, establish)
mark(thirty, before)
nsubj(thirty, he)
cop(thirty, be)
advcl(establish, thirty)
punct(alter, ;)
punct(alter, ;)
advmod(difficult, so)
nsubj(difficult, that)
punct(difficult, ,)
mark(easy, while)
expl(easy, it)
advmod(easy, usually)
cop(easy, be)
advcl(difficult, easy)
mark(recognize, to)
csubj(easy, recognize)
det(poem, a)
obj(recognize, poem)
case(Hardy, by)
nmod(poem, Hardy)
punct(difficult, ,)
expl(difficult, it)
cop(difficult, be)
root(ROOT, difficult)
mark(date, to)
csubj(difficult, date)
obj(date, one)
punct(difficult, .)
expl(be, there)
root(ROOT, be)
advmod(sense, only)
nummod(sense, one)
nsubj(be, sense)
case(which, in)
obl(valid, which)
expl(valid, it)
cop(valid, be)
acl:relcl(sense, valid)
mark(talk, to)
csubj(valid, talk)
case(development, about)
nmod:poss(development, Hardy)
case(Hardy, 's)
obl(talk, development)
punct(be, :)
nsubj(develop, he)
aux(develop, do)
parataxis(be, develop)
case(control, toward)
det(control, a)
advmod(consistent, more)
amod(control, consistent)
cc(effective, and)
advmod(effective, more)
conj(consistent, effective)
obl(develop, control)
case(tone, of)
det(tone, that)
nmod(control, tone)
obj(recognize, which)
nsubj(recognize, we)
acl:relcl(tone, recognize)
case(he, as)
advmod(he, uniquely)
obl(recognize, he)
punct(be, .)
expl(be, there)
root(ROOT, be)
advmod(style, only)
nummod(style, one)
compound(style, Hardy)
nsubj(be, style)
punct(style, ,)
cc(style, but)
case(poem, in)
det(poem, the)
amod(poem, earlier)
obl(evident, poem)
mark(evident, that)
nsubj(evident, style)
cop(evident, be)
advmod(evident, only)
advmod(evident, intermittently)
conj(be, evident)
punct(style, ,)
cc(style, and)
mark(be, when)
nsubj(be, it)
advcl(style, be)
advmod(be, not)
punct(style, ,)
det(style, the)
nsubj(style, style)
cop(style, be)
det(style, the)
conj(evident, style)
case(poet, of)
det(poet, another)
nmod(style, poet)
punct(fashion, ,)
cc(fashion, or)
case(fashion, of)
det(fashion, the)
conj(poet, fashion)
case(time, of)
det(time, the)
nmod(fashion, time)
punct(be, .)
case(poem, in)
det(poem, the)
amod(poem, later)
obl(predominate, poem)
punct(predominate, ,)
advmod(predominate, however)
punct(predominate, ,)
det(tone, the)
amod(tone, personal)
nsubj(predominate, tone)
root(ROOT, predominate)
punct(predominate, .)
det(poem, the)
amod(poem, bad)
amod(poem, early)
nsubj(Shakespeare, poem)
cop(Shakespeare, be)
amod(Shakespeare, bad)
root(ROOT, Shakespeare)
cc(Swinburne, or)
amod(Swinburne, bad)
conj(Shakespeare, Swinburne)
punct(Shakespeare, ;)
punct(Shakespeare, ;)
det(poem, the)
amod(poem, bad)
amod(poem, late)
nsubj(Hardy, poem)
cop(Hardy, be)
amod(Hardy, bad)
parataxis(Shakespeare, Hardy)
punct(Shakespeare, .)
expl(be, there)
root(ROOT, be)
nummod(way, two)
nsubj(be, way)
mark(get, of)
acl(way, get)
case(development, at)
det(poet, a)
nmod:poss(development, poet)
case(poet, 's)
obl(get, development)
punct(be, :)
case(poem, through)
nmod:poss(poem, he)
amod(poem, date)
nmod(development, poem)
punct(revision, ,)
cc(revision, and)
case(revision, through)
det(revision, the)
conj(poem, revision)
obj(make, which)
nsubj(make, he)
acl:relcl(revision, make)
case(edition, in)
amod(edition, later)
obl(make, edition)
case(work, of)
nmod:poss(work, he)
nmod(edition, work)
punct(be, .)
advmod(quarter, about)
det(quarter, a)
nsubj(carry, quarter)
case(poem, of)
nmod:poss(poem, Hardy)
case(Hardy, 's)
nmod(quarter, poem)
parataxis(be, carry)
det(line, a)
amod(line, append)
compound(line, date)
obj(carry, line)
punct(line, ,)
advmod(year, usually)
det(year, the)
appos(line, year)
case(completion, of)
nmod(year, completion)
punct(year, ,)
cc(year, but)
advmod(year, sometimes)
amod(year, inclusive)
conj(year, year)
punct(1908, ()
punct(1908, ``)
appos(year, 1908)
case(1910, -)
nmod(1908, 1910)
punct(1908, '')
punct(1908, ))
cc(date, or)
nummod(date, two)
amod(date, separate)
conj(year, date)
mark(work, when)
nsubj(work, Hardy)
acl(date, work)
case(poem, on)
det(poem, the)
obl(work, poem)
punct(1905, ()
punct(1905, ``)
appos(poem, 1905)
cc(1926, and)
conj(1905, 1926)
punct(1905, '')
punct(1905, ))
cc(date, or)
det(date, a)
amod(date, approximate)
conj(1905, date)
punct(1905, ()
punct(be, ``)
case(War, during)
det(War, the)
root(ROOT, War)
punct(War, '')
punct(War, ))
punct(War, .)
det(date, these)
nsubj(clue, date)
cop(clue, be)
advmod(clue, virtually)
det(clue, the)
amod(clue, only)
root(ROOT, clue)
nsubj(have, we)
acl:relcl(clue, have)
case(chronology, to)
det(chronology, the)
obl(have, chronology)
case(poem, of)
det(poem, the)
nmod(chronology, poem)
punct(clue, ,)
mark(chronological, since)
det(volume, the)
amod(volume, separate)
nsubj(chronological, volume)
cop(chronological, be)
advmod(chronological, neither)
advcl(clue, chronological)
case(themselves, within)
obl(chronological, themselves)
cc(relation, nor)
case(relation, in)
conj(chronological, relation)
case(other, to)
det(other, each)
nmod(relation, other)
punct(clue, .)
case(exception, with)
det(exception, the)
obl(contain, exception)
case(Satires, of)
nmod(exception, Satires)
case(Circumstance, of)
nmod(Satires, Circumstance)
punct(contain, ,)
det(volume, each)
nsubj(contain, volume)
root(ROOT, contain)
amod(poem, date)
obj(contain, poem)
acl(poem, range)
case(decade, over)
amod(decade, several)
obl(range, decade)
punct(span, ()
compound(word, Winter)
nsubj(span, word)
parataxis(contain, span)
compound(one, sixty)
punct(one, -)
nummod(year, one)
obj(span, year)
punct(span, ))
punct(contain, ;)
punct(contain, ;)
det(organization, the)
amod(organization, internal)
nsubj(have, organization)
advmod(have, rarely)
parataxis(contain, have)
det(order, any)
amod(order, chronological)
obj(have, order)
punct(have, ,)
case(group, except)
case(group, in)
amod(group, obvious)
obl(have, group)
case(the, like)
nmod(group, the)
punct(have, ``)
root(ROOT, poem)
case(pilgrimage, of)
nmod(poem, pilgrimage)
punct(poem, '')
punct(poem, ,)
parataxis(poem, the)
punct(poem, ``)
root(ROOT, poem)
case('', of)
nummod('', 1912)
case(13, -)
nmod(1912, 13)
nmod(poem, '')
punct(poem, ,)
cc(poem, and)
det(poem, the)
compound(poem, war)
conj(poem, poem)
punct(poem, .)
case(poem, from)
det(poem, the)
amod(poem, date)
obl(venture, poem)
nsubj(venture, we)
aux(venture, can)
root(ROOT, venture)
amod(conclusion, certain)
obj(venture, conclusion)
case(career, about)
nmod:poss(career, Hardy)
case(Hardy, 's)
nmod(conclusion, career)
case(poetry, in)
obl(venture, poetry)
punct(venture, ,)
advmod(remember, always)
advcl(venture, remember)
mark(remain, that)
nsubj(remain, conclusion)
case(fraction, base)
case(fraction, on)
det(fraction, a)
nmod(conclusion, fraction)
case(whole, of)
det(whole, the)
nmod(fraction, whole)
aux(remain, must)
ccomp(remember, remain)
xcomp(remain, tentative)
punct(venture, .)
det(poem, the)
amod(poem, date)
nsubj(suggest, poem)
root(ROOT, suggest)
mark(be, that)
mark(constant, while)
nmod:poss(concern, Hardy)
case(Hardy, 's)
nsubj(constant, concern)
case(poetry, with)
nmod(concern, poetry)
aux(constant, may)
aux(constant, have)
cop(constant, be)
ccomp(suggest, constant)
punct(be, ,)
nmod:poss(production, he)
nsubj(be, production)
ccomp(suggest, be)
advmod(be, not)
punct(suggest, .)
nsubj(have, he)
root(ROOT, have)
nummod(period, two)
amod(period, productive)
obj(have, period)
punct(period, ,)
appos(period, one)
case(1860', in)
det(1860', the)
amod(1860', late)
nmod(one, 1860')
punct(period, ,)
det(other, the)
appos(period, other)
case(decade, in)
det(decade, the)
obl(other, decade)
case(1910, from)
nmod(decade, 1910)
case(1920, to)
nmod(1910, 1920)
punct(half, ()
nsubj(period, half)
case(poem, of)
det(poem, the)
amod(poem, date)
nmod(half, poem)
cop(period, be)
case(period, from)
det(period, the)
amod(period, latter)
parataxis(have, period)
punct(total, ,)
cc(total, and)
det(alone, these)
advmod(total, alone)
conj(period, total)
advmod(tenth, about)
nummod(tenth, one)
punct(tenth, -)
obj(total, tenth)
case(poem, of)
det(Hardy, all)
nmod:poss(poem, Hardy)
case(Hardy, 's)
nmod(tenth, poem)
punct(total, ))
punct(have, .)
expl(be, there)
root(ROOT, be)
nummod(period, one)
amod(period, sterile)
nsubj(be, period)
punct(be, :)
advmod(poem, only)
nummod(poem, one)
nsubj:pass(date, poem)
aux:pass(date, be)
appos(period, date)
case(1872, between)
obl(date, 1872)
cc(1882, and)
conj(1872, 1882)
cc(few, and)
punct(few, ,)
case(poem, except)
case(poem, for)
det(poem, the)
obl(few, poem)
acl(poem, write)
case(trip, on)
det(trip, the)
obl(write, trip)
case(Italy, to)
nmod(trip, Italy)
case(1887, in)
nmod(trip, 1887)
punct(few, ,)
advmod(few, very)
conj(date, few)
case(1882, from)
obl(few, 1882)
case(1890, to)
obl(few, 1890)
punct(be, .)
det(poem, the)
amod(poem, date)
nsubj(give, poem)
advmod(give, also)
root(ROOT, give)
iobj(give, we)
det(idea, a)
obj(give, idea)
case(degree, of)
det(degree, the)
nmod(idea, degree)
case(which, to)
obl(draw, which)
nsubj(draw, Hardy)
acl:relcl(degree, draw)
case(production, upon)
amod(production, past)
obl(draw, production)
case(volume, for)
nmod:poss(volume, he)
amod(volume, various)
obl(draw, volume)
punct(indication, ,)
cc(indication, and)
advmod(indication, therefore)
advmod(indication, probably)
cop(indication, be)
det(indication, a)
conj(give, indication)
case(amount, of)
det(amount, the)
nmod(indication, amount)
case(poetry, of)
nmod(amount, poetry)
nsubj(write, he)
aux(write, be)
acl:relcl(amount, write)
case(time, at)
det(time, the)
obl(write, time)
punct(give, .)
nsubj:pass(contain, poem)
case(past, of)
det(past, the)
nmod(poem, past)
cc(present, and)
det(present, the)
conj(past, present)
cc(Time, and)
nmod:poss(stock, Time)
case(Time, 's)
amod(stock, laugh)
conj(present, stock)
punct(stock, ,)
cc:preconj(publish, both)
acl(stock, publish)
mark(work, while)
nsubj(work, Hardy)
cop(work, be)
case(work, at)
advcl(publish, work)
case(dynast, on)
det(dynast, the)
nmod(work, dynast)
punct(draw, ,)
conj(work, draw)
advmod(draw, heavily)
case(poem, on)
obl(draw, poem)
acl(poem, write)
case(1900, before)
obl(write, 1900)
punct(Satires, .)
nsubj(draw, Satires)
case(Circumstance, of)
nmod(Satires, Circumstance)
cc(Moments, and)
conj(Circumstance, Moments)
case(Vision, of)
nmod(Moments, Vision)
punct(Satires, ,)
acl(Satires, come)
case(decade, during)
nmod:poss(decade, he)
advmod(productive, most)
amod(decade, productive)
obl(come, decade)
punct(contain, ,)
aux:pass(contain, be)
advmod(contain, relatively)
compound(contain, self)
punct(contain, -)
root(ROOT, contain)
punct(contain, ;)
punct(contain, ;)
det(former, the)
nsubj(contain, former)
parataxis(contain, contain)
det(poem, no)
obj(contain, poem)
acl(poem, date)
case(1909, before)
obl(date, 1909)
case(10, -)
nmod(1909, 10)
punct(poem, --)
nsubj(be, that)
acl:relcl(poem, be)
punct(be, ,)
det(poem, no)
nsubj(be, poem)
case(period, from)
det(period, a)
nmod(poem, period)
acl(period, cover)
case(volume, by)
det(volume, a)
amod(volume, previous)
obl(cover, volume)
punct(poem, --)
cc(such, and)
det(latter, the)
nsubj(such, latter)
aux(such, have)
advmod(such, only)
det(such, a)
amod(such, few)
conj(be, such)
punct(poem, .)
det(volume, the)
amod(volume, last)
nummod(volume, three)
nsubj(dependent, volume)
cop(dependent, be)
advmod(dependent, again)
advmod(dependent, more)
root(ROOT, dependent)
case(past, on)
det(past, the)
obl(dependent, past)
punct(dependent, ,)
mark(decline, as)
nmod:poss(power, Hardy)
case(Hardy, 's)
amod(power, creative)
nsubj(decline, power)
advcl(dependent, decline)
case(age, in)
nmod:poss(age, he)
amod(age, old)
obl(decline, age)
punct(dependent, .)
det(observation, these)
root(ROOT, observation)
case(tally, about)
nmod:poss(tally, Hardy)
case(Hardy, 's)
compound(tally, productivity)
nmod(observation, tally)
case(detail, with)
det(detail, the)
nmod(tally, detail)
case(life, of)
nmod:poss(life, he)
nmod(detail, life)
mark(know, as)
nsubj(know, we)
advcl(tally, know)
obj(know, they)
punct(tally, .)
det(period, the)
amod(period, first)
amod(period, productive)
nsubj(come, period)
root(ROOT, come)
mark(consider, when)
nsubj(consider, he)
aux(consider, be)
advcl(come, consider)
obj(consider, poetry)
case(vocation, as)
det(vocation, a)
obl(consider, vocation)
punct(come, ,)
mark(decide, before)
nsubj(decide, he)
aux(decide, have)
advcl(consider, decide)
mark(write, to)
xcomp(decide, write)
obj(write, fiction)
case(living, for)
det(living, a)
obl(write, living)
punct(note, ()
case(note, in)
nmod:poss(note, he)
obl(write, note)
case(who, for)
nsubj(who, who)
cop(who, be)
obj(write, who)
nsubj(write, he)
acl:relcl(note, write)
mark(write, that)
nsubj(write, he)
punct(write, ``)
ccomp(write, write)
obj(write, verse)
nummod(verse, 1865)
case(1868, -)
nmod(1865, 1868)
punct(write, ;)
punct(give, ;)
parataxis(write, give)
compound:prt(give, up)
obj(give, verse)
case(prose, for)
nmod(verse, prose)
punct(1868, ,)
nummod(prose, 1868)
case(70, -)
nmod(1868, 70)
punct(give, ;)
punct(give, ;)
cc(resume, but)
conj(give, resume)
obj(resume, it)
advmod(resume, later)
punct(resume, '')
punct(resume, ))
punct(resume, .)
case(year, during)
det(year, the)
advmod(sterile, poetically)
amod(year, sterile)
obl(give, year)
nsubj(write, he)
aux(write, be)
acl:relcl(year, write)
obj(write, novel)
case(rate, at)
det(rate, the)
obl(write, rate)
case(one, of)
advmod(one, almost)
nmod(rate, one)
det(year, a)
nmod(one, year)
cc(be, and)
aux:pass(burden, be)
punct(burden, ,)
case(addition, in)
obl(burden, addition)
punct(burden, ,)
conj(write, burden)
case(health, with)
amod(health, bad)
obl(burden, health)
punct(spend, ()
nsubj(spend, he)
parataxis(burden, spend)
nummod(month, six)
obj(spend, month)
case(bed, in)
obl(spend, bed)
case(1881, in)
obl(spend, 1881)
punct(ill, ,)
advmod(ill, too)
parataxis(spend, ill)
mark(do, to)
advcl(ill, do)
obj(do, more)
fixed(more, than)
obl(do, work)
advmod(do, slowly)
cc(painfully, and)
conj(slowly, painfully)
case(laodicean, at)
det(laodicean, a)
obl(painfully, laodicean)
punct(spend, ))
punct(come, .)
nummod(entry, two)
nsubj(support, entry)
case(life, in)
det(life, the)
amod(life, early)
nmod(entry, life)
root(ROOT, support)
det(assumption, the)
obj(support, assumption)
mark(suspend, that)
case(period, during)
det(period, this)
obl(suspend, period)
nsubj(suspend, Hardy)
aux(suspend, have)
advmod(suspend, virtually)
acl(assumption, suspend)
det(writing, the)
obj(suspend, writing)
case(poetry, of)
nmod(writing, poetry)
punct(suspend, .)
nmod:poss(record, Mrs.)
flat(Mrs., Hardy)
obj(suspend, record)
mark(make, that)
punct(make, ``)
case(end, at)
det(end, the)
obl(make, end)
case(November, of)
nmod(end, November)
punct(1881, ()
nummod(November, 1881)
punct(1881, ))
nsubj(make, he)
acl(record, make)
det(note, a)
obj(make, note)
case(intention, of)
det(intention, a)
nmod(note, intention)
mark(resume, to)
acl(intention, resume)
obj(resume, poetry)
advmod(soon, as)
advmod(resume, soon)
mark(possible, as)
advcl(soon, possible)
punct(support, '')
punct(life, ()
amod(life, early)
root(ROOT, life)
punct(life, ,)
appos(life, p.)
nummod(p., 188)
punct(life, ))
punct(life, ;)
punct(life, ;)
cc(write, and)
case(Day, on)
compound(Day, Christmas)
obl(write, Day)
punct(Day, ,)
nummod(Day, 1890)
punct(write, ,)
nsubj(write, Hardy)
parataxis(life, write)
punct(write, :)
punct(write, ``)
mark(think, while)
advcl(seem, think)
mark(resume, of)
advcl(think, resume)
punct(wing, ')
det(wing, the)
amod(wing, viewless)
obj(resume, wing)
case(poesy, of)
nmod(wing, poesy)
case(dawn, before)
nmod(wing, dawn)
det(morning, this)
obl:tmod(resume, morning)
punct(seem, ,)
amod(horizon, new)
nsubj(seem, horizon)
root(ROOT, seem)
mark(open, to)
xcomp(seem, open)
punct(worry, ,)
cc(worry, and)
conj(open, worry)
obj(worry, pettiness)
mark(disappear, to)
advcl(worry, disappear)
punct(seem, '')
punct(life, ()
amod(life, early)
root(ROOT, life)
punct(life, ,)
appos(life, p.)
nummod(p., 302)
punct(life, ))
punct(life, .)
expl(be, there)
root(ROOT, be)
amod(poem, more)
nsubj(be, poem)
acl(poem, date)
case(1890', in)
det(1890', the)
obl(date, 1890')
case(80', than)
case(80', in)
det(80', the)
punct(80', ')
obl(date, 80')
punct(be, --)
nsubj(resume, Hardy)
aux(resume, have)
advmod(resume, apparently)
parataxis(be, resume)
det(wing, the)
amod(wing, viewless)
obj(resume, wing)
mark(decrease, as)
nsubj(decrease, he)
advcl(resume, decrease)
det(volume, the)
obj(decrease, volume)
case(fiction, of)
nmod:poss(fiction, he)
nmod(volume, fiction)
punct(decrease, --)
cc(none, but)
conj(volume, none)
case(1891, in)
nmod(none, 1891)
punct(year, ,)
det(year, the)
appos(none, year)
case(tess, of)
nmod(year, tess)
punct(one, ,)
cc(one, and)
advmod(one, only)
conj(none, one)
case(1895, in)
nmod(one, 1895)
punct(one, ,)
det(year, the)
appos(one, year)
case(Jude, of)
nmod(year, Jude)
punct(be, .)
case(1895, after)
obl(increase, 1895)
det(number, the)
nsubj(increase, number)
root(ROOT, increase)
punct(be, ,)
cc(be, and)
case(year, in)
det(year, the)
amod(year, next)
nummod(year, thirty)
obl(be, year)
expl(be, there)
conj(increase, be)
advmod(year, only)
nummod(year, one)
nsubj(be, year)
case(which, for)
obl(be, which)
expl(be, there)
acl:relcl(year, be)
det(poem, no)
amod(poem, date)
nsubj(be, poem)
punct(poem, --)
appos(poem, 1903)
punct(be, ,)
mark(work, when)
nsubj(work, Hardy)
cop(work, be)
case(work, at)
advcl(be, work)
case(dynast, on)
det(dynast, the)
nmod(work, dynast)
punct(increase, .)
det(period, the)
amod(period, second)
amod(period, productive)
nsubj:pass(relate, period)
punct(period, ,)
det(decade, the)
appos(period, decade)
case(1910, from)
nmod(decade, 1910)
case(1920, to)
nmod(1910, 1920)
punct(relate, ,)
aux(relate, can)
aux:pass(relate, be)
root(ROOT, relate)
case(event, to)
nummod(event, three)
obl(relate, event)
punct(event, :)
det(completion, the)
appos(event, completion)
case(dynast, of)
det(dynast, the)
nmod(completion, dynast)
case(1909, in)
nmod(completion, 1909)
punct(completion, ,)
nsubj(leave, which)
acl:relcl(completion, leave)
obj(leave, Hardy)
xcomp(leave, free)
case(pressure, of)
obl(free, pressure)
case(time, for)
det(time, the)
amod(time, first)
obl(free, time)
case(year, in)
nummod(year, forty)
nmod(time, year)
punct(death, ;)
punct(death, ;)
det(death, the)
appos(completion, death)
case(Emma, of)
nmod(death, Emma)
flat(Emma, Hardy)
case(1912, in)
nmod(death, 1912)
punct(death, ,)
nsubj(have, which)
acl:relcl(death, have)
det(effect, a)
amod(effect, profound)
amod(effect, emotional)
obj(have, effect)
case(Hardy, on)
nmod(effect, Hardy)
case(which, for)
obl(find, which)
nsubj(find, he)
acl:relcl(effect, find)
obj(find, release)
case(poetry, in)
nmod(release, poetry)
punct(find, ;)
punct(War, ;)
cc(War, and)
det(War, the)
amod(War, first)
compound(War, World)
conj(release, War)
punct(relate, .)
nsubj(seem, it)
aux(seem, may)
root(ROOT, seem)
xcomp(seem, strange)
mark(come, that)
det(poet, a)
nsubj(come, poet)
aux(come, should)
ccomp(strange, come)
case(fruition, to)
amod(fruition, full)
obl(come, fruition)
case(seventy, in)
nmod:poss(seventy, he)
obl(come, seventy)
punct(have, ,)
cc(have, but)
nsubj(have, we)
conj(seem, have)
obj(have, it)
case(authority, on)
nmod:poss(authority, Hardy)
case(Hardy, 's)
amod(authority, own)
obl(have, authority)
mark(child, that)
punct(child, ``)
nsubj(child, he)
cop(child, be)
det(child, a)
acl(authority, child)
mark(sixteen, till)
nsubj(sixteen, he)
cop(sixteen, be)
advcl(child, sixteen)
punct(youth, ,)
det(youth, a)
conj(sixteen, youth)
mark(five, till)
nsubj(five, he)
cop(five, be)
nummod(youth, five)
punct(twenty, -)
cc(twenty, and)
punct(twenty, -)
conj(five, twenty)
punct(man, ,)
cc(man, and)
det(man, a)
amod(man, young)
conj(twenty, man)
mark(fifty, till)
nsubj(fifty, he)
cop(fifty, be)
advmod(fifty, nearly)
nmod(man, fifty)
punct(seem, '')
punct(life, ()
amod(life, early)
root(ROOT, life)
punct(life, ,)
appos(life, p.)
nummod(p., 42)
punct(life, ))
punct(life, .)
nsubj(carry, we)
aux(carry, may)
root(ROOT, carry)
det(sequence, this)
obj(carry, sequence)
nummod(step, one)
obj(carry, step)
advmod(carry, further)
cc(say, and)
conj(carry, say)
mark(poet, that)
case(seventy, at)
obl(poet, seventy)
nsubj(poet, he)
cop(poet, be)
det(poet, a)
ccomp(say, poet)
case(height, at)
det(height, the)
nmod(poet, height)
case(power, of)
nmod:poss(power, he)
nmod(height, power)
punct(poet, ,)
advcl(poet, want)
advmod(impetus, only)
det(impetus, the)
obj(want, impetus)
case(tragedy, of)
nummod(tragedy, two)
nmod(impetus, tragedy)
punct(tragedy, ,)
nummod(personal, one)
amod(tragedy, personal)
punct(national, ,)
det(national, the)
amod(national, other)
conj(tragedy, national)
punct(loose, ,)
mark(loose, to)
advcl(national, loose)
det(power, those)
obj(loose, power)
case(poetry, in)
obl(loose, poetry)
punct(carry, .)
nmod:poss(decade, Hardy)
case(Hardy, 's)
nummod(decade, two)
amod(decade, productive)
nsubj:pass(separate, decade)
aux:pass(separate, be)
root(ROOT, separate)
case(year, by)
nummod(year, forty)
obl(separate, year)
punct(separate, ,)
advmod(develop, yet)
case(they, between)
obl(develop, they)
nsubj(develop, he)
conj(separate, develop)
advmod(develop, only)
mark(become, in)
mark(become, that)
nsubj(become, he)
advcl(develop, become)
advmod(steadily, more)
advmod(become, steadily)
obj(become, himself)
punct(separate, --)
nsubj(narrow, it)
cop(narrow, be)
det(narrow, a)
parataxis(separate, narrow)
punct(process, ,)
cc(process, not)
det(process, a)
compound(process, expand)
conj(narrow, process)
punct(separate, .)
case(gardener, like)
det(gardener, a)
amod(gardener, wise)
obl(prune, gardener)
punct(prune, ,)
nsubj(prune, Hardy)
root(ROOT, prune)
advmod(prune, away)
det(sonnet, the)
amod(sonnet, shakespearian)
obj(prune, sonnet)
cc(song, and)
conj(sonnet, song)
punct(element, ,)
cc(element, and)
det(element, the)
conj(sonnet, element)
case(meter, of)
nmod(element, meter)
cc(diction, and)
amod(diction, poetic)
conj(element, diction)
case(which, to)
obl(suite, which)
nmod:poss(style, he)
amod(style, personal)
nsubj:pass(suite, style)
aux:pass(suite, be)
advmod(suite, not)
acl:relcl(diction, suite)
punct(let, ,)
cc(let, and)
conj(suite, let)
det(stock, the)
amod(stock, main)
obj(let, stock)
case(talent, of)
nmod:poss(talent, he)
nmod(stock, talent)
ccomp(let, flourish)
punct(prune, .)
det(range, the)
nsubj(narrower, range)
case(poetry, of)
det(poetry, the)
amod(poetry, later)
nmod(range, poetry)
cop(narrower, be)
advmod(narrower, considerably)
root(ROOT, narrower)
punct(greater, ,)
cc(greater, but)
det(number, the)
nsubj(greater, number)
case(poem, of)
amod(poem, successful)
nmod(number, poem)
cop(greater, be)
advmod(greater, far)
conj(narrower, greater)
punct(narrower, .)
nsubj(see, we)
aux(see, can)
root(ROOT, see)
det(characteristic, the)
amod(characteristic, general)
obj(see, characteristic)
case(decade, of)
det(decade, the)
amod(decade, earlier)
nmod(characteristic, decade)
mark(look, if)
nsubj(look, we)
advcl(see, look)
case(poem, at)
nummod(poem, two)
obl(look, poem)
case(quality, of)
advmod(different, very)
amod(quality, different)
nmod(poem, quality)
punct(see, :)
punct(see, ``)
root(ROOT, revulsion)
punct(revulsion, '')
punct(1866, ()
appos(revulsion, 1866)
punct(1866, ))
cc(tone, and)
punct(tone, ``)
compound(tone, Neutral)
conj(revulsion, tone)
punct(tone, '')
punct(1867, ()
appos(tone, 1867)
punct(1867, ))
punct(revulsion, .)
expl(be, there)
root(ROOT, be)
advmod(be, not)
nsubj(be, much)
mark(say, to)
aux:pass(say, be)
acl(much, say)
obl(say, for)
punct(be, ``)
nsubj(sonnet, revulsion)
punct(revulsion, '')
punct(revulsion, .)
case(half, like)
advmod(half, about)
obl(sonnet, half)
case(poem, of)
det(poem, the)
compound(70, 1860)
punct(70, -)
nummod(poem, 70)
nmod(half, poem)
punct(sonnet, ,)
nsubj(sonnet, it)
cop(sonnet, be)
det(sonnet, a)
root(ROOT, sonnet)
case(theme, on)
det(theme, a)
amod(theme, conventional)
nmod(sonnet, theme)
punct(theme, --)
det(unhappiness, the)
appos(sonnet, unhappiness)
case(love, of)
nmod(unhappiness, love)
punct(unhappiness, .)
advmod(anyone, almost)
nsubj(write, anyone)
aux(write, could)
aux(write, have)
acl:relcl(unhappiness, write)
obj(write, it)
punct(competent, ;)
punct(sonnet, ;)
nsubj(competent, it)
cop(competent, be)
parataxis(write, competent)
case(sense, in)
det(sense, the)
obl(competent, sense)
mark(make, that)
nsubj(make, it)
acl(sense, make)
det(statement, a)
amod(statement, coherent)
obj(make, statement)
mark(violate, without)
advcl(make, violate)
det(rule, the)
obj(violate, rule)
case(form, of)
det(form, the)
compound(form, sonnet)
nmod(rule, form)
punct(undistinguished, ,)
cc(undistinguished, but)
nsubj(undistinguished, it)
cop(undistinguished, be)
advmod(undistinguished, entirely)
conj(make, undistinguished)
cc(Hardy, and)
advmod(Hardy, entirely)
case(Hardy, unlike)
obl(undistinguished, Hardy)
punct(sonnet, .)
det(language, the)
nsubj(language, language)
cop(language, be)
det(language, the)
amod(language, conventional)
root(ROOT, language)
case(form, of)
det(form, the)
nmod(language, form)
punct(language, ;)
punct(language, ;)
expl(be, there)
parataxis(language, be)
det(phrase, no)
nsubj(be, phrase)
cc(image, or)
conj(phrase, image)
nsubj(sound, that)
acl:relcl(phrase, sound)
case(Hardy, like)
obl(sound, Hardy)
cc(strike, or)
nsubj(strike, that)
aux(strike, be)
conj(sound, strike)
obj(strike, enough)
mark(give, to)
acl(enough, give)
obj(give, individuality)
case(poem, to)
det(poem, the)
obl(give, poem)
punct(language, .)
nsubj(smoother, it)
cop(smoother, be)
root(ROOT, smoother)
mark(be, than)
nsubj(be, Hardy)
advmod(be, usually)
advcl(smoother, be)
punct(smoothness, ,)
cc(smoothness, but)
case(smoothness, with)
det(smoothness, the)
conj(smoother, smoothness)
case(anonymity, of)
nmod(smoothness, anonymity)
punct(smoother, .)
nsubj(poem, it)
cop(poem, be)
advmod(poem, obviously)
det(man, a)
amod(man, young)
nmod:poss(poem, man)
case(man, 's)
root(ROOT, poem)
punct(poem, ,)
acl(poem, write)
case(book, out)
case(book, of)
obl(write, book)
cc(experience, and)
advmod(experience, not)
case(experience, out)
case(experience, of)
conj(book, experience)
punct(poem, ;)
punct(poem, ;)
nsubj(assert, it)
parataxis(poem, assert)
obj(assert, emotion)
mark(evoke, without)
advcl(assert, evoke)
obj(evoke, it)
punct(poem, --)
nsubj(be, that)
parataxis(assert, be)
mark(say, to)
ccomp(be, say)
punct(sentimental, ,)
nsubj(sentimental, it)
cop(sentimental, be)
ccomp(say, sentimental)
punct(poem, .)
expl(be, there)
root(ROOT, be)
amod(performance, many)
amod(performance, such)
advmod(anonymous, competently)
amod(performance, anonymous)
nsubj(be, performance)
case(poem, among)
det(poem, the)
amod(poem, earlier)
nmod(performance, poem)
punct(be, .)
punct(be, ``)
amod(tone, Neutral)
root(ROOT, tone)
punct(tone, '')
nsubj(recognize, we)
advmod(recognize, immediately)
parataxis(tone, recognize)
case(poem, as)
det(poem, a)
amod(poem, fine)
obl(recognize, poem)
case(style, in)
nmod:poss(style, Hardy)
case(Hardy, 's)
advmod(characteristic, most)
amod(style, characteristic)
nmod(poem, style)
punct(poem, :)
det(language, the)
amod(language, plain)
cc(colloquial, but)
advmod(colloquial, not)
advmod(colloquial, quite)
conj(plain, colloquial)
appos(poem, language)
punct(language, ,)
det(image, the)
amod(image, hard)
punct(image, ,)
amod(image, particular)
punct(image, ,)
amod(image, colorless)
appos(language, image)
punct(form, ,)
det(form, the)
advmod(odd, slightly)
amod(form, odd)
compound(form, stanza)
punct(form, -)
appos(image, form)
punct(form, ,)
det(handling, the)
amod(handling, dramatic)
appos(form, handling)
case(occasion, of)
det(occasion, the)
nmod(handling, occasion)
punct(refusal, ,)
det(refusal, the)
conj(handling, refusal)
mark(resolve, to)
acl(refusal, resolve)
det(issue, the)
obj(resolve, issue)
punct(refusal, --)
det:predet(these, all)
obj(see, these)
nsubj(see, we)
aux(see, have)
acl:relcl(refusal, see)
case(poem, in)
nmod:poss(poem, Hardy)
case(Hardy, 's)
amod(poem, best)
obl(see, poem)
punct(tone, .)
det(poem, the)
nsubj(distort, poem)
aux(distort, do)
advmod(distort, not)
root(ROOT, distort)
det(syntax, the)
obj(distort, syntax)
case(speech, of)
amod(speech, ordinary)
nmod(syntax, speech)
cc(draw, nor)
conj(distort, draw)
case(source, on)
amod(source, exotic)
obl(draw, source)
case(diction, of)
nmod(source, diction)
punct(speech, ,)
cc(speech, yet)
nsubj(speech, it)
cop(speech, be)
advmod(speech, obviously)
advmod(speech, not)
amod(speech, ordinary)
conj(distort, speech)
punct(distort, --)
advmod(Hardy, only)
nsubj(say, Hardy)
aux(say, would)
parataxis(distort, say)
punct(grin, ``)
det(grin, a)
obj(say, grin)
case(bitterness, of)
nmod(grin, bitterness)
acl(grin, sweep)
advmod(sweep, thereby)
punct(grin, ;)
punct(grin, ;)
case(a-w, like)
det(a-w, a)
amod(a-w, ominous)
compound(a-w, bird)
nmod(grin, a-w)
punct(a-w, '')
punct(wring, ,)
cc(wring, or)
punct(wring, ``)
conj(a-w, wring)
case(wrong, with)
nmod(wring, wrong)
punct(wring, '')
punct(describe, ,)
cc(describe, or)
aux(describe, would)
conj(wring, describe)
det(sun, a)
compound(sun, winter)
obj(describe, sun)
case(God-curst, as)
punct(God-curst, ``)
nmod(sun, God-curst)
punct(God-curst, '')
punct(God-curst, .)
det(detail, the)
nsubj(speak, detail)
case(setting, of)
det(setting, the)
nmod(detail, setting)
case(tone, of)
punct(tone, ``)
amod(tone, Neutral)
nmod(setting, tone)
punct(tone, '')
cop(speak, be)
advmod(speak, not)
punct(speak, ,)
advmod(speak, strictly)
parataxis(distort, speak)
punct(metaphorical, ,)
conj(speak, metaphorical)
punct(combine, ,)
cc(combine, but)
nsubj(combine, they)
conj(speak, combine)
mark(create, to)
xcomp(combine, create)
det(mood, a)
obj(create, mood)
nsubj(appropriate, which)
cop(appropriate, be)
acl:relcl(mood, appropriate)
cc:preconj(appropriate, both)
case(day, to)
det(day, a)
amod(day, dismal)
compound(day, winter)
obl(appropriate, day)
cc(end, and)
case(end, to)
det(end, the)
conj(day, end)
case(love, of)
nmod(end, love)
punct(love, ,)
cc(love, and)
case(way, in)
det(way, this)
nmod(love, way)
nmod(end, love)
cc(weather, and)
conj(love, weather)
punct(emotion, ,)
det(emotion, the)
conj(love, emotion)
cc(element, and)
det(element, the)
conj(emotion, element)
punct(symbolize, ,)
conj(love, symbolize)
det(other, each)
obj(symbolize, other)
case(way, in)
det(way, a)
obl(symbolize, way)
nsubj(common, that)
cop(common, be)
acl:relcl(way, common)
case(many, to)
obl(common, many)
case(poem, of)
nmod:poss(poem, Hardy)
case(Hardy, 's)
amod(poem, best)
nmod(many, poem)
punct(distort, ()
punct(distort, ``)
root(ROOT, Weathers)
punct(Weathers, '')
punct(Weathers, ,)
punct(Weathers, ``)
det(thrush, the)
compound(thrush, Darkling)
root(ROOT, thrush)
punct(thrush, '')
punct(thrush, ,)
cc(``, and)
punct(thrush, ``)
case(Wind, during)
obl(full, Wind)
cc(Rain, and)
conj(Wind, Rain)
punct(Wind, '')
punct(Wind, ,)
case(example, for)
nmod(Wind, example)
punct(example, ))
cc(passage, and)
case(passage, to)
det(passage, some)
amod(passage, moving)
conj(Wind, passage)
case(novel, in)
det(novel, the)
nmod(passage, novel)
cc(passage, as)
fixed(as, well)
punct(far, ()
advmod(full, far)
case(Crowd, from)
det(Crowd, the)
compound(Crowd, madding)
obl(far, Crowd)
cop(full, be)
root(ROOT, full)
case(scene, of)
obl(full, scene)
acl(scene, construct)
case(way, in)
det(way, this)
obl(construct, way)
punct(full, ))
punct(full, .)
punct(full, ``)
amod(tone, Neutral)
nsubj(example, tone)
punct(tone, '')
cop(example, be)
det(example, a)
amod(example, excellent)
root(ROOT, example)
case(style, of)
nmod:poss(style, Hardy)
case(Hardy, 's)
amod(style, mature)
nmod(example, style)
punct(example, ,)
acl(style, draw)
case(period, from)
nmod:poss(period, he)
amod(period, earliest)
amod(period, productive)
obl(draw, period)
punct(example, ;)
punct(example, ;)
nsubj(cite, I)
parataxis(example, cite)
obj(cite, it)
case(evidence, as)
obl(cite, evidence)
mark(develop, that)
nsubj(develop, he)
aux(develop, do)
advmod(develop, not)
acl(evidence, develop)
case(style, through)
amod(style, new)
obl(develop, style)
mark(grow, as)
nsubj(grow, he)
advcl(develop, grow)
xcomp(grow, older)
punct(do, ()
mark(do, as)
nsubj(do, yeat)
advcl(grow, do)
punct(do, ))
punct(learn, ,)
cc(learn, but)
mark(learn, that)
nsubj(learn, he)
advmod(learn, simply)
conj(cite, learn)
mark(use, to)
xcomp(learn, use)
advmod(use, better)
obj(have, what)
nsubj(have, he)
advmod(have, already)
ccomp(use, have)
punct(example, .)
case(poem, in)
det(poem, the)
obl(recognize, poem)
nsubj(recognize, we)
root(ROOT, recognize)
cc(acknowledge, and)
conj(recognize, acknowledge)
nummod(man, one)
nmod:poss(sense, man)
case(man, 's)
obj(acknowledge, sense)
case(world, of)
det(world, the)
nmod(sense, world)
punct(recognize, ;)
punct(recognize, ;)
mark(somber, if)
nsubj(somber, it)
cop(somber, be)
advcl(precise, somber)
punct(precise, ,)
nsubj(precise, it)
cop(precise, be)
advmod(precise, also)
conj(recognize, precise)
punct(lend, ,)
cc(lend, and)
det(precision, the)
nsubj(lend, precision)
conj(precise, lend)
obj(lend, authority)
case(vision, to)
det(vision, the)
nmod(authority, vision)
punct(recognize, .)
case(revulsion, in)
punct(revulsion, ``)
obl(case, revulsion)
punct(revulsion, '')
punct(case, ,)
case(hand, on)
det(hand, the)
amod(hand, other)
obl(case, hand)
punct(case, ,)
det(pessimism, the)
nsubj(case, pessimism)
cop(case, be)
det(case, a)
root(ROOT, case)
advmod(prove, not)
acl(case, prove)
punct(case, ;)
punct(case, ;)
det(poem, the)
nsubj(offer, poem)
parataxis(case, offer)
obj(offer, nothing)
mark(persuade, to)
acl(nothing, persuade)
obj(persuade, we)
case(right, of)
det(speaker, the)
nmod:poss(right, speaker)
case(speaker, 's)
obl(persuade, right)
mark(speak, to)
acl(right, speak)
mark(do, as)
nsubj(do, he)
advcl(speak, do)
punct(case, .)
case(decade, in)
det(decade, the)
compound(70, 1860)
punct(70, -)
nummod(decade, 70)
obl(be, decade)
expl(be, there)
root(ROOT, be)
amod(poem, many)
nsubj(be, poem)
nmod(poem, like)
punct(be, ``)
root(ROOT, revulsion)
punct(revulsion, '')
punct(be, ,)
cc(be, but)
expl(be, there)
conj(revulsion, be)
advmod(one, only)
nsubj(be, one)
punct(be, ``)
amod(tone, Neutral)
root(ROOT, tone)
punct(tone, '')
punct(tone, .)
nsubj(Hardy, Hardy)
cop(Hardy, be)
advmod(Hardy, not)
parataxis(tone, Hardy)
advmod(often, very)
advmod(Hardy, often)
punct(tone, .)
root(ROOT, the)
punct(the, ``)
nsubj(offer, poem)
case(1912, of)
nmod(poem, 1912)
case(13, -)
nmod(1912, 13)
punct(1912, '')
root(ROOT, offer)
det(example, a)
amod(example, good)
obj(offer, example)
case(style, of)
nmod:poss(style, Hardy)
case(Hardy, 's)
nmod(example, style)
mark(manifest, as)
nsubj:pass(manifest, it)
aux:pass(manifest, be)
advcl(offer, manifest)
case(decade, in)
det(decade, the)
advmod(productive, later)
amod(decade, productive)
obl(manifest, decade)
punct(offer, .)
nsubj(poem, these)
cop(poem, be)
det(poem, the)
root(ROOT, poem)
nsubj(write, Hardy)
acl:relcl(poem, write)
case(death, after)
det(death, the)
obl(write, death)
case(wife, of)
nmod:poss(wife, he)
amod(wife, first)
nmod(death, wife)
punct(poem, ;)
punct(poem, ;)
nsubj(compose, they)
parataxis(poem, compose)
det(elegy, a)
amod(elegy, painful)
obj(compose, elegy)
case(what, to)
nmod(elegy, what)
aux(be, might)
aux(be, have)
acl:relcl(what, be)
punct(marriage, ,)
case(marriage, to)
det(marriage, a)
obl(what, marriage)
nsubj(begin, that)
acl:relcl(marriage, begin)
case(promise, with)
det(promise, a)
obl(begin, promise)
case(happiness, of)
nmod(promise, happiness)
punct(end, ,)
cc(end, and)
conj(begin, end)
compound:prt(end, in)
amod(year, long)
obj(end, year)
case(suffering, of)
nmod(year, suffering)
cc(hatred, and)
conj(suffering, hatred)
punct(poem, .)
nsubj(feel, Hardy)
advmod(feel, obviously)
root(ROOT, feel)
mark(personal, that)
det(poem, these)
nsubj(personal, poem)
cop(personal, be)
advmod(personal, peculiarly)
ccomp(feel, personal)
cc(private, and)
conj(personal, private)
punct(feel, ;)
punct(feel, ;)
nsubj(call, he)
advmod(call, sometimes)
parataxis(feel, call)
obj(call, they)
punct(expiation, ``)
det(expiation, a)
obj(call, expiation)
punct(expiation, '')
punct(allow, ,)
cc(allow, and)
nsubj(allow, he)
aux(allow, would)
advmod(allow, not)
conj(call, allow)
obj(allow, they)
mark(publish, to)
aux:pass(publish, be)
xcomp(allow, publish)
case(periodical, in)
obl(publish, periodical)
punct(feel, .)
nsubj(poem, they)
cop(poem, be)
det(poem, the)
amod(poem, only)
root(ROOT, poem)
obj(rearrange, that)
nsubj(rearrange, he)
acl:relcl(poem, rearrange)
case(group, as)
det(group, a)
obl(rearrange, group)
case(appearance, between)
nmod:poss(appearance, they)
amod(appearance, first)
nmod(group, appearance)
punct(Satires, ()
case(Satires, in)
nmod(appearance, Satires)
case(Circumstance, of)
nmod(Satires, Circumstance)
punct(Satires, ))
cc(publication, and)
det(publication, the)
conj(appearance, publication)
case(poem, of)
det(poem, the)
amod(poem, collect)
nmod(publication, poem)
punct(poem, .)
det(tone, the)
amod(tone, elegiac)
nsubj(tone, tone)
cop(tone, be)
nmod:poss(tone, Hardy)
case(Hardy, 's)
amod(tone, natural)
root(ROOT, tone)
case(voice, of)
nmod(tone, voice)
punct(surprising, ,)
cc(surprising, and)
expl(surprising, it)
cop(surprising, be)
advmod(surprising, not)
conj(tone, surprising)
mark(he, that)
det(poem, the)
compound(13, 1912)
punct(13, -)
nummod(poem, 13)
nsubj(he, poem)
cop(consistently, be)
ccomp(surprising, consistently)
cc(he, and)
advmod(he, unmistakably)
conj(consistently, he)
punct(tone, .)
det(view, the)
nsubj(past, view)
cop(past, be)
advmod(past, always)
case(past, toward)
det(past, the)
root(ROOT, past)
punct(past, ;)
punct(past, ;)
cc(nostalgic, but)
det(mood, the)
nsubj(nostalgic, mood)
cop(nostalgic, be)
advmod(nostalgic, not)
advmod(nostalgic, quite)
conj(past, nostalgic)
punct(past, --)
nsubj(allow, Hardy)
aux(allow, would)
advmod(allow, not)
root(ROOT, allow)
obj(allow, sentiment)
mark(soften, to)
acl(sentiment, soften)
nmod:poss(sense, he)
obj(soften, sense)
case(pastness, of)
det(pastness, the)
amod(pastness, irredeemable)
nmod(sense, pastness)
case(past, of)
det(past, the)
nmod(pastness, past)
punct(deadness, ,)
cc(deadness, and)
det(deadness, the)
amod(deadness, eternal)
conj(pastness, deadness)
case(dead, of)
det(dead, the)
nmod(deadness, dead)
punct(allow, .)
det(poem, the)
nsubj(be, poem)
root(ROOT, be)
punct(be, ,)
det(epigraph, the)
nsubj(tell, epigraph)
ccomp(be, tell)
obj(tell, we)
punct(tell, ,)
det(trace, the)
punct(trace, ``)
obj(tell, trace)
case(flame, of)
det(flame, a)
amod(flame, ancient)
nmod(trace, flame)
punct(trace, '')
punct(be, ;)
punct(be, ;)
det(fire, the)
nsubj(dead, fire)
case(love, of)
nmod(fire, love)
cop(dead, be)
parataxis(be, dead)
punct(stand, ,)
cc(stand, and)
nsubj(stand, Hardy)
conj(dead, stand)
punct(stand, ,)
mark(poem, as)
det(speaker, the)
nsubj(poem, speaker)
aux(poem, do)
case(poem, in)
det(poem, the)
amod(poem, last)
advcl(stand, poem)
case(sequence, of)
det(sequence, the)
nmod(poem, sequence)
punct(poem, ,)
case(circle, over)
det(circle, the)
amod(circle, burnt)
nmod(poem, circle)
case(stick, of)
amod(stick, charr)
nmod(circle, stick)
punct(think, ,)
cc(think, and)
conj(circle, think)
case(happiness, of)
amod(happiness, past)
obl(think, happiness)
cc(grief, and)
amod(grief, present)
conj(happiness, grief)
punct(honest, ,)
conj(happiness, honest)
cc(uncomforted, and)
conj(honest, uncomforted)
punct(be, .)
advmod(invisible, critically)
advcl(perceive, invisible)
punct(revolt, ,)
amod(revolt, modern)
nsubj:pass(perceive, revolt)
punct(revolt, ,)
case(X-rays, like)
nmod(revolt, X-rays)
cc(radioactivity, and)
conj(X-rays, radioactivity)
punct(perceive, ,)
aux:pass(perceive, be)
root(ROOT, perceive)
advmod(effect, only)
case(effect, by)
nmod:poss(effect, its)
obl(perceive, effect)
case(level, at)
advmod(materialistic, more)
amod(level, materialistic)
amod(level, social)
nmod(effect, level)
punct(level, ,)
advmod(call, where)
nsubj:pass(call, it)
aux:pass(call, be)
acl:relcl(level, call)
xcomp(call, delinquency)
punct(perceive, .)
punct(perceive, ``)
nsubj(term, disaffiliation)
punct(disaffiliation, '')
punct(disaffiliation, ,)
case(way, by)
det(way, the)
obl(term, way)
punct(term, ,)
cop(term, be)
det(term, the)
root(ROOT, term)
acl(term, use)
case(critic, by)
det(critic, the)
obl(use, critic)
cc(poet, and)
conj(critic, poet)
punct(critic, ,)
appos(critic, Lawrence)
flat(Lawrence, Lipton)
punct(Lawrence, ,)
nsubj(write, who)
aux(write, have)
acl:relcl(term, write)
amod(article, several)
obj(write, article)
case(subject, on)
det(subject, this)
nmod(article, subject)
punct(first, ,)
det(first, the)
amod(article, first)
case(which, of)
nmod(first, which)
punct(first, ,)
case(Nation, in)
det(Nation, the)
obl(first, Nation)
punct(quote, ,)
acl(first, quote)
case(epigraph, as)
obl(quote, epigraph)
punct(term, :)
punct(quote, ``)
nsubj(disaffiliate, we)
root(ROOT, disaffiliate)
punct(disaffiliate, .)
punct(disaffiliate, '')
root(ROOT, --)
root(ROOT, John)
flat(John, L.)
flat(John, Lewis)
punct(John, .)
case(pillar, like)
det(pillar, the)
obl(stand, pillar)
case(hercule, of)
nmod(pillar, hercule)
punct(pillar, ,)
case(Titans, like)
nummod(Titans, two)
amod(Titans, ruin)
nmod(pillar, Titans)
acl(Titans, guard)
det(entrance, the)
obj(guard, entrance)
case(one, to)
obl(guard, one)
case(circle, of)
nmod:poss(circle, Dante)
case(Dante, 's)
nmod(one, circle)
punct(stand, ,)
root(ROOT, stand)
nummod(delinquent, two)
amod(delinquent, great)
amod(delinquent, dead)
amod(delinquent, juvenile)
obj(stand, delinquent)
punct(delinquent, --)
det(heroes, the)
appos(delinquent, heroes)
case(generation, of)
det(generation, the)
amod(generation, post-war)
nmod(heroes, generation)
punct(heroes, :)
det(saxophonist, the)
amod(saxophonist, great)
appos(heroes, saxophonist)
punct(Charlie, ,)
conj(saxophonist, Charlie)
flat(Charlie, Parker)
punct(Dylan, ,)
cc(Dylan, and)
conj(saxophonist, Dylan)
flat(Dylan, Thomas)
punct(stand, .)
mark(mean, if)
det(deliberate, the)
compound(deliberate, word)
nsubj(mean, deliberate)
advcl(destroy, mean)
obj(mean, anything)
punct(destroy, ,)
nsubj(destroy, both)
case(they, of)
nmod(both, they)
advmod(destroy, certainly)
advmod(destroy, deliberately)
root(ROOT, destroy)
obj(destroy, themselves)
punct(destroy, .)
nsubj:pass(overcome, both)
case(they, of)
nmod(both, they)
aux:pass(overcome, be)
root(ROOT, overcome)
case(horror, by)
det(horror, the)
obl(overcome, horror)
case(world, of)
det(world, the)
nmod(horror, world)
case(which, in)
obl(find, which)
nsubj(find, they)
acl:relcl(horror, find)
obj(find, themselves)
punct(overcome, ,)
mark(overcome, because)
case(last, at)
obl(overcome, last)
nsubj(overcome, they)
aux(overcome, could)
advmod(longer, no)
advmod(overcome, longer)
advcl(overcome, overcome)
det(world, that)
obj(overcome, world)
case(weapon, with)
det(weapon, the)
obl(overcome, weapon)
case(art, of)
det(art, a)
advmod(lyrical, purely)
amod(art, lyrical)
nmod(weapon, art)
punct(overcome, .)
nsubj(friend, both)
case(they, of)
nmod(both, they)
cop(friend, be)
nmod:poss(friend, my)
root(ROOT, friend)
punct(friend, .)
root(ROOT, live)
case(San, in)
obl(live, San)
flat(San, Francisco)
nsubj(see, I)
root(ROOT, see)
obj(see, they)
advmod(enough, seldom)
advmod(see, enough)
mark(see, to)
advcl(see, see)
obj(see, they)
case(perspective, with)
det(perspective, a)
obl(see, perspective)
nsubj:pass(distort, which)
aux:pass(distort, be)
advmod(distort, not)
acl:relcl(perspective, distort)
case(exasperation, by)
obl(distort, exasperation)
cc(fatigue, or)
conj(exasperation, fatigue)
punct(see, .)
advmod(see, so)
mark(pass, as)
det(year, the)
nsubj(pass, year)
advcl(see, pass)
punct(see, ,)
nsubj(see, I)
root(ROOT, see)
obj(see, they)
det(time, each)
obl:tmod(see, time)
case(light, in)
det(light, the)
obl(see, light)
case(conflagration, of)
det(conflagration, a)
amod(conflagration, accelerate)
amod(conflagration, personal)
nmod(light, conflagration)
punct(see, .)
det(time, the)
amod(time, last)
obl:tmod(go, time)
nsubj(see, I)
acl:relcl(time, see)
obj(see, bird)
punct(go, ,)
case(Bob, at)
nmod:poss(Bob, Jimbo)
case(Jimbo, 's)
obl(see, Bob)
flat(Bob, City)
punct(go, ,)
nsubj:pass(go, he)
aux:pass(go, be)
advmod(go, so)
root(ROOT, go)
punct(go, --)
advmod(blind, so)
parataxis(go, blind)
case(world, to)
det(world, the)
obl(blind, world)
punct(go, --)
mark(sit, that)
nsubj(sit, he)
advmod(sit, literally)
parataxis(go, sit)
advmod(sit, down)
case(I, on)
obl(sit, I)
mark(realize, before)
nsubj(realize, he)
advcl(sit, realize)
nsubj(there, I)
cop(there, be)
ccomp(realize, there)
punct(go, .)
punct(go, ``)
nsubj(happen, what)
root(ROOT, happen)
punct(man, ,)
vocative(happen, man)
punct(man, '')
punct(happen, ?)
punct(happen, ? )
nsubj(say, I)
root(ROOT, say)
punct(say, ,)
xcomp(say, refer)
case(pretentious, to)
det(pretentious, the)
obl(refer, pretentious)
punct(say, ``)
compound(concert, Jazz)
root(ROOT, concert)
punct(concert, '')
punct(concert, .)
punct(concert, ``)
nsubj(say, evil)
punct(man, ,)
appos(evil, man)
punct(evil, ,)
appos(man, evil)
punct(evil, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
punct(all, ,)
cc(all, and)
nsubj(all, that)
cop(all, be)
conj(say, all)
nsubj(say, he)
acl:relcl(all, say)
case(rest, for)
det(rest, the)
obl(say, rest)
case(night, of)
det(night, the)
nmod(rest, night)
punct(all, .)
case(dawn, about)
obl(get, dawn)
nsubj(get, he)
parataxis(all, get)
compound:prt(get, up)
mark(blow, to)
xcomp(get, blow)
punct(say, .)
det(crowd, the)
amod(crowd, rowdy)
nsubj(chill, crowd)
root(ROOT, chill)
case(stillness, into)
obl(chill, stillness)
cc(spirale, and)
det(melody, the)
amod(melody, fluent)
nsubj(spirale, melody)
conj(chill, spirale)
case(it, through)
obl(spirale, it)
punct(chill, .)
det(time, the)
amod(time, last)
obl:tmod(pass, time)
nsubj(see, I)
acl:relcl(time, see)
obj(see, Dylan)
punct(pass, ,)
nmod:poss(destruction, he)
compound(destruction, self)
punct(destruction, -)
nsubj(pass, destruction)
aux(pass, have)
advmod(pass, not)
advmod(pass, just)
root(ROOT, pass)
det(limit, the)
obj(pass, limit)
case(rationality, of)
nmod(limit, rationality)
punct(pass, .)
nsubj(assume, it)
aux(assume, have)
root(ROOT, assume)
det(inertia, the)
amod(inertia, terrifying)
obj(assume, inertia)
case(matter, of)
amod(matter, inanimate)
nmod(inertia, matter)
punct(inertia, .)
cop(be, be)
case(he, with)
obl(be, he)
ccomp(assume, be)
mark(sweep, like)
aux:pass(sweep, be)
advcl(be, sweep)
advmod(sweep, away)
case(torrent, by)
det(torrent, a)
obl(sweep, torrent)
case(stone, of)
amod(stone, fall)
nmod(torrent, stone)
punct(assume, .)
advmod(have, now)
nsubj(have, Dylan)
flat(Dylan, Thomas)
cc(Charlie, and)
conj(Dylan, Charlie)
flat(Charlie, Parker)
conj(assume, have)
det(deal, a)
amod(deal, great)
obj(have, deal)
obj(have, more)
case(common, in)
obl(more, common)
case(end, than)
det(end, the)
amod(end, same)
amod(end, disastrous)
obl(common, end)
punct(assume, .)
case(artist, as)
obl(similar, artist)
punct(similar, ,)
nsubj(similar, they)
cop(similar, be)
advmod(similar, very)
root(ROOT, similar)
punct(similar, .)
nsubj(fluent, they)
cop(fluent, be)
advmod(fluent, both)
advmod(fluent, very)
root(ROOT, fluent)
punct(fluent, .)
cc(have, but)
det(utterance, this)
amod(utterance, fluent)
punct(have, ,)
amod(utterance, enchant)
nsubj(have, utterance)
root(ROOT, have)
punct(have, ,)
case(artist, compare)
case(artist, with)
amod(artist, important)
obl(have, artist)
case(content, of)
det(content, the)
amod(content, past)
punct(content, ,)
advmod(little, relatively)
amod(content, little)
nmod(artist, content)
punct(have, .)
nsubj(get, neither)
case(they, of)
nmod(neither, they)
root(ROOT, get)
advmod(far, very)
advmod(get, far)
case(sort, beyond)
det(sort, a)
obl(get, sort)
case(rapture, of)
amod(rapture, entranced)
nmod(sort, rapture)
case(creativity, at)
nmod:poss(creativity, he)
amod(creativity, own)
obl(get, creativity)
punct(get, .)
det(theme, the)
amod(theme, principal)
nsubj(ambivalence, theme)
case(poetry, of)
nmod:poss(poetry, Thomas)
case(Thomas, 's)
nmod(theme, poetry)
cop(ambivalence, be)
det(ambivalence, the)
root(ROOT, ambivalence)
case(birth, of)
nmod(ambivalence, birth)
cc(death, and)
conj(birth, death)
punct(ambivalence, --)
det(pain, the)
appos(ambivalence, pain)
case(creation, of)
compound(stain, blood)
punct(stain, -)
amod(creation, stain)
nmod(pain, creation)
punct(creation, .)
appos(pain, music)
punct(explicit, ,)
advmod(explicit, of)
fixed(of, course)
punct(explicit, ,)
cop(explicit, be)
advmod(explicit, not)
advmod(explicit, so)
conj(ambivalence, explicit)
det(art, a)
obj(explicit, art)
punct(know, ,)
cc(know, but)
nsubj(know, anybody)
nsubj(know, who)
acl:relcl(anybody, know)
obj(know, Charlie)
flat(Charlie, Parker)
conj(explicit, know)
mark(feel, that)
nsubj(feel, he)
ccomp(know, feel)
advmod(feel, much)
det(way, the)
amod(way, same)
obj(feel, way)
case(gift, about)
nmod:poss(gift, he)
amod(gift, own)
nmod(way, gift)
punct(ambivalence, .)
nsubj(communicate, both)
case(they, of)
nmod(both, they)
aux(communicate, do)
root(ROOT, communicate)
nummod(theme, one)
amod(theme, central)
obj(communicate, theme)
punct(communicate, :)
case(ruin, Against)
det(ruin, the)
obl(be, ruin)
case(world, of)
det(world, the)
nmod(ruin, world)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(defense, only)
nummod(defense, one)
nsubj(be, defense)
punct(defense, --)
det(act, the)
amod(act, creative)
appos(defense, act)
punct(act, .)
nsubj(theme, this)
punct(theme, ,)
advmod(theme, of)
fixed(of, course)
punct(theme, ,)
cop(theme, be)
det(theme, the)
parataxis(be, theme)
case(art, of)
amod(art, much)
nmod(theme, art)
punct(art, --)
advmod(poetry, perhaps)
amod(poetry, most)
appos(art, poetry)
punct(theme, .)
nsubj(theme, it)
cop(theme, be)
det(theme, the)
root(ROOT, theme)
case(horace, of)
nmod(theme, horace)
punct(horace, ,)
nsubj(bear, who)
advmod(bear, certainly)
advmod(bear, otherwise)
acl:relcl(theme, bear)
amod(resemblance, little)
obj(bear, resemblance)
case(Parker, to)
nmod(resemblance, Parker)
cc(Thomas, or)
conj(Parker, Thomas)
punct(theme, .)
det(difference, the)
nsubj(be, difference)
root(ROOT, be)
mark(accept, that)
nsubj(accept, horace)
ccomp(be, accept)
nmod:poss(theme, he)
obj(accept, theme)
case(kind, with)
det(kind, a)
obl(accept, kind)
case(assurance, of)
amod(assurance, silken)
nmod(kind, assurance)
punct(accept, .)
case(Dylan, to)
obl(accept, Dylan)
cc(bird, and)
conj(Dylan, bird)
nsubj(agony, it)
cop(agony, be)
det(agony, a)
ccomp(be, agony)
cc(terror, and)
conj(agony, terror)
punct(be, . )
nsubj(believe, I)
aux(believe, do)
advmod(believe, not)
root(ROOT, believe)
mark(anything, that)
nsubj(anything, this)
cop(anything, be)
case(anything, due)
fixed(due, to)
ccomp(believe, anything)
advmod(frightful, especially)
amod(anything, frightful)
case(relationship, about)
nmod:poss(relationship, they)
obl(frightful, relationship)
case(creativity, to)
nmod:poss(creativity, they)
amod(creativity, own)
nmod(relationship, creativity)
punct(believe, . )
nsubj(believe, I)
root(ROOT, believe)
cc(world, rather)
fixed(rather, that)
nsubj(world, it)
cop(world, be)
case(world, due)
fixed(due, to)
det(world, the)
amod(world, catastrophic)
ccomp(believe, world)
case(which, in)
obl(seem, which)
mark(seem, that)
nsubj(seem, creativity)
acl:relcl(world, seem)
mark(value, to)
cop(value, be)
det(value, the)
amod(value, sole)
xcomp(seem, value)
punct(believe, .)
nmod:poss(column, horace)
case(horace, 's)
nsubj(shine, column)
case(verse, of)
amod(verse, imperishable)
nmod(column, verse)
root(ROOT, shine)
advmod(enough, quietly)
xcomp(shine, enough)
case(air, in)
det(air, the)
amod(air, lucid)
obl(enough, air)
case(Rome, of)
compound(Rome, Augustan)
nmod(air, Rome)
punct(shine, .)
nsubj(he, Art)
aux(he, may)
aux(he, have)
cop(he, be)
case(he, for)
conj(shine, he)
det(activity, the)
advmod(endure, most)
amod(activity, endure)
punct(orderly, ,)
conj(endure, orderly)
punct(noble, ,)
cc(noble, and)
conj(endure, noble)
appos(he, activity)
case(man, of)
nmod(activity, man)
punct(shine, .)
cc(partook, but)
det(activity, the)
amod(activity, other)
nsubj(partook, activity)
case(life, of)
nmod:poss(life, he)
nmod(activity, life)
root(ROOT, partook)
case(value, of)
det(value, these)
obl(partook, value)
punct(partook, .)
nsubj(negate, they)
aux(negate, do)
advmod(negate, not)
advmod(negate, actively)
root(ROOT, negate)
obj(negate, they)
punct(negate, .)
nmod:poss(verse, Dylan)
flat(Dylan, Thomas)
case(Dylan, 's)
nsubj(have, verse)
root(ROOT, have)
mark(find, to)
xcomp(have, find)
obj(find, endurance)
case(world, in)
det(world, a)
obl(find, world)
mark(burn, of)
acl(world, burn)
obj(burn, city)
cc(burn, and)
conj(burn, burn)
obj(burn, Jews)
punct(have, .)
nsubj(able, he)
cop(able, be)
root(ROOT, able)
mark(find, to)
xcomp(able, find)
xcomp(find, mean)
case(art, in)
nmod:poss(art, he)
obl(mean, art)
advmod(long, as)
advmod(mean, long)
mark(answer, as)
nsubj(answer, it)
cop(answer, be)
det(answer, the)
advcl(long, answer)
case(raid, to)
compound(raid, air)
nmod(answer, raid)
cc(oven, and)
compound(oven, gas)
conj(raid, oven)
punct(able, .)
mark(begin, as)
det(world, the)
nsubj(begin, world)
advcl(believe, begin)
mark(take, to)
xcomp(begin, take)
compound:prt(take, on)
det(guise, the)
obj(take, guise)
case(oven, of)
det(oven, a)
amod(oven, immense)
compound(raid, air)
compound(oven, raid)
cc(gas, or)
conj(raid, gas)
nmod(guise, oven)
punct(believe, ,)
nsubj(believe, I)
root(ROOT, believe)
nmod:poss(art, he)
nsubj(become, art)
ccomp(believe, become)
xcomp(become, meaningless)
case(he, to)
obl(meaningless, he)
punct(believe, . )
nsubj(think, I)
root(ROOT, think)
nsubj(apply, all)
nsubj(apply, this)
aux(apply, could)
ccomp(think, apply)
case(Parker, to)
obl(apply, Parker)
advmod(as, just)
advmod(apply, as)
fixed(as, well)
punct(apply, ,)
mark(demonstrable, although)
punct(demonstrable, ,)
case(nature, because)
fixed(because, of)
det(nature, the)
obl(demonstrable, nature)
case(music, of)
nmod(nature, music)
punct(demonstrable, ,)
nsubj(demonstrable, it)
cop(demonstrable, be)
advmod(demonstrable, not)
parataxis(think, demonstrable)
punct(demonstrable, --)
advmod(conclusively, at)
fixed(at, least)
advmod(conclusively, not)
advmod(demonstrable, conclusively)
punct(think, . )
nsubj(have, Thomas)
cc(Parker, and)
conj(Thomas, Parker)
root(ROOT, have)
obj(have, more)
case(common, in)
obl(more, common)
case(theme, than)
obl(more, theme)
punct(attitude, ,)
conj(theme, attitude)
punct(theme, ,)
compound(pattern, life)
conj(theme, pattern)
punct(have, .)
case(practice, in)
det(practice, the)
obl(be, practice)
case(art, of)
nmod:poss(art, they)
nmod(practice, art)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(resemblance, a)
amod(resemblance, obvious)
amod(resemblance, technical)
nsubj(be, resemblance)
punct(be, .)
root(ROOT, contrary)
case(belief, to)
amod(belief, popular)
obl(contrary, belief)
punct(contrary, ,)
nsubj(innovator, they)
cop(innovator, be)
advmod(innovator, not)
amod(innovator, great)
amod(innovator, technical)
parataxis(contrary, innovator)
punct(contrary, .)
nmod:poss(effect, they)
nsubj(startling, effect)
cop(startling, be)
advmod(startling, only)
advmod(startling, superficially)
root(ROOT, startling)
punct(startling, .)
nsubj(regression, Thomas)
cop(regression, be)
det(regression, a)
parataxis(startling, regression)
case(originality, from)
det(originality, the)
amod(originality, technical)
nmod(regression, originality)
cc(ingenuity, and)
conj(originality, ingenuity)
case(writer, of)
nmod(originality, writer)
case(Pierre, like)
nmod(writer, Pierre)
flat(Pierre, Reverdy)
cc(Apollinaire, or)
conj(Pierre, Apollinaire)
punct(startling, .)
advmod(overrate, similarly)
punct(overrate, ,)
det(innovation, the)
nsubj(overrate, innovation)
case(bop, of)
nmod(innovation, bop)
punct(Parker, ,)
cc(Parker, and)
case(Parker, of)
conj(innovation, Parker)
advmod(Parker, particularly)
punct(overrate, ,)
aux(overrate, have)
cop(overrate, be)
advmod(overrate, vastly)
root(ROOT, overrate)
case(people, by)
obl(overrate, people)
amod(people, unfamiliar)
case(music, with)
obl(unfamiliar, music)
punct(overrate, ,)
advmod(ignoramus, especially)
case(ignoramus, by)
det(ignoramus, that)
nmod(jitterbug, ignoramus)
punct(jitterbug, ,)
det(jitterbug, the)
amod(jitterbug, intellectual)
conj(overrate, jitterbug)
punct(jitterbug, ,)
det(aficionado, the)
compound(aficionado, jazz)
appos(jitterbug, aficionado)
punct(overrate, .)
det(novelty, the)
amod(novelty, tonal)
nsubj(consist, novelty)
root(ROOT, consist)
case(introduction, in)
det(introduction, the)
obl(consist, introduction)
case(chord, of)
det(chord, a)
amod(chord, few)
nmod(introduction, chord)
acl(chord, use)
case(music, in)
amod(music, classical)
obl(use, music)
case(century, for)
obl(use, century)
punct(consist, .)
cc(be, and)
expl(be, there)
root(ROOT, be)
advmod(rhythmic, less)
amod(difference, rhythmic)
nsubj(be, difference)
case(jazz, between)
amod(jazz, progressive)
nmod(difference, jazz)
punct(matter, ,)
advmod(matter, no)
conj(jazz, matter)
advmod(progressive, how)
amod(matter, progressive)
punct(Dixieland, ,)
cc(Dixieland, and)
conj(progressive, Dixieland)
punct(be, ,)
mark(be, than)
expl(be, there)
advcl(be, be)
case(movement, between)
nummod(movement, two)
nsubj(be, movement)
case(symphony, of)
amod(symphony, many)
amod(symphony, conventional)
nmod(movement, symphony)
punct(be, .)
root(ROOT, what)
vocative(what, Parker)
cc(contemporary, and)
nmod:poss(contemporary, he)
conj(Parker, contemporary)
punct(what, --)
root(ROOT, Gillespie)
punct(Gillespie, ,)
conj(Gillespie, Davis)
punct(Gillespie, ,)
nsubj(be, monk)
punct(be, ,)
nsubj(be, roach)
punct(anomaly, ()
nsubj(anomaly, Tristano)
cop(anomaly, be)
det(anomaly, a)
appos(roach, anomaly)
punct(anomaly, ))
punct(etc., ,)
advmod(anomaly, etc.)
punct(be, --)
aux(be, do)
root(ROOT, be)
mark(absorb, to)
ccomp(be, absorb)
det(ornamentation, the)
amod(ornamentation, musical)
obj(absorb, ornamentation)
case(jazz, of)
det(jazz, the)
amod(jazz, older)
nmod(ornamentation, jazz)
case(structure, into)
det(structure, the)
amod(structure, basic)
obl(absorb, structure)
punct(structure, ,)
case(which, of)
obl(become, which)
nsubj(become, it)
advmod(become, then)
acl:relcl(structure, become)
det(part, a)
amod(part, integral)
xcomp(become, part)
punct(develop, ,)
cc(develop, and)
case(which, with)
obl(develop, which)
nsubj(develop, it)
advmod(develop, then)
conj(part, develop)
punct(be, .)
nsubj(true, this)
cop(true, be)
root(ROOT, true)
case(line, of)
det(line, the)
amod(line, melodic)
obl(true, line)
nsubj:pass(put, which)
aux(put, could)
aux:pass(put, be)
acl:relcl(line, put)
advmod(put, together)
case(passage, from)
amod(passage, select)
obl(put, passage)
case(anybody, of)
advmod(anybody, almost)
nmod(passage, anybody)
punct(true, --)
root(ROOT, Benny)
flat(Benny, Carter)
punct(Benny, ,)
conj(Benny, Johnny)
flat(Johnny, Hodges)
punct(Benny, .)
expl(true, it)
cop(true, be)
root(ROOT, true)
case(pattern, of)
det(pattern, the)
amod(pattern, rhythmic)
obl(true, pattern)
case(which, in)
obl(shift, which)
det(beat, the)
nsubj(shift, beat)
acl:relcl(pattern, shift)
advmod(shift, continuously)
punct(sprung, ,)
cc(sprung, or)
advmod(sprung, at)
fixed(at, least)
aux:pass(sprung, be)
advmod(sprung, continuously)
conj(shift, sprung)
punct(sprung, ,)
mark(become, so)
fixed(so, that)
nsubj(become, it)
advcl(sprung, become)
amod(enough, ambiguous)
xcomp(become, enough)
mark(allow, to)
advcl(enough, allow)
det(pattern, the)
obj(allow, pattern)
mark(dominate, to)
aux:pass(dominate, be)
acl(pattern, dominate)
case(pulsation, by)
det(pulsation, the)
amod(pulsation, long)
obl(dominate, pulsation)
case(phrase, of)
det(phrase, the)
nmod(pulsation, phrase)
cc(strophe, or)
conj(phrase, strophe)
punct(true, .)
nsubj(what, this)
cop(what, be)
advmod(what, exactly)
root(ROOT, what)
acl:relcl(what, happen)
case(transition, in)
det(transition, the)
obl(happen, transition)
case(baroque, from)
nmod(transition, baroque)
case(rococo, to)
amod(music, rococo)
nmod(transition, music)
punct(what, .)
nsubj(difference, it)
cop(difference, be)
det(difference, the)
root(ROOT, difference)
case(bach, between)
nmod(difference, bach)
cc(Mozart, and)
conj(bach, Mozart)
punct(difference, .)
expl(analogy, it)
cop(analogy, be)
advmod(analogy, not)
det(analogy, a)
amod(analogy, farfetch)
root(ROOT, analogy)
mark(say, to)
csubj(analogy, say)
mark(what, that)
nsubj(what, this)
cop(what, be)
ccomp(say, what)
nsubj(do, Thomas)
acl:relcl(what, do)
case(poetry, to)
obl(do, poetry)
punct(analogy, .)
det(effect, the)
amod(effect, special)
amod(effect, syntactical)
nsubj(become, effect)
case(Rimbaud, of)
det(Rimbaud, a)
nmod(effect, Rimbaud)
cc(Edith, or)
det(Edith, a)
conj(Rimbaud, Edith)
flat(Edith, Sitwell)
punct(ornament, --)
advmod(ornament, actually)
appos(effect, ornament)
punct(become, --)
root(ROOT, become)
det(concern, the)
amod(concern, main)
xcomp(become, concern)
punct(become, .)
det(conceit, the)
amod(conceit, metaphysical)
nsubj(dominant, conceit)
punct(conceit, ,)
nsubj(fascinate, which)
acl:relcl(conceit, fascinate)
det(Generation, the)
compound(Generation, reactionary)
obj(fascinate, Generation)
advmod(dominant, still)
root(ROOT, dominant)
case(college, in)
amod(college, backwater)
amod(college, american)
obl(dominant, college)
punct(embroidery, ,)
cop(embroidery, be)
conj(dominant, embroidery)
punct(end, .)
nmod:poss(ellipse, Thomas)
case(Thomas, 's)
nsubj(end, ellipse)
cc(ambiguity, and)
conj(ellipse, ambiguity)
cop(end, be)
conj(dominant, end)
case(themselves, in)
nmod(end, themselves)
punct(end, .)
det(theme, the)
amod(theme, immediate)
nsubj(incidental, theme)
punct(incidental, ,)
mark(exist, if)
nsubj(exist, it)
advcl(incidental, exist)
punct(incidental, ,)
cop(incidental, be)
root(ROOT, incidental)
punct(reiterate, ,)
cc(reiterate, and)
nmod:poss(theme, he)
amod(theme, main)
nsubj:pass(reiterate, theme)
punct(theme, --)
det(terror, the)
appos(theme, terror)
case(birth, of)
nmod(terror, birth)
punct(reiterate, --)
aux:pass(reiterate, be)
advmod(reiterate, simply)
conj(incidental, reiterate)
punct(incidental, .)
nsubj(difference, this)
cop(difference, be)
nummod(difference, one)
root(ROOT, difference)
case(bird, between)
nmod(difference, bird)
cc(Dylan, and)
conj(bird, Dylan)
nsubj:pass(point, which)
aux(point, should)
aux:pass(point, be)
acl:relcl(difference, point)
compound:prt(point, out)
punct(difference, .)
advmod(contrary, again)
punct(contrary, ,)
root(ROOT, contrary)
case(belief, to)
amod(belief, popular)
obl(contrary, belief)
punct(contrary, ,)
expl(be, there)
parataxis(contrary, be)
nsubj(be, nothing)
amod(nothing, crazy)
cc(frantic, or)
conj(crazy, frantic)
case(Parker, about)
obl(frantic, Parker)
cc:preconj(musically, either)
advmod(be, musically)
cc(emotionally, or)
conj(musically, emotionally)
punct(contrary, .)
nmod:poss(melody, he)
amod(melody, sinuous)
nsubj(sort, melody)
cop(sort, be)
det(sort, a)
root(ROOT, sort)
case(transcendence, of)
amod(transcendence, naive)
nmod(sort, transcendence)
case(experience, of)
det(experience, all)
nmod(transcendence, experience)
punct(sort, .)
advmod(resemble, emotionally)
nsubj(resemble, it)
aux(resemble, do)
advmod(resemble, not)
root(ROOT, resemble)
obj(resemble, Berlioz)
cc(Wagner, or)
conj(Berlioz, Wagner)
punct(resemble, ;)
punct(resemble, ;)
nsubj(resemble, it)
parataxis(resemble, resemble)
obj(resemble, Mozart)
punct(resemble, .)
nsubj(true, this)
cop(true, be)
root(ROOT, true)
advmod(true, also)
case(painter, of)
det(painter, a)
obl(true, painter)
case(Jackson, like)
nmod(painter, Jackson)
flat(Jackson, pollock)
punct(true, .)
nsubj(eccentric, he)
aux(eccentric, may)
aux(eccentric, have)
cop(eccentric, be)
root(ROOT, eccentric)
case(behavior, in)
nmod:poss(behavior, he)
obl(eccentric, behavior)
punct(impassive, ,)
cc(impassive, but)
nmod:poss(painting, he)
nsubj(impassive, painting)
cop(impassive, be)
advmod(impassive, as)
conj(eccentric, impassive)
case(tile, as)
compound(tile, Persian)
obl(impassive, tile)
punct(eccentric, .)
advmod(nature, partly)
det(difference, this)
nsubj(nature, difference)
cop(nature, be)
case(nature, due)
fixed(due, to)
det(nature, the)
root(ROOT, nature)
case(communication, of)
amod(communication, verbal)
nmod(nature, communication)
punct(nature, .)
det(aboutiveness, the)
amod(aboutiveness, insistent)
compound(aboutiveness, talk)
punct(aboutiveness, -)
nsubj(obtrude, aboutiveness)
case(environment, of)
det(environment, the)
amod(environment, general)
nmod(aboutiveness, environment)
root(ROOT, obtrude)
case(poetry, into)
advmod(poetry, even)
det(poetry, the)
advmod(idyllic, most)
amod(poetry, idyllic)
obl(obtrude, poetry)
punct(obtrude, .)
nsubj(difference, it)
cop(difference, be)
advmod(more, much)
advmod(difference, more)
det(difference, a)
amod(difference, personal)
root(ROOT, difference)
punct(difference, .)
nsubj(want, Thomas)
advmod(want, certainly)
parataxis(difference, want)
mark(tell, to)
xcomp(want, tell)
obj(tell, people)
case(ruin, about)
det(ruin, the)
obl(tell, ruin)
cc(disorder, and)
conj(ruin, disorder)
case(world, of)
det(world, the)
nmod(ruin, world)
punct(difference, .)
nsubj(want, Parker)
cc(pollock, and)
conj(Parker, pollock)
root(ROOT, want)
mark(substitute, to)
xcomp(want, substitute)
det(work, a)
obj(substitute, work)
case(art, of)
nmod(work, art)
case(world, for)
det(world, the)
obl(substitute, world)
punct(Technique, .)
parataxis(want, Technique)
amod(Technique, pure)
cc(simple, and)
conj(pure, simple)
punct(rendition, ,)
appos(Technique, rendition)
punct(importance, ,)
cop(importance, be)
advmod(importance, not)
case(importance, of)
amod(importance, major)
acl:relcl(rendition, importance)
punct(interesting, ,)
cc(interesting, but)
expl(interesting, it)
cop(interesting, be)
conj(importance, interesting)
mark(one, that)
nsubj(one, Parker)
punct(Parker, ,)
case(lester, follow)
nmod(Parker, lester)
flat(lester, young)
punct(one, ,)
cop(one, be)
ccomp(interesting, one)
case(leader, of)
det(leader, the)
nmod(one, leader)
case(revolution, of)
det(revolution, the)
advmod(call, so)
punct(call, -)
amod(revolution, call)
compound(revolution, saxophone)
nmod(leader, revolution)
punct(want, .)
case(jazz, in)
amod(jazz, modern)
obl(treat, jazz)
punct(treat, ,)
det(saxophone, the)
nsubj:pass(treat, saxophone)
aux:pass(treat, be)
root(ROOT, treat)
case(woodwind, as)
det(woodwind, a)
obl(treat, woodwind)
cc(play, and)
conj(treat, play)
case(embouchure, with)
amod(embouchure, conventional)
obl(play, embouchure)
punct(treat, .)
advmod(conventional, metrically)
punct(conventional, ,)
nmod:poss(verse, Thomas)
case(Thomas, 's)
nsubj(conventional, verse)
cop(conventional, be)
advmod(conventional, extremely)
root(ROOT, conventional)
punct(conventional, ,)
mark(verse, as)
cop(verse, be)
punct(verse, ,)
advmod(verse, incidentally)
punct(verse, ,)
det(verse, the)
advcl(conventional, verse)
case(enrage, of)
det(enrage, that)
amod(enrage, other)
amod(enrage, tragic)
nmod(verse, enrage)
punct(enrage, ,)
appos(enrage, Hart)
flat(Hart, Crane)
punct(conventional, . )
nsubj(want, I)
root(ROOT, want)
mark(make, to)
xcomp(want, make)
xcomp(make, clear)
obj(consider, what)
nsubj(consider, I)
ccomp(clear, consider)
det(development, the)
nummod(development, one)
amod(development, technical)
obj(consider, development)
case(wave, in)
det(wave, the)
amod(wave, first)
nmod(development, wave)
case(art, of)
amod(art, significant)
amod(art, post-war)
nmod(wave, art)
punct(want, .)
nsubj(confabulation, ornament)
cop(confabulation, be)
root(ROOT, confabulation)
case(interstice, in)
det(interstice, the)
nmod(confabulation, interstice)
case(structure, of)
nmod(interstice, structure)
punct(confabulation, . )
det(poem, a)
nsubj(confabulation, poem)
case(Dylan, by)
nmod(poem, Dylan)
flat(Dylan, Thomas)
punct(Dylan, ,)
det(solo, a)
compound(solo, saxophone)
appos(Dylan, solo)
case(Charles, by)
nmod(solo, Charles)
flat(Charles, Parker)
punct(Charles, ,)
det(painting, a)
appos(poem, painting)
case(Jackson, by)
nmod(painting, Jackson)
flat(Jackson, pollock)
punct(confabulation, --)
nsubj(confabulation, these)
cop(confabulation, be)
amod(confabulation, pure)
root(ROOT, confabulation)
case(end, as)
nmod(confabulation, end)
case(themselves, in)
obl(confabulation, themselves)
punct(confabulation, .)
nsubj(come, confabulation)
aux(come, have)
root(ROOT, come)
mark(determine, to)
xcomp(come, determine)
obj(determine, structure)
punct(come, .)
amod(lyricism, Uninhibited)
nsubj(distinguished, lyricism)
aux(distinguished, should)
cop(distinguished, be)
parataxis(come, distinguished)
case(opposite, from)
nmod:poss(opposite, its)
amod(opposite, exact)
obl(distinguished, opposite)
punct(opposite, --)
det(invention, the)
amod(invention, sterile)
punct(invention, ,)
amod(invention, extraneous)
appos(opposite, invention)
case(metaphysicals, of)
det(metaphysicals, the)
amod(metaphysicals, corn-belt)
nmod(invention, metaphysicals)
punct(blight, ,)
cc(present, or)
amod(blight, present)
nmod(invention, blight)
case(professor, of)
amod(professor, poetic)
nmod(blight, professor)
punct(come, .)
advmod(have, just)
mark(have, as)
nsubj(have, Hart)
flat(Hart, Crane)
advcl(nonsense, have)
amod(influence, little)
obj(have, influence)
case(anyone, on)
nmod(influence, anyone)
case(writer, except)
advmod(reactionary, very)
amod(writer, reactionary)
nmod(anyone, writer)
punct(writer, --)
case(Allen, like)
nmod(writer, Allen)
flat(Allen, tate)
punct(Allen, ,)
case(instance, for)
obl(nonsense, instance)
punct(word, ,)
case(whom, to)
obl(word, whom)
nsubj(word, Valery)
cop(word, be)
det(word, the)
amod(word, last)
acl:relcl(instance, word)
case(poetry, in)
amod(poetry, modern)
nmod(word, poetry)
cc(felicity, and)
det(felicity, the)
conj(word, felicity)
case(Apollinaire, of)
det(Apollinaire, a)
nmod(felicity, Apollinaire)
punct(let, ,)
parataxis(nonsense, let)
advmod(let, alone)
det(Paul, a)
obj(let, Paul)
flat(Paul, Eluard)
cop(nonsense, be)
root(ROOT, nonsense)
punct(nonsense, --)
advmod(slight, so)
nmod:poss(influence, Dylan)
flat(Dylan, Thomas)
case(Dylan, 's)
nsubj(slight, influence)
aux(slight, have)
cop(slight, be)
parataxis(nonsense, slight)
advmod(slight, indeed)
punct(nonsense, .)
case(fact, in)
obl(W., fact)
punct(W., ,)
nmod:poss(disciple, he)
amod(disciple, only)
nsubj(W., disciple)
punct(disciple, --)
det(person, the)
amod(person, only)
appos(disciple, person)
mark(imitate, to)
acl(person, imitate)
nmod:poss(style, he)
obj(imitate, style)
punct(W., --)
cop(W., be)
root(ROOT, W.)
flat(W., S.)
flat(W., Graham)
punct(W., ,)
nsubj(seem, who)
acl:relcl(W., seem)
mark(imitate, to)
aux(imitate, have)
xcomp(seem, imitate)
obj(imitate, he)
case(understanding, without)
amod(understanding, much)
obl(imitate, understanding)
punct(move, ,)
cc(move, and)
nsubj(move, who)
aux(move, have)
advmod(move, since)
conj(lay, move)
advmod(move, on)
case(method, to)
amod(method, other)
obl(move, method)
punct(lay, .)
nmod:poss(influence, Thomas)
case(Thomas, 's)
amod(influence, principal)
nsubj(lay, influence)
conj(W., lay)
case(communication, in)
det(communication, the)
obl(lay, communication)
case(attitude, of)
det(attitude, a)
nmod(communication, attitude)
punct(communication, --)
nsubj(lay, that)
case(school, of)
det(school, the)
advmod(extinct, now)
amod(school, extinct)
amod(school, british)
amod(school, romantic)
nmod(that, school)
case(apocalypse, of)
det(apocalypse, the)
compound(apocalypse, New)
nmod(school, apocalypse)
punct(school, --)
appos(school, Henry)
flat(Henry, Treece)
punct(J., ,)
conj(Henry, J.)
flat(J., F.)
flat(J., Hendry)
punct(other, ,)
cc(other, and)
conj(Henry, other)
punct(other, --)
nsubj(poet, all)
case(whom, of)
nmod(all, whom)
cop(poet, be)
advmod(conventional, quite)
amod(poet, conventional)
acl:relcl(other, poet)
punct(lay, .)
nsubj(have, Parker)
advmod(have, certainly)
root(ROOT, have)
advmod(more, much)
obj(have, more)
case(influence, of)
det(influence, a)
obl(more, influence)
punct(have, .)
case(time, at)
nummod(time, one)
obl(ambition, time)
nsubj(ambition, it)
cop(ambition, be)
det(ambition, the)
root(ROOT, ambition)
case(player, of)
det(player, every)
compound(player, saxophone)
nmod(ambition, player)
case(band, in)
det(band, every)
amod(band, high)
compound(band, school)
nmod(player, band)
case(America, in)
nmod(band, America)
mark(blow, to)
acl(ambition, blow)
case(bird, like)
obl(blow, bird)
punct(blow, .)
advmod(death, even)
case(death, before)
nmod:poss(death, he)
obl(begin, death)
det(influence, this)
nsubj(begin, influence)
aux(begin, have)
parataxis(ambition, begin)
mark(ebb, to)
xcomp(begin, ebb)
punct(ambition, .)
case(fact, in)
nmod(generation, fact)
punct(generation, ,)
det(generation, the)
amod(generation, whole)
root(ROOT, generation)
case(father, of)
det(father, the)
amod(father, found)
nmod(generation, father)
case(bop, of)
nmod(father, bop)
punct(generation, --)
root(ROOT, Gillespie)
punct(Gillespie, ,)
conj(Gillespie, monk)
punct(Gillespie, ,)
root(ROOT, Davis)
punct(Davis, ,)
nsubj(discount, Blakey)
punct(rest, ,)
cc(rest, and)
det(rest, the)
conj(Blakey, rest)
punct(discount, --)
cop(discount, be)
advmod(discount, just)
advmod(discount, now)
case(discount, at)
det(discount, a)
amod(discount, considerable)
root(ROOT, discount)
punct(discount, .)
det(line, the)
amod(line, main)
nsubj(go, line)
case(development, of)
nmod(line, development)
obl:tmod(go, today)
root(ROOT, go)
advmod(go, back)
case(lester, to)
obl(back, lester)
flat(lester, young)
cc(pass, and)
nsubj(pass, by-)
conj(go, pass)
obj(pass, they)
punct(go, .)
det(point, the)
nsubj(be, point)
root(ROOT, be)
mark(aberrant, that)
nsubj(aberrant, many)
case(development, of)
det(development, the)
advmod(impressive, most)
amod(development, impressive)
nmod(many, development)
case(art, in)
det(art, the)
nmod(development, art)
advmod(aberrant, nowadays)
cop(aberrant, be)
ccomp(be, aberrant)
punct(idiosyncratic, ,)
conj(aberrant, idiosyncratic)
punct(be, .)
expl(be, there)
root(ROOT, be)
advmod(longer, no)
advmod(be, longer)
det(sense, any)
nsubj(be, sense)
mark(continue, of)
acl(sense, continue)
obj(continue, development)
case(sort, of)
det(sort, the)
nmod(development, sort)
nsubj:pass(trace, that)
aux(trace, can)
aux:pass(trace, be)
acl:relcl(sort, trace)
case(Baudelaire, from)
obl(trace, Baudelaire)
case(Eluard, to)
obl(trace, Eluard)
punct(Hawthorne, ,)
cc(Hawthorne, or)
case(matter, for)
det(matter, that)
nmod(Hawthorne, matter)
punct(Hawthorne, ,)
case(Hawthorne, from)
obl(trace, Hawthorne)
case(Henry, through)
nmod(Hawthorne, Henry)
flat(Henry, James)
case(Gertrude, to)
nmod(Hawthorne, Gertrude)
flat(Gertrude, Stein)
punct(be, .)
det(generation, the)
amod(generation, cubist)
nsubj(assume, generation)
case(War, before)
compound(War, World)
nmod(generation, War)
nummod(War, 1)
punct(surrealist, ,)
punct(surrealist, ,)
cc(surrealist, and)
punct(surrealist, ,)
case(level, on)
det(level, a)
amod(level, lower)
nmod(surrealist, level)
punct(surrealist, ,)
det(surrealist, the)
nsubj(assume, surrealist)
case(period, of)
det(period, the)
nmod(surrealist, period)
case(war, between)
det(war, the)
nmod(period, war)
punct(assume, ,)
cc:preconj(assume, both)
root(ROOT, assume)
det(universe, a)
amod(universe, accept)
obj(assume, universe)
case(discourse, of)
nmod(universe, discourse)
punct(universe, ,)
case(which, in)
obl(quote, which)
punct(quote, ,)
mark(quote, to)
acl(universe, quote)
obj(quote, Andre)
flat(Andre, Breton)
punct(possible, ,)
expl(possible, it)
cop(possible, be)
parataxis(universe, possible)
mark(make, to)
csubj(possible, make)
amod(advance, definite)
obj(make, advance)
punct(advance, ,)
advmod(science, exactly)
case(science, as)
case(science, in)
det(science, the)
obl(make, science)
punct(possible, . )
nsubj(doubt, I)
root(ROOT, doubt)
mark(hold, if)
nsubj(hold, anyone)
advcl(doubt, hold)
amod(idea, such)
obj(hold, idea)
obl:tmod(hold, today)
punct(doubt, .)
nsubj(exit, continuity)
root(ROOT, exit)
punct(continuity, ,)
cc(continuity, but)
mark(develop, like)
det(music, the)
compound(music, neo-sw)
nsubj(develop, music)
advcl(continuity, develop)
case(lester, from)
obl(develop, lester)
flat(lester, young)
punct(continuity, ,)
nsubj(continuity, it)
cop(continuity, be)
det(continuity, a)
conj(exit, continuity)
acl(continuity, sustain)
case(demand, by)
amod(demand, popular)
obl(sustain, demand)
punct(exit, .)
case(art, in)
det(art, the)
amod(art, plastic)
obl(exist, art)
punct(exist, ,)
det(situation, a)
advmod(similar, very)
amod(situation, similar)
nsubj(exist, situation)
root(ROOT, exist)
punct(exist, .)
nsubj(talk, surrealist)
case(Hans, like)
nmod(surrealist, Hans)
flat(Hans, Arp)
cc(Max, and)
conj(Hans, Max)
flat(Max, Ernst)
aux(talk, might)
root(ROOT, talk)
case(creation, of)
obl(talk, creation)
case(hazard, by)
obl(talk, hazard)
punct(talk, --)
mark(compose, of)
advcl(talk, compose)
obj(compose, picture)
mark(walk, by)
advcl(compose, walk)
case(they, on)
obl(walk, they)
case(sole, with)
amod(sole, paint)
obl(walk, sole)
punct(toss, ,)
cc(toss, or)
mark(toss, by)
conj(walk, toss)
obj(toss, bit)
case(paper, of)
nmod(bit, paper)
compound:prt(toss, up)
case(air, in)
det(air, the)
obl(toss, air)
punct(talk, .)
cc(obvious, but)
expl(obvious, it)
cop(obvious, be)
root(ROOT, obvious)
mark(delude, that)
nsubj(delude, they)
cop(delude, be)
obl:npmod(delude, self)
punct(delude, -)
ccomp(obvious, delude)
punct(obvious, .)
nsubj(look, nothing)
root(ROOT, look)
obj(look, anything)
case(Ernst, like)
det(Ernst, a)
nmod(anything, Ernst)
cc(Arp, or)
det(Arp, a)
conj(Ernst, Arp)
cc(Ernst, but)
det(Ernst, another)
conj(Ernst, Ernst)
cc(Arp, or)
conj(Ernst, Arp)
punct(look, .)
nsubj(look, nothing)
root(ROOT, look)
advmod(look, less)
case(work, like)
nmod:poss(work, they)
obl(look, work)
case(happening, than)
det(happening, the)
obl(look, happening)
case(occasion, of)
amod(occasion, random)
nmod(happening, occasion)
punct(look, .)
nsubj(look, many)
case(War, of)
det(War, the)
compound(World, post)
punct(World, -)
compound(War, World)
nmod(many, War)
nummod(War, 2)
punct(expressionist, ,)
amod(expressionist, abstract)
nmod(many, expressionist)
punct(apostle, ,)
conj(expressionist, apostle)
case(discipline, of)
det(discipline, the)
nmod(apostle, discipline)
case(spontaneity, of)
nmod(discipline, spontaneity)
cc(hazard, and)
conj(spontaneity, hazard)
punct(look, ,)
root(ROOT, look)
xcomp(look, alike)
punct(look, ,)
cc(look, and)
aux(look, do)
conj(look, look)
case(accident, like)
obl(look, accident)
punct(look, .)
det(appeal, the)
amod(appeal, aesthetic)
nsubj(exist, appeal)
case(paint, of)
amod(paint, pure)
nmod(appeal, paint)
acl(appeal, lay)
compound:prt(lay, on)
case(random, at)
obl(lay, random)
aux(exist, may)
root(ROOT, exist)
punct(appeal, ,)
cc(appeal, but)
nsubj(appeal, it)
cop(appeal, be)
det(appeal, a)
advmod(impoverish, very)
amod(appeal, impoverish)
conj(exist, appeal)
punct(exist, .)
advmod(again, once)
advmod(happen, again)
nsubj(happen, what)
aux(happen, have)
root(ROOT, happen)
cop(happen, be)
det(confabulation, a)
det(consume, all)
punct(consume, -)
amod(confabulation, consume)
obj(happen, confabulation)
case(incidental, of)
det(incidental, the)
nmod(confabulation, incidental)
punct(incidental, ,)
det(accident, the)
conj(incidental, accident)
case(painting, of)
nmod(accident, painting)
punct(happen, .)
expl(curious, it)
cop(curious, be)
root(ROOT, curious)
mark(best, that)
mark(best, at)
nsubj(best, it)
cop(best, be)
ccomp(curious, best)
punct(best, ,)
det(work, the)
appos(best, work)
case(school, of)
det(school, this)
nmod(work, school)
case(painting, of)
nmod(school, painting)
punct(curious, --)
nsubj(resemble, Mark)
flat(Mark, Rothko)
punct(Jackson, ,)
conj(Mark, Jackson)
flat(Jackson, pollock)
punct(Jackson, ,)
conj(Jackson, Clyfford)
advmod(Robert, still)
punct(Robert, ,)
conj(Mark, Robert)
flat(Robert, Motherwell)
punct(Willem, ,)
conj(Robert, Willem)
flat(Willem, De)
punct(Willem, -)
flat(Willem, koon)
punct(rest, ,)
cc(rest, and)
det(rest, the)
conj(Robert, rest)
punct(resemble, --)
root(ROOT, resemble)
obj(resemble, nothing)
advmod(much, so)
amod(nothing, much)
case(painting, as)
det(painting, the)
compound(painting, passage)
obl(much, painting)
case(painter, of)
det(painter, quite)
amod(painter, unimpressive)
nmod(painting, painter)
punct(painting, :)
det(mother, the)
appos(painter, mother)
punct(mother, -)
case(pearl, of)
punct(pearl, -)
compound(shimmer, pearl)
nmod(mother, shimmer)
case(background, in)
det(background, the)
nmod(shimmer, background)
case(Henry, of)
det(Henry, a)
nmod(background, Henry)
flat(Henry, McFee)
punct(Henry, ,)
nmod:npmod(Henry, itself)
det(formula, a)
appos(Henry, formula)
acl(formula, derive)
case(renoir, from)
obl(derive, renoir)
punct(splash, ;)
punct(splash, ;)
det(splash, the)
appos(formula, splash)
case(light, of)
nmod(splash, light)
cc(black, and)
conj(light, black)
nsubj(fake, which)
acl:relcl(splash, fake)
obj(fake, drapery)
case(imitator, in)
det(imitator, the)
amod(imitator, fashionable)
obl(fake, imitator)
case(hal, of)
nmod(imitator, hal)
cc(sargent, and)
conj(hal, sargent)
punct(resemble, .)
advmod(present, often)
nsubj:pass(present, work)
case(sort, of)
det(sort, this)
nmod(work, sort)
aux:pass(present, be)
root(ROOT, present)
case(calligraphy, as)
obl(present, calligraphy)
punct(calligraphy, --)
det(utterance, the)
amod(utterance, pure)
appos(calligraphy, utterance)
case(stroke, of)
det(stroke, the)
compound(stroke, brush)
nmod(utterance, stroke)
acl(utterance, seek)
advmod(value, only)
amod(value, absolute)
amod(value, painteresque)
obj(seek, value)
punct(present, .)
nsubj(have, you)
root(ROOT, have)
advmod(compare, only)
mark(compare, to)
xcomp(have, compare)
amod(painting, such)
obj(compare, painting)
case(work, with)
det(work, the)
obl(compare, work)
nmod(work, of)
punct(say, ,)
appos(work, say)
punct(say, ,)
obj(say, Sesshu)
punct(realize, ,)
mark(realize, to)
advcl(compare, realize)
mark(use, that)
nsubj(use, someone)
aux(use, be)
ccomp(realize, use)
obj(use, word)
cc(brush, and)
conj(word, brush)
advmod(use, carelessly)
punct(have, .)
case(best, at)
nmod:poss(best, its)
obl(achieve, best)
det(expressionist, the)
amod(expressionist, abstract)
nsubj(achieve, expressionist)
root(ROOT, achieve)
det(surface, a)
amod(surface, simple)
amod(surface, rococo)
amod(surface, decorative)
obj(achieve, surface)
punct(achieve, .)
nmod:poss(poverty, its)
nsubj(show, poverty)
root(ROOT, show)
compound:prt(show, up)
advmod(show, immediately)
mark(compare, when)
case(Tiepolo, compare)
case(Tiepolo, with)
obl(show, Tiepolo)
punct(Tiepolo, ,)
advmod(rise, where)
det(rococo, the)
nsubj(rise, rococo)
acl:relcl(Tiepolo, rise)
case(painting, to)
obl(rise, painting)
case(profundity, of)
amod(profundity, extraordinary)
nmod(painting, profundity)
cc(power, and)
conj(profundity, power)
punct(show, . )
det(painting, a)
compound(painting, Tiepolo)
nsubj(universe, painting)
punct(painting, ,)
advmod(confabulate, however)
amod(painting, confabulate)
punct(universe, ,)
cop(universe, be)
det(universe, a)
root(ROOT, universe)
case(tension, of)
nmod(universe, tension)
case(depth, in)
amod(depth, vast)
nmod(tension, depth)
punct(universe, . )
det(pollock, a)
nsubj(object, pollock)
cop(object, be)
det(object, a)
root(ROOT, object)
case(art, of)
nmod(object, art)
punct(object, --)
appos(object, bijouterie)
punct(object, --)
acl(bijouterie, disguise)
advmod(disguise, only)
case(size, by)
nsubj(size, it)
cop(size, be)
amod(size, great)
parataxis(object, size)
punct(object, .)
case(fact, in)
obl(turn, fact)
punct(turn, ,)
mark(enough, once)
det(size, the)
nsubj(enough, size)
cop(enough, be)
amod(enough, big)
advcl(turn, enough)
mark(cover, to)
advcl(enough, cover)
det(wall, a)
amod(wall, whole)
obj(cover, wall)
punct(turn, ,)
nsubj(turn, it)
root(ROOT, turn)
case(nothing, into)
obl(turn, nothing)
amod(nothing, more)
case(wallpaper, than)
advmod(expensive, extremely)
amod(wallpaper, expensive)
obl(more, wallpaper)
punct(turn, .)
advmod(be, now)
expl(be, there)
root(ROOT, be)
nsubj(be, nothing)
amod(nothing, wrong)
case(wallpaper, with)
amod(wallpaper, complicated)
obl(wrong, wallpaper)
punct(be, .)
expl(be, there)
root(ROOT, be)
advmod(be, just)
nsubj(be, more)
case(Tiepolo, to)
nsubj(be, Tiepolo)
punct(be, .)
det(painter, the)
amod(painter, great)
compound(painter, Ashikaga)
compound(painter, brush)
nsubj(paint, painter)
root(ROOT, paint)
obj(paint, wallpaper)
punct(wallpaper, ,)
advmod(paint, too)
punct(wallpaper, --)
case(least, at)
nmod(portable, least)
amod(one, portable)
parataxis(paint, one)
punct(one, ,)
appos(one, screen)
punct(paint, . )
det(process, a)
root(ROOT, process)
case(elimination, of)
nmod(process, elimination)
nsubj(leave, which)
acl:relcl(process, leave)
det(artist, the)
obj(leave, artist)
case(nothing, with)
obl(leave, nothing)
cc(play, but)
det(play, the)
nsubj(sustain, play)
case(material, of)
nmod:poss(material, he)
nmod(play, material)
nmod:npmod(material, themselves)
aux(sustain, can)
advmod(sustain, not)
acl:relcl(process, sustain)
obj(sustain, interest)
case(artist, in)
cc:preconj(artist, either)
nmod(interest, artist)
cc(public, or)
conj(artist, public)
case(long, for)
advmod(long, very)
obl(sustain, long)
punct(sustain, .)
advmod(tend, so)
punct(tend, ,)
case(couple, in)
det(couple, the)
amod(couple, last)
obl(tend, couple)
case(year, of)
nmod(couple, year)
punct(tend, ,)
amod(expressionism, abstract)
nsubj(tend, expressionism)
aux(tend, have)
root(ROOT, tend)
case(suggestion, toward)
amod(suggestion, romantic)
obl(tend, suggestion)
punct(suggestion, --)
appos(suggestion, indication)
case(figure, of)
compound(figure, landscape)
cc(living, or)
conj(landscape, living)
nmod(indication, figure)
punct(tend, .)
obl:npmod(Saxon, Anglo)
punct(Saxon, -)
amod(epic, Saxon)
cc(Greek, and)
conj(Saxon, Greek)
nsubj(provide, epic)
cc:preconj(epic, each)
root(ROOT, provide)
case(occasion, on)
nummod(occasion, two)
obl(provide, occasion)
det(account, a)
advmod(authentic, seemingly)
amod(account, authentic)
obj(provide, account)
case(narration, of)
det(narration, the)
nmod(account, narration)
case(verse, of)
nmod(narration, verse)
case(age, in)
det(age, the)
amod(age, heroic)
nmod(narration, age)
punct(sing, .)
nmod:poss(bard, Hrothgar)
case(Hrothgar, 's)
compound(bard, court)
nsubj(sing, bard)
parataxis(provide, sing)
case(encounter, of)
det(encounter, the)
obl(sing, encounter)
case(Finnsburg, at)
nmod(encounter, Finnsburg)
punct(line, ()
appos(encounter, line)
nummod(line, 1068)
case(1159, -)
nmod(1068, 1159)
punct(line, ))
punct(improvise, ,)
cc(improvise, and)
conj(sing, improvise)
det(tale, the)
obj(improvise, tale)
case(exploit, of)
nmod:poss(exploit, beowulf)
case(beowulf, 's)
nmod(tale, exploit)
case(comparison, in)
det(comparison, a)
amod(comparison, complimentary)
nmod(exploit, comparison)
case(visitor, of)
det(visitor, the)
compound(visitor, geatish)
nmod(comparison, visitor)
case(Sigemund, with)
nmod(visitor, Sigemund)
punct(line, ()
appos(Sigemund, line)
nummod(line, 871)
case(892, -)
nmod(871, 892)
punct(line, ))
punct(sing, ;)
punct(line, ;)
nmod:poss(bard, Alcinous)
case(Alcinous, 's)
compound(bard, court)
nsubj(sing, bard)
parataxis(provide, sing)
case(adultery, of)
det(adultery, the)
amod(adultery, discover)
obl(sing, adultery)
case(Ares, of)
nmod(adultery, Ares)
cc(aphrodite, and)
conj(Ares, aphrodite)
punct(Odyssey, ()
appos(adultery, Odyssey)
nummod(Odyssey, 8)
nummod(Odyssey, 266)
case(366, -)
nmod(266, 366)
punct(266, ))
punct(take, ,)
cc(take, and)
conj(sing, take)
compound:prt(take, up)
det(tale, a)
obj(take, tale)
case(Odysseus, of)
nmod(tale, Odysseus)
mark(listen, while)
det(wanderer, the)
compound(wanderer, Ithacan)
nsubj(listen, wanderer)
advcl(take, listen)
advmod(listen, on)
punct(Odyssey, ()
parataxis(listen, Odyssey)
nummod(Odyssey, 8)
nummod(Odyssey, 499)
case(520, -)
nmod(499, 520)
punct(Odyssey, ))
punct(Odyssey, .)
nsubj(autobiographical, nothing)
case(all, in)
nmod(nothing, all)
nsubj(autobiographical, this)
cop(autobiographical, be)
root(ROOT, autobiographical)
punct(autobiographical, :)
case(poet, unlike)
det(poet, the)
obl(autobiographical, poet)
case(deor, of)
nmod(poet, deor)
cc(Widsith, and)
conj(deor, Widsith)
punct(concerned, ,)
det(poet, the)
nsubj(concerned, poet)
case(beowulf, of)
nmod(poet, beowulf)
cop(concerned, be)
advmod(concerned, not)
parataxis(autobiographical, concerned)
case(identity, with)
nmod:poss(identity, he)
amod(identity, own)
obl(concerned, identity)
punct(concerned, ;)
punct(concerned, ;)
det(poet, the)
nsubj(concerned, poet)
case(Odyssey, of)
det(Odyssey, the)
nmod(poet, Odyssey)
punct(poet, ,)
amod(blind, repute)
amod(poet, blind)
punct(reveal, ,)
parataxis(poet, reveal)
obj(reveal, himself)
advmod(sing, not)
case(all, at)
nmod(sing, all)
case(sing, in)
obl(reveal, sing)
case(Demodocus, of)
det(Demodocus, the)
amod(Demodocus, blind)
compound(Demodocus, minstrel)
nmod(sing, Demodocus)
punct(autobiographical, .)
case(none, since)
obl(intend, none)
case(glimpse, of)
det(glimpse, these)
nmod(none, glimpse)
mark(poetize, of)
acl(glimpse, poetize)
case(writing, without)
obl(poetize, writing)
aux:pass(intend, be)
advcl(be, intend)
mark(incorporate, to)
xcomp(intend, incorporate)
det(signature, a)
obj(incorporate, signature)
case(matter, into)
det(matter, the)
amod(matter, epic)
obl(incorporate, matter)
punct(be, ,)
expl(be, there)
root(ROOT, be)
amod(facie, prima)
punct(facie, -)
compound(evidence, facie)
nsubj(be, evidence)
mark(derive, that)
nsubj(derive, beowulf)
cc(poem, and)
det(poem, the)
amod(poem, homeric)
conj(beowulf, poem)
cc:preconj(beowulf, each)
acl(evidence, derive)
case(tradition, from)
det(tradition, a)
amod(tradition, oral)
obl(derive, tradition)
punct(be, .)
mark(lie, that)
det:predet(tradition, such)
det(tradition, a)
nsubj(lie, tradition)
advcl(hard, lie)
case(Iliad, behind)
det(Iliad, the)
obl(lie, Iliad)
cc(Odyssey, and)
det(Odyssey, the)
conj(Iliad, Odyssey)
punct(hard, ,)
case(least, at)
obl(hard, least)
punct(hard, ,)
cop(hard, be)
root(ROOT, hard)
mark(deny, to)
ccomp(hard, deny)
punct(hard, .)
nsubj(defend, Milman)
flat(Milman, Parry)
advmod(defend, rigorously)
parataxis(hard, defend)
det(observation, the)
obj(defend, observation)
mark(formulaic, that)
det(poem, the)
amod(poem, extant)
amod(poem, homeric)
nsubj(formulaic, poem)
cop(formulaic, be)
advmod(formulaic, largely)
acl(observation, formulaic)
punct(lead, ,)
cc(lead, and)
aux:pass(lead, be)
conj(formulaic, lead)
mark(postulate, to)
xcomp(lead, postulate)
mark(show, that)
nsubj:pass(show, they)
aux(show, could)
aux:pass(show, be)
ccomp(postulate, show)
advmod(formulaic, entirely)
xcomp(show, formulaic)
mark(survive, if)
det(corpus, the)
amod(corpus, complete)
nsubj(survive, corpus)
case(epic, of)
amod(epic, Greek)
nmod(corpus, epic)
advcl(show, survive)
punct(reason, ;)
punct(hard, ;)
nsubj(reason, he)
advmod(reason, further)
parataxis(defend, reason)
mark(indicate, that)
amod(formula, frequent)
nsubj(indicate, formula)
case(verse, in)
amod(verse, epic)
nmod(formula, verse)
ccomp(reason, indicate)
amod(composition, oral)
obj(indicate, composition)
punct(assume, ,)
cc(assume, and)
conj(indicate, assume)
det(corollary, the)
advmod(less, slightly)
advmod(likely, less)
amod(corollary, likely)
obj(assume, corollary)
mark(inclined, that)
amod(epic, oral)
nsubj(inclined, epic)
cop(inclined, be)
acl(corollary, inclined)
case(use, towards)
det(use, the)
obl(inclined, use)
case(formula, of)
nmod(use, formula)
punct(hard, .)
advcl(argue, Proceeding)
case(conclusion, from)
nmod:poss(conclusion, Parry)
case(Parry, 's)
obl(Proceeding, conclusion)
cc(adop, and)
conj(Proceeding, adop)
obj(adop, one)
case(schemata, of)
nmod:poss(schemata, he)
nmod(one, schemata)
punct(argue, ,)
nsubj(argue, Francis)
flat(Francis, P.)
flat(Francis, Magoun)
punct(Francis, ,)
flat(Francis, Jr.)
punct(argue, ,)
root(ROOT, argue)
mark(create, that)
nsubj:pass(create, beowulf)
advmod(create, likewise)
aux:pass(create, be)
ccomp(argue, create)
case(legacy, from)
det(legacy, a)
obl(create, legacy)
case(formula, of)
amod(formula, oral)
nmod(legacy, formula)
acl(formula, inherite)
cc(extend, and)
conj(inherite, extend)
case(bard, by)
obl(extend, bard)
case(generation, of)
amod(generation, successive)
nmod(bard, generation)
punct(strike, ,)
cc(strike, and)
det(thesis, the)
nsubj(strike, thesis)
aux(strike, be)
conj(create, strike)
cc(compelling, and)
conj(strike, compelling)
punct(argue, .)
cc(indicate, yet)
det(inspection, a)
amod(inspection, fresh)
nsubj(indicate, inspection)
aux(indicate, will)
root(ROOT, indicate)
nummod(amendment, one)
amod(amendment, crucial)
obj(indicate, amendment)
punct(indicate, :)
nsubj(formulaic, beowulf)
cc(poem, and)
det(poem, the)
amod(poem, homeric)
conj(beowulf, poem)
cop(formulaic, be)
advmod(formulaic, not)
case(all, at)
obl(formulaic, all)
root(ROOT, formulaic)
case(extent, to)
det(extent, the)
amod(extent, same)
obl(formulaic, extent)
punct(formulaic, .)
det(bondage, the)
nsubj(be, bondage)
amod(bondage, endurable)
case(poet, by)
det(poet, a)
amod(poet, oral)
obl(endurable, poet)
root(ROOT, be)
mark(estimate, to)
aux:pass(estimate, be)
ccomp(be, estimate)
advmod(poet, only)
case(poet, by)
det(poet, a)
advmod(skilful, very)
amod(poet, skilful)
amod(poet, oral)
obl(estimate, poet)
punct(appear, ,)
cc(appear, but)
expl(appear, it)
conj(be, appear)
xcomp(appear, safe)
mark(assume, to)
advcl(safe, assume)
mark(compose, that)
det(narrative, no)
amod(narrative, sustain)
nsubj:pass(compose, narrative)
case(rhyme, in)
nmod(narrative, rhyme)
aux(compose, could)
aux:pass(compose, be)
ccomp(assume, compose)
case(difficulty, without)
amod(difficulty, extreme)
obl(compose, difficulty)
punct(compose, ,)
advmod(language, even)
case(language, in)
det(language, a)
obl(compose, language)
case(inflection, of)
amod(inflection, many)
amod(inflection, terminal)
nmod(language, inflection)
punct(be, .)
nsubj(seem, assonance)
root(ROOT, seem)
advmod(severe, nearly)
case(curb, as)
amod(curb, severe)
det(curb, a)
obl(seem, curb)
punct(seem, ,)
mark(declare, although)
case(passage, in)
det(passage, a)
amod(passage, celebrate)
obl(declare, passage)
nsubj(declare, William)
case(Malmesbury, of)
nmod(William, Malmesbury)
advcl(seem, declare)
mark(intone, that)
det(Song, a)
nsubj:pass(intone, Song)
case(Roland, of)
nmod(Song, Roland)
aux:pass(intone, be)
ccomp(declare, intone)
case(battle, before)
det(battle, the)
obl(intone, battle)
advcl(intone, commence)
case(Hastings, at)
obl(commence, Hastings)
punct(seem, .)
det(line, the)
compound(Saxon, Anglo)
punct(Saxon, -)
compound(line, Saxon)
amod(line, alliterative)
nsubj(impose, line)
cc(hexameter, and)
det(hexameter, the)
amod(hexameter, homeric)
conj(line, hexameter)
advmod(impose, probably)
root(ROOT, impose)
obj(impose, less)
case(restraint, of)
det(restraint, a)
obl(less, restraint)
punct(impose, ;)
punct(impose, ;)
det(verse, the)
nsubj(easy, verse)
case(beowulf, of)
nmod(verse, beowulf)
cc(Iliad, or)
case(Iliad, of)
det(Iliad, the)
conj(beowulf, Iliad)
cc(Odyssey, and)
det(Odyssey, the)
conj(beowulf, Odyssey)
cop(easy, be)
advmod(easy, not)
conj(impose, easy)
mark(create, to)
advcl(easy, create)
cc(impossible, but)
cop(impossible, be)
advmod(impossible, not)
conj(easy, impossible)
case(poet, for)
obl(impossible, poet)
nsubj(develop, who)
aux(develop, have)
acl:relcl(poet, develop)
nmod:poss(talent, they)
obj(develop, talent)
obj(develop, perforce)
mark(earning, in)
advcl(develop, earning)
det(livelihood, a)
obj(earning, livelihood)
punct(impose, .)
cc(valuable, yet)
amod(aid, certain)
nsubj(valuable, aid)
cop(valuable, be)
root(ROOT, valuable)
cc(necessary, and)
advmod(credibly, quite)
advmod(necessary, credibly)
conj(valuable, necessary)
mark(reciting, for)
advcl(necessary, reciting)
amod(stretch, long)
obj(reciting, stretch)
case(verse, of)
nmod(stretch, verse)
case(pause, without)
det(pause, a)
obl(reciting, pause)
punct(valuable, .)
det(poet, the)
nsubj(pause, poet)
case(tradition, in)
det(tradition, a)
amod(tradition, write)
nmod(poet, tradition)
nsubj(blot, who)
advmod(blot, generally)
advmod(blot, never)
acl:relcl(tradition, blot)
det(line, a)
obj(blot, line)
aux(pause, may)
advmod(pause, once)
case(pause, in)
det(pause, a)
compound(pause, while)
root(ROOT, pause)
cc(polish, and)
conj(pause, polish)
mark(incur, without)
advcl(pause, incur)
obj(incur, blame)
punct(pause, .)
cc(pause, but)
det(poet, the)
amod(poet, oral)
nsubj(pause, poet)
aux(pause, can)
advmod(pause, not)
root(ROOT, pause)
punct(pause, ;)
punct(pause, ;)
nsubj(improvise, he)
aux(improvise, must)
parataxis(pause, improvise)
advmod(improvise, continuously)
case(effort, with)
det(effort, no)
amod(effort, apparent)
obl(improvise, effort)
punct(pause, .)
advmod(great, even)
mark(great, though)
det(bondage, the)
nsubj(great, bondage)
case(verse, of)
nmod:poss(verse, he)
nmod(bondage, verse)
cop(great, be)
advmod(great, not)
advmod(great, so)
advcl(great, great)
mark(manage, as)
det(poet, the)
compound(poet, writing)
nsubj(manage, poet)
aux(manage, can)
advcl(great, manage)
punct(great, ,)
expl(great, it)
cop(great, be)
advmod(great, still)
root(ROOT, great)
nsubj(great, enough)
case(he, for)
obl(enough, he)
advmod(impede, often)
mark(impede, to)
aux:pass(impede, be)
advmod(impede, seriously)
advcl(enough, impede)
mark(have, unless)
nsubj(have, he)
advcl(impede, have)
obj(have, aid)
mark(facilitate, to)
xcomp(have, facilitate)
amod(composition, rapid)
obj(facilitate, composition)
punct(great, .)
det(poet, the)
amod(poet, Germanic)
nsubj(have, poet)
root(ROOT, have)
amod(aid, such)
obj(have, aid)
case(kenning, in)
det(kenning, the)
nmod(aid, kenning)
punct(kenning, ,)
nsubj(provide, which)
acl:relcl(kenning, provide)
case(difficulty, for)
det(difficulty, the)
obl(provide, difficulty)
case(alliteration, of)
nmod(difficulty, alliteration)
punct(have, ;)
punct(have, ;)
det(poet, the)
amod(poet, homeric)
nsubj(have, poet)
parataxis(have, have)
obj(have, epithet)
punct(epithet, ,)
nsubj(provide, which)
acl:relcl(epithet, provide)
case(need, for)
amod(need, recurre)
obl(provide, need)
case(hexameter, in)
det(hexameter, the)
nmod(need, hexameter)
punct(have, .)
det(poet, either)
nsubj(quickly, poet)
aux(quickly, could)
advmod(select, quickly)
cc(select, and)
advmod(select, easily)
root(ROOT, select)
obj(select, word)
cc(phrase, or)
conj(word, phrase)
mark(supply, to)
advcl(select, supply)
nmod:poss(requirement, he)
amod(requirement, immediate)
obj(supply, requirement)
mark(chant, as)
nsubj(chant, he)
advcl(supply, chant)
compound:prt(chant, out)
nmod:poss(line, he)
obj(chant, line)
punct(chant, ,)
mark(make, because)
det(kenning, the)
nsubj(make, kenning)
cc(epithet, and)
det(epithet, the)
conj(kenning, epithet)
advcl(chant, make)
xcomp(make, possible)
det(construction, the)
obj(make, construction)
case(system, of)
nmod(construction, system)
case(synonym, of)
amod(synonym, numerous)
nmod(system, synonym)
case(common, for)
det(common, the)
amod(common, chief)
nmod(synonym, common)
cc(noun, and)
amod(noun, proper)
conj(common, noun)
punct(select, .)
amod(synonym, other)
nsubj(serve, synonym)
aux(serve, could)
advmod(serve, of)
fixed(of, course)
root(ROOT, serve)
det(function, the)
amod(function, same)
obj(serve, function)
punct(speak, ,)
cc(speak, and)
case(sake, for)
det(sake, the)
obl(speak, sake)
case(ease, of)
nmod(sake, ease)
nsubj(speak, I)
aux(speak, shall)
conj(serve, speak)
case(kenning, of)
obl(speak, kenning)
cc(epithet, and)
conj(kenning, epithet)
case(sense, in)
det(sense, the)
amod(sense, widest)
cc(loosest, and)
conj(widest, loosest)
amod(sense, possible)
obl(speak, sense)
punct(name, ,)
cc(name, and)
conj(sense, name)
punct(ken, ,)
case(example, for)
obl(ken, example)
punct(ken, ,)
nsubj(ken, Gar)
punct(Dene, -)
flat(Gar, Dene)
det(ken, a)
appos(name, ken)
case(Danes, for)
det(Danes, the)
nmod(ken, Danes)
punct(serve, .)
root(ROOT, Verbal)
cc(element, and)
amod(element, adverbial)
conj(Verbal, element)
advmod(participate, too)
acl(Verbal, participate)
case(diction, in)
det(diction, each)
amod(diction, epic)
obl(participate, diction)
punct(sufficient, ,)
cc(sufficient, but)
expl(sufficient, it)
cop(sufficient, be)
case(sufficient, for)
det(sufficient, the)
amod(sufficient, present)
conj(participate, sufficient)
mark(mark, to)
csubj(sufficient, mark)
det(supply, the)
amod(supply, large)
amod(supply, nominal)
cc(adjectival, and)
conj(nominal, adjectival)
obj(mark, supply)
case(near-equivalent, of)
amod(near-equivalent, semantic)
nmod(supply, near-equivalent)
punct(designate, ,)
cc(designate, and)
mark(designate, to)
conj(mark, designate)
det(member, the)
obj(designate, member)
case(system, of)
det(system, any)
nmod(member, system)
case(equivalent, of)
nmod(system, equivalent)
case(formula, as)
amod(formula, basic)
nmod(system, formula)
case(language, of)
det(language, the)
amod(language, poetic)
nmod(formula, language)
punct(Verbal, .)
advcl(say, limited)
case(line, to)
det(line, a)
amod(line, few)
nummod(line, thousand)
obl(limited, line)
case(verse, of)
amod(verse, heroic)
nmod(line, verse)
case(Saxon, in)
compound(Saxon, Anglo)
punct(Saxon, -)
nmod(line, Saxon)
case(dialect, as)
case(dialect, in)
det(dialect, the)
amod(dialect, other)
amod(dialect, Germanic)
obl(say, dialect)
punct(say, ,)
nsubj(say, we)
aux(say, can)
advmod(say, not)
root(ROOT, say)
advmod(frequently, how)
advmod(recur, frequently)
det(kenning, the)
nsubj(recur, kenning)
case(beowulf, in)
nmod(kenning, beowulf)
ccomp(say, recur)
case(epic, in)
amod(epic, contemporary)
obl(recur, epic)
case(soil, on)
det(soil, the)
amod(soil, same)
obl(recur, soil)
punct(say, .)
cc(say, but)
nsubj(say, we)
aux(say, can)
root(ROOT, say)
mark(seem, that)
case(poet, since)
det(poet, a)
compound(poet, writing)
obl(seem, poet)
punct(poet, ,)
case(leisure, with)
nmod(poet, leisure)
case(he, before)
nmod(leisure, he)
punct(seem, ,)
aux(seem, would)
ccomp(say, seem)
xcomp(seem, unlikely)
mark(invent, to)
advcl(unlikely, invent)
det(technique, a)
obj(invent, technique)
case(circumlocution, base)
case(circumlocution, upon)
amod(circumlocution, frequent)
cc(substantial, and)
conj(frequent, substantial)
obl(invent, circumlocution)
punct(ascribe, ,)
det(kenning, the)
nsubj:pass(ascribe, kenning)
case(epithet, like)
det(epithet, the)
nmod(kenning, epithet)
aux(ascribe, must)
advmod(ascribe, reasonably)
aux:pass(ascribe, be)
ccomp(say, ascribe)
case(tradition, to)
det(tradition, a)
amod(tradition, oral)
obl(ascribe, tradition)
punct(say, .)
nsubj(argue, one)
case(Homerists, of)
det(Homerists, the)
amod(Homerists, greatest)
nmod(one, Homerists)
case(time, of)
nmod:poss(time, we)
nmod(Homerists, time)
punct(Frederick, ,)
appos(Homerists, Frederick)
flat(Frederick, M.)
flat(Frederick, combellack)
punct(argue, ,)
root(ROOT, argue)
mark(assume, that)
mark(assume, when)
nsubj:pass(assume, it)
aux:pass(assume, be)
advcl(argue, assume)
det(Iliad, the)
nsubj(poem, Iliad)
cc(Odyssey, and)
det(Odyssey, the)
conj(Iliad, Odyssey)
cop(poem, be)
amod(poem, oral)
root(ROOT, poem)
punct(poem, ,)
det(redactor, the)
amod(redactor, postulate)
amod(redactor, single)
nsubj:pass(credite, redactor)
acl(redactor, call)
xcomp(call, Homer)
aux(credite, can)
advmod(credite, not)
conj(poem, be)
cc:preconj(credite, either)
parataxis(poem, credite)
case(originality, with)
cc(deny, or)
conj(credite, deny)
obj(deny, originality)
case(choice, in)
obl(deny, choice)
case(phrase, of)
nmod(choice, phrase)
punct(poem, .)
det(example, any)
nsubj:pass(create, example)
case(diction, of)
amod(diction, grand)
cc(exquisite, or)
conj(grand, exquisite)
nmod(example, diction)
aux(create, may)
aux(create, have)
aux:pass(create, be)
root(ROOT, create)
case(poet, by)
det(poet, the)
obl(create, poet)
nsubj(compile, who)
acl:relcl(poet, compile)
amod(lay, numerous)
obj(compile, lay)
case(work, into)
det(work, the)
nummod(work, two)
obl(compile, work)
nsubj(possess, we)
acl:relcl(work, possess)
cc(one, or)
aux(one, may)
cop(one, be)
case(one, due)
fixed(due, to)
conj(compile, one)
case(craftsmen, of)
nmod:poss(craftsmen, he)
advmod(unknown, completely)
amod(craftsmen, unknown)
amod(craftsmen, fellow)
punct(craftsmen, -)
nmod(one, craftsmen)
punct(create, .)
det(quest, the)
nsubj(have, quest)
case(Homer, of)
det(Homer, the)
amod(Homer, historical)
nmod(quest, Homer)
aux(have, be)
advmod(have, likely)
advmod(have, never)
mark(have, to)
root(ROOT, have)
amod(success, further)
obj(have, success)
punct(have, ;)
punct(have, ;)
det(word, no)
amod(word, individual)
nsubj(have, word)
case(Iliad, in)
det(Iliad, the)
nmod(word, Iliad)
cc(Odyssey, or)
det(Odyssey, the)
conj(Iliad, Odyssey)
aux(credite, can)
aux:pass(credite, be)
acl:relcl(word, credite)
case(man, to)
det(man, any)
nummod(man, one)
obl(credite, man)
punct(credite, ;)
punct(credite, ;)
det(element, no)
advmod(effective, strikingly)
amod(element, effective)
nsubj:pass(credite, element)
case(speech, of)
nmod(element, speech)
case(poem, in)
det(poem, the)
amod(poem, extant)
nmod(speech, poem)
aux(say, can)
case(assurance, with)
obl(say, assurance)
aux:pass(say, be)
acl:relcl(element, say)
advmod(commonplace, not)
mark(commonplace, to)
aux(commonplace, have)
cop(commonplace, be)
det(commonplace, a)
xcomp(say, commonplace)
case(corpus, in)
det(corpus, the)
amod(corpus, vaster)
amod(corpus, epic)
obl(commonplace, corpus)
nsubj(exist, that)
aux(exist, may)
aux(exist, have)
acl:relcl(corpus, exist)
case(beginning, at)
det(beginning, the)
obl(exist, beginning)
case(millennium, of)
det(millennium, the)
amod(millennium, first)
nmod(beginning, millennium)
case(Christ, before)
nmod(millennium, Christ)
punct(interest, .)
det(observation, this)
nsubj(interest, observation)
cop(interest, be)
case(interest, of)
conj(exist, interest)
advmod(only, not)
cc:preconj(student, only)
case(student, to)
obl(interest, student)
case(poetry, of)
amod(poetry, homeric)
nmod(student, poetry)
cc(student, but)
case(student, to)
conj(student, student)
case(poetry, of)
compound(Saxon, Anglo)
punct(Saxon, -)
compound(poetry, Saxon)
nmod(student, poetry)
advmod(student, as)
fixed(as, well)
punct(interest, .)
case(extent, to)
det(extent, the)
obl(suspect, extent)
mark(tell, that)
det(tale, a)
nsubj:pass(tell, tale)
aux:pass(tell, be)
advmod(tell, twice)
acl(extent, tell)
punct(suspect, ,)
nmod:poss(author, its)
amod(author, final)
nsubj(suspect, author)
aux(suspect, must)
cop(suspect, be)
root(ROOT, suspect)
punct(suspect, ,)
mark(misdemeanor, although)
nsubj(misdemeanor, plagiarism)
case(tradition, in)
det(tradition, a)
amod(tradition, oral)
nmod(plagiarism, tradition)
cop(misdemeanor, be)
advmod(misdemeanor, less)
det(misdemeanor, a)
advcl(suspect, misdemeanor)
case(dicendi, than)
det(dicendi, the)
amod(dicendi, standard)
compound(dicendi, modus)
nmod(misdemeanor, dicendi)
punct(suspect, .)
nsubj(argue, combellack)
root(ROOT, argue)
advmod(argue, further)
punct(here, ,)
cc(here, and)
conj(argue, here)
nsubj(make, he)
conj(argue, make)
nmod:poss(point, he)
amod(point, main)
obj(make, point)
punct(argue, ,)
nsubj(once, that)
advmod(make, once)
det(Iliad, the)
nsubj:pass(think, Iliad)
cc(Odyssey, and)
det(Odyssey, the)
conj(Iliad, Odyssey)
aux:pass(think, be)
root(ROOT, think)
amod(poem, formulaic)
obj(think, poem)
acl(poem, compose)
case(audience, for)
det(audience, a)
obl(compose, audience)
amod(audience, accustom)
case(poetry, to)
amod(poetry, formulaic)
obl(accustom, poetry)
punct(deprive, ,)
amod(critic, homeric)
nsubj:pass(deprive, critic)
aux:pass(deprive, be)
conj(think, deprive)
case(domain, of)
det(domain, a)
amod(domain, entire)
obl(deprive, domain)
nsubj(find, they)
advmod(find, previously)
acl:relcl(domain, find)
obj(find, arable)
punct(think, .)
case(exception, with)
det(important, a)
amod(important, few)
amod(exception, important)
cc(exception, and)
det(exception, a)
amod(exception, few)
advmod(unimportant, more)
amod(exception, unimportant)
obl(deem, exception)
punct(deem, ,)
det(expression, no)
nsubj:pass(deem, expression)
aux(deem, can)
aux:pass(deem, be)
root(ROOT, deem)
compound(juste, le)
compound(juste, mot)
obj(deem, juste)
case(context, for)
nmod:poss(context, its)
obl(deem, context)
punct(deem, ,)
mark(expression, because)
nsubj(expression, each)
cop(expression, be)
advmod(expression, very)
advmod(expression, probably)
det(expression, the)
amod(expression, only)
advcl(deem, expression)
obj(allow, that)
advmod(establish, long)
punct(establish, -)
amod(practice, establish)
nsubj(expression, practice)
cc(ease, and)
conj(practice, ease)
case(recitation, of)
amod(recitation, rapid)
nmod(ease, recitation)
aux(allow, would)
acl:relcl(practice, allow)
punct(word, .)
obj(allow, word)
cc(phrase, or)
conj(word, phrase)
obj(admire, that)
nsubj(admire, connoisseur)
aux(admire, have)
acl:relcl(word, admire)
mark(lose, as)
nsubj(lose, handsome)
cc(ironic, or)
conj(handsome, ironic)
cc(humorous, or)
conj(handsome, humorous)
aux(lose, must)
advmod(lose, therefore)
advcl(admire, lose)
obj(lose, merit)
cc(become, and)
conj(lose, become)
xcomp(become, regard)
case(server, as)
amod(server, mere)
amod(server, inevitable)
compound(server, time)
punct(server, -)
obl(regard, server)
punct(server, ,)
advmod(accurate, sometimes)
amod(server, accurate)
cc(not, and)
advmod(not, sometimes)
conj(accurate, not)
punct(deem, .)
det(observation, this)
nsubj(have, observation)
advmod(have, too)
aux(have, may)
root(ROOT, have)
obj(have, reference)
case(poetry, to)
compound(Saxon, Anglo)
punct(Saxon, -)
amod(poetry, Saxon)
nmod(reference, poetry)
punct(have, .)
case(extent, to)
det(extent, the)
obl(suggest, extent)
mark(formulaic, that)
det(language, a)
nsubj(formulaic, language)
cop(formulaic, be)
acl(extent, formulaic)
punct(regard, ,)
nmod:poss(component, its)
amod(component, individual)
nsubj:pass(regard, component)
aux(regard, must)
aux:pass(regard, be)
ccomp(formulaic, regard)
mark(distinguished, as)
advmod(more, no)
advmod(distinguished, more)
advcl(regard, distinguished)
case(clich, than)
amod(clich, other)
obl(distinguished, clich)
punct(suggest, .)
nsubj(suggest, W.)
flat(W., F.)
flat(W., Bryan)
root(ROOT, suggest)
mark(select, that)
amod(kenning, certain)
nsubj:pass(select, kenning)
case(beowulf, in)
nmod(kenning, beowulf)
aux:pass(select, be)
ccomp(suggest, select)
advmod(select, sometimes)
case(appropriateness, for)
obl(select, appropriateness)
cc(inappropriateness, and)
advmod(inappropriateness, sometimes)
case(inappropriateness, for)
amod(inappropriateness, ironic)
conj(appropriateness, inappropriateness)
punct(appear, ,)
cc(appear, but)
det:predet(view, such)
det(view, a)
nsubj(appear, view)
aux(appear, would)
conj(select, appear)
xcomp(appear, untenable)
mark(deny, unless)
nsubj:pass(deny, it)
aux:pass(deny, be)
advcl(appear, deny)
mark(formulaic, that)
det(language, the)
nsubj(formulaic, language)
case(beowulf, of)
nmod(language, beowulf)
cop(formulaic, be)
ccomp(deny, formulaic)
punct(suggest, .)
mark(use, if)
det(master, the)
nsubj(use, master)
case(scop, of)
nmod(master, scop)
nsubj(responsible, who)
cop(responsible, be)
advmod(responsible, most)
acl:relcl(master, responsible)
case(poem, for)
det(poem, the)
obl(responsible, poem)
advmod(use, ever)
advcl(deprive, use)
obj(use, kenning)
nsubj(traditional, that)
cop(traditional, be)
acl:relcl(kenning, traditional)
punct(deprive, ,)
nsubj:pass(deprive, he)
aux:pass(deprive, be)
case(least, at)
obl(partly, least)
advmod(deprive, partly)
root(ROOT, deprive)
case(free, of)
obl(deprive, free)
aux(deprive, will)
cc(inclined, and)
advmod(inclined, not)
conj(will, inclined)
case(misuse, towards)
amod(misuse, shrewd)
cc(sophisticated, and)
conj(shrewd, sophisticated)
obl(inclined, misuse)
case(element, of)
compound(element, speech)
nmod(misuse, element)
punct(deprive, .)
mark(find, once)
amod(phrase, many)
amod(phrase, significant)
nsubj:pass(find, phrase)
aux:pass(find, be)
advcl(be, find)
case(theory, in)
obl(find, theory)
cc(practice, or)
case(practice, in)
amod(practice, recurrent)
conj(theory, practice)
mark(provide, to)
acl(practice, provide)
case(necessity, for)
amod(necessity, prosodic)
obl(provide, necessity)
punct(be, ,)
nsubj(be, they)
root(ROOT, be)
advmod(be, not)
mark(defend, to)
aux:pass(defend, be)
xcomp(be, defend)
case(property, for)
nmod:poss(property, they)
amod(property, semantic)
obl(defend, property)
case(context, in)
amod(context, isolate)
nmod(property, context)
punct(be, .)
expl(false, it)
cop(false, be)
root(ROOT, false)
mark(certain, to)
cop(certain, be)
csubj(false, certain)
mark(discover, of)
aux(discover, have)
advcl(certain, discover)
case(language, in)
det(language, the)
obl(discover, language)
case(effect, of)
compound(effect, beowulf)
amod(effect, such)
nmod(language, effect)
case(irony, as)
amod(irony, intentional)
nmod(effect, irony)
punct(false, .)
advmod(find, yet)
punct(find, ,)
mark(turn, if)
det(argument, the)
nsubj:pass(turn, argument)
aux:pass(turn, be)
advcl(find, turn)
advmod(turn, awry)
punct(find, ,)
expl(find, there)
aux(find, may)
aux:pass(find, be)
root(ROOT, find)
det(deal, a)
amod(deal, great)
obj(find, deal)
case(view, in)
nmod:poss(view, Bryan)
case(Bryan, 's)
nmod(deal, view)
punct(view, ,)
case(all, after)
obl(find, all)
punct(find, . )
det(element, a)
amod(element, formulaic)
nsubj:pass(hold, element)
aux(hold, need)
advmod(hold, not)
aux:pass(hold, be)
root(ROOT, hold)
xcomp(hold, meaningless)
advmod(hold, merely)
mark(select, because)
nsubj:pass(select, it)
aux:pass(select, be)
advcl(hold, select)
case(reflection, with)
amod(reflection, little)
amod(reflection, conscious)
obl(select, reflection)
punct(server, .)
compound(server, time)
punct(server, -)
obl(select, server)
punct(hold, ,)
mark(be, though)
det(expression, the)
amod(expression, periphrastic)
nsubj(be, expression)
advcl(handsome, be)
punct(handsome, ,)
nsubj(handsome, they)
aux(handsome, may)
advmod(handsome, nevertheless)
cop(handsome, be)
conj(hold, handsome)
cc(ironic, or)
conj(handsome, ironic)
cc(humorous, or)
conj(handsome, humorous)
punct(hold, . )
det(evolution, a)
amod(evolution, long)
nsubj(cause, evolution)
case(tradition, in)
det(tradition, a)
amod(tradition, oral)
nmod(evolution, tradition)
root(ROOT, cause)
det(language, the)
amod(language, poetic)
obj(cause, language)
case(age, of)
det(age, the)
amod(age, heroic)
nmod(language, age)
mark(base, to)
aux:pass(base, be)
acl(age, base)
case(formula, upon)
obl(base, formula)
nsubj(show, that)
acl:relcl(formula, show)
det(quality, the)
amod(quality, important)
obj(show, quality)
case(thing, of)
nmod(quality, thing)
punct(accurate, ,)
cc(accurate, and)
det(formula, these)
nsubj(accurate, formula)
cop(accurate, be)
advmod(accurate, therefore)
advmod(accurate, potentially)
cc(accurate, rather)
fixed(rather, than)
advmod(accurate, always)
advmod(accurate, actually)
conj(know, accurate)
punct(accurate, .)
discourse(accurate, true)
punct(know, ,)
nsubj(know, we)
aux(know, do)
advmod(know, not)
parataxis(cause, know)
advmod(regard, how)
nsubj:pass(regard, they)
aux:pass(regard, be)
ccomp(know, regard)
case(day, in)
nmod:poss(day, they)
obl(regard, day)
punct(believe, ,)
cc(believe, but)
nsubj(believe, we)
aux(believe, need)
advmod(believe, not)
conj(cause, believe)
det(audience, the)
amod(audience, epic)
obj(believe, audience)
mark(insensitive, to)
aux(insensitive, have)
cop(insensitive, be)
advmod(insensitive, more)
ccomp(believe, insensitive)
case(formula, to)
det(formula, the)
obl(insensitive, formula)
case(scholar, than)
det(scholar, the)
amod(scholar, numerous)
nmod(formula, scholar)
case(time, of)
amod(time, modern)
nmod(scholar, time)
nsubj(read, who)
aux(read, have)
acl:relcl(scholar, read)
amod(poetry, Germanic)
cc(homeric, or)
conj(Germanic, homeric)
obj(read, poetry)
det:predet(life, all)
nmod:poss(life, they)
obj(read, life)
cc(find, and)
advmod(find, still)
conj(read, find)
obj(find, much)
mark(admire, to)
acl(much, admire)
case(occurrence, in)
amod(occurrence, occasional)
obl(admire, occurrence)
case(phrase, of)
det(phrase, the)
advmod(familiar, most)
amod(phrase, familiar)
nmod(occurrence, phrase)
punct(cause, .)
nsubj:pass(choose, Nouns)
cc(adjective, and)
conj(Nouns, adjective)
case(tradition, in)
det(tradition, a)
amod(tradition, write)
nmod(Nouns, tradition)
aux:pass(choose, be)
root(ROOT, choose)
case(nonce, for)
det(nonce, the)
obl(choose, nonce)
punct(choose, ;)
punct(choose, ;)
case(tradition, in)
det(tradition, a)
amod(tradition, oral)
obl(choose, tradition)
nsubj:pass(choose, they)
aux(choose, may)
aux:pass(choose, be)
conj(choose, choose)
case(corpus, for)
det(corpus, the)
amod(corpus, entire)
amod(corpus, epic)
obl(choose, corpus)
punct(tend, ,)
cc(tend, and)
conj(choose, tend)
case(idealization, towards)
obl(tend, idealization)
cc(delineation, rather)
fixed(rather, than)
amod(delineation, distinctive)
conj(idealization, delineation)
punct(choose, .)
nsubj(be, Reliance)
root(ROOT, be)
advmod(place, therefore)
advmod(place, not)
mark(place, to)
aux:pass(place, be)
ccomp(be, place)
case(particular, upon)
det(particular, the)
amod(particular, archaeological)
obl(place, particular)
case(poem, in)
det(poem, a)
amod(poem, oral)
nmod(particular, poem)
punct(place, ;)
punct(place, ;)
det(one, no)
punct(hope, -)
nsubj(hope, one)
nsubj(hope, today)
aux(hope, would)
parataxis(place, hope)
mark(discover, to)
xcomp(hope, discover)
det(ruin, the)
amod(ruin, unmistakable)
obj(discover, ruin)
case(Heorot, of)
nmod(ruin, Heorot)
cc(palace, or)
det(palace, the)
conj(Heorot, palace)
case(priam, of)
nmod(palace, priam)
punct(be, . )
det(ship, a)
nsubj:pass(call, ship)
case(dock, at)
amod(dock, dry)
punct(dock, -)
nmod(ship, dock)
aux(call, could)
aux:pass(call, be)
root(ROOT, call)
det(floater, a)
compound(neck, foamy)
punct(neck, -)
amod(floater, neck)
obj(call, floater)
case(Saxon, in)
compound(Saxon, Anglo)
punct(Saxon, -)
nmod(floater, Saxon)
cc(ship, or)
det(ship, a)
compound(ship, swift)
conj(floater, ship)
case(Greek, in)
nmod(ship, Greek)
punct(call, .)
advmod(defenseless, even)
mark(defenseless, when)
amod(ship, defenseless)
case(weapon, of)
obl(defenseless, weapon)
det(Danes, the)
nsubj(Dene, Danes)
aux(Dene, would)
cop(Dene, be)
compound(Dene, Gar)
punct(Dene, -)
nsubj(defenseless, Dene)
punct(Hrothgar, ()
mark(Hrothgar, as)
nmod:poss(king, they)
nsubj(Hrothgar, king)
cop(Hrothgar, be)
advcl(Dene, Hrothgar)
punct(Hrothgar, ))
cc(EUMMELIHS, and)
nsubj(EUMMELIHS, priam)
aux(EUMMELIHS, would)
cop(EUMMELIHS, be)
conj(Hrothgar, EUMMELIHS)
punct(EUMMELIHS, .)
nsubj(EUMMELIHS, Achilles)
punct(Achilles, ,)
case(siegfried, like)
nmod(Achilles, siegfried)
case(Nibelungenlied, in)
det(Nibelungenlied, the)
nmod(siegfried, Nibelungenlied)
punct(swiftest, ,)
cop(swiftest, be)
advmod(swiftest, potentially)
det(swiftest, the)
conj(EUMMELIHS, swiftest)
case(man, of)
obl(swiftest, man)
cc(call, and)
aux(call, may)
advmod(call, accordingly)
aux:pass(call, be)
conj(swiftest, call)
compound(foot, swift)
punct(foot, -)
xcomp(call, foot)
advmod(stand, even)
mark(stand, when)
nsubj(stand, he)
advcl(call, stand)
advmod(stand, idle)
punct(call, .)
case(Coriolanus, in)
obl(use, Coriolanus)
det(agnomen, the)
nsubj:pass(use, agnomen)
case(Marcius, of)
nmod(agnomen, Marcius)
aux:pass(use, be)
root(ROOT, use)
advmod(use, deliberately)
cc(pointedly, and)
conj(deliberately, pointedly)
punct(use, ,)
cc(use, but)
det(epithet, the)
amod(epithet, homeric)
nsubj:pass(use, epithet)
cc(kenning, and)
det(kenning, the)
compound(Saxon, Anglo)
punct(Saxon, -)
compound(kenning, Saxon)
conj(epithet, kenning)
aux:pass(use, be)
conj(use, use)
advmod(use, casually)
cc(recall, and)
conj(use, recall)
case(hearer, to)
det(hearer, the)
obl(recall, hearer)
punct(story, ``)
det(story, a)
amod(story, familiar)
appos(hearer, story)
cc(situation, or)
conj(story, situation)
cc(quality, or)
det(quality, a)
amod(quality, useful)
cc(pleasant, or)
conj(useful, pleasant)
conj(story, quality)
case(referent, of)
det(referent, the)
nmod(quality, referent)
punct(quality, '')
punct(story, .)
det(language, the)
amod(language, epic)
nsubj(servant, language)
cop(servant, be)
advmod(servant, not)
advmod(servant, entirely)
det(servant, the)
conj(story, servant)
case(poet, of)
det(poet, the)
nmod(servant, poet)
punct(servant, ;)
punct(servant, ;)
nsubj(master, it)
cop(master, be)
advmod(master, partly)
nmod:poss(master, he)
parataxis(servant, master)
punct(use, .)
det(poet, the)
nmod:poss(intention, poet)
case(poet, 's)
nsubj(difficult, intention)
cop(difficult, be)
root(ROOT, difficult)
mark(discern, to)
ccomp(difficult, discern)
cc(unimportant, and)
punct(unimportant, ,)
case(biographer, except)
case(biographer, to)
obl(discern, biographer)
punct(unimportant, ,)
amod(biographer, unimportant)
punct(difficult, ;)
punct(difficult, ;)
det(language, the)
nsubj(object, language)
punct(language, ,)
advmod(object, however)
punct(object, ,)
cop(object, be)
det(object, a)
amod(object, proper)
parataxis(difficult, object)
case(scrutiny, of)
nmod(object, scrutiny)
punct(palpable, ,)
cc(palpable, and)
det(effect, the)
nsubj(palpable, effect)
case(language, of)
det(language, the)
nmod(effect, language)
cop(palpable, be)
conj(object, palpable)
advmod(inevitable, even)
mark(inevitable, if)
advmod(inevitable, sometimes)
advcl(palpable, inevitable)
punct(difficult, .)
nsubj(appear, beowulf)
cc(poem, and)
det(poem, the)
amod(poem, homeric)
conj(beowulf, poem)
root(ROOT, appear)
amod(composition, oral)
obj(appear, composition)
punct(appear, .)
cc(write, yet)
nsubj:pass(write, they)
aux:pass(write, be)
root(ROOT, write)
punct(write, ;)
punct(write, ;)
case(stage, at)
det(stage, some)
obl(transcribe, stage)
case(evolution, in)
nmod:poss(evolution, they)
nmod(stage, evolution)
nsubj:pass(transcribe, they)
aux:pass(transcribe, be)
ccomp(write, transcribe)
punct(write, .)
nsubj(suggest, albert)
flat(albert, B.)
flat(albert, Lord)
root(ROOT, suggest)
mark(dictate, that)
det(poem, the)
amod(poem, homeric)
nsubj:pass(dictate, poem)
aux:pass(dictate, be)
ccomp(suggest, dictate)
case(scribe, to)
det(scribe, a)
obl(dictate, scribe)
case(minstrel, by)
det(minstrel, a)
nmod(scribe, minstrel)
nsubj(hold, who)
acl:relcl(minstrel, hold)
case(mind, in)
nmod:poss(mind, he)
obl(hold, mind)
det(poem, the)
nsubj(mature, poem)
advmod(mature, fully)
conj(hold, mature)
cc(possess, but)
aux(possess, do)
advmod(possess, not)
nsubj(possess, himself)
conj(mature, possess)
det(knowledge, the)
obj(possess, knowledge)
case(writing, of)
nmod(knowledge, writing)
mark(useless, since)
nsubj(useless, it)
aux(useless, would)
cop(useless, be)
advcl(possess, useless)
case(guild, to)
nmod:poss(guild, he)
obl(useless, guild)
punct(argue, ,)
cc(argue, and)
nsubj(argue, Magoun)
conj(suggest, argue)
mark(dictate, that)
det(poet, the)
compound(poet, beowulf)
nsubj(dictate, poet)
cc(Cynewulf, and)
conj(poet, Cynewulf)
aux(dictate, may)
aux(dictate, have)
ccomp(argue, dictate)
nmod:poss(verse, they)
obj(dictate, verse)
case(fashion, in)
det(fashion, the)
amod(fashion, same)
obl(dictate, fashion)
punct(suggest, .)
det(explanation, this)
nsubj(attractive, explanation)
cop(attractive, be)
root(ROOT, attractive)
punct(vitiat, ,)
cc(vitiat, but)
aux:pass(vitiat, be)
conj(attractive, vitiat)
case(least, at)
nmod(part, least)
case(part, in)
obl(vitiat, part)
case(observation, by)
det(observation, the)
nmod(part, observation)
mark(man, that)
nsubj(man, Cynewulf)
punct(man, ,)
mark(use, though)
nsubj(use, he)
advcl(man, use)
obj(use, kenning)
case(manner, in)
det(manner, the)
amod(manner, traditional)
obl(use, manner)
punct(man, ,)
cop(man, be)
det(man, a)
amod(man, literate)
acl(observation, man)
nsubj(inscribe, who)
nummod(time, four)
nsubj(inscribe, time)
acl:relcl(man, inscribe)
nmod:poss(name, he)
obj(inscribe, name)
case(rune, by)
obl(inscribe, rune)
case(work, into)
nmod:poss(work, he)
obl(inscribe, work)
punct(attractive, .)
mark(literate, if)
nsubj(literate, Cynewulf)
cop(literate, be)
advcl(be, literate)
punct(be, ,)
det(poet, the)
compound(poet, beowulf)
nsubj(be, poet)
aux(be, may)
aux(be, have)
root(ROOT, be)
advmod(be, also)
punct(redactor, ,)
cc(so, and)
advmod(redactor, so)
aux(redactor, may)
det(redactor, the)
amod(redactor, final)
conj(be, redactor)
case(Iliad, of)
det(Iliad, the)
nmod(redactor, Iliad)
cc(Odyssey, and)
det(Odyssey, the)
conj(Iliad, Odyssey)
punct(be, .)
case(lieu, in)
obl(conceive, lieu)
case(amanuensis, of)
det(amanuensis, the)
nmod(lieu, amanuensis)
case(bard, to)
det(bard, the)
amod(bard, blind)
cc(illiterate, or)
conj(blind, illiterate)
nmod(amanuensis, bard)
punct(conceive, ,)
nsubj(conceive, one)
aux(conceive, may)
root(ROOT, conceive)
case(man, of)
det(man, a)
obl(conceive, man)
nsubj(hear, who)
acl:relcl(man, hear)
det(store, a)
amod(store, vast)
obj(hear, store)
case(poetry, of)
amod(poetry, oral)
nmod(store, poetry)
acl(poetry, recited)
punct(become, ,)
cc(become, and)
conj(hear, become)
advmod(familiar, intimately)
xcomp(become, familiar)
case(aid, with)
det(aid, the)
amod(aid, establish)
obl(familiar, aid)
case(poetize, to)
nmod(aid, poetize)
punct(write, ,)
cc(write, and)
nsubj(write, himself)
conj(conceive, write)
nmod:poss(composition, he)
amod(composition, own)
obj(write, composition)
cc(edition, or)
nmod:poss(edition, he)
conj(composition, edition)
case(composition, of)
det(composition, the)
nmod(edition, composition)
case(past, of)
det(past, the)
nmod(composition, past)
punct(conceive, .)
amod(theory, other)
nsubj(compatible, theory)
case(origin, of)
nmod(theory, origin)
cop(compatible, be)
root(ROOT, compatible)
case(theory, with)
det(theory, the)
amod(theory, formulaic)
obl(compatible, theory)
punct(compatible, :)
nsubj(contain, beowulf)
aux(contain, may)
root(ROOT, contain)
det(design, a)
obj(contain, design)
case(terror, for)
nmod(design, terror)
punct(have, ,)
cc(have, and)
det(Iliad, the)
nsubj(have, Iliad)
aux(have, may)
conj(contain, have)
det(pattern, a)
amod(pattern, vast)
compound(proteron, hysteron)
punct(proteron, -)
compound(pattern, proteron)
obj(have, pattern)
acl(pattern, answer)
case(pattern, to)
det(pattern, a)
amod(pattern, ceramic)
obl(answer, pattern)
acl(pattern, produce)
case(period, during)
det(period, the)
amod(period, Geometric)
obl(produce, period)
case(pottery, in)
nmod(period, pottery)
punct(contain, .)
det(account, the)
nsubj(rest, account)
case(growth, of)
det(growth, the)
nmod(account, growth)
cc(transcription, and)
amod(transcription, final)
conj(growth, transcription)
case(epic, of)
det(epic, these)
nmod(transcription, epic)
root(ROOT, rest)
advmod(rest, partly)
punct(rest, ,)
advmod(rest, however)
punct(rest, ,)
case(degree, upon)
det(degree, the)
obl(rest, degree)
case(which, to)
obl(formulaic, which)
nsubj(formulaic, they)
cop(formulaic, be)
acl:relcl(degree, formulaic)
punct(rest, .)
nsubj(count, Carl)
flat(Carl, Eduard)
flat(Carl, Schmidt)
root(ROOT, count)
nummod(line, 1804)
amod(line, different)
obj(count, line)
xcomp(count, repeat)
advmod(poem, exactly)
case(poem, in)
det(poem, the)
nummod(poem, two)
amod(poem, homeric)
obl(repeat, poem)
punct(count, ,)
cc(count, and)
mark(increase, by)
advcl(count, increase)
det(figure, this)
obj(increase, figure)
advmod(include, so)
mark(include, as)
mark(include, to)
advcl(count, include)
obj(include, line)
xcomp(include, repeat)
case(modification, with)
advmod(slight, very)
amod(modification, slight)
obl(repeat, modification)
nsubj(count, he)
conj(count, count)
nummod(line, 2118)
amod(line, different)
obj(count, line)
acl(line, use)
det(total, a)
obj(use, total)
case(time, of)
nummod(time, 5612)
nmod(total, time)
punct(count, .)
advmod(be, thus)
nummod(line, one)
nsubj(be, line)
case(five, in)
nmod(line, five)
case(Iliad, from)
det(Iliad, the)
nmod(five, Iliad)
cc(Odyssey, and)
det(Odyssey, the)
conj(Iliad, Odyssey)
root(ROOT, be)
mark(find, to)
aux:pass(find, be)
ccomp(be, find)
advmod(find, somewhere)
advmod(somewhere, else)
case(poem, in)
det(poem, the)
nummod(poem, two)
obl(find, poem)
punct(be, .)
det(ratio, the)
nsubj(remarkable, ratio)
cop(remarkable, be)
advmod(remarkable, thoroughly)
root(ROOT, remarkable)
punct(remarkable, ,)
mark(long, because)
det(line, the)
nsubj(long, line)
cop(long, be)
advmod(long, so)
advcl(remarkable, long)
punct(long, --)
advmod(again, half)
advmod(long, again)
advmod(long, as)
advmod(appear, long)
mark(appear, as)
nsubj(appear, those)
case(beowulf, of)
nmod(those, beowulf)
punct(poetry, .)
compound(Saxon, Anglo)
punct(Saxon, -)
amod(poetry, Saxon)
nsubj(appear, poetry)
advcl(long, appear)
mark(have, to)
xcomp(appear, have)
det(amount, no)
amod(amount, comparable)
obj(have, amount)
case(repetition, of)
nmod(amount, repetition)
punct(remarkable, ;)
punct(remarkable, ;)
expl(be, there)
parataxis(remarkable, be)
det(reason, no)
nsubj(be, reason)
mark(think, to)
acl(reason, think)
mark(be, that)
det(scop, the)
nsubj(be, scop)
acl(scop, use)
cc(re-use, and)
conj(use, re-use)
amod(line, whole)
obj(re-use, line)
cc(passage, and)
advmod(passage, even)
amod(passage, lengthy)
conj(scop, passage)
case(manner, after)
det(manner, the)
nmod(passage, manner)
case(colleague, of)
nmod:poss(colleague, he)
amod(colleague, homeric)
nmod(manner, colleague)
punct(remarkable, .)
mark(determine, in)
advcl(idle, determine)
det(extent, the)
obj(determine, extent)
case(which, to)
obl(formulaic, which)
det(poem, any)
nsubj(formulaic, poem)
cop(formulaic, be)
acl:relcl(extent, formulaic)
nsubj(idle, it)
cop(idle, be)
root(ROOT, idle)
punct(idle, ,)
advmod(idle, however)
punct(idle, ,)
mark(inspect, to)
advcl(idle, inspect)
obj(inspect, nothing)
case(line, besides)
nmod(nothing, line)
acl(nothing, repeat)
case(entirety, in)
nmod:poss(entirety, they)
obl(repeat, entirety)
punct(inspect, ,)
case(stock, for)
det(stock, a)
obl(sufficient, stock)
case(fragment, of)
compound(fragment, line)
punct(fragment, -)
nmod(stock, fragment)
aux(sufficient, would)
cop(sufficient, be)
conj(idle, sufficient)
mark(permit, to)
xcomp(sufficient, permit)
det(poet, the)
obj(permit, poet)
mark(extemporize, to)
xcomp(permit, extemporize)
case(deftness, with)
obl(extemporize, deftness)
mark(provide, if)
nsubj(provide, they)
advcl(extemporize, provide)
case(need, for)
amod(need, prosodic)
obl(provide, need)
punct(idle, .)
det(scrutiny, the)
amod(scrutiny, closest)
nsubj:pass(owed, scrutiny)
aux:pass(owed, be)
root(ROOT, owed)
case(kenning, to)
det(kenning, the)
obl:npmod(Saxon, Anglo)
punct(Saxon, -)
amod(kenning, Saxon)
obl(owed, kenning)
cc(epithet, and)
det(epithet, the)
amod(epithet, homeric)
conj(kenning, epithet)
punct(owed, ;)
punct(owed, ;)
mark(formulaic, if)
det(word, any)
nsubj(formulaic, word)
cc(phrase, or)
conj(word, phrase)
cop(formulaic, be)
advcl(be, formulaic)
punct(be, ,)
nsubj(be, they)
aux(be, will)
conj(owed, be)
punct(owed, .)
det(Iliad, the)
nsubj(have, Iliad)
root(ROOT, have)
nummod(word, two)
obj(have, word)
case(shield, for)
det(shield, the)
nmod(word, shield)
punct(aspis, ,)
conj(shield, aspis)
cc(sakos, and)
conj(shield, sakos)
punct(have, .)
amod(criticism, recent)
nsubj(tend, criticism)
case(expectation, of)
amod(expectation, great)
nmod(criticism, expectation)
aux(tend, have)
root(ROOT, tend)
mark(emphasize, to)
xcomp(tend, emphasize)
nmod:poss(content, its)
amod(content, symbolic)
cc(mythic, and)
conj(symbolic, mythic)
obj(emphasize, content)
punct(emphasize, ,)
mark(show, to)
advcl(emphasize, show)
punct(emphasize, ,)
mark(say, as)
nsubj(say, M.)
flat(M., D.)
flat(M., Zabel)
aux(say, have)
advcl(emphasize, say)
case(Dickens, of)
obl(say, Dickens)
advmod(say, generally)
punct(say, ,)
mark(reside, that)
nsubj(reside, much)
case(impact, of)
det(novel, the)
nmod:poss(impact, novel)
case(novel, 's)
nmod(much, impact)
ccomp(say, reside)
case(insight, in)
nmod:poss(insight, its)
punct(insight, ``)
amod(insight, allegoric)
obl(reside, insight)
cc(metaphor, and)
amod(metaphor, moral)
conj(insight, metaphor)
punct(insight, '')
punct(reside, .)
nmod:poss(chapter, J.)
flat(J., H.)
flat(J., Miller)
case(J., 's)
amod(chapter, excellent)
nsubj(illustrate, chapter)
case(expectation, on)
amod(expectation, great)
nmod(chapter, expectation)
aux(illustrate, have)
advmod(illustrate, lately)
parataxis(tend, illustrate)
advmod(fruitfully, how)
advmod(read, fruitfully)
det(novel, that)
nsubj:pass(read, novel)
aux(read, can)
aux:pass(read, be)
ccomp(illustrate, read)
case(perspective, from)
det:predet(perspective, such)
det(perspective, a)
obl(read, perspective)
punct(tend, .)
case(analysis, in)
nmod:poss(analysis, he)
obl(touch, analysis)
punct(touch, ,)
advmod(touch, however)
punct(touch, ,)
nsubj(touch, he)
root(ROOT, touch)
obl(touch, upon)
cc(fail, but)
conj(touch, fail)
mark(explore, to)
xcomp(fail, explore)
det(idea, a)
obj(explore, idea)
punct(idea, ,)
advmod(neglect, generally)
acl(idea, neglect)
case(discussion, in)
obl(neglect, discussion)
case(book, of)
det(book, the)
nmod(discussion, book)
punct(book, ,)
obj(believe, which)
nsubj(believe, I)
acl:relcl(book, believe)
cop(central, be)
ccomp(believe, central)
case(art, to)
nmod:poss(art, its)
obl(central, art)
punct(importance, --)
det(importance, the)
conj(central, importance)
case(hand, of)
amod(hand, human)
nmod(importance, hand)
case(feature, as)
det(feature, a)
amod(feature, recurre)
nmod(importance, feature)
case(narrative, of)
det(narrative, the)
nmod(feature, narrative)
punct(touch, .)
det(essay, this)
nsubj(seek, essay)
root(ROOT, seek)
mark(make, to)
xcomp(seek, make)
mark(nothing, that)
nsubj(nothing, exploration)
punct(exploration, .)
appos(exploration, Dickens)
cop(nothing, be)
advmod(nothing, not)
case(nothing, for)
ccomp(make, nothing)
det(theatrical, the)
advmod(theatrical, most)
amod(nothing, theatrical)
case(writer, of)
det(writer, the)
amod(writer, great)
amod(writer, victorian)
obl(theatrical, writer)
punct(seek, .)
nsubj(know, he)
root(ROOT, know)
advmod(know, instinctively)
mark(possession, that)
advmod(voice, next)
mark(voice, to)
advcl(know, voice)
cc(face, and)
conj(voice, face)
det(actor, a)
nmod:poss(hand, actor)
case(actor, 's)
obj(voice, hand)
cop(possession, be)
nmod:poss(possession, he)
advmod(useful, most)
amod(possession, useful)
ccomp(know, possession)
punct(possession, --)
mark(shorthand, that)
case(fiction, in)
obl(shorthand, fiction)
case(theatre, as)
case(theatre, in)
det(theatre, the)
nmod(fiction, theatre)
punct(shorthand, ,)
nsubj(shorthand, gesture)
cop(shorthand, be)
det(shorthand, a)
amod(shorthand, indispensable)
conj(possession, shorthand)
mark(individualize, for)
acl(shorthand, individualize)
obj(individualize, character)
cc(dramatizing, and)
conj(individualize, dramatizing)
obj(dramatizing, action)
cc(response, and)
conj(action, response)
punct(know, .)
nsubj(accidental, it)
cop(accidental, be)
advmod(accidental, hardly)
root(ROOT, accidental)
punct(accidental, ,)
advmod(do, therefore)
punct(accidental, ,)
mark(do, that)
nsubj(do, many)
case(figure, of)
nmod:poss(figure, he)
advmod(vivid, most)
amod(figure, vivid)
nmod(many, figure)
csubj(accidental, do)
amod(thing, suggestive)
cc(eccentric, or)
conj(suggestive, eccentric)
obj(do, thing)
case(hand, with)
nmod:poss(hand, they)
obl(do, hand)
punct(accidental, .)
case(expectation, in)
amod(expectation, great)
obl(become, expectation)
det(hand, the)
nsubj(become, hand)
root(ROOT, become)
advmod(obsession, almost)
det(obsession, a)
xcomp(become, obsession)
punct(become, .)
nsubj(bite, Mr.)
flat(Mr., Jaggers)
advmod(bite, habitually)
parataxis(obsession, bite)
nmod:poss(forefinger, he)
obj(bite, forefinger)
punct(bite, ,)
det(gesture, a)
obj(bite, gesture)
nsubj(convey, which)
acl:relcl(gesture, convey)
cc:preconj(contempt, both)
obj(convey, contempt)
cc(abstractedness, and)
det(abstractedness, the)
amod(abstractedness, inscrutable)
conj(contempt, abstractedness)
obj(fascinate, that)
nsubj(fascinate, half)
acl:relcl(abstractedness, fascinate)
punct(terrify, ,)
nsubj(terrify, half)
ccomp(fascinate, terrify)
obj(terrify, all)
nsubj(have, who)
acl:relcl(all, have)
obj(have, dealing)
case(he, with)
nmod(dealing, he)
punct(miss, .)
conj(have, miss)
nmod:poss(hand, Havisham)
case(Havisham, 's)
amod(hand, wither)
obj(miss, hand)
punct(heavy, ,)
xcomp(miss, heavy)
mark(concentrate, as)
mark(concentrate, if)
nmod:poss(unhappiness, she)
nsubj:pass(concentrate, unhappiness)
aux:pass(concentrate, be)
advmod(concentrate, somehow)
advcl(heavy, concentrate)
case(they, in)
obl(concentrate, they)
punct(move, ,)
conj(concentrate, move)
case(pity, in)
amod(pity, restless)
compound(pity, self)
punct(pity, -)
obl(move, pity)
case(heart, between)
nmod:poss(heart, she)
amod(heart, broken)
nmod(pity, heart)
cc(stick, and)
nmod:poss(stick, she)
compound(stick, walking)
conj(heart, stick)
punct(signature, .)
nmod:poss(signature, Pumblechook)
case(Pumblechook, 's)
punct(signature, ``)
appos(heart, signature)
punct(signature, '')
cop(hand, be)
det(hand, the)
advmod(extend, perpetually)
amod(hand, extend)
amod(hand, glad)
parataxis(signature, hand)
punct(hand, .)
nsubj(reveal, Wemmick)
parataxis(hand, reveal)
nmod:poss(satisfaction, he)
compound(satisfaction, self)
punct(satisfaction, -)
obj(reveal, satisfaction)
mark(rub, by)
advmod(rub, regularly)
advcl(reveal, rub)
nmod:poss(hand, he)
obj(rub, hand)
advmod(rub, together)
punct(reveal, .)
amod(Mr., old)
nmod:poss(response, Mr.)
flat(Mr., Pocket)
case(Mr., 's)
amod(response, frantic)
nsubj(be, response)
case(imprisonment, to)
compound(imprisonment, life)
nmod(response, imprisonment)
case(wife, with)
det(wife, a)
amod(wife, useless)
punct(wife, ,)
amod(climb, social)
punct(climb, -)
compound(wife, climb)
nmod(response, wife)
root(ROOT, be)
mark(put, to)
punct(put, ``)
ccomp(be, put)
nmod:poss(hand, he)
nummod(hand, two)
obj(put, hand)
case(hair, into)
nmod:poss(hair, he)
amod(hair, disturb)
obl(put, hair)
punct(put, '')
cc(make, and)
punct(make, ``)
conj(put, make)
det(effort, a)
amod(effort, extraordinary)
obj(make, effort)
mark(lift, to)
acl(effort, lift)
obj(lift, himself)
compound:prt(lift, up)
case(it, by)
obl(lift, it)
punct(make, '')
punct(make, ,)
mark(endure, whereas)
nsubj(endure, Joe)
flat(Joe, Gargery)
advcl(make, endure)
det(onslaught, the)
amod(onslaught, shrewish)
obj(endure, onslaught)
case(Mrs, of)
nmod(onslaught, Mrs)
punct(be, .)
nsubj(draw, Joe)
mark(draw, by)
advmod(draw, apologetically)
root(ROOT, draw)
punct(back, ``)
det(back, the)
obj(draw, back)
case(hand, of)
nmod:poss(hand, he)
nmod(back, hand)
case(hand, across)
cc(nose, and)
case(nose, across)
nmod:poss(nose, he)
nmod(hand, nose)
punct(nose, '')
punct(nose, .)
amod(mannerism, such)
nsubj(worthy, mannerism)
aux(worthy, would)
cop(worthy, be)
advmod(worthy, less)
parataxis(draw, worthy)
case(remark, of)
obl(worthy, remark)
punct(worthy, ,)
cop(not, be)
nsubj(not, it)
advmod(worthy, not)
mark(expectation, that)
case(expectation, in)
amod(expectation, great)
obl(not, expectation)
punct(other, ,)
case(other, as)
case(other, in)
det(other, no)
nmod(expectation, other)
case(novel, of)
nmod:poss(novel, Dickens)
case(Dickens, 's)
nmod(other, novel)
punct(serve, ,)
nsubj(serve, hand)
acl:relcl(novel, serve)
case(leitmotif, as)
det(leitmotif, a)
obl(serve, leitmotif)
case(plot, of)
nmod(leitmotif, plot)
cc(theme, and)
conj(plot, theme)
punct(leitmotif, --)
det(kind, a)
appos(leitmotif, kind)
case(symbol, of)
amod(symbol, unify)
nmod(kind, symbol)
cc(metaphor, or)
amod(metaphor, natural)
conj(symbol, metaphor)
case(complex, for)
det(book, the)
nmod:poss(complex, book)
case(book, 's)
nmod(metaphor, complex)
case(interrelationships, of)
amod(interrelationships, human)
nmod(complex, interrelationships)
cc(value, and)
det(value, the)
conj(interrelationships, value)
cc(attitude, and)
conj(value, attitude)
nsubj(motivate, that)
acl:relcl(value, motivate)
obj(motivate, they)
punct(motivate, .)
nsubj(reveal, Dickens)
advmod(only, not)
advmod(reveal, only)
conj(motivate, reveal)
obj(reveal, character)
case(gesture, through)
obl(reveal, gesture)
punct(make, ,)
nsubj(make, he)
parataxis(reveal, make)
obj(make, hand)
det(element, a)
amod(element, crucial)
obj(make, element)
case(plot, of)
det(plot, the)
nmod(element, plot)
punct(means, ,)
det(means, a)
appos(element, means)
mark(clarify, of)
acl(means, clarify)
det(structure, the)
obj(clarify, structure)
case(novel, of)
det(novel, the)
nmod(structure, novel)
mark(help, by)
advcl(clarify, help)
mark(define, to)
xcomp(help, define)
det(hero, the)
nmod:poss(relation, hero)
case(hero, 's)
obj(define, relation)
case(character, with)
det:predet(character, all)
det(character, the)
amod(character, major)
nmod(relation, character)
punct(device, ,)
cc(device, and)
det(device, a)
conj(character, device)
mark(order, for)
acl(device, order)
amod(theme, such)
amod(theme, diverse)
obj(order, theme)
case(guilt, as)
nmod(theme, guilt)
punct(pursuit, ,)
conj(guilt, pursuit)
punct(crime, ,)
conj(guilt, crime)
punct(greed, ,)
conj(guilt, greed)
punct(education, ,)
conj(guilt, education)
punct(materialism, ,)
conj(guilt, materialism)
punct(enslavement, ,)
conj(guilt, enslavement)
punct(people, ()
case(people, by)
cc:preconj(people, both)
nmod(enslavement, people)
cc(institution, and)
conj(people, institution)
punct(people, ))
punct(friendship, ,)
conj(guilt, friendship)
punct(love, ,)
amod(love, romantic)
conj(guilt, love)
punct(forgiveness, ,)
conj(guilt, forgiveness)
punct(redemption, ,)
cc(redemption, and)
conj(guilt, redemption)
punct(make, .)
nsubj(have, we)
root(ROOT, have)
advmod(think, only)
mark(think, to)
xcomp(have, think)
case(Lady, of)
obl(think, Lady)
flat(Lady, Macbeth)
cc(murderer, or)
det(murderer, the)
compound(murderer, policeman)
punct(murderer, -)
conj(Lady, murderer)
case(story, in)
nmod:poss(story, Thomas)
flat(Thomas, Burke)
case(Thomas, 's)
amod(story, famous)
obl(think, story)
punct(have, ,)
punct(have, ``)
det(hand, the)
root(ROOT, hand)
case(Mr., of)
nmod(hand, Mr.)
flat(Mr., ottermole)
punct(Mr., '')
punct(realize, ,)
mark(realize, to)
acl(hand, realize)
mark(call, that)
nsubj(call, hand)
advmod(call, often)
ccomp(realize, call)
compound:prt(call, up)
obj(call, idea)
case(crime, of)
nmod(idea, crime)
cc(punishment, and)
conj(crime, punishment)
punct(hand, .)
advmod(be, so)
nsubj(be, it)
root(ROOT, be)
case(expectation, with)
amod(expectation, great)
obl(be, expectation)
punct(expectation, ,)
mark(Orlick, whether)
det(hand, the)
nsubj(Orlick, hand)
cop(Orlick, be)
parataxis(expectation, Orlick)
case(Orlick, 's)
mark(strike, as)
nsubj(strike, he)
advcl(Orlick, strike)
compound:prt(strike, down)
obj(strike, Mrs.)
flat(Mrs., Gargery)
cc(pip', or)
conj(Mrs., pip')
mark(steal, as)
nsubj(steal, he)
advcl(strike, steal)
det(pie, a)
obj(steal, pie)
case(pantry, from)
nmod:poss(pantry, she)
obl(steal, pantry)
punct(suit, .)
amod(association, such)
nsubj(suit, association)
parataxis(be, suit)
advmod(suit, well)
case(aspect, with)
det(aspect, the)
amod(aspect, gothic)
cc(story, or)
compound(story, mystery)
punct(story, -)
conj(gothic, story)
obl(suit, aspect)
case(novel, of)
nmod:poss(novel, Dickens)
case(Dickens, 's)
nmod(aspect, novel)
punct(relate, ,)
cc(relate, but)
punct(relate, ,)
case(plane, on)
det(plane, a)
amod(plane, deeper)
obl(relate, plane)
punct(relate, ,)
nsubj(relate, they)
conj(suit, relate)
case(theme, to)
det(theme, the)
obl(relate, theme)
case(sin, of)
nmod(theme, sin)
punct(guilt, ,)
conj(sin, guilt)
punct(pursuit, ,)
cc(pursuit, and)
conj(sin, pursuit)
nsubj:pass(analyze, that)
aux(analyze, have)
advmod(analyze, recently)
aux:pass(analyze, be)
acl:relcl(theme, analyze)
case(critic, by)
amod(critic, other)
obl(analyze, critic)
punct(be, .)
det(novel, the)
nsubj(open, novel)
root(ROOT, open)
case(convict, with)
det(convict, a)
amod(convict, fugitive)
obl(open, convict)
advmod(try, frantically)
advcl(open, try)
mark(avoid, to)
xcomp(try, avoid)
det(nemesis, the)
obj(avoid, nemesis)
mark(on, of)
cop(on, be)
punct(lay, ``)
amod(hand, lay)
compound(on, hand)
acl(nemesis, on)
punct(lay, '')
punct(figure, --)
det(figure, a)
amod(figure, mysterious)
appos(nemesis, figure)
nsubj(look, who)
acl:relcl(figure, look)
case(eye, into)
nmod:poss(eye, pip)
case(pip, 's)
amod(eye, frighten)
obl(look, eye)
case(churchyard, in)
det(churchyard, the)
nmod(eye, churchyard)
punct(elude, ``)
mark(elude, as)
mark(elude, if)
nsubj(elude, he)
aux(elude, be)
advcl(look, elude)
det(hand, the)
obj(elude, hand)
case(people, of)
det(people, the)
amod(people, dead)
nmod(hand, people)
punct(stretch, ,)
advcl(elude, stretch)
compound:prt(stretch, up)
advmod(stretch, cautiously)
case(grave, out)
case(grave, of)
nmod:poss(grave, they)
obl(stretch, grave)
punct(get, ,)
mark(get, to)
advcl(stretch, get)
det(twist, a)
obj(get, twist)
case(ankle, upon)
nmod:poss(ankle, he)
obl(get, ankle)
cc(pull, and)
conj(get, pull)
obj(pull, he)
advmod(pull, in)
punct(terrify, '')
punct(terrify, .)
nsubj(terrify, Magwitch)
advcl(pull, terrify)
root(ROOT, pip)
mark(steal, into)
acl(pip, steal)
det(pie, a)
compound(pie, pork)
obj(steal, pie)
case(he, for)
obl(steal, he)
mark(create, by)
advcl(steal, create)
det(image, the)
obj(create, image)
case(imagination, in)
det(boy, the)
nmod:poss(imagination, boy)
case(boy, 's)
obl(create, imagination)
case(man, of)
det(man, a)
amod(man, bogy)
nmod(imagination, man)
nsubj(creep, who)
aux(creep, may)
punct(creep, ``)
advmod(creep, softly)
acl:relcl(man, creep)
nmod:poss(way, he)
obj(creep, way)
case(he, to)
obl(creep, he)
cc(tear, and)
conj(creep, tear)
obj(tear, he)
xcomp(tear, open)
punct(creep, '')
punct(pip, ,)
punct(pip, ``)
root(ROOT, imbrue)
nmod:poss(hand, he)
obj(imbrue, hand)
punct(hand, '')
case(he, in)
obl(imbrue, he)
punct(imbrue, .)
mark(agonize, as)
nsubj(agonize, pip)
advcl(imbrue, agonize)
case(theft, over)
det(theft, the)
obl(agonize, theft)
mark(commit, that)
nmod:poss(hand, he)
amod(hand, own)
nsubj(commit, hand)
aux(commit, have)
acl:relcl(theft, commit)
punct(commit, ,)
nmod:poss(project, he)
amod(project, guilty)
compound(project, conscience)
obj(commit, project)
nmod:npmod(project, itself)
case(finger, upon)
det(finger, the)
amod(finger, wooden)
nmod(project, finger)
case(signpost, of)
det(signpost, a)
amod(signpost, local)
nmod(finger, signpost)
punct(transform, ,)
acl(finger, transform)
obj(transform, it)
case(phantom, into)
punct(phantom, ``)
det(phantom, a)
obl(transform, phantom)
acl(phantom, devote)
obj(devote, I)
case(hulk, to)
det(hulk, the)
obl(devote, hulk)
punct(devote, '')
punct(hold, .)
acl(phantom, hold)
obj(hold, upside)
compound:prt(hold, down)
case(graveyard, in)
det(graveyard, the)
nmod(upside, graveyard)
punct(cling, ,)
nsubj(cling, pip)
advcl(hold, cling)
case(terror, in)
obl(cling, terror)
punct(cling, ``)
case(hand, with)
det(hand, both)
obl(cling, hand)
punct(hand, '')
case(convict, to)
nmod:poss(convict, he)
nmod(hand, convict)
punct(flee, ;)
punct(flee, ;)
advmod(flee, later)
nsubj(flee, he)
parataxis(cling, flee)
case(panic, in)
obl(flee, panic)
case(table, from)
det(table, the)
compound(table, family)
nmod(panic, table)
advmod(about, just)
mark(about, as)
nmod:poss(theft, he)
nsubj(about, theft)
cop(about, be)
advcl(flee, about)
mark(discover, to)
aux:pass(discover, be)
advcl(about, discover)
cc(block, and)
aux:pass(block, be)
conj(discover, block)
case(door, at)
det(door, the)
amod(door, front)
obl(block, door)
case(soldier, by)
det(soldier, a)
nmod(door, soldier)
nsubj(hold, who)
advmod(hold, accusingly)
acl:relcl(soldier, hold)
compound:prt(hold, out)
det(pair, a)
obj(hold, pair)
case(handcuffs, of)
nmod(pair, handcuffs)
obj(bring, which)
nsubj(bring, he)
aux(bring, have)
acl:relcl(pair, bring)
case(forge, to)
nmod:poss(forge, Gargery)
case(Gargery, 's)
obl(bring, forge)
case(mend, for)
nmod(forge, mend)
punct(bring, .)
case(detail, through)
amod(detail, such)
nmod(forge, detail)
nsubj(indicate, Dickens)
acl:relcl(detail, indicate)
case(outset, at)
det(outset, the)
obl(indicate, outset)
mark(part, that)
nsubj(part, guilt)
cop(part, be)
det(part, a)
acl(outset, part)
case(bond, of)
det(bond, the)
amod(bond, ironic)
nmod(part, bond)
case(pip, between)
nmod(bond, pip)
cc(Magwitch, and)
conj(pip, Magwitch)
nsubj(unpredictably, which)
cop(unpredictably, be)
advmod(unpredictably, so)
acl:relcl(pip, unpredictably)
mark(alter, to)
advcl(unpredictably, alter)
det(life, both)
nmod:poss(life, they)
obj(alter, life)
punct(indicate, .)
mark(translate, since)
nsubj(translate, they)
advmod(translate, commonly)
advcl(represent, translate)
obj(translate, thought)
cc(feeling, and)
conj(thought, feeling)
case(deed, into)
obl(translate, deed)
punct(represent, ,)
nsubj(represent, hand)
advmod(represent, naturally)
root(ROOT, represent)
obj(represent, action)
punct(underworld, ,)
cc(underworld, and)
mark(underworld, since)
advmod(half, nearly)
det:predet(character, half)
det(character, the)
nsubj(underworld, character)
case(expectation, in)
amod(expectation, great)
nmod(character, expectation)
cop(underworld, be)
case(underworld, of)
det(underworld, the)
conj(represent, underworld)
cc(ally, or)
advmod(ally, closely)
conj(underworld, ally)
case(it, to)
obl(ally, it)
punct(underworld, ,)
det(link, the)
nsubj(be, link)
case(hand, of)
nmod(link, hand)
case(crime, with)
nmod(link, crime)
cc(violence, or)
conj(crime, violence)
conj(underworld, be)
advmod(be, not)
mark(wonder, to)
aux:pass(wonder, be)
xcomp(be, wonder)
obl(wonder, at)
punct(wonder, .)
obl(wonder, Dickens)
punct(reveal, ,)
case(reason, for)
amod(reason, excellent)
amod(reason, psychological)
obl(reveal, reason)
punct(reveal, ,)
advmod(reveal, never)
advmod(reveal, fully)
acl:relcl(Dickens, reveal)
nmod:poss(past, Magwitch)
case(Magwitch, 's)
amod(past, felonious)
obj(reveal, past)
punct(shrink, ,)
cc(shrink, but)
nsubj(shrink, pip)
punct(pip, ,)
case(reappearance, at)
det(convict, the)
nmod:poss(reappearance, convict)
case(convict, 's)
amod(reappearance, climactic)
nmod(pip, reappearance)
case(London, in)
nmod(reappearance, London)
punct(shrink, ,)
conj(reveal, shrink)
mark(clasp, from)
advcl(shrink, clasp)
det(hand, a)
obj(clasp, hand)
obj(fear, which)
nsubj(fear, he)
acl:relcl(hand, fear)
punct(stain, ``)
aux(stain, might)
aux:pass(stain, be)
ccomp(fear, stain)
case(blood, with)
obl(stain, blood)
punct(stain, '')
punct(slouch, .)
nsubj(slouch, Orlick)
conj(stain, slouch)
case(forge, about)
det(forge, the)
obl(slouch, forge)
punct(cain, ``)
case(cain, like)
nmod(forge, cain)
punct(cain, '')
case(hand, with)
punct(hand, ``)
nmod:poss(hand, he)
nmod(cain, hand)
case(pocket, in)
nmod:poss(pocket, he)
nmod(hand, pocket)
punct(hand, '')
punct(shout, ,)
cc(shout, and)
mark(shout, when)
nsubj(shout, he)
conj(slouch, shout)
obj(shout, abuse)
case(Mrs, at)
obl(shout, Mrs)
punct(slouch, .)
nsubj(clap, Joe)
mark(object, for)
acl(Joe, object)
case(holiday, to)
nmod:poss(holiday, he)
obl(object, holiday)
punct(clap, ,)
nsubj(clap, she)
root(ROOT, clap)
nmod:poss(hand, she)
obj(clap, hand)
case(tantrum, in)
det(tantrum, a)
obl(clap, tantrum)
punct(beat, ,)
conj(clap, beat)
obj(beat, they)
punct(bosom, ``)
case(bosom, upon)
nmod:poss(bosom, she)
obl(beat, bosom)
cc(knee, and)
case(knee, upon)
nmod:poss(knee, she)
conj(bosom, knee)
punct(bosom, '')
punct(clench, ,)
cc(clench, and)
conj(clap, clench)
obj(clench, they)
case(hair, in)
nmod:poss(husband, she)
nmod:poss(hair, husband)
case(husband, 's)
obl(clench, hair)
punct(clap, .)
det(rampage, this)
amod(rampage, last)
punct(rampage, ``)
nsubj(prelude, rampage)
punct(rampage, '')
cop(prelude, be)
advmod(prelude, only)
det(prelude, the)
root(ROOT, prelude)
case(blow, to)
det(blow, the)
amod(blow, vicious)
nmod(prelude, blow)
case(head, upon)
nmod:poss(head, she)
nmod(blow, head)
punct(prelude, ,)
punct(prelude, ``)
advcl(prelude, deal)
case(hand, by)
det(hand, some)
amod(hand, unknown)
obl(deal, hand)
punct(hand, '')
nmod:poss(identity, whose)
nsubj:pass(reveal, identity)
aux:pass(reveal, be)
advmod(reveal, later)
acl:relcl(hand, reveal)
advmod(verbally, not)
advmod(reveal, verbally)
cc(action, but)
case(action, through)
det(action, a)
amod(action, manual)
nmod(trace, action)
punct(trace, --)
det(trace, the)
parataxis(prelude, trace)
case(hammer, of)
nmod:poss(hammer, Orlick)
case(Orlick, 's)
nmod(trace, hammer)
case(slate, upon)
det(slate, a)
nmod(trace, slate)
punct(prelude, .)
nsubj(be, pip)
nmod:npmod(pip, himself)
root(ROOT, be)
mark(feel, to)
ccomp(be, feel)
det(terror, the)
obj(feel, terror)
case(hand, of)
nmod:poss(hand, Orlick)
case(Orlick, 's)
punct(hand, ``)
amod(hand, murderous)
nmod(terror, hand)
punct(hand, '')
case(rendezvous, in)
nmod:poss(rendezvous, he)
amod(rendezvous, secret)
obl(feel, rendezvous)
case(sluicehouse, at)
det(sluicehouse, the)
nmod(rendezvous, sluicehouse)
case(marsh, on)
det(marsh, the)
nmod(sluicehouse, marsh)
punct(be, .)
nsubj(lay, Dickens)
parataxis(be, lay)
amod(emphasis, great)
obj(lay, emphasis)
case(hand, on)
det(hand, the)
obl(lay, hand)
case(scene, in)
det(scene, this)
nmod(hand, scene)
punct(be, .)
nsubj(shake, Orlick)
root(ROOT, shake)
nmod:poss(hand, he)
obj(shake, hand)
case(pip, at)
obl(shake, pip)
punct(bang, ,)
conj(shake, bang)
det(table, the)
obj(bang, table)
case(fist, with)
nmod:poss(fist, he)
obl(bang, fist)
punct(draw, ,)
conj(shake, draw)
nmod:poss(hand, he)
amod(hand, unclenched)
obj(draw, hand)
punct(draw, ``)
case(mouth, across)
nmod:poss(mouth, he)
obl(draw, mouth)
mark(water, as)
mark(water, if)
nmod:poss(mouth, he)
nsubj(water, mouth)
advcl(draw, water)
punct(water, '')
case(victim, for)
nmod:poss(victim, he)
obl(water, victim)
punct(let, ,)
conj(water, let)
nmod:poss(hand, he)
obj(let, hand)
xcomp(let, hang)
punct(hang, ``)
xcomp(hang, loose)
cc(heavy, and)
conj(loose, heavy)
case(side, at)
nmod:poss(side, he)
obl(heavy, side)
punct(observe, '')
punct(observe, ,)
cc(observe, and)
nsubj(observe, pip)
conj(shake, observe)
obj(observe, he)
advmod(intensely, so)
advmod(observe, intensely)
mark(know, that)
nsubj(know, he)
ccomp(observe, know)
punct(know, ``)
case(action, of)
det(action, the)
amod(action, slightest)
obl(know, action)
case(finger, of)
nmod:poss(finger, he)
nmod(action, finger)
punct(action, '')
punct(know, .)
nsubj(come, Orlick)
aux(come, might)
advmod(man, almost)
cop(man, be)
nmod:poss(man, Magwitch)
case(Magwitch, 's)
amod(man, bogy)
nsubj(come, man)
ccomp(know, come)
xcomp(come, alive)
punct(figure, ,)
det(figure, a)
obj(come, figure)
case(nemesis, of)
nmod(figure, nemesis)
case(phantasy, from)
nmod:poss(phantasy, pip)
case(pip, 's)
nmod(figure, phantasy)
case(guilt, of)
nmod(phantasy, guilt)
punct(shake, .)
det(wrist, the)
amod(wrist, scarred)
punct(wrist, ,)
amod(wrist, disfigure)
nsubj(mark, wrist)
case(housekeeper, of)
nmod:poss(housekeeper, Mr.)
flat(Mr., Jaggers)
case(Mr., 's)
nmod(wrist, housekeeper)
cop(mark, be)
det(mark, the)
compound(tale, tell)
punct(tale, -)
compound(mark, tale)
root(ROOT, mark)
case(past, of)
nmod:poss(past, she)
amod(past, sinister)
nmod(mark, past)
punct(mark, ,)
case(master, for)
nmod:poss(master, she)
nmod(mark, master)
punct(exhibit, ,)
advmod(exhibit, coolly)
advcl(mark, exhibit)
obj(exhibit, they)
case(guest, to)
nmod:poss(guest, he)
compound(guest, dinner)
obl(exhibit, guest)
punct(make, ,)
conj(exhibit, make)
det(point, a)
obj(make, point)
case(force, of)
det(force, the)
punct(force, ``)
nmod(point, force)
case(grip, of)
nmod(force, grip)
expl(be, there)
acl:relcl(force, be)
case(hand, in)
det(hand, these)
obl(be, hand)
punct(be, '')
punct(control, .)
nmod:poss(control, Jaggers)
case(Jaggers, 's)
compound(control, iron)
nsubj(be, control)
case(she, over)
nmod(control, she)
punct(remove, ()
punct(remove, ``)
nsubj(remove, she)
aux(remove, would)
parataxis(control, remove)
nmod:poss(hand, she)
obj(remove, hand)
case(dish, from)
det(dish, any)
obl(remove, dish)
nsubj(put, she)
acl:relcl(dish, put)
case(he, before)
obl(put, he)
punct(remove, ,)
advmod(dread, hesitatingly)
punct(dread, ,)
mark(dread, as)
mark(dread, if)
nsubj(dread, she)
advcl(rest, dread)
nsubj(call, he)
xcomp(dread, call)
obj(call, she)
advmod(call, back)
punct(dread, ))
punct(dread, '')
punct(get, ))
conj(remove, rest)
case(have, on)
nmod:poss(have, he)
obl(rest, have)
advmod(get, once)
conj(rest, get)
obj(get, she)
xcomp(get, acquit)
case(charge, of)
det(charge, a)
compound(charge, murder)
obl(acquit, charge)
mark(contrive, by)
advmod(contrive, cleverly)
acl(charge, contrive)
nmod:poss(sleeve, she)
obj(contrive, sleeve)
case(trial, at)
det(trial, the)
obl(contrive, trial)
mark(conceal, to)
advcl(contrive, conceal)
nmod:poss(strength, she)
obj(conceal, strength)
cc(pass, and)
mark(pass, by)
conj(conceal, pass)
compound:prt(pass, off)
det(laceration, the)
obj(pass, laceration)
case(back, on)
det(back, the)
nmod(laceration, back)
case(hand, of)
nmod:poss(hand, she)
nmod(back, hand)
case(scratch, as)
det(scratch, the)
nmod(back, scratch)
case(bramble, of)
nmod(scratch, bramble)
cc(fingernail, rather)
fixed(rather, than)
fixed(rather, of)
amod(fingernail, human)
conj(bramble, fingernail)
punct(mark, .)
nsubj(similarity, it)
cop(similarity, be)
det(similarity, the)
root(ROOT, similarity)
case(hand, between)
nmod:poss(hand, Estella)
case(Estella, 's)
nmod(similarity, hand)
cc(Molly's, and)
conj(hand, Molly's)
punct(similarity, ()
punct(similarity, ``)
det(action, the)
nsubj(action, action)
case(finger, of)
nmod:poss(finger, she)
nmod(action, finger)
cop(action, be)
case(action, like)
det(action, the)
root(ROOT, action)
case(knit, of)
nmod(action, knit)
punct(knit, '')
punct(action, ))
nsubj(provide, that)
acl:relcl(action, provide)
obj(provide, pip)
case(clue, with)
det(clue, a)
amod(clue, vital)
obl(provide, clue)
case(identity, to)
det(identity, the)
amod(identity, real)
nmod(clue, identity)
case(both, of)
nmod(identity, both)
cc(establish, and)
conj(provide, establish)
det(connection, a)
amod(connection, symbolic)
obj(establish, connection)
case(underworld, between)
det(underworld, the)
nmod(connection, underworld)
case(crime, of)
nmod(underworld, crime)
cc(cruelty, and)
det(cruelty, the)
amod(cruelty, genteel)
conj(underworld, cruelty)
case(House, of)
compound(House, Satis)
nmod(cruelty, House)
punct(cruelty, .)
advmod(pursuit, finally)
punct(pursuit, ,)
nmod:poss(pursuit, Magwitch)
case(Magwitch, 's)
nsubj(begin, pursuit)
case(Compeyson, of)
nmod(pursuit, Compeyson)
punct(archenemy, ,)
nmod:poss(archenemy, he)
conj(Compeyson, archenemy)
cc(betrayer, and)
conj(Compeyson, betrayer)
punct(begin, ,)
conj(action, begin)
mark(hold, by)
nsubj(hold, he)
advcl(begin, hold)
obj(hold, he)
case(grip, in)
det(grip, a)
amod(grip, vicelike)
obl(hold, grip)
case(flat, on)
det(flat, the)
compound(flat, river)
nmod(grip, flat)
mark(frustrate, to)
advcl(hold, frustrate)
nmod:poss(escape, he)
obj(frustrate, escape)
cc(culminate, and)
conj(frustrate, culminate)
mark(lay, in)
nmod:poss(hand, he)
punct(lay, ``)
advcl(culminate, lay)
nmod:poss(hand, he)
obj(lay, hand)
case(cloak, on)
nmod:poss(cloak, he)
nmod(hand, cloak)
mark(identify, to)
advcl(lay, identify)
obj(identify, he)
punct(lay, '')
punct(precipitate, ,)
advmod(precipitate, thus)
advcl(identify, precipitate)
det(struggle, the)
obl:npmod(lock, death)
punct(lock, -)
amod(struggle, lock)
obj(precipitate, struggle)
case(water, in)
det(water, the)
nmod(struggle, water)
case(which, during)
obl(drown, which)
nsubj(drown, Compeyson)
acl:relcl(struggle, drown)
punct(become, .)
nmod:poss(hand, Magwitch)
case(Magwitch, 's)
obj(drown, hand)
advmod(hand, here)
advmod(become, ironically)
ccomp(drown, become)
det(agent, the)
xcomp(become, agent)
case(justice, of)
nmod(agent, justice)
punct(agent, .)
cc(expectation, but)
advmod(one, only)
case(one, in)
obl(expectation, one)
case(aspect, of)
nmod:poss(aspect, its)
nmod(one, aspect)
cop(expectation, be)
amod(expectation, great)
root(ROOT, expectation)
det(tale, a)
appos(expectation, tale)
case(violence, of)
nmod(tale, violence)
punct(revenge, ,)
conj(violence, revenge)
punct(retribution, ,)
cc(retribution, and)
conj(violence, retribution)
punct(expectation, .)
root(ROOT, money)
punct(important, ,)
advmod(important, so)
amod(money, important)
det(theme, a)
nsubj(important, theme)
advmod(theme, elsewhere)
case(Dickens, in)
obl(elsewhere, Dickens)
punct(here, ,)
cop(here, be)
parataxis(important, here)
amod(here, central)
punct(associate, ,)
cc(associate, and)
nsubj:pass(associate, hand)
aux:pass(associate, be)
advmod(associate, often)
conj(important, associate)
case(way, in)
det(way, some)
obl(associate, way)
case(value, with)
det(value, the)
amod(value, false)
nmod(way, value)
punct(value, --)
appos(value, acquisitiveness)
punct(snobbery, ,)
conj(acquisitiveness, snobbery)
punct(interest, ,)
compound(interest, self)
punct(interest, -)
conj(acquisitiveness, interest)
punct(hypocrisy, ,)
conj(acquisitiveness, hypocrisy)
punct(toadyism, ,)
conj(acquisitiveness, toadyism)
punct(irresponsibility, ,)
conj(acquisitiveness, irresponsibility)
punct(injustice, ,)
conj(acquisitiveness, injustice)
punct(injustice, --)
nsubj(attach, that)
acl:relcl(injustice, attach)
case(society, to)
det(society, a)
obl(attach, society)
case(pursuit, base)
case(pursuit, upon)
det(pursuit, the)
obl(attach, pursuit)
case(wealth, of)
nmod(pursuit, wealth)
punct(suggest, .)
nsubj(suggest, Dickens)
parataxis(important, suggest)
det(evil, the)
amod(evil, economic)
obj(suggest, evil)
case(society, of)
det:predet(society, such)
det(society, a)
nmod(evil, society)
case(page, on)
det(page, the)
amod(page, first)
nmod(society, page)
case(novel, of)
nmod:poss(novel, he)
nmod(page, novel)
case(description, in)
det(description, the)
nmod(page, description)
case(brother, of)
nmod:poss(brother, pip)
case(pip, 's)
nummod(little, five)
amod(brother, little)
amod(brother, dead)
nmod(description, brother)
punct(brother, ``)
nsubj(give, who)
acl:relcl(brother, give)
compound:prt(give, up)
xcomp(give, try)
mark(get, to)
xcomp(try, get)
det(living, a)
obj(get, living)
advmod(early, exceedingly)
advmod(get, early)
case(struggle, in)
det(struggle, that)
amod(struggle, universal)
obl(early, struggle)
punct(struggle, '')
punct(struggle, ,)
nsubj(seem, who)
acl:relcl(struggle, seem)
mark(bear, to)
aux(bear, have)
punct(bear, ``)
advmod(bear, all)
aux:pass(bear, be)
xcomp(seem, bear)
case(back, on)
nmod:poss(back, they)
obl(bear, back)
case(hand, with)
nmod:poss(hand, they)
nmod(back, hand)
case(pocket, in)
nmod:poss(pocket, they)
compound(pocket, trousers)
punct(pocket, -)
nmod(hand, pocket)
punct(take, ,)
cc(take, and)
aux(take, have)
advmod(take, never)
conj(bear, take)
obj(take, they)
compound:prt(take, out)
case(state, in)
det(state, this)
obl(take, state)
case(existence, of)
nmod(state, existence)
punct(state, '')
punct(expectation, .)
nmod:poss(expectation, pip)
case(pip, 's)
amod(expectation, great)
appos(state, expectation)
punct(expectation, ,)
nmod:poss(progress, he)
conj(expectation, progress)
case(illusion, through)
nmod(progress, illusion)
cc(disillusionment, and)
conj(illusion, disillusionment)
punct(turn, ,)
acl(progress, turn)
punct(turn, ,)
advmod(turn, somewhat)
mark(do, as)
nsubj(do, they)
advcl(turn, do)
case(hero, for)
det(hero, the)
amod(hero, naive)
obl(do, hero)
case(tragedy, of)
nmod:poss(tragedy, Dreiser)
case(Dreiser, 's)
compound(tragedy, American)
nmod(hero, tragedy)
punct(hero, ,)
case(lure, upon)
det(lure, the)
nmod(hero, lure)
case(prosperity, of)
amod(prosperity, genteel)
nmod(lure, prosperity)
case(income, through)
amod(income, unearned)
nmod(prosperity, income)
punct(lure, --)
obj(call, what)
nsubj(call, Wemmick)
acl:relcl(lure, call)
punct(property, ``)
amod(property, portable)
obj(call, property)
punct(property, '')
cc(reproach, and)
obj(reproach, what)
nsubj(reproach, Jaggers)
conj(call, reproach)
obj(reproach, pip)
mark(let, for)
advcl(reproach, let)
punct(slip, ``)
xcomp(let, slip)
compound:prt(slip, through)
punct(finger, ()
compound(finger, he)
punct(finger, ))
obj(slip, finger)
punct(finger, '')
punct(important, .)
mark(must, since)
det(gentleman, a)
nsubj(must, gentleman)
advcl(become, must)
punct(avoid, ,)
mark(possible, if)
advcl(avoid, possible)
punct(avoid, ,)
advcl(become, avoid)
xcomp(avoid, sully)
obj(sully, they)
case(work, by)
obl(sully, work)
punct(work, ,)
nmod:poss(hand, he)
conj(work, hand)
punct(hand, ,)
advmod(importantly, as)
advmod(accent, importantly)
case(accent, as)
nmod:poss(accent, he)
conj(work, accent)
punct(become, ,)
root(ROOT, become)
det(index, the)
xcomp(become, index)
case(status, of)
amod(status, social)
nmod(index, status)
punct(index, .)
advmod(step, almost)
det(step, the)
amod(step, first)
nsubj(shame, step)
case(corruption, in)
det(corruption, the)
nmod(step, corruption)
case(value, of)
nmod:poss(value, pip)
case(pip, 's)
nmod(corruption, value)
cop(shame, be)
det(shame, the)
amod(shame, unworthy)
root(ROOT, shame)
nsubj(feel, he)
acl:relcl(shame, feel)
mark(remark, when)
nsubj(remark, Estella)
advmod(remark, cruelly)
advcl(feel, remark)
det(coarseness, the)
obj(remark, coarseness)
case(hand, of)
nmod:poss(hand, he)
nmod(coarseness, hand)
punct(shame, :)
punct(shame, ``)
nsubj(troubled, they)
aux(troubled, have)
advmod(troubled, never)
root(ROOT, troubled)
obj(troubled, I)
advmod(troubled, before)
punct(troubled, ,)
cc(troubled, but)
nsubj(troubled, they)
conj(troubled, troubled)
obj(troubled, I)
advmod(troubled, now)
punct(troubled, ,)
case(appendage, as)
amod(appendage, vulgar)
obl(troubled, appendage)
punct(imagine, '')
punct(imagine, .)
nsubj(imagine, pip)
parataxis(troubled, imagine)
advmod(look, how)
nsubj(look, Estella)
aux(look, would)
ccomp(imagine, look)
advmod(look, down)
case(hand, upon)
nmod:poss(hand, Joe)
case(Joe, 's)
obl(look, hand)
punct(roughen, ,)
conj(look, roughen)
case(work, by)
obl(roughen, work)
case(smithy, in)
det(smithy, the)
obl(roughen, smithy)
punct(make, ,)
cc(make, and)
det(contrast, the)
amod(contrast, deliberate)
nsubj:pass(make, contrast)
case(hand, between)
nmod:poss(hand, she)
amod(hand, white)
nmod(contrast, hand)
cc(one, and)
nmod:poss(one, he)
amod(one, blacken)
conj(hand, one)
aux:pass(make, be)
conj(troubled, make)
mark(symbolize, to)
xcomp(make, symbolize)
det(opposition, the)
obj(symbolize, opposition)
case(value, of)
nmod(opposition, value)
case(which, between)
nmod(struggle, which)
compound(struggle, pip)
nmod(opposition, struggle)
punct(struggle, --)
conj(struggle, idleness)
cc(work, and)
conj(struggle, work)
punct(artificiality, ,)
conj(struggle, artificiality)
cc(naturalness, and)
conj(struggle, naturalness)
punct(gentility, ,)
conj(struggle, gentility)
cc(commonness, and)
conj(struggle, commonness)
punct(coldness, ,)
conj(struggle, coldness)
cc(affection, and)
conj(struggle, affection)
punct(House, --)
case(fact, in)
nmod(House, fact)
punct(House, ,)
case(House, between)
compound(House, Satis)
nmod(struggle, House)
cc(forge, and)
det(forge, the)
conj(House, forge)
punct(House, .)
advmod(snobbery, when)
det(snobbery, the)
conj(House, snobbery)
nsubj(alienate, that)
acl:relcl(snobbery, alienate)
obj(alienate, pip)
advmod(alienate, from)
nsubj(give, Joe)
advmod(give, finally)
root(ROOT, give)
obj(give, way)
case(force, before)
det(force, the)
amod(force, deeper)
cc(stronger, and)
conj(deeper, stronger)
obl(give, force)
case(love, of)
nmod(force, love)
punct(mark, ,)
det(reunion, the)
nsubj:pass(mark, reunion)
aux:pass(mark, be)
parataxis(give, mark)
case(handshake, by)
det(handshake, a)
amod(handshake, embarrassed)
obl(mark, handshake)
case(which, at)
obl(exclaim, which)
nsubj(exclaim, pip)
acl:relcl(handshake, exclaim)
punct(give, :)
punct(give, ``)
discourse(wipe, no)
punct(wipe, ,)
aux(wipe, do)
advmod(wipe, not)
root(ROOT, wipe)
obj(wipe, it)
compound:prt(wipe, off)
punct(wipe, --)
case(sake, for)
nmod:poss(sake, God)
case(God, 's)
obl(wipe, sake)
punct(give, ,)
parataxis(wipe, give)
iobj(give, I)
nmod:poss(hand, you)
amod(hand, blacken)
obj(give, hand)
punct(give, '')
punct(wipe, !)
punct(wipe, !)
nmod:poss(taking, pip)
case(pip, 's)
amod(taking, abject)
compound(taking, leave)
punct(taking, -)
nsubj(signalize, taking)
case(Havisham, of)
compound(Havisham, miss)
nmod(taking, Havisham)
punct(taking, ,)
case(which, during)
obl(kneel, which)
nsubj(kneel, he)
acl:relcl(taking, kneel)
mark(kiss, to)
xcomp(kneel, kiss)
nmod:poss(hand, she)
obj(kiss, hand)
punct(signalize, ,)
root(ROOT, signalize)
nmod:poss(homage, he)
obj(signalize, homage)
case(patroness, to)
det(patroness, a)
amod(patroness, suppose)
nmod(homage, patroness)
nsubj(seem, who)
acl:relcl(patroness, seem)
mark(open, to)
aux(open, be)
xcomp(seem, open)
compound:prt(open, up)
case(he, for)
obl(open, he)
det(world, a)
amod(world, new)
obj(open, world)
case(glamour, of)
nmod(world, glamour)
punct(open, ;)
punct(open, ;)
advmod(pause, when)
punct(pause, ,)
case(journey, on)
det(journey, the)
obl(pause, journey)
case(London, to)
nmod(journey, London)
nsubj(follow, that)
advmod(follow, immediately)
acl:relcl(journey, follow)
punct(pause, ,)
nsubj(pause, he)
conj(signalize, pause)
advmod(pause, nostalgically)
mark(lay, to)
xcomp(pause, lay)
nmod:poss(hand, he)
obj(lay, hand)
case(post, upon)
det(post, the)
compound(post, finger)
punct(post, -)
obl(lay, post)
case(end, at)
det(end, the)
nmod(post, end)
case(village, of)
det(village, the)
nmod(end, village)
punct(designate, ,)
det(pointer, the)
compound(pointer, wooden)
nsubj(designate, pointer)
advmod(designate, symbolically)
parataxis(pause, designate)
det(frontier, a)
amod(frontier, spiritual)
obj(designate, frontier)
case(innocence, between)
nmod(frontier, innocence)
cc(corruption, and)
det(corruption, the)
conj(innocence, corruption)
case(vanity, of)
amod(vanity, worldly)
nmod(corruption, vanity)
punct(signalize, .)
advmod(miss, incidentally)
punct(miss, ,)
nsubj(miss, one)
aux(miss, can)
advmod(miss, not)
root(ROOT, miss)
det(significance, the)
obj(miss, significance)
case(gesture, of)
det(gesture, this)
nmod(significance, gesture)
punct(miss, ,)
case(Dickens, for)
obl(reintroduce, Dickens)
conj(miss, reintroduce)
obj(reintroduce, it)
advmod(reintroduce, associatively)
case(mind, in)
nmod:poss(mind, pip)
case(pip, 's)
obl(reintroduce, mind)
case(crisis, at)
det(crisis, another)
amod(crisis, moral)
cc(psychological, and)
conj(moral, psychological)
nmod(mind, crisis)
punct(crisis, --)
nmod:poss(recognition, he)
amod(recognition, painful)
appos(crisis, recognition)
punct(recognition, ,)
case(talk, in)
det(talk, a)
nmod(recognition, talk)
case(Herbert, with)
nmod(talk, Herbert)
flat(Herbert, Pocket)
punct(talk, ,)
mark(destructive, that)
nmod:poss(attachment, he)
amod(attachment, hopeless)
nsubj(destructive, attachment)
case(Estella, to)
nmod(attachment, Estella)
cop(destructive, be)
case(destructive, as)
compound(destructive, self)
punct(destructive, -)
acl:relcl(talk, destructive)
mark(romantic, as)
nsubj(romantic, it)
cop(romantic, be)
advcl(destructive, romantic)
punct(miss, .)
case(case, in)
det(case, both)
obl(represent, case)
det(post, the)
compound(post, finger)
punct(post, -)
nsubj(represent, post)
root(ROOT, represent)
nmod:poss(awareness, pip)
case(pip, 's)
amod(awareness, heighten)
obj(represent, awareness)
case(magnetism, of)
amod(magnetism, contrary)
nmod(awareness, magnetism)
punct(represent, . )
det(variety, a)
nsubj(help, variety)
case(movement, of)
compound(movement, hand)
nmod(variety, movement)
root(ROOT, help)
xcomp(help, dramatize)
det(climate, the)
amod(climate, moral)
obj(dramatize, climate)
case(encounter, of)
det(encounter, the)
amod(world, fall)
compound(encounter, world)
compound(encounter, pip)
nmod(climate, encounter)
case(forge, beyond)
det(forge, the)
nmod(encounter, forge)
punct(help, .)
det(attendance, the)
obl:npmod(like, vulture)
punct(like, -)
amod(attendance, like)
nsubj:pass(sum, attendance)
case(family, of)
det(family, the)
compound(family, Pocket)
nmod(attendance, family)
case(miss, upon)
nmod(family, miss)
nmod(family, Havisham)
aux:pass(sum, be)
root(ROOT, sum)
compound:prt(sum, up)
case(gesture, in)
det(gesture, the)
amod(gesture, hypocritical)
obl(sum, gesture)
case(Pocket, of)
compound(Pocket, miss)
compound(Pocket, Camilla)
nmod(gesture, Pocket)
punct(Pocket, ,)
nsubj(put, who)
acl:relcl(Pocket, put)
nmod:poss(hand, she)
obj(put, hand)
case(throat, to)
nmod:poss(throat, she)
obl(put, throat)
case(spasm, in)
det(spasm, a)
amod(spasm, feign)
obl(put, spasm)
case(chok, of)
compound(stricken, grief)
punct(stricken, -)
amod(chok, stricken)
nmod(spasm, chok)
punct(lay, ,)
advmod(lay, then)
conj(spasm, lay)
obj(lay, it)
punct(lay, ``)
case(bosom, upon)
nmod:poss(bosom, she)
amod(bosom, heave)
obl(lay, bosom)
punct(bosom, '')
case(fortitude, with)
punct(fortitude, ``)
det(fortitude, a)
amod(fortitude, unnatural)
nmod(bosom, fortitude)
case(manner, of)
nmod(fortitude, manner)
punct(fortitude, '')
punct(kiss, ,)
cc(kiss, and)
advmod(kiss, finally)
conj(fortitude, kiss)
obj(kiss, it)
mark(miss, to)
xcomp(kiss, miss)
obj(miss, Havisham)
case(parody, in)
det(parody, a)
obl(miss, parody)
case(mannerism, of)
det(lady, the)
nmod:poss(mannerism, lady)
case(lady, 's)
amod(mannerism, own)
nmod(parody, mannerism)
case(Estella, toward)
nmod(mannerism, Estella)
punct(Estella, .)
nmod:poss(hand, Pumblechook)
case(Pumblechook, 's)
nsubj(serve, hand)
case(novel, throughout)
det(novel, the)
nmod(hand, novel)
acl:relcl(parody, serve)
case(greed, to)
amod(greed, travesty)
obl(serve, greed)
cc(aggrandizement, and)
amod(aggrandizement, hypocritical)
compound(aggrandizement, self)
punct(aggrandizement, -)
conj(greed, aggrandizement)
punct(sum, .)
nsubj(see, we)
advmod(see, first)
root(ROOT, see)
obj(see, he)
xcomp(see, shake)
nmod:poss(hand, Mrs.)
flat(Mrs., Joe)
case(Mrs., 's)
obj(shake, hand)
mark(discover, on)
advcl(shake, discover)
det(amount, the)
amod(amount, sizable)
obj(discover, amount)
case(premium, of)
det(premium, the)
nmod(amount, premium)
acl(premium, pay)
case(husband, to)
nmod:poss(husband, she)
obl(pay, husband)
case(indenture, for)
nmod:poss(indenture, pip)
case(pip, 's)
obl(pay, indenture)
case(apprentice, as)
det(apprentice, a)
nmod(indenture, apprentice)
cc(pump, and)
advmod(pump, later)
conj(pay, pump)
nmod:poss(hand, pip)
case(pip, 's)
obj(pump, hand)
punct(pump, ``)
case(time, for)
det(time, the)
amod(time, hundredth)
obl(pump, time)
case(least, at)
nmod(time, least)
punct(time, '')
punct(see, ()
punct(see, ``)
aux(may, may)
nsubj(may, I)
punct(I, --)
root(ROOT, may)
nsubj(may, I)
punct(I, --)
punct(I, '')
punct(I, ?)
punct(I, ?)
punct(I, ))
case(congratulation, in)
amod(congratulation, effusive)
nmod(I, congratulation)
case(pip, to)
nmod(congratulation, pip)
case(expectation, on)
nmod:poss(expectation, he)
nmod(congratulation, expectation)
punct(congratulation, .)
nsubj(take, we)
root(ROOT, take)
obj(take, leave)
case(Pumblechook, of)
nmod(leave, Pumblechook)
mark(gloat, as)
nsubj(gloat, he)
advcl(take, gloat)
case(loss, over)
nmod:poss(loss, pip)
case(pip, 's)
obl(gloat, loss)
case(fortune, of)
nmod(loss, fortune)
punct(extend, ,)
advcl(gloat, extend)
nmod:poss(hand, he)
obj(extend, hand)
punct(extend, ``)
case(air, with)
det(air, a)
advmod(forgive, magnificently)
amod(air, forgive)
obl(extend, air)
punct(air, '')
cc(exhibit, and)
conj(extend, exhibit)
punct(finger, ``)
det(finger, the)
amod(finger, same)
amod(finger, fat)
nummod(finger, five)
obj(exhibit, finger)
punct(finger, '')
punct(one, ,)
appos(finger, one)
case(which, of)
obl(identify, which)
nsubj(identify, he)
acl:relcl(one, identify)
case(finger, with)
punct(finger, ``)
det(finger, the)
obl(identify, finger)
case(Providence, of)
nmod(finger, Providence)
punct(finger, '')
cc(shake, and)
conj(identify, shake)
case(pip, at)
obl(shake, pip)
case(imputation, in)
det(imputation, a)
amod(imputation, cant)
obl(shake, imputation)
case(ingratitoode, of)
det(latter, the)
nmod:poss(ingratitoode, latter)
case(latter, 's)
punct(ingratitoode, ``)
nmod(imputation, ingratitoode)
punct(ingratitoode, '')
cc(generosity, and)
nmod:poss(generosity, he)
amod(generosity, own)
conj(ingratitoode, generosity)
case(benefactor, as)
nmod:poss(benefactor, pip)
case(pip, 's)
punct(benefactor, ``)
amod(benefactor, earliest)
nmod(generosity, benefactor)
punct(benefactor, '')
punct(benefactor, .)
nsubj(learn, pip)
advmod(learn, first)
acl:relcl(generosity, learn)
punct(power, ``)
det(power, the)
amod(power, stupendous)
xcomp(learn, power)
case(money, of)
nmod(power, money)
punct(power, '')
case(tailor, from)
det(tailor, the)
amod(tailor, sycophantic)
nmod(power, tailor)
punct(tailor, ,)
appos(tailor, Mr.)
flat(Mr., Trabb)
punct(Mr., ,)
nmod:poss(brutality, whose)
nsubj(match, brutality)
case(helper, to)
nmod:poss(helper, he)
compound(helper, boy)
nmod(brutality, helper)
advmod(match, exactly)
acl:relcl(tailor, match)
det(resource, the)
amod(resource, financial)
obj(match, resource)
case(customer, of)
det(customer, each)
amod(customer, new)
nmod(resource, customer)
punct(touch, ,)
cc(touch, and)
nmod:poss(hand, whose)
compound(hand, fawn)
nsubj(touch, hand)
conj(match, touch)
punct(outside, ``)
det(outside, the)
obj(touch, outside)
case(elbow, of)
det(elbow, each)
nmod(outside, elbow)
punct(outside, '')
cc(rub, and)
punct(rub, ``)
conj(outside, rub)
punct(rub, '')
root(ROOT, pip)
case(shop, out)
case(shop, of)
det(shop, the)
nmod(pip, shop)
punct(pip, .)
det(respectability, the)
nsubj(imply, respectability)
obj(confer, which)
nsubj(confer, money)
acl:relcl(respectability, confer)
root(ROOT, imply)
det(etiquette, a)
amod(etiquette, different)
obj(imply, etiquette)
punct(learn, ,)
cc(learn, and)
punct(learn, ,)
mark(take, upon)
advcl(learn, take)
compound:prt(take, up)
det(life, the)
obj(take, life)
case(gentleman, of)
det(gentleman, a)
compound(gentleman, London)
nmod(life, gentleman)
punct(learn, ,)
nsubj(learn, pip)
aux(learn, must)
conj(imply, learn)
case(Herbert, from)
obl(learn, Herbert)
flat(Herbert, Pocket)
mark(use, that)
punct(use, ``)
det(spoon, the)
nsubj:pass(use, spoon)
aux:pass(use, be)
advmod(use, not)
advmod(use, generally)
ccomp(learn, use)
case(hand, over)
punct(hand, -)
obl(use, hand)
punct(specify, ,)
cc(specify, but)
case(item, under)
punct(item, '')
punct(item, .)
det(item, the)
amod(item, follow)
nsubj:pass(specify, item)
aux(specify, may)
aux:pass(specify, be)
conj(use, specify)
case(form, in)
amod(form, actual)
cc(symbolic, or)
conj(actual, symbolic)
obl(specify, form)
case(operand, in)
det(operand, the)
nmod(form, operand)
case(instruction, of)
det(instruction, those)
nmod(operand, instruction)
nsubj(refer, which)
acl:relcl(instruction, refer)
case(item, to)
det(item, the)
amod(item, particular)
obl(refer, item)
punct(refer, :)
appos(item, channel)
punct(unit, ,)
conj(channel, unit)
punct(channel, ,)
amod(channel, combine)
conj(channel, channel)
cc(unit, and)
conj(channel, unit)
punct(arm, ,)
amod(arm, combine)
conj(channel, arm)
cc(file, and)
conj(arm, file)
punct(synchronizer, ,)
compound(record, unit)
compound(synchronizer, record)
conj(channel, synchronizer)
punct(synchronizer, ,)
compound(synchronizer, inquiry)
conj(channel, synchronizer)
punct(switch, ,)
cc(switch, and)
compound(switch, alteration)
conj(channel, switch)
punct(synchronizer, .)
det(EQU, the)
amod(EQU, declarative)
compound(EQU, operation)
nsubj:pass(use, EQU)
aux:pass(use, be)
root(ROOT, use)
mark(equate, to)
xcomp(use, equate)
amod(name, symbolic)
obj(equate, name)
case(number, to)
compound(number, item)
nmod(name, number)
punct(see, ()
appos(number, see)
obj(see, page)
nummod(page, 85)
punct(see, ))
punct(see, .)
compound(card, continuation)
compound(statement, card)
amod(statement, Certain)
compound(statement, Autocoder)
nsubj(make, statement)
parataxis(use, make)
obj(make, provision)
case(parameter, for)
amod(parameter, more)
nmod(provision, parameter)
mark(contain, than)
aux(contain, may)
aux:pass(contain, be)
acl(parameter, contain)
case(operand, in)
det(operand, the)
obl(contain, operand)
punct(column, ()
appos(operand, column)
nummod(column, 21)
case(75, -)
nmod(21, 75)
punct(column, ))
case(line, of)
det(line, a)
amod(line, single)
nmod(operand, line)
case(sheet, on)
det(sheet, the)
compound(sheet, Autocoder)
compound(sheet, coding)
nmod(line, sheet)
punct(line, .)
mark(case, when)
nsubj(case, this)
cop(case, be)
det(case, the)
advcl(indicate, case)
punct(indicate, ,)
det(section, the)
amod(section, appropriate)
nsubj(indicate, section)
case(manual, of)
det(manual, this)
nmod(section, manual)
aux(indicate, will)
conj(use, indicate)
obj(indicate, that)
punct(use, ``)
compound(card, continuation)
nsubj:pass(use, card)
punct(card, '')
aux(use, may)
aux:pass(use, be)
root(ROOT, use)
punct(use, .)
advmod(continue, thus)
punct(continue, ,)
mark(permit, when)
advmod(permit, specifically)
advcl(continue, permit)
punct(continue, ,)
det(operand, the)
nsubj:pass(continue, operand)
case(line, of)
det(line, a)
amod(line, give)
nmod(operand, line)
case(sheet, on)
det(sheet, the)
compound(sheet, Autocoder)
compound(sheet, coding)
nmod(line, sheet)
aux(continue, may)
aux:pass(continue, be)
conj(use, continue)
case(operand, in)
det(operand, the)
obl(continue, operand)
case(line, of)
case(line, from)
nummod(line, one)
case(four, to)
nmod(one, four)
amod(line, additional)
nmod(operand, line)
nsubj(follow, which)
advmod(follow, immediately)
acl:relcl(line, follow)
punct(use, .)
det(column, the)
nsubj(blank, label)
cc(operation, and)
compound(column, operation)
conj(label, column)
aux(blank, must)
cop(blank, be)
root(ROOT, blank)
cc(begin, and)
det(continuation, the)
nsubj(begin, continuation)
case(operand, of)
det(operand, the)
nmod(continuation, operand)
aux(begin, must)
conj(blank, begin)
case(column, in)
obl(begin, column)
nummod(column, 21)
punct(blank, ;)
punct(blank, ;)
advmod(leave, i.e.)
punct(leave, ,)
nsubj:pass(leave, it)
aux(leave, must)
aux:pass(leave, be)
parataxis(blank, leave)
punct(leave, -)
advcl(leave, justified)
case(column, in)
det(column, the)
compound(column, operand)
obl(justified, column)
case(sheet, of)
det(sheet, the)
compound(sheet, coding)
nmod(column, sheet)
punct(blank, .)
det(operand, the)
nsubj(extend, operand)
aux(extend, need)
advmod(extend, not)
root(ROOT, extend)
case(column, across)
det(column, the)
amod(column, entire)
compound(column, operand)
obl(extend, column)
case(card, of)
cc:preconj(card, either)
det(card, the)
compound(card, header)
nmod(column, card)
cc(card, or)
compound(card, continuation)
conj(card, card)
cc(end, but)
aux(end, may)
conj(extend, end)
case(comma, with)
det(comma, the)
obl(end, comma)
case(parameter, follow)
det(parameter, any)
obl(end, parameter)
punct(extend, .)
nsubj(appear, remark)
aux(appear, may)
root(ROOT, appear)
case(right, to)
det(right, the)
obl(appear, right)
case(parameter, of)
det(parameter, the)
amod(parameter, last)
nmod(right, parameter)
case(card, on)
det(card, each)
nmod(parameter, card)
acl(parameter, provide)
nsubj:pass(separate, they)
aux:pass(separate, be)
ccomp(provide, separate)
case(operand, from)
det(operand, the)
obl(separate, operand)
case(space, by)
case(least, at)
nmod(two, least)
nummod(space, two)
amod(space, blank)
obl(separate, space)
punct(appear, .)
nsubj:pass(include, illustration)
case(use, of)
det(use, the)
nmod(illustration, use)
case(card, of)
compound(card, continuation)
nmod(use, card)
aux:pass(include, be)
root(ROOT, include)
case(example, throughout)
det(example, the)
obl(include, example)
acl(example, illustrate)
det(statement, the)
amod(statement, various)
obj(illustrate, statement)
punct(include, .)
mark(follow, if)
det(card, a)
compound(card, continuation)
nsubj(follow, card)
advcl(generate, follow)
det(statement, a)
obj(follow, statement)
nsubj(permit, that)
aux(permit, do)
advmod(permit, not)
acl:relcl(statement, permit)
compound(card, continuation)
obj(permit, card)
punct(generate, ,)
det(compiler, the)
nsubj(generate, compiler)
aux(generate, will)
root(ROOT, generate)
det(NOP, a)
obj(generate, NOP)
cc(issue, and)
conj(generate, issue)
det(message, a)
compound(message, error)
obj(issue, message)
punct(message, .)
amod(restriction, additional)
obj(generate, restriction)
case(use, regard)
det(use, the)
nmod(restriction, use)
case(card, of)
compound(card, continuation)
nmod(use, card)
case(macro-instruction, with)
nmod(use, macro-instruction)
acl(restriction, appear)
case(page, on)
obl(appear, page)
nummod(page, 106)
punct(generate, .)
root(ROOT, reservation)
case(word, of)
compound(word, index)
nmod(reservation, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
det(assignment, the)
parataxis(reservation, assignment)
case(address, of)
amod(address, actual)
nmod(assignment, address)
case(word, to)
amod(word, symbolic)
compound(word, index)
nmod(address, word)
cc(name, and)
amod(name, electronic)
compound(name, switch)
conj(word, name)
parataxis(reservation, occur)
case(phase, in)
obl(occur, phase)
nummod(phase, 3)
punct(phase, ,)
case(processor, of)
det(processor, the)
compound(processor, Autocoder)
nmod(phase, processor)
punct(occur, .)
det(availability, the)
amod(availability, initial)
nsubj:pass(determine, availability)
case(word, of)
compound(word, index)
nmod(availability, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
aux:pass(determine, be)
root(ROOT, determine)
case(table, by)
det(table, a)
obl(determine, table)
nsubj:pass(include, which)
aux:pass(include, be)
acl:relcl(table, include)
case(tape, in)
det(tape, the)
compound(Systems, Compiler)
compound(tape, Systems)
obl(include, tape)
punct(determine, .)
det(table, this)
nsubj(indicate, table)
advmod(indicate, originally)
root(ROOT, indicate)
mark(available, that)
compound(word, index)
nsubj(available, word)
nummod(word, 1)
case(96, through)
nummod(switch, 96)
cc(electronic, and)
conj(96, electronic)
nmod(word, switch)
nummod(switch, 1)
case(30, through)
nmod(switch, 30)
cop(available, be)
ccomp(indicate, available)
case(assignment, for)
obl(available, assignment)
case(reference, to)
amod(reference, symbolic)
nmod(assignment, reference)
punct(available, ;)
punct(available, ;)
compound(word, index)
nsubj(available, word)
nummod(word, 97)
case(99, through)
nmod(word, 99)
cop(available, be)
advmod(available, not)
ccomp(indicate, available)
punct(indicate, .)
det(setting, the)
amod(setting, initial)
nsubj:pass(alter, setting)
case(table, of)
det(table, this)
nmod(setting, table)
aux(alter, may)
aux:pass(alter, be)
root(ROOT, alter)
punct(alter, ,)
advmod(alter, however)
punct(alter, ,)
mark(describe, as)
advcl(alter, describe)
case(7070/7074, in)
det(7070/7074, the)
obl(describe, 7070/7074)
compound(process, data)
compound(Bulletin, process)
compound(Bulletin, system)
root(ROOT, Bulletin)
punct(Bulletin, ``)
appos(Bulletin, IBM)
appos(Bulletin, 7070/7074)
compound(system, Compiler)
root(ROOT, system)
punct(system, :)
compound(procedure, operating)
root(ROOT, procedure)
punct(procedure, '')
punct(procedure, ,)
parataxis(procedure, form)
nsubj:pass(collect, Aj)
punct(Aj, .)
case(pass, during)
det(pass, the)
amod(pass, first)
obl(collect, pass)
case(phase, of)
nmod(pass, phase)
nummod(phase, 3)
punct(collect, ,)
punct(collect, ,)
nsubj:pass(collect, reference)
case(address, to)
det(address, the)
amod(address, actual)
nmod(reference, address)
case(word, of)
compound(word, index)
nmod(address, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
aux:pass(collect, be)
root(ROOT, collect)
cc(update, and)
det(table, the)
compound(table, availability)
nsubj:pass(update, table)
aux:pass(update, be)
conj(collect, update)
punct(collect, .)
case(end, at)
det(end, the)
obl(indicate, end)
case(pass, of)
det(pass, this)
nmod(end, pass)
punct(indicate, ,)
det(table, the)
nsubj(indicate, table)
root(ROOT, indicate)
det(word, which)
compound(word, index)
nsubj(available, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
cop(available, be)
advmod(available, not)
ccomp(indicate, available)
case(assignment, for)
obl(available, assignment)
case(reference, to)
amod(reference, symbolic)
nmod(assignment, reference)
punct(indicate, .)
det(word, both)
compound(word, index)
nsubj:pass(make, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
aux(make, may)
aux(make, have)
aux:pass(make, be)
root(ROOT, make)
xcomp(make, unavailable)
case(start, before)
det(start, the)
obl(make, start)
case(assignment, of)
nmod(start, assignment)
case(one, in)
nmod(start, one)
case(way, of)
det(way, the)
amod(way, follow)
nmod(one, way)
punct(1, . )
nummod(indicate, 1)
punct(1, .)
det(setting, the)
amod(setting, initial)
nsubj(indicate, setting)
case(table, of)
det(table, the)
compound(table, availability)
nmod(setting, table)
ccomp(make, indicate)
mark(available, that)
det(word, the)
compound(word, index)
nsubj(available, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
cop(available, be)
advmod(available, not)
ccomp(indicate, available)
case(assignment, for)
obl(available, assignment)
punct(make, . )
nummod(use, 2)
punct(2, .)
det(number, the)
nummod(number, one)
punct(or, -)
cc(digit, or)
nummod(digit, two)
punct(digit, -)
compound(number, digit)
nsubj:pass(use, number)
case(word, of)
det(word, the)
compound(word, index)
nmod(number, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
aux:pass(use, be)
root(ROOT, use)
case(operand, in)
det(operand, the)
obl(use, operand)
case(instruction, of)
det(instruction, a)
amod(instruction, symbolic)
compound(instruction, machine)
nmod(operand, instruction)
mark(specify, to)
acl(instruction, specify)
obj(specify, index)
cc(parameter, or)
case(parameter, as)
det(parameter, a)
conj(index, parameter)
nsubj(word, which)
cop(word, be)
advmod(word, always)
det(word, a)
compound(word, index)
acl:relcl(parameter, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
punct(word, ,)
advmod(3, e.g.)
punct(3, ,)
conj(word, 3)
punct(use, .)
det(number, the)
nummod(digit, one)
punct(digit, -)
cc(digit, or)
nummod(digit, two)
punct(digit, -)
compound(number, digit)
nsubj:pass(use, number)
case(word, of)
det(word, the)
compound(word, index)
nmod(number, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
aux:pass(use, be)
root(ROOT, use)
case(operand, in)
det(operand, the)
obl(use, operand)
case(statement, of)
det(statement, a)
compound(statement, EQU)
nmod(operand, statement)
punct(statement, ,)
advmod(use, e.g.)
punct(use, ,)
mark(reserve, when)
det(word, the)
compound(word, index)
nsubj:pass(reserve, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
aux:pass(reserve, be)
advcl(use, reserve)
case(usage, because)
fixed(because, of)
amod(usage, actual)
obl(reserve, usage)
case(statement, in)
det(statement, the)
nmod(usage, statement)
acl(statement, describe)
advmod(describe, above)
punct(important, ,)
det(position, the)
nsubj(important, position)
cc(order, or)
conj(position, order)
case(statement, of)
det(statement, the)
nmod(position, statement)
case(program, within)
det(program, the)
nmod(statement, program)
cop(important, be)
advmod(important, not)
conj(use, important)
punct(important, ;)
punct(important, ;)
det(reference, any)
amod(reference, such)
nsubj(make, reference)
aux(make, will)
parataxis(important, make)
det(word, the)
compound(word, index)
obj(make, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
amod(word, unavailable)
case(end, at)
det(end, the)
obl(unavailable, end)
case(pass, of)
det(pass, this)
nmod(end, pass)
punct(unavailable, .)
case(pass, during)
det(pass, the)
compound(pass, assignment)
obl(make, pass)
case(phase, of)
nmod(pass, phase)
nummod(phase, 3)
punct(reserve, ,)
punct(reserve, ,)
compound(word, index)
nsubj:pass(reserve, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
aux:pass(reserve, be)
acl:relcl(pass, reserve)
mark(encounter, as)
nsubj:pass(encounter, they)
aux:pass(encounter, be)
advcl(reserve, encounter)
case(assignment, during)
obl(encounter, assignment)
punct(use, .)
compound(word, index)
nsubj:pass(reserve, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
aux(reserve, may)
aux:pass(reserve, be)
root(ROOT, reserve)
case(way, in)
det(way, the)
amod(way, follow)
obl(reserve, way)
punct(reserve, .)
det(method, the)
amod(method, first)
nummod(method, two)
nsubj(apply, method)
root(ROOT, apply)
case(word, to)
det(word, both)
compound(word, index)
obl(apply, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
punct(apply, ;)
punct(apply, ;)
det(third, the)
nsubj(apply, third)
parataxis(apply, apply)
advmod(word, only)
case(word, to)
compound(word, index)
obl(apply, word)
punct(1, . )
nummod(examine, 1)
punct(1, .)
case(pass, during)
det(pass, the)
compound(pass, assignment)
obl(examine, pass)
punct(examine, ,)
det(instruction, each)
nsubj:pass(examine, instruction)
aux:pass(examine, be)
parataxis(apply, examine)
case(reference, for)
obl(examine, reference)
case(name, to)
det(name, the)
amod(name, symbolic)
nmod(reference, name)
case(word, of)
det(word, a)
compound(word, index)
nmod(name, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
punct(apply, .)
mark(find, when)
det:predet(reference, such)
det(reference, a)
nsubj:pass(find, reference)
aux:pass(find, be)
advcl(assign, find)
punct(assign, ,)
det(address, a)
amod(address, actual)
nsubj:pass(assign, address)
aux:pass(assign, be)
root(ROOT, assign)
cc(change, and)
det(table, the)
compound(table, availability)
nsubj:pass(change, table)
aux:pass(change, be)
conj(assign, change)
mark(available, so)
fixed(so, that)
det(word, the)
amod(word, assign)
compound(word, index)
nsubj(available, word)
cc(switch, or)
conj(word, switch)
cop(available, be)
advmod(longer, no)
advmod(available, longer)
advcl(change, available)
case(assignment, for)
amod(assignment, later)
obl(available, assignment)
punct(assign, . )
nummod(reserve, 2)
punct(2, .)
mark(use, if)
det(address, the)
nummod(digit, one)
punct(digit, -)
cc(digit, or)
nummod(digit, two)
punct(digit, -)
compound(address, digit)
nsubj:pass(use, address)
case(word, of)
det(word, a)
compound(word, index)
nmod(address, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
aux:pass(use, be)
advcl(reserve, use)
cc(include, or)
aux:pass(include, be)
conj(use, include)
case(operand, in)
det(operand, the)
obl(include, operand)
case(statement, of)
det(statement, a)
amod(statement, xreserve)
cc(sreserve, or)
conj(xreserve, sreserve)
nmod(operand, statement)
punct(see, ()
parataxis(statement, see)
obj(see, page)
nummod(page, 99)
punct(see, ))
punct(reserve, ,)
det(word, the)
amod(word, corresponding)
compound(word, index)
nsubj:pass(reserve, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
aux:pass(reserve, be)
root(ROOT, reserve)
punct(reserve, . )
nummod(reserve, 3)
punct(3, .)
mark(assign, if)
det(statement, a)
nsubj:pass(assign, statement)
aux(assign, have)
aux:pass(assign, be)
advcl(reserve, assign)
det(address, a)
obj(assign, address)
case(area, in)
det(area, the)
compound(word, index)
compound(area, word)
nmod(address, area)
case(means, by)
nmod(address, means)
case(label, of)
det(label, a)
amod(label, actual)
nmod(means, label)
cc(means, or)
case(means, by)
conj(label, means)
case(statement, of)
det(statement, a)
compound(statement, origin)
nmod(means, statement)
nsubj(refer, which)
acl:relcl(statement, refer)
case(address, to)
det(address, a)
amod(address, actual)
obl(refer, address)
punct(reserve, ,)
det(word, the)
amod(word, corresponding)
compound(word, index)
nsubj:pass(reserve, word)
aux(reserve, will)
aux:pass(reserve, be)
root(ROOT, reserve)
punct(reserve, .)
det(entry, these)
nsubj(appear, entry)
aux(appear, should)
advmod(appear, normally)
root(ROOT, appear)
case(beginning, at)
det(beginning, the)
obl(appear, beginning)
case(program, of)
det(program, the)
nmod(beginning, program)
cc(follow, or)
advmod(follow, immediately)
case(statement, follow)
det(statement, each)
amod(statement, LITORIGIN)
obl(appear, statement)
punct(appear, .)
advmod(assign, otherwise)
punct(assign, ,)
amod(name, symbolic)
nsubj:pass(assign, name)
aux(assign, may)
aux(assign, have)
advmod(assign, previously)
aux:pass(assign, be)
root(ROOT, assign)
case(word, to)
det(word, these)
amod(word, same)
compound(word, index)
obl(assign, word)
punct(assign, . )
punct(apply, ()
det(method, this)
nsubj(apply, method)
aux(apply, do)
advmod(apply, not)
root(ROOT, apply)
case(switch, to)
amod(switch, electronic)
obl(apply, switch)
punct(apply, .)
punct(apply, ))
det(method, the)
amod(method, precede)
nsubj(allow, method)
root(ROOT, allow)
amod(use, efficient)
obj(allow, use)
case(word, of)
compound(word, index)
nmod(use, word)
cc(switch, and)
amod(switch, electronic)
conj(word, switch)
case(program, during)
det(program, a)
amod(program, sectionalize)
cc(multi-phase, or)
conj(sectionalize, multi-phase)
nmod(use, program)
punct(allow, ,)
advmod(use, particularly)
mark(use, when)
advcl(allow, use)
case(conjunction, in)
obl(use, conjunction)
case(statement, with)
det(statement, the)
amod(statement, LITORIGIN)
obl(use, statement)
punct(allow, .)
amod(caution, extreme)
nsubj:pass(use, caution)
aux(use, should)
aux:pass(use, be)
root(ROOT, use)
punct(use, ,)
advmod(use, however)
punct(use, ,)
mark(avoid, to)
advcl(use, avoid)
det(usage, the)
amod(usage, conflict)
obj(avoid, usage)
case(word, of)
det(word, a)
compound(word, index)
nmod(usage, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
nsubj(result, which)
aux(result, may)
acl:relcl(word, result)
case(assignment, from)
det(assignment, the)
obl(result, assignment)
case(name, of)
advmod(one, more)
fixed(more, than)
nummod(name, one)
nmod(assignment, name)
cc(function, or)
conj(name, function)
case(address, to)
det(address, the)
amod(address, same)
nmod(name, address)
punct(use, .)
mark(appear, if)
det(name, the)
amod(name, symbolic)
nsubj(appear, name)
cc(address, or)
amod(address, actual)
conj(name, address)
case(word, of)
det(word, a)
compound(word, index)
nmod(address, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
advcl(make, appear)
cc(include, or)
aux:pass(include, be)
conj(appear, include)
case(operand, in)
det(operand, the)
obl(include, operand)
case(statement, of)
det(statement, a)
amod(statement, xrelease)
cc(srelease, or)
conj(xrelease, srelease)
nmod(operand, statement)
punct(see, ()
parataxis(statement, see)
obj(see, page)
nummod(page, 101)
punct(see, ))
punct(make, ,)
det(word, the)
amod(word, specify)
compound(word, index)
nsubj:pass(make, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
aux(make, will)
advmod(make, again)
aux:pass(make, be)
root(ROOT, make)
xcomp(make, available)
punct(make, ,)
advmod(method, regardless)
case(method, of)
det(method, the)
obl(available, method)
case(which, by)
obl(reserve, which)
nsubj:pass(reserve, it)
aux:pass(reserve, be)
acl:relcl(method, reserve)
punct(make, .)
nsubj:pass(use, it)
aux(use, will)
advmod(use, not)
punct(use, ,)
advmod(use, however)
punct(use, ,)
aux:pass(use, be)
root(ROOT, use)
case(assignment, for)
amod(assignment, symbolic)
obl(use, assignment)
mark(assign, until)
det(word, all)
amod(word, other)
compound(word, index)
nsubj:pass(assign, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
aux(assign, have)
aux:pass(assign, be)
advcl(use, assign)
case(time, for)
det(time, the)
amod(time, first)
obl(assign, time)
punct(use, .)
mark(pass, if)
punct(find, ,)
case(time, at)
det(time, any)
obl(pass, time)
case(assignment, during)
det(assignment, the)
nmod(time, assignment)
advcl(find, pass)
punct(find, ,)
det(compiler, the)
nsubj(find, compiler)
root(ROOT, find)
mark(be, that)
expl(be, there)
ccomp(find, be)
det(word, no)
amod(word, more)
compound(word, index)
nsubj(be, word)
amod(word, available)
case(assignment, for)
obl(available, assignment)
punct(message, ,)
det(message, the)
compound(message, warning)
appos(word, message)
punct(find, ``)
det(word, no)
amod(word, more)
compound(word, index)
nsubj:pass(place, word)
amod(word, available)
punct(word, '')
aux(place, will)
aux:pass(place, be)
root(ROOT, place)
case(list, in)
det(list, the)
compound(program, object)
compound(list, program)
obl(place, list)
punct(alter, ,)
det(table, the)
nsubj:pass(alter, table)
aux(alter, will)
aux:pass(alter, be)
parataxis(place, alter)
mark(show, to)
advcl(alter, show)
mark(available, that)
compound(word, index)
nsubj(available, word)
nummod(word, 1)
case(96, through)
nmod(1, 96)
cop(available, be)
ccomp(show, available)
punct(continue, ,)
cc(continue, and)
det(assignment, the)
nsubj(continue, assignment)
aux(continue, will)
conj(available, continue)
advmod(continue, as)
fixed(as, before)
punct(place, .)
mark(find, if)
det(compiler, the)
nsubj(find, compiler)
advcl(message, find)
mark(be, that)
expl(be, there)
ccomp(find, be)
det(switch, no)
amod(switch, more)
amod(switch, electronic)
nsubj(be, switch)
amod(switch, available)
case(assignment, for)
obl(available, assignment)
punct(message, ,)
det(message, the)
compound(message, warning)
root(ROOT, message)
punct(message, ``)
advmod(more, no)
advmod(Electronic, more)
amod(Switches, Electronic)
nsubj:pass(place, Switches)
amod(Switches, available)
punct(Switches, '')
aux(place, will)
aux:pass(place, be)
root(ROOT, place)
case(list, in)
det(list, the)
compound(program, object)
compound(list, program)
obl(place, list)
punct(alter, ,)
det(table, the)
nsubj:pass(alter, table)
aux(alter, will)
aux:pass(alter, be)
parataxis(place, alter)
mark(show, to)
advcl(alter, show)
mark(available, that)
amod(switch, electronic)
nsubj(available, switch)
nummod(switch, 1)
case(30, through)
nmod(1, 30)
cop(available, be)
ccomp(show, available)
punct(continue, ,)
cc(continue, and)
nsubj(continue, assignment)
aux(continue, will)
conj(available, continue)
advmod(continue, as)
fixed(as, before)
punct(place, .)
det(usage, the)
amod(usage, resultant)
amod(usage, conflict)
nsubj:pass(avoid, usage)
case(word, of)
compound(word, index)
nmod(usage, word)
cc(switch, or)
amod(switch, electronic)
conj(word, switch)
aux(avoid, may)
aux:pass(avoid, be)
root(ROOT, avoid)
mark(reduce, by)
advcl(avoid, reduce)
det(number, the)
obj(reduce, number)
case(name, of)
amod(name, symbolic)
nmod(number, name)
acl(name, use)
punct(use, ,)
advmod(use, e.g.)
punct(use, ,)
case(use, through)
det(use, the)
amod(use, proper)
obl(reduce, use)
case(statement, of)
det(statement, the)
compound(statement, EQU)
punct(xrelease, ,)
conj(EQU, xrelease)
punct(srelease, ,)
cc(srelease, or)
conj(EQU, srelease)
nmod(use, statement)
punct(avoid, .)
mark(note, as)
advcl(available, note)
case(c, in)
compound(c, Appendix)
obl(note, c)
punct(available, ,)
compound(word, index)
nsubj(available, word)
nummod(word, 97)
case(99, through)
nmod(word, 99)
cop(available, be)
advmod(available, never)
root(ROOT, available)
case(assignment, for)
obl(available, assignment)
case(name, to)
amod(name, symbolic)
nmod(assignment, name)
case(compiler, by)
det(compiler, the)
nmod(name, compiler)
punct(available, ;)
punct(available, ;)
advmod(make, also)
punct(make, ,)
compound(word, index)
nsubj:pass(make, word)
nummod(word, 93)
case(96, through)
nmod(word, 96)
aux(make, may)
aux(make, have)
aux:pass(make, be)
parataxis(available, make)
xcomp(make, unavailable)
case(assignment, for)
obl(unavailable, assignment)
punct(statement, .)
amod(statement, declarative)
obl(make, statement)
compound(statement, Autocoder)
amod(statement, declarative)
nsubj(provide, statement)
acl:relcl(statement, provide)
det(processor, the)
obj(provide, processor)
case(information, with)
det(information, the)
amod(information, necessary)
nmod(processor, information)
mark(complete, to)
acl(information, complete)
det(operation, the)
amod(operation, imperative)
obj(complete, operation)
advmod(complete, properly)
punct(execute, .)
amod(statement, declarative)
nsubj:pass(execute, statement)
aux:pass(execute, be)
advmod(execute, never)
acl:relcl(information, execute)
case(program, in)
det(program, the)
compound(program, object)
obl(execute, program)
cc(separate, and)
aux(separate, should)
aux:pass(separate, be)
conj(execute, separate)
case(area, from)
det(area, the)
compound(area, program)
compound(area, instruction)
obl(separate, area)
punct(area, ,)
acl(area, place)
advmod(place, preferably)
case(beginning, at)
nmod:poss(beginning, its)
obl(place, beginning)
cc(end, or)
conj(beginning, end)
punct(available, .)
advmod(take, otherwise)
punct(take, ,)
amod(care, special)
nsubj:pass(take, care)
aux(take, must)
aux:pass(take, be)
root(ROOT, take)
case(branch, to)
obl(take, branch)
case(they, around)
obl(take, they)
mark(attempt, so)
fixed(so, that)
det(program, the)
nsubj(attempt, program)
aux(attempt, will)
advmod(attempt, not)
advcl(take, attempt)
mark(execute, to)
xcomp(attempt, execute)
obj(execute, something)
case(area, in)
det(area, a)
compound(area, data)
nmod(something, area)
case(instruction, as)
det(instruction, a)
obl(execute, instruction)
punct(take, .)
mark(encounter, if)
det(compiler, the)
nsubj(encounter, compiler)
aux(encounter, do)
advcl(issue, encounter)
amod(statement, such)
obj(encounter, statement)
punct(issue, ,)
det(message, a)
compound(message, warning)
nsubj:pass(issue, message)
aux(issue, will)
aux:pass(issue, be)
root(ROOT, issue)
punct(issue, .)
appos(issue, 7070/7074)
nsubj(include, Autocoder)
root(ROOT, include)
det(statement, the)
amod(statement, follow)
amod(statement, declarative)
obj(include, statement)
punct(include, :)
appos(statement, da)
punct(area, ()
compound(area, define)
appos(da, area)
punct(area, ))
punct(DC, ,)
conj(da, DC)
punct(define, ()
parataxis(da, define)
obj(define, Constant)
punct(define, ))
punct(DRDW, ,)
conj(da, DRDW)
punct(define, ()
parataxis(include, define)
compound(Word, record)
compound(Word, definition)
obj(define, Word)
punct(define, ))
punct(dsw, ,)
conj(define, dsw)
punct(define, ()
parataxis(define, define)
obj(define, Switch)
punct(define, ))
punct(dline, ,)
conj(define, dline)
punct(define, ()
parataxis(include, define)
obj(define, line)
punct(define, ))
punct(EQU, ,)
conj(define, EQU)
punct(Equate, ()
appos(EQU, Equate)
punct(Equate, ))
punct(,DTF, ,)
compound(,DTF, code)
appos(EQU, ,DTF)
punct(define, ()
parataxis(,DTF, define)
compound(file, tape)
obj(define, file)
punct(define, ))
punct(dioc, ,)
appos(file, dioc)
punct(define, ()
parataxis(dioc, define)
obj(define, input)
cc(control, /)
compound(control, output)
compound(system, control)
obj(define, system)
punct(define, ))
punct(DUF, ,)
cc(DUF, and)
conj(input, DUF)
punct(entry, ()
amod(entry, descriptive)
appos(DUF, entry)
case(record, for)
compound(record, unit)
nmod(entry, record)
punct(entry, ))
punct(da, .)
appos(entry, da)
punct(DC, ,)
conj(da, DC)
punct(DTF, ,)
conj(da, DTF)
punct(dline, ,)
cc(dline, and)
nsubj(require, dline)
parataxis(da, require)
advmod(one, more)
fixed(more, than)
nummod(entry, one)
obj(require, entry)
punct(require, .)
det(statement, the)
compound(statement, da)
nsubj:pass(use, statement)
aux:pass(use, be)
parataxis(require, use)
mark(name, to)
xcomp(use, name)
cc(define, and)
conj(name, define)
det(position, the)
obj(define, position)
cc(length, and)
conj(position, length)
case(field, of)
nmod(position, field)
case(area, within)
det(area, a)
nmod(field, area)
punct(include, .)
det(statement, the)
compound(statement, DC)
nsubj:pass(use, statement)
aux:pass(use, be)
root(ROOT, use)
mark(name, to)
xcomp(use, name)
cc(enter, and)
conj(name, enter)
obj(enter, constant)
case(program, into)
det(program, the)
compound(program, object)
obl(name, program)
punct(use, .)
case(7070, since)
det(7070, the)
obl(make, 7070)
cc(7074, and)
conj(7070, 7074)
root(ROOT, make)
obj(make, use)
case(word, of)
compound(definition, record)
compound(word, definition)
nmod(use, word)
punct(RDWS, ()
appos(word, RDWS)
punct(RDWS, ))
mark(read, to)
advcl(make, read)
punct(write, ,)
conj(read, write)
punct(move, ,)
conj(read, move)
punct(examine, ,)
cc(examine, and)
advmod(examine, otherwise)
conj(read, examine)
obj(examine, block)
case(storage, of)
nmod(block, storage)
punct(provide, ,)
det(statement, the)
compound(statement, da)
cc(DC, and)
conj(da, DC)
nsubj(provide, statement)
conj(make, provide)
det(option, the)
obj(provide, option)
mark(generate, of)
acl(option, generate)
obj(generate, RDWS)
advmod(generate, automatically)
punct(provide, . )
mark(instruct, when)
advmod(instruct, so)
advcl(generate, instruct)
punct(generate, ,)
nsubj(generate, Autocoder)
aux(generate, will)
root(ROOT, generate)
nummod(RDWS, one)
cc(more, or)
conj(one, more)
obj(generate, RDWS)
cc(assign, and)
conj(generate, assign)
iobj(assign, they)
amod(location, successive)
obj(assign, location)
advmod(precede, immediately)
advcl(assign, precede)
det(area, the)
obj(precede, area)
case(which, with)
obl(be, which)
nsubj(be, they)
acl:relcl(area, be)
mark(associate, to)
aux:pass(associate, be)
xcomp(be, associate)
punct(generate, .)
det(RDW, a)
nsubj(Af, RDW)
aux(Af, will)
cop(Af, be)
case(Af, of)
det(Af, the)
compound(Af, form)
root(ROOT, Af)
punct(Af, ,)
advmod(location, where)
nsubj(location, xxxx)
cop(location, be)
det(location, the)
amod(location, start)
acl:relcl(Af, location)
case(area, of)
det(area, the)
nmod(location, area)
cc(location, and)
nsubj(location, yyyy)
cop(location, be)
nmod:poss(location, its)
compound(location, end)
conj(location, location)
punct(Af, .)
det(address, these)
nsubj:pass(calculate, address)
aux:pass(calculate, be)
root(ROOT, calculate)
advmod(calculate, automatically)
case(processor, by)
det(processor, the)
obl(calculate, processor)
punct(calculate, .)
case(case, in)
det(case, some)
obl(advantageous, case)
punct(advantageous, ,)
expl(advantageous, it)
aux(advantageous, may)
cop(advantageous, be)
advmod(advantageous, more)
root(ROOT, advantageous)
mark(assign, to)
csubj(advantageous, assign)
obj(assign, location)
case(RDWS, to)
nmod(location, RDWS)
acl(location, associate)
case(area, with)
compound(area, da)
cc(DC, and)
conj(da, DC)
obl(associate, area)
case(part, in)
det(part, some)
amod(part, other)
obl(assign, part)
case(storage, of)
nmod(part, storage)
punct(part, ,)
advmod(precede, i.e.)
punct(precede, ,)
advmod(immediately, not)
advmod(precede, immediately)
acl(part, precede)
det(area, the)
compound(area, da)
cc(DC, or)
conj(da, DC)
obj(precede, area)
punct(advantageous, .)
det(statement, the)
compound(statement, DRDW)
nsubj:pass(use, statement)
aux(use, may)
aux:pass(use, be)
root(ROOT, use)
case(purpose, for)
det(purpose, this)
obl(use, purpose)
punct(use, .)
det(statement, the)
compound(statement, DRDW)
nsubj:pass(use, statement)
aux(use, may)
advmod(use, also)
aux:pass(use, be)
root(ROOT, use)
mark(generate, to)
advcl(use, generate)
det(RDW, a)
obj(generate, RDW)
acl(RDW, define)
det(area, any)
obj(define, area)
acl(area, specify)
case(programmer, by)
det(programmer, the)
obl(specify, programmer)
punct(use, .)
advmod(many, as)
nsubj:pass(name, many)
mark(name, as)
nummod(switch, ten)
amod(switch, digital)
nsubj:pass(name, switch)
aux(name, may)
aux:pass(name, be)
root(ROOT, name)
cc(provide, and)
conj(name, provide)
case(statement, by)
det(statement, the)
compound(statement, dsw)
obl(provide, statement)
case(consideration, for)
nmod(statement, consideration)
case(macro-instruction, by)
det(macro-instruction, the)
compound(macro-instruction, SETSW)
cc(logic, and)
conj(SETSW, logic)
nmod(consideration, macro-instruction)
punct(name, .)
det(switch, each)
nsubj(occupy, switch)
root(ROOT, occupy)
nummod(position, one)
compound(position, digit)
obj(occupy, position)
case(word, in)
det(word, a)
obl(occupy, word)
punct(set, ,)
aux(set, can)
aux:pass(set, be)
parataxis(occupy, set)
compound:prt(set, on)
cc(off, or)
conj(set, off)
punct(consider, ,)
cc(consider, and)
aux:pass(consider, be)
conj(set, consider)
mark(equivalent, as)
advmod(equivalent, logically)
advcl(consider, equivalent)
case(switch, to)
det(switch, a)
amod(switch, electronic)
obl(equivalent, switch)
punct(occupy, .)
nsubj:pass(refer, it)
aux(refer, can)
advmod(refer, not)
punct(refer, ,)
advmod(refer, however)
punct(refer, ,)
aux:pass(refer, be)
root(ROOT, refer)
obl(refer, to)
case(command, by)
amod(command, electronic)
compound(command, switch)
obl(refer, command)
punct(command, ,)
advmod(ESN, e.g.)
punct(ESN, ,)
conj(command, ESN)
punct(BSN, ,)
conj(ESN, BSN)
punct(etc, ,)
conj(command, etc)
punct(refer, .)
punct(refer, .)
det(switch, a)
amod(switch, individual)
nsubj:pass(test, switch)
cc(set, or)
det(set, the)
amod(set, entire)
conj(switch, set)
case(switch, of)
nmod(set, switch)
case(word, in)
det(word, a)
nmod(switch, word)
aux(test, may)
aux:pass(test, be)
root(ROOT, test)
cc(alter, or)
conj(test, alter)
mark(desire, as)
advcl(test, desire)
punct(test, .)
case(use, through)
obl(test, use)
case(statement, of)
det(statement, the)
compound(statement, dline)
nmod(use, statement)
punct(provide, ,)
det(means, a)
nsubj:pass(provide, means)
aux:pass(provide, be)
conj(test, provide)
mark(specify, for)
advcl(provide, specify)
cc:preconj(editing, both)
det(editing, the)
obj(specify, editing)
case(field, of)
nmod(editing, field)
mark(insert, to)
aux:pass(insert, be)
acl(field, insert)
case(area, in)
det(area, a)
compound(line, print)
compound(area, line)
obl(insert, area)
cc(layout, and)
det(layout, the)
conj(area, layout)
case(area, of)
det(area, the)
nmod(layout, area)
nmod:npmod(area, itself)
punct(test, .)
det(area, the)
nsubj(include, area)
aux(include, may)
root(ROOT, include)
amod(information, constant)
obj(include, information)
acl(information, supply)
case(programmer, by)
det(programmer, the)
obl(supply, programmer)
punct(include, .)
det(area, the)
nsubj:pass(provide, area)
aux(provide, may)
advmod(provide, also)
aux:pass(provide, be)
root(ROOT, provide)
case(data, with)
amod(data, additional)
obl(provide, data)
case(running, during)
det(running, the)
obl(provide, running)
case(program, of)
det(program, the)
compound(program, object)
nmod(running, program)
case(means, by)
obl(provide, means)
case(macro-instruction, of)
compound(macro-instruction, EDMOV)
cc(move, or)
conj(EDMOV, move)
nmod(means, macro-instruction)
punct(provide, .)
det(EQU, the)
amod(EQU, declarative)
compound(EQU, statement)
nsubj(permit, EQU)
root(ROOT, permit)
det(programmer, the)
obj(permit, programmer)
mark(equate, to)
xcomp(permit, equate)
amod(name, symbolic)
obj(equate, name)
case(word, to)
amod(word, actual)
compound(word, index)
nmod(name, word)
punct(switch, ,)
amod(switch, electronic)
conj(word, switch)
punct(arm, ,)
conj(word, arm)
cc(file, and)
conj(arm, file)
conj(word, number)
punct(channel, ,)
compound(channel, tape)
conj(word, channel)
cc(number, and)
compound(number, unit)
conj(word, number)
punct(switch, ,)
compound(switch, alteration)
conj(word, switch)
punct(etc., ,)
conj(word, etc.)
punct(equate, ,)
cc(equate, and)
mark(equate, to)
conj(equate, equate)
det(symbol, a)
obj(equate, symbol)
case(symbol, to)
det(symbol, another)
nmod(symbol, symbol)
cc(address, or)
case(address, to)
det(address, a)
amod(address, actual)
conj(symbol, address)
punct(permit, .)
det(dioc, the)
nsubj:pass(use, dioc)
punct(DTF, ,)
conj(dioc, DTF)
punct(statement, ,)
cc(statement, and)
compound(statement, DUF)
conj(dioc, statement)
aux:pass(use, be)
root(ROOT, use)
mark(require, when)
advcl(use, require)
case(system, by)
det(system, the)
compound(system, input)
cc(control, /)
compound(control, output)
conj(input, control)
obl(require, system)
punct(system, .)
nsubj:pass(use, dioc)
aux:pass(use, be)
acl:relcl(system, use)
mark(select, to)
xcomp(use, select)
det(method, the)
amod(method, major)
obj(select, method)
case(processing, of)
nmod(method, processing)
mark(use, to)
aux:pass(use, be)
acl(method, use)
punct(name, ,)
cc(name, and)
mark(name, to)
conj(use, name)
det(word, the)
compound(word, index)
obj(name, word)
acl(word, use)
case(Aj, by)
obl(use, Aj)
punct(describe, .)
det(file, each)
compound(file, tape)
nsubj:pass(describe, file)
aux(describe, must)
aux:pass(describe, be)
acl:relcl(word, describe)
case(specification, by)
compound(specification, tape)
compound(specification, file)
obl(describe, specification)
punct(specification, ,)
acl(specification, produce)
case(Aj, by)
obl(produce, Aj)
punct(produce, .)
case(addition, in)
obl(describe, addition)
case(information, to)
nmod(addition, information)
amod(information, related)
case(file, to)
det(file, the)
obl(related, file)
cc(record, and)
nmod:poss(record, its)
conj(file, record)
punct(contain, ,)
det(specification, the)
compound(specification, file)
nsubj(contain, specification)
conj(describe, contain)
compound(location, subroutine)
obj(contain, location)
cc(location, and)
det(location, the)
conj(location, location)
case(information, of)
compound(label, tape)
compound(information, label)
nmod(location, information)
punct(use, . )
det(entry, a)
compound(entry, DUF)
nsubj:pass(supply, entry)
aux(supply, must)
aux:pass(supply, be)
root(ROOT, supply)
case(file, for)
det(file, every)
compound(file, unit)
compound(file, record)
obl(supply, file)
acl(file, describe)
det(type, the)
obj(describe, type)
case(file, of)
nmod(type, file)
cc(equipment, and)
det(equipment, the)
compound(record, unit)
compound(equipment, record)
conj(type, equipment)
mark(use, to)
aux:pass(use, be)
acl(equipment, use)
punct(supply, .)
det(DUF, the)
nsubj(supply, DUF)
advmod(supply, also)
root(ROOT, supply)
det(location, the)
obj(supply, location)
case(subroutine, of)
nmod(location, subroutine)
acl(subroutine, write)
case(user, by)
det(user, the)
obl(write, user)
nsubj(unique, that)
cop(unique, be)
acl:relcl(user, unique)
case(file, to)
det(file, the)
obl(unique, file)
punct(supply, . )
det(description, a)
amod(description, full)
nsubj:pass(contain, description)
case(dioc, of)
det(dioc, the)
nmod(description, dioc)
punct(DTF, ,)
conj(dioc, DTF)
punct(statement, ,)
cc(DUF, and)
compound(statement, DUF)
conj(dioc, statement)
aux:pass(contain, be)
root(ROOT, contain)
case(Bulletin, in)
det(Bulletin, the)
nummod(process, 7070)
compound(process, data)
compound(Bulletin, process)
compound(Bulletin, system)
obl(contain, Bulletin)
punct(input, ``)
compound(input, IBM)
nummod(input, 7070)
compound(system, input)
cc(control, /)
compound(control, output)
conj(input, control)
appos(Bulletin, system)
punct(system, '')
punct(system, ,)
appos(system, form)
nsubj(description, Aj)
punct(Aj, .)
amod(description, Brief)
root(ROOT, description)
case(statement, of)
det(statement, these)
nummod(statement, three)
amod(statement, declarative)
nmod(description, statement)
cc(description, and)
amod(description, detailed)
conj(statement, description)
case(format, of)
det(format, the)
nmod(description, format)
cc(function, and)
conj(format, function)
case(each, of)
nmod(format, each)
case(7074, of)
det(7074, the)
amod(7074, other)
compound(7074, 7070)
cc(7074, /)
nmod(each, 7074)
compound(statement, Autocoder)
amod(statement, declarative)
nsubj(follow, statement)
root(ROOT, follow)
advmod(follow, below)
punct(follow, .)
obj(follow, dioc)
punct(follow, --)
parataxis(follow, define)
compound(system, input)
cc(control, /)
compound(control, output)
conj(input, control)
obj(define, system)
mark(be, when)
det(system, the)
compound(system, input)
cc(control, /)
compound(control, output)
compound(system, control)
nsubj(be, system)
advcl(define, be)
mark(use, to)
aux:pass(use, be)
xcomp(be, use)
case(program, in)
det(program, a)
obl(use, program)
punct(use, ,)
det(statement, a)
compound(statement, dioc)
nsubj:pass(use, statement)
aux(use, must)
aux:pass(use, be)
conj(use, use)
mark(select, to)
xcomp(use, select)
det(method, the)
amod(method, major)
obj(select, method)
case(processing, of)
nmod(method, processing)
mark(use, to)
aux:pass(use, be)
acl(processing, use)
punct(use, .)
det(statement, this)
nsubj(allow, statement)
advmod(allow, also)
root(ROOT, allow)
det(naming, the)
obj(allow, naming)
case(word, of)
det(word, the)
compound(word, index)
nmod(naming, word)
acl(word, use)
case(Aj, by)
obl(use, Aj)
punct(format, .)
compound(program, Source)
compound(format, program)
nmod(naming, format)
det(format, the)
amod(format, basic)
nsubj(be, format)
case(statement, of)
det(statement, the)
compound(statement, dioc)
nmod(format, statement)
parataxis(allow, be)
mark(follow, as)
ccomp(be, follow)
punct(follow, :)
nsubj(label, anylabel)
cop(label, be)
det(label, any)
amod(label, symbolic)
ccomp(follow, label)
punct(label, ;)
punct(allow, ;)
nsubj:pass(omit, it)
aux(omit, may)
aux:pass(omit, be)
parataxis(label, omit)
punct(allow, .)
det(dioc, the)
compound(dioc, entry)
nsubj:pass(write, dioc)
aux(write, must)
aux:pass(write, be)
root(ROOT, write)
advmod(show, exactly)
mark(show, as)
advcl(write, show)
punct(write, .)
det(item, the)
amod(item, first)
nsubj:pass(use, item)
case(operand, in)
det(operand, the)
nmod(item, operand)
punct(operand, ,)
appos(operand, iocsixf)
punct(use, ,)
aux:pass(use, be)
root(ROOT, use)
mark(specify, to)
xcomp(use, specify)
det(word, the)
amod(word, first)
compound(word, IOCS)
compound(word, index)
obj(specify, word)
case(program, for)
nmod(word, program)
acl(program, use)
compound(file, tape)
obj(use, file)
punct(use, .)
det(item, this)
nsubj(name, item)
aux(name, may)
cop(name, be)
det(name, a)
amod(name, symbolic)
root(ROOT, name)
cc(digit, or)
det(digit, a)
amod(digit, actual)
nummod(digit, one)
punct(digit, -)
conj(name, digit)
cc(word, or)
nummod(digit, two)
punct(digit, -)
compound(word, digit)
compound(word, index)
compound(address, word)
conj(name, address)
case(range, in)
det(range, the)
nmod(address, range)
nummod(range, 3)
case(94, -)
nmod(3, 94)
punct(name, .)
mark(omit, if)
det(item, the)
amod(item, first)
nsubj:pass(omit, item)
case(operand, in)
det(operand, the)
nmod(item, operand)
aux:pass(omit, be)
advcl(assign, omit)
punct(assign, ,)
det(iocsixf, the)
amod(iocsixf, symbolic)
compound(iocsixf, name)
nsubj:pass(assign, iocsixf)
aux(assign, will)
aux:pass(assign, be)
root(ROOT, assign)
punct(assign, .)
mark(specify, when)
det(word, a)
amod(word, actual)
compound(word, index)
nsubj:pass(specify, word)
cc(address, or)
det(address, a)
amod(address, symbolic)
conj(word, address)
aux:pass(specify, be)
advcl(equate, specify)
punct(equate, ,)
nsubj(equate, Autocoder)
aux(equate, will)
conj(assign, equate)
det(name, the)
obj(equate, name)
obj(equate, iocsixf)
case(it, to)
obl(equate, it)
punct(equate, .)
det(item, the)
amod(item, second)
nsubj:pass(use, item)
case(operand, in)
det(operand, the)
nmod(item, operand)
punct(operand, ,)
appos(operand, iocsixg)
punct(use, ,)
aux:pass(use, be)
root(ROOT, use)
mark(specify, to)
xcomp(use, specify)
det(word, the)
amod(IOCS, second)
compound(word, IOCS)
compound(word, index)
obj(specify, word)
case(program, for)
nmod(word, program)
acl(program, use)
compound(file, tape)
obj(use, file)
punct(use, .)
det(item, this)
nsubj(name, item)
aux(name, may)
cop(name, be)
det(name, a)
amod(name, symbolic)
root(ROOT, name)
cc(digit, or)
det(digit, a)
amod(digit, actual)
nummod(digit, one)
punct(digit, -)
conj(name, digit)
cc(word, or)
nummod(digit, two)
punct(digit, -)
compound(word, digit)
compound(word, index)
compound(address, word)
conj(name, address)
case(range, in)
det(range, the)
nmod(address, range)
nummod(range, 3)
case(94, -)
nmod(3, 94)
punct(name, .)
mark(omit, if)
det(item, the)
amod(item, second)
nsubj:pass(omit, item)
case(operand, in)
det(operand, the)
nmod(item, operand)
aux:pass(omit, be)
advcl(assign, omit)
punct(assign, ,)
det(iocsixg, the)
amod(iocsixg, symbolic)
compound(iocsixg, name)
nsubj:pass(assign, iocsixg)
aux(assign, will)
aux:pass(assign, be)
root(ROOT, assign)
punct(assign, .)
mark(specify, when)
det(word, a)
amod(word, actual)
compound(word, index)
nsubj:pass(specify, word)
cc(address, or)
det(address, a)
amod(address, symbolic)
conj(word, address)
aux:pass(specify, be)
advcl(equate, specify)
punct(equate, ,)
nsubj(equate, Autocoder)
aux(equate, will)
conj(assign, equate)
xcomp(equate, iocsixg)
case(it, to)
obl(iocsixg, it)
punct(equate, .)
case(Midwest, in)
det(Midwest, the)
obl(use, Midwest)
punct(use, ,)
compound(pond, oxidation)
nsubj:pass(use, pond)
aux:pass(use, be)
root(ROOT, use)
advmod(use, extensively)
case(treatment, for)
det(treatment, the)
obl(use, treatment)
case(sewage, of)
amod(sewage, domestic)
nmod(treatment, sewage)
case(area, from)
amod(area, suburban)
nmod(sewage, area)
punct(use, .)
det(cost, the)
amod(cost, high)
nsubj(create, cost)
case(land, of)
nmod(cost, land)
cc(problem, and)
det(problem, a)
amod(problem, few)
amod(problem, operational)
conj(cost, problem)
acl(problem, result)
case(loading, from)
amod(loading, excessive)
obl(result, loading)
aux(create, have)
root(ROOT, create)
det(need, the)
obj(create, need)
case(system, for)
det(system, a)
compound(treatment, wastewater)
compound(system, treatment)
nmod(need, system)
case(characteristic, with)
det(characteristic, the)
amod(characteristic, operational)
nmod(system, characteristic)
case(pond, of)
det(pond, the)
compound(pond, oxidation)
nmod(characteristic, pond)
cc(ability, but)
case(ability, with)
det(ability, the)
conj(characteristic, ability)
mark(treat, to)
acl(ability, treat)
amod(matter, more)
amod(matter, organic)
obj(treat, matter)
case(volume, per)
compound(volume, unit)
obl(treat, volume)
punct(create, .)
nsubj(show, Research)
case(Fayette, at)
nmod(Research, Fayette)
punct(Research, ,)
appos(Research, Missouri)
case(pond, on)
compound(pond, oxidation)
nmod(Research, pond)
aux(show, have)
root(ROOT, show)
mark(varied, that)
det(BOD, the)
nsubj(varied, BOD)
case(effluent, in)
det(effluent, the)
amod(effluent, treat)
nmod(BOD, effluent)
ccomp(show, varied)
case(mg, from)
nummod(mg, 30)
case(53, to)
nmod(30, 53)
obl(varied, mg)
cc(l, /)
conj(mg, l)
case(loading, with)
obl(varied, loading)
case(lb, from)
nummod(lb, 8)
case(120, to)
nmod(8, 120)
nmod(loading, lb)
punct(show, .)
mark(indicate, since)
nsubj(indicate, experience)
advcl(same, indicate)
mark(create, that)
nsubj(create, effluent)
case(pond, from)
compound(pond, oxidation)
nmod(effluent, pond)
aux(create, do)
advmod(create, not)
ccomp(indicate, create)
amod(problem, major)
obj(create, problem)
case(concentration, at)
det(concentration, these)
compound(concentration, BOD)
obl(create, concentration)
punct(same, ,)
det(goal, the)
nsubj(same, goal)
case(quality, for)
det(quality, the)
compound(quality, effluent)
nmod(goal, quality)
case(system, of)
det(system, the)
amod(system, accelerate)
compound(system, treatment)
nmod(quality, system)
cop(same, be)
det(same, the)
root(ROOT, same)
case(pond, as)
case(pond, from)
amod(pond, conventional)
compound(pond, oxidation)
obl(same, pond)
punct(same, .)
amod(study, recent)
nsubj(indicate, study)
case(Weston, by)
nmod(study, Weston)
cc(Stack, and)
conj(Weston, Stack)
aux(indicate, have)
root(ROOT, indicate)
mark(add, that)
det(aerator, a)
compound(aerator, turbine)
nsubj:pass(add, aerator)
aux(add, could)
aux:pass(add, be)
ccomp(indicate, add)
case(pond, to)
det(pond, a)
compound(pond, oxidation)
obl(add, pond)
mark(increase, to)
advcl(add, increase)
det(rate, the)
obj(increase, rate)
case(transfer, of)
compound(transfer, oxygen)
nmod(rate, transfer)
punct(indicate, .)
nmod:poss(study, they)
nsubj(show, study)
root(ROOT, show)
mark(possible, that)
expl(possible, it)
cop(possible, be)
ccomp(show, possible)
mark(transfer, to)
csubj(possible, transfer)
nummod(lb, 3)
case(4, to)
nmod(3, 4)
obj(transfer, lb)
case(oxygen, of)
nmod(lb, oxygen)
cc(hr., /)
conj(oxygen, hr.)
cc(hp., /)
conj(oxygen, hp.)
punct(show, .)
nsubj(discuss, O'Connor)
cc(Eckenfelder, and)
conj(O'Connor, Eckenfelder)
ccomp(show, discuss)
det(use, the)
obj(discuss, use)
case(lagoon, of)
amod(lagoon, aerate)
nmod(use, lagoon)
mark(treat, for)
acl(lagoon, treat)
amod(waste, organic)
obj(treat, waste)
punct(show, .)
nsubj(indicate, they)
root(ROOT, indicate)
mark(give, that)
det(retention, a)
nummod(day, 4)
punct(day, -)
compound(retention, day)
nsubj(give, retention)
punct(lagoon, ,)
amod(lagoon, aerate)
conj(retention, lagoon)
aux(give, would)
ccomp(indicate, give)
nummod(cent, 60)
case(76, to)
nmod(60, 76)
compound(cent, per)
compound(reduction, cent)
compound(reduction, BOD)
obj(give, reduction)
punct(give, .)
advmod(increase, later)
punct(increase, ,)
nsubj(increase, Eckenfelder)
ccomp(indicate, increase)
det(efficiency, the)
obj(increase, efficiency)
case(treatment, of)
nmod(efficiency, treatment)
case(cent, to)
case(cent, between)
nummod(cent, 75)
cc(85, and)
conj(75, 85)
compound(cent, per)
obl(increase, cent)
case(month, in)
det(month, the)
compound(month, summer)
nmod(cent, month)
punct(indicate, .)
nsubj(appear, it)
root(ROOT, appear)
case(information, from)
det(information, the)
amod(information, limited)
obl(appear, information)
amod(information, available)
mark(offer, that)
det(lagoon, the)
amod(lagoon, aerate)
nsubj(offer, lagoon)
aux(offer, might)
ccomp(available, offer)
det(means, a)
amod(means, satisfactory)
obj(offer, means)
mark(increase, of)
acl(means, increase)
det(capacity, the)
obj(increase, capacity)
mark(exist, of)
acl(capacity, exist)
compound(pond, oxidation)
obj(exist, pond)
cc(provide, as)
fixed(as, well)
mark(provide, as)
conj(increase, provide)
det(degree, the)
amod(degree, same)
obj(provide, degree)
case(treatment, of)
nmod(degree, treatment)
case(volume, in)
det(volume, a)
amod(volume, smaller)
obl(provide, volume)
punct(appear, .)
compound(Bridge, Red)
compound(subdivision, Bridge)
root(ROOT, subdivision)
case(development, with)
det(development, the)
obl(face, development)
case(subdivision, of)
det(subdivision, the)
compound(Bridge, Red)
compound(subdivision, Bridge)
nmod(development, subdivision)
advmod(development, south)
case(City, of)
compound(City, Kansas)
obl(south, City)
punct(City, ,)
appos(City, Missouri)
punct(face, ,)
det(developer, the)
nsubj:pass(face, developer)
aux:pass(face, be)
root(ROOT, face)
case(problem, with)
det(problem, the)
obl(face, problem)
mark(provide, of)
acl(problem, provide)
amod(disposal, adequate)
compound(disposal, sewage)
obj(provide, disposal)
punct(face, .)
det(system, the)
compound(system, sewage)
nsubj:pass(expect, system)
case(City, from)
compound(City, Kansas)
nmod(system, City)
aux:pass(expect, be)
advmod(expect, not)
root(ROOT, expect)
mark(serve, to)
xcomp(expect, serve)
det(area, the)
compound(Bridge, Red)
compound(area, Bridge)
obj(serve, area)
case(year, for)
amod(year, several)
obl(serve, year)
punct(expect, .)
nsubj(necessitate, this)
root(ROOT, necessitate)
det(construction, the)
obj(necessitate, construction)
case(facility, of)
amod(facility, temporary)
compound(treatment, sewage)
compound(facility, treatment)
nmod(construction, facility)
case(life, with)
det(life, a)
amod(life, expect)
obl(necessitate, life)
case(Aj, from)
nummod(Aj, 5)
case(15, to)
nmod(5, 15)
nmod(life, Aj)
punct(necessitate, .)
case(development, for)
det(development, the)
amod(development, initial)
obl(construct, development)
det(pond, a)
compound(pond, oxidation)
nsubj:pass(construct, pond)
aux:pass(construct, be)
parataxis(necessitate, construct)
mark(show, as)
advcl(construct, show)
case(1, in)
compound(1, Figure)
nummod(have, 1)
punct(1, .)
det(pond, the)
compound(pond, oxidation)
nsubj(have, pond)
ccomp(construct, have)
det(area, a)
compound(area, surface)
obj(have, area)
case(acre, of)
nummod(acre, 4.77)
nmod(area, acre)
cc(depth, and)
det(depth, a)
conj(area, depth)
case(Aj, of)
nummod(Aj, 4)
nmod(depth, Aj)
punct(serve, .)
det(pond, the)
nsubj(serve, pond)
aux(serve, be)
advmod(serve, currently)
parataxis(have, serve)
nummod(person, 1,230)
obj(serve, person)
cc(260, or)
conj(person, 260)
conj(person, person)
case(acre, per)
nmod(person, acre)
punct(necessitate, .)
case(summer, in)
det(summer, the)
obl(become, summer)
case(1960, of)
nmod(summer, 1960)
det(pond, the)
compound(pond, oxidation)
nsubj(become, pond)
root(ROOT, become)
advmod(septic, completely)
xcomp(become, septic)
cc(emit, and)
conj(septic, emit)
amod(odor, obnoxious)
obj(emit, odor)
punct(septic, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(maintain, to)
csubj(possible, maintain)
compound(condition, aerobic)
obj(maintain, condition)
case(pond, in)
det(pond, the)
obl(maintain, pond)
case(addition, by)
amod(addition, regular)
obl(maintain, addition)
case(nitrate, of)
compound(nitrate, sodium)
nmod(addition, nitrate)
mark(decrease, until)
det(temperature, the)
nsubj(decrease, temperature)
advcl(maintain, decrease)
cc(change, and)
det(population, the)
compound(population, alga)
nsubj(change, population)
conj(decrease, change)
case(green, from)
amod(green, blue)
punct(green, -)
obl(change, green)
case(alga, to)
amod(alga, green)
obl(change, alga)
punct(possible, .)
det(condition, the)
compound(condition, anaerobic)
nsubj(examination, condition)
case(examination, in)
det(examination, the)
amod(examination, exist)
compound(pond, oxidation)
compound(examination, pond)
amod(examination, necessitate)
root(ROOT, examination)
case(method, of)
amod(method, other)
nmod(examination, method)
mark(supply, for)
acl(method, supply)
amod(oxygen, additional)
obj(supply, oxygen)
case(nitrate, than)
case(nitrate, by)
compound(nitrate, sodium)
nmod(oxygen, nitrate)
punct(examination, .)
case(time, at)
det(time, the)
amod(time, same)
obl(require, time)
amod(expansion, further)
nsubj(require, expansion)
case(subdivision, in)
det(subdivision, the)
compound(subdivision, Red)
compound(subdivision, Bridge)
nmod(expansion, subdivision)
root(ROOT, require)
det(construction, the)
obj(require, construction)
case(facility, of)
amod(facility, additional)
compound(treatment, sewage)
compound(facility, treatment)
nmod(construction, facility)
punct(require, .)
det(area, the)
amod(area, large)
compound(area, land)
nsubj(unattractive, area)
acl(area, require)
case(pond, for)
compound(pond, oxidation)
obl(require, pond)
acl(pond, make)
det(type, this)
obj(make, type)
case(treatment, of)
nmod(type, treatment)
advmod(unattractive, financially)
root(ROOT, unattractive)
case(developer, to)
det(developer, the)
obl(unattractive, developer)
punct(unattractive, .)
nsubj:pass(propose, it)
aux:pass(propose, be)
root(ROOT, propose)
mark(use, that)
amod(lagoon, aerate)
nsubj:pass(use, lagoon)
aux:pass(use, be)
ccomp(propose, use)
mark(eliminate, to)
xcomp(use, eliminate)
det(problem, the)
obj(eliminate, problem)
case(pond, at)
det(pond, the)
amod(pond, exist)
compound(pond, oxidation)
obl(eliminate, pond)
cc(provide, and)
mark(provide, to)
conj(eliminate, provide)
det(treatment, the)
amod(treatment, necessary)
obj(provide, treatment)
case(development, for)
det(development, the)
amod(development, additional)
nmod(treatment, development)
punct(propose, .)
compound(lagoon, Pilot)
nsubj(prompt, lagoon)
det(lack, the)
nsubj(prompt, lack)
case(data, of)
amod(data, adequate)
nmod(lack, data)
case(system, on)
det(system, the)
amod(system, aerate)
compound(system, lagoon)
nmod(data, system)
root(ROOT, prompt)
det(developer, the)
obj(prompt, developer)
mark(construct, to)
xcomp(prompt, construct)
det(plant, a)
amod(plant, aerate)
compound(plant, lagoon)
compound(plant, pilot)
obj(construct, plant)
mark(determine, to)
advcl(construct, determine)
nmod:poss(feasibility, its)
obj(determine, feasibility)
mark(treat, for)
acl(feasibility, treat)
amod(sewage, domestic)
obj(treat, sewage)
punct(prompt, .)
det(plant, the)
compound(plant, pilot)
nsubj(lagoon, plant)
cop(lagoon, be)
det(lagoon, a)
amod(lagoon, circular)
root(ROOT, lagoon)
nummod(ft, 81)
obl:tmod(lagoon, ft)
case(diam, in)
nmod(lagoon, diam)
case(surface, at)
det(surface, the)
nmod(lagoon, surface)
cc(ft, and)
nummod(ft, 65)
conj(lagoon, ft)
case(diam, in)
nmod(ft, diam)
case(bottom, at)
det(bottom, the)
nmod(ft, bottom)
punct(ft, ,)
nummod(ft, 4)
parataxis(lagoon, ft)
case(surface, below)
det(surface, the)
nmod(ft, surface)
punct(ft, ,)
case(volume, with)
det(volume, a)
obl(lagoon, volume)
case(121,000, of)
nmod(volume, 121,000)
nummod(coate, Aj)
punct(Aj, .)
det(slope, the)
compound(slope, side)
nsubj:pass(coate, slope)
aux:pass(coate, be)
root(ROOT, coate)
case(matting, with)
compound(matting, fiberglas)
obl(coate, matting)
acl(matting, coate)
case(asphalt, with)
obl(coate, asphalt)
mark(prevent, to)
advcl(coate, prevent)
obj(prevent, erosion)
punct(coate, .)
det(lagoon, the)
compound(lagoon, pilot)
nsubj:pass(locate, lagoon)
aux:pass(locate, be)
root(ROOT, locate)
mark(show, as)
advcl(locate, show)
case(Figure, in)
obl(show, Figure)
nummod(Figure, 1)
mark(serve, to)
advcl(show, serve)
det(area, the)
obj(serve, area)
advmod(south, just)
advmod(serve, south)
case(area, of)
det(area, the)
amod(area, exist)
compound(area, housing)
obl(south, area)
punct(locate, .)
det(contributor, the)
amod(contributor, major)
nsubj(center, contributor)
cop(center, be)
det(center, a)
compound(center, shopping)
root(ROOT, center)
case(house, with)
nmod(center, house)
aux:pass(add, be)
acl(house, add)
case(system, to)
det(system, the)
obl(add, system)
mark(develop, as)
det(subdivision, the)
nsubj(develop, subdivision)
advcl(add, develop)
punct(center, .)
det(lagoon, the)
compound(lagoon, pilot)
nsubj:pass(design, lagoon)
aux:pass(design, be)
root(ROOT, design)
mark(handle, to)
advcl(design, handle)
det(waste, the)
obj(handle, waste)
case(person, from)
nummod(person, 314)
nmod(waste, person)
case(period, with)
det(period, a)
nummod(day, 4)
punct(day, -)
compound(period, day)
compound(period, aeration)
obl(handle, period)
punct(design, .)
advmod(center, initially)
punct(center, ,)
det(wastewater, the)
nsubj(center, wastewater)
aux(center, would)
cop(center, be)
advmod(center, entirely)
case(center, from)
det(center, the)
compound(center, shopping)
root(ROOT, center)
case(sewage, with)
det(sewage, the)
amod(sewage, domestic)
nmod(center, sewage)
case(house, from)
det(house, the)
nmod(sewage, house)
acl(house, increase)
case(period, over)
det(period, a)
nummod(month, 18)
punct(month, -)
compound(period, month)
obl(increase, period)
punct(center, .)
det(operation, this)
nsubj(permit, operation)
aux(permit, would)
root(ROOT, permit)
obj(permit, evaluation)
case(plant, of)
det(plant, the)
compound(plant, pilot)
nmod(evaluation, plant)
punct(evaluation, ,)
case(load, with)
det(load, a)
advmod(increase, slowly)
amod(load, increase)
obl(permit, load)
punct(permit, ,)
case(period, over)
det(period, a)
amod(period, reasonable)
obl(permit, period)
case(time, of)
nmod(period, time)
punct(permit, .)
det(plant, the)
compound(plant, pilot)
nsubj:pass(equip, plant)
aux:pass(equip, be)
root(ROOT, equip)
case(aerator, with)
det(aerator, a)
nummod(hp., 3)
punct(hp., -)
compound(aerator, hp.)
compound(aerator, turbine)
obl(equip, aerator)
punct(Figure, ()
appos(aerator, Figure)
nummod(Figure, 2)
punct(Figure, ))
punct(equip, .)
det(aerator, the)
nsubj(have, aerator)
root(ROOT, have)
det(drive, a)
amod(speed, variable)
punct(speed, -)
compound(drive, speed)
obj(have, drive)
mark(permit, to)
advcl(have, permit)
obj(permit, operation)
case(range, through)
det(range, a)
obl(permit, range)
case(speed, of)
nmod(range, speed)
punct(have, .)
det(flow, the)
compound(flow, sewage)
nsubj:pass(meter, flow)
case(plant, into)
det(plant, the)
compound(plant, treatment)
nmod(flow, plant)
aux:pass(meter, be)
root(ROOT, meter)
cc(record, and)
advmod(record, continuously)
conj(meter, record)
case(chart, on)
nummod(chart, 24)
case(hr., -)
nmod(24, hr.)
obl(record, chart)
punct(meter, .)
det(sewage, the)
amod(sewage, raw)
nsubj:pass(introduce, sewage)
aux:pass(introduce, be)
root(ROOT, introduce)
advmod(introduce, directly)
case(aerator, under)
det(aerator, the)
compound(aerator, turbine)
obl(introduce, aerator)
mark(insure, to)
advcl(introduce, insure)
amod(mixing, maximum)
obj(insure, mixing)
case(sewage, of)
det(sewage, the)
amod(sewage, raw)
nmod(mixing, sewage)
case(contents, with)
det(contents, the)
compound(tank, aeration)
compound(contents, tank)
nmod(sewage, contents)
punct(introduce, .)
det(effluent, the)
nsubj:pass(collect, effluent)
aux:pass(collect, be)
root(ROOT, collect)
case(pipe, through)
nummod(pipe, two)
obl(collect, pipe)
cc(discharge, and)
conj(collect, discharge)
case(River, to)
det(River, the)
compound(River, Blue)
obl(discharge, River)
case(ditch, through)
det(ditch, a)
compound(ditch, surface)
compound(ditch, drainage)
obl(discharge, ditch)
punct(ditch, .)
nsubj:pass(collect, analysis)
amod(samples, Composite)
nsubj:pass(collect, samples)
aux:pass(collect, be)
parataxis(collect, collect)
case(interval, at)
amod(interval, weekly)
obl(collect, interval)
punct(collect, .)
det(period, the)
amod(retention, long)
compound(period, retention)
nsubj(prevent, period)
cc(concept, and)
det(concept, the)
amod(concept, complete)
compound(concept, mixing)
conj(period, concept)
root(ROOT, prevent)
amod(change, rapid)
obj(prevent, change)
case(liquor, in)
cc:preconj(liquor, either)
det(liquor, the)
amod(liquor, mix)
nmod(change, liquor)
cc(effluent, or)
case(effluent, in)
det(effluent, the)
conj(liquor, effluent)
punct(prevent, .)
amod(samples, weekly)
nsubj(make, samples)
aux(make, would)
root(ROOT, make)
det(change, any)
obj(make, change)
advmod(readily, more)
advmod(discernible, readily)
amod(change, discernible)
case(samples, than)
amod(samples, daily)
obl(discernible, samples)
punct(make, .)
det(samples, the)
amod(samples, composite)
nsubj:pass(collect, samples)
aux:pass(collect, be)
advmod(collect, normally)
root(ROOT, collect)
case(period, over)
det(period, a)
nummod(hr., 6)
punct(hr., -)
compound(period, hr.)
obl(collect, period)
punct(make, ,)
cc(make, but)
det(composite, a)
amod(composite, occasional)
nummod(hr., 24)
punct(hr., -)
compound(composite, hr.)
nsubj:pass(make, composite)
aux:pass(make, be)
conj(collect, make)
punct(examination, .)
obj(make, examination)
case(operation, of)
det(operation, the)
nmod(examination, operation)
case(correlation, of)
det(center, the)
compound(center, shopping)
compound(correlation, center)
amod(correlation, permit)
nmod(operation, correlation)
case(samples, of)
det(samples, the)
nummod(hr., 6)
punct(hr., -)
compound(samples, hr.)
amod(samples, composite)
nmod(correlation, samples)
case(operation, with)
nummod(operation, 24)
case(hr., -)
nmod(24, hr.)
nmod(samples, operation)
punct(collect, .)
det(data, the)
nsubj(indicate, data)
root(ROOT, indicate)
mark(collect, that)
det(load, the)
amod(load, organic)
nsubj(cent, load)
case(composite, during)
det(composite, the)
nummod(hr., 6)
punct(hr., -)
compound(composite, hr.)
nmod(load, composite)
cop(cent, be)
advmod(cent, essentially)
nummod(cent, 50)
compound(cent, per)
ccomp(indicate, cent)
case(load, of)
det(load, the)
nummod(hr., 24)
punct(hr., -)
compound(load, hr.)
compound(load, organic)
nmod(cent, load)
punct(load, .)
compound(samples, grab)
nsubj:pass(collect, samples)
aux:pass(collect, be)
parataxis(cent, collect)
case(pond, from)
det(pond, the)
amod(pond, exist)
compound(pond, oxidation)
obl(collect, pond)
mark(determine, to)
advcl(collect, determine)
nmod:poss(condition, its)
compound(condition, operating)
obj(determine, condition)
punct(indicate, .)
nsubj:pass(make, Efforts)
aux:pass(make, be)
root(ROOT, make)
mark(take, to)
xcomp(make, take)
det(samples, the)
compound(samples, grab)
obj(take, samples)
case(period, at)
amod(period, random)
obl(take, period)
mark(treat, so)
fixed(so, that)
det(mass, the)
nsubj:pass(treat, mass)
case(data, of)
nmod(mass, data)
aux(treat, could)
aux:pass(treat, be)
advcl(take, treat)
case(sample, as)
det(sample, a)
nummod(hr., 6)
punct(hr., -)
compound(sample, hr.)
amod(sample, composite)
obl(treat, sample)
punct(make, . )
det(sample, a)
amod(sample, single)
nummod(hr., 24)
punct(hr., -)
compound(sample, hr.)
amod(sample, composite)
nsubj(indicate, sample)
root(ROOT, indicate)
mark(typical, that)
det(pattern, the)
compound(pattern, sewage)
compound(pattern, flow)
nsubj(typical, pattern)
cc(characteristic, and)
conj(pattern, characteristic)
cop(typical, be)
ccomp(indicate, typical)
punct(indicate, .)
compound(plant, Pilot)
nsubj(operation, plant)
root(ROOT, operation)
det(BOD, the)
obj(operation, BOD)
case(plant, of)
det(influent, the)
amod(plant, influent)
case(plant, to)
det(plant, the)
compound(plant, pilot)
nsubj(varied, plant)
ccomp(operation, varied)
case(mg, between)
nummod(mg, 110)
cc(710, and)
conj(110, 710)
obl(varied, mg)
cc(l, /)
conj(mg, l)
case(average, with)
det(average, a)
obl(varied, average)
case(Aj, of)
nummod(Aj, 350)
nmod(average, Aj)
punct(operation, .)
nsubj(equivalent, this)
cop(equivalent, be)
parataxis(operation, equivalent)
case(BOD, to)
nummod(mg, 240)
compound(BOD, mg)
punct(l, /)
compound(BOD, l)
obl(equivalent, BOD)
case(basis, on)
det(basis, a)
nummod(hr., 24)
punct(hr., -)
compound(basis, hr.)
obl(equivalent, basis)
punct(operation, .)
det(BOD, the)
nsubj(typical, BOD)
case(sewage, of)
det(sewage, the)
amod(sewage, raw)
nmod(BOD, sewage)
cop(typical, be)
root(ROOT, typical)
case(sewage, of)
amod(sewage, domestic)
obl(typical, sewage)
case(subdivision, from)
det(subdivision, a)
obl(typical, subdivision)
punct(typical, .)
det(BOD, the)
nsubj(average, BOD)
case(effluent, in)
det(effluent, the)
nmod(BOD, effluent)
root(ROOT, average)
nummod(mg, 58)
obj(average, mg)
cc(l, /)
conj(mg, l)
punct(mg, ,)
det(reduction, a)
compound(per-cent, 76)
punct(per-cent, -)
amod(reduction, per-cent)
appos(mg, reduction)
case(period, over)
det(period, the)
nummod(hr., 24)
punct(hr., -)
compound(period, hr.)
nmod(reduction, period)
punct(average, .)
nsubj(show, examination)
case(data, of)
det(data, the)
nmod(examination, data)
case(table, in)
nmod(data, table)
nummod(table, 1)
punct(show, ,)
root(ROOT, show)
mark(occur, that)
det(samples, a)
amod(samples, few)
nsubj(occur, samples)
acl(samples, contribute)
mark(raise, to)
advcl(contribute, raise)
det(Aj, the)
compound(Aj, effluent)
obj(raise, Aj)
punct(period, .)
det(period, the)
nsubj(occur, period)
case(BOD, of)
amod(effluent, high)
compound(BOD, effluent)
nmod(period, BOD)
ccomp(show, occur)
case(period, during)
amod(period, cold)
obl(occur, period)
mark(result, when)
amod(problem, operational)
nsubj(result, problem)
case(aerator, with)
det(aerator, the)
nmod(problem, aerator)
advcl(occur, result)
punct(cause, .)
nsubj(cause, Ice)
parataxis(occur, cause)
det(aerator, the)
obj(cause, aerator)
mark(overload, to)
xcomp(cause, overload)
punct(overload, ,)
advcl(overload, strain)
det(belt, the)
compound(belt, drive)
obj(strain, belt)
punct(show, .)
det(slippage, the)
nsubj(cause, slippage)
case(belt, of)
det(belt, the)
compound(belt, drive)
nmod(slippage, belt)
root(ROOT, cause)
det(aerator, the)
obj(cause, aerator)
mark(slow, to)
xcomp(cause, slow)
compound:prt(slow, down)
cc(reduce, and)
conj(slow, reduce)
compound(transfer, oxygen)
obj(reduce, transfer)
cc(mixing, as)
fixed(as, well)
fixed(as, as)
det(mixing, the)
obl(reduce, mixing)
case(sewage, of)
det(sewage, the)
amod(sewage, raw)
nmod(mixing, sewage)
punct(cause, .)
det(loading, the)
compound(loading, organic)
nsubj(average, loading)
case(unit, on)
det(unit, the)
nmod(loading, unit)
root(ROOT, average)
nummod(lb, 32)
obj(average, lb)
case(day, of)
compound(day, BOD)
punct(day, /)
nmod(lb, day)
cc(BOD, or)
advmod(2, about)
nummod(lb, 2)
compound(BOD, lb)
compound(capacity, BOD)
punct(day, /)
conj(BOD, day)
punct(1,000, /)
nummod(ft, 1,000)
compound(ft, can)
compound(capacity, ft)
compound(capacity, aeration)
nmod(lb, capacity)
punct(average, .)
advmod(low, needless)
mark(say, to)
csubj(needless, say)
punct(low, ,)
det(load, the)
amod(load, organic)
nsubj(low, load)
cop(low, be)
advmod(low, very)
root(ROOT, low)
case(basis, on)
det(basis, a)
amod(basis, volumetric)
obl(low, basis)
punct(BOD, ,)
cc(BOD, but)
cop(BOD, be)
nummod(lb, 270)
compound(BOD, lb)
conj(low, BOD)
punct(day, /)
conj(BOD, day)
cc(acre, /)
conj(BOD, acre)
case(basis, on)
det(basis, a)
compound(loading, surface)
compound(basis, loading)
nmod(BOD, basis)
punct(low, .)
nsubj(seem, it)
root(ROOT, seem)
mark(pond, that)
det(lagoon, the)
amod(lagoon, aerate)
nsubj(pond, lagoon)
cop(pond, be)
det(pond, a)
advmod(load, very)
advmod(load, heavily)
amod(pond, load)
compound(pond, oxidation)
ccomp(seem, pond)
cc(system, or)
det(system, a)
advmod(load, lightly)
amod(system, load)
amod(system, activate)
compound(system, sludge)
conj(pond, system)
punct(seem, .)
det(rate, the)
compound(rate, flow)
nsubj(remain, rate)
root(ROOT, remain)
advmod(constant, relatively)
xcomp(remain, constant)
case(month, during)
det(month, the)
compound(month, winter)
obl(constant, month)
mark(show, as)
advcl(constant, show)
case(table, in)
obl(show, table)
nummod(table, 1)
punct(constant, .)
mark(rain, with)
det(spring, the)
nsubj(rain, spring)
advcl(rise, rain)
det(flow, the)
nsubj(rise, flow)
root(ROOT, rise)
advmod(rise, rapidly)
case(infiltration, due)
fixed(due, to)
obl(rise, infiltration)
case(sewer, in)
amod(sewer, open)
nmod(infiltration, sewer)
punct(rise, .)
mark(progress, as)
nsubj(progress, construction)
advcl(reduce, progress)
punct(reduce, ,)
det(volume, the)
nsubj:pass(reduce, volume)
case(drainage, of)
compound(drainage, storm)
nmod(volume, drainage)
aux(reduce, will)
aux:pass(reduce, be)
advmod(reduce, sharply)
root(ROOT, reduce)
punct(reduce, .)
det(period, the)
compound(period, retention)
nsubj(range, period)
case(lagoon, in)
det(lagoon, the)
amod(lagoon, aerate)
nmod(period, lagoon)
root(ROOT, range)
case(day, from)
nummod(day, 9.8)
case(2.6, to)
nmod(9.8, 2.6)
obl(range, day)
punct(range, ,)
advcl(range, average)
nummod(day, 6.4)
obl:tmod(average, day)
punct(range, .)
det(amount, the)
amod(amount, large)
nsubj(create, amount)
case(grinding, of)
compound(grinding, vegetable)
nmod(amount, grinding)
case(store, from)
det(store, the)
compound(store, grocery)
nmod(grinding, store)
case(center, in)
det(center, the)
compound(center, shopping)
nmod(store, center)
root(ROOT, create)
det(problem, a)
amod(problem, suspend)
compound(problem, solid)
obj(create, problem)
punct(create, .)
det(vegetable, the)
nsubj:pass(metabolize, vegetable)
aux:pass(metabolize, be)
advmod(metabolize, not)
advmod(metabolize, readily)
root(ROOT, metabolize)
case(bacteria, by)
det(bacteria, the)
obl(metabolize, bacteria)
case(unit, in)
det(unit, the)
compound(unit, aeration)
obl(metabolize, unit)
cc(tend, and)
conj(metabolize, tend)
mark(float, to)
xcomp(tend, float)
case(surface, on)
det(surface, the)
obl(float, surface)
punct(metabolize, . )
det(device, a)
compound(device, skim)
nsubj(prevent, device)
case(weir, at)
det(weir, the)
compound(weir, effluent)
nmod(device, weir)
root(ROOT, prevent)
obj(prevent, loss)
case(most, of)
nmod(loss, most)
case(solid, of)
det(solid, these)
compound(solid, light)
nmod(most, solid)
punct(prevent, .)
det(solid, the)
amod(solid, average)
amod(solid, volatile)
amod(solid, suspend)
nsubj(l, solid)
case(effluent, in)
det(effluent, the)
nmod(solid, effluent)
cop(l, be)
nummod(l, 75)
compound(l, mg)
punct(l, /)
root(ROOT, l)
mark(average, while)
nsubj(average, MLSS)
advcl(l, average)
nummod(solid, 170)
compound(solid, mg)
punct(l, /)
conj(mg, l)
amod(solid, volatile)
amod(solid, suspend)
obj(average, solid)
punct(l, .)
det(age, the)
amod(age, average)
compound(age, sludge)
nsubj:pass(calculate, age)
case(displacement, base)
case(displacement, on)
nmod(age, displacement)
case(solid, of)
nmod(displacement, solid)
aux:pass(calculate, be)
root(ROOT, calculate)
mark(day, to)
cop(day, be)
nummod(day, 14.5)
xcomp(calculate, day)
punct(calculate, .)
det(rate, the)
compound(uptake, oxygen)
compound(rate, uptake)
root(ROOT, rate)
case(liquor, in)
det(liquor, the)
amod(liquor, mix)
nmod(rate, liquor)
acl(liquor, average)
nummod(mg, 0.8)
obj(average, mg)
cc(l, /)
conj(mg, l)
cc(hr, /)
conj(l, hr)
case(month, during)
det(month, the)
amod(month, first)
nummod(month, four)
obl(average, month)
case(study, of)
det(study, this)
nmod(month, study)
punct(rate, .)
nsubj(cause, Variations)
case(speed, in)
compound(speed, aerator)
nmod(Variations, speed)
case(month, during)
det(month, the)
amod(month, latter)
nummod(month, two)
nmod(Variations, month)
case(study, of)
det(study, this)
nmod(month, study)
root(ROOT, cause)
amod(mixing, increase)
obj(cause, mixing)
cc(demand, and)
amod(demand, increase)
compound(demand, oxygen)
conj(mixing, demand)
punct(cause, .)
det(increase, the)
nsubj:pass(believe, increase)
case(rate, in)
compound(uptake, oxygen)
compound(rate, uptake)
nmod(increase, rate)
case(/hr, from)
nummod(mg, 1.2)
case(2.6, to)
nmod(1.2, 2.6)
compound(/hr, mg)
punct(l, /)
compound(/hr, l)
nmod(increase, /hr)
nsubj(follow, which)
acl:relcl(/hr, follow)
det(increase, a)
obj(follow, increase)
case(speed, in)
compound(speed, rotor)
nmod(increase, speed)
aux:pass(believe, be)
root(ROOT, believe)
mark(related, to)
cop(related, be)
xcomp(believe, related)
case(resuspension, to)
obl(related, resuspension)
case(solid, of)
nmod(resuspension, solid)
nsubj(settle, which)
aux(settle, have)
acl:relcl(resuspension, settle)
case(speed, at)
det(speed, the)
amod(speed, lower)
compound(speed, rotor)
obl(settle, speed)
punct(believe, .)
nsubj(appear, it)
root(ROOT, appear)
mark(active, that)
nsubj(active, most)
case(solid, of)
det(solid, the)
amod(solid, mix)
compound(suspend, liquor)
amod(solid, suspend)
nmod(most, solid)
cop(active, be)
ccomp(appear, active)
amod(solid, microbial)
obj(active, solid)
case(solid, with)
det(solid, the)
amod(solid, heavier)
punct(solid, ,)
advmod(active, less)
amod(solid, active)
obl(active, solid)
acl(solid, settle)
compound:prt(settle, out)
punct(appear, .)
det(solid, the)
amod(solid, suspend)
nsubj:pass(find, solid)
acl(solid, discharge)
case(effluent, in)
det(effluent, the)
obl(discharge, effluent)
aux:pass(find, be)
root(ROOT, find)
mark(source, to)
cop(source, be)
det(source, the)
amod(source, major)
xcomp(find, source)
case(Aj, of)
det(Aj, the)
nmod(source, Aj)
punct(removal, .)
appos(source, removal)
case(solid, of)
det(solid, the)
amod(solid, suspend)
nmod(removal, solid)
case(filter, by)
det(filter, a)
compound(filter, membrane)
nmod(solid, filter)
acl(filter, yield)
det(effluent, a)
amod(effluent, average)
obj(yield, effluent)
acl(effluent, contain)
advmod(mg, only)
nummod(mg, 20)
obj(contain, mg)
cc(l, /)
conj(mg, l)
nsubj:pass(make, Aj)
punct(Aj, .)
det(BOD, the)
appos(Aj, BOD)
case(ditch, in)
det(ditch, the)
compound(ditch, drainage)
nmod(BOD, ditch)
acl(ditch, receive)
det(effluent, the)
obj(receive, pilot)
compound(effluent, plant)
obj(receive, effluent)
ccomp(receive, average)
nummod(Aj, 12)
obj(average, Aj)
punct(average, .)
det(BOD, this)
amod(BOD, low)
nsubj(removal, BOD)
cop(removal, be)
case(removal, due)
fixed(due, to)
parataxis(average, removal)
case(excess, of)
det(excess, the)
nmod(removal, excess)
amod(solid, suspend)
nmod(excess, solid)
case(sedimentation, by)
nmod(solid, sedimentation)
mark(runoff, since)
det(dilution, the)
amod(dilution, only)
nsubj(runoff, dilution)
cop(runoff, be)
compound(runoff, surface)
advcl(removal, runoff)
nsubj(low, which)
cop(low, be)
advmod(low, very)
acl:relcl(runoff, low)
case(study, during)
det(study, this)
obl(low, study)
punct(make, .)
amod(examination, microscopic)
compound(Routine, examination)
compound(examination, Routine)
amod(examination, microscopic)
nsubj:pass(make, examination)
aux:pass(make, be)
root(ROOT, make)
case(liquor, of)
det(liquor, the)
amod(liquor, mix)
obl(make, liquor)
mark(indicate, as)
advcl(make, indicate)
case(McKinney, by)
obl(indicate, McKinney)
cc(gram, and)
conj(McKinney, gram)
case(type, for)
det(type, the)
amod(type, various)
obl(indicate, type)
case(protozoa, of)
nmod(type, protozoa)
punct(make, .)
nsubj:pass(find, it)
aux:pass(find, be)
root(ROOT, find)
mark(system, that)
det(lagoon, the)
amod(lagoon, aerate)
nsubj(system, lagoon)
cop(system, be)
det(system, a)
amod(system, activate)
compound(system, sludge)
ccomp(find, system)
cc(pond, rather)
fixed(rather, than)
det(pond, a)
compound(pond, oxidation)
conj(system, pond)
punct(find, .)
case(time, at)
det(time, no)
obl(find, time)
aux:pass(find, be)
root(ROOT, alga)
acl(alga, find)
case(liquor, in)
det(liquor, the)
amod(liquor, mix)
obl(find, liquor)
punct(alga, .)
det(bacteria, the)
obl:npmod(form, bacteria)
amod(floc, form)
amod(floc, typical)
amod(floc, activate)
compound(floc, sludge)
root(ROOT, floc)
punct(floc, .)
det(particle, the)
compound(particle, floc)
nsubj(small, particle)
cop(small, be)
advmod(small, all)
root(ROOT, small)
case(floc, as)
det(floc, the)
amod(floc, heavier)
nsubj(settle, floc)
advcl(small, settle)
compound:prt(settle, out)
punct(small, .)
advmod(predominate, initially)
punct(predominate, ,)
det(protozoa, the)
amod(protozoa, flagellate)
nsubj(predominate, protozoa)
root(ROOT, predominate)
punct(give, ,)
cc(give, but)
nsubj(give, they)
advmod(give, soon)
conj(predominate, give)
obj(give, way)
case(protozoa, to)
det(protozoa, the)
amod(protozoa, free)
compound(ciliate, swim)
amod(protozoa, ciliate)
obl(give, protozoa)
punct(predominate, .)
mark(decrease, as)
det(temperature, the)
nsubj(decrease, temperature)
advcl(decrease, decrease)
punct(decrease, ,)
det(number, the)
nsubj(decrease, number)
case(protozoa, of)
amod(protozoa, free)
compound(ciliate, swim)
amod(protozoa, ciliate)
nmod(number, protozoa)
root(ROOT, decrease)
punct(decrease, .)
advmod(little, very)
amod(activity, little)
compound(activity, protozoa)
nsubj(exist, activity)
root(ROOT, exist)
advmod(exist, below)
nummod(degree, 40)
punct(degree, -)
compound(f, degree)
punct(f, -)
obj(exist, f)
punct(exist, .)
mark(reach, when)
det(temperature, the)
nsubj(reach, temperature)
advcl(exist, reach)
nummod(degree, 32)
punct(degree, -)
obj(reach, degree)
punct(exist, -)
case(activity, F)
det(activity, all)
compound(activity, protozoan)
nsubj(cease, activity)
conj(reach, cease)
punct(cease, ;)
punct(exist, ;)
cc(increase, but)
mark(rise, as)
det(temperature, the)
nsubj(rise, temperature)
advcl(increase, rise)
punct(increase, ,)
det(number, the)
nsubj(increase, number)
case(protozoa, of)
nmod(number, protozoa)
conj(exist, increase)
advmod(increase, rapidly)
punct(exist, .)
advmod(once, only)
advmod(stalk, once)
aux:pass(stalk, be)
root(ROOT, stalk)
obj(stalk, ciliate)
acl(ciliate, find)
case(liquor, in)
det(liquor, the)
amod(liquor, mix)
obl(find, liquor)
punct(stalk, .)
det(predomination, the)
nsubj(indicative, predomination)
case(protozoa, of)
amod(protozoa, free)
compound(protozoa, swim)
amod(protozoa, ciliate)
nmod(predomination, protozoa)
cop(indicative, be)
root(ROOT, indicative)
case(population, of)
det(population, a)
amod(population, high)
amod(population, bacterial)
obl(indicative, population)
punct(indicative, .)
nsubj(transfer, Oxygen)
root(ROOT, transfer)
obj(transfer, one)
case(aspect, of)
det(aspect, the)
amod(aspect, important)
nmod(one, aspect)
case(study, of)
det(study, this)
nmod(aspect, study)
ccomp(transfer, be)
mark(determine, to)
ccomp(be, determine)
det(relationship, the)
compound(transfer, oxygen)
compound(relationship, transfer)
obj(determine, relationship)
case(aerator, of)
det(aerator, the)
amod(aerator, mechanical)
nmod(relationship, aerator)
punct(transfer, .)
compound(determination, Routine)
nsubj:pass(make, determination)
aux:pass(make, be)
root(ROOT, make)
case(oxygen, for)
amod(oxygen, dissolve)
obl(make, oxygen)
case(liquor, in)
det(liquor, the)
amod(liquor, mix)
nmod(oxygen, liquor)
cc(rate, and)
case(rate, for)
compound(uptake, oxygen)
compound(rate, uptake)
conj(liquor, rate)
punct(make, .)
det(data, the)
nsubj(show, data)
acl(data, give)
case(table, in)
obl(give, table)
nummod(table, 2)
punct(show, ,)
root(ROOT, show)
det(operation, the)
compound(operation, routine)
obj(show, operation)
case(aerator, of)
det(aerator, the)
nmod(operation, aerator)
punct(show, .)
det(oxygen, the)
amod(oxygen, dissolve)
nsubj(high, oxygen)
case(unit, in)
det(unit, the)
compound(unit, aeration)
nmod(oxygen, unit)
cop(high, be)
advmod(high, consistently)
root(ROOT, high)
case(January, until)
obl(high, January)
nummod(January, 29)
punct(January, ,)
nummod(January, 1961)
punct(high, .)
det(spell, a)
amod(spell, extend)
amod(spell, cold)
nsubj(cause, spell)
root(ROOT, cause)
obj(cause, ice)
mark(build, to)
xcomp(cause, build)
compound:prt(build, up)
case(aerator, on)
det(aerator, the)
obl(build, aerator)
nsubj:pass(mount, which)
aux:pass(mount, be)
acl:relcl(aerator, mount)
case(platform, on)
det(platform, a)
compound(platform, floating)
obl(mount, platform)
cc(cause, and)
conj(mount, cause)
det(platform, the)
amod(platform, entire)
obj(cause, platform)
mark(sink, to)
advcl(cause, sink)
xcomp(sink, lower)
case(water, in)
det(water, the)
obl(lower, water)
punct(cause, .)
det(resistance, the)
amod(resistance, add)
nsubj(damage, resistance)
case(rotor, to)
det(rotor, the)
nmod(resistance, rotor)
root(ROOT, damage)
det(belt, the)
compound(belt, drive)
obj(damage, belt)
cc(reduce, and)
conj(damage, reduce)
det(capacity, the)
compound(capacity, oxygen)
compound(capacity, transfer)
obj(reduce, capacity)
punct(damage, .)
nsubj(be, it)
root(ROOT, be)
advmod(month, approximately)
nummod(month, one)
obl:tmod(be, month)
mark(notice, before)
det(problem, the)
compound(problem, belt)
nsubj:pass(notice, problem)
aux:pass(notice, be)
advcl(month, notice)
cc(correct, and)
conj(notice, correct)
punct(be, ,)
cc(be, but)
case(time, at)
det(time, no)
obl(be, time)
conj(notice, be)
expl(be, there)
det(deficiency, a)
nsubj(be, deficiency)
case(oxygen, of)
amod(oxygen, dissolve)
nmod(deficiency, oxygen)
punct(approximately, . )
det(series, a)
nsubj:pass(conduct, series)
case(test, of)
nummod(test, eight)
amod(test, special)
nmod(series, test)
aux:pass(conduct, be)
root(ROOT, conduct)
case(speed, at)
amod(speed, different)
compound(speed, rotor)
obl(conduct, speed)
mark(determine, to)
advcl(conduct, determine)
det(rate, the)
compound(transfer, oxygen)
compound(rate, transfer)
obj(determine, rate)
punct(conduct, .)
nsubj:pass(conduct, five)
case(test, of)
det(test, the)
nmod(five, test)
aux:pass(conduct, be)
root(ROOT, conduct)
case(cover, with)
det(cover, a)
compound(cover, polyethylene)
obl(conduct, cover)
mark(simulate, to)
acl(cover, simulate)
det(cover, a)
compound(cover, ice)
obj(simulate, cover)
punct(conduct, .)
det(rate, the)
nsubj:pass(give, rate)
case(transfer, of)
compound(transfer, oxygen)
nmod(rate, transfer)
case(concentration, at)
nummod(mg., 1.0)
punct(mg., -)
compound(concentration, mg.)
punct(l., /)
conj(mg., l.)
amod(concentration, dissolve)
compound(concentration, oxygen)
nmod(rate, concentration)
cc(c, and)
nummod(degree, 10)
punct(degree, -)
compound(c, degree)
punct(c, -)
conj(concentration, c)
case(speed, for)
amod(speed, various)
compound(speed, rotor)
nmod(c, speed)
aux:pass(give, be)
root(ROOT, give)
case(table, in)
obl(give, table)
nummod(table, 3)
punct(give, .)
det(rate, the)
amod(rate, maximum)
nsubj:pass(calculate, rate)
case(transfer, of)
compound(transfer, oxygen)
nmod(rate, transfer)
case(oxygen, at)
nummod(oxygen, 1.0)
compound(oxygen, mg)
cc(l, /)
compound(oxygen, l)
amod(oxygen, dissolve)
nmod(rate, oxygen)
aux:pass(calculate, be)
root(ROOT, calculate)
case(lb, as)
nummod(lb, 220)
obl(calculate, lb)
case(day, /)
nmod(lb, day)
case(rate, at)
det(rate, a)
amod(rate, maximum)
obl(calculate, rate)
case(Aj, of)
nummod(Aj, 9.3)
nmod(rate, Aj)
punct(rate, .)
det(requirement, the)
amod(requirement, actual)
compound(requirement, power)
parataxis(calculate, requirement)
acl(requirement, indicate)
nummod(lb., 2)
compound(oxygen, lb.)
compound(transfer, oxygen)
obj(indicate, transfer)
cc(hr., /)
conj(transfer, hr.)
cc(hp., /)
conj(transfer, hp.)
punct(requirement, .)
det(cover, the)
compound(cover, polyethylene)
nsubj(reduce, cover)
root(ROOT, reduce)
det(rate, the)
compound(transfer, oxygen)
compound(rate, transfer)
obj(reduce, rate)
case(cent, by)
nummod(cent, 10)
compound(cent, per)
obl(reduce, cent)
punct(reduce, ,)
advcl(reduce, indicate)
mark(rotor, that)
det(transfer, the)
amod(transfer, maximum)
compound(transfer, oxygen)
nsubj(rotor, transfer)
cop(rotor, be)
case(rotor, at)
det(rotor, the)
ccomp(indicate, rotor)
cc(surface, rather)
fixed(rather, than)
fixed(rather, through)
det(surface, the)
nmod(pond, surface)
punct(pond, .)
compound(pond, oxidation)
conj(rotor, pond)
case(study, during)
det(study, this)
nmod(pond, study)
amod(condition, septic)
nsubj(develop, condition)
acl:relcl(pond, develop)
case(pond, in)
det(pond, the)
compound(pond, oxidation)
obl(develop, pond)
case(spring, in)
det(spring, the)
obl(develop, spring)
mark(melt, when)
det(ice, the)
nsubj(melt, ice)
advcl(develop, melt)
punct(melt, .)
advmod(end, shortly)
mark(end, after)
det(study, this)
nsubj(end, study)
advcl(melt, end)
amod(condition, septic)
obj(end, condition)
xcomp(end, result)
nsubj(require, which)
acl:relcl(condition, require)
det(addition, the)
obj(require, addition)
case(nitrate, of)
compound(nitrate, sodium)
nmod(addition, nitrate)
punct(reduce, .)
det(location, the)
nsubj(make, location)
case(pond, of)
det(pond, the)
compound(pond, oxidation)
nmod(location, pond)
case(area, in)
det(area, a)
amod(value, high)
punct(value, -)
compound(area, value)
amod(area, residential)
nmod(location, area)
root(ROOT, make)
compound(nuisance, odor)
obj(make, nuisance)
det(problem, a)
amod(problem, sensitive)
xcomp(make, problem)
case(developer, for)
det(developer, the)
nmod(problem, developer)
punct(make, .)
det(concentration, the)
amod(concentration, organic)
nsubj(range, concentration)
case(sewage, in)
det(sewage, the)
amod(sewage, influent)
amod(sewage, raw)
nmod(concentration, sewage)
root(ROOT, range)
case(mg, from)
nummod(mg, 160)
case(270, to)
nmod(160, 270)
obl(range, mg)
cc(l, /)
conj(mg, l)
case(BOD, of)
nmod(l, BOD)
case(average, with)
det(average, a)
obl(range, average)
case(Aj, of)
nummod(Aj, 230)
nmod(average, Aj)
punct(give, .)
det(data, the)
compound(data, BOD)
nsubj:pass(give, data)
aux:pass(give, be)
parataxis(range, give)
case(table, in)
obl(give, table)
nummod(table, 4)
punct(give, . )
det(sample, a)
amod(sample, single)
nummod(hr., 24)
punct(hr., -)
compound(sample, hr.)
amod(sample, composite)
nsubj(have, sample)
root(ROOT, have)
det(BOD, a)
obj(have, BOD)
case(l, of)
nummod(mg, 260)
compound(l, mg)
cc(l, /)
nmod(BOD, l)
punct(have, ,)
advcl(have, indicate)
det(sewage, a)
amod(sewage, typical)
amod(sewage, domestic)
obj(indicate, sewage)
punct(have, .)
det(volume, the)
amod(volume, daily)
compound(volume, sewage)
nsubj(average, volume)
case(pond, to)
det(pond, the)
compound(pond, oxidation)
nmod(volume, pond)
root(ROOT, average)
nummod(gpd, 147,000)
obj(average, gpd)
punct(average, ,)
advcl(average, give)
det(period, a)
compound(period, retention)
obj(give, period)
case(day, of)
nummod(day, 42)
nmod(period, day)
punct(average, .)
det(loading, the)
compound(loading, organic)
nsubj(lb, loading)
case(pond, on)
det(pond, the)
nmod(loading, pond)
cop(lb, be)
advmod(lb, slightly)
case(lb, under)
nummod(lb, 60)
root(ROOT, lb)
punct(lb, .)
root(ROOT, BOD)
punct(day, /)
conj(BOD, day)
cc(acre, /)
conj(BOD, acre)
punct(BOD, .)
det(BOD, the)
compound(BOD, effluent)
nsubj(average, BOD)
root(ROOT, average)
nummod(mg, 34)
obj(average, mg)
cc(l, /)
conj(mg, l)
punct(mg, ,)
det(little, a)
obl:npmod(lower, little)
amod(mg, lower)
case(that, than)
obl(lower, that)
case(study, of)
det(study, the)
nmod(that, study)
case(Fayette, at)
nmod(study, Fayette)
conj(average, indicate)
case(loading, for)
det(loading, a)
obl(indicate, loading)
case(lb, of)
nummod(lb, 60)
nmod(loading, lb)
punct(indicate, .)
nsubj(range, Aj)
punct(Aj, .)
det(BOD, the)
nsubj(range, BOD)
case(effluent, of)
det(effluent, the)
nmod(BOD, effluent)
ccomp(show, range)
case(minimum, from)
det(minimum, a)
obl(range, minimum)
case(maximum, of)
nmod(minimum, 13)
case(maximum, to)
det(maximum, a)
nmod(minimum, maximum)
case(l., of)
nummod(l., 47)
compound(l., mg.)
cc(l., /)
nmod(examination, l.)
punct(l., .)
amod(examination, microscopic)
nsubj(show, examination)
case(effluent, of)
det(effluent, the)
nmod(examination, effluent)
root(ROOT, show)
mark(occur, that)
amod(BOD, minimum)
nsubj(occur, BOD)
ccomp(show, occur)
mark(begin, when)
det(alga, the)
nsubj(begin, alga)
advcl(occur, begin)
mark(decrease, to)
xcomp(begin, decrease)
case(weather, with)
amod(weather, cold)
obl(decrease, weather)
punct(show, .)
mark(begin, when)
det(alga, the)
nsubj(begin, alga)
advcl(defense, begin)
mark(build, to)
xcomp(begin, build)
compound:prt(build, up)
advmod(build, again)
punct(rose, ,)
det(rose, the)
compound(rose, effluent)
compound(rose, BOD)
obj(build, rose)
punct(rose, .)
case(week, during)
det(week, the)
nummod(week, two)
nmod(rose, week)
mark(disappear, when)
det(alga, the)
nsubj(disappear, alga)
acl:relcl(week, disappear)
case(BOD, from)
det(BOD, the)
compound(BOD, effluent)
obl(disappear, BOD)
case(BOD, 's)
case(effluent, in)
det(effluent, the)
nmod(18, effluent)
cop(18, be)
compound(BOD, 18)
cc(16, and)
conj(18, 16)
conj(18, Aj)
punct(18, .)
advmod(defense, thus)
punct(defense, ,)
det(category, the)
nummod(category, three)
amod(category, main)
nsubj(defense, category)
case(operation, of)
compound(warfare, antisubmarine)
compound(operation, warfare)
nmod(category, operation)
cop(defense, be)
root(ROOT, defense)
case(shipping, of)
nmod(defense, shipping)
punct(defense, ,)
conj(shipping, defense)
case(force, of)
amod(force, naval)
nmod(shipping, force)
punct(defense, ,)
cc(defense, and)
compound(defense, area)
conj(shipping, defense)
punct(defense, .)
det(category, the)
amod(category, last)
nsubj(overlap, category)
root(ROOT, overlap)
det(other, the)
obj(overlap, other)
case(operation, in)
amod(operation, amphibious)
nmod(other, operation)
cc(terminal, and)
case(terminal, near)
conj(operation, terminal)
cc(basis, and)
conj(terminal, basis)
punct(terminal, .)
mark(effect, to)
advcl(overlap, effect)
det(operation, these)
obj(effect, operation)
punct(exist, ,)
nummod(element, five)
nsubj(exist, element)
parataxis(overlap, exist)
punct(1, ()
nummod(exist, 1)
punct(1, ))
obj(exist, surface)
punct(exist, ,)
punct(2, ()
nummod(air, 2)
punct(2, ))
appos(surface, air)
punct(mine, ,)
punct(mine, ()
nummod(mine, 3)
punct(mine, ))
appos(air, mine)
punct(4, ,)
punct(4, ()
nummod(submarine, 4)
punct(4, ))
conj(mine, submarine)
punct(installation, ,)
cc(installation, and)
punct(5, ()
nummod(installation, 5)
punct(5, ))
amod(installation, fix)
conj(mine, installation)
punct(overlap, .)
compound(force, Surface)
nsubj:pass(use, force)
aux(use, have)
aux:pass(use, be)
root(ROOT, use)
mark(provide, to)
xcomp(use, provide)
compound(zone, defense)
obj(provide, zone)
case(formation, around)
amod(formation, naval)
cc(merchant, and)
conj(naval, merchant)
compound(formation, ship)
obl(provide, formation)
punct(formation, ,)
appos(formation, air)
mark(furnish, to)
advcl(provide, furnish)
compound(surveillance, area)
obj(furnish, surveillance)
punct(mine, ,)
cc(mine, and)
conj(surveillance, mine)
case(protection, for)
nmod(mine, protection)
case(area, of)
amod(area, limited)
nmod(protection, area)
punct(use, .)
nsubj(element, Submarines)
cc(installation, and)
compound(installation, shore)
conj(Submarines, installation)
cop(element, be)
amod(element, new)
root(ROOT, element)
punct(element, .)
det(submarine, the)
nsubj(have, submarine)
advmod(have, now)
root(ROOT, have)
det(place, a)
amod(place, definite)
obj(have, place)
case(defense, in)
compound(defense, submarine)
nmod(place, defense)
advmod(deny, particularly)
mark(deny, in)
advcl(have, deny)
compound(access, enemy)
obj(deny, access)
case(area, to)
amod(area, ocean)
nmod(access, area)
punct(have, .)
amod(installation, fix)
nsubj(offer, installation)
parataxis(have, offer)
obj(offer, possibility)
case(detection, for)
compound(detection, area)
nmod(possibility, detection)
punct(have, .)
compound(warfare, mine)
nsubj:pass(reorient, warfare)
aux(reorient, be)
aux:pass(reorient, be)
root(ROOT, reorient)
case(target, against)
compound(target, submarine)
obl(reorient, target)
punct(reorient, . )
det(element, a)
amod(element, sixth)
nsubj(intelligence, element)
punct(element, ,)
advmod(consider, not)
advmod(consider, always)
parataxis(element, consider)
punct(intelligence, ,)
cop(intelligence, be)
root(ROOT, intelligence)
punct(intelligence, .)
nsubj(include, it)
root(ROOT, include)
amod(intelligence, operational)
obj(include, intelligence)
case(enemy, of)
det(enemy, the)
nmod(intelligence, enemy)
cc(knowledge, and)
conj(enemy, knowledge)
case(environment, of)
det(environment, the)
nmod(enemy, environment)
punct(include, .)
amod(intelligence, operational)
nsubj(available, intelligence)
advmod(available, presumably)
aux(available, will)
cop(available, be)
root(ROOT, available)
case(agency, from)
nmod:poss(agency, we)
amod(agency, national)
compound(agency, intelligence)
obl(available, agency)
punct(available, ;)
punct(available, ;)
nsubj(come, intelligence)
case(environment, on)
det(environment, the)
nmod(intelligence, environment)
aux(come, will)
parataxis(available, come)
case(program, from)
det(program, the)
advmod(augment, recently)
amod(program, augment)
obl(come, program)
case(oceanography, in)
obl(come, oceanography)
punct(available, .)
det(development, the)
amod(development, major)
amod(development, postwar)
nsubj(certainty, development)
cop(certainty, be)
det(certainty, the)
root(ROOT, certainty)
mark(consider, that)
det(element, these)
nsubj:pass(consider, element)
aux(consider, should)
advmod(consider, not)
aux:pass(consider, be)
acl(certainty, consider)
advmod(consider, singly)
cc(combination, but)
case(combination, in)
conj(consider, combination)
cc(support, and)
mark(support, as)
aux(support, be)
advmod(support, mutually)
conj(consider, support)
punct(certainty, .)
nsubj(cut, Necessity)
case(concept, for)
det(concept, a)
case(all, over)
punct(all, -)
det(concept, all)
nmod(Necessity, concept)
acl(concept, think)
case(defense, on)
compound(defense, submarine)
obl(think, defense)
aux(cut, have)
advmod(cut, not)
advmod(cut, always)
cop(cut, be)
amod(cut, clear)
punct(cut, -)
root(ROOT, cut)
punct(cut, .)
nsubj(tend, proponent)
case(element, of)
amod(element, single)
nmod(proponent, element)
root(ROOT, tend)
mark(ensure, to)
xcomp(tend, ensure)
obj(ensure, predominance)
case(element, of)
det(element, that)
nmod(predominance, element)
mark(determine, without)
advcl(ensure, determine)
mark(justified, if)
nsubj:pass(justified, it)
aux:pass(justified, be)
advcl(determine, justified)
punct(assume, ,)
cc(assume, and)
det(element, the)
nsubj(assume, element)
case(proponent, with)
det(proponent, the)
advmod(enthusiastic, most)
amod(proponent, enthusiastic)
cc(vociferous, and)
conj(enthusiastic, vociferous)
nmod(element, proponent)
aux(assume, have)
conj(tend, assume)
det(importance, the)
amod(importance, greatest)
obj(assume, importance)
punct(tend, .)
advmod(overshadow, consequently)
punct(overshadow, ,)
nsubj(overshadow, air)
punct(surface, ,)
conj(air, surface)
punct(element, ,)
cc(element, and)
compound(element, submarine)
conj(air, element)
root(ROOT, overshadow)
det(mine, the)
obj(overshadow, mine)
punct(installation, ,)
amod(installation, fix)
conj(mine, installation)
punct(intelligence, ,)
cc(intelligence, and)
conj(mine, intelligence)
punct(overshadow, .)
nsubj(seek, these)
aux(seek, have)
root(ROOT, seek)
obj(seek, more)
cc(more, and)
conj(more, more)
case(what, of)
obl(more, what)
nsubj(have, they)
acl:relcl(what, have)
punct(seek, .)
nsubj(seem, each)
parataxis(seek, seem)
mark(strive, to)
xcomp(seem, strive)
case(elimination, for)
obl(strive, elimination)
case(necessity, of)
det(necessity, the)
nmod(elimination, necessity)
case(other, for)
det(other, the)
nmod(necessity, other)
punct(seek, .)
nsubj(demonstrating, this)
punct(demonstrating, ,)
case(experience, despite)
amod(experience, postwar)
obl(demonstrating, experience)
root(ROOT, demonstrating)
mark(support, that)
det(element, all)
nsubj(support, element)
aux(support, be)
advmod(support, necessarily)
advmod(support, mutually)
ccomp(demonstrating, support)
punct(demonstrating, .)
advmod(stress, thus)
punct(stress, ,)
det(area, the)
advmod(productive, most)
amod(area, productive)
nsubj:pass(stress, area)
cop(stress, be)
advmod(stress, not)
advmod(stress, necessarily)
det(stress, the)
advmod(stress, most)
root(ROOT, stress)
punct(stress, .)
nsubj:pass(state, this)
aux:pass(state, be)
root(ROOT, state)
mark(emphasize, to)
xcomp(state, emphasize)
det(necessity, the)
obj(emphasize, necessity)
case(concept, for)
det(concept, a)
advmod(all, over)
punct(all, -)
det(concept, all)
nmod(necessity, concept)
case(defense, of)
compound(defense, submarine)
nmod(concept, defense)
punct(concept, ,)
appos(concept, one)
nsubj(provide, which)
aux(provide, would)
acl:relcl(one, provide)
obj(provide, position)
case(importance, of)
amod(importance, relative)
nmod(position, importance)
case(element, to)
compound(element, asw)
nmod(importance, element)
case(potentiality, base)
case(potentiality, on)
amod(potentiality, project)
obl(provide, potentiality)
punct(state, .)
advmod(channel, then)
det(enthusiasm, the)
nsubj:pass(channel, enthusiasm)
cc(energy, and)
conj(enthusiasm, energy)
case(element, of)
det(element, all)
nmod(enthusiasm, element)
aux(channel, can)
aux:pass(channel, be)
root(ROOT, channel)
mark(produce, to)
advcl(channel, produce)
amod(progress, cumulative)
obj(produce, progress)
case(objective, toward)
det(objective, a)
amod(objective, common)
nmod(progress, objective)
punct(channel, .)
det(concept, a)
advmod(all, over)
punct(all, -)
det(concept, all)
nsubj(have, concept)
aux(have, would)
root(ROOT, have)
amod(advantage, other)
obj(have, advantage)
punct(have, .)
nsubj(allow, it)
aux(allow, would)
root(ROOT, allow)
obj(allow, presentation)
case(public, to)
det(public, the)
obl(allow, public)
case(approach, of)
det(approach, a)
amod(approach, unified)
nmod(public, approach)
punct(allow, .)
advmod(present, now)
det(problem, the)
nsubj:pass(present, problem)
aux:pass(present, be)
root(ROOT, present)
xcomp(present, piecemeal)
cc(delineating, and)
advmod(contradictorily, sometimes)
advmod(delineating, contradictorily)
punct(present, .)
mark(announce, while)
nummod(element, one)
nsubj(announce, element)
aux(announce, be)
advcl(delineating, announce)
obj(announce, progress)
punct(delineating, ,)
nsubj(delineating, another)
aux(delineating, be)
conj(present, delineating)
nmod:poss(problem, its)
obj(delineating, problem)
punct(present, .)
det(result, the)
nsubj(confusion, result)
aux(confusion, can)
advmod(confusion, only)
cop(confusion, be)
root(ROOT, confusion)
case(mind, in)
det(mind, the)
amod(mind, public)
nmod(confusion, mind)
punct(confusion, . )
det(concept, a)
amod(concept, unified)
nsubj(serve, concept)
aux(serve, can)
root(ROOT, serve)
case(guide, as)
det(guide, a)
obl(serve, guide)
case(budget, to)
nmod(guide, budget)
cc(command, and)
punct(command, ,)
mark(gain, if)
amod(support, public)
nsubj:pass(gain, support)
aux:pass(gain, be)
advcl(command, gain)
punct(command, ,)
aux(command, will)
conj(serve, command)
amod(support, congressional)
obj(command, support)
punct(serve, .)
nmod:poss(criticism, Industry)
case(Industry, 's)
amod(criticism, main)
nsubj(be, criticism)
case(effort, of)
det(navy, the)
nmod:poss(effort, navy)
case(navy, 's)
compound(effort, antisubmarine)
nmod(criticism, effort)
root(ROOT, be)
mark(determine, that)
nsubj(determine, it)
aux(determine, can)
advmod(determine, not)
ccomp(be, determine)
advmod(apply, where)
det(company, any)
nummod(company, one)
nsubj(apply, company)
cc(industry, or)
conj(company, industry)
aux(apply, can)
ccomp(determine, apply)
nsubj(skill, it)
cop(skill, be)
obj(apply, skill)
cc(know, and)
conj(skill, know)
punct(how, -)
advmod(know, how)
punct(be, .)
amod(guidance, lack)
nsubj(pick, guidance)
punct(guidance, ,)
nsubj(pick, industry)
root(ROOT, pick)
nsubj(area, it)
cop(area, be)
amod(area, own)
ccomp(pick, area)
punct(pick, .)
det(result, the)
nsubj(be, result)
punct(result, ,)
acl(result, couple)
case(salesmanship, with)
det(salesmanship, the)
obl(couple, salesmanship)
case(which, for)
obl(famous, which)
amod(industry, american)
nsubj(famous, industry)
cop(famous, be)
acl:relcl(salesmanship, famous)
punct(be, ,)
root(ROOT, be)
amod(expenditure, considerable)
nsubj(be, expenditure)
case(fund, of)
nmod(expenditure, fund)
cc(effort, and)
conj(fund, effort)
case(area, in)
amod(area, marginal)
nmod(fund, area)
punct(be, .)
det(concept, a)
advmod(all, over)
punct(all, -)
det(concept, all)
nsubj(guide, concept)
aux(guide, will)
root(ROOT, guide)
obj(guide, industry)
mark(yield, where)
amod(talent, available)
nsubj(yield, talent)
cc(facility, and)
conj(talent, facility)
aux(yield, will)
advcl(guide, yield)
amod(dividend, greatest)
obj(yield, dividend)
punct(guide, .)
advmod(need, therefore)
punct(need, ,)
det(concept, a)
amod(concept, broad)
nsubj:pass(need, concept)
case(defense, of)
advmod(all, over)
punct(all, -)
det(defense, all)
compound(defense, submarine)
nmod(concept, defense)
aux:pass(need, be)
root(ROOT, need)
case(co-ordination, for)
obl(need, co-ordination)
case(effort, of)
det(Navy, the)
nmod:poss(effort, Navy)
case(Navy, 's)
nmod(co-ordination, effort)
punct(co-ordination, ,)
case(presentation, for)
det(presentation, a)
amod(presentation, logical)
nmod(co-ordination, presentation)
case(public, to)
det(public, the)
nmod(presentation, public)
punct(presentation, ,)
case(guidance, for)
nmod:poss(guidance, industry)
case(industry, 's)
nmod(presentation, guidance)
punct(basis, ,)
cc(basis, and)
case(basis, as)
det(basis, a)
conj(guidance, basis)
case(program, for)
det(program, a)
nmod(basis, program)
case(Congress, to)
det(Congress, the)
nmod(program, Congress)
punct(Principles, .)
nsubj(basis, Principles)
amod(Principles, involved)
case(concept, in)
det(concept, a)
case(all, over)
punct(all, -)
det(concept, all)
obl(involved, concept)
obj(follow, that)
nsubj(follow, which)
acl:relcl(concept, follow)
aux(discussion, will)
cop(discussion, be)
det(discussion, a)
ccomp(follow, discussion)
case(principle, of)
nmod(discussion, principle)
cc(content, and)
amod(content, possible)
conj(principle, content)
case(concept, for)
det(concept, a)
case(all, over)
punct(all, -)
det(concept, all)
nmod(content, concept)
case(warfare, of)
compound(warfare, antisubmarine)
nmod(concept, warfare)
punct(need, .)
nsubj(possess, Russia)
root(ROOT, possess)
det(preponderance, the)
obj(possess, preponderance)
case(submarine, of)
nmod(preponderance, submarine)
case(world, in)
det(world, the)
nmod(preponderance, world)
punct(preponderance, ,)
acl(preponderance, divide)
case(fleet, between)
nmod:poss(fleet, she)
amod(fleet, various)
obl(divide, fleet)
punct(possess, .)
nsubj(Albania, some)
cop(Albania, be)
advmod(Albania, also)
case(Albania, in)
root(ROOT, Albania)
cc(loan, and)
nsubj(loan, other)
cop(loan, be)
case(loan, on)
conj(Albania, loan)
case(Egypt, to)
nmod(loan, Egypt)
punct(Albania, .)
amod(country, other)
nsubj(furnish, country)
nsubj(become, which)
aux(become, may)
advmod(become, willingly)
cc(unwillingly, or)
advmod(become, unwillingly)
acl:relcl(country, become)
obj(become, Communist)
aux(furnish, can)
root(ROOT, furnish)
obj(furnish, basis)
punct(furnish, .)
amod(area, communist)
compound(area, target)
nsubj:pass(assume, area)
aux(assume, can)
aux:pass(assume, be)
root(ROOT, assume)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(assume, be)
det(certainty, no)
nsubj(be, certainty)
mark(coincide, that)
amod(assumption, such)
nsubj(coincide, assumption)
acl(certainty, coincide)
case(intention, with)
amod(intention, Soviet)
obl(coincide, intention)
punct(assume, .)
nsubj(come, attack)
aux(come, can)
root(ROOT, come)
case(direction, from)
advmod(direction, almost)
det(direction, any)
obl(come, direction)
case(location, against)
amod(location, many)
nmod(direction, location)
punct(come, .)
advmod(be, logically)
punct(be, ,)
advmod(be, then)
punct(be, ,)
det(principle, the)
amod(principle, first)
nsubj(be, principle)
case(plan, of)
det(plan, the)
nmod(principle, plan)
aux(be, must)
root(ROOT, be)
mark(oriented, that)
nsubj(oriented, it)
cop(oriented, be)
advmod(oriented, not)
advmod(oriented, rigidly)
ccomp(be, oriented)
case(area, toward)
det(area, any)
amod(area, geographical)
obl(oriented, area)
punct(be, .)
expl(state, it)
aux:pass(state, be)
advmod(state, often)
root(ROOT, state)
mark(destroy, that)
det(submarine, the)
nsubj:pass(destroy, submarine)
aux(destroy, can)
aux:pass(destroy, be)
ccomp(state, destroy)
mark(destroy, while)
obl(destroy, building)
punct(destroy, ,)
case(basis, at)
obl(destroy, basis)
punct(basis, ,)
case(transit, in)
nmod(basis, transit)
punct(require, ,)
cc(require, and)
case(station, on)
nmod(destruction, station)
punct(destruction, .)
nsubj(require, destruction)
case(building, of)
det(enemy, the)
nmod:poss(building, enemy)
case(enemy, 's)
nmod(destruction, building)
cc(complex, and)
compound(complex, base)
conj(building, complex)
punct(require, ,)
advmod(require, however)
punct(require, ,)
ccomp(state, require)
obj(require, attack)
case(territory, on)
compound(territory, enemy)
nmod(attack, territory)
punct(territory, ,)
nsubj(possible, which)
cop(possible, be)
acl:relcl(attack, possible)
advmod(event, only)
case(event, in)
obl(possible, event)
case(hostility, of)
det(hostility, all)
punct(out, -)
compound(all, out)
nmod(event, hostility)
punct(state, .)
case(transit, in)
obl(possible, transit)
cc(station, or)
case(station, on)
conj(transit, station)
punct(possible, ,)
nsubj(possible, it)
aux(possible, may)
advmod(possible, not)
cop(possible, be)
root(ROOT, possible)
mark(attack, to)
xcomp(possible, attack)
det(submarine, the)
obj(attack, submarine)
case(commission, until)
obl(attack, commission)
case(act, of)
det(act, a)
amod(act, over)
nmod(commission, act)
punct(adept, .)
det(Communists, the)
nsubj(adept, Communists)
cop(adept, be)
parataxis(possible, adept)
mark(utilize, at)
advcl(adept, utilize)
obj(utilize, hostility)
amod(hostility, short)
case(war, of)
amod(war, general)
obl(short, war)
cc(do, and)
aux(do, will)
conj(adept, do)
advmod(whenever, so)
advmod(do, whenever)
nsubj(whenever, it)
cop(whenever, be)
case(advantage, to)
nmod:poss(advantage, they)
obl(whenever, advantage)
punct(whenever, .)
advmod(be, therefore)
det(principle, the)
amod(principle, second)
nsubj(be, principle)
case(plan, of)
det(plan, the)
nmod(principle, plan)
aux(be, must)
parataxis(possible, be)
mark(dependent, that)
punct(dependent, ,)
mark(provide, while)
advcl(dependent, provide)
case(hostility, for)
det(hostility, all)
punct(out, -)
case(hostility, out)
obl(provide, hostility)
punct(dependent, ,)
nmod:poss(effectiveness, its)
nsubj(dependent, effectiveness)
cop(dependent, be)
advmod(dependent, not)
ccomp(be, dependent)
case(war, on)
amod(war, general)
obl(dependent, war)
punct(possible, .)
amod(warfare, Antisubmarine)
nsubj(involve, warfare)
aux(involve, do)
advmod(involve, not)
root(ROOT, involve)
obj(involve, clash)
case(force, between)
amod(force, large)
amod(force, oppose)
nmod(clash, force)
punct(clash, ,)
case(decision, with)
det(decision, the)
obl(involve, decision)
det(result, a)
obj(involve, result)
case(battle, of)
det(battle, a)
amod(battle, single)
nmod(result, battle)
punct(involve, .)
nsubj(war, it)
cop(war, be)
det(war, a)
root(ROOT, war)
case(attrition, of)
nmod(war, attrition)
punct(attrition, ,)
case(action, of)
amod(action, single)
nmod(attrition, action)
punct(war, ,)
case(exchange, of)
det(exchange, a)
nmod(war, exchange)
case(loss, of)
nmod(exchange, loss)
punct(war, .)
det(exchange, this)
nsubj(result, exchange)
aux(result, must)
root(ROOT, result)
mark(end, in)
nsubj(end, we)
advcl(result, end)
compound:prt(result, up)
case(unit, with)
det(unit, some)
amod(unit, effective)
obl(result, unit)
punct(result, .)
advmod(need, initially)
punct(need, ,)
advcl(need, have)
amod(unit, fewer)
obj(have, unit)
case(element, of)
det(element, some)
nmod(unit, element)
punct(unit, --)
advmod(submarine, especially)
appos(unit, submarine)
punct(submarine, --)
case(opponent, than)
det(opponent, the)
nmod(submarine, opponent)
punct(need, ,)
nmod:poss(capability, we)
nsubj(need, capability)
root(ROOT, need)
mark(greater, to)
cop(greater, be)
advmod(greater, sufficiently)
xcomp(need, greater)
case(theirs, than)
obl(greater, theirs)
punct(greater, ,)
mark(favor, so)
fixed(so, that)
det(exchange, the)
nsubj(favor, exchange)
aux(favor, will)
cop(favor, be)
case(favor, in)
nmod:poss(favor, we)
advcl(greater, favor)
punct(need, .)
advmod(be, therefore)
punct(be, ,)
det(principle, the)
amod(principle, third)
nsubj(be, principle)
case(plan, of)
det(plan, the)
nmod(principle, plan)
aux(be, must)
conj(need, be)
mark(depend, that)
nsubj(depend, it)
aux(depend, do)
advmod(depend, not)
ccomp(be, depend)
case(effectiveness, for)
obl(depend, effectiveness)
case(engagement, on)
nmod(effectiveness, engagement)
case(type, by)
det(type, the)
amod(type, same)
obl(depend, type)
punct(depend, ,)
mark(rate, unless)
case(rate, at)
det(rate, a)
amod(rate, assure)
amod(rate, favorable)
compound(rate, exchange)
advcl(depend, rate)
punct(need, .)
det(submarine, the)
nsubj(increase, submarine)
aux(increase, have)
root(ROOT, increase)
nmod:poss(effectiveness, its)
obj(increase, effectiveness)
case(order, by)
amod(order, several)
obl(increase, order)
case(magnitude, of)
nmod(order, magnitude)
case(War, since)
compound(War, World)
obl(increase, War)
nummod(War, 2)
punct(increase, .)
nsubj(increase, it)
cop(increase, be)
nsubj(increase, speed)
aux(increase, have)
root(ROOT, increase)
punct(increase, ,)
nsubj(operate, it)
conj(increase, operate)
case(depth, at)
advmod(greater, increasingly)
amod(depth, greater)
obl(operate, depth)
punct(become, ,)
nmod:poss(endurance, its)
amod(endurance, submerge)
nsubj(become, endurance)
aux(become, be)
conj(increase, become)
xcomp(become, unlimited)
punct(become, ,)
cc(become, and)
nsubj(become, it)
aux(become, will)
conj(become, become)
advmod(more, even)
advmod(silent, more)
xcomp(become, silent)
punct(increase, .)
det(development, the)
amod(development, next)
nsubj(weaponry, development)
aux(weaponry, will)
advmod(weaponry, probably)
cop(weaponry, be)
case(weaponry, in)
root(ROOT, weaponry)
punct(weaponry, .)
det(missile, the)
nsubj:pass(expect, missile)
aux(expect, can)
advmod(expect, gradually)
aux:pass(expect, be)
root(ROOT, expect)
mark(replace, to)
xcomp(expect, replace)
det(torpedo, the)
obj(replace, torpedo)
punct(expect, .)
mark(increase, as)
compound(range, detection)
nsubj(increase, range)
advcl(develop, increase)
punct(develop, ,)
nsubj:pass(develop, weapon)
aux(develop, will)
aux:pass(develop, be)
root(ROOT, develop)
mark(attack, to)
xcomp(develop, attack)
amod(submarine, other)
obj(attack, submarine)
cc(craft, and)
compound(craft, surface)
conj(submarine, craft)
case(range, at)
det(range, these)
obl(attack, range)
punct(develop, .)
advmod(be, therefore)
punct(be, ,)
det(principle, the)
amod(principle, fourth)
nsubj(be, principle)
case(plan, of)
det(plan, the)
nmod(principle, plan)
aux(be, must)
root(ROOT, be)
mark(provide, that)
nsubj(provide, it)
ccomp(be, provide)
mark(increase, for)
advmod(increase, continuously)
advcl(provide, increase)
obj(increase, capability)
case(opponent, in)
det(opponent, the)
obl(increase, opponent)
punct(be, .)
det(element, no)
nsubj(accomplish, element)
aux(accomplish, can)
root(ROOT, accomplish)
det(objective, the)
amod(objective, total)
obj(accomplish, objective)
case(defense, of)
compound(defense, submarine)
nmod(objective, defense)
punct(accomplish, .)
det(element, some)
nsubj(support, element)
root(ROOT, support)
det(other, the)
obj(support, other)
punct(have, ,)
cc(have, but)
nsubj(have, all)
conj(support, have)
obj(have, limitation)
punct(support, .)
det(limitation, some)
nsubj:pass(compensate, limitation)
case(element, of)
nummod(element, one)
nmod(limitation, element)
aux(compensate, can)
aux:pass(compensate, be)
root(ROOT, compensate)
obl(compensate, for)
case(capability, by)
det(capability, a)
obl(compensate, capability)
case(another, of)
nmod(capability, another)
punct(compensate, .)
nsubj(increase, Elements)
acl(Elements, use)
case(combination, in)
obl(use, combination)
aux(increase, will)
root(ROOT, increase)
det(capability, the)
advmod(all, over)
punct(all, -)
det(capability, all)
obj(increase, capability)
obj(increase, more)
case(sum, than)
det(sum, the)
obl(more, sum)
case(capability, of)
det(capability, the)
nmod(sum, capability)
case(element, of)
det(element, the)
amod(element, individual)
nmod(capability, element)
punct(increase, .)
advmod(be, therefore)
punct(be, ,)
det(plan, the)
nmod:poss(principle, plan)
case(plan, 's)
amod(principle, fifth)
nsubj(be, principle)
aux(be, must)
root(ROOT, be)
mark(capitalize, that)
nsubj(capitalize, it)
ccomp(be, capitalize)
case(capability, on)
det(capability, the)
obl(capitalize, capability)
case(element, of)
det(element, all)
nmod(capability, element)
case(combination, in)
nmod(element, combination)
punct(be, .)
advmod(solve, conceivably)
det(problem, the)
compound(defense, submarine)
compound(problem, defense)
nsubj:pass(solve, problem)
aux(solve, can)
aux:pass(solve, be)
root(ROOT, solve)
case(force, by)
amod(force, sufficient)
obl(solve, force)
punct(solve, .)
nsubj(make, number)
aux(make, would)
aux(make, be)
amod(policy, astronomical)
cc(current, and)
conj(astronomical, current)
amod(policy, fiscal)
nsubj(make, policy)
root(ROOT, make)
obj(make, this)
det(solution, a)
amod(solution, impractical)
xcomp(make, solution)
punct(solution, .)
appos(solution, shipbuilding)
punct(procurement, ,)
compound(procurement, aircraft)
conj(shipbuilding, procurement)
punct(program, ,)
cc(program, and)
compound(program, weapon)
conj(shipbuilding, program)
conj(make, indicate)
mark(enough, that)
expl(enough, there)
aux(enough, will)
advmod(enough, not)
cop(enough, be)
ccomp(indicate, enough)
case(anything, of)
obl(enough, anything)
punct(make, .)
advmod(contribute, therefore)
punct(contribute, ,)
det(measure, any)
nsubj(contribute, measure)
acl(measure, take)
case(peacetime, in)
obl(take, peacetime)
nsubj(decrease, which)
aux(decrease, will)
acl:relcl(measure, decrease)
compound(requirement, force)
obj(decrease, requirement)
case(war, in)
nmod(requirement, war)
aux(contribute, will)
root(ROOT, contribute)
advmod(contribute, greatly)
case(success, to)
obl(contribute, success)
mark(occur, when)
nsubj(occur, hostility)
advcl(contribute, occur)
punct(contribute, .)
advmod(be, therefore)
punct(be, ,)
det(principle, the)
amod(principle, sixth)
nsubj(be, principle)
case(plan, of)
det(plan, the)
nmod(principle, plan)
aux(be, must)
parataxis(contribute, be)
mark(concentrate, that)
nsubj(concentrate, it)
ccomp(be, concentrate)
case(measure, on)
amod(measure, current)
obl(concentrate, measure)
nsubj(reduce, which)
aux(reduce, will)
acl:relcl(measure, reduce)
amod(requirement, future)
compound(requirement, force)
obj(reduce, requirement)
punct(be, .)
det(world, the)
nsubj(change, world)
aux(change, be)
advmod(change, constantly)
root(ROOT, change)
punct(change, ;)
punct(change, ;)
nsubj(obsolescent, what)
cop(new, be)
acl:relcl(what, new)
obl:tmod(new, yesterday)
cop(obsolescent, be)
parataxis(change, obsolescent)
obl:tmod(obsolescent, today)
punct(change, .)
det(principle, the)
amod(principle, seventh)
nsubj(evident, principle)
case(plan, of)
det(plan, the)
nmod(principle, plan)
cop(evident, be)
obl:npmod(evident, self)
punct(evident, -)
root(ROOT, evident)
punct(evident, ;)
punct(evident, ;)
nsubj(flexible, it)
aux(enough, must)
cop(flexible, be)
parataxis(evident, flexible)
advmod(flexible, enough)
mark(allow, to)
advcl(enough, allow)
case(breakthrough, for)
amod(breakthrough, technological)
obl(allow, breakthrough)
punct(progress, ,)
amod(progress, scientific)
conj(breakthrough, progress)
punct(change, ,)
cc(change, and)
conj(breakthrough, change)
case(condition, in)
compound(condition, world)
nmod(change, condition)
punct(evident, .)
advcl(demonstrate, support)
obj(support, element)
case(operation, in)
amod(operation, asw)
nmod(element, operation)
case(point, to)
det(point, this)
obl(support, point)
det(need, the)
nsubj:pass(demonstrate, need)
case(plan, for)
det(plan, a)
advmod(all, over)
punct(all, -)
det(plan, all)
nmod(need, plan)
case(defense, for)
compound(defense, submarine)
nmod(plan, defense)
aux(demonstrate, have)
aux:pass(demonstrate, be)
root(ROOT, demonstrate)
punct(demonstrate, ,)
det(mission, the)
nsubj:pass(state, mission)
aux(state, have)
aux:pass(state, be)
ccomp(demonstrate, state)
punct(state, ,)
amod(principle, broad)
nsubj:pass(state, principle)
acl(principle, delineating)
nmod:poss(content, its)
obj(delineating, content)
xcomp(delineating, lay)
compound:prt(lay, down)
punct(element, ,)
cc(element, and)
det(element, the)
compound(element, support)
conj(content, element)
acl(element, list)
punct(demonstrate, .)
mark(consider, before)
advcl(state, consider)
det(element, these)
obj(consider, element)
case(detail, in)
amod(detail, more)
obl(consider, detail)
punct(state, ,)
det(requirement, a)
amod(requirement, additional)
nsubj:pass(state, requirement)
aux(state, should)
aux:pass(state, be)
root(ROOT, state)
punct(state, .)
amod(coverage, large)
compound(coverage, area)
nsubj(accomplish, coverage)
aux(accomplish, will)
root(ROOT, accomplish)
det(task, all)
amod(task, other)
obj(accomplish, task)
punct(accomplish, .)
advmod(provide, therefore)
punct(provide, ,)
mark(provide, because)
nsubj(provide, reduction)
case(result, in)
compound(result, task)
nmod(reduction, result)
case(reduction, in)
nmod(result, reduction)
case(force, of)
nmod(reduction, force)
acl(reduction, require)
punct(provide, ,)
det(plan, the)
nsubj(provide, plan)
aux(provide, should)
root(ROOT, provide)
mark(expand, for)
advcl(provide, expand)
compound(coverage, area)
obj(expand, coverage)
punct(provide, .)
cc(remember, but)
nsubj:pass(remember, it)
aux(remember, must)
aux:pass(remember, be)
root(ROOT, remember)
mark(oriented, that)
det(plan, the)
nsubj:pass(oriented, plan)
aux(oriented, should)
advmod(oriented, not)
aux:pass(oriented, be)
ccomp(remember, oriented)
advmod(oriented, geographically)
punct(remember, .)
advmod(flexible, consequently)
punct(flexible, ,)
det(system, the)
nsubj(flexible, system)
acl(system, give)
compound(coverage, area)
obj(give, coverage)
punct(wide, ()
mark(wide, if)
amod(coverage, such)
nsubj(wide, coverage)
cop(wide, be)
advmod(wide, less)
fixed(less, than)
obl:npmod(wide, world)
advcl(give, wide)
punct(wide, ))
aux(flexible, must)
cop(flexible, be)
root(ROOT, flexible)
cc(mobile, and)
advmod(mobile, hence)
case(least, at)
obl(partially, least)
advmod(mobile, partially)
conj(flexible, mobile)
punct(flexible, .)
mark(appear, since)
amod(coverage, effective)
compound(coverage, area)
nsubj(appear, coverage)
advcl(borne, appear)
advmod(remote, fairly)
xcomp(appear, remote)
punct(borne, ,)
det(requirement, the)
nsubj:pass(borne, requirement)
aux(borne, can)
aux:pass(borne, be)
root(ROOT, borne)
case(mind, in)
obl(borne, mind)
mark(consider, while)
advcl(borne, consider)
det(element, the)
obj(consider, element)
punct(element, :)
appos(element, air)
punct(surface, ,)
conj(air, surface)
punct(surface, ,)
compound(surface, sub)
punct(surface, -)
conj(air, surface)
punct(installation, ,)
amod(installation, fix)
conj(air, installation)
punct(mine, ,)
conj(air, mine)
punct(intelligence, ,)
cc(intelligence, and)
conj(air, intelligence)
punct(borne, .)
nsubj:pass(arrange, these)
aux:pass(arrange, be)
root(ROOT, arrange)
advmod(arrange, approximately)
case(order, in)
det(order, the)
obl(arrange, order)
case(vociferousness, of)
det(vociferousness, the)
nmod(order, vociferousness)
case(proponent, of)
nmod:poss(proponent, they)
nmod(vociferousness, proponent)
cc(discuss, but)
aux(discuss, will)
aux:pass(discuss, be)
conj(arrange, discuss)
case(order, in)
det(order, the)
amod(order, reverse)
obl(discuss, order)
case(hope, in)
det(hope, the)
obl(discuss, hope)
mark(result, that)
det(order, the)
amod(order, true)
nsubj(result, order)
case(importance, of)
nmod(order, importance)
aux(result, will)
acl(hope, result)
punct(arrange, .)
nsubj(include, intelligence)
punct(include, ,)
mark(use, as)
advcl(include, use)
advmod(use, herein)
punct(include, ,)
aux(include, will)
root(ROOT, include)
obj(include, information)
case(opponent, on)
amod(opponent, possible)
nmod(information, opponent)
cc(environment, and)
case(environment, on)
det(environment, the)
conj(opponent, environment)
nsubj(affect, which)
aux(affect, can)
acl:relcl(environment, affect)
obj(affect, operation)
punct(include, .)
nsubj:pass(refer, these)
aux(refer, can)
aux:pass(refer, be)
root(ROOT, refer)
obl(refer, to)
case(intelligence, as)
amod(intelligence, operational)
compound(intelligence, intelligence)
cc(environmental, and)
conj(intelligence, environmental)
obl(refer, intelligence)
punct(refer, .)
case(defense, in)
compound(defense, submarine)
obl(have, defense)
nsubj(have, these)
aux(have, must)
root(ROOT, have)
amod(stress, maximum)
obj(have, stress)
punct(have, .)
amod(intelligence, good)
amod(intelligence, operational)
nsubj(ensure, intelligence)
aux(ensure, can)
root(ROOT, ensure)
compound(planning, sound)
obj(ensure, planning)
punct(reduce, ,)
advmod(reduce, greatly)
conj(ensure, reduce)
compound(requirement, force)
obj(reduce, requirement)
punct(increase, ,)
cc(increase, and)
conj(reduce, increase)
amod(effectiveness, tactical)
obj(increase, effectiveness)
punct(ensure, .)
amod(intelligence, Environmental)
nsubj(important, intelligence)
cop(important, be)
advmod(important, just)
advmod(important, as)
root(ROOT, important)
punct(important, .)
det(ocean, the)
nsubj(co-operate, ocean)
advmod(co-operate, presently)
root(ROOT, co-operate)
case(target, with)
det(target, the)
obl(co-operate, target)
punct(co-operate, .)
amod(knowledge, full)
nsubj(bring, knowledge)
case(science, of)
det(science, the)
nmod(knowledge, science)
case(oceanography, of)
nmod(science, oceanography)
aux(bring, can)
conj(co-operate, bring)
det(environment, the)
obj(bring, environment)
case(side, to)
nmod:poss(side, we)
obl(bring, side)
punct(bring, ,)
advcl(bring, result)
case(increase, in)
det(increase, a)
obl(result, increase)
case(effectiveness, in)
nmod(increase, effectiveness)
case(equipment, of)
nmod(effectiveness, equipment)
cc(tactic, and)
conj(equipment, tactic)
punct(decrease, ,)
det(decrease, a)
conj(equipment, decrease)
case(capability, in)
compound(capability, enemy)
nmod(decrease, capability)
punct(development, ,)
cc(development, and)
det(development, the)
conj(decrease, development)
case(method, of)
nmod(development, method)
mark(capitalize, of)
acl(method, capitalize)
case(environment, on)
det(environment, the)
obl(capitalize, environment)
punct(co-operate, .)
advmod(result, therefore)
punct(result, ,)
amod(intelligence, improve)
nsubj(result, intelligence)
aux(result, will)
root(ROOT, result)
case(requirement, in)
amod(requirement, reduce)
compound(requirement, force)
obl(result, requirement)
cc(important, and)
punct(important, ,)
mark(support, as)
nsubj(support, it)
advcl(important, support)
det(element, all)
amod(element, other)
obj(support, element)
punct(rate, ,)
conj(element, rate)
det(priority, a)
amod(priority, top)
appos(element, priority)
punct(priority, .)
amod(priority, gather)
obj(gather, intelligence)
cop(important, be)
conj(result, important)
punct(translation, ,)
cc(translation, but)
case(importance, of)
amod(importance, equal)
obl(translation, importance)
cop(translation, be)
nmod:poss(translation, its)
conj(important, translation)
case(form, into)
amod(form, usable)
nmod(translation, form)
punct(important, . )
det(program, a)
nsubj:pass(need, program)
aux:pass(need, be)
root(ROOT, need)
mark(translate, to)
xcomp(need, translate)
det(result, the)
obj(translate, result)
case(research, of)
amod(research, oceanographic)
nmod(result, research)
case(instruction, into)
amod(instruction, tactical)
cc(operating, and)
conj(tactical, operating)
obl(translate, instruction)
punct(need, .)
csubj(invalid, approach)
det(problem, this)
obj(approach, problem)
case(basis, on)
det(basis, a)
amod(basis, statistical)
obl(approach, basis)
cop(invalid, be)
root(ROOT, invalid)
punct(invalid, ,)
mark(have, because)
det(opponent, the)
nsubj(have, opponent)
advcl(invalid, have)
det(source, the)
amod(source, same)
obj(have, source)
amod(source, available)
cc(encounter, and)
aux(encounter, will)
aux:pass(encounter, be)
conj(have, encounter)
advmod(condition, not)
case(condition, under)
amod(condition, average)
obl(encounter, condition)
punct(advantageous, ,)
cc(advantageous, but)
case(condition, under)
det(condition, the)
conj(condition, condition)
advmod(advantageous, most)
amod(condition, advantageous)
case(he, to)
obl(advantageous, he)
punct(invalid, .)
advmod(have, therefore)
punct(have, ,)
det(commander, the)
case(scene, on)
punct(scene, -)
det(scene, the)
punct(scene, -)
compound(commander, scene)
nsubj(have, commander)
aux(have, must)
root(ROOT, have)
amod(instruction, detailed)
compound(instruction, operating)
obj(have, instruction)
case(measurement, base)
case(measurement, on)
obl(have, measurement)
case(condition, of)
nmod(measurement, condition)
punct(measurement, ,)
case(area, in)
det(area, the)
nmod(measurement, area)
punct(have, ,)
case(time, at)
det(time, the)
obl(have, time)
case(encounter, of)
nmod(time, encounter)
punct(have, .)
det(capability, all)
nsubj:pass(use, capability)
aux(use, must)
aux:pass(use, be)
root(ROOT, use)
case(advantage, to)
amod(advantage, maximum)
obl(use, advantage)
advmod(use, then)
punct(Temperature, .)
parataxis(use, Temperature)
punct(wind, ,)
conj(Temperature, wind)
punct(content, ,)
compound(content, oxygen)
conj(Temperature, content)
punct(depth, ,)
conj(Temperature, depth)
punct(character, ,)
amod(character, bottom)
conj(Temperature, character)
punct(life, ,)
cc(life, and)
compound(life, animal)
conj(Temperature, life)
cop(variable, be)
det(variable, the)
amod(variable, chief)
amod(variable, environmental)
conj(Temperature, variable)
punct(use, .)
expl(be, there)
aux(be, may)
root(ROOT, be)
nsubj(be, other)
punct(be, .)
nsubj:pass(measure, Variations)
case(velocity, in)
compound(velocity, sound)
nmod(Variations, velocity)
aux(measure, should)
aux:pass(measure, be)
root(ROOT, measure)
cc(temperature, rather)
fixed(rather, than)
obl(measure, temperature)
punct(measure, ,)
mark(encompass, because)
nsubj:pass(encompass, more)
case(variable, of)
det(variable, the)
obl(more, variable)
aux(encompass, would)
aux:pass(encompass, be)
advcl(measure, encompass)
punct(measure, .)
det(variation, these)
nsubj:pass(measure, variation)
aux(measure, must)
advmod(measure, eventually)
aux:pass(measure, be)
root(ROOT, measure)
advmod(measure, horizontally)
advmod(vertically, as)
fixed(as, well)
fixed(as, as)
advmod(measure, vertically)
punct(measure, .)
nsubj(encourage, Progress)
mark(predict, in)
acl(Progress, predict)
compound(condition, water)
obj(predict, condition)
aux(encourage, be)
root(ROOT, encourage)
punct(available, ,)
cc(available, but)
amod(guidance, little)
nsubj(available, guidance)
cop(available, be)
conj(encourage, available)
case(man, to)
det(man, the)
obl(available, man)
case(sea, at)
nmod(man, sea)
case(use, on)
det(use, the)
obl(available, use)
case(information, of)
amod(information, such)
nmod(use, information)
punct(encourage, . )
det(effort, a)
amod(effort, concurrent)
nsubj:pass(need, effort)
aux:pass(need, be)
root(ROOT, need)
mark(make, to)
xcomp(need, make)
amod(data, oceanographic)
obj(make, data)
xcomp(make, useful)
case(spot, on)
det(spot, the)
obl(useful, spot)
punct(need, .)
nmod:poss(warfare, mine)
nsubj(have, warfare)
aux(direct, have)
case(past, in)
det(past, the)
obl(have, past)
aux:pass(direct, be)
root(ROOT, direct)
case(target, against)
compound(target, surface)
obl(direct, target)
punct(direct, .)
case(nature, by)
nmod:poss(nature, its)
obl(advantage, nature)
nsubj(advantage, it)
aux(advantage, have)
advmod(advantage, always)
cop(advantage, be)
case(advantage, of)
amod(advantage, great)
amod(advantage, psychological)
root(ROOT, advantage)
cc(require, and)
amod(effort, small)
nsubj(require, effort)
aux(require, have)
conj(advantage, require)
advmod(greater, considerably)
amod(effort, greater)
compound(effort, counter)
punct(effort, -)
obj(require, effort)
punct(advantage, .)
nsubj(oriented, Mines)
aux(oriented, be)
cop(oriented, be)
advmod(oriented, increasingly)
root(ROOT, oriented)
case(target, against)
compound(target, submarine)
obl(oriented, target)
punct(oriented, .)
nsubj:pass(consider, they)
aux:pass(consider, be)
advmod(consider, still)
root(ROOT, consider)
mark(use, to)
cop(use, be)
case(use, for)
xcomp(consider, use)
case(water, in)
amod(water, restrict)
obl(use, water)
punct(consider, ,)
advmod(come, however)
punct(come, ,)
cc(come, and)
nsubj(come, target)
aux(come, must)
conj(consider, come)
case(yard, within)
det(yard, a)
amod(yard, few)
obl(come, yard)
case(they, of)
nmod(yard, they)
punct(consider, .)
nsubj(need, Mines)
root(ROOT, need)
mark(recognize, to)
aux:pass(recognize, be)
xcomp(need, recognize)
case(element, as)
det(element, a)
amod(element, major)
obl(recognize, element)
case(employment, in)
amod(employment, anti-submarine)
compound(employment, warfare)
nmod(element, employment)
punct(extend, ,)
acl(element, extend)
case(water, to)
amod(water, deep)
obl(extend, water)
punct(have, ,)
cc(have, and)
conj(recognize, have)
nmod:poss(area, they)
amod(area, effective)
obj(have, area)
case(unit, per)
nmod(area, unit)
acl(area, increase)
punct(need, .)
nsubj:pass(use, Mines)
aux(use, can)
aux:pass(use, be)
root(ROOT, use)
mark(deny, to)
xcomp(use, deny)
obj(deny, access)
case(area, to)
amod(area, great)
nmod(access, area)
punct(use, ;)
punct(use, ;)
nsubj(difficult, they)
cop(difficult, be)
parataxis(use, difficult)
mark(counter, to)
xcomp(difficult, counter)
punct(counter, ,)
compound(little, cost)
obj(counter, little)
mark(maintain, to)
advcl(counter, maintain)
mark(require, until)
advcl(maintain, require)
punct(put, ,)
cc(put, and)
aux(put, can)
aux:pass(put, be)
conj(difficult, put)
case(place, into)
obl(put, place)
advmod(put, quickly)
punct(use, . )
det(feature, a)
advmod(attractive, most)
amod(feature, attractive)
nsubj(be, feature)
root(ROOT, be)
mark(combine, that)
nsubj:pass(combine, detection)
cc(attack, and)
conj(detection, attack)
aux:pass(combine, be)
ccomp(be, combine)
case(package, in)
det(package, a)
amod(package, single)
obl(combine, package)
punct(be, .)
amod(employment, effective)
nsubj(reduce, employment)
aux(reduce, will)
root(ROOT, reduce)
compound(requirement, force)
obj(reduce, requirement)
punct(reduce, .)
case(example, for)
obl(remove, example)
punct(remove, ,)
amod(barrier, effective)
nmod:poss(barrier, mine)
nsubj(remove, barrier)
case(Florida, from)
nmod(barrier, Florida)
case(Cuba, to)
nmod(barrier, Cuba)
cc(Channel, and)
case(Channel, across)
det(Channel, the)
compound(Channel, Yucatan)
nmod(barrier, Channel)
case(Cuba, from)
nmod(Channel, Cuba)
case(Mexico, to)
nmod(Cuba, Mexico)
aux(remove, would)
root(ROOT, remove)
det(requirement, all)
obj(remove, requirement)
case(defense, for)
compound(defense, harbor)
nmod(requirement, defense)
punct(patrol, ,)
compound(patrol, inshore)
conj(defense, patrol)
punct(escort, ,)
compound(escort, convoy)
conj(defense, escort)
punct(control, ,)
compound(control, shipping)
conj(defense, control)
punct(defense, ,)
cc(defense, and)
conj(defense, mine)
conj(defense, defense)
case(gulf, for)
det(gulf, the)
amod(gulf, entire)
nmod(defense, gulf)
case(Mexico, of)
nmod(gulf, Mexico)
punct(remove, .)
advmod(extend, more)
amod(system, extend)
nsubj(free, system)
punct(system, ,)
acl(system, cover)
det(passage, all)
obj(cover, passage)
case(Caribbean, into)
det(Caribbean, the)
nmod(passage, Caribbean)
punct(free, ,)
aux(free, would)
root(ROOT, free)
det(Caribbean, the)
obj(free, Caribbean)
cc(gulf, and)
det(gulf, the)
conj(Caribbean, gulf)
case(Mexico, of)
nmod(gulf, Mexico)
case(requirement, from)
det(requirement, the)
advmod(list, previously)
amod(requirement, list)
obl(free, requirement)
punct(free, .)
nsubj(impossible, Systems)
acl(Systems, cover)
det(Gulf, the)
obj(cover, Gulf)
case(St., of)
nmod(Gulf, St.)
flat(St., Lawrence)
cc(coast, and)
advmod(coast, possibly)
det(coast, the)
amod(coast, entire)
conj(St., coast)
case(States, of)
det(States, the)
compound(States, United)
nmod(coast, States)
cop(impossible, be)
advmod(impossible, not)
root(ROOT, impossible)
punct(impossible, .)
mark(permit, such)
nmod:poss(system, mine)
compound(system, defense)
nsubj(permit, system)
aux(permit, could)
ccomp(impossible, permit)
obj(permit, concentration)
case(force, of)
amod(force, mobile)
nmod(concentration, force)
case(ocean, in)
det(ocean, the)
amod(ocean, open)
obl(permit, ocean)
case(increase, with)
amod(increase, consequent)
nmod(ocean, increase)
case(probability, in)
det(probability, the)
nmod(increase, probability)
case(success, of)
nmod(probability, success)
punct(impossible, .)
det(advantage, the)
nsubj(justify, advantage)
amod(advantage, inherent)
case(mine, in)
obl(inherent, mine)
obl(inherent, warfare)
root(ROOT, justify)
case(importance, as)
amod(importance, great)
det(importance, a)
obl(justify, importance)
case(element, for)
det(element, this)
nmod(importance, element)
mark(accord, as)
aux:pass(accord, be)
advcl(justify, accord)
obj(accord, any)
case(element, of)
det(element, the)
amod(element, other)
nmod(any, element)
punct(element, .)
amod(installation, fix)
nsubj:pass(advocate, installation)
aux:pass(advocate, be)
advmod(advocate, increasingly)
ccomp(justify, advocate)
mark(emerge, as)
det(problem, the)
nsubj(emerge, problem)
case(defense, of)
compound(defense, area)
nmod(problem, defense)
advcl(advocate, emerge)
punct(advocate, .)
det(proponent, the)
nsubj(scientific, proponent)
cop(scientific, be)
root(ROOT, scientific)
cc(technical, and)
amod(man, technical)
conj(scientific, man)
nsubj(exercise, who)
acl:relcl(man, exercise)
amod(influence, considerable)
obj(exercise, influence)
case(counterpart, on)
nmod:poss(counterpart, they)
amod(counterpart, military)
nmod(influence, counterpart)
punct(scientific, .)
nsubj(attractive, Systems)
nsubj(detect, which)
acl:relcl(Systems, detect)
obj(detect, submarine)
case(area, over)
amod(area, wide)
obl(detect, area)
cop(attractive, be)
root(ROOT, attractive)
punct(attractive, ,)
mark(alarm, although)
nsubj(alarm, they)
aux(alarm, can)
cop(alarm, be)
advmod(alarm, only)
punct(alarm, ``)
compound(alarm, burglar)
advcl(attractive, alarm)
punct(alarm, '')
punct(alarm, .)
compound(force, mobile)
nsubj:pass(require, force)
aux:pass(require, be)
parataxis(attractive, require)
mark(localize, to)
xcomp(require, localize)
cc(attack, and)
conj(localize, attack)
amod(target, detect)
obj(localize, target)
punct(localize, ,)
mark(capable, since)
det(system, the)
nsubj(capable, system)
cop(capable, be)
advmod(capable, not)
advcl(localize, capable)
mark(pinpoint, of)
advcl(capable, pinpoint)
det(target, a)
obj(pinpoint, target)
punct(expensive, .)
amod(system, such)
nsubj(expensive, system)
cop(expensive, be)
conj(capable, expensive)
cc(oriented, and)
cop(oriented, be)
conj(expensive, oriented)
advmod(oriented, geographically)
punct(attractive, .)
case(concept, in)
det(concept, a)
case(all, over)
punct(all, -)
det(concept, all)
compound(concept, asw)
obl(limit, concept)
punct(limit, ,)
nsubj:pass(limit, dependence)
case(effort, on)
cc(effort, and)
conj(dependence, effort)
acl(dependence, expend)
case(system, for)
amod(system, such)
obl(expend, system)
aux(limit, should)
aux:pass(limit, be)
root(ROOT, limit)
case(those, to)
obl(limit, those)
case(capability, with)
amod(capability, prove)
nmod(those, capability)
punct(limit, .)
det(installation, no)
amod(installation, general)
nsubj:pass(make, installation)
aux(make, should)
aux:pass(make, be)
root(ROOT, make)
mark(prove, until)
det(installation, a)
compound(installation, model)
nsubj:pass(prove, installation)
aux(prove, have)
aux:pass(prove, be)
advcl(make, prove)
cc(determine, and)
nmod:poss(capability, its)
amod(capability, maximum)
nsubj(determine, capability)
conj(prove, determine)
punct(make, .)
case(addition, in)
obl(weigh, addition)
punct(weigh, ,)
nsubj:pass(weigh, proposal)
case(installation, for)
amod(installation, fix)
nmod(proposal, installation)
aux(weigh, should)
aux:pass(weigh, be)
advmod(weigh, carefully)
root(ROOT, weigh)
case(system, against)
det(system, a)
compound(system, counterpart)
compound(system, mobile)
obl(weigh, system)
punct(system, .)
amod(installation, fix)
nsubj(lack, installation)
aux(lack, will)
advmod(lack, always)
parataxis(weigh, lack)
det(flexibility, the)
obj(lack, flexibility)
nsubj(inherent, that)
aux(inherent, should)
cop(inherent, be)
acl:relcl(flexibility, inherent)
case(system, in)
amod(system, naval)
obl(inherent, system)
punct(weigh, .)
det(submarine, the)
nsubj(become, submarine)
aux(become, have)
root(ROOT, become)
advmod(attractive, increasingly)
xcomp(become, attractive)
case(system, as)
det(system, a)
compound(weapon, antisubmarine)
compound(system, weapon)
obl(attractive, system)
punct(attractive, .)
nsubj(operate, it)
root(ROOT, operate)
case(environment, in)
nmod:poss(target, its)
nmod:poss(environment, target)
case(target, 's)
obl(operate, environment)
punct(share, ,)
cc(share, and)
det(advantage, any)
nsubj:pass(share, advantage)
acl(advantage, gain)
obl(gain, therefrom)
case(target, by)
det(target, the)
obl(gain, target)
aux:pass(share, be)
conj(operate, share)
case(attacker, by)
det(attacker, the)
obl(share, attacker)
punct(operate, .)
cc(danger, but)
det(submarine, the)
nsubj(weapon, submarine)
cop(weapon, be)
det(weapon, a)
root(ROOT, weapon)
case(ambush, of)
nmod(weapon, ambush)
cc(danger, and)
advmod(danger, therefore)
advmod(danger, always)
case(danger, in)
conj(weapon, danger)
mark(ambush, of)
aux:pass(ambush, be)
acl(danger, ambush)
punct(weapon, .)
nummod(metabolite, two)
nsubj:pass(incorporate, metabolite)
punct(metabolite, ()
appos(metabolite, 1)
punct(2, ,)
cc(2, and)
conj(1, 2)
punct(2, ))
punct(2, ))
case(acid, of)
amod(acid, p-aminobenzoic)
nmod(metabolite, acid)
punct(paba, ()
appos(acid, paba)
punct(paba, ))
nsubj(act, which)
acl:relcl(acid, act)
case(cofactor, as)
nsubj(act, cofactor)
case(hydroxylation, for)
det(hydroxylation, the)
nmod(cofactor, hydroxylation)
case(aniline, of)
nmod(hydroxylation, aniline)
case(bacteria, by)
compound(fast, acid)
punct(fast, -)
amod(bacteria, fast)
nsubj:pass(biosynthesize, bacteria)
aux:pass(biosynthesize, be)
acl:relcl(hydroxylation, biosynthesize)
case(Aj, from)
obl(biosynthesize, Aj)
punct(biosynthesize, .)
det(carbon, the)
nummod(carbon, 7)
nsubj:pass(incorporate, carbon)
case(paba, of)
nmod(carbon, paba)
aux:pass(incorporate, be)
root(ROOT, incorporate)
advmod(incorporate, directly)
case(metabolite, into)
obl(incorporate, metabolite)
nummod(metabolite, 2)
punct(incorporate, ()
punct(show, ()
mark(show, as)
advcl(incorporate, show)
case(Af, with)
cc:preconj(label, both)
obl:npmod(label, ring)
punct(label, -)
amod(Af, label)
cc(label, and)
compound(label, carboxy)
punct(label, -)
amod(Af, label)
obl(show, Af)
punct(Af, ))
punct(Af, .)
compound(five, Thirty)
punct(five, -)
nsubj(arise, five)
case(atom, of)
det(atom, the)
nummod(atom, 36)
compound(atom, carbon)
nmod(five, atom)
acl:relcl(Af, arise)
case(Aj, from)
obl(arise, Aj)
punct(arise, .)
det(carbon, all)
nummod(carbon, 28)
nsubj(arise, carbon)
case(metabolite, of)
nmod(carbon, metabolite)
nummod(metabolite, 1)
punct(product, ()
punct(product, ()
det(product, a)
appos(carbon, product)
case(hydrolysis, of)
amod(hydrolysis, mild)
compound(hydrolysis, acid)
nmod(product, hydrolysis)
case(2, of)
nummod(arise, 2)
punct(2, ))
acl:relcl(product, arise)
case(Aj, from)
obl(arise, Aj)
punct(Metabolite, .)
appos(Aj, Metabolite)
nummod(Metabolite, 1)
punct(Metabolite, ,)
acl(Metabolite, isolate)
case(medium, from)
det(medium, the)
obl(isolate, medium)
punct(show, ,)
advmod(show, however)
punct(show, ,)
conj(isolate, show)
det(activity, a)
amod(activity, lower)
amod(activity, specific)
obj(show, activity)
punct(activity, ,)
nsubj(indicate, which)
acl:relcl(activity, indicate)
amod(synthesis, endogenous)
obj(indicate, synthesis)
case(metabolite, of)
det(metabolite, this)
nmod(synthesis, metabolite)
punct(hydrolysis, .)
amod(hydrolysis, Vigorous)
compound(hydrolysis, acid)
appos(synthesis, hydrolysis)
case(metabolite, of)
nmod(hydrolysis, metabolite)
nummod(metabolite, 1)
punct(destroy, ,)
parataxis(hydrolysis, destroy)
det(activity, the)
amod(activity, biological)
obj(destroy, activity)
case(compound, of)
det(compound, the)
nmod(activity, compound)
cc(liberate, and)
conj(destroy, liberate)
nummod(amine, two)
compound(amine, aryl)
obj(liberate, amine)
punct(amine, .)
compound(a, Fragment)
nsubj:pass(obtain, a)
aux(obtain, have)
aux:pass(obtain, be)
parataxis(liberate, obtain)
case(form, in)
amod(form, crystalline)
obl(obtain, form)
case(salt, as)
det(salt, a)
amod(salt, dioxalate)
obl(obtain, salt)
cc(base, and)
amod(base, free)
conj(salt, base)
punct(indicate, .)
amod(evidence, preliminary)
nsubj(indicate, evidence)
advmod(indicate, tentatively)
conj(obtain, indicate)
mark(cleave, that)
det(molecule, the)
nsubj:pass(cleave, molecule)
punct(metabolite, ()
appos(molecule, metabolite)
nummod(metabolite, 1)
punct(metabolite, ))
punct(molecule, ))
aux:pass(cleave, be)
ccomp(indicate, cleave)
case(bond, at)
det(bond, a)
amod(bond, secondary)
compound(bond, amide)
obl(cleave, bond)
punct(indicate, . )
punct(N., ()
root(ROOT, N.)
flat(N., H.)
flat(N., Sloane)
punct(N., ;)
punct(N., ;)
amod(study, chemical)
nsubj:pass(pursue, study)
aux(pursue, be)
aux:pass(pursue, be)
parataxis(N., pursue)
case(cooperation, with)
det(cooperation, the)
obl(pursue, cooperation)
case(K.G., of)
nmod(cooperation, K.G.)
flat(K.G., untch)
punct(cooperation, .)
punct(cooperation, ))
obl(pursue, study)
case(esterase, on)
nmod(study, esterase)
punct(pursue, --)
nsubj:pass(continue, Research)
case(esterase, on)
nmod(Research, esterase)
case(sera, in)
amod(sera, mammalian)
nmod(esterase, sera)
aux:pass(continue, be)
root(ROOT, continue)
punct(continue, .)
nsubj(sensitivity, one)
case(finding, of)
det(finding, the)
advmod(interesting, most)
amod(finding, interesting)
nmod(one, finding)
cop(sensitivity, be)
det(sensitivity, the)
amod(sensitivity, extreme)
root(ROOT, sensitivity)
case(arylesterase, of)
compound(arylesterase, plasma)
nmod(sensitivity, arylesterase)
case(ion, to)
amod(ion, rare)
compound(ion, earth)
nmod(arylesterase, ion)
punct(sensitivity, .)
det(inhibition, the)
nsubj(effect, inhibition)
case(enzyme, of)
det(enzyme, the)
nmod(inhibition, enzyme)
case(concentration, by)
advmod(low, very)
amod(concentration, low)
nmod(inhibition, concentration)
case(ion, of)
compound(ion, lanthanum)
nmod(concentration, ion)
cop(effect, be)
advmod(effect, probably)
det(effect, the)
amod(effect, strongest)
amod(effect, know)
amod(effect, biological)
root(ROOT, effect)
case(salt, of)
amod(salt, rare)
compound(salt, earth)
nmod(effect, salt)
punct(effect, .)
amod(ion, various)
compound(ion, metal)
nsubj:pass(find, ion)
aux(find, have)
aux:pass(find, be)
root(ROOT, find)
mark(protect, to)
advcl(find, protect)
compound(arylesterase, plasma)
obj(protect, arylesterase)
case(inactivation, against)
obl(protect, inactivation)
case(urea, by)
obl(protect, urea)
cc(guanidine, and)
conj(urea, guanidine)
punct(find, .)
det(effect, the)
nsubj(related, effect)
aux(related, can)
cop(related, be)
root(ROOT, related)
case(structure, to)
det(structure, the)
obl(related, structure)
case(enzyme, of)
det(enzyme, this)
nmod(structure, enzyme)
punct(related, .)
det(non-identity, the)
nsubj:pass(establish, non-identity)
case(serum, of)
nmod(non-identity, serum)
cc(arylesterase, and)
amod(arylesterase, red)
compound(cell, blood)
compound(arylesterase, cell)
conj(serum, arylesterase)
aux:pass(establish, be)
advmod(establish, also)
root(ROOT, establish)
punct(establish, . )
advmod(study, furthermore)
punct(study, ,)
det(hydrolysis, the)
nsubj:pass(study, hydrolysis)
case(paraoxon, of)
nmod(hydrolysis, paraoxon)
aux:pass(study, be)
root(ROOT, study)
case(sera, in)
amod(sera, mammalian)
obl(study, sera)
punct(find, ,)
cc(find, and)
nsubj:pass(find, it)
aux:pass(find, be)
conj(study, find)
mark(hydrolyze, that)
nsubj:pass(hydrolyze, it)
aux:pass(hydrolyze, be)
ccomp(find, hydrolyze)
case(albumin, by)
obl(hydrolyze, albumin)
punct(factor, ()
cc(factor, or)
det(factor, a)
conj(albumin, factor)
acl(factor, attach)
case(it, to)
obl(attach, it)
punct(factor, ))
case(addition, in)
obl(hydrolyze, addition)
case(arylesterase, to)
nmod(addition, arylesterase)
punct(distinguish, .)
amod(inhibitor, selective)
nsubj(distinguish, inhibitor)
aux(distinguish, can)
ccomp(find, distinguish)
det(activity, the)
nummod(activity, two)
obj(distinguish, activity)
punct(study, .)
nsubj:pass(carry, investigation)
case(acceleration, on)
det(acceleration, the)
nmod(investigation, acceleration)
case(cholinesterase, of)
amod(cholinesterase, human)
compound(cholinesterase, plasma)
nmod(acceleration, cholinesterase)
aux:pass(carry, be)
root(ROOT, carry)
advmod(carry, further)
punct(carry, . )
punct(E., ()
root(ROOT, E.)
flat(E., G.)
flat(E., Erdos)
punct(E., ,)
flat(E., L.)
flat(E., E.)
flat(E., bogg)
punct(E., ,)
conj(E., C.)
flat(C., D.)
flat(C., Mackey)
punct(E., ))
amod(study, biophysical)
list(E., study)
case(protein, on)
amod(protein, modify)
amod(protein, fibrous)
nmod(study, protein)
punct(study, --)
obl:npmod(microscopical, Electron)
punct(microscopical, -)
amod(method, microscopical)
cc(chemical, and)
amod(chemical, physical)
punct(chemical, -)
amod(method, chemical)
nsubj:pass(use, method)
aux:pass(use, be)
root(ROOT, use)
mark(demonstrate, to)
advcl(use, demonstrate)
det(renaturation, the)
obj(demonstrate, renaturation)
case(collage, of)
obl:npmod(denature, heat)
punct(denature, -)
amod(collage, denature)
nmod(renaturation, collage)
cc(ribonucleic, and)
conj(collage, ribonucleic)
nmod(renaturation, acid)
punct(use, . )
punct(devise, ()
nsubj:pass(devise, R.)
flat(R., V.)
flat(R., Rice)
punct(R., ))
det(method, a)
nsubj:pass(devise, method)
aux:pass(devise, be)
root(ROOT, devise)
mark(extract, for)
advcl(devise, extract)
cc(purify, and)
conj(extract, purify)
amod(collage, soluble)
compound(collage, earthworm)
obj(extract, collage)
punct(EWC, ()
appos(collage, EWC)
punct(EWC, ))
punct(devise, .)
nsubj:pass(observe, it)
aux:pass(observe, be)
root(ROOT, observe)
mark(diameter, that)
compound(macromolecule, EWC)
nsubj(diameter, macromolecule)
cop(diameter, be)
det(diameter, the)
amod(diameter, same)
ccomp(observe, diameter)
punct(a., ()
nummod(a., 15)
appos(diameter, a.)
punct(a., ))
cc(longer, but)
advmod(longer, much)
conj(diameter, longer)
punct(up, ()
advmod(longer, up)
case(micron, to)
amod(micron, several)
obl(up, micron)
punct(up, ))
case(tropocollagen, than)
compound(tropocollagen, vertebrate)
obl(up, tropocollagen)
punct(observe, .)
det(collage, this)
amod(collage, unusual)
nsubj:pass(show, collage)
advmod(show, also)
aux:pass(show, be)
root(ROOT, show)
mark(undergo, to)
xcomp(show, undergo)
det(transformation, a)
amod(transformation, reversible)
amod(phase, thermal)
compound(transformation, phase)
obj(undergo, transformation)
punct(show, . )
punct(R., ()
root(ROOT, R.)
flat(R., V.)
flat(R., Rice)
punct(R., ,)
flat(R., M.)
flat(M., D.)
flat(R., maser)
punct(R., ))
appos(R., study)
case(peptide, on)
nmod(study, peptide)
cc(peptidase, and)
conj(peptide, peptidase)
punct(study, --)
det(investigation, this)
nsubj(involve, investigation)
root(ROOT, involve)
amod(aspect, several)
obj(involve, aspect)
punct(involve, .)
compound(Z, Substance)
nsubj:pass(purify, Z)
punct(Z, ,)
det(peptide, a)
amod(peptide, active)
amod(peptide, urinary)
appos(Z, peptide)
punct(purify, ,)
aux:pass(purify, be)
root(ROOT, purify)
case(extraction, by)
obl(purify, extraction)
case(solvent, in)
amod(solvent, organic)
nmod(extraction, solvent)
cc(chromatography, and)
amod(chromatography, repeat)
compound(chromatography, column)
conj(solvent, chromatography)
punct(purify, ;)
punct(purify, ;)
amod(voltage, high)
punct(voltage, -)
compound(electrophoresis, voltage)
compound(chromatography, electrophoresis)
cc(paper, and)
conj(electrophoresis, paper)
nsubj:pass(use, chromatography)
aux:pass(use, be)
parataxis(purify, use)
case(study, in)
amod(study, preliminary)
amod(study, structural)
obl(use, study)
punct(effect, ;)
punct(effect, ;)
amod(effect, pharmacological)
nsubj:pass(use, effect)
case(vitro, in)
nmod(effect, vitro)
case(organ, on)
amod(organ, isolate)
amod(organ, survive)
nmod(vitro, organ)
cc(vivo, and)
case(vivo, in)
conj(organ, vivo)
case(pressure, on)
compound(pressure, blood)
nmod(vivo, pressure)
aux:pass(assay, be)
acl:relcl(organ, assay)
punct(assay, ;)
punct(assay, ;)
amod(equipment, special)
nsubj:pass(assay, equipment)
acl(equipment, require)
mark(register, for)
advcl(require, register)
obj(register, respiration)
cc(recording, and)
mark(recording, for)
conj(register, recording)
det(contraction, the)
obj(recording, contraction)
case(muscle, of)
amod(muscle, smooth)
nmod(contraction, muscle)
case(condition, under)
amod(condition, various)
nmod(muscle, condition)
aux:pass(develop, be)
advcl(recording, develop)
case(section, by)
det(section, the)
compound(section, instrument)
obl(develop, section)
punct(Victor, ()
appos(section, Victor)
flat(Victor, Jackman)
punct(Victor, ,)
conj(Victor, W.)
flat(Victor, C.)
flat(Victor, Barnes)
punct(J., ,)
conj(Victor, J.)
flat(J., F.)
flat(J., reiss)
punct(Victor, ))
punct(Victor, ;)
punct(section, ;)
cc(enzyme, and)
conj(Victor, enzyme)
nsubj(terminate, which)
acl:relcl(enzyme, terminate)
det(action, the)
obj(terminate, action)
case(peptide, of)
nmod(action, peptide)
case(bradykinin, such)
fixed(such, as)
nmod(peptide, bradykinin)
cc(Z, and)
advmod(Z, perhaps)
compound(Z, Substance)
conj(bradykinin, Z)
aux:pass(study, be)
conj(terminate, study)
punct(purify, .)
nsubj(progress, experiment)
cop(progress, be)
case(progress, in)
root(ROOT, progress)
mark(develop, to)
acl(progress, develop)
compound(technique, ultraviolet)
amod(technique, spectrophotometric)
obj(develop, technique)
mark(assay, for)
acl(technique, assay)
det(enzyme, these)
obj(assay, enzyme)
cc(study, and)
mark(study, for)
conj(assay, study)
nmod:poss(sensitivity, they)
obj(study, sensitivity)
case(ion, to)
compound(ion, metal)
nmod(sensitivity, ion)
punct(progress, . )
punct(E., ()
root(ROOT, E.)
flat(E., G.)
flat(E., Erdos)
punct(C., ,)
conj(E., C.)
flat(C., D.)
flat(E., Mackey)
punct(A., ,)
conj(E., A.)
flat(A., G.)
flat(A., Renfrew)
punct(W., ,)
conj(E., W.)
flat(W., B.)
flat(W., sever)
punct(E., ,)
conj(E., E.)
flat(E., M.)
flat(E., Sloane)
punct(E., ))
compound(protein, seed)
list(E., protein)
punct(protein, --)
case(study, in)
det(study, a)
amod(study, physiochemical)
obl(investigate, study)
case(protein, of)
compound(protein, seed)
nmod(study, protein)
punct(investigate, ,)
det(globulin, the)
nsubj:pass(investigate, globulin)
case(nut, of)
det(nut, the)
compound(nut, Brazil)
nmod(globulin, nut)
aux(investigate, have)
aux:pass(investigate, be)
root(ROOT, investigate)
punct(investigate, .)
case(addition, in)
obl(observe, addition)
case(globulin, to)
det(globulin, the)
amod(globulin, know)
amod(globulin, principal)
nmod(addition, globulin)
punct(excelsin, ,)
conj(globulin, excelsin)
punct(component, ,)
nummod(component, three)
amod(component, other)
advmod(distinct, ultracentrifugally)
amod(component, distinct)
conj(globulin, component)
aux(observe, have)
aux:pass(observe, be)
root(ROOT, observe)
punct(observe, . )
det(protein, a)
obl:npmod(soluble, water)
punct(soluble, -)
amod(protein, soluble)
nsubj:pass(find, protein)
case(weight, of)
det:predet(weight, quite)
amod(weight, low)
amod(weight, molecular)
nmod(protein, weight)
punct(ca., ()
appos(weight, ca.)
nummod(ca., 10,000)
punct(ca., ))
aux(find, have)
advmod(find, also)
aux:pass(find, be)
root(ROOT, find)
case(system, in)
det(system, this)
obl(find, system)
cc(characterize, and)
advmod(characterize, partly)
conj(find, characterize)
punct(find, . )
punct(E., ()
root(ROOT, E.)
flat(E., F.)
flat(E., Casassa)
punct(H., ,)
flat(E., H.)
flat(H., J.)
flat(H., Notarius)
punct(E., ))
amod(mechanic, continuum)
list(E., mechanic)
cc(theory, and)
compound(theory, viscoelasticity)
list(E., theory)
case(fluid, of)
amod(fluid, non-newtonian)
nmod(theory, fluid)
punct(E., --)
case(basis, on)
det(basis, the)
obl(possible, basis)
case(assumption, of)
det(assumption, a)
compound(assumption, differentiability)
nmod(basis, assumption)
case(space, in)
compound(space, function)
nmod(assumption, space)
punct(possible, ,)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(prove, to)
csubj(possible, prove)
mark(valid, that)
punct(valid, ,)
case(material, for)
obl(valid, material)
acl(material, have)
det(property, the)
obj(have, property)
obj(give, that)
det(stress, the)
nsubj:pass(give, stress)
aux:pass(give, be)
acl:relcl(property, give)
case(functional, by)
det(functional, a)
obl(give, functional)
case(history, of)
det(history, the)
nmod(functional, history)
case(gradient, of)
det(gradient, the)
compound(gradient, deformation)
nmod(history, gradient)
punct(valid, ,)
det(theory, the)
amod(theory, classical)
nsubj(valid, theory)
case(viscoelasticity, of)
amod(viscoelasticity, infinitesimal)
nmod(theory, viscoelasticity)
cop(valid, be)
ccomp(prove, valid)
mark(infinitesimal, when)
det(deformation, the)
nsubj(infinitesimal, deformation)
aux(infinitesimal, have)
cop(infinitesimal, be)
advcl(valid, infinitesimal)
case(time, for)
det(time, all)
obl(infinitesimal, time)
case(past, in)
det(past, the)
obl(infinitesimal, past)
punct(possible, .)
mark(strengthen, by)
advcl(possible, strengthen)
det(assumption, the)
compound(assumption, differentiability)
obj(strengthen, assumption)
punct(possible, ,)
expl(possible, it)
aux(possible, have)
cop(possible, be)
root(ROOT, possible)
mark(derive, to)
csubj(possible, derive)
amod(theory, second)
cc(higher, and)
conj(second, higher)
compound(theory, order)
obj(derive, theory)
case(viscoelasticity, of)
nmod(theory, viscoelasticity)
punct(possible, .)
case(theory, in)
det(theory, the)
amod(order, second)
punct(order, -)
compound(theory, order)
obl(calculate, theory)
punct(calculate, ,)
nsubj:pass(calculate, one)
case(difference, of)
det(difference, the)
amod(difference, normal)
compound(difference, stress)
nmod(one, difference)
aux(calculate, can)
aux:pass(calculate, be)
root(ROOT, calculate)
case(function, from)
det(function, the)
amod(order, first)
punct(order, -)
compound(function, order)
compound(relaxation, stress)
compound(function, relaxation)
obl(calculate, function)
punct(calculate, . )
punct(B., ()
root(ROOT, B.)
flat(B., D.)
flat(B., Coleman)
case(Walter, with)
nmod(B., Walter)
flat(Walter, noll)
punct(Walter, ,)
list(Walter, Department)
case(Mathematics, of)
nmod(Department, Mathematics)
punct(Institute, ,)
compound(Institute, Carnegie)
list(Walter, Institute)
case(technology, of)
nmod(Institute, technology)
punct(Institute, ))
amod(measurement, viscoelastic)
list(B., measurement)
punct(B., --)
det(series, a)
amod(series, extensive)
nsubj:pass(make, series)
case(measurement, of)
nmod(series, measurement)
aux:pass(make, be)
root(ROOT, make)
case(polyethylene, on)
det(polyethylene, a)
amod(density, high)
punct(density, -)
compound(polyethylene, density)
obl(make, polyethylene)
case(instrument, in)
det(instrument, a)
compound(instrument, torsion)
compound(instrument, pendulum)
nmod(polyethylene, instrument)
acl(instrument, use)
amod(oscillation, force)
amod(oscillation, sinusoidal)
obj(use, oscillation)
punct(vibration, ,)
amod(vibration, free)
conj(oscillation, vibration)
punct(measurement, ,)
cc(measurement, and)
compound(measurement, creep)
conj(oscillation, measurement)
case(range, over)
det(range, the)
compound(range, temperature)
nmod(measurement, range)
case(Af, of)
nmod(range, Af)
case(c, to)
nummod(degree, 80)
punct(degree, -)
compound(c, degree)
punct(c, -)
nmod(range, c)
punct(make, .)
advmod(many, as)
nsubj:pass(cover, many)
case(decade, as)
nummod(decade, seven)
nmod(many, decade)
case(time, of)
det(time, the)
nmod(decade, time)
nsubj:pass(cover, scale)
aux:pass(cover, be)
advmod(cover, thus)
root(ROOT, cover)
advmod(cover, isothermally)
punct(cover, .)
det(equivalence, the)
amod(equivalence, simple)
compound(equivalence, time)
punct(time, -)
compound(equivalence, temperature)
nsubj(hold, equivalence)
amod(equivalence, valid)
case(system, for)
amod(system, many)
amod(system, amorphous)
obl(valid, system)
aux(hold, do)
advmod(hold, not)
root(ROOT, hold)
advmod(hold, here)
punct(hold, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
punct(possible, ,)
advmod(possible, however)
punct(possible, ,)
mark(decompose, to)
csubj(possible, decompose)
det(compliance, the)
obj(decompose, compliance)
case(sum, into)
det(sum, a)
obl(decompose, sum)
case(component, of)
det(component, a)
obl:npmod(independent, frequency)
punct(independent, -)
amod(component, independent)
nmod(sum, component)
cc(mechanism, and)
nummod(mechanism, two)
amod(mechanism, viscoelastic)
conj(component, mechanism)
punct(compatible, ,)
det(compatible, each)
amod(mechanism, compatible)
case(principle, with)
det(principle, the)
compound(superposition, Boltzmann)
compound(principle, superposition)
obl(compatible, principle)
cc(set, and)
case(set, with)
det(set, a)
amod(set, consistent)
conj(principle, set)
case(factor, of)
compound(temperature, time)
punct(equivalence, -)
compound(equivalence, temperature)
compound(factor, equivalence)
nmod(set, factor)
punct(possible, . )
punct(Hershel, ()
root(ROOT, Hershel)
flat(Hershel, Markovitz)
punct(D.J., ,)
conj(Hershel, D.J.)
flat(D.J., Plazek)
punct(Hershel, ,)
conj(Hershel, Haruo)
flat(Haruo, Nakayasu)
punct(Hershel, ))
compound(element, geochemistry)
compound(element, trace)
list(Hershel, element)
case(tektite, in)
nmod(element, tektite)
punct(meteorite, ,)
conj(tektite, meteorite)
punct(material, ,)
cc(material, and)
amod(material, related)
conj(tektite, material)
punct(Hershel, --)
det(result, the)
nsubj(show, result)
case(microanalysis, of)
nmod(result, microanalysis)
case(tektite, of)
nmod(microanalysis, tektite)
punct(glass, ()
amod(glass, natural)
appos(tektite, glass)
case(origin, of)
amod(origin, unknown)
nmod(glass, origin)
punct(glass, ))
case(gallium, for)
nmod(glass, gallium)
cc(germanium, and)
conj(gallium, germanium)
aux(show, have)
root(ROOT, show)
mark(produce, that)
det(glass, these)
nsubj:pass(produce, glass)
aux:pass(produce, be)
advmod(produce, probably)
ccomp(show, produce)
case(terrestrial, from)
obl(produce, terrestrial)
punct(likely, ()
cc(likely, or)
advmod(likely, less)
conj(terrestrial, likely)
case(lunar, from)
obl(likely, lunar)
punct(likely, ))
obl(produce, matter)
case(impact, by)
obl(produce, impact)
case(body, of)
det(body, a)
amod(body, celestial)
nmod(impact, body)
punct(show, .)
det(ratio, the)
compound(ratio, gallium)
cc(germanium, /)
compound(ratio, germanium)
nsubj(higher, ratio)
cop(higher, be)
root(ROOT, higher)
case(that, than)
obl(higher, that)
case(matter, for)
amod(matter, ordinary)
amod(matter, igneous)
punct(metamorphic, ,)
conj(igneous, metamorphic)
punct(sedimentary, ,)
cc(sedimentary, or)
conj(igneous, sedimentary)
obl(higher, matter)
case(result, as)
det(result, a)
nmod(matter, result)
case(volatilization, of)
amod(volatilization, selective)
nmod(result, volatilization)
case(component, of)
det(component, the)
nmod(volatilization, component)
case(tektite, of)
det(tektite, the)
nmod(component, tektite)
punct(volatile, .)
compound(oxide, Gallium)
nsubj(volatile, oxide)
cop(volatile, be)
advmod(volatile, less)
parataxis(higher, volatile)
case(silica, than)
obl(volatile, silica)
punct(constituent, ()
det(constituent, the)
amod(constituent, main)
appos(silica, constituent)
case(tektite, of)
nmod(constituent, tektite)
punct(constituent, ))
cc(oxide, and)
compound(oxide, germanium)
conj(constituent, oxide)
cop(volatile, be)
advmod(volatile, more)
conj(volatile, volatile)
punct(volatile, .)
nsubj(volatile, Australites)
punct(tektite, ()
appos(Australites, tektite)
case(Australia, from)
nmod(tektite, Australia)
punct(tektite, ))
parataxis(volatile, give)
det(appearance, the)
obj(give, appearance)
case(melting, of)
det(melting, a)
amod(melting, second)
nmod(appearance, melting)
punct(higher, .)
case(conformity, in)
obl(find, conformity)
case(conclusion, with)
det(conclusion, this)
nmod(conformity, conclusion)
det(content, a)
amod(content, higher)
compound(content, trace)
compound(content, gallium)
nsubj:pass(find, content)
aux:pass(find, be)
root(ROOT, find)
case(portion, in)
det(portion, the)
obl(find, portion)
punct(flange, ()
appos(portion, flange)
punct(flange, ))
nsubj(undergone, that)
aux(undergone, have)
acl:relcl(portion, undergone)
det(melting, a)
amod(melting, second)
obj(undergone, melting)
punct(find, .)
det(fraction, the)
compound(fraction, silicate)
nsubj(show, fraction)
case(meteorite, of)
amod(meteorite, stony)
nmod(fraction, meteorite)
root(ROOT, show)
compound(ratio, gallium)
cc(germanium, /)
compound(ratio, germanium)
obj(show, ratio)
amod(ratio, similar)
case(those, to)
obl(similar, those)
case(tektite, of)
nmod(those, tektite)
mark(undergone, because)
nsubj(undergone, they)
advmod(undergone, too)
aux(undergone, have)
advcl(show, undergone)
xcomp(undergone, melt)
case(point, at)
det(point, some)
obl(melt, point)
case(history, in)
nmod:poss(history, they)
nmod(point, history)
punct(show, .)
amod(glass, libyan)
compound(glass, desert)
compound(glass, silica)
punct(glass, -)
nsubj:pass(compose, glass)
punct(glass, ,)
det(glass, another)
amod(glass, natural)
appos(glass, glass)
punct(compose, ,)
aux:pass(compose, be)
root(ROOT, compose)
case(silica, of)
advmod(pure, nearly)
amod(silica, pure)
obl(compose, silica)
cc(have, and)
conj(compose, have)
det(content, the)
amod(content, same)
compound(content, trace)
compound(content, germanium)
obj(have, content)
case(sand, as)
nmod(content, sand)
case(area, in)
det(area, the)
nmod(sand, area)
punct(compose, .)
det(content, the)
compound(content, gallium)
nsubj:pass(enhance, content)
punct(enhance, ,)
advmod(enhance, however)
punct(enhance, ,)
aux(enhance, have)
aux:pass(enhance, be)
root(ROOT, enhance)
nummod(fold, five)
punct(fold, -)
obj(enhance, fold)
punct(enhance, .)
det(glass, this)
nsubj:pass(form, glass)
aux:pass(form, be)
advmod(form, probably)
root(ROOT, form)
case(sand, from)
amod(sand, libyan)
compound(sand, desert)
obl(form, sand)
case(comet, by)
nmod(sand, comet)
cc(impact, or)
amod(meteorite, stony)
punct(meteorite, -)
compound(impact, meteorite)
conj(comet, impact)
punct(meteorite, .)
compound(iron, Nickel)
punct(iron, -)
compound(meteorite, iron)
obl(form, meteorite)
case(energy, with)
amod(energy, sufficient)
amod(energy, kinetic)
nmod(meteorite, energy)
mark(produce, to)
acl(energy, produce)
amod(crater, large)
amod(crater, terrestrial)
compound(crater, explosion)
nsubj(melt, crater)
aux(melt, may)
advmod(melt, nevertheless)
ccomp(produce, melt)
advmod(quantity, only)
amod(quantity, small)
obj(melt, quantity)
case(material, of)
nmod(quantity, material)
punct(melt, .)
nsubj:pass(spend, most)
case(energy, of)
det(energy, the)
compound(energy, impact)
nmod(most, energy)
aux:pass(spend, be)
parataxis(melt, spend)
case(crush, in)
obl(spend, crush)
cc(fragmentation, and)
conj(crush, fragmentation)
punct(spend, .)
mark(follow, when)
amod(quench, rapid)
nsubj(follow, quench)
advcl(spend, follow)
obj(follow, melting)
punct(result, ,)
compound(glass, impact)
nsubj(result, glass)
aux(result, may)
advcl(follow, result)
punct(result, .)
nsubj(contain, these)
advmod(contain, always)
root(ROOT, contain)
amod(inclusion, metallic)
obj(contain, inclusion)
punct(contain, .)
compound(glass, Impact)
nsubj:pass(produce, glass)
advmod(contain, not)
acl(glass, contain)
amod(iron, elemental)
compound(iron, nickel)
punct(iron, -)
obj(contain, iron)
aux(produce, may)
aux(produce, have)
aux:pass(produce, be)
root(ROOT, produce)
case(meteorite, by)
amod(meteorite, stony)
obl(produce, meteorite)
cc(comet, or)
conj(meteorite, comet)
punct(produce, .)
det(meteorite, no)
nsubj:pass(recover, meteorite)
aux(recover, have)
advmod(recover, ever)
aux:pass(recover, be)
root(ROOT, recover)
case(crater, from)
compound(crater, paleoexplosion)
obl(recover, crater)
punct(produce, ,)
cc(produce, and)
amod(crater, recent)
nsubj:pass(produce, crater)
acl(crater, contain)
compound(glass, impact)
obj(contain, glass)
aux(produce, have)
advmod(produce, all)
aux:pass(produce, be)
conj(recover, produce)
case(meteorite, by)
amod(meteorite, metallic)
obl(produce, meteorite)
case(exception, with)
det(exception, the)
obl(produce, exception)
case(crater, of)
compound(crater, Aouelloul)
nmod(exception, crater)
punct(crater, ,)
list(crater, Adrar)
punct(crater, ,)
compound(desert, Western)
compound(desert, Sahara)
appos(crater, desert)
punct(recover, .)
det(crater, this)
nsubj(contain, crater)
root(ROOT, contain)
compound(glass, impact)
obj(contain, glass)
case(inclusion, with)
det(inclusion, no)
amod(inclusion, metallic)
nmod(glass, inclusion)
cc(recover, and)
det(material, no)
amod(material, meteoritic)
nsubj:pass(recover, material)
aux(recover, have)
aux:pass(recover, be)
conj(contain, recover)
punct(contain, . )
punct(accomplish, ()
nsubj:pass(accomplish, A.)
flat(A., J.)
flat(A., Cohen)
punct(A., ,)
appos(A., John)
flat(John, Anania)
punct(John, ))
amod(preparation, inorganic)
compound(preparation, chemistry)
appos(A., preparation)
case(compound, of)
det(compound, a)
compound(compound, coordination)
nmod(preparation, compound)
aux:pass(accomplish, be)
advmod(accomplish, often)
root(ROOT, accomplish)
case(method, by)
det(method, the)
amod(method, simple)
obl(accomplish, method)
mark(react, of)
acl(method, react)
det(salt, a)
compound(salt, metal)
obj(react, salt)
case(ligand, with)
det(ligand, a)
obl(react, ligand)
case(solvent, in)
det(solvent, a)
amod(solvent, suitable)
nmod(ligand, solvent)
case(alcohol, such)
fixed(such, as)
det(alcohol, a)
nmod(solvent, alcohol)
punct(accomplish, .)
mark(apply, by)
advcl(obtain, apply)
det(principle, this)
amod(principle, general)
obj(apply, principle)
punct(obtain, ,)
det(number, a)
amod(number, great)
nsubj:pass(obtain, number)
case(compound, of)
amod(compound, complex)
nmod(number, compound)
case(osmium, of)
nmod(compound, osmium)
punct(ruthenium, ,)
conj(osmium, ruthenium)
punct(iridium, ,)
conj(osmium, iridium)
punct(rhenium, ,)
cc(rhenium, and)
conj(osmium, rhenium)
punct(number, ,)
case(triphenylphosphine, with)
obl(obtain, triphenylphosphine)
punct(triphenylarsine, ,)
conj(triphenylphosphine, triphenylarsine)
punct(triphenylstibine, ,)
cc(triphenylstibine, and)
conj(triphenylphosphine, triphenylstibine)
aux(obtain, have)
aux:pass(obtain, be)
root(ROOT, obtain)
case(laboratory, in)
det(laboratory, this)
obl(obtain, laboratory)
case(year, during)
det(year, the)
amod(year, past)
amod(year, few)
obl(obtain, year)
punct(obtain, . )
punct(Lauri, ()
root(ROOT, Lauri)
flat(Lauri, Vaska)
punct(E., ,)
flat(Lauri, E.)
flat(E., M.)
flat(Lauri, Sloane)
punct(Lauri, ,)
conj(Lauri, J.)
flat(J., W.)
flat(Lauri, DiLuzio)
punct(Lauri, ))
case(absence, in)
det(absence, the)
obl(consider, absence)
case(evidence, of)
amod(evidence, direct)
nmod(absence, evidence)
case(contrary, to)
det(contrary, the)
nmod(evidence, contrary)
punct(consider, ,)
nsubj:pass(consider, decomposition)
case(alcohol, of)
compound(alcohol, solvent)
nmod(decomposition, alcohol)
cc(coordination, and)
conj(alcohol, coordination)
case(fragment, of)
nmod:poss(fragment, its)
nmod(coordination, fragment)
case(metal, to)
det(metal, the)
nmod(fragment, metal)
aux:pass(consider, be)
advmod(consider, not)
root(ROOT, consider)
punct(consider, ,)
case(assumption, follow)
det(assumption, the)
amod(assumption, above)
compound(accept, heretofore)
punct(accept, -)
amod(assumption, accept)
obl(consider, assumption)
case(chemistry, in)
amod(chemistry, preparative)
compound(chemistry, coordination)
nmod(assumption, chemistry)
punct(consider, .)
amod(work, recent)
nsubj(give, work)
case(radiocarbon, with)
nmod(work, radiocarbon)
cc(alcohol, and)
amod(alcohol, deuterate)
conj(radiocarbon, alcohol)
case(solvent, as)
nmod(alcohol, solvent)
punct(give, ,)
advmod(give, however)
punct(give, ,)
aux(give, have)
root(ROOT, give)
obj(give, evidence)
mark(form, that)
compound(hydrido, metal)
punct(hydrido, -)
compound(complex, hydrido)
cc(carbonyl, and)
conj(hydrido, carbonyl)
nsubj:pass(form, complex)
aux(form, may)
aux:pass(form, be)
advmod(form, readily)
acl(evidence, form)
case(reaction, by)
obl(form, reaction)
case(alcohol, with)
nmod(reaction, alcohol)
case(some, in)
obl(form, some)
case(system, of)
det(system, these)
nmod(some, system)
punct(give, .)
nsubj:pass(reformulate, some)
case(compound, of)
det(compound, the)
advmod(report, previously)
amod(compound, report)
nmod(some, compound)
aux(reformulate, have)
advmod(reformulate, thus)
aux:pass(reformulate, be)
root(ROOT, reformulate)
cc(discover, and)
det(series, a)
nsubj(discover, series)
case(hydrido, of)
amod(hydrido, new)
nmod(series, hydrido)
cc(compound, and)
compound(compound, carbonyl)
conj(hydrido, compound)
conj(reformulate, discover)
punct(discover, ,)
det(example, the)
amod(example, more)
amod(example, representative)
obj(discover, example)
cop(Af, be)
acl(example, Af)
punct(Af, ,)
conj(Af, Af)
punct(Af, ,)
conj(Af, Af)
punct(Af, ,)
conj(Af, Af)
cc(Af, and)
conj(Af, Af)
punct(Af, ()
conj(Af, Af)
punct(Af, ))
punct(reformulate, .)
det(complex, the)
compound(complex, coordination)
nsubj:pass(investigate, complex)
acl(complex, form)
case(metal, by)
compound(metal, transition)
obl(form, metal)
case(phosphine, with)
amod(phosphine, primary)
cc(secondary, and)
conj(primary, secondary)
obl(form, phosphine)
cc(arsine, and)
conj(phosphine, arsine)
aux(investigate, be)
aux:pass(investigate, be)
root(ROOT, investigate)
punct(R., ()
nsubj:pass(investigate, R.)
flat(R., G.)
flat(R., Hayter)
punct(R., ))
punct(R., .)
amod(interest, Particular)
nsubj:pass(direct, interest)
aux:pass(direct, be)
parataxis(investigate, direct)
case(condensation, towards)
det(condensation, the)
obl(direct, condensation)
case(ligand, of)
det(ligand, these)
nmod(condensation, ligand)
case(halide, with)
compound(halide, metal)
nmod(ligand, halide)
mark(form, to)
acl(ligand, form)
amod(phosphide, substitute)
obj(form, phosphide)
cc(complex, or)
compound(complex, arside)
conj(phosphide, complex)
punct(phosphide, .)
case(year, during)
det(year, the)
amod(year, past)
obl(yield, year)
punct(yield, ,)
det(ligand, these)
nsubj(yield, ligand)
aux(yield, have)
conj(investigate, yield)
det(complex, some)
amod(complex, unusual)
nummod(coordinate, five)
punct(coordinate, -)
compound(complex, coordinate)
obj(yield, complex)
case(nickel, of)
nmod(complex, nickel)
punct(2, ()
appos(complex, 2)
punct(2, ))
cc(complex, and)
det(complex, some)
amod(complex, interesting)
compound(complex, binuclear)
compound(bridge, phosphorus)
punct(bridge, -)
amod(complex, bridge)
conj(complex, complex)
case(palladium, of)
nmod(complex, palladium)
punct(2, ()
appos(complex, 2)
punct(2, ))
punct(see, ()
parataxis(2, see)
obj(see, figure)
punct(see, ))
punct(compound, ,)
cc(compound, as)
fixed(as, well)
fixed(as, as)
amod(compound, new)
conj(complex, compound)
case(type, of)
det(type, the)
advmod(know, well)
punct(know, -)
amod(type, know)
nmod(compound, type)
nummod(study, Af)
punct(Af, .)
det(structure, the)
nsubj:pass(study, structure)
punct(property, ,)
conj(structure, property)
punct(reaction, ,)
cc(reaction, and)
conj(structure, reaction)
case(compound, of)
det(compound, these)
nmod(reaction, compound)
aux(study, be)
aux:pass(study, be)
root(ROOT, study)
punct(study, .)
case(oxyhydroxide, in)
det(oxyhydroxide, another)
compound(oxyhydroxide, study)
obl:npmod(substitute, chromium)
punct(substitute, -)
amod(oxyhydroxide, substitute)
compound(oxyhydroxide, aluminum)
nsubj:pass(characterize, oxyhydroxide)
cc(species, and)
amod(species, related)
conj(oxyhydroxide, species)
punct(oxyhydroxide, ,)
acl(species, prepare)
advmod(prepare, homogeneously)
case(hydrolysis, by)
amod(temperature, high)
punct(temperature, -)
compound(hydrolysis, temperature)
obl(prepare, hydrolysis)
punct(characterize, ,)
aux(characterize, be)
aux:pass(characterize, be)
root(ROOT, characterize)
cc(investigate, and)
conj(characterize, investigate)
advmod(investigate, spectrally)
case(region, in)
det(region, the)
amod(region, ultraviolet)
obl(investigate, region)
case(view, with)
det(view, a)
nmod(region, view)
case(identification, to)
nmod(view, identification)
cc(estimation, and)
amod(estimation, semiquantitative)
conj(identification, estimation)
case(phase, of)
det(phase, the)
nmod(estimation, phase)
acl(phase, form)
case(condition, under)
amod(condition, varying)
amod(condition, preparative)
obl(form, condition)
punct(characterize, . )
punct(J., ()
root(ROOT, J.)
flat(J., A.)
flat(J., laswick)
punct(J., ,)
compound(heatwole, N.)
compound(heatwole, L.)
list(J., heatwole)
punct(heatwole, ))
list(J., structure)
cc(property, and)
conj(J., property)
case(elasticity, of)
compound(elasticity, macromolecule)
nmod(property, elasticity)
case(network, of)
amod(network, macromolecular)
nmod(elasticity, network)
punct(J., --)
det(theory, the)
nsubj:pass(develop, theory)
case(elasticity, of)
nmod(theory, elasticity)
case(network, of)
amod(network, Gaussian)
nmod(elasticity, network)
aux(develop, have)
aux:pass(develop, be)
root(ROOT, develop)
case(basis, on)
det(basis, a)
advmod(general, more)
amod(basis, general)
obl(develop, basis)
cc(formulate, and)
det(equation, the)
nsubj:pass(formulate, equation)
case(state, of)
nmod(variable, state)
amod(variable, relate)
nmod(equation, variable)
case(pressure, of)
nmod(variable, pressure)
punct(volume, ,)
conj(pressure, volume)
punct(temperature, ,)
conj(pressure, temperature)
punct(stress, ,)
conj(pressure, stress)
cc(strain, and)
conj(pressure, strain)
aux(formulate, have)
aux:pass(formulate, be)
advmod(formulate, precisely)
conj(develop, formulate)
punct(develop, .)
amod(elongation, simple)
nsubj:pass(treat, elongation)
aux(treat, have)
aux:pass(treat, be)
root(ROOT, treat)
case(detail, in)
obl(treat, detail)
punct(treat, .)
det(coefficient, the)
amod(coefficient, various)
compound(temperature, stress)
punct(temperature, -)
compound(coefficient, temperature)
nsubj:pass(interrelate, coefficient)
case(constancy, for)
nmod(coefficient, constancy)
case(volume, of)
nmod(constancy, volume)
cc(strain, and)
conj(volume, strain)
punct(constancy, ,)
conj(volume, constancy)
case(pressure, of)
nmod(constancy, pressure)
cc(strain, and)
conj(pressure, strain)
punct(constancy, ,)
cc(constancy, and)
nsubj:pass(interrelate, constancy)
case(pressure, of)
nmod(constancy, pressure)
cc(length, and)
conj(pressure, length)
aux(interrelate, have)
aux:pass(interrelate, be)
root(ROOT, interrelate)
punct(interrelate, .)
det(elongation, the)
compound(elongation, dilation)
amod(elongation, accompany)
nsubj:pass(relate, elongation)
cc(anisotropy, and)
det(anisotropy, the)
advmod(develop, simultaneously)
amod(anisotropy, develop)
conj(elongation, anisotropy)
case(compressibility, of)
nmod(anisotropy, compressibility)
aux(relate, have)
aux:pass(relate, be)
root(ROOT, relate)
case(elongation, to)
det(elongation, the)
obl(relate, elongation)
punct(relate, .)
case(continuation, in)
obl(seek, continuation)
case(study, of)
det(study, these)
amod(study, theoretical)
nmod(continuation, study)
punct(seek, ,)
det(elucidation, a)
advmod(precise, more)
amod(elucidation, precise)
nsubj:pass(seek, elucidation)
case(effect, of)
det(effect, the)
nmod(elucidation, effect)
case(imperfection, of)
nmod(effect, imperfection)
case(structure, in)
compound(structure, network)
nmod(imperfection, structure)
aux:pass(seek, be)
root(ROOT, seek)
punct(seek, . )
punct(P., ()
root(ROOT, P.)
flat(P., J.)
flat(P., Flory)
punct(P., ,)
flat(P., C.)
flat(P., A.)
flat(C., J.)
flat(P., hoeve)
punct(P., ))
compound(conformation, chain)
list(P., conformation)
case(chain, of)
amod(chain, polymeric)
nmod(conformation, chain)
punct(P., --)
amod(work, recent)
amod(work, theoretical)
nsubj:pass(extend, work)
mark(calculate, to)
acl(work, calculate)
det(dimension, the)
obj(calculate, dimension)
case(chain, of)
amod(chain, polymeric)
nmod(dimension, chain)
case(Volkenstein, by)
nmod(chain, Volkenstein)
cc(Lifson, and)
conj(Volkenstein, Lifson)
aux(extend, have)
aux:pass(extend, be)
root(ROOT, extend)
mark(include, to)
advcl(extend, include)
amod(type, more)
amod(type, general)
obj(include, type)
case(chain, of)
nmod(type, chain)
punct(extend, .)
det(distance, the)
compound(end, mean)
punct(mean, -)
nummod(end, square)
compound(distance, end)
punct(end, -)
case(end, to)
punct(end, -)
compound(distance, end)
nsubj:pass(calculate, distance)
case(chain, of)
det(chain, the)
compound(chain, polyisobutylene)
nmod(distance, chain)
aux(calculate, have)
aux:pass(calculate, be)
root(ROOT, calculate)
case(agreement, in)
amod(agreement, reasonable)
obl(calculate, agreement)
case(value, with)
nmod(agreement, value)
acl(value, deduce)
case(data, from)
compound(data, viscosity)
obl(deduce, data)
punct(calculate, .)
det(study, these)
nsubj:pass(extend, study)
aux(extend, be)
aux:pass(extend, be)
root(ROOT, extend)
case(polymer, to)
amod(polymer, different)
obl(extend, polymer)
mark(increase, to)
advcl(extend, increase)
nmod:poss(knowledge, we)
obj(increase, knowledge)
case(hindrance, about)
det(hindrance, the)
nmod(knowledge, hindrance)
mark(rotation, to)
acl(hindrance, rotation)
case(bond, around)
compound(bond, chain)
obl(rotation, bond)
punct(extend, . )
punct(C., ()
root(ROOT, C.)
flat(C., A.)
flat(C., J.)
flat(C., hoeve)
punct(A., ,)
conj(C., A.)
flat(A., A.)
flat(A., Blumberg)
punct(C., ))
list(C., crystallization)
case(polymer, in)
nmod(crystallization, polymer)
cc(copolymer, and)
conj(polymer, copolymer)
punct(crystallization, --)
det(crystallization, the)
root(ROOT, crystallization)
case(copolymer, of)
nmod(crystallization, copolymer)
acl(crystallization, comprising)
compound(unit, Af)
nsubj:pass(limit, unit)
acl(unit, intersperse)
case(percentage, with)
det(percentage, a)
amod(percentage, minor)
obl(intersperse, percentage)
case(Af, of)
nmod(percentage, Af)
aux:pass(limit, be)
root(ROOT, limit)
case(inability, by)
det(inability, the)
obl(limit, inability)
case(characteristic, of)
det(characteristic, the)
amod(characteristic, crystal)
amod(characteristic, lattice)
nmod(inability, characteristic)
case(former, of)
det(former, the)
nmod(characteristic, former)
mark(accommodate, to)
acl(former, accommodate)
det(group, the)
amod(group, bulky)
compound(group, side)
obj(accommodate, group)
case(latter, of)
det(latter, the)
nmod(group, latter)
punct(limit, .)
advmod(sequence, only)
amod(sequence, uninterrupted)
nsubj(eligible, sequence)
case(former, of)
det(former, the)
nmod(sequence, former)
cop(eligible, be)
root(ROOT, eligible)
case(formation, for)
obl(eligible, formation)
case(crystallite, of)
nmod(formation, crystallite)
punct(eligible, .)
nsubj(diminish, limitation)
case(length, on)
det(length, the)
nmod(limitation, length)
case(sequence, of)
det(sequence, these)
nmod(length, sequence)
root(ROOT, diminish)
det(stability, the)
obj(diminish, stability)
case(crystallite, of)
det(crystallite, the)
advmod(short, comparatively)
amod(crystallite, short)
nmod(stability, crystallite)
nsubj:pass(form, which)
aux(form, can)
aux:pass(form, be)
acl:relcl(crystallite, form)
punct(reflect, ,)
cc(reflect, and)
nsubj:pass(reflect, this)
aux:pass(reflect, be)
conj(diminish, reflect)
case(broaden, in)
det(broaden, a)
obl(reflect, broaden)
case(range, of)
det(range, the)
compound(range, melting)
nmod(broaden, range)
punct(diminish, . )
punct(Robert, ()
root(ROOT, Robert)
flat(Robert, Chiang)
punct(J., ,)
flat(Robert, J.)
flat(Robert, B.)
flat(Robert, Jackson)
punct(P., ,)
conj(Robert, P.)
flat(P., J.)
flat(Robert, Flory)
punct(Robert, ))
advmod(execute, carefully)
advcl(permit, execute)
advcl(permit, melt)
obj(melt, study)
case(system, on)
det(system, this)
nmod(study, system)
punct(M., ()
appos(system, M.)
flat(M., J.)
flat(M., Richardson)
punct(M., ))
root(ROOT, permit)
amod(estimation, quantitative)
obj(permit, estimation)
case(instability, of)
det(instability, the)
nmod(estimation, instability)
acl(instability, engendered)
case(length, by)
amod(length, reduce)
compound(length, crystallite)
obl(engendered, length)
punct(permit, .)
det(morphology, the)
amod(morphology, complex)
nsubj(dependent, morphology)
case(homopolymer, of)
amod(homopolymer, polycrystalline)
nmod(morphology, homopolymer)
cop(dependent, be)
advmod(dependent, necessarily)
root(ROOT, dependent)
case(factor, on)
det(factor, the)
amod(factor, same)
obl(dependent, factor)
punct(dependent, .)
advmod(offer, hence)
punct(offer, ,)
det(study, the)
amod(study, present)
nsubj(offer, study)
root(ROOT, offer)
det(basis, a)
amod(basis, possible)
obj(offer, basis)
case(interpretation, for)
nmod(basis, interpretation)
case(field, in)
det(field, the)
amod(field, latter)
nmod(interpretation, field)
punct(offer, .)
root(ROOT, contraction)
case(muscle, of)
nmod(contraction, muscle)
punct(contraction, --)
amod(muscle, glycerinated)
nsubj:pass(show, muscle)
punct(show, ,)
case(presence, in)
det(presence, the)
obl(show, presence)
case(agent, of)
det(agent, the)
amod(agent, physiological)
nmod(presence, agent)
punct(atp, ()
appos(agent, atp)
punct(atp, ))
amod(agent, responsible)
mark(deliver, for)
advcl(responsible, deliver)
obj(deliver, energy)
case(protein, to)
det(protein, the)
advmod(active, mechanochemically)
amod(protein, active)
obl(deliver, protein)
case(muscle, of)
nmod(protein, muscle)
punct(show, ,)
aux(show, have)
aux:pass(show, be)
root(ROOT, show)
mark(undergo, to)
xcomp(show, undergo)
det(contraction, a)
obj(undergo, contraction)
nsubj(sensitive, which)
cop(sensitive, be)
advmod(sensitive, highly)
acl:relcl(contraction, sensitive)
cc:preconj(temperature, both)
case(temperature, to)
obl(sensitive, temperature)
cc(composition, and)
case(composition, to)
compound(composition, solvent)
conj(temperature, composition)
case(mixture, in)
nmod(composition, mixture)
case(alcohol, of)
nmod(mixture, alcohol)
cc(water, and)
conj(alcohol, water)
punct(show, .)
nsubj(carry, experiment)
root(ROOT, carry)
compound:prt(carry, out)
case(period, over)
amod(period, long)
obl(carry, period)
case(time, of)
nmod(period, time)
mark(allow, in)
fixed(in, order)
mark(allow, to)
advcl(carry, allow)
obj(allow, establishment)
case(state, of)
det(state, a)
amod(state, steady)
nmod(establishment, state)
aux(show, have)
conj(carry, show)
mark(confine, that)
det(onset, the)
nsubj:pass(confine, onset)
case(contraction, of)
nmod(onset, contraction)
cc(completion, and)
nmod:poss(completion, its)
conj(contraction, completion)
aux:pass(confine, be)
ccomp(show, confine)
case(interval, to)
det(interval, a)
obl(confine, interval)
case(degree, of)
amod(degree, several)
nmod(interval, degree)
nmod(interval, Centigrade)
cc(range, and)
case(range, to)
det(range, a)
compound(range, concentration)
conj(confine, range)
case(cent, of)
advmod(cent, only)
amod(cent, several)
compound(cent, per)
nmod(range, cent)
punct(carry, .)
det(contraction, the)
nsubj(partake, contraction)
advmod(partake, therefore)
root(ROOT, partake)
case(character, of)
det(character, the)
obl(partake, character)
case(transition, of)
det(transition, a)
compound(transition, phase)
nmod(character, transition)
punct(partake, .)
mark(appear, while)
nsubj(appear, atp)
advcl(partake, appear)
mark(necessary, to)
cop(necessary, be)
xcomp(appear, necessary)
case(occurrence, for)
det(occurrence, the)
obl(necessary, occurrence)
case(contraction, of)
nmod(occurrence, contraction)
punct(presence, ,)
nmod:poss(presence, its)
nsubj(criterion, presence)
cc(hydrolysis, and)
amod(hydrolysis, enzymatic)
conj(presence, hydrolysis)
case(it, of)
nmod(hydrolysis, it)
case(myosin, by)
det(myosin, the)
compound(myosin, muscle)
compound(myosin, protein)
nmod(hydrolysis, myosin)
cop(criterion, be)
advmod(criterion, not)
det(criterion, the)
amod(criterion, only)
conj(partake, criterion)
case(contraction, for)
nmod(criterion, contraction)
punct(partake, . )
punct(C., ()
root(ROOT, C.)
flat(C., A.)
flat(C., J.)
flat(C., hoeve)
punct(C., ,)
flat(C., P.)
flat(P., J.)
flat(C., Flory)
punct(C., ))
list(C., anionic)
root(ROOT, Polymerization)
punct(Polymerization, --)
nsubj(synthesis, one)
case(aim, of)
det(aim, the)
amod(aim, principal)
nmod(one, aim)
case(technique, of)
compound(polymerization, anionic)
compound(technique, polymerization)
nmod(aim, technique)
cop(synthesis, be)
det(synthesis, the)
root(ROOT, synthesis)
case(polymer, of)
nmod(synthesis, polymer)
case(distribution, of)
advmod(narrow, extremely)
amod(distribution, narrow)
amod(distribution, molecular)
compound(distribution, weight)
nmod(polymer, distribution)
punct(synthesis, . )
det(process, a)
amod(process, simple)
nsubj:pass(develop, process)
case(preparation, for)
det(preparation, the)
nmod(process, preparation)
case(polystyrene, of)
advmod(monodisperse, nearly)
amod(polystyrene, monodisperse)
nmod(preparation, polystyrene)
case(weight, of)
amod(weight, predictable)
amod(weight, molecular)
nmod(polystyrene, weight)
aux(develop, have)
aux:pass(develop, be)
root(ROOT, develop)
punct(develop, .)
det(preparation, the)
nsubj(new, preparation)
case(product, of)
amod(product, such)
nmod(preparation, product)
cop(new, be)
advmod(new, not)
root(ROOT, new)
punct(command, ,)
cc(command, but)
det(system, the)
nsubj(command, system)
advmod(employ, heretofore)
acl(system, employ)
case(polymerization, in)
obl(employ, polymerization)
aux(command, have)
conj(new, command)
amod(skill, considerable)
amod(skill, experimental)
obj(command, skill)
cc(start, and)
conj(command, start)
obj(start, material)
case(purity, of)
det(purity, a)
amod(purity, high)
nmod(material, purity)
punct(new, .)
case(impurity, in)
det(impurity, the)
amod(impurity, new)
compound(impurity, process)
obl(render, impurity)
amod(impurity, present)
case(solvent, in)
det(solvent, the)
obl(present, solvent)
punct(benzene, ()
appos(solvent, benzene)
punct(benzene, ))
punct(monomer, ,)
det(monomer, the)
conj(solvent, monomer)
punct(system, ,)
cc(system, and)
case(system, in)
det(system, the)
compound(system, reaction)
conj(monomer, system)
nsubj(cause, which)
aux(cause, would)
acl:relcl(system, cause)
obj(cause, deactivation)
case(center, of)
compound(center, propagation)
nmod(deactivation, center)
punct(render, ,)
aux:pass(render, be)
root(ROOT, render)
xcomp(render, inactive)
case(polymerization, prior)
fixed(prior, to)
obl(render, polymerization)
case(addition, by)
amod(addition, gradual)
obl(render, addition)
case(initiator, of)
nmod(addition, initiator)
punct(mixture, ,)
det(mixture, a)
conj(addition, mixture)
case(lithium, of)
amod(lithium, butyl)
punct(lithium, -)
nmod(mixture, lithium)
cc(lithium, and)
amod(lithium, telomeric)
compound(lithium, styryl)
punct(lithium, -)
conj(lithium, lithium)
punct(mixture, ,)
case(low, at)
det(temperature, a)
compound(low, temperature)
amod(enough, low)
advmod(mixture, enough)
mark(suppress, to)
advcl(enough, suppress)
compound(growth, chain)
obj(suppress, growth)
punct(render, .)
case(completion, upon)
obl(add, completion)
case(step, of)
det(step, the)
compound(step, purge)
nmod(completion, step)
punct(add, ,)
amod(initiator, additional)
nsubj:pass(add, initiator)
amod(initiator, appropriate)
case(weight, for)
det(weight, the)
amod(weight, molecular)
obl(appropriate, weight)
case(sample, of)
det(sample, the)
nmod(weight, sample)
acl(sample, desire)
aux:pass(add, be)
root(ROOT, add)
punct(warm, ,)
cc(warm, and)
det(system, the)
nsubj:pass(warm, system)
aux:pass(warm, be)
advmod(warm, then)
conj(add, warm)
case(temperature, to)
det(temperature, the)
compound(temperature, polymerization)
obl(warm, temperature)
punct(temperature, ,)
case(which, at)
obl(allow, which)
det(reaction, the)
nsubj:pass(allow, reaction)
aux:pass(allow, be)
acl:relcl(temperature, allow)
mark(go, to)
xcomp(allow, go)
case(completion, to)
obl(go, completion)
punct(add, .)
det(predictability, the)
nsubj:pass(find, predictability)
case(weight, of)
det(weight, the)
amod(weight, molecular)
nmod(predictability, weight)
aux:pass(find, be)
root(ROOT, find)
mark(%, to)
cop(%, be)
case(%, within)
nummod(%, 10)
xcomp(find, %)
case(polymer, for)
det(polymer, the)
nmod(%, polymer)
acl(polymer, prepare)
punct(prepare, ,)
case(ratio, with)
compound(ratio, Af)
obl(prepare, ratio)
advmod(1.1, less)
fixed(less, than)
nmod(ratio, 1.1)
punct(find, .)
root(ROOT, contrary)
case(observation, to)
obl(contrary, observation)
case(ether, with)
nmod(observation, ether)
punct(change, ,)
det(change, no)
amod(change, apparent)
appos(ether, change)
case(reactivity, of)
det(reactivity, the)
nmod(change, reactivity)
case(end, of)
det(end, the)
compound(end, chain)
nmod(reactivity, end)
parataxis(contrary, take)
obj(take, place)
case(period, over)
amod(period, considerable)
obl(take, period)
case(time, of)
nmod(period, time)
case(benzene, in)
nmod(period, benzene)
case(solvent, as)
nmod(period, solvent)
punct(contrary, .)
root(ROOT, Organization)
punct(Organization, :)
case(measurement, in)
det(measurement, this)
compound(measurement, publication)
obl(use, measurement)
case(angles, of)
amod(angles, interfacial)
nmod(measurement, angles)
case(crystals, of)
nmod(angles, crystals)
aux:pass(use, be)
root(ROOT, use)
mark(classify, to)
xcomp(use, classify)
cc(identify, and)
conj(classify, identify)
amod(substance, chemical)
obj(classify, substance)
punct(use, . )
nsubj(about, T.)
flat(T., V.)
flat(T., Barker)
punct(T., ,)
nsubj(develop, who)
acl:relcl(T., develop)
det(system, the)
compound(angle, classification)
punct(angle, -)
compound(system, angle)
obj(develop, system)
punct(about, ,)
cop(about, be)
root(ROOT, about)
mark(begin, to)
xcomp(about, begin)
det(compilation, the)
amod(compilation, systematic)
obj(begin, compilation)
case(index, of)
det(index, the)
nmod(compilation, index)
mark(die, when)
nsubj(die, he)
advcl(begin, die)
case(1931, in)
obl(die, 1931)
punct(about, .)
det(work, the)
compound(work, compilation)
nsubj:pass(undertake, work)
aux:pass(undertake, be)
root(ROOT, undertake)
case(number, by)
det(number, a)
obl(undertake, number)
case(crystallographer, of)
amod(crystallographer, interested)
nmod(number, crystallographer)
case(Department, in)
det(Department, the)
nmod(crystallographer, Department)
case(mineralogy, of)
nmod(Department, mineralogy)
case(Museum, of)
det(Museum, the)
compound(Museum, University)
nmod(Department, Museum)
case(Oxford, at)
nmod(Museum, Oxford)
punct(undertake, .)
case(1948, since)
obl(Department, 1948)
det(headquarters, the)
compound(headquarters, working)
nsubj(Department, headquarters)
aux(Department, have)
cop(Department, be)
det(Department, the)
parataxis(undertake, Department)
case(Geology, of)
nmod(Department, Geology)
cc(mineralogy, and)
conj(Geology, mineralogy)
punct(Department, .)
amod(individual, Numerous)
amod(individual, cooperate)
conj(Department, individual)
case(Britain, in)
compound(Britain, Great)
nmod(individual, Britain)
punct(Holland, ,)
conj(Britain, Holland)
punct(States, ,)
det(States, the)
compound(States, United)
conj(Britain, States)
punct(contribute, ,)
cc(contribute, and)
nsubj(contribute, Belgium)
aux(contribute, have)
conj(individual, contribute)
advmod(contribute, editorially)
cc(make, or)
mark(make, by)
conj(contribute, make)
obj(make, calculation)
punct(undertake, .)
amod(interest, great)
root(ROOT, interest)
cc(help, and)
amod(help, practical)
conj(interest, help)
aux(give, have)
aux:pass(give, be)
parataxis(interest, give)
case(Committee, by)
det(Committee, the)
compound(Committee, Barker)
compound(Committee, index)
obl(give, Committee)
punct(Committee, .)
amod(help, Financial)
cc(material, and)
conj(Financial, material)
nsubj(come, help)
aux(come, have)
conj(give, come)
case(organization, from)
amod(organization, academic)
punct(governmental, ,)
conj(academic, governmental)
punct(industrial, ,)
cc(industrial, and)
conj(academic, industrial)
obl(come, organization)
case(England, in)
nmod(organization, England)
cc(Holland, and)
conj(England, Holland)
punct(editor, .)
appos(organization, editor)
case(volume, for)
nmod(editor, volume)
nummod(volume, 1)
punct(2, ,)
cc(2, and)
conj(M., 2)
punct(M., ,)
cop(M., be)
conj(editor, M.)
flat(M., W.)
flat(M., Porter)
cc(R., and)
det(R., the)
amod(R., late)
conj(M., R.)
flat(R., C.)
flat(R., Spiller)
punct(R., ,)
appos(R., both)
case(University, of)
compound(University, Oxford)
nmod(both, University)
punct(M., . )
det(volume, a)
amod(volume, third)
nsubj(remain, volume)
root(ROOT, remain)
mark(publish, to)
aux:pass(publish, be)
xcomp(remain, publish)
punct(remain, .)
root(ROOT, substance)
punct(substance, :)
appos(substance, Volume)
nummod(Volume, 1)
punct(Volume, ,)
conj(Volume, deal)
case(compound, with)
nummod(compound, 2991)
nmod(deal, compound)
acl(compound, belong)
case(system, to)
det(system, the)
amod(system, tetragonal)
punct(hexagonal, ,)
conj(tetragonal, hexagonal)
cc(trigonal, and)
conj(tetragonal, trigonal)
punct(orthorhombic, ,)
cc(orthorhombic, and)
conj(tetragonal, orthorhombic)
obl(belong, system)
punct(system, ;)
punct(system, ;)
cc(Volume, and)
conj(system, Volume)
nummod(Volume, 2)
punct(Volume, ,)
punct(substance, ,)
case(substance, with)
advmod(3500, about)
nummod(substance, 3500)
amod(substance, monoclinic)
nmod(Volume, substance)
punct(substance, .)
appos(substance, Volume)
nummod(Volume, 3)
punct(substance, ,)
punct(treat, ,)
case(preparation, in)
obl(treat, preparation)
punct(treat, ,)
aux(treat, will)
acl:relcl(substance, treat)
det(compound, the)
amod(compound, anorthic)
obj(treat, compound)
acl(compound, describe)
case(Krystallographie, in)
nmod:poss(Krystallographie, Groth)
case(Groth, 's)
compound(Krystallographie, Chemische)
obl(describe, Krystallographie)
punct(substance, .)
root(ROOT, property)
punct(property, :)
det(Barker, the)
nsubj:pass(base, Barker)
flat(Barker, system)
aux:pass(base, be)
appos(property, base)
case(use, on)
det(use, the)
obl(base, use)
case(number, of)
det(number, the)
amod(number, smallest)
nmod(use, number)
case(angles, of)
amod(angles, interfacial)
nmod(number, angles)
amod(angles, necessary)
case(purpose, for)
compound(purpose, index)
obl(necessary, purpose)
punct(property, .)
amod(morphological, other)
nsubj:pass(give, morphological)
punct(physical, ,)
conj(morphological, physical)
punct(value, ,)
cc(value, and)
amod(value, optical)
compound(value, property)
nsubj:pass(give, value)
aux:pass(give, be)
advmod(give, also)
root(ROOT, give)
punct(give, .)
root(ROOT, source)
case(data, of)
nmod(source, data)
punct(source, : )
det(index, the)
nsubj(treatment, index)
cop(treatment, be)
advmod(treatment, essentially)
det(treatment, a)
amod(treatment, new)
root(ROOT, treatment)
case(data, of)
advmod(compile, previously)
amod(data, compile)
amod(data, morphological)
nmod(treatment, data)
punct(treatment, .)
nsubj(Krystallographie, most)
case(data, of)
det(data, the)
nmod(most, data)
acl(data, use)
cop(Krystallographie, be)
case(Krystallographie, from)
nmod:poss(Krystallographie, Groth)
case(Groth, 's)
compound(Krystallographie, Chemische)
root(ROOT, Krystallographie)
punct(Krystallographie, .)
root(ROOT, criticality)
punct(criticality, :)
det(calculation, every)
nsubj:pass(make, calculation)
aux(make, have)
aux:pass(make, be)
appos(criticality, make)
advmod(make, independently)
case(worker, by)
nummod(worker, two)
obl(make, worker)
cc(check, and)
conj(worker, check)
case(one, by)
obl(check, one)
case(editor, of)
det(editor, the)
nmod(one, editor)
punct(criticality, .)
root(ROOT, use)
case(nomenclature, of)
nmod(use, nomenclature)
punct(use, ,)
conj(nomenclature, symbol)
punct(unit, ,)
conj(nomenclature, unit)
punct(use, ,)
amod(constant, physical)
parataxis(use, constant)
punct(use, :)
amod(symbolism, accept)
amod(symbolism, crystallographic)
nsubj:pass(use, symbolism)
aux(use, have)
aux:pass(use, be)
root(ROOT, use)
punct(use, ;)
punct(use, ;)
amod(symbol, other)
nsubj:pass(introduce, symbol)
amod(symbol, related)
case(index, to)
det(index, the)
obl(related, index)
advmod(introduce, necessarily)
aux(introduce, have)
aux:pass(introduce, be)
conj(use, introduce)
punct(use, .)
root(ROOT, currency)
punct(currency, :)
det(publication, this)
nsubj(cover, publication)
appos(currency, cover)
det(literature, the)
amod(literature, old)
obj(cover, literature)
punct(Groth, ()
appos(literature, Groth)
punct(Groth, ))
punct(currency, ;)
punct(currency, ;)
expl(be, there)
parataxis(cover, be)
det(mechanism, no)
nsubj(be, mechanism)
mark(keep, for)
acl(mechanism, keep)
det(volume, the)
obj(keep, volume)
case(date, up)
fixed(up, to)
obl(keep, date)
punct(Format, .)
obj(keep, Format)
punct(Format, :)
det(form, the)
compound(form, publication)
nsubj(that, form)
cop(that, be)
parataxis(Format, that)
case(book, of)
amod(book, clothbound)
nmod(that, book)
punct(currency, .)
det(data, the)
nsubj:pass(present, data)
aux:pass(present, be)
root(ROOT, present)
case(list, in)
obl(present, list)
cc(table, and)
conj(list, table)
punct(present, .)
nsubj:pass(label, Part)
nummod(Part, 1)
case(volume, in)
det(volume, both)
nmod(Part, volume)
aux:pass(label, be)
root(ROOT, label)
punct(label, ``)
nsubj(include, introduction)
cc(Tables, and)
conj(introduction, Tables)
punct(introduction, '')
punct(introduction, .)
det(table, the)
nsubj(include, table)
root(ROOT, include)
obj(include, those)
case(angles, for)
det(angles, the)
compound(angles, classification)
nmod(those, angles)
punct(index, ,)
compound(index, refractive)
conj(angles, index)
punct(point, ,)
cc(point, and)
compound(point, melting)
conj(angles, point)
case(type, of)
det(type, the)
amod(type, various)
nmod(point, type)
case(crystals, of)
nmod(type, crystals)
punct(include, .)
nsubj(contain, Part)
nummod(Part, 2)
case(Volume, of)
nmod(Part, Volume)
nummod(Volume, 1)
punct(contain, ,)
cc(part, and)
conj(Part, part)
nummod(part, 2)
cc(3, and)
conj(part, 3)
case(Volume, of)
nmod(3, Volume)
nummod(Volume, 2)
punct(contain, ,)
root(ROOT, contain)
det(description, the)
compound(description, crystal)
obj(contain, description)
punct(contain, .)
nsubj:pass(group, these)
aux:pass(group, be)
root(ROOT, group)
case(section, into)
obl(group, section)
case(system, accord)
fixed(accord, to)
det(system, the)
compound(system, crystal)
obl(group, system)
punct(arrange, ,)
cc(arrange, and)
case(section, within)
det(section, each)
obl(arrange, section)
nsubj:pass(arrange, compound)
aux:pass(arrange, be)
conj(group, arrange)
case(order, in)
det(order, the)
amod(order, same)
obl(arrange, order)
case(Krystallographie, as)
fixed(as, in)
nmod:poss(Krystallographie, Groth)
case(Groth, 's)
compound(Krystallographie, Chemische)
obl(arrange, Krystallographie)
punct(group, .)
det(list, a)
amod(list, alphabetical)
nsubj(enable, list)
case(name, of)
amod(name, chemical)
cc(mineralogical, and)
conj(chemical, mineralogical)
nmod(list, name)
case(number, with)
compound(number, reference)
nmod(name, number)
root(ROOT, enable)
obj(enable, one)
mark(find, to)
acl(one, find)
det(description, a)
amod(description, particular)
compound(description, crystal)
obj(find, description)
punct(enable, .)
nsubj:pass(give, reference)
case(source, to)
det(source, the)
compound(source, data)
nmod(reference, source)
aux:pass(give, be)
root(ROOT, give)
case(description, in)
det(description, the)
amod(description, crystal)
obl(give, description)
punct(description, .)
appos(description, publication)
cc(distribution, and)
conj(publication, distribution)
punct(give, :)
det(Barker, the)
nsubj:pass(publish, Barker)
flat(Barker, index)
aux:pass(publish, be)
parataxis(give, publish)
case(Committee, for)
det(Committee, the)
compound(Committee, Barker)
compound(Committee, index)
obl(publish, Committee)
case(W., by)
nmod(Committee, W.)
flat(W., Heffer)
cc(son, &)
conj(W., son)
punct(W., ,)
appos(W., Ltd.)
punct(give, ,)
root(ROOT, 4)
compound(Cury, Petty)
appos(4, Cury)
punct(Cury, ,)
list(Cury, Cambridge)
punct(Cambridge, ,)
appos(Cambridge, England)
punct(Cambridge, .)
list(Cury, Volume)
nummod(Volume, 1)
punct(Cury, ,)
acl(Cury, contain)
obj(contain, part)
nummod(part, 1)
cc(publish, and)
nsubj:pass(publish, 2)
aux:pass(publish, be)
conj(contain, publish)
case(1951, in)
obl(publish, 1951)
punct(publish, ;)
punct(Volume, ;)
obl:tmod(publish, Volume)
nummod(Volume, 2)
punct(Volume, ,)
punct(Volume, ,)
case(part, in)
nummod(part, three)
obl(publish, part)
punct(part, ,)
case(1956, in)
nmod(part, 1956)
punct(4, .)
det(volume, the)
nummod(volume, two)
nsubj(available, volume)
cop(available, be)
root(ROOT, available)
case(publisher, from)
det(publisher, the)
obl(available, publisher)
case($, for)
nmod(publisher, $)
nummod($, 16.80)
cc($, and)
conj($, $)
nummod($, 28.00)
punct($, ,)
advmod($, respectively)
punct(organization, .)
nummod(organization, 2)
case(2, -)
nmod(2, 2)
punct(organization, .)
compound(data, Crystal)
compound(organization, data)
parataxis(available, organization)
punct(available, :)
det(edition, the)
amod(edition, present)
nsubj:pass(write, edition)
case(data, of)
amod(data, crystal)
nmod(edition, data)
aux:pass(write, be)
root(ROOT, write)
case(J.D.H., by)
obl(write, J.D.H.)
flat(J.D.H., Donnay)
punct(J.D.H., ,)
det(University, the)
compound(University, Johns)
compound(University, hopkin)
appos(J.D.H., University)
punct(Baltimore, ,)
appos(University, Baltimore)
punct(Md., ,)
conj(J.D.H., Md.)
punct(Part, ()
appos(Baltimore, Part)
nummod(Part, 2)
punct(Part, ))
punct(Part, ))
cc(Werner, and)
conj(J.D.H., Werner)
flat(Werner, Nowacki)
punct(Werner, ,)
appos(Werner, University)
case(bear, of)
nmod(University, bear)
punct(bear, ,)
appos(bear, Switzerland)
punct(Part, ()
appos(bear, Part)
nummod(Part, 1)
punct(Part, ))
punct(Part, ))
case(collaboration, with)
det(collaboration, the)
nmod(Werner, collaboration)
case(Gabrielle, of)
nmod(collaboration, Gabrielle)
flat(Gabrielle, Donnay)
punct(Gabrielle, ,)
flat(Gabrielle, U.)
compound(Survey, S.)
compound(Survey, geological)
list(Gabrielle, Survey)
punct(Survey, ,)
list(Gabrielle, Washington)
punct(D., ,)
conj(Gabrielle, D.)
flat(D., C.)
punct(write, .)
amod(collaborator, many)
nsubj(help, collaborator)
case(States, in)
det(States, the)
compound(States, United)
nmod(collaborator, States)
cc(Switzerland, and)
conj(States, Switzerland)
root(ROOT, help)
mark(collect, in)
advcl(help, collect)
cc(assemble, and)
conj(collect, assemble)
obj(assemble, data)
punct(help, ,)
mark(make, in)
advcl(collect, make)
obj(make, calculation)
punct(editing, ,)
cc(editing, and)
case(editing, in)
conj(calculation, editing)
punct(help, .)
nsubj(come, support)
root(ROOT, come)
case(group, from)
amod(group, academic)
cc(industrial, and)
conj(academic, industrial)
obl(come, group)
case(country, in)
det(country, these)
nummod(country, two)
obl(come, country)
punct(come, .)
det(Society, the)
compound(Society, geological)
nsubj(give, Society)
case(America, of)
nmod(Society, America)
root(ROOT, give)
det(grant, a)
obj(give, grant)
punct(grant, -)
case(aid, in)
punct(aid, -)
nmod(grant, aid)
mark(complete, to)
advcl(give, complete)
det(work, the)
obj(complete, work)
cc(bear, and)
conj(complete, bear)
det(expense, the)
obj(bear, expense)
case(publication, of)
nmod(expense, publication)
punct(give, .)
nsubj(be, preparation)
case(edition, of)
det(edition, a)
amod(edition, second)
nmod(preparation, edition)
root(ROOT, be)
case(progress, in)
obl(be, progress)
case(sponsorship, under)
det(sponsorship, the)
nmod(progress, sponsorship)
case(Committee, of)
det(Committee, the)
compound(Committee, Crystal)
compound(Committee, data)
nmod(sponsorship, Committee)
case(Association, of)
det(Association, the)
compound(Association, American)
compound(Association, crystallographic)
nmod(Committee, Association)
punct(progress, .)
nsubj(J.D.H., Coeditors)
cop(J.D.H., be)
root(ROOT, J.D.H.)
flat(J.D.H., Donnay)
punct(G., ,)
conj(J.D.H., G.)
flat(G., E.)
flat(G., Cox)
case(University, of)
compound(University, leed)
nmod(J.D.H., University)
punct(olga, ,)
cc(olga, and)
conj(J.D.H., olga)
flat(olga, Kennard)
case(Council, of)
det(Council, the)
compound(Council, National)
nmod(olga, Council)
case(Research, for)
compound(Research, Medical)
nmod(Council, Research)
punct(Research, ,)
appos(Research, London)
punct(Research, .)
amod(grant, Financial)
nsubj:pass(receive, grant)
aux(receive, have)
aux:pass(receive, be)
parataxis(J.D.H., receive)
case(foundation, from)
det(foundation, the)
compound(foundation, National)
compound(foundation, Science)
obl(receive, foundation)
cc(British, and)
det(British, the)
punct(British, ()
conj(foundation, British)
punct(British, ))
root(ROOT, Institute)
case(physic, of)
nmod(Institute, physic)
case(work, for)
det(work, the)
compound(work, compilation)
nmod(Institute, work)
cc(cost, and)
det(cost, the)
compound(cost, publication)
conj(work, cost)
punct(Institute, .)
det(continuity, the)
nsubj:pass(suggest, continuity)
case(project, of)
det(project, the)
nmod(continuity, project)
aux:pass(suggest, be)
root(ROOT, suggest)
case(plan, by)
obl(suggest, plan)
case(edition, for)
det(edition, a)
amod(edition, eventual)
amod(edition, third)
nmod(plan, edition)
punct(suggest, .)
root(ROOT, substance)
punct(substance, :)
appos(substance, Elements)
punct(alloys, ,)
conj(Elements, alloys)
punct(inorganic, ,)
conj(Elements, inorganic)
cc(organic, and)
conj(Elements, organic)
conj(Elements, compound)
punct(substance, . )
punct(include, ()
compound(data, Metal)
nsubj:pass(include, data)
aux(include, will)
advmod(include, not)
aux:pass(include, be)
root(ROOT, include)
case(edition, in)
det(edition, the)
amod(edition, second)
obl(include, edition)
punct(include, ,)
mark(collect, since)
nsubj:pass(collect, these)
aux(collect, have)
aux:pass(collect, be)
advcl(include, collect)
advmod(collect, independently)
case(W., by)
obl(collect, W.)
flat(W., B.)
flat(W., Pearson)
punct(Council, ,)
compound(Council, National)
compound(Council, Research)
appos(W., Council)
punct(Ottawa, ,)
appos(Council, Ottawa)
punct(publish, ,)
cc(publish, and)
conj(collect, publish)
case(handbook, as)
det(handbook, a)
obl(publish, handbook)
case(spacing, of)
amod(spacing, lattice)
nmod(handbook, spacing)
cc(structure, and)
conj(spacing, structure)
case(metal, of)
nmod(structure, metal)
cc(alloys, and)
conj(metal, alloys)
case(Press, by)
compound(Press, Pergamon)
nmod(metal, Press)
punct(property, .)
punct(property, ))
nmod(handbook, property)
punct(include, :)
amod(data, crystallographic)
nsubj:pass(present, data)
acl(data, result)
advmod(result, mainly)
case(measurement, from)
compound(measurement, X-ray)
cc(electron, and)
conj(X-ray, electron)
compound(measurement, diffraction)
obl(result, measurement)
aux:pass(present, be)
root(ROOT, present)
punct(present, .)
compound(dimension, cell)
nsubj:pass(give, dimension)
punct(number, ,)
conj(dimension, number)
case(unit, of)
compound(unit, formula)
nmod(number, unit)
case(cell, per)
nmod(unit, cell)
punct(group, ,)
compound(group, space)
conj(cell, group)
punct(gravity, ,)
cc(gravity, and)
amod(gravity, specific)
conj(dimension, gravity)
aux:pass(give, be)
root(ROOT, give)
case(substance, for)
det(substance, all)
obl(give, substance)
punct(give, .)
case(substance, for)
det(substance, some)
obl(give, substance)
punct(give, ,)
amod(property, auxiliary)
nsubj:pass(give, property)
case(point, such)
fixed(such, as)
det(point, the)
compound(point, melting)
nmod(property, point)
aux:pass(give, be)
root(ROOT, give)
punct(give, .)
nsubj(cover, source)
case(data, of)
nmod(source, data)
punct(source, :)
appos(source, Part)
nummod(Part, 1)
punct(Part, ,)
case(edition, of)
det(edition, the)
amod(edition, present)
nmod(Part, edition)
root(ROOT, cover)
det(literature, the)
obj(cover, literature)
case(mid-1948, to)
nmod(literature, mid-1948)
punct(cover, ;)
punct(cover, ;)
obl:tmod(cover, Part)
nummod(Part, 2)
punct(cover, ,)
punct(come, ,)
case(end, up)
fixed(up, to)
det(end, the)
obl(come, end)
case(1951, of)
nmod(end, 1951)
punct(come, .)
nsubj(come, much)
case(material, of)
det(material, the)
obl(much, material)
parataxis(cover, come)
advmod(come, directly)
case(source, from)
amod(source, secondary)
obl(come, source)
case(Strukturbericht, such)
fixed(such, as)
nmod(source, Strukturbericht)
punct(cover, .)
root(ROOT, criticality)
punct(criticality, : )
det(number, the)
amod(number, vast)
nsubj(critical, number)
case(compound, of)
nmod(number, compound)
mark(cover, to)
aux:pass(cover, be)
acl(number, cover)
punct(resource, ,)
det(resource, the)
amod(resource, limit)
nsubj:pass(cover, resource)
mark(do, to)
xcomp(cover, do)
det(job, the)
obj(do, job)
punct(preclude, ,)
cc(preclude, and)
det(need, the)
amod(need, immediate)
nsubj(preclude, need)
case(type, for)
det(type, this)
nmod(need, type)
case(compilation, of)
nmod(type, compilation)
advcl(critical, preclude)
det(evaluation, a)
amod(evaluation, thorough)
obj(preclude, evaluation)
case(data, of)
det(data, all)
amod(data, available)
nmod(evaluation, data)
case(edition, in)
det(edition, the)
amod(edition, present)
nmod(data, edition)
punct(critical, .)
amod(edition, Future)
nsubj(critical, edition)
aux(critical, may)
cop(critical, be)
advmod(critical, more)
root(ROOT, critical)
punct(critical, .)
root(ROOT, use)
case(nomenclature, of)
nmod(use, nomenclature)
punct(use, ,)
conj(nomenclature, symbol)
punct(unit, ,)
conj(nomenclature, unit)
punct(use, ,)
amod(constant, physical)
parataxis(use, constant)
punct(use, :)
case(part, since)
obl(prepare, part)
nummod(part, 1)
punct(2, ,)
cc(2, and)
conj(part, 2)
punct(prepare, ,)
aux:pass(prepare, be)
root(ROOT, prepare)
advmod(prepare, independently)
punct(differ, ,)
det(scheme, the)
compound(scheme, abbreviation)
nsubj(differ, scheme)
cc(symbol, and)
det(symbol, the)
amod(symbol, chemical)
conj(scheme, symbol)
acl(symbol, use)
conj(prepare, differ)
case(part, in)
det(part, the)
nummod(part, two)
obl(differ, part)
punct(prepare, .)
det(edition, the)
amod(edition, second)
nsubj(have, edition)
aux(have, should)
root(ROOT, have)
amod(uniformity, greater)
obj(have, uniformity)
punct(have, .)
compound(: , currency)
root(ROOT, : )
det(edition, a)
amod(edition, second)
nsubj(preparation, edition)
cop(preparation, be)
case(preparation, in)
root(ROOT, preparation)
punct(be, ,)
cc(be, and)
expl(be, there)
conj(preparation, be)
amod(range, long)
compound(plan, range)
nsubj(be, plan)
case(third, for)
det(third, a)
nmod(plan, third)
punct(preparation, .)
root(ROOT, Format)
punct(Format, :)
nsubj:pass(present, data)
case(edition, in)
det(edition, the)
amod(edition, present)
nmod(data, edition)
aux:pass(present, be)
appos(Format, present)
case(table, in)
obl(present, table)
cc(list, and)
conj(table, list)
punct(Format, .)
obl:tmod(deal, Part)
nummod(Part, 1)
punct(deal, ,)
root(ROOT, deal)
case(classification, with)
det(classification, the)
obl(deal, classification)
case(substance, of)
amod(substance, crystalline)
nmod(classification, substance)
case(group, by)
compound(group, space)
nmod(classification, group)
cc(compilation, and)
cop(compilation, be)
advmod(compilation, not)
det(compilation, a)
amod(compilation, numerical)
compound(compilation, data)
conj(deal, compilation)
punct(deal, .)
det(compound, the)
nsubj:pass(divide, compound)
aux:pass(divide, be)
root(ROOT, divide)
case(composition, accord)
fixed(accord, to)
obl(divide, composition)
case(category, into)
nummod(category, seven)
obl(divide, category)
punct(divide, .)
obl:tmod(contain, Part)
nummod(Part, 2)
punct(contain, ,)
root(ROOT, contain)
amod(table, determinative)
obj(contain, table)
case(identification, for)
det(identification, the)
nmod(table, identification)
case(substance, of)
amod(substance, crystalline)
nmod(identification, substance)
punct(contain, .)
nsubj:pass(arrange, these)
aux:pass(arrange, be)
root(ROOT, arrange)
case(system, accord)
fixed(accord, to)
compound(system, crystal)
obl(arrange, system)
punct(arrange, .)
expl(be, there)
root(ROOT, be)
nsubj(be, formula)
cc(indexe, and)
compound(indexe, name)
conj(formula, indexe)
acl(formula, cover)
det(part, both)
obj(cover, part)
punct(be, .)
nsubj:pass(give, reference)
case(Part, for)
nmod(reference, Part)
nummod(Part, 1)
punct(give, ,)
aux:pass(give, be)
root(ROOT, give)
case(end, at)
det(end, the)
obl(give, end)
cc(Part, and)
case(Part, for)
conj(end, Part)
nummod(Part, 2)
punct(Part, ,)
case(table, in)
det(table, the)
nmod(publication, table)
punct(publication, .)
parataxis(give, publication)
cc(distribution, and)
conj(publication, distribution)
punct(give, :)
det(edition, the)
amod(edition, present)
appos(publication, edition)
case(data, of)
amod(data, crystal)
nmod(edition, data)
punct(Af, ()
appos(data, Af)
punct(Af, ))
punct(edition, ,)
acl(edition, publish)
case(1954, in)
obl(publish, 1954)
case(Memoir, as)
obl(publish, Memoir)
nummod(Memoir, 60)
case(Society, of)
det(Society, the)
compound(Society, geological)
nmod(Memoir, Society)
case(America, of)
nmod(Society, America)
punct(print, ,)
cop(print, be)
advmod(print, now)
case(print, out)
case(print, of)
advcl(publish, print)
punct(give, .)
det(manuscript, the)
nsubj(ready, manuscript)
case(edition, of)
det(edition, the)
amod(edition, second)
nmod(manuscript, edition)
aux(ready, will)
advmod(ready, probably)
cop(ready, be)
root(ROOT, ready)
case(end, by)
det(end, the)
obl(ready, end)
case(1960, of)
nmod(end, 1960)
punct(ready, .)
nummod(Crystal, 2)
case(3, -)
nmod(2, 3)
punct(Crystal, .)
parataxis(ready, Crystal)
compound(organization, Structures)
root(ROOT, organization)
punct(organization, :)
det(author, the)
nsubj(Ralph, author)
case(Structures, of)
compound(Structures, Crystal)
nmod(author, Structures)
cop(Ralph, be)
root(ROOT, Ralph)
flat(Ralph, W.G.)
flat(Ralph, Wyckoff)
punct(Ralph, ,)
list(Ralph, University)
case(Arizona, of)
nmod(University, Arizona)
punct(Arizona, ,)
list(Arizona, Tucson)
punct(Arizona, ,)
appos(Arizona, Arizona)
punct(Ralph, .)
det(section, the)
amod(section, first)
nsubj(appear, section)
case(publication, of)
det(publication, this)
nmod(section, publication)
root(ROOT, appear)
case(1948, in)
obl(appear, 1948)
cc(supplement, and)
det(supplement, the)
amod(supplement, last)
conj(appear, supplement)
case(1960, in)
nmod(supplement, 1960)
punct(appear, . )
mark(complete, though)
advmod(complete, now)
advcl(include, complete)
punct(include, ,)
det(publication, the)
nsubj:pass(include, publication)
aux:pass(include, be)
root(ROOT, include)
case(directory, in)
det(directory, this)
obl(include, directory)
case(importance, because)
fixed(because, of)
nmod:poss(importance, its)
obl(include, importance)
cc(nature, and)
case(nature, because)
fixed(because, of)
det(nature, the)
amod(term, long)
punct(term, -)
compound(nature, term)
conj(importance, nature)
case(preparation, of)
nmod:poss(preparation, its)
nmod(nature, preparation)
punct(include, .)
root(ROOT, substance)
punct(substance, :)
appos(substance, Elements)
punct(compound, ,)
amod(compound, inorganic)
cc(organic, and)
conj(inorganic, organic)
conj(Elements, compound)
punct(alloys, ()
det(alloys, no)
parataxis(Elements, alloys)
punct(alloys, ))
punct(substance, .)
root(ROOT, property)
punct(property, :)
det(data, the)
nsubj:pass(derive, data)
acl(data, present)
aux:pass(derive, be)
root(ROOT, derive)
advmod(entirely, almost)
advmod(measurement, entirely)
case(measurement, from)
compound(measurement, X-ray)
compound(measurement, diffraction)
obl(derive, measurement)
cc(include, and)
conj(derive, include)
amod(coordinate, atomic)
obj(include, coordinate)
punct(dimension, ,)
compound(dimension, cell)
conj(coordinate, dimension)
punct(radii, ,)
cc(radii, and)
amod(radii, atomic)
cc(ionic, and)
conj(atomic, ionic)
conj(coordinate, radii)
punct(derive, .)
root(ROOT, source)
case(data, of)
nmod(source, data)
punct(source, :)
amod(literature, publish)
appos(source, literature)
punct(source, .)
root(ROOT, criticality)
punct(criticality, : )
det(aim, the)
nsubj(be, aim)
root(ROOT, be)
mark(state, to)
ccomp(be, state)
det(result, the)
obj(state, result)
case(determination, of)
det(determination, all)
amod(determination, available)
nmod(result, determination)
case(position, of)
amod(position, atomic)
nmod(determination, position)
case(crystals, in)
nmod(determination, crystals)
punct(be, .)
advmod(value, presumably)
det(data, the)
amod(data, tabulate)
nsubj(value, data)
cop(value, be)
amod(value, best)
amod(value, available)
root(ROOT, value)
punct(value, .)
det(comment, the)
amod(comment, critical)
nsubj(invaluable, comment)
case(section, in)
det(section, the)
amod(section, textual)
nmod(comment, section)
case(publication, of)
det(publication, this)
nmod(section, publication)
cop(invaluable, be)
root(ROOT, invaluable)
punct(invaluable, .)
root(ROOT, use)
case(nomenclature, of)
nmod(use, nomenclature)
punct(use, ,)
conj(nomenclature, symbol)
punct(unit, ,)
conj(nomenclature, unit)
punct(use, ,)
amod(constant, physical)
parataxis(use, constant)
punct(use, :)
det(terminology, the)
nsubj(conform, terminology)
acl(terminology, use)
root(ROOT, conform)
case(that, to)
obl(conform, that)
case(Internationale, of)
nmod(that, Internationale)
flat(Internationale, Tabellen)
flat(Tabellen, Zur)
flat(Zur, bestimm)
flat(Tabellen, Von)
flat(Von, Kristallstrukturen)
punct(conform, .)
root(ROOT, currency)
punct(currency, :)
case(year, during)
det(year, the)
obl(issue, year)
case(publication, of)
nmod(year, publication)
punct(supplement, ,)
conj(publication, supplement)
cc(sheet, and)
compound(sheet, replacement)
conj(publication, sheet)
aux:pass(issue, be)
appos(currency, issue)
advmod(issue, periodically)
punct(currency, .)
nsubj(extend, coverage)
case(literature, of)
det(literature, the)
nmod(coverage, literature)
root(ROOT, extend)
case(1954, through)
obl(extend, 1954)
cc(include, and)
conj(extend, include)
det(reference, some)
nummod(reference, 1955)
obj(include, reference)
punct(extend, .)
nsubj(be, it)
root(ROOT, be)
mark(hope, to)
aux:pass(hope, be)
xcomp(be, hope)
mark(find, that)
det(way, some)
nsubj:pass(find, way)
aux(find, will)
aux:pass(find, be)
ccomp(hope, find)
mark(keep, to)
xcomp(find, keep)
det(work, this)
amod(work, important)
obj(keep, work)
xcomp(keep, current)
punct(Format, .)
nsubj(be, Format)
punct(Format, :)
det(form, the)
compound(form, publication)
nsubj(be, form)
parataxis(Format, be)
mark(sheet, that)
case(sheet, of)
amod(leaf, loose)
punct(leaf, -)
compound(sheet, leaf)
obl(be, sheet)
punct(Af, ()
appos(sheet, Af)
punct(Af, ))
acl(sheet, contain)
case(binder, in)
obl(contain, binder)
punct(be, .)
det(book, the)
nsubj:pass(divide, book)
aux:pass(divide, be)
root(ROOT, divide)
case(chapter, into)
obl(divide, chapter)
cc(group, and)
case(chapter, in)
det(chapter, each)
obl(group, chapter)
det(material, the)
nsubj:pass(group, material)
aux:pass(group, be)
conj(divide, group)
case(text, into)
obl(group, text)
punct(Tables, ,)
conj(text, Tables)
punct(illustration, ,)
conj(text, illustration)
punct(bibliography, ,)
cc(bibliography, and)
conj(text, bibliography)
punct(divide, .)
det(group, each)
nsubj:pass(paginate, group)
aux:pass(paginate, be)
root(ROOT, paginate)
advmod(paginate, separately)
punct(paginate, ;)
punct(paginate, ;)
nsubj:pass(use, number)
advmod(follow, sometimes)
acl(number, follow)
case(letter, by)
obl(follow, letter)
aux:pass(use, be)
conj(paginate, use)
mark(make, so)
fixed(so, that)
nsubj:pass(make, insertion)
aux(make, can)
aux:pass(make, be)
advcl(use, make)
punct(paginate, .)
compound(structure, Inorganic)
nsubj:pass(find, structure)
aux:pass(find, be)
root(ROOT, find)
case(chapter, in)
obl(find, chapter)
nummod(chapter, 2)
case(12, -)
nmod(2, 12)
punct(chapter, ,)
amod(structure, organic)
parataxis(find, structure)
case(chapter, in)
nmod(structure, chapter)
nummod(chapter, 13)
case(15, -)
nmod(13, 15)
punct(find, .)
case(chapter, within)
det(chapter, each)
obl(make, chapter)
det(effort, a)
nsubj:pass(make, effort)
aux(make, have)
aux:pass(make, be)
parataxis(find, make)
mark(group, to)
xcomp(make, group)
advmod(group, together)
det(crystals, those)
obj(group, crystals)
case(structure, with)
amod(structure, similar)
obl(group, structure)
punct(find, .)
expl(be, there)
root(ROOT, be)
nummod(indexe, three)
nsubj(be, indexe)
punct(indexe, ,)
advmod(index, i.e.)
punct(index, ,)
det(index, a)
amod(formula, inorganic)
compound(index, formula)
appos(indexe, index)
punct(index, ,)
det(index, a)
amod(index, mineralogical)
compound(index, name)
conj(index, index)
punct(index, ,)
cc(index, and)
det(index, a)
compound(index, name)
conj(indexe, index)
case(compound, to)
amod(compound, organic)
nmod(index, compound)
punct(be, .)
root(ROOT, publication)
cc(distribution, and)
conj(publication, distribution)
punct(publication, :)
nsubj(Publishers, Publisher)
case(Structures, of)
compound(Structures, Crystal)
nmod(Publisher, Structures)
cop(Publishers, be)
compound(Publishers, Interscience)
appos(publication, Publishers)
punct(Publishers, ,)
nummod(Avenue, 250)
compound(Avenue, fifth)
conj(Publishers, Avenue)
punct(York, ,)
compound(York, New)
conj(Publishers, York)
nummod(York, 1)
punct(N., ,)
conj(Publishers, N.)
flat(N., Y.)
punct(publication, .)
det(work, the)
nsubj(consist, work)
root(ROOT, consist)
case(section, of)
nummod(section, four)
obl(consist, section)
cc(supplement, and)
nummod(supplement, 5)
conj(section, supplement)
punct(consist, .)
nsubj($, price)
case(work, of)
det(work, the)
amod(work, complete)
nmod(price, work)
case(binder, include)
det(binder, all)
amod(binder, necessary)
nmod(work, binder)
cop($, be)
root(ROOT, $)
nummod($, 148.50)
punct($, .)
nummod($, 2)
case(4, -)
nmod(2, 4)
punct(system, .)
nmod:poss(system, Dana)
case(Dana, 's)
appos($, system)
case(organization, of)
compound(organization, mineralogy)
nmod(system, organization)
punct(system, :)
nummod(edition, six)
nsubj(appear, edition)
case(James, of)
nmod:poss(System, James)
flat(James, Dwight)
flat(James, Dana)
case(James, 's)
nmod(edition, System)
acl:relcl(system, appear)
case(1837, between)
obl(appear, 1837)
cc(1892, and)
conj(1837, 1892)
punct(appear, .)
case(1915, in)
obl(ask, 1915)
nsubj(ask, Edward)
flat(Edward, S.)
flat(Edward, Dana)
punct(Edward, ,)
appos(Edward, editor)
case(edition, of)
det(edition, the)
amod(edition, sixth)
nmod(editor, edition)
punct(ask, ,)
root(ROOT, ask)
obj(ask, W.)
flat(W., E.)
flat(W., Ford)
case(University, of)
compound(University, Yale)
nmod(Ford, University)
mark(prepare, to)
xcomp(ask, prepare)
det(edition, a)
amod(edition, seventh)
obj(prepare, edition)
case(work, of)
nmod:poss(father, he)
nmod:poss(work, father)
case(father, 's)
nmod(edition, work)
punct(ask, . )
det(number, a)
nsubj(become, number)
case(people, of)
nmod(number, people)
root(ROOT, become)
xcomp(become, involved)
case(preparation, in)
det(preparation, the)
obl(involved, preparation)
cc(slow, but)
nsubj(slow, work)
cop(slow, be)
conj(involved, slow)
case(1937, until)
obl(slow, 1937)
punct(involved, .)
case(year, in)
det(year, that)
obl(obtain, year)
det(grant, a)
nsubj:pass(obtain, grant)
aux:pass(obtain, be)
root(ROOT, obtain)
case(Fund, from)
det(Fund, the)
compound(Fund, penrose)
obl(obtain, Fund)
case(Society, of)
det(Society, the)
compound(Society, geological)
nmod(Fund, Society)
case(America, of)
nmod(Society, America)
mark(finance, to)
advcl(obtain, finance)
amod(worker, additional)
amod(time, full)
punct(time, -)
compound(worker, time)
obj(finance, worker)
punct(obtain, .)
nsubj:pass(advanced, money)
aux:pass(advanced, be)
advmod(advanced, also)
root(ROOT, advanced)
case(publisher, by)
det(publisher, the)
obl(advanced, publisher)
punct(John, ,)
appos(publisher, John)
flat(John, Wiley)
cc(Inc., &)
compound(Inc., son)
punct(Inc., ,)
appos(John, Inc.)
punct(Volume, .)
appos(publisher, Volume)
nummod(Volume, 1)
punct(complete, ,)
aux:pass(complete, be)
conj(advanced, complete)
case(1941, in)
obl(complete, 1941)
cc(publish, and)
conj(complete, publish)
case(1944, in)
obl(publish, 1944)
punct(advanced, .)
det(editor, the)
nsubj(Charles, editor)
case(volume, of)
det(volume, this)
nmod(editor, volume)
cc(Volume, and)
conj(volume, Volume)
nummod(Volume, 2)
punct(Charles, ,)
cop(Charles, be)
det(Charles, the)
amod(Charles, late)
root(ROOT, Charles)
flat(Charles, Palache)
punct(Clifford, ,)
conj(Charles, Clifford)
flat(Clifford, Frondel)
punct(Harry, ,)
cc(Harry, and)
det(Harry, the)
amod(Harry, late)
conj(Charles, Harry)
flat(Harry, berman)
punct(Harry, ,)
appos(Harry, all)
case(University, of)
compound(University, Harvard)
nmod(all, University)
punct(all, .)
nsubj:pass(begin, work)
case(Volume, on)
nmod(work, Volume)
nummod(Volume, 2)
punct(begin, ,)
aux:pass(begin, be)
conj(Charles, begin)
case(1941, in)
obl(begin, 1941)
punct(begin, ,)
advcl(begin, interrupt)
case(war, by)
det(war, the)
obl(interrupt, war)
case(1942, in)
obl(interrupt, 1942)
punct(resume, ,)
cc(resume, and)
conj(interrupt, resume)
case(1945, in)
obl(resume, 1945)
punct(begin, .)
det(volume, the)
nsubj:pass(complete, volume)
aux:pass(complete, be)
root(ROOT, complete)
case(1950, in)
obl(complete, 1950)
cc(publish, and)
conj(complete, publish)
case(1951, in)
obl(publish, 1951)
punct(complete, . )
det(grant, a)
amod(grant, supplementary)
nsubj(help, grant)
case(Society, from)
det(Society, the)
compound(Society, geological)
nmod(grant, Society)
case(America, of)
nmod(Society, America)
root(ROOT, help)
xcomp(help, finance)
nmod:poss(publication, its)
obj(finance, publication)
punct(help, .)
case(editor, besides)
det(editor, the)
obl(be, editor)
expl(be, there)
root(ROOT, be)
amod(contributor, many)
nsubj(be, contributor)
case(States, in)
det(States, the)
compound(States, United)
nmod(contributor, States)
cc(Britain, and)
compound(Britain, Great)
conj(States, Britain)
case(volume, to)
obl(be, volume)
nummod(volume, 1)
punct(2, ,)
cc(2, and)
conj(volume, 2)
punct(be, . )
nsubj(continue, W.)
flat(W., E.)
flat(W., Ford)
punct(continue, ,)
case(example, for)
obl(continue, example)
punct(continue, ,)
root(ROOT, continue)
mark(supply, to)
xcomp(continue, supply)
obj(supply, data)
case(occurrence, on)
det(occurrence, the)
obl(supply, occurrence)
case(mineral, of)
nmod(occurrence, mineral)
case(death, until)
nmod:poss(death, he)
nmod(occurrence, death)
case(1939, in)
nmod(death, 1939)
punct(Volume, .)
appos(1939, Volume)
nummod(Volume, 3)
punct(near, ,)
aux(near, be)
parataxis(continue, near)
obj(near, completion)
cc(be, and)
expl(be, there)
conj(near, be)
nsubj(be, plan)
mark(revise, to)
acl(plan, revise)
obj(revise, Volume)
nummod(support, 1)
punct(1, .)
det(project, the)
nsubj:pass(support, project)
aux:pass(support, be)
advmod(support, currently)
ccomp(revise, support)
case(University, by)
compound(University, Harvard)
obl(support, University)
punct(continue, .)
root(ROOT, substance)
punct(substance, :)
appos(substance, mineral)
punct(substance, .)
root(ROOT, property)
punct(property, :)
amod(property, crystallographic)
punct(physical, ,)
conj(crystallographic, physical)
punct(optical, ,)
conj(crystallographic, optical)
punct(chemical, ,)
cc(chemical, and)
conj(crystallographic, chemical)
appos(property, property)
punct(property, .)
det(data, the)
amod(data, crystallographic)
nsubj(include, data)
acl(data, give)
root(ROOT, include)
amod(angles, interaxial)
obj(include, angles)
cc(dimension, and)
compound(cell, unit)
compound(dimension, cell)
conj(angles, dimension)
punct(include, ;)
punct(include, ;)
det(value, the)
amod(value, physical)
compound(value, property)
nsubj(include, value)
parataxis(include, include)
obj(include, hardness)
punct(point, ,)
compound(point, melting)
conj(hardness, point)
punct(gravity, ,)
cc(gravity, and)
amod(gravity, specific)
conj(hardness, gravity)
punct(include, .)
root(ROOT, source)
case(data, of)
nmod(source, data)
punct(source, :)
advmod(entirely, almost)
advmod(original, entirely)
amod(article, original)
appos(source, article)
case(journal, in)
nmod(article, journal)
punct(article, ;)
punct(article, ;)
conj(article, abstract)
cc(compilation, and)
amod(compilation, other)
conj(article, compilation)
case(occasion, on)
amod(occasion, rare)
nmod(compilation, occasion)
mark(available, when)
amod(papers, original)
nsubj(available, papers)
cop(available, be)
advmod(available, not)
advcl(article, available)
punct(source, .)
root(ROOT, criticality)
punct(criticality, :)
det(information, all)
nsubj:pass(appraise, information)
aux:pass(appraise, be)
advmod(appraise, carefully)
appos(criticality, appraise)
cc(designate, and)
amod(fact, uncertain)
nsubj:pass(designate, fact)
aux:pass(designate, be)
conj(appraise, designate)
case('?', by)
punct('?', ()
obl(designate, '?')
punct(criticality, .)
punct(criticality, ))
det(pattern, a)
amod(pattern, authentic)
compound(pattern, diffraction)
nsubj:pass(obtain, pattern)
aux:pass(obtain, be)
advmod(obtain, always)
root(ROOT, obtain)
cc(check, and)
amod(property, optical)
nsubj:pass(check, property)
aux:pass(check, be)
advmod(check, frequently)
conj(obtain, check)
punct(obtain, .)
root(ROOT, use)
case(nomenclature, of)
nmod(use, nomenclature)
punct(use, ,)
conj(nomenclature, symbol)
punct(unit, ,)
conj(nomenclature, unit)
punct(use, ,)
amod(constant, physical)
parataxis(use, constant)
punct(use, :)
nsubj:pass(follow, recommendation)
case(authority, of)
amod(authority, international)
nmod(recommendation, authority)
punct(authority, ,)
case(Union, such)
fixed(such, as)
det(Union, the)
compound(Union, International)
nmod(recommendation, Union)
case(crystallography, of)
nmod(Union, crystallography)
punct(follow, ,)
aux:pass(follow, be)
root(ROOT, follow)
punct(follow, .)
expl(be, there)
root(ROOT, be)
det(synonymy, a)
amod(synonymy, complete)
nsubj(be, synonymy)
case(beginning, at)
det(beginning, the)
nmod(synonymy, beginning)
case(description, of)
det(description, each)
compound(description, species)
nmod(beginning, description)
punct(be, .)
root(ROOT, currency)
punct(currency, :)
nsubj:pass(maintain, currency)
case(sense, in)
det(sense, the)
amod(sense, usual)
nmod(currency, sense)
aux(maintain, can)
advmod(maintain, not)
aux:pass(maintain, be)
appos(currency, maintain)
case(undertake, in)
det(undertake, a)
obl(maintain, undertake)
case(sort, of)
det(sort, this)
nmod(undertake, sort)
punct(Format, .)
parataxis(maintain, Format)
punct(Format, :)
det(data, the)
nsubj:pass(present, data)
aux:pass(present, be)
parataxis(Format, present)
case(text, in)
obl(present, text)
cc(table, and)
conj(text, table)
case(volume, in)
amod(volume, bound)
nmod(text, volume)
punct(Volume, .)
appos(volume, Volume)
nummod(Volume, 1)
punct(contain, ,)
case(edition, of)
det(edition, the)
amod(edition, seventh)
nmod(Volume, edition)
conj(present, contain)
det(introduction, a)
obj(contain, introduction)
cc(data, and)
conj(introduction, data)
case(class, for)
nummod(class, eight)
nmod(introduction, class)
case(mineral, of)
nmod(class, mineral)
punct(introduction, ;)
punct(class, ;)
appos(introduction, Volume)
nummod(Volume, 2)
punct(contain, ,)
conj(contain, contain)
obj(contain, data)
case(class, for)
compound(two, forty)
punct(two, -)
nummod(class, two)
obl(contain, class)
punct(currency, .)
nsubj:pass(give, reference)
aux:pass(give, be)
root(ROOT, give)
case(end, at)
det(end, the)
obl(give, end)
case(description, of)
det(description, each)
amod(description, mineral)
nmod(end, description)
cc(give, and)
det(index, a)
amod(index, general)
nsubj:pass(give, index)
aux:pass(give, be)
conj(give, give)
case(end, at)
det(end, the)
obl(give, end)
case(volume, of)
det(volume, each)
nmod(end, volume)
punct(give, .)
expl(be, there)
aux(be, will)
root(ROOT, be)
det(index, a)
amod(index, comprehensive)
nsubj(be, index)
case(Volume, in)
nmod(index, Volume)
nummod(Volume, 3)
punct(index, ,)
acl(index, cover)
det(volume, all)
nummod(volume, three)
obj(cover, volume)
punct(publication, .)
appos(index, publication)
cc(distribution, and)
conj(publication, distribution)
punct(publication, :)
appos(publication, Volume)
nummod(Volume, 1)
punct(Af, ()
punct(Af, ()
appos(Volume, Af)
punct(Af, ))
case(edition, of)
det(edition, the)
amod(edition, seventh)
nmod(Volume, edition)
case(System, of)
nmod:poss(System, Dana)
case(Dana, 's)
nmod(edition, System)
case(mineralogy, of)
nmod(System, mineralogy)
aux:pass(publish, be)
acl:relcl(edition, publish)
case(1944, in)
obl(publish, 1944)
cc(Volume, and)
conj(1944, Volume)
nummod(Volume, 2)
punct(Af, ()
punct(Af, ()
appos(Volume, Af)
punct(Af, ))
case(1951, in)
obl(publish, 1951)
case(John, by)
nmod(1951, John)
flat(John, Wiley)
cc(Inc., &)
compound(Inc., son)
punct(Inc., ,)
nmod(John, Inc.)
punct(York, ,)
compound(York, New)
appos(John, York)
punct(York, ,)
appos(York, N.)
flat(N., Y.)
punct(be, . )
punct(date, ()
det(association, the)
nsubj(date, association)
case(Wiley, of)
nmod(association, Wiley)
cc(son, &)
conj(Wiley, son)
case(mineralogy, with)
det(mineralogy, the)
compound(mineralogy, Dana)
nmod(Wiley, mineralogy)
root(ROOT, date)
advmod(date, back)
case(1844, to)
obl(back, 1844)
mark(publish, when)
nsubj(publish, they)
advcl(date, publish)
det(edition, the)
amod(edition, second)
obj(publish, edition)
case(system, of)
det(system, the)
nmod(edition, system)
punct(date, .)
punct(date, ))
det(volume, the)
nummod(volume, two)
nsubj(available, volume)
cop(available, be)
root(ROOT, available)
case(publisher, from)
det(publisher, the)
obl(available, publisher)
case($, for)
nmod(publisher, $)
nummod($, 14.00)
cc($, and)
conj($, $)
nummod($, 16.00)
punct($, ,)
advmod($, respectively)
punct(2, .)
nummod(organization, 2)
case(5, -)
nmod(2, 5)
punct(organization, .)
det(organization, the)
compound(Institute, Groth)
compound(organization, Institute)
parataxis(available, organization)
punct(organization, :)
punct(organization, ``)
det(Institute, the)
compound(Institute, Groth)
nsubj(activity, Institute)
punct(Institute, '')
punct(Institute, ,)
nsubj:pass(establish, which)
aux:pass(establish, be)
acl:relcl(Institute, establish)
case(1958, in)
obl(establish, 1958)
punct(activity, ,)
cop(activity, be)
det(activity, a)
compound(activity, group)
root(ROOT, activity)
acl(activity, affiliate)
case(Department, with)
det(Department, the)
compound(Department, physic)
obl(affiliate, Department)
case(University, of)
det(University, the)
compound(University, Pennsylvania)
compound(University, State)
nmod(Department, University)
punct(University, ,)
compound(Park, University)
appos(University, Park)
punct(Park, ,)
appos(Park, Pa.)
punct(activity, .)
nsubj(director, Ray)
flat(Ray, pepinsky)
cop(director, be)
det(director, the)
obj(derive, director)
punct(director, .)
det(Institute, the)
nsubj(derive, Institute)
root(ROOT, derive)
nmod:poss(name, its)
obj(derive, name)
case(Paul, from)
nmod(name, Paul)
flat(Paul, Von)
flat(Paul, Groth)
case(Paul, 's)
compound(Krystallographie, Chemische)
flat(Paul, Krystallographie)
punct(Chemische, ,)
det(work, a)
nummod(volume, five)
punct(volume, -)
compound(work, volume)
appos(Krystallographie, work)
nsubj(appear, which)
acl:relcl(work, appear)
case(1906, between)
obl(appear, 1906)
cc(1919, and)
conj(1906, 1919)
punct(derive, .)
det(staff, the)
compound(staff, resident)
nsubj(large, staff)
cop(large, be)
root(ROOT, large)
cc(consist, and)
conj(large, consist)
case(assistant, of)
amod(assistant, professional)
nmod(consist, assistant)
punct(student, ,)
compound(student, graduate)
conj(assistant, student)
punct(abstractor, ,)
conj(assistant, abstractor)
punct(librarian, ,)
conj(assistant, librarian)
punct(editor, ,)
amod(editor, technical)
conj(assistant, editor)
punct(operator, ,)
compound(operator, machine)
conj(assistant, operator)
punct(help, ,)
amod(help, secretarial)
conj(assistant, help)
punct(other, ,)
cc(other, and)
conj(assistant, other)
punct(large, .)
expl(be, there)
root(ROOT, be)
advmod(be, also)
amod(member, corresponding)
nsubj(be, member)
cc(group, and)
amod(group, outside)
amod(group, advisory)
conj(member, group)
punct(be, .)
det(Office, the)
compound(Force, Air)
compound(Office, Force)
nsubj(provide, Office)
case(Research, of)
compound(Research, Scientific)
nmod(Office, Research)
aux(provide, have)
root(ROOT, provide)
amod(assistance, financial)
obj(provide, assistance)
case(stage, in)
det(stage, the)
amod(stage, early)
obl(provide, stage)
case(program, of)
det(Institute, the)
nmod:poss(program, Institute)
case(Institute, 's)
nmod(stage, program)
punct(provide, .)
root(ROOT, substance)
punct(substance, :)
det(substance, all)
amod(substance, crystalline)
appos(substance, substance)
cc(material, and)
amod(material, other)
amod(state, solid)
punct(state, -)
compound(material, state)
conj(substance, material)
punct(substance, .)
root(ROOT, property)
punct(property, :)
det(aim, the)
nsubj(be, aim)
root(ROOT, be)
mark(collect, to)
ccomp(be, collect)
det(range, a)
advmod(broad, very)
amod(range, broad)
obj(collect, range)
case(data, of)
amod(data, physical)
punct(chemical, ,)
conj(physical, chemical)
punct(morphological, ,)
conj(physical, morphological)
punct(structural, ,)
cc(structural, and)
conj(physical, structural)
nmod(range, data)
case(crystals, for)
nmod(data, crystals)
case(scale, on)
det(scale, a)
amod(scale, encyclopedic)
nmod(crystals, scale)
cc(seek, and)
mark(seek, to)
conj(collect, seek)
det(correlation, all)
amod(correlation, possible)
amod(correlation, useful)
cc(revealing, and)
conj(useful, revealing)
obj(seek, correlation)
case(property, of)
nmod(correlation, property)
case(structure, with)
amod(structure, internal)
nmod(property, structure)
punct(be, .)
root(ROOT, source)
case(data, of)
nmod(source, data)
punct(source, : )
det(stage, the)
amod(stage, first)
nsubj(center, stage)
case(operation, of)
nmod(stage, operation)
aux(center, have)
root(ROOT, center)
case(image, on)
det(image, the)
compound(image, literature)
obl(center, image)
case(tabulation, of)
amod(tabulation, critical)
cc(summarize, or)
conj(critical, summarize)
nmod(image, tabulation)
case(index, such)
fixed(such, as)
det(index, the)
compound(index, Barker)
nmod(tabulation, index)
punct(center, .)
nsubj(follow, coverage)
case(literature, of)
amod(literature, primary)
nmod(coverage, literature)
aux(follow, will)
root(ROOT, follow)
punct(follow, .)
amod(data, Unpublished)
nsubj(available, data)
aux(available, will)
cop(available, be)
root(ROOT, available)
case(Groth, to)
det(Groth, the)
obl(available, Groth)
flat(Groth, institute)
case(group, from)
amod(group, cooperate)
obl(available, group)
cc(individual, and)
conj(group, individual)
punct(available, .)
root(ROOT, criticality)
punct(criticality, :)
amod(evaluation, critical)
nsubj(aim, evaluation)
case(data, of)
det(data, all)
nmod(evaluation, data)
acl(data, compile)
cop(aim, be)
advmod(aim, not)
det(aim, a)
amod(aim, primary)
appos(criticality, aim)
case(project, of)
det(project, this)
nmod(aim, project)
punct(criticality, .)
advmod(reveal, however)
punct(reveal, ,)
det(correlation, the)
amod(correlation, propose)
nsubj(reveal, correlation)
case(property, of)
det(property, the)
amod(property, many)
amod(property, interrelate)
nmod(correlation, property)
case(crystals, of)
nmod(property, crystals)
aux(reveal, will)
root(ROOT, reveal)
obj(reveal, discrepancy)
case(data, in)
det(data, the)
amod(data, record)
nmod(discrepancy, data)
cc(suggest, and)
conj(reveal, suggest)
obj(suggest, area)
case(reinvestigation, for)
nmod(area, reinvestigation)
punct(reveal, .)
case(addition, in)
obl(permit, addition)
punct(permit, ,)
det(availability, the)
nsubj(permit, availability)
case(computer, of)
nmod(availability, computer)
aux(permit, will)
root(ROOT, permit)
obj(permit, recalculation)
cc(refinement, and)
conj(recalculation, refinement)
case(information, of)
amod(information, much)
amod(information, structural)
nmod(recalculation, information)
punct(permit, .)
root(ROOT, use)
case(nomenclature, of)
nmod(use, nomenclature)
punct(symbol, ,)
conj(nomenclature, symbol)
punct(unit, ,)
conj(nomenclature, unit)
punct(use, ,)
amod(constant, physical)
parataxis(use, constant)
punct(use, : )
case(card, for)
amod(card, punch)
punct(card, -)
obl(conform, card)
cc(storage, or)
compound(storage, tape)
conj(card, storage)
case(information, of)
nmod(storage, information)
det(value, all)
compound(value, literature)
nsubj:pass(conform, value)
aux(conform, must)
aux:pass(conform, be)
root(ROOT, conform)
case(language, to)
det(language, a)
amod(language, common)
obl(conform, language)
punct(conform, .)
case(way, in)
det(way, this)
obl(realize, way)
det(degree, a)
nsubj:pass(realize, degree)
case(unification, of)
nmod(degree, unification)
case(nomenclature, of)
nmod(unification, nomenclature)
punct(symbol, ,)
conj(nomenclature, symbol)
punct(unit, ,)
cc(unit, and)
conj(nomenclature, unit)
aux(realize, will)
aux:pass(realize, be)
root(ROOT, realize)
punct(realize, .)
mark(differ, because)
amod(class, individual)
nsubj(differ, class)
case(food, of)
nmod(class, food)
advcl(develop, differ)
case(requirement, in)
nmod:poss(requirement, they)
obl(differ, requirement)
case(preservation, for)
nmod(requirement, preservation)
punct(develop, ,)
det(number, a)
nsubj:pass(develop, number)
case(method, of)
nmod(number, method)
aux(develop, have)
aux:pass(develop, be)
root(ROOT, develop)
case(year, over)
det(year, the)
obl(develop, year)
acl(year, involve)
obj(involve, one)
cc(combination, or)
det(combination, a)
conj(one, combination)
case(procedure, of)
nmod(combination, procedure)
case(dehydration, such)
fixed(such, as)
nmod(combination, dehydration)
punct(fermentation, ,)
conj(dehydration, fermentation)
punct(salt, ,)
conj(dehydration, salt)
punct(treatment, ,)
amod(treatment, chemical)
conj(dehydration, treatment)
punct(can, ,)
conj(dehydration, can)
punct(refrigeration, ,)
conj(dehydration, refrigeration)
punct(freezing, ,)
cc(freezing, and)
conj(dehydration, freezing)
punct(develop, .)
det(objective, the)
amod(objective, basic)
nsubj(be, objective)
case(instance, in)
det(instance, each)
nmod(objective, instance)
root(ROOT, be)
mark(make, to)
ccomp(be, make)
amod(supplies, available)
obj(make, supplies)
case(food, of)
nmod(supplies, food)
case(interval, during)
det(interval, the)
obl(make, interval)
case(harvest, between)
nmod(interval, harvest)
cc(slaughter, or)
conj(harvest, slaughter)
punct(make, ,)
mark(minimize, to)
advcl(make, minimize)
obj(minimize, loss)
acl(loss, result)
case(action, from)
det(action, the)
obl(result, action)
case(microorganism, of)
nmod(action, microorganism)
cc(insect, and)
conj(microorganism, insect)
punct(make, ,)
cc(make, and)
mark(make, to)
conj(result, make)
obj(make, it)
xcomp(make, possible)
mark(transport, to)
advcl(possible, transport)
obj(transport, food)
case(area, from)
det(area, the)
obl(transport, area)
case(harvest, of)
nmod(area, harvest)
cc(production, or)
conj(harvest, production)
case(area, to)
nmod(area, area)
case(consumption, of)
nmod(area, consumption)
punct(be, .)
case(year, in)
amod(year, earlier)
obl(related, year)
punct(related, ,)
det(preservation, the)
nsubj(related, preservation)
case(food, of)
nmod(preservation, food)
cop(related, be)
advmod(related, essentially)
root(ROOT, related)
case(survival, to)
obl(related, survival)
punct(related, .)
case(atmosphere, in)
det(atmosphere, the)
advmod(sophisticated, more)
amod(atmosphere, sophisticated)
obl(seek, atmosphere)
case(nation, of)
nmod:poss(nation, today)
case(today, 's)
amod(nation, develop)
nmod(atmosphere, nation)
punct(seek, ,)
compound(preservation, food)
punct(preservation, -)
compound(technique, preservation)
nsubj(seek, technique)
aux(seek, have)
root(ROOT, seek)
advmod(seek, also)
mark(bring, to)
xcomp(seek, bring)
obj(bring, variety)
punct(freshness, ,)
compound(freshness, peak)
conj(variety, freshness)
punct(taste, ,)
cc(taste, and)
amod(taste, optimum)
conj(variety, taste)
cc(flavor, and)
conj(taste, flavor)
case(food, in)
nmod(taste, food)
case(cost, at)
amod(cost, reasonable)
nmod(food, cost)
case(consumer, to)
det(consumer, the)
nmod(cost, consumer)
punct(seek, .)
case(development, with)
det(development, the)
obl(attract, development)
case(technology, of)
amod(technology, nuclear)
nmod(development, technology)
punct(material, ,)
amod(material, isotopic)
conj(technology, material)
punct(source, ,)
cc(source, and)
compound(source, machine)
compound(source, radiation)
conj(technology, source)
case(year, in)
amod(year, recent)
nmod(source, year)
punct(attract, ,)
det(possibility, the)
nsubj(attract, possibility)
mark(apply, of)
acl(possibility, apply)
amod(radiation, ionize)
obj(apply, radiation)
case(preservation, to)
det(preservation, the)
obl(apply, preservation)
case(food, of)
nmod(preservation, food)
root(ROOT, attract)
det(attention, the)
obj(attract, attention)
case(investigator, of)
nmod(attention, investigator)
case(States, in)
det(States, the)
compound(States, United)
nmod(investigator, States)
cc(world, and)
case(world, throughout)
det(world, the)
conj(States, world)
punct(attract, .)
det(hope, a)
amod(hope, early)
nsubj:pass(dispell, hope)
mark(answer, that)
nsubj(answer, irradiation)
aux(answer, might)
cop(answer, be)
det(answer, the)
amod(answer, ultimate)
acl(hope, answer)
case(problem, to)
advmod(dispell, practically)
det(problem, all)
compound(preservation, food)
compound(problem, preservation)
nsubj:pass(dispell, problem)
aux:pass(dispell, be)
advmod(dispell, soon)
root(ROOT, dispell)
punct(dispell, .)
nsubj(remain, Interest)
root(ROOT, remain)
punct(remain, ,)
advmod(remain, however)
punct(remain, ,)
case(possibility, in)
det(possibility, the)
obl(remain, possibility)
mark(serve, that)
nsubj(serve, it)
aux(serve, would)
acl(possibility, serve)
case(method, as)
det(method, a)
amod(method, useful)
amod(method, supplementary)
obl(serve, method)
mark(counteracting, for)
acl(method, counteracting)
compound(loss, spoilage)
obj(counteracting, loss)
cc(preserve, and)
mark(preserve, for)
conj(counteracting, preserve)
det(food, some)
obj(preserve, food)
case(cost, at)
amod(cost, lower)
advmod(all, over)
punct(all, -)
det(cost, all)
obl(preserve, cost)
mark(freezing, than)
acl(cost, freezing)
punct(employ, ,)
cc(employ, or)
mark(employ, without)
conj(freezing, employ)
obj(employ, heat)
cc(chemical, or)
conj(heat, chemical)
case(alteration, with)
nmod:poss(alteration, they)
amod(alteration, attendant)
compound(alteration, taste)
obl(employ, alteration)
punct(remain, . )
nsubj(microorganism, factor)
amod(factor, responsible)
case(spoilage, for)
det(spoilage, the)
obl(responsible, spoilage)
case(food, of)
nmod(spoilage, food)
det(factor, the)
amod(factor, chief)
nmod(factor, factor)
amod(factor, responsible)
case(spoilage, for)
det(spoilage, the)
obl(responsible, spoilage)
case(foodstuff, of)
amod(foodstuff, fresh)
nmod(spoilage, foodstuff)
cop(microorganism, be)
punct(1, ()
nummod(microorganism, 1)
punct(1, ))
root(ROOT, microorganism)
case(bacteria, such)
fixed(such, as)
nmod(microorganism, bacteria)
punct(mold, ,)
conj(bacteria, mold)
punct(yeast, ,)
cc(yeast, and)
conj(bacteria, yeast)
punct(enzyme, ,)
punct(2, ()
nummod(enzyme, 2)
punct(2, ))
conj(bacteria, enzyme)
punct(insect, ,)
punct(insect, ()
nummod(insect, 3)
punct(insect, ))
conj(enzyme, insect)
punct(sprout, ,)
punct(sprout, ()
nummod(sprout, 4)
punct(sprout, ))
conj(insect, sprout)
punct(reaction, ,)
cc(5, and)
punct(5, ()
nummod(reaction, 5)
punct(5, ))
amod(reaction, chemical)
conj(insect, reaction)
punct(insect, .)
nsubj(responsible, Microorganisms)
cop(responsible, be)
advmod(responsible, often)
root(ROOT, responsible)
case(spoilage, for)
det(spoilage, the)
amod(spoilage, rapid)
obl(responsible, spoilage)
case(food, of)
nmod(spoilage, food)
punct(responsible, .)
case(concern, of)
amod(concern, special)
obl(produce, concern)
aux(produce, be)
det(growth, the)
nsubj(produce, growth)
case(bacteria, of)
nmod(growth, bacteria)
case(botulinum, such)
fixed(such, as)
compound(botulinum, Clostridium)
nmod(growth, botulinum)
nsubj(generate, which)
acl:relcl(botulinum, generate)
amod(product, poisonous)
obj(generate, product)
punct(action, .)
amod(action, Enzymatic)
nsubj(produce, action)
case(food, in)
amod(food, store)
nmod(action, food)
root(ROOT, produce)
obj(produce, change)
nsubj(affect, which)
aux(affect, can)
advmod(affect, adversely)
acl:relcl(change, affect)
det(appearance, the)
obj(affect, appearance)
case(food, of)
nmod(appearance, food)
cc(palatability, or)
nmod:poss(palatability, its)
conj(food, palatability)
punct(produce, .)
root(ROOT, spoilage)
case(result, by)
amod(action, chemical)
compound(result, action)
nmod(spoilage, result)
case(reaction, from)
det(reaction, the)
nmod(spoilage, reaction)
case(group, of)
nummod(group, one)
nmod(reaction, group)
case(component, of)
nmod(group, component)
case(food, in)
det(food, the)
nmod(group, food)
case(other, with)
nmod(food, other)
cc(environment, or)
case(environment, with)
nmod:poss(environment, its)
conj(other, environment)
punct(corrosion, ,)
case(corrosion, as)
case(corrosion, in)
nmod(reaction, corrosion)
case(wall, of)
det(wall, the)
nmod(corrosion, wall)
case(container, of)
compound(container, metal)
nmod(wall, container)
cc(reaction, or)
det(reaction, the)
conj(wall, reaction)
case(fat, of)
nmod(reaction, fat)
case(oxygen, with)
nmod(fat, oxygen)
case(air, in)
det(air, the)
nmod(oxygen, air)
mark(produce, to)
acl(oxygen, produce)
obj(produce, rancidity)
punct(spoilage, .)
nsubj(phenomenon, sprout)
cop(phenomenon, be)
det(phenomenon, a)
advmod(occur, naturally)
amod(phenomenon, occur)
root(ROOT, phenomenon)
case(potatoe, in)
amod(potatoe, store)
nmod(phenomenon, potatoe)
punct(onion, ,)
conj(potatoe, onion)
punct(carrot, ,)
conj(potatoe, carrot)
punct(beet, ,)
conj(potatoe, beet)
punct(vegetable, ,)
cc(vegetable, and)
amod(vegetable, similar)
compound(vegetable, root)
conj(potatoe, vegetable)
punct(phenomenon, .)
compound(infestation, insect)
nsubj(problem, infestation)
cop(problem, be)
det(problem, a)
root(ROOT, problem)
case(importance, of)
nmod(problem, importance)
advmod(grain, chiefly)
case(grain, in)
amod(grain, store)
nmod(problem, grain)
punct(problem, .)
det(presence, the)
nsubj(introduce, presence)
case(organisms, of)
amod(organisms, parasitic)
nmod(presence, organisms)
case(spiralis, such)
fixed(such, as)
compound(spiralis, Trichinella)
nsubj(introduce, spiralis)
case(pork, in)
nmod(spiralis, pork)
root(ROOT, introduce)
det(factor, another)
obj(introduce, factor)
nsubj:pass(deal, which)
aux(deal, must)
aux:pass(deal, be)
acl:relcl(factor, deal)
obl(deal, with)
case(processing, in)
compound(processing, food)
obl(deal, processing)
punct(introduce, .)
mark(permit, to)
advcl(accomplish, permit)
det(storage, the)
obj(permit, storage)
case(food, of)
nmod(storage, food)
case(period, for)
amod(period, long)
nmod(storage, period)
case(time, of)
nmod(period, time)
punct(accomplish, ,)
det(method, a)
nsubj(accomplish, method)
case(preservation, of)
nmod(method, preservation)
aux(accomplish, must)
root(ROOT, accomplish)
det(destruction, the)
obj(accomplish, destruction)
case(microorganism, of)
nmod(destruction, microorganism)
cc(inhibition, and)
conj(microorganism, inhibition)
case(action, of)
amod(action, enzymatic)
nmod(microorganism, action)
punct(accomplish, .)
det(term, the)
nsubj(apply, term)
punct(sterilization, ``)
nsubj(apply, sterilization)
punct(sterilization, '')
root(ROOT, apply)
case(method, to)
obl(apply, method)
acl(method, involve)
advmod(complete, essentially)
amod(destruction, complete)
obj(involve, destruction)
case(microorganism, of)
det(microorganism, all)
nmod(destruction, microorganism)
punct(apply, .)
nsubj:pass(store, food)
acl(food, treat)
case(manner, in)
det(manner, this)
obl(treat, manner)
cc(protect, and)
conj(treat, protect)
case(recontamination, from)
obl(protect, recontamination)
case(method, by)
amod(method, aseptic)
obl(protect, method)
case(package, of)
nmod(method, package)
cc(containment, and)
conj(package, containment)
advmod(store, presumably)
aux(store, could)
aux:pass(store, be)
root(ROOT, store)
case(period, for)
amod(period, long)
obl(store, period)
case(refrigeration, without)
obl(store, refrigeration)
punct(store, .)
det(process, the)
nsubj(involve, process)
case(pasteurization, of)
punct(pasteurization, ``)
nmod(process, pasteurization)
punct(pasteurization, '')
root(ROOT, involve)
amod(treatment, milder)
cc(prolong, and)
advmod(prolong, less)
conj(milder, prolong)
compound(treatment, heat)
obj(involve, treatment)
nsubj(accomplish, which)
acl:relcl(treatment, accomplish)
det(destruction, the)
obj(accomplish, destruction)
case(most, of)
nmod(destruction, most)
punct(all, ,)
cc(all, but)
advmod(all, not)
conj(most, all)
punct(all, ,)
case(microorganism, of)
det(microorganism, the)
nmod(all, microorganism)
punct(involve, .)
advmod(severe, less)
amod(treatment, severe)
amod(treatment, thermal)
nsubj(serve, treatment)
case(blanch, as)
case(blanch, by)
nmod(treatment, blanch)
cc(scald, or)
conj(blanch, scald)
root(ROOT, serve)
mark(inactivate, to)
xcomp(serve, inactivate)
obj(inactivate, enzyme)
punct(effect, .)
amod(effect, general)
obj(serve, effect)
mark(cause, of)
compound(radiation, ionize)
compound(radiation, radiation)
compound(radiation, ionizing)
nsubj(cause, radiation)
aux(cause, can)
acl:relcl(effect, cause)
det(destruction, the)
obj(cause, destruction)
case(microorganism, of)
nmod(destruction, microorganism)
cc(insect, and)
conj(microorganism, insect)
acl(microorganism, involve)
case(spoilage, in)
compound(spoilage, food)
obl(involve, spoilage)
cc(inhibit, or)
punct(inhibit, ,)
case(dose, at)
amod(dose, lower)
obl(inhibit, dose)
punct(inhibit, ,)
aux(inhibit, can)
conj(cause, inhibit)
nmod:poss(action, they)
obj(inhibit, action)
punct(serve, .)
nsubj(furnish, it)
root(ROOT, furnish)
det(means, a)
obj(furnish, means)
mark(destroy, of)
acl(means, destroy)
obj(destroy, insect)
case(product, in)
amod(product, store)
compound(product, grain)
obl(destroy, product)
cc(organisms, as)
fixed(as, well)
fixed(as, as)
amod(organisms, certain)
amod(organisms, parasitic)
conj(product, organisms)
amod(organisms, present)
case(meat, in)
obl(present, meat)
punct(furnish, .)
nsubj(possible, deactivation)
case(enzyme, of)
nmod(deactivation, enzyme)
cop(possible, be)
advmod(possible, also)
root(ROOT, possible)
punct(possible, ,)
mark(require, although)
det(type, some)
nsubj(require, type)
advcl(possible, require)
advmod(heavy, extremely)
amod(dose, heavy)
obj(require, dose)
case(Mrad, of)
nummod(Mrad, 10)
nmod(dose, Mrad)
cc(more, or)
nummod(Mrad, more)
punct(possible, .)
case(flavor, because)
fixed(because, of)
amod(flavor, undesirable)
obl(accomplish, flavor)
punct(odor, ,)
conj(flavor, odor)
punct(color, ,)
conj(odor, color)
punct(palatability, ,)
cc(palatability, and)
advmod(low, generally)
amod(palatability, low)
conj(flavor, palatability)
acl(palatability, associate)
case(treatment, with)
compound(treatment, radiation)
obl(associate, treatment)
case(magnitude, of)
det(magnitude, this)
nmod(treatment, magnitude)
punct(accomplish, ,)
det(inactivation, the)
nsubj:pass(accomplish, inactivation)
case(enzyme, of)
nmod(inactivation, enzyme)
aux:pass(accomplish, be)
advmod(accomplish, best)
root(ROOT, accomplish)
case(irradiation, prior)
fixed(prior, to)
obl(accomplish, irradiation)
case(method, by)
det(method, the)
amod(method, conventional)
compound(processing, heat)
punct(processing, -)
compound(method, processing)
obl(accomplish, method)
case(blanch, of)
nmod(method, blanch)
punct(accomplish, .)
nsubj(retard, Radiation)
aux(retard, do)
advmod(retard, not)
root(ROOT, retard)
det(spoilage, the)
amod(spoilage, chemical)
obj(retard, spoilage)
case(food, of)
nmod(spoilage, food)
punct(retard, .)
nsubj(inhibit, it)
aux(inhibit, will)
punct(inhibit, ,)
advmod(inhibit, however)
punct(inhibit, ,)
root(ROOT, inhibit)
det(sprout, the)
obj(inhibit, sprout)
case(potatoe, of)
nmod(sprout, potatoe)
cc(vegetable, and)
amod(vegetable, other)
compound(vegetable, root)
conj(potatoe, vegetable)
punct(inhibit, .)
det(dose, the)
compound(dose, radiation)
nsubj(range, dose)
acl(dose, require)
case(preservation, for)
det(preservation, the)
obl(require, preservation)
case(food, of)
nmod(preservation, food)
cop(range, be)
case(range, in)
det(range, the)
amod(range, follow)
root(ROOT, range)
punct(range, :)
nummod(range, 1)
punct(1, .)
case(radiosterilization, for)
obl(destroy, radiosterilization)
punct(destroy, ,)
mark(destroy, to)
acl(range, destroy)
det(organisms, all)
obj(destroy, organisms)
case(preservation, for)
amod(term, long)
punct(term, -)
compound(preservation, term)
nmod(organisms, preservation)
punct(preservation, --)
advmod(4.5, about)
nummod(Mrad, 4.5)
appos(organisms, Mrad)
case(food, for)
amod(food, nonacid)
nmod(Mrad, food)
case(content, of)
amod(content, low)
compound(content, salt)
nmod(food, content)
punct(range, . )
nummod(vary, 2)
punct(2, .)
case(radiopasteurization, for)
obl(vary, radiopasteurization)
punct(destroy, ,)
mark(destroy, to)
advmod(destroy, partially)
advcl(vary, destroy)
obj(destroy, microorganism)
punct(vary, ;)
punct(vary, ;)
nsubj(vary, result)
root(ROOT, vary)
case(type, with)
obl(vary, type)
case(food, of)
nmod(type, food)
punct(condition, ,)
compound(condition, storage)
conj(food, condition)
punct(objective, ,)
cc(objective, and)
conj(food, objective)
case(treatment, of)
nmod(objective, treatment)
punct(order, --)
advmod(order, commonly)
case(order, of)
det(order, the)
nmod(objective, order)
case(Mrads, of)
nummod(Mrads, 0.2)
nmod(order, Mrads)
cc(Aj, but)
case(Aj, up)
fixed(up, to)
advmod(0.8, about)
nummod(Aj, 0.8)
conj(order, Aj)
punct(Aj, . )
appos(Aj, 3)
punct(Aj, .)
case(destruction, for)
nmod(Aj, destruction)
case(insect, of)
nmod(destruction, insect)
punct(destruction, --)
advmod(25,000, about)
nummod(Aj, 25,000)
appos(destruction, Aj)
punct(Aj, . )
nummod(inhibit, 4)
punct(4, .)
mark(inhibit, for)
root(ROOT, inhibit)
det(sprout, the)
obj(inhibit, sprout)
case(vegetable, of)
compound(vegetable, root)
nmod(sprout, vegetable)
punct(vegetable, --)
appos(sprout, 4,000)
case(10,000, to)
nmod(4,000, 10,000)
nsubj(preserve, Aj)
punct(Aj, .)
advcl(lead, preserve)
obj(preserve, food)
mark(ionize, with)
acl(food, ionize)
obj(ionize, radiation)
root(ROOT, lead)
case(effect, to)
det(effect, some)
amod(effect, undesirable)
compound(effect, side)
obl(lead, effect)
punct(effect, ,)
advmod(dosage, particularly)
case(dosage, at)
det(dosage, the)
amod(dosage, higher)
compound(dosage, radiation)
nmod(effect, dosage)
punct(lead, .)
case(respect, in)
det(respect, this)
obl(have, respect)
punct(have, ,)
det(palatability, the)
amod(palatability, general)
nsubj(have, palatability)
cc(acceptance, and)
amod(acceptance, individual)
conj(palatability, acceptance)
case(food, of)
advmod(radiosterilize, most)
amod(food, radiosterilize)
nmod(acceptance, food)
root(ROOT, have)
punct(have, ,)
case(date, to)
obl(have, date)
punct(find, ,)
aux:pass(find, be)
ccomp(have, find)
mark(low, to)
cop(low, be)
xcomp(find, low)
case(comparison, in)
obl(low, comparison)
case(food, with)
amod(food, fresh)
cc(process, and)
advmod(process, commercially)
conj(fresh, process)
nmod(comparison, food)
punct(find, . )
det(number, a)
nsubj(acceptable, number)
case(food, of)
nmod(number, food)
cop(acceptable, be)
advmod(acceptable, quite)
root(ROOT, acceptable)
case(taste, as)
compound(taste, regards)
obl(acceptable, taste)
cc(palatability, and)
conj(taste, palatability)
punct(acceptable, ,)
advmod(dosage, however)
punct(acceptable, ,)
case(dosage, at)
obl(acceptable, dosage)
advmod(less, substantially)
advmod(dosage, less)
fixed(less, than)
compound(level, sterilization)
obl(less, level)
punct(acceptable, . )
advmod(undergoe, moreover)
punct(undergoe, ,)
det(value, the)
amod(value, nutritive)
nsubj(undergoe, value)
case(food, of)
amod(food, irradiate)
nmod(value, food)
advmod(undergoe, apparently)
root(ROOT, undergoe)
obj(undergoe, little)
punct(undergoe, ,)
mark(change, if)
det(change, any)
punct(change, ,)
advcl(undergoe, change)
punct(undergoe, ,)
mark(affect, although)
nsubj:pass(affect, some)
case(vitamin, of)
det(vitamin, the)
amod(soluble, fat)
punct(soluble, -)
amod(vitamin, soluble)
nmod(some, vitamin)
aux:pass(affect, be)
advcl(undergoe, affect)
case(dose, by)
compound(dose, sterilization)
obl(affect, dose)
punct(undergoe, .)
compound(source, Radiation)
nsubj(suitable, source)
case(irradiation, for)
nmod(source, irradiation)
case(food, of)
nmod(irradiation, food)
punct(source, ,)
det(result, the)
conj(source, result)
acl(result, obtain)
xcomp(obtain, depend)
case(dose, upon)
det(dose, the)
obl(depend, dose)
cc(type, rather)
fixed(rather, than)
det(type, the)
amod(type, specific)
conj(dose, type)
case(radiation, of)
nmod(type, radiation)
punct(X-ray, ,)
cc(X-ray, and)
conj(radiation, X-ray)
punct(gamma, ,)
conj(radiation, gamma)
punct(radiation, ,)
cc(radiation, and)
amod(energy, high)
punct(energy, -)
compound(radiation, energy)
compound(radiation, electron)
nsubj(suitable, radiation)
cop(suitable, be)
root(ROOT, suitable)
punct(suitable, .)
advmod(have, aside)
case(availability, from)
obl(aside, availability)
cc(consideration, and)
amod(consideration, economic)
conj(availability, consideration)
punct(have, ,)
nsubj(have, each)
root(ROOT, have)
amod(advantage, certain)
amod(advantage, practical)
obj(have, advantage)
punct(have, ;)
punct(have, ;)
case(example, for)
obl(give, example)
punct(give, ,)
amod(ray, gamma)
nsubj(give, ray)
parataxis(have, give)
amod(penetration, deeper)
obj(give, penetration)
cc(focus, but)
aux(focus, can)
advmod(focus, not)
aux:pass(focus, be)
conj(give, focus)
cc(collimate, or)
conj(focus, collimate)
punct(focus, ,)
mark(split, whereas)
amod(beam, unidirectional)
compound(beam, electron)
nsubj:pass(split, beam)
aux(split, may)
aux:pass(split, be)
advcl(focus, split)
cc(direct, and)
conj(split, direct)
case(top, to)
cc:preconj(top, both)
det(top, the)
obl(direct, top)
cc(bottom, and)
conj(top, bottom)
case(package, of)
det(package, the)
compound(package, food)
nmod(top, package)
mark(irradiate, to)
aux:pass(irradiate, be)
acl(package, irradiate)
punct(have, .)
nsubj(involve, selection)
case(source, of)
det(source, a)
nmod(selection, source)
case(irradiation, for)
amod(irradiation, commercial)
nmod(source, irradiation)
aux(involve, would)
root(ROOT, involve)
obj(involve, consideration)
case(factor, of)
amod(factor, numerous)
nmod(consideration, factor)
case(rate, include)
amod(rate, require)
compound(rate, dose)
nmod(factor, rate)
punct(factor, ,)
compound(factor, load)
conj(rate, factor)
punct(throughput, ,)
conj(rate, throughput)
punct(convenience, ,)
conj(rate, convenience)
punct(safety, ,)
conj(rate, safety)
punct(cost, ,)
cc(cost, and)
advmod(important, most)
amod(cost, important)
punct(cost, ,)
conj(rate, cost)
punct(involve, .)
case(source, of)
det(source, the)
advmod(useful, potentially)
amod(source, useful)
obl(receive, source)
case(radiation, of)
compound(radiation, ionize)
nmod(source, radiation)
punct(source, ,)
amod(source, gamma)
conj(radiation, source)
punct(source, ,)
compound(source, cobalt)
punct(60, -)
nummod(cobalt, 60)
punct(137, ,)
compound(137, cesium)
punct(137, -)
nummod(product, 137)
punct(product, ,)
compound(product, fission)
conj(radiation, product)
punct(system, ,)
cc(system, or)
det(system, a)
compound(irradiation, reactor)
compound(loop, irradiation)
compound(system, loop)
conj(radiation, system)
acl(system, use)
det(material, a)
obj(use, material)
case(salt, such)
fixed(such, as)
det(salt, a)
compound(salt, indium)
nmod(material, salt)
aux(receive, have)
root(ROOT, receive)
amod(attention, most)
obj(receive, attention)
case(system, for)
compound(preservation, food)
punct(preservation, -)
compound(system, preservation)
nmod(attention, system)
punct(receive, .)
case(accelerator, of)
det(accelerator, the)
amod(accelerator, various)
compound(accelerator, particle)
obl(one, accelerator)
punct(one, ,)
det(machine, the)
compound(machine, Van)
flat(Van, De)
compound(machine, graff)
nsubj(one, machine)
punct(transformer, ,)
amod(transformer, resonant)
conj(machine, transformer)
punct(accelerator, ,)
cc(accelerator, and)
amod(accelerator, linear)
conj(machine, accelerator)
cop(one, be)
det(one, the)
amod(one, principal)
root(ROOT, one)
amod(one, available)
case(use, for)
amod(use, commercial)
obl(available, use)
punct(one, .)
nsubj(obstacle, cost)
case(energy, of)
det(energy, the)
amod(energy, effective)
nmod(cost, energy)
acl(energy, produce)
case(source, by)
det(source, these)
obl(produce, source)
cop(obstacle, be)
det(obstacle, a)
amod(obstacle, major)
root(ROOT, obstacle)
case(development, in)
det(development, the)
nmod(obstacle, development)
case(process, of)
compound(preservation, food)
punct(preservation, -)
compound(process, preservation)
nmod(development, process)
punct(obstacle, .)
amod(cost, estimate)
compound(cost, production)
nsubj(available, cost)
case(energy, of)
compound(energy, radiation)
nmod(cost, energy)
case(machine, from)
nmod(cost, machine)
cc(source, and)
amod(source, nuclide)
conj(machine, source)
nmod(cost, range)
case($, from)
nmod(range, $)
nummod($, 1)
case($, to)
nmod($, $)
nummod($, 10)
case(Aj, per)
nmod($, Aj)
punct(available, .)
amod(energy, conventional)
nsubj(available, energy)
case(food, for)
compound(food, processing)
nmod(energy, food)
cop(available, be)
root(ROOT, available)
case(range, in)
det(range, the)
obl(available, range)
case(cent, of)
case(most, at)
advmod(few, most)
det(cent, a)
amod(cent, few)
nmod(range, cent)
case(kwhr, per)
nmod(cent, kwhr)
case(power, for)
amod(power, electric)
nmod(cent, power)
cc(equivalent, and)
det(equivalent, the)
conj(cent, equivalent)
case(mill, of)
det(mill, a)
amod(mill, few)
nmod(equivalent, mill)
case(kwhr, per)
nmod(mill, kwhr)
case(steam, for)
compound(steam, process)
nmod(mill, steam)
punct(available, .)
nsubj(disadvantage, Radiation)
punct(disadvantage, ,)
advmod(disadvantage, therefore)
punct(disadvantage, ,)
cop(disadvantage, be)
case(disadvantage, at)
det(disadvantage, a)
amod(disadvantage, initial)
compound(disadvantage, cost)
root(ROOT, disadvantage)
advmod(cent, even)
case(cent, though)
advmod(cent, only)
nummod(cent, 1)
case(10, to)
nmod(1, 10)
compound(cent, per)
obl(disadvantage, cent)
advmod(much, as)
amod(energy, much)
compound(energy, radiation)
nmod(cent, energy)
mark(require, as)
compound(energy, heat)
nsubj:pass(require, energy)
aux:pass(require, be)
advcl(as, require)
case(radiopasteurization, for)
obl(require, radiopasteurization)
cc(radiosterilization, or)
conj(radiopasteurization, radiosterilization)
punct(disadvantage, .)
root(ROOT, what)
cop(what, be)
det(possibility, the)
nsubj(what, possibility)
case(cost, of)
amod(cost, lower)
compound(production, radiation)
compound(cost, production)
nmod(possibility, cost)
case(future, for)
det(future, the)
nmod(cost, future)
punct(what, ?)
punct(what, ?)
expl(estimate, it)
aux(estimate, have)
aux:pass(estimate, be)
root(ROOT, estimate)
mark(reach, that)
case(application, for)
obl(reach, application)
case(cost, on)
det(cost, a)
compound(scale, megawatt)
compound(cost, scale)
nmod(application, cost)
aux(reach, might)
ccomp(estimate, reach)
obj(reach, value)
case(neighborhood, in)
det(neighborhood, the)
obl(reach, neighborhood)
case(cent, of)
nummod(cent, 10)
nmod(neighborhood, cent)
case(kwhr, per)
nmod(cent, kwhr)
case(accelerator, for)
amod(scale, large)
punct(scale, -)
compound(accelerator, scale)
nmod(cent, accelerator)
cc(radiation, or)
case(radiation, for)
amod(radiation, gamma)
conj(accelerator, radiation)
acl(radiation, generate)
case(core, in)
det(core, a)
compound(core, reactor)
obl(generate, core)
punct(estimate, .)
det(reduction, no)
amod(reduction, comparable)
nsubj:pass(foreseen, reduction)
case(cost, in)
det(cost, the)
nmod(reduction, cost)
case(radiation, of)
amod(radiation, nuclide)
nmod(cost, radiation)
aux:pass(foreseen, be)
root(ROOT, foreseen)
punct(foreseen, .)
amod(projection, such)
nsubj:pass(foreseen, projection)
punct(foreseen, ,)
advmod(appear, however)
punct(appear, ,)
conj(foreseen, appear)
advmod(speculative, highly)
xcomp(appear, speculative)
cc(those, and)
det(capacity, the)
nsubj(those, capacity)
acl(capacity, involve)
cop(those, be)
advmod(those, far)
case(those, beyond)
conj(appear, those)
acl(those, foreseen)
case(facility, for)
compound(preservation, food)
punct(preservation, -)
compound(facility, preservation)
obl(foreseen, facility)
punct(foreseen, .)
mark(seasonal, because)
amod(activity, agricultural)
nsubj(seasonal, activity)
cop(seasonal, be)
advcl(impracticable, seasonal)
cc(scatter, and)
det(area, the)
nsubj:pass(scatter, area)
case(production, of)
nmod(area, production)
cc(harvest, and)
conj(production, harvest)
case(food, of)
amod(food, many)
nmod(harvest, food)
aux:pass(scatter, be)
advmod(scatter, widely)
conj(seasonal, scatter)
advmod(scatter, geographically)
punct(cost, ,)
cc(cost, and)
case(cost, because)
fixed(because, of)
det(cost, the)
amod(cost, high)
obl(scatter, cost)
mark(transport, of)
acl(cost, transport)
compound(item, bulk)
compound(item, food)
obj(transport, item)
det(distance, any)
amod(distance, substantial)
obj(transport, distance)
case(location, to)
det(location, a)
amod(location, central)
compound(location, processing)
nmod(distance, location)
punct(use, ,)
det(use, the)
conj(distance, use)
case(station, of)
amod(station, large)
amod(station, central)
compound(station, processing)
nmod(use, station)
punct(station, ,)
advmod(utilized, where)
amod(cost, low)
punct(cost, -)
compound(facility, cost)
compound(facility, radiation)
nsubj:pass(utilized, facility)
acl(facility, approach)
det(range, the)
compound(range, megawatt)
obj(approach, range)
aux(utilized, might)
aux:pass(utilized, be)
ccomp(impracticable, utilized)
punct(impracticable, ,)
cop(impracticable, be)
advmod(impracticable, inherently)
root(ROOT, impracticable)
punct(impracticable, .)
amod(status, present)
nsubj(be, status)
case(preservation, of)
compound(preservation, irradiation)
nmod(status, preservation)
case(food, of)
nmod(preservation, food)
det(objective, the)
nmod(status, objective)
case(sterilization, of)
amod(sterilization, complete)
nmod(objective, sterilization)
case(food, of)
nmod(sterilization, food)
root(ROOT, be)
mark(produce, to)
ccomp(be, produce)
det(product, a)
amod(product, wholesome)
cc(palatable, and)
conj(wholesome, palatable)
obj(produce, product)
amod(product, capable)
mark(store, of)
aux:pass(store, be)
advcl(capable, store)
case(refrigeration, without)
obl(store, refrigeration)
case(period, for)
amod(period, extend)
obl(store, period)
case(time, of)
nmod(period, time)
punct(reside, .)
amod(interest, Chief)
nsubj(reside, interest)
case(radiosterilization, in)
nmod(interest, radiosterilization)
parataxis(be, reside)
case(service, in)
det(service, the)
amod(service, military)
obl(reside, service)
punct(be, .)
case(they, for)
obl(consideration, they)
punct(consideration, ,)
csubj(consideration, provide)
amod(food, appetizing)
obj(provide, food)
case(battle, under)
nmod(food, battle)
cc(condition, or)
compound(condition, emergency)
conj(battle, condition)
cop(consideration, be)
det(consideration, a)
amod(consideration, paramount)
root(ROOT, consideration)
punct(consideration, .)
nsubj(require, they)
root(ROOT, require)
advmod(sterile, completely)
amod(food, sterile)
obj(require, food)
amod(food, capable)
mark(store, of)
aux:pass(store, be)
advcl(capable, store)
case(refrigeration, without)
obl(store, refrigeration)
punct(item, ,)
advmod(item, preferably)
conj(refrigeration, item)
advmod(cook, already)
conj(store, cook)
cc(ready, and)
conj(cook, ready)
mark(eat, to)
xcomp(ready, eat)
punct(require, .)
amod(value, high)
amod(value, nutritional)
nsubj(important, value)
punct(variety, ,)
conj(value, variety)
punct(palatability, ,)
conj(value, palatability)
punct(appearance, ,)
cc(appearance, and)
amod(appearance, appetizing)
conj(value, appearance)
cop(important, be)
root(ROOT, important)
case(reason, for)
obl(important, reason)
case(morale, of)
nmod(reason, morale)
punct(important, . )
nsubj(interest, Foods)
case(station, for)
compound(station, rear)
nmod(Foods, station)
punct(station, ,)
nsubj(require, which)
acl:relcl(station, require)
obj(require, cooking)
punct(refrigeration, ,)
cc(refrigeration, but)
det(refrigeration, no)
conj(cooking, refrigeration)
punct(interest, ,)
cop(interest, be)
advmod(interest, also)
case(interest, of)
root(ROOT, interest)
punct(interest, .)
case(interest, of)
amod(interest, primary)
obl(have, interest)
cop(meat, be)
nsubj(interest, meat)
punct(meat, .)
appos(meat, radiopasteurization)
punct(radiopasteurization, ,)
nsubj(produce, which)
acl:relcl(radiopasteurization, produce)
amod(change, fewer)
amod(change, adverse)
amod(change, sensory)
obj(produce, change)
case(product, in)
compound(product, food)
nmod(change, product)
punct(have, ,)
root(ROOT, have)
amod(usefulness, potential)
obj(have, usefulness)
mark(prolong, in)
acl(usefulness, prolong)
det(quality, the)
compound(quality, keeping)
obj(prolong, quality)
case(item, of)
amod(item, fresh)
cc(refrigerate, and)
conj(fresh, refrigerate)
compound(item, food)
nmod(quality, item)
punct(have, .)
advmod(reach, thus)
punct(reach, ,)
nsubj(reach, food)
advmod(process, so)
acl(food, process)
aux(reach, might)
root(ROOT, reach)
amod(market, more)
compound(market, remote)
obj(reach, market)
cc(permit, and)
conj(reach, permit)
det(consumer, the)
obj(permit, consumer)
mark(enjoy, to)
advcl(permit, enjoy)
advmod(produce, more)
xcomp(enjoy, produce)
case(freshness, at)
amod(freshness, peak)
obl(produce, freshness)
cc(palatability, and)
conj(freshness, palatability)
punct(reach, .)
amod(interest, commercial)
nsubj(type, interest)
cop(type, be)
advmod(type, chiefly)
case(type, in)
det(type, this)
root(ROOT, type)
case(treatment, of)
nmod(type, treatment)
punct(type, ,)
mark(interest, as)
cop(interest, be)
amod(interest, military)
advcl(type, interest)
case(condition, under)
amod(condition, peacetime)
nmod(interest, condition)
punct(type, .)
det(status, the)
amod(status, present)
nsubj:pass(discuss, status)
case(preservation, of)
compound(preservation, food)
nmod(status, preservation)
mark(discuss, by)
compound(radiation, ionize)
nsubj:pass(discuss, radiation)
aux:pass(discuss, be)
root(ROOT, discuss)
case(class, by)
compound(class, food)
obl(discuss, class)
case(paragraph, in)
det(paragraph, the)
amod(paragraph, follow)
obl(discuss, paragraph)
punct(discuss, .)
nsubj(receive, meat)
det(processing, the)
compound(processing, radiation)
nsubj(receive, processing)
case(meat, of)
nmod(processing, meat)
aux(receive, have)
root(ROOT, receive)
amod(investigation, extensive)
obj(receive, investigation)
punct(receive, .)
case(date, to)
obl(pork, date)
punct(pork, ,)
det(meat, the)
nummod(meat, one)
nsubj(pork, meat)
acl(meat, show)
amod(result, favorable)
obj(show, result)
case(dose, at)
compound(dose, sterilization)
obl(show, dose)
cop(pork, be)
root(ROOT, pork)
punct(pork, .)
case(interest, of)
amod(interest, particular)
obl(superior, interest)
case(service, to)
det(service, the)
amod(service, military)
nmod(interest, service)
cop(superior, be)
det(demonstration, the)
nsubj(superior, demonstration)
nsubj(roast, that)
acl:relcl(demonstration, roast)
obj(roast, pork)
punct(roast, ,)
case(radiosterilization, after)
obl(roast, radiosterilization)
punct(superior, ,)
cop(superior, be)
root(ROOT, superior)
case(palatability, in)
obl(superior, palatability)
case(product, to)
amod(product, available)
amod(product, can)
compound(product, pork)
nmod(palatability, product)
punct(product, .)
nsubj(unsuccessful, test)
case(beef, with)
nmod(test, beef)
aux(unsuccessful, have)
cop(unsuccessful, be)
advmod(unsuccessful, largely)
parataxis(superior, unsuccessful)
case(development, because)
fixed(because, of)
det(development, the)
obl(unsuccessful, development)
case(flavor, of)
case(flavor, off)
punct(flavor, -)
nmod(development, flavor)
punct(superior, . )
det(objective, a)
amod(objective, prime)
nsubj(be, objective)
case(program, of)
det(program, the)
compound(program, Army)
compound(Corps, Quartermaster)
compound(program, Corps)
nmod(objective, program)
root(ROOT, be)
mark(find, to)
ccomp(be, find)
det(reason, the)
obj(find, reason)
case(palatability, for)
nmod:poss(palatability, beef)
case(beef, 's)
amod(palatability, low)
nmod(reason, palatability)
cc(mean, and)
conj(find, mean)
mark(overcoming, of)
advcl(mean, overcoming)
obj(overcoming, it)
punct(mean, ,)
mark(item, since)
nsubj(item, it)
cop(item, be)
det(item, a)
amod(item, major)
cc(desirable, and)
conj(major, desirable)
compound(item, dietary)
advcl(overcoming, item)
punct(be, .)
advmod(need, partly)
mark(need, because)
amod(level, low)
punct(level, -)
compound(treatment, level)
compound(treatment, heat)
nsubj:pass(need, treatment)
aux:pass(need, be)
advcl(problem, need)
mark(inactivate, to)
xcomp(need, inactivate)
obj(inactivate, enzyme)
case(radiosterilization, before)
obl(inactivate, radiosterilization)
punct(have, ,)
advcl(have, treat)
amod(meat, fresh)
nsubj(have, meat)
advcl(inactivate, have)
det(appearance, the)
obj(have, appearance)
case(meat, of)
amod(meat, boil)
cc(can, or)
conj(boil, can)
nmod(appearance, meat)
punct(meat, .)
case(flavor, off)
punct(flavor, -)
nmod(meat, flavor)
cop(problem, be)
det(problem, a)
advmod(severe, less)
amod(problem, severe)
root(ROOT, problem)
case(radiopasteurization, with)
det(radiopasteurization, the)
nmod(problem, radiopasteurization)
case(meat, of)
nmod(radiopasteurization, meat)
punct(remain, ,)
cc(remain, but)
nsubj(remain, problem)
case(acceptability, of)
amod(acceptability, commercial)
nmod(problem, acceptability)
conj(problem, remain)
punct(remain, .)
amod(dose, Moderate)
compound(dose, radiation)
nsubj(extend, dose)
case(rad, of)
case(rad, from)
nummod(rad, 100,000)
case(200,000, to)
nmod(100,000, 200,000)
nmod(dose, rad)
aux(extend, can)
ccomp(remain, extend)
det(life, the)
compound(life, shelf)
obj(extend, life)
punct(f, ()
case(f, at)
nummod(f, 35)
nmod(life, f)
punct(f, ))
case(beef, of)
amod(beef, fresh)
nmod(life, beef)
case(day, from)
nummod(day, 5)
obl(extend, day)
case(week, to)
nummod(week, 5)
cc(6, or)
conj(5, 6)
nmod(day, week)
punct(extend, .)
advmod(remain, however)
punct(remain, ,)
det(problem, the)
nsubj(remain, problem)
case(acceptability, of)
compound(acceptability, consumer)
nmod(problem, acceptability)
root(ROOT, remain)
punct(remain, .)
det(process, the)
compound(blanch, preradiation)
compound(process, blanch)
nsubj(discolor, process)
root(ROOT, discolor)
det(beef, the)
amod(beef, treat)
obj(discolor, beef)
cc(liquid, and)
conj(beef, liquid)
conj(discolor, accumulate)
case(cut, in)
amod(cut, prepackage)
obl(accumulate, cut)
punct(discolor, .)
amod(beef, cook)
nsubj(assume, beef)
acl(beef, irradiate)
case(absence, in)
det(absence, the)
obl(irradiate, absence)
case(oxygen, of)
nmod(absence, oxygen)
root(ROOT, assume)
det(color, a)
amod(color, unnatural)
compound(color, pink)
obj(assume, color)
punct(color, .)
mark(irradiate, when)
nsubj:pass(irradiate, lamb)
cc(mutton, and)
conj(lamb, mutton)
aux:pass(irradiate, be)
advcl(assume, irradiate)
case(dose, at)
compound(dose, substerilization)
obl(irradiate, dose)
punct(become, ,)
det(meat, the)
nsubj(become, meat)
conj(irradiate, become)
xcomp(become, dehydrated)
punct(become, ,)
det(fat, the)
nsubj(become, fat)
conj(dehydrated, become)
xcomp(become, chalky)
punct(occur, ,)
cc(occur, and)
punct(occur, ,)
advmod(occur, again)
punct(occur, ,)
amod(change, unnatural)
nsubj(occur, change)
case(color, in)
nmod(change, color)
conj(become, occur)
punct(occur, .)
compound(meat, Ground)
nsubj(occur, meat)
case(sausage, such)
fixed(such, as)
amod(sausage, fresh)
compound(sausage, pork)
nmod(meat, sausage)
cc(hamburger, and)
conj(sausage, hamburger)
acl:relcl(meat, have)
det(life, a)
advmod(short, relatively)
amod(life, short)
compound(life, shelf)
obj(have, life)
case(refrigeration, under)
nmod(life, refrigeration)
punct(think, ,)
cc(think, and)
nsubj:pass(think, radiopasteurization)
aux(think, might)
aux:pass(think, be)
conj(have, think)
mark(offer, to)
xcomp(think, offer)
advmod(improve, distinctly)
amod(quality, improve)
compound(quality, keeping)
obj(offer, quality)
punct(assume, .)
advmod(one, however)
punct(one, ,)
det(problem, a)
amod(problem, major)
nsubj(one, problem)
advmod(problem, here)
cop(one, be)
root(ROOT, one)
case(scale, of)
nmod(one, scale)
case(processing, of)
nmod(scale, processing)
punct(one, ;)
punct(one, ;)
compound(meat, ground)
nsubj:pass(prepare, meat)
aux:pass(prepare, be)
advmod(prepare, usually)
parataxis(one, prepare)
case(meat, from)
compound(meat, scrap)
obl(prepare, meat)
case(level, at)
det(level, the)
amod(level, local)
obl(prepare, level)
punct(prepare, ,)
mark(require, whereas)
nsubj(require, irradiation)
case(volume, at)
amod(volume, economic)
nmod(irradiation, volume)
case(production, of)
nmod(volume, production)
aux(require, would)
advcl(prepare, require)
amod(processing, central)
obj(require, processing)
cc(facility, and)
compound(facility, distribution)
conj(processing, facility)
punct(one, .)
det(problem, the)
nsubj(same, problem)
case(change, of)
compound(change, color)
nmod(problem, change)
case(blanch, by)
nmod(problem, blanch)
cc(accumulation, and)
compound(accumulation, liquid)
conj(blanch, accumulation)
case(package, within)
det(package, the)
nmod(accumulation, package)
cop(same, be)
det(same, the)
root(ROOT, same)
case(cut, as)
case(cut, for)
amod(cut, solid)
obl(same, cut)
punct(same, .)
amod(item, specialty)
amod(item, cook)
nsubj(offer, item)
acl(item, contain)
compound(portion, meat)
obj(contain, portion)
punct(item, ,)
case(dinner, as)
case(dinner, in)
punct(dinner, ``)
amod(dinner, freeze)
obl(contain, dinner)
punct(dinner, '')
aux(offer, might)
root(ROOT, offer)
det(use, a)
amod(use, potential)
obj(offer, use)
case(radiopasteurization, for)
nmod(use, radiopasteurization)
punct(offer, .)
det(advantage, the)
amod(advantage, principal)
amod(advantage, potential)
nsubj(be, advantage)
aux(be, would)
root(ROOT, be)
mark(transport, that)
det(product, the)
amod(product, finish)
nsubj:pass(transport, product)
aux(transport, could)
aux:pass(transport, be)
ccomp(be, transport)
cc(store, and)
conj(transport, store)
case(cost, at)
amod(cost, lower)
obl(store, cost)
case(refrigeration, under)
nmod(cost, refrigeration)
mark(freeze, instead)
fixed(instead, of)
aux:pass(freeze, be)
advcl(transport, freeze)
punct(be, . )
det(item, a)
amod(item, refrigerate)
nsubj:pass(heat, item)
aux(heat, could)
advmod(heat, also)
aux:pass(heat, be)
root(ROOT, heat)
cc(serve, and)
conj(heat, serve)
case(time, in)
amod(time, less)
obl(serve, time)
mark(require, than)
aux:pass(require, be)
acl(time, require)
case(food, for)
amod(food, freeze)
obl(require, food)
case(type, of)
det(type, the)
amod(type, same)
nmod(food, type)
punct(heat, .)
amod(process, competitive)
nsubj(be, process)
mark(preserve, for)
acl(process, preserve)
obj(preserve, meat)
root(ROOT, be)
mark(can, by)
advcl(be, can)
cc(freezing, and)
conj(can, freezing)
punct(be, .)
nsubj(range, cost)
case(meat, of)
compound(meat, can)
nmod(cost, meat)
cop(range, be)
case(range, in)
det(range, the)
root(ROOT, range)
case(cent, of)
nummod(cent, 0.8)
case(5, to)
nmod(0.8, 5)
nmod(range, cent)
case(pound, per)
nmod(cent, pound)
punct(range, ;)
punct(range, ;)
nsubj(area, cost)
case(freezing, of)
nmod(cost, freezing)
cop(area, be)
case(area, in)
det(area, the)
parataxis(range, area)
case(cent, of)
nummod(cent, 2)
case(3.5, to)
nmod(2, 3.5)
nmod(area, cent)
case(pound, per)
nmod(cent, pound)
punct(range, .)
det(table, the)
nsubj(show, table)
case(page, on)
nmod(table, page)
nummod(page, 10)
root(ROOT, show)
obj(show, cost)
case(can, of)
nmod(cost, can)
cc(freezing, and)
conj(can, freezing)
conj(can, meat)
punct(cost, ,)
cc(cost, and)
amod(cost, estimate)
conj(cost, cost)
case(irradiation, for)
nmod(cost, irradiation)
case(condition, under)
amod(condition, certain)
amod(condition, assume)
nmod(cost, condition)
punct(show, .)
case(condition, under)
det(condition, the)
obl(note, condition)
case(comparison, of)
nmod(condition, comparison)
punct(note, ,)
nsubj:pass(note, it)
aux(note, will)
aux:pass(note, be)
root(ROOT, note)
mark(expensive, that)
punct(note, :)
punct(1, ()
nummod(expensive, 1)
punct(1, ))
nsubj(expensive, radiosterilization)
punct(Mrad, ()
case(Mrad, at)
nummod(Mrad, 3)
nmod(radiosterilization, Mrad)
punct(Mrad, ))
cop(expensive, be)
advmod(expensive, more)
ccomp(note, expensive)
case(can, than)
obl(expensive, can)
punct(expensive, ,)
advmod(expensive, particularly)
case(. , for)
det(. , the)
compound(. , cesium)
punct(cesium, -)
nummod(cesium, 137)
compound(. , source)
obl(expensive, . )
punct(2, ()
nummod(radiopasteurization, 2)
punct(2, ))
appos(. , radiopasteurization)
case(accelerator, by)
cc:preconj(accelerator, either)
det(accelerator, the)
compound(accelerator, electron)
nmod(radiopasteurization, accelerator)
cc(source, or)
compound(source, cesium)
punct(137, -)
nummod(source, 137)
conj(accelerator, source)
cop(range, be)
case(range, in)
det(range, the)
conj(accelerator, range)
case(cost, of)
compound(cost, freezing)
nmod(range, cost)
punct(3, . )
punct(3, ()
nummod(expensive, 3)
punct(3, ))
nsubj(expensive, Irradiation)
acl(Irradiation, use)
det(source, the)
amod(source, nuclide)
obj(use, source)
cop(expensive, be)
advmod(expensive, more)
conj(range, expensive)
case(use, than)
obl(expensive, use)
case(accelerator, of)
det(accelerator, a)
compound(accelerator, electron)
nmod(use, accelerator)
punct(note, .)
compound(result, poultry)
nsubj(successful, result)
case(test, of)
compound(test, irradiation)
nmod(result, test)
case(poultry, with)
nmod(test, poultry)
aux(successful, have)
cop(successful, be)
advmod(successful, quite)
root(ROOT, successful)
punct(successful, .)
case(dose, at)
advcl(successful, sterilize)
obj(sterilize, dose)
punct(result, ,)
amod(result, good)
compound(result, palatability)
conj(dose, result)
punct(result, ,)
case(minimum, with)
det(minimum, a)
nmod(result, minimum)
case(change, of)
nmod(minimum, change)
case(appearance, in)
nmod(change, appearance)
punct(taste, ,)
conj(appearance, taste)
punct(odor, ,)
cc(odor, and)
conj(appearance, odor)
punct(successful, .)
nsubj(successful, radiopasteurization)
aux(successful, have)
advmod(successful, also)
cop(successful, be)
root(ROOT, successful)
punct(extend, ,)
cc(extend, and)
det(life, the)
compound(life, shelf)
nsubj:pass(extend, life)
case(chicken, of)
nmod(life, chicken)
aux(extend, can)
aux:pass(extend, be)
conj(successful, extend)
case(month, to)
det(month, a)
obl(extend, month)
cc(more, or)
conj(month, more)
case(storage, under)
amod(storage, refrigerate)
nmod(month, storage)
mark(compare, as)
case(day, compare)
case(day, with)
advmod(10, about)
nummod(day, 10)
nmod(storage, day)
case(product, for)
det(product, the)
amod(product, untreated)
nmod(day, product)
punct(product, .)
amod(taste, acceptable)
nsubj:pass(retain, taste)
cc(odor, and)
conj(taste, odor)
aux:pass(retain, be)
acl:relcl(product, retain)
case(chicken, by)
det(chicken, the)
amod(chicken, irradiate)
cc(refrigerate, and)
conj(irradiate, refrigerate)
obl(retain, chicken)
punct(Acceptance, .)
nsubj(likely, Acceptance)
case(radiopasteurization, of)
nmod(Acceptance, radiopasteurization)
cop(likely, be)
acl:relcl(chicken, likely)
mark(delay, to)
aux:pass(delay, be)
xcomp(likely, delay)
punct(likely, ,)
advmod(reason, however)
punct(delay, ,)
case(reason, for)
nummod(reason, two)
obl(delay, reason)
punct(reason, :)
punct(1, ()
nummod(become, 1)
punct(1, ))
det(life, the)
compound(life, storage)
nsubj(become, life)
case(chicken, of)
amod(chicken, fresh)
nmod(life, chicken)
case(refrigeration, under)
nmod(chicken, refrigeration)
aux(become, be)
appos(reason, become)
det(problem, a)
amod(problem, minimal)
xcomp(become, problem)
case(sanitation, because)
fixed(because, of)
advmod(improve, constantly)
amod(sanitation, improve)
nmod(problem, sanitation)
cc(practice, and)
compound(practice, distribute)
conj(sanitation, practice)
punct(treatment, ,)
cc(treatment, and)
punct(2, ()
nummod(), 2)
punct(treatment, ))
conj(sanitation, treatment)
case(antibiotic, by)
nmod(treatment, antibiotic)
punct(measure, ,)
det(measure, a)
appos(treatment, measure)
advmod(approve, already)
acl(measure, approve)
case(Food, by)
det(Food, the)
compound(Food, Federal)
obl(approve, Food)
cc(administration, and)
compound(administration, drug)
conj(Food, administration)
punct(serve, ,)
conj(approve, serve)
mark(extend, to)
xcomp(serve, extend)
det(life, the)
compound(life, storage)
obj(extend, life)
case(chicken, of)
nmod(life, chicken)
case(cost, at)
det(cost, a)
amod(cost, low)
obl(extend, cost)
case(cent, of)
advmod(0.5, about)
nummod(cent, 0.5)
nmod(cost, cent)
case(pound, per)
nmod(cent, pound)
punct(successful, .)
compound(product, Seafood)
amod(product, Fresh)
compound(product, seafood)
nsubj(perishable, product)
cop(perishable, be)
advmod(perishable, extremely)
root(ROOT, perishable)
punct(perishable, .)
mark(serve, although)
nsubj(serve, refrigeration)
aux(serve, have)
advcl(possible, serve)
mark(extend, to)
xcomp(serve, extend)
det(life, the)
compound(life, storage)
obj(extend, life)
case(product, of)
det(product, these)
nmod(life, product)
punct(possible, ,)
advmod(increase, substantially)
amod(consumption, increase)
nsubj(possible, consumption)
aux(possible, might)
cop(possible, be)
root(ROOT, possible)
mark(remote, if)
nsubj(remote, area)
advcl(possible, remote)
case(seacoast, from)
det(seacoast, the)
obl(remote, seacoast)
aux(serve, could)
aux:pass(serve, be)
advcl(possible, serve)
advmod(serve, adequately)
punct(possible, . )
advmod(make, furthermore)
punct(make, ,)
nsubj(make, it)
aux(make, have)
root(ROOT, make)
det(assessment, a)
amod(assessment, exact)
obj(make, assessment)
case(mechanism, of)
det(mechanism, the)
compound(mechanism, removal)
nmod(assessment, mechanism)
amod(mechanism, possible)
punct(make, .)
det(instrument, the)
nsubj:pass(show, instrument)
aux:pass(show, be)
root(ROOT, show)
case(Fig., in)
obl(show, Fig.)
nummod(Fig., 1)
cc(consist, and)
conj(show, consist)
advmod(consist, essentially)
case(knife, of)
det(knife, a)
amod(knife, hard)
punct(knife, ,)
amod(knife, sharp)
punct(knife, ,)
compound(carbide, tungsten)
compound(knife, carbide)
obl(consist, knife)
nsubj:pass(push, which)
aux:pass(push, be)
acl:relcl(knife, push)
case(substrate, along)
det(substrate, the)
obl(push, substrate)
mark(remove, to)
advcl(push, remove)
det(coating, the)
obj(remove, coating)
punct(show, .)
det(force, the)
nsubj:pass(plot, force)
acl(force, require)
mark(accomplish, to)
xcomp(require, accomplish)
obj(accomplish, removal)
aux:pass(plot, be)
root(ROOT, plot)
punct(plot, ,)
case(means, by)
obl(plot, means)
case(recorder, of)
det(recorder, a)
amod(recorder, electronic)
nmod(means, recorder)
punct(means, ,)
case(distance, against)
obl(plot, distance)
case(removal, of)
nmod(distance, removal)
punct(plot, .)
mark(function, since)
det(force, the)
compound(force, removal)
nsubj(function, force)
cop(function, be)
det(function, a)
advcl(incorporate, function)
case(thickness, of)
compound(thickness, coating)
nmod(function, thickness)
punct(incorporate, ,)
det(pickup, a)
amod(pickup, differential)
compound(pickup, transformer)
nsubj:pass(incorporate, pickup)
aux(incorporate, have)
aux:pass(incorporate, be)
root(ROOT, incorporate)
case(instrument, into)
det(instrument, the)
obl(incorporate, instrument)
mark(measure, to)
advmod(measure, accurately)
advcl(incorporate, measure)
compound(thickness, film)
obj(measure, thickness)
punct(incorporate, .)
nsubj:pass(record, this)
punct(record, ,)
advmod(record, too)
punct(record, ,)
aux:pass(record, be)
root(ROOT, record)
case(distance, against)
obl(record, distance)
case(run, by)
det(run, a)
compound(run, repeat)
obl(record, run)
case(track, over)
det(track, the)
amod(track, same)
nmod(run, track)
advmod(cut, previously)
acl(track, cut)
punct(record, . )
det(number, a)
nsubj:pass(include, number)
case(feature, of)
compound(feature, adjustment)
nmod(number, feature)
aux:pass(include, be)
root(ROOT, include)
case(Hesiometer, in)
det(Hesiometer, the)
obl(include, Hesiometer)
mark(facilitate, to)
acl(Hesiometer, facilitate)
obj(facilitate, measurement)
cc(permit, and)
conj(facilitate, permit)
amod(removal, ready)
obj(permit, removal)
case(coating, of)
nmod(removal, coating)
acl(coating, deposit)
case(substrate, on)
amod(substrate, such)
obl(deposit, substrate)
case(iron, as)
nmod(substrate, iron)
cc(metal, and)
amod(metal, other)
conj(iron, metal)
punct(glass, ,)
conj(metal, glass)
punct(wood, ,)
conj(iron, wood)
punct(surface, ,)
cc(surface, and)
amod(surface, plastic)
conj(iron, surface)
punct(include, .)
det(measurement, the)
nsubj:pass(carry, measurement)
case(topcoat, of)
nmod(measurement, topcoat)
case(primer, on)
nmod(topcoat, primer)
aux(carry, can)
advmod(carry, also)
advmod(carry, readily)
aux:pass(carry, be)
root(ROOT, carry)
compound:prt(carry, out)
punct(carry, .)
compound(result, Hesiometer)
nsubj:pass(find, result)
aux(find, have)
aux:pass(find, be)
root(ROOT, find)
mark(compare, to)
xcomp(find, compare)
advmod(compare, excellently)
case(test, with)
amod(knife, manual)
compound(scratching, knife)
compound(test, scratching)
obl(compare, test)
punct(find, .)
det(method, the)
amod(method, instrumental)
nsubj(sensitive, method)
punct(sensitive, ,)
advmod(sensitive, however)
punct(sensitive, ,)
cop(sensitive, be)
advmod(100, about)
nummod(time, 100)
obl:npmod(more, time)
advmod(sensitive, more)
root(ROOT, sensitive)
cc(yield, and)
conj(sensitive, yield)
amod(result, numerical)
obj(yield, result)
nsubj:pass(repeat, which)
aux(repeat, can)
aux:pass(repeat, be)
advmod(repeat, accurately)
acl:relcl(result, repeat)
obl(repeat, at)
aux(repeat, will)
case(period, over)
det(period, a)
obl(repeat, period)
case(time, of)
nmod(period, time)
punct(sensitive, .)
mark(remove, if)
det(coating, a)
amod(shape, wedge)
punct(shape, -)
amod(coating, shape)
nsubj:pass(remove, coating)
mark(increase, of)
acl(coating, increase)
obj(increase, thickness)
aux:pass(remove, be)
advcl(observe, remove)
case(substrate, from)
det(substrate, a)
obl(remove, substrate)
case(instrument, by)
det(instrument, a)
obl(remove, instrument)
case(Hesiometer, like)
det(Hesiometer, the)
nmod(instrument, Hesiometer)
case(knife, with)
det(knife, a)
nmod(Hesiometer, knife)
case(angle, of)
amod(angle, constant)
compound(angle, rake)
nmod(knife, angle)
punct(observe, ,)
det(number, a)
nsubj:pass(observe, number)
case(mechanism, of)
compound(mechanism, removal)
nmod(number, mechanism)
aux:pass(observe, be)
advmod(observe, often)
root(ROOT, observe)
nsubj(depend, which)
ccomp(observe, depend)
case(thickness, upon)
det(thickness, the)
obl(depend, thickness)
case(coating, of)
det(coating, the)
nmod(thickness, coating)
punct(observe, .)
case(thickness, at)
amod(thickness, low)
obl(encounter, thickness)
det(phenomenon, a)
compound(phenomenon, cutting)
punct(cutting, ()
cc(shear, or)
conj(cutting, shear)
punct(shear, ))
nsubj:pass(encounter, phenomenon)
aux:pass(encounter, be)
advmod(encounter, often)
root(ROOT, encounter)
punct(encounter, .)
mark(become, as)
det(coating, the)
nsubj(become, coating)
advcl(change, become)
xcomp(become, thicker)
punct(change, ,)
det(cutting, the)
nsubj(change, cutting)
aux(change, may)
advmod(change, abruptly)
root(ROOT, change)
case(type, to)
det(type, a)
compound(type, crack)
obl(change, type)
case(failure, of)
nmod(type, failure)
punct(change, .)
mark(become, if)
det(coating, the)
nsubj(become, coating)
advcl(occur, become)
advmod(thicker, still)
xcomp(become, thicker)
punct(occur, ,)
det(failure, a)
compound(type, peel)
compound(failure, type)
nsubj(occur, failure)
advmod(occur, finally)
aux(occur, can)
root(ROOT, occur)
punct(occur, .)
det(appearance, the)
amod(appearance, typical)
nsubj:pass(illustrate, appearance)
case(mechanism, of)
det(mechanism, these)
amod(mechanism, various)
nmod(appearance, mechanism)
aux:pass(illustrate, be)
root(ROOT, illustrate)
case(Figs, in)
obl(illustrate, Figs)
punct(illustrate, .)
root(ROOT, 2)
punct(3, ,)
nummod(2, 3)
punct(4, ,)
cc(4, and)
conj(2, 4)
punct(4, ,)
nsubj(enlargement, which)
cop(enlargement, be)
amod(enlargement, single)
compound(enlargement, frame)
acl:relcl(4, enlargement)
case(movie, of)
amod(speed, high)
compound(movie, speed)
nmod(enlargement, movie)
acl(movie, take)
case(course, during)
det(course, the)
obl(take, course)
case(process, of)
det(process, the)
compound(removal, knife)
compound(process, removal)
nmod(course, process)
punct(2, .)
nsubj:pass(see, it)
aux(see, can)
aux:pass(see, be)
root(ROOT, see)
case(fig, from)
obl(see, fig)
punct(see, .)
nummod(involve, 2)
mark(involve, that)
det(removal, the)
compound(removal, cutting)
nsubj(involve, removal)
case(coating, of)
det(coating, a)
nmod(removal, coating)
case(substrate, from)
nmod:poss(substrate, its)
nmod(coating, substrate)
root(ROOT, involve)
amod(failure, pure)
amod(failure, cohesive)
obj(involve, failure)
case(coating, of)
det(coating, the)
nmod(failure, coating)
punct(2, .)
det(force, the)
amod(force, molecular)
nsubj(greater, force)
acl(force, hold)
det(coating, the)
obj(hold, coating)
case(substrate, to)
det(substrate, the)
obl(hold, substrate)
cop(greater, be)
advmod(greater, obviously)
root(ROOT, greater)
case(strength, than)
det(strength, the)
amod(strength, cohesive)
obl(greater, strength)
case(coating, of)
det(coating, the)
nmod(strength, coating)
cc(failure, and)
conj(coating, failure)
conj(greater, occur)
case(shear, by)
obl(occur, shear)
case(plane, along)
det(plane, a)
obl(occur, plane)
acl(plane, start)
case(tip, at)
det(tip, the)
obl(start, tip)
case(knife, of)
det(knife, the)
nmod(tip, knife)
cc(extend, and)
conj(start, extend)
case(surface, to)
det(surface, the)
compound(surface, coating)
obl(extend, surface)
punct(greater, .)
det(picture, the)
root(ROOT, picture)
case(Figs, of)
nmod(picture, Figs)
punct(picture, .)
nsubj(show, 3)
cc(4, and)
conj(3, 4)
root(ROOT, show)
det(type, the)
compound(type, crack)
cc(peel, and)
conj(crack, peel)
obj(show, type)
case(removal, of)
nmod(type, removal)
advmod(detach, where)
det(coating, the)
nsubj:pass(detach, coating)
aux:pass(detach, be)
acl:relcl(removal, detach)
case(failure, by)
obl(detach, failure)
case(region, in)
det(region, a)
nmod(failure, region)
nmod(region, at)
punct(close, ,)
cc(close, or)
conj(region, close)
obl(close, to)
punct(interface, ,)
det(interface, the)
obl(close, interface)
case(coating, between)
nmod(interface, coating)
cc(substrate, and)
conj(coating, substrate)
punct(show, .)
mark(require, if)
det(force, the)
nsubj(require, force)
advcl(plot, require)
mark(remove, to)
xcomp(require, remove)
det(coating, the)
obj(remove, coating)
aux:pass(plot, be)
root(ROOT, plot)
case(thickness, against)
compound(thickness, film)
obl(plot, thickness)
punct(thickness, ,)
det(graph, a)
appos(thickness, graph)
mark(illustrate, as)
advcl(plot, illustrate)
advmod(illustrate, schematically)
case(fig, in)
obl(illustrate, fig)
punct(plot, .)
nsubj(result, 5)
aux(result, may)
advmod(result, characteristically)
root(ROOT, result)
punct(result, .)
root(ROOT, here)
punct(here, ,)
nsubj(force, h)
cop(here, be)
det(force, the)
compound(force, coating)
compound(force, removal)
nsubj(here, force)
acl(force, measure)
advmod(measure, parallel)
case(surface, to)
det(surface, the)
obl(measure, surface)
case(substrate, of)
det(substrate, the)
nmod(surface, substrate)
cc(thickness, and)
nsubj(thickness, T)
cop(thickness, be)
det(thickness, the)
compound(thickness, film)
conj(force, thickness)
punct(force, .)
nsubj:pass(see, it)
aux(see, can)
aux:pass(see, be)
root(ROOT, see)
mark(characteristic, that)
det(force, the)
nsubj(characteristic, force)
cop(characteristic, be)
ccomp(see, characteristic)
case(process, of)
det(process, the)
compound(process, removal)
obl(characteristic, process)
cc(change, and)
conj(process, change)
advmod(change, abruptly)
mark(cut, from)
acl(change, cut)
case(crack, to)
obl(cut, crack)
case(removal, to)
compound(removal, peel)
obl(cut, removal)
punct(see, .)
advmod(see, also)
punct(see, ,)
expl(see, it)
aux(see, can)
aux:pass(see, be)
advmod(see, readily)
root(ROOT, see)
mark(show, that)
det(type, the)
compound(type, cutting)
cc(peel, and)
conj(cutting, peel)
nsubj(show, type)
case(failure, of)
nmod(type, failure)
ccomp(see, show)
det(response, a)
amod(response, steady)
compound(response, state)
obj(show, response)
punct(show, ,)
mark(nature, while)
det(mechanism, the)
compound(mechanism, crack)
nsubj(nature, mechanism)
cop(nature, be)
case(nature, of)
det(nature, a)
amod(nature, dynamic)
advcl(show, nature)
punct(see, .)
nsubj:pass(recall, it)
aux(recall, should)
aux:pass(recall, be)
root(ROOT, recall)
mark(occur, that)
det(mechanism, these)
nummod(mechanism, three)
nsubj(occur, mechanism)
aux(occur, can)
ccomp(recall, occur)
case(coating, on)
det(coating, the)
amod(coating, same)
obl(occur, coating)
acl(coating, deposit)
case(substrate, upon)
det(substrate, the)
amod(substrate, same)
obl(deposit, substrate)
advmod(function, merely)
case(function, as)
det(function, a)
obl(deposit, function)
case(change, of)
nmod(function, change)
case(thickness, in)
compound(thickness, coating)
nmod(change, thickness)
punct(recall, .)
advmod(identical, presumably)
det(strength, the)
amod(strength, interfacial)
compound(strength, bond)
nsubj(identical, strength)
cc(property, and)
amod(property, gross)
amod(property, cohesive)
conj(strength, property)
cop(identical, be)
root(ROOT, identical)
case(case, in)
det(case, each)
obl(identical, case)
punct(identical, .)
root(ROOT, what)
advmod(what, then)
punct(factor, ,)
cop(what, be)
det(factor, the)
nsubj(what, factor)
nsubj(contribute, that)
acl:relcl(factor, contribute)
case(phenomena, to)
det(phenomena, these)
obl(contribute, phenomena)
punct(factor, ?)
punct(factor, ?)
advmod(increase, why)
aux(increase, should)
det(adhesion, the)
punct(adhesion, ``)
amod(adhesion, practical)
root(ROOT, adhesion)
punct(adhesion, '')
case(coating, of)
det(coating, a)
nmod(adhesion, coating)
mark(assess, as)
acl(adhesion, assess)
case(change, by)
det(change, a)
compound(method, knife)
compound(change, method)
obl(assess, change)
punct(increase, ,)
advmod(increase, initially)
conj(assess, increase)
advmod(rapidly, rather)
advmod(increase, rapidly)
cc(decrease, and)
advmod(decrease, then)
conj(increase, decrease)
obj(decrease, stepwise)
case(value, to)
advmod(low, very)
amod(value, low)
nmod(stepwise, value)
mark(force, as)
det(knife, the)
nsubj:pass(force, knife)
aux:pass(force, be)
advcl(decrease, force)
case(coating, through)
det(coating, a)
obl(force, coating)
case(thickness, of)
amod(thickness, increase)
nmod(coating, thickness)
punct(increase, ?)
punct(increase, ?)
compound(mechanism, cut)
nsubj:pass(describe, mechanism)
case(failure, of)
amod(failure, cohesive)
nmod(mechanism, failure)
det(process, the)
compound(process, cutting)
punct(cutting, ()
cc(shear, or)
conj(cutting, shear)
punct(shear, ))
compound(process, removal)
nmod(mechanism, process)
aux(describe, have)
aux:pass(describe, be)
advmod(describe, previously)
root(ROOT, describe)
punct(describe, .)
nsubj:pass(find, it)
aux:pass(find, be)
root(ROOT, find)
mark(separate, that)
det(coating, the)
nsubj:pass(separate, coating)
aux:pass(separate, be)
ccomp(find, separate)
case(substrate, from)
nmod:poss(substrate, its)
obl(separate, substrate)
advmod(failure, entirely)
case(failure, by)
amod(failure, cohesive)
obl(separate, failure)
punct(find, .)
det(detail, the)
nsubj:pass(show, detail)
case(process, of)
det(process, the)
compound(process, removal)
nmod(detail, process)
aux:pass(show, be)
root(ROOT, show)
advmod(show, schematically)
case(fig, in)
obl(show, fig)
punct(show, .)
nummod(result, 6)
punct(6, .)
det(result, the)
amod(result, various)
compound(result, force)
root(ROOT, result)
case(reaction, from)
det(reaction, the)
nmod(result, reaction)
case(chip, of)
det(chip, the)
amod(chip, remove)
compound(chip, paint)
nmod(reaction, chip)
case(face, against)
det(face, the)
nmod(chip, face)
case(knife, of)
det(knife, the)
nmod(face, knife)
cc(plane, and)
case(plane, along)
det(plane, the)
compound(plane, shear)
conj(chip, plane)
punct(plane, ,)
nsubj(make, which)
acl:relcl(plane, make)
det(angle, a)
obj(make, angle)
punct(yf, **)
obj(make, yf)
case(substrate, with)
det(substrate, the)
nmod(yf, substrate)
punct(yf, .)
det(action, the)
nsubj(R, action)
cc(force, and)
compound(force, reaction)
conj(action, force)
cop(R, be)
root(ROOT, R)
cc(Af, and)
conj(R, Af)
punct(R, ,)
advmod(R, respectively)
punct(equal, ,)
cc(equal, and)
cop(equal, be)
conj(R, equal)
cc(opposite, and)
conj(equal, opposite)
case(direction, in)
obl(equal, direction)
punct(R, .)
det:predet(vector, all)
det(vector, the)
amod(vector, other)
compound(vector, force)
nsubj:pass(derive, vector)
aux:pass(derive, be)
root(ROOT, derive)
case(these, from)
obl(derive, these)
punct(derive, .)
nsubj(force, Af)
cop(force, be)
det(force, the)
root(ROOT, force)
acl(force, require)
mark(cut, to)
xcomp(require, cut)
det(coating, a)
obj(cut, coating)
case(T, of)
compound(T, thickness)
nmod(coating, T)
case(substrate, from)
det(substrate, the)
obl(cut, substrate)
punct(force, .)
nsubj(force, Af)
cop(force, be)
det(force, the)
compound(force, shear)
root(ROOT, force)
case(plane, along)
det(plane, the)
compound(plane, shear)
nmod(force, plane)
punct(force, ;)
punct(force, ;)
nsubj(force, Af)
cc(Af, and)
conj(Af, Af)
cop(force, be)
det(force, the)
compound(force, thrust)
parataxis(force, force)
acl(force, act)
case(coating, against)
obl(act, coating)
cc(knife, and)
conj(coating, knife)
punct(act, ,)
advmod(act, respectively)
punct(force, ;)
punct(force, ;)
nsubj(force, Af)
cop(force, be)
det(force, the)
amod(force, normal)
amod(force, compressive)
root(ROOT, force)
acl(force, act)
case(plane, on)
det(plane, the)
compound(plane, shear)
obl(act, plane)
punct(force, ;)
punct(force, ;)
nsubj(force, Af)
cop(force, be)
det(force, the)
compound(force, friction)
root(ROOT, force)
case(chip, between)
nmod(force, chip)
cc(surface, and)
compound(surface, knife)
conj(chip, surface)
punct(force, ,)
cc(force, and)
nsubj(force, p)
cop(force, be)
det(force, the)
amod(force, normal)
conj(force, force)
acl(force, act)
case(face, on)
det(face, the)
obl(act, face)
case(knife, of)
det(knife, the)
nmod(face, knife)
punct(angle, .)
punct(angle, **)
nsubj(angle, yc)
cop(angle, be)
det(angle, the)
compound(angle, rake)
parataxis(force, angle)
case(knife, of)
det(knife, the)
nmod(angle, knife)
punct(angle, ;)
punct(angle, ;)
punct(angle, **)
nsubj(angle, yf)
cop(angle, be)
det(angle, the)
parataxis(angle, angle)
det(plane, the)
compound(plane, shear)
nsubj(make, plane)
acl:relcl(angle, make)
case(substrate, with)
det(substrate, the)
obl(make, substrate)
punct(angle, ;)
punct(angle, ;)
punct(angle, **yt)
cop(angle, be)
det(angle, the)
compound(angle, friction)
parataxis(angle, angle)
punct(angle, ;)
punct(angle, ;)
cc(angle, and)
punct(angle, **)
nsubj(angle, yb)
cop(angle, be)
det(angle, the)
parataxis(angle, angle)
det(resultant, the)
nsubj(make, resultant)
acl:relcl(angle, make)
case(plane, with)
det(plane, the)
obl(make, plane)
case(substrate, of)
det(substrate, the)
nmod(plane, substrate)
punct(force, .)
det(analysis, a)
nsubj(show, analysis)
case(relationship, of)
det(relationship, the)
compound(relationship, vector)
nmod(analysis, relationship)
root(ROOT, show)
mark(angle, that)
det(angle, the)
compound(angle, rake)
ccomp(show, angle)
punct(angle, **)
appos(angle, yc)
cc(angle, and)
det(angle, the)
compound(angle, friction)
conj(yc, angle)
punct(show, **)
discourse(determine, yt)
parataxis(show, determine)
det(direction, the)
compound(direction, vector)
obj(determine, direction)
nsubj(determine, Af)
case(resultant, of)
det(resultant, the)
compound(resultant, force)
compound(R, resultant)
nmod(Af, R)
cc(Af, and)
conj(R, Af)
punct(R, .)
advmod(angle, consequently)
punct(angle, ,)
cc:preconj(angle, both)
det(angle, the)
compound(angle, rake)
conj(Af, angle)
case(knife, of)
det(knife, the)
nmod(angle, knife)
cc(friction, as)
fixed(as, well)
fixed(as, as)
det(friction, the)
conj(angle, friction)
acl(friction, occur)
case(back, between)
det(back, the)
obl(occur, back)
case(coating, of)
det(coating, the)
amod(coating, remove)
nmod(back, coating)
cc(front, and)
det(front, the)
nsubj(determine, front)
case(knife, of)
det(knife, the)
nmod(front, knife)
aux(determine, will)
root(ROOT, determine)
case(part, in)
amod(part, large)
obl(determine, part)
det(mechanism, the)
amod(mechanism, detailed)
obj(determine, mechanism)
case(process, of)
det(process, the)
compound(removal, cutting)
compound(process, removal)
nmod(mechanism, process)
punct(determine, .)
expl(difficult, it)
cop(difficult, be)
root(ROOT, difficult)
mark(measure, to)
csubj(difficult, measure)
det(direction, the)
obj(measure, direction)
cc(magnitude, and)
conj(direction, magnitude)
case(R, of)
nmod(direction, R)
advmod(measure, directly)
punct(difficult, .)
case(practice, in)
amod(practice, actual)
obl(force, practice)
punct(force, ,)
det(value, the)
nsubj(force, value)
advmod(readily, most)
advmod(amenable, readily)
amod(value, amenable)
case(measurement, to)
obl(amenable, measurement)
cop(force, be)
det(force, the)
compound(force, cutting)
root(ROOT, force)
nsubj(sufficient, Af)
cc(angle, and)
det(angle, the)
compound(angle, shear)
conj(Af, angle)
appos(angle, Aj)
punct(angle, .)
det(value, these)
nummod(value, two)
appos(Af, value)
cc(angle, and)
det(angle, the)
compound(angle, rake)
conj(value, angle)
punct(value, **)
nsubj(sufficient, yc)
cop(sufficient, be)
root(ROOT, sufficient)
mark(determine, to)
advcl(sufficient, determine)
det(parameter, the)
amod(parameter, other)
obj(determine, parameter)
case(relationship, of)
det(relationship, these)
nmod(parameter, relationship)
punct(sufficient, .)
punct(define, **)
nsubj:pass(define, yc)
aux:pass(define, be)
root(ROOT, define)
case(geometry, by)
det(geometry, the)
obl(define, geometry)
case(knife, of)
det(knife, the)
nmod(geometry, knife)
punct(define, ;)
punct(define, ;)
punct(define, **)
nsubj:pass(determine, yf)
aux(determine, can)
advmod(determine, readily)
aux:pass(determine, be)
parataxis(define, determine)
mark(measure, by)
advcl(determine, measure)
det(thickness, the)
obj(measure, thickness)
case(coating, of)
det(coating, the)
nmod(thickness, coating)
advmod(measure, before)
cc(cut, and)
mark(cut, after)
conj(measure, cut)
case(substrate, from)
det(substrate, the)
obl(cut, substrate)
punct(define, ;)
punct(define, ;)
nsubj:pass(determine, Af)
aux:pass(determine, be)
advmod(determine, instrumentally)
root(ROOT, determine)
punct(determine, .)
case(Fig., from)
obl(derive, Fig.)
nummod(Fig., 6)
det(relationship, the)
nsubj:pass(derive, relationship)
case(parameter, between)
det(parameter, these)
nmod(relationship, parameter)
aux(derive, can)
advmod(derive, readily)
aux:pass(derive, be)
root(ROOT, derive)
cc(Af, and)
det(force, the)
compound(force, cutting)
nsubj(Af, force)
cop(Af, be)
conj(derive, Af)
advmod(strength, where)
punct(strength, **yl)
cop(strength, be)
det(strength, the)
compound(strength, shear)
acl:relcl(Af, strength)
case(coating, of)
det(coating, the)
nmod(strength, coating)
cc(parameter, and)
cop(parameter, be)
det(parameter, a)
conj(strength, parameter)
case(material, of)
det(material, the)
compound(material, coating)
nmod(parameter, material)
punct(width, ,)
nsubj(width, W)
cop(width, be)
det(width, the)
parataxis(parameter, width)
case(coating, of)
det(coating, the)
amod(coating, remove)
nmod(width, coating)
cc(thickness, and)
nsubj(thickness, T)
cop(thickness, be)
nsubj(thickness, it)
cop(thickness, be)
conj(width, thickness)
punct(derive, .)
mark(plot, if)
det(force, the)
compound(force, cutting)
nsubj:pass(plot, force)
punct(force, ,)
appos(force, Af)
punct(plot, ,)
aux:pass(plot, be)
advcl(result, plot)
case(thickness, against)
compound(thickness, film)
obl(plot, thickness)
punct(result, ,)
det(line, a)
amod(line, straight)
nsubj(result, line)
aux(result, should)
root(ROOT, result)
xcomp(result, pass)
case(origin, through)
det(origin, the)
obl(pass, origin)
cc(have, and)
conj(pass, have)
obj(have, slope)
nummod(occur, Af)
punct(Af, .)
advmod(occur, however)
punct(occur, ,)
case(assessment, in)
det(assessment, the)
amod(assessment, actual)
obl(occur, assessment)
case(force, of)
det(force, the)
compound(force, cutting)
nmod(assessment, force)
case(method, by)
amod(method, instrumental)
nmod(force, method)
case(thickness, for)
det(thickness, any)
nmod(method, thickness)
mark(coating, of)
acl(thickness, coating)
det(number, a)
obj(coating, number)
case(effect, of)
amod(effect, spurious)
nmod(number, effect)
root(ROOT, occur)
nsubj:pass(take, which)
aux(take, must)
aux:pass(take, be)
ccomp(occur, take)
case(account, into)
obl(take, account)
cc(make, and)
nsubj(make, which)
conj(take, make)
det(value, the)
amod(value, measure)
obj(make, value)
amod(value, larger)
case(force, than)
det(force, the)
amod(force, true)
compound(force, cutting)
obl(larger, force)
acl(force, indicate)
case(eqn, by)
obl(indicate, eqn)
punct(force, .)
punct(1, ()
nummod(knife, 1)
punct(1, ))
punct(1, .)
amod(knife, Blunt)
nsubj(fact, knife)
appos(knife, one)
case(these, of)
nmod(one, these)
cop(fact, be)
det(fact, the)
ccomp(occur, fact)
mark(employ, that)
det(knife, the)
nsubj(employ, knife)
acl:relcl(fact, employ)
punct(employ, ,)
advmod(matter, no)
advmod(sharpen, matter)
advmod(sharpen, how)
advmod(sharpen, well)
conj(employ, sharpen)
punct(have, ,)
aux(have, will)
ccomp(employ, have)
det(edge, a)
advmod(round, slightly)
amod(edge, round)
compound(edge, cutting)
obj(have, edge)
punct(fact, .)
nsubj(signify, this)
root(ROOT, signify)
mark(constant, that)
punct(constant, **)
nsubj(constant, yc)
punct(yc, ,)
det(angle, the)
compound(angle, rake)
appos(yc, angle)
punct(constant, ,)
cop(constant, be)
advmod(longer, no)
advmod(constant, longer)
det(constant, a)
ccomp(signify, constant)
case(thickness, to)
amod(thickness, zero)
compound(thickness, film)
nmod(constant, thickness)
punct(signify, .)
det(curvature, the)
nsubj(be, curvature)
case(bluntness, of)
det(bluntness, this)
nmod(curvature, bluntness)
root(ROOT, be)
punct(case, ,)
case(case, in)
det(case, the)
obl(be, case)
case(knife, of)
det(knife, the)
compound(knife, Carboloy)
nmod(case, knife)
acl(knife, employ)
case(Hesiometer, in)
det(Hesiometer, the)
obl(employ, Hesiometer)
punct(determine, ,)
conj(employ, determine)
case(size, by)
det(size, the)
compound(size, grain)
obl(determine, size)
case(grit, of)
det(grit, the)
amod(grit, polish)
nmod(size, grit)
cc(crystals, and)
det(crystals, the)
compound(crystals, tungsten)
compound(crystals, carbide)
conj(grit, crystals)
acl(crystals, cement)
advmod(cement, together)
case(body, in)
det(body, the)
compound(body, knife)
obl(cement, body)
cc(order, and)
cop(order, be)
case(order, in)
det(order, the)
conj(cement, order)
case(mil, of)
nummod(mil, 0.1)
case(0.2, to)
nmod(0.1, 0.2)
nmod(order, mil)
punct(be, .)
punct(be, .)
det(concept, the)
compound(concept, force)
compound(concept, vector)
nsubj:pass(apply, concept)
case(Fig., of)
nmod(concept, Fig.)
nummod(Fig., 6)
aux(apply, can)
advmod(apply, readily)
aux:pass(apply, be)
root(ROOT, apply)
case(condition, to)
det(condition, this)
obl(apply, condition)
advmod(apply, also)
punct(apply, .)
case(angle, because)
det(angle, the)
compound(angle, rake)
root(ROOT, angle)
nsubj(smaller, Af)
case(tip, at)
det(tip, the)
nmod(Af, tip)
case(knife, of)
det(knife, the)
nmod(tip, knife)
cop(smaller, be)
advmod(much, very)
advmod(smaller, much)
root(ROOT, smaller)
punct(smaller, ()
cc(negative, or)
advmod(negative, even)
conj(smaller, negative)
punct(negative, ))
case(value, when)
case(value, compare)
case(value, to)
det(value, the)
obl(smaller, value)
case(yc, of)
punct(yc, **)
nmod(value, yc)
case(portion, for)
det(portion, the)
amod(portion, major)
nmod(yc, portion)
case(knife, of)
det(knife, the)
nmod(portion, knife)
punct(increase, ,)
det(increase, a)
advmod(rapid, very)
amod(increase, rapid)
appos(portion, increase)
case(force, in)
compound(force, cutting)
nmod(increase, force)
case(thickness, with)
nmod(force, thickness)
aux(result, will)
acl:relcl(increase, result)
punct(smaller, .)
nsubj(reduce, this)
root(ROOT, reduce)
case(relationship, to)
det(relationship, the)
obl(reduce, relationship)
punct(reduce, :)
nsubj(thickness, Af)
punct(Af, ,)
advmod(intercept, where)
nsubj(intercept, Af)
cop(intercept, be)
det(intercept, the)
acl:relcl(Af, intercept)
case(thickness, at)
amod(thickness, zero)
nmod(intercept, thickness)
case(extrapolation, of)
det(extrapolation, the)
nmod(thickness, extrapolation)
case(slope, of)
det(slope, the)
nmod(extrapolation, slope)
acl(slope, indicate)
case(eqn, in)
obl(indicate, eqn)
punct(indicate, .)
punct(1, ()
nummod(thickness, 1)
punct(1, ))
punct(thickness, ,)
nsubj(thickness, Af)
cop(thickness, be)
det(thickness, the)
root(ROOT, thickness)
case(equivalent, of)
det(equivalent, the)
compound(equivalent, coating)
nmod(thickness, equivalent)
case(round, to)
det(round, the)
nmod(equivalent, round)
case(tip, off)
case(tip, of)
det(tip, the)
compound(tip, knife)
nmod(round, tip)
punct(approximation, ,)
nsubj(approximation, Af)
cop(approximation, be)
det(approximation, a)
amod(approximation, straight)
compound(approximation, line)
amod(approximation, first)
acl:relcl(tip, approximation)
case(roundness, of)
det(roundness, this)
nmod(approximation, roundness)
punct(equivalent, ,)
cc(equivalent, and)
det(symbol, the)
amod(symbol, other)
nsubj(equivalent, symbol)
cop(equivalent, be)
conj(approximation, equivalent)
case(those, to)
obl(equivalent, those)
case(eqn, of)
nmod(those, eqn)
punct(equivalent, .)
punct(1, ()
nummod(see, 1)
punct(1, ))
punct(1, .)
nsubj:pass(see, it)
aux(see, can)
aux:pass(see, be)
parataxis(equivalent, see)
mark(constant, that)
nsubj(constant, Af)
cop(constant, be)
det(constant, a)
ccomp(see, constant)
punct(determined, ,)
cc(determined, and)
cop(determined, be)
conj(constant, determined)
case(part, for)
det(part, the)
amod(part, most)
obl(determined, part)
case(geometry, by)
det(geometry, the)
nmod(part, geometry)
case(knife, of)
det(knife, the)
nmod(geometry, knife)
punct(Af, .)
det(blunter, the)
root(ROOT, blunter)
det(knife, the)
appos(blunter, knife)
punct(knife, ,)
mark(higher, the)
nsubj(value, higher)
cop(value, be)
det(value, the)
appos(blunter, value)
case(Af, of)
nmod(value, Af)
punct(value, .)
det(importance, the)
appos(blunter, importance)
case(material, of)
det(material, a)
amod(material, hard)
punct(material, ,)
obl:npmod(resistant, abrasion)
punct(resistant, -)
amod(material, resistant)
compound(material, knife)
nmod(importance, material)
mark(become, like)
det(Carboloy, the)
nsubj(become, Carboloy)
acl(Carboloy, employ)
case(Hesiometer, in)
det(Hesiometer, the)
obl(employ, Hesiometer)
advmod(become, immediately)
advcl(importance, become)
xcomp(become, apparent)
punct(importance, .)
amod(knife, Softer)
nsubj(blunt, knife)
aux(blunt, would)
root(ROOT, blunt)
advmod(rapidly, very)
advmod(blunt, rapidly)
punct(blunt, ,)
advcl(blunt, make)
det(value, the)
obj(make, value)
case(Af, of)
nmod(value, Af)
amod(value, inexact)
punct(blunt, .)
case(case, in)
amod(case, extreme)
obl(change, case)
case(knife, of)
advmod(soft, very)
amod(knife, soft)
nmod(case, knife)
det(value, this)
nsubj(change, value)
aux(change, may)
advmod(change, even)
root(ROOT, change)
case(course, during)
det(course, the)
obl(change, course)
case(measurement, of)
det(measurement, a)
nmod(course, measurement)
punct(friction, .)
compound(friction, Knife)
obj(change, friction)
det(factor, a)
amod(factor, second)
appos(friction, factor)
nsubj(enter, which)
acl:relcl(factor, enter)
case(measurement, into)
det(measurement, the)
amod(measurement, practical)
obl(enter, measurement)
case(force, of)
det(force, the)
advmod(determine, instrumentally)
amod(force, determine)
compound(force, cutting)
nmod(measurement, force)
cop(resistance, be)
det(resistance, the)
amod(resistance, frictional)
conj(enter, resistance)
acl(resistance, cause)
case(bottom, by)
det(bottom, the)
obl(cause, bottom)
case(knife, of)
det(knife, the)
nmod(bottom, knife)
case(substrate, against)
det(substrate, the)
nmod(knife, substrate)
punct(resistance, .)
nsubj(value, this)
cop(value, be)
advmod(value, not)
det(value, a)
amod(value, constant)
root(ROOT, value)
case(Af, like)
nmod(value, Af)
punct(vary, ,)
cc(vary, but)
conj(value, vary)
case(thickness, with)
det(thickness, the)
obl(vary, thickness)
case(coating, of)
det(coating, the)
nmod(thickness, coating)
cc(direction, and)
det(direction, the)
conj(thickness, direction)
cc(magnitude, and)
conj(direction, magnitude)
case(R, of)
det(R, the)
compound(R, resultant)
nmod(direction, R)
cc(Af, and)
conj(R, Af)
case(fig, of)
nmod(Af, fig)
punct(value, .)
nummod(exert, 6)
punct(6, .)
case(condition, under)
compound(condition, equilibrium)
obl(exert, condition)
mark(cut, of)
acl(condition, cut)
det(chip, the)
obj(cut, chip)
root(ROOT, exert)
det(thrust, a)
obj(exert, thrust)
root(ROOT, Af)
case(knife, against)
det(knife, the)
nmod(Af, knife)
nsubj(tend, which)
acl:relcl(knife, tend)
mark(push, to)
xcomp(tend, push)
obj(push, it)
case(substrate, into)
det(substrate, the)
obl(push, substrate)
cc(lift, or)
conj(push, lift)
obj(lift, it)
advmod(lift, away)
case(substrate, from)
det(substrate, the)
obl(lift, substrate)
case(direction, depend)
case(direction, on)
det(direction, the)
compound(direction, vector)
obl(lift, direction)
case(Af, of)
nmod(direction, Af)
punct(direction, .)
det(force, the)
amod(force, resultant)
compound(force, friction)
appos(direction, force)
punct(proportional, ,)
nsubj(proportional, Af)
cop(proportional, be)
advmod(proportional, thus)
advmod(proportional, directly)
acl:relcl(force, proportional)
case(Af, to)
obl(proportional, Af)
cc(thickness, and)
advmod(thickness, consequently)
advmod(thickness, also)
case(thickness, to)
compound(thickness, film)
conj(Af, thickness)
punct(proportional, .)
det(value, the)
nsubj:pass(assess, value)
case(Af, of)
nmod(value, Af)
aux(assess, can)
advmod(assess, readily)
aux:pass(assess, be)
root(ROOT, assess)
mark(determine, by)
advcl(assess, determine)
det(force, the)
amod(force, frictional)
obj(determine, force)
acl(force, exert)
case(knife, on)
det(knife, the)
obl(exert, knife)
mark(run, while)
advcl(determine, run)
case(track, over)
det(track, the)
advmod(strip, previously)
amod(track, strip)
compound(track, coating)
obl(run, track)
case(loading, under)
amod(loading, various)
amod(loading, external)
nmod(track, loading)
punct(assess, . )
det(relationship, a)
amod(line, straight)
compound(relationship, line)
nsubj:pass(observe, relationship)
aux:pass(observe, be)
advmod(observe, usually)
root(ROOT, observe)
case(plot, in)
det(plot, a)
obl(observe, plot)
case(Af, of)
nmod(plot, Af)
case(L, against)
compound(L, load)
nmod(Af, L)
punct(have, ,)
advcl(observe, have)
compound(k, slope)
obj(have, k)
punct(Af, ,)
cc(Af, and)
conj(have, Af)
punct(observe, .)
mark(cause, since)
det(L, the)
compound(L, load)
nsubj:pass(cause, L)
punct(L, ,)
case(condition, under)
amod(condition, actual)
compound(condition, cutting)
nsubj:pass(cause, condition)
aux:pass(cause, be)
advcl(see, cause)
case(Af, by)
obl(cause, Af)
punct(see, ,)
nsubj:pass(see, it)
aux(see, can)
aux:pass(see, be)
parataxis(observe, see)
mark(see, that)
compound(force, Af)
punct(Af, .)
det(force, the)
amod(force, measure)
nsubj:pass(see, force)
punct(force, ,)
appos(force, h)
punct(force, ,)
case(removal, in)
compound(removal, cutting)
nmod(force, removal)
case(coating, of)
nmod(removal, coating)
case(substrate, from)
nmod:poss(substrate, they)
nmod(coating, substrate)
advmod(see, consequently)
aux(see, can)
aux:pass(see, be)
conj(see, see)
mark(sum, to)
cop(sum, be)
det(sum, the)
xcomp(see, sum)
case(force, of)
det(force, that)
nmod(sum, force)
acl(force, require)
mark(cut, to)
xcomp(require, cut)
det(coating, the)
obj(cut, coating)
punct(Af, ,)
conj(coating, Af)
punct(that, ,)
conj(bluntness, that)
case(bluntness, due)
fixed(due, to)
det(bluntness, the)
obl(cut, bluntness)
case(knife, of)
det(knife, the)
nmod(bluntness, knife)
punct(Af, ,)
conj(knife, Af)
punct(friction, ,)
cc(friction, and)
mark(friction, that)
case(friction, due)
fixed(due, to)
det(friction, the)
nmod(bluntness, friction)
case(bottom, between)
det(bottom, the)
nmod(friction, bottom)
case(knife, of)
det(knife, the)
nmod(bottom, knife)
cc(substrate, and)
det(substrate, the)
conj(knife, substrate)
punct(Af, ,)
conj(substrate, Af)
punct(Af, ,)
cc(Af, or)
conj(substrate, Af)
punct(interrelate, .)
det(force, the)
amod(force, first)
nummod(force, two)
nsubj:pass(interrelate, force)
aux:pass(interrelate, be)
advmod(interrelate, directly)
acl:relcl(friction, interrelate)
cc(depend, and)
conj(interrelate, depend)
case(thickness, upon)
compound(thickness, film)
obl(depend, thickness)
punct(whereas, ,)
appos(thickness, whereas)
nsubj(independent, Af)
cop(independent, be)
root(ROOT, independent)
case(two, of)
det(two, these)
obl(independent, two)
cc(constant, and)
cop(constant, be)
det(constant, a)
conj(independent, constant)
case(combination, for)
det(combination, a)
amod(combination, give)
compound(combination, knife)
punct(coating, /)
compound(combination, coating)
nmod(constant, combination)
punct(independent, .)
det(relationship, these)
amod(relationship, theoretical)
nsubj:pass(illustrate, relationship)
aux:pass(illustrate, be)
advmod(illustrate, more)
advmod(illustrate, clearly)
root(ROOT, illustrate)
case(Fig., in)
obl(illustrate, Fig.)
nummod(Fig., 7)
cc(see, and)
nmod:poss(sum, they)
nsubj:pass(see, sum)
aux(see, can)
aux:pass(see, be)
conj(illustrate, see)
mark(correlate, to)
xcomp(see, correlate)
case(form, in)
obl(correlate, form)
case(measurement, with)
amod(measurement, practical)
nmod(form, measurement)
acl(measurement, make)
case(Hesiometer, with)
det(Hesiometer, the)
obl(make, Hesiometer)
mark(illustrate, as)
advcl(make, illustrate)
case(portion, in)
det(portion, the)
amod(portion, first)
obl(illustrate, portion)
case(fig, of)
nmod(portion, fig)
punct(illustrate, .)
nummod(fail, 5)
case(mechanism, for)
det(mechanism, the)
compound(mechanism, cutting)
nmod(mechanism, mechanism)
punct(mechanism, .)
compound(mechanism, chip)
nsubj(fail, mechanism)
case(failure, of)
amod(failure, cohesive)
nmod(mechanism, failure)
case(number, although)
det(number, a)
amod(number, large)
nmod(mechanism, number)
case(system, of)
compound(system, coating)
nmod(number, system)
punct(fail, ,)
advmod(thickness, particularly)
case(thickness, at)
amod(thickness, low)
nmod(number, thickness)
root(ROOT, fail)
advmod(fail, cohesively)
case(mechanism, by)
det(mechanism, the)
compound(mechanism, cutting)
obl(fail, mechanism)
punct(fail, ,)
advmod(take, frequently)
det(type, a)
amod(type, second)
nsubj(take, type)
case(failure, of)
amod(failure, cohesive)
nmod(type, failure)
aux(take, may)
advmod(take, also)
parataxis(fail, take)
obj(take, place)
punct(fail, .)
nsubj(failure, this)
cop(failure, be)
det(failure, a)
compound(failure, chip)
punct(failure, ,)
amod(type, dynamic)
compound(failure, type)
root(ROOT, failure)
acl(failure, encounter)
case(resin, with)
advmod(brittle, very)
amod(resin, brittle)
compound(resin, coating)
obl(encounter, resin)
cc(film, or)
advmod(pigment, very)
advmod(pigment, highly)
amod(film, pigment)
conj(resin, film)
punct(failure, .)
nsubj:pass(show, this)
aux:pass(show, be)
root(ROOT, show)
case(photomicrograph, in)
det(photomicrograph, the)
obl(show, photomicrograph)
case(fig, of)
nmod(photomicrograph, fig)
punct(show, .)
nummod(be, 8)
punct(8, .)
det(difference, the)
amod(difference, basic)
nsubj(be, difference)
case(mechanism, between)
det(mechanism, the)
amod(mechanism, continuous)
compound(mechanism, cutting)
nmod(difference, mechanism)
cc(that, and)
conj(difference, that)
case(mechanism, of)
det(mechanism, the)
compound(mechanism, chip)
nmod(that, mechanism)
root(ROOT, be)
mark(occur, that)
case(shear, instead)
fixed(instead, of)
obl(occur, shear)
acl(shear, occur)
case(coating, in)
det(coating, the)
obl(occur, coating)
case(knife, ahead)
case(knife, of)
det(knife, the)
obl(occur, knife)
advmod(occur, continuously)
case(fracture, without)
obl(continuously, fracture)
punct(occur, ,)
nsubj(occur, rupture)
advmod(occur, intermittently)
ccomp(be, occur)
case(plane, along)
det(plane, the)
compound(plane, shear)
obl(occur, plane)
punct(be, .)
det(mechanism, the)
amod(mechanism, detailed)
nsubj:pass(study, mechanism)
case(type, of)
det(type, this)
nmod(mechanism, type)
case(failure, of)
nmod(type, failure)
aux(study, have)
aux:pass(study, be)
root(ROOT, study)
advmod(study, extensively)
case(Merchant, by)
obl(study, Merchant)
case(cutting, for)
compound(cutting, metal)
obl(study, cutting)
punct(apply, ,)
cc(apply, and)
det(principle, the)
nsubj:pass(apply, principle)
acl(principle, find)
aux(apply, can)
aux:pass(apply, be)
advmod(apply, directly)
conj(study, apply)
case(coating, to)
obl(apply, coating)
punct(study, .)
mark(study, by)
advcl(sequence, study)
amod(movie, high)
compound(movie, speed)
obj(study, movie)
acl(movie, make)
case(type, of)
det(type, this)
obl(make, type)
case(failure, of)
nmod(type, failure)
punct(sequence, ,)
det(sequence, the)
root(ROOT, sequence)
case(relationship, of)
nmod(sequence, relationship)
mark(illustrate, as)
advmod(illustrate, schematically)
acl(sequence, illustrate)
case(Fig., in)
obl(illustrate, Fig.)
nsubj:pass(observe, 9)
aux(observe, could)
aux:pass(observe, be)
root(ROOT, observe)
punct(observe, .)
case(picture, in)
det(picture, the)
amod(picture, first)
obl(begin, picture)
punct(a, ()
compound(a, 9)
nummod(begin, a)
punct(a, ))
det(knife, the)
nsubj(begin, knife)
aux(begin, be)
advmod(begin, just)
root(ROOT, begin)
mark(advance, to)
xcomp(begin, advance)
case(surface, into)
det(surface, the)
amod(surface, inclined)
obl(advance, surface)
nsubj:pass(leave, which)
aux:pass(leave, be)
acl:relcl(surface, leave)
case(formation, from)
det(formation, the)
amod(formation, previous)
compound(formation, chip)
obl(leave, formation)
punct(begin, .)
case(next, in)
det(next, the)
obl(high, next)
punct(high, ,)
det(angle, the)
compound(angle, shear)
compound(angle, plane)
nsubj(high, angle)
cop(high, be)
root(ROOT, high)
punct(extend, ,)
cc(extend, and)
conj(high, extend)
case(surface, to)
det(surface, the)
amod(surface, inclined)
compound(surface, work)
obl(extend, surface)
punct(high, .)
mark(increase, with)
advcl(extend, increase)
obj(increase, advance)
case(knife, of)
det(knife, the)
nmod(advance, knife)
case(coating, into)
det(coating, the)
obl(increase, coating)
det(plane, the)
compound(plane, shear)
nsubj(extend, plane)
root(ROOT, extend)
case(surface, to)
det(surface, the)
compound(surface, coating)
obl(extend, surface)
cc(decrease, and)
det(angle, the)
compound(angle, shear)
nsubj(decrease, angle)
advmod(decrease, rapidly)
conj(extend, decrease)
punct(extend, .)
advmod(occur, eventually)
punct(occur, ,)
nsubj(occur, rupture)
root(ROOT, occur)
case(plane, along)
det(plane, the)
compound(plane, shear)
obl(occur, plane)
punct(e, ()
nummod(e, 9)
appos(plane, e)
punct(e, ))
punct(repeat, ,)
cc(repeat, and)
det(cycle, the)
nsubj(repeat, cycle)
conj(occur, repeat)
obj(repeat, itself)
punct(occur, .)
nsubj(find, Merchant)
aux(find, have)
root(ROOT, find)
mark(apply, that)
det(relationship, the)
amod(relationship, same)
amod(relationship, basic)
nsubj:pass(apply, relationship)
nsubj(describe, which)
acl:relcl(relationship, describe)
det(geometry, the)
obj(describe, geometry)
cc(system, and)
compound(system, force)
conj(geometry, system)
case(case, in)
det(case, the)
obl(apply, case)
case(mechanism, of)
det(mechanism, the)
compound(mechanism, cutting)
nmod(case, mechanism)
aux(apply, can)
advmod(apply, also)
aux:pass(apply, be)
ccomp(find, apply)
case(formation, to)
det(formation, the)
amod(formation, discontinuous)
compound(formation, chip)
obl(apply, formation)
acl(formation, provide)
det(value, the)
amod(value, proper)
obj(provide, value)
case(angle, of)
amod(angle, instantaneous)
compound(angle, shear)
nmod(value, angle)
cc(thickness, and)
amod(thickness, instantaneous)
compound(thickness, chip)
conj(angle, thickness)
cc(area, or)
amod(area, cross-sectional)
conj(thickness, area)
aux:pass(use, be)
conj(provide, use)
punct(find, .)
advmod(replace, consequently)
punct(replace, ,)
mark(angle, if)
det(angle, the)
compound(angle, shear)
nsubj:pass(replace, angle)
punct(replace, **)
nsubj:pass(replace, yf)
aux:pass(replace, be)
root(ROOT, replace)
case(angle, by)
det(angle, the)
compound(angle, rupture)
obl(replace, angle)
nsubj(apply, Af)
punct(Af, ,)
det(relationship, the)
appos(Af, relationship)
mark(describe, as)
acl(relationship, describe)
case(eqn, in)
obl(describe, eqn)
punct(1, .)
punct(1, ()
nummod(describe, 1)
punct(1, ))
punct(2, ,)
punct(2, ()
compound(1, 2)
punct(2, ))
punct(4, ,)
punct(4, ()
nummod(2, 4)
punct(4, ))
punct(apply, ,)
cc(apply, and)
punct(6, ()
nummod(apply, 6)
punct(6, ))
aux(apply, will)
advmod(apply, directly)
root(ROOT, apply)
punct(apply, .)
det(mechanism, the)
compound(mechanism, crack)
nsubj(exert, mechanism)
case(condition, under)
compound(condition, equilibrium)
compound(condition, cutting)
nmod(mechanism, condition)
punct(exert, ,)
det(chip, the)
nsubj(exert, chip)
root(ROOT, exert)
det(force, a)
obj(exert, force)
root(ROOT, Af)
case(coating, against)
det(coating, the)
nmod(Af, coating)
cc(force, and)
det(force, a)
amod(force, equal)
amod(force, opposite)
conj(coating, force)
root(ROOT, Af)
case(knife, against)
det(knife, the)
nmod(Af, knife)
case(plane, in)
det(plane, the)
nmod(Af, plane)
case(substrate, of)
det(substrate, the)
nmod(plane, substrate)
mark(show, as)
acl(Af, show)
case(fig, in)
obl(show, fig)
punct(Af, .)
nummod(enough, 6)
punct(6, .)
mark(enough, if)
det(angle, the)
compound(angle, rake)
nsubj(enough, angle)
punct(angle, **)
nsubj(enough, yc)
case(knife, of)
det(knife, the)
nmod(yc, knife)
cop(enough, be)
amod(enough, high)
advcl(lie, enough)
cc(angle, and)
det(angle, the)
compound(angle, friction)
conj(enough, angle)
punct(yt, **)
conj(enough, yt)
case(front, between)
det(front, the)
nmod(yt, front)
case(knife, of)
det(knife, the)
nmod(front, knife)
cc(enough, and)
det(back, the)
nsubj(enough, back)
case(chip, of)
det(chip, the)
nmod(back, chip)
cop(enough, be)
amod(enough, low)
advcl(lie, enough)
mark(give, to)
advcl(enough, give)
det(value, a)
amod(value, positive)
obj(give, value)
case(Af, for)
nmod(value, Af)
punct(lie, ,)
det(R, the)
amod(R, resultant)
compound(R, vector)
nsubj(lie, R)
aux(lie, will)
root(ROOT, lie)
case(plane, above)
det(plane, the)
obl(lie, plane)
case(substrate, of)
det(substrate, the)
nmod(plane, substrate)
punct(lie, .)
case(year, within)
advmod(year, only)
det(year, a)
amod(year, few)
obl(manage, year)
punct(manage, ,)
amod(material, foam)
compound(material, plastic)
nsubj(manage, material)
aux(manage, have)
root(ROOT, manage)
mark(grow, to)
xcomp(manage, grow)
case(integral, into)
det(integral, a)
obl(grow, integral)
punct(important, ,)
cc(important, and)
conj(integral, important)
punct(phase, ,)
obl(grow, phase)
case(industry, of)
det(industry, the)
compound(industry, plastic)
nmod(phase, industry)
punct(manage, --)
cc(sight, and)
det(end, the)
nsubj(sight, end)
cop(sight, be)
advmod(sight, still)
advmod(sight, not)
advmod(sight, yet)
case(sight, in)
conj(manage, sight)
punct(manage, .)
compound(foam, Urethane)
nsubj:pass(introduce, foam)
punct(foam, ,)
case(example, as)
advmod(example, only)
nummod(example, one)
obl(introduce, example)
punct(introduce, ,)
aux:pass(introduce, be)
advmod(introduce, only)
root(ROOT, introduce)
advmod(introduce, commercially)
case(country, in)
det(country, this)
obl(introduce, country)
case(1955, in)
obl(introduce, 1955)
punct(introduce, .)
cc(top, yet)
amod(year, last)
nmod:poss(volume, year)
case(year, 's)
nsubj(top, volume)
advmod(top, probably)
root(ROOT, top)
compound(million, 100)
nummod(lb, million)
obj(top, lb)
punct(top, .)
cc(market, and)
nsubj(market, expectation)
cop(market, be)
case(market, for)
det(market, a)
root(ROOT, market)
case(lb., of)
compound(million, 275)
nummod(lb., million)
nmod(market, lb.)
case(1964, by)
obl(market, 1964)
punct(market, .)
nsubj(show, many)
case(plastic, of)
det(plastic, the)
amod(plastic, other)
amod(plastic, foam)
nmod(many, plastic)
punct(plastic, ,)
advmod(styrene, particularly)
det(styrene, the)
appos(plastic, styrene)
punct(show, ,)
root(ROOT, show)
amod(potential, similar)
compound(potential, growth)
obj(show, potential)
punct(show, .)
cc(be, and)
expl(be, there)
root(ROOT, be)
advmod(newer, even)
amod(plastic, newer)
amod(plastic, foam)
nsubj(be, plastic)
nsubj(be, that)
acl:relcl(plastic, be)
advmod(evaluate, yet)
mark(evaluate, to)
aux:pass(evaluate, be)
xcomp(be, evaluate)
punct(be, .)
mark(go, as)
det(issue, this)
nsubj(go, issue)
advcl(announce, go)
case(press, to)
obl(go, press)
punct(announce, ,)
case(example, for)
obl(announce, example)
punct(announce, ,)
nummod(manufacturer, one)
nsubj(announce, manufacturer)
aux(announce, have)
root(ROOT, announce)
det(foam, a)
compound(foam, epoxy)
obj(announce, foam)
case(buoyancy, with)
amod(buoyancy, outstanding)
nmod(foam, buoyancy)
cc(strength, and)
compound(strength, impact)
conj(buoyancy, strength)
punct(announce, ;)
punct(announce, ;)
det(report, another)
appos(foam, report)
nsubj:pass(investigate, that)
det(polypropylene, a)
amod(polypropylene, cellular)
nsubj:pass(investigate, polypropylene)
punct(polypropylene, ,)
advmod(use, primarily)
case(use, for)
nmod(polypropylene, use)
case(application, in)
compound(coating, wire)
compound(application, coating)
nmod(use, application)
punct(investigate, ,)
aux(investigate, be)
aux:pass(investigate, be)
acl:relcl(report, investigate)
punct(announce, .)
case(page, on)
det(page, the)
amod(page, follow)
obl(describe, page)
punct(describe, ,)
nsubj:pass(describe, each)
case(plastic, of)
det(plastic, the)
amod(plastic, major)
amod(plastic, commercial)
amod(plastic, foam)
nmod(each, plastic)
aux:pass(describe, be)
root(ROOT, describe)
case(detail, in)
obl(describe, detail)
punct(describe, ,)
case(property, as)
fixed(as, to)
obl(describe, property)
punct(application, ,)
conj(property, application)
punct(method, ,)
cc(method, and)
conj(property, method)
case(processing, of)
nmod(method, processing)
punct(describe, .)
expl(well, it)
aux(well, might)
cop(well, be)
root(ROOT, well)
mark(point, to)
csubj(well, point)
compound:prt(point, out)
punct(well, ,)
advmod(point, however)
punct(well, ,)
nsubj(well, some)
case(development, of)
det(development, the)
amod(development, newer)
nmod(some, development)
nsubj(take, that)
aux(take, have)
acl:relcl(development, take)
obj(take, place)
case(month, within)
det(month, the)
amod(month, past)
amod(month, few)
obl(take, month)
nsubj(have, which)
aux(have, might)
acl:relcl(month, have)
det(bear, a)
obj(have, bear)
case(future, on)
det(future, the)
nmod(bear, future)
case(plastic, of)
det(plastic, the)
amod(plastic, various)
amod(plastic, foam)
nmod(future, plastic)
acl(plastic, involve)
punct(well, .)
case(foam, in)
compound(foam, urethane)
obl(be, foam)
punct(be, ,)
case(example, for)
obl(be, example)
punct(be, ,)
expl(be, there)
aux(be, have)
root(ROOT, be)
det(trend, a)
amod(trend, definite)
nsubj(be, trend)
case(material, toward)
det(material, the)
compound(type, polyether)
punct(type, -)
compound(material, type)
nmod(trend, material)
punct(available, ()
nsubj(available, which)
cop(available, be)
advmod(available, now)
acl:relcl(material, available)
case(system, in)
nummod(component, two)
punct(component, -)
compound(system, component)
amod(system, rigid)
compound(system, foam)
obl(available, system)
punct(available, ))
cc(molding, and)
det(emphasis, the)
nsubj(molding, emphasis)
cop(molding, be)
advmod(molding, definitely)
case(molding, on)
nummod(shot, one)
punct(shot, -)
compound(molding, shot)
advcl(seem, molding)
punct(seem, .)
amod(manufacturer, most)
nsubj(seem, manufacturer)
advmod(seem, also)
parataxis(be, seem)
mark(concentrate, to)
aux(concentrate, be)
xcomp(seem, concentrate)
mark(formulate, on)
advcl(concentrate, formulate)
obl:npmod(resistant, fire)
punct(resistant, -)
amod(grade, resistant)
cc(extinguishing, or)
obl:npmod(extinguishing, self)
punct(extinguishing, -)
amod(grade, extinguishing)
obj(formulate, grade)
case(foam, of)
compound(foam, urethane)
nmod(grade, foam)
nsubj:pass(aim, that)
aux:pass(aim, be)
acl:relcl(grade, aim)
advmod(aim, specifically)
case(market, at)
det(market, the)
amod(market, burgeon)
compound(market, building)
obl(aim, market)
punct(be, .)
compound(foam, Urethane)
root(ROOT, foam)
mark(come, as)
det(insulator, a)
nsubj(come, insulator)
aux(come, be)
advmod(come, also)
advcl(foam, come)
advmod(come, in)
case(deal, for)
det(deal, a)
amod(deal, good)
obl(come, deal)
case(attention, of)
nmod(deal, attention)
punct(foam, .)
case(example, in)
nummod(example, one)
amod(example, outstanding)
obl(find, example)
punct(find, ,)
compound(Corp., Whirlpool)
nsubj(find, Corp.)
root(ROOT, find)
mark(increase, that)
mark(switch, by)
advcl(increase, switch)
case(insulation, to)
compound(insulation, urethane)
compound(insulation, foam)
obl(switch, insulation)
punct(increase, ,)
nsubj(increase, they)
aux(increase, could)
ccomp(find, increase)
det(capacity, the)
compound(capacity, storage)
obj(increase, capacity)
case(refrigerator, of)
compound(refrigerator, gas)
nmod(capacity, refrigerator)
mark(make, to)
advcl(increase, make)
obj(make, they)
xcomp(make, competitive)
case(model, with)
amod(model, electric)
obl(competitive, model)
punct(express, .)
amod(interest, much)
nsubj:pass(express, interest)
aux(express, have)
advmod(express, also)
aux:pass(express, be)
parataxis(find, express)
case(technique, in)
amod(technique, new)
obl(express, technique)
mark(process, for)
acl(technique, process)
det(foam, the)
compound(foam, urethane)
obj(process, foam)
punct(foam, ,)
case(spraying, include)
nmod(foam, spraying)
punct(froth, ,)
conj(spraying, froth)
punct(molding, ,)
cc(molding, and)
conj(spraying, molding)
punct(see, ()
parataxis(spraying, see)
obj(see, article)
punct(p., ,)
appos(article, p.)
nummod(p., 391)
case(detail, for)
obl(see, detail)
punct(see, ))
punct(see, .)
cc(meet, and)
mark(meet, in)
conj(see, meet)
det(demand, the)
obj(meet, demand)
case(foam, for)
compound(foam, urethane)
nmod(demand, foam)
case(interline, as)
det(interline, a)
compound(interline, garment)
nmod(demand, interline)
punct(adhesive, ,)
amod(adhesive, new)
conj(interline, adhesive)
cc(method, and)
amod(method, new)
conj(interline, method)
case(foam, of)
compound(foam, laminate)
nmod(method, foam)
case(substrate, to)
det(substrate, a)
nmod(foam, substrate)
aux(develop, have)
aux:pass(develop, be)
acl:relcl(method, develop)
punct(find, .)
amod(technique, new)
nsubj(help, technique)
case(molding, for)
amod(molding, automatic)
nmod(technique, molding)
case(bead, of)
amod(styrene, expandable)
compound(bead, styrene)
nmod(molding, bead)
aux(help, have)
root(ROOT, help)
obj(help, boost)
det(material, that)
amod(material, particular)
obj(help, material)
case(number, into)
det(number, a)
nmod(material, number)
case(application, of)
amod(application, new)
compound(application, consumer)
nmod(number, application)
punct(application, ,)
case(chest, include)
amod(chest, picnic)
nmod(application, chest)
punct(cooler, ,)
compound(cooler, beverage)
conj(chest, cooler)
punct(pot, ,)
compound(pot, flower)
conj(chest, pot)
punct(toy, ,)
cc(toy, and)
compound(type, flotation)
punct(type, -)
compound(toy, type)
compound(toy, swim)
conj(chest, toy)
punct(help, .)
nummod(area, two)
amod(area, other)
compound(use, end)
punct(use, -)
compound(area, use)
nsubj(package, area)
nsubj(contribute, which)
acl:relcl(area, contribute)
case(growth, to)
amod(styrene, expandable)
nmod:poss(growth, styrene)
case(styrene, 's)
obl(contribute, growth)
case(year, during)
det(year, the)
nmod(growth, year)
aux(package, be)
root(ROOT, package)
punct(insert, ()
amod(insert, mold)
obj(package, insert)
acl(insert, replace)
amod(unit, complicated)
compound(unit, cardboard)
obj(replace, unit)
punct(replace, ))
cc(panel, and)
amod(core, foam)
punct(core, -)
amod(panel, core)
compound(panel, building)
conj(insert, panel)
punct(package, .)
amod(film, extruded)
amod(styrene, expandable)
compound(film, styrene)
nsubj(claim, film)
cc(sheet, or)
conj(film, sheet)
punct(claim, --)
root(ROOT, claim)
mark(wise, to)
cop(wise, be)
amod(wise, competitive)
obl:npmod(wise, price)
punct(wise, -)
xcomp(claim, wise)
case(paper, with)
obl(wise, paper)
punct(claim, --)
advmod(show, also)
parataxis(claim, show)
amod(potential, much)
obj(show, potential)
punct(potential, ,)
advmod(show, particularly)
case(package, for)
nmod(panel, package)
punct(panel, .)
compound(panel, Sandwich)
appos(potential, panel)
case(shelter, for)
compound(shelter, building)
compound(shelter, utility)
nmod(panel, shelter)
nsubj(consist, that)
acl:relcl(shelter, consist)
case(skin, of)
compound(skin, kraft)
compound(skin, paper)
obl(consist, skin)
cc(core, and)
amod(core, rigid)
compound(foam, styrene)
compound(core, foam)
conj(skin, core)
advmod(arouse, also)
advcl(consist, arouse)
obj(arouse, interest)
case(field, in)
det(field, the)
compound(field, construction)
obl(arouse, field)
punct(claim, .)
case(foam, in)
amod(foam, vinyl)
obl(development, foam)
punct(development, ,)
det(news, the)
amod(news, big)
nsubj(development, news)
cop(development, be)
det(development, the)
root(ROOT, development)
case(technique, of)
nmod(development, technique)
case(fabric, for)
compound(fabric, coating)
nmod(technique, fabric)
case(material, with)
det(material, the)
nmod(technique, material)
punct(see, ()
case(detail, for)
nmod(material, detail)
punct(see, ,)
parataxis(detail, see)
obj(see, P.)
nummod(P., 395)
punct(see, ))
punct(hand, .)
advmod(hand, better)
punct(hand, ``)
obj(see, hand)
punct(hand, '')
punct(feel, ,)
det(feel, a)
advmod(luxurious, more)
amod(feel, luxurious)
conj(hand, feel)
punct(claim, ,)
cc(claim, and)
amod(property, better)
compound(property, insulate)
nsubj:pass(claim, property)
aux:pass(claim, be)
conj(development, claim)
mark(result, to)
cop(result, be)
det(result, the)
xcomp(claim, result)
punct(development, .)
amod(company, several)
nsubj(see, company)
advmod(see, also)
root(ROOT, see)
obj(see, possibility)
mark(use, in)
acl(possibility, use)
det(technique, the)
obj(use, technique)
case(product, for)
compound(product, extrude)
cc(molding, or)
conj(extrude, molding)
conj(extrude, vinyl)
nmod(technique, product)
case(core, with)
det(core, a)
amod(core, slight)
amod(core, cellular)
nmod(product, core)
nsubj(reduce, that)
aux(reduce, would)
acl:relcl(core, reduce)
obj(reduce, cost)
cc(affect, yet)
aux(affect, would)
advmod(affect, not)
conj(reduce, affect)
amod(property, physical)
obj(affect, property)
case(product, of)
det(product, the)
compound(product, end)
nmod(property, product)
case(extent, to)
det(extent, any)
amod(extent, great)
obl(affect, extent)
punct(see, .)
nsubj:pass(refer, reader)
amod(reader, interested)
case(information, in)
amod(information, additional)
obl(interested, information)
case(foam, on)
nmod(information, foam)
aux:pass(refer, be)
root(ROOT, refer)
case(Chart, to)
det(Chart, the)
compound(plastic, foam)
compound(Chart, plastic)
obl(refer, Chart)
acl(Chart, appear)
case(section, in)
det(section, the)
amod(section, technical)
compound(section, data)
obl(appear, section)
cc(list, and)
case(list, to)
det(list, the)
conj(Chart, list)
case(reference, of)
nmod(list, reference)
nsubj(appear, which)
acl:relcl(reference, appear)
advmod(appear, below)
punct(refer, .)
compound(foam, Urethane)
nsubj(short, foam)
case(1950, since)
det(1950, the)
compound(1950, mid)
nmod(foam, 1950)
punct(short, ,)
mark(make, when)
compound(foam, urethane)
nsubj(make, foam)
advmod(make, first)
advcl(short, make)
nmod:poss(appearance, its)
obj(make, appearance)
case(market, in)
det(market, the)
amod(market, american)
obl(make, market)
punct(short, ,)
nsubj(short, growth)
aux(short, have)
cop(short, be)
obl:npmod(short, little)
root(ROOT, short)
case(fantastic, of)
obl(short, fantastic)
punct(short, .)
amod(estimate, present)
nsubj(be, estimate)
root(ROOT, be)
mark(top, that)
nsubj(top, production)
ccomp(be, top)
det(lb, the)
compound(million, 100)
punct(million, -)
nummod(lb, million)
punct(lb, -)
obj(top, lb)
punct(be, .)
root(ROOT, mark)
case(1960, in)
nmod(mark, 1960)
punct(lb, ()
nummod(lb, 85)
case(90, to)
nmod(85, 90)
nummod(lb, million)
parataxis(mark, lb)
punct(lb, .)
case(flexible, for)
nmod(lb, flexible)
punct(lb., ,)
nummod(lb., 10)
cc(11, or)
conj(10, 11)
conj(flexible, million)
conj(lb, lb.)
case(rigid, for)
nmod(lb., rigid)
punct(lb., ))
punct(range, ;)
punct(range, ;)
case(1965, by)
obl(range, 1965)
punct(range, ,)
nsubj(range, production)
aux(range, may)
parataxis(mark, range)
case(lb, from)
nummod(lb, 200)
case(350, to)
nmod(200, 350)
nummod(lb, million)
obl(range, lb)
punct(lb, .)
case(flexible, for)
nmod(lb, flexible)
cc(lb., and)
advmod(115, from)
nummod(lb., 115)
case(150, to)
compound(million, 150)
nummod(lb., million)
nmod(lb, lb.)
case(rigid, for)
nmod(lb., rigid)
punct(range, .)
det(market, the)
nsubj(seem, market)
nsubj(start, that)
aux(start, have)
acl:relcl(market, start)
mark(open, to)
xcomp(start, open)
compound:prt(open, up)
case(foam, for)
det(foam, the)
obl(open, foam)
case(year, in)
det(year, the)
amod(year, past)
obl(open, year)
cc(so, or)
nummod(year, so)
root(ROOT, seem)
mark(justify, to)
xcomp(seem, justify)
det(expectation, the)
obj(justify, expectation)
punct(seem, . )
compound(upholstery, Furniture)
nsubj(take, upholstery)
punct(take, ,)
case(example, as)
advmod(example, just)
nummod(example, one)
obl(take, example)
punct(take, ,)
aux(take, can)
advmod(take, easily)
root(ROOT, take)
obj(take, million)
case(pound, of)
nmod(million, pound)
punct(take, ;)
punct(take, ;)
amod(insulation, foam)
compound(insulation, refrigerator)
nsubj(evaluation, insulation)
cop(evaluation, be)
case(evaluation, under)
amod(evaluation, intensive)
parataxis(take, evaluation)
case(manufacturer, by)
det(manufacturer, every)
amod(manufacturer, major)
nmod(evaluation, manufacturer)
punct(evaluation, ;)
punct(evaluation, ;)
cc(get, and)
nsubj(get, use)
case(foam, of)
det(foam, the)
nmod(use, foam)
case(interline, for)
compound(interline, garment)
nmod(foam, interline)
aux(get, be)
advmod(get, only)
advmod(get, now)
conj(evaluation, get)
case(ground, off)
det(ground, the)
obl(get, ground)
punct(get, ,)
case(potential, with)
amod(potential, volume)
obl(get, potential)
case(off, in)
det(off, the)
nmod(potential, off)
punct(take, .)
amod(foam, Basic)
compound(Urethane, chemistry)
compound(foam, Urethane)
nsubj(product, foam)
cop(product, be)
punct(product, ,)
advmod(product, basically)
punct(product, ,)
compound(product, reaction)
root(ROOT, product)
case(material, of)
obl:npmod(rich, hydroxyl)
punct(rich, -)
amod(material, rich)
nmod(product, material)
cc(polyisocyanate, and)
conj(material, polyisocyanate)
punct(diisocyanate, ()
advmod(diisocyanate, usually)
amod(diisocyanate, tolylene)
appos(material, diisocyanate)
punct(diisocyanate, ))
punct(product, .)
nsubj(one, blow)
aux(one, can)
cop(one, be)
cc:preconj(one, either)
root(ROOT, one)
case(type, of)
nummod(type, two)
nmod(one, type)
punct(type, --)
compound(gas, carbon)
compound(gas, dioxide)
appos(type, gas)
acl(gas, generate)
case(reaction, by)
det(reaction, the)
obl(generate, reaction)
case(water, of)
nmod(reaction, water)
case(polyisocyanate, on)
det(polyisocyanate, the)
nmod(reaction, polyisocyanate)
cc(blowing, or)
amod(blowing, mechanical)
conj(polyisocyanate, blowing)
case(use, through)
det(use, the)
obl(blowing, use)
case(liquid, of)
det(liquid, a)
amod(boiling, low)
punct(boiling, -)
compound(liquid, boiling)
nmod(use, liquid)
case(hydrocarbon, such)
fixed(such, as)
det(hydrocarbon, a)
amod(hydrocarbon, fluorinate)
nmod(liquid, hydrocarbon)
punct(one, .)
det(factor, the)
advmod(important, most)
amod(factor, important)
nsubj(type, factor)
mark(determine, in)
acl(factor, determine)
det(property, what)
obj(determine, property)
det(product, the)
compound(product, end)
punct(product, -)
nsubj(have, product)
aux(have, will)
acl:relcl(property, have)
cop(type, be)
advmod(type, quite)
advmod(type, naturally)
det(type, the)
root(ROOT, type)
case(compound, of)
obl:npmod(rich, hydroxyl)
punct(rich, -)
amod(compound, rich)
nmod(type, compound)
nsubj:pass(use, that)
aux:pass(use, be)
acl:relcl(compound, use)
case(production, in)
nmod:poss(production, its)
obl(use, production)
punct(use, .)
advmod(use, originally)
punct(composition, ,)
det(type, the)
amod(type, main)
nsubj(composition, type)
acl(type, use)
cop(composition, be)
amod(composition, various)
conj(type, composition)
case(polyester, of)
nmod(composition, polyester)
punct(composition, .)
nsubj(use, these)
cop(use, be)
advmod(use, still)
case(use, in)
amod(use, wide)
root(ROOT, use)
obl:tmod(use, today)
punct(use, ,)
advmod(formulation, particularly)
case(formulation, in)
amod(formulation, semi-rigid)
obl(use, formulation)
punct(use, ,)
case(application, for)
amod(application, such)
obl(use, application)
case(core, as)
nmod(application, core)
case(panel, for)
compound(type, sandwich)
punct(type, -)
compound(panel, type)
amod(panel, structural)
nmod(core, panel)
punct(panel, ,)
amod(insulation, foam)
punct(foam, -)
case(place, in)
punct(place, -)
compound(insulation, place)
conj(panel, insulation)
punct(insulation, ,)
amod(pad, automotive)
compound(pad, safety)
conj(panel, pad)
punct(rest, ,)
compound(rest, arm)
conj(panel, rest)
punct(etc, ,)
list(panel, etc)
punct(use, .)
punct(use, .)
advmod(recently, more)
advmod(come, recently)
punct(come, ,)
nsubj(come, polyether)
punct(polyether, --)
advmod(polyether, again)
case(composition, in)
amod(composition, varied)
nmod(polyether, composition)
punct(weight, ,)
amod(weight, molecular)
conj(composition, weight)
punct(branch, ,)
cc(branch, and)
conj(composition, branch)
punct(come, --)
aux(come, have)
root(ROOT, come)
case(use, into)
obl(come, use)
case(first, at)
obl(come, first)
case(foam, for)
det(foam, the)
amod(foam, flexible)
obl(come, foam)
punct(foam, ,)
advmod(lately, just)
advmod(come, lately)
case(rigid, for)
det(rigid, the)
obl(lately, rigid)
punct(come, .)
det(glycol, the)
compound(glycol, polyether)
nsubj:pass(claim, glycol)
aux:pass(claim, be)
root(ROOT, claim)
mark(give, to)
xcomp(claim, give)
amod(urethane, flexible)
iobj(give, urethane)
det(action, a)
compound(back, spring)
punct(back, -)
compound(action, back)
obj(give, action)
nsubj:pass(desire, which)
aux:pass(desire, be)
advmod(desire, much)
acl:relcl(action, desire)
case(cushion, in)
obl(desire, cushion)
punct(claim, .)
mark(have, although)
det(foam, the)
amod(foam, first)
compound(foam, polyether)
nsubj(have, foam)
case(market, on)
det(market, the)
nmod(foam, market)
advcl(produce, have)
mark(produce, to)
aux:pass(produce, be)
xcomp(have, produce)
case(method, by)
det(method, the)
nummod(step, two)
punct(step, -)
compound(method, step)
compound(method, prepolymer)
obl(produce, method)
punct(produce, ,)
obl:tmod(thanks, today)
punct(thanks, ,)
obl:npmod(produce, thanks)
case(catalyst, to)
amod(catalyst, new)
nmod(thanks, catalyst)
punct(produce, ,)
nsubj:pass(produce, they)
aux(produce, can)
aux:pass(produce, be)
root(ROOT, produce)
case(technique, by)
det(technique, a)
nummod(shot, one)
punct(shot, -)
compound(technique, shot)
obl(produce, technique)
punct(produce, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(mold, that)
det(foam, the)
compound(foam, polyether)
nsubj:pass(mold, foam)
aux(mold, may)
advmod(mold, soon)
aux:pass(mold, be)
csubj(possible, mold)
case(basis, on)
det(basis, a)
compound(basis, production)
obl(mold, basis)
case(mold, in)
amod(cost, low)
punct(cost, -)
compound(mold, cost)
nmod(basis, mold)
case(contour, with)
advmod(intricate, more)
amod(contour, intricate)
nmod(mold, contour)
cc(property, and)
case(property, with)
amod(property, superior)
conj(contour, property)
case(foam, to)
amod(foam, latex)
nmod(property, foam)
punct(possible, .)
det(foam, the)
amod(foam, polyester)
compound(foam, urethane)
nsubj:pass(produce, foam)
aux:pass(produce, be)
advmod(produce, generally)
root(ROOT, produce)
case(polyester, with)
compound(polyester, adipic)
compound(polyester, acid)
obl(produce, polyester)
punct(produce, ;)
punct(produce, ;)
det(group, the)
compound(group, polyether)
nsubj(consist, group)
advmod(consist, generally)
parataxis(produce, consist)
case(foam, of)
obl(consist, foam)
acl(foam, produce)
case(glycol, with)
amod(glycol, polypropylene)
obl(produce, glycol)
cc(glycol, or)
amod(glycol, polypropylene)
conj(glycol, glycol)
acl(glycol, modify)
case(triol, with)
det(triol, a)
obl(modify, triol)
punct(produce, .)
nummod(shot, one)
nsubj:pass(mix, shot)
case(prepolymer, vs.)
nmod(shot, prepolymer)
case(system, in)
det(system, the)
compound(system, prepolymer)
nmod(shot, system)
punct(mix, ,)
det(isocyanate, the)
nsubj:pass(mix, isocyanate)
cc(resin, and)
conj(isocyanate, resin)
aux:pass(mix, be)
root(ROOT, mix)
advmod(mix, anhydrously)
cc(occur, and)
det(foam, no)
nsubj(occur, foam)
conj(mix, occur)
punct(mix, .)
det(foam, the)
nsubj:pass(accomplish, foam)
aux(accomplish, can)
aux:pass(accomplish, be)
root(ROOT, accomplish)
case(time, at)
det(time, some)
amod(time, future)
obl(accomplish, time)
case(location, at)
det(location, a)
amod(location, different)
obl(accomplish, location)
case(addition, by)
det(addition, the)
obl(accomplish, addition)
case(proportion, of)
det(proportion, the)
amod(proportion, correct)
nmod(addition, proportion)
case(catalyst, of)
nmod(proportion, catalyst)
case(solution, in)
nmod(proportion, solution)
punct(accomplish, .)
case(shot, in)
nummod(shot, one)
punct(shot, -)
obl(mix, shot)
punct(mix, ,)
det(isocyanate, the)
nsubj:pass(mix, isocyanate)
punct(polyester, ,)
conj(isocyanate, polyester)
cc(polyether, or)
compound(resin, polyether)
conj(isocyanate, resin)
punct(catalyst, ,)
conj(isocyanate, catalyst)
punct(additive, ,)
cc(additive, and)
amod(additive, other)
conj(isocyanate, additive)
aux:pass(mix, be)
root(ROOT, mix)
advmod(mix, directly)
cc(produce, and)
det(foam, a)
nsubj:pass(produce, foam)
aux:pass(produce, be)
conj(mix, produce)
advmod(produce, immediately)
punct(mix, . )
advmod(mean, basically)
punct(mean, ,)
nsubj(mean, this)
root(ROOT, mean)
mark(require, that)
amod(equipment, simpler)
compound(equipment, processing)
nsubj:pass(require, equipment)
punct(have, ()
det(mixture, the)
nsubj(have, mixture)
parataxis(equipment, have)
amod(characteristic, good)
amod(characteristic, flow)
obj(have, characteristic)
punct(have, ))
cc(heat, and)
advmod(external, less)
amod(heat, external)
conj(equipment, heat)
punct(exothermic, ()
det(reaction, the)
compound(reaction, foam)
nsubj(exothermic, reaction)
cop(exothermic, be)
parataxis(heat, exothermic)
cc(develop, and)
conj(exothermic, develop)
amod(heat, internal)
obj(develop, heat)
punct(exothermic, ))
aux:pass(require, be)
ccomp(mean, require)
case(foam, in)
nummod(shot, one)
punct(shot, -)
compound(foam, shot)
obl(require, foam)
punct(require, ,)
mark(one, although)
punct(one, ,)
case(time, at)
det(time, the)
amod(time, same)
obl(one, time)
punct(one, ,)
det(problem, the)
nsubj(one, problem)
mark(control, of)
acl(problem, control)
det(condition, the)
obj(control, condition)
case(foam, of)
nummod(shot, one)
punct(shot, -)
compound(foam, shot)
nmod(condition, foam)
cop(one, be)
amod(one, critical)
conj(require, one)
punct(mean, .)
nsubj(require, property)
advmod(commercial, most)
amod(use, commercial)
nsubj(require, use)
case(foam, of)
compound(foam, urethane)
nmod(use, foam)
root(ROOT, require)
obj(require, density)
case(lb, between)
nummod(lb, 2)
cc(30, and)
conj(2, 30)
nmod(density, lb)
punct(require, .)
punct(ft., /)
compound(ft., cu.)
root(ROOT, ft.)
case(foam, for)
amod(foam, rigid)
nmod(ft., foam)
punct(ft., ,)
case(ft., between)
nummod(ft., 1)
cc(3, and)
conj(1, 3)
compound(ft., lb.)
punct(cu., /)
conj(lb., cu.)
conj(ft., ft.)
case(foam, for)
amod(foam, flexible)
nmod(ft., foam)
punct(ft., .)
det(figure, this)
amod(figure, latter)
nsubj(compare, figure)
root(ROOT, compare)
case(rubber, with)
amod(rubber, latex)
compound(rubber, foam)
obl(compare, rubber)
case(average, at)
det(average, a)
obl(compare, average)
case(ft., of)
nummod(ft., 5.5)
compound(ft., lb.)
punct(cu., /)
conj(lb., cu.)
nmod(average, ft.)
case(grade, in)
amod(grade, commercial)
nmod(ft., grade)
punct(compare, .)
compound(strength, Compression)
root(ROOT, strength)
punct(strength, :)
appos(strength, Graph)
case(Fig., in)
nmod(Graph, Fig.)
nummod(Fig., 1)
punct(p., ,)
appos(Fig., p.)
nummod(p., 392)
punct(indicate, ,)
parataxis(strength, indicate)
advmod(vary, how)
det(ratio, the)
nsubj(vary, ratio)
case(strength, of)
amod(strength, compressive)
nmod(ratio, strength)
case(density, to)
nmod(strength, density)
ccomp(indicate, vary)
mark(increase, as)
det(latter, the)
nsubj:pass(increase, latter)
aux:pass(increase, be)
advcl(vary, increase)
cc(decrease, or)
conj(increase, decrease)
punct(strength, .)
det(line, the)
amod(line, single)
compound(line, curve)
nsubj(represent, line)
root(ROOT, represent)
det(formulation, a)
amod(formulation, specific)
obj(represent, formulation)
case(example, in)
det(example, a)
compound(example, test)
nmod(formulation, example)
punct(represent, .)
mark(varying, by)
advcl(move, varying)
det(formula, the)
obj(varying, formula)
punct(move, ,)
det(curve, this)
nsubj:pass(move, curve)
aux(move, may)
aux:pass(move, be)
root(ROOT, move)
advmod(move, forward)
cc(backward, or)
conj(forward, backward)
case(coordinate, along)
det(coordinate, the)
obl(move, coordinate)
mark(produce, to)
acl(coordinate, produce)
det(strength, any)
amod(strength, desire)
compound(strength, compression)
obj(produce, strength)
cc(ratio, /)
compound(ratio, density)
conj(strength, ratio)
punct(conductivity, .)
amod(conductivity, Thermal)
appos(strength, conductivity)
cc(resistance, and)
compound(resistance, temperature)
conj(conductivity, resistance)
punct(conductivity, :)
case(foam, in)
amod(foam, flexible)
compound(foam, urethane)
obl(refer, foam)
punct(refer, ,)
nsubj(refer, we)
aux(refer, be)
parataxis(move, refer)
case(range, to)
det(range, the)
obl(refer, range)
case(temperature, between)
det(temperature, the)
amod(temperature, highest)
cc(lowest, and)
conj(highest, lowest)
nmod(range, temperature)
case(which, under)
obl(remain, which)
det(material, the)
nmod:poss(performance, material)
case(material, 's)
amod(performance, primary)
nsubj(remain, performance)
acl:relcl(temperature, remain)
advmod(useful, functionally)
xcomp(remain, useful)
punct(move, .)
case(resistance, in)
compound(resistance, temperature)
obl(related, resistance)
punct(related, ,)
det(quality, this)
nsubj(related, quality)
cop(related, be)
advmod(related, usually)
root(ROOT, related)
case(property, to)
amod(property, specific)
obl(related, property)
punct(property, ,)
advmod(flexural, e.g.)
punct(flexural, ,)
conj(property, flexural)
punct(strength, ,)
compound(strength, tensile)
conj(property, strength)
punct(etc, ,)
conj(property, etc)
punct(traceable, .)
punct(traceable, .)
compound(conductivity, Thermal)
nsubj(traceable, conductivity)
cop(traceable, be)
advmod(traceable, directly)
parataxis(related, traceable)
case(porous, to)
det(material, the)
nmod:poss(porous, material)
case(material, 's)
obl(traceable, porous)
punct(porous, ,)
amod(construction, air-cell)
conj(porous, construction)
nsubj(trap, which)
advmod(trap, effectively)
acl:relcl(construction, trap)
obj(trap, air)
cc(gas, or)
det(gas, a)
conj(air, gas)
case(maze, in)
det(maze, the)
obl(trap, maze)
case(minute, of)
compound(bubble, minute)
nmod(maze, bubble)
nsubj(form, which)
acl:relcl(bubble, form)
nmod:poss(composition, its)
obj(form, composition)
punct(traceable, .)
det(bubble, these)
compound(bubble, air)
cc(gas, or)
conj(air, gas)
nsubj(make, bubble)
root(ROOT, make)
advmod(functional, highly)
amod(barrier, functional)
amod(barrier, thermal)
obj(make, barrier)
punct(make, .)
det(factor, the)
nummod(factor, k)
nsubj(range, factor)
punct(factor, ,)
det(term, a)
appos(factor, term)
acl(term, use)
mark(denote, to)
xcomp(use, denote)
det(rate, the)
obj(denote, rate)
case(transmission, of)
compound(transmission, heat)
nmod(rate, transmission)
case(material, through)
det(material, a)
nmod(rate, material)
punct(B.t.u., ()
appos(material, B.t.u.)
cc(sq., /)
compound(ft., sq.)
conj(B.t.u., ft.)
case(material/hr./*0f./in., of)
nmod(ft., material/hr./*0f./in.)
case(thickness, of)
nmod(material/hr./*0f./in., thickness)
punct(B.t.u., ))
root(ROOT, range)
case(0.24, from)
obl(range, 0.24)
case(0.28, to)
nmod(0.24, 0.28)
case(foam, for)
amod(foam, flexible)
compound(foam, urethane)
obl(range, foam)
cc(0.12, and)
case(0.12, from)
conj(foam, 0.12)
case(0.16, to)
nmod(0.12, 0.16)
case(foam, for)
amod(foam, rigid)
compound(foam, urethane)
nmod(0.12, foam)
punct(formulation, ,)
case(formulation, depend)
case(formulation, upon)
det(formulation, the)
nmod(foam, formulation)
punct(density, ,)
conj(formulation, density)
punct(size, ,)
compound(size, cell)
conj(formulation, size)
punct(nature, ,)
cc(nature, and)
conj(formulation, nature)
case(agent, of)
compound(agent, blowing)
nmod(nature, agent)
acl(agent, use)
punct(table, .)
appos(agent, table)
nummod(table, 1)
punct(table, ,)
punct(p., ,)
appos(table, p.)
nummod(p., 394)
punct(show, ,)
conj(range, show)
det(comparison, a)
obj(show, comparison)
case(ratings, of)
nummod(ratings, k)
compound(ratings, factor)
nmod(comparison, ratings)
case(number, of)
det(number, a)
nmod(ratings, number)
case(material, of)
amod(material, commercial)
compound(material, insulate)
nmod(number, material)
case(use, in)
amod(use, common)
nmod(material, use)
punct(number, ,)
case(type, include)
nummod(type, two)
amod(type, different)
nmod(material, type)
case(foam, of)
amod(foam, rigid)
compound(foam, urethane)
nmod(type, foam)
punct(type, .)
amod(strength, Flexural)
appos(type, strength)
punct(show, : )
det(term, this)
nsubj(refer, term)
root(ROOT, refer)
case(ability, to)
det(ability, the)
obl(refer, ability)
case(material, of)
det(material, a)
nmod(ability, material)
mark(resist, to)
acl(material, resist)
compound(stress, bend)
obj(resist, stress)
cc(determine, and)
aux:pass(determine, be)
conj(refer, determine)
mark(measure, by)
advcl(determine, measure)
det(load, the)
obj(measure, load)
acl(load, require)
mark(cause, to)
xcomp(require, cause)
obj(cause, failure)
mark(bend, by)
advcl(cause, bend)
punct(refer, .)
det(foam, the)
amod(density, higher)
punct(density, -)
compound(foam, density)
compound(foam, urethane)
amod(foam, semi-rigid)
nsubj(have, foam)
advmod(have, usually)
root(ROOT, have)
amod(resistance, stronger)
compound(resistance, flex)
compound(resistance, fatigue)
obj(have, resistance)
punct(resistance, ,)
advmod(have, i.e.)
punct(have, ,)
det(foam, the)
nummod(lb., 12)
compound(foam, lb.)
punct(cu., /)
compound(foam, cu.)
compound(foam, ft.)
nsubj(have, foam)
parataxis(have, have)
nummod(time, 8)
nmod:npmod(strength, time)
det(strength, the)
amod(strength, flexural)
obj(have, strength)
case(lb, of)
det(lb, the)
nummod(lb, 3)
nmod(strength, lb)
punct(have, .)
punct(cu., /)
compound(density, cu.)
compound(density, ft.)
root(ROOT, density)
punct(density, .)
root(ROOT, note)
mark(improve, that)
amod(strength, flexural)
nsubj:pass(improve, strength)
aux:pass(improve, be)
advmod(improve, not)
advmod(improve, always)
ccomp(note, improve)
mark(increase, by)
advmod(increase, simply)
advcl(improve, increase)
det(density, the)
obj(increase, density)
punct(proportional, ,)
cc(proportional, nor)
cop(proportional, be)
det(change, the)
nsubj(proportional, change)
advmod(proportional, always)
conj(improve, proportional)
case(formulation, from)
nummod(formulation, one)
obl(proportional, formulation)
case(another, to)
nmod(formulation, another)
punct(note, .)
mark(factor, where)
amod(strength, flexural)
nsubj(factor, strength)
cop(factor, be)
det(factor, a)
amod(factor, important)
advcl(sure, factor)
punct(sure, ,)
cop(sure, be)
root(ROOT, sure)
mark(aware, that)
nmod:poss(processor, you)
compound(processor, urethane)
compound(processor, foam)
nsubj(aware, processor)
cop(aware, be)
ccomp(sure, aware)
case(it, of)
obl(aware, it)
punct(strength, .)
compound(strength, Tensile)
ccomp(sure, strength)
punct(sure, : )
det(property, this)
nsubj(refer, property)
root(ROOT, refer)
case(stress, to)
det(stress, the)
amod(stress, greatest)
amod(stress, longitudinal)
obl(refer, stress)
cc(tension, or)
conj(stress, tension)
det(material, a)
nsubj(endure, material)
aux(endure, can)
acl:relcl(stress, endure)
mark(tear, without)
advcl(endure, tear)
advmod(tear, apart)
punct(refer, . )
punct(have, ()
case(strength, like)
amod(strength, compression)
obl(have, strength)
case(foam, of)
compound(foam, urethane)
nmod(strength, foam)
punct(have, ,)
nsubj(have, it)
root(ROOT, have)
det(relationship, a)
amod(relationship, direct)
obj(have, relationship)
case(formulation, to)
nmod(relationship, formulation)
punct(have, .)
punct(have, ))
amod(strength, exceptional)
compound(strength, tensile)
nsubj(another, strength)
cop(another, be)
root(ROOT, another)
case(feature, of)
compound(foam, urethane)
nmod:poss(feature, foam)
case(foam, 's)
amod(feature, strong)
nmod(another, feature)
punct(feature, .)
parataxis(feature, Figure)
obj(Figure, 2)
punct(Figure, ,)
advmod(Figure, above)
punct(show, ,)
conj(Figure, show)
det(property, the)
compound(property, age)
obj(show, property)
case(foam, of)
compound(foam, urethane)
nmod(property, foam)
mark(determine, as)
advcl(show, determine)
case(percent, by)
det(percent, the)
obl(determine, percent)
case(change, of)
nmod(percent, change)
case(strength, in)
compound(strength, tensile)
nmod(change, strength)
case(exposure, during)
nmod(percent, exposure)
case(light, to)
amod(light, ultra-violet)
nmod(exposure, light)
punct(another, .)
compound(urethane, process)
nsubj(be, urethane)
expl(be, there)
root(ROOT, be)
amod(way, many)
nsubj(be, way)
mark(produce, of)
acl(way, produce)
det(product, a)
amod(product, foam)
compound(product, urethane)
obj(produce, product)
punct(be, .)
det(foam, the)
nsubj:pass(make, foam)
aux(make, can)
aux:pass(make, be)
root(ROOT, make)
case(stock, into)
compound(stock, slab)
obl(make, stock)
cc(cut, and)
conj(make, cut)
case(shape, to)
obl(cut, shape)
punct(make, ,)
nsubj:pass(mold, it)
aux(mold, can)
aux:pass(mold, be)
parataxis(make, mold)
punct(make, ,)
nsubj:pass(pour, it)
aux(pour, can)
aux:pass(pour, be)
conj(mold, pour)
punct(pour, -)
case(place, in)
punct(place, -)
obl(pour, place)
punct(apply, ,)
nsubj:pass(apply, it)
aux(apply, can)
aux:pass(apply, be)
parataxis(pour, apply)
case(gun, by)
compound(gun, spray)
obl(apply, gun)
punct(gun, ,)
conj(gun, etc)
punct(make, .)
punct(make, .)
compound(stock, slab)
nsubj(one, stock)
cop(one, be)
advmod(one, still)
root(ROOT, one)
case(form, of)
det(form, the)
advmod(important, most)
amod(form, important)
nmod(one, form)
case(product, of)
compound(product, urethane)
compound(product, end)
punct(product, -)
nmod(form, product)
case(use, in)
nmod(form, use)
obl:tmod(use, today)
punct(one, .)
advmod(consist, basically)
punct(one, ,)
det(machine, the)
compound(machine, foam)
nsubj(consist, machine)
nsubj(produce, that)
acl:relcl(machine, produce)
amod(stock, such)
obj(produce, stock)
acl:relcl(one, consist)
case(unit, of)
nummod(unit, two)
cc(more, or)
conj(two, more)
compound(unit, pump)
obl(consist, unit)
punct(unit, ,)
det(mixer, a)
amod(mixer, variable)
conj(unit, mixer)
punct(mixer, ,)
det(assembly, a)
compound(assembly, nozzle)
compound(assembly, carriage)
conj(unit, assembly)
punct(belt, ,)
cc(belt, and)
punct(belt, ,)
case(case, in)
amod(case, many)
nmod(belt, case)
punct(belt, ,)
det(belt, a)
compound(belt, conveyor)
conj(unit, belt)
mark(transport, to)
acl(belt, transport)
cc(contain, and)
conj(transport, contain)
det(liquid, the)
obj(contain, liquid)
case(process, during)
det(process, the)
compound(process, reaction)
obl(contain, process)
cc(solidify, and)
mark(solidify, until)
nsubj(solidify, it)
advcl(contain, solidify)
case(foam, into)
obl(solidify, foam)
punct(one, .)
det(ingredient, the)
nsubj:pass(feed, ingredient)
aux:pass(feed, be)
root(ROOT, feed)
case(tank, from)
obl(feed, tank)
case(hose, through)
det(hose, a)
obl(feed, hose)
cc(mixer, and)
case(mixer, into)
det(mixer, the)
conj(hose, mixer)
case(rate, at)
det(rate, a)
amod(rate, predetermine)
nmod(mixer, rate)
punct(feed, .)
det(head, the)
compound(head, mixing)
nsubj(move, head)
root(ROOT, move)
advmod(move, back)
cc(forth, and)
conj(back, forth)
advmod(move, slowly)
case(width, across)
det(width, the)
obl(move, width)
case(receptacle, of)
det(receptacle, the)
nmod(width, receptacle)
punct(move, .)
nsubj(take, it)
advmod(take, only)
root(ROOT, take)
det(minute, a)
amod(minute, few)
obj(take, minute)
mark(complete, for)
det(action, the)
compound(action, foam)
nsubj:pass(complete, action)
mark(complete, to)
aux:pass(complete, be)
csubj(take, complete)
cc(cut, and)
case(cure, after)
det(cure, a)
amod(cure, short)
obl(cut, cure)
punct(cut, ,)
det(material, the)
nsubj:pass(cut, material)
aux(cut, can)
aux:pass(cut, be)
conj(take, cut)
case(length, into)
obl(cut, length)
mark(desire, as)
advcl(cut, desire)
punct(cut, .)
nsubj:pass(do, much)
aux(do, have)
aux:pass(do, be)
conj(cut, do)
case(way, in)
det(way, the)
obl(do, way)
case(slitter, of)
amod(slitter, ingenious)
nmod(way, slitter)
mark(fabricate, to)
acl(way, fabricate)
det(stock, the)
compound(stock, slab)
obj(fabricate, stock)
case(product, into)
amod(product, finish)
obl(fabricate, product)
punct(take, .)
compound(machine, Profile)
compound(machine, cutting)
nsubj(available, machine)
cop(available, be)
root(ROOT, available)
nsubj(split, which)
aux(split, can)
ccomp(available, split)
obj(split, foam)
case(thickness, to)
det(thickness, any)
amod(thickness, desire)
obl(split, thickness)
cc(produce, and)
conj(split, produce)
obj(produce, sine)
punct(triangle, ,)
conj(sine, triangle)
punct(trapezoid, ,)
conj(sine, trapezoid)
punct(profile, ,)
cc(profile, and)
amod(profile, other)
conj(sine, profile)
case(height, in)
amod(height, variable)
nmod(profile, height)
punct(dimension, ,)
conj(height, dimension)
punct(etc, ,)
conj(height, etc)
punct(available, .)
punct(available, .)
det(sheet, the)
amod(sheet, convolute)
nsubj:pass(combine, sheet)
aux(combine, can)
aux:pass(combine, be)
root(ROOT, combine)
mark(attain, to)
advcl(combine, attain)
amod(effect, certain)
compound(effect, cushion)
obj(attain, effect)
advmod(attain, mechanically)
cc(chemically, rather)
fixed(rather, than)
advmod(attain, chemically)
punct(combine, .)
advmod(available, also)
root(ROOT, available)
cop(available, be)
det(slitter, a)
nsubj(available, slitter)
nsubj(peel, which)
punct(peel, ``)
acl:relcl(slitter, peel)
punct(peel, '')
det(inside, the)
obj(peel, inside)
case(block, of)
det(block, a)
amod(block, fold)
nmod(inside, block)
case(foam, of)
nmod(block, foam)
cc(use, and)
aux(use, can)
aux:pass(use, be)
conj(peel, use)
mark(slit, to)
xcomp(use, slit)
amod(sheet, continuous)
obj(slit, sheet)
case(yd., up)
fixed(up, to)
nummod(yd., 300)
obl(slit, yd.)
case(length, in)
nmod(yd., length)
punct(slit, ,)
case(1/16, down)
fixed(down, to)
obl(in, 1/16)
advmod(slit, in)
punct(available, .)
root(ROOT, thick)
punct(thick, .)
det(cost, the)
amod(cost, low)
root(ROOT, cost)
cc(ease, and)
conj(cost, ease)
case(fabrication, of)
nmod(cost, fabrication)
case(die, of)
det(die, the)
nmod(fabrication, die)
case(cutting, for)
compound(dimensional, three)
punct(dimensional, -)
amod(cutting, dimensional)
compound(cutting, foam)
nmod(cost, cutting)
cc(variety, plus)
det(variety, the)
amod(variety, wide)
conj(cutting, variety)
case(shape, of)
nmod(variety, shape)
punct(dimension, ,)
conj(shape, dimension)
punct(contour, ,)
cc(contour, and)
conj(shape, contour)
nsubj(tailor, that)
aux(tailor, can)
cop(tailor, be)
acl:relcl(shape, tailor)
punct(make, -)
advcl(tailor, make)
case(requirement, to)
compound(requirement, customer)
obl(make, requirement)
aux(make, have)
ccomp(make, make)
det(technique, the)
obj(make, technique)
amod(technique, useful)
mark(produce, for)
advcl(useful, produce)
compound(liner, case)
obj(produce, liner)
punct(material, ,)
conj(liner, material)
compound(container, handling)
conj(liner, container)
punct(package, ,)
conj(liner, package)
cc(device, and)
compound(device, cushion)
conj(liner, device)
punct(novelty, ,)
cc(novelty, and)
amod(novelty, such)
conj(liner, novelty)
case(dish, as)
compound(dish, soap)
nmod(novelty, dish)
punct(toy, ,)
conj(dish, toy)
punct(rest, ,)
compound(rest, head)
conj(dish, rest)
punct(support, ,)
compound(support, arch)
conj(liner, support)
punct(cover, ,)
cc(cover, and)
compound(cover, gas)
compound(cover, pedal)
conj(liner, cover)
punct(make, .)
nsubj(become, Molding)
mark(appear, although)
compound(stock, slab)
nsubj(appear, stock)
advcl(become, appear)
advmod(appear, first)
punct(become, ,)
nsubj(become, it)
advmod(become, soon)
root(ROOT, become)
xcomp(become, apparent)
mark(process, that)
case(production, for)
det(production, the)
obl(process, production)
case(cushion, of)
nmod(production, cushion)
case(shape, with)
amod(shape, irregular)
nmod(production, shape)
punct(contour, ,)
amod(contour, crowned)
conj(shape, contour)
punct(edge, ,)
cc(edge, or)
amod(edge, round)
conj(shape, edge)
punct(process, ,)
det(cutting, the)
nsubj(process, cutting)
case(stock, of)
compound(stock, slab)
nmod(cutting, stock)
cop(process, be)
det(process, a)
amod(process, wasteful)
cc(uneconomical, and)
conj(wasteful, uneconomical)
ccomp(apparent, process)
punct(apparent, .)
advmod(resort, only)
mark(resort, by)
advcl(hope, resort)
case(technique, to)
compound(technique, molding)
obl(resort, technique)
aux(hope, can)
det(manufacturer, the)
compound(manufacturer, cushion)
nsubj(hope, manufacturer)
root(ROOT, hope)
mark(compete, to)
xcomp(hope, compete)
advmod(compete, satisfactorily)
case(market, in)
det(market, the)
amod(market, establish)
compound(market, cushion)
obl(compete, market)
punct(hope, .)
det(molding, the)
amod(molding, close)
nsubj(problem, molding)
case(foam, of)
amod(urethane, flexible)
compound(foam, urethane)
nmod(molding, foam)
aux(problem, have)
cop(problem, be)
det(problem, a)
root(ROOT, problem)
advmod(problem, ever)
mark(achieve, since)
det(introduction, the)
nsubj:pass(achieve, introduction)
case(material, of)
det(material, the)
nmod(introduction, material)
punct(molding, ()
appos(introduction, molding)
case(mold, in)
amod(mold, open)
nmod(molding, mold)
cop(feasible, be)
advmod(feasible, more)
amod(method, feasible)
punct(feasible, ))
punct(method, .)
amod(method, satisfactory)
parataxis(problem, method)
case(foam, for)
amod(foam, polyester)
nmod(method, foam)
cc(foam, and)
advmod(foam, even)
compound(foam, prepolymer)
compound(foam, polyether)
nsubj:pass(achieve, foam)
aux:pass(achieve, be)
advmod(achieve, never)
advmod(achieve, fully)
acl:relcl(method, achieve)
punct(problem, .)
amod(molding, close)
nsubj(result, molding)
advmod(result, generally)
root(ROOT, result)
case(part, in)
obl(result, part)
acl(part, weigh)
obj(weigh, more)
punct(density, ()
case(density, because)
fixed(because, of)
amod(density, higher)
obl(weigh, density)
punct(density, ))
case(part, than)
obl(weigh, part)
acl(part, fabricate)
case(foam, from)
amod(blow, free)
punct(blow, -)
amod(foam, blow)
obl(fabricate, foam)
punct(result, .)
nsubj(counteract, this)
root(ROOT, counteract)
det(gain, the)
obj(counteract, gain)
mark(have, from)
acl(gain, have)
det(loss, no)
compound(loss, scrap)
obj(have, loss)
punct(counteract, .)
case(addition, in)
obl(be, addition)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, difficulty)
case(flow, with)
det(flow, the)
nmod(difficulty, flow)
cc(spread, and)
conj(flow, spread)
case(mixture, of)
det(mixture, the)
compound(mixture, foam)
nmod(flow, mixture)
case(surface, over)
det(surface, the)
compound(surface, mold)
nmod(mixture, surface)
punct(trouble, ,)
conj(flow, trouble)
case(lack, with)
nmod(trouble, lack)
case(strength, of)
compound(strength, gel)
nmod(lack, strength)
case(foam, in)
det(foam, the)
amod(foam, rise)
nmod(lack, foam)
punct(problem, ,)
cc(problem, and)
conj(flow, problem)
case(split, of)
nmod(problem, split)
punct(be, .)
det(introduction, the)
nsubj(help, introduction)
case(system, of)
nummod(shot, one)
punct(shot, -)
compound(system, shot)
compound(foam, polyether)
compound(system, foam)
nmod(introduction, system)
punct(system, ,)
acl(system, aid)
case(development, by)
det(development, the)
obl(aid, development)
case(catalyst, of)
amod(catalyst, new)
nmod(development, catalyst)
punct(help, ,)
root(ROOT, help)
mark(alleviate, to)
xcomp(help, alleviate)
obj(alleviate, some)
case(problem, of)
det(problem, the)
nmod(some, problem)
case(molding, of)
amod(molding, close)
nmod(problem, molding)
punct(help, .)
mark(be, while)
expl(be, there)
advcl(develop, be)
advmod(be, still)
amod(bug, many)
nsubj(be, bug)
mark(irone, to)
aux:pass(irone, be)
acl(bug, irone)
compound:prt(irone, out)
punct(develop, ,)
det(technique, the)
nsubj(develop, technique)
aux(develop, be)
advmod(develop, fast)
root(ROOT, develop)
punct(develop, .)
amod(system, other)
compound(system, technique)
amod(system, simple)
nsubj(available, system)
cop(available, be)
root(ROOT, available)
mark(make, that)
ccomp(available, make)
obj(make, it)
xcomp(make, possible)
case(component, for)
compound(foam, urethane)
compound(component, foam)
obl(possible, component)
mark(pour, to)
aux:pass(pour, be)
xcomp(make, pour)
punct(pump, ,)
conj(pour, pump)
punct(etc., ,)
conj(pour, etc.)
punct(pour, ,)
case(void, into)
det(void, a)
obl(pour, void)
advmod(foam, where)
nsubj(foam, they)
acl:relcl(void, foam)
compound:prt(foam, up)
mark(fill, to)
advcl(foam, fill)
det(void, the)
obj(fill, void)
punct(available, .)
case(application, in)
det(application, a)
amod(application, typical)
root(ROOT, application)
punct(application, --)
det(making, the)
appos(application, making)
case(panel, of)
amod(panel, rigid)
compound(panel, urethane)
compound(panel, foam)
compound(panel, sandwich)
nmod(making, panel)
punct(making, --)
det(amount, a)
appos(making, amount)
case(mixture, of)
compound(mixture, foam)
nmod(amount, mixture)
acl(amount, calculate)
mark(expand, to)
xcomp(calculate, expand)
nummod(%, 10)
case(20, to)
nmod(10, 20)
obl:npmod(more, %)
advmod(expand, more)
mark(pour, than)
det(volume, the)
nsubj:pass(pour, volume)
case(panel, of)
det(panel, the)
nmod(volume, panel)
aux:pass(pour, be)
advcl(more, pour)
case(void, into)
det(void, the)
compound(void, panel)
obl(pour, void)
cc(lock, and)
det(top, the)
nsubj:pass(lock, top)
case(panel, of)
det(panel, the)
nmod(top, panel)
aux:pass(lock, be)
conj(void, lock)
case(place, in)
obl(lock, place)
case(jig, by)
det(jig, a)
obl(lock, jig)
punct(lock, .)
nsubj:pass(maintain, Temperature)
case(water, of)
det(water, the)
compound(water, wash)
cc(rinse, and)
conj(wash, rinse)
nmod(Temperature, water)
aux:pass(maintain, be)
conj(lock, maintain)
case(f, at)
nummod(f, 85)
case(90, -)
nmod(85, 90)
punct(degree, -)
compound(f, degree)
punct(f, -)
obl(maintain, f)
punct(29, ()
nummod(f, 29)
case(32, -)
nmod(29, 32)
case(degree, -)
nmod(29, degree)
case(c, -)
nmod(degree, c)
punct(29, ))
punct(maintain, .)
det(roll, the)
amod(roll, top)
nsubj:pass(load, roll)
aux:pass(load, be)
root(ROOT, load)
case(lb, with)
nummod(lb, 40)
obl(load, lb)
punct(load, .)
root(ROOT, .)
nummod(lbs., Sixty)
compound(loading, lbs.)
nsubj(possible, loading)
cop(possible, be)
root(ROOT, possible)
cc(lbs., but)
nummod(lbs., 40)
conj(possible, lbs.)
cop(adequate, be)
root(ROOT, adequate)
punct(adequate, .)
det(drain, the)
compound(box, sud)
compound(drain, box)
nsubj:pass(arrange, drain)
aux:pass(arrange, be)
root(ROOT, arrange)
case(start, at)
det(start, the)
obl(arrange, start)
mark(deliver, to)
acl(start, deliver)
case(pipe, into)
det(pipe, the)
amod(pipe, raise)
amod(pipe, main)
compound(pipe, drain)
obl(deliver, pipe)
punct(return, ()
advmod(return, thus)
acl(pipe, return)
obj(return, sud)
case(box, to)
compound(box, soap)
obl(return, box)
punct(return, ))
cc(start, and)
det(machine, the)
nsubj:pass(start, machine)
aux:pass(start, be)
conj(arrange, start)
punct(arrange, .)
det(bath, the)
nummod(ml., 160)
punct(ml., -)
compound(bath, ml.)
nsubj:pass(apply, bath)
acl(bath, contain)
det(amount, the)
amod(amount, calculate)
obj(contain, amount)
case(detergent, of)
nmod(amount, detergent)
aux:pass(apply, be)
root(ROOT, apply)
advmod(apply, slowly)
cc(directly, and)
advmod(specimen, directly)
case(specimen, to)
det(specimen, the)
compound(specimen, running)
obl(apply, specimen)
punct(apply, . )
nsubj:pass(continue, wash)
aux:pass(continue, be)
root(ROOT, continue)
case(minute, for)
nummod(minute, 30)
obl(continue, minute)
cc(period, or)
case(period, for)
det(period, a)
conj(continue, period)
case(time, of)
nmod(period, time)
amod(period, sufficient)
mark(allow, to)
advcl(sufficient, allow)
nummod(nip, 100)
obj(allow, nip)
cc(pass, or)
conj(nip, pass)
case(roll, through)
det(roll, the)
compound(roll, squeeze)
nmod(nip, roll)
punct(continue, .)
case(conclusion, at)
det(conclusion, the)
obl(meter, conclusion)
case(wash, of)
det(wash, the)
nmod(conclusion, wash)
punct(meter, ,)
nummod(liter, 8)
nsubj:pass(meter, liter)
case(water, of)
nmod(liter, water)
case(f, at)
nummod(degree, 90)
punct(degree, -)
compound(f, degree)
punct(f, -)
nmod(liter, f)
punct(c, ()
nummod(c, 32*0)
appos(f, c)
punct(c, .)
punct(c, ))
aux:pass(meter, be)
advmod(meter, automatically)
root(ROOT, meter)
case(reservoir, from)
det(reservoir, the)
compound(reservoir, rinse)
obl(meter, reservoir)
case(tub, to)
det(tub, the)
compound(tub, wash)
nmod(reservoir, tub)
punct(tub, ,)
nummod(liter, 4)
appos(tub, liter)
case(tub, to)
det(tub, each)
nmod(liter, tub)
punct(meter, .)
det(operation, this)
nsubj(require, operation)
root(ROOT, require)
case(minute, from)
nummod(minute, 10)
case(12, to)
nmod(10, 12)
obl(require, minute)
punct(require, .)
case(operation, during)
det(operation, the)
compound(operation, rinse)
obl(increase, operation)
det(volume, the)
nsubj(increase, volume)
case(tub, in)
det(tub, the)
nmod(volume, tub)
advmod(increase, gradually)
ccomp(require, increase)
mark(begin, until)
nsubj(begin, overflow)
case(drain, from)
det(drain, the)
amod(drain, main)
nmod(overflow, drain)
advcl(increase, begin)
punct(require, .)
case(point, at)
det(point, this)
obl(readjust, point)
det(drain, the)
nsubj:pass(readjust, drain)
aux:pass(readjust, be)
root(ROOT, readjust)
mark(discharge, so)
fixed(so, that)
det(drain, the)
compound(box, sud)
compound(drain, box)
nsubj(discharge, drain)
aux(discharge, will)
advcl(readjust, discharge)
advmod(discharge, directly)
case(line, into)
det(line, the)
compound(line, waste)
obl(discharge, line)
cc(set, and)
det(drain, the)
amod(drain, main)
compound(drain, tub)
nsubj:pass(set, drain)
aux:pass(set, be)
conj(discharge, set)
case(mark, at)
det(mark, the)
compound(1, 2)
punct(1, -)
compound(2, 1)
punct(2, /)
nummod(mark, 2)
obl(set, mark)
case(gauge, on)
det(gauge, the)
compound(gauge, drain)
nmod(mark, gauge)
punct(mark, .)
mark(pass, when)
nsubj(pass, all)
case(water, of)
det(water, the)
compound(water, rinse)
nmod(all, water)
aux(pass, have)
advcl(set, pass)
case(reservoir, from)
det(reservoir, the)
obl(pass, reservoir)
case(tub, to)
det(tub, the)
nmod(reservoir, tub)
det(drain, the)
amod(drain, main)
nsubj:pass(lower, drain)
aux:pass(lower, be)
acl:relcl(tub, lower)
mark(permit, to)
xcomp(lower, permit)
amod(draining, complete)
obj(permit, draining)
case(tub, of)
det(tub, the)
nmod(draining, tub)
punct(readjust, .)
det(run, the)
nsubj(complete, run)
cop(complete, be)
root(ROOT, complete)
mark(drain, when)
det:predet(water, all)
det(water, the)
nsubj(drain, water)
aux(drain, have)
advcl(complete, drain)
compound:prt(drain, off)
case(line, into)
det(line, the)
compound(line, waste)
obl(drain, line)
punct(complete, .)
case(procedure, by)
det(procedure, this)
obl(progress, procedure)
nsubj(progress, rinse)
root(ROOT, progress)
case(stage, in)
nummod(stage, two)
obl(progress, stage)
punct(progress, ,)
advmod(dilution, first)
case(dilution, by)
obl(progress, dilution)
case(time, until)
det(time, the)
obl(progress, time)
mark(separate, when)
det(drain, the)
nsubj:pass(separate, drain)
aux:pass(separate, be)
advcl(progress, separate)
cc(thereafter, and)
conj(separate, thereafter)
case(displacement, by)
obl(separate, displacement)
case(liquor, of)
det(liquor, the)
compound(bear, soil)
punct(bear, -)
compound(liquor, bear)
nmod(displacement, liquor)
case(water, by)
amod(water, clean)
compound(water, rinse)
nmod(liquor, water)
punct(pass, ,)
mark(soil, since)
amod(liquor, soil)
nsubj(pass, liquor)
acl(liquor, squeeze)
case(specimen, from)
det(specimen, the)
obl(squeeze, specimen)
case(nip, at)
det(nip, the)
nmod(specimen, nip)
conj(progress, pass)
advmod(pass, directly)
mark(waste, to)
advcl(pass, waste)
case(drain, from)
det(drain, the)
compound(box, sud)
compound(drain, box)
obl(waste, drain)
punct(progress, .)
det(method, this)
nsubj(appear, method)
case(rinse, of)
nmod(method, rinse)
root(ROOT, appear)
mark(produce, to)
xcomp(appear, produce)
amod(cleansing, maximum)
obj(produce, cleansing)
case(redeposition, with)
amod(redeposition, minimum)
compound(redeposition, soil)
nmod(cleansing, redeposition)
punct(appear, .)
amod(evaluation, suggest)
nsubj:pass(make, evaluation)
cc(evaluation, and)
compound(evaluation, classification)
conj(evaluation, evaluation)
aux(make, may)
aux:pass(make, be)
root(ROOT, make)
case(removal, on)
cc:preconj(removal, either)
det(removal, a)
compound(removal, soil)
punct(removal, -)
obl(make, removal)
cc(basis, or)
det(basis, a)
compound(removal, grease)
punct(removal, -)
compound(basis, removal)
conj(removal, basis)
mark(desire, as)
acl(basis, desire)
punct(desire, .)
det(instrument, a)
compound(measure, reflectance)
punct(measure, -)
compound(instrument, measure)
nsubj(desirable, instrument)
aux(desirable, may)
cop(desirable, be)
parataxis(make, desirable)
mark(measure, to)
advcl(desirable, measure)
obj(measure, cleaning)
punct(desirable, ,)
mark(necessary, whereas)
compound(extraction, Soxhlet)
nsubj(necessary, extraction)
cop(necessary, be)
advcl(measure, necessary)
mark(measure, to)
advcl(necessary, measure)
compound(removal, grease)
obj(measure, removal)
punct(purpose, .)
appos(removal, purpose)
cc(scope, and)
conj(purpose, scope)
det(method, this)
compound(method, test)
nsubj:pass(intend, method)
aux:pass(intend, be)
acl:relcl(purpose, intend)
mark(determine, for)
advcl(intend, determine)
det(change, the)
amod(change, dimensional)
obj(determine, change)
case(fabric, of)
amod(fabric, wave)
cc(knit, or)
conj(wave, knit)
nmod(change, fabric)
punct(fabric, ,)
acl(fabric, make)
case(fiber, of)
obl(make, fiber)
advmod(make, other)
case(wool, than)
obl(other, wool)
punct(expect, ,)
mark(expect, to)
aux:pass(expect, be)
advcl(make, expect)
mark(subject, when)
det(cloth, the)
nsubj:pass(subject, cloth)
aux:pass(subject, be)
advcl(expect, subject)
case(procedure, to)
compound(procedure, launder)
obl(subject, procedure)
advmod(use, commonly)
acl(procedure, use)
case(laundry, in)
det(laundry, the)
amod(laundry, commercial)
obl(use, laundry)
cc(home, and)
det(home, the)
conj(laundry, home)
punct(make, . )
nummod(procedure, four)
compound(procedure, wash)
compound(procedure, test)
nsubj:pass(establish, procedure)
aux:pass(establish, be)
root(ROOT, establish)
punct(establish, ,)
advcl(establish, varying)
case(severity, in)
obl(varying, severity)
case(severe, from)
advmod(severe, very)
obl(varying, severe)
case(mild, to)
advmod(mild, very)
obl(severe, mild)
punct(intend, ,)
cc(intend, and)
aux:pass(intend, be)
conj(establish, intend)
mark(cover, to)
xcomp(intend, cover)
det(range, the)
obj(cover, range)
case(wash, of)
amod(wash, practical)
nmod(range, wash)
case(procedure, from)
amod(procedure, commercial)
obl(cover, procedure)
case(wash, to)
compound(wash, hand)
nmod(procedure, wash)
punct(establish, .)
nummod(procedure, five)
compound(procedure, drying)
compound(procedure, test)
nsubj:pass(establish, procedure)
aux:pass(establish, be)
root(ROOT, establish)
mark(cover, to)
advcl(establish, cover)
det(range, the)
obj(cover, range)
case(technique, of)
compound(technique, drying)
nmod(range, technique)
acl(technique, use)
case(home, in)
det(home, the)
obl(use, home)
cc(laundry, and)
amod(laundry, commercial)
conj(home, laundry)
punct(establish, .)
nummod(method, three)
nsubj:pass(establish, method)
mark(determine, for)
acl(method, determine)
det(characteristic, the)
amod(characteristic, dimensional)
compound(characteristic, restorability)
obj(determine, characteristic)
aux:pass(establish, be)
root(ROOT, establish)
case(textile, for)
det(textile, those)
obl(establish, textile)
nsubj(require, which)
acl:relcl(textile, require)
obj(require, restoration)
mark(ironing, by)
obl(require, ironing)
cc(wear, or)
conj(ironing, wear)
case(launder, after)
nmod(ironing, launder)
punct(establish, .)
det(test, these)
nsubj:pass(accelerate, test)
aux:pass(accelerate, be)
advmod(accelerate, not)
root(ROOT, accelerate)
cc(repeat, and)
aux(repeat, must)
aux:pass(repeat, be)
conj(accelerate, repeat)
mark(evaluate, to)
xcomp(repeat, evaluate)
amod(change, dimensional)
obj(evaluate, change)
case(launderings, after)
amod(launderings, repeat)
obl(evaluate, launderings)
punct(accelerate, .)
root(ROOT, table)
nummod(table, 1)
punct(summarize, ,)
parataxis(table, summarize)
obj(summarize, all)
case(wash, of)
det(wash, the)
amod(wash, various)
nmod(all, wash)
punct(drying, ,)
conj(wash, drying)
punct(procedure, ,)
cc(restoration, and)
conj(wash, restoration)
conj(wash, procedure)
amod(wash, available)
punct(table, .)
det(person, the)
nsubj(determine, person)
acl(person, use)
det(test, these)
obj(use, test)
aux(determine, must)
root(ROOT, determine)
det(combination, which)
nsubj(practical, combination)
case(procedure, of)
nmod(combination, procedure)
cop(practical, be)
ccomp(determine, practical)
case(item, for)
det(item, any)
amod(item, specific)
obl(practical, item)
mark(evaluate, in)
fixed(in, order)
mark(evaluate, to)
advcl(practical, evaluate)
det(change, the)
amod(change, dimensional)
obj(evaluate, change)
case(fabric, of)
compound(fabric, textile)
nmod(change, fabric)
cc(garment, or)
conj(fabric, garment)
mark(use, after)
compound(procedure, launder)
nsubj(use, procedure)
advmod(use, commonly)
acl(fabric, use)
case(home, in)
det(home, the)
obl(use, home)
cc(laundry, or)
amod(laundry, commercial)
conj(home, laundry)
punct(determine, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(identify, to)
csubj(possible, identify)
det(procedure, the)
compound(procedure, test)
obj(identify, procedure)
advmod(identify, completely)
case(code, with)
det(code, a)
obl(identify, code)
acl(code, consist)
case(Numeral, of)
det(Numeral, a)
compound(Numeral, Roman)
obl(consist, Numeral)
punct(letter, ,)
det(letter, a)
appos(Numeral, letter)
punct(number, ,)
cc(number, and)
det(number, a)
amod(number, Arabic)
conj(Numeral, number)
punct(number, .)
case(example, for)
nmod(Test, example)
obl(refer, Test)
nummod(Test, 3)
punct(Test, ,)
appos(Test, e)
nummod(e, 1)
acl:relcl(number, refer)
case(specimen, to)
det(specimen, a)
obl(refer, specimen)
nsubj:pass(wash, which)
aux(wash, have)
aux:pass(wash, be)
acl:relcl(specimen, wash)
case(procedure, by)
obl(wash, procedure)
punct(wash, ``)
nummod(wash, 3)
punct(f, ()
punct(f, '')
punct(f, ()
case(f, at)
nummod(degree, 160)
punct(f, -)
compound(f, degree)
punct(f, -)
nmod(3, f)
punct(f, ))
case(total, for)
det(total, a)
nmod(f, total)
case(minute, of)
nummod(minute, 60)
nmod(total, minute)
case(machine, in)
det(machine, the)
nmod(minute, machine)
punct(dry, ,)
aux(dry, have)
aux:pass(dry, be)
acl:relcl(total, dry)
case(dryer, in)
det(dryer, a)
compound(dryer, tumble)
obl(dry, dryer)
case(procedure, by)
obl(dry, procedure)
punct(possible, ``)
nsubj:pass(subject, E)
punct(E, '')
cc(subject, and)
aux(subject, have)
aux:pass(subject, be)
root(ROOT, subject)
case(force, to)
amod(force, restorative)
obl(subject, force)
case(tension, on)
det(tension, the)
nmod(force, tension)
flat(tension, Presser)
case(procedure, by)
obl(subject, procedure)
punct(1, ``)
nummod(wash, 1)
punct(1, '')
punct(1, .)
obl:npmod(subject, principle)
det(specimen, a)
nsubj:pass(wash, specimen)
cc(garment, or)
conj(specimen, garment)
aux:pass(wash, be)
acl:relcl(principle, wash)
case(wheel, in)
det(wheel, a)
amod(wheel, cylindrical)
compound(wheel, reverse)
compound(wheel, wash)
obl(wash, wheel)
punct(dry, ,)
acl(wheel, dry)
cc(subject, and)
conj(dry, subject)
case(force, to)
amod(force, restorative)
obl(subject, force)
advmod(necessary, where)
amod(force, necessary)
punct(Temperature, .)
nsubj:pass(varied, Temperature)
cc(time, and)
conj(Temperature, time)
case(agitation, of)
nmod(Temperature, agitation)
case(wheel, in)
det(wheel, the)
compound(wheel, wash)
nmod(agitation, wheel)
aux:pass(varied, be)
ccomp(necessary, varied)
mark(obtain, to)
advcl(varied, obtain)
amod(degree, different)
obj(obtain, degree)
case(severity, of)
nmod(degree, severity)
punct(procedure, .)
compound(procedure, drying)
nsubj:pass(varied, procedure)
cc(application, and)
conj(procedure, application)
case(procedure, of)
amod(force, restorative)
compound(procedure, force)
nmod(application, procedure)
aux:pass(varied, be)
conj(varied, varied)
mark(conform, to)
xcomp(varied, conform)
case(handling, with)
compound(use, end)
punct(use, -)
compound(handling, use)
obl(conform, handling)
case(home, during)
obl(conform, home)
cc(launder, or)
amod(launder, commercial)
conj(home, launder)
punct(E, .)
nsubj:pass(measure, distance)
acl(distance, mark)
case(specimen, on)
det(specimen, the)
obl(mark, specimen)
case(warp, in)
nmod(specimen, warp)
cc(direction, and)
compound(direction, fill)
conj(warp, direction)
punct(direction, ()
cc(wale, or)
conj(direction, wale)
cc(course, and)
conj(wale, course)
case(fabric, for)
amod(fabric, knit)
nmod(course, fabric)
punct(wale, ))
aux:pass(measure, be)
root(ROOT, measure)
case(launder, before)
cc(launder, and)
conj(before, after)
obl(measure, launder)
punct(measure, .)
nsubj(wash, Apparatus)
cc(material, and)
conj(Apparatus, material)
root(ROOT, wash)
obj(wash, wheel)
punct(wheel, --)
amod(wheel, cylindrical)
compound(wheel, wash)
obj(wash, wheel)
case(type, of)
det(type, the)
compound(type, reverse)
nmod(wheel, type)
punct(wash, .)
det(wheel, the)
nsubj(inch, wheel)
punct(cage, ()
appos(wheel, cage)
punct(cage, ))
cop(inch, be)
nummod(inch, 20)
case(24, to)
nmod(20, 24)
root(ROOT, inch)
case(diameter, inside)
nmod(inch, diameter)
cc(inch, and)
nummod(inch, 20)
case(24, to)
nmod(20, 24)
conj(inch, inch)
case(length, inside)
nmod(inch, length)
punct(inch, .)
expl(be, there)
root(ROOT, be)
nummod(fin, three)
nsubj(be, fin)
det(inch, each)
advmod(three, approximately)
nummod(inch, three)
obl:npmod(wide, inch)
advmod(extend, wide)
acl(fin, extend)
det(length, the)
amod(length, full)
obj(extend, length)
case(inside, of)
det(inside, the)
nmod(length, inside)
case(wheel, of)
det(wheel, the)
nmod(inside, wheel)
punct(be, .)
nummod(fin, one)
nsubj:pass(locate, fin)
aux:pass(locate, be)
root(ROOT, locate)
det(degree, every)
nummod(degree, 120)
punct(degree, -)
obl:tmod(locate, degree)
case(diameter, around)
det(diameter, the)
amod(diameter, inside)
obl(locate, diameter)
case(wheel, of)
det(wheel, the)
nmod(diameter, wheel)
punct(locate, .)
det(wheel, the)
compound(wheel, wash)
nsubj(rotate, wheel)
root(ROOT, rotate)
case(speed, at)
det(speed, a)
obl(rotate, speed)
case(revolution, of)
nummod(revolution, 30)
nmod(speed, revolution)
case(minute, per)
nmod(revolution, minute)
punct(rotate, ,)
advcl(rotate, make)
nummod(revolution, five)
case(ten, to)
nmod(five, ten)
obj(make, revolution)
mark(reverse, before)
advcl(make, reverse)
punct(rotate, .)
det(inlet, the)
compound(inlet, water)
nsubj(large, inlet)
cop(large, be)
root(ROOT, large)
advmod(large, enough)
mark(permit, to)
advcl(large, permit)
xcomp(permit, fill)
det(wheel, the)
obj(fill, wheel)
case(level, to)
det(level, a)
nummod(inch, eight)
punct(inch, -)
compound(level, inch)
obl(fill, level)
case(minute, in)
advmod(two, less)
fixed(less, than)
nummod(minute, two)
obl(fill, minute)
punct(large, ,)
cc(large, and)
det(outlet, the)
nsubj(large, outlet)
cop(large, be)
conj(large, large)
advmod(large, enough)
mark(permit, to)
advcl(enough, permit)
obj(permit, discharge)
case(amount, of)
det(amount, this)
amod(amount, same)
nmod(discharge, amount)
case(water, of)
nmod(amount, water)
case(minute, in)
advmod(two, less)
fixed(less, than)
nummod(minute, two)
obl(permit, minute)
punct(large, .)
det(machine, the)
nsubj:pass(equip, machine)
aux:pass(equip, be)
root(ROOT, equip)
case(pipe, with)
det(pipe, a)
obl(equip, pipe)
mark(inject, for)
acl(pipe, inject)
amod(steam, live)
obj(inject, steam)
nsubj(capable, that)
cop(capable, be)
acl:relcl(steam, capable)
mark(raise, of)
advcl(capable, raise)
det(temperature, the)
obj(raise, temperature)
case(water, of)
nmod(temperature, water)
case(level, at)
det(level, a)
nummod(inch, eight)
punct(inch, -)
compound(level, inch)
obl(raise, level)
case(110, from)
nummod(level, 110)
case(degree, -)
nmod(110, degree)
case(f, to)
nummod(f, 140)
case(degree, -)
nmod(140, degree)
punct(f, -)
nmod(level, f)
punct(38, ()
appos(f, 38)
punct(38, *)
nummod(c, 0)
case(60*0, to)
nmod(0, 60*0)
nmod(38, c)
punct(c, .)
punct(c, ))
case(minute, in)
advmod(two, less)
fixed(less, than)
nummod(minute, two)
obl(raise, minute)
punct(equip, .)
det(machine, the)
nsubj(contain, machine)
aux(contain, shall)
root(ROOT, contain)
det(opening, a)
obj(contain, opening)
case(insertion, for)
det(insertion, the)
nmod(opening, insertion)
case(thermometer, of)
det(thermometer, a)
nmod(insertion, thermometer)
cc(equipment, or)
amod(equipment, other)
amod(equipment, equivalent)
conj(thermometer, equipment)
mark(determine, for)
acl(equipment, determine)
det(temperature, the)
obj(determine, temperature)
case(water, of)
det(water, the)
nmod(temperature, water)
case(procedure, during)
det(procedure, the)
compound(procedure, wash)
cc(rinse, and)
conj(wash, rinse)
nmod(temperature, procedure)
punct(contain, .)
nsubj:pass(equip, it)
aux:pass(equip, be)
root(ROOT, equip)
case(gauge, with)
det(gauge, a)
amod(gauge, outside)
compound(gauge, water)
obl(equip, gauge)
nsubj(indicate, that)
aux(indicate, will)
acl:relcl(gauge, indicate)
det(level, the)
obj(indicate, level)
case(water, of)
det(water, the)
nmod(level, water)
case(wheel, in)
det(wheel, the)
obl(indicate, wheel)
punct(equip, . )
det(washer, a)
amod(washer, domestic)
amod(washer, automatic)
nsubj:pass(use, washer)
nsubj(give, that)
aux(give, will)
acl:relcl(washer, give)
amod(result, equivalent)
obj(give, result)
aux(use, may)
aux:pass(use, be)
root(ROOT, use)
punct(use, .)
det(wheel, the)
compound(wheel, wash)
nsubj(equipment, wheel)
cop(equipment, be)
det(equipment, the)
root(ROOT, equipment)
acl(equipment, prefer)
case(test, for)
det(test, the)
obl(prefer, test)
punct(equipment, .)
root(ROOT, press)
obj(press, equipment)
punct(equipment, --)
amod(bed, flat)
punct(bed, -)
compound(press, bed)
appos(equipment, press)
acl(press, measure)
nummod(inch, 24)
obj(measure, inch)
case(inch, by)
nummod(inch, 50)
obl(measure, inch)
cc(larger, or)
conj(inch, larger)
punct(press, .)
det(press, any)
amod(bed, flat)
punct(bed, -)
compound(press, bed)
nsubj:pass(use, press)
amod(press, capable)
mark(press, of)
advcl(capable, press)
det(square, a)
obj(press, specimen)
nummod(inch, 22)
compound(square, inch)
obj(press, square)
aux(use, may)
aux:pass(use, be)
root(ROOT, use)
case(alternative, as)
det(alternative, a)
obl(use, alternative)
punct(use, .)
det(press, the)
amod(bed, flat)
punct(bed, -)
compound(press, bed)
nsubj:pass(maintain, press)
aux:pass(maintain, be)
root(ROOT, maintain)
case(temperature, at)
det(temperature, a)
obl(maintain, temperature)
advmod(less, not)
advmod(275, less)
fixed(less, than)
nummod(degree, 275)
punct(degree, -)
compound(f, degree)
punct(f, -)
nmod(temperature, f)
punct(c, ()
nummod(c, 135*0)
appos(f, c)
punct(c, .)
punct(c, ))
punct(Dryer, .)
parataxis(maintain, Dryer)
punct(Dryer, --)
appos(Dryer, dryer)
case(type, of)
det(type, the)
compound(type, rotary)
compound(type, tumble)
nmod(dryer, type)
punct(have, ,)
parataxis(Dryer, have)
det(basket, a)
amod(basket, cylindrical)
obj(have, basket)
advmod(inch, approximately)
nummod(inch, 30)
obj(have, inch)
case(diameter, in)
nmod(inch, diameter)
cc(inch, and)
nummod(inch, 24)
conj(diameter, inch)
case(length, in)
nmod(inch, length)
cc(rotate, and)
conj(length, rotate)
case(r.p.m., at)
advmod(35, approximately)
nummod(r.p.m., 35)
nmod(length, r.p.m.)
punct(maintain, .)
det(dryer, the)
nsubj:pass(provide, dryer)
aux:pass(provide, be)
root(ROOT, provide)
case(means, with)
det(means, a)
obl(provide, means)
mark(maintain, of)
acl(means, maintain)
det(temperature, a)
compound(temperature, drying)
obj(maintain, temperature)
case(f, of)
nummod(temperature, 120)
case(degree, -)
nmod(120, degree)
case(f, -)
nummod(degree, 160)
punct(degree, -)
compound(f, degree)
punct(f, -)
nmod(temperature, f)
punct(49*0, ()
appos(f, 49*0)
case(71, -)
nmod(49*0, 71)
punct(c, *)
punct(c, &0)
nmod(49*0, c)
punct(c, .)
punct(c, ))
punct(measure, ,)
acl(temperature, measure)
case(vent, in)
det(vent, the)
compound(vent, exhaust)
obl(measure, vent)
advmod(close, as)
xcomp(measure, close)
mark(possible, as)
advcl(close, possible)
case(chamber, to)
det(chamber, the)
compound(chamber, drying)
obl(possible, chamber)
punct(chamber, .)
compound(rack, screen)
compound(rack, drying)
appos(chamber, rack)
punct(rack, --)
nummod(mesh, 16)
punct(mesh, -)
compound(screen, mesh)
appos(rack, screen)
punct(saran, ()
appos(screen, saran)
cc(Velon, or)
conj(saran, Velon)
punct(saran, ))
punct(room, .)
compound(room, drying)
appos(screen, room)
punct(room, --)
appos(room, facility)
case(drying, for)
compound(drying, drip)
punct(drip, -)
cc(drying, or)
compound(drying, line)
punct(drying, -)
nmod(facility, drying)
punct(provide, .)
root(ROOT, extractor)
punct(extractor, --)
amod(extractor, centrifugal)
appos(extractor, extractor)
case(type, of)
det(type, the)
compound(type, laundry)
punct(type, -)
nmod(extractor, type)
case(basket, with)
det(basket, a)
amod(basket, perforate)
nmod(type, basket)
punct(basket, ,)
advmod(11, approximately)
nummod(inch, 11)
conj(extractor, inch)
amod(inch, deep)
case(inch, by)
nummod(inch, 17)
obl(deep, inch)
case(diameter, in)
nmod(inch, diameter)
punct(speed, ,)
case(speed, with)
det(speed, a)
compound(speed, operating)
nmod(extractor, speed)
case(r.p.m, of)
advmod(1,500, approximately)
nummod(r.p.m, 1,500)
nmod(speed, r.p.m)
punct(r.p.m, .)
punct(Pen, .)
appos(speed, Pen)
cc(ink, and)
conj(Pen, ink)
punct(indelible, ,)
conj(Pen, indelible)
punct(indelible, --)
cc(device, or)
amod(device, other)
amod(device, suitable)
compound(device, mark)
appos(scale, device)
punct(scale, .)
compound(scale, measure)
conj(extractor, scale)
punct(scale, --)
appos(scale, soap)
punct(chip, ,)
amod(chip, neutral)
conj(soap, chip)
punct(chip, --)
compound(spec., fed.)
conj(soap, spec.)
nummod(spec., 566)
cc(Aj, or)
conj(spec., Aj)
punct(Softener, .)
appos(scale, Softener)
punct(Softener, --)
advmod(metaphosphate, e.g.)
compound(metaphosphate, sodium)
appos(Softener, metaphosphate)
cc(hexametaphosphate, or)
compound(hexametaphosphate, sodium)
conj(metaphosphate, hexametaphosphate)
punct(need, ()
mark(need, if)
acl(hexametaphosphate, need)
case(area, in)
amod(area, hard)
compound(area, water)
obl(need, area)
punct(need, ))
punct(detergent, .)
conj(need, detergent)
punct(synthetic, ,)
amod(detergent, synthetic)
punct(detergent, --)
amod(type, alkylary)
compound(type, sulfonate)
appos(detergent, type)
punct(type, .)
appos(detergent, Flatiron)
punct(Flatiron, ,)
amod(Flatiron, electric)
punct(Flatiron, --)
advmod(presser, approximately)
nummod(tension, 3)
compound(tension, lb.)
compound(presser, tension)
parataxis(Flatiron, presser)
punct(presser, --)
acl(presser, consist)
case(board, of)
det(board, a)
amod(board, padded)
compound(board, ironing)
obl(consist, board)
case(which, from)
obl(extend, which)
acl:relcl(board, extend)
compound(member, clamp)
obj(extend, member)
case(side, on)
det(side, all)
nummod(side, four)
obl(extend, side)
punct(extractor, .)
nsubj:pass(fix, two)
case(clamp, of)
det(clamp, the)
nmod(two, clamp)
aux:pass(fix, be)
root(ROOT, fix)
case(edge, to)
det(edge, the)
obl(fix, edge)
case(board, of)
det(board, the)
nmod(edge, board)
mark(travel, whereas)
nummod(clamp, two)
nsubj(travel, clamp)
advcl(fix, travel)
case(rail, on)
compound(rail, guide)
obl(travel, rail)
case(clamp, opposite)
det(clamp, the)
amod(clamp, fix)
obl(travel, clamp)
punct(fix, .)
det(clamp, the)
amod(clamp, movable)
nsubj(travel, clamp)
root(ROOT, travel)
case(carriage, on)
obl(travel, carriage)
nsubj(ride, which)
acl:relcl(carriage, ride)
det(rail, the)
obj(ride, rail)
cc(draw, and)
aux:pass(draw, be)
conj(ride, draw)
case(loading, by)
amod(weight, dead)
punct(weight, -)
compound(loading, weight)
obl(draw, loading)
punct(travel, .)
nsubj:pass(provide, Sets)
case(weight, of)
nmod(Sets, weight)
aux:pass(provide, be)
root(ROOT, provide)
mark(select, so)
fixed(so, that)
det(load, the)
nsubj:pass(select, load)
aux(select, can)
aux:pass(select, be)
advcl(provide, select)
case(range, in)
det(range, the)
obl(select, range)
case(pound, of)
nummod(pound, 1)
case(2, /)
nmod(1, 2)
case(4, to)
nmod(1, 4)
nmod(range, pound)
punct(provide, . )
det(plate, a)
amod(plate, perforate)
compound(plate, aluminum)
nsubj:pass(heat, plate)
punct(plate, ,)
acl(plate, use)
mark(provide, to)
xcomp(use, provide)
det(surface, the)
compound(surface, drying)
obj(provide, surface)
punct(heat, ,)
aux:pass(heat, be)
root(ROOT, heat)
case(means, by)
obl(heat, means)
case(flatiron, of)
det(flatiron, a)
nmod(means, flatiron)
punct(heat, . )
det(template, a)
amod(template, special)
nsubj:pass(furnish, template)
aux:pass(furnish, be)
root(ROOT, furnish)
case(apparatus, with)
det(apparatus, the)
obl(furnish, apparatus)
mark(enable, to)
acl(apparatus, enable)
xcomp(enable, mark)
det(specimen, a)
obj(mark, specimen)
case(area, for)
det(area, a)
amod(area, central)
compound(area, measure)
obl(mark, area)
cc(extension, and)
det(extension, the)
compound(extension, fabric)
conj(area, extension)
case(clamp, to)
det(clamp, the)
nmod(extension, clamp)
punct(see, ()
parataxis(furnish, see)
obj(see, Fig.)
nummod(Fig., 2)
punct(see, ))
punct(furnish, .)
compound(shrinkage, knit)
compound(gauge, shrinkage)
root(ROOT, gauge)
punct(gauge, --)
acl(gauge, consist)
case(set, of)
det(set, a)
obl(consist, set)
case(pin, of)
nummod(pin, 20)
compound(pin, mounting)
nmod(set, pin)
acl(pin, set)
case(guide, in)
obl(set, guide)
case(slot, in)
amod(slot, radial)
obl(set, slot)
punct(fig, ()
appos(slot, fig)
punct(fig, .)
nummod(fig, 1)
punct(1, ))
punct(1, .)
det(pin, each)
nsubj:pass(sprung, pin)
aux:pass(sprung, be)
advmod(sprung, individually)
parataxis(gauge, sprung)
case(member, to)
det(member, a)
compound(member, tension)
obl(sprung, member)
nsubj:pass(drive, which)
aux:pass(drive, be)
acl:relcl(member, drive)
advmod(drive, outwardly)
case(slot, in)
det(slot, the)
obl(drive, slot)
punct(sprung, .)
det(spring, the)
nsubj(have, spring)
root(ROOT, have)
det(extension, a)
obj(have, extension)
case(inch, of)
nummod(inch, 1)
nmod(extension, inch)
case(tension, at)
compound(tension, Af)
obl(have, tension)
punct(have, .)
det(member, the)
compound(member, tension)
nsubj(have, member)
root(ROOT, have)
det(drive, a)
amod(drive, common)
obj(have, drive)
mark(take, so)
fixed(so, that)
det(application, the)
nsubj(take, application)
case(force, of)
amod(force, restorative)
nmod(application, force)
advcl(have, take)
obj(take, place)
advmod(take, simultaneously)
case(direction, in)
det(direction, all)
obl(take, direction)
case(plane, in)
det(plane, the)
nmod(direction, plane)
case(specimen, of)
det(specimen, the)
compound(specimen, test)
nmod(plane, specimen)
punct(have, .)
det(diameter, the)
amod(diameter, minimum)
nsubj(inch, diameter)
case(frame, of)
det(frame, the)
compound(frame, pin)
nmod(diameter, frame)
case(state, in)
det(state, the)
amod(state, collapse)
nmod(frame, state)
cop(inch, be)
nummod(inch, 11)
root(ROOT, inch)
cc(inch, and)
det(diameter, the)
amod(diameter, maximum)
nsubj(inch, diameter)
case(state, in)
det(state, the)
advmod(extend, freely)
amod(state, extend)
nmod(diameter, state)
punct(unload, ()
acl(state, unload)
punct(unload, ))
cop(inch, be)
nummod(inch, 14)
conj(inch, inch)
punct(inch, .)
det(surface, the)
nsubj(uncluttered, surface)
case(apparatus, of)
det(apparatus, the)
nmod(surface, apparatus)
case(contact, in)
nmod(surface, contact)
case(specimen, with)
det(specimen, the)
compound(specimen, test)
nmod(contact, specimen)
cop(uncluttered, be)
root(ROOT, uncluttered)
cc(polish, and)
conj(uncluttered, polish)
advmod(free, so)
mark(free, as)
mark(free, to)
cop(free, be)
case(free, as)
compound(free, friction)
punct(free, -)
advcl(uncluttered, free)
mark(possible, as)
advcl(free, possible)
punct(uncluttered, .)
compound(specimen, Test)
nsubj(vary, specimen)
det(preparation, the)
nsubj(vary, preparation)
case(specimen, of)
compound(specimen, test)
nmod(preparation, specimen)
aux(vary, will)
root(ROOT, vary)
case(type, depend)
case(type, upon)
det(type, the)
obl(vary, type)
case(procedure, of)
amod(procedure, dimensional)
compound(procedure, restorability)
nmod(type, procedure)
punct(any, ()
mark(any, if)
parataxis(procedure, any)
punct(any, ))
mark(use, to)
aux:pass(use, be)
advcl(vary, use)
punct(vary, .)
nummod(specimen, three)
nsubj:pass(require, specimen)
case(sample, for)
det(sample, each)
nmod(specimen, sample)
mark(test, to)
aux:pass(test, be)
acl(sample, test)
aux:pass(require, be)
root(ROOT, require)
mark(arrive, in)
fixed(in, order)
mark(arrive, to)
advcl(require, arrive)
case(average, at)
det(average, a)
amod(average, satisfactory)
obl(arrive, average)
case(performance, of)
nmod(average, performance)
punct(require, .)
nsubj(true, this)
cop(true, be)
advmod(true, especially)
root(ROOT, true)
case(fabric, for)
amod(fabric, knit)
obl(true, fabric)
punct(true, .)
nsubj:pass(allow, specimen)
aux:pass(allow, be)
root(ROOT, allow)
mark(reach, to)
xcomp(allow, reach)
compound(equilibrium, moisture)
obj(reach, equilibrium)
case(atmosphere, with)
det(atmosphere, a)
amod(atmosphere, standard)
obl(reach, atmosphere)
case(Af, of)
nmod(atmosphere, Af)
cc(Af, and)
conj(Af, Af)
cc(lay, and)
advmod(lay, then)
conj(reach, lay)
compound:prt(lay, out)
case(tension, without)
obl(lay, tension)
case(surface, on)
det(surface, a)
amod(surface, flat)
punct(surface, ,)
amod(surface, polish)
nmod(tension, surface)
punct(take, ,)
nsubj:pass(take, care)
aux:pass(take, be)
advcl(lay, take)
mark(free, that)
det(fabric, the)
nsubj(free, fabric)
cop(free, be)
ccomp(take, free)
case(wrinkle, from)
obl(free, wrinkle)
cc(crease, or)
conj(wrinkle, crease)
punct(allow, . )
nsubj(give, Fabrics)
nsubj:pass(distort, that)
aux:pass(distort, be)
advmod(distort, badly)
acl:relcl(Fabrics, distort)
case(state, in)
nmod:poss(state, they)
amod(state, unlaundered)
obl(distort, state)
case(finish, due)
fixed(due, to)
amod(finish, faulty)
obl(distort, finish)
aux(give, may)
root(ROOT, give)
amod(result, deceptive)
amod(change, dimensional)
compound(result, change)
obj(give, result)
mark(launder, when)
advcl(give, launder)
case(procedure, by)
det(procedure, any)
obl(launder, procedure)
punct(give, .)
nsubj(hold, this)
advmod(hold, also)
root(ROOT, hold)
xcomp(hold, true)
mark(apply, if)
amod(force, restorative)
nsubj:pass(apply, force)
aux:pass(apply, be)
advcl(hold, apply)
punct(hold, .)
advmod(recommend, therefore)
punct(recommend, ,)
nsubj:pass(recommend, it)
aux:pass(recommend, be)
parataxis(hold, recommend)
mark(replace, that)
case(case, in)
amod(case, such)
obl(replace, case)
det(sample, the)
nsubj:pass(replace, sample)
aux:pass(replace, be)
ccomp(recommend, replace)
punct(consider, ,)
cc(consider, or)
mark(use, if)
advcl(replace, use)
punct(consider, ,)
det(result, the)
nsubj:pass(consider, result)
case(change, of)
amod(change, dimensional)
nmod(result, change)
cc(test, or)
amod(restorability, dimensional)
compound(test, restorability)
conj(change, test)
aux:pass(consider, be)
ccomp(recommend, consider)
case(indicative, as)
obl(consider, indicative)
advmod(consider, only)
punct(hold, .)
advmod(necessary, generally)
punct(necessary, ,)
expl(necessary, it)
cop(necessary, be)
root(ROOT, necessary)
mark(mark, to)
csubj(necessary, mark)
obj(mark, distance)
case(specimen, on)
det(specimen, a)
obl(mark, specimen)
punct(specimen, ()
cc(garment, or)
conj(specimen, garment)
punct(garment, ))
case(lengthwise, in)
cc:preconj(lengthwise, both)
obl(mark, lengthwise)
cc(direction, and)
compound(direction, widthwise)
conj(lengthwise, direction)
cc(measure, and)
mark(measure, to)
conj(mark, measure)
advmod(measure, before)
cc(launder, and)
case(launder, after)
conj(before, launder)
punct(necessary, .)
det(distance, the)
nsubj:pass(mark, distance)
aux(mark, may)
aux:pass(mark, be)
root(ROOT, mark)
case(ink, with)
amod(ink, indelible)
obl(mark, ink)
cc(pen, and)
det(pen, a)
amod(point, fine)
punct(point, -)
compound(pen, point)
conj(ink, pen)
punct(mark, ,)
mark(sew, by)
advcl(mark, sew)
amod(thread, fine)
obj(sew, thread)
case(fabric, into)
det(fabric, the)
obl(sew, fabric)
punct(machine, ,)
cc(machine, or)
case(machine, by)
det(machine, a)
advmod(design, specially)
amod(machine, design)
compound(machine, stamp)
conj(fabric, machine)
punct(mark, .)
det(distance, the)
amod(distance, mark)
nsubj(parallel, distance)
cop(parallel, be)
root(ROOT, parallel)
case(yarn, to)
det(yarn, the)
amod(yarn, respective)
obl(parallel, yarn)
punct(parallel, .)
advmod(accuracy, usually)
punct(accuracy, ,)
mark(greater, the)
advmod(accuracy, greater)
det(distance, the)
amod(distance, original)
nsubj(accuracy, distance)
acl(distance, mark)
punct(accuracy, ,)
det(greater, the)
nsubj(accuracy, greater)
aux(accuracy, will)
cop(accuracy, be)
det(accuracy, the)
root(ROOT, accuracy)
case(test, of)
det(test, the)
nmod(accuracy, test)
punct(accuracy, .)
nsubj:pass(recommend, distance)
case(inch, of)
advmod(10, less)
fixed(less, than)
nummod(inch, 10)
nmod(distance, inch)
aux:pass(recommend, be)
advmod(recommend, not)
root(ROOT, recommend)
punct(recommend, .)
amod(fabric, Woven)
root(ROOT, fabric)
mark(dry, to)
aux:pass(dry, be)
acl(fabric, dry)
case(b, by)
compound(b, procedure)
obl(dry, b)
punct(b, ()
amod(bed, flat)
punct(bed, -)
compound(press, bed)
amod(b, press)
punct(press, ))
cc(restore, or)
conj(dry, restore)
case(procedure, by)
obl(restore, procedure)
nummod(procedure, 3)
punct(ironing, ()
compound(ironing, hand)
appos(procedure, ironing)
punct(ironing, ))
punct(fabric, : )
det(specimen, the)
nsubj(rectangle, specimen)
case(fabric, of)
nmod(specimen, fabric)
cop(rectangle, be)
det(rectangle, a)
root(ROOT, rectangle)
case(least, at)
nmod(22, least)
nummod(rectangle, 22)
case(inch, by)
nummod(inch, 22)
obl(rectangle, inch)
punct(rectangle, ,)
case(cloth, except)
case(cloth, for)
obl(rectangle, cloth)
amod(cloth, narrower)
case(inch, than)
nummod(inch, 22)
obl(narrower, inch)
punct(rectangle, ,)
case(case, in)
det(case, which)
obl(width, case)
det(specimen, the)
nsubj(width, specimen)
cop(width, be)
det(width, the)
amod(width, entire)
parataxis(rectangle, width)
case(fabric, of)
det(fabric, the)
nmod(width, fabric)
punct(rectangle, .)
nummod(distance, three)
nsubj:pass(measure, distance)
punct(distance, ,)
det(inch, each)
case(least, at)
nmod(18, least)
nummod(inch, 18)
appos(distance, inch)
punct(measure, ,)
aux:pass(measure, be)
root(ROOT, measure)
cc(mark, and)
conj(measure, mark)
compound:prt(mark, off)
advmod(mark, parallel)
case(each, to)
obl(mark, each)
case(warp, of)
det(warp, the)
nmod(each, warp)
cc(direction, and)
compound(direction, fill)
conj(warp, direction)
punct(measure, .)
det(distance, the)
nsubj(inch, distance)
cop(inch, be)
case(least, at)
nmod(two, least)
nummod(inch, two)
root(ROOT, inch)
case(edge, from)
det(edge, any)
nmod(inch, edge)
case(specimen, of)
det(specimen, the)
nmod(edge, specimen)
punct(inch, .)
amod(fabric, Woven)
cc(warp, or)
conj(Woven, warp)
amod(fabric, knit)
root(ROOT, fabric)
mark(subject, to)
aux:pass(subject, be)
acl(fabric, subject)
case(procedure, to)
amod(procedure, restorative)
obl(subject, procedure)
nummod(procedure, 1)
punct(presser, ()
compound(presser, tension)
appos(procedure, presser)
punct(presser, ))
punct(inch, .)
det(specimen, each)
nsubj(inch, specimen)
cop(inch, be)
case(least, at)
nmod(25, least)
nummod(inch, 25)
parataxis(fabric, inch)
case(inch, by)
nummod(inch, 25)
nmod(inch, inch)
punct(inch, .)
root(ROOT, place)
det(template, the)
obj(place, template)
punct(Fig., ()
appos(template, Fig.)
nummod(Fig., 2)
punct(Fig., ))
case(fabric, on)
det(fabric, the)
obl(place, fabric)
mark(parallel, so)
fixed(so, that)
det(side, the)
nsubj(parallel, side)
case(square, of)
det(square, the)
nummod(inch, 10)
compound(square, inch)
nmod(side, square)
advcl(parallel, cut)
case(template, out)
case(template, of)
det(template, the)
obl(cut, template)
cop(parallel, be)
conj(place, parallel)
case(warp, to)
det(warp, the)
obl(parallel, warp)
cc(fill, and)
conj(warp, fill)
case(fabric, for)
amod(fabric, wave)
nmod(warp, fabric)
punct(wale, ,)
cc(wale, or)
det(wale, the)
conj(warp, wale)
cc(course, and)
conj(wale, course)
case(fabric, for)
amod(fabric, knit)
nmod(wale, fabric)
punct(extend, ,)
cc(extend, and)
mark(extend, so)
fixed(so, that)
det(amount, the)
amod(amount, same)
nsubj(extend, amount)
case(fabric, of)
nmod(amount, fabric)
conj(parallel, extend)
case(edge, beyond)
det(edge, the)
obl(extend, edge)
case(template, of)
det(template, the)
nmod(edge, template)
case(side, on)
det(side, all)
nmod(template, side)
punct(place, .)
nsubj(specimen, Mark)
det(specimen, the)
root(ROOT, specimen)
case(edge, at)
det(edge, the)
amod(edge, outer)
nmod(specimen, edge)
case(template, of)
det(template, the)
nmod(edge, template)
case(pen, with)
nmod(template, pen)
cc(indelible, and)
conj(pen, indelible)
conj(pen, ink)
punct(specimen, ;)
punct(specimen, ;)
advmod(place, also)
parataxis(specimen, place)
nummod(dot, three)
obj(place, dot)
case(specimen, on)
det(specimen, the)
nmod(dot, specimen)
case(side, at)
det(side, each)
nmod(dot, side)
case(square, of)
det(square, the)
nummod(inch, 10)
compound(square, inch)
nmod(side, square)
punct(dot, ,)
nummod(dot, one)
appos(square, dot)
case(midpoint, at)
nmod(dot, midpoint)
punct(one, ,)
cc(one, and)
conj(dot, one)
case(inch, at)
advmod(2, approximately)
compound(2, 1)
punct(2, /)
nummod(inch, 2)
nmod(one, inch)
case(corner, from)
det(corner, each)
nmod(inch, corner)
punct(measure, .)
appos(inch, measure)
cc(record, and)
conj(measure, record)
punct(measure, .)
amod(fabric, Circular)
amod(fabric, knit)
conj(measure, fabric)
mark(subject, to)
aux:pass(subject, be)
acl(fabric, subject)
case(procedure, to)
amod(procedure, restorative)
obl(subject, procedure)
nummod(procedure, 2)
punct(procedure, ,)
punct(gauge, ()
compound(gauge, knit)
compound(gauge, shrinkage)
appos(procedure, gauge)
punct(gauge, ))
punct(specimen, .)
det(specimen, each)
nsubj(square, specimen)
cop(square, be)
advmod(16, approximately)
nummod(inch, 16)
compound(square, inch)
root(ROOT, square)
punct(square, .)
det(marking, the)
nsubj(consist, marking)
root(ROOT, consist)
case(circle, of)
det(circle, a)
advmod(locate, centrally)
amod(circle, locate)
nummod(inch, 10)
compound(circle, inch)
compound(circle, diameter)
compound(circle, measure)
obl(consist, circle)
cc(circle, and)
det(circle, a)
nummod(diameter, 14)
compound(diameter, inch)
compound(circle, diameter)
conj(circle, circle)
case(dot, of)
nummod(dot, 20)
nmod(circle, dot)
advmod(space, equidistantly)
acl(dot, space)
punct(see, ()
parataxis(consist, see)
obj(see, Figure)
nummod(Figure, 1)
punct(see, ))
punct(consist, .)
nsubj:pass(take, Garments)
punct(Garments, .)
amod(measurement, critical)
nsubj:pass(take, measurement)
case(length, in)
nmod(measurement, length)
cc(direction, and)
compound(direction, width)
conj(length, direction)
aux(take, should)
aux:pass(take, be)
root(ROOT, take)
case(procedure, before)
cc(procedure, and)
case(wash, after)
obl(take, wash)
punct(drying, ,)
conj(wash, drying)
punct(procedure, ,)
cc(procedure, and)
conj(wash, restorative)
conj(wash, procedure)
punct(take, .)
compound(wash, procedure)
root(ROOT, wash)
punct(wash, --)
det(procedure, the)
compound(procedure, wash)
nsubj:pass(summarize, procedure)
aux:pass(summarize, be)
root(ROOT, summarize)
case(table, in)
obl(summarize, table)
nummod(table, 2)
punct(summarize, .)
root(ROOT, place)
det(specimen, the)
obj(place, specimen)
case(wheel, in)
det(wheel, the)
compound(wheel, wash)
obl(place, wheel)
case(fabric, with)
amod(fabric, sufficient)
amod(fabric, other)
amod(fabric, similar)
obl(place, fabric)
mark(make, to)
advcl(place, make)
det(load, a)
amod(load, dry)
obj(make, load)
case(pound, of)
compound(pound, Af)
nmod(load, pound)
punct(place, .)
root(ROOT, start)
det(wheel, the)
compound(wheel, wash)
obj(start, wheel)
cc(note, and)
conj(start, note)
det(time, the)
obj(note, time)
punct(start, .)
advmod(add, immediately)
parataxis(start, add)
obj(add, water)
case(f, at)
nummod(f, 100)
case(105, -)
nmod(100, 105)
case(degree, -)
nmod(100, degree)
punct(f, -)
obl(add, f)
punct(C., ()
nummod(C., 38)
case(43*0, -)
nmod(38, 43*0)
appos(f, C.)
punct(C., ))
case(wheel, to)
det(wheel, the)
obl(add, wheel)
case(level, to)
det(level, a)
nmod(wheel, level)
nmod(level, of)
compound(inch, Af)
root(ROOT, inch)
punct(inch, ;)
punct(inch, ;)
det(level, this)
nsubj:pass(increase, level)
aux(increase, will)
aux:pass(increase, be)
parataxis(inch, increase)
case(steam, by)
amod(steam, condense)
obl(increase, steam)
punct(inch, .)
mark(reach, when)
det(level, this)
compound(level, water)
nsubj:pass(reach, level)
aux(reach, have)
aux:pass(reach, be)
advcl(inject, reach)
punct(inject, ,)
root(ROOT, inject)
obj(inject, steam)
case(wheel, into)
det(wheel, the)
obl(inject, wheel)
mark(reach, until)
det(temperature, the)
nsubj(reach, temperature)
advcl(inject, reach)
nsubj(show, that)
ccomp(reach, show)
case(b, in)
compound(b, column)
obl(show, b)
case(table, of)
nmod(b, table)
nummod(add, 2)
punct(2, .)
parataxis(inject, add)
amod(soap, sufficient)
obj(add, soap)
punct(soap, ()
cc(softener, and)
conj(soap, softener)
mark(require, if)
advcl(add, require)
mark(counteract, to)
xcomp(require, counteract)
amod(water, hard)
obj(counteract, water)
punct(require, ))
mark(furnish, to)
advcl(counteract, furnish)
det(sud, a)
amod(sud, good)
compound(sud, running)
obj(furnish, sud)
punct(use, ,)
cc(use, or)
mark(use, if)
csubj(use, desire)
conj(furnish, use)
det(detergent, a)
amod(detergent, synthetic)
obj(use, detergent)
punct(inject, .)
root(ROOT, Test)
nummod(Test, 1)
punct(Test, ,)
punct(Test, --)
root(ROOT, stop)
det(wheel, the)
compound(wheel, wash)
obj(stop, wheel)
case(end, at)
det(end, the)
obl(stop, end)
case(time, of)
det(time, the)
nmod(end, time)
acl(time, show)
case(a, in)
compound(a, column)
obl(show, a)
case(table, of)
nmod(a, table)
nummod(table, 2)
punct(drain, ,)
cc(drain, and)
conj(stop, drain)
punct(stop, .)
root(ROOT, Refill)
det(machine, the)
obj(Refill, machine)
case(level, to)
det(level, a)
obl(Refill, level)
case(inch, of)
compound(inch, Af)
nmod(level, inch)
case(water, with)
nmod(level, water)
case(f, at)
nummod(f, 100)
case(109, -)
nmod(100, 109)
case(degree, -)
nmod(100, degree)
punct(f, -)
obl(Refill, f)
punct(C., ()
punct(C., ()
nummod(C., 38)
case(43*0, -)
nmod(38, 43*0)
appos(f, C.)
punct(C., ))
cc(start, and)
conj(Refill, start)
det(machine, the)
obj(start, machine)
punct(Refill, .)
root(ROOT, inject)
obj(inject, steam)
punct(inject, ,)
mark(necessary, if)
advcl(inject, necessary)
punct(inject, ,)
mark(reach, to)
advcl(inject, reach)
det(temperature, the)
obj(reach, temperature)
acl(temperature, show)
case(d, in)
compound(d, column)
obl(show, d)
case(table, of)
nmod(d, table)
nummod(stop, 2)
punct(2, .)
advmod(stop, again)
parataxis(inject, stop)
det(machine, the)
obj(stop, machine)
case(end, at)
det(end, the)
obl(stop, end)
case(time, of)
det(time, the)
nmod(end, time)
acl(time, show)
case(c, in)
compound(c, column)
obl(show, c)
case(table, of)
nmod(c, table)
nummod(table, 2)
punct(repeat, .)
det(procedure, this)
nsubj:pass(repeat, procedure)
aux:pass(repeat, be)
parataxis(inject, repeat)
case(rinse, for)
det(rinse, the)
amod(rinse, second)
obl(repeat, rinse)
punct(repeat, ,)
advcl(repeat, use)
det(temperature, the)
obj(use, temperature)
cc(time, and)
conj(temperature, time)
acl(temperature, show)
case(F, in)
compound(F, column)
obl(show, F)
cc(e, and)
conj(F, e)
case(table, of)
nmod(e, table)
nummod(table, 2)
punct(inject, . )
root(ROOT, test)
nummod(test, 2)
punct(3, ,)
conj(test, 3)
punct(4, ,)
punct(4, ,)
punct(4, ,)
cc(4, and)
conj(test, 4)
punct(test, .)
punct(test, --)
root(ROOT, run)
det(machine, the)
obj(run, machine)
advmod(run, continuously)
case(completion, until)
obl(run, completion)
case(test, of)
det(test, the)
nmod(completion, test)
punct(run, .)
parataxis(run, Drain)
compound:prt(Drain, off)
det(solution, the)
compound(solution, soap)
obj(Drain, solution)
case(cycle, of)
det(cycle, the)
compound(cycle, sud)
nmod(solution, cycle)
case(time, at)
det:predet(time, such)
det(time, a)
obl(Drain, time)
obj(become, that)
det(wheel, the)
nsubj(become, wheel)
aux(become, have)
acl:relcl(time, become)
advmod(empty, substantially)
xcomp(become, empty)
case(soap, of)
obl(empty, soap)
cc(water, and)
conj(soap, water)
case(end, at)
det(end, the)
obl(empty, end)
case(time, of)
det(time, the)
nmod(end, time)
acl(time, show)
case(a, in)
compound(a, column)
obl(show, a)
case(table, of)
nmod(a, table)
nummod(table, 2)
punct(measure, ,)
punct(measure, ,)
conj(show, measure)
case(time, from)
det(time, the)
obl(measure, time)
det(wheel, the)
compound(wheel, wash)
nsubj:pass(start, wheel)
aux:pass(start, be)
acl:relcl(time, start)
punct(run, .)
root(ROOT, Refill)
det(machine, the)
obj(Refill, machine)
case(level, to)
det(level, a)
obl(Refill, level)
case(inch, of)
compound(inch, Af)
nmod(level, inch)
case(water, with)
nmod(inch, water)
case(f, at)
nummod(f, 100)
case(109, -)
nmod(100, 109)
case(degree, -)
nmod(100, degree)
punct(f, -)
obl(Refill, f)
punct(c, ()
nummod(c, 38)
case(43*0, -)
nmod(38, 43*0)
appos(f, c)
punct(c, .)
punct(c, ))
punct(Refill, .)
mark(reach, when)
det(level, this)
compound(level, water)
nsubj:pass(reach, level)
aux(reach, have)
aux:pass(reach, be)
advcl(inject, reach)
punct(inject, ,)
conj(Refill, inject)
obj(inject, steam)
mark(show, until)
det(temperature, the)
nsubj:pass(show, temperature)
aux:pass(show, be)
nsubj(show, that)
advcl(inject, show)
case(Aj, in)
compound(Aj, column)
obl(show, Aj)
punct(Drain, .)
conj(Refill, Drain)
compound:prt(Drain, off)
det(water, the)
obj(Drain, water)
case(time, at)
det:predet(time, such)
det(time, a)
obl(Drain, time)
obj(become, that)
det(wheel, the)
nsubj(become, wheel)
aux(become, have)
acl:relcl(time, become)
advmod(empty, substantially)
xcomp(become, empty)
case(water, of)
obl(empty, water)
case(end, at)
det(end, the)
obl(empty, end)
case(sum, of)
det(sum, the)
nmod(end, sum)
case(time, of)
det(time, the)
nmod(sum, time)
acl(sum, show)
case(column, in)
obl(show, column)
obl(show, A)
cc(C, and)
conj(A, C)
punct(show, ,)
conj(show, measure)
case(time, from)
det(time, the)
obl(measure, time)
det(wheel, the)
compound(wheel, wash)
nsubj:pass(start, wheel)
aux:pass(start, be)
acl:relcl(time, start)
punct(Refill, .)
advmod(refill, immediately)
root(ROOT, refill)
case(level, to)
det(level, a)
obl(refill, level)
case(inch, of)
compound(inch, Af)
nmod(level, inch)
case(water, with)
obl(refill, water)
case(f, at)
nummod(f, 100)
case(109, -)
nmod(100, 109)
case(degree, -)
nmod(100, degree)
punct(f, -)
obl(refill, f)
punct(38, ()
nummod(0c, 38)
case(43, -)
nmod(38, 43)
punct(0c, *)
appos(f, 0c)
punct(0c, ))
punct(refill, .)
mark(reach, when)
det(level, this)
compound(level, water)
nsubj:pass(reach, level)
aux(reach, have)
aux:pass(reach, be)
advcl(show, reach)
xcomp(reach, inject)
obj(inject, steam)
mark(show, until)
det(temperature, the)
nsubj(show, temperature)
aux:pass(show, be)
nsubj(show, that)
advcl(Drain, show)
case(column, in)
obl(show, column)
obl(show, Aj)
punct(Drain, .)
parataxis(refill, Drain)
compound:prt(Drain, off)
det(water, the)
obj(Drain, water)
case(time, at)
det:predet(time, such)
det(time, a)
obl(Drain, time)
obj(become, that)
det(wheel, the)
nsubj(become, wheel)
aux(become, have)
acl:relcl(time, become)
advmod(empty, substantially)
xcomp(become, empty)
case(water, of)
obl(empty, water)
case(end, at)
det(end, the)
obl(empty, end)
case(sum, of)
det(sum, the)
nmod(end, sum)
case(time, of)
det(time, the)
nmod(sum, time)
acl(sum, show)
case(column, in)
obl(show, column)
obl(show, A)
punct(C, ,)
conj(A, C)
punct(e, ,)
cc(e, and)
conj(A, e)
punct(measure, ,)
conj(show, measure)
case(time, from)
det(time, the)
obl(measure, time)
det(wheel, the)
compound(wheel, wash)
nsubj:pass(start, wheel)
aux:pass(start, be)
acl:relcl(time, start)
punct(refill, .)
amod(gain, high)
punct(gain, -)
advcl(apply, gain)
punct(apply, ,)
amod(intensification, photoelectronic)
compound(intensification, image)
nsubj:pass(apply, intensification)
aux:pass(apply, be)
root(ROOT, apply)
case(condition, under)
obl(apply, condition)
case(level, of)
amod(level, low)
compound(level, incident)
compound(level, light)
nmod(condition, level)
advmod(exceed, whenever)
det(time, the)
compound(time, integration)
nsubj(exceed, time)
acl(time, require)
case(sensor, by)
det(sensor, a)
obl(require, sensor)
cc(instrument, or)
compound(instrument, recording)
conj(sensor, instrument)
advcl(apply, exceed)
det(limit, the)
obj(exceed, limit)
case(practicability, of)
nmod(limit, practicability)
punct(apply, .)
nsubj(reconnaissance, example)
case(situation, of)
amod(situation, such)
nmod(example, situation)
cop(reconnaissance, be)
punct(aerial, ()
amod(reconnaissance, aerial)
punct(aerial, ))
compound(reconnaissance, night)
root(ROOT, reconnaissance)
punct(reconnaissance, ,)
det(recording, the)
conj(reconnaissance, recording)
case(tracer, of)
amod(tracer, radioactive)
nmod(recording, tracer)
case(tissue, in)
amod(tissue, live)
compound(tissue, body)
nmod(recording, tissue)
punct(radiography, ,)
amod(radiography, special)
conj(tissue, radiography)
case(application, in)
amod(application, medical)
cc(industrial, or)
conj(medical, industrial)
nmod(radiography, application)
punct(recording, ,)
compound(recording, track)
conj(reconnaissance, recording)
case(particle, of)
amod(energy, high)
compound(particle, energy)
nmod(recording, particle)
punct(etc, ,)
advmod(particle, etc)
punct(reconnaissance, .)
punct(reconnaissance, .)
advmod(gain, high)
punct(gain, -)
advcl(achieve, gain)
amod(intensification, photoelectronic)
compound(intensification, image)
nsubj:pass(achieve, intensification)
aux(achieve, may)
aux:pass(achieve, be)
root(ROOT, achieve)
case(method, by)
amod(method, several)
obl(achieve, method)
punct(achieve, ;)
punct(achieve, ;)
nsubj:pass(list, some)
case(these, of)
nmod(some, these)
aux:pass(list, be)
parataxis(achieve, list)
advmod(list, below)
punct(achieve, :)
root(ROOT, ()
root(ROOT, a)
punct(a, ))
root(ROOT, cascade)
amod(stage, single)
obj(cascade, stage)
case(system, by)
compound(lens, couple)
compound(system, lens)
obl(cascade, system)
punct(system, ,)
punct(b, ()
appos(system, b)
punct(b, ))
compound(type, Channel)
punct(type, -)
root(ROOT, type)
punct(type, ,)
amod(intensifier, secondary)
compound(intensifier, emission)
compound(intensifier, image)
list(type, intensifier)
punct(type, ,)
punct(c, ()
nummod(intensifier, c)
punct(c, ))
compound(intensifier, image)
list(type, intensifier)
case(principle, base)
case(principle, upon)
det(principle, the)
punct(principle, ``)
compound(principle, multipactor)
punct(principle, '')
nmod(intensifier, principle)
punct(principle, ,)
punct(D, ()
nummod(intensifier, D)
punct(D, ))
compound(intensifier, transmission)
amod(intensifier, secondary)
compound(multiplication, electron)
compound(intensifier, multiplication)
compound(intensifier, image)
appos(principle, intensifier)
punct(tube, ()
compound(tube, TSEM)
root(ROOT, tube)
punct(tube, ))
punct(tube, ,)
punct(e, ()
root(ROOT, e)
punct(e, ))
root(ROOT, cascade)
case(stage, of)
amod(stage, single)
nmod(cascade, stage)
punct(cascade, ,)
acl(cascade, enclose)
case(envelope, in)
nummod(envelope, one)
amod(envelope, common)
obl(enclose, envelope)
punct(cascade, .)
csubj(inefficient, cascade)
amod(stage, single)
obj(cascade, stage)
mark(inefficient, by)
compound(lens, couple)
compound(system, lens)
nsubj(inefficient, system)
cop(inefficient, be)
advmod(inefficient, rather)
root(ROOT, inefficient)
mark(limit, as)
det(system, the)
compound(system, lens)
nsubj(limit, system)
advcl(inefficient, limit)
det(gain, the)
amod(gain, obtainable)
obj(limit, gain)
advmod(severely, quite)
advmod(limit, severely)
punct(capable, .)
compound(type, Channel)
punct(type, -)
compound(intensifier, type)
compound(intensifier, image)
nsubj(capable, intensifier)
cop(capable, be)
parataxis(inefficient, capable)
mark(achieve, of)
advcl(capable, achieve)
amod(gain, high)
punct(gain, -)
compound(value, gain)
obj(achieve, value)
punct(capable, ;)
punct(capable, ;)
nsubj(suffer, they)
parataxis(capable, suffer)
punct(suffer, ,)
advmod(suffer, however)
punct(suffer, ,)
case(resolution, from)
det(resolution, a)
advmod(low, inherently)
amod(resolution, low)
obl(suffer, resolution)
punct(capable, .)
compound(intensifier, image)
nsubj(appear, intensifier)
case(principle, base)
case(principle, upon)
det(principle, the)
amod(principle, multipactor)
nmod(intensifier, principle)
root(ROOT, appear)
mark(hold, to)
xcomp(appear, hold)
obj(hold, promise)
advmod(far, as)
advmod(hold, far)
mark(concerned, as)
amod(resolution, obtainable)
nsubj(concerned, resolution)
cop(concerned, be)
advcl(as, concerned)
punct(appear, .)
advmod(restrict, however)
punct(restrict, ,)
det(cycle, the)
amod(cycle, unavoidable)
amod(duty, low)
punct(duty, -)
compound(cycle, duty)
nsubj(restrict, cycle)
root(ROOT, restrict)
det(gain, the)
amod(gain, effective)
obj(restrict, gain)
punct(gain, .)
compound(tube, TSEM)
nsubj:pass(construct, tube)
aux(construct, have)
aux:pass(construct, be)
parataxis(restrict, construct)
advcl(construct, show)
amod(gain, high)
obj(show, gain)
cc(resolution, and)
conj(gain, resolution)
punct(restrict, .)
advmod(realize, however)
punct(realize, ,)
amod(focus, electrostatic)
nsubj:pass(realize, focus)
punct(focus, ,)
amod(focus, important)
case(application, for)
amod(application, many)
obl(important, application)
punct(realize, ,)
aux(realize, have)
advmod(realize, not)
aux:pass(realize, be)
root(ROOT, realize)
case(device, for)
det(device, these)
obl(realize, device)
punct(realize, .)
compound(limitation, resolution)
nsubj:pass(anticipate, limitation)
case(focus, with)
amod(focus, electrostatic)
nmod(limitation, focus)
aux(anticipate, might)
aux:pass(anticipate, be)
root(ROOT, anticipate)
case(aberration, due)
fixed(due, to)
amod(aberration, chromatic)
obl(anticipate, aberration)
punct(anticipate, . )
advmod(appear, furthermore)
punct(appear, ,)
det(dynode, the)
amod(dynode, thin)
compound(dynode, film)
nsubj(appear, dynode)
root(ROOT, appear)
mark(have, to)
xcomp(appear, have)
det(limitation, a)
amod(diameter, natural)
compound(limitation, diameter)
obj(have, limitation)
advmod(tolerate, wherever)
det(support, a)
compound(support, mesh)
nsubj:pass(tolerate, support)
aux(tolerate, can)
advmod(tolerate, not)
aux:pass(tolerate, be)
acl:relcl(limitation, tolerate)
punct(appear, .)
amod(stage, cascade)
amod(stage, single)
nsubj:pass(construct, stage)
acl(stage, enclose)
case(envelope, by)
det(envelope, a)
amod(envelope, common)
obl(enclose, envelope)
aux(construct, have)
aux:pass(construct, be)
root(ROOT, construct)
case(gain, with)
amod(gain, high)
obl(construct, gain)
cc(resolution, and)
amod(resolution, high)
conj(gain, resolution)
punct(construct, .)
det(tube, these)
nsubj(differ, tube)
aux(differ, may)
root(ROOT, differ)
cc:preconj(choice, both)
case(choice, in)
det(choice, the)
obl(differ, choice)
case(system, of)
det(system, the)
compound(system, electron)
amod(system, optical)
nmod(choice, system)
cc(design, and)
case(design, in)
det(design, the)
conj(choice, design)
case(member, of)
det(member, the)
compound(member, couple)
nmod(design, member)
punct(differ, .)
det(system, the)
compound(system, electron)
amod(system, optical)
nsubj(one, system)
aux(one, may)
cop(one, be)
cc:preconj(one, either)
det(one, a)
amod(one, magnetic)
cc(electrostatic, or)
conj(magnetic, electrostatic)
root(ROOT, one)
punct(one, .)
det(magnification, the)
nsubj(smaller, magnification)
aux(smaller, may)
cop(smaller, be)
root(ROOT, smaller)
punct(equal, ,)
conj(smaller, equal)
punct(larger, ,)
cc(larger, or)
conj(smaller, larger)
case(unity, than)
obl(larger, unity)
punct(smaller, .)
det(system, a)
amod(system, electrostatic)
nsubj(suffer, system)
root(ROOT, suffer)
advmod(suffer, generally)
case(curvature, from)
compound(curvature, image)
compound(curvature, plane)
obl(suffer, curvature)
acl(curvature, lead)
mark(defocuse, to)
advcl(lead, defocuse)
case(region, in)
det(region, the)
amod(region, peripheral)
compound(region, image)
obl(defocuse, region)
mark(utilized, if)
det(screen, a)
amod(screen, flat)
compound(screen, view)
nsubj:pass(utilized, screen)
punct(screen, ()
cc(coupler, or)
amod(coupler, interstage)
conj(screen, coupler)
punct(coupler, ))
aux:pass(utilized, be)
advcl(suffer, utilized)
punct(utilized, ,)
mark(require, while)
det(system, a)
amod(system, magnetic)
nsubj(require, system)
advcl(utilized, require)
amod(adjustment, accurate)
obj(require, adjustment)
case(solenoid, of)
det(solenoid, the)
nmod(adjustment, solenoid)
punct(solenoid, ,)
nsubj(heavy, which)
cop(heavy, be)
acl:relcl(solenoid, heavy)
cc(bulky, and)
conj(heavy, bulky)
punct(suffer, .)
mark(discuss, as)
nsubj:pass(discuss, it)
aux(discuss, will)
aux:pass(discuss, be)
advcl(improve, discuss)
advmod(discuss, later)
punct(improve, ,)
amod(defocuse, peripheral)
nsubj:pass(improve, defocuse)
aux(improve, can)
aux:pass(improve, be)
root(ROOT, improve)
compound:prt(improve, on)
mark(utilize, by)
advcl(improve, utilize)
amod(coupler, curve)
compound(coupler, fiber)
obj(utilize, coupler)
punct(improve, .)
nsubj:pass(note, it)
aux(note, should)
aux:pass(note, be)
root(ROOT, note)
punct(note, ,)
advmod(note, however)
punct(note, ,)
mark(similar, that)
det(resolution, the)
amod(resolution, paraxial)
nsubj(similar, resolution)
cop(similar, be)
advmod(similar, quite)
ccomp(note, similar)
case(system, for)
det(system, both)
compound(system, electron)
amod(system, optical)
obl(similar, system)
punct(note, .)
nsubj:pass(feel, it)
aux:pass(feel, be)
root(ROOT, feel)
mark(gain, that)
obl:npmod(couple, fiber)
punct(couple, -)
amod(intensifier, couple)
amod(couple, double)
punct(couple, -)
punct(multi-, ()
cc(multi-, and)
conj(double, multi-)
punct(multi-, ))
compound(intensifier, stage)
compound(intensifier, image)
nsubj(gain, intensifier)
aux(gain, will)
ccomp(feel, gain)
amod(importance, considerable)
obj(gain, importance)
case(future, in)
det(future, the)
obl(gain, future)
punct(feel, .)
advmod(consider, therefore)
punct(consider, ,)
nsubj(consider, we)
aux(consider, shall)
root(ROOT, consider)
case(paper, in)
det(paper, this)
obl(consider, paper)
det(gain, the)
amod(gain, theoretical)
obj(consider, gain)
cc(capability, and)
compound(capability, resolution)
conj(gain, capability)
case(tube, of)
amod(tube, such)
nmod(capability, tube)
punct(consider, .)
det(efficiency, the)
amod(efficiency, luminous)
nsubj:pass(compute, efficiency)
cc(resolution, and)
conj(efficiency, resolution)
case(stage, of)
amod(stage, single)
nmod(efficiency, stage)
punct(coupler, ,)
compound(coupler, fiber)
conj(efficiency, coupler)
punct(tube, ,)
cc(tube, and)
advmod(tube, finally)
case(tube, of)
det(tube, the)
amod(tube, composite)
conj(efficiency, tube)
aux(compute, will)
aux:pass(compute, be)
root(ROOT, compute)
punct(compute, .)
nsubj:pass(show, it)
aux(show, will)
aux:pass(show, be)
root(ROOT, show)
advmod(show, theoretically)
mark(permit, that)
det(intensification, the)
amod(image, high)
compound(intensification, image)
nsubj(permit, intensification)
amod(intensification, obtainable)
case(tube, with)
det:predet(tube, such)
det(tube, a)
obl(obtainable, tube)
cc(photography, and)
compound(photography, contact)
conj(tube, photography)
ccomp(show, permit)
det(utilization, the)
obj(permit, utilization)
case(level, of)
advmod(low, extremely)
amod(level, low)
compound(level, incident)
compound(level, light)
nmod(utilization, level)
punct(show, .)
det(effect, the)
nsubj:pass(describe, effect)
case(noise, of)
compound(noise, device)
cc(quantum, and)
conj(device, quantum)
nmod(effect, noise)
punct(noise, ,)
acl(noise, associate)
case(level, with)
amod(level, such)
amod(level, low)
compound(level, input)
obl(associate, level)
punct(describe, ,)
aux(describe, will)
aux:pass(describe, be)
root(ROOT, describe)
punct(describe, .)
case(consideration, after)
det(consideration, these)
amod(consideration, theoretical)
obl(discuss, consideration)
punct(discuss, ,)
amod(detail, constructional)
nsubj:pass(discuss, detail)
case(intensifier, of)
det(intensifier, a)
compound(couple, fiber)
punct(couple, -)
amod(intensifier, couple)
punct(intensifier, ,)
amod(stage, double)
punct(stage, -)
compound(intensifier, stage)
compound(image, X-ray)
compound(intensifier, image)
nmod(detail, intensifier)
aux(discuss, will)
aux:pass(discuss, be)
root(ROOT, discuss)
punct(discuss, .)
amod(characteristic, measure)
compound(characteristic, performance)
nsubj:pass(list, characteristic)
case(tube, for)
det(tube, this)
amod(tube, experimental)
nmod(characteristic, tube)
aux(list, will)
aux:pass(list, be)
root(ROOT, list)
punct(list, .)
det(conclusion, the)
nsubj:pass(reach, conclusion)
aux(reach, shall)
aux:pass(reach, be)
root(ROOT, reach)
mark(represent, that)
compound(couple, fiber)
punct(couple, -)
amod(tube, couple)
punct(represent, ,)
amod(stage, double)
punct(stage, -)
compound(tube, stage)
nsubj(represent, tube)
ccomp(reach, represent)
det(approach, a)
amod(approach, sensible)
cc(practical, and)
conj(sensible, practical)
obj(represent, approach)
case(intensification, to)
amod(gain, high)
punct(gain, -)
amod(intensification, gain)
compound(intensification, image)
nmod(approach, intensification)
punct(reach, .)
amod(design, Basic)
nsubj:pass(describe, design)
case(intensifier, of)
det(intensifier, a)
obl:npmod(couple, fiber)
punct(couple, -)
amod(intensifier, couple)
punct(intensifier, ,)
amod(stage, double)
punct(stage, -)
compound(intensifier, stage)
compound(intensifier, image)
nmod(design, intensifier)
det(design, the)
compound(design, tube)
appos(intensifier, design)
nsubj(form, which)
acl:relcl(design, form)
det(basis, the)
obj(form, basis)
case(discussion, of)
det(discussion, the)
amod(discussion, theoretical)
nmod(basis, discussion)
aux(describe, shall)
aux:pass(describe, be)
root(ROOT, describe)
advmod(describe, now)
punct(describe, .)
det(system, the)
compound(system, electron)
amod(system, optical)
nsubj:pass(base, system)
punct(see, ()
parataxis(system, see)
obj(see, fig.)
nummod(fig., 14)
case(1, -)
nmod(14, 1)
punct(see, ))
aux:pass(base, be)
root(ROOT, base)
case(principle, in)
obl(base, principle)
case(action, on)
det(action, the)
amod(action, focus)
nmod(principle, action)
case(cathode, of)
amod(cathode, concentric)
amod(cathode, spherical)
nmod(action, cathode)
cc(surface, and)
compound(surface, anode)
conj(cathode, surface)
punct(base, .)
det(sphere, the)
amod(sphere, inner)
punct(anode, ()
compound(sphere, anode)
punct(anode, ))
nsubj:pass(pierce, sphere)
aux:pass(pierce, be)
root(ROOT, pierce)
punct(elongate, ,)
conj(pierce, elongate)
case(cup, into)
det(cup, a)
obl(elongate, cup)
punct(terminate, ,)
cc(terminate, and)
conj(elongate, terminate)
case(screen, by)
det(screen, the)
compound(screen, phosphor)
obl(terminate, screen)
punct(pierce, .)
det(photoelectron, the)
nsubj:pass(focus, photoelectron)
acl(photoelectron, emit)
case(segment, from)
det(segment, a)
amod(segment, circular)
obl(emit, segment)
case(sphere, of)
det(sphere, the)
compound(sphere, cathode)
nmod(segment, sphere)
aux:pass(focus, be)
root(ROOT, focus)
case(action, by)
det(action, the)
amod(action, positive)
compound(action, lens)
obl(focus, action)
case(sphere, of)
det(sphere, the)
nummod(sphere, two)
amod(sphere, concentric)
nmod(action, sphere)
punct(pass, ,)
conj(focus, pass)
case(lens, through)
det(lens, the)
punct(lens, ()
amod(lens, negative)
punct(lens, ))
obl(pass, lens)
acl(lens, form)
case(aperture, by)
det(aperture, the)
compound(aperture, anode)
obl(form, aperture)
punct(impinge, ,)
cc(impinge, and)
conj(form, impinge)
case(screen, upon)
det(screen, the)
compound(screen, cathodoluminescent)
compound(screen, view)
obl(impinge, screen)
punct(focus, .)
det(electrode, the)
amod(electrode, cylindrical)
compound(electrode, focus)
nsubj(permit, electrode)
root(ROOT, permit)
obj(permit, adjustment)
case(part, of)
det(part, the)
amod(part, positive)
compound(part, lens)
nmod(adjustment, part)
mark(varying, by)
advcl(permit, varying)
det(potential, the)
compound(potential, focus)
obj(varying, potential)
punct(permit, .)
det(potential, the)
compound(potential, anode)
nsubj(codetermine, potential)
root(ROOT, codetermine)
det(gain, the)
obj(codetermine, gain)
punct(g, ,)
conj(gain, g)
punct(magnification, ,)
cc(magnification, and)
conj(gain, magnification)
punct(gain, ,)
conj(gain, m)
punct(gain, ,)
case(stage, of)
det(stage, the)
nmod(gain, stage)
punct(codetermine, .)
cc:preconj(photocathode, both)
det(photocathode, the)
nsubj:pass(curve, photocathode)
cc(plane, and)
det(plane, the)
compound(plane, image)
conj(photocathode, plane)
case(configuration, of)
det:predet(configuration, such)
det(configuration, a)
compound(configuration, electrode)
nmod(plane, configuration)
aux:pass(curve, be)
root(ROOT, curve)
xcomp(curve, concave)
mark(see, as)
advcl(curve, see)
case(aperture, from)
det(aperture, the)
compound(aperture, anode)
obl(see, aperture)
punct(curve, .)
det(property, the)
obl:npmod(flattening, field)
punct(flattening, -)
amod(property, flattening)
nsubj:pass(utilized, property)
case(coupler, of)
det(coupler, the)
amod(coupler, biconcave)
compound(coupler, fiber)
nmod(property, coupler)
aux(utilized, can)
aux:pass(utilized, be)
root(ROOT, utilized)
mark(alleviate, to)
advcl(utilized, alleviate)
det(loss, the)
amod(loss, peripheral)
compound(loss, resolution)
obj(alleviate, loss)
acl(loss, result)
case(screen, with)
det(screen, a)
amod(screen, flat)
compound(screen, phosphor)
punct(screen, -)
obl(result, screen)
cc(member, or)
compound(member, couple)
conj(screen, member)
punct(utilized, .)
case(reason, for)
det(reason, the)
amod(reason, same)
obl(planoconcave, reason)
punct(planoconcave, ,)
det(plate, the)
compound(plate, output)
compound(plate, fiber)
nsubj(planoconcave, plate)
cop(planoconcave, be)
root(ROOT, planoconcave)
punct(planoconcave, ,)
nmod:poss(side, its)
amod(side, expose)
amod(side, flat)
parataxis(planoconcave, side)
advcl(planoconcave, permit)
compound(photography, contact)
obj(permit, photography)
mark(desire, if)
det(record, a)
amod(record, permanent)
nsubj:pass(desire, record)
aux:pass(desire, be)
advcl(permit, desire)
punct(planoconcave, .)
mark(show, as)
nsubj:pass(show, it)
aux(show, will)
aux:pass(show, be)
advcl(comprise, show)
advmod(show, later)
punct(comprise, ,)
det(property, the)
compound(flattening, field)
punct(flattening, -)
amod(property, flattening)
nsubj(comprise, property)
case(coupler, of)
det(coupler, the)
nmod(property, interstage)
cc(fiber, and)
compound(fiber, output)
compound(coupler, fiber)
nmod(property, coupler)
root(ROOT, comprise)
advmod(comprise, indeed)
det(advantage, the)
amod(advantage, main)
obj(comprise, advantage)
case(design, of)
det:predet(design, such)
det(design, a)
nmod(advantage, design)
punct(comprise, .)
det(photocathode, the)
amod(photocathode, second)
nsubj:pass(deposit, photocathode)
cc(surface, and)
det(surface, both)
compound(surface, phosphor)
conj(photocathode, surface)
aux:pass(deposit, be)
root(ROOT, deposit)
case(substrate, on)
det(substrate, the)
compound(plate, fiber)
compound(substrate, plate)
obl(deposit, substrate)
punct(deposit, .)
det(sensitivity, the)
compound(sensitivity, photocathode)
nsubj:pass(distinguished, sensitivity)
case(sensitivity, 's)
punct(p, ,)
compound(efficiency, phosphor)
compound(p, efficiency)
conj(sensitivity, p)
punct(potential, ,)
cc(potential, and)
compound(potential, anode)
conj(sensitivity, potential)
acl(potential, V)
case(stage, of)
det(stage, the)
amod(stage, individual)
nmod(V, stage)
aux(distinguished, shall)
aux:pass(distinguished, be)
root(ROOT, distinguished)
case(means, by)
obl(distinguished, means)
case(subscript, of)
nmod(means, subscript)
nummod(subscript, 1)
punct(2, ,)
cc(2, and)
conj(subscript, 2)
punct(text, ,)
case(text, in)
det(text, the)
nmod(means, text)
punct(text, ,)
advmod(require, where)
acl:relcl(text, require)
punct(distinguished, .)
det(stage, both)
nsubj:pass(assume, stage)
aux:pass(assume, be)
root(ROOT, assume)
mark(have, to)
xcomp(assume, have)
compound(magnification, unity)
obj(have, magnification)
punct(magnification, .)
amod(discussion, Theoretical)
appos(magnification, discussion)
case(gain, of)
compound(gain, flux)
compound(flux, gain)
compound(gain, flux)
nmod(discussion, gain)
case(stage, of)
det(stage, a)
amod(stage, single)
nmod(gain, stage)
det(gain, the)
amod(gain, luminous)
appos(gain, gain)
case(stage, of)
det(stage, a)
amod(stage, single)
nmod(gain, stage)
case(Af, with)
nmod(stage, Af)
punct(gain, ()
compound(gain, flux)
appos(Af, gain)
punct(gain, ))
aux:pass(assume, be)
punct(be, ,)
case(approximation, to)
det(approximation, a)
amod(approximation, first)
obl(be, approximation)
punct(approximation, ,)
acl(approximation, give)
case(product, by)
det(product, the)
obl(give, product)
case(sensitivity, of)
det(sensitivity, the)
compound(sensitivity, photocathode)
nmod(product, sensitivity)
case(sensitivity, 's)
punct(lume, ()
appos(sensitivity, amp)
cc(lume, /)
nmod(amp, lume)
punct(lume, ))
punct(V, ,)
det(V, the)
compound(V, anode)
amod(V, potential)
conj(sensitivity, V)
punct(volt, ()
appos(V, volt)
punct(volt, ))
punct(p, ,)
cc(p, and)
det(p, the)
compound(conversion, phosphor)
compound(efficiency, conversion)
compound(p, efficiency)
conj(V, p)
punct(p, ()
appos(p, lume)
cc(watt, /)
conj(lume, watt)
punct(p, ))
punct(assume, .)
case(general, in)
obl(function, general)
punct(function, ,)
nsubj(function, p)
cop(function, be)
det(function, a)
root(ROOT, function)
case(V, of)
nmod(function, V)
cc(density, and)
det(density, the)
amod(density, current)
conj(V, density)
punct(assume, ,)
cc(assume, but)
nsubj:pass(assume, it)
aux(assume, shall)
advmod(assume, here)
aux:pass(assume, be)
conj(function, assume)
case(constant, as)
det(constant, a)
obl(assume, constant)
punct(function, .)
det(efficiency, the)
amod(efficiency, luminous)
root(ROOT, efficiency)
nsubj(depend, Af)
case(photocathode, of)
det(photocathode, a)
nmod(Af, photocathode)
root(ROOT, depend)
case(sensitivity, on)
det(sensitivity, the)
amod(sensitivity, maximum)
amod(sensitivity, radiant)
obl(depend, sensitivity)
root(ROOT, Af)
cc(distribution, and)
case(distribution, on)
det(distribution, the)
amod(distribution, spectral)
conj(Af, distribution)
case(light, of)
det(light, the)
compound(light, incident)
nmod(distribution, light)
root(ROOT, Af)
case(relation, by)
det(relation, the)
nmod(Af, relation)
punct(Af, :)
appos(Af, Af)
advmod(normalize, where)
nsubj:pass(normalize, Af)
aux:pass(normalize, be)
acl:relcl(Af, normalize)
amod(sensitivity, radiant)
compound(sensitivity, photocathode)
obj(normalize, sensitivity)
punct(Af, .)
nsubj(function, Af)
cop(function, be)
amod(function, standard)
compound(function, visibility)
root(ROOT, function)
punct(function, .)
det(gain, the)
amod(flux, luminous)
compound(gain, flux)
nsubj:pass(give, gain)
case(stage, of)
det(stage, a)
amod(stage, single)
nmod(gain, stage)
aux:pass(give, be)
root(ROOT, give)
case(Af, by)
punct(Af, :)
obl(give, Af)
punct(Af, .)
mark(fall, if)
det(distribution, the)
compound(distribution, input)
compound(distribution, light)
nsubj(fall, distribution)
advcl(give, fall)
case(range, beyond)
det(range, the)
amod(range, visible)
obl(fall, range)
punct(range, ,)
appos(range, Af)
mark(expect, as)
advcl(fall, expect)
punct(expect, ,)
mark(consider, since)
nsubj:pass(consider, Af)
punct(Af, .)
amod(case, such)
nsubj:pass(consider, case)
aux:pass(consider, be)
advmod(consider, not)
advcl(expect, consider)
advmod(consider, here)
punct(give, .)
nsubj(depend, efficiency)
case(coupler, of)
compound(coupler, fiber)
nmod(efficiency, coupler)
det(efficiency, the)
nsubj(depend, efficiency)
case(plate, of)
compound(optic, fiber)
compound(plate, optic)
nmod(efficiency, plate)
root(ROOT, depend)
case(factor, on)
nummod(factor, four)
obl(depend, factor)
punct(depend, :)
root(ROOT, ()
nummod(aperture, a)
punct(a, ))
amod(aperture, numerical)
root(ROOT, aperture)
punct(N.A., ()
appos(aperture, N.A.)
punct(N.A., ))
punct(aperture, ;)
punct(aperture, ;)
punct(b, ()
nummod(end, b)
punct(end, ))
list(aperture, end)
punct(reflection, ()
compound(reflection, Fresnel)
appos(end, reflection)
punct(reflection, ))
conj(aperture, loss)
punct(R, ()
appos(loss, R)
punct(R, ))
punct(loss, ;)
punct(loss, ;)
punct(c, ()
nummod(loss, c)
punct(c, ))
amod(loss, internal)
list(aperture, loss)
punct(I.L., ()
appos(loss, I.L.)
punct(I.L., ))
punct(loss, ;)
punct(d, ;)
punct(d, ()
appos(efficiency, d)
punct(d, ))
compound(efficiency, packing)
appos(loss, efficiency)
punct(F.R., ()
appos(efficiency, F.R.)
punct(F.R., ))
punct(efficiency, .)
det(aperture, the)
amod(aperture, numerical)
nsubj:pass(give, aperture)
case(fiber, of)
det(fiber, the)
nmod(aperture, fiber)
aux:pass(give, be)
root(ROOT, give)
case(Af, by)
punct(Af, :)
obl(give, Af)
advmod(measure, where)
nummod(measure, Af)
punct(Af, .)
det(Af, the)
compound(Af, angle)
nsubj:pass(measure, Af)
aux:pass(measure, be)
acl:relcl(Af, measure)
case(medium, in)
det(medium, the)
obl(measure, medium)
case(Af, of)
compound(Af, index)
nmod(medium, Af)
punct(phosphor, .)
amod(phosphor, Settled)
nmod(medium, phosphor)
punct(phosphor, ,)
mark(use, as)
advmod(use, generally)
acl(phosphor, use)
case(intensifier, in)
compound(intensifier, image)
obl(use, intensifier)
punct(have, ,)
conj(use, have)
amod(contact, low)
amod(contact, optical)
obj(have, contact)
case(surface, with)
det(surface, the)
compound(surface, substrate)
nmod(contact, surface)
punct(assume, ,)
advmod(assume, hence)
nsubj:pass(assume, Af)
aux(assume, shall)
aux:pass(assume, be)
advcl(have, assume)
punct(give, .)
det(aperture, the)
amod(aperture, numerical)
nsubj(close, aperture)
aux(close, should)
cop(close, be)
case(close, in)
amod(close, general)
root(ROOT, close)
case(unity, to)
obl(close, unity)
punct(close, .)
det(condition, this)
nsubj(satisfied, condition)
aux(satisfied, can)
cop(satisfied, be)
root(ROOT, satisfied)
punct(satisfied, ,)
advmod(satisfied, e.g.)
punct(satisfied, ,)
case(Af, with)
obl(satisfied, Af)
cc(Af, and)
conj(Af, Af)
cc(combination, or)
amod(combination, equivalent)
compound(combination, glass)
conj(Af, combination)
punct(satisfied, . )
det(approximation, a)
advmod(good, sufficiently)
amod(approximation, good)
nsubj:pass(obtain, approximation)
mark(determine, for)
acl(approximation, determine)
det(loss, the)
compound(loss, end)
compound(loss, reflection)
obj(determine, loss)
aux(obtain, R)
aux(obtain, can)
aux:pass(obtain, be)
root(ROOT, obtain)
case(formula, from)
det(formula, the)
compound(independent, angle)
amod(Fresnel, independent)
compound(formula, Fresnel)
obl(obtain, formula)
punct(obtain, :)
nummod(obtain, Af)
punct(Af, .)
case(phosphor, for)
obl(obtain, phosphor)
case(fiber, to)
nmod(phosphor, fiber)
cc(fiber, and)
conj(fiber, fiber)
case(surface, to)
compound(surface, air)
nmod(fiber, surface)
punct(assume, ,)
cc(assume, and)
conj(obtain, assume)
obj(assume, Af)
punct(obtain, ,)
nsubj(obtain, we)
root(ROOT, obtain)
compound(percent, Af)
obj(obtain, percent)
punct(obtain, .)
det(value, this)
nsubj:pass(reduce, value)
aux(reduce, may)
aux:pass(reduce, be)
parataxis(obtain, reduce)
case(percent, to)
nummod(percent, 4.6)
obl(reduce, percent)
case(means, by)
obl(reduce, means)
case(layer, of)
det(layer, a)
punct(thin, ()
advmod(thin, very)
amod(layer, thin)
punct(thin, ))
compound(layer, glass)
nmod(means, layer)
case(index, of)
nmod(layer, index)
root(ROOT, 1.5)
punct(1.5, .)
advmod(Af, hence)
punct(Af, ,)
det(factor, the)
compound(factor, Af)
nsubj(Af, factor)
case(coupler, for)
det(coupler, the)
compound(coupler, output)
compound(coupler, fiber)
nmod(factor, coupler)
cop(Af, be)
root(ROOT, Af)
punct(Af, .)
mark(0.95, as)
det(index, the)
nsubj(0.95, index)
case(refraction, of)
nmod(index, refraction)
case(surface, of)
amod(surface, photosensitive)
nmod(index, surface)
case(sbc, of)
det(sbc, the)
nmod(surface, sbc)
punct(lie, -)
compound(lie, type)
appos(sbc, lie)
advmod(2, around)
nummod(lie, 2)
punct(loss, ,)
det(loss, the)
compound(loss, Fresnel)
appos(2, loss)
case(interface, at)
det(interface, the)
compound(photocathode, fiber)
punct(photocathode, -)
compound(interface, photocathode)
nmod(loss, interface)
cop(percent, be)
advmod(0.5, about)
nummod(percent, 0.5)
parataxis(Af, percent)
cc(0.95, and)
det(factor, the)
compound(factor, Af)
nsubj(0.95, factor)
case(coupler, for)
det(coupler, the)
compound(coupler, interstage)
nmod(factor, coupler)
cop(0.95, be)
conj(percent, 0.95)
punct(Af, .)
nsubj:pass(anticipate, it)
aux(anticipate, might)
aux:pass(anticipate, be)
root(ROOT, anticipate)
mark(reduce, that)
amod(coating, multiple)
nsubj(reduce, coating)
aux(reduce, will)
ccomp(anticipate, reduce)
compound(loss, end)
compound(loss, reflection)
obj(reduce, loss)
advmod(further, even)
advmod(reduce, further)
punct(anticipate, .)
det(loss, the)
amod(loss, internal)
nsubj(absorption, loss)
cop(absorption, be)
case(absorption, due)
fixed(due, to)
root(ROOT, absorption)
cc(loss, and)
det(loss, the)
amod(loss, small)
cc(finite, but)
conj(small, finite)
conj(absorption, loss)
acl(loss, suffer)
case(reflection, in)
det(reflection, the)
amod(reflection, numerous)
amod(reflection, internal)
obl(suffer, reflection)
case(deviation, due)
fixed(due, to)
obl(suffer, deviation)
case(cross-section, from)
det(cross-section, the)
amod(cross-section, prescribe)
punct(cross-section, ,)
amod(cross-section, cylindrical)
compound(cross-section, fiber)
nmod(deviation, cross-section)
cc(imperfection, and)
compound(imperfection, minute)
conj(cross-section, imperfection)
case(interface, of)
det(interface, the)
amod(jacket, core)
punct(jacket, -)
compound(interface, jacket)
nmod(imperfection, interface)
punct(absorption, .)
det(loss, these)
nsubj(depend, loss)
root(ROOT, depend)
case(diameter, on)
compound(diameter, fiber)
obl(depend, diameter)
cc(length, and)
conj(diameter, length)
punct(coefficient, ,)
compound(coefficient, absorption)
conj(diameter, coefficient)
punct(value, ,)
det(value, the)
compound(value, mean)
conj(diameter, value)
case(loss, of)
det(loss, the)
nmod(value, loss)
case(reflection, per)
amod(reflection, internal)
nmod(loss, reflection)
cc(last, and)
conj(reflection, last)
punct(distribution, ,)
cc(distribution, but)
advmod(least, not)
nmod(distribution, least)
punct(distribution, ,)
case(distribution, on)
det(distribution, the)
amod(distribution, angular)
conj(diameter, distribution)
case(light, of)
det(light, the)
compound(light, incident)
nmod(distribution, light)
punct(depend, .)
amod(expression, Explicit)
nsubj:pass(give, expression)
punct(average, ()
amod(average, integral)
appos(expression, average)
punct(average, ))
aux:pass(give, be)
root(ROOT, give)
case(literature, in)
det(literature, the)
obl(give, literature)
punct(give, .)
amod(data, lack)
amod(data, reliable)
obl(rely, data)
case(some, for)
nmod(data, some)
case(variable, of)
det(variable, the)
nmod(some, variable)
punct(rely, ,)
nsubj(rely, we)
aux(rely, be)
root(ROOT, rely)
case(data, on)
amod(data, experimental)
obl(rely, data)
case(percent, of)
advmod(20, about)
nummod(percent, 20)
compound(loss, percent)
amod(loss, internal)
nmod(data, loss)
case(fiber, for)
nummod(inch, 1)
punct(inch, /)
nummod(inch, 4)
punct(inch, -)
obl:npmod(long, inch)
amod(fiber, long)
punct(fiber, ,)
amod(fiber, small)
punct(m, ()
nummod(m, 5)
case(10, -)
nmod(5, 10)
compound(fiber, m)
punct(m, ))
compound(fiber, diameter)
nmod(loss, fiber)
punct(rely, .)
det(value, this)
advmod(high, relatively)
amod(value, high)
nsubj(diameter, value)
cop(diameter, be)
advmod(diameter, probably)
case(diameter, due)
fixed(due, to)
det(diameter, the)
amod(diameter, small)
compound(diameter, fiber)
root(ROOT, diameter)
acl(diameter, increase)
det(number, the)
obj(increase, number)
case(reflection, of)
amod(reflection, internal)
nmod(number, reflection)
punct(diameter, .)
mark(consider, since)
nsubj(consider, we)
aux(consider, be)
advcl(keep, consider)
advmod(consider, here)
advmod(small, relatively)
amod(diameter, small)
obj(consider, diameter)
punct(inch, ()
nummod(inch, 1)
case(1.5, -)
nmod(1, 1.5)
appos(diameter, inch)
punct(inch, ))
compound(plate, fiber)
conj(diameter, plate)
punct(keep, ,)
nmod:poss(thickness, they)
amod(thickness, average)
nsubj:pass(keep, thickness)
aux(keep, can)
aux:pass(keep, be)
root(ROOT, keep)
advmod(keep, below)
nummod(inch, 1)
case(4, /)
nmod(1, 4)
obl:tmod(keep, inch)
cc(assume, and)
nmod:poss(loss, they)
amod(loss, internal)
nsubj:pass(assume, loss)
aux(assume, may)
aux:pass(assume, be)
conj(keep, assume)
case(percent, as)
nummod(percent, 15)
obl(assume, percent)
punct(plate, ()
case(plate, per)
nmod(percent, plate)
punct(plate, ))
punct(keep, .)
det(efficiency, the)
compound(efficiency, packing)
nsubj(receive, efficiency)
punct(F.R., ,)
conj(efficiency, F.R.)
punct(plate, ,)
case(plate, of)
compound(plate, fiber)
nmod(efficiency, plate)
aux(receive, do)
advmod(receive, not)
root(ROOT, receive)
amod(attention, much)
obj(receive, attention)
case(literature, in)
det(literature, the)
obl(receive, literature)
punct(receive, ,)
advmod(receive, probably)
mark(high, as)
nsubj(high, it)
cop(high, be)
advcl(receive, high)
case(fiber, for)
det(fiber, the)
amod(fiber, larger)
obl(high, fiber)
advmod(use, generally)
acl(fiber, use)
punct(use, ,)
case(recently, until)
advmod(recently, rather)
conj(use, recently)
punct(receive, .)
case(fiber, for)
amod(fiber, circular)
obl(give, fiber)
case(array, in)
det(array, a)
advmod(pack, closely)
amod(array, pack)
amod(array, hexagonal)
nmod(fiber, array)
punct(give, ,)
det(efficiency, the)
compound(efficiency, packing)
nsubj:pass(give, efficiency)
aux:pass(give, be)
root(ROOT, give)
case(Af, by)
punct(Af, :)
obl(give, Af)
advmod(Af, where)
appos(Af, Af)
punct(ratio, ,)
cc(ratio, and)
nsubj(ratio, 0.906)
cop(ratio, be)
det(ratio, the)
conj(give, ratio)
case(area, of)
det(area, the)
nmod(ratio, area)
case(circle, of)
det(circle, a)
nmod(area, circle)
case(that, to)
nmod(circle, that)
case(hexagon, of)
det(hexagon, the)
amod(hexagon, circumscribed)
nmod(that, hexagon)
punct(give, .)
case(fiber, for)
det(fiber, the)
amod(fiber, small)
compound(fiber, diameter)
obl(feasible, fiber)
advmod(feasible, now)
advmod(feasible, technically)
root(ROOT, feasible)
cc(require, and)
conj(feasible, require)
case(resolution, for)
advmod(100, about)
nummod(resolution, 100)
compound(resolution, Af)
obl(require, resolution)
punct(Af, ,)
appos(resolution, Af)
punct(feasible, .)
det(thickness, the)
compound(thickness, cladding)
nsubj(m, thickness)
cop(m, be)
advmod(m, about)
nummod(m, 0.5)
parataxis(feasible, m)
punct(m, ,)
advmod(Af, hence)
punct(Af, ,)
appos(m, Af)
cc(Af, and)
conj(Af, Af)
punct(Af, .)
advmod(give, thus)
punct(give, ,)
det(efficiency, the)
nsubj:pass(give, efficiency)
punct(efficiency, **)
compound(coupler, yt)
nsubj:pass(give, coupler)
aux:pass(give, be)
parataxis(m, give)
obl(give, by)
punct(give, --)
compound(percent, Af)
cc(50, or)
advmod(50, approximately)
conj(Af, 50)
obl(give, percent)
nmod:npmod(percent, each)
punct(give, .)
nsubj:pass(remember, it)
aux(remember, must)
aux:pass(remember, be)
root(ROOT, remember)
mark(replace, that)
det(plate, the)
compound(plate, fiber)
nsubj(replace, plate)
ccomp(remember, replace)
det(window, a)
compound(window, glass)
obj(replace, window)
cc(membrane, and)
det(membrane, a)
punct(membrane, ()
compound(membrane, mica)
punct(membrane, ))
conj(window, membrane)
punct(replace, ,)
case(addition, in)
obl(replace, addition)
case(system, to)
det(system, a)
amod(output, optical)
compound(lens, output)
compound(system, lens)
nmod(addition, system)
punct(remember, .)
det(Af, the)
compound(Af, efficiency)
nsubj(Af, Af)
case(lens, of)
det(lens, a)
compound(lens, Af)
nmod(Af, lens)
case(Af, at)
det(Af, the)
compound(Af, magnification)
nmod(lens, Af)
cop(Af, be)
punct(Af, :)
root(ROOT, Af)
punct(Af, .)
acl(Af, Neglecting)
obj(Neglecting, absorption)
punct(loss, ,)
det(loss, the)
compound(loss, end)
conj(absorption, loss)
case(membrane, of)
det(membrane, the)
compound(membrane, couple)
nmod(loss, membrane)
cc(Af, and)
det(Af, the)
compound(Af, output)
compound(Af, window)
nsubj(percent, Af)
aux(percent, would)
cop(percent, be)
nummod(percent, 6)
conj(Af, percent)
cc(percent, and)
nummod(percent, 8)
conj(percent, percent)
punct(Af, .)
advmod(less, thus)
punct(less, ,)
det(efficiency, the)
amod(efficiency, combine)
nsubj(less, efficiency)
case(element, of)
det(element, the)
nmod(efficiency, element)
acl(element, replace)
case(plate, by)
det(plate, the)
nummod(plate, two)
compound(plate, fiber)
obl(replace, plate)
punct(efficiency, ()
case(efficiency, with)
det(efficiency, a)
amod(efficiency, combine)
nmod(plate, efficiency)
case(0.25, of)
nmod(efficiency, 0.25)
punct(efficiency, ))
cop(less, be)
obl:npmod(less, 0.043)
cc(six, or)
advmod(six, about)
nummod(time, six)
obl:npmod(less, time)
root(ROOT, less)
case(that, than)
obl(less, that)
case(plate, of)
det(plate, the)
nummod(plate, two)
compound(plate, fiber)
nmod(that, plate)
punct(less, .)
root(ROOT, gain)
case(intensifier, of)
obl:npmod(couple, fiber)
amod(intensifier, couple)
compound(intensifier, image)
nmod(gain, intensifier)
case(gain, include)
det(gain, the)
compound(gain, brightness)
nmod(intensifier, gain)
nsubj(Af, Af)
case(demagnification, due)
fixed(due, to)
det(demagnification, the)
compound(area, Af)
compound(demagnification, area)
obl(be, demagnification)
punct(be, ,)
det(gain, the)
amod(gain, overall)
nsubj(be, gain)
case(intensifier, of)
det(intensifier, a)
compound(couple, fiber)
amod(intensifier, couple)
amod(intensifier, double)
compound(intensifier, stage)
compound(intensifier, image)
nmod(gain, intensifier)
cop(Af, be)
punct(Af, :)
root(ROOT, Af)
punct(Af, .)
expl(obvious, it)
cop(obvious, be)
parataxis(Af, obvious)
mark(choice, that)
det(choice, the)
amod(choice, careful)
nsubj(obvious, choice)
case(photocathode, of)
nmod(choice, photocathode)
nsubj(maximize, which)
acl:relcl(choice, maximize)
nsubj(important, Af)
case(e, for)
det(e, a)
amod(e, give)
compound(e, input)
nmod(Af, e)
punct(case, ()
case(case, in)
det(case, the)
nmod(e, case)
case(stage, of)
det(stage, the)
amod(stage, second)
nmod(case, stage)
punct(important, ,)
case(emission, for)
det(emission, the)
amod(emission, first)
compound(screen, phosphor)
compound(emission, screen)
obl(important, emission)
punct(emission, ))
cop(important, be)
advmod(important, very)
root(ROOT, important)
punct(important, .)
det(consideration, the)
amod(consideration, same)
nsubj(govern, consideration)
aux(govern, should)
root(ROOT, govern)
det(choice, the)
obj(govern, choice)
case(screen, of)
det(screen, the)
amod(stage, second)
punct(stage, -)
compound(screen, stage)
compound(screen, phosphor)
nmod(choice, screen)
mark(match, for)
advcl(govern, match)
case(sensitivity, with)
det(sensitivity, the)
amod(sensitivity, spectral)
obl(match, sensitivity)
case(sensor, of)
det(sensor, the)
amod(sensor, ultimate)
nmod(sensitivity, sensor)
punct(emulsion, ()
advmod(emulsion, e.g.)
punct(emulsion, ,)
amod(emulsion, photographic)
appos(sensor, emulsion)
punct(emulsion, ))
punct(govern, .)
nsubj(evaluate, we)
aux(evaluate, have)
root(ROOT, evaluate)
det(integral, the)
punct(integral, ``)
amod(integral, match)
obj(evaluate, integral)
punct(integral, '')
case(type, for)
nummod(type, two)
obl(evaluate, type)
case(photocathode, of)
nmod(type, photocathode)
punct(photocathode, ()
amod(photocathode, S)
punct(photocathode, -)
appos(photocathode, 11)
cc(20, and)
case(11, 's)
case(20, -)
nmod(11, 20)
punct(11, ))
cc(type, and)
nummod(type, three)
conj(type, type)
case(input, of)
compound(input, light)
nmod(type, input)
punct(evaluate, .)
det(distribution, the)
compound(distribution, input)
compound(distribution, light)
nsubj(p, distribution)
acl(distribution, consider)
cop(p, be)
root(ROOT, p)
nummod(p, -11)
cc(p, and)
compound(emission, p)
punct(p, -)
nummod(p, 20)
compound(emission, phosphor)
conj(p, emission)
cc(light, and)
det(light, the)
advmod(call, so)
punct(call, -)
amod(light, call)
punct(light, ``)
compound(light, night)
conj(emission, light)
punct(light, '')
punct(N.L., ()
appos(light, N.L.)
punct(N.L., ))
mark(give, as)
acl(N.L., give)
case(H.W., by)
obl(give, H.W.)
flat(H.W., Babcock)
cc(J., and)
conj(H.W., J.)
flat(J., J.)
flat(J., Johnson)
punct(p, .)
det(integral, the)
nsubj:pass(list, integral)
punct(integral, ()
case(unit, in)
nmod(integral, unit)
punct(integral, ))
aux:pass(list, be)
root(ROOT, list)
case(table, in)
obl(list, table)
nummod(table, 14)
case(1, -)
nmod(14, 1)
punct(list, ,)
advmod(list, below)
punct(list, . )
amod(discussion, Theoretical)
nsubj:pass(give, discussion)
case(limitation, of)
amod(resolution, paraxial)
compound(resolution, device)
compound(limitation, resolution)
compound(limitation, resolution)
nmod(discussion, limitation)
case(stage, in)
det(stage, a)
amod(stage, single)
nmod(limitation, stage)
det(limitation, the)
compound(limitation, resolution)
nsubj:pass(give, limitation)
case(stage, for)
det(stage, a)
amod(stage, single)
nmod(limitation, stage)
aux:pass(give, be)
root(ROOT, give)
case(resolution, by)
det(resolution, the)
amod(resolution, inherent)
obl(give, resolution)
case(system, of)
det(system, the)
compound(system, electron)
amod(system, optical)
nmod(resolution, system)
cc(capability, as)
fixed(as, well)
fixed(as, as)
det(capability, the)
compound(capability, resolution)
conj(resolution, capability)
case(screen, of)
det(screen, the)
compound(screen, cathodoluminescent)
compound(screen, view)
nmod(capability, screen)
punct(give, .)
det(capability, the)
compound(capability, resolution)
nsubj(depend, capability)
case(system, of)
det(system, a)
amod(system, electrostatic)
nmod(capability, system)
root(ROOT, depend)
case(choice, on)
cc:preconj(choice, both)
det(choice, the)
obl(depend, choice)
case(magnification, of)
nmod(choice, magnification)
cc(chromatic, and)
conj(magnification, chromatic)
nmod(choice, aberration)
punct(depend, .)
nsubj:pass(state, it)
aux(state, have)
aux:pass(state, be)
root(ROOT, state)
advmod(state, previously)
mark(yield, that)
det(system, a)
amod(system, minify)
amod(system, electrostatic)
nsubj(yield, system)
ccomp(state, yield)
det(resolution, a)
amod(resolution, lower)
obj(yield, resolution)
case(system, than)
det(system, a)
compound(system, magnifying)
nmod(resolution, system)
cc(system, or)
det(system, a)
conj(system, system)
case(magnification, with)
compound(magnification, unity)
nmod(system, magnification)
punct(state, . )
advmod(depend, furthermore)
punct(depend, ,)
det(aberration, the)
amod(aberration, chromatic)
nsubj(depend, aberration)
root(ROOT, depend)
case(voltage, on)
det(voltage, the)
amod(voltage, choose)
amod(voltage, high)
obl(depend, voltage)
punct(depend, .)
case(general, in)
obl(reduce, general)
punct(reduce, ,)
det(voltage, a)
amod(anode, high)
compound(voltage, anode)
nsubj(reduce, voltage)
root(ROOT, reduce)
amod(aberration, chromatic)
obj(reduce, aberration)
cc(increase, and)
advmod(increase, thus)
conj(reduce, increase)
det(resolution, the)
amod(resolution, obtainable)
obj(increase, resolution)
punct(reduce, .)
det(gain, the)
amod(gain, luminous)
nsubj:pass(calculate, gain)
case(tube, of)
det(tube, the)
amod(tube, discuss)
nmod(gain, tube)
aux:pass(calculate, be)
root(ROOT, calculate)
case(Eq., from)
obl(calculate, Eq.)
punct(6, ()
nummod(calculate, 6)
punct(6, ))
case(combination, for)
det(combination, the)
nummod(combination, 16)
amod(combination, possible)
obl(calculate, combination)
case(photocathode, of)
case(of, 's)
case(11, -)
nmod(combination, 11)
cc(20, and)
case(11, 's)
case(20, -)
nmod(11, 20)
nmod(combination, photocathode)
cc(p, and)
conj(photocathode, p)
punct(p, -)
nummod(p, 11)
cc(screen, and)
compound(screen, p)
punct(p, -)
nummod(p, 20)
compound(screen, phosphor)
conj(photocathode, screen)
punct(screen, ,)
case(light, for)
compound(light, night)
nmod(screen, light)
cc(input, and)
compound(input, p)
punct(p, -)
nummod(p, 20)
compound(input, light)
conj(light, input)
punct(calculate, . )
punct(interest, ()
det(input, the)
compound(input, p)
punct(p, -)
nummod(p, 20)
nsubj(interest, input)
cop(interest, be)
case(interest, of)
root(ROOT, interest)
mark(correspond, because)
nsubj(correspond, it)
advcl(interest, correspond)
advmod(correspond, roughly)
case(emission, to)
det(emission, the)
compound(emission, light)
obl(correspond, emission)
case(screen, of)
amod(screen, conventional)
compound(fluorescent, X-ray)
amod(screen, fluorescent)
nmod(emission, screen)
punct(interest, ))
punct(interest, .)
det(efficiency, the)
amod(efficiency, follow)
nsubj:pass(use, efficiency)
acl(efficiency, obtain)
case(specification, from)
compound(specification, JEDEC)
cc(RCA, and)
conj(JEDEC, RCA)
obl(obtain, specification)
aux:pass(use, be)
root(ROOT, use)
punct(use, :)
nummod(list, Af)
punct(Af, .)
det(table, the)
amod(table, follow)
nsubj(list, table)
punct(14, ()
appos(table, 14)
case(2, -)
nmod(14, 2)
punct(2, ))
root(ROOT, list)
det(value, the)
punct(value, ()
amod(value, luminous)
punct(value, ))
compound(value, gain)
obj(list, value)
acl(value, compute)
case(Eq., accord)
fixed(accord, to)
obl(compute, Eq.)
punct(6, ()
nummod(Eq., 6)
punct(6, ))
case(Af, with)
nmod(Eq., Af)
punct(possibility, .)
det(possibility, the)
nsubj:pass(point, possibility)
case(blowup, of)
det(blowup, a)
compound(charge, space)
compound(blowup, charge)
nmod(possibility, blowup)
case(crossover, of)
det(crossover, the)
compound(crossover, screen)
nmod(blowup, crossover)
case(bundle, of)
det(bundle, the)
amod(bundle, elementary)
compound(bundle, electron)
nmod(crossover, bundle)
aux(point, have)
aux:pass(point, be)
conj(list, point)
compound:prt(point, out)
punct(list, .)
expl(obvious, it)
cop(obvious, be)
root(ROOT, obvious)
mark(expect, that)
det:predet(influence, such)
det(influence, a)
nsubj:pass(expect, influence)
aux(expect, can)
advmod(expect, only)
aux:pass(expect, be)
csubj(obvious, expect)
case(stage, in)
det(stage, the)
amod(stage, final)
obl(expect, stage)
case(intensifier, of)
det(intensifier, a)
compound(intensifier, image)
nmod(stage, intensifier)
case(level, at)
cc(level, rather)
amod(output, high)
compound(level, output)
nmod(intensifier, level)
punct(obvious, .)
compound(charge, Space)
compound(influence, charge)
nsubj(decrease, influence)
aux(decrease, will)
advmod(decrease, also)
root(ROOT, decrease)
case(voltage, at)
amod(voltage, increase)
obl(decrease, voltage)
punct(decrease, .)
amod(system, Electrostatic)
nsubj:pass(test, system)
case(type, of)
det(type, the)
amod(symmetric, pseudo)
punct(symmetric, -)
amod(type, symmetric)
nmod(system, type)
aux(test, have)
aux:pass(test, be)
root(ROOT, test)
case(capability, for)
compound(capability, resolution)
obl(test, capability)
mark(apply, by)
advcl(test, apply)
obj(apply, electronography)
punct(test, . )
det(resolution, a)
nsubj(appear, resolution)
case(pair, of)
nummod(pair, 70)
case(80, -)
nmod(70, 80)
compound(pair, line)
punct(pair, -)
nmod(resolution, pair)
case(millimeter, per)
nmod(pair, millimeter)
root(ROOT, appear)
mark(feasible, to)
cop(feasible, be)
xcomp(appear, feasible)
punct(appear, .)
det(resolution, the)
amod(resolution, inherent)
nsubj(decrease, resolution)
case(screen, of)
det(screen, a)
amod(screen, cathodoluminescent)
compound(screen, phosphor)
nmod(resolution, screen)
root(ROOT, decrease)
case(thickness, with)
advmod(aggregate, increasingly)
compound(thickness, aggregate)
obl(decrease, thickness)
punct(voltage, ()
case(voltage, with)
amod(voltage, increase)
compound(voltage, anode)
nmod(thickness, voltage)
punct(voltage, ))
punct(decrease, ,)
conj(thickness, decrease)
case(porosity, with)
amod(porosity, decrease)
nmod(decrease, porosity)
punct(advantage, ()
advmod(advantage, thus)
det(advantage, the)
appos(porosity, advantage)
case(deposition, of)
amod(deposition, cathodophoretic)
compound(deposition, phosphor)
nmod(advantage, deposition)
punct(advantage, ))
cc(impair, and)
aux(impair, might)
aux:pass(impair, be)
conj(advantage, impair)
case(mirror, by)
det(mirror, the)
advmod(use, normally)
amod(mirror, use)
compound(mirror, aluminum)
obl(impair, mirror)
punct(mirror, .)
advmod(effect, thus)
punct(effect, ,)
case(general, in)
amod(effect, general)
punct(effect, ,)
amod(light, elementary)
compound(effect, light)
amod(effect, optical)
conj(mirror, effect)
punct(scatter, ,)
compound(scatter, light)
conj(effect, scatter)
punct(scatter, ,)
cc(scatter, and)
compound(scatter, electron)
conj(effect, scatter)
acl(effect, determine)
det(limit, the)
amod(limit, obtainable)
compound(limit, resolution)
obj(determine, limit)
punct(decrease, .)
nsubj:pass(note, it)
aux(note, should)
aux:pass(note, be)
root(ROOT, note)
mark(photoluminescence, that)
nsubj:pass(note, photoluminescence)
punct(photoluminescence, ,)
case(photoluminescence, due)
fixed(due, to)
punct(note, ``)
nsubj(appear, Bremsstrahlung)
punct(Bremsstrahlung, '')
acl(Bremsstrahlung, generate)
case(screen, within)
det(screen, the)
compound(screen, view)
obl(generate, screen)
case(impact, by)
compound(impact, electron)
nmod(screen, impact)
punct(appear, ,)
root(ROOT, appear)
mark(important, to)
cop(important, be)
xcomp(appear, important)
advmod(utilized, only)
mark(utilized, if)
compound(voltage, anode)
nsubj:pass(utilized, voltage)
case(excess, in)
nmod(voltage, excess)
case(KV, of)
nummod(KV, 30)
nmod(excess, KV)
aux:pass(utilized, be)
advcl(important, utilized)
punct(appear, .)
expl(state, it)
aux(state, have)
aux:pass(state, be)
root(ROOT, state)
mark(have, that)
csubj(have, settle)
amod(screen, cathodoluminescent)
compound(screen, phosphor)
nsubj(have, screen)
aux(have, may)
ccomp(state, have)
det(resolution, a)
amod(resolution, limiting)
obj(have, resolution)
case(Af, of)
nummod(Af, 60)
nmod(resolution, Af)
case(value, at)
amod(value, high)
compound(value, voltage)
nmod(resolution, value)
case(Aj, of)
advmod(20, approximately)
nummod(Aj, 20)
nmod(value, Aj)
punct(Aj, .)
case(discussion, for)
det(discussion, the)
amod(discussion, further)
obl(assume, discussion)
punct(assume, ,)
nsubj(assume, we)
aux(assume, shall)
advmod(assume, thus)
ccomp(state, assume)
det(resolution, a)
compound(resolution, electron)
amod(resolution, optical)
obj(assume, resolution)
case(Af, of)
nummod(Af, 80)
nmod(resolution, Af)
cc(resolution, and)
compound(screen, phosphor)
compound(resolution, screen)
conj(resolution, resolution)
case(Af, of)
nummod(Af, 60)
nmod(resolution, Af)
punct(resolution, .)
det(set, the)
nsubj:pass(call, set)
case(decision, of)
det(decision, all)
nmod(set, decision)
aux:pass(call, be)
acl:relcl(resolution, call)
det(policy, the)
compound(policy, operating)
obj(call, policy)
cc(policy, or)
punct(policy, ,)
advmod(simply, more)
advmod(policy, simply)
punct(policy, ,)
det(policy, the)
conj(call, policy)
punct(state, .)
det(policy, a)
amod(policy, optimal)
nsubj(one, policy)
cop(one, be)
root(ROOT, one)
nsubj(get, which)
case(sense, in)
det(sense, some)
obl(get, sense)
acl:relcl(one, get)
det(best, the)
obj(get, best)
case(process, out)
case(process, of)
det(process, the)
obl(get, process)
case(whole, as)
det(whole, a)
obl(get, whole)
mark(maximize, by)
advcl(get, maximize)
det(value, the)
obj(maximize, value)
case(product, of)
det(product, the)
nmod(value, product)
punct(one, .)
expl(be, there)
root(ROOT, be)
advmod(three, thus)
nummod(component, three)
nsubj(be, component)
case(problem, to)
det(problem, a)
amod(problem, optimal)
compound(problem, design)
nmod(component, problem)
punct(problem, :)
punct(1, ()
nummod(specification, 1)
punct(1, ))
det(specification, the)
appos(component, specification)
case(state, of)
det(state, the)
nmod(specification, state)
case(process, of)
det(process, the)
nmod(state, process)
nmod(specification, stream)
punct(specification, ;)
punct(be, ;)
punct(2, ()
nummod(specification, 2)
punct(2, ))
det(specification, the)
conj(specification, specification)
case(variable, of)
det(variable, the)
compound(variable, operating)
nmod(specification, variable)
cc(transformation, and)
det(transformation, the)
conj(variable, transformation)
nsubj(effect, they)
acl:relcl(transformation, effect)
punct(transformation, ;)
punct(specification, ;)
punct(3, ()
nummod(specification, 3)
punct(3, ))
det(specification, the)
conj(specification, specification)
case(function, of)
det(function, the)
amod(function, objective)
nmod(specification, function)
case(which, of)
obl(desire, which)
det(optimization, the)
nsubj:pass(desire, optimization)
aux:pass(desire, be)
acl:relcl(function, desire)
punct(be, .)
case(process, for)
det(process, a)
amod(process, chemical)
obl(involve, process)
det(first, the)
nsubj(involve, first)
case(these, of)
nmod(first, these)
aux(involve, might)
root(ROOT, involve)
det(concentration, the)
obj(involve, concentration)
case(species, of)
det(species, the)
amod(species, different)
amod(species, chemical)
nmod(concentration, species)
punct(temperature, ,)
cc(temperature, and)
det(temperature, the)
conj(concentration, temperature)
cc(pressure, or)
conj(temperature, pressure)
case(stream, of)
det(stream, the)
nmod(temperature, stream)
punct(involve, .)
case(second, for)
det(second, the)
obl(have, second)
nsubj(have, we)
aux(have, might)
root(ROOT, have)
mark(choose, to)
xcomp(have, choose)
det(volume, the)
obj(choose, volume)
case(reactor, of)
nmod(volume, reactor)
cc(amount, or)
conj(reactor, amount)
case(cool, of)
nmod(amount, cool)
mark(supply, to)
aux:pass(supply, be)
advcl(choose, supply)
punct(have, ;)
punct(have, ;)
det(way, the)
nsubj:pass(supply, way)
case(which, in)
obl(depend, which)
det(transformation, the)
nsubj(depend, transformation)
case(state, of)
nmod(transformation, state)
acl:relcl(way, depend)
case(variable, on)
det(variable, the)
compound(variable, operating)
obl(depend, variable)
case(type, for)
det(type, the)
amod(type, main)
nmod(variable, type)
case(reactor, of)
nmod(type, reactor)
aux:pass(discuss, be)
advcl(depend, discuss)
case(chapter, in)
det(chapter, the)
amod(chapter, next)
obl(discuss, chapter)
punct(have, .)
det(function, the)
amod(function, objective)
nsubj(measure, function)
cop(measure, be)
det(measure, some)
root(ROOT, measure)
case(increase, of)
det(increase, the)
nmod(measure, increase)
case(value, in)
nmod(increase, value)
case(stream, of)
det(stream, the)
nmod(value, stream)
case(processing, by)
nmod(stream, processing)
punct(measure, ;)
punct(measure, ;)
nsubj(subject, it)
cop(subject, be)
det(subject, the)
parataxis(measure, subject)
case(Chapter, of)
nmod(subject, Chapter)
nummod(Chapter, 4)
punct(characteristic, .)
det(characteristic, the)
amod(characteristic, essential)
conj(subject, characteristic)
case(policy, of)
det(policy, a)
amod(policy, optimal)
nmod(characteristic, policy)
mark(transform, when)
det(state, the)
nsubj:pass(transform, state)
case(stream, of)
det(stream, the)
nmod(state, stream)
aux:pass(transform, be)
advcl(characteristic, transform)
case(sequence, in)
det(sequence, a)
obl(transform, sequence)
case(stage, of)
nmod(sequence, stage)
case(feedback, with)
det(feedback, no)
nmod(stage, feedback)
aux:pass(isolate, be)
advmod(isolate, first)
acl(sequence, isolate)
case(Bellman, by)
obl(isolate, Bellman)
punct(measure, .)
nsubj(recognize, he)
root(ROOT, recognize)
mark(effect, that)
det(transformation, whatever)
nsubj:pass(effect, transformation)
aux(effect, may)
aux:pass(effect, be)
ccomp(recognize, effect)
case(stage, in)
det(stage, the)
amod(stage, first)
obl(effect, stage)
case(process, of)
det(process, a)
compound(process, R-stage)
nmod(stage, process)
punct(use, ,)
det(stage, the)
amod(stage, remain)
nsubj(use, stage)
aux(use, must)
parataxis(recognize, use)
det(policy, a)
amod(policy, optimal)
compound(stage, Af)
punct(stage, -)
compound(policy, stage)
obj(use, policy)
case(respect, with)
nmod(policy, respect)
case(state, to)
det(state, the)
nmod(respect, state)
acl(respect, result)
case(stage, from)
det(stage, the)
amod(stage, first)
obl(result, stage)
punct(be, ,)
mark(be, if)
expl(be, there)
advcl(use, be)
mark(be, to)
ccomp(be, be)
det(chance, any)
nsubj(be, chance)
mark(optimize, of)
acl(chance, optimize)
det(process, the)
amod(process, complete)
obj(optimize, process)
punct(optimize, .)
advmod(varying, moreover)
punct(be, ,)
mark(varying, by)
advmod(varying, systematically)
advcl(optimize, varying)
det(condition, the)
compound(condition, operating)
obj(varying, condition)
case(stage, in)
det(stage, the)
amod(stage, first)
obl(varying, stage)
cc(use, and)
advmod(use, always)
conj(varying, use)
det(policy, the)
amod(policy, optimal)
compound(stage, Af)
punct(stage, -)
compound(policy, stage)
obj(use, policy)
case(stage, for)
det(stage, the)
amod(stage, remain)
obl(use, stage)
punct(find, ,)
nsubj(find, we)
aux(find, shall)
advmod(find, eventually)
parataxis(recognize, find)
det(policy, the)
amod(policy, optimal)
obj(find, policy)
case(stage, for)
det(stage, all)
compound(stage, R)
obl(find, stage)
punct(recognize, .)
advcl(build, Proceeding)
case(way, in)
det(way, this)
obl(Proceeding, way)
punct(build, ,)
case(one, from)
obl(Proceeding, one)
case(two, to)
nmod(one, two)
cc(stage, and)
case(stage, from)
nummod(stage, two)
case(three, to)
nmod(two, three)
obl(build, stage)
punct(build, ,)
nsubj(build, we)
aux(build, may)
advmod(build, gradually)
root(ROOT, build)
compound:prt(build, up)
det(policy, the)
obj(build, policy)
case(number, for)
det(number, any)
obl(build, number)
punct(build, .)
case(step, at)
det(step, each)
obl(varied, step)
case(calculation, of)
det(calculation, the)
nmod(step, calculation)
det(variable, the)
compound(variable, operating)
nsubj:pass(varied, variable)
case(stage, of)
advmod(stage, only)
nummod(stage, one)
nmod(variable, stage)
aux(varied, need)
aux:pass(varied, be)
root(ROOT, varied)
punct(varied, .)
mark(see, to)
advcl(let, see)
advmod(important, how)
ccomp(see, important)
det(economy, this)
nsubj(important, economy)
cop(important, be)
punct(let, ,)
root(ROOT, let)
obj(let, we)
xcomp(let, suppose)
mark(be, that)
expl(be, there)
ccomp(suppose, be)
amod(variable, m)
compound(variable, operating)
nsubj(be, variable)
case(stage, at)
det(stage, each)
nmod(variable, stage)
cc(specify, and)
mark(specify, that)
det(state, the)
nsubj:pass(specify, state)
aux:pass(specify, be)
conj(be, specify)
case(variable, by)
compound(variable, N)
obl(specify, variable)
punct(specify, ;)
punct(specify, ;)
advmod(require, then)
det(search, the)
nsubj(require, search)
case(maximum, for)
det(maximum, the)
nmod(search, maximum)
case(stage, at)
det(stage, any)
nummod(stage, one)
nmod(maximum, stage)
aux(require, will)
parataxis(let, require)
det(number, a)
obj(require, number)
case(operation, of)
nmod(number, operation)
case(Af, of)
compound(Af, order)
nmod(operation, Af)
punct(number, ()
advmod(number, where)
nsubj(number, a)
cop(number, be)
det(number, some)
acl:relcl(Af, number)
advmod(large, not)
advmod(large, unreasonably)
amod(number, large)
punct(large, ))
punct(large, .)
mark(proceed, to)
acl(number, proceed)
case(stage, from)
nummod(stage, one)
obl(proceed, stage)
case(number, to)
det(number, the)
amod(number, next)
det(number, a)
amod(number, sufficient)
nsubj:pass(investigate, number)
case(state, of)
compound(state, feed)
nmod(number, state)
aux(investigate, must)
aux:pass(investigate, be)
conj(proceed, investigate)
mark(allow, to)
xcomp(investigate, allow)
case(interpolation, for)
obl(allow, interpolation)
punct(investigate, ;)
punct(investigate, ;)
det(number, this)
nsubj(order, number)
aux(order, will)
cop(order, be)
case(order, of)
det(order, the)
conj(investigate, order)
case(Af, of)
nmod(order, Af)
punct(let, .)
mark(however, if)
punct(seek, ,)
advmod(seek, however)
punct(seek, ,)
nsubj(seek, we)
aux(seek, be)
root(ROOT, seek)
det(policy, the)
amod(policy, optimal)
compound(policy, R-stage)
obj(seek, policy)
case(state, for)
det(state, a)
amod(state, give)
compound(state, feed)
nmod(policy, state)
punct(seek, ,)
advmod(search, only)
nummod(search, one)
nsubj:pass(require, search)
case(maximum, for)
det(maximum, a)
nmod(search, maximum)
aux:pass(require, be)
conj(seek, require)
case(step, at)
det(step, the)
amod(step, final)
obl(require, step)
punct(seek, .)
advmod(require, thus)
det(number, a)
nsubj:pass(require, number)
case(operation, of)
nmod(number, operation)
case(order, of)
det(order, the)
nmod(operation, order)
case(Af, of)
nmod(order, Af)
aux:pass(require, be)
root(ROOT, require)
punct(require, .)
mark(varied, if)
det:predet(variable, all)
det(variable, the)
compound(variable, operating)
nsubj:pass(varied, variable)
aux:pass(varied, be)
root(ROOT, varied)
advmod(varied, simultaneously)
punct(varied, ,)
compound(operation, Af)
nsubj:pass(require, operation)
aux(require, would)
aux:pass(require, be)
root(ROOT, require)
mark(do, to)
xcomp(require, do)
det(job, the)
amod(job, same)
obj(do, job)
punct(increase, ,)
cc(increase, and)
mark(increase, as)
nsubj(increase, R)
advcl(increase, increase)
nsubj(increase, this)
conj(require, increase)
advmod(much, very)
advmod(more, much)
advmod(rapidly, more)
advmod(increase, rapidly)
case(number, than)
det(number, the)
obl(rapidly, number)
case(operation, of)
nmod(number, operation)
acl(operation, require)
case(program, by)
det(program, the)
amod(program, dynamic)
obl(require, program)
punct(require, .)
cc(important, but)
advmod(more, even)
advmod(important, more)
root(ROOT, important)
mark(fact, than)
nsubj(fact, this)
cop(fact, be)
det(fact, the)
advcl(important, fact)
mark(produce, that)
det(search, the)
amod(search, direct)
nsubj(produce, search)
mark(varying, by)
advmod(varying, simultaneously)
acl(search, varying)
det(condition, all)
compound(condition, operating)
obj(varying, condition)
aux(produce, have)
acl(fact, produce)
advmod(policy, only)
nummod(policy, one)
amod(policy, optimal)
obj(produce, policy)
punct(policy, ,)
advmod(produce, namely)
punct(produce, ,)
nsubj(state, that)
case(state, for)
det(state, the)
amod(state, give)
compound(state, feed)
obl(produce, state)
cc(stage, and)
compound(stage, R)
conj(state, stage)
punct(important, .)
case(contrast, in)
obl(produce, contrast)
punct(produce, ,)
det(program, the)
amod(program, dynamic)
nsubj(produce, program)
root(ROOT, produce)
det(policy, this)
obj(produce, policy)
cc(family, and)
det(family, a)
amod(family, whole)
conj(policy, family)
case(policy, of)
nmod(family, policy)
case(number, for)
det(number, any)
amod(number, smaller)
obl(produce, number)
case(stage, of)
nmod(number, stage)
punct(produce, .)
mark(enlarge, if)
det(problem, the)
nsubj:pass(enlarge, problem)
aux:pass(enlarge, be)
advcl(need, enlarge)
mark(require, to)
xcomp(enlarge, require)
det(coverage, a)
amod(coverage, complete)
obj(require, coverage)
case(state, of)
compound(state, feed)
nmod(coverage, state)
punct(need, ,)
compound(operation, Af)
nsubj:pass(need, operation)
aux:pass(need, be)
root(ROOT, need)
case(program, by)
det(program, the)
amod(program, dynamic)
obl(need, program)
cc(Af, and)
conj(program, Af)
case(search, by)
det(search, the)
amod(search, direct)
nmod(program, search)
punct(need, .)
cc(larger, but)
nsubj(larger, Af)
cop(larger, be)
advmod(larger, vastly)
root(ROOT, larger)
case(r, than)
nummod(larger, r)
punct(larger, .)
det(optimism, no)
nsubj(baseless, optimism)
cop(baseless, be)
advmod(baseless, more)
parataxis(larger, baseless)
case(that, than)
obl(baseless, that)
nsubj(believe, which)
parataxis(baseless, believe)
mark(allow, that)
det(speed, the)
amod(speed, high)
nsubj(allow, speed)
case(computer, of)
amod(computer, modern)
amod(computer, digital)
nmod(speed, computer)
ccomp(believe, allow)
case(use, for)
obl(allow, use)
case(crudest, of)
det(crudest, the)
nmod(use, crudest)
case(method, of)
nmod(crudest, method)
mark(search, in)
acl(method, search)
compound:prt(search, out)
det(result, a)
obj(search, result)
punct(suppose, .)
parataxis(larger, suppose)
det(Af, that)
obj(suppose, Af)
punct(require, ,)
cc(require, and)
mark(require, that)
det(operation, the)
amod(operation, average)
nsubj(require, operation)
conj(suppose, require)
advmod(sec, only)
compound(sec, Af)
obj(require, sec)
punct(larger, .)
punct(larger, .)
advmod(require, then)
det(program, the)
amod(program, dynamic)
nsubj(require, program)
aux(require, would)
root(ROOT, require)
advmod(minute, about)
det(minute, a)
obj(require, minute)
mark(take, whereas)
det(search, the)
amod(search, direct)
nsubj(take, search)
aux(take, would)
advcl(require, take)
advmod(three, more)
fixed(more, than)
nummod(millennia, three)
obj(take, millennia)
punct(require, !)
punct(require, !)
det(principle, the)
nsubj(bring, principle)
case(optimality, of)
nmod(principle, optimality)
advmod(bring, thus)
root(ROOT, bring)
det(organization, a)
amod(organization, vital)
obj(bring, organization)
case(search, into)
det(search, the)
obl(bring, search)
case(policy, for)
det(policy, the)
amod(policy, optimal)
nmod(search, policy)
case(process, of)
det(process, a)
amod(process, multistage)
compound(process, decision)
nmod(policy, process)
punct(bring, .)
nsubj(annunciate, Bellman)
punct(1957, ()
appos(Bellman, 1957)
punct(1957, ))
aux(annunciate, have)
root(ROOT, annunciate)
case(term, in)
det(term, the)
amod(term, follow)
obl(annunciate, term)
punct(annunciate, :)
punct(annunciate, ``)
det(policy, a)
amod(policy, optimal)
nsubj(have, policy)
root(ROOT, have)
det(property, the)
obj(have, property)
mark(be, that)
obj(be, whatever)
det(state, the)
amod(state, initial)
nsubj(be, state)
cc(decision, and)
amod(decision, initial)
conj(state, decision)
acl(property, be)
punct(constitute, ,)
det(decision, the)
amod(decision, remain)
nsubj(constitute, decision)
aux(constitute, must)
ccomp(be, constitute)
det(policy, a)
amod(policy, optimal)
obj(constitute, policy)
case(respect, with)
nmod(policy, respect)
case(state, to)
det(state, the)
nmod(respect, state)
acl(state, result)
case(decision, from)
det(decision, the)
amod(decision, first)
obl(result, decision)
punct(principle, '')
punct(have, .)
nsubj(principle, this)
cop(principle, be)
det(principle, the)
parataxis(have, principle)
obj(invoke, which)
nsubj(invoke, we)
aux(invoke, will)
acl:relcl(principle, invoke)
case(case, in)
det(case, every)
obl(invoke, case)
mark(set, to)
advcl(invoke, set)
compound:prt(set, up)
det(equation, a)
amod(equation, functional)
obj(set, equation)
punct(have, .)
nsubj(appear, it)
root(ROOT, appear)
case(form, in)
det(form, a)
obl(appear, form)
nsubj:pass(suite, that)
aux:pass(suite, be)
advmod(suite, admirably)
acl:relcl(form, suite)
case(power, to)
det(power, the)
obl(suite, power)
case(computer, of)
det(computer, the)
amod(computer, digital)
nmod(power, computer)
punct(appear, .)
case(time, at)
det(time, the)
amod(time, same)
obl(value, time)
punct(value, ,)
det(device, every)
nsubj(value, device)
nsubj:pass(employ, that)
aux(employ, can)
aux:pass(employ, be)
acl:relcl(device, employ)
mark(reduce, to)
xcomp(employ, reduce)
det(number, the)
obj(reduce, number)
case(variable, of)
nmod(number, variable)
cop(value, be)
case(value, of)
det(value, the)
amod(value, greatest)
root(ROOT, value)
punct(one, ,)
cc(one, and)
nsubj(one, it)
cop(one, be)
conj(value, one)
case(feature, of)
det(feature, the)
amod(feature, attractive)
nmod(one, feature)
case(programming, of)
amod(programming, dynamic)
nmod(feature, programming)
mark(leave, that)
nsubj:pass(leave, room)
aux:pass(leave, be)
acl:relcl(feature, leave)
case(ingenuity, for)
obl(leave, ingenuity)
mark(use, in)
advcl(leave, use)
det(feature, the)
amod(feature, special)
obj(use, feature)
case(problem, of)
det(problem, the)
nmod(feature, problem)
case(end, to)
det(end, this)
nmod(problem, end)
punct(consider, .)
nummod(process, 2.2)
det(process, the)
amod(process, discrete)
amod(process, deterministic)
nsubj(consider, process)
parataxis(value, consider)
det(process, the)
obj(consider, process)
acl(process, illustrate)
case(Fig., in)
obl(illustrate, Fig.)
nummod(Fig., 2.1)
punct(illustrate, ,)
advcl(illustrate, consist)
case(stage, of)
compound(stage, R)
amod(stage, distinct)
obl(consist, stage)
punct(consider, .)
nsubj:pass(number, these)
aux(number, will)
aux:pass(number, be)
root(ROOT, number)
case(direction, in)
det(direction, the)
obl(number, direction)
advmod(number, opposite)
case(flow, to)
det(flow, the)
obl(number, flow)
case(stream, of)
det(stream, the)
compound(stream, process)
nmod(flow, stream)
punct(number, ,)
mark(stage, so)
det(R, that)
compound(R, stage)
nsubj(stage, R)
cop(stage, be)
det(stage, the)
compound(stage, T)
advcl(number, stage)
case(end, from)
det(end, the)
nmod(stage, end)
punct(number, .)
root(ROOT, let)
det(state, the)
obj(let, state)
case(stream, of)
det(stream, the)
nmod(state, stream)
acl(stream, leave)
compound(R, stage)
obj(leave, R)
aux:pass(denote, be)
ccomp(leave, denote)
case(Af, by)
det(Af, a)
compound(Af, vector)
obl(denote, Af)
cc(variable, and)
det(variable, the)
compound(variable, operating)
conj(Af, variable)
case(R, of)
compound(R, stage)
nmod(variable, R)
case(Af, by)
nmod(R, Af)
punct(let, .)
advmod(denote, thus)
nsubj(denote, Af)
parataxis(let, denote)
det(state, the)
obj(denote, state)
case(feed, of)
det(feed, the)
nmod(state, feed)
case(process, to)
det(process, the)
compound(process, R-stage)
nmod(feed, process)
punct(Af, ,)
cc(Af, and)
conj(denote, Af)
det(state, the)
obj(Af, state)
case(product, of)
det(product, the)
nmod(state, product)
case(stage, from)
det(stage, the)
amod(stage, last)
obl(Af, stage)
punct(let, .)
det(stage, each)
nsubj(transform, stage)
root(ROOT, transform)
det(state, the)
obj(transform, state)
root(ROOT, Af)
case(feed, of)
nmod:poss(feed, its)
nmod(Af, feed)
case(Af, to)
det(Af, the)
compound(Af, state)
nmod(feed, Af)
case(way, in)
det(way, a)
nmod(Af, way)
nsubj(depend, that)
acl:relcl(way, depend)
case(Af, on)
det(Af, the)
compound(variable, operating)
compound(Af, variable)
obl(depend, Af)
punct(write, .)
nsubj(write, we)
parataxis(Af, write)
det(Af, this)
obj(write, Af)
punct(write, .)
det(transformation, this)
nsubj:pass(determine, transformation)
aux:pass(determine, be)
advmod(determine, uniquely)
parataxis(write, determine)
case(Af, by)
obl(determine, Af)
cc(speak, and)
nsubj(speak, we)
advmod(speak, therefore)
conj(determine, speak)
case(process, of)
det(process, the)
obl(speak, process)
case(deterministic, as)
obl(speak, deterministic)
punct(determine, .)
case(situation, in)
amod(situation, practical)
obl(be, situation)
expl(be, there)
aux(be, will)
root(ROOT, be)
nsubj(be, restriction)
case(condition, on)
det(condition, the)
amod(condition, admissible)
compound(condition, operating)
nmod(restriction, condition)
punct(regard, ,)
cc(regard, and)
nsubj(regard, we)
conj(be, regard)
det(vector, the)
obj(regard, vector)
mark(belong, as)
advcl(regard, belong)
case(set, to)
det(set, a)
amod(set, fix)
cc(bounded, and)
conj(fix, bounded)
obl(belong, set)
case(set, 's)
punct(be, .)
det(set, the)
root(ROOT, set)
case(vector, of)
nmod(set, vector)
nsubj(constitute, Af)
root(ROOT, constitute)
det(policy, the)
compound(policy, operating)
obj(constitute, policy)
cc(policy, or)
punct(policy, ,)
advmod(briefly, more)
advmod(policy, briefly)
punct(policy, ,)
det(policy, the)
appos(policy, policy)
punct(admissible, ,)
cc(admissible, and)
det(policy, a)
nsubj(admissible, policy)
cop(admissible, be)
conj(constitute, admissible)
mark(belong, if)
det:predet(Af, all)
det(Af, the)
nsubj(belong, Af)
advcl(admissible, belong)
case(S, to)
obl(belong, S)
punct(belong, .)
mark(choose, when)
det(policy, the)
nsubj:pass(choose, policy)
aux(choose, have)
aux:pass(choose, be)
advcl(obtain, choose)
punct(obtain, ,)
det(state, the)
nsubj:pass(obtain, state)
case(product, of)
det(product, the)
nmod(state, product)
aux(obtain, can)
aux:pass(obtain, be)
parataxis(constitute, obtain)
case(state, from)
det(state, the)
obl(obtain, state)
case(feed, of)
det(feed, the)
nmod(state, feed)
case(application, by)
amod(application, repeat)
nmod(state, application)
case(transformation, of)
det(transformation, the)
nmod(application, transformation)
punct(1, ()
appos(transformation, 1)
punct(1, ))
punct(state, ;)
punct(function, ;)
advmod(Af, thus)
discourse(function, Af)
punct(Af, .)
det(function, the)
compound(function, objective)
nsubj:pass(obtain, function)
punct(function, ,)
nsubj(be, which)
acl:relcl(function, be)
mark(maximize, to)
aux:pass(maximize, be)
xcomp(be, maximize)
punct(function, ,)
cop(function, be)
det(function, some)
parataxis(be, function)
punct(function, ,)
advmod(continuous, usually)
amod(continuous, piecewise)
amod(function, continuous)
punct(function, ,)
case(state, of)
det(state, the)
compound(state, product)
nmod(function, state)
punct(constitute, .)
root(ROOT, let)
obj(let, this)
aux:pass(denote, be)
xcomp(let, denote)
case(Af, by)
obl(denote, Af)
punct(let, .)
det(policy, a)
amod(policy, optimal)
nsubj(policy, policy)
cop(policy, be)
det(policy, a)
amod(policy, admissible)
parataxis(let, policy)
nsubj(unique, Af)
nsubj(maximize, which)
acl:relcl(Af, maximize)
det(objective, the)
obj(maximize, objective)
compound(p, function)
obj(maximize, p)
punct(maximize, .)
det(policy, the)
nsubj(unique, policy)
aux(unique, may)
advmod(unique, not)
cop(unique, be)
root(ROOT, unique)
cc(be, but)
det(value, the)
amod(value, maximum)
nsubj(be, value)
case(p, of)
nmod(value, p)
advmod(be, certainly)
conj(unique, be)
punct(calculate, ,)
cc(calculate, and)
mark(specify, once)
det(policy, the)
nsubj:pass(specify, policy)
aux:pass(specify, be)
advcl(calculate, specify)
det(maximum, this)
nsubj:pass(specify, maximum)
aux(calculate, can)
aux:pass(calculate, be)
conj(unique, calculate)
case(2, by)
punct(2, ()
nummod(calculate, 2)
punct(2, ))
cc(function, and)
punct(3, ()
nummod(function, 3)
punct(3, ))
case(function, as)
det(function, a)
obl(let, function)
case(Af, of)
det(Af, the)
compound(Af, feed)
compound(Af, state)
nmod(function, Af)
punct(let, .)
parataxis(unique, let)
obj(let, Af)
advmod(Af, where)
det(maximization, the)
nsubj(where, maximization)
cop(where, be)
case(Af, over)
det(Af, all)
amod(Af, admissible)
compound(Af, policy)
acl:relcl(Af, Af)
punct(let, .)
mark(necessary, when)
expl(necessary, it)
cop(necessary, be)
advcl(let, necessary)
mark(specific, to)
cop(specific, be)
csubj(necessary, specific)
nsubj(say, we)
ccomp(specific, say)
mark(policy, that)
det(policy, the)
amod(policy, optimal)
nsubj(policy, policy)
cop(policy, be)
det(policy, a)
amod(policy, optimal)
compound(policy, R-stage)
ccomp(say, policy)
case(respect, with)
nmod(policy, respect)
case(Af, to)
det(Af, the)
compound(Af, feed)
compound(Af, state)
nmod(respect, Af)
punct(policy, .)
case(choice, for)
det(choice, any)
nmod(respect, choice)
case(policy, of)
amod(policy, admissible)
nmod(choice, policy)
nsubj:pass(give, Af)
case(stage, in)
det(stage, the)
amod(stage, first)
obl(give, stage)
punct(give, ,)
det(state, the)
nsubj:pass(give, state)
case(stream, of)
det(stream, the)
nmod(state, stream)
acl(state, leave)
det(stage, this)
obj(leave, stage)
aux:pass(give, be)
root(ROOT, give)
case(Af, by)
obl(give, Af)
punct(give, .)
nsubj(state, this)
cop(state, be)
det(state, the)
compound(state, feed)
parataxis(give, state)
case(subsequent, of)
det(subsequent, the)
nmod(state, subsequent)
compound(stage, Af)
nsubj(use, stage)
nsubj(use, which)
punct(use, ,)
case(principle, accord)
fixed(accord, to)
det(principle, the)
obl(use, principle)
case(optimality, of)
nmod(principle, optimality)
punct(use, ,)
aux(use, must)
root(ROOT, use)
det(policy, a)
amod(policy, optimal)
compound(stage, Af)
punct(stage, -)
compound(policy, stage)
obj(use, policy)
case(respect, with)
nmod(policy, respect)
case(state, to)
det(state, this)
nmod(respect, state)
punct(use, .)
nsubj(result, this)
aux(result, will)
root(ROOT, result)
case(value, in)
det(value, a)
obl(result, value)
root(ROOT, Af)
case(function, of)
det(function, the)
compound(function, objective)
nmod(Af, function)
punct(give, ,)
cc(give, and)
mark(choose, when)
nsubj:pass(choose, Af)
aux:pass(choose, be)
advcl(give, choose)
advmod(choose, correctly)
nsubj(give, this)
aux(give, will)
conj(function, give)
obj(give, Af)
punct(Af, ,)
det(maximum, the)
appos(Af, maximum)
case(function, of)
det(function, the)
compound(function, objective)
nmod(maximum, function)
punct(maximum, .)
advmod(Af, thus)
obj(give, Af)
advmod(Af, where)
det(maximization, the)
nsubj(Af, maximization)
cop(Af, be)
case(Af, over)
det(Af, all)
amod(Af, admissible)
compound(Af, policy)
acl:relcl(Af, Af)
punct(related, ,)
cc(related, and)
nsubj(related, Af)
cop(related, be)
conj(give, related)
case(Af, to)
obl(related, Af)
case(5, by)
punct(5, ()
obl(related, 5)
punct(5, ))
punct(5, .)
det(sequence, the)
nsubj:pass(solve, sequence)
case(equation, of)
nmod(sequence, equation)
punct(6, ()
nummod(solve, 6)
punct(6, ))
aux(solve, can)
aux:pass(solve, be)
root(ROOT, solve)
case(Af, for)
obl(solve, Af)
mark(know, when)
nsubj:pass(know, Af)
aux:pass(know, be)
advcl(solve, know)
punct(Af, ,)
cc(Af, and)
advmod(Af, clearly)
conj(know, Af)
punct(maximization, ,)
det(maximization, the)
appos(Af, maximization)
cop(Af, be)
case(Af, over)
det(Af, all)
amod(Af, admissible)
acl(maximization, Af)
punct(set, .)
det(set, the)
appos(maximization, set)
case(equation, of)
nmod(set, equation)
punct(5, ()
appos(equation, 5)
punct(5, ))
punct(6, ,)
punct(6, ()
nummod(5, 6)
punct(6, ))
punct(equation, ,)
cc(equation, and)
det(equation, the)
compound(equation, starting)
nsubj(be, equation)
punct(7, ()
appos(equation, 7)
punct(7, ))
cop(type, be)
case(type, of)
det(type, a)
amod(type, recursive)
conj(set, type)
advmod(suite, well)
acl(type, suite)
case(programming, to)
obl(suite, programming)
case(computer, on)
det(computer, the)
amod(computer, digital)
obl(suite, computer)
punct(solve, .)
mark(find, in)
advcl(need, find)
det(policy, the)
amod(policy, optimal)
compound(policy, R-stage)
obj(find, policy)
case(that, from)
obl(find, that)
case(stage, of)
compound(stage, Af)
nmod(that, stage)
punct(need, ,)
advmod(Af, only)
det(Af, the)
compound(Af, function)
nsubj:pass(need, Af)
aux:pass(need, be)
root(ROOT, need)
punct(need, .)
mark(find, when)
nsubj:pass(find, Af)
aux(find, have)
aux:pass(find, be)
advcl(need, find)
nsubj:pass(transfer, it)
aux(transfer, may)
aux:pass(transfer, be)
ccomp(find, transfer)
case(location, into)
det(location, the)
compound(location, storage)
obl(transfer, location)
case(Af, of)
nmod(location, Af)
cc(calculation, and)
det(calculation, the)
amod(calculation, whole)
conj(location, calculation)
acl(calculation, repeat)
punct(need, .)
nsubj(see, we)
advmod(see, also)
root(ROOT, see)
advmod(present, how)
det(result, the)
nsubj:pass(present, result)
aux(present, may)
aux:pass(present, be)
ccomp(see, present)
punct(see, ,)
mark(become, although)
mark(large, if)
nsubj(become, n)
punct(n, ,)
det(number, the)
appos(n, number)
case(variable, of)
compound(variable, state)
nmod(number, variable)
punct(large, ,)
cop(large, be)
advcl(become, large)
det(tabulation, any)
nsubj(become, tabulation)
aux(become, will)
ccomp(see, become)
xcomp(become, cumbersome)
punct(see, . )
det(table, a)
nsubj:pass(set, table)
cc(set, or)
conj(table, set)
case(table, of)
nmod(table, table)
aux(set, may)
aux:pass(set, be)
root(ROOT, set)
compound:prt(set, out)
case(Table, as)
case(Table, in)
obl(set, Table)
nummod(extract, 2.1)
punct(2.1, .)
mark(extract, to)
root(ROOT, extract)
det(policy, the)
amod(policy, optimal)
compound(policy, R-stage)
obj(extract, policy)
case(respect, with)
nmod(policy, respect)
case(state, to)
det(state, the)
compound(state, feed)
nmod(respect, state)
vocative(enter, Af)
punct(enter, ,)
nsubj(enter, we)
root(ROOT, enter)
compound(R, section)
obj(enter, R)
case(table, of)
det(table, this)
nmod(R, table)
case(state, at)
det(state, the)
obl(enter, state)
root(ROOT, Af)
cc(find, and)
conj(Af, find)
advmod(find, immediately)
case(column, from)
det(column, the)
amod(column, last)
obl(find, column)
det(value, the)
amod(value, maximum)
obj(find, value)
case(function, of)
det(function, the)
amod(function, objective)
nmod(value, function)
punct(Af, .)
case(column, in)
det(column, the)
amod(column, third)
obl(give, column)
aux:pass(give, be)
root(ROOT, give)
det(policy, the)
amod(policy, optimal)
obj(give, policy)
case(R, for)
compound(R, stage)
nmod(policy, R)
punct(state, ,)
cc(state, and)
case(fourth, in)
det(fourth, the)
nmod(state, fourth)
punct(state, ,)
det(state, the)
amod(state, result)
conj(policy, state)
case(stream, of)
det(stream, the)
nmod(state, stream)
mark(use, when)
det(policy, this)
nsubj:pass(use, policy)
aux:pass(use, be)
advcl(state, use)
punct(give, .)
case(principle, since)
case(principle, by)
det(principle, the)
obl(use, principle)
case(optimality, of)
nmod(principle, optimality)
det(stage, the)
amod(stage, remain)
nsubj(use, stage)
root(ROOT, use)
det(policy, a)
amod(policy, optimal)
compound(stage, Af)
punct(stage, -)
compound(policy, stage)
obj(use, policy)
case(respect, with)
nmod(policy, respect)
case(Af, to)
nmod(respect, Af)
punct(use, ,)
nsubj(enter, we)
aux(enter, may)
parataxis(use, enter)
obj(enter, section)
root(ROOT, Af)
case(table, of)
det(table, the)
nmod(Af, table)
case(Af, at)
det(Af, this)
compound(Af, state)
nmod(Af, Af)
cc(read, and)
conj(Af, read)
compound:prt(read, off)
det(policy, the)
amod(policy, optimal)
obj(read, policy)
case(Af, for)
compound(Af, stage)
nmod(policy, Af)
cc(Af, and)
det(Af, the)
amod(Af, result)
compound(Af, state)
conj(Af, Af)
punct(read, .)
advcl(read, Proceeding)
case(way, in)
det(way, this)
obl(Proceeding, way)
case(table, up)
det(table, the)
nmod(way, table)
nsubj(extract, we)
acl:relcl(table, extract)
det(policy, the)
amod(policy, complete)
amod(policy, optimal)
obj(extract, policy)
cc(check, and)
punct(check, ,)
mark(desire, if)
nsubj:pass(desire, it)
aux:pass(desire, be)
advcl(check, desire)
punct(check, ,)
nsubj(check, we)
aux(check, can)
parataxis(Af, check)
compound:prt(check, on)
obj(check, Af)
mark(evaluate, by)
advcl(check, evaluate)
root(ROOT, Af)
case(stage, at)
det(stage, the)
amod(stage, last)
nmod(Af, stage)
punct(Af, .)
expl(be, it)
aux(be, may)
root(ROOT, be)
mark(depend, that)
det(function, the)
compound(function, objective)
nsubj(depend, function)
ccomp(be, depend)
advmod(only, not)
cc:preconj(Af, only)
case(Af, on)
obl(depend, Af)
cc(Af, but)
advmod(Af, also)
case(Af, on)
conj(Af, Af)
punct(depend, ,)
mark(consider, as)
mark(consider, when)
det(cost, the)
nsubj:pass(consider, cost)
case(policy, of)
det(policy, the)
compound(policy, operating)
nmod(cost, policy)
aux:pass(consider, be)
advcl(depend, consider)
punct(be, . )
det(moment, a)
nmod:poss(reflection, moment)
case(moment, 's)
nsubj(show, reflection)
root(ROOT, show)
mark(work, that)
det(algorithm, the)
amod(algorithm, above)
nsubj(work, algorithm)
cc(presentation, and)
conj(algorithm, presentation)
ccomp(show, work)
advmod(well, equally)
advmod(work, well)
case(case, in)
det(case, this)
obl(work, case)
punct(show, . )
det(form, a)
nsubj(here, form)
case(function, of)
amod(function, objective)
nmod(form, function)
mark(have, that)
nsubj(have, we)
aux(have, shall)
advmod(have, often)
acl(form, have)
obj(have, occasion)
mark(consider, to)
acl(occasion, consider)
cop(Af, be)
discourse(have, Af)
punct(here, .)
root(ROOT, here)
nsubj(represent, p)
ccomp(here, represent)
det(value, the)
obj(represent, value)
case(stream, of)
det(stream, the)
nmod(value, stream)
case(p, in)
compound(p, state)
nmod(value, p)
cc(q, and)
conj(p, q)
det(cost, the)
obj(q, cost)
mark(operate, of)
acl(cost, operate)
det(stage, the)
obj(operate, stage)
case(condition, with)
obl(operate, condition)
nummod(increase, q)
punct(q, .)
advmod(increase, hence)
nsubj(increase, p)
cop(increase, be)
det(increase, the)
parataxis(represent, increase)
case(value, in)
nmod(increase, value)
case(stream, of)
det(stream, the)
nmod(value, stream)
case(cost, minus)
det(cost, the)
nmod(stream, cost)
case(operation, of)
nmod(cost, operation)
punct(cost, ,)
nsubj(profit, that)
cop(profit, be)
punct(profit, ,)
det(profit, the)
amod(profit, net)
acl:relcl(cost, profit)
punct(increase, .)
mark(denote, if)
nsubj(denote, Af)
advcl(give, denote)
det(profit, the)
amod(profit, net)
obj(denote, profit)
case(R, from)
compound(R, stage)
nmod(profit, R)
cc(Af, and)
conj(R, Af)
punct(give, ,)
advmod(give, then)
det(principle, the)
nsubj(give, principle)
case(optimality, of)
nmod(principle, optimality)
root(ROOT, give)
obj(give, Af)
punct(give, .)
det(sequence, this)
nsubj:pass(start, sequence)
case(equation, of)
nmod(sequence, equation)
aux(start, may)
aux:pass(start, be)
parataxis(give, start)
case(remark, with)
det(remark, the)
obl(start, remark)
nsubj(process, that)
case(process, with)
det(process, no)
nmod(remark, process)
discourse(be, Af)
expl(be, there)
root(ROOT, be)
det(profit, no)
nsubj(be, profit)
punct(profit, ,)
advmod(process, i.e.)
punct(process, ,)
compound(2.3, Af)
punct(Af, .)
nummod(process, 2.3)
det(process, the)
amod(process, discrete)
amod(process, stochastic)
nsubj(be, process)
det(process, the)
nsubj(process, process)
case(which, in)
obl(know, which)
det(outcome, the)
nsubj:pass(know, outcome)
case(stage, of)
det(stage, any)
nummod(stage, one)
nmod(outcome, stage)
aux:pass(know, be)
acl:relcl(process, know)
advmod(statistically, only)
advmod(know, statistically)
cop(interest, be)
advmod(interest, also)
case(interest, of)
conj(know, interest)
punct(interest, ,)
mark(important, although)
case(design, for)
amod(reactor, chemical)
compound(design, reactor)
obl(important, design)
nsubj(important, it)
cop(important, be)
advmod(important, not)
advmod(important, as)
advcl(interest, important)
case(process, as)
det(process, the)
amod(process, deterministic)
obl(important, process)
punct(be, .)
case(case, in)
det(case, this)
obl(operate, case)
det(stage, the)
nsubj(operate, stage)
aux(operate, R)
root(ROOT, operate)
case(condition, with)
obl(operate, condition)
nsubj(transform, Af)
root(ROOT, transform)
det(state, the)
obj(transform, state)
case(stream, of)
det(stream, the)
nmod(state, stream)
case(Af, from)
obl(transform, Af)
case(Af, to)
nmod(Af, Af)
punct(know, ,)
cc(know, but)
advmod(distribution, only)
det(distribution, the)
compound(distribution, probability)
nsubj:pass(know, distribution)
case(Af, of)
nmod(distribution, Af)
aux:pass(know, be)
conj(transform, know)
punct(transform, .)
nsubj:pass(specify, this)
aux:pass(specify, be)
parataxis(transform, specify)
case(function, by)
det(function, a)
compound(function, distribution)
obl(specify, function)
nsubj(Af, Af)
det:predet(Af, such)
mark(Af, that)
det(probability, the)
nsubj(Af, probability)
obj(lie, that)
nsubj(lie, Af)
acl:relcl(probability, lie)
case(d, in)
det(d, some)
compound(d, region)
obl(lie, d)
case(space, of)
det(space, the)
compound(space, stage)
nmod(d, space)
cop(Af, be)
root(ROOT, Af)
punct(Af, .)
nsubj(speak, we)
aux(speak, can)
advmod(speak, not)
advmod(speak, now)
parataxis(Af, speak)
mark(maximize, of)
advcl(speak, maximize)
det(value, the)
obj(maximize, value)
case(function, of)
det(function, the)
amod(function, objective)
nmod(value, function)
punct(maximize, ,)
mark(know, since)
det(function, this)
nsubj:pass(know, function)
aux:pass(know, be)
advmod(know, now)
advcl(maximize, know)
advmod(sense, only)
case(sense, in)
det(sense, a)
amod(sense, probabilistic)
obl(know, sense)
punct(Af, .)
nsubj(maximize, we)
aux(maximize, can)
punct(maximize, ,)
advmod(maximize, however)
punct(maximize, ,)
root(ROOT, maximize)
nsubj:pass(expect, it)
aux:pass(expect, be)
ccomp(maximize, expect)
xcomp(expect, value)
punct(maximize, .)
case(stage, for)
det(stage, a)
amod(stage, single)
obl(define, stage)
nsubj(define, we)
aux(define, may)
parataxis(maximize, define)
nsubj(show, Af)
advmod(Af, where)
det(maximization, the)
nsubj(choice, maximization)
cop(choice, be)
case(choice, by)
obl(where, choice)
case(Af, of)
nmod(choice, Af)
punct(choice, .)
nsubj(have, we)
advmod(have, thus)
parataxis(choice, have)
det(policy, a)
amod(policy, optimal)
obj(have, policy)
nsubj(maximize, which)
acl:relcl(policy, maximize)
det(value, the)
amod(value, expect)
obj(maximize, value)
case(function, of)
det(function, the)
compound(function, objective)
nmod(value, function)
case(Af, for)
det(Af, a)
amod(Af, give)
nmod(function, Af)
punct(maximize, .)
mark(consider, if)
nsubj(consider, we)
advcl(show, consider)
det(process, a)
obj(consider, process)
case(which, in)
obl(know, which)
det(outcome, the)
nsubj:pass(know, outcome)
case(stage, of)
nummod(stage, one)
nmod(outcome, stage)
aux:pass(know, be)
acl:relcl(process, know)
case(passage, before)
obl(know, passage)
case(next, to)
det(next, the)
obl(know, next)
punct(show, ,)
advmod(show, then)
det(principle, the)
nsubj(show, principle)
case(optimality, of)
nmod(principle, optimality)
root(ROOT, show)
mark(optimal, that)
det(policy, the)
nsubj(optimal, policy)
case(stage, in)
amod(stage, subsequent)
nmod(policy, stage)
aux(optimal, should)
cop(optimal, be)
ccomp(show, optimal)
case(respect, with)
obl(optimal, respect)
case(outcome, to)
det(outcome, the)
nmod(respect, outcome)
case(first, of)
det(first, the)
nmod(outcome, first)
punct(show, .)
advmod(Af, then)
root(ROOT, Af)
punct(Af, ,)
det(maximization, the)
appos(Af, maximization)
cop(Af, be)
case(Af, over)
det(Af, all)
amod(Af, admissible)
parataxis(Af, Af)
cc(integration, and)
det(integration, the)
conj(Af, integration)
case(whole, over)
det(whole, the)
nmod(integration, whole)
case(stage, of)
obl(whole, stage)
obl(whole, space)
punct(Af, .)
det(type, the)
nsubj:pass(use, type)
case(presentation, of)
nmod(type, presentation)
case(result, of)
nmod(presentation, result)
acl(result, use)
case(process, in)
det(process, the)
amod(process, deterministic)
obl(use, process)
aux(use, may)
aux:pass(use, be)
root(ROOT, use)
advmod(use, here)
punct(use, ,)
mark(redundant, except)
mark(redundant, that)
advmod(redundant, now)
det(column, the)
amod(column, fourth)
nsubj(redundant, column)
cop(redundant, be)
advcl(use, redundant)
punct(use, .)
det(column, the)
amod(column, third)
nsubj(give, column)
root(ROOT, give)
det(policy, the)
amod(policy, optimal)
obj(give, policy)
punct(wait, ,)
cc(wait, but)
nsubj(wait, we)
aux(wait, must)
conj(give, wait)
mark(see, to)
xcomp(wait, see)
det(outcome, the)
obj(see, outcome)
case(R, of)
compound(R, stage)
nmod(outcome, R)
cc(enter, and)
conj(see, enter)
det(section, the)
amod(section, precede)
obj(enter, section)
case(table, of)
det(table, the)
nmod(section, table)
case(state, at)
det(state, this)
obl(enter, state)
punct(give, .)
det(discussion, the)
nsubj(matter, discussion)
case(policy, of)
det(policy, the)
amod(policy, optimal)
nmod(discussion, policy)
mark(know, when)
det(outcome, the)
nsubj:pass(know, outcome)
case(stage, of)
nummod(stage, one)
nmod(outcome, stage)
aux:pass(know, be)
advmod(know, not)
acl:relcl(discussion, know)
mark(pass, before)
advcl(know, pass)
case(next, to)
det(next, the)
obl(pass, next)
cop(matter, be)
det(matter, a)
advmod(more, very)
advmod(more, much)
advmod(difficult, more)
amod(matter, difficult)
root(ROOT, matter)
punct(matter, .)
nummod(process, 2.4)
det(process, the)
amod(process, continuous)
amod(process, deterministic)
appos(matter, process)
case(case, in)
amod(case, many)
nmod(process, case)
nsubj(possible, it)
cop(possible, be)
advmod(possible, not)
acl:relcl(process, possible)
mark(divide, to)
advcl(possible, divide)
det(process, the)
obj(divide, process)
case(number, into)
det(number, a)
amod(number, finite)
obl(divide, number)
case(stage, of)
amod(stage, discrete)
nmod(number, stage)
punct(divide, ,)
mark(transform, since)
det(state, the)
nsubj:pass(transform, state)
case(stream, of)
det(stream, the)
nmod(state, stream)
aux:pass(transform, be)
advcl(divide, transform)
case(manner, in)
det(manner, a)
amod(manner, continuous)
obl(transform, manner)
case(process, through)
det(process, the)
nmod(manner, process)
punct(possible, .)
nsubj(replace, we)
root(ROOT, replace)
obj(replace, be)
punct(be, ,)
det(number, the)
appos(be, number)
case(stage, of)
det(stage, the)
nmod(number, stage)
case(end, from)
det(end, the)
obl(replace, end)
case(process, of)
det(process, the)
nmod(end, process)
punct(replace, ,)
case(t, by)
obl(replace, t)
punct(t, ,)
det(variable, a)
amod(variable, continuous)
appos(t, variable)
nsubj(measure, which)
acl:relcl(variable, measure)
det(distance, the)
punct(distance, ``)
obj(measure, distance)
punct(distance, '')
case(point, of)
det(point, the)
nmod(distance, point)
acl(point, consider)
case(end, from)
det(end, the)
obl(consider, end)
case(process, of)
det(process, the)
nmod(end, process)
punct(replace, .)
det(distance, the)
nsubj:pass(use, word)
nsubj:pass(use, distance)
aux:pass(use, be)
root(ROOT, use)
advmod(use, here)
case(sense, in)
det(sense, a)
advmod(general, rather)
amod(sense, general)
obl(use, sense)
punct(use, ;)
punct(use, ;)
nsubj(time, it)
aux(time, may)
case(fact, in)
obl(time, fact)
cop(time, be)
det(time, the)
parataxis(use, time)
nsubj(elapse, that)
aux(elapse, will)
acl:relcl(time, elapse)
case(end, before)
det(end, the)
obl(elapse, end)
case(process, of)
det(process, the)
nmod(end, process)
punct(use, .)
mark(length, if)
nsubj(length, T)
cop(length, be)
det(length, the)
amod(length, total)
punct(length, ``)
advcl(feed, length)
punct(length, '')
case(process, of)
det(process, the)
nmod(length, process)
punct(feed, ,)
nsubj:pass(feed, it)
aux:pass(feed, be)
root(ROOT, feed)
nsubj:pass(denote, state)
aux(denote, may)
aux:pass(denote, be)
ccomp(feed, denote)
case(p, by)
det(p, a)
compound(p, vector)
obl(denote, p)
punct(T, ()
appos(p, T)
punct(T, ))
cc(state, and)
det(state, the)
compound(state, product)
conj(p, state)
case(p, by)
nmod(state, p)
punct(q, ()
appos(p, q)
punct(q, ))
punct(feed, . )
nsubj(denote, p)
root(ROOT, denote)
det(state, the)
obj(denote, state)
case(T, at)
det(T, any)
compound(T, point)
obl(denote, T)
cc(q, and)
conj(denote, q)
det(vector, the)
obj(q, vector)
case(variable, of)
compound(variable, operating)
nmod(vector, variable)
advmod(q, there)
punct(denote, . )
det(system, a)
amod(system, gyro-stabilize)
compound(system, platform)
nsubj:pass(suite, system)
punct(system, ,)
acl(system, use)
amod(gyro, restrain)
obj(use, gyro)
punct(suite, ,)
aux:pass(suite, be)
advmod(suite, well)
root(ROOT, suite)
case(level, for)
amod(level, automatic)
obl(suite, level)
case(characteristic, because)
fixed(because, of)
det(characteristic, the)
obl(suite, characteristic)
case(combination, of)
det(combination, the)
amod(servo, gyro-platform)
punct(servo, -)
compound(combination, servo)
nmod(characteristic, combination)
punct(suite, .)
det(platform, the)
amod(platform, restrain)
amod(platform, gyro-stabilize)
nsubj(operate, platform)
case(characteristic, with)
amod(characteristic, reasonable)
compound(characteristic, response)
nmod(platform, characteristic)
root(ROOT, operate)
case(equation, with)
det(equation, a)
amod(equation, approximate)
obl(operate, equation)
case(motion, of)
nmod(equation, motion)
punct(operate, ,)
advcl(operate, neglect)
amod(effect, transient)
obj(neglect, effect)
punct(operate, ,)
mark(follow, as)
advcl(neglect, follow)
punct(operate, :)
root(ROOT, Af)
advmod(torque, where)
nsubj(torque, u)
cop(torque, be)
det(torque, a)
acl:relcl(Af, torque)
acl(torque, apply)
case(axis, about)
det(axis, the)
compound(axis, output)
obl(apply, axis)
case(gyro, of)
det(gyro, the)
compound(gyro, control)
nmod(axis, gyro)
punct(Af, .)
det(angle, the)
compound(angle, platform)
nsubj(angle, angle)
punct(angle, **)
nsubj(angle, yf)
cop(angle, be)
det(angle, the)
root(ROOT, angle)
case(which, about)
obl(control, which)
det(gyro, the)
nsubj(control, gyro)
aux(control, be)
acl:relcl(angle, control)
punct(angle, .)
nsubj:pass(term, this)
aux:pass(term, be)
advmod(term, normally)
root(ROOT, term)
det(axis, the)
compound(axis, gyro)
compound(axis, input)
obj(term, axis)
punct(axis, ,)
nummod(degree, 90)
punct(degree, -)
obl:npmod(away, degree)
advmod(axis, away)
case(output, from)
det(output, the)
compound(output, gyro)
obl(away, output)
cc(axis, or)
punct(axis, **yj)
conj(output, axis)
punct(term, .)
det(momentum, the)
compound(momentum, gyro)
amod(momentum, angular)
nsubj:pass(define, momentum)
aux:pass(define, be)
root(ROOT, define)
case(h, by)
obl(define, h)
punct(define, .)
advmod(rotate, thus)
mark(maintain, if)
det(gyro, the)
nsubj(maintain, gyro)
cc(combination, and)
compound(controller, platform)
punct(controller, -)
compound(combination, controller)
conj(gyro, combination)
advcl(define, maintain)
det(platform, the)
obj(maintain, platform)
case(deviation, with)
amod(deviation, zero)
amod(deviation, angular)
nmod(platform, deviation)
case(axis, about)
det(axis, the)
punct(axis, **)
compound(axis, yf)
nmod(deviation, axis)
punct(rotate, ,)
det(system, the)
nsubj:pass(rotate, system)
aux(rotate, can)
aux:pass(rotate, be)
conj(define, rotate)
case(velocity, with)
det(velocity, a)
amod(velocity, angular)
obl(rotate, velocity)
root(ROOT, Af)
mark(supply, if)
det(torque, a)
nsubj:pass(supply, torque)
aux:pass(supply, be)
advcl(Af, supply)
case(axis, to)
det(axis, the)
compound(output, gyro)
compound(axis, output)
obl(supply, axis)
appos(axis, Aj)
punct(Af, .)
nsubj:pass(assume, it)
aux:pass(assume, be)
root(ROOT, assume)
mark(design, that)
det(gyro, the)
nsubj:pass(design, gyro)
aux:pass(design, be)
ccomp(assume, design)
case(torquer, with)
amod(torquer, electrical)
obl(design, torquer)
mark(apply, so)
fixed(so, that)
det(torque, a)
nsubj:pass(apply, torque)
aux(apply, can)
aux:pass(apply, be)
advcl(design, apply)
case(axe, about)
nmod:poss(axe, they)
compound(axe, output)
obl(apply, axe)
punct(assume, .)
case(system, in)
det(system, the)
obl(amplify, system)
acl(system, show)
case(Fig., in)
obl(show, Fig.)
nummod(Fig., 7)
case(1, -)
nmod(7, 1)
punct(amplify, ,)
det(output, the)
compound(output, accelerometer)
nsubj:pass(amplify, output)
aux:pass(amplify, be)
root(ROOT, amplify)
cc(apply, and)
det(voltage, the)
amod(voltage, result)
nsubj:pass(apply, voltage)
aux:pass(apply, be)
conj(amplify, apply)
case(torquer, to)
det(torquer, the)
compound(torquer, gyro)
compound(axis, output)
punct(axis, -)
compound(torquer, axis)
obl(apply, torquer)
punct(amplify, .)
det(torque, this)
nsubj(cause, torque)
root(ROOT, cause)
det(system, the)
amod(system, entire)
obj(cause, system)
mark(rotate, to)
acl(system, rotate)
case(axis, about)
det(axis, the)
punct(axis, **)
compound(axis, yf)
obl(rotate, axis)
punct(rotate, ,)
case(response, since)
det(response, the)
obl(rotate, response)
case(Af, to)
nmod(response, Af)
punct(cause, .)
mark(correct, if)
det(polarity, the)
nsubj(correct, polarity)
cop(correct, be)
advcl(rotate, correct)
punct(rotate, ,)
det(platform, the)
nsubj(rotate, platform)
root(ROOT, rotate)
case(direction, in)
det:predet(direction, such)
det(direction, a)
obl(rotate, direction)
mark(reduce, as)
mark(reduce, to)
advcl(rotate, reduce)
det(output, the)
compound(output, accelerometer)
obj(reduce, output)
case(zero, to)
obl(reduce, zero)
punct(rotate, .)
mark(decrease, as)
det(output, the)
compound(output, accelerometer)
nsubj(decrease, output)
aux(decrease, be)
advcl(decrease, decrease)
punct(decrease, ,)
det(torque, the)
nsubj(decrease, torque)
acl(torque, apply)
case(axis, to)
det(axis, the)
compound(axis, gyro)
compound(axis, output)
obl(apply, axis)
root(ROOT, decrease)
cc(decrease, and)
punct(decrease, ,)
advmod(decrease, therefore)
punct(decrease, ,)
det(rate, the)
nsubj(decrease, rate)
conj(decrease, decrease)
punct(decrease, .)
advmod(remain, finally)
punct(decrease, ,)
mark(zero, when)
det(output, the)
compound(output, accelerometer)
nsubj(zero, output)
cop(zero, be)
advcl(remain, zero)
punct(remain, ,)
det(system, the)
amod(system, entire)
nsubj(remain, system)
conj(decrease, remain)
xcomp(remain, stationary)
punct(level, ,)
cc(level, and)
det(platform, the)
nsubj(level, platform)
cop(level, be)
punct(level, ,)
case(definition, by)
obl(level, definition)
punct(level, ,)
conj(stationary, level)
punct(stationary, . )
det(diagram, a)
amod(block, mathematical)
compound(diagram, block)
nsubj:pass(show, diagram)
case(system, for)
det(system, the)
compound(system, level)
nmod(diagram, system)
aux:pass(show, be)
root(ROOT, show)
case(Fig., in)
obl(show, Fig.)
nummod(level, 7)
punct(2, -)
nummod(level, 2)
punct(2, .)
det(platform, the)
nsubj(level, platform)
cop(level, be)
advmod(level, initially)
case(level, off)
root(ROOT, level)
case(angle, by)
det(angle, the)
nmod(level, angle)
nsubj(acceleration, Aj)
punct(acceleration, .)
det(angle, the)
nsubj(acceleration, angle)
acl(angle, generate)
case(servo, by)
det(servo, the)
compound(servo, platform)
obl(generate, servo)
punct(yf, **)
appos(angle, yf)
acl(yf, multiply)
case(g, by)
obl(multiply, g)
cop(acceleration, be)
det(acceleration, the)
amod(acceleration, effective)
root(ROOT, acceleration)
acl(acceleration, act)
case(accelerometer, on)
det(accelerometer, the)
obl(act, accelerometer)
punct(acceleration, .)
nsubj(factor, Af)
cop(factor, be)
det(factor, the)
compound(factor, scale)
root(ROOT, factor)
case(accelerometer, of)
det(accelerometer, the)
nmod(factor, accelerometer)
punct(Af, ()
appos(accelerometer, Af)
punct(Af, ))
punct(factor, .)
det(Af, the)
compound(Af, voltage)
nsubj:pass(amplify, Af)
aux:pass(amplify, be)
parataxis(factor, amplify)
case(Af, by)
obl(amplify, Af)
cc(apply, and)
conj(amplify, apply)
case(torquer, to)
det(torquer, the)
compound(torquer, gyro)
obl(apply, torquer)
case(Af, with)
compound(factor, scale)
compound(Af, factor)
nmod(torquer, Af)
punct(Af, .)
advmod(represent, finally)
punct(represent, ,)
det(characteristic, the)
amod(characteristic, gyro-stabilize)
compound(characteristic, platform)
nsubj:pass(represent, characteristic)
aux:pass(represent, be)
parataxis(factor, represent)
case(Af, by)
obl(represent, Af)
punct(represent, .)
det(system, the)
nsubj:pass(represent, system)
mark(indicate, as)
advcl(fundamental, indicate)
case(Fig., in)
obl(indicate, Fig.)
nummod(Fig., 7)
case(2, -)
nmod(Fig., 2)
cop(fundamental, be)
acl(system, fundamental)
cc(simple, and)
conj(fundamental, simple)
mark(neglect, because)
det(effect, the)
amod(effect, transient)
nsubj:pass(neglect, effect)
case(servo, of)
cc:preconj(servo, both)
det(servo, the)
compound(servo, platform)
nmod(effect, servo)
cc(accelerometer, and)
det(accelerometer, the)
conj(servo, accelerometer)
aux(neglect, have)
aux:pass(neglect, be)
advcl(fundamental, neglect)
punct(factor, .)
mark(include, with)
det(factor, these)
nsubj:pass(place, factor)
acl(factor, include)
punct(place, ,)
det(limit, a)
amod(limit, upper)
nsubj:pass(place, limit)
aux:pass(place, be)
root(ROOT, place)
case(gain, on)
det(gain, the)
amod(gain, allowable)
compound(gain, loop)
obl(place, gain)
case(consideration, by)
compound(consideration, stability)
nmod(gain, consideration)
punct(place, .)
case(type, in)
det(type, this)
obl(desirable, type)
case(system, of)
nmod(type, system)
punct(desirable, ,)
det(gain, a)
amod(gain, high)
compound(gain, loop)
nsubj(desirable, gain)
cop(desirable, be)
root(ROOT, desirable)
mark(provide, because)
nsubj(provide, it)
advcl(desirable, provide)
det(time, a)
amod(time, fast)
compound(time, response)
obj(provide, time)
punct(desirable, .)
mark(consider, when)
det(characteristic, the)
compound(characteristic, frequency)
compound(characteristic, response)
nsubj:pass(consider, characteristic)
case(component, of)
amod(component, practical)
nmod(characteristic, component)
aux:pass(consider, be)
advcl(present, consider)
punct(present, ,)
nmod:poss(effect, they)
nsubj(present, effect)
case(stability, on)
nmod(effect, stability)
aux(present, do)
advmod(present, not)
conj(desirable, present)
det(limit, the)
advmod(serious, most)
amod(limit, serious)
obj(present, limit)
case(gain, on)
det(gain, the)
compound(loop, system)
compound(gain, loop)
nmod(limit, gain)
punct(desirable, .)
det(time, the)
nsubj(proportional, time)
acl(time, require)
case(system, for)
det(system, the)
obl(require, system)
mark(reach, to)
acl(system, reach)
det(position, a)
compound(position, level)
obj(reach, position)
cop(proportional, be)
advmod(proportional, approximately)
advmod(proportional, inversely)
root(ROOT, proportional)
case(gain, to)
det(gain, the)
compound(loop, servo)
compound(gain, loop)
obl(proportional, gain)
punct(proportional, .)
case(addition, in)
obl(proportional, addition)
punct(proportional, ,)
det(frequency, the)
compound(frequency, cutoff)
nsubj(proportional, frequency)
case(acceleration, for)
compound(acceleration, input)
nmod(frequency, acceleration)
cop(proportional, be)
advmod(proportional, approximately)
root(ROOT, proportional)
case(gain, to)
det(gain, the)
compound(gain, servo)
compound(gain, loop)
obl(proportional, gain)
punct(proportional, ;)
punct(proportional, ;)
advmod(cause, i.e.)
punct(cause, ,)
amod(gain, high)
compound(gain, loop)
nsubj(cause, gain)
parataxis(proportional, cause)
det(system, the)
obj(cause, system)
mark(respond, to)
acl(system, respond)
case(component, to)
amod(component, horizontal)
obl(respond, component)
case(acceleration, of)
nmod(component, acceleration)
punct(proportional, .)
det(problem, this)
nsubj(determine, problem)
advmod(determine, usually)
root(ROOT, determine)
det(limit, the)
amod(limit, lower)
obj(determine, limit)
case(gain, of)
compound(gain, loop)
nmod(limit, gain)
cc(time, rather)
fixed(rather, than)
compound(time, response)
conj(limit, time)
punct(determine, .)
nsubj:pass(notice, it)
aux(notice, must)
aux:pass(notice, be)
root(ROOT, notice)
case(Fig., in)
obl(notice, Fig.)
nummod(Fig., 7)
case(1, -)
nmod(7, 1)
obj(respond, that)
det(accelerometer, the)
nsubj(respond, accelerometer)
acl:relcl(Fig., respond)
case(acceleration, to)
det(acceleration, any)
compound(acceleration, input)
obl(respond, acceleration)
punct(notice, .)
det(equation, the)
nsubj(Af, equation)
acl(equation, relate)
compound(acceleration, input)
obj(relate, acceleration)
mark(output, to)
acl(acceleration, output)
compound(angle, platform)
obj(output, angle)
cop(Af, be)
root(ROOT, Af)
punct(Af, .)
case(practice, in)
obl(take, practice)
punct(take, ,)
det(process, the)
compound(level, preflight)
compound(process, level)
nsubj(take, process)
parataxis(Af, take)
obj(take, place)
case(system, with)
det(system, the)
obl(take, system)
acl(system, mount)
case(airframe, in)
det(airframe, the)
obl(mount, airframe)
punct(take, .)
mark(arrange, when)
det(system, the)
nsubj:pass(arrange, system)
aux:pass(arrange, be)
advcl(respond, arrange)
case(level, for)
amod(level, automatic)
obl(arrange, level)
punct(respond, ,)
det(angles, the)
compound(angles, platform)
nsubj(respond, angles)
parataxis(Af, respond)
case(component, to)
det(component, any)
amod(component, horizontal)
obl(respond, component)
case(acceleration, of)
nmod(component, acceleration)
acl(acceleration, act)
case(accelerometer, on)
det(accelerometer, the)
obl(act, accelerometer)
punct(Af, .)
expl(be, there)
root(ROOT, be)
amod(component, many)
amod(component, such)
nsubj(be, component)
case(present, of)
compound(present, acceleration)
nmod(component, present)
case(effect, due)
fixed(due, to)
det(effect, the)
obl(be, effect)
case(gust, of)
compound(gust, wind)
nmod(effect, gust)
punct(noise, ,)
compound(noise, engine)
conj(gust, noise)
punct(turbulence, ,)
conj(gust, turbulence)
case(vehicle, around)
det(vehicle, the)
nmod(turbulence, vehicle)
punct(etc, ,)
conj(gust, etc)
punct(be, .)
punct(be, .)
nsubj(establish, one)
case(problem, of)
det(problem, the)
amod(problem, greatest)
nmod(one, problem)
acl(problem, associate)
case(level, with)
amod(level, automatic)
obl(associate, level)
aux(establish, be)
root(ROOT, establish)
det(level, a)
amod(level, true)
obj(establish, level)
case(presence, in)
det(presence, the)
nmod(level, presence)
case(noise, of)
amod(level, high)
punct(level, -)
compound(noise, level)
compound(noise, acceleration)
nmod(presence, noise)
punct(establish, .)
nummod(solution, one)
nsubj(be, solution)
case(problem, to)
det(problem, the)
nmod(solution, problem)
root(ROOT, be)
mark(operate, to)
ccomp(be, operate)
case(gain, with)
det(gain, a)
amod(gain, low)
compound(gain, loop)
obl(operate, gain)
cc(include, and)
mark(include, to)
conj(operate, include)
amod(pass, low)
punct(pass, -)
compound(filter, pass)
obj(include, filter)
punct(be, .)
det(technique, this)
nsubj(cause, technique)
root(ROOT, cause)
det(system, the)
obj(cause, system)
mark(respond, to)
acl(system, respond)
advmod(component, only)
case(component, to)
amod(component, low)
compound(acceleration, frequency)
compound(component, acceleration)
obl(respond, component)
case(tilt, such)
fixed(such, as)
det(tilt, the)
compound(tilt, platform)
nmod(component, tilt)
punct(cause, .)
case(gain, since)
det(gain, a)
amod(gain, lower)
compound(gain, loop)
obl(reach, gain)
cc(filter, and)
amod(pass, low)
punct(pass, -)
compound(filter, pass)
nsubj(increase, filter)
advcl(reach, increase)
det(time, the)
compound(time, response)
obj(increase, time)
punct(reach, ,)
det(compromise, a)
amod(compromise, practical)
nsubj:pass(reach, compromise)
aux(reach, must)
aux:pass(reach, be)
root(ROOT, reach)
punct(reach, .)
nsubj:pass(achieve, one)
case(solution, of)
det(solution, the)
advmod(desirable, most)
amod(solution, desirable)
nmod(one, solution)
aux:pass(achieve, be)
root(ROOT, achieve)
case(use, by)
det(use, the)
obl(achieve, use)
case(amplifier, of)
det(amplifier, a)
amod(amplifier, non-linear)
nmod(use, amplifier)
case(Af, for)
nmod(amplifier, Af)
punct(achieve, .)
det(amplifier, the)
nsubj:pass(design, amplifier)
aux:pass(design, be)
parataxis(achieve, design)
mark(large, so)
fixed(so, that)
nmod:poss(gain, its)
nsubj(large, gain)
cop(large, be)
advcl(design, large)
case(signal, for)
compound(signal, accelerometer)
obl(large, signal)
case(level, above)
det(level, a)
amod(level, certain)
compound(level, threshold)
nmod(signal, level)
punct(achieve, .)
case(level, below)
det(level, this)
nmod(gain, level)
punct(gain, ,)
det(gain, the)
compound(gain, amplifier)
root(ROOT, gain)
nsubj(proportional, Af)
cop(proportional, be)
root(ROOT, proportional)
cc(value, and)
cop(value, be)
case(value, of)
amod(value, small)
conj(proportional, value)
punct(proportional, ,)
mark(provide, in)
fixed(in, order)
mark(provide, to)
advcl(proportional, provide)
amod(filter, adequate)
compound(filter, noise)
obj(provide, filter)
punct(proportional, .)
det(effect, the)
nsubj(be, effect)
root(ROOT, be)
mark(return, that)
det(platform, the)
nsubj(return, platform)
ccomp(be, return)
case(position, from)
det(position, a)
case(level, off)
punct(level, -)
compound(position, level)
obl(return, position)
case(rate, at)
det(rate, a)
amod(rate, rapid)
nmod(position, rate)
mark(level, until)
nsubj(level, it)
cop(level, be)
advmod(level, nearly)
advcl(return, level)
punct(level, ,)
case(point, at)
det(point, which)
obl(control, point)
det(platform, the)
nsubj:pass(control, platform)
aux:pass(control, be)
acl:relcl(level, control)
case(servo, by)
det(servo, a)
amod(servo, proportional)
obl(control, servo)
case(response, with)
amod(response, low)
amod(response, enough)
compound(response, frequency)
nmod(servo, response)
mark(have, so)
fixed(so, that)
det(noise, the)
nsubj(have, noise)
advcl(control, have)
amod(effect, little)
obj(have, effect)
case(process, on)
det(process, the)
compound(process, level)
nmod(effect, process)
punct(have, .)
mark(level, when)
det(system, the)
nsubj(level, system)
cop(level, be)
case(level, on)
amod(level, automatic)
advcl(cancel, level)
punct(cancel, ,)
det(drift, the)
compound(drift, gyro)
nsubj:pass(cancel, drift)
aux:pass(cancel, be)
parataxis(be, cancel)
case(output, by)
det(output, the)
obl(cancel, output)
case(system, of)
det(system, the)
compound(system, level)
nmod(output, system)
punct(Af, ()
compound(Af, amplifier)
appos(system, Af)
punct(Af, ))
punct(tilt, .)
det(platform, the)
nsubj(tilt, platform)
advmod(tilt, actually)
parataxis(be, tilt)
compound:prt(tilt, off)
obj(tilt, level)
mark(supply, so)
fixed(so, that)
det(output, the)
compound(output, accelerometer)
nsubj(supply, output)
punct(output, ,)
mark(amplify, when)
advcl(supply, amplify)
case(Af, by)
obl(amplify, Af)
punct(supply, ,)
aux(supply, will)
advcl(tilt, supply)
det(current, the)
amod(current, correct)
obj(supply, current)
case(torquer, to)
det(torquer, the)
compound(torquer, gyro)
nmod(current, torquer)
mark(cancel, to)
advcl(supply, cancel)
det(drift, the)
compound(drift, gyro)
obj(cancel, drift)
punct(be, .)
det(amount, the)
nsubj(depend, amount)
case(dip, of)
compound(dip, platform)
nmod(amount, dip)
acl(dip, require)
root(ROOT, depend)
case(factor, upon)
det(factor, the)
compound(factor, scale)
obl(depend, factor)
case(system, of)
det(system, the)
nmod(factor, system)
punct(system, .)
nummod(consideration, 7)
case(3, -)
nmod(7, 3)
punct(consideration, .)
amod(level, practical)
compound(consideration, level)
appos(factor, consideration)
punct(depend, .)
det(system, the)
amod(level, automatic)
compound(system, level)
nsubj(adaptable, system)
acl(system, describe)
case(section, in)
det(section, this)
obl(describe, section)
cop(adaptable, be)
advmod(adaptable, readily)
root(ROOT, adaptable)
case(platform, to)
det(platform, a)
amod(platform, gyro-)
amod(platform, stabilize)
obl(adaptable, platform)
acl(platform, consist)
case(gyro, of)
nummod(gyro, three)
compound(gyro, integrating)
obl(consist, gyro)
punct(adaptable, .)
det(system, the)
nsubj(require, system)
root(ROOT, require)
det(switch, some)
obj(require, switch)
case(circuit, of)
compound(equipment, flight)
compound(circuit, equipment)
nmod(switch, circuit)
punct(require, .)
advmod(maintain, however)
punct(maintain, ,)
det(operation, the)
compound(operation, level)
nsubj:pass(maintain, operation)
aux(maintain, can)
aux:pass(maintain, be)
root(ROOT, maintain)
cc(control, and)
conj(maintain, control)
advmod(control, remotely)
case(contact, with)
det(contact, no)
amod(contact, mechanical)
cc(optical, or)
conj(mechanical, optical)
obl(control, contact)
case(platform, with)
det(platform, the)
nmod(contact, platform)
punct(maintain, .)
det(system, this)
compound(system, level)
nsubj(hold, system)
aux(hold, will)
root(ROOT, hold)
det(platform, the)
obj(hold, platform)
case(level, on)
punct(level, -)
obl(hold, level)
punct(hold, ,)
advmod(hold, automatically)
punct(hold, ,)
advmod(long, as)
advmod(hold, long)
mark(actuate, as)
det(system, the)
nsubj:pass(actuate, system)
aux:pass(actuate, be)
advcl(long, actuate)
punct(hold, . )
det(product, a)
amod(product, useful)
case(product, by)
punct(product, -)
nsubj(be, product)
case(system, of)
det(system, this)
nmod(product, system)
root(ROOT, be)
mark(available, that)
det(information, the)
nsubj(available, information)
amod(information, necessary)
mark(set, to)
advcl(necessary, set)
det(biase, the)
compound(biase, gyro)
compound(biase, drift)
obj(set, biase)
cop(available, be)
ccomp(be, available)
case(current, from)
det(current, the)
obl(available, current)
amod(current, necessary)
mark(hold, to)
advcl(necessary, hold)
det(system, the)
obj(hold, system)
case(level, in)
obl(hold, level)
punct(be, .)
det(process, the)
compound(process, level)
nsubj:pass(accomplish, process)
aux(accomplish, can)
aux:pass(accomplish, be)
root(ROOT, accomplish)
advmod(accomplish, manually)
punct(satisfactory, ,)
cc(satisfactory, and)
det(result, the)
nsubj(satisfactory, result)
cop(satisfactory, be)
advmod(satisfactory, as)
conj(accomplish, satisfactory)
case(those, as)
obl(satisfactory, those)
acl(those, obtain)
case(equipment, with)
amod(equipment, automatic)
obl(obtain, equipment)
punct(accomplish, .)
det(process, the)
nsubj(consist, process)
root(ROOT, consist)
mark(turn, in)
advcl(consist, turn)
det(platform, the)
obj(turn, platform)
advmod(turn, manually)
mark(zero, until)
det(output, the)
nsubj(zero, output)
case(accelerometer, of)
det(accelerometer, both)
nmod(output, accelerometer)
cop(zero, be)
advcl(turn, zero)
punct(consist, .)
det(turn, the)
nsubj:pass(accomplish, turn)
aux:pass(accomplish, be)
root(ROOT, accomplish)
mark(apply, by)
advcl(accomplish, apply)
obj(apply, voltage)
case(torquer, to)
det(torquer, the)
compound(torquer, gyro)
obl(apply, torquer)
acl(torquer, describe)
advmod(describe, above)
punct(accomplish, .)
case(brief, in)
obl(require, brief)
punct(replace, ,)
det(Af, the)
nsubj(replace, human)
parataxis(require, replace)
compound(Af, amplifier)
obj(replace, Af)
case(Figs., in)
nmod(Af, Figs.)
nummod(Figs., 7)
case(1, -)
nmod(Figs., 1)
cc(7, and)
conj(Af, 7)
case(2, -)
nmod(7, 2)
punct(require, .)
amod(level, manual)
nsubj(require, level)
root(ROOT, require)
det(display, a)
amod(display, appropriate)
obj(require, display)
case(output, of)
det(output, the)
compound(output, accelerometer)
nmod(display, output)
punct(require, .)
mark(require, if)
amod(accuracy, high)
nsubj:pass(require, accuracy)
aux:pass(require, be)
advcl(necessary, require)
case(level, in)
compound(level, preflight)
obl(require, level)
punct(necessary, ,)
expl(necessary, it)
cop(necessary, be)
advmod(necessary, usually)
root(ROOT, necessary)
mark(integrate, to)
csubj(necessary, integrate)
cc(integrate, or)
advmod(integrate, doubly)
conj(integrate, integrate)
det(output, the)
compound(output, accelerometer)
obj(integrate, output)
punct(minimize, ()
nsubj(minimize, this)
advmod(minimize, also)
parataxis(necessary, minimize)
det(problem, the)
compound(problem, noise)
obj(minimize, problem)
punct(minimize, ))
punct(necessary, .)
case(integration, with)
obl(see, integration)
punct(see, ,)
det(effect, the)
nsubj:pass(see, effect)
case(acceleration, of)
det(acceleration, a)
amod(acceleration, small)
nmod(effect, acceleration)
punct(acceleration, ()
cc(angle, or)
amod(angle, small)
compound(angle, platform)
compound(angle, tilt)
conj(acceleration, angle)
punct(acceleration, ))
aux(see, can)
aux:pass(see, be)
root(ROOT, see)
case(time, after)
det(time, a)
obl(see, time)
punct(see, .)
advmod(require, however)
punct(require, ,)
nsubj:pass(require, skill)
aux:pass(require, be)
root(ROOT, require)
case(part, on)
det(part, the)
obl(require, part)
case(operator, of)
det(operator, a)
nmod(part, operator)
mark(level, to)
acl(operator, level)
det(platform, a)
obj(level, platform)
case(degree, to)
det(degree, any)
obl(level, degree)
case(accuracy, of)
nmod(degree, accuracy)
punct(require, .)
advmod(require, also)
punct(require, ,)
nsubj(require, it)
root(ROOT, require)
amod(time, more)
obj(require, time)
mark(approach, as)
fixed(as, compare)
case(approach, to)
det(approach, the)
amod(approach, automatic)
obl(require, approach)
punct(inconvenient, .)
amod(level, manual)
nsubj(inconvenient, level)
cop(inconvenient, be)
parataxis(require, inconvenient)
mark(maintain, if)
det(platform, the)
nsubj:pass(maintain, platform)
aux(maintain, must)
aux:pass(maintain, be)
advcl(inconvenient, maintain)
advmod(level, accurately)
obj(maintain, level)
case(period, for)
det(period, any)
amod(period, prolong)
obl(maintain, period)
case(time, of)
nmod(period, time)
punct(inconvenient, .)
det(operator, the)
nsubj(supply, operator)
aux(supply, must)
advmod(supply, continually)
root(ROOT, supply)
det(amount, the)
amod(amount, correct)
obj(supply, amount)
mark(turn, of)
acl(amount, turn)
obj(turn, current)
case(torquer, to)
det(torquer, the)
compound(torquer, gyro)
obl(turn, torquer)
mark(cancel, so)
fixed(so, that)
det(effect, the)
nsubj:pass(cancel, effect)
case(drift, of)
compound(drift, gyro)
nmod(effect, drift)
aux:pass(cancel, be)
advcl(supply, cancel)
punct(supply, .)
det(process, this)
nsubj(difficult, process)
cop(difficult, be)
advmod(difficult, especially)
root(ROOT, difficult)
mark(random, since)
compound(drift, gyro)
nsubj(random, drift)
cop(random, be)
advmod(random, typically)
advcl(difficult, random)
punct(random, .)
nummod(heading, 7)
case(4, -)
nmod(7, 4)
punct(heading, .)
compound(heading, Platform)
parataxis(difficult, heading)
punct(difficult, .)
compound(heading, Platform)
nsubj(consist, heading)
root(ROOT, consist)
mark(orienting, of)
advcl(consist, orienting)
det(axis, the)
amod(axis, sensitive)
obj(orienting, axis)
case(accelerometer, of)
det(accelerometer, the)
nmod(axis, accelerometer)
advmod(orienting, parallel)
case(system, to)
det(system, the)
amod(system, desire)
amod(system, coordinate)
obl(orienting, system)
case(navigator, of)
det(navigator, the)
nmod(system, navigator)
punct(consist, .)
case(term, in)
amod(term, simpler)
obl(amount, term)
punct(amount, ,)
nsubj(amount, it)
root(ROOT, amount)
mark(point, to)
advcl(amount, point)
det(platform, the)
obj(point, platform)
case(direction, in)
det(direction, the)
amod(direction, proper)
obl(point, direction)
punct(amount, .)
case(navigator, for)
advmod(inertial, purely)
amod(navigator, inertial)
obl(available, navigator)
punct(available, ,)
nummod(technique, two)
nsubj(available, technique)
cop(available, be)
root(ROOT, available)
mark(accomplish, to)
advcl(available, accomplish)
det(platform, the)
obj(accomplish, platform)
xcomp(accomplish, head)
punct(available, :)
root(ROOT, use)
case(equipment, of)
amod(equipment, external)
cc(survey, or)
conj(external, survey)
nmod(use, equipment)
mark(establish, to)
acl(use, establish)
amod(heading, proper)
obj(establish, heading)
punct(use, ;)
punct(use, ;)
root(ROOT, use)
case(characteristic, of)
det(characteristic, the)
nmod(use, characteristic)
case(component, of)
det(component, the)
compound(component, platform)
nmod(characteristic, component)
case(indication, for)
det(indication, a)
nmod(use, indication)
case(heading, of)
amod(heading, true)
nmod(indication, heading)
punct(use, .)
det(choice, the)
nsubj(dependent, choice)
case(technique, of)
det(technique, the)
compound(technique, heading)
nmod(choice, technique)
cop(dependent, be)
root(ROOT, dependent)
case(requirement, upon)
det(requirement, the)
compound(requirement, accuracy)
obl(dependent, requirement)
punct(condition, ,)
compound(condition, field)
conj(requirement, condition)
punct(time, ,)
cc(time, and)
det(time, the)
conj(requirement, time)
amod(time, available)
mark(accomplish, to)
advcl(available, accomplish)
det(heading, the)
obj(accomplish, heading)
punct(heading, .)
appos(heading, 7)
case(5, -)
nmod(7, 5)
punct(determination, .)
amod(determination, External)
parataxis(dependent, determination)
case(heading, of)
nmod(determination, heading)
punct(determination, --)
compound(technique, survey)
appos(heading, technique)
punct(determination, .)
case(platform, with)
det(platform, the)
amod(platform, gyro-stabilize)
obl(head, platform)
acl(platform, level)
punct(head, ,)
nsubj:pass(head, it)
aux(head, can)
aux:pass(head, be)
root(ROOT, head)
case(direction, in)
det(direction, the)
amod(direction, proper)
obl(head, direction)
mark(use, by)
advcl(head, use)
compound(technique, survey)
obj(use, technique)
punct(head, .)
det(accelerometer, the)
compound(accelerometer, platform)
nsubj:pass(modify, accelerometer)
aux(modify, must)
aux:pass(modify, be)
advmod(modify, slightly)
root(ROOT, modify)
case(procedure, for)
det(procedure, this)
obl(modify, procedure)
punct(modify, .)
mark(mount, before)
det(accelerometer, the)
nsubj:pass(mount, accelerometer)
aux:pass(mount, be)
advcl(determine, mount)
case(platform, on)
det(platform, the)
obl(mount, platform)
punct(determine, ,)
det(direction, the)
nsubj:pass(determine, direction)
case(axis, of)
nmod:poss(axis, they)
amod(axis, sensitive)
nmod(direction, axis)
aux(determine, must)
aux:pass(determine, be)
advmod(determine, accurately)
root(ROOT, determine)
punct(determine, . )
det(mirror, a)
nsubj:pass(mount, mirror)
aux:pass(mount, be)
root(ROOT, mount)
case(accelerometer, on)
det(accelerometer, each)
obl(mount, accelerometer)
mark(perpendicular, so)
fixed(so, that)
det(plane, the)
nsubj(perpendicular, plane)
case(mirror, of)
det(mirror, the)
nmod(plane, mirror)
cop(perpendicular, be)
advcl(mount, perpendicular)
case(axis, to)
det(axis, the)
amod(axis, sensitive)
obl(perpendicular, axis)
case(unit, of)
det(unit, the)
nmod(axis, unit)
punct(Transit, .)
nmod(axis, Transit)
punct(mount, . )
det(transit, a)
compound(transit, precision)
nsubj:pass(set, transit)
aux:pass(set, be)
root(ROOT, set)
compound:prt(set, up)
mark(align, so)
fixed(so, that)
nsubj:pass(align, it)
aux:pass(align, be)
advcl(set, align)
case(respect, with)
obl(align, respect)
case(north, to)
amod(north, true)
nmod(respect, north)
punct(set, .)
nsubj:pass(do, this)
aux(do, can)
aux:pass(do, be)
root(ROOT, do)
case(degree, to)
det(degree, a)
amod(degree, high)
obl(do, degree)
case(accuracy, of)
nmod(degree, accuracy)
mark(exist, by)
advcl(do, exist)
compound(technique, survey)
obj(exist, technique)
punct(do, .)
mark(set, with)
det(transit, the)
nsubj(set, transit)
advcl(sight, set)
compound:prt(set, up)
punct(sight, ,)
det(mirror, a)
nsubj:pass(sight, mirror)
case(one, on)
nmod(mirror, one)
case(accelerometer, of)
det(accelerometer, the)
nmod(one, accelerometer)
aux:pass(sight, be)
root(ROOT, sight)
cc(turn, and)
det(platform, the)
nsubj:pass(turn, platform)
aux:pass(turn, be)
conj(sight, turn)
mark(align, until)
nsubj:pass(align, it)
aux:pass(align, be)
advcl(turn, align)
punct(sight, .)
det(procedure, the)
compound(procedure, sighting)
nsubj(include, procedure)
root(ROOT, include)
det(use, the)
obj(include, use)
case(fixture, of)
det(fixture, a)
nmod(use, fixture)
case(transit, for)
det(transit, the)
nmod(fixture, transit)
mark(project, to)
advcl(include, project)
det(beam, a)
obj(project, beam)
case(light, of)
nmod(beam, light)
punct(beam, ,)
nsubj:pass(darken, which)
aux:pass(darken, be)
acl:relcl(beam, darken)
case(hair, by)
amod(hair, cross)
obl(darken, hair)
punct(hair, ,)
case(mirror, on)
det(mirror, the)
compound(mirror, accelerometer)
nmod(hair, mirror)
punct(mirror, .)
mark(align, when)
det(platform, the)
nsubj:pass(align, platform)
aux:pass(align, be)
advcl(see, align)
punct(see, ,)
det(image, the)
amod(image, reflect)
nsubj:pass(see, image)
case(hair, of)
det(hair, the)
amod(hair, cross)
nmod(image, hair)
aux(see, can)
aux:pass(see, be)
parataxis(include, see)
advmod(superimpose, exactly)
xcomp(see, superimpose)
case(hair, upon)
det(hair, the)
amod(hair, original)
amod(hair, cross)
obl(superimpose, hair)
punct(include, .)
det(image, the)
nsubj:pass(align, image)
aux(align, can)
advmod(align, easily)
aux:pass(align, be)
root(ROOT, align)
case(degree, with)
det(degree, a)
amod(degree, high)
obl(align, degree)
case(accuracy, of)
nmod(degree, accuracy)
punct(align, .)
det(platform, the)
nsubj:pass(turn, platform)
aux:pass(turn, be)
root(ROOT, turn)
mark(require, as)
advcl(turn, require)
mark(supply, by)
advcl(require, supply)
obj(supply, current)
case(torquer, to)
det(torquer, the)
amod(torquer, appropriate)
compound(torquer, gyro)
obl(supply, torquer)
punct(turn, .)
mark(simple, although)
det(technique, this)
nsubj(simple, technique)
cop(simple, be)
advcl(exist, simple)
cc(satisfactory, and)
conj(simple, satisfactory)
punct(exist, ,)
nummod(difficulty, one)
amod(difficulty, practical)
nsubj(exist, difficulty)
aux(exist, do)
root(ROOT, exist)
punct(exist, :)
det(direction, the)
nsubj:pass(know, direction)
case(north, of)
amod(north, true)
nmod(direction, north)
aux(know, must)
aux:pass(know, be)
ccomp(exist, know)
case(point, for)
det(point, each)
compound(point, launch)
obl(know, point)
punct(exist, .)
advmod(serious, however)
punct(serious, ,)
det(difficulty, this)
nsubj(serious, difficulty)
cop(serious, be)
advmod(serious, not)
advmod(serious, too)
root(ROOT, serious)
mark(realize, if)
nsubj:pass(realize, it)
aux:pass(realize, be)
advcl(serious, realize)
mark(establish, that)
det(team, a)
compound(team, survey)
nsubj(establish, team)
aux(establish, can)
ccomp(realize, establish)
det(line, a)
amod(line, true)
compound(line, north)
compound(line, base)
obj(establish, line)
case(work, with)
det(day, a)
amod(day, few)
nmod:poss(work, day)
case(day, 's)
obl(establish, work)
punct(serious, .)
case(installation, in)
amod(installation, many)
obl(raise, installation)
punct(raise, ,)
det(platform, the)
amod(platform, inertial)
nsubj:pass(raise, platform)
aux:pass(raise, be)
root(ROOT, raise)
case(ground, off)
det(ground, the)
obl(raise, ground)
det(height, a)
amod(height, considerable)
obl:tmod(raise, height)
mark(mount, when)
nsubj:pass(mount, it)
aux:pass(mount, be)
advcl(raise, mount)
case(vehicle, in)
det(vehicle, the)
obl(mount, vehicle)
case(flight, before)
obl(mount, flight)
punct(raise, .)
case(situation, with)
det(situation, this)
obl(difficult, situation)
punct(difficult, ,)
expl(difficult, it)
cop(difficult, be)
root(ROOT, difficult)
mark(sight, to)
csubj(difficult, sight)
advmod(sight, in)
case(platform, on)
det(platform, the)
obl(sight, platform)
case(equipment, with)
compound(equipment, survey)
nmod(platform, equipment)
punct(difficult, .)
mark(high, if)
det(platform, the)
nsubj(high, platform)
cop(high, be)
advmod(high, not)
advmod(high, too)
advcl(mount, high)
case(ground, off)
det(ground, the)
obl(high, ground)
punct(mount, ,)
det(transit, a)
nsubj:pass(mount, transit)
aux(mount, can)
aux:pass(mount, be)
root(ROOT, mount)
case(stand, on)
det(stand, a)
obl(mount, stand)
mark(raise, to)
acl(stand, raise)
obj(raise, it)
compound:prt(raise, up)
case(platform, to)
det(platform, the)
obl(raise, platform)
punct(mount, .)
advmod(lessen, obviously)
punct(lessen, ,)
det(accuracy, the)
compound(accuracy, heading)
nsubj:pass(lessen, accuracy)
aux:pass(lessen, be)
root(ROOT, lessen)
case(technique, by)
amod(technique, such)
obl(lessen, technique)
mark(introduce, since)
nsubj:pass(introduce, error)
aux:pass(introduce, be)
advcl(lessen, introduce)
case(motion, because)
fixed(because, of)
obl(introduce, motion)
case(stand, of)
det(stand, the)
nmod(motion, stand)
punct(lessen, .)
root(ROOT, autocollimator)
punct(autocollimator, .)
det(transit, the)
nsubj:pass(replace, transit)
aux(replace, can)
aux:pass(replace, be)
root(ROOT, replace)
case(autocollimator, by)
det(autocollimator, a)
obl(replace, autocollimator)
punct(replace, .)
det(instrument, this)
nsubj(provide, instrument)
root(ROOT, provide)
det(signal, a)
amod(signal, electrical)
obj(provide, signal)
amod(signal, proportional)
case(deviation, to)
det(deviation, the)
amod(deviation, angular)
obl(proportional, deviation)
case(platform, of)
det(platform, the)
nmod(deviation, platform)
cc(use, and)
aux(use, can)
aux:pass(use, be)
conj(provide, use)
mark(hold, to)
advmod(hold, automatically)
xcomp(use, hold)
det(platform, the)
obj(hold, platform)
case(heading, on)
amod(heading, true)
obl(hold, heading)
punct(provide, .)
det(signal, the)
amod(signal, electrical)
nsubj:pass(amplify, signal)
case(autocollimator, from)
det(autocollimator, the)
nmod(signal, autocollimator)
aux:pass(amplify, be)
root(ROOT, amplify)
cc(supply, and)
conj(amplify, supply)
case(torquer, to)
det(torquer, the)
compound(torquer, Z-gyro)
obl(supply, torquer)
punct(amplify, .)
mark(correct, if)
det(polarity, the)
nsubj(correct, polarity)
cop(correct, be)
advcl(turn, correct)
punct(turn, ,)
det(platform, the)
nsubj(turn, platform)
aux(turn, will)
root(ROOT, turn)
mark(zero, until)
det(angle, the)
compound(error, heading)
compound(angle, error)
nsubj(zero, angle)
cop(zero, be)
advcl(turn, zero)
punct(turn, .)
nsubj(available, information)
cop(available, be)
advmod(available, also)
root(ROOT, available)
case(system, from)
det(system, this)
compound(system, autocollimator)
obl(available, system)
mark(set, to)
advcl(available, set)
det(bias, the)
compound(bias, drift)
obj(set, bias)
case(gyro, for)
det(gyro, the)
compound(gyro, Z-axis)
nmod(bias, gyro)
punct(available, .)
mark(drift, if)
det(gyro, the)
compound(gyro, Z)
nsubj(drift, gyro)
aux(drift, be)
advcl(deliver, drift)
punct(deliver, ,)
det(current, a)
nsubj:pass(deliver, current)
acl(current, generate)
case(autocollimator, by)
det(autocollimator, the)
obl(generate, autocollimator)
aux:pass(deliver, be)
root(ROOT, deliver)
case(torquer, to)
det(torquer, the)
compound(torquer, gyro)
obl(deliver, torquer)
mark(cancel, to)
advcl(deliver, cancel)
det(drift, the)
obj(cancel, drift)
punct(deliver, .)
mark(systematic, if)
det(error, the)
compound(error, drift)
nsubj(systematic, error)
cop(systematic, be)
advcl(cancel, systematic)
punct(cancel, ,)
nsubj:pass(cancel, it)
aux(cancel, can)
aux:pass(cancel, be)
root(ROOT, cancel)
case(circuit, with)
det(circuit, a)
compound(circuit, bias)
obl(cancel, circuit)
nsubj:pass(arrange, which)
aux(arrange, can)
aux:pass(arrange, be)
acl:relcl(circuit, arrange)
cc(adjust, and)
conj(arrange, adjust)
mark(supply, to)
xcomp(adjust, supply)
det(current, the)
amod(current, require)
compound(current, compensating)
obj(supply, current)
punct(cancel, .)
amod(pickoff, electrical)
root(ROOT, pickoff)
punct(pickoff, .)
expl(possible, it)
cop(possible, be)
root(ROOT, possible)
mark(locate, to)
csubj(possible, locate)
det(pickoff, a)
amod(pickoff, angular)
amod(pickoff, electrical)
obj(locate, pickoff)
punct(pickoff, ,)
nsubj(indicate, which)
aux(indicate, will)
acl:relcl(pickoff, indicate)
det(deviation, the)
amod(deviation, angular)
obj(indicate, deviation)
case(direction, between)
det(direction, the)
amod(direction, true)
compound(direction, heading)
nmod(deviation, direction)
cc(platform, and)
det(platform, the)
conj(direction, platform)
punct(possible, .)
advmod(establish, essentially)
punct(establish, ,)
det(stator, the)
nsubj:pass(establish, stator)
cc(portion, or)
compound(portion, reference)
conj(stator, portion)
case(pickoff, of)
det(pickoff, the)
nmod(portion, pickoff)
aux:pass(establish, be)
root(ROOT, establish)
case(respect, with)
obl(establish, respect)
case(direction, to)
det(direction, the)
amod(direction, true)
compound(direction, heading)
nmod(respect, direction)
punct(turn, ,)
cc(turn, and)
det(platform, the)
nsubj:pass(turn, platform)
aux:pass(turn, be)
conj(establish, turn)
advmod(manually, either)
advmod(turn, manually)
cc(automatically, or)
conj(manually, automatically)
mark(reduce, until)
det(signal, the)
amod(signal, angular)
amod(signal, electrical)
compound(signal, pickoff)
nsubj:pass(reduce, signal)
aux:pass(reduce, be)
advcl(turn, reduce)
case(zero, to)
obl(reduce, zero)
punct(7, .)
nummod(heading, 7)
case(6, -)
nmod(7, 6)
punct(heading, .)
compound(heading, Gyrocompass)
compound(alignment, heading)
punct(heading, .)
compound(alignment, Gyrocompass)
nsubj(system, alignment)
cop(system, be)
det(system, a)
amod(system, automatic)
compound(system, heading)
parataxis(establish, system)
nsubj(depend, which)
acl:relcl(system, depend)
case(characteristic, upon)
det(characteristic, the)
obl(depend, characteristic)
case(gyro, of)
nummod(gyro, one)
nmod(characteristic, gyro)
mark(establish, to)
acl(characteristic, establish)
amod(heading, true)
obj(establish, heading)
punct(establish, .)
case(case, for)
det(case, the)
obl(use, case)
case(autonavigator, of)
det(autonavigator, a)
advmod(inertial, purely)
amod(autonavigator, inertial)
nmod(case, autonavigator)
acl(autonavigator, consist)
case(gyro, of)
nummod(gyro, three)
amod(gyro, restrain)
obl(consist, gyro)
punct(use, ,)
det(system, a)
compound(system, coordinate)
nsubj:pass(use, system)
aux:pass(use, be)
root(ROOT, use)
mark(parallel, where)
det(axis, the)
amod(axis, sensitive)
nsubj(parallel, axis)
case(accelerometer, of)
det(accelerometer, the)
compound(accelerometer, x)
nmod(axis, accelerometer)
cop(parallel, be)
ccomp(use, parallel)
case(direction, to)
det(direction, the)
amod(west, east)
punct(west, -)
amod(direction, west)
obl(parallel, direction)
case(point, at)
det(point, the)
compound(point, base)
nmod(direction, point)
punct(parallel, ,)
cc(parallel, and)
det(axis, the)
compound(accelerometer, y)
compound(axis, accelerometer)
amod(axis, sensitive)
nsubj(parallel, axis)
cop(parallel, be)
conj(use, parallel)
case(direction, to)
det(direction, the)
amod(south, north)
punct(south, -)
amod(direction, south)
obl(parallel, direction)
case(point, at)
det(point, the)
compound(point, base)
nmod(direction, point)
punct(use, .)
det(accelerometer, the)
nsubj:pass(mount, accelerometer)
aux:pass(mount, be)
root(ROOT, mount)
advmod(mount, rigidly)
case(platform, on)
det(platform, the)
obl(mount, platform)
punct(mount, .)
advmod(be, thus)
punct(be, ,)
mark(align, if)
nummod(accelerometer, one)
nsubj:pass(align, accelerometer)
aux:pass(align, be)
advmod(align, properly)
advcl(be, align)
punct(be, ,)
det(other, the)
nsubj(be, other)
root(ROOT, be)
advmod(be, also)
punct(be, .)
det(axis, the)
compound(axis, input)
nsubj(parallel, axis)
case(gyro, of)
det(gyro, the)
amod(gyro, appropriate)
nmod(axis, gyro)
cop(parallel, be)
root(ROOT, parallel)
case(direction, to)
det(direction, the)
amod(direction, sensitive)
obl(parallel, direction)
case(accelerometer, of)
det(accelerometer, the)
nmod(direction, accelerometer)
punct(parallel, .)
root(ROOT, Figure)
obj(Figure, 7)
case(3, -)
nmod(7, 3)
ccomp(Figure, show)
det(system, a)
compound(system, platform)
obj(show, system)
case(vector, with)
det(vector, the)
compound(vector, gyro)
nmod(system, vector)
acl(vector, arrange)
mark(describe, as)
advcl(arrange, describe)
advmod(describe, above)
punct(Figure, .)
det(platform, the)
nsubj:pass(level, platform)
aux:pass(level, be)
root(ROOT, level)
cc(head, and)
advmod(head, properly)
conj(level, head)
punct(level, ,)
mark(parallel, so)
fixed(so, that)
det(axis, the)
compound(gyro, x)
punct(gyro, -)
compound(axis, gyro)
compound(axis, input)
nsubj(parallel, axis)
cop(parallel, be)
advcl(level, parallel)
case(direction, to)
det(direction, the)
amod(west, east)
punct(west, -)
amod(direction, west)
obl(parallel, direction)
cc(parallel, and)
det(axis, the)
compound(axis, Y-gyro)
compound(axis, input)
nsubj(parallel, axis)
cop(parallel, be)
conj(parallel, parallel)
case(direction, to)
det(direction, the)
amod(south, north)
punct(south, -)
amod(direction, south)
obl(parallel, direction)
punct(level, .)
det(axis, the)
compound(axis, input)
nsubj(perpendicular, axis)
case(gyro, of)
det(gyro, the)
compound(gyro, x)
nmod(axis, gyro)
punct(axis, ,)
mark(point, when)
advcl(perpendicular, point)
case(direction, in)
det(direction, the)
amod(west, east)
punct(west, -)
amod(direction, west)
obl(point, direction)
punct(perpendicular, ,)
cop(perpendicular, be)
advmod(perpendicular, always)
root(ROOT, perpendicular)
case(axis, to)
det(axis, the)
compound(axis, spin)
obl(perpendicular, axis)
case(earth, of)
nmod(axis, earth)
punct(perpendicular, .)
mark(head, if)
det(platform, the)
nsubj:pass(head, platform)
aux:pass(head, be)
advmod(head, not)
advmod(head, properly)
advcl(see, head)
punct(see, ,)
det(axis, the)
compound(gyro, x)
punct(gyro, -)
compound(axis, gyro)
compound(axis, input)
nsubj(see, axis)
aux(see, will)
root(ROOT, see)
det(component, a)
obj(see, component)
case(rotation, of)
det(earth, the)
nmod:poss(rotation, earth)
case(earth, 's)
nmod(component, rotation)
punct(see, .)
det(sense, the)
nsubj:pass(utilized, sense)
case(rotation, of)
det(rotation, this)
nmod(sense, rotation)
case(gyro, by)
det(gyro, the)
compound(gyro, x)
nmod(rotation, gyro)
aux(utilized, can)
aux:pass(utilized, be)
root(ROOT, utilized)
mark(direct, to)
advcl(utilized, direct)
det(platform, the)
obj(direct, platform)
case(heading, into)
amod(heading, proper)
obl(direct, heading)
punct(utilized, .)
case(Fig., in)
obl(show, Fig.)
nummod(Fig., 7)
case(4, -)
nmod(7, 4)
punct(show, ,)
det(axis, the)
compound(axis, input)
nsubj:pass(show, axis)
case(platform, of)
det(platform, the)
nummod(axis, three)
punct(axis, -)
compound(platform, axis)
nmod(axis, platform)
aux:pass(show, be)
root(ROOT, show)
case(point, at)
det(point, some)
obl(show, point)
case(earth, on)
det(earth, the)
nmod(point, earth)
punct(show, .)
det(point, the)
nsubj(latitude, point)
cop(latitude, be)
case(latitude, at)
det(latitude, a)
root(ROOT, latitude)
punct(latitude, **)
appos(latitude, yl)
punct(error, ,)
cc(error, and)
det(platform, the)
nsubj(error, platform)
cop(error, be)
case(error, at)
det(error, a)
conj(latitude, error)
mark(head, in)
acl(error, head)
advmod(head, east)
punct(latitude, .)
det(earth, the)
nsubj(spin, earth)
aux(spin, be)
root(ROOT, spin)
case(velocity, at)
det(velocity, a)
amod(velocity, angular)
obl(spin, velocity)
punct(zq, **)
appos(velocity, zq)
amod(zq, equal)
case(revolution, to)
nummod(revolution, one)
obl(equal, revolution)
case(hr, per)
nummod(hr, 24)
nmod(revolution, hr)
punct(spin, .)
punct(spin, .)
mark(level, when)
det(platform, the)
nsubj(level, platform)
cop(level, be)
advcl(rotation, level)
punct(rotation, ,)
punct(rotation, **)
nsubj(rotation, ye)
cop(rotation, be)
det(rotation, a)
root(ROOT, rotation)
case(axis, about)
det(axis, the)
compound(axis, Z)
nmod(rotation, axis)
case(Af, of)
det(Af, the)
compound(Af, platform)
nmod(axis, Af)
punct(axis, .)
mark(rotate, since)
det(earth, the)
nsubj(rotate, earth)
aux(rotate, be)
advcl(rotation, rotate)
cc(fix, and)
det(platform, the)
amod(platform, unleveled)
amod(platform, gyro-stabilize)
nsubj:pass(fix, platform)
aux:pass(fix, be)
conj(rotate, fix)
case(respect, with)
obl(fix, respect)
case(reference, to)
det(reference, a)
nmod(respect, reference)
case(space, in)
nmod(reference, space)
punct(see, ,)
det(observer, a)
nsubj(see, observer)
case(earth, on)
det(earth, the)
nmod(observer, earth)
aux(see, will)
conj(rotation, see)
det(rotate, the)
compound(rotate, platform)
obj(see, rotate)
punct(respect, ()
case(respect, with)
nmod(rotate, respect)
case(earth, to)
det(earth, the)
nmod(respect, earth)
punct(respect, ))
punct(see, .)
compound(three, Thirty)
punct(three, -)
nummod(Scotty, three)
nsubj(go, Scotty)
aux(go, do)
advmod(go, not)
parataxis(see, go)
advmod(go, back)
case(school, to)
obl(go, school)
punct(go, .)
nmod:poss(parent, he)
nsubj(talk, parent)
root(ROOT, talk)
advmod(talk, seriously)
cc(lengthily, and)
conj(seriously, lengthily)
case(doctor, to)
nmod:poss(doctor, they)
amod(doctor, own)
obl(talk, doctor)
cc(specialist, and)
case(specialist, to)
det(specialist, a)
conj(doctor, specialist)
case(Hospital, at)
det(Hospital, the)
compound(Hospital, University)
nmod(specialist, Hospital)
punct(talk, --)
nsubj:pass(entitle, Mr.)
flat(Mr., McKinley)
aux:pass(entitle, be)
parataxis(talk, entitle)
case(discount, to)
det(discount, a)
obl(entitle, discount)
case(member, for)
nmod(discount, member)
case(family, of)
nmod:poss(family, he)
nmod(member, family)
punct(talk, --)
cc(decide, and)
nsubj:pass(decide, it)
aux:pass(decide, be)
conj(talk, decide)
expl(best, it)
aux(best, would)
cop(best, be)
ccomp(decide, best)
mark(take, for)
nsubj(take, he)
mark(take, to)
csubj(best, take)
det(remainder, the)
obj(take, remainder)
case(term, of)
det(term, the)
nmod(remainder, term)
advmod(take, off)
punct(spend, ,)
conj(take, spend)
det(lot, a)
obj(spend, lot)
case(time, of)
nmod(lot, time)
case(bed, in)
obl(spend, bed)
cc(do, and)
punct(do, ,)
case(rest, for)
det(rest, the)
obl(do, rest)
punct(do, ,)
conj(spend, do)
advmod(much, pretty)
advmod(do, much)
mark(choose, as)
nsubj(choose, he)
advcl(much, choose)
punct(provide, --)
parataxis(do, provide)
punct(provide, ,)
advmod(choose, of)
fixed(of, course)
punct(choose, ,)
nsubj(choose, he)
conj(provide, choose)
mark(do, to)
xcomp(choose, do)
obj(do, nothing)
advmod(exciting, too)
amod(nothing, exciting)
cc(debilitate, or)
advmod(debilitate, too)
conj(exciting, debilitate)
punct(talk, .)
nmod:poss(teacher, he)
nsubj:pass(confer, teacher)
cc(principal, and)
nmod:poss(principal, he)
compound(principal, school)
conj(teacher, principal)
aux:pass(confer, be)
root(ROOT, confer)
obl(confer, with)
cc(agree, and)
nsubj(agree, everyone)
conj(confer, agree)
mark(be, that)
punct(be, ,)
mark(keep, if)
nsubj(keep, he)
advcl(be, keep)
compound:prt(keep, up)
case(amount, with)
det(amount, a)
amod(amount, certain)
obl(keep, amount)
case(work, of)
nmod(amount, work)
case(home, at)
nmod(work, home)
punct(be, ,)
expl(be, there)
ccomp(agree, be)
amod(danger, little)
nsubj(be, danger)
mark(lose, of)
nsubj(lose, he)
acl(danger, lose)
det(term, a)
obj(lose, term)
punct(accept, .)
nsubj(accept, Scotty)
ccomp(agree, accept)
det(decision, the)
obj(accept, decision)
case(indifference, with)
obl(accept, indifference)
cc(enter, and)
aux(enter, do)
advmod(enter, not)
conj(accept, enter)
det(argument, the)
obj(enter, argument)
punct(confer, .)
nsubj:pass(discharge, he)
aux:pass(discharge, be)
root(ROOT, discharge)
case(hospital, from)
det(hospital, the)
obl(discharge, hospital)
case(checkup, after)
det(checkup, a)
nummod(day, two)
punct(day, -)
compound(checkup, day)
obl(discharge, checkup)
cc(have, and)
nsubj(have, he)
cc(parent, and)
nmod:poss(parent, he)
conj(he, parent)
conj(discharge, have)
obj(have, what)
nsubj(describe, Mr.)
flat(Mr., McKinley)
acl:relcl(what, describe)
case(lunch, as)
det(lunch, a)
punct(lunch, ``)
compound(lunch, celebration)
obl(describe, lunch)
punct(lunch, '')
case(cafeteria, at)
det(cafeteria, the)
obl(describe, cafeteria)
case(campus, on)
det(campus, the)
nmod(cafeteria, campus)
punct(discharge, .)
nsubj(wear, Rachel)
root(ROOT, wear)
det(hat, a)
amod(hat, smart)
obj(wear, hat)
cc(warn, and)
punct(wear, ,)
mark(warn, because)
nsubj:pass(warn, she)
aux(warn, have)
aux:pass(warn, be)
advcl(wear, warn)
advmod(warn, recently)
case(smoking, about)
obl(warn, smoking)
punct(puff, ,)
conj(warn, puff)
case(cigarett, at)
nmod:poss(cigarett, she)
obl(puff, cigarett)
case(holder, through)
det(holder, a)
amod(holder, long)
compound(holder, ivory)
obl(puff, holder)
acl(holder, stain)
case(lipstick, with)
obl(stain, lipstick)
punct(sit, .)
nmod:poss(father, Scotty)
case(Scotty, 's)
nsubj(sit, father)
parataxis(wear, sit)
xcomp(sit, sprawled)
case(chair, in)
nmod:poss(chair, he)
obl(sprawled, chair)
punct(angular, ,)
conj(chair, angular)
punct(alert, ,)
conj(chair, alert)
case(cricket, as)
det(cricket, a)
nmod(chair, cricket)
punct(look, ,)
acl(cricket, look)
obl(look, about)
case(appointment, at)
det(appointment, the)
amod(appointment, huge)
amod(steel, stainless)
punct(steel, -)
compound(appointment, steel)
obl(look, appointment)
case(room, of)
det(room, the)
nmod(appointment, room)
case(expression, with)
det(expression, a)
nmod(appointment, expression)
case(proprietorship, of)
nmod(expression, proprietorship)
punct(teacher, .)
appos(expression, teacher)
punct(teacher, --)
appos(teacher, man)
nsubj(wear, who)
acl:relcl(man, wear)
amod(suit, brown)
obj(wear, suit)
cc(have, and)
conj(wear, have)
amod(hair, gray)
obj(have, hair)
cc(pleasant, and)
amod(smile, pleasant)
obj(have, smile)
punct(come, --)
parataxis(have, come)
case(table, to)
nmod:poss(table, they)
obl(come, table)
mark(talk, to)
advcl(come, talk)
obj(talk, shop)
cc(introduce, and)
mark(introduce, to)
aux:pass(introduce, be)
conj(talk, introduce)
case(Scotty, to)
obl(introduce, Scotty)
cc(Rachel, and)
conj(Scotty, Rachel)
punct(polite, .)
nsubj(polite, Rachel)
cop(polite, be)
parataxis(introduce, polite)
punct(polite, ,)
nsubj(indifferent, Scotty)
conj(polite, indifferent)
punct(wear, .)
nsubj(eat, they)
root(ROOT, eat)
det(food, the)
compound(food, cafeteria)
obj(eat, food)
case(sauce, with)
nmod:poss(sauce, its)
amod(sauce, orange)
obl(eat, sauce)
cc(gazed, and)
nsubj(gazed, Scotty)
conj(eat, gazed)
case(interest, without)
obl(gazed, interest)
case(food, at)
nmod:poss(food, he)
nmod(interest, food)
punct(teacher, ,)
det(teacher, the)
conj(food, teacher)
punct(window, ,)
det(window, the)
amod(window, heroic)
amod(window, baronial)
conj(food, window)
punct(rank, ,)
cc(rank, and)
det(rank, the)
amod(rank, bright)
conj(food, rank)
case(banner, of)
compound(banner, college)
nmod(rank, banner)
punct(eat, .)
nmod:poss(father, he)
nsubj(try, father)
root(ROOT, try)
mark(make, to)
xcomp(try, make)
det(food, the)
iobj(make, food)
det(topic, a)
obj(make, topic)
punct(try, .)
punct(try, ``)
det(pie, the)
compound(pie, blueberry)
nsubj(good, pie)
cop(good, be)
root(ROOT, good)
punct(good, ,)
vocative(good, Scotty)
punct(good, . )
nsubj(recommend, I)
root(ROOT, recommend)
obj(recommend, it)
punct(recommend, '')
punct(recommend, .)
nsubj(look, he)
parataxis(recommend, look)
case(son, at)
nmod:poss(son, he)
obl(look, son)
punct(look, ,)
nmod:poss(face, he)
nsubj(worried, face)
parataxis(look, worried)
punct(recommend, .)
nsubj(murmure, Scotty)
parataxis(recommend, murmure)
punct(recommend, ,)
punct(recommend, ``)
discourse(thanks, no)
punct(thanks, ,)
root(ROOT, thanks)
punct(thanks, '')
punct(thanks, ,)
advmod(softly, so)
advmod(have, softly)
nmod:poss(father, he)
nsubj(have, father)
parataxis(thanks, have)
mark(bend, to)
xcomp(have, bend)
nmod:poss(height, he)
compound(height, gaunt)
obj(bend, height)
case(table, across)
det(table, the)
obl(bend, table)
cc(turn, and)
conj(bend, turn)
det(ear, a)
amod(ear, round)
amod(ear, brown)
obj(turn, ear)
case(he, to)
obl(turn, he)
punct(regard, .)
nsubj(regard, Scotty)
parataxis(have, regard)
det(ear, the)
obj(regard, ear)
cc(hair, and)
det(hair, the)
amod(hair, grizzle)
conj(ear, hair)
case(it, around)
nmod(hair, it)
case(moment, with)
det(moment, a)
obl(regard, moment)
case(interest, of)
nmod(moment, interest)
punct(thanks, .)
nsubj(say, he)
root(ROOT, say)
advmod(loudly, more)
advmod(say, loudly)
punct(say, ,)
punct(say, ``)
nsubj(full, I)
cop(full, be)
root(ROOT, full)
punct(pop, ,)
amod(pop, old)
parataxis(full, pop)
punct(pop, '')
punct(full, .)
nsubj(eat, he)
aux(eat, have)
root(ROOT, eat)
advmod(nothing, almost)
obj(eat, nothing)
case(plate, on)
det(plate, the)
amod(plate, crest)
punct(plate, ,)
nummod(section, three)
punct(section, -)
amod(plate, section)
nmod(nothing, plate)
cc(have, and)
conj(eat, have)
xcomp(have, drunk)
case(milk, about)
det:predet(milk, half)
det(milk, the)
obl(drunk, milk)
case(container, in)
nmod:poss(container, its)
compound(container, paper)
nmod(milk, container)
punct(eat, .)
punct(eat, ``)
nsubj(right, he)
cop(right, be)
advmod(right, all)
root(ROOT, right)
punct(right, ,)
vocative(right, Craig)
punct(right, '')
punct(right, ,)
nsubj(say, Rachel)
parataxis(right, say)
punct(right, .)
punct(right, ``)
nsubj(fix, I)
aux(fix, can)
root(ROOT, fix)
iobj(fix, he)
obj(fix, something)
advmod(something, later)
case(afternoon, in)
det(afternoon, the)
obl(fix, afternoon)
mark(get, when)
nsubj(get, we)
advcl(fix, get)
advmod(get, home)
punct(get, '')
punct(fix, .)
case(seizure, since)
nmod:poss(seizure, he)
obl(have, seizure)
punct(have, ,)
nsubj(have, Scotty)
aux(have, have)
conj(fix, have)
amod(appetite, little)
obj(have, appetite)
punct(have, ;)
punct(have, ;)
cc(one, yet)
nmod:poss(appearance, he)
amod(appearance, change)
nsubj(one, appearance)
punct(appearance, ,)
advmod(one, surprisingly)
punct(one, ,)
cop(one, be)
conj(have, one)
case(plumpness, of)
nmod(one, plumpness)
punct(fix, .)
nmod:poss(face, he)
nsubj(fuller, face)
cop(fuller, be)
root(ROOT, fuller)
punct(fuller, ;)
punct(fuller, ;)
nmod:poss(lip, he)
nsubj(become, lip)
cc(line, and)
det(line, the)
advmod(sharp, usually)
amod(line, sharp)
conj(lip, line)
case(jaw, of)
nmod:poss(jaw, he)
nmod(line, jaw)
aux(become, have)
conj(fuller, become)
amod(look, swell)
punct(look, -)
xcomp(become, look)
punct(fuller, .)
nsubj(breathe, he)
root(ROOT, breathe)
advmod(breathe, now)
case(mouth, with)
nmod:poss(mouth, he)
obl(breathe, mouth)
xcomp(breathe, open)
punct(breathe, ,)
advcl(breathe, show)
det(section, a)
amod(section, whitely)
amod(section, curve)
obj(show, section)
case(tooth, of)
amod(tooth, lower)
nmod(section, tooth)
punct(breathe, ;)
punct(breathe, ;)
nsubj(keep, he)
parataxis(breathe, keep)
nmod:poss(eye, he)
obj(keep, eye)
punct(keep, ,)
case(lid, with)
nmod:poss(lid, they)
amod(lid, puff)
amod(lid, blurred)
obl(keep, lid)
punct(lower, ,)
advmod(lower, always)
conj(keep, lower)
punct(lower, ,)
mark(focus, though)
advmod(focus, not)
punct(lower, ,)
advmod(focus, apparently)
punct(focus, ,)
advcl(lower, focus)
punct(breathe, .)
advmod(neck, even)
nmod:poss(neck, he)
nsubj(seem, neck)
root(ROOT, seem)
xcomp(seem, thicker)
cc(shorter, and)
punct(shorter, ,)
advmod(shorter, therefore)
punct(shorter, ,)
conj(seem, shorter)
punct(seem, .)
nmod:poss(hand, he)
nsubj(active, hand)
punct(hand, ,)
nsubj(quick, which)
aux(quick, have)
cop(quick, be)
advmod(quick, as)
acl:relcl(hand, quick)
case(pair, as)
det(pair, a)
obl(quick, pair)
case(bird, of)
amod(bird, fluttering)
nmod(pair, bird)
punct(active, ,)
cop(active, be)
advmod(active, now)
advmod(active, neither)
root(ROOT, active)
cc(relaxed, nor)
advmod(relaxed, really)
conj(active, relaxed)
punct(active, .)
nsubj(lay, they)
root(ROOT, lay)
case(lap, on)
nmod:poss(lap, he)
obl(lay, lap)
punct(palm, ,)
conj(lap, palm)
advmod(lay, up)
punct(motionless, ,)
advmod(motionless, stiffly)
conj(lap, motionless)
punct(finger, ,)
det(finger, the)
amod(finger, taper)
conj(lap, finger)
det(little, a)
obl:npmod(thick, little)
parataxis(lay, thick)
case(joint, at)
det(joint, the)
obl(thick, joint)
punct(lay, .)
advmod(have, altogether)
nsubj(have, he)
root(ROOT, have)
punct(have, ,)
case(seizure, since)
det(seizure, the)
nmod(appearance, seizure)
punct(appearance, ,)
det(appearance, the)
ccomp(have, appearance)
case(boy, of)
det(boy, a)
nmod(appearance, boy)
nsubj(overindulge, who)
acl:relcl(boy, overindulge)
case(food, in)
obl(overindulge, food)
cc(take, and)
conj(overindulge, take)
det(exercise, no)
obj(take, exercise)
punct(have, .)
nsubj(look, he)
root(ROOT, look)
xcomp(look, lazy)
punct(spoiled, ,)
conj(lazy, spoiled)
punct(querulous, ,)
det(querulous, a)
amod(querulous, little)
parataxis(look, querulous)
punct(look, .)
nsubj(have, Rachel)
root(ROOT, have)
obj(have, little)
mark(say, to)
xcomp(have, say)
punct(have, .)
nsubj(greet, she)
root(ROOT, greet)
nmod:poss(husband, she)
nmod:poss(colleague, husband)
case(husband, 's)
obj(greet, colleague)
case(politeness, with)
amod(politeness, smile)
obl(greet, politeness)
punct(greet, ,)
advcl(greet, offer)
obj(offer, nothing)
punct(Mr., .)
appos(nothing, Mr.)
flat(Mr., McKinley)
punct(Mr., ,)
case(sprawling, for)
det:predet(sprawling, all)
nmod:poss(sprawling, he)
obl(alert, sprawling)
cc(familiarity, and)
nmod:poss(familiarity, he)
amod(familiarity, easy)
conj(sprawling, familiarity)
punct(alert, ,)
cop(alert, be)
advmod(alert, completely)
conj(greet, alert)
case(son, to)
nmod:poss(son, he)
obl(alert, son)
punct(alert, ,)
conj(son, eye)
advmod(face, always)
case(face, on)
det(face, the)
advmod(face, still)
nmod(eye, face)
punct(alert, ,)
advcl(alert, jump)
mark(anticipate, to)
xcomp(jump, anticipate)
nmod:poss(desire, Scotty)
case(Scotty, 's)
obj(anticipate, desire)
punct(greet, .)
nsubj(lunch, it)
cop(lunch, be)
det(lunch, a)
amod(lunch, strain)
punct(lunch, ,)
amod(lunch, silent)
root(ROOT, lunch)
punct(lunch, .)
nsubj(say, Rachel)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
nsubj(get, I)
aux(get, would)
advmod(get, better)
root(ROOT, get)
obj(get, he)
case(bed, to)
obl(get, bed)
punct(get, '')
punct(get, .)
det(doctor, the)
nsubj(suggest, doctor)
aux(suggest, have)
parataxis(get, suggest)
nsubj(remain, Scotty)
xcomp(suggest, remain)
obj(remain, most)
case(afternoon, of)
det(afternoon, every)
obl(most, afternoon)
case(bed, in)
obl(remain, bed)
mark(stronger, until)
nsubj(stronger, he)
cop(stronger, be)
advcl(remain, stronger)
punct(get, .)
mark(have, since)
nsubj(have, Mr.)
flat(Mr., McKinley)
advcl(drive, have)
mark(give, to)
xcomp(have, give)
det(lecture, a)
obj(give, lecture)
punct(drive, ,)
nsubj(drive, Rachel)
cc(Scotty, and)
conj(Rachel, Scotty)
root(ROOT, drive)
advmod(drive, home)
advmod(drive, alone)
case(plymouth, in)
det(plymouth, the)
obl(drive, plymouth)
punct(drive, .)
nsubj(speak, they)
aux(speak, do)
advmod(speak, not)
root(ROOT, speak)
obj(speak, much)
punct(speak, .)
nsubj(gazed, Scotty)
parataxis(speak, gazed)
compound:prt(gazed, out)
case(slum, at)
amod(slum, ugly)
amod(slum, gray)
obl(gazed, slum)
cc(say, and)
conj(gazed, say)
advmod(say, softly)
punct(speak, ,)
punct(speak, ``)
root(ROOT, look)
case(kid, at)
det(kid, those)
amod(kid, stupid)
obl(look, kid)
punct(kid, '')
punct(look, .)
nsubj(section, it)
cop(section, be)
det(section, a)
amod(section, Negro)
parataxis(look, section)
case(house, of)
compound(row, peel)
compound(house, row)
nmod(section, house)
punct(church, ,)
obl:npmod(front, store)
punct(front, -)
amod(church, front)
conj(house, church)
cc(child, and)
amod(child, rag)
conj(house, child)
punct(look, .)
nsubj(have, Rachel)
root(ROOT, have)
mark(bend, to)
xcomp(have, bend)
case(Scotty, toward)
obl(bend, Scotty)
cc(ask, and)
conj(bend, ask)
obj(ask, he)
mark(repeat, to)
xcomp(ask, repeat)
punct(have, .)
nsubj(say, he)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
root(ROOT, nothing)
punct(nothing, '')
punct(nothing, .)
cc(then, and)
conj(nothing, then)
punct(nothing, :)
punct(nothing, ``)
expl(be, there)
root(ROOT, be)
nsubj(be, lot)
case(kid, of)
nmod(lot, kid)
advmod(here, around)
advmod(be, here)
punct(be, '')
punct(be, .)
nsubj(look, Scotty)
parataxis(be, look)
case(child, at)
det(child, the)
obl(look, child)
punct(be, ,)
nmod:poss(mouth, he)
nsubj(open, mouth)
advmod(open, slightly)
parataxis(look, open)
punct(open, ,)
nmod:poss(eye, he)
nsubj(dull, eye)
xcomp(open, dull)
punct(be, .)
nsubj(feel, he)
root(ROOT, feel)
xcomp(feel, tired)
cc(full, and)
conj(tired, full)
cc(calm, and)
conj(tired, calm)
punct(feel, .)
compound(four, Thirty)
punct(four, -)
nummod(day, four)
det(day, the)
nsubj(seem, day)
ccomp(feel, seem)
xcomp(seem, short)
punct(seem, ,)
advmod(same, perhaps)
mark(same, because)
nmod:poss(routine, he)
nsubj(same, routine)
cop(same, be)
punct(same, ,)
det(day, each)
obl:tmod(same, day)
punct(same, ,)
advmod(same, almost)
det(same, the)
parataxis(seem, same)
punct(feel, .)
nsubj(rise, he)
root(ROOT, rise)
advmod(rise, late)
cc(go, and)
conj(rise, go)
advmod(go, down)
case(bathrobe, in)
nmod:poss(bathrobe, he)
obl(go, bathrobe)
cc(slipper, and)
conj(bathrobe, slipper)
mark(have, to)
advcl(go, have)
obj(have, breakfast)
cc:preconj(alone, either)
advmod(have, alone)
cc(Rachel, or)
case(Rachel, with)
conj(alone, Rachel)
punct(treat, .)
nsubj(treat, Virginia)
conj(rise, treat)
obj(treat, he)
case(attention, with)
obl(treat, attention)
cc(try, and)
conj(treat, try)
mark(tempt, to)
xcomp(try, tempt)
nmod:poss(appetite, he)
obj(tempt, appetite)
case(food, with)
amod(food, special)
nmod(appetite, food)
punct(biscuit, :)
appos(food, biscuit)
punct(cookie, ,)
conj(biscuit, cookie)
punct(candy, ,)
conj(biscuit, candy)
punct(biscuit, --)
det(result, the)
conj(biscuit, result)
case(hour, of)
amod(hour, devote)
nmod(result, hour)
case(kitchen, in)
det(kitchen, the)
amod(kitchen, tile)
nmod(hour, kitchen)
punct(rise, .)
nsubj(hover, she)
aux(hover, would)
root(ROOT, hover)
case(he, over)
obl(hover, he)
cc(watch, and)
punct(watch, ,)
csubj(watch, look)
case(brother, like)
nmod:poss(brother, she)
obl(look, brother)
punct(watch, ,)
advmod(watch, anxiously)
conj(hover, watch)
det(progress, the)
obj(watch, progress)
case(fork, of)
nmod:poss(fork, Scotty)
case(Scotty, 's)
nmod(progress, fork)
cc(spoon, or)
conj(fork, spoon)
punct(hover, .)
punct(hover, ``)
nsubj(eat, you)
aux(eat, do)
advmod(eat, not)
root(ROOT, eat)
advmod(eat, enough)
punct(eat, ,)
vocative(eat, honey)
punct(eat, .)
parataxis(eat, try)
mark(get, to)
xcomp(try, get)
det(down, that)
advmod(get, down)
punct(get, '')
punct(eat, .)
nsubj(say, Rachel)
punct(Rachel, ,)
list(Rachel, observe)
punct(say, ,)
aux(say, would)
parataxis(eat, say)
punct(eat, ,)
punct(eat, ``)
nsubj(have, he)
root(ROOT, have)
mark(rediscover, to)
xcomp(have, rediscover)
nmod:poss(capacity, he)
amod(capacity, own)
obj(rediscover, capacity)
punct(have, .)
nsubj(take, it)
aux(take, will)
root(ROOT, take)
obj(take, time)
punct(take, '')
punct(take, .)
nsubj(talk, Virginia)
cc(Rachel, and)
conj(Virginia, Rachel)
conj(take, talk)
case(other, to)
det(other, each)
obl(talk, other)
advmod(talk, quietly)
advmod(talk, now)
punct(talk, ,)
case(ally, as)
obl(talk, ally)
nsubj(political, who)
cop(political, be)
acl:relcl(ally, political)
cc(natural, rather)
fixed(rather, than)
nsubj(atmosphere, natural)
aux(atmosphere, might)
case(atmosphere, in)
det(atmosphere, a)
compound(atmosphere, war)
conj(political, atmosphere)
punct(take, .)
nsubj(watch, both)
root(ROOT, watch)
obj(watch, Scotty)
advmod(watch, constantly)
punct(watch, ,)
vocative(watch, Rachel)
mark(seem, without)
advcl(watch, seem)
obl(seem, to)
punct(seem, ,)
obl(seem, Virginia)
advmod(seem, openly)
punct(eye, ,)
nmod:poss(eye, she)
conj(seem, eye)
acl(eye, fill)
case(concern, with)
obl(fill, concern)
punct(neutral, .)
nsubj(neutral, Scotty)
cop(neutral, be)
parataxis(watch, neutral)
punct(watch, .)
nsubj(resent, he)
aux(resent, do)
advmod(resent, not)
root(ROOT, resent)
nmod:poss(supervision, they)
obj(resent, supervision)
cc(Virginia, or)
conj(supervision, Virginia)
case(Virginia, 's)
advmod(tiring, sometimes)
amod(sympathy, tiring)
conj(supervision, sympathy)
punct(resent, .)
nsubj(eat, he)
root(ROOT, eat)
obj(feel, what)
nsubj(feel, he)
ccomp(eat, feel)
obl(feel, like)
punct(sleep, ,)
conj(eat, sleep)
advmod(much, as)
advmod(sleep, much)
cc(little, or)
advmod(little, as)
advmod(sleep, little)
mark(pleased, as)
nsubj(pleased, he)
advcl(as, pleased)
punct(move, ,)
cc(move, and)
conj(sleep, move)
case(room, about)
det(room, the)
amod(room, draughty)
obl(move, room)
case(house, of)
det(house, the)
nmod(room, house)
punct(move, ,)
mark(bed, when)
nsubj(bed, he)
cop(bed, be)
advmod(bed, not)
case(bed, in)
advcl(move, bed)
punct(bed, ,)
case(step, with)
amod(step, slow)
punct(step, ,)
amod(step, dubious)
obl(bed, step)
punct(step, ,)
case(tourist, like)
det(tourist, a)
amod(tourist, elderly)
nmod(step, tourist)
case(cathedral, in)
det(cathedral, a)
nmod(tourist, cathedral)
punct(eat, .)
nmod:poss(energy, he)
nsubj:pass(go, energy)
aux:pass(go, be)
root(ROOT, go)
punct(go, .)
nsubj(able, he)
cop(able, be)
root(ROOT, able)
punct(able, ,)
advmod(able, now)
punct(able, ,)
mark(sit, to)
xcomp(able, sit)
case(hour, for)
obl(sit, hour)
case(chair, in)
det(chair, a)
obl(sit, chair)
case(room, in)
det(room, the)
compound(room, living)
nmod(chair, room)
cc(stare, and)
conj(sit, stare)
compound:prt(stare, out)
case(yard, at)
det(yard, the)
amod(yard, bleak)
obl(stare, yard)
mark(move, without)
advcl(stare, move)
punct(able, .)
nmod:poss(hand, he)
nsubj(lay, hand)
root(ROOT, lay)
advmod(lay, loosely)
punct(lay, ,)
advmod(stiffly, yet)
advmod(lay, stiffly)
punct(lay, --)
nsubj(hand, they)
cop(hand, be)
case(hand, like)
compound(hand, wax)
parataxis(lay, hand)
punct(lay, :)
advmod(lifelike, almost)
appos(hand, lifelike)
punct(lifelike, ,)
advmod(quite, not)
conj(lifelike, quite)
punct(lifelike, --)
conj(lifelike, fold)
case(lap, in)
nmod:poss(lap, he)
obl(fold, lap)
punct(lifelike, ;)
punct(hang, ;)
nmod:poss(mouth, he)
nsubj(hang, mouth)
parataxis(lifelike, hang)
advmod(open, slightly)
xcomp(hang, open)
punct(lay, .)
mark(ask, when)
nsubj:pass(ask, he)
aux:pass(ask, be)
advcl(answer, ask)
det(question, a)
obj(ask, question)
cc(address, or)
conj(ask, address)
case(way, in)
det:predet(way, such)
det(way, a)
obl(address, way)
mark(inescapable, that)
det(response, some)
nsubj(inescapable, response)
cop(inescapable, be)
acl:relcl(way, inescapable)
punct(answer, ,)
nsubj(answer, he)
aux(answer, would)
root(ROOT, answer)
punct(answer, ;)
punct(answer, ;)
mark(happen, if)
punct(have, ,)
mark(happen, as)
advmod(happen, often)
advcl(have, happen)
punct(have, ,)
nsubj(have, he)
conj(answer, have)
mark(repeat, to)
xcomp(have, repeat)
mark(speak, because)
nsubj(speak, he)
aux(speak, have)
advcl(repeat, speak)
advmod(softly, too)
advmod(speak, softly)
punct(repeat, ,)
nsubj(repeat, he)
aux(repeat, would)
parataxis(have, repeat)
nmod:poss(word, he)
obj(repeat, word)
case(way, in)
det(way, the)
amod(way, same)
obl(repeat, way)
punct(repeat, ,)
case(emphasis, without)
obl(repeat, emphasis)
cc(impatience, or)
conj(emphasis, impatience)
punct(louder, ,)
advmod(little, only)
det(little, a)
obl:npmod(louder, little)
conj(emphasis, louder)
punct(answer, .)
nsubj(mention, he)
aux(mention, have)
advmod(mention, not)
root(ROOT, mention)
obj(mention, kate)
punct(mention, .)
nsubj(think, he)
aux(think, have)
advmod(think, not)
advmod(think, even)
root(ROOT, think)
case(she, about)
obl(think, she)
advmod(think, much)
case(once, except)
obl(think, once)
cc(twice, or)
conj(once, twice)
case(night, at)
obl(think, night)
case(bed, in)
nmod(night, bed)
mark(abruptly, when)
nmod:poss(thought, he)
advmod(range, slowly)
amod(thought, range)
nsubj(abruptly, thought)
aux(abruptly, would)
advmod(encounter, abruptly)
punct(encounter, ,)
advmod(accidentally, almost)
advmod(encounter, accidentally)
punct(encounter, ,)
advcl(think, encounter)
obj(encounter, she)
punct(think, .)
case(time, at)
det(time, these)
obl(feel, time)
nsubj(feel, he)
root(ROOT, feel)
det(kind, a)
obj(feel, kind)
case(pain, of)
nmod(kind, pain)
case(chest, in)
nmod:poss(chest, he)
amod(chest, upper)
nmod(kind, chest)
punct(pain, ,)
cc(pain, but)
nsubj(pain, it)
cop(pain, be)
det(pain, a)
amod(pain, objective)
conj(feel, pain)
punct(pain, ,)
case(way, in)
det(way, no)
obl(pain, way)
amod(way, different)
case(other, from)
obl(different, other)
case(intensity, in)
obl(different, intensity)
cc(different, and)
advmod(different, not)
conj(intensity, different)
case(kind, in)
obl(different, kind)
punct(feel, ;)
punct(feel, ;)
nsubj(wound, it)
cop(wound, be)
case(wound, like)
det(wound, the)
amod(wound, bandage)
parataxis(feel, wound)
case(back, on)
det(back, the)
nmod(wound, back)
case(head, of)
nmod:poss(head, he)
nmod(back, head)
nsubj(throbb, which)
advmod(throbb, occasionally)
acl:relcl(back, throbb)
punct(wound, ;)
punct(wound, ;)
nsubj(part, it)
cop(part, be)
advmod(part, merely)
det(part, another)
parataxis(throbb, part)
case(weakness, of)
nmod:poss(weakness, he)
nmod(part, weakness)
punct(feel, .)
nsubj(calm, he)
cop(calm, be)
root(ROOT, calm)
punct(drug, ,)
conj(calm, drug)
punct(lazy, ,)
cc(lazy, and)
conj(calm, lazy)
punct(calm, .)
nsubj(care, he)
aux(care, do)
advmod(care, not)
root(ROOT, care)
punct(care, .)
nsubj(mention, Rachel)
root(ROOT, mention)
obj(mention, kate)
punct(mention, .)
nsubj(say, she)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
nsubj(notice, I)
root(ROOT, notice)
det(girl, the)
nsubj(bother, girl)
case(street, from)
case(street, across)
det(street, the)
nmod(girl, street)
aux(bother, have)
advmod(bother, not)
ccomp(notice, bother)
mark(phone, to)
xcomp(bother, phone)
cc(visit, or)
conj(phone, visit)
punct(say, '')
punct(say, .)
nsubj(say, Scotty)
parataxis(notice, say)
punct(say, ,)
punct(say, ``)
nsubj(right, that)
cop(right, be)
advmod(right, all)
root(ROOT, right)
punct(right, .)
nmod:poss(right, kate)
case(kate, 's)
advmod(right, all)
parataxis(right, right)
punct(right, '')
punct(right, .)
nsubj(think, he)
parataxis(right, think)
case(it, about)
obl(think, it)
advmod(think, briefly)
punct(turn, ,)
advmod(turn, then)
advmod(turn, deliberately)
conj(think, turn)
det(talk, the)
obj(turn, talk)
case(something, to)
obl(turn, something)
amod(something, else)
punct(right, .)
advmod(see, once)
punct(see, ,)
advcl(see, sit)
case(window, at)
det(window, the)
amod(window, front)
obl(sit, window)
case(room, in)
nmod:poss(parent, he)
nmod:poss(room, parent)
case(parent, 's)
obl(sit, room)
punct(see, ,)
nsubj(see, he)
root(ROOT, see)
obj(see, kate)
xcomp(see, come)
case(house, out)
case(house, of)
nmod:poss(house, she)
obl(come, house)
punct(see, .)
nsubj(Elizabeth, she)
cop(Elizabeth, be)
case(Elizabeth, with)
root(ROOT, Elizabeth)
punct(Elizabeth, .)
nsubj(off, they)
cop(off, be)
advmod(off, far)
root(ROOT, off)
cc(look, and)
conj(off, look)
xcomp(look, tiny)
punct(off, .)
det(branch, the)
amod(branch, heavy)
nsubj(hide, branch)
case(yard, in)
nmod:poss(yard, he)
amod(yard, front)
nmod(branch, yard)
aux(hide, would)
root(ROOT, hide)
cc(reveal, and)
advmod(reveal, then)
conj(hide, reveal)
obj(reveal, they)
punct(hide, .)
nsubj(turn, they)
root(ROOT, turn)
case(bottom, at)
det(bottom, the)
obl(turn, bottom)
case(step, of)
nmod:poss(step, kate)
case(kate, 's)
nmod(bottom, step)
cc(move, and)
conj(turn, move)
compound:prt(move, off)
case(direction, in)
det(direction, the)
obl(move, direction)
case(park, of)
det(park, the)
nmod(direction, park)
punct(turn, .)
nsubj(think, he)
root(ROOT, think)
nsubj(see, he)
ccomp(think, see)
punct(think, --)
nsubj(awaken, it)
ccomp(think, awaken)
cc(interested, and)
punct(interested, ,)
case(moment, for)
det(moment, a)
obl(interested, moment)
punct(interested, ,)
conj(think, interested)
obj(interested, he)
punct(think, --)
mark(hold, that)
nsubj(hold, Elizabeth)
ccomp(interested, hold)
det(leash, a)
obj(hold, leash)
case(hand, in)
nmod:poss(hand, she)
obl(hold, hand)
cc(end, and)
mark(end, that)
det(puppy, a)
amod(puppy, round)
amod(puppy, fuzzy)
nsubj(end, puppy)
cop(end, be)
case(end, on)
det(end, the)
conj(hold, end)
case(leash, of)
det(leash, the)
nmod(end, leash)
punct(think, .)
advmod(disappear, then)
nsubj(disappear, they)
root(ROOT, disappear)
cc(get, and)
nsubj(get, Scotty)
conj(disappear, get)
compound:prt(get, up)
cc(go, and)
conj(get, go)
case(room, into)
nmod:poss(room, he)
amod(room, own)
obl(go, room)
cc(get, and)
conj(go, get)
case(bed, into)
obl(get, bed)
punct(disappear, .)
case(time, by)
det(time, the)
obl(cover, time)
nsubj(cover, he)
cop(cover, be)
case(cover, under)
det(cover, the)
root(ROOT, cover)
nsubj(forget, he)
aux(forget, have)
acl:relcl(cover, forget)
mark(see, about)
advcl(forget, see)
obj(see, kate)
punct(cover, .)
det(doctor, the)
nsubj(come, doctor)
punct(come, ,)
mark(allow, since)
nsubj(allow, Scotty)
aux(allow, be)
advmod(longer, no)
advmod(allow, longer)
advcl(come, allow)
mark(make, to)
xcomp(allow, make)
nmod:poss(trip, he)
amod(trip, regular)
obj(make, trip)
case(town, into)
obl(make, town)
mark(see, to)
advcl(make, see)
obj(see, he)
punct(come, ,)
root(ROOT, come)
advmod(come, often)
cc(informally, and)
conj(often, informally)
case(house, to)
det(house, the)
obl(come, house)
punct(come, .)
nsubj(sit, he)
aux(sit, would)
root(ROOT, sit)
punct(waist, ,)
amod(waist, slim)
punct(waist, -)
conj(sit, waist)
cc(spare, and)
conj(sit, spare)
punct(sit, ,)
case(edge, on)
det(edge, the)
obl(sit, edge)
case(bed, of)
nmod:poss(bed, Scotty)
case(Scotty, 's)
nmod(edge, bed)
punct(cross, ,)
nmod:poss(leg, he)
nsubj(cross, leg)
conj(sit, cross)
advmod(elaborately, so)
advmod(cross, elaborately)
mark(tap, that)
det(foot, the)
amod(foot, cross)
nsubj(tap, foot)
aux(tap, could)
ccomp(cross, tap)
det(floor, the)
obj(tap, floor)
punct(sit, .)
nsubj(mind, Scotty)
aux(mind, do)
advmod(mind, not)
root(ROOT, mind)
det(doctor, the)
nmod:poss(tease, doctor)
case(doctor, 's)
amod(tease, unsmiling)
obj(mind, tease)
mark(use, as)
nsubj(use, he)
advcl(mind, use)
xcomp(use, to)
punct(mind, .)
punct(mind, ``)
amod(man, husky)
amod(man, young)
root(ROOT, man)
punct(man, '')
punct(man, ,)
nsubj(say, he)
parataxis(man, say)
case(distaste, with)
amod(distaste, mock)
obl(say, distaste)
punct(man, .)
punct(man, ``)
nsubj(imagine, I)
root(ROOT, imagine)
nsubj(battle, you)
aux(battle, be)
advmod(battle, always)
ccomp(imagine, battle)
case(school, in)
obl(battle, school)
punct(imagine, '')
punct(imagine, .)
punct(imagine, ``)
nsubj(go, I)
aux(go, do)
advmod(go, not)
root(ROOT, go)
case(school, to)
obl(go, school)
advmod(more, any)
advmod(go, more)
punct(go, '')
punct(go, .)
punct(go, ``)
root(ROOT, Pardon)
punct(Pardon, '')
punct(Pardon, ?)
punct(Pardon, ?)
det(doctor, the)
nsubj(have, doctor)
parataxis(Pardon, have)
mark(bend, to)
xcomp(have, bend)
xcomp(bend, close)
mark(hear, to)
advcl(bend, hear)
punct(bend, ;)
punct(have, ;)
nmod:poss(hand, he)
amod(hand, delicate)
nsubj(rest, hand)
punct(hand, ,)
mark(vein, as)
advcl(rest, vein)
case(wing, as)
det(moth, a)
nmod:poss(wing, moth)
case(moth, 's)
obl(vein, wing)
punct(rest, ,)
conj(have, rest)
advmod(rest, absently)
case(chest, on)
nmod:poss(chest, Scotty)
case(Scotty, 's)
obl(rest, chest)
punct(say, .)
nsubj(say, Scotty)
parataxis(rest, say)
det(word, the)
amod(word, same)
obj(say, word)
advmod(loudly, more)
advmod(say, loudly)
punct(say, .)
punct(say, ``)
discourse(take, oh)
punct(take, .)
discourse(take, well)
punct(take, ,)
nsubj(take, we)
aux(take, be)
root(ROOT, take)
det(vacation, a)
amod(vacation, little)
obj(take, vacation)
punct(take, ,)
nsubj(all, that)
cop(all, be)
parataxis(take, all)
punct(take, '')
punct(take, .)
nsubj(turn, he)
parataxis(take, turn)
advmod(turn, unsmilingly)
case(Rachel, to)
obl(turn, Rachel)
punct(take, .)
punct(take, ``)
nsubj(think, I)
root(ROOT, think)
case(end, by)
det(end, the)
obl(get, end)
case(week, of)
amod(week, next)
nmod(end, week)
nsubj(get, he)
aux(get, could)
ccomp(think, get)
advmod(get, out)
case(air, in)
det(air, the)
obl(get, air)
det(little, a)
obl:npmod(get, little)
punct(think, .)
nsubj(could, he)
root(ROOT, could)
advmod(could, now)
cc(definite, but)
det(weakness, the)
nsubj(definite, weakness)
cop(definite, be)
advmod(definite, very)
conj(could, definite)
punct(definite, ;)
punct(could, ;)
nsubj(exhaust, it)
aux(exhaust, would)
parataxis(definite, exhaust)
obj(exhaust, he)
advmod(exhaust, further)
cc(unnecessarily, and)
conj(further, unnecessarily)
punct(could, .)
nsubj(stronger, he)
aux(stronger, will)
cop(stronger, be)
root(ROOT, stronger)
advmod(stronger, soon)
punct(stronger, '')
punct(stronger, .)
nmod:poss(stethoscope, he)
nsubj(table, stethoscope)
cop(table, be)
case(table, on)
det(table, the)
parataxis(stronger, table)
case(bed, by)
nmod:poss(bed, Scotty)
case(Scotty, 's)
nmod(table, bed)
cc(pick, and)
nsubj(pick, he)
conj(stronger, pick)
obj(pick, it)
compound:prt(pick, up)
cc(wag, and)
conj(pick, wag)
obj(wag, it)
case(Scotty, at)
obl(wag, Scotty)
punct(stronger, .)
nsubj(say, he)
root(ROOT, say)
advmod(say, fussily)
punct(say, ,)
punct(say, ``)
advmod(keep, just)
root(ROOT, keep)
det(cap, the)
obj(keep, cap)
case(emotion, on)
det(emotion, those)
amod(emotion, strong)
obl(keep, emotion)
punct(emotion, '')
punct(keep, .)
det(stethoscope, the)
nsubj(glint, stethoscope)
parataxis(keep, glint)
obj(glint, silver)
case(room, in)
det(room, the)
compound(room, darkening)
obl(glint, room)
punct(keep, .)
punct(keep, ``)
nsubj(drop, I)
aux(drop, will)
root(ROOT, drop)
advmod(again, by)
advmod(drop, again)
case(day, in)
det(day, a)
amod(day, few)
obl(drop, day)
punct(drop, '')
punct(drop, .)
nsubj(stay, Rachel)
parataxis(drop, stay)
advmod(stay, on)
mark(go, after)
det(doctor, the)
nsubj(go, doctor)
aux(go, have)
advcl(stay, go)
punct(drop, .)
nsubj(smoothed, she)
root(ROOT, smoothed)
det(cover, the)
obj(smoothed, cover)
case(bed, on)
nmod:poss(bed, Scotty)
case(Scotty, 's)
obl(smoothed, bed)
cc(pick, and)
conj(smoothed, pick)
obj(pick, thing)
compound:prt(pick, up)
case(floor, from)
det(floor, the)
obl(pick, floor)
punct(smoothed, .)
nsubj(touch, she)
aux(touch, do)
advmod(touch, not)
root(ROOT, touch)
obj(touch, he)
punct(touch, .)
nsubj(watch, Scotty)
parataxis(touch, watch)
case(disinterest, with)
obl(watch, disinterest)
punct(touch, .)
nsubj(speak, he)
aux(speak, do)
advmod(speak, not)
root(ROOT, speak)
punct(speak, .)
nsubj(have, he)
root(ROOT, have)
det(desire, no)
obj(have, desire)
acl(desire, to)
punct(have, .)
nsubj(say, she)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
aux(think, do)
nsubj(think, you)
root(ROOT, think)
nsubj(miss, you)
aux(miss, will)
ccomp(think, miss)
obj(miss, school)
punct(think, '')
punct(think, ?)
punct(think, ?)
nsubj(notice, he)
aux(notice, have)
root(ROOT, notice)
advmod(formal, how)
xcomp(grow, formal)
cc(exact, and)
advmod(exact, irritably)
conj(formal, exact)
nsubj(grow, Rachel)
aux(grow, have)
ccomp(notice, grow)
punct(notice, .)
nsubj(care, he)
aux(care, do)
advmod(care, not)
root(ROOT, care)
punct(care, .)
nsubj(feel, he)
root(ROOT, feel)
nmod:poss(irritability, she)
nsubj(concern, irritability)
aux(concern, do)
advmod(concern, not)
ccomp(feel, concern)
obj(concern, he)
punct(know, ,)
cc(know, yet)
nsubj(know, he)
conj(feel, know)
nsubj(care, he)
aux(care, would)
advmod(care, not)
ccomp(know, care)
advmod(do, even)
mark(do, if)
nsubj(do, it)
advcl(care, do)
punct(feel, .)
nsubj(shook, he)
root(ROOT, shook)
nmod:poss(head, he)
obj(shook, head)
punct(shook, .)
punct(shook, ``)
nsubj(have, we)
aux(have, have)
root(ROOT, have)
det(number, any)
obj(have, number)
case(call, of)
nmod(number, call)
case(you, about)
nmod(call, you)
punct(have, .)
nsubj(win, you)
aux(win, could)
root(ROOT, win)
det(contest, a)
compound(contest, popularity)
obj(win, contest)
case(school, at)
det(school, that)
nmod(contest, school)
case(trouble, without)
det(trouble, any)
obl(win, trouble)
punct(win, .)
parataxis(win, miss)
nsubj(call, Estherson)
ccomp(miss, call)
advmod(call, twice)
punct(win, .)
nsubj(want, she)
root(ROOT, want)
mark(pay, to)
xcomp(want, pay)
iobj(pay, you)
det(visit, a)
obj(pay, visit)
punct(want, .)
nsubj(say, she)
root(ROOT, say)
det(child, the)
nsubj(miss, child)
ccomp(say, miss)
obj(miss, you)
punct(say, .)
advmod(light, apparently)
nsubj(light, you)
cop(light, be)
det(light, the)
advcl(shrugg, light)
case(life, of)
nmod:poss(life, they)
nmod(light, life)
punct(light, '')
punct(shrugg, .)
nsubj(shrugg, Scotty)
root(ROOT, shrugg)
advmod(shrugg, slightly)
punct(light, .)
nsubj(come, Rachel)
root(ROOT, come)
advmod(come, close)
case(bed, to)
det(bed, the)
obl(come, bed)
punct(come, ,)
advmod(come, bent)
mark(kiss, as)
mark(kiss, if)
nsubj(kiss, she)
aux(kiss, would)
advcl(move, kiss)
obj(kiss, he)
punct(move, ,)
advmod(move, then)
conj(come, move)
advmod(move, away)
punct(come, .)
nsubj(frow, she)
aux(frow, be)
root(ROOT, frow)
punct(frow, .)
punct(frow, ``)
det(doctor, that)
nsubj(annoys, doctor)
root(ROOT, annoys)
obj(annoys, I)
punct(annoys, '')
punct(annoys, .)
nsubj(seem, she)
parataxis(annoys, seem)
mark(speak, to)
xcomp(seem, speak)
case(herself, to)
obl(speak, herself)
punct(annoys, .)
punct(annoys, ``)
aux(suppose, do)
nsubj(suppose, you)
root(ROOT, suppose)
nmod:poss(consciousness, he)
compound(consciousness, self)
punct(consciousness, -)
nsubj(characteristic, consciousness)
cop(characteristic, be)
ccomp(suppose, characteristic)
case(professional, of)
det(professional, the)
amod(professional, new)
compound(professional, Negro)
obl(characteristic, professional)
cc(doctor, or)
advmod(doctor, merely)
case(doctor, of)
conj(professional, doctor)
case(general, in)
nmod(doctor, general)
punct(suppose, '')
punct(suppose, ?)
punct(suppose, ?)
nsubj(turn, she)
root(ROOT, turn)
case(he, to)
obl(turn, he)
advmod(turn, again)
punct(turn, .)
punct(turn, ``)
discourse(Mrs., well)
punct(Mrs., ,)
root(ROOT, Mrs.)
flat(Mrs., Charles)
punct(Mrs., --)
root(ROOT, Sally)
punct(Sally, --)
aux(phone, have)
root(ROOT, phone)
advmod(phone, too)
punct(phone, .)
nsubj(worried, she)
cop(worried, be)
advmod(worried, very)
root(ROOT, worried)
punct(worried, '')
punct(worried, .)
nmod:poss(tone, Rachel)
case(Rachel, 's)
nsubj(dry, tone)
cop(dry, be)
parataxis(worried, dry)
punct(worried, .)
punct(worried, ``)
nsubj(say, she)
aux(say, do)
advmod(say, not)
advmod(say, really)
root(ROOT, say)
punct(say, '')
root(ROOT, --)
nsubj(glance, she)
root(ROOT, glance)
advmod(glance, away)
case(floor, at)
det(floor, the)
obl(away, floor)
punct(swoop, ,)
advmod(swoop, then)
conj(glance, swoop)
advmod(swoop, gracefully)
cc(pick, and)
conj(swoop, pick)
compound:prt(pick, up)
obj(pick, one)
case(slipper, of)
nmod:poss(slipper, Scotty)
case(Scotty, 's)
nmod(one, slipper)
punct(glance, .)
punct(glance, ``)
nsubj(mean, I)
parataxis(feel, mean)
punct(feel, ,)
aux(feel, do)
nsubj(feel, you)
root(ROOT, feel)
mark(see, like)
advcl(feel, see)
obj(see, kate)
punct(see, '')
punct(feel, ?)
punct(feel, ?)
nsubj(say, Scotty)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
nsubj(know, I)
aux(know, do)
advmod(know, not)
root(ROOT, know)
punct(know, '')
punct(know, .)
nsubj(true, it)
cop(true, be)
parataxis(know, true)
punct(know, .)
nsubj(do, he)
root(ROOT, do)
advmod(do, not)
punct(do, .)
expl(be, there)
root(ROOT, be)
det(pain, the)
amod(pain, slight)
nsubj(be, pain)
punct(different, ,)
cc(different, but)
nsubj(different, it)
cop(different, be)
det(different, no)
conj(be, different)
case(throbb, from)
det(throbb, the)
obl(different, throbb)
case(head, in)
nmod:poss(head, he)
nmod(throbb, head)
punct(be, .)
punct(be, ``)
discourse(be, well)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, time)
punct(be, ,)
case(case, in)
det(case, any)
obl(be, case)
punct(be, .)
nsubj(wait, we)
aux(wait, will)
root(ROOT, wait)
mark(stronger, till)
nsubj(stronger, you)
cop(stronger, be)
advcl(wait, stronger)
cc(talk, and)
advmod(talk, then)
conj(stronger, talk)
case(it, about)
obl(talk, it)
punct(wait, '')
punct(wait, .)
nsubj(put, she)
parataxis(wait, put)
det(slipper, the)
obj(put, slipper)
advmod(put, neatly)
case(it, by)
obl(mate, it)
aux(mate, be)
parataxis(put, mate)
case(foot, at)
det(foot, the)
obl(mate, foot)
case(bed, of)
det(bed, the)
nmod(foot, bed)
punct(say, .)
nsubj(say, Scotty)
parataxis(wait, say)
punct(wait, ,)
punct(wait, ``)
discourse(kiss, okay)
punct(okay, '')
punct(kiss, .)
det(time, this)
obl:tmod(kiss, time)
nsubj(kiss, Rachel)
root(ROOT, kiss)
obj(kiss, he)
advmod(kiss, lightly)
case(forehead, on)
det(forehead, the)
obl(kiss, forehead)
punct(kiss, .)
nsubj(pleased, Scotty)
cop(pleased, be)
root(ROOT, pleased)
punct(pleased, .)
nmod:poss(father, he)
nsubj(visitor, father)
cop(visitor, be)
det(visitor, a)
amod(visitor, constant)
root(ROOT, visitor)
punct(visitor, .)
nsubj(hear, Scotty)
aux(hear, would)
parataxis(visitor, hear)
det(door, the)
amod(door, front)
obj(hear, door)
case(evening, in)
det(evening, the)
obl(hear, evening)
cc(voice, and)
advmod(voice, then)
nmod:poss(father, he)
nmod:poss(voice, father)
case(father, 's)
amod(voice, deep)
amod(voice, slow)
conj(evening, voice)
punct(hear, ;)
punct(visitor, ;)
nsubj(float, it)
parataxis(visitor, float)
compound:prt(float, up)
det(stair, the)
obj(float, stair)
punct(visitor, .)
punct(visitor, ``)
root(ROOT, how)
cop(how, be)
nsubj(how, Scotty)
punct(how, '')
punct(how, ?)
punct(how, ?)
cc(reply, and)
nmod:poss(reply, Rachel)
case(Rachel, 's)
cc(Virginia, or)
conj(Rachel, Virginia)
case(Virginia, 's)
root(ROOT, reply)
punct(reply, :)
punct(reply, ``)
root(ROOT, better)
punct(better, .)
nsubj(get, he)
aux(get, be)
root(ROOT, get)
obj(get, plenty)
case(rest, of)
nmod(plenty, rest)
punct(get, '')
punct(get, .)
punct(get, ``)
aux(improve, be)
nmod:poss(appetite, he)
nsubj(improve, appetite)
root(ROOT, improve)
punct(improve, '')
punct(improve, ?)
punct(improve, ?)
cc(improve, or)
punct(improve, :)
punct(improve, ``)
aux(get, do)
nsubj(get, he)
root(ROOT, get)
obj(get, exercise)
punct(get, '')
punct(get, ?)
punct(get, ?)
det(exchange, the)
nsubj(invariable, exchange)
cop(invariable, be)
advmod(invariable, almost)
root(ROOT, invariable)
punct(hear, ,)
cc(hear, and)
nsubj(hear, Scotty)
punct(hear, ,)
case(bed, in)
nmod:poss(bed, he)
obl(hear, bed)
punct(hear, ,)
aux(hear, could)
conj(invariable, hear)
det(word, every)
obj(hear, word)
case(it, of)
nmod(word, it)
punct(invariable, .)
nsubj(smile, he)
advmod(smile, never)
root(ROOT, smile)
punct(smile, .)
nsubj(require, it)
root(ROOT, require)
det(energy, a)
obj(require, energy)
nsubj(possess, he)
advmod(longer, no)
advmod(possess, longer)
acl:relcl(energy, possess)
mark(satirical, to)
cop(satirical, be)
xcomp(possess, satirical)
case(father, about)
nmod:poss(father, he)
obl(satirical, father)
punct(require, .)
nmod:poss(father, he)
nsubj(come, father)
aux(come, would)
root(ROOT, come)
advmod(come, upstairs)
cc(stand, and)
conj(come, stand)
obj(stand, self)
punct(stand, -)
advmod(foot, consciously)
case(foot, at)
det(foot, the)
obl(stand, foot)
case(bed, of)
det(bed, the)
nmod(foot, bed)
cc(look, and)
conj(come, look)
case(son, at)
nmod:poss(son, he)
obl(look, son)
punct(come, .)
case(pause, after)
det(pause, a)
obl(ask, pause)
punct(ask, ,)
case(which, during)
obl(study, which)
nsubj(study, he)
acl:relcl(pause, study)
nmod:poss(face, Scotty)
case(Scotty, 's)
obj(study, face)
mark(there, as)
mark(there, if)
nsubj(there, Scotty)
cop(there, be)
advmod(there, not)
advcl(study, there)
cc(study, and)
aux(study, could)
advmod(study, not)
conj(there, study)
obj(study, he)
advmod(study, too)
punct(ask, ,)
nsubj(ask, Mr.)
flat(Mr., McKinley)
aux(ask, would)
root(ROOT, ask)
det(question, the)
amod(question, same)
obj(ask, question)
nsubj(ask, he)
aux(ask, have)
acl:relcl(question, ask)
advmod(ask, downstairs)
punct(reply, .)
nsubj(reply, Scotty)
aux(reply, would)
parataxis(ask, reply)
advmod(reply, softly)
cc(father, and)
nmod:poss(father, he)
conj(softly, father)
punct(reply, ,)
advmod(ask, apologetically)
punct(ask, ,)
aux(ask, would)
conj(reply, ask)
obj(ask, he)
mark(repeat, to)
xcomp(ask, repeat)
punct(ask, .)
punct(ask, ``)
nsubj(eat, I)
aux(eat, be)
root(ROOT, eat)
obj(eat, more)
punct(eat, '')
punct(eat, ,)
nsubj(say, he)
aux(say, would)
parataxis(eat, say)
punct(eat, .)
cc(say, or)
punct(eat, :)
punct(eat, ``)
nsubj(walk, I)
root(ROOT, walk)
case(house, around)
det(house, the)
obl(walk, house)
det(lot, a)
obl:npmod(walk, lot)
punct(walk, '')
punct(walk, .)
punct(walk, ``)
advmod(get, perhaps)
nsubj(get, you)
aux(get, should)
root(ROOT, get)
compound:prt(get, out)
det(little, a)
obj(get, little)
punct(get, '')
punct(get, .)
punct(get, ``)
nsubj(suppose, I)
aux(suppose, be)
advmod(suppose, not)
root(ROOT, suppose)
mark(yet, to)
advmod(suppose, yet)
punct(suppose, '')
punct(suppose, .)
nsubj(irritate, he)
cop(irritate, be)
advmod(irritate, not)
parataxis(suppose, irritate)
punct(suppose, .)
nsubj(mind, he)
aux(mind, do)
advmod(mind, not)
root(ROOT, mind)
det(question, the)
amod(question, useless)
punct(question, ,)
amod(question, kindly)
obj(mind, question)
punct(mind, .)
nsubj(look, he)
root(ROOT, look)
case(face, at)
det(face, the)
amod(face, line)
obl(look, face)
case(interest, with)
amod(interest, vague)
obl(look, interest)
punct(look, ;)
punct(look, ;)
nsubj(feel, he)
parataxis(look, feel)
nsubj(noting, he)
aux(noting, be)
ccomp(feel, noting)
obj(noting, it)
punct(feel, ,)
mark(something, as)
mark(something, if)
nsubj(something, it)
cop(something, be)
advcl(noting, something)
nsubj(think, he)
aux(think, might)
acl:relcl(something, think)
obl(think, about)
mark(grow, when)
nsubj(grow, he)
advcl(examine, grow)
advmod(grow, stronger)
punct(examine, .)
nsubj(examine, Mr.)
flat(Mr., McKinley)
parataxis(look, examine)
obj(examine, everything)
case(care, with)
amod(care, critical)
nmod(everything, care)
punct(examine, ,)
advcl(examine, seek)
obj(seek, something)
obj(seek, material)
mark(blame, to)
acl(material, blame)
case(illness, for)
nmod:poss(son, he)
nmod:poss(illness, son)
case(son, 's)
obl(blame, illness)
punct(look, .)
punct(look, ``)
aux(get, have)
nsubj(get, you)
root(ROOT, get)
amod(blanket, enough)
obj(get, blanket)
punct(get, '')
punct(get, ?)
punct(get, ?)
cc(time, and)
det(time, another)
root(ROOT, time)
punct(time, ,)
case(accusation, without)
nmod(time, accusation)
punct(time, :)
punct(time, ``)
nsubj(wear, you)
advmod(wear, never)
root(ROOT, wear)
det(scarf, that)
obj(wear, scarf)
nsubj(buy, I)
acl:relcl(scarf, buy)
obj(buy, you)
punct(buy, '')
punct(wear, .)
advmod(seem, where)
nmod:poss(edge, they)
amod(edge, sharp)
nsubj(seem, edge)
acl:relcl(scarf, seem)
xcomp(seem, restless)
mark(thrust, as)
compound(wave, sea)
nsubj(thrust, wave)
advcl(seem, thrust)
obj(thrust, themselves)
advmod(thrust, upward)
case(motion, in)
amod(motion, angry)
obl(thrust, motion)
punct(sit, ,)
nsubj(sit, Papa)
punct(Papa, -)
flat(Papa, san)
parataxis(wear, sit)
obl:npmod(like, glacier)
punct(like, -)
xcomp(sit, like)
punct(solidity, ,)
nmod:poss(solidity, he)
amod(solidity, smooth)
obj(sit, solidity)
punct(solidity, ,)
nmod:poss(immobility, he)
amod(immobility, very)
conj(solidity, immobility)
acl(immobility, defy)
det:predet(turmoil, all)
det(turmoil, the)
obj(defy, turmoil)
case(he, about)
nmod(turmoil, he)
punct(wear, .)
punct(wear, ``)
nmod:poss(objective, we)
nsubj(say, objective)
punct(objective, '')
punct(say, ,)
det(colonel, the)
nsubj(say, colonel)
aux(say, have)
root(ROOT, say)
det(day, that)
obl:tmod(say, day)
case(briefing, of)
det(briefing, the)
nmod(day, briefing)
punct(Papa-san, ,)
punct(Papa-san, ``)
cop(Papa-san, be)
ccomp(say, Papa-san)
punct(Papa-san, '')
punct(sit, .)
expl(sit, there)
det(objective, the)
nsubj(sit, objective)
ccomp(say, sit)
punct(sit, ,)
advcl(sit, brooding)
advmod(all, over)
obl(brooding, all)
punct(sit, .)
root(ROOT, Gouge)
punct(Gouge, ,)
conj(Gouge, burn)
punct(burn, ,)
obj(burn, blast)
punct(Gouge, ,)
conj(Gouge, insult)
obj(insult, it)
mark(would, as)
nsubj(would, they)
advcl(insult, would)
punct(Gouge, ,)
aux(take, could)
nsubj(take, anyone)
advmod(take, really)
parataxis(Gouge, take)
obj(take, Papa-san)
punct(Gouge, ?)
punct(Gouge, ?)
case(hulk, between)
det(hulk, the)
amod(hulk, ponderous)
obl(hide, hulk)
cc(himself, and)
conj(hulk, himself)
punct(hide, ,)
case(valley, in)
det(valley, the)
obl(hide, valley)
case(which, over)
obl(reign, which)
nsubj(reign, Papa-)
nsubj(reign, san)
acl:relcl(valley, reign)
punct(hide, ,)
nsubj(hide, man)
aux(hide, have)
root(ROOT, hide)
amod(explosive, high)
obj(hide, explosive)
punct(trap, ,)
compound(trap, booby)
conj(explosive, trap)
punct(mine, ,)
cc(mine, and)
conj(explosive, mine)
punct(hide, .)
det(valley, the)
amod(valley, rape)
nsubj(womb, valley)
cop(womb, be)
det(womb, a)
amod(womb, pregnant)
root(ROOT, womb)
acl(womb, await)
obj(await, abortion)
punct(womb, .)
case(slope, on)
det(slope, the)
amod(slope, forward)
obl(stretch, slope)
case(front, in)
nmod(slope, front)
case(post, of)
nmod:poss(post, he)
amod(post, own)
nmod(front, post)
root(ROOT, stretch)
nummod(row, two)
obj(stretch, row)
case(wire, of)
amod(wire, barb)
nmod(row, wire)
punct(stretch, .)
case(coil, at)
det(slope, the)
nmod:poss(coil, slope)
case(slope, 's)
compound(coil, base)
nsubj(stretch, coil)
case(concertina, of)
nmod(coil, concertina)
root(ROOT, stretch)
case(range, out)
case(range, of)
compound(range, eye)
obl(stretch, range)
case(tangle, like)
det(tangle, a)
amod(tangle, wild)
obl(stretch, tangle)
case(hoop, of)
nmod:poss(hoop, child)
case(child, 's)
nmod(tangle, hoop)
punct(stop, ,)
acl(tangle, stop)
advmod(stop, simultaneously)
punct(poise, ,)
advmod(poise, weirdly)
conj(stop, poise)
mark(await, as)
mark(await, if)
advcl(poise, await)
det(magic, the)
obj(await, magic)
case(touch, of)
det(child, the)
nmod:poss(touch, child)
case(child, 's)
nmod(magic, touch)
mark(start, to)
acl(touch, start)
obj(start, they)
det(they, all)
xcomp(start, roll)
advmod(roll, again)
punct(poise, .)
advmod(still, Closer)
advmod(barricade, still)
punct(barricade, ,)
amod(barricade, regular)
root(ROOT, barricade)
case(wire, of)
amod(wire, barb)
nmod(barricade, wire)
acl(barricade, hang)
case(support, on)
compound(support, timber)
obl(hang, support)
punct(barricade, .)
cop(labor, be)
nsubj(labor, it)
det(labor, all)
amod(labor, vain)
root(ROOT, labor)
punct(labor, ?)
punct(labor, ?)
nsubj(clean, who)
aux(clean, would)
root(ROOT, clean)
compound:prt(clean, up)
det(mess, the)
obj(clean, mess)
mark(over, when)
det(war, the)
nsubj(over, war)
cop(over, be)
advcl(clean, over)
punct(clean, ?)
punct(clean, ?)
advcl(turn, smile)
case(thought, at)
nmod:poss(thought, he)
amod(thought, quixotic)
obl(smile, thought)
punct(turn, ,)
nsubj(turn, Warren)
root(ROOT, turn)
advmod(turn, back)
case(opening, from)
det(opening, the)
obl(turn, opening)
cc(light, and)
conj(turn, light)
det(cigarette, a)
obj(light, cigarette)
mark(sit, before)
advcl(light, sit)
advmod(sit, down)
punct(turn, . )
obl:tmod(go, tonight)
det(group, a)
nsubj(go, group)
case(man, of)
nmod(group, man)
punct(group, ,)
compound(night, tomorrow)
nmod:tmod(group, night)
nsubj(himself, he)
nmod:npmod(night, himself)
punct(go, ,)
aux(go, would)
root(ROOT, go)
advmod(go, out)
advmod(go, there)
advmod(go, somewhere)
cc(wait, and)
conj(go, wait)
punct(go, .)
mark(be, if)
nsubj(be, he)
advcl(there, be)
mark(go, to)
xcomp(be, go)
case(White, with)
obl(go, White)
punct(there, ,)
nsubj(there, he)
aux(there, would)
cop(there, be)
advmod(there, out)
root(ROOT, there)
nummod(day, two)
obl:tmod(there, day)
punct(there, ,)
advmod(listen, not)
advmod(listen, just)
conj(there, listen)
case(dark, in)
det(dark, the)
obl(listen, dark)
case(point, at)
det(point, some)
obl(listen, point)
case(here, between)
nmod(point, here)
cc(Papa-san, and)
conj(here, Papa-san)
punct(move, ,)
cc(move, but)
conj(listen, move)
advmod(deeper, ever)
advmod(move, deeper)
case(land, into)
compound(land, enemy)
obl(move, land)
punct(move, --)
case(Papa-san, behind)
obl(move, Papa-san)
punct(Papa-san, --)
nmod:npmod(Papa-san, itself)
punct(there, .)
root(ROOT, be)
nsubj(be, this)
obj(expect, what)
nsubj(expect, he)
aux(expect, have)
ccomp(be, expect)
punct(be, ?)
punct(be, ?)
nsubj(realize, he)
aux(realize, have)
advmod(realize, not)
root(ROOT, realize)
mark(be, that)
expl(be, there)
aux(be, would)
ccomp(realize, be)
advmod(much, so)
amod(time, much)
nsubj(be, time)
mark(think, to)
acl(time, think)
punct(be, ,)
advmod(many, so)
amod(lull, many)
obj(think, lull)
punct(realize, .)
advmod(forget, somehow)
nsubj(forget, he)
aux(forget, have)
root(ROOT, forget)
obj(forget, what)
nsubj:pass(tell, he)
aux(tell, must)
aux(tell, have)
aux:pass(tell, be)
ccomp(forget, tell)
punct(forget, ,)
mark(activity, that)
nsubj(activity, combat)
cop(activity, be)
det(activity, a)
amod(activity, intermittent)
ccomp(tell, activity)
punct(forget, .)
advmod(know, now)
nsubj(know, he)
root(ROOT, know)
mark(have, that)
det(moment, the)
nsubj(have, moment)
acl(moment, illuminate)
case(vision, by)
det(vision, the)
obl(illuminate, vision)
case(train, on)
det(train, the)
nmod(vision, train)
aux(have, would)
ccomp(know, have)
mark(approach, to)
aux:pass(approach, be)
xcomp(have, approach)
punct(know, .)
nsubj(take, it)
aux(take, could)
root(ROOT, take)
obj(take, place)
compound(night, tomorrow)
obl:tmod(take, night)
punct(occur, ,)
cc(occur, or)
nsubj(occur, it)
aux(occur, might)
conj(take, occur)
obj(occur, month)
case(now, from)
obl(occur, now)
punct(take, .)
expl(be, there)
root(ROOT, be)
advmod(be, just)
advmod(much, too)
amod(time, much)
nsubj(be, time)
punct(be, .)
root(ROOT, time)
mark(become, to)
acl(time, become)
xcomp(become, afraid)
punct(time, .)
nmod:poss(suggestion, White)
case(White, 's)
nsubj(flatter, suggestion)
ccomp(afraid, flatter)
punct(like, ,)
cc(like, but)
nsubj(like, he)
aux(like, do)
advmod(like, not)
conj(time, like)
det(identity, the)
obj(like, identity)
punct(time, .)
nsubj(spill, he)
aux(spill, do)
advmod(spill, not)
root(ROOT, spill)
compound:prt(spill, over)
case(hatred, with)
obl(spill, hatred)
case(enemy, for)
det(enemy, the)
nmod(hatred, enemy)
punct(spill, .)
nsubj(see, he)
aux(see, have)
advmod(see, not)
advmod(see, even)
root(ROOT, see)
obj(see, he)
advmod(press, yet)
xcomp(see, press)
nmod:poss(cigarette, he)
obj(press, cigarette)
compound:prt(press, out)
case(earth, in)
det(earth, the)
obl(press, earth)
punct(see, ,)
nsubj(walk, Warren)
parataxis(see, walk)
case(slit, to)
det(slit, the)
obl(walk, slit)
cc(scan, and)
conj(walk, scan)
det(hill, the)
amod(hill, jag)
obj(scan, hill)
punct(see, .)
nsubj(see, he)
root(ROOT, see)
det(life, no)
obj(see, life)
punct(stand, ,)
cc(stand, but)
advmod(stand, still)
conj(see, stand)
advmod(stand, there)
case(time, for)
det(time, a)
obl(stand, time)
acl(time, peer)
case(hill, at)
det(hill, the)
amod(hill, unlovely)
obl(peer, hill)
punct(hill, ,)
nmod:poss(gaze, he)
conj(hill, gaze)
advmod(return, continually)
conj(peer, return)
case(Papa-san, to)
obl(return, Papa-san)
punct(see, .)
nsubj(come, he)
aux(come, have)
root(ROOT, come)
advmod(come, here)
mark(test, in)
fixed(in, order)
mark(test, to)
advcl(come, test)
obj(test, himself)
punct(come, .)
mark(unsettled, while)
nsubj(unsettled, most)
case(belief, of)
nmod:poss(belief, he)
nmod(most, belief)
cop(unsettled, be)
advmod(unsettled, still)
advcl(know, unsettled)
punct(know, ,)
nsubj(know, he)
root(ROOT, know)
mark(believe, that)
nsubj(believe, he)
aux(believe, do)
advmod(believe, not)
ccomp(know, believe)
mark(kill, in)
advcl(believe, kill)
punct(know, .)
advmod(here, yet)
punct(here, ,)
nsubj(here, he)
cop(here, be)
root(ROOT, here)
punct(here, .)
nsubj(come, he)
aux(come, have)
root(ROOT, come)
mark(live, because)
nsubj(live, he)
aux(live, could)
advmod(live, not)
advcl(come, live)
compound:prt(live, out)
nmod:poss(life, he)
obj(live, life)
advcl(live, feel)
mark(coward, that)
nsubj(coward, he)
aux(coward, have)
cop(coward, be)
det(coward, a)
ccomp(feel, coward)
punct(come, .)
expl(be, there)
root(ROOT, be)
nummod(man, ten)
nsubj(be, man)
case(patrol, on)
det(patrol, the)
nmod(man, patrol)
obj(lead, which)
nsubj(lead, Sergeant)
flat(Sergeant, prevot)
acl:relcl(man, lead)
compound:prt(lead, out)
advmod(night, that)
amod(night, next)
obl:tmod(lead, night)
punct(be, .)
det(ROK, the)
compound(ROK, beam)
nsubj(carry, ROK)
aux(carry, be)
root(ROOT, carry)
det(gun, a)
nummod(caliber, thirty)
punct(caliber, -)
compound(gun, caliber)
compound(gun, machine)
obj(carry, gun)
punct(carry, ;)
punct(carry, ;)
det(man, another)
nsubj(lug, man)
parataxis(carry, lug)
det(tripod, the)
obj(lug, tripod)
cc(box, and)
det(box, a)
conj(tripod, box)
case(ammunition, of)
nmod(box, ammunition)
punct(lug, .)
nsubj(carry, Warren)
cc(White, and)
conj(Warren, White)
det(White, each)
conj(carry, carry)
punct(carry, ,)
case(addition, in)
obl(carry, addition)
case(weapon, to)
nmod:poss(weapon, they)
amod(weapon, own)
nmod(addition, weapon)
cc(ammo, and)
conj(weapon, ammo)
punct(box, ,)
det(box, a)
conj(weapon, box)
case(ammo, of)
nmod(box, ammo)
case(gun, for)
det(ROK, the)
nmod:poss(gun, ROK)
case(ROK, 's)
compound(gun, machine)
nmod(box, gun)
punct(carry, .)
nsubj(carry, other)
root(ROOT, carry)
amod(clip, extra)
obj(carry, clip)
case(Rifle, for)
det(Rifle, the)
compound(Rifle, brow)
compound(Rifle, Automatic)
obl(carry, Rifle)
punct(Rifle, ,)
nsubj(hand, which)
cop(hand, be)
case(hand, in)
det(hand, the)
acl:relcl(Rifle, hand)
case(mexican, of)
det(mexican, a)
amod(mexican, little)
nmod(hand, mexican)
acl(mexican, name)
xcomp(name, Martinez)
punct(carry, .)
nsubj(brief, prevot)
aux(brief, have)
root(ROOT, brief)
det(man, the)
nummod(man, two)
amod(man, new)
obj(brief, man)
det(afternoon, that)
obl:tmod(brief, afternoon)
punct(brief, .)
punct(brief, ``)
nsubj(sit, we)
advmod(sit, just)
root(ROOT, sit)
xcomp(sit, quiet)
cc(wait, and)
conj(sit, wait)
punct(sit, '')
punct(sit, ,)
nsubj(say, prevot)
aux(say, have)
parataxis(sit, say)
punct(sit, .)
punct(sit, ``)
cop(sure, be)
root(ROOT, sure)
det(man, the)
nsubj(be, man)
amod(man, nearest)
nsubj(awake, you)
cop(awake, be)
ccomp(nearest, awake)
punct(sure, .)
mark(show, if)
nsubj(show, Joe)
aux(show, do)
advmod(show, not)
advcl(be, show)
compound:prt(show, up)
punct(sure, ,)
nsubj(be, we)
aux(be, will)
advmod(be, all)
parataxis(sure, be)
parataxis(sure, back)
advmod(back, here)
case(hour, at)
nummod(hour, 0600)
obl(here, hour)
punct(sure, .)
advmod(hold, otherwise)
punct(hold, ,)
nsubj(hold, we)
root(ROOT, hold)
det(reception, a)
obj(hold, reception)
punct(hold, .)
advmod(pull, then)
nsubj(pull, we)
parataxis(hold, pull)
compound:prt(pull, out)
case(cover, under)
nmod:poss(cover, we)
compound(cover, mortar)
cc(artillery, and)
conj(mortar, artillery)
obl(pull, cover)
punct(pull, ,)
cc(pull, but)
nsubj(pull, nobody)
conj(pull, pull)
compound:prt(pull, out)
mark(say, until)
nsubj(say, I)
advcl(pull, say)
advmod(say, so)
punct(hold, .)
root(ROOT, remember)
obj(say, what)
nsubj(say, I)
ccomp(remember, say)
mark(go, about)
advcl(say, go)
advmod(go, out)
mark(get, to)
advcl(go, get)
obj(get, anybody)
xcomp(get, leave)
obl(leave, behind)
punct(remember, ?)
punct(remember, ?)
nsubj(hold, that)
advmod(hold, still)
root(ROOT, hold)
punct(hold, .)
nsubj(bring, we)
root(ROOT, bring)
advmod(bring, back)
det(dead, all)
obj(bring, dead)
cc(wounded, and)
conj(dead, wounded)
punct(wounded, '')
punct(bring, .)
case(hour, at)
nummod(hour, 2130)
obl(pass, hour)
nsubj(pass, they)
aux(pass, have)
conj(bring, pass)
case(wire, through)
det(wire, the)
amod(wire, barb)
obl(pass, wire)
case(point, at)
det(point, the)
obl(pass, point)
case(departure, of)
nmod(point, departure)
punct(bring, .)
advmod(begin, then)
root(ROOT, begin)
det(journey, the)
obj(begin, journey)
case(field, through)
nmod:poss(own, they)
obl(begin, own)
compound(field, mine)
obl(begin, field)
punct(begin, .)
root(ROOT, Mines)
punct(Mines, .)
nsubj(kinder, Ours)
cop(kinder, be)
ccomp(say, kinder)
case(theirs, than)
obl(kinder, theirs)
punct(say, ,)
nsubj(say, some)
root(ROOT, say)
punct(say, .)
nsubj(set, they)
root(ROOT, set)
amod(betty, bouncing)
obj(set, betty)
mark(jump, to)
advcl(set, jump)
cc(explode, and)
conj(jump, explode)
case(level, at)
compound(level, testicle)
obl(jump, level)
mark(have, while)
nsubj(have, we)
advmod(mercifully, more)
advmod(have, mercifully)
advcl(set, have)
obj(have, they)
xcomp(have, go)
advmod(go, off)
case(head, at)
det(head, the)
obl(go, head)
punct(set, .)
root(ROOT, Mines)
punct(Mines, .)
amod(one, big)
root(ROOT, one)
cc(little, and)
conj(one, little)
punct(one, .)
det(box, the)
amod(box, crude)
compound(box, wooden)
nsubj(disk, box)
case(enemy, of)
det(enemy, the)
nmod(box, enemy)
punct(box, ,)
nmod:poss(disk, we)
advmod(turn, nicely)
amod(disk, turn)
amod(metal, gray)
compound(disk, metal)
root(ROOT, disk)
punct(disk, .)
cc(defy, but)
nsubj(defy, theirs)
root(ROOT, defy)
det(detector, the)
obj(defy, detector)
punct(defy, .)
root(ROOT, Mines)
punct(Mines, . )
det(foot, a)
obl:npmod(misplace, foot)
advcl(missing, misplace)
punct(missing, ,)
det(leg, a)
nsubj(missing, leg)
root(ROOT, missing)
punct(missing, .)
root(ROOT, Mines)
punct(Mines, .)
det(size, all)
root(ROOT, size)
punct(size, :)
amod(one, big)
appos(size, one)
punct(one, ,)
nsubj(wire, some)
amod(one, wire)
mark(set, to)
xcomp(wire, set)
compound:prt(set, off)
det(field, a)
amod(field, whole)
obj(set, field)
punct(one, ,)
amod(one, little)
obj(set, one)
punct(one, ,)
compound(grenade, hand)
compound(size, grenade)
list(one, size)
punct(size, .)
amod(trap, Booby)
root(ROOT, trap)
mark(fill, to)
acl(trap, fill)
det(head, the)
obj(fill, head)
case(chunk, with)
obl(fill, chunk)
case(metal, of)
nmod(chunk, metal)
punct(trap, .)
nsubj(try, Warren)
root(ROOT, try)
mark(shake, to)
xcomp(try, shake)
compound:prt(shake, off)
det(jumble, the)
obj(shake, jumble)
case(fear, of)
nmod:poss(fear, he)
nmod(jumble, fear)
mark(look, by)
advcl(shake, look)
case(sky, at)
det(sky, the)
obl(look, sky)
punct(try, .)
nsubj(dark, it)
cop(dark, be)
root(ROOT, dark)
punct(dark, .)
nsubj(say, prevot)
aux(say, have)
root(ROOT, say)
mark(bounced, that)
det(searchlight, the)
nsubj:pass(bounced, searchlight)
aux(bounced, would)
aux:pass(bounced, be)
ccomp(say, bounced)
compound:prt(bounced, off)
det(cloud, the)
obj(bounced, cloud)
case(hour, at)
nummod(hour, 2230)
obl(bounced, hour)
punct(bounced, ,)
punct(bounced, ``)
nsubj(give, which)
parataxis(bounced, give)
iobj(give, we)
obj(give, time)
mark(settle, to)
aux:pass(settle, get)
acl(time, settle)
case(position, in)
obl(settle, position)
punct(settle, '')
punct(give, .)
mark(man, because)
nsubj(man, they)
cop(man, be)
amod(man, new)
advcl(give, man)
cc(sure, and)
mark(sure, to)
cop(sure, be)
conj(man, sure)
mark(lose, that)
nsubj:pass(lose, they)
aux(lose, do)
advmod(lose, not)
aux:pass(lose, get)
ccomp(sure, lose)
punct(place, ,)
nsubj(place, prevot)
aux(place, have)
ccomp(sure, place)
obj(place, Warren)
cc(White, and)
conj(Warren, White)
case(center, in)
det(center, the)
obl(place, center)
case(patrol, of)
det(patrol, the)
nmod(center, patrol)
mark(file, as)
nsubj(file, it)
advcl(place, file)
compound:prt(file, out)
punct(say, .)
nmod:poss(eye, he)
nsubj(hear, eye)
advmod(fix, now)
advcl(hear, fix)
case(figure, on)
nmod:poss(figure, White)
case(White, 's)
amod(figure, solid)
obl(fix, figure)
punct(hear, ,)
nsubj(hear, Warren)
aux(hear, could)
root(ROOT, hear)
case(he, behind)
obl(hear, he)
det(tread, the)
obj(hear, tread)
case(another, of)
nmod(tread, another)
punct(hear, .)
nsubj(hear, he)
aux(hear, could)
advmod(hear, also)
root(ROOT, hear)
det(stream, the)
obj(hear, stream)
obj(see, which)
nsubj(see, he)
aux(see, have)
acl:relcl(stream, see)
case(position, from)
nmod:poss(position, he)
obl(see, position)
punct(hear, .)
nsubj(go, they)
aux(go, be)
root(ROOT, go)
mark(follow, to)
xcomp(go, follow)
obj(follow, it)
case(part, for)
obl(follow, part)
case(journey, of)
nmod:poss(journey, they)
nmod(part, journey)
punct(go, .)
punct(go, ``)
nsubj(safe, it)
cop(safe, be)
root(ROOT, safe)
punct(safe, '')
punct(safe, ,)
nsubj(say, prevot)
aux(say, have)
parataxis(safe, say)
punct(say, ,)
punct(safe, ``)
cc(provide, and)
nsubj(provide, it)
conj(safe, provide)
obj(provide, cover)
case(noise, for)
nmod:poss(noise, we)
nmod(cover, noise)
punct(provide, '')
punct(pick, .)
advmod(pick, Soon)
nsubj(pick, they)
aux(pick, be)
parataxis(safe, pick)
nmod:poss(way, they)
obj(pick, way)
case(edge, along)
det(edge, the)
obl(pick, edge)
case(stream, of)
det(stream, the)
nmod(edge, stream)
nsubj(glow, which)
acl:relcl(stream, glow)
case(night, in)
det(night, the)
obl(glow, night)
punct(safe, .)
case(right, on)
nmod:poss(right, they)
obl(rise, right)
root(ROOT, rise)
det(embankment, the)
obj(rise, embankment)
xcomp(rise, cover)
case(brush, with)
obl(cover, brush)
cc(tree, and)
conj(brush, tree)
punct(rise, .)
mark(extend, if)
det(branch, a)
nsubj(extend, branch)
advcl(hold, extend)
compound:prt(extend, out)
advmod(far, too)
advmod(extend, far)
punct(hold, ,)
det(man, each)
nsubj(hold, man)
root(ROOT, hold)
obj(hold, it)
advmod(hold, back)
case(next, for)
det(next, the)
obl(hold, next)
punct(warn, ,)
cc(warn, and)
mark(meet, if)
nsubj(meet, they)
advcl(warn, meet)
det(overhang, a)
amod(overhang, low)
obj(meet, overhang)
punct(warn, ,)
nsubj(warn, each)
conj(hold, warn)
det(other, the)
obj(warn, other)
punct(hold, .)
advmod(advanced, thus)
punct(advanced, ,)
advmod(advanced, stealthily)
nsubj(advanced, they)
root(ROOT, advanced)
advmod(advanced, upstream)
punct(advanced, ;)
punct(advanced, ;)
advmod(turn, then)
nsubj(turn, they)
parataxis(advanced, turn)
case(right, to)
det(right, the)
obl(turn, right)
punct(climb, ,)
conj(turn, climb)
det(embankment, the)
obj(climb, embankment)
punct(walk, ,)
cc(walk, and)
conj(turn, walk)
case(valley, into)
det(valley, the)
obl(walk, valley)
advmod(walk, again)
punct(advanced, .)
expl(be, there)
root(ROOT, be)
det(cover, no)
nsubj(be, cover)
advmod(be, here)
punct(cover, ,)
advmod(grass, only)
conj(cover, grass)
acl(cover, sigh)
case(leg, against)
compound(leg, pant)
punct(leg, -)
obl(sigh, leg)
punct(be, .)
cc(strip, and)
case(sigh, with)
det(sigh, each)
obl(strip, sigh)
punct(strip, ,)
case(whip, like)
det(whip, a)
obl(strip, whip)
case(hand, in)
det(hand, the)
nmod(whip, hand)
case(expert, of)
det(expert, a)
nmod(hand, expert)
punct(strip, ,)
det(grass, the)
nsubj(strip, grass)
root(ROOT, strip)
obj(strip, something)
case(Warren, from)
obl(strip, Warren)
punct(strip, .)
det(whir, the)
amod(whir, gentle)
nsubj(leave, whir)
case(footstep, of)
det(footstep, each)
nmod(whir, footstep)
root(ROOT, leave)
obj(leave, he)
advmod(naked, more)
xcomp(leave, naked)
case(before, than)
obl(naked, before)
punct(leave, ,)
mark(feel, until)
nsubj(feel, he)
advcl(leave, feel)
nmod:poss(tremble, he)
amod(tremble, unprotected)
compound(tremble, flesh)
xcomp(feel, tremble)
punct(feel, ,)
conj(tremble, chill)
case(sound, by)
det(sound, each)
amod(sound, new)
obl(chill, sound)
punct(leave, .)
det(shape, the)
nsubj(lack, shape)
case(man, of)
det(man, the)
nmod(shape, man)
case(he, ahead)
case(he, of)
nmod(man, he)
root(ROOT, lack)
obj(lack, solidity)
punct(lack, ,)
mark(strip, as)
mark(strip, if)
det(whip, the)
nsubj(strip, whip)
aux(strip, have)
advcl(lack, strip)
obj(strip, they)
case(flesh, of)
nmod:poss(flesh, they)
amod(flesh, very)
obl(strip, flesh)
punct(lack, .)
det(form, the)
amod(form, dark)
nsubj(move, form)
root(ROOT, move)
case(mourner, like)
obl(move, mourner)
case(pilgrimage, on)
det(pilgrimage, some)
amod(pilgrimage, nocturnal)
obl(move, pilgrimage)
punct(pilgrimage, ,)
nmod:poss(unse, they)
compound(unse, dirge)
appos(pilgrimage, unse)
case(want, for)
obl(move, want)
case(chord, of)
amod(chord, vocal)
nmod(want, chord)
punct(move, .)
det(tree, the)
amod(tree, warp)
punct(tree, ,)
amod(tree, break)
nsubj(assume, tree)
case(valley, in)
det(valley, the)
nmod(tree, valley)
root(ROOT, assume)
compound(like, wraith)
punct(like, -)
amod(shape, like)
obj(assume, shape)
punct(assume, .)
nsubj(be, clump)
case(brush, of)
nmod(clump, brush)
obj(pass, that)
nsubj(pass, they)
acl:relcl(clump, pass)
root(ROOT, be)
advmod(many, so)
amod(demon, many)
amod(demon, enchain)
nsubj(be, demon)
acl(demon, strain)
case(anger, in)
obl(strain, anger)
mark(tear, to)
advcl(strain, tear)
cc(gnaw, and)
conj(tear, gnaw)
case(bone, on)
nmod:poss(bone, he)
obl(gnaw, bone)
punct(be, .)
advcl(leer, loom)
case(all, over)
obl(loom, all)
punct(leer, ,)
nsubj(leer, Papa)
punct(Papa, -)
flat(Papa, san)
root(ROOT, leer)
compound:prt(leer, down)
case(he, at)
obl(leer, he)
punct(leer, ,)
advcl(leer, threaten)
det(malevolency, a)
nummod(malevolency, hundred)
amod(malevolency, hidden)
obj(threaten, malevolency)
punct(leer, .)
advmod(flash, off)
case(distance, in)
det(distance, the)
obl(flash, distance)
det(searchlight, a)
nsubj(flash, searchlight)
root(ROOT, flash)
advmod(flash, on)
punct(flash, ,)
nsubj(beam, it)
cop(beam, be)
parataxis(flash, beam)
acl(beam, slash)
det(sky, the)
obj(slash, sky)
punct(flash, .)
det(ray, the)
amod(ray, sharp)
nsubj:pass(absorb, ray)
aux:pass(absorb, be)
root(ROOT, absorb)
case(cloud, by)
det(cloud, a)
obl(absorb, cloud)
punct(absorb, ,)
advmod(reflect, then)
advcl(absorb, reflect)
case(earth, to)
det(earth, the)
obl(reflect, earth)
case(radiance, in)
det(radiance, a)
amod(radiance, softer)
punct(radiance, ,)
amod(radiance, diffuse)
obl(reflect, radiance)
punct(absorb, .)
advmod(have, somewhere)
case(there, over)
obl(somewhere, there)
det(patrol, another)
nsubj(have, patrol)
root(ROOT, have)
obj(have, need)
case(light, of)
nmod(need, light)
punct(have, .)
nsubj(think, Warren)
parataxis(have, think)
case(man, of)
det:predet(man, all)
det(man, the)
obl(think, man)
case(man, out)
det(night, that)
obl:tmod(leave, night)
nsubj(leave, who)
punct(leave, ,)
case(himself, like)
obl(leave, himself)
punct(leave, ,)
aux(leave, have)
ccomp(think, leave)
nmod:poss(ridge, they)
amod(ridge, protective)
obj(leave, ridge)
cc(pick, and)
punct(leave, --)
nsubj(pick, fear)
acl(fear, work)
case(gut, at)
nmod:poss(gut, they)
obl(work, gut)
punct(pick, --)
conj(leave, pick)
nmod:poss(way, they)
obj(pick, way)
case(area, into)
det(area, the)
obl(pick, area)
advmod(pick, beyond)
punct(have, .)
case(east, from)
det(east, the)
obl(strip, east)
case(coast, to)
det(coast, the)
amod(coast, west)
nmod(east, coast)
case(peninsula, of)
det(peninsula, the)
compound(peninsula, Korean)
nmod(coast, peninsula)
cop(strip, be)
det(strip, a)
root(ROOT, strip)
case(land, of)
nmod(strip, land)
case(which, in)
obl(moment, which)
compound(fill, fear)
punct(fill, -)
amod(man, fill)
nsubj(moment, man)
cop(moment, be)
case(moment, at)
det(moment, that)
amod(moment, same)
acl:relcl(strip, moment)
advmod(crawl, furtively)
acl(moment, crawl)
case(night, through)
det(night, the)
obl(crawl, night)
punct(sit, ,)
conj(crawl, sit)
case(anticipation, in)
amod(anticipation, sweaty)
obl(sit, anticipation)
case(movement, of)
det(movement, any)
nmod(anticipation, movement)
cc(sound, or)
conj(movement, sound)
punct(shout, ,)
cc(shout, or)
conj(sit, shout)
case(flash, amidst)
amod(flash, confuse)
compound(flash, rifle)
obl(shout, flash)
cc(blast, and)
compound(blast, muzzle)
conj(flash, blast)
punct(strip, .)
nmod:poss(arm, White)
case(White, 's)
nsubj(go, arm)
root(ROOT, go)
advmod(go, up)
cc(raise, and)
nsubj(raise, Warren)
conj(go, raise)
nmod:poss(own, he)
obj(raise, own)
punct(go, .)
det(patrol, the)
nsubj(stop, patrol)
aux(stop, be)
root(ROOT, stop)
punct(stop, .)
nsubj(come, prevot)
root(ROOT, come)
advmod(come, up)
punct(take, ``)
punct(come, .)
parataxis(come, take)
det(spot, that)
obj(take, spot)
advmod(there, over)
advmod(take, there)
punct(take, '')
punct(come, ,)
nsubj(whisper, he)
parataxis(come, whisper)
punct(whisper, ,)
advcl(whisper, point)
case(clump, to)
det(clump, a)
amod(clump, small)
obl(point, clump)
case(blackness, of)
nmod(clump, blackness)
punct(come, .)
punct(come, ``)
root(ROOT, give)
iobj(give, I)
nmod:poss(ammo, you)
compound(ammo, machine)
compound(ammo, gun)
obj(give, ammo)
punct(ammo, '')
punct(give, .)
nsubj(hand, Warren)
parataxis(give, hand)
iobj(hand, he)
det(box, the)
compound(box, metal)
obj(hand, box)
cc(disappear, and)
nsubj(disappear, prevot)
advmod(disappear, quietly)
conj(hand, disappear)
case(line, down)
det(line, the)
obl(disappear, line)
punct(give, .)
advcl(look, Ly)
case(grass, in)
det(grass, the)
obl(Ly, grass)
case(clump, behind)
det(clump, the)
compound(clump, brush)
obl(Ly, clump)
punct(look, ,)
nsubj(look, Warren)
root(ROOT, look)
obl(look, about)
punct(look, .)
det(other, the)
nsubj(hide, other)
advmod(hide, likewise)
aux(hide, have)
root(ROOT, hide)
obj(hide, themselves)
case(grass, in)
det(grass, the)
obl(hide, grass)
cc(brush, and)
det(brush, the)
conj(grass, brush)
punct(brush, .)
case(shoulder, over)
nmod:poss(shoulder, he)
obl(see, shoulder)
nsubj(see, he)
aux(see, could)
conj(hide, see)
obj(see, prevot)
case(crew, with)
det(crew, the)
compound(crew, machine)
compound(crew, gun)
obl(see, crew)
punct(hide, .)
advmod(distance, even)
case(distance, at)
det(distance, this)
amod(distance, short)
obl(shape, distance)
nsubj(shape, they)
cop(shape, be)
advmod(shape, only)
amod(shape, vague)
root(ROOT, shape)
punct(shape, ,)
acl(shape, set)
compound:prt(set, up)
det(gun, the)
compound(gun, machine)
obj(set, gun)
case(knoll, on)
det(knoll, a)
amod(knoll, small)
obl(set, knoll)
mark(fire, so)
fixed(so, that)
nsubj(fire, it)
aux(fire, could)
advcl(set, fire)
case(head, above)
det(head, the)
obl(fire, head)
case(rest, of)
det(rest, the)
nmod(head, rest)
case(patrol, of)
det(patrol, the)
nmod(rest, patrol)
punct(ease, .)
nsubj(ease, Warren)
parataxis(shape, ease)
nmod:poss(rifle, he)
nmod:poss(safety, rifle)
case(rifle, 's)
obj(ease, safety)
compound:prt(ease, off)
cc(gently, and)
advmod(sneak, gently)
punct(sneak, ,)
advmod(sneak, slowly)
conj(ease, sneak)
det(clip, another)
obj(sneak, clip)
case(ammunition, of)
nmod(clip, ammunition)
case(one, from)
obl(sneak, one)
case(bandoleer, of)
det(bandoleer, the)
compound(bandoleer, cloth)
nmod(one, bandoleer)
nsubj(mark, that)
acl:relcl(bandoleer, mark)
det(part, the)
amod(part, upper)
obj(mark, part)
case(body, of)
nmod:poss(body, he)
nmod(part, body)
case(Aj, with)
det(Aj, a)
nmod(body, Aj)
punct(place, .)
nsubj(place, this)
nsubj(place, he)
acl:relcl(Aj, place)
case(reach, within)
amod(reach, quick)
obl(place, reach)
punct(place, .)
det(walk, the)
nsubj(serve, walk)
cc(fear, and)
nmod:poss(fear, he)
conj(walk, fear)
aux(serve, have)
root(ROOT, serve)
mark(overheat, to)
xcomp(serve, overheat)
obj(overheat, he)
cc(armpit, and)
nmod:poss(armpit, he)
amod(armpit, sweaty)
conj(he, armpit)
xcomp(overheat, cool)
case(touch, at)
det(touch, the)
obl(cool, touch)
case(air, of)
det(air, the)
compound(air, night)
nmod(touch, air)
punct(serve, .)
mark(fitted, although)
det(vest, the)
amod(vest, armored)
nsubj(fitted, vest)
advcl(feel, fitted)
det(part, the)
amod(part, upper)
obj(fitted, part)
case(body, of)
nmod:poss(body, he)
nmod(part, body)
advmod(fitted, snugly)
punct(feel, ,)
nsubj(feel, he)
root(ROOT, feel)
det(security, no)
obj(feel, security)
punct(feel, .)
nsubj(seem, figure)
ccomp(feel, seem)
mark(crouch, to)
xcomp(seem, crouch)
case(dark, in)
det(dark, the)
amod(dark, surround)
obl(crouch, dark)
punct(seem, ;)
punct(feel, ;)
case(distance, in)
det(distance, the)
obl(seem, distance)
nsubj(see, he)
acl:relcl(distance, see)
det(band, a)
obj(see, band)
case(man, of)
nmod(band, man)
nsubj(seem, who)
acl:relcl(band, seem)
mark(advance, to)
xcomp(seem, advance)
cc(retreat, and)
conj(advance, retreat)
advmod(watch, even)
mark(watch, as)
nsubj(watch, he)
advcl(advance, watch)
punct(feel, .)
root(ROOT, Certain)
det(menace, this)
nsubj(imaginary, menace)
cop(imaginary, be)
advmod(imaginary, only)
ccomp(Certain, imaginary)
punct(imaginary, ,)
nsubj(stare, he)
advmod(stare, yet)
parataxis(imaginary, stare)
case(horror, in)
amod(horror, fascinate)
obl(stare, horror)
punct(sticky, ,)
nmod:poss(sticky, he)
compound(sticky, hand)
conj(horror, sticky)
case(stock, against)
det(stock, the)
nmod(sticky, stock)
case(weapon, of)
nmod:poss(weapon, he)
nmod(stock, weapon)
punct(Certain, .)
nsubj(aware, he)
cop(aware, be)
root(ROOT, aware)
case(beating, of)
amod(beating, insistent)
amod(beating, inner)
obl(aware, beating)
punct(aware, ,)
mark(prisoner, as)
mark(prisoner, if)
advcl(aware, prisoner)
case(release, within)
amod(release, seek)
nmod(prisoner, release)
case(body, from)
nmod:poss(body, he)
amod(body, rigid)
nmod(release, body)
punct(aware, .)
advmod(point, above)
punct(point, ,)
det(baton, the)
amod(baton, glow)
compound(baton, ivory)
nsubj(point, baton)
case(searchlight, of)
nmod:poss(searchlight, they)
nmod(baton, searchlight)
root(ROOT, point)
case(cloud, at)
det(cloud, the)
obl(point, cloud)
punct(point, ,)
advcl(point, dilut)
det(valley, the)
nmod:poss(dark, valley)
case(valley, 's)
obj(dilut, dark)
case(light, to)
det(light, a)
amod(light, pallid)
obl(dark, light)
punct(point, .)
advmod(become, then)
det(figure, the)
nsubj(become, figure)
nsubj(hold, which)
acl:relcl(figure, hold)
nmod:poss(attention, he)
obj(hold, attention)
root(ROOT, become)
det(group, a)
xcomp(become, group)
case(tree, of)
amod(tree, shattered)
nmod(group, tree)
punct(group, ,)
acl(group, stand)
case(grotesque, like)
det(grotesque, the)
obl(stand, grotesque)
case(scene, of)
det(scene, a)
amod(scene, medieval)
compound(scene, damnation)
nmod(grotesque, scene)
punct(group, .)
advmod(so, even)
advmod(ease, so)
punct(ease, ,)
nsubj(ease, he)
aux(ease, could)
advmod(ease, not)
root(ROOT, ease)
det(tension, the)
obj(ease, tension)
case(body, of)
nmod:poss(body, he)
nmod(tension, body)
punct(ease, ;)
punct(ease, ;)
det(surface, the)
amod(surface, rough)
nsubj(seem, surface)
case(earth, of)
det(earth, the)
nmod(surface, earth)
nmod:npmod(surface, itself)
parataxis(ease, seem)
mark(resist, to)
xcomp(seem, resist)
det(attempt, every)
obj(resist, attempt)
case(part, on)
nmod:poss(part, he)
nmod(attempt, part)
mark(relax, to)
acl(part, relax)
punct(ease, .)
advcl(feel, sens)
det(presence, the)
amod(presence, unseen)
obj(sens, presence)
case(man, of)
det(man, the)
amod(man, other)
nmod(presence, man)
case(patrol, in)
det(patrol, the)
nmod(man, patrol)
punct(feel, ,)
nsubj(feel, he)
root(ROOT, feel)
advmod(united, mutely)
obj(feel, united)
case(stranger, to)
det(stranger, these)
nummod(stranger, nine)
amod(stranger, near-)
obl(feel, stranger)
acl(stranger, share)
det(pinpoint, this)
obj(share, pinpoint)
mark(he, of)
cop(he, be)
case(he, with)
advcl(share, he)
punct(feel, .)
nsubj(sense, he)
root(ROOT, sense)
obj(sense, something)
amod(something, precious)
case(moment, in)
det(moment, the)
amod(moment, perilous)
obl(sense, moment)
punct(sense, ,)
parataxis(sense, something)
amod(something, akin)
case(knowledge, to)
det(knowledge, the)
obl(akin, knowledge)
acl:relcl(something, gain)
case(trip, on)
nmod:poss(trip, he)
compound(trip, bicycle)
obl(gain, trip)
case(countryside, through)
det(countryside, the)
amod(countryside, french)
nmod(trip, countryside)
punct(countryside, ,)
det(knowledge, a)
appos(countryside, knowledge)
acl(knowledge, imprison)
case(speechlessness, in)
obl(imprison, speechlessness)
punct(sense, .)
punct(sense, --)
case(France, in)
obl(puzzle, France)
nsubj(puzzle, he)
aux(puzzle, have)
root(ROOT, puzzle)
det(meaning, the)
obj(puzzle, meaning)
case(monument, of)
det(monument, the)
amod(monument, great)
compound(monument, stone)
nmod(meaning, monument)
nsubj(throw, man)
aux(throw, have)
acl:relcl(monument, throw)
compound:prt(throw, up)
case(sky, to)
det(sky, the)
obl(throw, sky)
punct(feel, ,)
cc(feel, and)
advmod(feel, always)
mark(wander, as)
nsubj(wander, he)
advcl(feel, wander)
punct(feel, ,)
nsubj(feel, he)
conj(puzzle, feel)
det(stranger, a)
obj(feel, stranger)
case(exultation, to)
nmod:poss(exultation, they)
nmod(stranger, exultation)
punct(puzzle, .)
nsubj(poem, they)
cop(poem, be)
root(ROOT, poem)
case(language, in)
det(language, a)
amod(language, strange)
nmod(poem, language)
punct(poem, ,)
case(which, of)
obl(touch, which)
nsubj(touch, he)
aux(touch, could)
advmod(touch, barely)
acl:relcl(language, touch)
det(meaning, a)
obj(touch, meaning)
punct(poem, --)
advmod(poem, enough)
mark(make, to)
advcl(enough, make)
nsubj(ache, he)
cop(ache, be)
xcomp(make, ache)
case(desire, with)
det(desire, the)
obl(ache, desire)
case(fullness, for)
det(fullness, the)
nmod(desire, fullness)
nsubj(sense, he)
acl:relcl(fullness, sense)
advmod(sense, there)
punct(poem, .)
nsubj(work, Brittany)
punct(work, ,)
det(mystery, that)
obl:npmod(gray, stone)
punct(gray, -)
amod(mystery, gray)
nsubj(work, mystery)
case(which, through)
obl(travel, which)
nsubj(travel, he)
acl:relcl(mystery, travel)
case(day, for)
nummod(day, thirty)
obl(travel, day)
punct(sleep, ,)
advcl(travel, sleep)
case(barn, in)
det(barn, the)
obl(sleep, barn)
case(farmer, of)
nmod(barn, farmer)
cc(road, or)
case(road, alongside)
conj(farmer, road)
punct(work, ,)
aux(work, have)
root(ROOT, work)
det(change, some)
amod(change, subtle)
obj(work, change)
case(he, in)
obl(work, he)
punct(know, ,)
nsubj(know, he)
parataxis(work, know)
punct(Brittany, ,)
cc(Brittany, and)
nsubj(Brittany, it)
cop(Brittany, be)
case(Brittany, in)
conj(know, Brittany)
mark(meet, that)
nsubj(meet, he)
aux(meet, have)
acl:relcl(Brittany, meet)
obj(meet, Pierre)
punct(work, .)
nsubj(have, Pierre)
root(ROOT, have)
det(hand, no)
obj(have, hand)
punct(have, ;)
punct(have, ;)
nsubj:pass(sever, they)
aux(sever, have)
aux:pass(sever, be)
parataxis(have, sever)
case(wrist, at)
det(wrist, the)
obl(sever, wrist)
punct(have, .)
case(cup, with)
compound(cup, leather)
obl(steer, cup)
acl(cup, fitted)
case(handlebars, in)
nmod:poss(handlebars, he)
obl(fitted, handlebars)
punct(steer, ,)
nsubj(steer, he)
root(ROOT, steer)
nmod:poss(bicycle, he)
obj(steer, bicycle)
punct(steer, .)
nsubj(travel, he)
cc(Warren, and)
conj(he, Warren)
aux(travel, have)
root(ROOT, travel)
advmod(travel, together)
case(day, for)
nummod(day, four)
obl(travel, day)
punct(travel, .)
nsubj(visit, they)
root(ROOT, visit)
det(shipyard, the)
obj(visit, shipyard)
case(Brest, at)
nmod(shipyard, Brest)
cc(have, and)
nsubj(have, Pierre)
conj(visit, have)
mark(sign, to)
xcomp(have, sign)
det(register, the)
obj(sign, register)
punct(sign, ,)
advcl(sign, vouch)
case(integrity, for)
det(integrity, the)
obl(vouch, integrity)
case(foreigner, of)
det(foreigner, the)
compound(foreigner, visit)
nmod(integrity, foreigner)
punct(visit, .)
nsubj(take, he)
root(ROOT, take)
det(pen, the)
obj(take, pen)
case(stump, in)
nmod:poss(stump, he)
obl(take, stump)
cc(begin, and)
conj(take, begin)
mark(write, to)
xcomp(begin, write)
punct(take, .)
punct(take, ``)
root(ROOT, wait)
punct(wait, !)
punct(wait, !)
parataxis(wait, wait)
punct(wait, '')
punct(wait, !)
punct(cry, !)
conj(wait, cry)
det(guard, the)
obj(cry, guard)
nsubj(run, who)
acl:relcl(guard, run)
case(hut, from)
det(hut, the)
obl(run, hut)
mark(shout, to)
advcl(run, shout)
case(man, to)
amod(man, other)
obl(shout, man)
advcl(shout, stand)
advmod(outside, about)
advmod(stand, outside)
punct(wait, .)
nsubj(crowded, they)
root(ROOT, crowded)
det(room, the)
amod(room, small)
obj(crowded, room)
cc(peer, and)
conj(crowded, peer)
advmod(one, over)
nummod(another, one)
nmod:poss(shoulder, another)
case(another, 's)
obj(peer, shoulder)
mark(watch, to)
advcl(peer, watch)
det(man, the)
amod(man, handless)
obj(watch, man)
xcomp(watch, write)
nmod:poss(name, he)
obj(write, name)
case(book, in)
det(book, the)
obl(write, book)
punct(crowded, .)
punct(crowded, ``)
compound(formidable, c'est)
root(ROOT, formidable)
punct(formidable, '')
punct(formidable, ,)
nsubj(exclaim, they)
parataxis(formidable, exclaim)
punct(formidable, .)
punct(formidable, ``)
discourse(oui, Mais)
punct(oui, ,)
nummod(merveilleux, oui)
punct(oui, .)
compound(merveilleux, c'est)
root(ROOT, merveilleux)
punct(merveilleux, '')
punct(merveilleux, .)
cc(come, and)
advmod(come, then)
det(question, the)
nsubj(come, question)
conj(merveilleux, come)
punct(eager, ,)
conj(come, eager)
punct(question, ,)
amod(question, interested)
conj(eager, question)
punct(overcome, ,)
cc(overcome, and)
amod(compliment, many)
nsubj(overcome, compliment)
case(have, on)
nmod:poss(have, he)
nmod(compliment, have)
conj(come, overcome)
nmod:poss(infirmity, he)
obj(overcome, infirmity)
punct(come, .)
punct(come, ``)
aux(bother, do)
advmod(bother, not)
nsubj(bother, it)
advmod(bother, ever)
root(ROOT, bother)
obj(bother, you)
punct(bother, '')
punct(ask, ,)
nsubj(ask, Warren)
aux(ask, have)
parataxis(bother, ask)
punct(ask, ,)
punct(ask, ``)
mark(have, to)
xcomp(ask, have)
nsubj(ask, people)
advmod(ask, always)
xcomp(have, ask)
obj(ask, you)
case(hand, about)
nmod:poss(hand, you)
obl(ask, hand)
punct(ask, '')
punct(ask, ?)
punct(ask, ?)
punct(ask, ``)
discourse(people, oh)
punct(people, ,)
det(French, the)
nsubj(people, French)
cop(people, be)
det(people, a)
advmod(curious, very)
amod(people, curious)
root(ROOT, people)
punct(people, '')
punct(people, ,)
nsubj(laugh, Pierre)
aux(laugh, have)
parataxis(people, laugh)
punct(people, .)
punct(people, ``)
nsubj(seeker, they)
cop(seeker, be)
advmod(seeker, also)
amod(seeker, honest)
root(ROOT, seeker)
case(truth, after)
nmod(seeker, truth)
punct(seeker, .)
advmod(silent, now)
det(English, the)
nsubj(silent, English)
cop(silent, be)
advmod(silent, painfully)
parataxis(seeker, silent)
case(hand, about)
nmod:poss(hand, my)
amod(hand, missing)
obl(silent, hand)
punct(seeker, .)
nsubj(refuse, they)
root(ROOT, refuse)
mark(mention, to)
xcomp(refuse, mention)
cc(notice, or)
mark(notice, to)
conj(mention, notice)
mark(there, that)
nsubj(there, they)
cop(there, be)
advmod(there, not)
ccomp(notice, there)
punct(refuse, .)
det(Americans, the)
nsubj(take, Americans)
punct(Americans, ,)
case(yourself, like)
nmod(Americans, yourself)
punct(take, ,)
root(ROOT, take)
det(fact, the)
obj(take, fact)
mark(grant, for)
acl(fact, grant)
punct(try, ,)
conj(take, try)
mark(helpful, to)
cop(helpful, be)
xcomp(try, helpful)
punct(ask, ,)
cc(ask, but)
aux(ask, do)
advmod(ask, not)
conj(try, ask)
obj(ask, question)
punct(use, .)
nsubj:pass(use, I)
aux:pass(use, be)
parataxis(ask, use)
case(three, to)
det(three, all)
obl(use, three)
punct(think, ,)
cc(think, but)
nsubj(think, I)
conj(use, think)
det(French, the)
nsubj(have, French)
ccomp(think, have)
det(attitude, the)
amod(attitude, healthiest)
obj(have, attitude)
punct(have, '')
punct(day, .)
nsubj(day, that)
cop(day, be)
det(day, the)
ccomp(think, day)
obj(tell, that)
nsubj(tell, Pierre)
aux(tell, have)
acl:relcl(day, tell)
obj(tell, Warren)
case(Abbey, about)
det(Abbey, the)
obl(tell, Abbey)
case(Solesmes, of)
nmod(Abbey, Solesmes)
punct(take, .)
punct(day, ``)
nsubj(look, you)
aux(look, be)
root(ROOT, look)
xcomp(look, tired)
cc(there, and)
conj(tired, there)
nsubj(rest, you)
aux(rest, can)
conj(look, rest)
punct(look, .)
nsubj(good, it)
aux(good, will)
cop(good, be)
root(ROOT, good)
case(you, for)
obl(good, you)
punct(good, . )
nsubj(think, I)
root(ROOT, think)
punct(think, ,)
advmod(think, too)
punct(say, '')
punct(say, ,)
nsubj(say, he)
ccomp(think, say)
punct(say, ,)
nmod:poss(eye, he)
amod(eye, dark)
nsubj(mischievous, eye)
ccomp(say, mischievous)
punct(say, ,)
punct(think, ``)
mark(find, that)
nsubj(find, you)
aux(find, will)
ccomp(say, find)
expl(find, there)
det(clue, some)
obj(find, clue)
case(secret, to)
det(secret, the)
nmod(clue, secret)
case(cathedral, of)
det(cathedral, the)
nmod(secret, cathedral)
case(which, about)
obl(speak, which)
nsubj(speak, you)
aux(speak, have)
acl:relcl(cathedral, speak)
punct(speak, '')
punct(ring, .)
case(week, within)
nummod(week, two)
obl(ring, week)
nsubj(ring, Warren)
aux(ring, be)
ccomp(think, ring)
det(bell, the)
obj(ring, bell)
case(gate, at)
det(gate, the)
compound(gate, abbey)
obl(ring, gate)
punct(think, .)
det(monk, the)
nsubj(calm, monk)
nsubj(open, who)
acl:relcl(monk, open)
det(door, the)
obj(open, door)
advmod(calm, immediately)
root(ROOT, calm)
nmod:poss(worry, he)
obj(calm, worry)
case(reception, about)
nmod:poss(reception, he)
obl(calm, reception)
punct(calm, :)
punct(calm, ``)
nsubj(speak, I)
root(ROOT, speak)
obj(speak, English)
punct(speak, '')
punct(say, ,)
det(man, the)
amod(man, old)
nsubj(say, man)
parataxis(speak, say)
punct(say, ,)
punct(speak, ``)
cc(hear, but)
nsubj(hear, I)
aux(hear, do)
advmod(hear, not)
conj(speak, hear)
obj(hear, it)
advmod(well, very)
advmod(hear, well)
punct(hear, '')
punct(smile, .)
nsubj(smile, he)
parataxis(speak, smile)
cc(stick, and)
conj(smile, stick)
det(finger, a)
amod(finger, large)
obj(stick, finger)
case(hair, with)
amod(hair, white)
obl(stick, hair)
acl(hair, sprout)
case(it, on)
obl(sprout, it)
case(ear, into)
nmod:poss(ear, he)
obl(sprout, ear)
mark(help, as)
mark(help, though)
nsubj(help, that)
aux(help, might)
advcl(sprout, help)
punct(speak, .)
advcl(take, smile)
case(protestation, at)
nmod:poss(protestation, Warren)
case(Warren, 's)
obl(smile, protestation)
punct(take, ,)
det(monk, the)
amod(monk, old)
nsubj(take, monk)
root(ROOT, take)
nmod:poss(grip, he)
obj(take, grip)
case(he, from)
obl(take, he)
cc(lead, and)
conj(take, lead)
obj(lead, he)
compound:prt(lead, down)
det(corridor, a)
obj(lead, corridor)
case(parlor, to)
det(parlor, a)
amod(parlor, small)
obl(lead, parlor)
punct(take, .)
punct(take, ``)
aux(wait, will)
nsubj(wait, you)
discourse(wait, please)
root(ROOT, wait)
case(here, in)
obl(wait, here)
punct(wait, .)
nsubj(sit, Mickie)
root(ROOT, sit)
case(rock, over)
nmod:poss(rock, he)
amod(rock, second)
compound(rock, whisky)
punct(whisky, -)
case(rock, on)
punct(rock, -)
det(rock, the)
punct(rock, -)
obl(sit, rock)
case(bar, in)
det(bar, a)
amod(bar, little)
obl(sit, bar)
case(parlor, next)
case(parlor, to)
det(parlor, the)
compound(parlor, funeral)
obl(sit, parlor)
case(Avenue, on)
compound(Avenue, Pennsylvania)
nmod(parlor, Avenue)
punct(sit, .)
nmod:poss(Cafe, Al)
case(Al, 's)
compound(Cafe, Little)
nsubj(small, Cafe)
cop(small, be)
root(ROOT, small)
punct(dark, ,)
conj(small, dark)
punct(narrow, ,)
conj(small, narrow)
punct(fill, ,)
cc(fill, and)
conj(small, fill)
case(scent, with)
det(scent, the)
amod(scent, mingle)
obl(fill, scent)
case(beer, of)
nmod(scent, beer)
punct(smoke, ,)
compound(smoke, tobacco)
conj(beer, smoke)
punct(cooking, ,)
cc(cooking, and)
amod(cooking, italian)
conj(beer, cooking)
punct(small, .)
csubj(painting, hang)
case(bar, over)
det(bar, the)
obl(hang, bar)
cop(painting, be)
det(painting, a)
compound(painting, oil)
root(ROOT, painting)
case(nude, of)
det(nude, a)
nmod(painting, nude)
nsubj(accept, Al)
aux(accept, have)
root(ROOT, accept)
case(student, from)
det(student, a)
obl(accept, student)
case(Gallery, at)
det(Gallery, the)
compound(Gallery, corcoran)
nmod(student, Gallery)
nsubj(need, who)
acl:relcl(Gallery, need)
mark(eat, to)
xcomp(need, eat)
cc(drink, and)
conj(eat, drink)
cc(break, and)
aux:pass(break, be)
conj(accept, break)
punct(accept, .)
det(nude, the)
nsubj(small, nude)
cop(small, be)
root(ROOT, small)
cc(hair, and)
amod(hair, black)
punct(hair, -)
conj(small, hair)
cc(elfin, and)
conj(hair, elfin)
punct(call, ,)
cc(call, and)
aux:pass(call, be)
conj(small, call)
punct(Eloise, ``)
xcomp(call, Eloise)
punct(Eloise, '')
punct(small, .)
nsubj(place, this)
cop(place, be)
nummod(place, one)
parataxis(small, place)
advmod(go, where)
nsubj(go, Moonan)
aux(go, could)
acl:relcl(place, go)
case(drink, for)
det(drink, a)
obl(go, drink)
case(booth, in)
det(booth, a)
compound(booth, back)
nmod(drink, booth)
case(anyone, without)
nmod(booth, anyone)
acl(anyone, notice)
obj(notice, he)
punct(come, ,)
cc(come, or)
advmod(come, at)
fixed(at, least)
conj(notice, come)
advmod(come, up)
cc(hang, and)
conj(come, hang)
advmod(hang, around)
cc(want, and)
conj(hang, want)
mark(know, to)
xcomp(want, know)
det:predet(down, all)
det(down, the)
amod(down, low)
punct(down, -)
obj(know, down)
punct(small, .)
det(patron, the)
amod(patron, other)
nsubj(driver, patron)
cop(driver, be)
compound(driver, taxi)
root(ROOT, driver)
cc(student, and)
compound(student, art)
conj(driver, student)
cc(shopkeeper, and)
amod(shopkeeper, small)
conj(driver, shopkeeper)
punct(driver, .)
det(reporter, the)
nsubj(discover, reporter)
aux(discover, have)
advmod(discover, not)
advmod(discover, yet)
root(ROOT, discover)
mark(hideaway, that)
nsubj(hideaway, this)
cop(hideaway, be)
nmod:poss(hideaway, he)
ccomp(discover, hideaway)
punct(discover, .)
nmod:poss(friend, he)
nsubj(he, friend)
appos(friend, Jane)
cop(he, be)
case(he, with)
root(ROOT, he)
punct(he, .)
nsubj(wise, she)
cop(wise, be)
root(ROOT, wise)
advmod(wise, enough)
mark(realize, to)
advcl(enough, realize)
det(man, a)
nsubj(company, man)
aux(company, could)
cop(company, be)
amod(company, good)
ccomp(realize, company)
advmod(weigh, even)
mark(weigh, if)
nsubj(weigh, he)
aux(weigh, do)
advcl(company, weigh)
advmod(much, too)
advmod(weigh, much)
cc(own, and)
aux(own, do)
advmod(own, not)
conj(weigh, own)
det(mint, the)
obj(own, mint)
punct(wise, .)
nsubj(widow, she)
cop(widow, be)
det(widow, the)
root(ROOT, widow)
case(writer, of)
det(writer, a)
nmod(widow, writer)
nsubj(die, who)
aux(die, have)
acl:relcl(writer, die)
case(crash, in)
det(crash, a)
compound(crash, airplane)
obl(die, crash)
punct(find, ,)
cc(find, and)
nsubj(find, Mickie)
aux(find, have)
conj(widow, find)
iobj(find, she)
det(job, a)
obj(find, job)
case(head, as)
obl(find, head)
case(section, of)
det(section, the)
amod(section, historical)
nmod(head, section)
case(Treasury, of)
det(Treasury, the)
nmod(section, Treasury)
punct(widow, .)
nsubj(mean, this)
root(ROOT, mean)
xcomp(mean, sorting)
compound:prt(sorting, out)
compound(clipping, press)
obj(sorting, clipping)
cc(like, and)
det(like, the)
conj(clipping, like)
punct(mean, .)
nsubj(sit, Jane)
root(ROOT, sit)
xcomp(sit, receptive)
cc(interested, and)
conj(receptive, interested)
punct(sit, .)
nsubj(have, Mickie)
root(ROOT, have)
det(glow, a)
amod(glow, pleasant)
obj(have, glow)
mark(say, as)
nsubj(say, he)
advcl(have, say)
punct(have, ,)
punct(have, ``)
nsubj(see, you)
root(ROOT, see)
punct(see, ,)
nsubj(romantic, both)
case(they, of)
nmod(both, they)
punct(see, ,)
nsubj(mean, I)
ccomp(see, mean)
det(President, the)
obj(mean, President)
cc(Jeff, and)
conj(President, Jeff)
flat(Jeff, Lawrence)
punct(romantic, ,)
cop(romantic, be)
ccomp(see, romantic)
punct(see, . )
det(romantic, a)
nsubj(one, romantic)
cop(one, be)
root(ROOT, one)
nsubj(think, who)
acl:relcl(one, think)
det(world, the)
nsubj:pass(inspire, world)
aux:pass(inspire, be)
advmod(inspire, divinely)
ccomp(think, inspire)
cc(find, and)
nsubj(find, all)
nsubj(have, he)
acl:relcl(all, have)
mark(do, to)
xcomp(have, do)
aux(find, be)
conj(one, find)
det(key, the)
amod(key, right)
obj(find, key)
punct(appear, ,)
cc(appear, and)
advmod(appear, then)
amod(justice, divine)
nsubj(appear, justice)
cc(altruism, and)
conj(justice, altruism)
aux(appear, will)
conj(find, appear)
punct(one, .)
nsubj(be, it)
root(ROOT, be)
mark(focus, like)
advcl(be, focus)
det(camera, a)
obj(focus, camera)
punct(be, ;)
punct(be, ;)
det(ship, the)
amod(ship, distant)
nsubj(there, ship)
cop(there, be)
advmod(there, not)
parataxis(be, there)
mark(get, until)
nsubj(get, you)
advcl(there, get)
det(focus, the)
obj(get, focus)
punct(be, .)
nsubj(know, you)
root(ROOT, know)
obl(talk, what)
nsubj(talk, I)
aux(talk, be)
ccomp(know, talk)
case(what, about)
punct(know, .)
nsubj(sure, I)
cop(sure, be)
parataxis(know, sure)
det(girl, all)
nsubj(feel, girl)
ccomp(sure, feel)
det(way, this)
obj(feel, way)
case(man, about)
nmod(way, man)
mark(live, until)
nsubj(live, they)
advcl(feel, live)
case(they, with)
obl(live, they)
punct(know, .)
punct(know, ``)
cc(know, but)
mark(come, when)
nsubj(come, it)
advcl(know, come)
case(war, to)
obl(come, war)
punct(know, ,)
det(Colonel, the)
nsubj(know, Colonel)
root(ROOT, know)
obj(know, what)
nsubj(what, it)
cop(what, be)
cc(do, and)
nsubj(do, Jeff)
conj(know, do)
advmod(do, not)
punct(know, .)
nsubj(know, Mr.)
flat(Mr., Christiansen)
ccomp(know, know)
mark(get, that)
det(soldier, a)
nsubj(get, soldier)
aux(get, will)
ccomp(know, get)
det(Medal, the)
compound(Service, distinguished)
compound(Medal, Service)
obj(get, Medal)
case(conduct, for)
obl(get, conduct)
nsubj(land, that)
aux(land, would)
acl:relcl(conduct, land)
obj(land, he)
case(prison, in)
obl(land, prison)
case(life, for)
nmod(prison, life)
cc(chair, or)
det(chair, the)
amod(chair, electric)
conj(life, chair)
case(civilian, as)
det(civilian, a)
nmod(life, civilian)
punct(know, .)
nsubj(have, he)
root(ROOT, have)
det(bastard, a)
compound(bastard, mean)
punct(bastard, ,)
amod(bastard, unbroken)
amod(bastard, sheer)
obj(have, bastard)
case(outfit, in)
nmod:poss(outfit, he)
nmod(bastard, outfit)
punct(invent, ,)
cc(invent, and)
nsubj(invent, someone)
conj(have, invent)
det(trig, the)
compound(trig, name)
obj(invent, trig)
case(he, for)
obl(invent, he)
punct(have, .)
nsubj(be, that)
root(ROOT, be)
mark(say, to)
ccomp(be, say)
punct(be, ,)
nsubj(trigger, he)
aux(trigger, be)
ccomp(be, trigger)
xcomp(trigger, happy)
punct(be, .)
nsubj(shoot, he)
aux(shoot, would)
root(ROOT, shoot)
case(anything, at)
obl(shoot, anything)
mark(end, if)
nsubj(end, it)
cop(end, be)
det(end, the)
amod(end, rear)
advcl(shoot, end)
case(horse, of)
det(horse, a)
nmod(end, horse)
cc(sentry, or)
nmod:poss(sentry, he)
amod(sentry, own)
conj(horse, sentry)
punct(shoot, .)
nsubj(boy, he)
cop(boy, be)
det(boy, a)
amod(boy, wiry)
punct(boy, ,)
amod(boy, inscrutable)
punct(boy, ,)
amod(boy, silent)
compound(boy, country)
root(ROOT, boy)
case(clay, from)
det(clay, the)
amod(clay, red)
nmod(boy, clay)
case(Alabama, of)
amod(Alabama, rural)
nmod(clay, Alabama)
punct(speak, ,)
cc(speak, and)
nsubj(speak, he)
conj(boy, speak)
case(drawl, with)
det(drawl, the)
amod(drawl, broad)
obl(speak, drawl)
mark(make, that)
nsubj(make, other)
advmod(make, normally)
acl(drawl, make)
obj(make, fun)
obl(make, of)
punct(boy, .)
cc(front, but)
advmod(front, not)
case(front, in)
root(ROOT, front)
case(trig, of)
nmod(front, trig)
punct(front, . )
nsubj(hear, I)
root(ROOT, hear)
case(some, of)
obl(hear, some)
nsubj(try, that)
acl:relcl(some, try)
obj(try, it)
advmod(try, back)
case(States, in)
det(States, the)
obl(back, States)
punct(knock, ,)
cc(knock, and)
nsubj(knock, he)
aux(knock, would)
conj(hear, knock)
obj(knock, they)
xcomp(knock, clear)
case(room, across)
det(room, the)
obl(knock, room)
punct(hear, .)
expl(be, there)
aux(be, would)
root(ROOT, be)
det(incident, a)
advmod(bad, pretty)
amod(incident, bad)
nsubj(be, incident)
advmod(incident, back)
case(base, at)
det(base, the)
compound(base, Marine)
nmod(incident, base)
punct(be, . )
det(kid, a)
compound(York, New)
compound(kid, York)
nsubj(make, kid)
punct(kid, ,)
det(refugee, a)
appos(kid, refugee)
case(one, from)
nmod(refugee, one)
case(gang, of)
det(gang, the)
compound(gang, Harlem)
nmod(one, gang)
punct(make, ,)
root(ROOT, make)
obj(make, fun)
case(accent, of)
nmod:poss(accent, trig)
case(trig, 's)
nmod(fun, accent)
punct(draw, ,)
cc(draw, and)
conj(make, draw)
det(knife, a)
obj(draw, knife)
punct(make, .)
mark(over, before)
det(fight, the)
nsubj(over, fight)
cop(over, be)
advcl(have, over)
punct(have, ,)
det(boy, the)
compound(boy, Harlem)
nsubj(have, boy)
root(ROOT, have)
det(concussion, a)
obj(have, concussion)
cc(cut, and)
nsubj:pass(cut, trig)
aux:pass(cut, be)
conj(have, cut)
compound:prt(cut, up)
advmod(cut, badly)
punct(have, .)
nsubj(catch, they)
root(ROOT, catch)
obj(catch, trig)
xcomp(catch, steal)
obj(steal, liquor)
case(mess, from)
det(officer, the)
nmod:poss(mess, officer)
case(officer, 's)
obl(steal, mess)
punct(get, ,)
cc(get, and)
nsubj(get, he)
conj(catch, get)
det(couple, a)
obj(get, couple)
case(girl, of)
nmod(couple, girl)
case(trouble, in)
obl(get, trouble)
punct(catch, .)
det(fear, the)
nsubj(bother, fear)
case(punishment, of)
nmod(fear, punishment)
advmod(bother, just)
aux(bother, do)
advmod(bother, not)
root(ROOT, bother)
obj(bother, he)
punct(bother, .)
nsubj(there, it)
cop(there, be)
advmod(there, not)
root(ROOT, there)
punct(there, .)
nsubj:pass(leave, it)
aux:pass(leave, be)
root(ROOT, leave)
case(he, out)
case(he, of)
obl(leave, he)
case(birth, at)
obl(leave, birth)
punct(leave, .)
nsubj(why, this)
cop(why, be)
root(ROOT, why)
nsubj(make, he)
acl:relcl(why, make)
det:predet(soldier, such)
det(soldier, a)
amod(soldier, magnificent)
obj(make, soldier)
punct(why, .)
nsubj(troubled, he)
cop(troubled, be)
advmod(troubled, not)
root(ROOT, troubled)
case(fear, with)
det(fear, the)
amod(fear, ordinary)
punct(rank, ,)
conj(ordinary, rank)
punct(ordinary, -)
cc(file, and)
punct(file, -)
conj(ordinary, file)
obl(troubled, fear)
nsubj(overcome, that)
acl:relcl(fear, overcome)
cc(paralyze, and)
conj(overcome, paralyze)
cc(send, and)
conj(overcome, send)
amod(soldier, individual)
obj(send, soldier)
cc(company, and)
amod(company, whole)
conj(soldier, company)
case(fire, under)
obl(send, fire)
acl(fire, run)
case(panic, in)
obl(run, panic)
punct(troubled, .)
nsubj(occur, it)
advmod(occur, just)
aux(occur, do)
advmod(occur, not)
root(ROOT, occur)
case(trig, to)
obl(occur, trig)
mark(happen, that)
nsubj(happen, anything)
amod(anything, serious)
aux(happen, would)
ccomp(occur, happen)
case(he, to)
obl(happen, he)
punct(occur, .)
aux(get, do)
nsubj(get, you)
root(ROOT, get)
det(picture, the)
obj(get, picture)
case(kind, of)
det(kind, the)
nmod(picture, kind)
case(fellow, of)
nmod(kind, fellow)
nsubj(be, he)
acl:relcl(fellow, be)
punct(get, '')
punct(get, ?)
punct(get, ?)
nsubj(nodded, Jane)
root(ROOT, nodded)
case(smile, with)
det(smile, a)
amod(smile, pleasant)
obl(nodded, smile)
punct(nodded, .)
punct(nodded, ``)
root(ROOT, all)
advmod(all, right)
punct(all, .)
expl(be, there)
root(ROOT, be)
det(sniper, a)
nmod:poss(nest, sniper)
case(sniper, 's)
nsubj(be, nest)
case(cave, in)
det(cave, a)
compound(cave, mountain)
nmod(nest, cave)
punct(pick, ,)
cc(pick, and)
nsubj(pick, it)
aux(pick, be)
conj(be, pick)
compound:prt(pick, off)
nmod:poss(man, we)
obj(pick, man)
case(accuracy, with)
amod(accuracy, devilish)
obl(pick, accuracy)
punct(be, .)
det(Colonel, the)
nsubj(order, Colonel)
root(ROOT, order)
mark(wipe, that)
nsubj:pass(wipe, it)
aux:pass(wipe, be)
ccomp(order, wipe)
compound:prt(wipe, out)
punct(suggest, ,)
cc(suggest, and)
nsubj(suggest, I)
conj(order, suggest)
punct(order, ,)
punct(order, ')
nsubj(ask, you)
root(ROOT, ask)
case(volunteer, for)
obl(ask, volunteer)
punct(promise, ,)
cc(promise, and)
conj(ask, promise)
det(man, each)
obj(promise, man)
case(patrol, on)
det(patrol, the)
nmod(man, patrol)
det(quart, a)
obj(promise, quart)
case(whisky, of)
nmod(quart, whisky)
punct(dollar, ,)
nummod(dollar, ten)
conj(quart, dollar)
cc(pass, and)
det(pass, a)
compound(end, week)
punct(end, -)
compound(pass, end)
conj(quart, pass)
case(Davao, to)
nmod(pass, Davao)
punct(one, .)
nsubj(one, trig)
cop(one, be)
parataxis(ask, one)
case(volunteer, of)
det(volunteer, the)
nummod(volunteer, five)
nmod(one, volunteer)
punct(ask, .)
det(patrol, the)
nsubj(snake, patrol)
root(ROOT, snake)
advmod(snake, around)
case(back, in)
obl(snake, back)
case(cave, of)
det(cave, the)
nmod(back, cave)
punct(approach, ,)
conj(snake, approach)
obj(approach, it)
case(above, from)
obl(approach, above)
cc(drop, and)
conj(snake, drop)
compound:prt(drop, in)
advmod(drop, suddenly)
case(howl, with)
amod(howl, wild)
obl(drop, howl)
punct(snake, .)
nsubj(hear, you)
aux(hear, could)
root(ROOT, hear)
obj(hear, they)
case(outpost, from)
nmod:poss(outpost, we)
obl(hear, outpost)
punct(hear, .)
expl(be, there)
root(ROOT, be)
det(lot, a)
nsubj(be, lot)
case(shooting, of)
nmod(lot, shooting)
punct(be, .)
nsubj(know, we)
root(ROOT, know)
det(enemy, the)
nsubj(subdue, enemy)
cop(subdue, be)
ccomp(know, subdue)
punct(know, ,)
mark(fire, because)
det(flare, a)
nsubj:pass(fire, flare)
aux:pass(fire, be)
advcl(subdue, fire)
case(signal, as)
det(signal, the)
obl(fire, signal)
punct(know, .)
advmod(hurry, so)
nsubj(hurry, we)
root(ROOT, hurry)
advmod(hurry, over)
punct(hurry, .)
nsubj:pass(kill, two)
case(man, of)
nmod:poss(man, we)
nmod(two, man)
aux:pass(kill, be)
root(ROOT, kill)
punct(kill, ,)
det(third, a)
nsubj:pass(wounded, third)
aux:pass(wounded, be)
ccomp(kill, wounded)
punct(wounded, .)
obj(wounded, trig)
cc(boy, and)
det(boy, a)
advmod(black, very)
amod(boy, black)
amod(boy, color)
conj(trig, boy)
case(Detroit, from)
nmod(boy, Detroit)
aux(kill, have)
conj(kill, kill)
cc(put, or)
conj(kill, put)
case(action, out)
case(action, of)
compound(guerrilla, action)
nummod(guerrilla, ten)
obj(put, guerrilla)
case(grenade, by)
nmod(guerrilla, grenade)
cc(fighting, and)
compound(fighting, hand)
punct(hand, -)
case(hand, to)
punct(hand, -)
nmod(hand, hand)
conj(grenade, fighting)
punct(kill, .)
mark(get, when)
nsubj(get, we)
advcl(quarreling, get)
advmod(get, there)
punct(quarreling, ,)
nsubj(quarreling, trig)
cc(Negro, and)
det(Negro, the)
conj(trig, Negro)
aux(quarreling, be)
root(ROOT, quarreling)
case(possession, over)
obl(quarreling, possession)
case(crucifix, of)
det(crucifix, a)
compound(crucifix, gold)
nmod(possession, crucifix)
case(neck, around)
det(neck, the)
nmod(crucifix, neck)
case(filipino, of)
det(filipino, a)
amod(filipino, wounded)
nmod(neck, filipino)
punct(quarreling, .)
det(boy, the)
amod(boy, color)
nsubj(have, boy)
root(ROOT, have)
obj(have, it)
punct(lung, ,)
cc(lung, and)
nsubj(lung, trig)
conj(have, lung)
case(he, at)
obl(lung, he)
case(knife, with)
det(knife, a)
obl(lung, knife)
cc(say, and)
conj(lung, say)
punct(say, ,)
punct(give, ')
ccomp(say, give)
obj(give, that)
case(I, to)
obl(give, I)
punct(give, ,)
nmod:poss(bastard, you)
amod(bastard, black)
parataxis(give, bastard)
punct(have, .)
nsubj(nigra, we)
aux(nigra, do)
advmod(nigra, not)
punct(nigra, ')
amod(nigra, low)
root(ROOT, nigra)
mark(walk, to)
acl(nigra, walk)
case(sidewalk, on)
det(sidewalk, the)
amod(sidewalk, same)
obl(walk, sidewalk)
case(man, with)
amod(man, white)
obl(walk, man)
advmod(come, where)
nsubj(come, I)
acl:relcl(man, come)
obl(come, from)
punct(nigra, .)
punct(nigra, ``)
det(Negro, the)
nsubj(get, Negro)
root(ROOT, get)
det(slice, a)
amod(slice, bad)
obj(get, slice)
case(chest, on)
nmod:poss(chest, he)
obl(get, chest)
case(wound, from)
det(wound, the)
compound(wound, knife)
obl(get, wound)
punct(get, '')
punct(get, .)
punct(get, ``)
obj(do, what)
aux(do, do)
det(Colonel, the)
nsubj(do, Colonel)
root(ROOT, do)
case(man, about)
det(man, the)
obl(do, man)
punct(do, '')
punct(do, ?)
punct(do, ?)
nsubj(ask, Jane)
root(ROOT, ask)
case(way, in)
nmod:poss(way, she)
amod(way, placid)
punct(way, ,)
amod(way, interested)
obl(ask, way)
punct(ask, .)
nsubj(laugh, Mickie)
root(ROOT, laugh)
punct(laugh, .)
punct(laugh, ``)
nsubj(recommend, he)
root(ROOT, recommend)
obj(recommend, both)
case(they, of)
nmod(both, they)
case(DSM, for)
det(DSM, the)
obl(recommend, DSM)
cc(fellow, and)
det(fellow, the)
compound(fellow, Detroit)
conj(DSM, fellow)
case(Heart, for)
det(Heart, the)
compound(Heart, Purple)
nmod(fellow, Heart)
punct(recommend, ,)
advmod(recommend, too)
punct(recommend, ,)
case(wound, for)
det(wound, a)
obl:npmod(inflict, combat)
punct(inflict, -)
amod(wound, inflict)
obl(recommend, wound)
punct(recommend, .)
advmod(see, so)
nsubj(see, you)
root(ROOT, see)
nsubj(know, Mr.)
flat(Mr., Christiansen)
ccomp(see, know)
ccomp(know, what)
nsubj(what, it)
cop(what, be)
advmod(what, all)
case(what, about)
punct(see, .)
cc(Jeff, but)
advmod(Jeff, not)
root(ROOT, Jeff)
flat(Jeff, Lawrence)
punct(Jeff, .)
mark(war, when)
nsubj(war, he)
cop(war, be)
case(war, in)
det(war, the)
advcl(law, war)
punct(law, ,)
nsubj(law, he)
cop(law, be)
case(law, in)
root(ROOT, law)
cc(Supplies, or)
conj(law, Supplies)
cc(something, or)
conj(law, something)
case(that, like)
nmod(something, that)
punct(tell, ,)
cc(tell, and)
det(buddy, a)
amod(buddy, old)
nsubj(tell, buddy)
case(he, of)
nmod(buddy, he)
conj(law, tell)
iobj(tell, I)
nsubj(come, he)
aux(come, would)
ccomp(tell, come)
advmod(come, down)
case(Sundays, on)
obl(come, Sundays)
case(Pentagon, to)
det(Pentagon, the)
nmod(Sundays, Pentagon)
cc(read, and)
conj(come, read)
det(citation, the)
obj(read, citation)
case(medal, for)
nmod(citation, medal)
punct(read, --)
advmod(one, just)
case(one, like)
det(one, the)
obl(read, one)
nsubj(send, we)
acl:relcl(one, send)
compound:prt(send, in)
case(trig, for)
obl(send, trig)
punct(one, --)
cc(go, and)
conj(send, go)
advmod(go, away)
case(glow, with)
det(glow, a)
amod(glow, real)
obl(go, glow)
punct(law, .)
nsubj(heroes, these)
cop(heroes, be)
root(ROOT, heroes)
nummod(foot, nine)
obl:npmod(tall, foot)
amod(heroes, tall)
case(he, to)
obl(tall, he)
punct(tall, '')
punct(tall, .)
nsubj(alone, Jefferson)
flat(Jefferson, Lawrence)
cop(alone, be)
parataxis(tall, alone)
case(table, at)
det(table, the)
amod(table, small)
punct(table, ,)
advmod(appoint, perfectly)
amod(table, appoint)
obl(alone, table)
case(window, by)
det(window, the)
nmod(table, window)
acl(window, look)
advmod(look, out)
case(river, over)
det(river, the)
obl(look, river)
punct(heroes, .)
nsubj(have, he)
root(ROOT, have)
obj(have, dinner)
cc(sit, and)
conj(have, sit)
advmod(sit, there)
case(coffee, over)
nmod:poss(coffee, he)
obl(sit, coffee)
acl(coffee, watch)
det(pattern, the)
compound(pattern, wind)
obj(watch, pattern)
case(traffic, of)
nmod(pattern, traffic)
mark(cross, as)
nsubj(cross, it)
advcl(watch, cross)
det(bridge, the)
obj(cross, bridge)
cc(spread, and)
conj(cross, spread)
compound:prt(spread, out)
case(serpent, like)
det(serpent, a)
obl(spread, serpent)
case(head, with)
nummod(head, two)
obl(spread, head)
punct(have, .)
case(he, beside)
obl(Mrs., he)
cop(Mrs., be)
root(ROOT, Mrs.)
flat(Mrs., Dalloway)
punct(Mrs., .)
nsubj(think, he)
root(ROOT, think)
advmod(thread, how)
det(woman, this)
amod(woman, dainty)
punct(woman, ,)
amod(woman, fragile)
amod(woman, older)
nsubj(thread, woman)
ccomp(think, thread)
nmod:poss(way, she)
obj(thread, way)
case(street, through)
det(street, the)
obl(thread, street)
case(Westminster, of)
nmod(street, Westminster)
case(day, on)
det(day, a)
obl(thread, day)
case(June, in)
nmod(day, June)
punct(thread, ,)
advcl(thread, enjoy)
det(flower, the)
obj(enjoy, flower)
case(shop, in)
det(shop, the)
obl(enjoy, shop)
punct(greeting, ,)
det(greeting, the)
conj(shop, greeting)
case(friend, from)
amod(friend, old)
nmod(greeting, friend)
punct(draw, ,)
cc(draw, but)
advmod(draw, never)
advmod(draw, really)
conj(greeting, draw)
det(breath, a)
amod(breath, deep)
punct(breath, ,)
amod(breath, passionate)
obj(draw, breath)
punct(so, ,)
cop(so, be)
advmod(draw, so)
case(himself, like)
obl(so, himself)
punct(think, .)
nsubj(permit, he)
punct(Mrs., ,)
cc(Mrs., and)
conj(he, Mrs.)
flat(Mrs., Dalloway)
punct(permit, ,)
advmod(permit, too)
punct(permit, ,)
aux(permit, have)
advmod(permit, never)
root(ROOT, permit)
iobj(permit, themselves)
det(luxury, the)
obj(permit, luxury)
case(joy, of)
nmod(luxury, joy)
nsubj(dug, that)
acl:relcl(joy, dug)
case(marrow, into)
det(marrow, the)
compound(marrow, bone)
obl(dug, marrow)
case(spirit, of)
det(spirit, the)
nmod(marrow, spirit)
punct(permit, .)
nsubj(have, he)
root(ROOT, have)
advmod(have, not)
mark(poor, because)
nsubj(poor, he)
cop(poor, be)
advmod(poor, both)
advcl(have, poor)
cc(ambitious, and)
conj(poor, ambitious)
punct(have, .)
nsubj(impose, Poverty)
root(ROOT, impose)
det(kind, a)
obj(impose, kind)
case(chastity, of)
nmod(kind, chastity)
case(ambitious, on)
det(ambitious, the)
obl(impose, ambitious)
punct(impose, .)
nsubj(stop, they)
aux(stop, can)
advmod(stop, not)
root(ROOT, stop)
mark(grasp, to)
xcomp(stop, grasp)
cc(embrace, and)
conj(grasp, embrace)
cc(sit, and)
conj(grasp, sit)
case(seat, in)
det(seat, the)
amod(seat, back)
obl(sit, seat)
case(car, of)
nmod(seat, car)
case(lane, along)
det(lane, a)
amod(lane, dark)
compound(lane, country)
nmod(seat, lane)
punct(stop, .)
discourse(look, no)
punct(look, ,)
nsubj(look, they)
aux(look, must)
root(ROOT, look)
det(way, the)
amod(way, other)
obj(look, way)
cc(climb, and)
conj(look, climb)
nummod(step, one)
advmod(painful, more)
amod(step, painful)
obj(climb, step)
compound:prt(climb, up)
det(ladder, the)
obl:npmod(climb, ladder)
punct(look, .)
nsubj(make, he)
root(ROOT, make)
det(decision, the)
obj(make, decision)
case(eye, with)
nmod:poss(eye, he)
obl(make, eye)
xcomp(make, open)
punct(think, ,)
cc(think, or)
advmod(think, so)
nsubj(think, he)
conj(make, think)
punct(make, .)
case(cost, at)
det(cost, any)
obl(leave, cost)
punct(leave, ,)
nsubj(leave, he)
aux(leave, must)
root(ROOT, leave)
det(town, the)
amod(town, dreary)
compound(town, Pennsylvania)
compound(town, mining)
obj(leave, town)
advmod(pharmacist, where)
nmod:poss(father, he)
nsubj(pharmacist, father)
cop(pharmacist, be)
det(pharmacist, a)
acl:relcl(town, pharmacist)
punct(leave, .)
cc(have, and)
advmod(have, so)
nsubj(have, he)
root(ROOT, have)
punct(have, ,)
advmod(have, so)
nsubj(have, he)
conj(have, have)
punct(have, .)
case(College, at)
compound(College, State)
obl(have, College)
punct(have, ,)
nsubj(have, he)
root(ROOT, have)
det(time, no)
obj(have, time)
mark(walk, to)
acl(time, walk)
case(violet, among)
det(violet, the)
obl(walk, violet)
case(edge, on)
det(water, the)
nmod:poss(edge, water)
case(water, 's)
obl(walk, edge)
punct(have, .)
case(room, from)
nmod:poss(room, he)
obl(look, room)
nsubj(look, he)
aux(look, could)
parataxis(have, look)
advmod(look, out)
case(springtime, in)
obl(look, springtime)
cc(see, and)
conj(look, see)
det(hand, the)
compound(hand, couple)
obj(see, hand)
case(hand, in)
obl(see, hand)
advcl(see, walk)
advmod(walk, slowly)
punct(deliciously, ,)
advmod(walk, deliciously)
punct(walk, ,)
case(campus, across)
det(campus, the)
obl(walk, campus)
punct(smell, ,)
cc(smell, and)
nsubj(smell, he)
aux(smell, could)
conj(look, smell)
det(wind, the)
amod(wind, sweet)
compound(wind, vernal)
obj(smell, wind)
punct(have, .)
nsubj(stone, he)
cop(stone, be)
advmod(stone, not)
root(ROOT, stone)
punct(stone, .)
nsubj(unmove, he)
cop(unmove, be)
advmod(unmove, not)
root(ROOT, unmove)
punct(unmove, .)
nsubj(have, he)
root(ROOT, have)
mark(teach, to)
xcomp(have, teach)
obj(teach, himself)
advmod(teach, patiently)
mark(he, that)
det(trap, these)
nsubj(he, trap)
cop(he, be)
advmod(he, not)
case(he, for)
advcl(teach, he)
punct(have, .)
nsubj(pull, he)
aux(pull, must)
advmod(pull, mentally)
root(ROOT, pull)
det(blind, the)
obj(pull, blind)
cc(close, and)
conj(pull, close)
det(window, the)
obj(close, window)
punct(pull, ,)
mark(be, so)
fixed(so, that)
nsubj(be, all)
nsubj(exist, that)
acl:relcl(all, exist)
advcl(pull, be)
case(book, in)
det(book, the)
obl(be, book)
case(he, before)
nmod(book, he)
punct(pull, .)
case(school, at)
compound(school, law)
obl(same, school)
punct(same, ,)
det(same, the)
root(ROOT, same)
punct(same, .)
root(ROOT, more)
case(stamp, of)
det(stamp, this)
obl(more, stamp)
case(emotion, down)
case(emotion, of)
amod(emotion, human)
obl(more, emotion)
case(lawyer, as)
det(lawyer, a)
amod(lawyer, young)
obl(more, lawyer)
case(York, in)
compound(York, New)
nmod(lawyer, York)
punct(more, .)
case(time, by)
det(time, the)
obl(prosperous, time)
nsubj(prosperous, he)
cop(prosperous, be)
root(ROOT, prosperous)
advmod(prosperous, enough)
punct(prosperous, --)
nmod:poss(goal, he)
nsubj(high, goal)
cop(high, be)
parataxis(prosperous, high)
punct(high, --)
nsubj(bald, he)
cop(bald, be)
parataxis(high, bald)
cc(afraid, and)
conj(bald, afraid)
case(woman, of)
obl(afraid, woman)
punct(prosperous, .)
det(one, the)
amod(one, only)
nsubj(cripple, one)
nsubj(have, who)
aux(have, would)
acl:relcl(one, have)
obj(have, he)
cop(cripple, be)
nmod:poss(cripple, he)
root(ROOT, cripple)
punct(cripple, ,)
det(woman, the)
amod(woman, strange)
amod(woman, unhappy)
appos(cripple, woman)
nsubj(become, who)
acl:relcl(woman, become)
nmod:poss(wife, he)
obj(become, wife)
punct(cripple, .)
advmod(right, perhaps)
nsubj(right, it)
cop(right, be)
root(ROOT, right)
punct(right, ;)
punct(right, ;)
advmod(be, perhaps)
nsubj(be, it)
parataxis(right, be)
advmod(be, just)
punct(right, .)
nsubj(dare, he)
aux(dare, have)
root(ROOT, dare)
mark(defy, to)
xcomp(dare, defy)
obj(defy, nature)
punct(turn, ,)
mark(turn, to)
advcl(defy, turn)
nmod:poss(back, he)
obj(turn, back)
case(Lorelei, to)
det(Lorelei, the)
obl(turn, Lorelei)
punct(punish, ,)
cc(punish, and)
nsubj:pass(punish, he)
aux:pass(punish, be)
conj(dare, punish)
punct(dare, .)
case(Mrs., like)
obl(have, Mrs.)
flat(Mrs., Dalloway)
punct(have, ,)
case(regret, with)
nmod:poss(regret, she)
obl(have, regret)
case(Peter, about)
nmod(regret, Peter)
flat(Peter, walsh)
punct(have, ,)
nsubj(have, he)
root(ROOT, have)
nmod:poss(moment, he)
obj(have, moment)
case(melancholy, of)
nmod(moment, melancholy)
case(youth, over)
det(youth, a)
nmod(moment, youth)
advmod(well, too)
advmod(spend, well)
advcl(have, spend)
punct(have, .)
mark(have, if)
nsubj(have, he)
aux(have, have)
advcl(tell, have)
det(son, a)
obj(have, son)
punct(tell, ,)
nsubj(tell, he)
aux(tell, would)
root(ROOT, tell)
obj(tell, he)
punct(tell, ,)
punct(tell, ``)
root(ROOT, Gather)
nmod:poss(rosebud, ye)
obj(Gather, rosebud)
mark(may, while)
nsubj(may, ye)
advcl(Gather, may)
det(flower, this)
amod(flower, same)
nsubj(die, flower)
nsubj(smile, that)
acl:relcl(flower, smile)
obl:tmod(smile, today)
obl:tmod(smile, tomorrow)
aux(die, will)
aux(die, be)
root(ROOT, die)
punct(die, '')
punct(die, .)
cc(afford, but)
advmod(afford, then)
nmod:poss(son, he)
nsubj(afford, son)
aux(afford, could)
conj(die, afford)
obj(afford, it)
punct(wait, .)
nsubj(wait, Lawrence)
aux(wait, be)
parataxis(afford, wait)
case(Bill, for)
obl(wait, Bill)
flat(Bill, Boxell)
punct(wait, .)
det(President, the)
compound(President, Vice)
nsubj(call, President)
aux(call, have)
parataxis(wait, call)
cc(ask, and)
conj(call, ask)
mark(see, if)
nsubj(see, he)
aux(see, could)
advcl(ask, see)
det(Secretary, the)
obj(see, Secretary)
case(home, at)
nmod:poss(home, he)
obl(see, home)
punct(die, .)
nsubj(say, he)
root(ROOT, say)
det(matter, the)
nsubj(urgent, matter)
cop(urgent, be)
ccomp(say, urgent)
punct(say, .)
det(Secretary, the)
nsubj(uneasy, Secretary)
cop(uneasy, be)
ccomp(say, uneasy)
case(visit, about)
det(visit, the)
obl(uneasy, visit)
punct(say, .)
nsubj(like, he)
aux(like, do)
advmod(like, not)
root(ROOT, like)
obj(like, Boxell)
punct(like, .)
nsubj(suspect, he)
root(ROOT, suspect)
obj(suspect, something)
amod(something, underhand)
cc(furtive, and)
conj(underhand, furtive)
case(he, about)
obl(furtive, he)
punct(suspect, .)
nsubj(put, Lawrence)
aux(put, could)
advmod(put, not)
root(ROOT, put)
nmod:poss(finger, he)
obj(put, finger)
case(it, on)
obl(put, it)
advmod(put, precisely)
punct(worried, ,)
cc(worried, and)
nsubj(worried, this)
conj(put, worried)
obj(worried, he)
punct(put, .)
mark(dislik, when)
nsubj(dislik, you)
advcl(have, dislik)
cc(distrust, or)
conj(dislik, distrust)
det(man, a)
obj(distrust, man)
punct(have, ,)
nsubj(have, you)
aux(have, should)
root(ROOT, have)
det(reason, a)
obj(have, reason)
punct(have, .)
amod(nature, human)
nsubj(piece, nature)
cop(piece, be)
advmod(piece, not)
det(piece, a)
root(ROOT, piece)
case(meat, of)
nmod(piece, meat)
nsubj(tell, you)
aux(tell, could)
acl:relcl(meat, tell)
cop(bad, be)
acl:relcl(piece, bad)
case(smell, by)
nmod:poss(smell, it)
case(it, 's)
obl(bad, smell)
punct(stare, .)
nsubj(stare, Lawrence)
parataxis(piece, stare)
det(minute, a)
obj(stare, minute)
case(ribbon, at)
det(ribbon, the)
amod(ribbon, light)
obl(stare, ribbon)
case(traffic, of)
nmod(ribbon, traffic)
punct(stare, ,)
advcl(stare, hope)
mark(appear, that)
det(clue, a)
nsubj(appear, clue)
case(dislike, to)
nmod:poss(dislike, he)
nmod(clue, dislike)
case(President, of)
det(President, the)
compound(President, vice)
nmod(dislike, President)
aux(appear, would)
ccomp(hope, appear)
punct(piece, .)
nsubj(do, it)
root(ROOT, do)
advmod(do, not)
punct(do, .)
advmod(decide, therefore)
punct(decide, ,)
nsubj(decide, he)
root(ROOT, decide)
nsubj(unfair, he)
cop(unfair, be)
ccomp(decide, unfair)
case(man, to)
det(man, the)
amod(man, young)
obl(unfair, man)
cc(make, and)
aux(make, should)
conj(decide, make)
det(effort, a)
obj(make, effort)
mark(understand, to)
acl(effort, understand)
cc(sympathize, and)
conj(understand, sympathize)
case(point, with)
nmod:poss(point, he)
obl(sympathize, point)
case(view, of)
nmod(point, view)
punct(decide, . )
det(hour, a)
amod(hour, half)
obl:npmod(later, hour)
advmod(arrive, later)
det(President, the)
compound(President, vice)
nsubj(arrive, President)
root(ROOT, arrive)
punct(arrive, .)
nsubj(look, he)
root(ROOT, look)
advmod(carefully, very)
advmod(look, carefully)
case(piece, at)
det(piece, every)
obl(look, piece)
case(furnish, of)
nmod(piece, furnish)
punct(look, ,)
cc(hope, as)
fixed(as, though)
advcl(look, hope)
mark(store, to)
xcomp(hope, store)
det(information, this)
obj(store, information)
advmod(store, carefully)
case(mind, in)
nmod:poss(mind, he)
obl(store, mind)
punct(look, .)
nsubj(observe, he)
root(ROOT, observe)
det(vase, the)
amod(vase, Florentine)
obj(observe, vase)
case(hall, in)
det(hall, the)
obl(observe, hall)
punct(hall, ,)
det(painting, the)
compound(painting, renoir)
appos(vase, painting)
case(library, in)
det(library, the)
nmod(painting, library)
punct(shelf, ,)
cc(shelf, as)
fixed(as, well)
fixed(as, as)
det(shelf, the)
amod(shelf, long)
conj(painting, shelf)
case(volume, of)
advmod(bound, well)
punct(bound, -)
amod(volume, bound)
nmod(shelf, volume)
punct(shelf, ;)
punct(pattern, ;)
det(pattern, the)
appos(shelf, pattern)
case(rug, of)
det(rug, the)
amod(rug, Oriental)
nmod(pattern, rug)
punct(rug, ,)
det(chandelier, the)
amod(chandelier, delicate)
compound(chandelier, cut-glass)
appos(rug, chandelier)
punct(observe, .)
nsubj(say, he)
root(ROOT, say)
case(Secretary, to)
det(Secretary, the)
obl(say, Secretary)
punct(say, ,)
punct(say, ``)
nsubj(understand, I)
root(ROOT, understand)
nsubj(come, you)
ccomp(understand, come)
case(town, from)
det(town, a)
amod(town, little)
compound(town, Pennsylvania)
obl(come, town)
case(wilk, near)
nmod(town, wilk)
punct(Barre, -)
flat(wilk, Barre)
punct(understand, .)
advmod(find, how)
aux(find, do)
nsubj(find, you)
root(ROOT, find)
compound:prt(find, out)
case(this, about)
obl(find, this)
punct(find, '')
punct(find, ?)
punct(find, ?)
nsubj(wave, he)
root(ROOT, wave)
nmod:poss(arm, he)
obj(wave, arm)
advmod(wave, around)
case(furnishings, at)
det(furnishings, the)
obl(wave, furnishings)
punct(wave, .)
nsubj(question, it)
cop(question, be)
advmod(question, not)
det(question, a)
amod(question, discourteous)
root(ROOT, question)
punct(question, ,)
nsubj(decide, Lawrence)
parataxis(question, decide)
punct(question, .)
det(man, this)
amod(man, young)
nsubj(have, man)
root(ROOT, have)
advmod(little, so)
amod(time, little)
obj(have, time)
mark(learn, to)
acl(time, learn)
nsubj(have, he)
ccomp(learn, have)
mark(curious, to)
cop(curious, be)
xcomp(have, curious)
punct(have, ;)
punct(have, ;)
nsubj(have, he)
parataxis(have, have)
mark(find, to)
xcomp(have, find)
compound:prt(find, out)
punct(have, .)
det(Secretary, the)
nsubj(tell, Secretary)
aux(tell, do)
advmod(tell, not)
root(ROOT, tell)
obj(tell, he)
case(cost, at)
det(cost, what)
obl(tell, cost)
punct(tell, ,)
case(loneliness, at)
det(loneliness, what)
obl(learn, loneliness)
punct(learn, ,)
nsubj(learn, he)
ccomp(tell, learn)
det(thing, these)
obj(learn, thing)
punct(tell, .)
nsubj(say, he)
advmod(say, merely)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
det(decorator, any)
amod(decorator, good)
nsubj(make, decorator)
det(day, these)
nmod:tmod(decorator, day)
aux(make, can)
root(ROOT, make)
iobj(make, you)
det(home, a)
amod(home, tasteful)
xcomp(make, home)
punct(home, '')
punct(say, .)
det(President, the)
compound(President, vice)
nsubj(say, President)
parataxis(make, say)
punct(say, ,)
punct(make, ``)
mark(hear, if)
nsubj(hear, you)
advcl(decorate, hear)
case(name, of)
det(name, any)
obl(hear, name)
nsubj(fix, that)
aux(fix, would)
acl:relcl(name, fix)
obj(fix, I)
xcomp(fix, cheap)
case(return, in)
obl(fix, return)
case(advertising, for)
nmod(return, advertising)
nsubj(decorate, they)
root(ROOT, decorate)
det(President, the)
compound(President, vice)
nmod:poss(home, President)
case(President, 's)
obj(decorate, home)
punct(let, ,)
conj(decorate, let)
obj(let, I)
xcomp(let, know)
punct(decorate, . )
nsubj(do, I)
aux(do, can)
root(ROOT, do)
obj(do, business)
case(kind, with)
det(kind, that)
obl(do, kind)
punct(do, '')
punct(do, .)
advmod(do, again)
punct(do, ,)
nsubj(think, Lawrence)
parataxis(do, think)
det(little, a)
obl:npmod(sadly, little)
advmod(think, sadly)
punct(fee, ,)
nsubj(fee, these)
cop(fee, be)
det(fee, the)
ccomp(think, fee)
case(poverty, of)
nmod(fee, poverty)
cc(ambition, and)
conj(poverty, ambition)
punct(do, .)
nsubj(have, Boxell)
aux(have, do)
advmod(have, not)
root(ROOT, have)
det(chance, the)
obj(have, chance)
mark(grow, to)
acl(chance, grow)
compound:prt(grow, up)
advmod(grow, graciously)
punct(have, .)
nsubj(have, he)
root(ROOT, have)
mark(acquire, to)
xcomp(have, acquire)
obj(acquire, everything)
nsubj(go, he)
aux(go, be)
acl:relcl(everything, go)
mark(get, to)
xcomp(go, get)
case(year, in)
nummod(year, four)
obl(get, year)
punct(have, .)
nsubj(have, they)
root(ROOT, have)
obj(have, brandy)
case(library, in)
det(library, the)
obl(have, library)
punct(have, .)
nsubj(look, Boxell)
root(ROOT, look)
case(Lawrence, at)
obl(look, Lawrence)
case(glance, with)
det(glance, a)
compound(glance, searching)
obl(look, glance)
punct(look, ,)
det(kind, the)
parataxis(look, kind)
mark(give, that)
det(attorney, a)
compound(attorney, prosecute)
nsubj(give, attorney)
aux(give, would)
acl(kind, give)
det(man, a)
obj(give, man)
case(trial, on)
obl(give, trial)
punct(look, .)
root(ROOT, what)
cop(what, be)
nmod:poss(weakness, you)
nsubj(what, weakness)
punct(what, ?)
punct(what, ?)
advmod(break, where)
aux(break, will)
nsubj(break, you)
root(ROOT, break)
punct(break, ?)
punct(break, ?)
advmod(best, how)
root(ROOT, best)
mark(destroy, to)
csubj(best, destroy)
nmod:poss(peace, you)
obj(destroy, peace)
punct(best, ?)
punct(best, ?)
det(President, the)
compound(President, vice)
nsubj(say, President)
root(ROOT, say)
case(bluster, with)
det(bluster, a)
amod(bluster, slight)
obl(say, bluster)
punct(say, ,)
punct(say, ``)
expl(be, there)
root(ROOT, be)
advmod(be, not)
nsubj(be, anyone)
nsubj(love, who)
acl:relcl(anyone, love)
det(President, the)
obj(love, President)
obj(love, more)
mark(do, than)
nsubj(do, I)
advcl(more, do)
punct(be, .)
parataxis(be, old)
nsubj(ideal, Chris)
cop(ideal, be)
nmod:poss(ideal, my)
root(ROOT, ideal)
punct(ideal, .)
case(time, at)
det(time, the)
amod(time, same)
obl(have, time)
punct(have, ,)
nsubj(have, you)
root(ROOT, have)
mark(face, to)
xcomp(have, face)
obj(face, fact)
cc(realize, and)
conj(face, realize)
mark(understand, that)
det(man, a)
nsubj(understand, man)
nsubj(Corps, who)
cop(Corps, be)
cop(Corps, be)
case(Corps, in)
det(Corps, the)
compound(Corps, Marine)
acl:relcl(man, Corps)
det:predet(life, all)
nmod:poss(life, he)
nmod(Corps, life)
aux(understand, do)
advmod(understand, not)
ccomp(realize, understand)
obj(understand, much)
case(politics, about)
obl(much, politics)
punct(have, .)
obj(know, what)
aux(know, do)
det(monk, a)
nsubj(know, monk)
root(ROOT, know)
case(sex, about)
obl(know, sex)
punct(know, '')
punct(know, ?)
punct(know, ?)
nsubj(listen, Lawrence)
root(ROOT, listen)
case(calm, with)
det(calm, the)
amod(calm, practice)
punct(calm, ,)
amod(calm, deceptive)
obl(listen, calm)
case(lawyer, of)
det(lawyer, the)
nmod(calm, lawyer)
punct(shadow, ,)
cc(shadow, but)
nmod:poss(face, he)
nsubj(shadow, face)
cop(shadow, be)
case(shadow, in)
det(shadow, the)
conj(listen, shadow)
punct(listen, .)
punct(listen, ``)
advmod(have, so)
punct(have, ,)
nsubj(have, we)
root(ROOT, have)
mark(protect, to)
xcomp(have, protect)
det(man, the)
amod(man, old)
obj(protect, man)
case(good, for)
nmod:poss(good, he)
amod(good, own)
obl(protect, good)
punct(have, .)
nsubj(see, you)
root(ROOT, see)
obj(mean, what)
nsubj(mean, I)
ccomp(see, mean)
punct(see, .)
nsubj(full, Congress)
cop(full, be)
root(ROOT, full)
case(politician, of)
obl(full, politician)
punct(have, ,)
cc(have, and)
mark(want, if)
nsubj(want, you)
advcl(have, want)
mark(get, to)
xcomp(want, get)
advmod(get, along)
case(they, with)
obl(get, they)
punct(have, ,)
nsubj(have, you)
conj(full, have)
mark(politic, to)
cop(politic, be)
xcomp(have, politic)
punct(full, .)
nsubj(why, this)
cop(why, be)
root(ROOT, why)
nsubj(say, I)
acl:relcl(why, say)
nsubj(go, we)
advmod(go, just)
aux(go, can)
advmod(go, not)
ccomp(say, go)
advmod(go, ahead)
cc(disarm, and)
conj(go, disarm)
det(Germans, the)
obj(disarm, Germans)
cc(pull, and)
conj(disarm, pull)
compound:prt(pull, down)
nmod:poss(defense, we)
amod(defense, own)
obj(pull, defense)
punct(why, .)
root(ROOT, let)
obj(let, I)
xcomp(let, tell)
obj(tell, you)
nsubj(happen, what)
ccomp(tell, happen)
case(I, to)
obl(happen, I)
obl:tmod(happen, today)
punct(let, . )
det(fellow, a)
nsubj(come, fellow)
root(ROOT, come)
advmod(come, up)
case(I, to)
obl(come, I)
punct(come, ,)
det(Senator, a)
parataxis(come, Senator)
punct(come, ,)
nsubj(have, I)
aux(have, do)
advmod(have, not)
parataxis(come, have)
mark(tell, to)
xcomp(have, tell)
iobj(tell, you)
nmod:poss(name, he)
obj(tell, name)
punct(tell, ,)
cc(tell, and)
nsubj(tell, he)
conj(come, tell)
obj(tell, I)
punct(tell, ,)
punct(love, ')
nsubj(love, I)
ccomp(tell, love)
det(President, the)
obj(love, President)
case(brother, like)
det(brother, a)
obl(love, brother)
punct(damn, ,)
cc(damn, but)
nsubj(damn, God)
conj(love, damn)
obj(damn, it)
punct(damn, ,)
nsubj(crucify, he)
aux(crucify, be)
ccomp(damn, crucify)
obj(crucify, I)
punct(come, . )
nsubj(get, I)
aux(get, have)
root(ROOT, get)
det(quarter, a)
obj(get, quarter)
case(Germans, of)
det(Germans, a)
nummod(Germans, million)
nmod(quarter, Germans)
case(state, in)
nmod:poss(state, my)
nmod(Germans, state)
punct(tune, ,)
cc(tune, and)
det(krauthead, those)
nsubj(tune, krauthead)
conj(get, tune)
advmod(tune, in)
case(Father, on)
obl(tune, Father)
flat(Father, Werther)
det(night, every)
obl:tmod(tune, night)
punct(tune, ,)
cc(be, and)
mark(tell, if)
nsubj(tell, he)
advcl(tune, tell)
obj(tell, they)
mark(go, to)
xcomp(tell, go)
advmod(go, out)
cc(piss, and)
conj(go, piss)
case(square, in)
det(square, the)
amod(square, public)
obl(piss, square)
punct(be, ,)
nsubj(be, that)
parataxis(get, be)
ccomp(be, what)
nsubj(do, they)
acl:relcl(what, do)
punct(get, .)
nsubj(tell, he)
aux(tell, be)
root(ROOT, tell)
obj(tell, they)
advmod(tell, now)
mark(write, to)
xcomp(tell, write)
obj(write, letter)
case(Congressmen, to)
nmod:poss(Congressmen, they)
obl(write, Congressmen)
case(disarmament, oppose)
det(disarmament, the)
obl(write, disarmament)
case(Germany, of)
nmod(disarmament, Germany)
punct(tell, .)
cc(come, and)
det(one, another)
nsubj(come, one)
conj(tell, come)
case(I, to)
obl(come, I)
cc(say, and)
nsubj(say, he)
conj(come, say)
punct(say, ,)
punct(look, ')
ccomp(say, look)
advmod(look, here)
punct(look, ,)
expl(be, there)
parataxis(look, be)
det(mill, a)
nsubj(be, mill)
case(state, in)
nmod:poss(state, my)
nmod(mill, state)
advcl(be, employ)
compound(thousand, five)
nummod(people, thousand)
obj(employ, people)
acl(people, make)
obj(make, uniform)
case(navy, for)
det(navy, the)
obl(make, navy)
punct(tell, .)
det(Bishop, the)
nsubj(look, Bishop)
root(ROOT, look)
case(he, at)
obl(look, he)
advmod(look, coldly)
cc(say, and)
conj(look, say)
punct(look, ,)
punct(look, ``)
root(ROOT, take)
obj(take, it)
cc(leave, or)
conj(take, leave)
obj(leave, it)
punct(take, '')
punct(take, !)
punct(take, !)
advmod(be, literally)
punct(be, ,)
expl(be, there)
root(ROOT, be)
nsubj(be, nothing)
amod(nothing, else)
mark(do, to)
acl(nothing, do)
punct(be, .)
nsubj:pass(catch, he)
aux:pass(catch, be)
root(ROOT, catch)
case(machine, in)
det(machine, a)
obl(catch, machine)
punct(catch, .)
cc(say, but)
nsubj(excited, Sojourner)
cop(excited, be)
advmod(excited, not)
advmod(excited, easily)
root(ROOT, excited)
cc(upset, or)
conj(excited, upset)
cc(say, and)
conj(excited, say)
advmod(calmly, quite)
advmod(say, calmly)
punct(excited, :)
punct(excited, ``)
root(ROOT, let)
obj(let, 's)
xcomp(let, go)
cc(see, and)
conj(let, see)
obj(see, what)
nsubj(what, it)
cop(what, be)
case(what, like)
punct(let, '')
punct(let, .)
nsubj(west, Annisberg)
cop(west, be)
advmod(five, about)
compound(five, seventy)
punct(five, -)
nummod(mile, five)
obl:npmod(west, mile)
parataxis(let, west)
case(Birmingham, of)
obl(west, Birmingham)
punct(west, ,)
case(border, near)
det(border, the)
compound(border, Georgia)
obl(west, border)
cc(River, and)
case(River, on)
det(River, the)
compound(River, Tallahoosa)
conj(border, River)
punct(River, ,)
det(stream, a)
amod(stream, small)
cc(dirty, and)
conj(small, dirty)
appos(River, stream)
punct(let, .)
det(city, the)
nsubj(center, city)
cop(center, be)
det(center, a)
root(ROOT, center)
case(manufacture, of)
nmod(center, manufacture)
punct(center, ,)
advmod(textile, especially)
case(textile, in)
nmod(center, textile)
punct(beauty, ,)
cc(beauty, and)
advmod(beauty, also)
case(beauty, because)
fixed(because, of)
det(beauty, the)
conj(center, beauty)
case(some, of)
nmod(beauty, some)
case(surroundings, of)
nmod:poss(surroundings, its)
nmod(some, surroundings)
punct(residence, ,)
det(residence, a)
conj(some, residence)
case(owner, for)
amod(owner, many)
nmod(residence, owner)
case(industry, of)
det(industry, the)
amod(industry, great)
nmod(owner, industry)
case(Alabama, in)
amod(Alabama, north)
nmod(industry, Alabama)
punct(center, .)
cc(have, but)
nsubj(have, it)
root(ROOT, have)
punct(have, ,)
mark(usual, as)
cop(usual, be)
advcl(have, usual)
case(city, in)
amod(city, southern)
obl(usual, city)
case(sort, of)
det(sort, this)
nmod(city, sort)
punct(bottom, ,)
det(bottom, a)
compound(bottom, Black)
conj(sort, bottom)
punct(region, ,)
det(region, a)
amod(region, low)
conj(bottom, region)
case(river, near)
det(river, the)
nmod(region, river)
advmod(live, where)
det(Negroes, the)
nsubj(live, Negroes)
acl:relcl(river, live)
punct(huddled, --)
nsubj(huddled, servant)
cc(laborer, and)
conj(servant, laborer)
parataxis(have, huddled)
advmod(huddled, together)
case(region, in)
det(region, a)
obl(huddled, region)
case(sewage, with)
det(sewage, no)
nmod(region, sewage)
case(river, save)
det(river, the)
nmod(sewage, river)
punct(sewage, ,)
advmod(neglect, where)
nsubj:pass(neglect, street)
cc(sidewalk, and)
conj(street, sidewalk)
aux:pass(neglect, be)
acl:relcl(river, neglect)
cc(be, and)
advmod(be, where)
expl(be, there)
conj(neglect, be)
amod(poverty, much)
nsubj(be, poverty)
cc(crime, and)
conj(poverty, crime)
punct(come, .)
nsubj(come, Wilson)
parataxis(be, come)
case(train, by)
obl(come, train)
case(Birmingham, from)
obl(come, Birmingham)
cc(look, and)
conj(come, look)
det(city, the)
obj(look, city)
advmod(look, over)
punct(come, ;)
punct(come, ;)
det(city, the)
advmod(pleasant, rather)
amod(city, pleasant)
amod(city, white)
nsubj(hill, city)
cop(hill, be)
case(hill, on)
det(hill, the)
parataxis(come, hill)
advmod(hill, where)
det(store, the)
amod(store, chief)
nsubj(where, store)
cop(where, be)
punct(have, .)
root(ROOT, Beyond)
cop(Beyond, be)
nsubj(Beyond, industry)
cc(factory, and)
conj(industry, factory)
punct(Beyond, .)
advmod(down, then)
nsubj(down, they)
nsubj(down, we)
advmod(down, not)
root(ROOT, down)
case(bottom, to)
compound(bottom, Black)
obl(down, bottom)
punct(down, .)
case(midst, in)
det(midst, the)
obl(Church, midst)
case(region, of)
det(region, this)
amod(region, crowded)
nmod(midst, region)
cop(Church, be)
det(Church, the)
compound(Church, Allen)
compound(Church, African)
compound(Church, Methodist)
compound(Church, episcopal)
root(ROOT, Church)
punct(Church, .)
nsubj(structure, it)
cop(structure, be)
det(structure, a)
amod(structure, old)
cc(dirty, and)
conj(old, dirty)
compound(structure, wooden)
root(ROOT, structure)
punct(structure, ,)
advmod(need, sadly)
case(need, in)
obl(structure, need)
case(repair, of)
nmod(need, repair)
punct(structure, .)
cc(landmark, but)
nsubj(landmark, it)
cop(landmark, be)
det(landmark, a)
root(ROOT, landmark)
punct(landmark, .)
nsubj(there, it)
aux(there, have)
cop(there, be)
root(ROOT, there)
nummod(year, 50)
obl:tmod(there, year)
cc(more, or)
conj(year, more)
cc(know, and)
nsubj(know, everybody)
case(town, in)
nmod(everybody, town)
punct(black, ,)
conj(town, black)
cc(white, and)
conj(town, white)
punct(know, ,)
conj(there, know)
case(it, of)
obl(know, it)
punct(there, .)
nsubj(suffer, it)
aux(suffer, have)
advmod(suffer, just)
root(ROOT, suffer)
det(calamity, a)
obj(suffer, calamity)
punct(calamity, ,)
det(crisis, the)
amod(crisis, final)
appos(calamity, crisis)
case(series, in)
det(series, a)
amod(series, long)
obl(suffer, series)
case(calamity, of)
nmod(series, calamity)
punct(suffer, .)
case(preacher, for)
det(preacher, the)
amod(preacher, old)
obl(dead, preacher)
nsubj(there, who)
aux(there, have)
cop(there, be)
acl:relcl(preacher, there)
compound(five, twenty)
punct(five, -)
nummod(year, five)
nsubj(dead, year)
cop(dead, be)
root(ROOT, dead)
punct(mourn, ,)
cc(mourn, and)
det(city, the)
nsubj(mourn, city)
conj(dead, mourn)
obj(mourn, he)
punct(dead, .)
nsubj(man, he)
cop(man, be)
det(man, a)
compound(voice, loud)
punct(voice, -)
amod(man, voice)
root(ROOT, man)
punct(man, ,)
advmod(vigorous, once)
amod(man, vigorous)
cc(decline, but)
case(year, for)
amod(year, many)
obl(decline, year)
advmod(decline, now)
conj(man, decline)
case(strength, in)
obl(decline, strength)
cc(ability, and)
conj(strength, ability)
punct(man, .)
nsubj(stern, he)
cop(stern, be)
root(ROOT, stern)
cc(overbearing, and)
conj(stern, overbearing)
case(flock, with)
nmod:poss(flock, he)
obl(stern, flock)
punct(obsequious, ,)
cc(obsequious, but)
conj(stern, obsequious)
cc(conciliatory, and)
conj(obsequious, conciliatory)
case(white, with)
det(white, the)
obl(obsequious, white)
punct(white, ,)
advmod(rich, especially)
det(rich, the)
appos(white, rich)
nsubj(support, who)
advmod(support, partly)
acl:relcl(rich, support)
det(church, the)
obj(support, church)
punct(stern, .)
det(Board, the)
compound(Board, deacon)
nsubj(take, Board)
punct(Board, ,)
acl(Board, head)
case(man, by)
det(man, a)
amod(man, black)
obl(head, man)
acl(man, name)
xcomp(name, Carlson)
punct(take, ,)
aux(take, have)
advmod(take, practically)
root(ROOT, take)
compound:prt(take, over)
mark(grow, as)
det(pastor, the)
nsubj(grow, pastor)
advcl(take, grow)
xcomp(grow, old)
punct(have, ,)
cc(have, and)
conj(take, have)
nmod:poss(way, its)
obj(have, way)
case(support, with)
det(support, the)
nmod(way, support)
case(corner, of)
det(corner, the)
compound(corner, amen)
nmod(support, corner)
punct(take, .)
det(thing, the)
amod(thing, characteristic)
nsubj(be, thing)
case(church, about)
det(church, this)
nmod(thing, church)
root(ROOT, be)
nsubj(corner, it)
cop(corner, be)
compound(corner, amen)
ccomp(be, corner)
cc(orgy, and)
det(orgy, the)
amod(orgy, weekly)
amod(orgy, religious)
conj(corner, orgy)
punct(be, . )
det(knot, a)
nsubj(listen, knot)
case(worshipper, of)
amod(worshipper, old)
nmod(knot, worshipper)
punct(worshipper, ,)
amod(woman, chiefly)
conj(worshipper, woman)
punct(listen, ,)
root(ROOT, listen)
advmod(listen, weekly)
case(sermon, to)
det(sermon, a)
obl(listen, sermon)
punct(listen, .)
nsubj(begin, it)
root(ROOT, begin)
advmod(begin, invariably)
case(tone, in)
amod(tone, low)
obl(begin, tone)
punct(conversational, ,)
advmod(conversational, almost)
amod(tone, conversational)
punct(work, ,)
cc(work, and)
advmod(work, then)
advmod(work, gradually)
conj(begin, work)
compound:prt(work, up)
case(appeal, to)
amod(appeal, high)
punct(appeal, ,)
amod(appeal, shrill)
obl(work, appeal)
case(God, to)
nmod(appeal, God)
cc(man, and)
conj(God, man)
punct(begin, .)
cc(take, and)
advmod(take, then)
det(corner, the)
compound(corner, amen)
nsubj(take, corner)
conj(begin, take)
obj(take, hold)
punct(take, ,)
advcl(take, re-enact)
det(form, a)
obj(re-enact, form)
case(participation, of)
compound(participation, group)
nmod(form, participation)
case(worship, in)
nmod(participation, worship)
nsubj(stem, that)
acl:relcl(participation, stem)
case(year, from)
obl(stem, year)
case(chorus, before)
det(chorus, the)
amod(chorus, Greek)
obl(stem, chorus)
punct(spread, ,)
advcl(stem, spread)
compound:prt(spread, down)
case(forest, through)
det(forest, the)
amod(forest, african)
obl(spread, forest)
punct(forest, ,)
advmod(spread, overseas)
case(indy, to)
det(indy, the)
compound(indy, West)
obl(overseas, indy)
punct(here, ,)
cc(here, and)
advmod(here, then)
conj(forest, here)
case(Alabama, in)
obl(here, Alabama)
punct(begin, .)
case(shout, with)
obl(beset, shout)
cc(dance, and)
amod(dance, slow)
conj(shout, dance)
punct(beset, ,)
case(tear, with)
obl(beset, tear)
cc(song, and)
conj(tear, song)
punct(beset, ,)
case(scream, with)
obl(beset, scream)
cc(contortion, and)
conj(scream, contortion)
punct(beset, ,)
det(group, the)
compound(group, corner)
nsubj:pass(beset, group)
aux:pass(beset, be)
root(ROOT, beset)
case(hysteria, by)
obl(beset, hysteria)
cc(shiver, and)
conj(hysteria, shiver)
punct(wail, ,)
conj(hysteria, wail)
punct(shout, ,)
conj(hysteria, shout)
punct(possession, ,)
conj(hysteria, possession)
case(something, of)
nmod(possession, something)
nsubj(seem, that)
acl:relcl(something, seem)
case(force, like)
det(force, a)
amod(force, alien)
cc(outside, and)
conj(alien, outside)
obl(seem, force)
punct(beset, .)
nsubj(spread, it)
root(ROOT, spread)
case(most, to)
obl(spread, most)
case(audience, of)
det(audience, the)
nmod(most, audience)
cc(view, and)
aux:pass(view, be)
advmod(view, often)
conj(spread, view)
mark(visit, by)
advcl(view, visit)
obj(visit, white)
nsubj(snicker, who)
acl:relcl(white, snicker)
case(handkerchief, behind)
obl(snicker, handkerchief)
cc(discuss, and)
advmod(discuss, afterward)
conj(snicker, discuss)
amod(religion, Negro)
obj(discuss, religion)
punct(spread, .)
nsubj(end, it)
advmod(end, sometimes)
root(ROOT, end)
compound:prt(end, in)
compound(trance, death)
punct(death, -)
case(trance, like)
obl(end, trance)
case(lie, with)
amod(lie, many)
obl:npmod(exhaust, lie)
amod(trance, exhaust)
cc(panting, and)
conj(exhaust, panting)
case(chair, on)
obl(panting, chair)
cc(floor, and)
conj(chair, floor)
punct(end, .)
case(most, to)
obl(experience, most)
case(those, of)
nmod(most, those)
nsubj(compose, who)
acl:relcl(those, compose)
det(corner, the)
compound(corner, amen)
obj(compose, corner)
nsubj(experience, it)
cop(experience, be)
det(experience, a)
amod(experience, magnificent)
cc(beautiful, and)
conj(magnificent, beautiful)
parataxis(end, experience)
punct(experience, ,)
appos(experience, something)
case(which, for)
obl(live, which)
nsubj(live, they)
acl:relcl(something, live)
case(week, from)
obl(live, week)
case(week, to)
obl(live, week)
punct(something, .)
nsubj:pass(re-enact, it)
aux:pass(re-enact, be)
advmod(re-enact, often)
root(ROOT, re-enact)
case(form, in)
advmod(wild, less)
amod(form, wild)
obl(re-enact, form)
case(meeting, at)
det(meeting, the)
compound(night, Wednesday)
compound(meeting, night)
compound(meeting, prayer)
obl(re-enact, meeting)
punct(re-enact, .)
vocative(witness, Wilson)
punct(witness, ,)
case(Sunday, on)
nmod:poss(Sunday, he)
amod(Sunday, first)
obl(witness, Sunday)
punct(witness, ,)
root(ROOT, witness)
obj(witness, this)
case(something, with)
obl(witness, something)
case(disgust, like)
nmod(something, disgust)
punct(witness, .)
nsubj(preach, he)
aux(preach, have)
root(ROOT, preach)
det(sermon, a)
amod(sermon, short)
obj(preach, sermon)
punct(preach, ,)
advcl(preach, try)
mark(talk, to)
xcomp(try, talk)
obj(talk, man)
case(man, -to)
punct(man, -)
obj(talk, man)
case(audience, to)
det(audience, the)
obl(talk, audience)
punct(talk, ,)
mark(tell, to)
advcl(talk, tell)
obj(tell, they)
ccomp(tell, who)
nsubj(who, he)
cop(who, be)
punct(do, ,)
obj(do, what)
nsubj(do, he)
aux(do, have)
ccomp(be, do)
case(Macon, in)
obl(do, Macon)
cc(Birmingham, and)
conj(Macon, Birmingham)
punct(what, ,)
cc(what, and)
conj(Macon, what)
nsubj(propose, he)
acl:relcl(what, propose)
mark(do, to)
xcomp(propose, do)
advmod(do, here)
punct(preach, .)
nsubj(sympathize, he)
root(ROOT, sympathize)
case(they, with)
obl(sympathize, they)
case(loss, on)
det(loss, the)
obl(sympathize, loss)
case(pastor, of)
nmod:poss(pastor, they)
amod(pastor, old)
nmod(loss, pastor)
punct(sympathize, .)
cc(break, but)
advmod(break, then)
punct(break, ,)
case(mention, at)
obl(break, mention)
case(name, of)
det(name, that)
nmod(mention, name)
punct(break, ,)
det(corner, the)
compound(corner, amen)
nsubj(break, corner)
root(ROOT, break)
advmod(break, loose)
punct(break, .)
nsubj(have, he)
root(ROOT, have)
det(chance, no)
obj(have, chance)
mark(say, to)
acl(chance, say)
det(word, another)
obj(say, word)
punct(have, .)
case(end, at)
det(end, the)
amod(end, very)
obl(take, end)
punct(take, ,)
mark(silent, when)
det(audience, the)
nsubj(silent, audience)
cop(silent, be)
advcl(take, silent)
cc(breathless, and)
conj(silent, breathless)
punct(take, ,)
det(collection, a)
nsubj:pass(take, collection)
aux:pass(take, be)
root(ROOT, take)
cc(file, and)
advmod(file, then)
advmod(file, slowly)
nsubj(file, everyone)
conj(take, file)
compound:prt(file, out)
punct(take, .)
det(audience, the)
nsubj(think, audience)
aux(think, do)
advmod(think, not)
root(ROOT, think)
obj(think, much)
case(pastor, of)
det(pastor, the)
amod(pastor, new)
obl(much, pastor)
punct(what, ,)
cc(what, and)
conj(think, what)
det(pastor, the)
amod(pastor, new)
nsubj(think, pastor)
acl:relcl(what, think)
case(audience, of)
det(audience, the)
obl(think, audience)
nsubj(dare, he)
aux(dare, do)
advmod(dare, not)
acl:relcl(audience, dare)
case(time, at)
det(time, the)
obl(dare, time)
mark(say, to)
acl(time, say)
punct(dare, .)
case(week, during)
det(week, the)
amod(week, next)
obl(look, week)
nsubj(look, he)
conj(dare, look)
case(situation, over)
det(situation, the)
obl(look, situation)
punct(think, .)
advmod(parsonage, first)
case(all, of)
obl(first, all)
expl(parsonage, there)
cop(parsonage, be)
det(parsonage, the)
root(ROOT, parsonage)
punct(parsonage, ,)
det(place, a)
advmod(impossible, utterly)
amod(place, impossible)
appos(parsonage, place)
case(people, for)
amod(people, civilized)
nmod(place, people)
mark(live, to)
acl(place, live)
obl(live, in)
punct(live, ,)
advmod(conceive, originally)
advmod(conceive, poorly)
conj(live, conceive)
punct(repair, ,)
advmod(repair, apparently)
advmod(repair, not)
conj(conceive, repair)
case(year, for)
obl(repair, year)
punct(repair, ,)
case(plumb, with)
det(plumb, no)
obl(repair, plumb)
cc(sewage, or)
conj(plumb, sewage)
punct(plumb, ,)
case(rat-hole, with)
nmod(plumb, rat-hole)
cc(rot, and)
conj(rat-hole, rot)
punct(parsonage, .)
nsubj:pass(arrange, it)
aux:pass(arrange, be)
root(ROOT, arrange)
mark(board, that)
nsubj(board, he)
aux(board, would)
ccomp(arrange, board)
case(home, in)
det(home, the)
obl(board, home)
case(one, of)
nmod(home, one)
case(member, of)
det(member, the)
amod(member, old)
nmod(one, member)
case(church, of)
det(church, the)
nmod(member, church)
punct(board, ,)
det(woman, a)
parataxis(board, woman)
acl(woman, name)
xcomp(name, Catt)
nsubj(find, who)
punct(find, ,)
mark(find, as)
nsubj(find, Wilson)
advmod(find, afterward)
acl:relcl(woman, find)
punct(refer, ,)
aux:pass(refer, be)
advmod(refer, briefly)
ccomp(find, refer)
obl(refer, to)
case(cat, as)
det(cat, the)
obl(refer, cat)
case(initiative, because)
fixed(because, of)
nmod:poss(initiative, she)
amod(tongue, sharp)
compound(initiative, tongue)
cc(fierce, and)
conj(tongue, fierce)
obl(refer, initiative)
punct(arrange, .)
nsubj(soul, Ann)
flat(Ann, Catt)
cop(soul, be)
det(soul, a)
amod(soul, lonely)
punct(soul, ,)
amod(soul, devote)
root(ROOT, soul)
punct(soul, ,)
advmod(marry, never)
parataxis(soul, marry)
punct(conduct, ,)
conj(marry, conduct)
det(home, a)
amod(home, spotless)
obj(conduct, home)
cc(devote, and)
conj(conduct, devote)
case(church, to)
nmod:poss(church, she)
obl(devote, church)
punct(dissenter, ,)
cc(dissenter, but)
det(dissenter, a)
amod(dissenter, perpetual)
conj(church, dissenter)
cc(critic, and)
amod(critic, bear)
conj(dissenter, critic)
punct(soul, .)
nsubj(soar, she)
root(ROOT, soar)
case(pastor, over)
det(pastor, the)
amod(pastor, new)
obl(soar, pastor)
case(angel, like)
det(angel, a)
compound(angel, aveng)
nmod(pastor, angel)
mark(stray, lest)
nsubj(stray, he)
advcl(soar, stray)
case(path, from)
det(path, the)
obl(stray, path)
cc(know, and)
advmod(know, not)
conj(stray, know)
det:predet(truth, all)
det(truth, the)
obj(know, truth)
cc(gossip, and)
conj(truth, gossip)
case(which, of)
obl(repository, which)
nsubj(repository, she)
cop(repository, be)
amod(repository, chief)
acl:relcl(truth, repository)
punct(soar, .)
advmod(look, then)
nsubj(look, Wilson)
parataxis(soar, look)
case(church, over)
det(church, the)
obl(look, church)
cc(study, and)
conj(look, study)
nmod:poss(condition, its)
obj(study, condition)
punct(soar, .)
det(salary, the)
nsubj($, salary)
case(pastor, of)
det(pastor, the)
nmod(salary, pastor)
aux($, have)
case(year, for)
obl($, year)
cop($, be)
root(ROOT, $)
nummod($, 500)
advmod($, annually)
cc(arrear, and)
advmod(arrear, even)
nsubj(arrear, this)
cop(arrear, be)
case(arrear, in)
conj($, arrear)
punct($, .)
nsubj(make, Wilson)
root(ROOT, make)
compound:prt(make, up)
nmod:poss(mind, he)
obj(make, mind)
mark(receive, that)
nsubj(receive, he)
aux(receive, must)
ccomp(make, receive)
case(least, at)
nmod($, least)
obj(receive, $)
nummod($, 2,500)
punct(say, ,)
cc(say, but)
mark(mention, when)
nsubj(mention, he)
advcl(say, mention)
obj(mention, this)
case(deacon, to)
det(deacon, the)
obl(mention, deacon)
nsubj(say, they)
conj(make, say)
obj(say, nothing)
punct(make, .)
det(church, the)
nsubj:pass(repair, church)
nmod:npmod(church, itself)
aux(repair, must)
aux:pass(repair, be)
root(ROOT, repair)
punct(repair, .)
nsubj(dirty, it)
cop(dirty, be)
root(ROOT, dirty)
cc(neglect, and)
conj(dirty, neglect)
punct(dirty, .)
nsubj(ought, it)
advmod(ought, really)
root(ROOT, ought)
mark(rebuilt, to)
aux:pass(rebuilt, be)
xcomp(ought, rebuilt)
punct(determine, ,)
cc(determine, and)
nsubj(determine, he)
conj(ought, determine)
mark(go, to)
xcomp(determine, go)
advmod(go, up)
cc(talk, and)
conj(go, talk)
case(bank, to)
det(bank, the)
compound(bank, city)
obl(talk, bank)
case(this, about)
nmod(bank, this)
punct(ought, .)
advmod(talk, meanwhile)
punct(talk, ,)
det(city, the)
nsubj:pass(talk, city)
nmod:npmod(city, itself)
aux(talk, should)
aux:pass(talk, be)
parataxis(ought, talk)
obl(talk, to)
punct(ought, .)
det(street, the)
nsubj(dirty, street)
case(section, in)
det(section, the)
amod(section, color)
nmod(street, section)
cop(dirty, be)
root(ROOT, dirty)
punct(dirty, .)
expl(be, there)
root(ROOT, be)
nsubj(be, typhoid)
cc(malaria, and)
conj(typhoid, malaria)
punct(be, .)
det(child, the)
nsubj(have, child)
root(ROOT, have)
advmod(have, nowhere)
mark(go, to)
xcomp(have, go)
cc(place, and)
det(place, no)
conj(go, place)
mark(play, to)
acl(place, play)
punct(sidewalk, ,)
cc(sidewalk, not)
advmod(sidewalk, even)
obj(play, sidewalk)
punct(have, .)
det(school, the)
nsubj(small, school)
cop(small, be)
root(ROOT, small)
punct(dark, ,)
conj(small, dark)
cc(equip, and)
amod(equip, ill)
punct(equip, -)
conj(small, equip)
punct(small, .)
det(teacher, the)
nsubj(fool, teacher)
cop(fool, be)
det(fool, a)
amod(fool, pliant)
root(ROOT, fool)
punct(fool, .)
expl(be, there)
root(ROOT, be)
nummod(saloon, two)
compound(saloon, liquor)
nsubj(be, saloon)
advmod(far, not)
advmod(far, very)
amod(saloon, far)
case(church, from)
det(church, the)
obl(far, church)
punct(church, ,)
nummod(white, one)
appos(church, white)
punct(white, ,)
nsubj:pass(conduct, that)
aux:pass(conduct, be)
acl:relcl(white, conduct)
case(people, for)
amod(people, white)
obl(conduct, people)
case(entrance, with)
det(entrance, a)
compound(entrance, side)
obl(conduct, entrance)
case(Negroes, for)
nmod(entrance, Negroes)
punct(entrance, ;)
punct(Negro, ;)
det(Negro, the)
amod(Negro, other)
advmod(Negro, exclusively)
appos(entrance, Negro)
punct(be, .)
advmod(be, undoubtedly)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(deal, a)
amod(deal, good)
nsubj(be, deal)
case(gambling, of)
nmod(deal, gambling)
case(both, in)
nmod(deal, both)
punct(be, .)
case(side, on)
det(side, the)
amod(side, other)
obl(house, side)
case(church, of)
det(church, the)
nmod(side, church)
cop(house, be)
det(house, a)
amod(house, quiet)
punct(house, ,)
advmod(keep, well)
punct(keep, -)
amod(house, keep)
root(ROOT, house)
case(shutter, with)
nmod(house, shutter)
cc(paint, and)
advmod(paint, recently)
conj(shutter, paint)
punct(house, .)
nsubj(inquire, Wilson)
root(ROOT, inquire)
case(it, about)
obl(inquire, it)
punct(inquire, .)
nsubj:pass(call, it)
aux:pass(call, be)
root(ROOT, call)
compound(House, Kent)
xcomp(call, House)
punct(call, .)
det(deacon, the)
nsubj(janitor, deacon)
case(church, of)
det(church, the)
nmod(deacon, church)
punct(church, ,)
appos(church, Carlson)
punct(janitor, ,)
cop(janitor, be)
nmod:poss(janitor, its)
root(ROOT, janitor)
punct(janitor, .)
nsubj:pass(cook, one)
case(member, of)
det(member, the)
amod(member, lead)
nmod(one, member)
case(corner, of)
det(corner, the)
compound(corner, amen)
nmod(member, corner)
aux:pass(cook, be)
root(ROOT, cook)
punct(cook, ;)
punct(cook, ;)
expl(be, there)
parataxis(cook, be)
nummod(maid, two)
cc(three, or)
conj(two, three)
amod(maid, color)
nsubj(be, maid)
acl(maid, employ)
advmod(employ, there)
punct(cook, .)
nsubj:pass(tell, Wilson)
aux:pass(tell, be)
root(ROOT, tell)
mark(sort, that)
nsubj(sort, it)
cop(sort, be)
det(sort, a)
ccomp(tell, sort)
case(hotel, of)
nmod(sort, hotel)
case(people, for)
amod(people, white)
nmod(sort, people)
punct(people, ,)
nsubj(seem, which)
acl:relcl(people, seem)
case(he, to)
obl(seem, he)
advmod(queer, rather)
obl(seem, queer)
punct(tell, .)
advmod(set, why)
aux(set, should)
det(hotel, a)
amod(hotel, white)
nsubj:pass(set, hotel)
aux:pass(set, be)
root(ROOT, set)
compound:prt(set, down)
case(center, in)
det(center, the)
obl(set, center)
case(bottom, of)
compound(bottom, Black)
nmod(center, bottom)
punct(set, ?)
punct(set, ?)
cc(look, but)
advmod(look, nevertheless)
nsubj(look, it)
root(ROOT, look)
xcomp(look, respectable)
punct(look, .)
nsubj(glad, he)
cop(glad, be)
root(ROOT, glad)
mark(have, to)
xcomp(glad, have)
obj(have, it)
advmod(have, there)
punct(glad, .)
det(rest, the)
nsubj(warren, rest)
case(bottom, of)
compound(bottom, Black)
nmod(rest, bottom)
cop(warren, be)
det(warren, a)
compound(warren, rabbit)
root(ROOT, warren)
case(home, of)
nmod(warren, home)
case(condition, in)
det(condition, every)
nmod(warren, condition)
case(neglect, of)
nmod(condition, neglect)
punct(disrepair, ,)
conj(neglect, disrepair)
cc(careful, and)
conj(neglect, careful)
conj(neglect, upkeep)
punct(warren, .)
nsubj:pass(jumble, dife)
punct(dife, ,)
advmod(repair, carefully)
amod(hut, repair)
conj(dife, hut)
punct(cottage, ,)
cc(cottage, and)
advmod(paint, nicely)
amod(cottage, paint)
cc(ornament, and)
conj(paint, ornament)
nsubj:pass(jumble, cottage)
aux:pass(jumble, be)
root(ROOT, jumble)
advmod(jumble, together)
obj(jumble, cheek)
case(jowl, by)
obl(jumble, jowl)
case(distinction, with)
amod(distinction, little)
obl(jowl, distinction)
punct(jumble, .)
det(best, the)
nsubj(escape, best)
aux(escape, could)
advmod(escape, not)
root(ROOT, escape)
case(worst, from)
det(worst, the)
obl(escape, worst)
cc(better, and)
det(worst, the)
nsubj(nestle, worst)
amod(better, nestle)
advmod(better, cosily)
case(better, beside)
det(better, the)
conj(escape, better)
punct(escape, .)
det(yard, the)
nsubj(narrow, yard)
punct(front, ,)
conj(yard, front)
cc(back, and)
conj(yard, back)
punct(narrow, ,)
cop(narrow, be)
root(ROOT, narrow)
punct(narrow, ;)
punct(narrow, ;)
nsubj(dump, some)
cop(dump, be)
compound(dump, trash)
parataxis(narrow, dump)
punct(dump, ,)
nsubj(have, some)
parataxis(narrow, have)
compound(garden, flower)
obj(have, garden)
punct(narrow, .)
advmod(privy, behind)
cop(behind, be)
root(ROOT, privy)
punct(privy, ,)
mark(be, for)
expl(be, there)
advcl(privy, be)
det(system, no)
compound(system, sewage)
nsubj(be, system)
punct(behind, .)
mark(look, after)
advcl(discover, look)
case(bit, about)
det(bit, a)
obl(look, bit)
punct(discover, ,)
nsubj(discover, Wilson)
root(ROOT, discover)
case(bottom, beyond)
compound(bottom, Black)
obl(discover, bottom)
punct(bottom, ,)
case(river, across)
det(river, the)
obl(discover, river)
cc(remove, and)
advmod(remove, far)
conj(discover, remove)
case(city, from)
det(city, the)
amod(city, white)
obl(remove, city)
punct(tract, ,)
det(tract, a)
amod(tract, considerable)
appos(city, tract)
case(land, of)
nmod(tract, land)
punct(occur, ,)
cc(occur, and)
nsubj(occur, it)
conj(discover, occur)
case(he, to)
obl(occur, he)
mark(move, that)
det(church, the)
nsubj:pass(move, church)
cc(home, and)
det(home, the)
amod(home, better)
amod(home, Negro)
conj(church, home)
aux(move, might)
advmod(move, gradually)
aux:pass(move, be)
ccomp(occur, move)
case(plot, to)
det(plot, this)
obl(move, plot)
punct(discover, .)
nsubj(talk, he)
root(ROOT, talk)
case(it, about)
obl(talk, it)
case(Elder, to)
det(Elder, the)
compound(Elder, preside)
obl(talk, Elder)
punct(talk, .)
det(Elder, the)
compound(Elder, preside)
nsubj(look, Elder)
parataxis(talk, look)
obj(look, he)
advmod(look, over)
advmod(look, rather)
fixed(rather, carefully)
punct(talk, .)
nsubj(sure, he)
cop(sure, be)
advmod(sure, not)
root(ROOT, sure)
det(kind, what)
obj(sure, kind)
case(man, of)
det(man, a)
nmod(kind, man)
nsubj(have, he)
acl:relcl(man, have)
case(hand, in)
obl(have, hand)
punct(sure, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
nummod(thing, one)
nsubj(be, thing)
obj(have, that)
nsubj(have, he)
acl:relcl(thing, have)
mark(stress, to)
xcomp(have, stress)
punct(be, ,)
cc(be, and)
nsubj(be, that)
conj(be, be)
mark(fall, that)
det(contribution, the)
nsubj(fall, contribution)
case(expense, to)
det(expense, the)
amod(expense, general)
compound(expense, church)
nmod(contribution, expense)
punct(money, ,)
det(money, the)
compound(money, dollar)
appos(expense, money)
punct(fall, ,)
aux(fall, have)
aux(fall, be)
advmod(fall, seriously)
ccomp(be, fall)
advmod(fall, behind)
case(church, in)
det(church, this)
obl(fall, church)
punct(look, ,)
cc(look, and)
nsubj:pass(look, that)
aux(look, must)
aux:pass(look, be)
conj(fall, look)
case(immediately, after)
advmod(look, immediately)
punct(be, .)
case(fact, in)
obl(intimate, fact)
punct(intimate, ,)
nsubj(intimate, he)
root(ROOT, intimate)
advmod(intimate, clearly)
mark(reason, that)
nsubj(reason, that)
cop(reason, be)
det(reason, the)
ccomp(intimate, reason)
mark(send, that)
nsubj:pass(send, Wilson)
aux(send, have)
aux:pass(send, be)
acl(reason, send)
advmod(send, here)
punct(intimate, --)
mark(make, to)
advcl(send, make)
det(contribution, a)
amod(contribution, larger)
obj(make, contribution)
case(money, of)
compound(money, dollar)
nmod(contribution, money)
punct(intimate, .)
nsubj(stress, Wilson)
root(ROOT, stress)
det(fact, the)
obj(stress, fact)
mark(have, that)
advmod(have, clear)
mark(be, as)
nsubj(be, this)
advcl(clear, be)
punct(have, ,)
nsubj(have, they)
aux(have, must)
ccomp(stress, have)
det(church, a)
amod(church, better)
obj(have, church)
punct(church, ,)
det(conduct, a)
amod(conduct, more)
obl:npmod(like, business)
punct(like, -)
amod(conduct, like)
appos(church, conduct)
case(organization, of)
det(organization, the)
compound(organization, church)
nmod(conduct, organization)
punct(effort, ,)
cc(effort, and)
det(effort, a)
conj(church, effort)
mark(get, to)
acl(effort, get)
det(center, this)
amod(center, religious)
obj(get, center)
case(rut, out)
case(rut, of)
nmod:poss(rut, its)
obl(get, rut)
case(worship, of)
amod(worship, wild)
nmod(rut, worship)
case(organization, into)
det(organization, a)
amod(organization, modern)
compound(organization, church)
nmod(rut, organization)
punct(stress, .)
nsubj(emphasize, he)
root(ROOT, emphasize)
case(preside, to)
det(preside, the)
obl(emphasize, preside)
nsubj(plan, Elder)
det(plan, the)
root(ROOT, plan)
mark(give, of)
acl(plan, give)
compound:prt(give, up)
det(church, the)
amod(church, old)
obj(give, church)
cc(move, and)
conj(give, move)
case(river, across)
det(river, the)
obl(move, river)
punct(plan, .)
det(Elder, the)
compound(Elder, preside)
nsubj(sure, Elder)
cop(sure, be)
root(ROOT, sure)
mark(impossible, that)
nsubj(impossible, that)
aux(impossible, would)
cop(impossible, be)
ccomp(sure, impossible)
punct(sure, .)
cc(try, but)
nsubj(tell, he)
root(ROOT, tell)
obj(tell, Wilson)
mark(go, to)
punct(go, ``)
xcomp(tell, go)
advmod(go, ahead)
cc(try, and)
conj(go, try)
punct(try, '')
punct(tell, .)
cc(try, and)
nsubj(try, Wilson)
conj(tell, try)
punct(tell, .)
nsubj(seem, it)
aux(seem, do)
root(ROOT, seem)
xcomp(seem, impossible)
punct(seem, .)
det(bank, the)
nsubj(declare, bank)
nsubj(hold, which)
acl:relcl(bank, hold)
det(mortgage, the)
obj(hold, mortgage)
case(church, on)
det(church, the)
amod(church, old)
obl(hold, church)
root(ROOT, declare)
mark(arrear, that)
det(interest, the)
nsubj(arrear, interest)
cop(arrear, be)
advmod(arrear, considerably)
case(arrear, in)
ccomp(declare, arrear)
punct(say, ,)
cc(say, and)
det(people, the)
amod(people, real)
compound(people, estate)
nsubj(say, people)
conj(declare, say)
advmod(say, flatly)
mark(hold, that)
det(land, the)
nsubj:pass(hold, land)
case(river, across)
det(river, the)
nmod(land, river)
aux(hold, be)
aux:pass(hold, be)
ccomp(say, hold)
case(development, for)
det(development, a)
amod(development, eventual)
obl(hold, development)
case(people, for)
amod(people, white)
amod(people, working)
nmod(development, people)
nsubj(come, who)
aux(come, be)
acl:relcl(people, come)
advmod(come, in)
punct(sell, ,)
cc(sell, and)
mark(sell, that)
nsubj:pass(sell, none)
aux(sell, would)
aux:pass(sell, be)
conj(come, sell)
case(folk, to)
amod(folk, color)
obl(sell, folk)
punct(sell, .)
mark(propose, when)
nsubj:pass(propose, it)
aux:pass(propose, be)
advcl(find, propose)
mark(rebuild, to)
xcomp(propose, rebuild)
det(church, the)
obj(rebuild, church)
punct(find, ,)
nsubj(find, Wilson)
parataxis(declare, find)
mark(high, that)
det(term, the)
nsubj(high, term)
case(mortgage, for)
det(mortgage, a)
amod(mortgage, new)
nmod(term, mortgage)
cop(high, be)
advmod(high, very)
ccomp(find, high)
punct(find, .)
nsubj(sure, he)
cop(sure, be)
root(ROOT, sure)
mark(do, that)
nsubj(do, he)
aux(do, could)
ccomp(sure, do)
advmod(do, better)
mark(go, if)
nsubj(go, he)
advcl(do, go)
case(Atlanta, to)
obl(go, Atlanta)
mark(get, to)
advcl(go, get)
det(deal, the)
obj(get, deal)
xcomp(get, finance)
punct(sure, .)
cc(meet, but)
mark(make, when)
det(proposal, this)
nsubj:pass(make, proposal)
aux:pass(make, be)
advcl(meet, make)
case(Board, to)
nmod:poss(Board, he)
compound(Board, deacon)
obl(make, Board)
punct(meet, ,)
nsubj(meet, he)
root(ROOT, meet)
amod(opposition, unanimous)
obj(meet, opposition)
punct(meet, .)
det(church, the)
nsubj:pass(remove, church)
advmod(remove, certainly)
aux(remove, would)
advmod(remove, not)
aux:pass(remove, be)
root(ROOT, remove)
punct(remove, .)
det(proposition, the)
amod(proposition, very)
nsubj(sacrilege, proposition)
cop(sacrilege, be)
root(ROOT, sacrilege)
punct(sacrilege, .)
nsubj(here, it)
aux(here, have)
cop(here, be)
root(ROOT, here)
nummod(year, fifty)
obl:tmod(here, year)
punct(here, .)
nsubj(go, it)
aux(go, be)
root(ROOT, go)
mark(stay, to)
xcomp(go, stay)
advmod(stay, forever)
punct(go, .)
expl(possible, it)
cop(possible, be)
advmod(possible, hardly)
root(ROOT, possible)
mark(get, to)
csubj(possible, get)
det(argument, any)
obj(get, argument)
case(subject, on)
det(subject, the)
nmod(argument, subject)
punct(possible, .)
case(rebuild, as)
fixed(as, for)
obl(look, rebuild)
punct(look, ,)
discourse(look, well)
punct(look, ,)
nsubj:pass(look, that)
aux(look, might)
aux:pass(look, be)
root(ROOT, look)
advmod(look, into)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(look, be)
det(hurry, no)
nsubj(be, hurry)
punct(hurry, ,)
det(hurry, no)
appos(hurry, hurry)
case(all, at)
nmod(hurry, all)
punct(hurry, .)
nsubj(go, Wilson)
advmod(go, again)
parataxis(be, go)
advmod(go, downtown)
case(banker, to)
det(banker, a)
amod(banker, different)
obl(go, banker)
punct(banker, ,)
det(man, a)
amod(man, intelligent)
amod(man, young)
amod(man, white)
appos(banker, man)
nsubj(seem, who)
acl:relcl(man, seem)
advmod(sympathetic, rather)
xcomp(seem, sympathetic)
punct(shook, ,)
cc(shook, but)
nsubj(shook, he)
conj(seem, shook)
nmod:poss(head, he)
obj(shook, head)
punct(look, .)
punct(look, ``)
vocative(say, reverend)
punct(reverend, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
nsubj(think, I)
root(ROOT, think)
nsubj(understand, you)
aux(understand, do)
advmod(understand, not)
advmod(understand, quite)
ccomp(think, understand)
det(situation, the)
obj(understand, situation)
advmod(understand, here)
punct(think, .)
aux(see, do)
advmod(see, not)
nsubj(see, you)
root(ROOT, see)
det(amount, the)
obj(see, amount)
case(money, of)
nmod(amount, money)
nsubj:pass(invest, that)
aux(invest, have)
aux:pass(invest, be)
acl:relcl(amount, invest)
case(white, by)
obl(invest, white)
case(church, around)
det(church, that)
obl(invest, church)
punct(see, ?)
punct(see, ?)
parataxis(see, tenement)
punct(store, ,)
conj(tenement, store)
punct(saloon, ,)
conj(tenement, saloon)
punct(gambling, ,)
det(gambling, some)
conj(tenement, gambling)
punct(hope, ,)
nsubj(hope, I)
parataxis(tenement, hope)
advmod(much, not)
advmod(much, too)
advmod(hope, much)
punct(see, .)
det(people, the)
amod(people, color)
nsubj(get, people)
aux(get, be)
root(ROOT, get)
obj(get, employment)
case(House, at)
compound(House, Kent)
obl(get, House)
cc(place, and)
amod(place, other)
conj(House, place)
punct(place, ,)
cc(place, and)
nsubj(place, they)
cop(place, be)
case(place, near)
nmod:poss(place, they)
conj(get, place)
case(employment, of)
nmod(place, employment)
punct(get, .)
mark(arrange, when)
det(city, a)
nsubj(arrange, city)
aux(arrange, have)
advcl(change, arrange)
obj(arrange, thing)
case(this, like)
nmod(thing, this)
nsubj(change, you)
aux(change, can)
advmod(change, not)
advmod(change, easily)
root(ROOT, change)
obj(change, they)
punct(change, .)
advmod(plan, now)
punct(plan, ,)
mark(you, if)
nsubj(you, I)
cop(you, be)
advcl(plan, you)
nsubj(plan, I)
aux(plan, would)
advmod(plan, just)
root(ROOT, plan)
mark(repair, to)
xcomp(plan, repair)
det(church, the)
amod(church, old)
obj(repair, church)
advmod(last, so)
nsubj(last, it)
aux(last, would)
conj(plan, last)
case(year, for)
nummod(year, five)
cc(ten, or)
conj(five, ten)
obl(last, year)
punct(plan, .)
case(time, by)
det(time, that)
obl(do, time)
punct(do, ,)
advmod(do, perhaps)
nsubj:pass(do, something)
amod(something, better)
aux(do, can)
aux:pass(do, be)
root(ROOT, do)
punct(do, '')
punct(do, .)
advmod(ask, then)
nsubj(ask, Wilson)
parataxis(do, ask)
punct(ask, ,)
punct(do, ``)
root(ROOT, what)
case(House, about)
det(House, this)
compound(House, Kent)
nmod(what, House)
obj(mention, which)
nsubj(mention, you)
acl:relcl(House, mention)
punct(what, ?)
punct(understand, ?)
nsubj(understand, I)
aux(understand, do)
advmod(understand, not)
parataxis(what, understand)
advmod(here, why)
det(hotel, a)
amod(hotel, white)
nsubj(here, hotel)
aux(here, should)
cop(here, be)
advmod(here, down)
ccomp(understand, here)
punct(understand, '')
punct(look, .)
det(banker, the)
amod(banker, young)
nsubj(look, banker)
parataxis(understand, look)
case(he, at)
obl(look, he)
case(surprise, with)
det(surprise, a)
amod(surprise, certain)
obl(look, surprise)
punct(say, ,)
cc(say, and)
advmod(say, then)
nsubj(say, he)
conj(look, say)
advmod(say, flatly)
punct(look, :)
punct(look, ``)
nsubj(afraid, I)
cop(afraid, be)
root(ROOT, afraid)
nsubj(tell, I)
aux(tell, can)
advmod(tell, not)
ccomp(afraid, tell)
iobj(tell, you)
obj(tell, anything)
case(particular, in)
nmod(anything, particular)
case(House, about)
compound(House, Kent)
nmod(particular, House)
punct(afraid, .)
nsubj(have, you)
aux(have, will)
root(ROOT, have)
mark(find, to)
xcomp(have, find)
compound:prt(find, out)
case(it, about)
obl(find, it)
case(own, on)
nmod:poss(own, you)
obl(find, own)
punct(have, .)
root(ROOT, hope)
mark(see, to)
xcomp(hope, see)
obj(see, you)
advmod(see, again)
punct(hope, '')
punct(hope, .)
cc(dismiss, and)
nsubj(dismiss, he)
conj(hope, dismiss)
det(pastor, the)
amod(pastor, color)
obj(dismiss, pastor)
punct(hope, .)
nsubj(day, it)
cop(day, be)
amod(day, next)
root(ROOT, day)
obj(come, that)
nsubj(come, Sojourner)
acl:relcl(day, come)
cc(sit, and)
conj(come, sit)
case(he, beside)
obl(sit, he)
cc(take, and)
conj(come, take)
nmod:poss(hand, he)
obj(take, hand)
punct(day, .)
nsubj(say, she)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
nmod:poss(dear, my)
advmod(know, dear)
punct(know, ,)
aux(know, do)
nsubj(know, you)
root(ROOT, know)
ccomp(know, what)
compound(House, Kent)
nsubj(what, House)
cop(what, be)
punct(know, '')
punct(know, ?)
punct(know, ?)
punct(know, ``)
discourse(say, no)
punct(say, '')
punct(say, ,)
root(ROOT, say)
nsubj(say, Wilson)
punct(say, ,)
punct(say, ``)
nsubj(. , I)
aux(. , do)
advmod(. , not)
root(ROOT, . )
nsubj(ask, I)
aux(ask, be)
advmod(ask, just)
root(ROOT, ask)
case(it, about)
obl(ask, it)
punct(ask, .)
root(ROOT, what)
cop(what, be)
nsubj(what, it)
punct(what, '')
punct(what, ?)
punct(what, ?)
punct(what, ``)
nsubj(house, it)
cop(house, be)
det(house, a)
root(ROOT, house)
case(prostitution, of)
nmod(house, prostitution)
case(man, for)
amod(man, white)
nmod(prostitution, man)
case(girl, with)
amod(girl, white)
nmod(man, girl)
case(inmate, as)
nmod(house, inmate)
punct(house, .)
nsubj(hire, they)
root(ROOT, hire)
det(deal, a)
amod(deal, good)
obj(hire, deal)
case(labor, of)
amod(labor, local)
nmod(deal, labor)
punct(labor, ,)
case(member, include)
nummod(member, two)
nmod(deal, member)
case(board, of)
nmod:poss(board, we)
compound(board, trustee)
nmod(member, board)
punct(hire, .)
nsubj(buy, they)
root(ROOT, buy)
det(supplies, some)
obj(buy, supplies)
case(grocer, from)
nmod:poss(grocer, we)
amod(grocer, color)
obl(buy, grocer)
cc(patronize, and)
nsubj:pass(patronize, they)
aux:pass(patronize, be)
conj(buy, patronize)
case(some, by)
obl(patronize, some)
case(gentleman, of)
det(gentleman, the)
amod(gentleman, best)
amod(gentleman, white)
nmod(some, gentleman)
case(town, in)
nmod(gentleman, town)
punct(patronize, '')
punct(stare, .)
nsubj(stare, Wilson)
parataxis(patronize, stare)
case(she, at)
obl(stare, she)
punct(buy, .)
punct(buy, ``)
nmod:poss(dear, my)
nsubj(mistaken, dear)
punct(mistaken, ,)
nsubj(mistaken, you)
aux(mistaken, must)
cop(mistaken, be)
root(ROOT, mistaken)
punct(mistaken, '')
punct(mistaken, .)
punct(mistaken, ``)
root(ROOT, talk)
case(Mrs., to)
obl(talk, Mrs.)
flat(Mrs., Catt)
punct(Mrs., '')
punct(talk, ,)
nsubj(say, she)
parataxis(talk, say)
punct(say, .)
cc(amazed, and)
mark(talk, after)
nsubj(talk, Wilson)
aux(talk, have)
advcl(amazed, talk)
case(Mrs., to)
obl(talk, Mrs.)
flat(Mrs., Catt)
cc(other, and)
case(other, to)
conj(Mrs., other)
punct(amazed, ,)
nsubj(amazed, he)
cop(amazed, be)
advmod(amazed, absolutely)
ccomp(say, amazed)
punct(talk, .)
nsubj(sort, this)
punct(sort, ,)
advmod(sort, of)
fixed(of, course)
punct(sort, ,)
cop(sort, be)
det(sort, the)
root(ROOT, sort)
case(thing, of)
nmod(sort, thing)
nsubj(use, that)
acl:relcl(thing, use)
mark(take, to)
xcomp(use, take)
obj(take, place)
case(city, in)
amod(city, southern)
obl(take, city)
punct(take, --)
advcl(take, put)
amod(house, white)
obj(put, house)
case(prostitution, of)
nmod(house, prostitution)
case(girl, with)
amod(girl, color)
obl(put, girl)
case(neighborhood, in)
amod(neighborhood, color)
nmod(girl, neighborhood)
cc(carry, and)
conj(put, carry)
obj(carry, they)
case(openly, on)
advmod(carry, openly)
punct(sort, .)
cc(disappear, but)
nsubj(disappear, it)
aux(disappear, have)
advmod(disappear, largely)
root(ROOT, disappear)
case(account, on)
obl(disappear, account)
case(protest, of)
nmod(account, protest)
case(white, by)
det(white, the)
obl(disappear, white)
cc(grow, and)
mark(grow, through)
conj(disappear, grow)
obj(grow, resentment)
case(part, on)
det(part, the)
obl(grow, part)
case(Negroes, of)
det(Negroes, the)
nmod(part, Negroes)
mark(become, as)
nsubj(become, they)
advcl(grow, become)
advmod(educated, more)
xcomp(become, educated)
cc(get, and)
conj(educated, get)
amod(wage, better)
obj(get, wage)
punct(disappear, .)
cc(subtle, but)
det(situation, this)
nsubj(subtle, situation)
case(House, of)
compound(House, Kent)
nmod(situation, House)
cop(subtle, be)
advmod(subtle, more)
root(ROOT, subtle)
punct(subtle, .)
det(wage, the)
nsubj(larger, wage)
acl(wage, involve)
cop(larger, be)
root(ROOT, larger)
cc(regular, and)
advmod(regular, more)
conj(larger, regular)
punct(larger, .)
det(inmate, the)
nsubj(white, inmate)
cop(white, be)
root(ROOT, white)
cc(town, and)
case(town, from)
case(town, out)
case(town, of)
conj(white, town)
punct(white, ,)
advcl(white, avoid)
amod(friction, local)
obj(avoid, friction)
punct(white, .)
det(back, the)
nsubj(greater, back)
case(town, from)
det(town, the)
amod(town, white)
nmod(back, town)
cop(greater, be)
root(ROOT, greater)
cc(be, and)
expl(be, there)
conj(greater, be)
amod(publicity, little)
nsubj(be, publicity)
punct(greater, .)
amod(wage, good)
root(ROOT, wage)
punct(patronage, ,)
conj(wage, patronage)
cc(subscription, and)
conj(wage, subscription)
case(kind, of)
amod(kind, various)
nmod(subscription, kind)
acl(kind, stop)
amod(protest, open)
obj(stop, protest)
case(Negroes, from)
obl(stop, Negroes)
punct(wage, .)
cc(know, and)
cc(know, yet)
nsubj(know, Wilson)
root(ROOT, know)
mark(go, that)
det(place, this)
nsubj(go, place)
aux(go, must)
ccomp(know, go)
cc(go, or)
nsubj(go, he)
aux(go, must)
conj(go, go)
punct(go, .)
cc(leave, and)
mark(leave, for)
nsubj(leave, he)
mark(leave, to)
conj(go, leave)
det(job, this)
obj(leave, job)
advmod(leave, now)
mark(accomplish, without)
advcl(leave, accomplish)
obj(accomplish, anything)
aux(mean, would)
ccomp(know, mean)
advmod(mean, practically)
det(end, the)
obj(mean, end)
case(career, of)
nmod:poss(career, he)
nmod(end, career)
case(church, in)
det(church, the)
compound(church, Methodist)
nmod(career, church)
punct(mean, ,)
mark(church, if)
advmod(church, not)
case(church, in)
det(church, all)
advcl(mean, church)
punct(know, .)
nsubj(dismount, Payne)
root(ROOT, dismount)
case(Place, in)
compound(Place, Madison)
obl(dismount, Place)
cc(hand, and)
conj(dismount, hand)
det(rein, the)
obj(hand, rein)
case(Herold, to)
obl(hand, Herold)
punct(dismount, .)
expl(be, there)
root(ROOT, be)
det(fog, a)
nsubj(be, fog)
punct(fog, ,)
nsubj(increase, which)
acl:relcl(fog, increase)
det(darkness, the)
obj(increase, darkness)
case(night, of)
det(night, the)
nmod(darkness, night)
punct(be, .)
nummod(lamp, two)
compound(lamp, gas)
nsubj(more, lamp)
cop(more, be)
advmod(more, no)
root(ROOT, more)
case(glow, than)
det(glow, a)
amod(glow, misleading)
obl(more, glow)
punct(more, .)
nsubj(anywhere, he)
aux(anywhere, might)
aux(anywhere, have)
cop(anywhere, be)
root(ROOT, anywhere)
cc(nowhere, or)
conj(anywhere, nowhere)
punct(anywhere, .)
det(pretence, the)
nsubj(be, pretence)
root(ROOT, be)
mark(deliver, that)
nsubj(deliver, he)
aux(deliver, be)
ccomp(be, deliver)
det(prescription, a)
obj(deliver, prescription)
case(Dr., from)
obl(deliver, Dr.)
flat(Dr., Verdi)
punct(be, .)
nsubj(man, Secretary)
case(Seward, of)
compound(Seward, State)
nmod(Secretary, Seward)
cop(man, be)
det(man, a)
amod(man, sick)
root(ROOT, man)
punct(man, .)
det(idea, the)
nsubj(come, idea)
aux(come, have)
root(ROOT, come)
case(Herold, from)
obl(come, Herold)
punct(Herold, ,)
nsubj(clerk, who)
aux(clerk, have)
advmod(clerk, once)
cop(clerk, be)
det(chemist, a)
nmod:poss(clerk, chemist)
case(chemist, 's)
acl:relcl(Herold, clerk)
punct(come, .)
det(sick, the)
nsubj(receive, sick)
aux(receive, be)
advmod(receive, always)
root(ROOT, receive)
obj(receive, medicine)
punct(receive, .)
det(one, no)
nsubj(question, one)
aux(question, would)
root(ROOT, question)
det:predet(errand, such)
det(errand, a)
obj(question, errand)
punct(question, .)
det(bottle, the)
nsubj:pass(fill, bottle)
aux:pass(fill, be)
root(ROOT, fill)
compound:prt(fill, up)
case(flour, with)
obl(fill, flour)
punct(fill, .)
mark(loom, before)
nsubj(loom, Payne)
root(ROOT, loom)
det(Clubhouse, the)
compound(Clubhouse, old)
obj(loom, Clubhouse)
punct(Clubhouse, ,)
nmod:poss(home, Seward)
case(Seward, 's)
appos(Clubhouse, home)
punct(Clubhouse, ,)
advmod(kill, where)
nsubj:pass(kill, key)
aux(kill, have)
advmod(kill, once)
aux:pass(kill, be)
acl:relcl(home, kill)
punct(loom, .)
advmod(have, now)
nsubj(have, it)
aux(have, would)
root(ROOT, have)
det(death, another)
obj(have, death)
punct(have, .)
case(outside, from)
det(outside, the)
obl(house, outside)
nsubj(house, it)
cop(house, be)
det(house, a)
amod(house, ordinary)
amod(house, enough)
root(ROOT, house)
case(gentry, of)
det(gentry, the)
nmod(house, gentry)
punct(house, .)
nsubj(clomp, he)
root(ROOT, clomp)
advmod(clomp, heavily)
case(stan, up)
det(stan, the)
obl(clomp, stan)
cc(ring, and)
conj(clomp, ring)
det(bell, the)
obj(ring, bell)
punct(clomp, .)
case(bell, like)
det(bell, the)
obl(pitch, bell)
case(Mass, at)
nmod(bell, Mass)
punct(pitch, ,)
det(doorbell, the)
nsubj:pass(pitch, doorbell)
aux:pass(pitch, be)
root(ROOT, pitch)
advmod(high, too)
advmod(pitch, high)
punct(pitch, .)
nsubj(good, it)
cop(good, be)
advmod(good, still)
root(ROOT, good)
obl:tmod(good, Friday)
punct(good, ,)
case(all, after)
obl(good, all)
punct(good, . )
det(boy, a)
compound(boy, nigger)
nsubj(open, boy)
root(ROOT, open)
det(door, the)
obj(open, door)
punct(open, .)
nsubj(notice, Payne)
aux(notice, do)
advmod(notice, not)
root(ROOT, notice)
obj(notice, he)
punct(notice, .)
nsubj(think, he)
aux(think, be)
root(ROOT, think)
advmod(think, chiefly)
case(cap, of)
obl(think, cap)
punct(think, .)
mark(synchronize, if)
nmod:poss(schedule, they)
nsubj(synchronize, schedule)
aux(synchronize, be)
mark(synchronize, to)
advcl(be, synchronize)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(point, no)
nsubj(be, point)
mark(waste, in)
acl(point, waste)
obj(waste, time)
punct(be, .)
nsubj(push, he)
root(ROOT, push)
nmod:poss(way, he)
obj(push, way)
advmod(push, inside)
punct(push, .)
case(moment, for)
det(moment, a)
obl(confuse, moment)
det(hall, the)
nsubj(confuse, hall)
parataxis(push, confuse)
obj(confuse, he)
punct(push, .)
nsubj(house, this)
cop(house, be)
det(house, the)
amod(house, largest)
root(ROOT, house)
nsubj(be, he)
aux(be, have)
advmod(be, ever)
acl:relcl(house, be)
obl(be, in)
punct(house, ,)
advmod(building, almost)
det(building, the)
amod(building, largest)
parataxis(house, building)
punct(building, ,)
case(hotel, except)
case(hotel, for)
det(hotel, a)
nmod(building, hotel)
punct(house, .)
nsubj(have, he)
root(ROOT, have)
det(idea, no)
obj(have, idea)
ccomp(have, where)
nmod:poss(room, Seward)
case(Seward, 's)
nsubj(where, room)
aux(where, would)
cop(where, be)
punct(have, .)
case(darkness, in)
det(darkness, the)
amod(darkness, half)
obl(gleam, darkness)
det(banister, the)
nsubj(gleam, banister)
root(ROOT, gleam)
punct(seem, ,)
cc(seem, and)
det(hall, the)
nsubj(seem, hall)
conj(gleam, seem)
xcomp(seem, enormous)
punct(seem, .)
case(he, above)
obl(seem, he)
advmod(seem, somewhere)
cop(bedroom, be)
det(bedroom, the)
nsubj(somewhere, bedroom)
punct(gleam, .)
nsubj(there, Seward)
aux(there, would)
cop(there, be)
goeswith(there, up)
root(ROOT, there)
punct(there, .)
nsubj(explain, he)
root(ROOT, explain)
nmod:poss(errand, he)
obj(explain, errand)
punct(bother, ,)
cc(bother, but)
mark(bother, without)
conj(explain, bother)
obj(bother, much)
mark(make, to)
acl(much, make)
obj(make, it)
xcomp(make, plausible)
punct(explain, ,)
mark(feel, for)
nsubj(feel, he)
advcl(explain, feel)
obj(feel, something)
advmod(something, well)
advmod(something, up)
case(he, in)
nmod(something, he)
nsubj(reason, which)
cop(reason, be)
det(reason, the)
acl:relcl(something, reason)
advmod(fleed, why)
nsubj(fleed, he)
aux(fleed, have)
acl:relcl(reason, fleed)
det(army, the)
obj(fleed, army)
punct(explain, .)
nsubj(want, he)
aux(want, do)
advmod(want, not)
advmod(want, really)
root(ROOT, want)
mark(kill, to)
xcomp(want, kill)
punct(be, ,)
cc(be, but)
case(act, as)
case(act, in)
det(act, the)
amod(act, sexual)
obl(be, act)
punct(be, ,)
expl(be, there)
conj(want, be)
det(moment, a)
nsubj(be, moment)
mark(take, when)
det(impulse, the)
nsubj(take, impulse)
advcl(be, take)
advmod(take, over)
cc(downe, and)
aux(downe, could)
advmod(downe, not)
aux:pass(downe, be)
conj(take, downe)
punct(be, ,)
advmod(watch, even)
mark(watch, while)
nsubj(watch, you)
advcl(downe, watch)
obj(watch, yourself)
xcomp(watch, give)
obj(give, way)
case(it, to)
obl(give, it)
punct(want, .)
nsubj(worried, he)
cop(worried, be)
advmod(longer, no)
advmod(worried, longer)
root(ROOT, worried)
punct(worried, .)
nsubj(right, everything)
aux(right, would)
cop(right, be)
advmod(right, all)
root(ROOT, right)
punct(right, .)
nsubj(know, he)
root(ROOT, know)
mark(stop, that)
case(mood, in)
det(mood, this)
obl(stop, mood)
nsubj:pass(stop, he)
aux(stop, could)
advmod(stop, not)
aux:pass(stop, be)
ccomp(know, stop)
punct(know, .)
advmod(surprise, still)
punct(surprise, ,)
det(sensation, the)
nsubj(surprise, sensation)
advmod(surprise, always)
root(ROOT, surprise)
obj(surprise, he)
punct(surprise, .)
nsubj(thrill, it)
cop(thrill, be)
det(thrill, a)
root(ROOT, thrill)
nsubj(feel, he)
acl:relcl(thrill, feel)
det(part, no)
obj(feel, part)
advmod(feel, in)
punct(thrill, .)
nsubj(watch, he)
aux(watch, could)
advmod(watch, only)
parataxis(thrill, watch)
case(sort, with)
det(sort, a)
obl(watch, sort)
case(dismay, of)
amod(dismay, gentle)
nmod(sort, dismay)
mark(do, while)
nmod:poss(body, he)
nsubj(do, body)
advcl(watch, do)
det(thing, these)
amod(thing, quick)
punct(appal, ,)
conj(quick, appal)
punct(efficient, ,)
cc(efficient, and)
conj(quick, efficient)
obj(do, thing)
punct(thrill, .)
nsubj(brush, he)
root(ROOT, brush)
case(boy, by)
det(boy, the)
amod(boy, idiotic)
obl(brush, boy)
cc(lumber, and)
conj(brush, lumber)
advmod(lumber, heavily)
case(stair, up)
det(stair, the)
obl(lumber, stair)
punct(brush, .)
nsubj:pass(carpete, they)
aux:pass(carpete, be)
root(ROOT, carpete)
punct(make, ,)
cc(make, but)
conj(carpete, make)
case(pump, for)
obl(make, pump)
cc(congress, and)
compound(gaiter, congress)
conj(pump, gaiter)
punct(clodhopper, ,)
cc(clodhopper, not)
det(clodhopper, the)
amod(clodhopper, great)
conj(pump, clodhopper)
nsubj(wear, he)
acl:relcl(clodhopper, wear)
punct(carpete, .)
det(sound, the)
nsubj(drum, sound)
case(footstep, of)
nmod:poss(footstep, he)
nmod(sound, footstep)
cop(drum, be)
case(drum, like)
det(drum, a)
amod(drum, muffle)
root(ROOT, drum)
punct(drum, .)
case(top, at)
det(top, the)
obl(run, top)
case(stair, of)
det(stair, the)
nmod(top, stair)
nsubj(run, he)
root(ROOT, run)
case(somebody, into)
obl(run, somebody)
acl(somebody, stand)
advmod(stand, there)
advmod(stand, angrily)
case(gown, in)
det(gown, a)
compound(gown, dress)
obl(stand, gown)
punct(run, .)
nsubj(stop, he)
root(ROOT, stop)
cc(whisper, and)
conj(stop, whisper)
nmod:poss(errand, he)
obj(whisper, errand)
punct(stop, .)
compound(Frederick, young)
nsubj(hold, Frederick)
flat(Frederick, Seward)
parataxis(stop, hold)
compound:prt(hold, out)
nmod:poss(hand, he)
obj(hold, hand)
punct(hold, .)
advcl(hold, panting)
det(little, a)
obj(panting, little)
punct(shook, ,)
nsubj(shook, Payne)
parataxis(hold, shook)
nmod:poss(head, he)
obj(shook, head)
punct(stop, .)
nsubj(tell, Dr.)
flat(Dr., Verdi)
aux(tell, have)
parataxis(shook, tell)
obj(tell, he)
mark(deliver, to)
xcomp(tell, deliver)
nmod:poss(package, he)
obj(deliver, package)
case(person, in)
obl(deliver, person)
punct(say, .)
nsubj(say, Frederick)
flat(Frederick, Seward)
parataxis(stop, say)
nmod:poss(father, he)
nsubj(sleep, father)
aux(sleep, be)
ccomp(say, sleep)
punct(go, ,)
cc(go, and)
advmod(go, then)
conj(sleep, go)
case(pantomime, through)
det(pantomime, a)
obl(go, pantomime)
case(door, at)
nmod:poss(father, he)
nmod:poss(door, father)
case(father, 's)
nmod(pantomime, door)
punct(go, ,)
mark(prove, to)
advcl(go, prove)
det(statement, the)
obj(prove, statement)
punct(stop, .)
punct(stop, ``)
advmod(well, very)
advmod(say, well)
punct(say, '')
punct(say, ,)
nsubj(say, Payne)
root(ROOT, say)
punct(say, .)
punct(say, ``)
nsubj(go, I)
aux(go, will)
root(ROOT, go)
punct(go, '')
punct(go, .)
nsubj(smile, he)
parataxis(go, smile)
punct(intend, ,)
cc(intend, but)
advmod(intend, now)
mark(know, that)
nsubj(know, he)
advcl(now, know)
ccomp(know, where)
det(elder, the)
nsubj(where, elder)
nsubj(elder, Seward)
cop(where, be)
punct(intend, ,)
nsubj(intend, he)
aux(intend, do)
advmod(intend, not)
conj(smile, intend)
mark(go, to)
xcomp(intend, go)
punct(go, .)
nsubj(pull, he)
root(ROOT, pull)
compound:prt(pull, out)
nmod:poss(pistol, he)
obj(pull, pistol)
cc(fire, and)
conj(pull, fire)
obj(fire, it)
punct(pull, .)
nsubj(make, it)
root(ROOT, make)
det(sound, no)
obj(make, sound)
punct(make, .)
nsubj(misfire, it)
aux(misfire, have)
root(ROOT, misfire)
punct(misfire, .)
advcl(smashed, reverse)
obj(reverse, it)
punct(smashed, ,)
nsubj(smashed, he)
root(ROOT, smashed)
det(butt, the)
obj(smashed, butt)
advmod(smashed, down)
case(head, on)
nmod:poss(head, Frederick)
flat(Frederick, Seward)
case(Frederick, 's)
obl(smashed, head)
punct(smashed, ,)
advmod(smashed, over)
cc(again, and)
advmod(again, over)
conj(over, again)
punct(smashed, .)
nsubj(blow, it)
cop(blow, be)
det(blow, the)
amod(blow, first)
root(ROOT, blow)
nsubj(difficult, that)
cop(difficult, be)
advmod(difficult, always)
acl:relcl(blow, difficult)
punct(blow, .)
case(that, after)
obl(easy, that)
punct(easy, ,)
nsubj(easy, violence)
cop(easy, be)
advmod(easy, exultantly)
root(ROOT, easy)
punct(easy, .)
nsubj(catch, he)
aux(catch, get)
root(ROOT, catch)
compound:prt(catch, up)
case(it, into)
obl(catch, it)
cc(become, and)
conj(catch, become)
det(person, a)
amod(person, different)
xcomp(become, person)
punct(catch, .)
advmod(do, only)
advmod(do, afterwards)
root(ROOT, do)
det(act, a)
obj(do, act)
mark(become, like)
nsubj(become, that)
advcl(do, become)
xcomp(become, meaningless)
punct(do, ,)
mark(puzzle, so)
fixed(so, that)
nsubj(puzzle, he)
aux(puzzle, would)
advcl(do, puzzle)
case(it, over)
obl(puzzle, it)
case(day, for)
obl(puzzle, day)
punct(puzzle, ,)
mark(seem, whereas)
case(time, at)
det(time, the)
obl(seem, time)
nsubj(seem, it)
aux(seem, have)
advcl(puzzle, seem)
advmod(real, quite)
xcomp(seem, real)
punct(do, .)
det(boy, the)
compound(boy, nigger)
nsubj(fleed, boy)
root(ROOT, fleed)
case(stair, down)
det(stair, the)
obl(fleed, stair)
punct(fleed, ,)
advcl(fleed, scream)
punct(fleed, ,)
punct(fleed, ``)
vocative(methodical, murder)
punct(murder, '')
punct(murder, .)
nsubj(murder, it)
cop(murder, be)
advmod(murder, not)
appos(murder, murder)
case(all, at)
obl(murder, all)
punct(methodical, .)
nsubj(methodical, Payne)
cop(methodical, be)
advmod(methodical, more)
root(ROOT, methodical)
case(that, than)
obl(methodical, that)
punct(methodical, .)
nsubj(clear, he)
aux(clear, be)
advmod(clear, merely)
root(ROOT, clear)
det(way, a)
obj(clear, way)
case(what, to)
nmod(way, what)
nsubj(have, he)
acl:relcl(what, have)
mark(do, to)
xcomp(have, do)
punct(clear, .)
nsubj(run, he)
root(ROOT, run)
case(room, for)
det(room, the)
amod(room, sick)
obl(run, room)
punct(find, ,)
conj(run, find)
nmod:poss(pistol, he)
nsubj:pass(break, pistol)
aux:pass(break, be)
ccomp(find, break)
punct(throw, ,)
cc(throw, and)
conj(run, throw)
obj(throw, it)
advmod(throw, away)
punct(run, . )
det(knife, a)
nsubj(do, knife)
aux(do, would)
root(ROOT, do)
punct(do, .)
case(childhood, from)
obl(know, childhood)
nsubj(know, he)
aux(know, have)
ccomp(do, know)
advmod(knife, all)
case(knife, about)
obl(know, knife)
punct(do, .)
nsubj(block, someone)
root(ROOT, block)
det(door, the)
obj(block, door)
case(inside, from)
obl(block, inside)
punct(block, .)
nsubj(smashed, he)
root(ROOT, smashed)
obj(smashed, it)
compound:prt(smashed, in)
cc(tumble, and)
conj(smashed, tumble)
case(darkness, into)
obl(tumble, darkness)
punct(smashed, .)
nsubj(see, he)
root(ROOT, see)
advmod(dimly, only)
advmod(move, dimly)
xcomp(see, move)
obj(move, figure)
punct(yell, ,)
cc(yell, but)
mark(slash, when)
nsubj(slash, he)
advcl(yell, slash)
obj(slash, they)
nsubj(yell, they)
conj(see, yell)
cc(fleed, and)
conj(yell, fleed)
punct(see, .)
nsubj(go, he)
root(ROOT, go)
case(bed, for)
det(bed, the)
obl(go, bed)
punct(jump, ,)
conj(go, jump)
case(it, on)
obl(jump, it)
punct(strike, ,)
cc(strike, and)
conj(go, strike)
mark(could, where)
nsubj(could, he)
advcl(strike, could)
punct(strike, ,)
advmod(strike, repeatedly)
punct(go, .)
nsubj(be, it)
root(ROOT, be)
mark(get, like)
advmod(get, finally)
advcl(be, get)
case(nightmare, into)
nmod:poss(nightmare, one)
case(one, 's)
amod(nightmare, own)
obl(get, nightmare)
mark(punish, to)
advcl(get, punish)
nmod:poss(dream, one)
case(one, 's)
obj(punish, dream)
punct(be, .)
nummod(man, two)
nsubj(pull, man)
root(ROOT, pull)
obj(pull, he)
compound:prt(pull, off)
punct(pull, .)
nsubj(say, nobody)
root(ROOT, say)
obj(say, anything)
punct(say, .)
nsubj(hack, Payne)
root(ROOT, hack)
case(arm, at)
nmod:poss(arm, they)
obl(hack, arm)
punct(hack, .)
expl(be, there)
root(ROOT, be)
det(lady, a)
nsubj(be, lady)
advmod(lady, there)
punct(be, ,)
case(nightdress, in)
det(nightdress, a)
obl(be, nightdress)
punct(be, .)
nsubj(want, he)
aux(want, would)
advmod(want, not)
aux(want, have)
root(ROOT, want)
mark(hurt, to)
xcomp(want, hurt)
det(lady, a)
obj(hurt, lady)
punct(want, .)
det(man, another)
nsubj(approach, man)
root(ROOT, approach)
punct(approach, ,)
det(one, this)
nsubj(dress, one)
advmod(dress, fully)
ccomp(approach, dress)
punct(approach, .)
mark(go, when)
det(knife, the)
nsubj(go, knife)
advcl(down, go)
case(chest, into)
nmod:poss(chest, he)
obl(go, chest)
punct(down, ,)
nsubj(down, he)
nsubj(down, we)
advmod(down, not)
root(ROOT, down)
case(once, at)
obl(down, once)
punct(down, .)
punct(down, ``)
nsubj(mad, I)
cop(mad, be)
root(ROOT, mad)
punct(mad, '')
punct(mad, ,)
parataxis(mad, shout)
obj(shout, Payne)
punct(mad, ,)
mark(run, as)
nsubj(run, he)
advcl(mad, run)
advmod(run, out)
case(hall, into)
det(hall, the)
obl(run, hall)
punct(mad, .)
punct(mad, ``)
nsubj(mad, I)
cop(mad, be)
root(ROOT, mad)
punct(mad, '')
punct(wish, ,)
cc(wish, and)
advmod(wish, only)
conj(mad, wish)
nsubj(be, he)
aux(be, have)
ccomp(wish, be)
punct(mad, .)
nsubj(make, that)
aux(make, would)
aux(make, have)
root(ROOT, make)
obj(make, thing)
advmod(much, so)
advmod(easier, much)
xcomp(make, easier)
punct(make, .)
cc(mad, but)
nsubj(mad, he)
cop(mad, be)
advmod(mad, not)
root(ROOT, mad)
punct(mad, .)
nsubj(dream, he)
aux(dream, be)
advmod(dream, only)
root(ROOT, dream)
punct(dream, .)
nsubj(clatter, he)
root(ROOT, clatter)
compound:prt(clatter, down)
det(stair, the)
obj(clatter, stair)
cc(door, and)
case(door, out)
case(door, of)
det(door, the)
conj(stair, door)
punct(clatter, .)
advmod(yell, somewhere)
case(fog, in)
det(fog, the)
obl(somewhere, fog)
punct(yell, ,)
det(boy, the)
compound(boy, nigger)
nsubj(yell, boy)
aux(yell, be)
advmod(yell, still)
root(ROOT, yell)
obj(yell, murder)
punct(yell, .)
nsubj(wake, one)
advmod(wake, always)
root(ROOT, wake)
compound:prt(wake, up)
punct(wake, ,)
advmod(dream, even)
case(dream, from)
nmod:poss(dream, one)
case(one, 's)
amod(dream, own)
obl(wake, dream)
punct(wake, .)
det(air, the)
amod(air, clammy)
nsubj(revive, air)
root(ROOT, revive)
obj(revive, he)
punct(revive, .)
vocative(fleed, Herold)
punct(fleed, ,)
nsubj(see, he)
ccomp(fleed, see)
punct(fleed, ,)
aux(fleed, have)
root(ROOT, fleed)
punct(fleed, .)
discourse(expect, well)
punct(expect, ,)
nsubj(expect, one)
aux(expect, do)
advmod(expect, not)
root(ROOT, expect)
obj(expect, much)
case(people, of)
obl(much, people)
case(Herold, like)
nmod(people, Herold)
punct(expect, .)
nsubj(unhitch, he)
root(ROOT, unhitch)
nmod:poss(horse, he)
obj(unhitch, horse)
punct(walk, ,)
conj(unhitch, walk)
obj(walk, it)
advmod(walk, away)
punct(mount, ,)
conj(unhitch, mount)
punct(spur, ,)
cc(spur, and)
conj(unhitch, spur)
obj(spur, it)
advmod(spur, on)
punct(unhitch, .)
det(boy, the)
compound(boy, nigger)
nsubj(close, boy)
cop(close, be)
parataxis(unhitch, close)
case(he, behind)
obl(close, he)
punct(unhitch, .)
advmod(turn, then)
det(boy, the)
compound(boy, nigger)
nsubj(turn, boy)
root(ROOT, turn)
advmod(turn, back)
cc(alone, and)
nsubj(alone, he)
cop(alone, be)
conj(turn, alone)
punct(turn, .)
nsubj(ride, he)
root(ROOT, ride)
advmod(ride, on)
cc(on, and)
conj(ride, on)
punct(ride, .)
nsubj(have, he)
parataxis(ride, have)
det(idea, no)
obj(have, idea)
ccomp(have, where)
nsubj(be, he)
cop(where, be)
punct(ride, .)
case(time, after)
det(time, some)
obl(come, time)
nsubj(come, he)
root(ROOT, come)
case(field, to)
det(field, a)
amod(field, open)
obl(come, field)
punct(come, .)
det(field, a)
amod(field, open)
nsubj(better, field)
cop(better, be)
root(ROOT, better)
case(building, than)
det(building, a)
obl(better, building)
punct(better, ,)
nsubj(sure, that)
cop(sure, be)
case(sure, for)
parataxis(better, sure)
punct(better, ,)
advmod(dismount, so)
nsubj(dismount, he)
parataxis(better, dismount)
punct(turn, ,)
conj(dismount, turn)
compound:prt(turn, off)
det(horse, the)
obj(turn, horse)
punct(plunge, ,)
cc(plunge, and)
conj(dismount, plunge)
case(grass, through)
det(grass, the)
obl(plunge, grass)
punct(better, .)
nsubj(feel, he)
root(ROOT, feel)
advmod(sleepy, curiously)
xcomp(feel, sleepy)
punct(feel, ,)
det(world, the)
nsubj(seem, world)
parataxis(feel, seem)
advmod(away, far)
advmod(seem, away)
punct(feel, ;)
punct(feel, ;)
nsubj(know, he)
parataxis(feel, know)
nsubj(get, he)
aux(get, should)
ccomp(know, get)
case(cap, to)
obl(get, cap)
punct(know, ,)
cc(know, but)
nsubj(know, he)
aux(know, do)
advmod(know, not)
conj(feel, know)
advmod(know, how)
punct(feel, .)
nsubj(sure, he)
cop(sure, be)
root(ROOT, sure)
punct(sure, ,)
mark(do, for)
nsubj(do, he)
aux(do, have)
advcl(sure, do)
mark(tell, as)
nsubj:pass(tell, he)
aux:pass(tell, be)
advcl(do, tell)
punct(have, ,)
parataxis(sure, have)
advmod(have, not)
nsubj(have, he)
punct(sure, ?)
punct(sure, ?)
nsubj(find, cap)
aux(find, would)
root(ROOT, find)
obj(find, he)
cc(take, and)
conj(find, take)
obj(take, care)
case(he, of)
obl(take, he)
punct(find, .)
advmod(choose, so)
advcl(clamber, choose)
det(tree, a)
amod(tree, good)
obj(choose, tree)
punct(clamber, ,)
nsubj(clamber, he)
root(ROOT, clamber)
compound:prt(clamber, up)
case(it, into)
obl(clamber, it)
punct(find, ,)
conj(clamber, find)
det(notch, a)
amod(notch, comfortable)
obj(find, notch)
punct(curl, ,)
cc(curl, and)
conj(clamber, curl)
compound:prt(curl, up)
case(it, in)
obl(curl, it)
mark(sleep, to)
advcl(curl, sleep)
punct(curl, ,)
mark(be, like)
det(bear, the)
amod(bear, tousled)
nsubj(sleep, bear)
nsubj(be, he)
cop(bear, be)
punct(bear, ,)
case(hand, with)
nmod:poss(hand, he)
obl(be, hand)
case(chest, across)
nmod:poss(chest, he)
nmod(hand, chest)
punct(hand, ,)
mark(surfeit, as)
mark(surfeit, though)
advcl(be, surfeit)
case(honey, with)
obl(surfeit, honey)
punct(clamber, .)
nsubj(make, violence)
advmod(make, always)
root(ROOT, make)
obj(make, he)
xcomp(make, tired)
punct(frighten, ,)
cc(frighten, but)
nsubj(frighten, he)
cop(frighten, be)
advmod(frighten, not)
conj(make, frighten)
punct(make, .)
case(Boston, in)
obl(wind, Boston)
punct(wind, ,)
nsubj(wind, Edwin)
flat(Edwin, Booth)
aux(wind, be)
root(ROOT, wind)
compound:prt(wind, up)
det(performance, a)
obj(wind, performance)
case(Way, of)
det(Way, a)
compound(Way, New)
nmod(performance, Way)
mark(pay, to)
advcl(wind, pay)
amod(Debts, old)
obj(pay, Debts)
punct(wind, .)
nsubj(part, it)
cop(part, be)
det(part, a)
root(ROOT, part)
advmod(familiar, so)
amod(part, familiar)
case(he, to)
obl(familiar, he)
mark(bother, that)
nsubj(bother, he)
aux(bother, do)
advmod(bother, not)
ccomp(familiar, bother)
mark(think, to)
xcomp(bother, think)
case(it, about)
obl(think, it)
advmod(more, any)
advmod(think, more)
punct(part, .)
csubj(sooth, act)
root(ROOT, sooth)
obj(sooth, he)
punct(sooth, .)
case(stage, on)
det(stage, a)
obl(know, stage)
nsubj(know, he)
advmod(know, always)
root(ROOT, know)
nsubj(do, what)
mark(do, to)
xcomp(know, do)
punct(do, ,)
cc(do, and)
obl:tmod(do, tonight)
punct(do, ,)
mark(judge, to)
advcl(do, judge)
case(applause, by)
det(applause, the)
obl(judge, applause)
punct(do, ,)
nsubj(do, he)
aux(do, must)
aux(do, be)
conj(know, do)
obj(do, it)
advmod(do, better)
case(usual, than)
obl(better, usual)
punct(do, .)
case(Sir, as)
obl(do, Sir)
flat(Sir, gile)
flat(Sir, overreach)
punct(have, ()
advmod(often, how)
advmod(have, often)
aux(have, have)
nsubj(have, he)
parataxis(Sir, have)
mark(play, to)
xcomp(have, play)
det(part, that)
obj(play, part)
punct(part, ,)
nsubj(believe, who)
aux(believe, do)
advmod(believe, not)
acl:relcl(part, believe)
det(word, a)
obj(believe, word)
case(it, of)
nmod(word, it)
punct(believe, ))
punct(raise, ,)
nsubj(raise, he)
parataxis(believe, raise)
nmod:poss(arm, he)
obj(raise, arm)
cc(declaim, and)
conj(raise, declaim)
punct(raise, :)
punct(know, ``)
root(ROOT, where)
cop(where, be)
nmod:poss(honour, my)
nsubj(where, honour)
advmod(where, now)
punct(where, '')
punct(where, ?)
punct(where, ?)
nsubj(one, that)
cop(one, be)
root(ROOT, one)
case(spot, of)
det(spot, the)
amod(spot, high)
nmod(one, spot)
case(play, of)
det(play, the)
nmod(spot, play)
punct(one, .)
det(audience, the)
nsubj(love, audience)
punct(love, ,)
case(usual, as)
obl(love, usual)
punct(love, ,)
root(ROOT, love)
obj(love, it)
punct(love, .)
nsubj(delighted, he)
cop(delighted, be)
root(ROOT, delighted)
mark(see, to)
xcomp(delighted, see)
obj(see, they)
advmod(happy, so)
xcomp(see, happy)
punct(delighted, .)
mark(have, if)
nsubj(have, he)
advcl(one, have)
det(worry, any)
obj(have, worry)
punct(one, ,)
nsubj(one, it)
cop(one, be)
advmod(one, only)
det(one, the)
amod(one, small)
root(ROOT, one)
punct(one, ,)
case(mother, about)
nmod(one, mother)
case(York, in)
compound(York, New)
nmod(mother, York)
punct(daughter, ,)
cc(daughter, and)
nmod:poss(daughter, he)
conj(one, daughter)
appos(daughter, Edwina)
cc(what, and)
conj(daughter, what)
nsubj(do, she)
aux(do, might)
aux(do, be)
acl:relcl(what, do)
case(hour, at)
det(hour, this)
obl(do, hour)
punct(do, ,)
case(Asia, with)
nmod:poss(Asia, she)
compound(Asia, aunt)
obl(do, Asia)
punct(Asia, ,)
case(Philadelphia, in)
nmod(Asia, Philadelphia)
punct(one, .)
nsubj(ambivalent, everyone)
cop(ambivalent, be)
root(ROOT, ambivalent)
case(profession, about)
nmod:poss(profession, he)
obl(ambivalent, profession)
punct(ambivalent, ,)
mark(practise, if)
nsubj(practise, he)
aux(practise, have)
advcl(ambivalent, practise)
obj(practise, it)
advmod(enough, long)
advmod(practise, enough)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(ambivalent, be)
advmod(be, still)
nsubj(be, moment)
mark(love, when)
nsubj(love, he)
acl(moment, love)
det(stage, the)
obj(love, stage)
cc(people, and)
det:predet(people, all)
det(people, those)
amod(people, unseen)
conj(love, people)
advmod(there, out)
advmod(people, there)
punct(people, ,)
nsubj(cheer, who)
aux(cheer, might)
acl:relcl(people, cheer)
obj(cheer, you)
cc(boo, or)
conj(cheer, boo)
obj(boo, you)
punct(be, ,)
cc(be, but)
nsubj(be, that)
conj(cheer, be)
advmod(be, largely)
punct(be, ,)
mark(up, though)
advmod(entirely, not)
advmod(up, entirely)
punct(up, ,)
advmod(be, up)
case(you, to)
obl(up, you)
punct(ambivalent, .)
nsubj(make, they)
root(ROOT, make)
det(world, the)
obj(make, world)
xcomp(make, seem)
xcomp(seem, friendly)
advmod(seem, somehow)
punct(make, ,)
mark(know, though)
nsubj(know, he)
advcl(make, know)
nsubj(be, it)
ccomp(know, be)
advmod(be, not)
punct(make, . )
nummod(right, 7)
punct(right, ,)
nsubj(right, wilk)
cop(right, be)
advmod(right, quite)
root(ROOT, right)
case(thing, about)
nummod(thing, one)
obl(right, thing)
punct(right, .)
nsubj(room, Laura)
flat(Laura, Keene)
aux(room, have)
cop(room, be)
case(room, in)
det(room, the)
amod(room, green)
root(ROOT, room)
punct(room, .)
det(commotion, the)
nsubj(bring, commotion)
aux(bring, have)
root(ROOT, bring)
obj(bring, she)
case(wing, into)
det(wing, the)
obl(bring, wing)
punct(bring, .)
mark(act, since)
nsubj(act, she)
aux(act, could)
advmod(act, not)
advcl(suite, act)
punct(suite, ,)
nummod(part, one)
nsubj(suite, part)
root(ROOT, suite)
obj(suite, she)
cc(other, as)
fixed(as, well)
fixed(as, as)
det(other, any)
obl(suite, other)
punct(person, ,)
cc(person, and)
advmod(person, so)
nsubj(person, she)
cop(person, be)
det(person, the)
amod(person, first)
conj(suite, person)
mark(offer, to)
acl(person, offer)
obj(offer, Mr.)
flat(Mr., Lincoln)
det(glass, a)
obj(offer, glass)
case(water, of)
nmod(glass, water)
punct(offer, ,)
advcl(offer, hold)
obj(hold, it)
compound:prt(hold, up)
case(box, to)
det(box, the)
obl(hold, box)
punct(high, ,)
amod(box, high)
case(head, above)
nmod:poss(head, she)
obl(high, head)
punct(miss, ,)
mark(miss, to)
advcl(hold, miss)
obj(miss, Harris)
punct(Harris, ,)
nsubj(ask, who)
aux(ask, have)
acl:relcl(Harris, ask)
case(it, for)
obl(ask, it)
punct(suite, .)
nsubj(one, she)
aux(one, have)
cop(one, be)
root(ROOT, one)
case(first, of)
det(first, the)
nmod(one, first)
mark(collect, to)
advcl(one, collect)
nmod:poss(wit, she)
obj(collect, wit)
punct(one, .)
nsubj(much, it)
cop(much, be)
advmod(much, not)
advmod(much, so)
root(ROOT, much)
mark(stun, that)
det(shot, the)
nsubj(stun, shot)
aux(stun, have)
ccomp(much, stun)
det(audience, the)
obj(stun, audience)
punct(stun, ,)
mark(stun, as)
mark(stun, that)
nsubj:pass(stun, they)
aux(stun, have)
aux:pass(stun, be)
advcl(stun, stun)
advmod(stun, already)
punct(see, .)
nsubj(see, most)
case(they, of)
nmod(most, they)
aux(see, have)
parataxis(much, see)
nmod:poss(Cousin, we)
amod(Cousin, american)
obj(see, Cousin)
advmod(see, before)
punct(be, ,)
cc(be, and)
mark(stage, unless)
compound(Keene, miss)
nsubj(stage, Keene)
cop(stage, be)
case(stage, on)
advcl(be, stage)
punct(be, ,)
expl(be, there)
conj(see, be)
advmod(be, not)
nsubj(be, much)
case(it, to)
obl(much, it)
punct(much, .)
det(theatre, the)
nsubj(hot, theatre)
cop(hot, be)
root(ROOT, hot)
cc(drug, and)
nsubj:pass(drug, they)
aux:pass(drug, be)
conj(hot, drug)
case(boredom, with)
obl(drug, boredom)
punct(hot, .)
det(stage, the)
nsubj(empty, stage)
aux(empty, have)
cop(empty, be)
root(ROOT, empty)
punct(empty, ,)
case(Harry, except)
case(Harry, for)
obl(empty, Harry)
flat(Harry, Hawk)
punct(empty, ,)
advcl(empty, do)
nmod:poss(monologue, he)
compound(monologue, star)
obj(do, monologue)
punct(empty, .)
det(audience, the)
nsubj(fond, audience)
cop(fond, be)
root(ROOT, fond)
case(Harry, of)
obl(fond, Harry)
flat(Harry, Hawk)
punct(fond, ,)
nsubj(dear, he)
cop(dear, be)
det(dear, a)
parataxis(fond, dear)
punct(in, ,)
conj(dear, in)
cc(character, or)
case(character, out)
case(character, of)
obl(in, character)
punct(funny, ,)
cc(funny, but)
nsubj(funny, he)
cop(funny, be)
advmod(funny, not)
advmod(funny, particularly)
conj(fond, funny)
punct(fond, .)
case(end, at)
det(end, the)
obl(applaud, end)
case(monologue, of)
det(monologue, the)
nmod(end, monologue)
det(audience, the)
nsubj(applaud, audience)
aux(applaud, would)
root(ROOT, applaud)
punct(applaud, .)
advmod(look, meanwhile)
nsubj(look, it)
parataxis(applaud, look)
case(scenery, at)
det(scenery, the)
obl(look, scenery)
punct(applaud, .)
punct(applaud, ``)
discourse(guess, well)
punct(guess, ,)
nsubj(guess, I)
root(ROOT, guess)
nsubj(know, I)
ccomp(guess, know)
advmod(know, enough)
mark(turn, to)
advcl(know, turn)
obj(turn, you)
advmod(turn, inside)
compound:prt(turn, out)
punct(guess, ,)
nsubj(sockdologizing, you)
parataxis(turn, sockdologizing)
amod(mantrap, old)
obj(sockdologizing, mantrap)
punct(sockdologizing, '')
punct(guess, !)
punct(guess, !)
root(ROOT, Said)
obj(Said, Trenchard)
punct(Said, ,)
advmod(Said, otherwise)
root(ROOT, Hawk)
punct(Hawk, .)
expl(be, there)
root(ROOT, be)
advmod(be, always)
det(pause, a)
nsubj(be, pause)
advmod(be, here)
punct(be, ,)
case(line, before)
det(line, the)
amod(line, next)
obl(be, line)
punct(be, .)
nsubj(be, that)
root(ROOT, be)
mark(go, when)
det(gun, the)
nsubj(go, gun)
advcl(be, go)
advmod(go, off)
punct(be, .)
cc(mean, yet)
advmod(explosion, even)
det(explosion, that)
nsubj(mean, explosion)
aux(mean, do)
advmod(mean, not)
root(ROOT, mean)
obj(mean, much)
punct(mean, .)
nsubj(go, Guns)
aux(go, be)
ccomp(mean, go)
advmod(go, off)
advmod(City, all)
case(City, over)
compound(City, Washington)
obl(go, City)
det(day, these)
obl:tmod(go, day)
punct(go, ,)
case(celebration, because)
fixed(because, of)
det(celebration, the)
obl(go, celebration)
punct(soundproof, ,)
cc(soundproof, and)
det(theatre, the)
nsubj(soundproof, theatre)
cop(soundproof, be)
advmod(soundproof, not)
conj(go, soundproof)
punct(mean, .)
advmod(see, then)
det(audience, the)
nsubj(see, audience)
root(ROOT, see)
det(figure, a)
amod(figure, small)
punct(figure, ,)
amod(figure, dim)
obj(see, figure)
xcomp(see, appear)
case(edge, at)
det(edge, the)
obl(appear, edge)
case(box, of)
det(box, the)
amod(box, presidential)
nmod(edge, box)
punct(see, .)
punct(see, ``)
amod(tyrannis, Sic)
compound(tyrannis, semper)
ccomp(say, tyrannis)
punct(tyrannis, '')
punct(say, ,)
nsubj(say, it)
root(ROOT, say)
advmod(say, mildly)
punct(say, .)
nsubj(deliver, Booth)
aux(deliver, have)
root(ROOT, deliver)
nmod:poss(line, he)
obj(deliver, line)
punct(deliver, .)
case(he, behind)
obl(billow, he)
root(ROOT, billow)
det(cloud, a)
amod(cloud, small)
amod(cloud, pungent)
obj(billow, cloud)
case(smoke, of)
nmod(cloud, smoke)
punct(billow, .)
nsubj(strain, they)
root(ROOT, strain)
advmod(strain, forward)
punct(strain, .)
nsubj(hear, they)
aux(hear, have)
advmod(hear, not)
root(ROOT, hear)
nsubj:pass(say, what)
aux(say, have)
aux:pass(say, be)
ccomp(hear, say)
punct(hear, .)
nsubj(sit, they)
aux(sit, have)
aux(sit, be)
root(ROOT, sit)
advmod(long, too)
advmod(sit, long)
mark(able, to)
cop(able, be)
advcl(sit, able)
mark(stand, to)
xcomp(able, stand)
compound:prt(stand, up)
advmod(stand, easily)
punct(sit, .)
det(figure, the)
nsubj(leapt, figure)
root(ROOT, leapt)
case(box, from)
det(box, the)
obl(leapt, box)
punct(leapt, ,)
advmod(lose, almost)
conj(leapt, lose)
nmod:poss(balance, it)
case(it, 's)
obj(lose, balance)
punct(leapt, ,)
det(flag, the)
nsubj(drape, flag)
conj(leapt, drape)
advmod(drape, there)
conj(leapt, tore)
case(air, in)
det(air, the)
obl(tore, air)
punct(land, ,)
det(figure, the)
nsubj(land, figure)
conj(tore, land)
case(leg, on)
nmod:poss(leg, its)
amod(leg, left)
obl(land, leg)
punct(fall, ,)
conj(land, fall)
case(hand, on)
nmod:poss(hand, its)
obl(fall, hand)
punct(press, ,)
cc(press, and)
conj(land, press)
obj(press, itself)
compound:prt(press, up)
punct(leapt, .)
nsubj(have, Harry)
flat(Harry, Hawk)
advmod(have, still)
root(ROOT, have)
nmod:poss(arm, he)
obj(have, arm)
acl(arm, raise)
case(wing, towards)
det(wing, the)
obl(raise, wing)
punct(have, .)
nmod:poss(speech, he)
nsubj(falter, speech)
root(ROOT, falter)
punct(falter, .)
nsubj(lower, he)
aux(lower, do)
advmod(lower, not)
root(ROOT, lower)
nmod:poss(arm, he)
obj(lower, arm)
punct(lower, .)
det(figure, the)
nsubj:pass(dress, figure)
aux:pass(dress, be)
advmod(theatrically, so)
advmod(dress, theatrically)
root(ROOT, dress)
punct(dress, ,)
mark(be, that)
nsubj(be, it)
ccomp(dress, be)
mark(blundered, as)
mark(blundered, though)
det(character, a)
nsubj(blundered, character)
case(play, from)
det(play, some)
amod(play, other)
nmod(character, play)
aux(blundered, have)
advcl(be, blundered)
case(one, into)
det(one, this)
obl(blundered, one)
punct(dress, .)
det(play, the)
nsubj(be, play)
case(night, for)
compound(night, Saturday)
nmod(play, night)
root(ROOT, be)
mark(performance, to)
cop(performance, be)
det(performance, a)
compound(performance, benefit)
xcomp(be, performance)
case(Octoroon, of)
det(Octoroon, the)
nmod(performance, Octoroon)
punct(be, .)
det(figure, this)
nsubj(look, figure)
root(ROOT, look)
case(dealer, like)
det(dealer, the)
compound(dealer, slave)
obl(look, dealer)
case(that, from)
nmod(dealer, that)
punct(look, .)
cc(look, but)
nsubj(look, it)
advmod(look, also)
root(ROOT, look)
case(taad, like)
det(taad, a)
obl(look, taad)
punct(look, ,)
advcl(look, hopping)
advmod(hopping, away)
case(light, from)
det(light, the)
obl(hopping, light)
punct(look, .)
expl(be, there)
root(ROOT, be)
nsubj(be, something)
amod(something, maim)
cc(crazy, and)
conj(maim, crazy)
case(motion, about)
nmod:poss(motion, its)
obl(maim, motion)
nsubj(disturb, that)
acl:relcl(motion, disturb)
obj(disturb, they)
punct(be, .)
advmod(disappear, then)
nsubj(disappear, it)
root(ROOT, disappear)
case(wing, into)
det(wing, the)
obl(disappear, wing)
punct(disappear, .)
nsubj(shift, Harry)
flat(Harry, Hawk)
aux(shift, have)
advmod(shift, not)
root(ROOT, shift)
obj(shift, position)
punct(lower, ,)
cc(lower, but)
nsubj(lower, he)
case(last, at)
nmod(he, last)
conj(shift, lower)
nmod:poss(arm, he)
obj(lower, arm)
punct(scream, .)
nsubj(scream, Mrs.)
flat(Mrs., Lincoln)
parataxis(shift, scream)
punct(shift, .)
expl(be, there)
root(ROOT, be)
det(mistake, no)
nsubj(be, mistake)
det(scream, that)
nmod:npmod(mistake, scream)
punct(be, .)
nsubj(be, it)
root(ROOT, be)
obj(expect, what)
nsubj(expect, anyone)
nsubj(see, who)
aux(see, have)
advmod(see, ever)
acl:relcl(anyone, see)
obj(see, she)
aux(expect, have)
advmod(expect, always)
ccomp(be, expect)
obj(expect, she)
mark(do, to)
xcomp(expect, do)
punct(expect, .)
cc(have, yet)
det(scream, this)
nsubj(have, scream)
root(ROOT, have)
det(note, a)
amod(note, different)
obj(have, note)
case(it, in)
obl(have, it)
punct(have, .)
det(absence, that)
nsubj(dash, absence)
case(indulgence, of)
det(indulgence, a)
amod(indulgence, urgent)
compound(indulgence, self)
punct(indulgence, -)
nmod(absence, indulgence)
root(ROOT, dash)
obj(dash, they)
xcomp(dash, awake)
case(pail, like)
det(pail, a)
obl(awake, pail)
case(water, of)
nmod(pail, water)
punct(dash, .)
root(ROOT, Clara)
nsubj(stand, Harris)
punct(Harris, ,)
nsubj(stand, one)
case(guest, of)
det(guest, the)
nmod(one, guest)
case(box, in)
det(box, the)
nmod(guest, box)
punct(stand, ,)
root(ROOT, stand)
compound:prt(stand, up)
cc(demand, and)
conj(stand, demand)
obj(demand, water)
punct(stand, .)
nmod:poss(action, she)
nsubj(involuntary, action)
cop(involuntary, be)
root(ROOT, involuntary)
punct(involuntary, . )
mark(happen, when)
nsubj(happen, something)
nsubj(happen, unexpected)
advcl(ask, happen)
punct(ask, ,)
nsubj(ask, one)
advmod(ask, always)
root(ROOT, ask)
case(water, for)
obl(ask, water)
mark(woman, if)
nsubj(woman, one)
cop(woman, be)
det(woman, a)
advcl(ask, woman)
punct(woman, ,)
appos(woman, brandy)
mark(man, if)
nsubj(man, one)
cop(man, be)
det(man, a)
advcl(woman, man)
punct(scream, .)
nsubj(scream, Mrs.)
flat(Mrs., Lincoln)
parataxis(ask, scream)
advmod(scream, again)
punct(ask, .)
case(box, in)
det(box, the)
amod(box, presidential)
obl(lean, box)
nsubj(lean, someone)
root(ROOT, lean)
case(balustrade, over)
det(balustrade, the)
obl(lean, balustrade)
cc(yell, and)
conj(lean, yell)
punct(lean, :)
punct(lean, ``)
nsubj(shoot, he)
aux(shoot, have)
root(ROOT, shoot)
det(President, the)
obj(shoot, President)
punct(shoot, '')
punct(shoot, !)
punct(shoot, !)
nsubj(get, that)
root(ROOT, get)
obj(get, everybody)
compound:prt(get, up)
punct(get, .)
case(stage, on)
det(stage, the)
obl(begin, stage)
punct(begin, ,)
nsubj(begin, Harry)
flat(Harry, Hawk)
root(ROOT, begin)
mark(weep, to)
xcomp(begin, weep)
punct(begin, .)
root(ROOT, Laura)
nsubj(brush, Keene)
root(ROOT, brush)
case(he, by)
obl(brush, he)
case(glass, with)
det(glass, the)
obl(brush, glass)
case(water, of)
nmod(glass, water)
punct(brush, .)
det(crowd, the)
nsubj(begin, crowd)
root(ROOT, begin)
mark(move, to)
xcomp(begin, move)
punct(begin, .)
case(City, in)
compound(City, Washington)
obl(live, City)
nsubj(live, everyone)
root(ROOT, live)
case(bubble, in)
det(bubble, a)
obl(live, bubble)
case(plot, of)
nmod(bubble, plot)
punct(attract, ,)
cc(attract, and)
nummod(death, one)
nsubj(attract, death)
aux(attract, might)
conj(live, attract)
obj(attract, another)
punct(live, .)
nsubj(panic, it)
cop(panic, be)
advmod(panic, not)
advmod(panic, exactly)
root(ROOT, panic)
nsubj(give, they)
acl:relcl(panic, give)
advmod(give, way)
obl(give, to)
punct(sit, ,)
cc(sit, but)
nsubj(sit, they)
aux(sit, could)
advmod(sit, not)
advmod(sit, just)
conj(panic, sit)
advmod(sit, there)
punct(panic, .)
det(voice, the)
compound(voice, beehive)
nsubj(bear, voice)
punct(voice, ,)
case(one, for)
det(one, no)
obl(bear, one)
aux(bear, could)
root(ROOT, bear)
obj(bear, silence)
punct(drow, ,)
conj(bear, drow)
compound:prt(drow, out)
det(sound, the)
obj(drow, sound)
case(weep, of)
nmod:poss(weep, Mrs.)
flat(Mrs., Lincoln)
case(Mrs., 's)
nmod(sound, weep)
punct(bear, .)
case(rear, at)
det(rear, the)
obl(try, rear)
case(auditorium, of)
det(auditorium, the)
nmod(rear, auditorium)
punct(try, ,)
advmod(try, upstairs)
punct(try, ,)
det(man, some)
nsubj(try, man)
root(ROOT, try)
mark(push, to)
xcomp(try, push)
xcomp(push, open)
det(door, the)
obj(open, door)
case(corridor, to)
det(corridor, the)
compound(corridor, box)
obl(open, corridor)
punct(try, .)
nsubj(give, it)
aux(give, would)
advmod(give, not)
root(ROOT, give)
punct(give, . )
det(Dr., a)
root(ROOT, Dr.)
flat(Dr., Charles)
nsubj(clamber, taft)
root(ROOT, clamber)
compound:prt(clamber, up)
case(stage, on)
det(stage, the)
obl(clamber, stage)
cc(get, and)
conj(clamber, get)
det(actor, the)
obj(get, actor)
mark(hoist, to)
xcomp(get, hoist)
obj(hoist, he)
compound:prt(hoist, up)
case(box, to)
det(box, the)
obl(hoist, box)
punct(clamber, .)
case(audience, in)
det(audience, the)
obl(lose, audience)
det(man, a)
nsubj(lose, man)
acl(man, name)
xcomp(name, Ferguson)
root(ROOT, lose)
nmod:poss(head, he)
obj(lose, head)
cc(try, and)
conj(lose, try)
mark(rescue, to)
xcomp(try, rescue)
det(girl, a)
amod(girl, little)
obj(rescue, girl)
case(mob, from)
det(mob, the)
obl(rescue, mob)
punct(rescue, ,)
case(principle, on)
det(principle, the)
amod(principle, same)
obl(rescue, principle)
nsubj(lead, which)
aux(lead, have)
acl:relcl(principle, lead)
ccomp(lead, miss)
obj(miss, Harris)
mark(demand, to)
advcl(miss, demand)
obj(demand, water)
punct(lose, .)
nsubj(open, someone)
root(ROOT, open)
det(door, the)
compound(door, corridor)
obj(open, door)
case(inside, from)
det(inside, the)
obl(open, inside)
punct(call, ,)
cc(call, and)
conj(open, call)
case(doctor, for)
det(doctor, a)
obl(call, doctor)
punct(open, .)
advmod(force, somehow)
nsubj:pass(force, Dr.)
flat(Dr., Charles)
flat(Dr., Leale)
aux:pass(force, be)
root(ROOT, force)
case(mob, through)
det(mob, the)
obl(force, mob)
cc(squeeze, and)
conj(force, squeeze)
compound:prt(squeeze, out)
case(corridor, into)
det(corridor, the)
amod(corridor, dingy)
obl(squeeze, corridor)
punct(force, .)
nsubj(go, he)
root(ROOT, go)
advmod(box, straight)
case(box, to)
det(box, the)
amod(box, presidential)
obl(go, box)
punct(go, .)
case(usual, as)
obl(lose, usual)
punct(lose, ,)
nsubj(lose, Mrs.)
flat(Mrs., Lincoln)
aux(lose, have)
root(ROOT, lose)
nmod:poss(head, she)
obj(lose, head)
punct(blame, ,)
cc(blame, but)
nsubj(blame, nobody)
conj(lose, blame)
obj(blame, she)
mark(do, for)
advcl(blame, do)
advmod(now, so)
advmod(do, now)
punct(lose, .)
expl(be, there)
root(ROOT, be)
det(blood, a)
amod(blood, little)
nsubj(be, blood)
case(she, on)
det(she, the)
nmod(blood, she)
case(dress, of)
nmod:poss(dress, she)
nmod(she, dress)
punct(be, ,)
cc(slash, for)
det(assassin, the)
nsubj(slash, assassin)
aux(slash, have)
conj(be, slash)
compound(Harris, miss)
nmod:poss(companion, Harris)
case(Harris, 's)
obj(slash, companion)
punct(companion, ,)
compound(Rathbone, major)
appos(companion, Rathbone)
punct(slash, ,)
case(knife, with)
det(knife, a)
obl(slash, knife)
punct(be, .)
nsubj(say, Rathbone)
root(ROOT, say)
nsubj(bleed, he)
aux(bleed, be)
ccomp(say, bleed)
case(death, to)
obl(bleed, death)
punct(say, .)
case(look, by)
det(look, the)
obl(go, look)
case(he, of)
nmod(look, he)
nsubj(go, he)
aux(go, be)
advmod(go, not)
advmod(far, that)
advmod(go, far)
root(ROOT, go)
punct(go, .)
case(sneer, with)
det(sneer, a)
obl(spread, sneer)
punct(spread, ,)
det(man, the)
nsubj(spread, man)
root(ROOT, spread)
nmod:poss(leg, he)
obj(spread, leg)
cc(confront, and)
punct(confront, ,)
det(time, a)
amod(time, third)
obl:tmod(confront, time)
punct(confront, ,)
conj(spread, confront)
obj(confront, they)
punct(spread, .)
advmod(more, once)
advmod(reared, more)
punct(reared, ,)
nsubj(reared, Katie)
root(ROOT, reared)
punct(whinnied, ,)
cc(whinnied, and)
conj(reared, whinnied)
case(fear, in)
obl(whinnied, fear)
punct(reared, .)
case(moment, for)
det(moment, a)
obl(hang, moment)
punct(hang, ,)
nsubj(hang, boy)
cc(mount, and)
conj(boy, mount)
conj(reared, hang)
case(midair, in)
obl(hang, midair)
punct(reared, .)
nsubj(twist, Stevie)
root(ROOT, twist)
cc(command, and)
punct(command, ,)
advmod(twist, frantically)
punct(command, ,)
conj(twist, command)
det(mare, the)
obj(command, mare)
mark(leap, to)
advcl(command, leap)
advmod(ahead, straight)
advmod(leap, ahead)
punct(twist, .)
cc(nimbler, but)
det(stranger, the)
nsubj(nimbler, stranger)
cop(nimbler, be)
root(ROOT, nimbler)
advmod(nimbler, still)
punct(nimbler, .)
case(arm, with)
det(arm, a)
amod(arm, bold)
obl(dare, arm)
punct(dare, ,)
nsubj(dare, he)
root(ROOT, dare)
advmod(more, once)
obj(dare, more)
mark(obstruct, to)
advcl(more, obstruct)
obj(obstruct, they)
punct(dare, .)
nsubj(reared, Katie)
root(ROOT, reared)
det(time, a)
amod(time, third)
obj(reared, time)
punct(reared, ,)
advmod(tremble, then)
punct(reared, ,)
parataxis(reared, tremble)
punct(descend, ,)
conj(tremble, descend)
punct(reared, .)
det(stranger, the)
nsubj(leer, stranger)
root(ROOT, leer)
punct(leer, .)
advcl(leer, seize)
det(bridle, the)
obj(seize, bridle)
punct(leer, ,)
nsubj(tug, he)
parataxis(leer, tug)
case(might, with)
det:predet(might, all)
nmod:poss(might, he)
obl(tug, might)
cc(force, and)
conj(tug, force)
obj(force, Katie)
case(knee, to)
nmod:poss(knee, she)
obl(force, knee)
punct(leer, .)
nsubj(absurd, it)
cop(absurd, be)
root(ROOT, absurd)
punct(absurd, .)
nsubj(feel, Stevie)
aux(feel, could)
root(ROOT, feel)
obj(feel, himself)
xcomp(feel, toppling)
punct(feel, .)
nsubj(see, he)
root(ROOT, see)
det(ground, the)
obj(see, ground)
acl(ground, come)
compound:prt(come, up)
punct(see, --)
cc(head, and)
det(stranger, the)
nmod:poss(head, stranger)
case(stranger, 's)
conj(see, head)
punct(see, .)
case(ferocity, with)
amod(ferocity, incredible)
obl(bring, ferocity)
punct(bring, ,)
nsubj(bring, he)
root(ROOT, bring)
nmod:poss(fist, he)
obj(bring, fist)
advmod(bring, together)
cc(strike, and)
conj(bring, strike)
punct(bring, .)
det(blow, the)
nsubj(encounter, blow)
root(ROOT, encounter)
amod(hair, silky)
obj(encounter, hair)
cc(bone, and)
amod(bone, hard)
conj(hair, bone)
punct(encounter, .)
det(man, the)
nsubj(utter, man)
root(ROOT, utter)
det(cry, a)
amod(cry, weird)
obj(utter, cry)
punct(spun, ,)
conj(utter, spun)
advmod(spun, about)
punct(collapse, ,)
cc(collapse, and)
conj(utter, collapse)
case(sand, in)
det(sand, the)
obl(collapse, sand)
punct(utter, .)
nsubj(scramble, Katie)
root(ROOT, scramble)
case(foot, to)
nmod:poss(foot, she)
obl(scramble, foot)
punct(scramble, ,)
nsubj(retain, Stevie)
advmod(retain, agilely)
advcl(scramble, retain)
nmod:poss(seat, he)
obj(retain, seat)
punct(scramble, .)
advmod(reared, again)
nsubj(reared, Katie)
root(ROOT, reared)
punct(compel, ,)
cc(compel, and)
advmod(compel, now)
punct(compel, ,)
advmod(compel, wickedly)
punct(compel, ,)
nsubj(compel, he)
conj(reared, compel)
obj(compel, she)
mark(bring, to)
xcomp(compel, bring)
nmod:poss(hoofe, she)
obj(bring, hoofe)
advmod(again, down)
advmod(bring, again)
cc(again, and)
conj(again, again)
case(figure, upon)
det(figure, the)
amod(figure, sprawled)
obl(bring, figure)
case(stranger, of)
det(stranger, the)
nmod(figure, stranger)
punct(reared, .)
nsubj(feel, he)
aux(feel, could)
root(ROOT, feel)
nmod:poss(foot, he)
amod(foot, own)
obj(feel, foot)
punct(feel, ,)
obj(feel, iron-shod)
punct(feel, ,)
advcl(feel, strike)
advmod(strike, repeatedly)
mark(limp, until)
det(body, the)
nsubj(limp, body)
cop(limp, be)
advcl(strike, limp)
punct(feel, .)
nsubj(gloat, he)
root(ROOT, gloat)
punct(slaver, ,)
cc(slaver, and)
nmod:poss(lip, he)
nsubj(slaver, lip)
conj(gloat, slaver)
punct(gloat, .)
nsubj(hear, he)
root(ROOT, hear)
obj(hear, himself)
xcomp(hear, chortling)
punct(hear, .)
nsubj(ride, they)
root(ROOT, ride)
advmod(ride, around)
cc(around, and)
conj(around, around)
mark(trample, to)
advcl(ride, trample)
det(figure, the)
obj(trample, figure)
case(sand, into)
det(sand, the)
obl(trample, sand)
punct(ride, .)
advmod(top, only)
det(top, the)
nsubj(remain, top)
case(head, of)
det(head, the)
nmod(top, head)
punct(top, ,)
case(bare, with)
det(spot, a)
obl(bare, spot)
nmod(top, bare)
cc(white, and)
conj(bare, white)
case(clamshell, as)
det(clamshell, a)
obl(white, clamshell)
punct(remain, ,)
root(ROOT, remain)
xcomp(remain, visible)
punct(remain, .)
nsubj(shout, Stevie)
aux(shout, be)
root(ROOT, shout)
advmod(shout, triumphantly)
punct(shout, . )
det(train, a)
nsubj(hoot, train)
root(ROOT, hoot)
punct(hoot, .)
advmod(chill, instantly)
punct(chill, ,)
nsubj(chill, he)
root(ROOT, chill)
punct(chill, .)
nsubj(pursue, they)
aux(pursue, be)
parataxis(chill, pursue)
obj(pursue, he)
punct(chill, .)
nsubj(frighten, he)
cop(frighten, be)
root(ROOT, frighten)
punct(frighten, ;)
punct(frighten, ;)
nmod:poss(fist, he)
nsubj(clutch, fist)
parataxis(frighten, clutch)
advmod(tightly, so)
advmod(clutch, tightly)
mark(hurt, that)
nmod:poss(knuckle, he)
nsubj(hurt, knuckle)
advcl(clutch, hurt)
punct(frighten, .)
advmod(stumble, then)
nsubj(stumble, Katie)
parataxis(frighten, stumble)
punct(fall, ,)
cc(fall, and)
advmod(fall, again)
nsubj(fall, he)
aux(fall, be)
conj(stumble, fall)
punct(fall, ,)
conj(fall, fall)
punct(frighten, !)
punct(frighten, !)
punct(frighten, ``)
vocative(Stevie, Stevie)
punct(Stevie, !)
punct(Stevie, !)
nsubj(nudging, Stevie)
punct(Stevie, '')
punct(Stevie, !)
punct(nudging, !)
nmod:poss(mother, he)
nsubj(nudging, mother)
aux(nudging, be)
root(ROOT, nudging)
obj(nudging, he)
punct(fall, ,)
cc(fall, but)
nsubj(fall, he)
aux(fall, be)
advmod(fall, still)
conj(nudging, fall)
punct(nudging, .)
nmod:poss(head, he)
nsubj(hang, head)
root(ROOT, hang)
compound:prt(hang, over)
det(board, the)
obj(hang, board)
case(stall, of)
nmod:poss(stall, Katie)
case(Katie, 's)
nmod(board, stall)
punct(hang, ;)
punct(hang, ;)
mark(sprawled, before)
nsubj:pass(sprawled, it)
aux:pass(sprawled, be)
advcl(hang, sprawled)
det(corpse, the)
amod(corpse, mangled)
obj(sprawled, corpse)
case(stranger, of)
det(stranger, the)
amod(stranger, beard)
nmod(corpse, stranger)
punct(hang, .)
punct(hang, ``)
vocative(wake, Stevie)
punct(wake, ,)
root(ROOT, wake)
compound:prt(wake, up)
advmod(wake, now)
punct(wake, !)
punct(wake, !)
nsubj(there, we)
cop(there, be)
advmod(there, nearly)
root(ROOT, there)
punct(there, '')
punct(there, .)
nsubj(dream, he)
aux(dream, have)
aux(dream, be)
parataxis(there, dream)
punct(there, .)
nsubj(safe, he)
cop(safe, be)
root(ROOT, safe)
case(arm, in)
nmod:poss(mama, he)
nmod:poss(arm, mama)
case(mama, 's)
obl(safe, arm)
punct(safe, .)
det(train, the)
nsubj(slowed, train)
aux(slowed, have)
root(ROOT, slowed)
punct(slowed, .)
nsubj(wink, Houses)
root(ROOT, wink)
mark(roll, as)
det(car, the)
nsubj(roll, car)
advcl(wink, roll)
case(depot, beside)
det(depot, a)
amod(depot, little)
obl(roll, depot)
punct(wink, .)
punct(wink, ``)
root(ROOT, po)
punct(Chavis, ')
appos(po, Chavis)
punct(Chavis, '')
punct(po, !)
punct(po, !)
det(trainman, the)
nsubj(call, trainman)
parataxis(po, call)
punct(po, .)
nsubj(come, he)
root(ROOT, come)
advmod(come, by)
cc(repeat, and)
conj(come, repeat)
punct(come, ,)
punct(come, ``)
root(ROOT, po)
punct(Chavis, ')
appos(po, Chavis)
punct(Chavis, '')
punct(Chavis, !)
punct(Chavis, !)
list(Chavis, Chapter)
nummod(Chapter, 6)
appos(Chapter, bong)
punct(Chapter, !)
punct(bong, !)
parataxis(po, bong)
punct(po, !)
punct(po, !)
root(ROOT, Startled)
obj(Startled, he)
xcomp(Startled, awake)
punct(Startled, .)
det(room, the)
nsubj(vibrate, room)
root(ROOT, vibrate)
mark(rock, as)
mark(rock, if)
det(hand, a)
amod(hand, giant)
nsubj(rock, hand)
aux(rock, have)
advcl(vibrate, rock)
obj(rock, it)
punct(vibrate, .)
parataxis(vibrate, bong)
punct(vibrate, !)
punct(vibrate, ! )
det(boom, a)
amod(boom, dull)
root(ROOT, boom)
cc(echo, and)
det(echo, a)
compound(echo, throbb)
conj(boom, echo)
punct(boom, .)
det(wall, the)
nsubj(bulg, wall)
root(ROOT, bulg)
punct(bulg, ,)
det(floor, the)
nsubj(tremble, floor)
parataxis(bulg, tremble)
punct(rattle, ,)
det(windowpane, the)
nsubj(rattle, windowpane)
parataxis(bulg, rattle)
punct(bulg, .)
nsubj(stare, he)
root(ROOT, stare)
case(morning, at)
det(morning, the)
amod(morning, far)
obl(stare, morning)
punct(stare, ,)
advcl(stare, expect)
det(pendulum, a)
obj(expect, pendulum)
mark(swing, to)
acl(pendulum, swing)
case(horizon, across)
det(horizon, the)
obl(swing, horizon)
punct(stare, .)
root(ROOT, bong)
punct(bong, !)
punct(bong, !)
nsubj(race, he)
root(ROOT, race)
case(window, to)
det(window, the)
obl(race, window)
cc(yank, and)
conj(race, yank)
case(sash, at)
det(sash, the)
obl(yank, sash)
punct(race, .)
root(ROOT, bong)
punct(bong, !)
punct(bong, !)
det(wood, the)
nsubj(old, wood)
cop(old, be)
root(ROOT, old)
punct(old, ,)
det(paint, the)
nsubj(alligator, paint)
parataxis(old, alligator)
punct(old, .)
root(ROOT, bong)
punct(bong, !)
punct(bong, ! )
det(breeze, a)
amod(breeze, fresh)
nsubj(salut, breeze)
root(ROOT, salut)
obj(salut, he)
punct(salut, .)
nummod(o'clock, six)
root(ROOT, o'clock)
punct(o'clock, !)
punct(o'clock, !)
nsubj(put, he)
root(ROOT, put)
nmod:poss(head, he)
obj(put, head)
compound:prt(put, out)
punct(put, .)
expl(be, there)
root(ROOT, be)
det(roof, the)
compound(roof, slate)
nsubj(be, roof)
case(church, of)
det(church, the)
nmod(roof, church)
punct(be, ;)
punct(be, ;)
nsubj(climb, ivy)
parataxis(be, climb)
det(wall, the)
amod(wall, red)
compound(wall, brick)
obj(climb, wall)
case(monster, like)
det(monster, a)
amod(scale, green)
punct(scale, -)
amod(monster, scale)
obl(climb, monster)
punct(be, .)
det(clock, the)
root(ROOT, clock)
nsubj(strike, which)
aux(strike, have)
acl:relcl(clock, strike)
xcomp(strike, present)
det(face, a)
amod(face, innocent)
obj(present, face)
punct(clock, .)
case(mama, in)
det(mama, the)
compound(mama, kitchen)
nsubj(wipe, mama)
aux(wipe, be)
root(ROOT, wipe)
det(cupboard, the)
obj(wipe, cupboard)
punct(wipe, .)
punct(wipe, ``)
expl(be, there)
root(ROOT, be)
det(tower, a)
nsubj(be, tower)
cc(steeple, and)
det(steeple, a)
conj(tower, steeple)
case(church, on)
det(church, the)
nmod(steeple, church)
det(foot, a)
nummod(foot, million)
obl:npmod(high, foot)
advmod(be, high)
punct(be, .)
cc(clock, and)
det(clock, the)
amod(clock, loudest)
root(ROOT, clock)
case(world, in)
det(world, the)
amod(world, whole)
nmod(clock, world)
punct(clock, '')
punct(clock, !)
punct(clock, !)
punct(clock, ``)
nsubj(know, I)
root(ROOT, know)
punct(know, ,)
vocative(know, Stephen)
punct(know, '')
punct(smile, ,)
nsubj(smile, she)
ccomp(know, smile)
punct(know, .)
punct(know, ``)
nsubj(say, they)
root(ROOT, say)
mark(hundred, that)
nmod:poss(steeple, we)
nsubj(hundred, steeple)
cop(hundred, be)
nummod(hundred, one)
ccomp(say, hundred)
cc(high, and)
compound(two, sixty)
punct(two, -)
nummod(foot, two)
obl:npmod(high, foot)
conj(hundred, high)
punct(say, .)
det(clock, the)
nsubj:pass(install, clock)
nsubj(hear, you)
acl:relcl(clock, hear)
obj(hear, strike)
punct(clock, --)
nsubj(clock, it)
cop(clock, be)
advmod(clock, really)
det(clock, the)
compound(clock, town)
parataxis(clock, clock)
punct(install, --)
aux:pass(install, be)
root(ROOT, install)
amod(April, last)
obl:tmod(install, April)
case(Mrs., by)
obl(install, Mrs.)
advmod(birthday, shorter)
punct(shorter, ,)
case(birthday, on)
nmod:poss(birthday, she)
root(ROOT, birthday)
punct(birthday, '')
punct(shorter, .)
nsubj(dress, he)
root(ROOT, dress)
punct(sped, ,)
cc(sped, and)
conj(dress, sped)
advmod(sped, outdoors)
punct(dress, .)
nsubj(cross, he)
root(ROOT, cross)
compound(Street, Broome)
obj(cross, Street)
case(Square, to)
compound(Square, Orange)
obl(cross, Square)
punct(cross, .)
det(steeple, the)
nsubj(lean, steeple)
root(ROOT, lean)
advmod(lean, backward)
punct(lean, ,)
mark(advanced, while)
det(church, the)
nsubj(advanced, church)
advcl(lean, advanced)
case(creature, like)
det(creature, a)
amod(creature, headless)
obl(advanced, creature)
case(coat, in)
det(coat, a)
amod(coat, long)
punct(coat, ,)
amod(coat, shapeless)
obl(advanced, coat)
punct(lean, .)
det(spire, the)
nsubj(seem, spire)
root(ROOT, seem)
mark(hold, to)
xcomp(seem, hold)
compound:prt(hold, up)
det(sky, the)
obj(hold, sky)
punct(seem, .)
compound(Jervis, Port)
nsubj(city, Jervis)
punct(Jervis, ,)
acl(Jervis, bask)
case(foothill, in)
det(foothill, the)
obl(bask, foothill)
punct(city, ,)
cop(city, be)
det(city, the)
root(ROOT, city)
case(God, of)
nmod(city, God)
punct(city, .)
det(Church, the)
compound(Church, dutch)
compound(Church, reform)
appos(city, Church)
punct(city, ,)
case(steeple, with)
nummod(steeple, two)
nmod(Church, steeple)
cc(school, and)
nmod:poss(school, its)
amod(school, own)
conj(steeple, school)
cop(Street, be)
case(Street, on)
compound(Street, main)
acl:relcl(steeple, Street)
punct(city, ;)
punct(city, ;)
det(Church, the)
compound(Church, episcopal)
nsubj(block, Church)
cop(block, be)
nummod(block, one)
parataxis(city, block)
case(Street, down)
compound(Street, Sussex)
nmod(block, Street)
punct(block, ;)
punct(block, ;)
det(Mary, the)
compound(Mary, Catholic)
compound(Mary, Saint)
nmod:poss(Church, Mary)
case(Mary, 's)
conj(block, Church)
punct(Church, ,)
case(steeple, with)
det(steeple, a)
advmod(taller, even)
amod(steeple, taller)
nmod(Church, steeple)
cc(cross, and)
det(cross, a)
conj(steeple, cross)
case(top, on)
nmod(cross, top)
punct(stand, ,)
acl(steeple, stand)
case(Street, on)
compound(Street, Ball)
obl(stand, Street)
punct(city, .)
det(Catholics, the)
nsubj(have, Catholics)
root(ROOT, have)
det(cemetery, the)
amod(cemetery, largest)
obj(have, cemetery)
punct(cemetery, ,)
case(River, near)
det(River, the)
compound(River, Neversink)
nmod(cemetery, River)
advmod(run, where)
compound(Street, main)
nsubj(run, Street)
acl:relcl(River, run)
advmod(run, south)
punct(have, ;)
punct(have, ;)
nsubj(whistle, Stevie)
parataxis(have, whistle)
mark(pass, when)
nsubj(pass, he)
advcl(whistle, pass)
det(grounds, these)
amod(grounds, alien)
obj(pass, grounds)
punct(have, .)
nsubj(everywhere, God)
cop(everywhere, be)
parataxis(have, everywhere)
punct(everywhere, ,)
case(belfry, in)
det(belfry, the)
obl(everywhere, belfry)
punct(everywhere, ,)
case(steeple, in)
det(steeple, the)
obl(everywhere, steeple)
punct(cloud, ,)
case(cloud, in)
det(cloud, the)
nmod(steeple, cloud)
punct(cloud, ,)
case(tree, in)
det(tree, the)
nmod(cloud, tree)
punct(mountain, ,)
cc(mountain, and)
case(mountain, in)
det(mountain, the)
conj(tree, mountain)
acl(mountain, hulk)
case(horizon, on)
det(horizon, the)
obl(hulk, horizon)
punct(have, .)
advmod(pit, somewhere)
punct(pit, ,)
advmod(pit, beyond)
punct(pit, ,)
advmod(lurk, where)
nsubj(lurk, shadow)
acl:relcl(pit, lurk)
punct(pit, ,)
aux(pit, must)
cop(pit, be)
det(pit, the)
amod(pit, yawn)
root(ROOT, pit)
case(which, of)
obl(preach, which)
nsubj(preach, Papa)
acl:relcl(pit, preach)
cc(Lake, and)
det(Lake, the)
amod(Lake, dreadful)
conj(preach, Lake)
case(Fire, of)
nmod(Lake, Fire)
punct(pit, .)
advmod(familiar, so)
punct(familiar, ,)
advcl(become, walk)
case(awe, in)
obl(walk, awe)
punct(become, ,)
nsubj(become, he)
root(ROOT, become)
xcomp(become, familiar)
case(God, with)
obl(familiar, God)
punct(God, ,)
nsubj(resided, who)
acl:relcl(God, resided)
advmod(resided, chiefly)
case(Church, in)
compound(Church, Drew)
compound(Church, Centennial)
obl(resided, Church)
case(steeple, with)
nmod:poss(steeple, it)
case(it, 's)
amod(steeple, high)
obl(resided, steeple)
cc(clock, and)
conj(steeple, clock)
punct(familiar, .)
expl(be, there)
root(ROOT, be)
det(church, no)
nsubj(be, church)
case(Church, like)
compound(Church, Drew)
nmod(church, Church)
punct(Church, ,)
det(preacher, no)
appos(Church, preacher)
case(Papa, like)
nmod(preacher, Papa)
punct(Papa, ,)
nsubj(intimate, who)
cop(intimate, be)
acl:relcl(preacher, intimate)
case(he, with)
obl(intimate, he)
punct(consign, ,)
cc(consign, and)
aux(consign, could)
conj(intimate, consign)
obj(consign, sinner)
mark(hellfire, to)
xcomp(consign, hellfire)
punct(be, . )
mark(know, to)
advcl(follow, know)
obj(know, God)
nsubj(follow, he)
aux(follow, must)
root(ROOT, follow)
case(footstep, in)
nmod:poss(footstep, Papa)
case(Papa, 's)
obl(follow, footstep)
punct(follow, .)
nsubj(fortunate, he)
cop(fortunate, be)
root(ROOT, fortunate)
punct(proud, ,)
cc(proud, and)
conj(fortunate, proud)
punct(fortunate, .)
det(veterans, the)
nsubj(get, veterans)
punct(veterans, ,)
acl(veterans, idl)
case(bench, on)
nmod:poss(bench, they)
obl(idl, bench)
case(Square, in)
det(Square, the)
nmod(bench, Square)
punct(get, ,)
case(monument, beneath)
det(soldier, the)
nmod:poss(monument, soldier)
case(soldier, 's)
obl(get, monument)
punct(get, ,)
root(ROOT, get)
case(foot, to)
nmod:poss(foot, they)
obl(get, foot)
mark(approach, when)
nsubj(approach, Papa)
advcl(get, approach)
punct(get, :)
punct(get, ``)
root(ROOT, Morning)
punct(Morning, ,)
parataxis(Morning, reverend)
punct(Morning, '')
punct(Morning, !)
punct(Morning, !)
nsubj(will, he)
cop(will, be)
cc(will, and)
nmod:poss(will, he)
root(ROOT, will)
punct(will, --)
nsubj(divide, Stevie)
aux(divide, could)
advmod(divide, not)
parataxis(will, divide)
obj(divide, God)
case(Papa, from)
nmod:poss(Papa, he)
obl(divide, Papa)
punct(divide, --)
parataxis(divide, illumine)
det(face, every)
compound(face, parish)
obj(illumine, face)
punct(turn, ,)
conj(divide, turn)
det(choir, the)
obj(turn, choir)
case(band, into)
det(band, a)
obl(turn, band)
case(angel, of)
nmod(band, angel)
punct(pulpit, ,)
cc(pulpit, and)
det(pulpit, the)
conj(band, pulpit)
case(tollgate, into)
det(tollgate, the)
nmod(pulpit, tollgate)
case(Heaven, to)
nmod(tollgate, Heaven)
punct(turn, .)
punct(turn, ``)
nsubj(have, we)
root(ROOT, have)
nummod(member, nine)
nummod(member, hundred)
cc(eleven, and)
conj(hundred, eleven)
obj(have, member)
case(charge, in)
nmod:poss(charge, we)
nmod(member, charge)
punct(have, '')
punct(announce, ,)
nsubj(announce, Mama)
parataxis(have, announce)
punct(announce, ,)
punct(announce, ``)
cc(scholar, and)
compound(hundred, three)
nummod(scholar, hundred)
cc(scholar, and)
conj(hundred, eighty)
compound(school, Sunday)
punct(school, -)
compound(scholar, school)
conj(announce, scholar)
punct(scholar, '')
punct(scholar, .)
mark(go, when)
nsubj(go, Papa)
advcl(accompany, go)
advmod(go, out)
mark(do, to)
advcl(go, do)
nmod:poss(work, God)
case(God, 's)
obj(do, work)
punct(accompany, ,)
nsubj(accompany, Stevie)
advmod(accompany, often)
conj(have, accompany)
obj(accompany, he)
case(buggy, in)
det(buggy, the)
obl(accompany, buggy)
punct(buggy, ,)
nsubj:pass(draw, which)
aux:pass(draw, be)
acl:relcl(buggy, draw)
case(Violet, by)
obl(draw, Violet)
punct(Violet, ,)
det(mare, the)
amod(mare, new)
amod(mare, black)
appos(Violet, mare)
punct(have, .)
mark(journey, although)
nsubj(journey, they)
advcl(see, journey)
advmod(journey, westerly)
advmod(far, as)
advmod(journey, far)
case(Germantown, as)
obl(far, Germantown)
punct(Germantown, ,)
case(roundhouse, beyond)
det(roundhouse, the)
compound(roundhouse, Erie)
obl(journey, roundhouse)
cc(shop, and)
det(shop, the)
compound(shop, machine)
conj(roundhouse, shop)
punct(Delaware, ,)
cc(Delaware, and)
case(Delaware, along)
det(Delaware, the)
conj(shop, Delaware)
cc(Canal, and)
compound(Canal, Hudson)
conj(Delaware, Canal)
punct(northward, ,)
cc(northward, and)
advmod(Canal, northward)
case(Brooklyn, to)
obl(northward, Brooklyn)
punct(northward, ,)
case(Peter, below)
compound(Peter, Point)
obl(northward, Peter)
punct(see, ,)
nsubj(see, he)
aux(see, could)
root(ROOT, see)
det(spire, the)
compound(spire, church)
obj(see, spire)
mark(look, wherever)
nsubj(look, he)
advcl(see, look)
advmod(look, back)
punct(see, .)
advmod(go, sometimes)
nsubj(go, they)
root(ROOT, go)
advmod(go, south)
cc(roll, and)
conj(go, roll)
case(tollhouse, past)
det(tollhouse, the)
obl(roll, tollhouse)
punct(go, --)
punct(go, ``)
root(ROOT, afternoon)
punct(reverend, ,)
appos(afternoon, reverend)
punct(reverend, '')
punct(afternoon, !)
punct(afternoon, !)
punct(afternoon, --)
cc(cross, and)
conj(afternoon, cross)
det(bridge, the)
compound(bridge, suspension)
obj(cross, bridge)
case(Matamoras, to)
obl(cross, Matamoras)
punct(cross, ;)
punct(cross, ;)
nsubj(Pennsylvania, that)
cop(Pennsylvania, be)
parataxis(cross, Pennsylvania)
punct(afternoon, .)
case(River, in)
det(River, the)
compound(River, Delaware)
obl(overgrown, River)
punct(overgrown, ,)
nummod(island, three)
amod(island, long)
nsubj(overgrown, island)
cop(overgrown, be)
root(ROOT, overgrown)
case(tree, with)
amod(tree, greening)
obl(overgrown, tree)
cc(underbrush, and)
conj(tree, underbrush)
punct(tree, .)
appos(tree, South)
case(Cemetery, of)
compound(Cemetery, Laurel)
compound(Cemetery, Grove)
nmod(South, Cemetery)
punct(junction, ,)
cc(junction, and)
case(junction, below)
det(junction, the)
conj(tree, junction)
case(Neversink, of)
det(Neversink, the)
nmod(junction, Neversink)
cc(Delaware, and)
det(Delaware, the)
conj(Neversink, Delaware)
punct(rock, ,)
cop(rock, be)
det(rock, the)
compound(rock, tri-state)
acl:relcl(junction, rock)
punct(rock, ,)
case(which, from)
obl(spy, which)
nsubj(spy, Stevie)
aux(spy, could)
acl:relcl(rock, spy)
compound(Jersey, New)
obj(spy, Jersey)
cc(Pennsylvania, and)
conj(Jersey, Pennsylvania)
punct(York, ,)
cc(York, as)
fixed(as, well)
fixed(as, as)
compound(York, New)
conj(Jersey, York)
punct(York, ,)
advmod(spin, simply)
mark(spin, by)
advcl(spy, spin)
advmod(spin, around)
case(heel, on)
nmod:poss(heel, he)
obl(spin, heel)
punct(overgrown, .)
case(excursion, on)
det(excursion, these)
obl(instruct, excursion)
punct(instruct, ,)
nsubj(instruct, Papa)
root(ROOT, instruct)
obj(instruct, he)
case(end, on)
nmod:poss(end, man)
case(man, 's)
amod(end, chief)
obl(instruct, end)
punct(end, ,)
nsubj(duty, which)
cop(duty, be)
nmod:poss(duty, he)
acl:relcl(end, duty)
case(God, to)
nmod(duty, God)
cc(salvation, and)
nmod:poss(salvation, he)
amod(salvation, own)
conj(God, salvation)
punct(instruct, .)
advmod(rove, however)
punct(rove, ,)
det(boy, a)
nmod:poss(eye, boy)
case(boy, 's)
amod(eye, lively)
nsubj(rove, eye)
aux(rove, might)
root(ROOT, rove)
punct(rove, .)
mark(purl, where)
nsubj(purl, Cuddleback)
flat(Cuddleback, Brook)
advcl(rove, purl)
case(Neversink, into)
det(Neversink, the)
obl(purl, Neversink)
cop(hole, be)
det(hole, a)
amod(hole, magnificent)
compound(hole, swim)
advcl(rove, hole)
punct(rove, .)
nsubj(point, Papa)
root(ROOT, point)
det(finger, a)
amod(finger, scornful)
obj(point, finger)
case(youth, at)
det(youth, the)
compound(youth, splash)
obl(point, youth)
punct(point, :)
punct(point, ``)
amod(recreation, idle)
root(ROOT, recreation)
punct(recreation, '')
punct(recreation, !)
punct(recreation, !)
nsubj(see, Stevie)
root(ROOT, see)
det(idol, no)
obj(see, idol)
punct(see, ;)
punct(see, ;)
nsubj(troubled, it)
parataxis(see, troubled)
obj(troubled, he)
mark(see, that)
nsubj(see, he)
aux(see, could)
advmod(see, not)
advmod(see, always)
ccomp(troubled, see)
obj(see, what)
nsubj(see, Papa)
ccomp(see, see)
punct(see, .)
nsubj:pass(tear, he)
aux:pass(tear, be)
root(ROOT, tear)
case(excitement, between)
det(excitement, the)
obl(tear, excitement)
case(water, in)
det(water, the)
amod(water, sun-inflamed)
nmod(excitement, water)
cc(engine, and)
det(engine, a)
amod(engine, little)
conj(excitement, engine)
acl(engine, chugg)
advmod(chugg, northward)
case(branch, on)
det(branch, the)
compound(branch, Monticello)
obl(chugg, branch)
punct(tear, .)
punct(tear, ``)
advmod(today, where)
nsubj(today, you)
cop(today, be)
advcl(inquire, today)
punct(today, '')
punct(inquire, ?)
punct(inquire, ?)
nsubj(inquire, ludie)
root(ROOT, inquire)
det(evening, every)
obl:tmod(inquire, evening)
punct(inquire, ,)
advcl(inquire, pretend)
mark(care, that)
nsubj(care, he)
aux(care, do)
advmod(care, not)
ccomp(pretend, care)
punct(inquire, .)
punct(inquire, ``)
nsubj(make, he)
aux(make, will)
root(ROOT, make)
det(preacher, a)
obj(make, preacher)
case(you, out)
case(you, of)
obl(make, you)
punct(make, '')
punct(make, !)
punct(make, !)
punct(make, ``)
discourse(will, no)
punct(will, ,)
nsubj(will, he)
root(ROOT, will)
advmod(will, not)
punct(will, '')
punct(will, !)
punct(will, !)
nsubj(flare, Stevie)
root(ROOT, flare)
punct(flare, .)
punct(flare, ``)
advmod(I, not)
root(ROOT, I)
punct(I, '')
punct(I, !)
punct(I, !)
punct(I, ``)
nsubj:pass(get, somebody)
aux:pass(get, be)
root(ROOT, get)
mark(preacher, to)
cop(preacher, be)
det(preacher, a)
xcomp(get, preacher)
case(family, in)
det(family, the)
nmod(preacher, family)
punct(get, .)
nsubj(make, he)
root(ROOT, make)
det(will, a)
obj(make, will)
cc(testament, and)
amod(testament, last)
conj(will, testament)
mark(leave, before)
nsubj(leave, we)
advcl(make, leave)
obj(leave, Paterson)
punct(make, . )
nsubj(hear, I)
root(ROOT, hear)
obj(hear, they)
punct(hear, !)
punct(hear, !)
nsubj(witness, uncle)
cc(aunt, and)
conj(uncle, aunt)
flat(aunt, howe)
cop(witness, be)
det(witness, the)
root(ROOT, witness)
punct(witness, '')
punct(witness, .)
punct(witness, ``)
aux(die, will)
nsubj(die, he)
root(ROOT, die)
punct(die, '')
punct(die, ?)
punct(die, ?)
punct(die, ``)
nsubj(do, everybody)
root(ROOT, do)
punct(hateful, '')
punct(hateful, .)
nsubj(hateful, ludie)
aux(hateful, could)
cop(hateful, be)
ccomp(do, hateful)
punct(do, . )
mark(speak, to)
advcl(sin, speak)
case(Papa, of)
obl(speak, Papa)
flat(Papa, die)
cop(sin, be)
det(sin, a)
root(ROOT, sin)
punct(sin, .)
nsubj(happen, it)
aux(happen, could)
advmod(happen, never)
root(ROOT, happen)
advmod(long, as)
advmod(happen, long)
mark(alert, as)
nsubj(alert, God)
cop(alert, be)
advcl(as, alert)
cc(stand, and)
det(steeple, the)
compound(steeple, Drew)
nsubj(stand, steeple)
conj(happen, stand)
obj(stand, guard)
mark(lance, with)
nsubj(peak, it)
aux(peak, be)
amod(lance, peak)
conj(happen, lance)
punct(happen, .)
nsubj(slipping, Stevie)
aux(slipping, be)
advmod(slipping, constantly)
root(ROOT, slipping)
case(church, into)
det(church, the)
obl(slipping, church)
punct(slipping, .)
nsubj(pull, he)
root(ROOT, pull)
case(strength, with)
det:predet(strength, all)
nmod:poss(strength, he)
obl(pull, strength)
case(door, at)
det(door, the)
amod(door, heavy)
punct(door, ,)
obl:npmod(bound, brass)
punct(bound, -)
amod(door, bound)
obl(pull, door)
punct(shuffle, ,)
cc(shuffle, and)
conj(pull, shuffle)
case(wall, along)
det(wall, the)
amod(wall, wainscote)
obl(shuffle, wall)
punct(pull, .)
det(presence, the)
amod(presence, cold)
punct(presence, ,)
amod(presence, mysterious)
nsubj(he, presence)
case(God, of)
nmod(presence, God)
cop(he, be)
advmod(he, all)
case(he, around)
root(ROOT, he)
punct(he, .)
case(end, at)
det(end, the)
obl(appear, end)
case(shaft, of)
det(shaft, a)
nmod(end, shaft)
case(light, of)
nmod(shaft, light)
punct(appear, ,)
det(pews, the)
nsubj(appear, pews)
root(ROOT, appear)
mark(stair, to)
cop(stair, be)
amod(stair, broad)
xcomp(appear, stair)
case(dungeon, in)
det(dungeon, a)
amod(dungeon, long)
nmod(stair, dungeon)
punct(appear, .)
advmod(away, far)
advmod(father, away)
punct(father, ,)
advcl(father, stand)
case(window, before)
det(window, a)
amod(window, curtain)
obl(stand, window)
case(room, in)
det(room, the)
compound(room, study)
nmod(window, room)
punct(father, ,)
cop(father, be)
nmod:poss(father, he)
root(ROOT, father)
punct(father, ,)
nsubj(tuck, hand)
conj(father, tuck)
case(coattail, under)
nmod:poss(coattail, he)
obl(tuck, coattail)
punct(stare, ,)
cc(stare, and)
conj(tuck, stare)
case(church, into)
det(church, the)
amod(church, dark)
obl(stare, church)
punct(father, .)
det(figure, the)
nsubj:pass(wreathe, figure)
aux:pass(wreathe, be)
root(ROOT, wreathe)
case(luminescence, in)
det(luminescence, a)
amod(luminescence, extraordinary)
obl(wreathe, luminescence)
punct(wreathe, .)
det(boy, the)
nsubj(shuddered, boy)
root(ROOT, shuddered)
case(countenance, at)
det(countenance, the)
amod(countenance, deathly)
amod(countenance, pale)
obl(shuddered, countenance)
case(wrinkle, with)
nmod:poss(wrinkle, its)
nmod(countenance, wrinkle)
cc(hair, and)
amod(hair, gray)
conj(wrinkle, hair)
punct(shuddered, .)
aux(die, would)
nsubj(die, Papa)
advmod(die, really)
parataxis(shuddered, die)
punct(shuddered, ?)
punct(shuddered, ?)
det(mouth, the)
nsubj(lip, mouth)
cop(lip, be)
advmod(lip, thin-)
root(ROOT, lip)
cc(wide, and)
conj(lip, wide)
punct(lip, ,)
det(cleft, the)
amod(cleft, long)
parataxis(lip, cleft)
case(lip, in)
det(lip, the)
amod(lip, upper)
nmod(cleft, lip)
case(slide, like)
det(slide, a)
nmod(lip, slide)
punct(lip, .)
mark(remove, when)
nmod:poss(finger, Papa)
case(Papa, 's)
amod(finger, slender)
nsubj(remove, finger)
advcl(be, remove)
det(spectacle, the)
obj(remove, spectacle)
punct(lip, ,)
expl(be, there)
parataxis(lip, be)
amod(indentation, red)
nsubj(be, indentation)
case(bridge, on)
det(bridge, the)
nmod(indentation, bridge)
case(nose, of)
det(nose, the)
amod(nose, strong)
nmod(bridge, nose)
punct(lip, .)
punct(lip, ``)
nsubj(time, it)
cop(time, be)
root(ROOT, time)
nsubj(begin, you)
acl:relcl(time, begin)
mark(think, to)
xcomp(begin, think)
case(God, on)
obl(think, God)
punct(God, ,)
appos(God, Stephen)
punct(time, .)
advmod(day, perhaps)
nummod(day, one)
root(ROOT, day)
nsubj(choose, he)
aux(choose, will)
root(ROOT, choose)
obj(choose, you)
mark(choose, as)
nsubj(choose, he)
advcl(choose, choose)
obj(choose, I)
punct(choose, ,)
advmod(ago, long)
advmod(choose, ago)
punct(choose, .)
advmod(give, therefore)
punct(give, ,)
conj(choose, give)
iobj(give, he)
nmod:poss(affection, you)
obj(give, affection)
cc(store, and)
conj(give, store)
compound:prt(store, up)
nmod:poss(love, he)
obj(store, love)
case(you, for)
obl(store, you)
punct(choose, .)
root(ROOT, open)
nmod:poss(heart, you)
obj(open, heart)
case(he, to)
obl(open, he)
cc(pray, and)
conj(open, pray)
punct(pray, ,)
vocative(pray, Stephen)
punct(pray, ,)
parataxis(open, pray)
punct(open, !)
punct(open, !)
case(mercy, for)
nmod:poss(mercy, he)
obl(hear, mercy)
cc(guidance, and)
nmod:poss(guidance, he)
conj(mercy, guidance)
mark(spare, to)
acl(mercy, spare)
obj(spare, you)
case(evil, from)
obl(spare, evil)
cc(punishment, and)
amod(punishment, eternal)
conj(evil, punishment)
case(Lake, in)
det(Lake, the)
nmod(punishment, Lake)
case(Fire, of)
nmod(Lake, Fire)
punct(Lake, '')
punct(hear, .)
nsubj(hear, Stevie)
aux(hear, have)
root(ROOT, hear)
det(word, these)
obj(hear, word)
amod(time, many)
obl:tmod(hear, time)
punct(hear, ,)
advmod(cause, yet)
case(occasion, on)
det(occasion, each)
obl(cause, occasion)
nsubj(cause, they)
advcl(hear, cause)
obj(cause, he)
mark(tremble, to)
xcomp(cause, tremble)
punct(hear, .)
mark(fear, for)
nsubj(fear, he)
root(ROOT, fear)
det(Lake, the)
obj(fear, Lake)
case(Fire, of)
nmod(Lake, Fire)
punct(fear, .)
nsubj(strove, he)
root(ROOT, strove)
mark(think, to)
xcomp(strove, think)
case(God, of)
obl(think, God)
cc(wrath, and)
nmod:poss(wrath, he)
amod(wrath, eternal)
conj(God, wrath)
punct(strove, ;)
punct(strove, ;)
nsubj(pray, he)
aux(pray, must)
parataxis(strove, pray)
mark(spared, to)
aux:pass(spared, be)
xcomp(pray, spared)
punct(strove, .)
nsubj(disappointed, Papa)
cop(disappointed, be)
root(ROOT, disappointed)
mark(hear, that)
nsubj(hear, none)
case(brother, of)
det(brother, the)
nmod(none, brother)
aux(hear, have)
ccomp(disappointed, hear)
det(call, the)
obj(hear, call)
punct(hear, .)
advmod(George, not)
conj(hear, George)
punct(Townley, ,)
conj(George, Townley)
punct(Ted, ,)
cc(Ted, or)
conj(George, Ted)
punct(ludie, ,)
advmod(ludie, certainly)
advmod(ludie, not)
conj(George, ludie)
punct(disappointed, .)
nsubj(Hackettstown, Burt)
cop(Hackettstown, be)
case(Hackettstown, at)
root(ROOT, Hackettstown)
cc(School, and)
aux(School, will)
case(School, at)
compound(School, albany)
compound(School, Law)
conj(Hackettstown, School)
punct(School, ,)
advmod(hear, where)
nsubj(hear, they)
advmod(hear, surely)
aux(hear, could)
advmod(hear, not)
acl:relcl(School, hear)
obj(hear, it)
punct(Hackettstown, .)
nsubj(choose, Someday)
nsubj(choose, God)
aux(choose, would)
root(ROOT, choose)
obj(choose, he)
punct(choose, .)
nsubj(hear, he)
aux(hear, would)
root(ROOT, hear)
det(call, the)
obj(hear, call)
cc(run, and)
aux(run, would)
conj(hear, run)
mark(tell, to)
advcl(run, tell)
obj(tell, Papa)
punct(hear, .)
det(face, the)
compound(face, stern)
nsubj(relax, face)
aux(relax, would)
root(ROOT, relax)
punct(relax, ,)
det(arm, the)
amod(clad, black)
punct(clad, -)
amod(arm, clad)
nsubj(embrace, arm)
aux(embrace, would)
parataxis(relax, embrace)
obj(embrace, he)
punct(relax, ,)
punct(relax, ``)
nmod:poss(son, my)
root(ROOT, son)
punct(son, '')
punct(son, !)
punct(son, !)
cc(know, yet)
advmod(know, how)
aux(know, might)
nsubj(know, he)
root(ROOT, know)
det(call, the)
obj(know, call)
mark(come, when)
nsubj(come, it)
advcl(know, come)
punct(know, ?)
punct(know, ?)
advmod(whisper, probably)
punct(whisper, ,)
case(scripture, as)
case(scripture, in)
obl(whisper, scripture)
punct(whisper, ,)
det(voice, a)
advmod(whisper, still)
punct(whisper, ,)
amod(voice, small)
nsubj(whisper, voice)
aux(whisper, would)
root(ROOT, whisper)
punct(whisper, .)
nsubj(summon, it)
aux(summon, would)
root(ROOT, summon)
obj(summon, he)
advmod(summon, once)
punct(summon, ;)
punct(summon, ;)
mark(miss, if)
nsubj(miss, he)
advcl(again, miss)
obj(miss, it)
punct(again, ,)
advmod(again, never)
advmod(summon, again)
punct(summon, .)
nsubj(come, what)
mark(come, if)
nsubj(come, it)
root(ROOT, come)
mark(play, when)
nsubj(play, he)
aux(play, be)
advcl(come, play)
punct(asleep, ,)
cc(asleep, or)
cop(asleep, be)
conj(play, asleep)
cc(dream, and)
conj(asleep, dream)
punct(come, ?)
punct(come, ?)
nsubj(fail, he)
aux(fail, must)
advmod(fail, not)
root(ROOT, fail)
mark(hear, to)
xcomp(fail, hear)
obj(hear, it)
punct(fail, .)
nsubj(choose, he)
cop(choose, be)
nmod:poss(choose, Papa)
case(Papa, 's)
root(ROOT, choose)
punct(choose, ;)
punct(choose, ;)
advmod(happen, therefore)
punct(happen, ,)
nsubj(happen, nothing)
cc(good, but)
conj(nothing, good)
aux(happen, could)
conj(choose, happen)
case(he, to)
obl(happen, he)
punct(happen, ,)
advmod(storm, even)
case(storm, in)
nmod:poss(storm, God)
case(God, 's)
compound(storm, wrathful)
obl(happen, storm)
punct(choose, .)
mark(grow, when)
det(sky, the)
nsubj(grow, sky)
advcl(unafraid, grow)
xcomp(grow, dark)
cc(thunder, and)
conj(dark, thunder)
xcomp(grow, roll)
case(valley, across)
det(valley, the)
obl(roll, valley)
punct(unafraid, ,)
nsubj(unafraid, he)
cop(unafraid, be)
root(ROOT, unafraid)
punct(unafraid, .)
nsubj(fly, Aggie)
aux(fly, might)
ccomp(unafraid, fly)
case(closet, into)
det(closet, a)
obl(fly, closet)
punct(shut, ,)
conj(fly, shut)
det(door, the)
obj(shut, door)
cc(bury, and)
conj(shut, bury)
nmod:poss(head, she)
obj(bury, head)
case(clothes, in)
det(clothes, the)
obl(bury, clothes)
punct(fly, ;)
punct(dare, ;)
nsubj(dare, he)
parataxis(unafraid, dare)
mark(wait, to)
xcomp(dare, wait)
case(lightning, for)
det(lightning, the)
obl(wait, lightning)
punct(unafraid, .)
nsubj(strike, Lightning)
aux(strike, could)
root(ROOT, strike)
obj(strike, you)
xcomp(strike, blind)
mark(sinner, if)
nsubj(sinner, you)
cop(sinner, be)
det(sinner, a)
advcl(strike, sinner)
punct(strike, !)
punct(strike, !)
cc(good, but)
nsubj(good, he)
cop(good, be)
root(ROOT, good)
punct(good, .)
nsubj(clench, he)
root(ROOT, clench)
nmod:poss(fist, he)
obj(clench, fist)
cc(face, and)
conj(clench, face)
det(terror, the)
obj(face, terror)
punct(clench, .)
nsubj(crash, Thunder)
parataxis(clench, crash)
punct(clench, ;)
punct(clench, ;)
nsubj(tumble, barrel)
parataxis(clench, tumble)
compound:prt(tumble, down)
det(mountainside, the)
obj(tumble, mountainside)
punct(bounced, ,)
cc(bounced, and)
conj(tumble, bounced)
cc(bounced, and)
conj(bounced, bounced)
mark(split, till)
nmod:poss(fury, they)
amod(fury, own)
nsubj(split, fury)
advcl(bounced, split)
obj(split, they)
xcomp(split, open)
punct(clench, .)
nsubj(strike, Lightning)
aux(strike, might)
root(ROOT, strike)
det(steeple, the)
obj(strike, steeple)
case(church, of)
det(church, the)
amod(church, other)
nmod(steeple, church)
punct(strike, ;)
punct(strike, ;)
cc(Church, not)
case(Church, of)
compound(Church, Drew)
nmod(steeple, Church)
punct(strike, . )
det(flash, a)
nsubj(illumine, flash)
root(ROOT, illumine)
det(tree, the)
obj(illumine, tree)
case(bolt, as)
det(bolt, a)
amod(bolt, crook)
obl(illumine, bolt)
acl(bolt, twigg)
case(direction, in)
amod(direction, several)
obl(twigg, direction)
punct(illumine, .)
nsubj(whinnied, Violet)
root(ROOT, whinnied)
case(stable, from)
det(stable, the)
obl(whinnied, stable)
punct(whinnied, .)
nsubj(run, he)
root(ROOT, run)
advmod(run, out)
case(downpour, into)
det(downpour, the)
obl(run, downpour)
punct(sped, ,)
conj(run, sped)
case(yard, across)
det(yard, the)
obl(sped, yard)
cc(room, and)
case(room, into)
det(room, the)
compound(room, buggy)
conj(yard, room)
punct(run, .)
punct(run, ``)
aux(afraid, do)
advmod(afraid, not)
cop(afraid, be)
root(ROOT, afraid)
punct(afraid, ,)
vocative(afraid, Violet)
punct(afraid, '')
punct(afraid, !)
punct(afraid, !)
nsubj(shout, he)
root(ROOT, shout)
punct(aghast, ,)
cc(aghast, and)
cop(aghast, be)
conj(shout, aghast)
case(echoe, at)
det(echoe, the)
obl(aghast, echoe)
punct(shout, .)
punct(shout, ``)
aux(afraid, do)
advmod(afraid, not)
nsubj(afraid, you)
cop(afraid, be)
root(ROOT, afraid)
punct(afraid, '')
punct(afraid, !)
punct(afraid, !)
nsubj(save, he)
aux(save, would)
root(ROOT, save)
obj(save, she)
punct(save, .)
mark(be, if)
expl(be, there)
advcl(stand, be)
det(fire, a)
nsubj(be, fire)
cc(flood, or)
det(flood, a)
conj(fire, flood)
nsubj(save, he)
aux(save, would)
root(ROOT, save)
obj(save, mama)
advmod(save, first)
cc(Violet, and)
conj(first, Violet)
advmod(drench, next)
punct(drench, .)
conj(save, drench)
cc(shake, and)
conj(drench, shake)
punct(stand, ,)
nsubj(stand, he)
conj(save, stand)
case(stall, near)
det(stall, the)
amod(smell, sweet)
punct(smell, -)
compound(stall, smell)
obl(stand, stall)
cc(dare, and)
conj(stand, dare)
mark(pat, to)
xcomp(dare, pat)
nmod:poss(muzzle, she)
obj(pat, muzzle)
punct(stand, .)
punct(stand, ``)
aux(afraid, do)
advmod(afraid, not)
nsubj(afraid, you)
cop(afraid, be)
root(ROOT, afraid)
punct(afraid, ,)
vocative(afraid, Violet)
punct(afraid, '')
punct(afraid, !)
punct(afraid, !)
case(storm, after)
det(storm, the)
obl(clear, storm)
punct(clear, ,)
det(sky, the)
nsubj(clear, sky)
root(ROOT, clear)
obj(clear, blue)
cc(cool, and)
conj(blue, cool)
punct(sweep, ,)
cc(sweep, and)
amod(air, fragrant)
nsubj(sweep, air)
conj(clear, sweep)
det(hill, the)
obj(sweep, hill)
punct(sweep, .)
mark(come, when)
det(sun, the)
nsubj(come, sun)
advcl(strode, come)
advmod(come, out)
punct(strode, ,)
nsubj(strode, Stevie)
conj(clear, strode)
advmod(strode, proudly)
case(Square, into)
compound(Square, Orange)
obl(strode, Square)
punct(strode, ,)
advcl(strode, smile)
case(landlord, like)
det(landlord, a)
obl(smile, landlord)
case(tenant, on)
amod(tenant, industrious)
nmod(landlord, tenant)
punct(clear, .)
det(fountain, the)
nsubj(brim, fountain)
aux(brim, have)
root(ROOT, brim)
advmod(brim, over)
punct(wet, ,)
det(cannon, the)
nsubj(wet, cannon)
cop(wet, be)
parataxis(brim, wet)
punct(glisten, ,)
det(soldier, the)
nmod:poss(monument, soldier)
case(soldier, 's)
nsubj(glisten, monument)
parataxis(wet, glisten)
punct(brim, .)
advmod(dry, even)
mark(dry, before)
det(bench, the)
nsubj(dry, bench)
aux(dry, have)
advcl(straggling, dry)
punct(straggling, ,)
det(veterans, the)
compound(War, Civil)
compound(veterans, War)
nsubj(straggling, veterans)
aux(straggling, be)
root(ROOT, straggling)
advmod(straggling, back)
case(place, to)
nmod:poss(place, they)
obl(straggling, place)
punct(straggling, .)
det(spire, the)
amod(spire, great)
nsubj(shone, spire)
root(ROOT, shone)
mark(polish, as)
mark(polish, if)
det(lightning, the)
nsubj(polish, lightning)
aux(polish, have)
advcl(shone, polish)
obj(polish, it)
punct(shone, .)
nsubj(jump, he)
root(ROOT, jump)
punct(jump, .)
det(shadow, the)
amod(shadow, point)
nsubj(touch, shadow)
aux(touch, have)
advmod(touch, nearly)
root(ROOT, touch)
obj(touch, he)
punct(touch, .)
nsubj(trail, he)
root(ROOT, trail)
obj(trail, ludie)
case(game, to)
det(game, the)
compound(game, baseball)
obl(trail, game)
case(lot, in)
det(lot, the)
obl(trail, lot)
case(Street, on)
compound(Street, Kingston)
nmod(lot, Street)
case(reform, near)
det(reform, the)
compound(reform, dutch)
obl(trail, reform)
punct(trail, .)
punct(trail, ``)
root(ROOT, go)
case(home, on)
obl(go, home)
punct(go, '')
punct(go, !)
punct(go, !)
nsubj(screech, ludie)
parataxis(go, screech)
case(he, at)
obl(screech, he)
punct(go, .)
punct(go, ``)
nsubj(tell, someone)
aux(tell, will)
root(ROOT, tell)
obj(tell, Papa)
punct(tell, '')
punct(tell, !)
punct(tell, !)
det(one, no)
nsubj(tell, one)
root(ROOT, tell)
case(ludie, on)
obl(tell, ludie)
punct(tell, ,)
advmod(even, not)
advmod(slip, even)
mark(slip, when)
nsubj(slip, he)
advcl(tell, slip)
amod(grasshopper, live)
obj(slip, grasshopper)
case(box, into)
det(box, the)
compound(box, mite)
punct(box, -)
obl(slip, box)
punct(do, .)
nsubj(do, ludie)
parataxis(tell, do)
mark(pleased, as)
nsubj(pleased, he)
advcl(take, pleased)
punct(take, .)
nsubj(take, ludie)
parataxis(tell, take)
nmod:poss(slingshot, he)
obj(take, slingshot)
cc(climb, and)
conj(take, climb)
case(rooftop, to)
det(rooftop, the)
obl(climb, rooftop)
mark(shoot, to)
acl(rooftop, shoot)
case(crow, at)
obl(shoot, crow)
punct(chew, .)
nsubj(chew, ludie)
parataxis(have, chew)
obj(chew, roofer)
case(roofer, 's)
nummod(have, tar)
punct(have, .)
nsubj(have, ludie)
parataxis(tell, have)
det(box, a)
compound(box, cigar)
obj(have, box)
amod(box, full)
case(marble, of)
obl(full, marble)
cc(shooter, and)
conj(marble, shooter)
punct(candle, ,)
cc(candle, and)
det(candle, a)
amod(candle, Roman)
conj(box, candle)
case(Fourth, from)
amod(Fourth, last)
nmod(candle, Fourth)
case(July, of)
nmod(Fourth, July)
punct(hop, .)
nsubj(hop, ludie)
acl:relcl(candle, hop)
obj(hop, ride)
case(car, on)
compound(car, freight)
obl(hop, car)
punct(chase, ,)
cc(chase, and)
aux:pass(chase, be)
conj(hop, chase)
case(Mr., by)
obl(chase, Mr.)
flat(Mr., Yankton)
punct(Mr., ,)
det(guard, the)
compound(guard, railroad)
appos(Mr., guard)
punct(tell, .)
nsubj(come, he)
root(ROOT, come)
advmod(come, home)
xcomp(come, overheated)
punct(run, ,)
conj(come, run)
advmod(run, straight)
case(chest, to)
det(chest, the)
compound(chest, ice)
punct(chest, -)
obl(run, chest)
punct(gulp, ,)
cc(gulp, and)
conj(come, gulp)
advmod(cold, shivery)
amod(water, cold)
obj(gulp, water)
punct(come, .)
nsubj(envy, Stevie)
root(ROOT, envy)
obj(envy, he)
punct(envy, .)
det(ludie, that)
root(ROOT, ludie)
punct(ludie, !)
punct(ludie, !)
nsubj(cocked, he)
punct(cocked, ,)
advmod(cocked, too)
punct(cocked, ,)
root(ROOT, cocked)
nmod:poss(cap, he)
obj(cocked, cap)
case(angle, at)
det(angle, a)
amod(angle, jaunty)
obl(cocked, angle)
punct(jingle, ,)
conj(cocked, jingle)
obj(jingle, marble)
case(pocket, in)
nmod:poss(pocket, he)
obl(jingle, pocket)
punct(swagger, ,)
cc(swagger, and)
conj(cocked, swagger)
compound:prt(swagger, down)
compound(Street, main)
obj(swagger, Street)
punct(cocked, .)
case(lawn, on)
det(Christophers, the)
nmod:poss(lawn, Christophers)
case(Christophers, 's)
obl(play, lawn)
punct(play, ,)
amod(girl, little)
nsubj(play, girl)
case(pinafore, in)
amod(pinafore, white)
nmod(girl, pinafore)
aux(play, be)
root(ROOT, play)
obj(play, grownup)
case(party, at)
det(party, a)
compound(party, tea)
obl(play, party)
punct(play, . )
det(Newfoundland, a)
nsubj(sit, Newfoundland)
root(ROOT, sit)
advmod(sit, solemnly)
case(doghouse, beside)
det(doghouse, a)
obl(sit, doghouse)
det:predet(size, half)
nmod:poss(size, he)
obl(sit, size)
punct(sit, .)
nsubj(year, Stevie)
root(ROOT, year)
case(dog, for)
det(dog, a)
obl(year, dog)
punct(year, .)
nsubj(wonder, he)
root(ROOT, wonder)
mark(have, whether)
nsubj(have, God)
ccomp(wonder, have)
det(dog, a)
obj(have, dog)
case(sky, in)
det(sky, the)
obl(have, sky)
punct(wonder, .)
nsubj(meander, he)
root(ROOT, meander)
compound:prt(meander, down)
compound(Street, Pike)
obj(meander, Street)
punct(meander, ,)
case(Bank, past)
det(Bank, the)
compound(Bank, First)
compound(Bank, National)
obl(meander, Bank)
case(shade, with)
nmod:poss(shade, its)
amod(shade, green)
compound(shade, window)
obl(meander, shade)
punct(meander, .)
nsubj(cross, he)
root(ROOT, cross)
det(track, the)
obj(cross, track)
case(House, to)
compound(House, Delaware)
obl(cross, House)
punct(House, ,)
advmod(crowded, where)
nsubj(crowded, lady)
case(dress, in)
amod(dress, gay)
nmod(lady, dress)
cc(man, and)
conj(dress, man)
case(boater, in)
amod(boater, straw)
nmod(man, boater)
cc(mustach, and)
amod(mustach, wax)
conj(boater, mustach)
acl:relcl(House, crowded)
det(verandah, the)
obj(crowded, verandah)
punct(cross, . )
det(lady, a)
amod(lady, tall)
nsubj(turn, lady)
punct(lady, ,)
case(collar, with)
det(collar, a)
amod(collar, ruffle)
nmod(lady, collar)
advmod(low, very)
advmod(collar, low)
case(bosom, on)
nmod:poss(bosom, she)
obl(low, bosom)
punct(turn, ,)
root(ROOT, turn)
amod(eye, insolent)
amod(eye, green)
obj(turn, eye)
case(he, upon)
obl(turn, he)
punct(turn, .)
nsubj(taller, she)
cop(taller, be)
root(ROOT, taller)
case(Aggie, than)
obl(taller, Aggie)
punct(taller, .)
nsubj(beautiful, she)
cop(beautiful, be)
advmod(beautiful, so)
root(ROOT, beautiful)
case(mouth, with)
nmod:poss(mouth, she)
amod(mouth, rosy)
obl(beautiful, mouth)
cc(air, and)
amod(air, haughty)
conj(mouth, air)
obj(have, that)
nsubj(have, she)
acl:relcl(air, have)
mark(wick, to)
aux:pass(wick, be)
xcomp(have, wick)
punct(beautiful, . )
nsubj(screech, fiddles)
root(ROOT, screech)
punct(screech, ;)
punct(screech, ;)
det(tinkle, a)
compound(tinkle, piano)
parataxis(screech, tinkle)
punct(screech, .)
punct(screech, ``)
nsubj(crowded, P.)
flat(P., J.)
punct(P., '')
punct(P., --)
mark(call, as)
nsubj(call, ludie)
advcl(crowded, call)
det(town, the)
obj(call, town)
punct(crowded, --)
cop(crowded, be)
root(ROOT, crowded)
case(people, with)
compound(people, summer)
obl(crowded, people)
nsubj(come, who)
acl:relcl(people, come)
case(mountain, to)
det(mountain, the)
obl(come, mountain)
mark(escape, to)
advcl(come, escape)
det(heat, the)
obj(escape, heat)
case(city, in)
det(city, the)
amod(city, big)
obl(escape, city)
punct(crowded, .)
nsubj(stay, they)
root(ROOT, stay)
case(hotel, at)
obl(stay, hotel)
cc(boardinghouse, and)
conj(hotel, boardinghouse)
punct(home, ,)
cc(home, or)
case(home, at)
amod(home, private)
conj(hotel, home)
punct(stay, .)
amod(people, Rich)
nsubj(go, people)
root(ROOT, go)
case(House, to)
compound(House, Delaware)
obl(go, House)
punct(House, ,)
compound(House, Opera)
conj(House, House)
punct(House, ,)
compound(House, American)
conj(House, House)
cc(House, or)
compound(House, fowler)
conj(House, House)
punct(go, .)
mark(write, if)
det(bastard, the)
amod(bastard, crummy)
nsubj(write, bastard)
aux(write, could)
root(ROOT, write)
punct(write, !)
punct(write, !)
nsubj(be, that)
root(ROOT, be)
ccomp(be, how)
nsubj(how, it)
aux(how, should)
cop(how, be)
punct(be, .)
nsubj(nigger, it)
cop(nigger, be)
det(nigger, those)
nummod(fucken, two)
compound(nigger, fucken)
root(ROOT, nigger)
punct(nigger, !)
punct(nigger, !)
vocative(wish, Krist)
punct(wish, ,)
nsubj(wish, I)
root(ROOT, wish)
nsubj(write, they)
aux(write, could)
ccomp(wish, write)
punct(wish, !)
punct(wish, !)
compound(pussy, Nigger)
root(ROOT, pussy)
punct(pussy, .)
nsubj(think, he)
root(ROOT, think)
case(pussy, of)
amod(pussy, sweet)
amod(pussy, wet)
compound(pussy, nigger)
obl(think, pussy)
punct(think, .)
discourse(land, oh)
punct(land, ,)
amod(land, sweet)
root(ROOT, land)
case(heaven, of)
nmod(land, heaven)
punct(land, ,)
discourse(nothin, haint)
expl(nothin, there)
advmod(nothin, just)
parataxis(land, nothin)
case(pussy, like)
amod(pussy, sweet)
compound(pussy, nigger)
nmod(nothin, pussy)
punct(land, !)
punct(land, !)
nsubj(think, he)
root(ROOT, think)
case(she, of)
obl(think, she)
punct(think, ,)
det(one, the)
amod(one, first)
parataxis(think, one)
punct(think, .)
nsubj(catch, he)
aux(catch, have)
root(ROOT, catch)
obj(catch, she)
xcomp(catch, come)
case(shack, out)
case(shack, of)
det(shack, the)
obl(come, shack)
punct(catch, .)
nsubj(one, she)
cop(one, be)
det(one, a)
amod(one, juicy)
root(ROOT, one)
punct(one, .)
discourse(bounced, oh)
advmod(bounced, how)
nsubj(bounced, they)
root(ROOT, bounced)
punct(bounced, !)
punct(bounced, !)
amod(lovin, Fresh)
punct(warm, ,)
conj(Fresh, warm)
punct(sweet, ,)
conj(Fresh, sweet)
cc(juicy, and)
conj(Fresh, juicy)
punct(lovin, ,)
amod(lovin, sweet)
root(ROOT, lovin)
nummod(lovin, sixteen)
punct(lovin, ,)
nsubj(be, she)
parataxis(lovin, be)
punct(lovin, .)
vocative(love, man)
punct(love, ,)
advmod(love, how)
nsubj(love, I)
root(ROOT, love)
compound(pussy, nigger)
obj(love, pussy)
punct(love, !)
punct(love, !)
det(snow, the)
nsubj(come, snow)
root(ROOT, come)
det(little, a)
obl:npmod(faster, little)
advmod(come, faster)
advmod(come, now)
punct(come, ,)
nsubj(note, he)
parataxis(come, note)
punct(come, .)
nsubj(think, he)
root(ROOT, think)
case(Joe, of)
obl(think, Joe)
flat(Joe, Harris)
punct(Joe, ,)
det(nigger, the)
appos(Joe, nigger)
nsubj(go, who)
aux(go, have)
acl:relcl(nigger, go)
case(sister, after)
nmod:poss(sister, he)
obl(go, sister)
punct(think, .)
nsubj(chuckle, he)
root(ROOT, chuckle)
punct(chuckle, ,)
det(memory, the)
obj(chuckle, memory)
parataxis(chuckle, vivid)
punct(chuckle, .)
parataxis(chuckle, Jee-sus)
punct(chuckle, ,)
nsubj(fix, we)
root(ROOT, fix)
obj(fix, he)
punct(fix, !)
punct(fix, !)
vocative(fix, Yooee)
punct(fix, ,)
nsubj(fix, we)
root(ROOT, fix)
obj(fix, he)
punct(fix, !)
punct(fix, !)
det(snow, the)
root(ROOT, snow)
advmod(snow, again)
punct(snow, .)
mark(lousy, if)
advmod(weather, only)
det(weather, the)
compound(weather, fucken)
nsubj(lousy, weather)
cop(lousy, be)
advmod(lousy, not)
advmod(lousy, so)
root(ROOT, lousy)
punct(lousy, !)
punct(lousy, !)
amod(nigger, Goddamn)
root(ROOT, nigger)
punct(nigger, ,)
vocative(nigger, Lord)
punct(nigger, .)
obj(have, what)
nsubj(have, I)
root(ROOT, have)
mark(put, to)
xcomp(have, put)
compound:prt(put, up)
obl(put, with)
punct(have, !)
punct(have, !)
vocative(figure, sonuvabitch)
punct(figure, ,)
nsubj(figure, I)
aux(figure, can)
advmod(figure, not)
root(ROOT, figure)
compound:prt(figure, out)
nsubj(hell, what)
case(hell, in)
ccomp(figure, hell)
mark(go, for)
nsubj(go, they)
advcl(hell, go)
cc(put, and)
conj(go, put)
obj(put, nigger)
case(squad, in)
nmod:poss(squad, my)
obl(put, squad)
nmod(squad, for)
punct(figure, .)
advmod(one, only)
nsubj(worth, one)
root(ROOT, worth)
det(shit, a)
obj(worth, shit)
punct(Brandon, ,)
cc(Brandon, and)
nsubj(Brandon, that)
cop(Brandon, be)
conj(worth, Brandon)
punct(worth, .)
nsubj(bad, he)
cop(bad, be)
advmod(bad, not)
advmod(bad, so)
root(ROOT, bad)
punct(bad, .)
nmod:poss(thought, he)
nsubj(turn, thought)
root(ROOT, turn)
case(thing, to)
amod(thing, other)
obl(turn, thing)
punct(turn, .)
det(shock, the)
amod(shock, big)
nsubj(Kaboom, shock)
nsubj(have, everybody)
acl:relcl(shock, have)
mark(find, when)
nsubj(find, they)
advcl(have, find)
case(slater, ol)
obl(find, slater)
cc(other, and)
det(other, those)
conj(slater, other)
acl(other, do)
obl(do, for)
punct(Kaboom, .)
root(ROOT, Kaboom)
nmod(Kaboom, for)
punct(Kaboom, .)
nsubj(scared, he)
aux(scared, have)
cop(scared, be)
advmod(scared, pretty)
root(ROOT, scared)
obj(scared, himself)
punct(scared, ,)
advcl(scared, wonder)
obj(come, what)
det(hell, the)
nsubj(come, hell)
aux(come, be)
ccomp(wonder, come)
compound:prt(come, off)
punct(scared, .)
cc(see, but)
nsubj(see, he)
advmod(see, soon)
root(ROOT, see)
det(way, which)
obj(see, way)
det(ball, the)
nsubj(bouncing, ball)
aux(bouncing, be)
acl:relcl(way, bouncing)
punct(see, .)
advmod(come, Soon)
root(ROOT, come)
advmod(come, back)
case(sense, to)
nmod:poss(sense, he)
obl(come, sense)
punct(come, .)
punct(come, ``)
nsubj(come, I)
advmod(come, soon)
root(ROOT, come)
advmod(come, back)
case(sense, to)
nmod:poss(sense, my)
obl(back, sense)
punct(come, '')
punct(come, ,)
nsubj(say, he)
parataxis(come, say)
punct(say, ,)
discourse(say, aloud)
punct(say, ,)
case(blizzard, to)
det(blizzard, the)
amod(blizzard, young)
obl(draw, blizzard)
punct(say, ,)
advmod(draw, proudly)
punct(draw, ,)
advcl(say, draw)
obj(draw, himself)
compound:prt(draw, up)
punct(draw, ,)
mark(make, as)
mark(make, if)
advcl(draw, make)
det(report, a)
obj(make, report)
case(superior, to)
det(superior, some)
amod(superior, important)
nmod(report, superior)
punct(come, . )
nsubj(first, I)
cop(first, be)
det(first, the)
root(ROOT, first)
mark(get, to)
csubj(first, get)
nmod:poss(squad, my)
obj(get, squad)
case(ball, on)
det(ball, the)
obl(get, ball)
punct(thinkin, ,)
cc(thinkin, and)
nsubj(thinkin, anybody)
conj(first, thinkin)
nsubj(easy, it)
cop(easy, be)
ccomp(thinkin, easy)
cop(dumb, be)
advmod(dumb, pretty)
advmod(dumb, damn)
ccomp(thinkin, dumb)
punct(first, .)
root(ROOT, look)
case(thum, at)
obl(look, thum)
punct(look, .)
det(redheader, that)
compound(redheader, goddamn)
nsubj(worst, redheader)
cop(worst, be)
det(worst, the)
root(ROOT, worst)
punct(worst, .)
nsubj(keep, he)
root(ROOT, keep)
discourse(keep, sayin)
punct(I, ,)
advmod(I, not)
parataxis(keep, I)
punct(I, ,)
cc(I, not)
conj(I, I)
punct(keep, ,)
nsubj(wind, I)
aux(wind, do)
advmod(wind, not)
advmod(wind, wanta)
parataxis(keep, wind)
compound:prt(wind, up)
case(em, like)
obl(wind, em)
punct(keep, .)
cc(tell, but)
nsubj(tell, I)
root(ROOT, tell)
obj(tell, he)
punct(tell, ,)
discourse(tell, goddammit)
punct(tell, .)
punct(tell, ``)
nsubj(tell, I)
ccomp(say, tell)
obj(tell, he)
punct(say, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
punct(say, aloud)
nsubj(get, they)
aux(get, will)
root(ROOT, get)
det(guy, the)
obj(get, guy)
nsubj(do, that)
acl:relcl(guy, do)
obj(do, it)
punct(get, .)
nsubj(put, that)
aux(put, will)
parataxis(get, put)
det(place, the)
obj(put, place)
advmod(put, back)
case(normal, to)
obl(put, normal)
punct(get, .)
root(ROOT, Normal)
punct(Normal, ,)
case(God, by)
obl(Normal, God)
punct(Normal, .)
advmod(thing, maybe)
nsubj(thing, it)
cop(thing, be)
det(thing, a)
amod(thing, good)
root(ROOT, thing)
nsubj(happen, it)
acl:relcl(thing, happen)
punct(thing, .)
advmod(stop, maybe)
nsubj(stop, they)
aux(stop, will)
root(ROOT, stop)
obj(stop, it)
advmod(stop, now)
punct(stop, ,)
advmod(stop, once)
case(all, for)
obl(once, all)
punct(stop, .)
root(ROOT, clean)
det(place, the)
obj(clean, place)
compound:prt(clean, up)
punct(clean, .)
nsubj(doin, they)
aux(doin, be)
parataxis(clean, doin)
obj(doin, it)
advmod(doin, now)
punct(clean, . )
nsubj(hear, I)
root(ROOT, hear)
det(bunch, the)
amod(bunch, whole)
nsubj(croakin, bunch)
aux(croakin, be)
ccomp(hear, croakin)
compound:prt(croakin, out)
case(snow, in)
det(snow, the)
obl(croakin, snow)
punct(hear, .)
nsubj(get, they)
aux(get, will)
root(ROOT, get)
det(guy, the)
obj(get, guy)
nsubj(do, that)
acl:relcl(guy, do)
obj(do, it)
punct(get, .)
expl(be, there)
root(ROOT, be)
nsubj(be, something)
acl(something, troubling)
obj(troubling, he)
advmod(troubling, though)
punct(be, :)
mark(day, as)
advmod(day, yet)
nsubj(day, they)
aux(day, have)
advmod(day, not)
nummod(day, five)
parataxis(be, day)
punct(be, .)
nummod(run, Keerist)
punct(Keerist, .)
amod(twing, prickly)
nsubj(run, twing)
case(annoyance, of)
nmod(twing, annoyance)
root(ROOT, run)
case(he, through)
obl(run, he)
punct(run, .)
nmod:poss(eye, he)
nsubj(blink, eye)
root(ROOT, blink)
advmod(blink, hard)
punct(blink, ,)
advcl(blink, snap)
compound:prt(snap, on)
cc(squash, and)
conj(snap, squash)
det(thing, some)
amod(thing, bad)
obj(squash, thing)
nsubj(try, that)
aux(try, be)
acl:relcl(thing, try)
mark(push, to)
xcomp(try, push)
nmod:poss(way, they)
obj(push, way)
case(he, into)
obl(push, he)
punct(blink, . )
det(tune, a)
nsubj(begin, tune)
root(ROOT, begin)
mark(whirl, to)
xcomp(begin, whirl)
case(head, inside)
nmod:poss(head, he)
obl(whirl, head)
punct(begin, .)
root(ROOT, one)
case(favorite, of)
nmod:poss(favorite, he)
nmod(one, favorite)
punct(one, :)
punct(one, ``)
compound(Boogie, Guitar)
nsubj(come, Boogie)
punct(Boogie, '')
punct(Boogie, .)
nsubj(come, it)
advmod(come, always)
root(ROOT, come)
advmod(come, on)
punct(come, ,)
advmod(come, faithfully)
punct(come, ,)
advmod(radio, just)
case(radio, like)
det(radio, a)
obl(come, radio)
cc(box, or)
compound(box, juke)
conj(radio, box)
punct(come, ,)
advmod(start, whenever)
nsubj(start, he)
advcl(come, start)
mark(worry, to)
xcomp(start, worry)
advmod(much, too)
advmod(worry, much)
case(something, about)
obl(worry, something)
punct(worry, ,)
mark(try, when)
det(thing, the)
amod(thing, bad)
nsubj(try, thing)
advcl(worry, try)
mark(push, to)
xcomp(try, push)
nmod:poss(way, they)
obj(push, way)
case(he, into)
obl(push, he)
punct(come, .)
det(music, the)
nsubj(drive, music)
root(ROOT, drive)
obj(drive, they)
compound:prt(drive, off)
punct(away, ,)
cc(away, or)
conj(drive, away)
punct(free, ,)
cc(free, and)
nsubj(free, he)
cop(free, be)
conj(drive, free)
mark(walk, to)
xcomp(free, walk)
case(air, on)
obl(walk, air)
case(moment, in)
det(moment, a)
advmod(few, very)
amod(moment, few)
obl(walk, moment)
punct(hum, ,)
conj(walk, hum)
cc(jive, and)
conj(hum, jive)
advmod(jive, within)
punct(hum, ,)
conj(hum, beat)
det(rhythm, the)
obj(beat, rhythm)
obl(beat, within)
punct(drive, .)
nsubj(glow, he)
root(ROOT, glow)
case(anticipation, with)
obl(glow, anticipation)
mark(happen, about)
nsubj(happen, what)
aux(happen, would)
advcl(glow, happen)
case(culprit, to)
det(culprit, the)
obl(happen, culprit)
mark(catch, when)
nsubj(catch, they)
advcl(happen, catch)
obj(catch, they)
punct(turn, .)
parataxis(glow, turn)
det(bastard, the)
obj(turn, bastard)
advmod(turn, over)
case(I, to)
obl(turn, I)
punct(turn, --)
case(I, to)
obl(turn, I)
cc(boy, and)
nmod:poss(boy, my)
conj(I, boy)
punct(glow, --)
det(nigger, no)
nsubj(get, nigger)
advmod(get, ever)
parataxis(glow, get)
nsubj(comin, what)
aux(comin, would)
cop(comin, be)
ccomp(get, comin)
case(they, to)
obl(comin, they)
punct(bastard, --)
amod(bastard, reactionary)
parataxis(comin, bastard)
punct(bastard, .)
nsubj(hear, he)
aux(hear, have)
advmod(hear, never)
root(ROOT, hear)
det(word, the)
obj(hear, word)
amod(word, reactionary)
case(life, before)
nmod:poss(life, he)
obl(hear, life)
mark(begin, as)
det(pow, a)
nsubj(begin, pow)
advcl(hear, begin)
punct(hear, .)
nsubj(word, it)
cop(word, be)
det(word, a)
root(ROOT, word)
nsubj(proud, he)
cop(proud, be)
acl:relcl(word, proud)
obl(proud, of)
punct(word, ,)
det(word, a)
appos(word, word)
nsubj(mean, that)
acl:relcl(word, mean)
obj(mean, much)
case(he, to)
obl(much, he)
punct(use, ,)
cc(use, and)
nsubj(use, he)
conj(word, use)
obj(use, it)
case(pleasure, with)
amod(pleasure, great)
obl(use, pleasure)
punct(use, ,)
advmod(possession, almost)
mark(possession, as)
mark(possession, if)
nsubj(possession, it)
cop(possession, be)
det(possession, a)
amod(possession, exclusive)
advcl(sense, possession)
punct(more, ,)
cc(more, and)
conj(possession, more)
punct(sense, :)
nsubj(sense, he)
parataxis(word, sense)
obj(sense, himself)
mark(educated, to)
aux:pass(educated, be)
advmod(highly, very)
advmod(educated, highly)
xcomp(sense, educated)
punct(cut, ,)
nummod(cut, four)
obj(educated, cut)
case(any, above)
nmod(cut, any)
case(folk, of)
det(folk, the)
nmod(any, folk)
advmod(home, back)
advmod(educated, home)
punct(word, .)
punct(word, ``)
nummod(cut, four)
nsubj(make, cut)
case(least, at)
nmod(cut, least)
punct(chuckle, '')
punct(chuckle, ,)
nsubj(chuckle, he)
parataxis(cut, chuckle)
case(himself, to)
obl(chuckle, himself)
punct(owe, ,)
punct(chuckle, ``)
cc(owe, and)
nsubj(owe, I)
conj(chuckle, owe)
obj(owe, it)
det(it, all)
case(they, to)
obl(owe, they)
punct(owe, '')
punct(make, .)
det(word, the)
nsubj(make, word)
advmod(make, also)
root(ROOT, make)
obj(make, he)
xcomp(make, feel)
xcomp(feel, hate)
punct(hate, ,)
amod(hate, sincere)
obj(hate, hate)
punct(hate, ,)
case(those, for)
obl(hate, those)
advmod(label, so)
acl(those, label)
punct(make, .)
nsubj(use, he)
root(ROOT, use)
obj(use, it)
advmod(effectively, very)
advmod(use, effectively)
mark(want, when)
nsubj(want, he)
advcl(use, want)
mark(get, to)
xcomp(want, get)
nmod:poss(squad, he)
obj(get, squad)
case(ball, on)
det(ball, the)
obl(get, ball)
punct(use, .)
nsubj(come, it)
root(ROOT, come)
advmod(come, up)
advmod(come, again)
cc(again, and)
conj(again, again)
case(session, in)
det(session, the)
compound(session, discussion)
obl(come, session)
punct(come, .)
amod(bastard, Lousy)
amod(bastard, reactionary)
nsubj(tryin, bastard)
aux(tryin, be)
root(ROOT, tryin)
mark(fuck, to)
xcomp(tryin, fuck)
compound:prt(fuck, up)
det(program, the)
obj(fuck, program)
case(month, for)
obl(fuck, month)
punct(tryin, . )
root(ROOT, Months)
punct(Months, .)
amod(lackey, hire)
punct(lackey, ,)
amod(lackey, hard)
root(ROOT, lackey)
case(capitalist, of)
det(capitalist, the)
compound(capitalist, Warmongering)
nmod(lackey, capitalist)
punct(lackey, .)
advmod(capture, not)
root(ROOT, capture)
punct(capture, ,)
conj(capture, send)
advmod(send, here)
punct(capture, . )
mark(fuck, to)
root(ROOT, fuck)
compound:prt(fuck, up)
det(program, the)
obj(fuck, program)
punct(fuck, .)
nsubj(remember, you)
nsubj(remember, guy)
root(ROOT, remember)
obj(remember, that)
punct(remember, .)
root(ROOT, remember)
mark(hear, that)
nsubj(hear, he)
ccomp(remember, hear)
obj(hear, himself)
xcomp(hear, harangue)
obj(harangue, they)
punct(remember, .)
nsubj(see, he)
root(ROOT, see)
obj(see, himself)
mark(deliver, before)
nsubj(deliver, they)
advcl(see, deliver)
det(speech, the)
obj(deliver, speech)
punct(see, .)
nsubj(laugh, he)
root(ROOT, laugh)
punct(laugh, ,)
advmod(laugh, suddenly)
punct(laugh, ,)
advcl(laugh, feel)
det(surge, a)
obj(feel, surge)
case(power, of)
nmod(surge, power)
acl(surge, tell)
obj(tell, he)
case(hold, of)
nmod:poss(hold, he)
obl(tell, hold)
case(they, over)
obl(tell, they)
punct(tell, ,)
advcl(tell, see)
obj(see, himself)
case(they, before)
obl(see, they)
punct(see, ,)
conj(see, receive)
amod(respect, utmost)
obj(receive, respect)
cc(attention, and)
conj(respect, attention)
punct(laugh, .)
nummod(day, one)
obl:tmod(tell, day)
punct(tell, ,)
nsubj(tell, Ching)
aux(tell, have)
root(ROOT, tell)
obj(tell, he)
punct(smile, ()
parataxis(tell, smile)
punct(smile, ,)
conj(smile, pat)
obj(pat, he)
case(back, on)
det(back, the)
obl(pat, back)
punct(smile, ))
mark(walk, as)
nsubj(walk, they)
advcl(tell, walk)
case(conference, to)
det(conference, the)
amod(conference, weekly)
obl(walk, conference)
case(leader, of)
compound(leader, squad)
nmod(conference, leader)
punct(tell, ,)
punct(tell, ``)
root(ROOT, keep)
obj(keep, it)
compound:prt(keep, up)
punct(keep, ,)
nmod:poss(squad, you)
nsubj(good, squad)
cop(good, be)
parataxis(keep, good)
punct(good, ,)
conj(good, one)
case(best, of)
det(best, the)
nmod(one, best)
punct(keep, ,)
conj(good, keep)
obj(keep, it)
compound:prt(keep, up)
punct(keep, ,)
conj(keep, keep)
compound:prt(keep, up)
det(work, the)
amod(work, good)
obj(keep, work)
punct(keep, '')
punct(keep, .)
nsubj(would, he)
root(ROOT, would)
punct(would, !)
punct(would, !)
nsubj(something, that)
cop(something, be)
advmod(something, really)
root(ROOT, something)
punct(something, ,)
acl(something, come)
case(Ching, from)
obl(come, Ching)
punct(something, .)
punct(something, ``)
advmod(something, really)
ccomp(say, something)
punct(something, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
punct(say, ,)
discourse(say, aloud)
punct(say, .)
amod(bastard, Dirty)
amod(bastard, reactionary)
nsubj(comin, bastard)
root(ROOT, comin)
compound:prt(comin, down)
advmod(comin, here)
case(night, in)
det(night, the)
obl(comin, night)
cc(bumpin, and)
conj(comin, bumpin)
compound:prt(bumpin, off)
case(slater, ol)
obl(bumpin, slater)
cc(bastard, and)
det(bastard, those)
amod(bastard, other)
amod(bastard, poor)
conj(slater, bastard)
punct(comin, .)
punct(comin, ``)
nsubj(get, they)
aux(get, will)
root(ROOT, get)
obj(get, they)
case(God, by)
obl(get, God)
cc(let, and)
conj(get, let)
obj(let, they)
xcomp(let, bring)
obj(bring, they)
compound:prt(bring, down)
advmod(bring, here)
case(I, to)
obl(bring, I)
punct(get, ,)
advmod(let, just)
parataxis(get, let)
obj(let, they)
punct(let, ,)
vocative(let, God)
punct(get, ,)
nsubj(slice, I)
aux(slice, will)
parataxis(let, slice)
nmod:poss(ball, they)
obj(slice, ball)
advmod(off, right)
advmod(slice, off)
punct(get, .)
punct(get, '')
nmod:poss(arm, he)
nsubj(move, arm)
root(ROOT, move)
advmod(move, swiftly)
punct(move, ,)
advmod(move, violently)
punct(move, ,)
advmod(move, once)
punct(move, ,)
advmod(move, twice)
punct(move, .)
nsubj(feel, he)
root(ROOT, feel)
amod(satisfaction, intense)
obj(feel, satisfaction)
punct(feel, .)
nsubj(tingling, he)
aux(tingling, be)
root(ROOT, tingling)
obl(tingling, within)
punct(tingling, .)
case(he, before)
obl(lay, he)
punct(lay, ,)
advcl(lay, mutilate)
punct(mutilate, ,)
conj(mutilate, bleed)
case(death, to)
obl(bleed, death)
punct(lay, ,)
nsubj(lay, they)
root(ROOT, lay)
punct(lay, .)
nsubj(be, it)
root(ROOT, be)
mark(do, as)
mark(do, if)
nsubj:pass(do, it)
aux(do, have)
aux:pass(do, be)
advcl(be, do)
punct(be, .)
punct(be, ``)
vocative(say, bastard)
punct(bastard, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
discourse(say, aloud)
punct(say, ,)
advcl(say, spitting)
case(they, on)
obl(spitting, they)
punct(say, .)
nsubj(halt, he)
root(ROOT, halt)
punct(look, ,)
cc(look, and)
conj(halt, look)
advmod(look, around)
punct(halt, .)
nsubj:pass(unleashed, Rivers)
case(sweat, of)
amod(sweat, cold)
nmod(Rivers, sweat)
aux:pass(unleashed, be)
advmod(unleashed, suddenly)
root(ROOT, unleashed)
case(he, within)
obl(unleashed, he)
punct(unleashed, .)
det(thought, the)
nsubj(come, thought)
root(ROOT, come)
advmod(come, back)
punct(come, ,)
det(one, the)
nsubj(come, one)
acl(one, nag)
case(he, at)
obl(nag, he)
det(day, these)
amod(day, past)
nummod(day, four)
obl:tmod(nag, day)
punct(come, .)
nsubj(try, he)
root(ROOT, try)
mark(stifle, to)
xcomp(try, stifle)
obj(stifle, it)
punct(try, .)
cc(form, but)
det(word, the)
nsubj(form, word)
aux(form, be)
root(ROOT, form)
punct(form, .)
nsubj(know, he)
root(ROOT, know)
nsubj(could, he)
ccomp(know, could)
advmod(could, not)
punct(know, .)
nsubj(brace, he)
root(ROOT, brace)
obj(brace, himself)
punct(brace, .)
nsubj(start, somebody)
aux(start, will)
advmod(start, hafta)
root(ROOT, start)
xcomp(start, thinkin)
punct(start, .)
nsubj(fight, he)
root(ROOT, fight)
obj(fight, it)
punct(fight, ,)
advcl(fight, seek)
mark(kill, to)
xcomp(seek, kill)
det(word, the)
amod(word, last)
amod(word, few)
obj(kill, word)
punct(come, ,)
cc(come, but)
advmod(come, on)
nsubj(come, they)
conj(fight, come)
advmod(come, out)
punct(fight, .)
nsubj(tremble, he)
aux(tremble, be)
root(ROOT, tremble)
punct(tremble, ,)
det(feeling, a)
amod(feeling, strange)
obj(tremble, feeling)
case(he, upon)
nmod(feeling, he)
punct(tremble, ,)
advmod(expect, fully)
advcl(tremble, expect)
det(catastrophe, some)
obj(expect, catastrophe)
mark(strike, to)
acl(catastrophe, strike)
obj(strike, he)
xcomp(strike, dead)
case(spot, on)
det(spot, the)
obl(strike, spot)
punct(tremble, .)
cc(do, but)
nsubj(do, it)
root(ROOT, do)
advmod(do, not)
punct(do, .)
cc(take, and)
nsubj(take, he)
root(ROOT, take)
obj(take, heart)
punct(take, ;)
punct(take, ;)
det(word, the)
amod(word, final)
nsubj(come, word)
parataxis(take, come)
advmod(come, forth)
punct(take, .)
advmod(hear, now)
nsubj(hear, he)
root(ROOT, hear)
obj(hear, it)
punct(hear, ,)
advmod(hear, fully)
punct(hear, ;)
punct(hear, ;)
punct(takin, ``)
nsubj(takin, bout)
parataxis(hear, takin)
nmod:poss(place, he)
obj(takin, place)
punct(hear, '')
nsubj(listen, he)
root(ROOT, listen)
punct(listen, ,)
conj(listen, wait)
punct(listen, ,)
nsubj(happen, nothing)
parataxis(listen, happen)
punct(listen, .)
nsubj(feel, he)
root(ROOT, feel)
xcomp(feel, good)
punct(feel, .)
nmod:poss(self, he)
amod(self, old)
root(ROOT, self)
punct(self, .)
det(music, the)
nsubj(arrive, music)
root(ROOT, arrive)
punct(arrive, ,)
advcl(arrive, take)
iobj(take, he)
nmod:poss(rhythm, its)
obj(take, rhythm)
punct(arrive, .)
root(ROOT, Stroked)
obj(Stroked, he)
punct(Stroked, ,)
conj(Stroked, snake)
obj(snake, all)
case(he, through)
obl(snake, he)
punct(Stroked, ,)
det(lyric, the)
nsubj(lift, lyric)
parataxis(Stroked, lift)
obj(lift, he)
punct(take, ,)
conj(Stroked, take)
obj(take, he)
case(isle, from)
nummod(isle, one)
compound(isle, magic)
obl(take, isle)
case(another, to)
nmod(isle, another)
punct(take, ,)
advcl(take, stop)
advmod(stop, briefly)
case(Brandon, at)
det(Brandon, each)
obl(stop, Brandon)
punct(Stroked, .)
nsubj(good, he)
cop(good, be)
root(ROOT, good)
punct(good, .)
advmod(good, Damn)
parataxis(good, good)
punct(good, .)
cc(Johnson, but)
det(nigger, a)
compound(Johnson, nigger)
punct(Johnson, .)
root(ROOT, Johnson)
punct(Johnson, . )
vocative(say, Jesus)
punct(say, ,)
det(guy, the)
nsubj(say, guy)
root(ROOT, say)
nsubj(try, he)
aux(try, be)
ccomp(say, try)
punct(say, .)
cc(say, but)
nsubj(it, he)
cop(it, be)
advmod(it, not)
case(it, with)
root(ROOT, it)
punct(it, ,)
advmod(all, not)
case(all, at)
nmod(it, all)
case(it, with)
conj(it, it)
punct(it, .)
mark(talk, when)
nsubj(talk, I)
advcl(say, talk)
case(Ching, to)
obl(talk, Ching)
case(it, about)
obl(talk, it)
punct(say, ,)
nsubj(say, he)
parataxis(it, say)
punct(say, ,)
nsubj(learn, everyone)
aux(learn, can)
ccomp(say, learn)
punct(learn, ,)
mark(reactionary, if)
nsubj(reactionary, he)
cop(reactionary, be)
advmod(reactionary, not)
det(reactionary, a)
advcl(learn, reactionary)
cc(lazy, or)
conj(reactionary, lazy)
punct(learn, .)
det(one, no)
nsubj(stupid, one)
cop(stupid, be)
root(ROOT, stupid)
punct(stupid, .)
nsubj(be, that)
root(ROOT, be)
obj(say, what)
nsubj(say, he)
ccomp(be, say)
punct(be, .)
nsubj(know, he)
aux(know, oughta)
root(ROOT, know)
punct(know, .)
nsubj(plain, it)
cop(plain, be)
root(ROOT, plain)
case(hell, as)
obl(plain, hell)
nsubj(reactionary, Johnson)
cop(reactionary, be)
det(reactionary, no)
parataxis(plain, reactionary)
punct(plain, .)
advmod(tryin, so)
nsubj(tryin, you)
cop(tryin, be)
advmod(tryin, not)
root(ROOT, tryin)
punct(tryin, ,)
vocative(tryin, Johnson)
punct(tryin, ,)
nsubj(bastard, you)
parataxis(tryin, bastard)
obj(bastard, you)
punct(tryin, .)
nsubj(look, he)
root(ROOT, look)
advmod(look, over)
case(he, at)
obl(look, he)
punct(lie, ,)
advcl(look, lie)
advmod(lie, there)
punct(asleep, ,)
conj(lie, asleep)
punct(feel, ,)
cc(feel, and)
nsubj(feel, he)
conj(look, feel)
det(wave, a)
obj(feel, wave)
case(revulsion, of)
nmod(wave, revulsion)
punct(look, .)
advmod(loath, how)
nsubj(loath, he)
root(ROOT, loath)
obj(loath, he)
punct(loath, .)
obl:npmod(eye, Sleepy)
punct(eye, -)
amod(Johnson, eye)
punct(Johnson, ,)
amod(speak, soft)
punct(speak, -)
amod(Johnson, speak)
root(ROOT, Johnson)
punct(Johnson, ,)
amod(thorn, biggest)
conj(Johnson, thorn)
case(side, in)
nmod:poss(side, my)
nmod(thorn, side)
case(squad, of)
det(squad, the)
amod(squad, whole)
compound(squad, fucken)
nmod(side, squad)
punct(Johnson, .)
nsubj(guy, he)
cop(guy, be)
det(guy, the)
root(ROOT, guy)
nsubj(goof, what)
advmod(goof, always)
acl:relcl(guy, goof)
case(Time, at)
compound(Time, question)
obl(goof, Time)
punct(guy, .)
advmod(dump, why)
aux(dump, could)
advmod(dump, not)
nsubj(dump, they)
aux(dump, have)
root(ROOT, dump)
obj(dump, he)
compound:prt(dump, off)
case(someone, on)
obl(dump, someone)
amod(someone, else)
punct(dump, ?)
punct(dump, ?)
advmod(I, why)
nsubj(bump, I)
punct(I, ?)
punct(bump, ?)
advmod(bump, why)
aux(bump, do)
advmod(bump, not)
det(reactionary, the)
amod(reactionary, damn)
nsubj(bump, reactionary)
root(ROOT, bump)
obj(bump, he)
compound:prt(bump, off)
punct(bump, ?)
punct(bump, ?)
root(ROOT, why)
vocative(why, slater)
punct(why, ?)
punct(why, ?)
case(particle, like)
det(particle, a)
obl(return, particle)
acl(particle, draw)
case(magnet, to)
det(magnet, a)
obl(draw, magnet)
nsubj(return, he)
root(ROOT, return)
case(that, to)
obl(return, that)
nsubj(press, which)
aux(press, be)
parataxis(return, press)
advmod(hard, so)
advmod(press, hard)
case(mind, in)
nmod:poss(mind, he)
obl(press, mind)
punct(return, .)
det(music, the)
nsubj(surge, music)
root(ROOT, surge)
compound:prt(surge, up)
punct(fail, ,)
cc(fail, but)
nsubj(fail, it)
conj(surge, fail)
mark(check, to)
xcomp(fail, check)
obj(check, it)
punct(surge, .)
nsubj(man, who)
cop(man, be)
det(man, the)
parataxis(surge, man)
mark(take, to)
acl(man, take)
nmod:poss(place, he)
obj(take, place)
punct(surge, ?)
punct(surge, ?)
det(guy, the)
root(ROOT, guy)
case(most, with)
nmod(guy, most)
case(ball, on)
det(ball, the)
nmod(most, ball)
punct(guy, .)
appos(guy, most)
case(ball, on)
det(ball, the)
nmod(most, ball)
punct(most, .)
root(ROOT, handle)
obj(handle, man)
punct(handle, .)
advmod(wise, thoroughly)
parataxis(handle, wise)
compound:prt(wise, up)
punct(handle, .)
parataxis(handle, know)
det(score, the)
obj(know, score)
case(effort, with)
det(effort, a)
amod(effort, supreme)
obl(break, effort)
punct(break, ,)
nsubj(break, he)
root(ROOT, break)
obj(break, it)
compound:prt(break, off)
punct(break, .)
nsubj(turn, he)
root(ROOT, turn)
case(window, to)
det(window, the)
obl(turn, window)
advmod(turn, again)
punct(turn, . )
det(gnaw, a)
root(ROOT, gnaw)
cc(gnash, and)
conj(gnaw, gnash)
case(he, within)
obl(gnash, he)
punct(gnaw, .)
det(snow, the)
nsubj(tumble, snow)
aux(tumble, be)
root(ROOT, tumble)
advmod(tumble, down)
advmod(tumble, furiously)
advmod(tumble, now)
punct(tumble, .)
amod(flake, huge)
compound(flake, glob)
punct(flake, -)
root(ROOT, flake)
acl(flake, hit)
det(ground, the)
obj(hit, ground)
punct(piling, ,)
conj(hit, piling)
xcomp(piling, higher)
cc(higher, and)
conj(higher, higher)
punct(flake, .)
nsubj(stare, he)
root(ROOT, stare)
case(it, at)
obl(stare, it)
punct(stare, ,)
parataxis(stare, amazed)
punct(stare, ,)
parataxis(stare, alar)
punct(stare, .)
det(sky, the)
amod(fucken, whole)
compound(cavin, fucken)
nmod:poss(cavin, sky)
case(sky, 's)
root(ROOT, cavin)
nmod(cavin, in)
punct(cavin, !)
punct(cavin, !)
root(ROOT, Keeeerist)
punct(Keeeerist, !)
punct(Keeeerist, !)
root(ROOT, Lookit)
obj(Lookit, it)
punct(Lookit, !)
punct(Lookit, !)
root(ROOT, cover)
det(building, the)
amod(building, whole)
obj(cover, building)
punct(cover, ,)
conj(cover, bury)
obj(bury, we)
det(we, all)
punct(bury, ,)
case(nightfall, by)
obl(bury, nightfall)
punct(cover, . )
root(ROOT, Jesus)
punct(Jesus, !)
punct(Jesus, !)
nsubj(get, somebody)
punct(get, ,)
root(ROOT, get)
mark(somebody, to)
cop(somebody, be)
xcomp(get, somebody)
mark(put, if)
nsubj(put, I)
aux(put, do)
advmod(put, not)
advcl(know, put)
nmod:poss(cent, my)
nummod(cent, two)
obj(put, cent)
advmod(soon, in)
advmod(put, soon)
punct(know, ,)
nsubj(know, somebody)
amod(somebody, else)
aux(know, will)
nsubj(know, I)
root(ROOT, know)
nsubj(waitin, they)
aux(waitin, be)
ccomp(know, waitin)
advmod(waitin, only)
case(thing, for)
nummod(thing, one)
obl(waitin, thing)
punct(thing, :)
case(bastard, for)
det(bastard, the)
nmod(thing, bastard)
nsubj(do, what)
acl:relcl(bastard, do)
obj(do, it)
mark(nail, to)
aux:pass(nail, be)
xcomp(do, nail)
punct(know, .)
advmod(get, maybe)
nsubj(get, they)
advmod(get, already)
root(ROOT, get)
obj(get, they)
punct(get, .)
nsubj(tingling, he)
aux(tingling, be)
advmod(tingling, again)
root(ROOT, tingling)
case(pleasure, with)
obl(tingling, pleasure)
punct(tingling, ,)
advcl(tingling, see)
obj(see, himself)
advmod(shoe, clearly)
case(shoe, in)
nmod:poss(shoe, slater)
case(slater, 's)
obl(see, shoe)
punct(tingling, . )
amod(dog, top)
nsubj(Ching, dog)
punct(sleep, ,)
conj(dog, sleep)
cc(eat, and)
conj(sleep, eat)
advmod(there, right)
advmod(eat, there)
case(staff, with)
det(staff, the)
obl(there, staff)
punct(Ching, .)
root(ROOT, Ching)
punct(Ching, ,)
root(ROOT, Tien)
punct(Tien, ,)
appos(Tien, all)
case(they, of)
nmod(all, they)
punct(Tien, .)
amod(dog, top)
appos(Tien, dog)
punct(Tien, .)
amod(slater, poor)
punct(slater, ol)
nsubj(imagine, slater)
punct(slater, .)
flat(slater, Jesus)
punct(imagine, ,)
root(ROOT, imagine)
punct(imagine, ,)
det(bastard, the)
amod(bastard, crummy)
obj(imagine, bastard)
punct(imagine, ,)
nsubj(get, they)
aux(get, will)
parataxis(imagine, get)
obj(get, em)
punct(imagine, ,)
nsubj(get, they)
aux(get, will)
parataxis(imagine, get)
nsubj(comin, what)
aux(comin, be)
ccomp(get, comin)
case(em, to)
obl(comin, em)
punct(imagine, .)
nsubj(whirl, he)
root(ROOT, whirl)
advmod(suddenly, about)
advmod(whirl, suddenly)
punct(whirl, .)
nsubj(nothing, it)
cop(nothing, be)
root(ROOT, nothing)
punct(nothing, ,)
mark(thump, though)
nmod:poss(heart, he)
nsubj(thump, heart)
aux(thump, be)
advcl(nothing, thump)
advmod(thump, wildly)
punct(nothing, .)
nsubj(up, somebody)
cop(up, be)
root(ROOT, up)
punct(up, .)
nsubj(all, that)
cop(all, be)
root(ROOT, all)
punct(all, .)
punct(all, ``)
vocative(say, Boy)
punct(early, ,)
nsubj(early, you)
cop(early, be)
advmod(early, stirrin)
parataxis(Boy, early)
punct(early, '')
punct(say, ,)
det(voice, a)
amod(voice, sleepy)
nsubj(say, voice)
root(ROOT, say)
punct(say, .)
punct(say, ``)
vocative(say, Yehhh)
punct(Yehhh, '')
punct(say, ,)
root(ROOT, say)
nsubj(say, Coughlin)
punct(say, ,)
advmod(say, testily)
punct(eye, ,)
advcl(say, eye)
obj(eye, he)
compound:prt(eye, up)
cc(down, and)
conj(up, down)
punct(say, .)
punct(say, ``)
nsubj(say, Lookit)
nsubj(come, that)
acl:relcl(Lookit, come)
advmod(come, down)
punct(say, ,)
advmod(come, willya)
punct(say, '')
punct(say, ,)
root(ROOT, say)
det(man, the)
nsubj(say, man)
punct(man, ,)
acl(man, scratch)
obj(scratch, himself)
punct(yawn, ,)
conj(scratch, yawn)
punct(say, .)
punct(say, ``)
vocative(say, Yehhh)
punct(Yehhh, '')
punct(say, ,)
root(ROOT, say)
nsubj(say, Coughlin)
punct(say, ,)
advmod(spitting, practically)
advcl(say, spitting)
case(he, on)
obl(spitting, he)
punct(say, .)
det(man, the)
nsubj(move, man)
root(ROOT, move)
advmod(move, away)
punct(move, .)
nsubj(way, that)
cop(way, be)
det(way, the)
root(ROOT, way)
punct(way, .)
nsubj(toe, they)
aux(toe, will)
root(ROOT, toe)
det(line, the)
obj(toe, line)
punct(toe, .)
root(ROOT, Goddamn)
obj(Goddamn, it)
punct(Goddamn, .)
root(ROOT, keep)
det(chatter, the)
obj(keep, chatter)
case(minimum, to)
det(minimum, a)
obl(keep, minimum)
punct(minimum, ,)
amod(answer, short)
conj(minimum, answer)
punct(answer, ,)
nummod(word, one)
conj(minimum, word)
punct(keep, ,)
mark(possible, if)
advcl(keep, possible)
punct(keep, .)
amod(bull, less)
nsubj(trouble, bull)
mark(more, the)
amod(bull, more)
nsubj(do, you)
aux(do, can)
acl:relcl(bull, do)
case(em, with)
obl(do, em)
punct(bull, .)
nsubj(trouble, that)
cop(trouble, be)
nmod:poss(trouble, Brown)
case(Brown, 's)
root(ROOT, trouble)
punct(trouble, .)
nsubj(be, all)
nsubj(be, he)
aux(be, do)
root(ROOT, be)
mark(bullshit, to)
ccomp(be, bullshit)
case(squad, with)
nmod:poss(squad, he)
obl(bullshit, squad)
punct(bastard, ,)
cc(bastard, and)
nsubj(bastard, they)
cop(bastard, be)
det(bastard, the)
amod(bastard, stupidest)
conj(be, bastard)
advmod(bastard, around)
punct(be, .)
advmod(about, just)
root(ROOT, about)
mark(get, to)
xcomp(about, get)
nmod:poss(ass, they)
obj(get, ass)
xcomp(get, kick)
case(hut, into)
obl(kick, hut)
nummod(hut, Seven)
punct(about, .)
root(ROOT, plenty)
case(room, of)
nmod(plenty, room)
advmod(plenty, there)
advmod(plenty, now)
punct(plenty, .)
det:predet(ball, all)
det(ball, those)
amod(ball, dumb)
nummod(ball, 8)
punct(ball, -)
nsubj(croak, ball)
root(ROOT, croak)
punct(croak, .)
nsubj(do, you)
aux(do, can)
root(ROOT, do)
obj(do, anything)
case(fuck, with)
det(fuck, these)
amod(fuck, dumb)
nmod(anything, fuck)
mark(know, if)
nsubj(know, you)
advcl(do, know)
advmod(know, how)
punct(do, .)
root(ROOT, anything)
punct(anything, .)
nsubj(cut, they)
aux(cut, would)
root(ROOT, cut)
nmod:poss(mother, they)
nmod:poss(belly, mother)
case(mother, 's)
obj(cut, belly)
xcomp(cut, open)
punct(cut, .)
root(ROOT, give)
iobj(give, um)
det(work, the)
obj(give, work)
punct(give, .)
root(ROOT, see)
punct(see, ,)
nsubj(snap, he)
aux(snap, be)
advmod(snap, already)
parataxis(see, snap)
obj(snap, it)
compound:prt(snap, up)
punct(jerk, ,)
det(jerk, the)
amod(jerk, dumb)
parataxis(snap, jerk)
punct(see, .)
nsubj(grin, Coughlin)
parataxis(see, grin)
punct(grin, ,)
advcl(grin, feel)
advmod(feel, supremely)
case(top, on)
obl(feel, top)
case(thing, of)
nmod(top, thing)
punct(see, .)
nsubj(watch, he)
root(ROOT, watch)
det(snow, the)
obj(watch, snow)
advmod(watch, once)
advmod(watch, again)
punct(watch, .)
nsubj(infuriate, it)
root(ROOT, infuriate)
obj(infuriate, he)
punct(infuriate, .)
nsubj(make, it)
root(ROOT, make)
det(sense, no)
obj(make, sense)
case(he, to)
nmod(sense, he)
punct(make, .)
nsubj(whirl, he)
root(ROOT, whirl)
advmod(whirl, around)
punct(whirl, ,)
advmod(hot, suddenly)
xcomp(whirl, hot)
advmod(over, all)
advmod(whirl, over)
punct(whirl, ,)
advcl(whirl, find)
det(man, the)
obj(find, man)
nsubj(stand, who)
aux(stand, have)
aux(stand, be)
acl:relcl(man, stand)
case(he, before)
obl(stand, he)
det(moment, a)
amod(moment, few)
obj(stand, moment)
advmod(stand, back)
punct(nail, ,)
advcl(stand, nail)
obj(nail, he)
case(spot, to)
det(spot, the)
obl(nail, spot)
case(which, on)
obl(stand, which)
nsubj(stand, he)
advmod(stand, now)
acl:relcl(spot, stand)
punct(mouth, ,)
amod(mouth, open)
punct(mouth, -)
conj(stand, mouth)
punct(whirl, .)
punct(whirl, ``)
nsubj(Listen, you)
punct(Listen, ,)
root(ROOT, Listen)
punct(Listen, !)
punct(Listen, !)
punct(name, --)
parataxis(Listen, name)
nmod:poss(contradiction, William)
flat(William, Foster)
case(William, 's)
nummod(contradiction, four)
compound(contradiction, Internal)
obj(name, contradiction)
case(Capitalism, in)
nmod(contradiction, Capitalism)
punct(Quick, .)
parataxis(name, Quick)
punct(Quick, --)
root(ROOT, Quick)
punct(Quick, --)
advmod(Quick, now)
punct(Quick, '')
punct(Quick, !)
punct(Quick, !)
det(man, the)
nsubj(shrank, man)
root(ROOT, shrank)
case(fury, before)
det(fury, the)
amod(fury, hot)
obl(shrank, fury)
punct(shrank, ,)
advcl(shrank, search)
advmod(search, frantically)
case(answer, for)
det(answer, the)
obl(search, answer)
punct(wake, .)
nsubj(wake, Finnegan)
parataxis(shrank, wake)
compound:prt(wake, up)
punct(shrank, .)
expl(be, there)
root(ROOT, be)
det(hell, a)
nsubj(be, hell)
case(noise, of)
det(noise, a)
nmod(hell, noise)
det(time, this)
obl:tmod(be, time)
case(morning, of)
nmod(time, morning)
punct(be, .)
nsubj(stare, he)
root(ROOT, stare)
compound:prt(stare, out)
det(window, the)
obj(stare, window)
punct(stare, .)
case(sake, for)
nmod:poss(sake, Christ)
case(Christ, 's)
obl(stare, sake)
punct(stare, !)
punct(stare, !)
det(sky, the)
amod(sky, whole)
compound(sky, fucken)
nsubj:pass(cave, sky)
aux:pass(cave, be)
root(ROOT, cave)
obl(cave, in)
punct(cave, !)
punct(cave, !)
nsubj(look, he)
root(ROOT, look)
case(source, for)
det(source, the)
obl(look, source)
case(noise, of)
det(noise, the)
nmod(source, noise)
nsubj(awaken, that)
aux(awaken, have)
acl:relcl(noise, awaken)
obj(awaken, he)
punct(look, .)
nsubj(prick, it)
cop(prick, be)
det(prick, that)
root(ROOT, prick)
vocative(prick, Coughlin)
punct(prick, .)
root(ROOT, what)
det(hell, the)
nsubj(what, hell)
cop(what, be)
nsubj(what, he)
advmod(what, up)
case(now, to)
obl(up, now)
punct(what, ?)
punct(what, ?)
advmod(drop, why)
aux(drop, do)
advmod(drop, not)
nsubj(drop, he)
root(ROOT, drop)
xcomp(drop, dead)
punct(drop, ?)
punct(drop, ?)
advmod(miss, how)
aux(miss, do)
nsubj(miss, they)
root(ROOT, miss)
obj(miss, he)
mark(get, when)
nsubj(get, they)
advcl(miss, get)
obj(get, slater)
punct(miss, ?)
punct(miss, ?)
parataxis(miss, how)
punct(miss, ?)
punct(miss, ?)
advmod(ask, then)
nsubj(ask, he)
aux(ask, be)
root(ROOT, ask)
iobj(ask, himself)
det(question, the)
amod(question, usual)
amod(morning, early)
compound(question, morning)
obj(ask, question)
punct(ask, :)
obj(doin, what)
det(Hell, the)
obj(doin, Hell)
aux(doin, be)
nsubj(doin, I)
root(ROOT, doin)
advmod(doin, here)
punct(doin, ?)
punct(doin, ?)
cop(house, be)
nsubj(house, this)
det(house, a)
amod(house, nut-)
root(ROOT, house)
punct(house, ?)
punct(house, ?)
cop(nut, be)
nsubj(nut, I)
root(ROOT, nut)
punct(nut, ?)
punct(nut, ?)
cop(real, be)
nsubj(real, this)
case(real, for)
root(ROOT, real)
punct(real, ?)
punct(real, ?)
aux(dreamin, be)
nsubj(dreamin, I)
root(ROOT, dreamin)
punct(dreamin, ?)
punct(dreamin, ?)
case(somewhere, from)
obl(come, somewhere)
case(hut, in)
det(hut, the)
nmod(somewhere, hut)
root(ROOT, come)
nmod:poss(voice, Coughlin)
case(Coughlin, 's)
obj(come, voice)
punct(come, .)
punct(come, ``)
advmod(long, how)
advmod(study, long)
aux(study, do)
nsubj(study, you)
root(ROOT, study)
punct(study, ?)
punct(study, ?)
advmod(long, how)
advmod(buddy, long)
punct(buddy, ,)
root(ROOT, buddy)
punct(buddy, '')
punct(buddy, ?)
punct(buddy, ?)
punct(buddy, ``)
case(sake, for)
nmod:poss(sake, Christ)
case(Christ, 's)
root(ROOT, sake)
punct(sake, '')
punct(sake, !)
punct(sake, ! )
det(voice, a)
nsubj(pleaded, voice)
root(ROOT, pleaded)
punct(pleaded, .)
punct(pleaded, ``)
aux(Christsake, do)
advmod(Christsake, not)
root(ROOT, Christsake)
obj(Christsake, I)
punct(Christsake, ,)
vocative(Christsake, buddy)
punct(Christsake, !)
punct(Christsake, !)
advmod(answer, just)
root(ROOT, answer)
punct(answer, .)
discourse(answer, C'mon)
punct(answer, --)
punct(mon, ')
parataxis(answer, mon)
punct(mon, !)
punct(answer, !)
punct(hero, '')
nsubj(hero, I)
cop(hero, be)
det(hero, no)
parataxis(answer, hero)
punct(hero, .)
aux(start, do)
nsubj(start, I)
root(ROOT, start)
det(war, the)
amod(war, damn)
obj(start, war)
punct(start, ?)
punct(start, ?)
advmod(start, automatically)
punct(start, ,)
nsubj(start, Finnegan)
root(ROOT, start)
xcomp(start, go)
advmod(go, over)
nmod:poss(lesson, today)
case(today, 's)
obj(go, lesson)
punct(start, .)
nsubj(rot, Capitalism)
parataxis(start, rot)
case(core, from)
det(core, the)
obl(rot, core)
punct(start, .)
aux(start, do)
nsubj(start, I)
root(ROOT, start)
det(war, the)
amod(war, damn)
obj(start, war)
punct(start, ?)
punct(start, ?)
nsubj(do, who)
root(ROOT, do)
punct(do, ?)
punct(do, ?)
nsubj(one, that)
cop(one, be)
det(one, a)
amod(one, good)
root(ROOT, one)
punct(one, . )
nsubj(think, I)
root(ROOT, think)
nsubj(know, I)
ccomp(think, know)
punct(think, .)
advmod(uncle, why)
aux(uncle, do)
advmod(uncle, not)
parataxis(think, uncle)
nsubj(mind, Sam)
xcomp(uncle, mind)
nmod:poss(business, he)
amod(business, own)
compound(business, fucken)
obj(mind, business)
punct(think, ?)
punct(think, ?)
nsubj(bet, I)
aux(bet, will)
parataxis(think, bet)
nsubj(do, both)
advmod(do, together)
ccomp(bet, do)
punct(think, . )
nsubj(bet, I)
root(ROOT, bet)
punct(bet, .)
advmod(fuck, so)
root(ROOT, fuck)
obj(fuck, they)
det(they, both)
punct(fuck, .)
discourse(fuck, Goddamn)
punct(fuck, .)
discourse(fuck, Goddammit)
punct(fuck, .)
advmod(let, just)
root(ROOT, let)
obj(let, I)
xcomp(let, go)
advmod(go, home)
case(Jersey, to)
obl(go, Jersey)
punct(go, ,)
advmod(go, back)
case(shore, to)
det(shore, the)
obl(back, shore)
punct(go, ,)
discourse(Jesus, oh)
punct(Jesus, ,)
appos(shore, Jesus)
punct(Jesus, ,)
det(shore, the)
appos(Jesus, shore)
punct(let, .)
det(wave, the)
nsubj(breakin, wave)
root(ROOT, breakin)
advmod(breakin, in)
case(you, on)
obl(breakin, you)
cc(girl, and)
nmod:poss(girl, you)
conj(you, girl)
case(night, at)
obl(breakin, night)
advmod(night, there)
case(beach, on)
det(beach, the)
amod(beach, warm)
obl(breakin, beach)
case(moonlight, in)
det(moonlight, the)
nmod(beach, moonlight)
punct(breakin, .)
mark(do, if)
nsubj(do, I)
aux(do, hafta)
advcl(do, do)
obj(do, this)
mark(stay, to)
xcomp(do, stay)
xcomp(stay, alive)
case(God, by)
obl(alive, God)
nsubj(do, I)
aux(do, will)
root(ROOT, do)
obj(do, it)
punct(do, . )
nsubj(hate, I)
root(ROOT, hate)
det(army, the)
amod(army, goddamn)
obj(hate, army)
case(day, from)
det(day, the)
amod(day, first)
obl(hate, day)
nsubj(get, I)
parataxis(hate, get)
advmod(get, in)
advmod(get, anyhow)
punct(hate, .)
det(prick, all)
nsubj(run, prick)
case(Coughlin, like)
nmod(prick, Coughlin)
root(ROOT, run)
obj(run, it)
advmod(run, anyway)
punct(way, ,)
nummod(way, one)
obl:npmod(run, way)
cc(another, or)
conj(way, another)
punct(run, .)
root(ROOT, fuck)
obj(fuck, they)
punct(fuck, .)
nsubj(roll, he)
root(ROOT, roll)
compound:prt(roll, over)
cc(try, and)
conj(roll, try)
mark(shut, to)
xcomp(try, shut)
compound:prt(shut, out)
det(noise, the)
obj(shut, noise)
punct(shut, ,)
advmod(louder, now)
advmod(louder, much)
parataxis(shut, louder)
punct(roll, .)
nsubj(snuggle, he)
root(ROOT, snuggle)
case(blanket, into)
det(blanket, the)
obl(snuggle, blanket)
punct(snuggle, .)
nsubj(dream, Brandon)
root(ROOT, dream)
punct(dream, .)
nsubj(sit, he)
aux(sit, be)
root(ROOT, sit)
case(top, on)
obl(sit, top)
case(log, of)
det(log, a)
nmod(top, log)
nsubj(spin, which)
aux(spin, be)
acl:relcl(log, spin)
advmod(spin, round)
cc(around, and)
conj(round, around)
case(water, in)
det(water, the)
obl(spin, water)
punct(sit, . )
det(river, a)
root(ROOT, river)
punct(river, ,)
amod(river, wide)
case(Missouri, as)
det(Missouri, the)
obl(wide, Missouri)
punct(Missouri, ,)
advmod(run, where)
nsubj(run, it)
acl:relcl(Missouri, run)
case(place, by)
nmod:poss(place, he)
obl(run, place)
punct(river, .)
det(log, the)
nsubj(spin, log)
aux(spin, be)
root(ROOT, spin)
punct(spin, .)
cc(be, but)
nsubj(be, he)
root(ROOT, be)
advmod(be, not)
punct(be, .)
advmod(what, so)
root(ROOT, what)
punct(what, ?)
punct(so, ?)
advmod(spin, why)
aux(spin, should)
nsubj(spin, I)
aux(spin, be)
root(ROOT, spin)
advmod(spin, just)
mark(spin, because)
det(log, the)
compound(log, goddamn)
nsubj(spin, log)
aux(spin, be)
advcl(spin, spin)
punct(spin, ?)
punct(spin, ?)
punct(ask, ()
nsubj(ask, he)
parataxis(spin, ask)
obj(ask, this)
compound:prt(ask, out)
xcomp(ask, loud)
punct(hear, ,)
cc(hear, but)
det(one, no)
nsubj(hear, one)
conj(ask, hear)
obj(hear, it)
case(noise, over)
det(noise, the)
amod(noise, other)
obl(hear, noise)
case(hut, in)
det(hut, the)
nmod(noise, hut)
punct(noise, ))
punct(hear, .)
advmod(stand, over)
case(bank, on)
det(bank, the)
obl(over, bank)
punct(stand, ,)
det(bank, the)
amod(bank, west)
nsubj(stand, bank)
punct(stand, ,)
det(man, a)
nsubj(stand, man)
parataxis(spin, stand)
punct(stand, ,)
advcl(stand, call)
case(he, to)
obl(call, he)
punct(stand, .)
nsubj(make, he)
aux(make, could)
advmod(make, not)
root(ROOT, make)
compound:prt(make, out)
obj(say, what)
nsubj(say, he)
aux(say, be)
ccomp(make, say)
punct(make, .)
det(doubt, no)
obl:npmod(have, doubt)
nsubj(have, it)
root(ROOT, have)
mark(do, to)
xcomp(have, do)
case(log, with)
det(log, the)
obl(do, log)
punct(have, .)
advmod(concerned, why)
aux(concerned, should)
nsubj(concerned, he)
cop(concerned, be)
root(ROOT, concerned)
punct(concerned, ?)
punct(concerned, ?)
nsubj(persuasive, Rousseau)
cop(persuasive, be)
advmod(persuasive, so)
root(ROOT, persuasive)
mark(convinced, that)
nsubj(convinced, Voltaire)
cop(convinced, be)
advmod(convinced, almost)
ccomp(persuasive, convinced)
mark(burn, that)
nsubj(burn, he)
aux(burn, should)
ccomp(convinced, burn)
nmod:poss(book, he)
obj(burn, book)
punct(burn, ,)
advmod(burn, too)
punct(persuasive, .)
cc(attack, but)
mark(ride, while)
det(man, the)
nummod(man, two)
nsubj(ride, man)
aux(ride, be)
advcl(attack, ride)
case(country, into)
det(country, the)
obl(ride, country)
punct(country, ,)
advmod(go, where)
nsubj(go, they)
aux(go, be)
acl:relcl(country, go)
case(dinner, to)
obl(go, dinner)
punct(attack, ,)
nsubj:pass(attack, they)
aux:pass(attack, be)
root(ROOT, attack)
case(dark, in)
det(dark, the)
obl(attack, dark)
case(forest, of)
det(forest, the)
nmod(dark, forest)
case(band, by)
det(band, a)
nmod(dark, band)
case(thief, of)
nmod(band, thief)
punct(band, ,)
nsubj(strip, who)
acl:relcl(band, strip)
obj(strip, they)
case(everything, of)
obl(strip, everything)
punct(everything, ,)
case(most, include)
nmod(everything, most)
case(clothes, of)
nmod:poss(clothes, they)
nmod(most, clothes)
punct(attack, .)
punct(attack, ``)
nsubj(man, you)
aux(man, must)
cop(man, be)
det(man, a)
advmod(learn, very)
amod(man, learn)
root(ROOT, man)
punct(man, '')
punct(say, ,)
parataxis(man, say)
obj(say, Voltaire)
case(one, to)
obl(say, one)
case(bandit, of)
det(bandit, the)
nmod(one, bandit)
punct(say, .)
punct(say, ``)
det(man, a)
amod(man, learn)
root(ROOT, man)
punct(man, '')
punct(man, ?)
punct(man, ?)
det(bandit, the)
nsubj(laugh, bandit)
root(ROOT, laugh)
case(face, in)
nmod:poss(face, he)
obl(laugh, face)
punct(laugh, .)
cc(persever, but)
nsubj(persever, Voltaire)
root(ROOT, persever)
punct(persever, .)
nsubj(go, he)
root(ROOT, go)
case(chief, to)
det(chief, the)
obl(go, chief)
obl:npmod(go, himself)
punct(go, .)
punct(go, ``)
case(university, at)
det(university, what)
obj(study, university)
aux(study, do)
nsubj(study, you)
root(ROOT, study)
punct(study, '')
punct(study, ?)
punct(study, ?)
nsubj(ask, he)
root(ROOT, ask)
punct(ask, .)
nsubj(refuse, he)
root(ROOT, refuse)
mark(believe, to)
xcomp(refuse, believe)
mark(attend, that)
det(chief, the)
compound(chief, bandit)
nsubj(attend, chief)
advmod(attend, never)
ccomp(believe, attend)
det(institution, a)
amod(institution, higher)
obj(attend, institution)
punct(refuse, .)
punct(refuse, ``)
mark(become, to)
aux(become, have)
advcl(say, become)
advmod(corrupt, so)
xcomp(become, corrupt)
punct(corrupt, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
punct(say, ,)
punct(say, ``)
advmod(study, surely)
nsubj(study, you)
aux(study, must)
aux(study, have)
ccomp(say, study)
amod(art, many)
obj(study, art)
cc(science, and)
conj(art, science)
punct(art, '')
punct(study, .)
det(chief, the)
nsubj(study, chief)
punct(chief, ,)
acl(chief, annoyed)
case(question, by)
det(question, these)
obl(annoyed, question)
punct(knock, ,)
conj(study, knock)
obj(knock, Voltaire)
advmod(knock, down)
cc(shout, and)
conj(knock, shout)
case(he, at)
obl(shout, he)
mark(go, that)
nsubj(go, he)
advmod(only, not)
advmod(go, only)
advmod(go, never)
ccomp(shout, go)
case(school, to)
det(school, any)
obl(go, school)
punct(learn, ,)
cc(learn, but)
advmod(learn, never)
advmod(learn, even)
conj(go, learn)
advmod(read, how)
mark(read, to)
ccomp(learn, read)
punct(learn, .)
mark(reach, when)
advmod(reach, finally)
det(man, the)
nummod(man, two)
amod(man, bedraggle)
nsubj(reach, man)
advcl(read, reach)
nmod:poss(friend, they)
nmod:poss(home, friend)
case(friend, 's)
obj(reach, home)
punct(arouse, ,)
nmod:poss(fear, Voltaire)
case(Voltaire, 's)
nsubj:pass(arouse, fear)
aux:pass(arouse, be)
advmod(again, once)
advmod(arouse, again)
conj(reach, arouse)
punct(say, .)
mark(place, for)
nsubj(place, it)
cop(place, be)
det:predet(place, such)
det(place, a)
amod(place, distinguished)
root(ROOT, place)
punct(place, ,)
case(work, with)
amod(work, such)
amod(work, fine)
nmod(place, work)
case(art, of)
nmod(work, art)
cc(library, and)
det:predet(library, such)
det(library, a)
amod(library, big)
conj(work, library)
punct(place, ,)
mark(be, that)
expl(be, there)
aux(be, can)
conj(place, be)
amod(doubt, little)
nsubj(be, doubt)
cc(become, but)
mark(become, that)
det(owner, the)
nsubj(become, owner)
aux(become, have)
acl(doubt, become)
xcomp(become, deprave)
case(culture, by)
det:predet(culture, all)
det(culture, this)
obl(deprave, culture)
punct(place, . )
case(surprise, to)
nmod:poss(surprise, Voltaire)
case(Voltaire, 's)
obl(give, surprise)
punct(give, ,)
advmod(give, however)
punct(give, ,)
nmod:poss(host, they)
nsubj(give, host)
root(ROOT, give)
iobj(give, they)
amod(clothes, fresh)
obj(give, clothes)
mark(put, to)
acl(clothes, put)
compound:prt(put, on)
punct(open, ,)
conj(give, open)
nmod:poss(purse, he)
obj(open, purse)
mark(lend, to)
advcl(open, lend)
iobj(lend, they)
obj(lend, money)
cc(sit, and)
conj(lend, sit)
obj(sit, they)
compound:prt(sit, down)
case(dinner, before)
det(dinner, a)
amod(dinner, good)
obl(sit, dinner)
punct(give, .)
advmod(ask, immediately)
case(dinner, after)
obl(ask, dinner)
punct(ask, ,)
advmod(ask, however)
punct(ask, ,)
nsubj(ask, Rousseau)
root(ROOT, ask)
case(favor, for)
advmod(favor, still)
det(favor, another)
obl(ask, favor)
punct(ask, .)
aux(have, could)
nsubj(have, he)
root(ROOT, have)
obj(have, pen)
cc(paper, and)
conj(pen, paper)
punct(have, ,)
discourse(have, please)
punct(have, ?)
punct(have, ?)
nsubj(hurry, he)
cop(hurry, be)
case(hurry, in)
det(hurry, a)
root(ROOT, hurry)
mark(write, to)
acl(hurry, write)
det(essay, another)
obj(write, essay)
case(culture, against)
nmod(essay, culture)
punct(hurry, .)
nsubj(impromptu, such)
cop(impromptu, be)
det(impromptu, the)
parataxis(hurry, impromptu)
obj(give, that)
nsubj(give, Voltaire)
acl:relcl(impromptu, give)
case(howl, to)
obl(give, howl)
case(laughter, of)
nmod(howl, laughter)
case(souci, at)
compound(souci, Sans)
nmod(laughter, souci)
cc(circulate, and)
nsubj:pass(circulate, that)
aux:pass(circulate, be)
advmod(circulate, soon)
conj(impromptu, circulate)
case(manuscript, in)
obl(circulate, manuscript)
case(circle, throughout)
det(circle, the)
amod(circle, literary)
nmod(manuscript, circle)
case(Europe, of)
nmod(circle, Europe)
punct(circle, ,)
mark(print, to)
aux:pass(print, be)
acl(circle, print)
advmod(later, sometime)
advmod(print, later)
punct(name, ,)
cc(name, but)
case(name, with)
det(name, the)
conj(print, name)
case(Timon, of)
nmod(name, Timon)
case(athen, of)
nmod(Timon, athen)
punct(misanthrope, ,)
det(misanthrope, the)
amod(misanthrope, famous)
appos(Timon, misanthrope)
punct(misanthrope, ,)
acl(misanthrope, substitute)
case(that, for)
obl(substitute, that)
case(Rousseau, of)
nmod(that, Rousseau)
punct(hurry, .)
advmod(cruel, how)
root(ROOT, cruel)
punct(cruel, !)
punct(cruel, !)
cc(understandable, but)
case(time, at)
det(time, the)
amod(time, same)
obl(understandable, time)
advmod(understandable, how)
root(ROOT, understandable)
punct(understandable, .)
advmod(understand, how)
aux(understand, could)
det(rich, the)
nsubj(understand, rich)
punct(understand, ,)
mark(make, for)
det(life, whom)
nsubj:pass(make, life)
aux:pass(make, be)
advcl(understand, make)
advmod(simple, so)
xcomp(make, simple)
punct(understand, ,)
advmod(understand, ever)
root(ROOT, understand)
det(subterfuge, the)
obj(understand, subterfuge)
punct(lie, ,)
det(lie, the)
conj(subterfuge, lie)
punct(fraud, ,)
det(fraud, the)
conj(subterfuge, fraud)
punct(error, ,)
det(error, the)
conj(subterfuge, error)
punct(sin, ,)
conj(error, sin)
cc(crime, and)
advmod(crime, even)
conj(subterfuge, crime)
case(which, to)
obl(drive, which)
det(poor, the)
nsubj:pass(drive, poor)
aux:pass(drive, be)
acl:relcl(error, drive)
case(effort, in)
nmod:poss(effort, they)
obl(drive, effort)
mark(overcome, to)
acl(effort, overcome)
det(advantage, the)
amod(advantage, great)
obj(overcome, advantage)
det(rich, the)
nsubj(have, rich)
acl:relcl(advantage, have)
case(race, in)
det(race, the)
obl(have, race)
case(life, of)
nmod(race, life)
punct(understand, ?)
punct(understand, ?)
advmod(understand, how)
punct(understand, ,)
case(example, for)
obl(understand, example)
punct(understand, ,)
aux(understand, could)
det(Voltaire, a)
nsubj(understand, Voltaire)
root(ROOT, understand)
det(predicament, the)
amod(predicament, strange)
obj(understand, predicament)
case(which, in)
obl(find, which)
det(Rousseau, a)
nsubj(find, Rousseau)
aux(find, would)
acl:relcl(predicament, find)
obj(find, himself)
mark(acquire, when)
punct(acquire, ,)
advmod(acquire, soon)
case(furor, after)
det(furor, the)
obl(acquire, furor)
case(Discourse, of)
nmod:poss(Discourse, he)
amod(Discourse, first)
nmod(furor, Discourse)
punct(acquire, ,)
nsubj(acquire, he)
conj(understand, acquire)
advmod(acquire, still)
det(title, another)
obj(acquire, title)
case(fame, to)
nmod(title, fame)
punct(understand, ?)
punct(understand, ?)
det(time, this)
root(ROOT, time)
case(musician, as)
det(musician, a)
nmod(time, musician)
punct(time, .)
case(composer, as)
det(composer, a)
obl(dream, composer)
punct(composer, .)
advmod(dream, ever)
mark(begin, since)
nsubj(begin, he)
aux(begin, have)
advmod(begin, first)
advcl(dream, begin)
mark(study, to)
xcomp(begin, study)
obj(study, music)
cc(teach, and)
mark(teach, to)
conj(study, teach)
obj(teach, it)
punct(dream, ,)
nsubj(dream, Rousseau)
aux(dream, have)
root(ROOT, dream)
mark(pierce, of)
advcl(dream, pierce)
advmod(pierce, through)
case(fame, to)
obl(pierce, fame)
case(result, as)
det(result, the)
obl(pierce, result)
case(opera, of)
det(opera, a)
amod(opera, successful)
nmod(result, opera)
punct(dream, .)
cc(great, but)
nmod:poss(facility, he)
nsubj(great, facility)
case(genre, in)
det(genre, this)
nmod(facility, genre)
cop(great, be)
advmod(great, not)
root(ROOT, great)
punct(great, .)
cc(fail, and)
nmod:poss(effort, he)
nsubj(fail, effort)
mark(get, to)
acl(effort, get)
det(performance, a)
obj(get, performance)
case(muse, for)
nmod:poss(muse, he)
compound(muse, Gallant)
nmod(performance, muse)
advmod(fail, invariably)
root(ROOT, fail)
punct(fail, .)
cc(reason, and)
case(reason, for)
amod(reason, good)
root(ROOT, reason)
punct(reason, .)
nmod:poss(music, he)
amod(music, operatic)
nsubj(have, music)
root(ROOT, have)
amod(merit, little)
obj(have, merit)
punct(have, .)
cc(amused, but)
advmod(amused, then)
nummod(day, one)
obl:tmod(amused, day)
punct(amused, ,)
mark(visit, while)
case(visit, on)
det(week, a)
nmod:poss(visit, week)
case(week, 's)
advcl(amused, visit)
case(country, to)
det(country, the)
nmod(visit, country)
advmod(visit, home)
case(jeweler, of)
det(jeweler, a)
amod(jeweler, retire)
amod(jeweler, swiss)
obl(home, jeweler)
punct(amused, ,)
nsubj(amused, Rousseau)
root(ROOT, amused)
det(company, the)
obj(amused, company)
case(melody, with)
det(melody, a)
amod(melody, few)
amod(melody, little)
obl(amused, melody)
nsubj(write, he)
aux(write, have)
acl:relcl(melody, write)
punct(write, ,)
case(which, to)
obl(attach, which)
nsubj(attach, he)
advcl(write, attach)
det(importance, no)
amod(importance, great)
obj(attach, importance)
punct(amused, .)
nsubj(amazed, he)
cop(amazed, be)
advmod(amazed, really)
root(ROOT, amazed)
mark(discover, to)
xcomp(amazed, discover)
det(guest, the)
amod(guest, other)
obj(discover, guest)
advmod(excited, so)
xcomp(discover, excited)
case(song, about)
det(song, these)
amod(song, delicate)
amod(song, little)
obl(excited, song)
punct(amazed, .)
punct(amazed, ``)
root(ROOT, put)
det(song, a)
amod(song, few)
amod(song, such)
obj(put, song)
advmod(put, together)
punct(put, '')
punct(put, ,)
nsubj(urge, they)
parataxis(put, urge)
obj(urge, he)
punct(put, .)
punct(put, ``)
advcl(believe, String)
obj(String, they)
case(sort, onto)
det(sort, some)
obl(String, sort)
case(plot, of)
amod(plot, little)
nmod(sort, plot)
punct(have, ,)
cc(have, and)
nsubj(have, you)
aux(have, will)
conj(String, have)
det(operetta, a)
amod(operetta, delightful)
obj(have, operetta)
punct(have, '')
punct(believe, .)
nsubj(believe, he)
aux(believe, do)
advmod(believe, not)
root(ROOT, believe)
obj(believe, they)
punct(believe, .)
punct(believe, ``)
root(ROOT, Nonsense)
punct(Nonsense, '')
punct(Nonsense, ,)
nsubj(say, he)
appos(Nonsense, say)
punct(Nonsense, .)
punct(Nonsense, ``)
nsubj(sort, this)
cop(sort, be)
det(sort, the)
root(ROOT, sort)
case(stuff, of)
nmod(sort, stuff)
nsubj(write, I)
acl:relcl(stuff, write)
cc(throw, and)
advmod(throw, then)
conj(sort, throw)
compound:prt(throw, away)
punct(throw, '')
punct(sort, !)
punct(sort, !)
punct(sort, ``)
nsubj(forbid, Heaven)
root(ROOT, forbid)
punct(forbid, '')
punct(forbid, !)
punct(forbid, !)
root(ROOT, cry)
det(lady, the)
obj(cry, lady)
punct(cry, ,)
parataxis(cry, enchant)
case(music, by)
nmod:poss(music, he)
obl(enchant, music)
punct(cry, .)
punct(cry, ``)
nsubj(make, you)
aux(make, must)
root(ROOT, make)
det(opera, a)
obj(make, opera)
case(material, out)
case(material, of)
det(material, this)
obl(make, material)
punct(make, '')
punct(make, .)
cc(leave, and)
nsubj(leave, they)
aux(leave, would)
advmod(leave, not)
conj(make, leave)
compound:prt(leave, off)
xcomp(leave, argue)
cc(plead, and)
conj(argue, plead)
mark(promise, until)
nsubj(promise, he)
aux(promise, have)
advcl(plead, promise)
punct(make, .)
discourse(irony, oh)
punct(irony, ,)
det(irony, the)
root(ROOT, irony)
cc(bitterness, and)
det(bitterness, the)
conj(irony, bitterness)
case(it, of)
nmod(bitterness, it)
punct(irony, !)
punct(irony, !)
mark(close, that)
case(year, after)
det:predet(year, all)
nmod:poss(year, he)
obl(close, year)
case(effort, of)
nmod(year, effort)
mark(become, to)
acl(year, become)
det(composer, a)
xcomp(become, composer)
punct(composer, ,)
nsubj(now, he)
aux(now, should)
advmod(close, now)
punct(close, ,)
advmod(close, now)
mark(reply, when)
nsubj(reply, he)
aux(reply, be)
advmod(reply, still)
advmod(reply, stoutly)
advcl(close, reply)
case(critic, to)
det(critic, the)
obl(reply, critic)
case(Discourse, of)
nmod:poss(Discourse, he)
nmod(critic, Discourse)
case(Arts, on)
det(Arts, the)
nmod(Discourse, Arts)
cc(Sciences, and)
conj(Arts, Sciences)
punct(close, ,)
cop(close, be)
advmod(close, so)
root(ROOT, close)
case(success, to)
det(success, a)
obl(close, success)
case(music, in)
nmod(success, music)
cc(have, and)
conj(close, have)
mark(reject, to)
xcomp(have, reject)
obj(reject, it)
punct(close, .)
cc(appear, or)
case(least, at)
advmod(appear, least)
root(ROOT, appear)
mark(reject, to)
xcomp(appear, reject)
obj(reject, it)
punct(appear, !)
punct(appear, !)
cc(do, but)
obj(do, what)
amod(what, else)
aux(do, could)
nsubj(do, he)
root(ROOT, do)
punct(do, ?)
punct(do, ?)
nsubj(on, you)
aux(on, could)
advmod(on, not)
root(ROOT, on)
det(hand, the)
nummod(hand, one)
obj(on, hand)
xcomp(on, decry)
det(art, the)
obj(decry, art)
cc(practice, and)
case(time, at)
det(time, the)
amod(time, same)
obl(practice, time)
conj(on, practice)
obj(practice, they)
punct(on, ,)
aux(practice, could)
nsubj(could, you)
punct(on, ?)
punct(on, ?)
discourse(literature, well)
punct(literature, ,)
discourse(literature, yes)
punct(literature, ,)
advmod(literature, perhaps)
case(literature, in)
root(ROOT, literature)
punct(argue, ,)
mark(argue, since)
nsubj(argue, you)
aux(argue, could)
advcl(literature, argue)
mark(keep, that)
nsubj(keep, you)
aux(keep, could)
advmod(keep, not)
ccomp(argue, keep)
xcomp(keep, silent)
case(feeling, about)
nmod:poss(feeling, you)
obl(silent, feeling)
case(literature, against)
nmod(feeling, literature)
cc(involved, and)
advmod(involved, so)
cop(involved, be)
conj(keep, involved)
case(spite, in)
obl(involved, spite)
case(yourself, of)
nmod(spite, yourself)
punct(involved, .)
cc(music, but)
advmod(music, now)
root(ROOT, music)
advmod(music, too)
punct(music, ?)
punct(music, ?)
discourse(music, no)
punct(music, .)
nsubj(much, that)
aux(much, would)
cop(much, be)
advmod(much, too)
root(ROOT, much)
punct(much, !)
punct(much, !)
cc(Rameau, and)
det(fault, the)
nsubj(Rameau, fault)
punct(Rameau, ,)
advmod(Rameau, of)
fixed(of, course)
punct(Rameau, ,)
cop(Rameau, be)
root(ROOT, Rameau)
case(Rameau, 's)
punct(Rameau, .)
det(fault, the)
nsubj(Rameau, fault)
cop(Rameau, be)
root(ROOT, Rameau)
case(Rameau, 's)
cc(that, and)
conj(Rameau, that)
case(culture, of)
det(culture, the)
amod(culture, whole)
nmod(that, culture)
case(age, of)
det(age, this)
amod(age, parisian)
nmod(culture, age)
punct(Rameau, .)
mark(type, for)
nsubj(type, it)
cop(type, be)
nmod:poss(type, Rameau)
case(Rameau, 's)
parataxis(Rameau, type)
case(music, of)
nmod(type, music)
obj(try, that)
nsubj(try, he)
aux(try, have)
aux(try, be)
acl:relcl(music, try)
mark(write, to)
xcomp(try, write)
punct(write, ,)
cc(write, and)
mark(write, that)
nsubj(write, he)
aux(write, could)
advmod(write, not)
conj(try, write)
punct(Rameau, .)
det(song, these)
amod(song, little)
nsubj(nothings, song)
punct(nothings, ,)
advmod(nothings, however)
punct(nothings, ,)
cop(nothings, be)
amod(nothings, sweet)
root(ROOT, nothings)
case(heart, from)
det(heart, the)
nmod(nothings, heart)
punct(memory, ,)
amod(memory, tender)
conj(heart, memory)
case(childhood, of)
nmod:poss(childhood, he)
nmod(memory, childhood)
punct(melody, ,)
amod(melody, little)
conj(nothings, melody)
obj(hum, that)
nsubj(hum, anyone)
aux(hum, could)
acl:relcl(melody, hum)
cc(make, and)
nsubj(make, that)
aux(make, would)
conj(nothings, make)
nummod(want, one)
obj(make, want)
mark(weep, to)
acl(want, weep)
punct(nothings, .)
cc(appear, but)
discourse(appear, no)
punct(appear, .)
nsubj(appear, he)
aux(appear, could)
advmod(appear, not)
root(ROOT, appear)
case(composer, as)
det(composer, a)
obl(appear, composer)
advmod(appear, now)
punct(appear, .)
det(glory, that)
nsubj(forbidden, glory)
punct(crave, ,)
parataxis(forbidden, crave)
case(long, for)
advmod(long, so)
obl(crave, long)
punct(forbidden, ,)
cop(forbidden, be)
advmod(forbidden, now)
root(ROOT, forbidden)
case(he, to)
obl(forbidden, he)
punct(forbidden, .)
advmod(make, still)
punct(make, ,)
advmod(lady, just)
case(lady, for)
det(lady, the)
obl(make, lady)
punct(make, ,)
cc(make, and)
advmod(this, just)
case(this, for)
obl(make, this)
advmod(make, once)
punct(make, ,)
case(weekend, for)
det(weekend, this)
nummod(weekend, one)
obl(make, weekend)
case(country, in)
det(country, the)
nmod(weekend, country)
punct(make, ,)
nsubj(make, he)
aux(make, would)
root(ROOT, make)
det(piece, a)
amod(piece, little)
obj(make, piece)
case(melody, out)
case(melody, of)
nmod:poss(melody, he)
obl(make, melody)
punct(make, .)
det(lady, the)
nsubj(delighted, lady)
cop(delighted, be)
root(ROOT, delighted)
cc(applaud, and)
nsubj:pass(applaud, Jean)
flat(Jean, jacque)
aux:pass(applaud, be)
conj(delighted, applaud)
punct(delighted, .)
cc(go, and)
nsubj(go, everyone)
root(ROOT, go)
mark(work, to)
xcomp(go, work)
mark(learn, to)
advcl(work, learn)
det(part, the)
obj(learn, part)
obj(write, which)
nsubj(write, he)
acl:relcl(part, write)
punct(go, .)
cc(insist, but)
advmod(insist, then)
punct(insist, ,)
mark(give, after)
det(operetta, the)
amod(operetta, little)
nsubj:pass(give, operetta)
aux(give, have)
aux:pass(give, be)
advcl(insist, give)
nmod:poss(render, its)
amod(render, feeble)
amod(render, amateur)
obj(give, render)
punct(insist, ,)
nsubj(insist, everyone)
root(ROOT, insist)
mark(good, that)
expl(good, it)
cop(good, be)
advmod(good, too)
ccomp(insist, good)
mark(lose, to)
aux:pass(lose, be)
advcl(good, lose)
advmod(lose, forever)
punct(have, ,)
cc(have, and)
mark(have, that)
det(Academy, the)
compound(Academy, Royal)
nsubj(have, Academy)
case(music, of)
nmod(Academy, music)
aux(have, must)
advmod(have, now)
conj(good, have)
det(manuscript, the)
obj(have, manuscript)
mark(give, in)
fixed(in, order)
mark(give, to)
advcl(have, give)
iobj(give, it)
det(performance, the)
advmod(rate, really)
amod(rate, first)
punct(rate, -)
compound(performance, rate)
obj(give, performance)
nsubj(merit, it)
acl:relcl(performance, merit)
punct(insist, .)
nsubj(aware, Rousseau)
cop(aware, be)
root(ROOT, aware)
mark(seem, that)
nsubj(seem, he)
aux(seem, must)
ccomp(aware, seem)
case(hypocrite, like)
det(hypocrite, a)
obl(seem, hypocrite)
punct(seem, ,)
advcl(seem, stand)
advmod(stand, there)
cc(argue, and)
conj(stand, argue)
mark(permit, that)
nsubj(permit, he)
aux(permit, could)
advmod(permit, not)
advmod(permit, possibly)
ccomp(argue, permit)
det(performance, a)
amod(performance, public)
obj(permit, performance)
punct(aware, .)
det(lady, the)
nsubj(understand, lady)
advmod(understand, especially)
aux(understand, could)
advmod(understand, not)
root(ROOT, understand)
nsubj(troubled, what)
ccomp(understand, troubled)
obj(troubled, he)
punct(contradiction, .)
det(contradiction, a)
parataxis(understand, contradiction)
punct(contradiction, ?)
punct(understand, ?)
discourse(what, Bah)
punct(what, ,)
root(ROOT, what)
cop(what, be)
det(contradiction, a)
nsubj(what, contradiction)
case(life, in)
nmod:poss(life, one)
case(one, 's)
nmod(contradiction, life)
punct(what, ?)
punct(what, ?)
det(woman, every)
nsubj(have, woman)
aux(have, have)
root(ROOT, have)
det(experience, the)
obj(have, experience)
mark(say, of)
acl(experience, say)
discourse(say, no)
mark(mean, when)
nsubj(mean, she)
advcl(say, mean)
discourse(mean, yes)
punct(say, ,)
cc(say, and)
conj(mean, say)
ccomp(say, yes)
mark(mean, when)
nsubj(mean, she)
advcl(have, mean)
discourse(mean, no)
punct(have, .)
nsubj(have, Rousseau)
parataxis(have, have)
mark(admit, to)
xcomp(have, admit)
mark(would, that)
mark(agree, though)
nsubj(agree, he)
aux(agree, could)
advmod(agree, not)
advcl(would, agree)
case(performance, to)
det(performance, a)
amod(performance, public)
obl(agree, performance)
punct(would, ,)
nsubj(would, he)
ccomp(admit, would)
advmod(would, indeed)
punct(would, ,)
advmod(satisfaction, just)
case(satisfaction, for)
nmod:poss(satisfaction, he)
amod(satisfaction, own)
amod(satisfaction, private)
obl(love, satisfaction)
punct(love, ,)
advmod(love, dearly)
conj(would, love)
mark(know, to)
xcomp(love, know)
advmod(sound, how)
nmod:poss(work, he)
nsubj(sound, work)
aux(sound, would)
ccomp(know, sound)
mark(do, when)
advcl(sound, do)
case(musician, by)
amod(musician, professional)
obl(do, musician)
cc(voice, and)
case(voice, by)
amod(voice, train)
conj(musician, voice)
punct(have, .)
punct(have, ``)
nsubj(like, I)
aux(like, would)
advmod(like, simply)
root(ROOT, like)
mark(know, to)
xcomp(like, know)
mark(good, if)
nsubj(good, it)
cop(good, be)
advmod(good, as)
advcl(know, good)
mark(seem, as)
nsubj(seem, you)
advmod(seem, kind)
nsubj(seem, people)
advcl(good, seem)
mark(think, to)
xcomp(seem, think)
punct(say, '')
punct(like, ,)
nsubj(say, he)
parataxis(like, say)
punct(say, .)
nsubj(say, Duclos)
punct(Duclos, ,)
det(historian, the)
appos(Duclos, historian)
punct(point, ,)
conj(say, point)
compound:prt(point, out)
case(Jean, to)
obl(point, Jean)
flat(Jean, jacque)
mark(impossible, that)
nsubj(impossible, this)
cop(impossible, be)
ccomp(point, impossible)
punct(like, .)
det(musician, the)
nsubj(rehearse, musician)
case(Opera, of)
det(Opera, the)
compound(Opera, Royal)
nmod(musician, Opera)
aux(rehearse, would)
advmod(rehearse, not)
root(ROOT, rehearse)
det(work, a)
obj(rehearse, work)
advmod(see, merely)
mark(see, to)
advcl(rehearse, see)
advmod(sound, how)
nsubj(sound, it)
aux(sound, would)
ccomp(see, sound)
punct(rehearse, .)
advmod(satisfy, merely)
mark(satisfy, to)
root(ROOT, satisfy)
det(author, the)
nmod:poss(curiosity, author)
case(author, 's)
obj(satisfy, curiosity)
punct(satisfy, .)
nsubj(agree, Rousseau)
root(ROOT, agree)
punct(agree, .)
cc(recall, but)
nsubj(recall, he)
root(ROOT, recall)
mark(have, that)
nsubj(have, Rameau)
aux(have, have)
advmod(have, once)
ccomp(recall, have)
det(performance, a)
amod(performance, private)
obj(have, performance)
case(armide, of)
nmod:poss(armide, he)
compound(armide, opera)
nmod(performance, armide)
punct(performance, ,)
case(door, behind)
amod(door, close)
obl(have, door)
punct(have, ,)
advmod(himself, just)
case(himself, for)
nmod(door, himself)
advmod(himself, alone)
punct(understand, .)
nsubj(understand, Duclos)
parataxis(recall, understand)
nsubj(bother, what)
aux(bother, be)
ccomp(understand, bother)
obj(bother, Rousseau)
punct(understand, :)
mark(become, that)
det(writer, the)
nsubj(become, writer)
case(prosopopoeia, of)
det(prosopopoeia, the)
nmod(writer, prosopopoeia)
case(Fabricius, of)
nmod(prosopopoeia, Fabricius)
aux(become, should)
advmod(become, now)
ccomp(bother, become)
xcomp(become, know)
case(writer, as)
det(writer, the)
obl(know, writer)
case(operetta, of)
det(operetta, a)
amod(operetta, amusing)
amod(operetta, little)
nmod(writer, operetta)
punct(recall, .)
nsubj(paradoxical, that)
aux(paradoxical, would)
advmod(paradoxical, certainly)
cop(paradoxical, be)
root(ROOT, paradoxical)
punct(paradoxical, .)
cc(think, but)
nsubj(think, Duclos)
root(ROOT, think)
nsubj(see, he)
ccomp(think, see)
det(way, a)
obj(see, way)
advmod(see, out)
punct(think, .)
punct(think, ``)
root(ROOT, let)
obj(let, I)
xcomp(let, do)
det(submit, the)
obj(do, submit)
case(Academy, to)
det(Academy, the)
compound(Academy, Royal)
nmod(submit, Academy)
punct(Academy, '')
punct(let, ,)
nsubj(suggest, he)
parataxis(let, suggest)
punct(let, .)
punct(let, ``)
nmod:poss(name, you)
nsubj(appear, name)
aux(appear, will)
advmod(appear, never)
root(ROOT, appear)
punct(appear, .)
det(one, no)
nsubj(suspect, one)
aux(suspect, will)
advmod(suspect, even)
root(ROOT, suspect)
mark(work, that)
nsubj(work, it)
cop(work, be)
nmod:poss(work, you)
ccomp(suspect, work)
punct(work, '')
punct(suspect, .)
mark(agree, to)
mark(agree, that)
nsubj(agree, Rousseau)
aux(agree, could)
ccomp(suspect, agree)
punct(suspect, .)
cc(turn, but)
advmod(twist, now)
det(twist, what)
amod(twist, crazy)
root(ROOT, twist)
cc(turn, and)
conj(twist, turn)
case(emotion, of)
nmod:poss(emotion, he)
obl(turn, emotion)
punct(twist, !)
punct(twist, !)
root(ROOT, afraid)
case(one, at)
obl(afraid, one)
cc(time, and)
det(time, the)
amod(time, same)
obl(afraid, time)
advmod(turn, that)
nmod:poss(work, he)
nsubj:pass(turn, work)
aux(turn, might)
aux:pass(turn, be)
acl:relcl(time, turn)
compound:prt(turn, down)
punct(afraid, --)
nsubj(blow, which)
aux(blow, would)
cop(blow, be)
det(blow, a)
ccomp(turn, blow)
case(pride, to)
nmod:poss(pride, he)
nmod(blow, pride)
advmod(know, even)
mark(know, though)
det(one, no)
nsubj(know, one)
advcl(blow, know)
nsubj(author, he)
cop(author, be)
det(author, the)
ccomp(know, author)
punct(know, --)
cc(accept, and)
mark(accept, that)
det(work, the)
nsubj:pass(accept, work)
aux(accept, would)
aux:pass(accept, be)
conj(author, accept)
punct(betray, ,)
cc(betray, and)
advmod(betray, then)
mark(betray, that)
nmod:poss(feeling, he)
amod(feeling, violent)
nsubj(betray, feeling)
case(matter, in)
det(matter, the)
nmod(feeling, matter)
aux(betray, would)
advmod(betray, certainly)
conj(accept, betray)
advmod(deeply, how)
advmod(concerned, deeply)
xcomp(betray, concerned)
nsubj(spite, he)
cop(spite, be)
case(spite, in)
obl(concerned, spite)
case(himself, of)
nmod(spite, himself)
punct(afraid, .)
cc(anxious, and)
advmod(anxious, how)
root(ROOT, anxious)
det(lover, this)
nsubj(applause, lover)
case(obscurity, of)
nmod(lover, obscurity)
cop(applause, be)
case(applause, for)
ccomp(anxious, applause)
punct(anxious, !)
punct(anxious, !)
cc(suffer, and)
advmod(tear, thus)
advcl(suffer, tear)
case(desire, between)
nmod:poss(desire, he)
obl(tear, desire)
mark(know, to)
aux:pass(know, be)
acl(desire, know)
case(composer, as)
det(composer, the)
obl(know, composer)
case(opera, of)
det(opera, a)
amod(opera, successful)
nmod(composer, opera)
cc(necessity, and)
det(necessity, the)
conj(composer, necessity)
mark(remain, of)
acl(necessity, remain)
xcomp(remain, true)
case(desire, to)
nmod:poss(desire, he)
amod(desire, proclaim)
obl(true, desire)
case(anonymity, for)
nmod(desire, anonymity)
punct(suffer, ,)
nsubj(suffer, Rousseau)
root(ROOT, suffer)
case(week, through)
amod(week, several)
amod(week, painful)
obl(suffer, week)
punct(suffer, .)
det:predet(emotion, all)
det(emotion, these)
nsubj:pass(screw, emotion)
aux:pass(screw, be)
root(ROOT, screw)
compound:prt(screw, up)
case(height, to)
amod(height, new)
obl(screw, height)
mark(ensue, when)
punct(ensue, ,)
case(acceptance, after)
obl(ensue, acceptance)
cc(rehearsal, and)
det(rehearsal, the)
amod(rehearsal, first)
conj(acceptance, rehearsal)
punct(ensue, ,)
expl(ensue, there)
conj(screw, ensue)
det:predet(buzz, such)
det(buzz, a)
obj(ensue, buzz)
case(excitement, of)
nmod(buzz, excitement)
case(lover, among)
amod(lover, parisian)
compound(lover, music)
nmod(excitement, lover)
obj(have, that)
nsubj(have, Duclos)
acl:relcl(lover, have)
mark(come, to)
xcomp(have, come)
xcomp(come, run)
case(Rousseau, to)
obl(run, Rousseau)
mark(inform, to)
advcl(come, inform)
obj(inform, he)
mark(reach, that)
det(news, the)
nsubj(reach, news)
aux(reach, have)
ccomp(inform, reach)
det(superintendent, the)
obj(reach, superintendent)
case(amusement, of)
det(King, the)
nmod:poss(amusement, King)
case(King, 's)
nmod(superintendent, amusement)
punct(demand, ,)
cc(demand, and)
mark(demand, that)
nsubj(demand, he)
aux(demand, be)
advmod(demand, now)
conj(reach, demand)
mark(offer, that)
det(work, the)
nsubj:pass(offer, work)
aux:pass(offer, be)
ccomp(demand, offer)
advmod(offer, first)
case(palace, at)
det(palace, the)
compound(summer, royal)
compound(palace, summer)
obl(offer, palace)
case(Fontainebleau, of)
nmod(palace, Fontainebleau)
punct(screw, .)
root(ROOT, imagine)
det(honor, the)
obj(imagine, honor)
case(it, of)
nmod(honor, it)
punct(imagine, !)
punct(imagine, !)
punct(imagine, ``)
obj(ask, what)
cop(what, be)
nmod:poss(answer, you)
nsubj(what, answer)
punct(answer, '')
punct(ask, ?)
punct(ask, ?)
nsubj(ask, Jean)
flat(Jean, jacque)
root(ROOT, ask)
punct(ask, ,)
advcl(ask, strive)
mark(appear, to)
xcomp(strive, appear)
xcomp(appear, unimpressed)
punct(ask, .)
punct(ask, ``)
nsubj(refuse, I)
root(ROOT, refuse)
punct(refuse, '')
punct(refuse, ,)
nsubj(say, Duclos)
ccomp(refuse, say)
punct(refuse, .)
punct(refuse, ``)
obj(do, what)
amod(what, else)
aux(do, could)
nsubj(do, I)
parataxis(incense, do)
punct(do, ?)
punct(incense, ?)
nsubj(incense, Monsieur)
flat(Monsieur, De)
flat(Monsieur, Cury)
cop(incense, be)
root(ROOT, incense)
punct(incense, ,)
advmod(incense, of)
fixed(of, course)
punct(incense, .)
cc(say, but)
nsubj(say, I)
root(ROOT, say)
nsubj(have, I)
aux(have, would)
advmod(have, first)
ccomp(say, have)
mark(get, to)
xcomp(have, get)
det(author, the)
nmod:poss(permission, author)
case(author, 's)
obj(get, permission)
punct(say, .)
cc(certain, and)
nsubj(certain, I)
cop(certain, be)
root(ROOT, certain)
nsubj(refuse, he)
aux(refuse, would)
ccomp(certain, refuse)
punct(refuse, '')
punct(certain, .)
advmod(infuriate, how)
parataxis(certain, infuriate)
det:predet(this, all)
nsubj(infuriate, this)
cop(infuriate, be)
punct(certain, !)
punct(certain, !)
advmod(come, why)
aux(come, have)
advmod(come, not)
det(success, this)
nsubj(come, success)
root(ROOT, come)
case(he, to)
obl(come, he)
mark(plunge, before)
nsubj(plunge, he)
aux(plunge, have)
advcl(come, plunge)
case(Discourse, into)
nmod:poss(Discourse, he)
obl(plunge, Discourse)
punct(commit, ,)
cc(commit, and)
mark(commit, before)
nsubj(commit, he)
aux(commit, have)
conj(come, commit)
obj(commit, himself)
case(life, to)
det(life, a)
obl(commit, life)
case(austerity, of)
nmod(life, austerity)
cc(denial, and)
conj(austerity, denial)
punct(come, ?)
punct(come, ?)
advmod(open, now)
punct(court, ,)
mark(open, when)
nsubj(open, everything)
aux(open, be)
root(ROOT, open)
compound:prt(open, up)
case(he, to)
obl(open, he)
punct(court, --)
advmod(court, even)
det(court, the)
parataxis(open, court)
case(Louis, of)
nmod(court, Louis)
nummod(Louis, 15)
punct(court, !)
punct(court, !)
punct(court, --)
nsubj(have, he)
root(ROOT, have)
mark(play, to)
xcomp(have, play)
det(role, a)
obj(play, role)
case(effacement, of)
compound(effacement, self)
punct(effacement, -)
nmod(role, effacement)
punct(have, .)
advmod(have, back)
cc(forth, and)
conj(back, forth)
nsubj(have, Duclos)
root(ROOT, have)
mark(go, to)
xcomp(have, go)
punct(go, ,)
case(M., between)
obl(go, M.)
flat(M., De)
flat(M., Cury)
cc(Jean, and)
conj(M., Jean)
flat(Jean, jacque)
cc(Duke, and)
case(Duke, between)
det(Duke, the)
compound(D'Aumont, Duke)
conj(M., D'Aumont)
cc(Jean, and)
conj(D'Aumont, Jean)
flat(Jean, jacque)
advmod(go, again)
punct(go, ,)
case(operetta, as)
nmod:poss(operetta, he)
amod(operetta, little)
obl(go, operetta)
punct(operetta, ,)
det(Soothsayer, the)
compound(Soothsayer, Village)
appos(operetta, Soothsayer)
punct(take, ,)
mark(unperformed, though)
advmod(unperformed, still)
amod(Soothsayer, unperformed)
punct(take, ,)
conj(unperformed, take)
compound:prt(take, on)
advmod(more, ever)
amod(importance, more)
obj(take, importance)
punct(take, .)
cc(news, and)
cc(news, of)
fixed(of, course)
det(news, the)
conj(importance, news)
case(who, of)
obj(begin, who)
det(composer, the)
nsubj(begin, composer)
aux(begin, be)
aux(begin, do)
advmod(begin, finally)
acl:relcl(news, begin)
mark(get, to)
xcomp(begin, get)
advmod(get, around)
case(friend, among)
nmod:poss(friend, he)
amod(friend, closest)
obl(get, friend)
punct(have, .)
cc(know, but)
nsubj(keep, they)
punct(keep, ,)
advmod(keep, naturally)
punct(keep, ,)
root(ROOT, keep)
nmod:poss(secret, he)
obj(keep, secret)
advmod(keep, well)
punct(know, ,)
cc(know, and)
det(public, the)
nsubj(know, public)
case(large, at)
nmod(public, large)
conj(keep, know)
advmod(excitement, only)
case(excitement, of)
det(excitement, a)
amod(excitement, great)
obl(know, excitement)
case(circle, in)
amod(circle, musical)
cc(court, and)
conj(musical, court)
nmod(excitement, circle)
punct(keep, .)
advmod(titillating, how)
root(ROOT, titillating)
nsubj(be, it)
cop(titillating, be)
mark(go, to)
ccomp(be, go)
case(people, among)
obl(go, people)
nsubj(know, who)
aux(know, do)
advmod(know, not)
acl:relcl(people, know)
obj(know, he)
case(composer, as)
det(composer, the)
obl(know, composer)
punct(talk, ,)
cc(talk, but)
nsubj(talk, who)
conj(be, talk)
case(term, in)
det(term, the)
advmod(glow, most)
amod(term, glow)
obl(talk, term)
case(promise, of)
det(promise, the)
nmod(term, promise)
case(piece, of)
det(piece, the)
nmod(promise, piece)
mark(hear, after)
aux(hear, have)
acl(promise, hear)
det(rehearsal, the)
amod(rehearsal, first)
obj(hear, rehearsal)
punct(be, .)
det(furor, the)
nsubj(such, furor)
cop(such, be)
root(ROOT, such)
mark(pretend, that)
nsubj(pretend, people)
nsubj(squir, who)
aux(squir, could)
advmod(squir, not)
advmod(squir, possibly)
aux(squir, have)
acl:relcl(people, squir)
nmod:poss(way, they)
obj(squir, way)
case(rehearsal, into)
det(rehearsal, the)
obl(squir, rehearsal)
aux(pretend, be)
ccomp(such, pretend)
mark(intimate, that)
nsubj(intimate, they)
cop(intimate, be)
ccomp(pretend, intimate)
case(affair, with)
det(affair, the)
amod(affair, whole)
obl(intimate, affair)
cc(sensational, and)
mark(sensational, that)
nsubj(sensational, it)
aux(sensational, would)
cop(sensational, be)
conj(intimate, sensational)
punct(such, .)
cc(find, and)
advcl(find, listen)
case(conversation, to)
det:predet(conversation, such)
det(conversation, a)
obl(listen, conversation)
nummod(morning, one)
obl:tmod(listen, morning)
mark(take, while)
advcl(listen, take)
det(cup, a)
obj(take, cup)
case(chocolate, of)
nmod(cup, chocolate)
case(cafe, in)
det(cafe, a)
obl(take, cafe)
punct(find, ,)
nsubj(find, Rousseau)
root(ROOT, find)
obj(find, himself)
xcomp(find, bath)
case(perspiration, in)
obl(bath, perspiration)
punct(tremble, ,)
conj(bath, tremble)
case(authorship, lest)
nmod:poss(authorship, he)
obl(tremble, authorship)
conj(find, become)
xcomp(become, know)
punct(make, ,)
cc(make, and)
case(time, at)
det(time, the)
amod(time, same)
nmod(dream, time)
obl(make, dream)
case(effect, of)
det(effect, the)
amod(effect, startling)
nmod(dream, effect)
nsubj(make, he)
aux(make, would)
conj(find, make)
mark(proclaim, if)
nsubj(proclaim, he)
aux(proclaim, should)
advcl(make, proclaim)
obj(proclaim, himself)
advmod(proclaim, suddenly)
case(composer, as)
det(composer, the)
obl(proclaim, composer)
punct(find, .)
nsubj(feel, he)
root(ROOT, feel)
obj(feel, himself)
advmod(feel, now)
punct(feel, ,)
mark(say, as)
nsubj(say, he)
nmod:npmod(he, himself)
advcl(feel, say)
case(confession, in)
nmod:poss(confession, he)
obl(say, confession)
punct(say, ,)
case(point, at)
det(point, a)
amod(point, crucial)
obl(say, point)
case(life, of)
nmod:poss(life, he)
nmod(point, life)
punct(feel, .)
cc(why, and)
nsubj(why, that)
cop(why, be)
root(ROOT, why)
punct(why, ,)
case(day, on)
det(day, the)
obl(why, day)
case(performance, of)
det(performance, the)
nmod(day, performance)
punct(why, ,)
mark(call, when)
det(carriage, a)
nsubj(call, carriage)
case(stable, from)
det(stable, the)
compound(stable, royal)
nmod(carriage, stable)
advcl(bother, call)
mark(take, to)
xcomp(call, take)
obj(take, he)
case(palace, to)
det(palace, the)
obl(take, palace)
punct(bother, ,)
nsubj(bother, he)
aux(bother, do)
advmod(bother, not)
parataxis(why, bother)
mark(shave, to)
xcomp(bother, shave)
punct(why, .)
case(contrary, on)
det(contrary, the)
obl(pleased, contrary)
punct(pleased, ,)
nsubj(pleased, he)
cop(pleased, be)
root(ROOT, pleased)
mark(show, that)
nmod:poss(face, he)
nsubj(show, face)
ccomp(pleased, show)
det(neglect, a)
obj(show, neglect)
case(day, of)
amod(day, several)
nmod(neglect, day)
punct(pleased, .)
root(ROOT, see)
obj(see, he)
case(condition, in)
det(condition, that)
obl(see, condition)
punct(enter, ,)
cc(enter, and)
advmod(enter, about)
mark(enter, to)
conj(see, enter)
det(hall, the)
obj(enter, hall)
advmod(present, where)
det(King, the)
obj(enter, King)
punct(Queen, ,)
det(Queen, the)
conj(King, Queen)
punct(family, ,)
det(family, the)
amod(family, whole)
compound(family, royal)
conj(King, family)
cc(member, and)
det:predet(member, all)
det(member, the)
conj(family, member)
case(aristocracy, of)
det(aristocracy, the)
amod(aristocracy, highest)
nmod(member, aristocracy)
aux(present, would)
cop(present, be)
acl:relcl(hall, present)
punct(try, ,)
nsubj(try, Grimm)
cc(Abbe, and)
det(Abbe, the)
conj(Grimm, Abbe)
flat(Abbe, Raynal)
cc(other, and)
nsubj(try, other)
conj(present, try)
mark(stop, to)
xcomp(try, stop)
obj(stop, he)
punct(try, .)
punct(try, ``)
nsubj(go, you)
aux(go, can)
advmod(go, not)
root(ROOT, go)
case(way, in)
det(way, that)
obl(go, way)
punct(go, '')
punct(go, !)
punct(go, !)
nsubj(cry, they)
root(ROOT, cry)
punct(cry, .)
punct(cry, ``)
root(ROOT, why)
advmod(why, not)
punct(why, '')
punct(why, ?)
punct(why, ?)
nsubj(ask, Jean)
flat(Jean, jacque)
root(ROOT, ask)
punct(ask, .)
punct(ask, ``)
nsubj(go, who)
aux(go, be)
root(ROOT, go)
mark(stop, to)
xcomp(go, stop)
obj(stop, I)
punct(go, '')
punct(go, ?)
punct(go, ?)
punct(go, ``)
nsubj(dress, you)
aux(dress, have)
advmod(dress, not)
root(ROOT, dress)
case(occasion, for)
det(occasion, the)
obl(dress, occasion)
punct(dress, '')
punct(dress, !)
punct(dress, !)
nsubj(point, they)
root(ROOT, point)
compound:prt(point, out)
case(he, to)
obl(point, he)
punct(point, .)
punct(point, ``)
nsubj:pass(dress, I)
aux:pass(dress, be)
root(ROOT, dress)
mark(be, as)
nsubj(be, I)
advmod(be, always)
advcl(dress, be)
punct(say, '')
punct(say, ,)
nsubj(say, Rousseau)
parataxis(dress, say)
punct(dress, .)
punct(dress, ``)
cc(better, neither)
root(ROOT, better)
cc(worse, nor)
conj(better, worse)
punct(better, '')
punct(better, .)
punct(better, ``)
case(home, at)
obl(argue, home)
punct(argue, ,)
discourse(argue, yes)
punct(argue, '')
punct(argue, ,)
nsubj(argue, they)
root(ROOT, argue)
punct(argue, .)
punct(argue, ``)
cc(here, but)
root(ROOT, here)
nsubj(here, you)
cop(here, be)
case(palace, in)
det(palace, the)
obl(here, palace)
punct(here, .)
expl(be, there)
root(ROOT, be)
det(King, the)
nsubj(be, King)
punct(be, .)
cc(Madame, and)
root(ROOT, Madame)
flat(Madame, De)
flat(Madame, Pompadour)
punct(Madame, '')
punct(Madame, .)
punct(Madame, ``)
mark(here, if)
nsubj(here, they)
cop(here, be)
advcl(have, here)
punct(have, ,)
advmod(have, then)
advmod(have, surely)
nsubj(have, I)
root(ROOT, have)
det(right, the)
obj(have, right)
mark(here, to)
cop(here, be)
acl(right, here)
punct(have, '')
punct(say, ,)
nsubj(say, Rousseau)
parataxis(have, say)
punct(say, .)
punct(say, ``)
cc(right, and)
advmod(more, even)
advmod(right, more)
root(ROOT, right)
punct(right, .)
mark(composer, since)
nsubj(composer, I)
cop(composer, be)
det(composer, the)
root(ROOT, composer)
punct(composer, '')
punct(composer, !)
punct(composer, !)
punct(composer, ``)
cc(condition, but)
case(condition, in)
det:predet(condition, such)
det(condition, a)
amod(condition, slovenly)
root(ROOT, condition)
punct(condition, '')
punct(condition, .)
punct(condition, ``)
nsubj(slovenly, what)
cop(slovenly, be)
advcl(ask, slovenly)
case(I, about)
obl(slovenly, I)
punct(slovenly, '')
punct(ask, ?)
punct(ask, ?)
nsubj(ask, Rousseau)
root(ROOT, ask)
punct(ask, .)
punct(ask, ``)
cop(slovenliness, be)
nsubj(slovenliness, it)
case(slovenliness, because)
fixed(because, of)
nmod:poss(slovenliness, my)
root(ROOT, slovenliness)
mark(grow, that)
nsubj(grow, hair)
acl:relcl(slovenliness, grow)
case(face, on)
nmod:poss(face, my)
obl(grow, face)
punct(slovenliness, ?)
punct(slovenliness, ?)
advmod(grow, surely)
nsubj(grow, it)
aux(grow, would)
root(ROOT, grow)
advmod(grow, there)
mark(wash, whether)
nsubj(wash, I)
advcl(grow, wash)
obj(wash, myself)
cc(not, or)
conj(wash, not)
punct(grow, . )
det(year, a)
nummod(year, hundred)
obl:npmod(ago, year)
advmod(wear, ago)
nsubj(wear, I)
aux(wear, would)
aux(wear, have)
root(ROOT, wear)
det(beard, a)
obj(wear, beard)
case(pride, with)
obl(wear, pride)
punct(wear, .)
cc(stand, and)
nsubj(stand, those)
case(beard, without)
nmod(those, beard)
aux(stand, would)
aux(stand, have)
root(ROOT, stand)
compound:prt(stand, out)
mark(dress, as)
advmod(dress, not)
advcl(stand, dress)
case(occasion, for)
det(occasion, the)
obl(dress, occasion)
punct(stand, .)
advmod(change, now)
nsubj(change, time)
aux(change, have)
root(ROOT, change)
punct(pretend, ,)
cc(pretend, and)
nsubj(pretend, I)
aux(pretend, must)
conj(change, pretend)
det(hair, that)
nsubj(grow, hair)
aux(grow, do)
advmod(grow, not)
ccomp(pretend, grow)
case(face, on)
nmod:poss(face, my)
obl(grow, face)
punct(change, .)
nsubj(fashion, that)
cop(fashion, be)
det(fashion, the)
root(ROOT, fashion)
punct(fashion, .)
cc(king, and)
nsubj(king, fashion)
cop(king, be)
det(king, the)
amod(king, real)
root(ROOT, king)
advmod(king, here)
punct(king, . )
advmod(Louis, not)
root(ROOT, Louis)
nummod(Louis, 15)
punct(Louis, ,)
punct(Louis, ,)
mark(obey, since)
advmod(obey, even)
nsubj(obey, he)
advcl(Louis, obey)
punct(Louis, .)
advmod(like, now)
punct(like, ,)
mark(mind, if)
nsubj(mind, you)
aux(mind, do)
advmod(mind, not)
advcl(like, mind)
punct(like, ,)
nsubj(like, I)
aux(like, should)
root(ROOT, like)
mark(hear, to)
xcomp(like, hear)
nmod:poss(piece, my)
amod(piece, own)
obj(hear, piece)
xcomp(hear, perform)
punct(perform, '')
punct(like, .)
cc(feel, but)
advmod(feel, of)
fixed(of, course)
fixed(of, behind)
nmod:poss(boldness, he)
obl(feel, boldness)
nsubj(feel, he)
aux(feel, do)
advmod(feel, not)
conj(like, feel)
xcomp(feel, bold)
case(all, at)
obl(bold, all)
punct(like, .)
nsubj(tremble, he)
root(ROOT, tremble)
mark(fail, lest)
nmod:poss(piece, he)
nsubj(fail, piece)
aux(fail, should)
advcl(tremble, fail)
punct(tremble, .)
cc(fear, and)
nsubj(addition, this)
case(addition, in)
root(ROOT, addition)
case(fear, to)
nmod:poss(fear, he)
amod(fear, usual)
nmod(addition, fear)
mark(people, of)
cop(people, be)
case(people, among)
acl(fear, people)
case(society, of)
amod(society, high)
nmod(people, society)
punct(people, ,)
nmod:poss(fear, he)
conj(people, fear)
mark(make, of)
acl(fear, make)
det(remark, some)
amod(remark, inane)
cc(inappropriate, or)
conj(inane, inappropriate)
obj(make, remark)
punct(addition, .)
cc(deeper, and)
advmod(deeper, even)
root(ROOT, deeper)
case(that, than)
obl(deeper, that)
punct(deeper, :)
nmod:poss(fear, he)
nsubj(lest, fear)
parataxis(deeper, lest)
case(hall, in)
det(hall, this)
amod(hall, close)
obl(lest, hall)
nsubj(itch, he)
aux(itch, should)
advmod(itch, suddenly)
ccomp(lest, itch)
mark(relieve, to)
advcl(itch, relieve)
obj(relieve, himself)
punct(deeper, .)
aux(walk, could)
nsubj(walk, he)
root(ROOT, walk)
advmod(walk, out)
case(midst, in)
det(midst, the)
obl(walk, midst)
case(piece, of)
nmod:poss(piece, he)
nmod(midst, piece)
punct(walk, ?)
punct(walk, ?)
root(ROOT, here)
punct(here, ,)
case(court, before)
det(court, the)
obl(here, court)
punct(here, ?)
punct(here, ?)
case(King, before)
det(King, the)
root(ROOT, King)
punct(King, ?)
punct(King, ?)
nsubj(time, it)
cop(time, be)
det(time, the)
amod(time, first)
root(ROOT, time)
nsubj(laugh, any)
case(we, of)
nmod(any, we)
aux(laugh, have)
acl:relcl(time, laugh)
mark(begin, since)
det(morning, the)
nsubj(begin, morning)
advcl(laugh, begin)
punct(time, .)
det(rider, the)
nsubj(good, rider)
case(Concord, from)
nmod(rider, Concord)
cop(good, be)
advmod(good, as)
root(ROOT, good)
case(word, as)
nmod:poss(word, he)
obl(good, word)
punct(good, .)
nsubj(come, he)
root(ROOT, come)
xcomp(come, spur)
cc(whooping, and)
conj(spur, whooping)
compound:prt(whooping, down)
det(road, the)
obj(whooping, road)
punct(come, ,)
nmod:poss(horse, he)
nsubj(kick, horse)
conj(spur, kick)
compound:prt(kick, up)
obj(kick, cloud)
case(dust, of)
nmod(cloud, dust)
punct(shout, ,)
conj(kick, shout)
punct(come, :)
punct(come, ``)
nsubj(ancome, they)
cop(ancome, be)
root(ROOT, ancome)
punct(ancome, !)
punct(ancome, !)
case(God, by)
obl(ancome, God)
punct(ancome, ,)
nsubj(ancome, they)
cop(ancome, be)
root(ROOT, ancome)
punct(ancome, ,)
nsubj(be, they)
parataxis(ancome, be)
punct(ancome, '')
punct(ancome, !)
punct(ancome, !)
nsubj(hear, we)
root(ROOT, hear)
obj(hear, he)
mark(show, before)
nsubj(show, he)
advmod(show, ever)
advcl(hear, show)
punct(hear, ,)
cc(hear, and)
nsubj(hear, we)
conj(hear, hear)
obj(hear, he)
xcomp(hear, yell)
mark(sight, after)
nsubj(sight, he)
cop(sight, be)
case(sight, out)
case(sight, of)
advcl(yell, sight)
punct(hear, .)
nsubj(misjudged, Solomon)
flat(Solomon, Chandler)
aux(misjudged, have)
advmod(misjudged, not)
root(ROOT, misjudged)
det(strength, the)
obj(misjudged, strength)
case(lung, of)
nmod:poss(lung, he)
nmod(strength, lung)
punct(misjudged, ,)
advmod(all, not)
case(all, at)
nmod(lung, all)
punct(misjudged, . )
nsubj(think, I)
root(ROOT, think)
nsubj(hear, you)
aux(hear, could)
aux(hear, have)
ccomp(think, hear)
obj(hear, he)
det(mile, a)
obl:npmod(away, mile)
advmod(hear, away)
punct(burst, ,)
cc(burst, and)
nsubj(burst, he)
aux(burst, be)
conj(think, burst)
case(seam, at)
det(seam, every)
obl(burst, seam)
case(importance, with)
obl(burst, importance)
punct(think, . )
nsubj(observe, I)
aux(observe, have)
root(ROOT, observe)
mark(change, that)
aux(change, be)
compound:prt(change, up)
case(horse, on)
det(horse, a)
obl(up, horse)
ccomp(observe, change)
det(character, the)
amod(character, whole)
obj(change, character)
case(man, of)
det(man, a)
nmod(character, man)
punct(like, ,)
cc(like, and)
mark(up, when)
det(man, a)
advmod(small, very)
amod(man, small)
nsubj(up, man)
cop(up, be)
advcl(like, up)
case(saddle, on)
det(saddle, a)
obl(up, saddle)
punct(like, ,)
nsubj(like, he)
aux(like, would)
conj(observe, like)
mark(prefer, as)
advmod(prefer, not)
advcl(like, prefer)
mark(eat, to)
xcomp(prefer, eat)
nmod:poss(meal, he)
obj(eat, meal)
advmod(eat, there)
punct(observe, . )
nsubj(understandable, that)
cop(understandable, be)
root(ROOT, understandable)
punct(appreciate, ,)
cc(appreciate, and)
nsubj(appreciate, I)
conj(understandable, appreciate)
det(sentiment, the)
obj(appreciate, sentiment)
punct(understandable, .)
case(rider, as)
fixed(as, for)
det(rider, this)
obl(see, rider)
punct(see, ,)
nsubj(see, I)
advmod(see, never)
root(ROOT, see)
obj(see, he)
advmod(see, before)
cc(afterwards, or)
conj(before, afterwards)
cc(see, and)
advmod(see, never)
conj(see, see)
obj(see, he)
xcomp(see, dismount)
punct(see, ,)
advmod(say, so)
mark(stand, whether)
nsubj(stand, he)
advcl(say, stand)
xcomp(stand, tall)
cc(short, or)
conj(tall, short)
case(shoe, in)
nmod:poss(shoe, he)
obl(stand, shoe)
punct(say, ,)
nsubj(say, I)
aux(say, can)
advmod(say, not)
parataxis(see, say)
punct(see, ;)
punct(see, ;)
cc(know, but)
nsubj(know, I)
aux(know, do)
conj(see, know)
mark(give, that)
nsubj(give, he)
ccomp(know, give)
det(tone, the)
compound(tone, day)
obj(give, tone)
cc(distinction, and)
conj(tone, distinction)
punct(see, .)
det(thing, the)
amod(thing, last)
nsubj(line, thing)
case(world, in)
det(world, the)
nmod(thing, world)
nsubj(resemble, that)
acl:relcl(thing, resemble)
det(war, a)
obj(resemble, war)
cop(line, be)
nmod:poss(line, we)
root(ROOT, line)
case(farmer, of)
nmod(line, farmer)
cc(storekeeper, and)
conj(farmer, storekeeper)
cc(mechanic, and)
conj(farmer, mechanic)
conj(line, perch)
case(top, on)
obl(perch, top)
case(wall, of)
det(wall, a)
compound(wall, stone)
nmod(top, wall)
punct(make, ,)
cc(make, and)
det(rider, this)
compound(rider, dashing)
nsubj(make, rider)
conj(line, make)
obj(make, we)
xcomp(make, feel)
det(deal, a)
amod(deal, good)
obj(feel, deal)
amod(alert, sharper)
cc(more, and)
conj(sharper, more)
obj(feel, alert)
case(situation, to)
det(situation, the)
nmod(alert, situation)
punct(line, .)
nsubj(come, we)
root(ROOT, come)
advmod(come, down)
case(wall, off)
det(wall, the)
obl(come, wall)
mark(topple, as)
mark(topple, if)
nsubj(topple, he)
aux(topple, have)
advcl(come, topple)
obj(topple, all)
case(we, of)
nmod(all, we)
punct(crouch, ,)
cc(crouch, and)
nsubj(crouch, we)
conj(come, crouch)
case(it, behind)
obl(crouch, it)
punct(come, . )
nsubj(hear, I)
aux(hear, have)
root(ROOT, hear)
nsubj(talk, people)
ccomp(hear, talk)
case(contempt, with)
obl(talk, contempt)
case(regular, about)
det(regular, the)
amod(regular, british)
nmod(contempt, regular)
punct(prove, ,)
cc(prove, but)
nsubj(prove, that)
advmod(prove, only)
conj(hear, prove)
mark(talk, that)
det(lot, a)
nsubj(talk, lot)
case(people, of)
nmod(lot, people)
ccomp(prove, talk)
case(thing, about)
obl(talk, thing)
case(which, of)
obl(ignorant, which)
nsubj(ignorant, they)
cop(ignorant, be)
advmod(ignorant, deplorably)
acl:relcl(thing, ignorant)
punct(whatever, .)
obj(ignorant, whatever)
nsubj(feel, we)
acl:relcl(whatever, feel)
case(redcoat, about)
det(redcoat, the)
obl(feel, redcoat)
punct(respected, ,)
nsubj(respected, we)
parataxis(hear, respected)
obj(respected, they)
case(term, in)
obl(respected, term)
case(trade, of)
nmod:poss(trade, they)
nmod(term, trade)
punct(trade, ,)
nsubj(kill, which)
aux(kill, be)
acl:relcl(trade, kill)
punct(know, ;)
punct(hear, ;)
cc(know, and)
nsubj(know, I)
conj(hear, know)
mark(nauseate, that)
nsubj(nauseate, I)
punct(I, ,)
appos(I, myself)
punct(nauseate, ,)
cop(nauseate, be)
ccomp(know, nauseate)
case(apprehension, with)
obl(nauseate, apprehension)
cc(fear, and)
conj(apprehension, fear)
cc(soak, and)
mark(soak, that)
nmod:poss(hand, my)
nsubj(soak, hand)
aux(soak, be)
conj(nauseate, soak)
xcomp(soak, wet)
mark(hold, where)
nsubj(hold, they)
advcl(soak, hold)
nmod:poss(gun, my)
obj(hold, gun)
punct(hear, . )
nsubj(want, I)
root(ROOT, want)
mark(wipe, to)
xcomp(want, wipe)
nmod:poss(flint, my)
obj(wipe, flint)
punct(dare, ,)
cc(dare, but)
nsubj(dare, I)
aux(dare, do)
advmod(dare, not)
conj(want, dare)
xcomp(dare, to)
punct(dare, ,)
det(state, the)
obj(dare, state)
nmod:poss(hand, my)
nsubj(in, hand)
cop(in, be)
acl:relcl(state, in)
punct(dare, ,)
advmod(dare, just)
mark(dare, as)
nsubj(dare, I)
aux(dare, do)
advmod(dare, not)
advcl(dare, dare)
mark(do, to)
xcomp(dare, do)
obj(do, anything)
case(priming, about)
det(priming, the)
nmod(anything, priming)
punct(want, .)
det(gun, the)
nsubj(fire, gun)
aux(fire, would)
root(ROOT, fire)
cc(not, or)
conj(fire, not)
punct(fire, ,)
advmod(will, just)
case(will, as)
nsubj(will, chance)
conj(fire, will)
punct(fire, . )
nsubj(put, I)
root(ROOT, put)
det(lot, a)
obl:npmod(more, lot)
amod(trust, more)
obj(put, trust)
case(leg, in)
nmod:poss(leg, my)
nummod(leg, two)
obl(put, leg)
case(gun, than)
case(gun, in)
det(gun, the)
obl(put, gun)
punct(put, ,)
mark(be, because)
det(thing, the)
advmod(important, most)
amod(thing, important)
nsubj(be, thing)
nsubj(learn, I)
aux(learn, have)
acl:relcl(thing, learn)
case(war, about)
obl(learn, war)
conj(put, be)
mark(run, that)
nsubj(run, you)
aux(run, could)
ccomp(be, run)
advmod(run, away)
cc(survive, and)
conj(run, survive)
mark(talk, to)
xcomp(survive, talk)
case(it, about)
obl(talk, it)
punct(put, .)
det(gunfire, the)
nsubj(stop, gunfire)
punct(gunfire, ,)
nsubj(so, which)
cop(so, be)
acl:relcl(gunfire, so)
mark(seem, near)
mark(seem, that)
nsubj(seem, it)
advcl(so, seem)
advmod(piece, just)
det(piece, a)
obj(seem, piece)
case(road, up)
det(road, the)
nmod(piece, road)
advmod(seem, now)
punct(stop, ,)
root(ROOT, stop)
case(enough, for)
advmod(enough, long)
obl(stop, enough)
mark(count, to)
advcl(enough, count)
case(twenty, to)
obl(count, twenty)
punct(stop, ;)
punct(stop, ;)
cc(come, and)
case(interval, in)
det(interval, that)
amod(interval, brief)
obl(come, interval)
punct(come, ,)
det(officer, a)
compound(officer, redcoat)
nsubj(come, officer)
conj(stop, come)
xcomp(come, tear)
case(road, down)
det(road, the)
obl(tear, road)
punct(come, ,)
advcl(tear, whipping)
nmod:poss(fit, he)
compound(fit, horse)
obj(whipping, fit)
mark(kill, to)
advcl(whipping, kill)
punct(stop, . )
nsubj(know, I)
aux(know, do)
advmod(know, not)
root(ROOT, know)
mark(rider, whether)
nsubj(rider, he)
cop(rider, be)
case(rider, after)
nmod:poss(rider, we)
ccomp(know, rider)
punct(rider, ,)
nsubj(go, who)
aux(go, have)
acl:relcl(rider, go)
case(minute, by)
det(minute, a)
obl(go, minute)
advmod(go, before)
punct(scout, ,)
cc(scout, or)
mark(scout, whether)
nsubj(scout, he)
aux(scout, be)
advmod(scout, simply)
conj(go, scout)
obj(scout, condition)
punct(know, ;)
punct(know, ;)
cc(roar, but)
mark(pass, when)
nsubj(pass, he)
advcl(roar, pass)
obj(pass, we)
advmod(pass, by)
punct(roar, ,)
det(musket, a)
nsubj(roar, musket)
conj(know, roar)
punct(reared, ,)
cc(reared, and)
nsubj(reared, he)
conj(roar, reared)
nmod:poss(horse, he)
obj(reared, horse)
punct(swing, ,)
conj(reared, swing)
obj(swing, it)
advmod(swing, around)
punct(begin, ,)
cc(begin, and)
conj(reared, begin)
mark(whip, to)
xcomp(begin, whip)
obj(whip, it)
advmod(whip, back)
case(direction, in)
det(direction, the)
obl(whip, direction)
case(which, from)
obl(come, which)
nsubj(come, he)
aux(come, have)
acl:relcl(direction, come)
punct(know, .)
nsubj(rider, he)
cop(rider, be)
det(rider, a)
amod(rider, fine)
cc(showy, and)
conj(fine, showy)
root(ROOT, rider)
punct(waste, ,)
cc(waste, but)
nmod:poss(skill, he)
nsubj:pass(waste, skill)
aux:pass(waste, be)
conj(rider, waste)
case(we, on)
obl(waste, we)
punct(waste, .)
case(I, from)
case(I, above)
obl(waste, I)
cc(somewhere, and)
conj(I, somewhere)
case(I, behind)
obl(somewhere, I)
punct(crack, ,)
det(rifle, a)
nsubj(crack, rifle)
parataxis(rider, crack)
punct(rider, .)
det(officer, the)
compound(officer, redcoat)
nsubj(collapse, officer)
root(ROOT, collapse)
case(bolster, like)
det(bolster, a)
amod(bolster, puncture)
obl(collapse, bolster)
punct(reared, ,)
cc(reared, and)
det(horse, the)
nsubj(reared, horse)
conj(collapse, reared)
cc(throw, and)
conj(reared, throw)
obj(throw, he)
case(saddle, from)
det(saddle, the)
obl(throw, saddle)
punct(throw, ,)
mark(boot, except)
mark(boot, that)
nsubj(boot, one)
advcl(throw, boot)
obj(boot, foot)
xcomp(boot, catch)
case(stirrup, in)
det(stirrup, the)
obl(catch, stirrup)
punct(collapse, .)
nsubj(leap, half)
acl(half, craze)
case(weight, by)
det(weight, the)
obl(craze, weight)
advcl(craze, drag)
punct(dust, ,)
det(dust, the)
obj(drag, dust)
punct(heat, ,)
cc(heat, and)
det(heat, the)
conj(dust, heat)
punct(leap, ,)
det(horse, the)
nsubj(leap, horse)
root(ROOT, leap)
nmod:poss(wall, we)
obj(leap, wall)
punct(dashing, ,)
conj(leap, dashing)
compound:prt(dashing, out)
det(rider, the)
nmod:poss(brain, rider)
case(rider, 's)
obj(dashing, brain)
case(it, against)
obl(dashing, it)
punct(leave, ,)
cc(leave, and)
conj(dashing, leave)
obj(leave, he)
xcomp(leave, lie)
advmod(lie, there)
case(we, among)
obl(lie, we)
punct(leave, --)
mark(crash, while)
det(horse, the)
nsubj(crash, horse)
advcl(leave, crash)
advmod(crash, away)
case(brush, through)
det(brush, the)
obl(crash, brush)
punct(leap, .)
nsubj(initiation, it)
cop(initiation, be)
nmod:poss(initiation, my)
root(ROOT, initiation)
case(war, to)
nmod(initiation, war)
cc(play, and)
det(war, the)
amod(war, insane)
compound(war, symphony)
nsubj(play, war)
conj(initiation, play)
punct(initiation, ;)
punct(initiation, ;)
case(what, for)
obl(play, what)
aux(happen, have)
acl:relcl(what, happen)
case(common, on)
det(common, the)
obl(happen, common)
cop(terror, be)
advmod(terror, only)
ccomp(happen, terror)
cc(flight, and)
conj(terror, flight)
punct(initiation, ;)
punct(initiation, ;)
cc(definition, but)
det(grin, this)
nsubj(terror, grin)
punct(head, ,)
amod(head, break)
conj(grin, head)
punct(foot, ,)
advmod(ten, not)
nummod(foot, ten)
obl:npmod(away, foot)
advmod(head, away)
case(I, from)
obl(away, I)
punct(definition, ,)
cop(definition, be)
det(definition, the)
amod(definition, sharp)
conj(away, definition)
case(what, of)
nmod(definition, what)
nmod:poss(reality, my)
nsubj(become, reality)
aux(become, have)
acl:relcl(what, become)
punct(initiation, .)
cc(part, and)
advmod(come, now)
det(redcoat, the)
nsubj(come, redcoat)
aux(come, be)
root(ROOT, come)
punct(part, ,)
cc(part, and)
det(gunfire, the)
nsubj(part, gunfire)
cop(part, be)
det(part, a)
conj(come, part)
case(cloud, of)
det(cloud, the)
compound(cloud, dust)
nmod(part, cloud)
case(road, on)
det(road, the)
nmod(part, road)
case(west, to)
det(west, the)
nmod(road, west)
case(we, of)
nmod(west, we)
punct(come, . )
nsubj(state, I)
aux(state, must)
root(ROOT, state)
mark(happen, that)
det(thing, the)
amod(thing, faster)
nsubj(happen, thing)
ccomp(state, happen)
punct(happen, ,)
mark(slower, the)
parataxis(happen, slower)
nsubj(happen, they)
acl:relcl(slower, happen)
punct(state, ;)
punct(state, ;)
det(passage, the)
nsubj(change, passage)
cc(rhythm, and)
conj(passage, rhythm)
case(time, of)
nmod(passage, time)
ccomp(state, change)
punct(incident, ,)
cc(incident, and)
mark(remember, when)
nsubj(remember, I)
advcl(incident, remember)
advmod(remember, back)
case(what, to)
obl(back, what)
acl:relcl(what, happen)
advmod(happen, then)
punct(incident, ,)
det(event, each)
nsubj(incident, event)
cop(incident, be)
det(incident, a)
amod(incident, separate)
cc(frozen, and)
conj(separate, frozen)
conj(state, incident)
punct(state, .)
case(recollection, in)
nmod:poss(recollection, my)
obl(be, recollection)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(interval, a)
amod(interval, long)
nsubj(be, interval)
case(death, between)
det(death, the)
nmod(interval, death)
case(officer, of)
det(officer, the)
nmod(death, officer)
cc(appearance, and)
det(appearance, the)
conj(death, appearance)
case(first, of)
det(first, the)
nmod(appearance, first)
case(redcoat, of)
det(redcoat, the)
amod(redcoat, retreate)
nmod(first, redcoat)
punct(seem, ,)
cc(seem, and)
case(interval, in)
det(interval, that)
obl(seem, interval)
det(cloud, the)
compound(cloud, dust)
nsubj(seem, cloud)
case(road, over)
det(road, the)
nmod(cloud, road)
conj(be, seem)
mark(hover, to)
xcomp(seem, hover)
advmod(hover, indefinitely)
punct(be, .)
cc(come, yet)
nsubj(more, it)
aux(more, could)
advmod(more, not)
aux(more, have)
cop(more, be)
root(ROOT, more)
case(matter, than)
det(matter, a)
obl(more, matter)
case(seconds, of)
nmod(matter, seconds)
punct(come, ,)
cc(come, and)
advmod(come, then)
det(front, the)
nsubj(come, front)
case(army, of)
det(army, the)
amod(army, british)
nmod(front, army)
conj(more, come)
case(view, into)
obl(come, view)
punct(more, .)
nsubj(hour, it)
cop(hour, be)
advmod(hour, only)
root(ROOT, hour)
mark(see, since)
nsubj(see, I)
aux(see, have)
advmod(see, last)
advcl(hour, see)
obj(see, they)
punct(change, ,)
cc(change, but)
nsubj(change, they)
aux(change, have)
conj(see, change)
cc(change, and)
nsubj(change, I)
aux(change, have)
conj(change, change)
punct(hour, .)
case(rank, in)
det(rank, the)
advmod(front, very)
amod(rank, front)
obl(wounded, rank)
punct(wounded, ,)
nummod(man, two)
nsubj:pass(wounded, man)
aux:pass(wounded, be)
root(ROOT, wounded)
cc(stagger, and)
conj(wounded, stagger)
advmod(stagger, along)
punct(wounded, ,)
advcl(wounded, trailing)
obj(trailing, blood)
case(they, behind)
obl(trailing, they)
punct(wounded, .)
det(drummer, no)
root(ROOT, drummer)
advmod(drummer, here)
punct(piper, ,)
det(piper, no)
conj(drummer, piper)
punct(cover, ,)
cc(cover, and)
det(coat, the)
amod(coat, red)
nsubj:pass(cover, coat)
aux:pass(cover, be)
conj(drummer, cover)
case(film, with)
det(film, a)
amod(film, fine)
obl(cover, film)
case(dust, of)
nmod(film, dust)
punct(drummer, .)
nsubj(march, they)
root(ROOT, march)
case(bayonet, with)
obl(march, bayonet)
xcomp(march, fix)
punct(anger, ,)
cc(anger, and)
mark(fix, as)
csubj(anger, fix)
case(face, on)
nmod:poss(face, they)
obl(fix, face)
cop(anger, be)
conj(march, anger)
punct(fear, ,)
conj(anger, fear)
punct(torment, ,)
cc(torment, and)
conj(anger, torment)
punct(march, .)
nsubj(come, rank)
case(rank, after)
nmod(rank, rank)
case(they, of)
nmod(rank, they)
root(ROOT, come)
case(road, down)
det(road, the)
obl(come, road)
punct(same, ,)
cc(same, and)
det(face, the)
nsubj(same, face)
cop(same, be)
advmod(same, all)
det(same, the)
conj(come, same)
punct(walk, ,)
cc(walk, and)
nsubj(walk, they)
conj(come, walk)
case(sea, in)
det(sea, a)
obl(walk, sea)
case(dust, of)
nmod(sea, dust)
punct(come, .)
punct(come, ``)
vocative(hold, Committeemen)
punct(hold, ,)
root(ROOT, hold)
nmod:poss(fire, you)
obj(hold, fire)
punct(hold, !)
punct(hold, !)
root(ROOT, hold)
nmod:poss(fire, you)
obj(hold, fire)
punct(hold, '')
punct(hold, !)
punct(hold, ! )
det(voice, a)
nsubj(call, voice)
root(ROOT, call)
punct(be, ,)
cc(make, and)
nsubj(make, what)
conj(call, make)
obj(make, it)
advmod(more, even)
advmod(terrible, more)
xcomp(make, terrible)
cc(unreal, and)
conj(terrible, unreal)
conj(call, be)
mark(pause, that)
det(rank, the)
compound(rank, redcoat)
nsubj(pause, rank)
advmod(pause, never)
ccomp(be, pause)
case(instant, for)
det(instant, a)
obl(pause, instant)
punct(instant, ,)
advmod(some, only)
appos(instant, some)
case(they, of)
nmod(some, they)
acl(instant, glancing)
case(wall, toward)
det(wall, the)
compound(wall, stone)
obl(glancing, wall)
punct(glancing, ,)
case(which, from)
case(which, behind)
obl(come, which)
det(voice, the)
nsubj(come, voice)
acl:relcl(wall, come)
punct(call, .)
det(front, the)
nsubj(pass, front)
case(column, of)
nmod:poss(column, they)
nmod(front, column)
aux(pass, have)
advmod(pass, already)
root(ROOT, pass)
obj(pass, we)
punct(pass, ,)
mark(come, when)
det(officer, another)
nsubj(come, officer)
advcl(pass, come)
xcomp(come, ride)
case(side, down)
det(side, the)
obl(ride, side)
case(road, of)
det(road, the)
nmod(side, road)
punct(pace, ,)
advmod(five, not)
nummod(pace, five)
conj(side, pace)
case(where, from)
nmod(pace, where)
nsubj(be, we)
acl:relcl(where, be)
punct(pass, .)
nmod:poss(Cousin, my)
nsubj(carry, Cousin)
flat(Cousin, Simmons)
root(ROOT, carry)
det(musket, a)
obj(carry, musket)
punct(load, ,)
cc(load, but)
nsubj(load, he)
aux(load, have)
conj(carry, load)
obj(load, it)
case(shot, with)
compound(shot, bird)
obl(load, shot)
punct(rise, ,)
cc(rise, and)
mark(come, as)
det(officer, the)
nsubj(come, officer)
advcl(rise, come)
case(he, opposite)
obl(come, he)
punct(rise, ,)
nsubj(rise, he)
conj(carry, rise)
compound:prt(rise, up)
case(wall, behind)
det(wall, the)
obl(rise, wall)
cc(fire, and)
conj(rise, fire)
punct(carry, .)
nummod(moment, one)
obl:tmod(be, moment)
expl(be, there)
root(ROOT, be)
det(man, a)
nsubj(be, man)
case(saddle, in)
det(saddle, the)
nmod(man, saddle)
punct(be, ;)
punct(be, ;)
det(horror, the)
amod(horror, next)
det(horror, a)
amod(horror, headless)
appos(man, horror)
case(horse, on)
det(horse, a)
nmod(horror, horse)
nsubj(bolt, that)
acl:relcl(horse, bolt)
case(rank, through)
det(rank, the)
compound(rank, redcoat)
obl(bolt, rank)
punct(fire, ,)
cc(fire, and)
case(second, during)
det(second, the)
amod(second, next)
obl(fire, second)
cc(two, or)
conj(second, two)
punct(fire, ,)
nsubj(fire, we)
det(we, all)
case(we, of)
nmod(all, we)
conj(be, fire)
case(column, into)
det(column, the)
advmod(disorganize, suddenly)
amod(column, disorganize)
obl(fire, column)
case(soldier, of)
nmod(column, soldier)
punct(be, .)
nummod(moment, one)
obl:tmod(fill, moment)
punct(fill, ,)
det(road, the)
nsubj:pass(fill, road)
aux:pass(fill, be)
root(ROOT, fill)
case(troops, with)
amod(troops, disciplined)
obl(fill, troops)
punct(fill, ,)
advcl(fill, march)
obj(march, four)
case(four, by)
obl(march, four)
case(purpose, with)
det(purpose, a)
obl(march, purpose)
advmod(implacable, as)
xcomp(march, implacable)
case(death, as)
obl(implacable, death)
punct(fill, ;)
punct(fill, ;)
det(next, the)
nsubj(cover, next)
punct(cover, ,)
det(cloud, a)
nsubj(cover, cloud)
case(smoke, of)
compound(smoke, gun)
nmod(cloud, smoke)
parataxis(fill, cover)
det(fury, a)
amod(fury, scream)
obj(cover, fury)
case(sound, of)
nmod(fury, sound)
punct(cover, ,)
case(which, out)
case(which, of)
obl(emerge, which)
det(soldier, the)
compound(soldier, redcoat)
nsubj(emerge, soldier)
acl:relcl(fury, emerge)
case(bayonet, with)
nmod:poss(bayonet, they)
obl(emerge, bayonet)
cc(fury, and)
nmod:poss(fury, they)
amod(fury, curse)
conj(bayonet, fury)
punct(fill, .)
case(course, in)
det(course, the)
obl(fire, course)
case(this, of)
nmod(course, this)
punct(fire, ,)
nsubj(fire, they)
aux(fire, have)
root(ROOT, fire)
case(we, on)
obl(fire, we)
punct(fire, ;)
punct(fire, ;)
cc(have, but)
nsubj(have, I)
conj(fire, have)
det(memory, no)
obj(have, memory)
case(that, of)
nmod(memory, that)
punct(fire, . )
nsubj(squeeze, I)
aux(squeeze, have)
root(ROOT, squeeze)
det(trigger, the)
obj(squeeze, trigger)
case(gun, of)
nmod:poss(gun, my)
amod(gun, own)
nmod(trigger, gun)
punct(fire, ,)
cc(fire, and)
case(amazement, to)
nmod:poss(amazement, my)
obl(fire, amazement)
punct(fire, ,)
nsubj(fire, it)
aux(fire, have)
conj(squeeze, fire)
cc(kick, and)
conj(fire, kick)
advmod(kick, back)
case(shoulder, into)
nmod:poss(shoulder, my)
obl(kick, shoulder)
case(force, with)
det(force, the)
obl(kick, force)
case(mule, of)
det(mule, a)
amod(mule, angry)
nmod(force, mule)
punct(squeeze, ;)
punct(squeeze, ;)
cc(add, and)
advmod(add, then)
nsubj(add, I)
aux(add, be)
conj(squeeze, add)
nmod:poss(voice, my)
amod(voice, own)
obj(add, voice)
case(crescendo, to)
det(crescendo, the)
obl(add, crescendo)
case(sound, of)
nmod(crescendo, sound)
punct(hurl, ,)
advcl(add, hurl)
advmod(vile, more)
amod(language, vile)
obj(hurl, language)
mark(think, than)
nsubj(think, I)
advmod(think, ever)
advcl(hurl, think)
nsubj(know, I)
ccomp(think, know)
punct(sob, ,)
conj(know, sob)
cc(shout, and)
conj(sob, shout)
punct(aware, ,)
cc(aware, and)
conj(know, aware)
mark(enough, that)
mark(pass, if)
nsubj(pass, I)
aux(pass, have)
advcl(enough, pass)
obj(pass, water)
advmod(pass, before)
punct(enough, ,)
nsubj(enough, it)
cop(enough, be)
advmod(enough, not)
ccomp(aware, enough)
punct(enough, ,)
case(pants, for)
nmod:poss(pants, my)
nsubj(soak, pants)
aux(soak, be)
conj(enough, soak)
xcomp(soak, wet)
punct(squeeze, . )
nsubj(stand, I)
aux(stand, would)
aux(stand, have)
root(ROOT, stand)
advmod(stand, there)
cc(die, and)
conj(stand, die)
advmod(die, there)
mark(leave, if)
advcl(die, leave)
case(myself, to)
obl(leave, myself)
punct(grab, ,)
cc(grab, but)
nsubj(grab, Cousin)
flat(Cousin, Simmons)
conj(stand, grab)
nmod:poss(arm, my)
obj(grab, arm)
case(grip, in)
nmod:poss(grip, he)
compound(grip, viselike)
obl(grab, grip)
cc(pluck, and)
advmod(pluck, fairly)
conj(grab, pluck)
obj(pluck, I)
case(there, out)
case(there, of)
obl(pluck, there)
punct(pluck, ;)
punct(stand, ;)
cc(come, and)
advmod(come, then)
nsubj(come, I)
conj(stand, come)
case(sanity, to)
det(sanity, some)
obl(come, sanity)
cc(plunge, and)
conj(come, plunge)
advmod(plunge, away)
case(speed, with)
amod(speed, such)
amod(speed, extraordinary)
obl(plunge, speed)
obj(outdistanced, that)
nsubj(outdistanced, I)
acl:relcl(speed, outdistanced)
obj(outdistanced, Cousin)
flat(Cousin, Simmons)
advmod(far, by)
advmod(outdistanced, far)
punct(stand, .)
nsubj(run, everyone)
amod(everyone, else)
aux(run, be)
root(ROOT, run)
punct(run, .)
advmod(realize, later)
nsubj(realize, we)
root(ROOT, realize)
mark(stop, that)
det(redcoat, the)
nsubj(stop, redcoat)
aux(stop, have)
ccomp(realize, stop)
nmod:poss(charge, they)
obj(stop, charge)
case(wall, at)
det(wall, the)
obl(stop, wall)
punct(realize, .)
nmod:poss(hope, they)
amod(hope, only)
nsubj(be, hope)
case(survival, of)
nmod(hope, survival)
ccomp(realize, be)
mark(hold, to)
ccomp(be, hold)
case(road, to)
det(road, the)
obl(hold, road)
cc(keep, and)
conj(hold, keep)
xcomp(keep, march)
punct(realize, .)
nsubj(tumble, we)
root(ROOT, tumble)
case(stop, to)
det(stop, a)
obl(tumble, stop)
case(hole, in)
nmod:poss(hole, deacon)
flat(deacon, Gordon)
case(deacon, 's)
compound(hole, cow)
nmod(stop, hole)
punct(hole, ,)
det(bit, a)
amod(lie, low)
punct(lie, -)
amod(bit, lie)
appos(hole, bit)
case(pasture, of)
nmod(bit, pasture)
case(pool, with)
det(pool, a)
amod(pool, muddy)
nmod(bit, pool)
case(water, of)
nmod(pool, water)
case(middle, in)
nmod:poss(middle, its)
nmod(pool, middle)
punct(tumble, . )
det(cow, a)
compound(cow, dozen)
nsubj(mooe, cow)
root(ROOT, mooe)
advmod(mooe, sadly)
cc(regard, and)
conj(mooe, regard)
obj(regard, we)
mark(insane, as)
mark(insane, if)
nsubj(insane, we)
cop(insane, be)
advcl(regard, insane)
punct(insane, ,)
mark(moment, as)
advmod(moment, perhaps)
nsubj(moment, we)
cop(moment, be)
case(moment, at)
det(moment, that)
advcl(insane, moment)
punct(moment, ,)
case(excitement, with)
det(excitement, the)
amod(excitement, crazy)
obl(moment, excitement)
case(encounter, of)
nmod:poss(encounter, we)
amod(encounter, first)
nmod(excitement, encounter)
punct(yelling, ,)
det(yelling, the)
conj(encounter, yelling)
cc(shoot, and)
conj(yelling, shoot)
advmod(continue, still)
xcomp(shoot, continue)
compound:prt(continue, up)
case(road, at)
det(road, the)
obl(continue, road)
punct(thirst, ,)
cc(thirst, and)
det(thirst, the)
conj(road, thirst)
case(some, of)
nmod(thirst, some)
case(man, of)
det(man, the)
nmod(some, man)
punct(thirst, ,)
nsubj(great, which)
cop(great, be)
advmod(great, so)
acl:relcl(thirst, great)
mark(wade, that)
nsubj(wade, they)
ccomp(great, wade)
case(water, into)
det(water, the)
amod(water, muddy)
obl(wade, water)
cc(scoope, and)
conj(wade, scoope)
compound:prt(scoope, up)
obj(scoope, handful)
case(it, of)
nmod(handful, it)
punct(Isaac, .)
appos(handful, Isaac)
flat(Isaac, Pitt)
punct(Isaac, ,)
appos(Isaac, one)
case(man, of)
det(man, the)
nmod(one, man)
case(Lincoln, from)
nmod(man, Lincoln)
punct(take, ,)
aux(take, have)
parataxis(Isaac, take)
det(ball, a)
compound(ball, musket)
obj(take, ball)
case(belly, in)
nmod:poss(belly, he)
obl(take, belly)
punct(take, ;)
punct(take, ;)
cc(find, and)
mark(find, though)
nsubj(find, he)
aux(find, have)
advcl(take, find)
det(strength, the)
obj(find, strength)
mark(run, to)
acl(strength, run)
case(we, with)
obl(run, we)
punct(collapse, ,)
advmod(collapse, now)
nsubj(collapse, he)
conj(find, collapse)
cc(lay, and)
conj(collapse, lay)
case(ground, on)
det(ground, the)
obl(lay, ground)
punct(die, ,)
advcl(lay, die)
punct(die, ,)
det(reverend, the)
obj(die, reverend)
advcl(die, hold)
nmod:poss(head, he)
obj(hold, head)
cc(wipe, and)
conj(hold, wipe)
nmod:poss(brow, he)
amod(brow, hot)
obj(wipe, brow)
punct(mooe, .)
nsubj(appear, it)
aux(appear, may)
root(ROOT, appear)
mark(cruel, that)
nsubj(cruel, we)
cop(cruel, be)
ccomp(appear, cruel)
cc(callous, and)
conj(cruel, callous)
punct(have, ,)
cc(have, but)
det(one, no)
nsubj(have, one)
conj(appear, have)
obj(have, time)
mark(spend, to)
acl(time, spend)
xcomp(spend, sympathizing)
case(Isaac, with)
amod(Isaac, poor)
obl(sympathizing, Isaac)
punct(Isaac, --)
case(reverend, except)
det(reverend, the)
obl(sympathizing, reverend)
punct(appear, . )
nsubj(know, I)
root(ROOT, know)
mark(feel, that)
nsubj(feel, I)
nmod:npmod(I, myself)
ccomp(know, feel)
mark(shame, that)
expl(shame, it)
cop(shame, be)
det(shame, a)
amod(shame, mortal)
ccomp(feel, shame)
case(man, for)
det(man, a)
nmod(shame, man)
mark(tear, to)
aux:pass(tear, be)
acl(shame, tear)
xcomp(tear, open)
case(ball, by)
det(ball, a)
amod(ball, british)
compound(ball, musket)
obl(tear, ball)
punct(tear, ,)
mark(be, as)
nsubj(be, Isaac)
aux(be, have)
advcl(feel, be)
punct(feel, ,)
cc(feel, yet)
nsubj(feel, I)
advmod(feel, also)
conj(know, feel)
xcomp(feel, relieved)
cc(lucky, and)
conj(relieved, lucky)
mark(he, that)
nsubj(he, it)
aux(he, have)
cop(he, be)
ccomp(lucky, he)
cc(myself, and)
advmod(myself, not)
conj(he, myself)
punct(know, . )
nsubj(drunk, I)
cop(drunk, be)
root(ROOT, drunk)
case(excitement, with)
obl(drunk, excitement)
cc(smell, and)
det(smell, the)
conj(excitement, smell)
case(gunpowder, of)
nmod(smell, gunpowder)
nsubj(come, that)
acl:relcl(smell, come)
xcomp(come, float)
advmod(float, down)
case(road, from)
det(road, the)
obl(come, road)
punct(fact, ,)
cc(fact, and)
det(fact, the)
conj(drunk, fact)
mark(afraid, that)
nsubj(afraid, I)
cop(afraid, be)
advmod(afraid, not)
acl(fact, afraid)
advmod(afraid, now)
punct(wait, ,)
cc(wait, but)
advmod(wait, only)
conj(afraid, wait)
mark(know, to)
xcomp(wait, know)
nsubj(do, what)
mark(do, to)
ccomp(know, do)
obl(do, next)
punct(reload, .)
advmod(reload, meanwhile)
punct(reload, ,)
nsubj(reload, I)
parataxis(drunk, reload)
nmod:poss(gun, my)
obj(reload, gun)
punct(reload, ,)
mark(do, as)
det(man, the)
amod(man, other)
nsubj(do, man)
aux(do, be)
advcl(reload, do)
punct(drunk, .)
nsubj(quarter, we)
cop(quarter, be)
advmod(quarter, less)
fixed(less, than)
det(quarter, a)
root(ROOT, quarter)
case(mile, of)
det(mile, a)
nmod(quarter, mile)
case(road, from)
det(road, the)
nmod(mile, road)
punct(trace, ,)
cc(trace, and)
nsubj(trace, we)
aux(trace, could)
conj(quarter, trace)
nmod:poss(shape, its)
obj(trace, shape)
case(ribbon, from)
det(ribbon, the)
obl(trace, ribbon)
case(smoke, of)
compound(smoke, powder)
nmod(ribbon, smoke)
cc(dust, and)
conj(smoke, dust)
nsubj(hang, that)
acl:relcl(dust, hang)
compound:prt(hang, over)
obj(hang, it)
punct(hang, .)
mark(look, wherever)
nsubj(look, you)
advcl(see, look)
punct(see, ,)
nsubj(see, you)
parataxis(quarter, see)
obj(see, Committeemen)
xcomp(see, run)
case(meadow, across)
det(meadow, the)
obl(run, meadow)
punct(run, ,)
conj(away, some)
advmod(run, away)
case(road, from)
det(road, the)
obl(away, road)
punct(some, ,)
appos(road, some)
case(it, toward)
nmod(some, it)
punct(parallel, ,)
nsubj(parallel, some)
amod(some, parallel)
case(it, to)
obl(parallel, it)
punct(parallel, ;)
punct(parallel, ;)
cc(mile, and)
advmod(mile, about)
det(mile, a)
conj(cluster, mile)
case(west, to)
det(west, the)
nmod(mile, west)
det(cluster, a)
nsubj(make, cluster)
case(Militia, of)
case(least, at)
nmod(fifty, least)
nummod(Militia, fifty)
nmod(cluster, Militia)
aux(make, be)
conj(see, make)
nmod:poss(way, they)
obj(make, way)
case(direction, in)
nmod:poss(direction, we)
obl(make, direction)
punct(quarter, .)
nsubj(feel, Cousin)
nsubj(feel, Joshua)
cc(other, and)
det(other, some)
conj(Joshua, other)
root(ROOT, feel)
mark(march, that)
nsubj(march, we)
aux(march, should)
ccomp(feel, march)
case(Lexington, toward)
nmod(march, Lexington)
cc(take, and)
conj(feel, take)
compound:prt(take, up)
amod(position, new)
obj(take, position)
case(column, ahead)
case(column, of)
det(column, the)
amod(move, slow)
punct(move, -)
amod(column, move)
amod(column, british)
obl(take, column)
punct(maintain, ,)
cc(maintain, but)
det(group, another)
nsubj(maintain, group)
conj(feel, maintain)
mark(stick, that)
nsubj(stick, we)
aux(stick, should)
ccomp(maintain, stick)
case(spot, to)
det(spot, this)
obl(stick, spot)
cc(section, and)
det(section, this)
conj(spot, section)
case(road, of)
nmod(section, road)
punct(feel, . )
nsubj(offer, I)
aux(offer, do)
advmod(offer, not)
root(ROOT, offer)
det(advice, any)
obj(offer, advice)
punct(want, ,)
cc(want, but)
nsubj(want, I)
advmod(want, certainly)
aux(want, do)
advmod(want, not)
conj(offer, want)
mark(go, to)
xcomp(want, go)
advmod(go, back)
case(where, to)
obl(go, where)
det(officer, the)
nsubj(lay, officer)
acl:relcl(where, lay)
case(brain, with)
nmod:poss(brain, he)
obl(lay, brain)
acl:relcl(where, dash)
compound:prt(dash, out)
punct(offer, .)
nsubj(say, someone)
root(ROOT, say)
mark(go, that)
mark(stand, while)
nsubj(stand, we)
aux(stand, be)
advcl(go, stand)
advmod(stand, here)
cc(argue, and)
conj(stand, argue)
case(it, about)
obl(argue, it)
punct(go, ,)
det(British, the)
nsubj:pass(go, British)
aux(go, would)
aux:pass(go, be)
ccomp(say, go)
punct(say, ;)
punct(say, ;)
cc(say, but)
nsubj(say, Cousin)
flat(Cousin, Simmons)
conj(say, say)
nsubj(watch, he)
aux(watch, have)
ccomp(say, watch)
obj(watch, they)
xcomp(watch, march)
advmod(march, west)
advmod(march, early)
case(morning, in)
det(morning, the)
obl(march, morning)
punct(move, ,)
cc(move, and)
conj(march, move)
case(pace, at)
det(pace, a)
amod(pace, much)
amod(pace, brisker)
obl(move, pace)
nsubj(take, it)
aux(take, have)
advmod(take, still)
acl:relcl(pace, take)
det:predet(hour, half)
det(hour, a)
obj(take, hour)
case(column, for)
nmod:poss(column, they)
nmod(hour, column)
mark(pass, to)
acl(column, pass)
punct(what, ,)
obj(pass, what)
case(narrowness, with)
det(narrowness, the)
nmod(what, narrowness)
case(road, of)
det(road, the)
nmod(narrowness, road)
cc(baggage, and)
nmod:poss(baggage, they)
conj(road, baggage)
cc(cart, and)
compound(cart, ammunition)
conj(road, cart)
punct(see, .)
mark(discuss, while)
nsubj:pass(discuss, this)
aux(discuss, be)
aux:pass(discuss, be)
advcl(see, discuss)
punct(see, ,)
nsubj(see, we)
parataxis(say, see)
det(militia, the)
obj(see, militia)
case(west, to)
det(west, the)
obl(see, west)
case(we, of)
nmod(west, we)
acl(west, fanning)
compound:prt(fanning, out)
cc(break, and)
conj(fanning, break)
case(cluster, into)
amod(cluster, little)
obl(break, cluster)
case(man, of)
nummod(man, two)
cc(three, and)
conj(two, three)
nmod(cluster, man)
mark(approach, as)
nsubj(approach, they)
advcl(break, approach)
det(road, the)
obj(approach, road)
punct(say, .)
expl(opinion, it)
cop(opinion, be)
det(opinion, the)
root(ROOT, opinion)
case(some, of)
nmod(opinion, some)
case(we, of)
nmod(some, we)
mark(part, that)
nsubj(part, these)
aux(part, must)
cop(part, be)
acl(opinion, part)
case(Committeemen, of)
det(Committeemen, the)
nmod(part, Committeemen)
nsubj(Battle, who)
aux(Battle, have)
cop(Battle, be)
case(Battle, in)
det(Battle, the)
acl:relcl(Committeemen, Battle)
case(Bridge, of)
det(Bridge, the)
compound(Bridge, North)
nmod(Battle, Bridge)
punct(Bridge, ,)
nsubj(entitle, which)
acl:relcl(Bridge, entitle)
obj(entitle, they)
case(sort, to)
det(sort, a)
obl(entitle, sort)
case(status, of)
compound(status, veteran)
nmod(sort, status)
punct(feel, ,)
cc(feel, and)
nsubj(feel, we)
conj(opinion, feel)
mark(one, that)
mark(employ, if)
nsubj(employ, they)
advcl(feel, employ)
det(tactic, this)
obj(employ, tactic)
punct(enough, ,)
nsubj(enough, it)
cop(enough, be)
advmod(enough, likely)
advmod(one, enough)
det(one, the)
amod(one, best)
ccomp(feel, one)
punct(Mattathias, .)
appos(one, Mattathias)
nsubj(say, Dover)
root(ROOT, say)
punct(say, :)
punct(say, ``)
nsubj(make, it)
root(ROOT, make)
obj(make, sense)
punct(make, .)
mark(cluster, if)
nsubj(cluster, we)
advcl(make, cluster)
advmod(cluster, together)
punct(make, ,)
det(redcoat, the)
nsubj(make, redcoat)
aux(make, can)
root(ROOT, make)
det(advantage, a)
obj(make, advantage)
case(it, out)
case(it, of)
nmod(advantage, it)
punct(be, ,)
cc(be, but)
expl(be, there)
conj(make, be)
advmod(be, not)
det(thing, a)
amod(thing, bless)
nsubj(be, thing)
nsubj(do, they)
aux(do, can)
acl:relcl(thing, do)
case(two, with)
obl(do, two)
cc(three, or)
conj(two, three)
case(we, of)
nmod(two, we)
mark(chase, except)
advcl(do, chase)
obj(chase, we)
punct(outrun, ,)
cc(outrun, and)
nsubj(outrun, we)
aux(outrun, can)
conj(chase, outrun)
obj(outrun, they)
punct(outrun, '')
punct(settle, .)
nsubj(settle, that)
parataxis(outrun, settle)
obj(settle, it)
punct(break, ,)
cc(break, and)
nsubj(break, we)
conj(settle, break)
case(party, into)
obl(break, party)
case(two, of)
nmod(party, two)
cc(three, and)
conj(two, three)
punct(make, .)
compound(Joshua, Cousin)
root(ROOT, Joshua)
nsubj(decide, Dover)
root(ROOT, decide)
mark(remain, to)
xcomp(decide, remain)
case(reverend, with)
det(reverend, the)
obl(remain, reverend)
cc(Isaac, and)
amod(Isaac, poor)
conj(reverend, Isaac)
flat(Isaac, Pitt)
mark(pass, until)
nsubj(pass, life)
advcl(remain, pass)
advmod(pass, away)
punct(decide, --)
cc(hurt, and)
nsubj:pass(hurt, he)
aux:pass(hurt, be)
conj(decide, hurt)
advmod(badly, so)
advmod(hurt, badly)
nsubj(seem, he)
aux(seem, do)
advmod(seem, not)
conj(hurt, seem)
case(long, for)
obl(seem, long)
case(world, in)
det(world, this)
obl(long, world)
punct(decide, . )
nsubj(go, I)
root(ROOT, go)
advmod(go, off)
case(Cousin, with)
obl(go, Cousin)
flat(Cousin, Simmons)
punct(Cousin, ,)
nsubj(maintain, who)
acl:relcl(Cousin, maintain)
mark(know, that)
mark(see, if)
nsubj(see, he)
aux(see, do)
advmod(see, not)
advcl(know, see)
case(I, to)
obl(see, I)
punct(know, ,)
nsubj(know, he)
aux(know, do)
advmod(know, not)
ccomp(maintain, know)
nsubj(would, who)
ccomp(know, would)
punct(go, .)
punct(go, ``)
amod(heaven, good)
root(ROOT, heaven)
punct(heaven, ,)
appos(heaven, Adam)
punct(heaven, '')
punct(heaven, ,)
nsubj(say, he)
parataxis(heaven, say)
punct(heaven, ,)
punct(heaven, ``)
nsubj(think, I)
root(ROOT, think)
nummod(thing, one)
nsubj(be, thing)
nsubj(have, you)
aux(have, would)
acl:relcl(thing, have)
det(trouble, no)
obj(have, trouble)
xcomp(have, learn)
ccomp(think, be)
mark(get, when)
mark(get, to)
ccomp(be, get)
case(place, out)
case(place, of)
det(place, a)
obl(get, place)
punct(be, '')
punct(think, .)
punct(think, ``)
nsubj(learn, I)
ccomp(say, learn)
mark(now, that)
advmod(say, now)
punct(say, '')
punct(say, ,)
nsubj(say, I)
root(ROOT, say)
punct(say, .)
nsubj(run, we)
root(ROOT, run)
advmod(run, east)
case(mile, for)
advmod(half, about)
det:predet(mile, half)
det(mile, a)
obl(run, mile)
mark(turn, before)
nsubj(turn, we)
advcl(run, turn)
advmod(turn, back)
case(road, to)
det(road, the)
obl(turn, road)
punct(panting, ,)
conj(turn, panting)
case(effort, from)
det(effort, the)
obl(panting, effort)
cc(soak, and)
conj(turn, soak)
case(sweat, with)
obl(soak, sweat)
punct(run, .)
expl(be, there)
root(ROOT, be)
det(clump, a)
nsubj(be, clump)
case(tree, of)
nmod(clump, tree)
nsubj(appear, that)
acl:relcl(tree, appear)
mark(provide, to)
xcomp(appear, provide)
obj(provide, cover)
advmod(up, right)
advmod(provide, up)
case(road, to)
det(road, the)
obl(provide, road)
punct(slacken, ,)
cc(slacken, and)
det(shout, the)
nsubj(slacken, shout)
cc(gunfire, and)
conj(shout, gunfire)
advmod(slacken, never)
conj(be, slacken)
punct(be, .)
case(tree, under)
det(tree, the)
obl(be, tree)
punct(be, ,)
expl(be, there)
root(ROOT, be)
det(redcoat, a)
amod(redcoat, dead)
nsubj(be, redcoat)
punct(redcoat, ,)
det(boy, a)
amod(boy, young)
conj(redcoat, boy)
case(skin, with)
det(skin, a)
amod(skin, pasty)
amod(skin, white)
nmod(boy, skin)
cc(face, and)
det(face, a)
conj(redcoat, face)
amod(face, full)
case(pimple, of)
obl(full, pimple)
punct(pimple, ,)
nsubj(take, who)
aux(take, have)
acl:relcl(pimple, take)
det(ball, a)
compound(ball, rifle)
obj(take, ball)
advmod(take, directly)
case(eye, between)
det(eye, the)
obl(take, eye)
punct(be, .)
nummod(man, three)
nsubj(he, man)
cop(he, be)
case(he, around)
root(ROOT, he)
punct(he, .)
nsubj(strip, they)
aux(strip, have)
root(ROOT, strip)
obj(strip, he)
case(musket, of)
nmod:poss(musket, he)
obl(strip, musket)
cc(equipment, and)
conj(musket, equipment)
punct(pull, ,)
cc(pull, and)
advmod(pull, now)
nsubj(pull, they)
aux(pull, be)
conj(strip, pull)
nmod:poss(boot, he)
obj(pull, boot)
cc(jacket, and)
conj(boot, jacket)
advmod(pull, off)
punct(strip, .)
nsubj(grab, Cousin)
flat(Cousin, Simmons)
root(ROOT, grab)
obj(grab, one)
case(they, of)
nmod(one, they)
case(shoulder, by)
det(shoulder, the)
obl(grab, shoulder)
cc(flung, and)
conj(grab, flung)
obj(flung, he)
advmod(flung, away)
punct(grab, .)
punct(grab, ``)
nmod:poss(name, God)
case(God, 's)
root(ROOT, name)
punct(name, ,)
appos(name, what)
cop(what, be)
nsubj(rob, you)
mark(rob, to)
acl(name, rob)
det(dead, the)
obj(rob, dead)
case(fight, with)
det(fight, the)
obl(rob, fight)
advcl(rob, go)
advmod(go, on)
punct(name, '')
punct(name, !)
punct(name, !)
nsubj(roar, Cousin)
flat(Cousin, Simmons)
root(ROOT, roar)
punct(roar, .)
nsubj(try, they)
root(ROOT, try)
mark(outface, to)
xcomp(try, outface)
obj(outface, he)
punct(wide, ,)
cc(wide, but)
nsubj(wide, Joseph)
flat(Joseph, Simmons)
cop(wide, be)
advmod(wide, as)
conj(try, wide)
case(man, as)
nummod(man, two)
amod(man, average)
obl(wide, man)
punct(take, ,)
cc(take, and)
nsubj(take, it)
aux(take, would)
aux(take, have)
conj(try, take)
amod(man, braver)
obj(take, man)
mark(be, than)
nsubj(be, these)
advcl(take, be)
mark(outface, to)
xcomp(be, outface)
obj(outface, he)
punct(try, .)
det(summer, that)
obl:tmod(close, summer)
det(house, the)
compound(house, gambling)
nsubj:pass(close, house)
aux:pass(close, be)
root(ROOT, close)
punct(close, ,)
case(threat, despite)
det(threat, the)
obl(permit, threat)
case(Pierre, of)
nmod(threat, Pierre)
flat(Pierre, Ameaux)
punct(Pierre, ,)
det(manufacturer, a)
compound(card, game)
punct(card, -)
compound(manufacturer, card)
appos(Pierre, manufacturer)
punct(close, .)
nsubj:pass(permit, dancing)
aux:pass(permit, be)
advmod(longer, no)
advmod(permit, longer)
parataxis(close, permit)
case(street, in)
det(street, the)
obl(permit, street)
punct(close, .)
det(Bordel, the)
nsubj:pass(empty, Bordel)
cc(place, and)
amod(place, other)
conj(Bordel, place)
case(prostitution, of)
nmod(place, prostitution)
aux:pass(empty, be)
root(ROOT, empty)
punct(empty, .)
det(breech, the)
compound(breech, slit)
nsubj(have, breech)
root(ROOT, have)
mark(go, to)
xcomp(have, go)
punct(have, .)
nsubj:pass(tolerate, drunkenness)
aux:pass(tolerate, be)
advmod(longer, no)
advmod(tolerate, longer)
parataxis(have, tolerate)
punct(have, .)
case(defiance, in)
obl(march, defiance)
punct(march, ,)
det(reprobate, a)
amod(reprobate, chinless)
nsubj(march, reprobate)
punct(reprobate, ,)
appos(reprobate, jake)
flat(jake, Camaret)
punct(march, ,)
root(ROOT, march)
case(aisle, down)
det(aisle, the)
obl(march, aisle)
case(morning, in)
nmod:poss(morning, St.)
flat(St., Peter)
case(St., 's)
nummod(morning, one)
compound(morning, Sunday)
obl(march, morning)
punct(march, ,)
advcl(march, follow)
case(one, by)
obl(follow, one)
case(woman, of)
det(woman, the)
nmod(one, woman)
case(Bordel, from)
det(Bordel, the)
nmod(woman, Bordel)
punct(Bordel, ,)
nmod:poss(dress, whose)
nsubj(show, dress)
cc(walk, and)
conj(dress, walk)
advmod(show, plainly)
acl:relcl(Bordel, show)
det(lack, the)
obj(show, lack)
case(shame, of)
det(shame, any)
nmod(lack, shame)
punct(march, .)
advcl(turn, plunk)
obj(plunk, themselves)
advmod(plunk, down)
case(bench, on)
det(bench, the)
amod(bench, front)
obl(plunk, bench)
punct(turn, ,)
nsubj(turn, they)
root(ROOT, turn)
case(smirk, to)
obl(turn, smirk)
case(those, at)
obl(turn, those)
case(they, around)
nmod(those, they)
punct(be, .)
nmod:poss(impulse, John)
case(John, 's)
amod(impulse, first)
nsubj(be, impulse)
parataxis(turn, be)
mark(denounce, to)
ccomp(be, denounce)
nmod:poss(blasphemy, they)
obj(denounce, blasphemy)
punct(turn, .)
cc(occur, but)
det(thought, the)
nsubj(occur, thought)
root(ROOT, occur)
mark(want, that)
nsubj(want, God)
aux(want, would)
ccomp(occur, want)
det(opportunity, this)
obj(want, opportunity)
acl(opportunity, use)
mark(tell, to)
advcl(use, tell)
obj(tell, they)
case(he, about)
obl(tell, he)
punct(occur, .)
advmod(open, calmly)
nsubj(open, he)
root(ROOT, open)
det(Bible, the)
obj(open, Bible)
cc(read, and)
conj(open, read)
case(woman, of)
det(woman, the)
obl(read, woman)
case(well, at)
det(well, the)
obl(read, well)
punct(open, .)
nsubj(finish, he)
root(ROOT, finish)
det(service, the)
compound(service, worship)
obj(finish, service)
mark(be, as)
mark(be, if)
expl(be, there)
aux(be, have)
advcl(finish, be)
det(attempt, no)
amod(attempt, brazen)
nsubj(be, attempt)
mark(dishonor, to)
acl(attempt, dishonor)
obj(dishonor, God)
cc(man, and)
conj(God, man)
punct(finish, .)
det(morning, the)
amod(morning, next)
obl:tmod(appear, morning)
punct(appear, ,)
mark(strike, as)
det(clock, the)
nsubj(strike, clock)
advcl(appear, strike)
obj(strike, nine)
punct(appear, ,)
nsubj(appear, he)
root(ROOT, appear)
case(meeting, at)
det(meeting, the)
compound(meeting, Council)
obl(appear, meeting)
case(Hall, in)
det(Hall, the)
compound(Hall, town)
nmod(meeting, Hall)
cc(insist, and)
conj(appear, insist)
mark(have, that)
det(couple, the)
nsubj(have, couple)
aux(have, would)
ccomp(insist, have)
mark(punish, to)
aux:pass(punish, be)
xcomp(have, punish)
mark(respected, if)
det(Church, the)
nsubj:pass(respected, Church)
aux:pass(respected, be)
mark(respected, to)
aux:pass(respected, be)
advcl(punish, respected)
punct(appear, .)
punct(appear, ``)
nsubj(tell, I)
aux(tell, have)
root(ROOT, tell)
obj(tell, you)
advmod(tell, before)
punct(tell, ,)
cc(tell, and)
nsubj(tell, I)
conj(tell, tell)
obj(tell, you)
advmod(tell, again)
punct(tell, '')
punct(say, ,)
nsubj(say, Monsieur)
flat(Monsieur, Favre)
parataxis(tell, say)
advmod(say, rudely)
punct(tell, .)
punct(tell, ``)
root(ROOT, stick)
case(preach, to)
det(preach, the)
obl(stick, preach)
case(Gospel, of)
det(Gospel, the)
nmod(preach, Gospel)
punct(stick, '')
punct(stick, !)
punct(stick, !)
nsubj(stiffen, John)
root(ROOT, stiffen)
case(anger, in)
obl(stiffen, anger)
punct(stiffen, .)
punct(stiffen, ``)
nsubj(answer, that)
cop(answer, be)
det(answer, the)
root(ROOT, answer)
det(ungodly, the)
nsubj(make, ungodly)
aux(make, will)
advmod(make, always)
acl:relcl(answer, make)
mark(point, when)
det(Church, the)
nsubj(point, Church)
advcl(make, point)
nmod:poss(finger, its)
obj(point, finger)
case(sin, at)
nmod:poss(sin, they)
obl(point, sin)
punct(answer, . )
nsubj(say, I)
root(ROOT, say)
case(you, to)
obl(say, you)
mark(decry, that)
det(Church, the)
nsubj(decry, Church)
aux(decry, will)
advmod(decry, ever)
ccomp(say, decry)
obj(decry, evil)
punct(say, '')
punct(say, !)
punct(say, !)
nmod:poss(reply, John)
case(John, 's)
nsubj(declaration, reply)
cop(declaration, be)
case(declaration, like)
det(declaration, a)
root(ROOT, declaration)
case(war, of)
nmod(declaration, war)
punct(declaration, .)
vocative(declaration, Monsieur)
nsubj(sit, Favre)
root(ROOT, sit)
advmod(sit, down)
case(stall, in)
nmod:poss(stall, he)
amod(back, high)
punct(back, -)
amod(stall, back)
obl(sit, stall)
punct(stall, ,)
conj(stall, lip)
amod(stall, compress)
punct(sit, ,)
nsubj(glint, eye)
advcl(sit, glint)
punct(sit, .)
root(ROOT, Ablard)
flat(Ablard, Corne)
punct(Ablard, ,)
det(man, a)
amod(man, short)
appos(Ablard, man)
case(rotunda, with)
det(rotunda, a)
nmod(man, rotunda)
case(stomach, of)
nmod(rotunda, stomach)
punct(stomach, ,)
appos(stomach, rose)
punct(Ablard, .)
det(eye, every)
nsubj(he, eye)
cop(he, be)
case(he, on)
root(ROOT, he)
mark(begin, as)
nsubj(begin, he)
advcl(he, begin)
mark(speak, to)
xcomp(begin, speak)
punct(he, .)
punct(he, ``)
det(master, what)
nsubj(true, master)
nsubj(say, Calvin)
acl:relcl(master, say)
cop(true, be)
root(ROOT, true)
punct(true, .)
advmod(have, how)
aux(have, can)
nsubj(have, we)
root(ROOT, have)
det(city, a)
amod(city, good)
obj(have, city)
mark(respect, unless)
nsubj(respect, we)
advcl(have, respect)
obj(respect, morality)
punct(respect, '')
punct(have, ?)
punct(have, ?)
nsubj(get, Abel)
flat(Abel, Poupin)
punct(Abel, ,)
det(man, a)
amod(man, tall)
appos(Abel, man)
case(cheek, with)
amod(cheek, sunken)
nmod(man, cheek)
cc(eye, and)
amod(set, deep)
punct(set, -)
amod(eye, set)
conj(cheek, eye)
punct(get, ,)
conj(have, get)
case(foot, to)
nmod:poss(foot, he)
obl(get, foot)
punct(get, .)
punct(get, ``)
nsubj(know, we)
det(we, all)
root(ROOT, know)
mark(live, that)
nsubj(live, jake)
flat(jake, Camaret)
cc(woman, and)
det(woman, the)
conj(jake, woman)
aux(live, be)
advmod(live, brazenly)
ccomp(know, live)
advmod(live, together)
punct(know, .)
expl(well, it)
aux(well, would)
cop(well, be)
root(ROOT, well)
mark(show, to)
csubj(well, show)
det(populace, the)
obj(show, populace)
advmod(deal, how)
nsubj(deal, we)
ccomp(show, deal)
case(adulterer, with)
obl(deal, adulterer)
punct(deal, '')
punct(well, .)
nsubj(disagree, Philibert)
flat(Philibert, Berthelier)
punct(Philibert, ,)
det(son, the)
appos(Philibert, son)
case(patriot, of)
det(patriot, the)
amod(patriot, famous)
nmod(son, patriot)
punct(disagree, ,)
parataxis(well, disagree)
punct(well, .)
punct(well, ``)
aux(listen, do)
advmod(listen, not)
root(ROOT, listen)
case(Frenchman, to)
det(Frenchman, that)
obl(listen, Frenchman)
punct(listen, .)
nsubj(throttling, he)
aux(throttling, be)
root(ROOT, throttling)
det(liberty, the)
obj(throttling, liberty)
nmod:poss(father, my)
nsubj(give, father)
acl:relcl(liberty, give)
nmod:poss(life, he)
obj(give, life)
mark(win, to)
advcl(give, win)
punct(throttling, '')
punct(throttling, !)
punct(throttling, !)
nsubj(insistent, John)
cop(insistent, be)
advmod(insistent, quietly)
root(ROOT, insistent)
punct(insistent, .)
punct(insistent, ``)
expl(be, there)
aux(be, can)
root(ROOT, be)
det(compromise, no)
nsubj(be, compromise)
mark(jeopardy, when)
nsubj(jeopardy, soul)
cop(jeopardy, be)
case(jeopardy, in)
advcl(be, jeopardy)
punct(be, '')
punct(be, . )
det(week, a)
obl:npmod(later, week)
advmod(carry, later)
det(sentence, the)
nsubj:pass(carry, sentence)
case(Council, of)
det(Council, the)
nmod(sentence, Council)
aux:pass(carry, be)
root(ROOT, carry)
compound:prt(carry, out)
punct(carry, :)
nsubj:pass(carry, jake)
flat(jake, Camaret)
cc(woman, and)
det(woman, the)
conj(jake, woman)
aux:pass(march, be)
conj(carry, march)
xcomp(march, naked)
case(street, through)
det(street, the)
obl(naked, street)
case(populace, past)
det(populace, a)
compound(populace, mock)
obl(naked, populace)
punct(carry, .)
mark(stalk, before)
nsubj(stalk, they)
root(ROOT, stalk)
det(beadle, the)
obj(stalk, beadle)
punct(proclaim, ,)
advcl(stalk, proclaim)
mark(go, as)
nsubj(go, he)
advcl(proclaim, go)
punct(proclaim, ,)
punct(proclaim, ``)
advmod(deal, thus)
det(Council, the)
nsubj(deal, Council)
root(ROOT, deal)
case(those, with)
obl(deal, those)
nsubj(break, who)
acl:relcl(those, break)
nmod:poss(law, its)
obj(break, law)
punct(law, --)
appos(law, adulterer)
punct(thief, ,)
conj(adulterer, thief)
punct(murderer, ,)
conj(adulterer, murderer)
punct(person, ,)
cc(person, and)
amod(person, lewd)
conj(adulterer, person)
punct(deal, .)
root(ROOT, let)
obj(let, evildoer)
xcomp(let, contemplate)
nmod:poss(way, they)
obj(contemplate, way)
punct(let, ,)
cc(let, and)
conj(let, let)
det(man, every)
obj(let, man)
xcomp(let, beware)
punct(let, '')
punct(let, !)
punct(let, !)
nmod:poss(thought, John)
case(John, 's)
nsubj(race, thought)
root(ROOT, race)
advmod(race, painfully)
case(past, into)
det(past, the)
obl(race, past)
mark(read, as)
nsubj(read, he)
advcl(race, read)
det(letter, the)
obj(read, letter)
nsubj(receive, he)
aux(receive, have)
advmod(receive, just)
acl:relcl(letter, receive)
case(Mary, from)
nmod:poss(sister, he)
compound(Mary, sister)
obl(receive, Mary)
punct(race, .)
nsubj(die, Charles)
aux(die, have)
root(ROOT, die)
nummod(week, two)
obl:npmod(before, week)
advmod(die, before)
punct(die, ,)
case(November, in)
amod(November, early)
obl(die, November)
punct(die, ,)
mark(reconcile, without)
aux:pass(reconcile, be)
advcl(die, reconcile)
case(Church, to)
det(Church, the)
obl(reconcile, Church)
punct(die, .)
det(canon, the)
nsubj(try, canon)
punct(canon, ,)
case(body, in)
det(body, a)
obl(try, body)
punct(try, ,)
aux(try, have)
root(ROOT, try)
mark(force, to)
xcomp(try, force)
obj(force, he)
case(deathbed, on)
nmod:poss(deathbed, he)
obl(force, deathbed)
mark(let, to)
advcl(force, let)
obj(let, they)
xcomp(let, give)
iobj(give, he)
det(rite, the)
amod(rite, last)
obj(give, rite)
case(Church, of)
det(Church, the)
nmod(rite, Church)
punct(die, ,)
cc(die, but)
nsubj(die, he)
aux(die, have)
conj(try, die)
advmod(proclaim, still)
xcomp(die, proclaim)
obj(proclaim, salvation)
case(faith, by)
obl(proclaim, faith)
punct(take, .)
nsubj(take, burial)
aux(take, have)
parataxis(die, take)
obj(take, place)
case(night, at)
obl(take, night)
case(ground, in)
det(ground, the)
obl(take, ground)
case(crossroad, at)
det(crossroad, the)
amod(crossroad, public)
obl(take, crossroad)
case(gibbet, under)
det(gibbet, the)
nmod(crossroad, gibbet)
punct(take, ,)
mark(find, so)
fixed(so, that)
nmod:poss(enemy, he)
nsubj(find, enemy)
aux(find, could)
advmod(find, not)
advcl(take, find)
nmod:poss(body, he)
obj(find, body)
cc(have, and)
conj(find, have)
obj(have, it)
xcomp(have, dug)
compound:prt(dug, up)
cc(burn, and)
conj(dug, burn)
punct(try, .)
det(Abbot, the)
nsubj(friend, Abbot)
case(St., of)
nmod(Abbot, St.)
flat(St., Eloi)
punct(St., ,)
conj(St., Claude)
flat(Claude, De)
flat(Claude, mommor)
punct(friend, ,)
aux(friend, have)
cop(friend, be)
det(friend, a)
amod(friend, good)
root(ROOT, friend)
punct(think, ,)
cc(think, but)
advmod(even, not)
advmod(think, even)
nsubj(think, he)
conj(friend, think)
nsubj(deserve, Charles)
ccomp(think, deserve)
obj(deserve, burial)
case(ground, in)
amod(ground, hallow)
obl(deserve, ground)
punct(friend, .)
nsubj(close, John)
root(ROOT, close)
nmod:poss(eye, he)
obj(close, eye)
cc(see, and)
conj(close, see)
advmod(again, once)
advmod(see, again)
det(niche, the)
amod(niche, little)
obj(see, niche)
case(bedroom, in)
nmod:poss(mother, he)
nmod:poss(bedroom, mother)
case(mother, 's)
nmod(niche, bedroom)
punct(bedroom, ,)
advmod(knolt, where)
nsubj(knolt, she)
aux(knolt, have)
acl:relcl(bedroom, knolt)
mark(tell, to)
advcl(knolt, tell)
det(Virgin, the)
amod(Virgin, good)
obj(tell, Virgin)
case(need, of)
nmod:poss(need, she)
nmod(Virgin, need)
punct(close, .)
det(Virgin, the)
amod(drape, blue)
punct(drape, -)
amod(Virgin, drape)
nsubj(there, Virgin)
cop(there, be)
advmod(there, still)
root(ROOT, there)
punct(knolt, ,)
cc(knolt, but)
det(one, no)
nsubj(knolt, one)
conj(there, knolt)
case(she, before)
obl(knolt, she)
advmod(knolt, now)
punct(there, .)
advmod(even, not)
advmod(Varnessa, even)
root(ROOT, Varnessa)
punct(Varnessa, ;)
punct(Varnessa, ;)
nsubj(pray, she)
punct(pray, ,)
advmod(pray, too)
punct(pray, ,)
parataxis(Varnessa, pray)
advmod(God, only)
case(God, to)
obl(pray, God)
punct(pray, .)
case(instant, for)
det(instant, a)
obl(long, instant)
nsubj(long, John)
parataxis(pray, long)
case(sound, for)
det(sound, the)
obl(long, sound)
case(bell, of)
det(bell, the)
nmod(sound, bell)
case(Sainte, of)
compound(Sainte, Noyon)
punct(Sainte, -)
compound(Sainte, la)
punct(Sainte, -)
nmod(bell, Sainte)
punct(touch, ,)
det(touch, the)
appos(Sainte, touch)
case(hand, of)
nmod:poss(mother, he)
nmod:poss(hand, mother)
case(mother, 's)
nmod(touch, hand)
punct(rafter, ,)
det(lilt, the)
nsubj(rafter, lilt)
case(voice, of)
nmod:poss(voice, Charles)
case(Charles, 's)
nmod(lilt, voice)
case(square, in)
det(square, the)
nmod(voice, square)
conj(long, rafter)
obj(rafter, room)
punct(tone, ,)
nmod:poss(father, he)
nmod:poss(tone, father)
case(father, 's)
compound(tone, bass)
conj(room, tone)
acl(tone, rumble)
case(canon, to)
det(canon, the)
obl(rumble, canon)
punct(sight, ,)
cc(sight, and)
det(sight, the)
conj(room, sight)
case(bishop, of)
det(bishop, the)
amod(bishop, beloved)
nmod(sight, bishop)
punct(rafter, .)
cc(have, but)
nsubj(have, he)
root(ROOT, have)
mark(follow, to)
xcomp(have, follow)
det(light, the)
obj(follow, light)
punct(have, .)
mark(expect, unless)
nsubj(expect, God)
advcl(give, expect)
det(man, a)
obj(expect, man)
mark(believe, to)
acl(man, believe)
det(scripture, the)
compound(scripture, Holy)
obj(believe, scripture)
punct(give, ,)
advmod(give, why)
aux(give, have)
nsubj(give, he)
root(ROOT, give)
obj(give, they)
case(he, to)
obl(give, he)
punct(give, ?)
punct(give, ?)
det(tree, the)
amod(clad, white)
punct(clad, -)
amod(tree, clad)
nsubj(stand, tree)
root(ROOT, stand)
case(specter, like)
obl(stand, specter)
case(night, in)
det(night, the)
compound(night, February)
obl(stand, night)
punct(stand, .)
nsubj(bury, snow)
parataxis(stand, bury)
det(street, the)
obj(bury, street)
cc(cover, and)
conj(bury, cover)
det(rooftop, the)
amod(rooftop, slanting)
obj(cover, rooftop)
punct(cover, ,)
mark(trudge, as)
nsubj(trudge, John)
advcl(cover, trudge)
case(St., toward)
obl(trudge, St.)
flat(St., Peter)
case(St., 's)
punct(St., .)
det(carriage, a)
obj(trudge, carriage)
acl(carriage, crunch)
advmod(crunch, by)
punct(light, ,)
nsubj(light, it)
cop(light, be)
amod(light, dim)
parataxis(trudge, light)
acl(light, filter)
case(gloom, through)
det(gloom, the)
obl(filter, gloom)
punct(stand, .)
det(wind, the)
amod(wind, sharp)
nsubj(slap, wind)
root(ROOT, slap)
case(he, at)
obl(slap, he)
cc(feel, and)
nmod:poss(foot, he)
nsubj(feel, foot)
conj(slap, feel)
case(ice, like)
obl(feel, ice)
mark(penetrate, as)
det(snow, the)
nsubj(penetrate, snow)
advcl(feel, penetrate)
det(hole, the)
obj(penetrate, hole)
case(shoe, of)
nmod:poss(shoe, he)
nmod(hole, shoe)
punct(one, ,)
nmod:poss(one, he)
amod(one, only)
conj(shoe, one)
punct(one, ,)
advmod(patch, now)
acl(one, patch)
case(parchment, with)
amod(parchment, fold)
obl(patch, parchment)
punct(slap, .)
det(city, the)
nsubj(give, city)
aux(give, have)
advmod(give, recently)
root(ROOT, give)
iobj(give, he)
det(salary, a)
amod(salary, small)
obj(give, salary)
punct(enough, ,)
cc(enough, but)
expl(enough, it)
cop(enough, be)
advmod(enough, not)
conj(give, enough)
mark(supply, to)
advcl(enough, supply)
advmod(necessity, even)
obj(supply, necessity)
punct(give, .)
mark(near, as)
nsubj(near, he)
advcl(whisk, near)
det(square, the)
obj(near, square)
punct(figure, ,)
det(figure, a)
amod(figure, round)
root(ROOT, figure)
acl(figure, muffle)
case(cape, in)
det(cape, a)
amod(cape, long)
punct(cape, ,)
amod(cape, black)
obl(muffle, cape)
acl(cape, whisk)
advmod(whisk, by)
punct(whisk, .)
nsubj(recognize, John)
root(ROOT, recognize)
obj(recognize, Ablard)
flat(Ablard, Corne)
cc(call, and)
conj(recognize, call)
compound:prt(call, out)
det(greeting, a)
obj(call, greeting)
punct(recognize, .)
advmod(grateful, how)
root(ROOT, grateful)
nsubj(man, he)
cop(grateful, be)
case(man, to)
amod(man, such)
obl(grateful, man)
punct(grateful, !)
punct(grateful, !)
expl(be, there)
root(ROOT, be)
nsubj(be, several)
case(Council, on)
det(Council, the)
nmod(several, Council)
nsubj(try, who)
acl:relcl(Council, try)
mark(live, to)
xcomp(try, live)
case(Christians, like)
obl(live, Christians)
punct(be, .)
case(effort, despite)
nmod:poss(effort, they)
obl(seem, effort)
punct(seem, ,)
det(problem, the)
nsubj(seem, problem)
parataxis(be, seem)
mark(grow, to)
xcomp(seem, grow)
xcomp(grow, graver)
det:predet(time, all)
det(time, the)
obj(grow, time)
punct(grow, .)
advcl(grow, quickening)
nmod:poss(step, he)
obj(quickening, step)
punct(enter, ,)
nsubj(enter, John)
parataxis(seem, enter)
det(church, the)
amod(church, vast)
obj(enter, church)
cc(climb, and)
conj(enter, climb)
det(step, the)
compound(step, tower)
obj(climb, step)
case(bell, to)
det(bell, the)
obl(climb, bell)
punct(be, .)
case(one, Underneath)
det(one, the)
amod(one, big)
obl(lay, one)
punct(lay, ,)
case(moonlight, in)
det(moonlight, the)
amod(moonlight, silent)
obl(lay, moonlight)
punct(lay, ,)
root(ROOT, lay)
det(pigeon, a)
amod(pigeon, dead)
obj(lay, pigeon)
punct(sleep, ,)
cc(sleep, and)
case(bell, on)
det(bell, the)
amod(bell, smaller)
obl(sleep, bell)
punct(sleep, ,)
det(Clemence, the)
nsubj(sleep, Clemence)
punct(sleep, ,)
nummod(bird, two)
amod(bird, gray)
cc(white, and)
conj(gray, white)
nsubj(sleep, bird)
conj(lay, sleep)
xcomp(sleep, huddled)
advmod(huddled, together)
case(air, in)
det(air, the)
amod(air, cold)
compound(air, winter)
obl(huddled, air)
punct(lay, .)
nsubj(lean, John)
root(ROOT, lean)
case(balustrade, upon)
det(balustrade, the)
compound(balustrade, stone)
obl(lean, balustrade)
punct(lean, .)
nsubj(brush, he)
root(ROOT, brush)
advmod(brush, back)
nmod:poss(hair, he)
amod(hair, black)
obj(brush, hair)
punct(brush, ,)
advcl(brush, shove)
obj(shove, it)
case(cap, under)
nmod:poss(pastor, he)
nmod:poss(cap, pastor)
case(pastor, 's)
obl(shove, cap)
mark(keep, to)
advcl(shove, keep)
obj(keep, it)
mark(blow, from)
advcl(keep, blow)
compound:prt(blow, in)
nmod:poss(eye, he)
obj(blow, eye)
punct(brush, .)
case(world, below)
det(world, the)
compound(splash, moon)
punct(splash, -)
amod(world, splash)
obl(roll, world)
root(ROOT, roll)
advmod(roll, away)
case(peak, to)
amod(peak, insurmountable)
amod(peak, white)
obl(away, peak)
punct(roll, ;)
punct(roll, ;)
case(he, above)
nmod(sky, he)
det(sky, the)
amod(sky, deep)
amod(sky, blue)
parataxis(roll, sky)
acl(sky, glitter)
case(star, with)
obl(glitter, star)
punct(roll, .)
nsubj(stand, he)
root(ROOT, stand)
advmod(still, very)
advmod(stand, still)
punct(stand, ,)
nmod:poss(arm, he)
obj(stand, arm)
case(side, at)
nmod:poss(side, he)
obl(stand, side)
punct(stand, ,)
advcl(stand, stare)
compound:prt(stare, up)
case(heaven, at)
det(heaven, the)
obl(stare, heaven)
punct(stare, ,)
advmod(down, then)
advmod(stare, down)
case(light, at)
det(light, the)
compound(light, blink)
obl(down, light)
advmod(light, below)
punct(stand, .)
punct(stand, ``)
advmod(long, how)
root(ROOT, long)
punct(long, ,)
nmod:poss(Lord, my)
nsubj(long, Lord)
punct(long, ?)
punct(long, ?)
advmod(long, how)
root(ROOT, long)
punct(long, ?)
punct(long, ? )
nsubj(ask, I)
aux(ask, have)
advmod(ask, never)
root(ROOT, ask)
case(task, for)
det(task, a)
amod(task, easy)
obl(ask, task)
punct(weary, ,)
cc(weary, but)
nsubj(weary, I)
cop(weary, be)
conj(ask, weary)
case(strife, of)
det(strife, the)
obl(weary, strife)
punct(weary, '')
punct(ask, .)
nsubj(difficult, sleep)
cop(difficult, be)
parataxis(ask, difficult)
det(day, these)
obl:tmod(difficult, day)
punct(ask, .)
nsubj(plague, indigestion)
root(ROOT, plague)
obj(plague, he)
punct(plague, .)
amod(headach, severe)
nsubj(frequent, headach)
cop(frequent, be)
root(ROOT, frequent)
punct(frequent, .)
nsubj(tore, loneliness)
parataxis(frequent, tore)
case(he, through)
obl(tore, he)
case(pain, like)
det(pain, a)
amod(pain, physical)
obl(tore, pain)
advmod(think, whenever)
nsubj(think, he)
advcl(tore, think)
case(Peter, of)
obl(think, Peter)
flat(Peter, Robert)
punct(Nerien, ,)
conj(Peter, Nerien)
punct(Nicholas, ,)
conj(Peter, Nicholas)
conj(Peter, cop)
punct(Martin, ,)
conj(Peter, Martin)
flat(Martin, Bucer)
punct(tillet, ,)
cc(tillet, and)
advmod(compromise, even)
det(tillet, the)
amod(tillet, compromise)
compound(tillet, Louis)
compound(tillet, Du)
conj(Peter, tillet)
punct(frequent, .)
det(traveler, a)
amod(traveler, occasional)
nsubj(bring, traveler)
case(Italy, from)
nmod(traveler, Italy)
root(ROOT, bring)
obj(bring, news)
case(Peter, of)
nmod(news, Peter)
flat(Peter, Robert)
punct(Peter, ,)
nsubj(distribute, who)
aux(distribute, be)
advmod(distribute, now)
acl:relcl(Peter, distribute)
nmod:poss(Bible, he)
obj(distribute, Bible)
case(peasant, among)
det(peasant, the)
amod(peasant, Waldensian)
obl(distribute, peasant)
punct(come, .)
nsubj(come, letter)
parataxis(bring, come)
advmod(come, regularly)
case(Nerien, from)
obl(come, Nerien)
punct(Nicholas, ,)
conj(Nerien, Nicholas)
punct(Martin, ,)
cc(Martin, and)
conj(Nerien, Martin)
punct(come, .)
nsubj(have, he)
root(ROOT, have)
obj(have, Anthony)
cc(William, and)
conj(Anthony, William)
mark(confide, to)
xcomp(have, confide)
advmod(confide, in)
cc(consult, and)
conj(confide, consult)
punct(have, .)
cc(continue, but)
nsubj(continue, William)
root(ROOT, continue)
mark(find, to)
xcomp(continue, find)
det(joy, a)
amod(joy, bitter)
obj(find, joy)
mark(smashing, in)
acl(joy, smashing)
obj(smashing, image)
cc(tear, and)
conj(smashing, tear)
compound:prt(tear, down)
obj(tear, symbol)
amod(symbol, sacred)
case(Church, to)
det(Church, the)
compound(Church, old)
obl(sacred, Church)
punct(continue, .)
nsubj(find, John)
root(ROOT, find)
obj(find, it)
xcomp(find, difficult)
punct(hold, ,)
cc(hold, but)
nsubj(hold, he)
conj(find, hold)
obj(hold, he)
case(check, in)
obl(hold, check)
punct(find, .)
cc(busy, and)
nsubj(busy, Anthony)
cop(busy, be)
root(ROOT, busy)
obj(busy, most)
case(time, of)
det(time, the)
nmod(most, time)
acl(time, court)
det(girl, this)
obj(court, girl)
cc(that, and)
conj(girl, that)
punct(busy, .)
nmod:poss(good, he)
amod(good, easy)
nsubj(look, good)
root(ROOT, look)
ccomp(look, make)
iobj(make, he)
det(favorite, a)
obj(make, favorite)
case(lady, with)
det(lady, the)
nmod(favorite, lady)
punct(make, .)
obl:npmod(make, Geneva)
punct(make, ,)
mark(become, instead)
fixed(instead, of)
advcl(make, become)
det(City, the)
obj(become, City)
case(God, of)
nmod(City, God)
punct(become, ,)
mark(dream, as)
nsubj(dream, John)
aux(dream, have)
advcl(become, dream)
punct(have, ,)
conj(dream, have)
case(year, in)
det(year, the)
nummod(year, two)
obl(have, year)
mark(there, since)
nsubj(there, he)
aux(there, have)
cop(there, be)
advcl(continue, there)
punct(continue, ,)
conj(have, continue)
mark(place, to)
cop(place, be)
det(place, a)
amod(place, godless)
xcomp(continue, place)
advmod(flourish, where)
det(manner, all)
nsubj(flourish, manner)
case(vice, of)
nmod(manner, vice)
acl:relcl(place, flourish)
punct(continue, .)
nsubj(pour, refuge)
root(ROOT, pour)
compound:prt(pour, in)
punct(pour, ,)
advcl(pour, sign)
det(confession, the)
obj(sign, confession)
cc(rule, and)
conj(confession, rule)
mark(remain, in)
fixed(in, order)
mark(remain, to)
advcl(sign, remain)
punct(disregarding, ,)
cc(disregarding, and)
advmod(disregarding, then)
conj(remain, disregarding)
obj(disregarding, they)
punct(pour, .)
nsubj(roll, Dice)
root(ROOT, roll)
punct(ply, ,)
nsubj(ply, prostitute)
conj(roll, ply)
nmod:poss(trade, they)
obj(ply, trade)
punct(steal, ,)
nsubj(steal, thief)
conj(roll, steal)
punct(stab, ,)
nsubj(stab, murderer)
conj(steal, stab)
punct(blasphem, ,)
cc(blasphem, and)
det(ungodly, the)
nsubj(blasphem, ungodly)
conj(roll, blasphem)
punct(roll, .)
nsubj(go, Catholics)
nsubj(Christians, who)
cop(Christians, be)
advmod(Christians, truly)
acl:relcl(Catholics, Christians)
acl:relcl(Catholics, long)
case(penance, for)
det(penance, the)
amod(penance, simple)
obl(long, penance)
case(day, of)
nmod(penance, day)
root(ROOT, go)
obl(go, by)
punct(go, .)
nsubj(recall, Libertines)
root(ROOT, recall)
det(heroism, the)
obj(recall, heroism)
case(past, of)
det(past, the)
nmod(heroism, past)
cc(demand, and)
conj(recall, demand)
punct(recall, :)
punct(recall, ``)
aux(go, be)
nsubj(go, we)
root(ROOT, go)
mark(allow, to)
xcomp(go, allow)
det(Pope, the)
compound(Pope, Protestant)
obj(allow, Pope)
punct(Pope, ,)
compound(Calvin, master)
appos(Pope, Calvin)
punct(allow, ,)
mark(curtail, to)
advcl(allow, curtail)
nmod:poss(liberty, we)
obj(curtail, liberty)
punct(go, ?)
punct(go, ?)
advmod(stick, why)
punct(stick, ,)
discourse(stick, oh)
advmod(stick, why)
punct(stick, ,)
aux(stick, do)
advmod(stick, not)
nsubj(stick, he)
root(ROOT, stick)
mark(preach, to)
advcl(stick, preach)
det(Gospel, the)
obj(preach, Gospel)
punct(preach, ,)
mark(meddle, instead)
fixed(instead, of)
advcl(preach, meddle)
case(affair, in)
amod(affair, civic)
obl(meddle, affair)
punct(politics, ,)
conj(affair, politics)
punct(economics, ,)
conj(affair, economics)
punct(issue, ,)
cc(issue, and)
amod(issue, social)
conj(affair, issue)
nsubj(concern, that)
cop(concern, be)
det(concern, no)
acl:relcl(issue, concern)
case(Church, of)
det(Church, the)
nmod(concern, Church)
punct(concern, '')
punct(stick, ?)
punct(stick, ?)
cc(same, and)
nmod:poss(reply, John)
case(John, 's)
nsubj(same, reply)
cop(same, be)
advmod(same, always)
det(same, the)
root(ROOT, same)
punct(same, :)
punct(same, ``)
nsubj(concern, anything)
nsubj(affect, that)
acl:relcl(anything, affect)
obj(affect, soul)
cop(concern, be)
det(concern, the)
root(ROOT, concern)
case(Church, of)
det(Church, the)
nmod(concern, Church)
punct(concern, !)
punct(concern, !)
nsubj(have, we)
aux(have, will)
root(ROOT, have)
obj(have, righteousness)
punct(have, '')
punct(have, !)
punct(have, !)
nsubj(burn, tear)
parataxis(have, burn)
case(eye, behind)
nmod:poss(eye, he)
obl(burn, eye)
mark(pray, as)
nsubj(pray, he)
advcl(burn, pray)
cc(meditate, and)
conj(pray, meditate)
obl:tmod(meditate, tonight)
punct(have, .)
mark(clear, unless)
det(confusion, the)
nsubj(clear, confusion)
advcl(come, clear)
punct(come, ,)
nsubj(come, he)
aux(come, would)
advmod(come, not)
aux(come, be)
root(ROOT, come)
advmod(come, here)
advmod(longer, much)
advmod(come, longer)
punct(come, .)
nmod:poss(threat, Monsieur)
flat(Monsieur, Favre)
case(Monsieur, 's)
nsubj(become, threat)
aux(become, would)
parataxis(come, become)
det(reality, a)
xcomp(become, reality)
punct(reality, ,)
mark(continue, for)
nsubj(continue, he)
advcl(reality, continue)
mark(proclaim, to)
xcomp(continue, proclaim)
advmod(proclaim, loudly)
mark(rid, that)
det(city, the)
nsubj(rid, city)
aux(rid, must)
ccomp(proclaim, rid)
obj(rid, itself)
case(Frenchman, of)
punct(Frenchman, ``)
mark(interrupt, that)
nsubj(rid, Frenchman)
punct(Frenchman, '')
punct(Frenchman, .)
det(tap, the)
amod(tap, slow)
nsubj(interrupt, tap)
case(cane, of)
det(cane, a)
nmod(tap, cane)
case(step, on)
det(step, the)
compound(step, stone)
nmod(cane, step)
acl(step, come)
compound:prt(come, up)
case(tower, to)
det(tower, the)
obl(come, tower)
advcl(rid, interrupt)
nmod:poss(reverie, he)
obj(interrupt, reverie)
punct(interrupt, .)
obj(interrupt, Faint)
case(first, at)
obl(interrupt, first)
punct(grow, ,)
det(tap, the)
nsubj(grow, tap)
parataxis(interrupt, grow)
mark(sound, until)
nsubj(sound, it)
advcl(grow, sound)
xcomp(sound, loud)
case(wind, against)
det(wind, the)
obl(loud, wind)
punct(come, .)
root(ROOT, Eli)
flat(Eli, corault)
punct(Eli, !)
punct(Eli, !)
nsubj(think, John)
root(ROOT, think)
punct(think, .)
obj(do, what)
aux(do, be)
nsubj(do, he)
root(ROOT, do)
advmod(do, here)
case(hour, at)
det(hour, this)
obl(do, hour)
punct(do, ?)
punct(do, ?)
nsubj(start, he)
root(ROOT, start)
compound:prt(start, down)
det(step, the)
obj(start, step)
mark(meet, to)
acl(step, meet)
det(preacher, the)
amod(blind, near)
punct(blind, -)
amod(preacher, blind)
obj(meet, preacher)
punct(preacher, ,)
nsubj(one, who)
aux(one, have)
cop(one, be)
acl:relcl(preacher, one)
case(Gospelers, of)
det(Gospelers, the)
amod(Gospelers, early)
nmod(one, Gospelers)
case(Paris, in)
nmod(one, Paris)
punct(start, .)
punct(start, ``)
root(ROOT, John)
punct(John, ?)
punct(John, ?)
root(ROOT, be)
expl(be, that)
nsubj(be, you)
punct(be, ?)
punct(be, ? )
nsubj(come, I)
root(ROOT, come)
mark(warn, to)
xcomp(come, warn)
obj(warn, you)
case(plot, of)
det(plot, a)
obl(warn, plot)
punct(come, '')
punct(come, !)
punct(come, !)
nsubj(stand, John)
root(ROOT, stand)
case(he, above)
obl(stand, he)
punct(stand, ,)
nmod:poss(ashen, he)
compound(ashen, face)
parataxis(stand, ashen)
punct(stand, .)
root(ROOT, what)
advmod(what, now)
punct(what, ?)
punct(what, ?)
advmod(take, slowly)
punct(take, ,)
mark(old, like)
det(man, a)
nsubj(old, man)
amod(old, grow)
obl(take, old)
punct(take, ,)
nsubj(take, he)
root(ROOT, take)
nmod:poss(hand, Eli)
case(Eli, 's)
obj(take, hand)
cc(lead, and)
conj(take, lead)
obj(lead, he)
advmod(lead, below)
case(study, to)
det(study, the)
compound(study, tower)
obl(lead, study)
punct(lead, ,)
advcl(lead, guide)
obj(guide, he)
case(chair, to)
det(chair, a)
obl(guide, chair)
case(hearth, beside)
det(hearth, the)
amod(hearth, little)
nmod(chair, hearth)
advmod(burn, where)
det(fire, a)
nsubj(burn, fire)
advmod(burn, still)
acl:relcl(hearth, burn)
punct(take, .)
punct(take, ``)
root(ROOT, plot)
punct(plot, '')
punct(plot, ?)
punct(plot, ?)
nsubj(ask, John)
root(ROOT, ask)
advmod(ask, tiredly)
punct(ask, .)
punct(ask, ``)
nsubj(pay, Monsieur)
flat(Monsieur, Favre)
advmod(pay, just)
root(ROOT, pay)
iobj(pay, I)
det(visit, a)
obj(pay, visit)
punct(pay, . )
nsubj(go, I)
root(ROOT, go)
case(room, to)
nmod:poss(room, you)
obl(go, room)
punct(tell, ,)
cc(tell, and)
nsubj(tell, Anthony)
conj(go, tell)
obj(tell, I)
nsubj(here, you)
cop(here, be)
ccomp(tell, here)
punct(go, .)
nummod(anabaptist, two)
nsubj(be, anabaptist)
punct(Caroli, ,)
conj(anabaptist, Caroli)
cc(benoit, and)
conj(anabaptist, benoit)
punct(be, ,)
root(ROOT, be)
mark(challenge, to)
ccomp(be, challenge)
obj(challenge, you)
cc(William, and)
conj(you, William)
case(debate, to)
det(debate, a)
obl(challenge, debate)
case(Council, before)
det(Council, the)
nmod(debate, Council)
punct(be, .)
expl(be, it)
root(ROOT, be)
mark(trap, to)
cop(trap, be)
det(trap, a)
xcomp(be, trap)
punct(be, .)
nsubj(know, you)
root(ROOT, know)
det(law, the)
obj(know, law)
punct(know, :)
mark(lose, if)
nsubj(lose, you)
advcl(banish, lose)
det(debate, the)
obj(lose, debate)
mark(accept, after)
advcl(lose, accept)
det(challenge, a)
obj(accept, challenge)
punct(banish, ,)
nsubj:pass(banish, you)
aux(banish, will)
aux:pass(banish, be)
parataxis(know, banish)
punct(banish, '')
punct(know, !)
punct(know, !)
punct(know, ``)
nsubj(subject, what)
aux(subject, will)
cop(subject, be)
det(subject, the)
root(ROOT, subject)
punct(subject, '')
punct(subject, ?)
punct(subject, ?)
punct(subject, ``)
nsubj(be, you)
root(ROOT, be)
mark(accuse, to)
aux:pass(accuse, be)
xcomp(be, accuse)
case(Arianism, of)
obl(accuse, Arianism)
mark(confuse, to)
advcl(accuse, confuse)
det(religious, the)
obj(confuse, religious)
nsubj(remain, who)
acl:relcl(religious, remain)
xcomp(remain, loyal)
punct(anger, '')
punct(anger, .)
parataxis(be, anger)
cc(fear, and)
conj(anger, fear)
acl(anger, fuse)
case(John, in)
obl(fuse, John)
punct(anger, .)
advmod(rage, ever)
mark(rage, since)
det(century, the)
amod(century, fourth)
obl(rage, century)
det(controversy, a)
nsubj(rage, controversy)
aux(rage, have)
advcl(anger, rage)
case(person, over)
det(person, the)
obl(rage, person)
case(Christ, of)
nmod(person, Christ)
punct(be, .)
nsubj:pass(term, those)
nsubj(refuse, who)
acl:relcl(those, refuse)
mark(believe, to)
xcomp(refuse, believe)
mark(Son, that)
nsubj(Son, he)
cop(Son, be)
det(Son, the)
amod(Son, eternal)
ccomp(believe, Son)
case(God, of)
nmod(Son, God)
aux:pass(term, be)
root(ROOT, term)
xcomp(term, Arianists)
punct(term, .)
nsubj(come, Peter)
flat(Peter, Caroli)
aux(come, have)
root(ROOT, come)
case(Geneva, to)
obl(come, Geneva)
punct(come, ,)
advcl(come, say)
mark(bishop, that)
nsubj(bishop, he)
aux(bishop, have)
cop(bishop, be)
det(bishop, a)
ccomp(say, bishop)
case(Church, of)
det(Church, the)
nmod(bishop, Church)
case(Rome, of)
nmod(Church, Rome)
cc(persecute, and)
aux(persecute, have)
aux:pass(persecute, be)
conj(bishop, persecute)
case(Paris, in)
obl(persecute, Paris)
case(faith, for)
nmod:poss(faith, he)
amod(faith, reform)
obl(persecute, faith)
punct(come, .)
nsubj(ask, he)
root(ROOT, ask)
mark(appoint, to)
aux:pass(appoint, be)
xcomp(ask, appoint)
det(preacher, a)
xcomp(appoint, preacher)
punct(ask, .)
cc(Michael, but)
root(ROOT, Michael)
nsubj(unmasked, Sept)
aux(unmasked, have)
root(ROOT, unmasked)
obj(unmasked, he)
punct(unmasked, ,)
advcl(unmasked, revealing)
nsubj(bishop, he)
aux(bishop, have)
advmod(bishop, never)
cop(bishop, be)
det(bishop, a)
ccomp(revealing, bishop)
punct(anabaptist, ,)
cc(anabaptist, but)
cop(anabaptist, be)
det(anabaptist, a)
conj(bishop, anabaptist)
punct(afraid, ,)
amod(anabaptist, afraid)
mark(state, to)
xcomp(afraid, state)
nmod:poss(faith, he)
obj(state, faith)
punct(afraid, ,)
mark(know, because)
nsubj(know, he)
advcl(afraid, know)
nsubj(write, John)
flat(John, Calvin)
aux(write, have)
ccomp(know, write)
det(book, a)
obj(write, book)
case(belief, against)
nmod:poss(belief, they)
nmod(book, belief)
mark(sleep, that)
det(soul, the)
nsubj(sleep, soul)
acl(belief, sleep)
case(death, after)
obl(sleep, death)
punct(refuse, .)
advmod(refuse, so)
nsubj(refuse, John)
aux(refuse, have)
conj(sleep, refuse)
mark(agree, to)
xcomp(refuse, agree)
case(appointment, to)
nmod:poss(appointment, he)
obl(agree, appointment)
case(preacher, as)
det(preacher, a)
nmod(appointment, preacher)
punct(seek, ,)
cc(seek, and)
advmod(seek, now)
nsubj(seek, Caroli)
conj(refuse, seek)
obj(seek, revenge)
punct(unmasked, .)
nsubj(sigh, John)
root(ROOT, sigh)
punct(sigh, .)
punct(sigh, ``)
mark(agree, if)
nsubj(agree, William)
advcl(insist, agree)
punct(insist, ,)
nsubj(insist, we)
aux(insist, should)
root(ROOT, insist)
case(debate, on)
det(debate, a)
amod(debate, public)
obl(insist, debate)
punct(debate, '')
punct(insist, ,)
nsubj(say, he)
parataxis(insist, say)
case(length, at)
obl(say, length)
punct(insist, .)
punct(insist, ``)
expl(be, there)
root(ROOT, be)
nsubj(be, more)
case(conspiracy, to)
det(conspiracy, the)
nsubj(be, conspiracy)
punct(be, .)
nsubj(demand, Bern)
root(ROOT, demand)
mark(administer, that)
det(Lord, the)
nmod:poss(Supper, Lord)
case(Lord, 's)
nsubj:pass(administer, Supper)
aux:pass(administer, be)
ccomp(demand, administer)
advmod(administer, here)
mark(use, as)
nsubj(use, it)
advcl(administer, use)
mark(be, to)
xcomp(use, be)
punct(use, ,)
case(bread, with)
amod(bread, unleavened)
obl(use, bread)
punct(demand, . )
advmod(decree, furthermore)
punct(decree, ,)
nsubj(decree, Bern)
root(ROOT, decree)
mark(do, that)
nsubj(do, we)
aux(do, must)
ccomp(decree, do)
mark(order, as)
nsubj:pass(order, we)
aux:pass(order, be)
advcl(do, order)
case(Council, by)
det(Council, the)
obl(order, Council)
punct(preach, ,)
conj(order, preach)
advmod(word, only)
det(word, the)
obj(preach, word)
case(God, of)
nmod(word, God)
cc(stop, and)
conj(preach, stop)
xcomp(stop, meddle)
case(politics, in)
obl(meddle, politics)
punct(stop, '')
punct(decree, !)
punct(decree, !)
punct(decree, ``)
nsubj(spirit, it)
cop(spirit, be)
advmod(spirit, always)
det(spirit, the)
root(ROOT, spirit)
case(Christ, with)
nmod(spirit, Christ)
punct(spirit, ;)
punct(spirit, ;)
nsubj(remain, matter)
mark(inconsequential, such)
fixed(such, as)
amod(bread, leaven)
cc(unleavened, or)
conj(leaven, unleavened)
nsubj(inconsequential, bread)
cop(inconsequential, be)
conj(spirit, inconsequential)
punct(spirit, .)
nsubj(remain, Geneva)
aux(remain, must)
parataxis(spirit, remain)
det(state, a)
amod(state, sovereign)
xcomp(remain, state)
punct(spirit, .)
nsubj(yield, we)
aux(yield, will)
advmod(yield, not)
root(ROOT, yield)
case(demand, to)
det(demand, the)
obl(yield, demand)
case(Bern, of)
nmod(demand, Bern)
punct(yield, '')
punct(yield, !)
punct(yield, !)
det(firelight, the)
nsubj(play, firelight)
root(ROOT, play)
case(lock, over)
nmod:poss(lock, Eli)
case(Eli, 's)
advcl(play, flow)
amod(lock, white)
obj(flow, lock)
cc(feature, and)
amod(feature, rug)
conj(lock, feature)
punct(play, .)
punct(play, ``)
nsubj(indicate, Monsieur)
flat(Monsieur, Favre)
root(ROOT, indicate)
mark(give, that)
mark(co-operate, if)
nsubj(co-operate, I)
aux(co-operate, would)
advcl(give, co-operate)
punct(give, ,)
mark(banish, after)
nsubj:pass(banish, you)
cc(William, and)
conj(you, William)
aux:pass(banish, be)
advcl(co-operate, banish)
punct(banish, ,)
case(debate, follow)
det(debate, the)
obl(banish, debate)
punct(give, ,)
nsubj:pass(give, I)
aux(give, will)
aux:pass(give, be)
ccomp(indicate, give)
det(place, a)
obj(give, place)
case(influence, of)
nmod(place, influence)
punct(give, '')
punct(indicate, .)
punct(indicate, ``)
root(ROOT, what)
cop(what, be)
nmod:poss(reply, you)
nsubj(what, reply)
case(that, to)
nmod(reply, that)
punct(what, '')
punct(what, ?)
punct(what, ?)
punct(what, ``)
mark(banish, that)
nsubj:pass(banish, I)
aux(banish, would)
advmod(banish, rather)
aux:pass(banish, be)
root(ROOT, banish)
case(Christians, with)
nummod(Christians, two)
amod(Christians, such)
obl(banish, Christians)
mark(make, than)
aux:pass(make, be)
advcl(banish, make)
det(Syndic, the)
compound(Syndic, Chief)
xcomp(make, Syndic)
punct(Syndic, '')
punct(banish, !)
punct(banish, !)
det(morning, the)
amod(morning, follow)
obl:tmod(have, morning)
punct(have, ,)
mark(enter, as)
nsubj(enter, John)
advcl(have, enter)
det(Place, the)
obj(enter, Place)
flat(Place, Molard)
case(way, on)
nmod:poss(way, he)
obl(enter, way)
mark(visit, to)
advcl(enter, visit)
det(refugee, a)
amod(refugee, sick)
obj(visit, refugee)
punct(have, ,)
nsubj(have, he)
root(ROOT, have)
det(premonition, a)
obj(have, premonition)
case(danger, of)
nmod(premonition, danger)
punct(have, .)
advmod(circle, then)
advmod(circle, suddenly)
det(group, a)
nsubj(circle, group)
case(man, of)
nmod(group, man)
cc(dog, and)
conj(man, dog)
root(ROOT, circle)
obj(circle, he)
punct(circle, .)
nsubj(want, he)
root(ROOT, want)
mark(run, to)
xcomp(want, run)
punct(know, ,)
cc(know, but)
nsubj(know, he)
conj(want, know)
mark(lose, that)
mark(do, if)
nsubj(do, he)
advcl(lose, do)
punct(lose, ,)
nsubj:pass(lose, he)
aux(lose, would)
aux:pass(lose, be)
ccomp(know, lose)
punct(want, .)
nsubj(stand, he)
root(ROOT, stand)
advmod(still, very)
advmod(stand, still)
punct(stand, ,)
nmod:poss(heart, he)
nsubj(thump, heart)
parataxis(stand, thump)
advmod(thump, wildly)
punct(stand, .)
case(outskirt, on)
det(outskirt, the)
obl(shook, outskirt)
case(rabble, of)
det(rabble, the)
nmod(outskirt, rabble)
det(brother, the)
compound(brother, Camaret)
nsubj(shook, brother)
cc(Gaspard, and)
conj(brother, Gaspard)
flat(Gaspard, Favre)
root(ROOT, shook)
nmod:poss(fist, they)
obj(shook, fist)
punct(shook, .)
punct(shook, ``)
aux(go, be)
nsubj(go, you)
root(ROOT, go)
mark(comply, to)
xcomp(go, comply)
case(demand, with)
det(demand, the)
obl(comply, demand)
case(Bern, of)
nmod(demand, Bern)
punct(go, '')
punct(go, ?)
punct(go, ?)
det(chinless, the)
root(ROOT, chinless)
nsubj(call, jake)
acl:relcl(chinless, call)
punct(chinless, .)
punct(chinless, ``)
root(ROOT, Arianist)
punct(Arianist, '')
punct(Arianist, !)
punct(Arianist, ! )
det(rowdy, a)
nsubj(roar, rowdy)
case(blob, with)
det(blob, a)
amod(blob, big)
nmod(rowdy, blob)
case(nose, of)
det(nose, a)
nmod(blob, nose)
root(ROOT, roar)
punct(roar, .)
punct(roar, ``)
vocative(lift, Heretic)
punct(Heretic, '')
punct(lift, !)
punct(lift, !)
nsubj(lift, John)
root(ROOT, lift)
nmod:poss(hand, he)
obj(lift, hand)
case(silence, for)
obl(lift, silence)
punct(lift, .)
punct(lift, ``)
root(ROOT, know)
obj(know, this)
punct(know, :)
det(minister, the)
nsubj(yield, minister)
aux(yield, will)
advmod(yield, not)
parataxis(know, yield)
case(demand, to)
det(demand, the)
obl(yield, demand)
case(Bern, of)
nmod(demand, Bern)
punct(yield, '')
punct(know, .)
nmod:poss(voice, he)
nsubj(shook, voice)
parataxis(know, shook)
det(little, a)
obj(shook, little)
punct(know, .)
nsubj(heave, somebody)
root(ROOT, heave)
det(stone, a)
obj(heave, stone)
punct(heave, .)
case(instant, for)
det(instant, a)
obl(stun, instant)
nsubj(stun, John)
cop(stun, be)
parataxis(heave, stun)
punct(heave, .)
mark(feel, when)
nsubj(feel, he)
advcl(come, feel)
det(side, the)
obj(feel, side)
case(head, of)
nmod:poss(head, he)
nmod(side, head)
punct(come, ,)
nmod:poss(finger, he)
nsubj(come, finger)
root(ROOT, come)
advmod(come, away)
xcomp(come, cover)
case(blood, with)
obl(cover, blood)
punct(come, .)
mark(duck, before)
nsubj(duck, he)
aux(duck, could)
advcl(strike, duck)
punct(strike, ,)
det(stone, another)
nsubj(strike, stone)
root(ROOT, strike)
obj(strike, he)
punct(strike, .)
cc(another, and)
root(ROOT, another)
punct(another, .)
punct(and, ``)
root(ROOT, let)
obj(let, he)
cop(now, be)
advmod(let, now)
punct(let, '')
punct(let, !)
punct(let, !)
nsubj(say, Pierre)
flat(Pierre, Ameaux)
punct(Pierre, ,)
det(manufacturer, the)
compound(card, game)
punct(card, -)
compound(manufacturer, card)
appos(Pierre, manufacturer)
root(ROOT, say)
punct(say, ,)
nmod:poss(pig, he)
amod(pig, little)
nsubj(glaring, pig)
nsubj(glaring, eye)
ccomp(say, glaring)
punct(say, .)
punct(say, ``)
nsubj(teach, we)
aux(teach, have)
root(ROOT, teach)
iobj(teach, he)
det(lesson, a)
obj(teach, lesson)
punct(teach, '')
punct(teach, .)
det(crowd, the)
nsubj(move, crowd)
parataxis(teach, move)
advmod(move, back)
cc(start, and)
nsubj(start, John)
conj(move, start)
advmod(start, dizzily)
case(hill, down)
det(hill, the)
obl(start, hill)
punct(teach, .)
nsubj(pummel, Fists)
parataxis(teach, pummel)
obj(pummel, he)
mark(stagger, as)
nsubj(stagger, he)
advcl(pummel, stagger)
advmod(stagger, forward)
punct(teach, .)
advmod(slip, then)
nsubj(slip, he)
root(ROOT, slip)
cc(go, and)
conj(slip, go)
advmod(go, down)
case(hand, on)
nmod:poss(hand, he)
obl(go, hand)
cc(knee, and)
conj(hand, knee)
case(snow, in)
det(snow, the)
compound(snow, melting)
nmod(hand, snow)
punct(slip, .)
advmod(snap, at)
mark(snap, once)
det(bevy, a)
nsubj(snap, bevy)
case(dog, of)
nmod(bevy, dog)
aux(snap, be)
root(ROOT, snap)
cc(snarl, and)
conj(snap, snarl)
case(he, around)
obl(snarl, he)
punct(snap, .)
nsubj(lung, one)
punct(horrible, ,)
advmod(horrible, more)
advmod(lung, horrible)
case(rest, than)
det(rest, the)
obl(horrible, rest)
punct(lung, ,)
root(ROOT, lung)
punct(lung, ,)
list(lung, growling)
advmod(growling, deep)
case(throat, in)
nmod:poss(throat, he)
obl(growling, throat)
punct(lung, ,)
nmod:poss(hair, he)
nsubj(bristling, hair)
advcl(lung, bristling)
punct(lung, .)
case(difficulty, with)
amod(difficulty, great)
obl(clamber, difficulty)
nsubj(clamber, John)
root(ROOT, clamber)
case(foot, to)
nmod:poss(foot, he)
obl(clamber, foot)
cc(start, and)
conj(clamber, start)
mark(run, to)
xcomp(start, run)
punct(sweat, ,)
conj(run, sweat)
xcomp(sweat, pour)
compound:prt(pour, down)
nmod:poss(face, he)
obj(pour, face)
punct(clamber, .)
advcl(watch, standing)
case(shelter, in)
det(shelter, the)
obl(standing, shelter)
case(tent, of)
det(tent, the)
nmod(shelter, tent)
punct(shelter, --)
det(tent, a)
amod(tent, reject)
compound(tent, hospital)
appos(shelter, tent)
case(which, on)
obl(drip, which)
det(rain, the)
nsubj(drip, rain)
advmod(drip, now)
acl:relcl(tent, drip)
punct(drum, ,)
advmod(longer, no)
advmod(drum, longer)
xcomp(drip, drum)
punct(watch, --)
nsubj(watch, Adam)
root(ROOT, watch)
nmod:poss(hand, he)
amod(hand, own)
obj(watch, hand)
xcomp(watch, touch)
det(object, the)
obj(touch, object)
case(counter, on)
det(counter, the)
amod(counter, improvise)
obl(touch, counter)
case(board, of)
nmod(counter, board)
acl(board, lay)
case(barrel, across)
nummod(barrel, two)
compound(barrel, beer)
obl(lay, barrel)
punct(watch, .)
expl(be, there)
root(ROOT, be)
punct(be, ,)
advmod(need, of)
fixed(of, course)
punct(need, ,)
det(need, no)
amod(need, real)
nsubj(be, need)
mark(rearrange, to)
acl(need, rearrange)
obj(rearrange, everything)
punct(be, . )
det(inch, a)
compound(inch, quarter)
root(ROOT, inch)
det(way, this)
nmod:npmod(inch, way)
cc(that, or)
conj(way, that)
case(hardbake, for)
det(hardbake, the)
nmod(inch, hardbake)
punct(toffee, ,)
cc(toffee, or)
det(toffee, the)
conj(inch, toffee)
punct(sugar, ,)
cc(sugar, or)
det(sugar, the)
compound(sugar, barley)
conj(toffee, sugar)
punct(sardine, ,)
cc(sardine, or)
det(sardine, the)
conj(sugar, sardine)
punct(bitter, ,)
cc(bitter, or)
det(bitter, the)
conj(sardine, bitter)
punct(milk, ,)
cc(milk, or)
det(milk, the)
amod(milk, condense)
conj(bitter, milk)
punct(stationery, ,)
cc(stationery, or)
det(stationery, the)
conj(milk, stationery)
punct(needle, ,)
cc(needle, or)
det(needle, the)
conj(stationery, needle)
punct(mean, --)
obj(mean, what)
aux(mean, could)
nsubj(mean, it)
parataxis(inch, mean)
punct(mean, ?)
punct(mean, ?)
nsubj(watch, Adam)
root(ROOT, watch)
nmod:poss(hand, he)
amod(hand, own)
obj(watch, hand)
ccomp(watch, make)
det(movement, the)
amod(movement, caress)
punct(movement, ,)
amod(movement, anxious)
obj(make, movement)
obj(fall, that)
punct(make, ,)
mark(fall, when)
nsubj(fall, rain)
advcl(make, fall)
cc(come, and)
nsubj(come, nobody)
conj(fall, come)
punct(draw, ,)
cc(ruin, and)
conj(draw, ruin)
conj(watch, draw)
xcomp(draw, close)
mark(rub, like)
det(cat, a)
nsubj(rub, cat)
advcl(draw, rub)
case(ankles, against)
det(ankles, the)
obl(rub, ankles)
punct(ritual, ,)
aux(ritual, have)
cop(ritual, be)
det(ritual, the)
advcl(draw, ritual)
case(vendor, of)
compound(vendor, stall)
nmod(ritual, vendor)
punct(ritual, ,)
advmod(ritual, forever)
punct(watch, .)
nsubj(recognize, he)
root(ROOT, recognize)
det(gesture, the)
obj(recognize, gesture)
punct(recognize, .)
nsubj(know, he)
root(ROOT, know)
nsubj(mean, it)
aux(mean, be)
ccomp(know, mean)
punct(know, .)
nsubj(see, he)
aux(see, have)
root(ROOT, see)
det(reach, a)
amod(reach, dry)
punct(old, ,)
amod(reach, old)
punct(reach, ,)
amod(reach, yellow)
compound(reach, hand)
obj(see, reach)
advmod(reach, out)
punct(see, ,)
case(solicitude, with)
det(solicitude, that)
amod(solicitude, painful)
obl(see, solicitude)
punct(touch, ,)
mark(touch, to)
advcl(see, touch)
punct(touch, ,)
mark(rearrange, to)
advcl(touch, rearrange)
punct(rearrange, ,)
mark(shift, to)
conj(rearrange, shift)
advmod(shift, aimlessly)
punct(worth, ,)
det(object, some)
nsubj(worth, object)
advcl(shift, worth)
det(pfennig, a)
obj(worth, pfennig)
punct(see, .)
advmod(see, back)
case(Bavaria, in)
obl(back, Bavaria)
nsubj(see, he)
aux(see, have)
root(ROOT, see)
det(gesture, that)
obj(see, gesture)
punct(die, ,)
cc(die, and)
case(sight, at)
det(sight, that)
obl(die, sight)
nmod:poss(heart, he)
nsubj(die, heart)
aux(die, have)
advmod(die, always)
conj(see, die)
case(he, within)
obl(die, he)
punct(see, .)
case(occasion, on)
amod(occasion, such)
obl(have, occasion)
nsubj(have, he)
aux(have, have)
advmod(have, not)
root(ROOT, have)
det(courage, the)
obj(have, courage)
mark(look, to)
acl(courage, look)
case(face, at)
det(face, the)
obl(look, face)
case(hand, above)
det(hand, the)
nmod(face, hand)
punct(have, ,)
det(face, whatever)
parataxis(have, face)
nsubj(face, it)
aux(face, might)
cop(face, be)
punct(have, .)
advmod(own, now)
det(face, the)
nsubj(own, face)
cop(own, be)
nmod:poss(own, he)
root(ROOT, own)
punct(own, .)
nsubj(wonder, he)
root(ROOT, wonder)
det(expression, what)
obj(wonder, expression)
punct(wonder, ,)
mark(make, as)
nsubj(make, he)
advcl(face, make)
det(gesture, that)
obj(make, gesture)
punct(face, ,)
cop(face, be)
case(face, on)
nmod:poss(face, he)
ccomp(wonder, face)
punct(wonder, .)
nsubj(wonder, he)
root(ROOT, wonder)
mark(wear, if)
nsubj(wear, it)
advcl(wonder, wear)
det(anxiety, the)
amod(anxiety, old)
obj(wear, anxiety)
punct(stoicism, ,)
cc(stoicism, or)
det(stoicism, the)
amod(stoicism, old)
punct(stoicism, ,)
amod(stoicism, taut)
conj(anxiety, stoicism)
punct(wonder, .)
cc(be, but)
expl(be, there)
root(ROOT, be)
det(need, no)
nsubj(be, need)
punct(be, ,)
nsubj(remember, he)
parataxis(be, remember)
punct(remember, ,)
case(hand, for)
nmod:poss(hand, he)
obl(remember, hand)
mark(reach, to)
acl(hand, reach)
compound:prt(reach, out)
punct(reach, ,)
case(face, for)
nmod:poss(face, he)
obl(reach, face)
mark(show, to)
advcl(reach, show)
obj(show, concern)
cc(stoicism, or)
conj(concern, stoicism)
punct(be, .)
nsubj(nothing, it)
cop(nothing, be)
root(ROOT, nothing)
case(he, to)
nmod(nothing, he)
mark(fall, if)
nsubj(fall, rain)
advcl(nothing, fall)
cc(come, and)
nsubj(come, nobody)
conj(nothing, come)
punct(nothing, .)
advmod(assume, then)
advmod(assume, why)
aux(assume, be)
nsubj(assume, he)
parataxis(nothing, assume)
det(role, the)
obj(assume, role)
punct(role, --)
det(gesture, the)
appos(role, gesture)
cc(suffering, and)
det(suffering, the)
conj(gesture, suffering)
punct(nothing, ?)
punct(nothing, ?)
obj(expiat, what)
aux(expiat, be)
nsubj(expiat, he)
root(ROOT, expiat)
punct(expiat, ?)
punct(expiat, ?)
cc(take, or)
aux(take, be)
nsubj(take, he)
advmod(take, now)
root(ROOT, take)
det(role, the)
obj(take, role)
punct(role, --)
det(gesture, the)
appos(role, gesture)
cc(suffering, and)
det(suffering, the)
conj(gesture, suffering)
punct(take, --)
mark(way, because)
nsubj(way, it)
cop(way, be)
det(way, the)
amod(way, only)
advcl(take, way)
mark(affirm, to)
acl(way, affirm)
nmod:poss(history, he)
obj(affirm, history)
cc(identity, and)
conj(history, identity)
case(loneliness, in)
det(loneliness, the)
amod(loneliness, torpid)
punct(loneliness, ,)
amod(loneliness, befogg)
obl(affirm, loneliness)
case(land, of)
det(land, this)
nmod(loneliness, land)
punct(take, .)
nsubj(Virginia, this)
cop(Virginia, be)
root(ROOT, Virginia)
punct(Virginia, .)
nsubj(look, he)
root(ROOT, look)
case(tent, out)
case(tent, of)
det(tent, the)
obl(look, tent)
case(street, at)
det(street, the)
compound(street, company)
obl(look, street)
punct(look, .)
det(rain, the)
nsubj(drip, rain)
root(ROOT, drip)
case(loblolly, on)
det(loblolly, the)
compound(loblolly, freezing)
obl(drip, loblolly)
case(street, of)
det(street, the)
nmod(loblolly, street)
punct(drip, .)
case(gray, beyond)
det(gray, that)
amod(gray, misty)
obl(see, gray)
case(rain, of)
det(rain, the)
nmod(gray, rain)
punct(see, ,)
nsubj(see, he)
root(ROOT, see)
det(hutment, the)
compound(hutment, stretch)
obj(see, hutment)
punct(cabin, ,)
amod(cabin, low)
amod(cabin, diminutive)
compound(cabin, log)
conj(hutment, cabin)
punct(hutment, ,)
acl(hutment, chink)
case(mud, with)
obl(chink, mud)
punct(see, ,)
case(doorway, with)
obl(have, doorway)
det(man, a)
nsubj(have, man)
aux(have, would)
parataxis(see, have)
mark(crouch, to)
xcomp(have, crouch)
mark(get, to)
advcl(crouch, get)
advmod(get, through)
punct(get, ,)
case(roof, with)
obl(get, roof)
case(tent, of)
nmod(roof, tent)
acl(tent, lay)
compound:prt(lay, over)
obj(lay, bough)
cc(board, or)
conj(bough, board)
case(box, from)
compound(box, hardtack)
nmod(bough, box)
punct(rail, ,)
cc(rail, or)
compound(rail, fence)
conj(bough, rail)
punct(rail, ,)
case(chimney, with)
amod(chimney, cranky)
nmod(rail, chimney)
case(stick, of)
nmod(chimney, stick)
cc(mud, and)
amod(mud, dry)
conj(stick, mud)
punct(see, .)
det(chimney, the)
nsubj:pass(surmount, chimney)
case(hut, of)
det(hut, the)
nmod(chimney, hut)
case(he, across)
case(he, from)
nmod(hut, he)
aux:pass(surmount, be)
root(ROOT, surmount)
case(barrel, by)
det(barrel, a)
compound(barrel, beef)
obl(surmount, barrel)
case(end, with)
nmod(barrel, end)
acl(end, knock)
compound:prt(knock, out)
punct(surmount, .)
case(air, in)
det(air, this)
amod(air, heavy)
obl(seem, air)
punct(seem, ,)
advmod(seem, however)
punct(seem, ,)
det(device, that)
nsubj(seem, device)
aux(seem, do)
advmod(seem, not)
root(ROOT, seem)
mark(help, to)
xcomp(seem, help)
punct(seem, .)
det(smoke, the)
nsubj(rise, smoke)
case(chimney, from)
det(chimney, that)
nmod(smoke, chimney)
root(ROOT, rise)
advmod(sluggishly, as)
advmod(rise, sluggishly)
case(smoke, as)
obl(rise, smoke)
case(other, from)
det(other, any)
obl(rise, other)
punct(hang, ,)
cc(hang, and)
conj(rise, hang)
advmod(sadly, as)
advmod(hang, sadly)
case(drizzle, in)
det(drizzle, the)
obl(hang, drizzle)
punct(creep, ,)
advcl(hang, creep)
advmod(creep, back)
advmod(creep, down)
case(canva, along)
det(canva, the)
amod(canva, sopping)
obl(creep, canva)
case(roof, of)
det(roof, the)
nmod(canva, roof)
punct(board, .)
case(door, over)
det(door, the)
obl(board, door)
cop(board, be)
det(board, a)
parataxis(rise, board)
case(letter, with)
amod(letter, large)
punct(letter, ,)
amod(letter, inept)
nmod(board, letter)
punct(letter, :)
advmod(home, home)
amod(home, sweet)
parataxis(board, home)
punct(rise, .)
nsubj(hut, this)
cop(hut, be)
det(hut, the)
root(ROOT, hut)
case(simm, of)
nmod(hut, simm)
flat(simm, Purdew)
punct(simm, ,)
det(hero, the)
appos(simm, hero)
punct(hut, .)
det(man, the)
nsubj:pass(huddled, man)
aux:pass(huddled, be)
root(ROOT, huddled)
case(lair, in)
det(lair, those)
obl(huddled, lair)
punct(huddled, .)
nsubj(know, Adam)
root(ROOT, know)
det(name, the)
obj(know, name)
case(some, of)
nmod(name, some)
punct(know, .)
nsubj(know, he)
root(ROOT, know)
det(face, the)
obj(know, face)
case(all, of)
nmod(face, all)
punct(hairy, ,)
conj(all, hairy)
cc(shave, or)
conj(all, shave)
punct(old, ,)
amod(face, old)
cc(young, or)
conj(all, young)
punct(fat, ,)
conj(old, fat)
cc(thin, or)
conj(fat, thin)
punct(suffer, ,)
conj(fat, suffer)
cc(harden, or)
conj(suffer, harden)
punct(sad, ,)
conj(suffer, sad)
cc(gay, or)
conj(sad, gay)
punct(good, ,)
conj(sad, good)
cc(bad, or)
conj(good, bad)
punct(know, .)
mark(stand, when)
nsubj(stand, they)
advcl(study, stand)
case(tent, about)
nmod:poss(tent, he)
obl(stand, tent)
punct(chaff, ,)
advcl(stand, chaff)
det(other, each)
obj(chaff, other)
punct(chaff, ,)
conj(chaff, exchange)
nmod:poss(obscenity, they)
obj(exchange, obscenity)
punct(curse, ,)
conj(exchange, curse)
obj(curse, command)
cc(weather, or)
conj(command, weather)
punct(study, ,)
nsubj(study, he)
aux(study, have)
root(ROOT, study)
nmod:poss(face, they)
obj(study, face)
punct(study, .)
nsubj(have, he)
aux(have, have)
root(ROOT, have)
det(need, the)
obj(have, need)
mark(understand, to)
acl(need, understand)
det(life, what)
nsubj(lurk, life)
ccomp(understand, lurk)
case(mask, behind)
det(mask, the)
obl(lurk, mask)
case(flesh, of)
nmod(mask, flesh)
punct(mask, ,)
case(oath, behind)
det(oath, the)
nmod(mask, oath)
punct(banter, ,)
det(banter, the)
conj(mask, banter)
punct(banter, ,)
det(sadness, the)
appos(banter, sadness)
punct(have, .)
mark(look, once)
advmod(look, covertly)
advcl(see, look)
case(simm, at)
obl(look, simm)
flat(simm, Purdew)
punct(see, ,)
det(man, the)
amod(man, only)
nsubj(see, man)
case(world, in)
det(world, the)
nmod(man, world)
obj(hate, whom)
nsubj(hate, he)
acl:relcl(man, hate)
punct(see, ,)
nsubj(see, he)
aux(see, have)
root(ROOT, see)
det(jaw, the)
amod(jaw, heavy)
punct(slack, ,)
conj(heavy, slack)
punct(jaw, ,)
amod(jaw, bestubble)
conj(open, jaw)
xcomp(see, open)
cc(close, and)
conj(open, close)
mark(emit, to)
advcl(close, emit)
det(banter, the)
amod(banter, cruel)
punct(banter, ,)
amod(banter, obscene)
obj(emit, banter)
punct(see, ,)
cc(see, and)
aux(see, have)
conj(see, see)
det(eye, the)
amod(blue, pale)
punct(blue, -)
amod(eye, blue)
nsubj(go, eye)
ccomp(see, go)
xcomp(go, watery)
case(whisky, with)
obl(watery, whisky)
cc(merriment, and)
conj(whisky, merriment)
punct(see, ,)
cc(see, and)
advmod(see, suddenly)
nsubj(see, he)
aux(see, be)
advmod(see, not)
conj(go, see)
det(face, the)
obj(see, face)
case(creature, of)
det(creature, that)
amod(creature, vile)
nmod(face, creature)
punct(see, .)
nsubj(see, he)
aux(see, be)
root(ROOT, see)
punct(see, ,)
advmod(face, somehow)
punct(face, ,)
det(face, the)
ccomp(see, face)
case(boy, of)
det(boy, a)
amod(boy, young)
nmod(face, boy)
punct(face, ,)
det(boy, the)
appos(face, boy)
appos(boy, simm)
flat(simm, Purdew)
aux(boy, must)
advmod(boy, once)
aux(boy, have)
cop(boy, be)
punct(boy, ,)
det(boy, a)
parataxis(see, boy)
case(hair, with)
compound(hair, sorrel)
nmod(boy, hair)
punct(eye, ,)
cc(eye, and)
amod(eye, blue)
conj(hair, eye)
acl(eye, dancing)
case(gaiety, with)
obl(dancing, gaiety)
punct(mouth, ,)
cc(mouth, and)
det(mouth, the)
compound(mouth, boy)
conj(eye, mouth)
acl(mouth, grin)
advmod(grin, trustfully)
case(freckle, among)
det(freckle, the)
obl(grin, freckle)
punct(see, .)
case(moment, in)
det(moment, that)
obl(hear, moment)
case(vision, of)
nmod(moment, vision)
nsubj(hear, Adam)
root(ROOT, hear)
det(voice, the)
obj(hear, voice)
case(himself, within)
nmod(voice, himself)
advcl(hear, say)
punct(hear, :)
nsubj(hate, I)
aux(hate, must)
advmod(hate, not)
root(ROOT, hate)
obj(hate, he)
punct(hate, ,)
nsubj(hate, I)
aux(hate, must)
advmod(hate, not)
parataxis(hate, hate)
obj(hate, he)
cc(die, or)
nsubj(die, I)
aux(die, shall)
conj(hate, die)
punct(hate, .)
nmod:poss(heart, he)
nsubj(open, heart)
advmod(open, suddenly)
root(ROOT, open)
case(joy, to)
obl(open, joy)
punct(open, .)
nsubj(think, he)
root(ROOT, think)
mark(talk, that)
mark(once, if)
advcl(talk, once)
punct(talk, ,)
advmod(once, only)
advmod(talk, once)
punct(talk, ,)
nsubj(talk, he)
aux(talk, could)
ccomp(think, talk)
case(simm, with)
obl(talk, simm)
flat(simm, Purdew)
punct(something, ,)
appos(simm, something)
case(life, about)
nmod:poss(life, he)
amod(life, own)
nmod(something, life)
punct(clear, ,)
cc(life, and)
det(life, all)
nsubj(clear, life)
punct(clear, ,)
aux(clear, would)
cop(clear, be)
ccomp(think, clear)
cc(simple, and)
conj(clear, simple)
punct(think, .)
mark(turn, if)
nsubj(turn, simm)
flat(simm, Purdew)
aux(turn, would)
root(ROOT, turn)
case(he, to)
obl(turn, he)
cc(say, and)
conj(turn, say)
punct(turn, :)
punct(turn, ``)
vocative(thing, Adam)
punct(thing, ,)
nsubj(know, you)
parataxis(thing, know)
mark(boy, when)
nsubj(boy, I)
cop(boy, be)
det(boy, a)
advcl(know, boy)
punct(thing, ,)
nsubj(thing, it)
cop(thing, be)
det(thing, a)
amod(thing, funny)
root(ROOT, thing)
advcl(thing, happen)
punct(thing, .)
discourse(tell, Lemme)
root(ROOT, tell)
obj(tell, you)
advmod(tell, now)
punct(tell, '')
root(ROOT, --)
mark(do, if)
advmod(simm, only)
nsubj(do, simm)
flat(simm, Purdew)
aux(do, could)
advcl(whatever, do)
obj(do, that)
punct(thing, ,)
det(thing, whatever)
det(thing, the)
root(ROOT, thing)
nsubj(remember, he)
acl:relcl(thing, remember)
cc(tell, and)
conj(remember, tell)
punct(thing, .)
nsubj(sign, it)
aux(sign, would)
cop(sign, be)
det(sign, a)
root(ROOT, sign)
case(untellable, for)
det(untellable, the)
nmod(sign, untellable)
punct(understand, ,)
cc(understand, and)
nsubj(understand, he)
punct(Adam, ,)
appos(he, Adam)
punct(understand, ,)
aux(understand, would)
conj(sign, understand)
punct(understand, .)
advmod(understand, now)
punct(understand, ,)
nsubj(understand, Adam)
punct(understand, ,)
case(light, in)
det(light, the)
amod(light, gray)
obl(stare, light)
case(afternoon, of)
nmod(light, afternoon)
punct(stare, ,)
conj(understand, stare)
advmod(stare, across)
case(hut, at)
det(hut, the)
obl(stare, hut)
case(tent, opposite)
nmod:poss(tent, he)
nmod(hut, tent)
punct(think, ,)
cc(think, and)
conj(stare, think)
case(simm, of)
obl(think, simm)
flat(simm, Purdew)
advcl(think, lie)
case(there, in)
obl(lie, there)
case(gloom, in)
det(gloom, the)
obl(lie, gloom)
punct(lie, ,)
conj(lie, snore)
case(bunk, on)
nmod:poss(bunk, he)
obl(snore, bunk)
punct(snore, ,)
mark(chok, with)
det(fume, the)
obl(snore, fume)
case(whisky, of)
nmod(fume, whisky)
acl(fume, chok)
det(air, the)
obj(chok, air)
punct(sign, .)
nsubj(see, he)
root(ROOT, see)
det(sign, the)
obj(see, sign)
case(door, above)
det(door, the)
nmod(sign, door)
case(hut, of)
det(hut, the)
nmod(door, hut)
punct(hut, :)
advmod(home, home)
amod(home, sweet)
parataxis(see, home)
punct(see, .)
nsubj(see, he)
root(ROOT, see)
det(figure, the)
obj(see, figure)
case(man, of)
det(man, a)
nmod(figure, man)
case(poncho, in)
det(poncho, a)
obl(see, poncho)
acl(poncho, come)
case(street, up)
det(street, the)
compound(street, company)
obl(come, street)
punct(come, ,)
case(armful, with)
det(armful, a)
obl(come, armful)
case(wood, of)
nmod(armful, wood)
punct(see, .)
nsubj(Pullen, it)
cop(Pullen, be)
root(ROOT, Pullen)
flat(Pullen, James)
punct(Pullen, ,)
det(campmate, the)
appos(Pullen, campmate)
case(simm, of)
nmod(campmate, simm)
flat(simm, Purdew)
punct(Pullen, .)
nsubj(carry, he)
root(ROOT, carry)
det(wood, the)
obj(carry, wood)
punct(carry, ,)
conj(carry, carry)
det(water, the)
obj(carry, water)
punct(do, ,)
conj(carry, do)
det(cooking, the)
obj(do, cooking)
punct(cleaning, ,)
conj(cooking, cleaning)
cc(mend, and)
conj(cooking, mend)
punct(get, ,)
cc(get, and)
advmod(get, occasionally)
conj(carry, get)
det(kick, a)
obj(get, kick)
case(butt, in)
det(butt, the)
obl(get, butt)
case(pain, for)
nmod:poss(pain, he)
nmod(butt, pain)
punct(watch, .)
nsubj(watch, Adam)
parataxis(carry, watch)
det(flow, the)
compound(flow, moisture)
obj(watch, flow)
case(poncho, from)
det(poncho, the)
nmod(flow, poncho)
punct(carry, .)
nsubj(give, it)
root(ROOT, give)
det(fabric, the)
amod(fabric, rubberize)
iobj(give, fabric)
det(gleam, a)
amod(gleam, dull)
obj(give, gleam)
punct(give, ,)
case(metal, like)
nmod(gleam, metal)
punct(give, .)
nsubj(lower, Pullen)
flat(Pullen, James)
advmod(lower, humbly)
parataxis(give, lower)
nmod:poss(head, he)
obj(lower, head)
punct(push, ,)
conj(lower, push)
case(door, aside)
det(door, the)
compound(box, hardtack)
punct(box, -)
compound(door, box)
obl(push, door)
case(hut, of)
det(hut, the)
nmod(door, hut)
punct(go, ,)
cc(go, and)
aux:pass(go, be)
conj(lower, go)
case(sight, from)
obl(go, sight)
punct(give, .)
nsubj(stare, Adam)
root(ROOT, stare)
case(door, at)
det(door, the)
obl(stare, door)
cc(remember, and)
conj(stare, remember)
mark(award, that)
nsubj:pass(award, simm)
flat(simm, Purdew)
aux(award, have)
aux:pass(award, be)
ccomp(remember, award)
det(Medal, the)
obj(award, Medal)
case(Honor, of)
nmod(Medal, Honor)
case(gallantry, for)
obl(award, gallantry)
case(Antietam, at)
obl(award, Antietam)
punct(stare, .)
det(street, the)
nsubj(empty, street)
cop(empty, be)
advmod(empty, again)
root(ROOT, empty)
punct(empty, .)
det(drizzle, the)
nsubj(slack, drizzle)
aux(slack, be)
root(ROOT, slack)
compound:prt(slack, off)
advmod(slack, now)
punct(grayer, ,)
cc(grayer, but)
det(light, the)
nsubj(grayer, light)
cop(grayer, be)
conj(slack, grayer)
punct(slack, .)
case(interest, with)
amod(interest, enormous)
obl(watch, interest)
punct(watch, ,)
nsubj(watch, Adam)
root(ROOT, watch)
nmod:poss(hand, he)
obj(watch, hand)
mark(touch, as)
nsubj(touch, they)
advcl(watch, touch)
cc(shift, and)
conj(watch, shift)
det(object, the)
obj(shift, object)
case(board, on)
det(board, the)
obl(shift, board)
advmod(shift, directly)
case(he, before)
obl(shift, he)
punct(watch, .)
case(emptiness, into)
det(emptiness, the)
obl(move, emptiness)
case(street, of)
det(street, the)
nmod(emptiness, street)
punct(spirit, ,)
cc(spirit, and)
nmod:poss(spirit, he)
conj(street, spirit)
punct(move, ,)
root(ROOT, move)
det(form, a)
obj(move, form)
punct(move, .)
det(form, the)
nsubj:pass(swath, form)
aux:pass(swath, be)
root(ROOT, swath)
case(blanket, in)
det(blanket, a)
compound(blanket, army)
obl(swath, blanket)
punct(blanket, ,)
advmod(patch, much)
amod(blanket, patch)
punct(patch, ,)
conj(patch, fasten)
case(neck, at)
det(neck, the)
obl(fasten, neck)
case(cord, with)
det(cord, a)
obl(fasten, cord)
punct(blanket, .)
case(huddle, from)
case(huddle, under)
det(huddle, the)
amod(huddle, shapeless)
obl(swath, huddle)
case(blanket, of)
nmod(huddle, blanket)
det(foot, the)
nsubj(move, foot)
acl:relcl(huddle, move)
case(mud, in)
det(mud, the)
obl(move, mud)
punct(swath, .)
det(foot, the)
nsubj(wear, foot)
root(ROOT, wear)
compound(shoe, army)
obj(wear, shoe)
punct(wear, ,)
case(disrepair, in)
amod(disrepair, obvious)
obl(wear, disrepair)
punct(wear, .)
det(head, the)
nsubj:pass(wrap, head)
aux:pass(wrap, be)
root(ROOT, wrap)
case(turban, in)
det(turban, a)
obl(wrap, turban)
cc(ride, and)
case(top, on)
obl(ride, top)
case(turban, of)
det(turban, the)
nmod(top, turban)
conj(wrap, ride)
det(hamper, a)
amod(hamper, great)
obj(ride, hamper)
case(which, across)
obl(flung, which)
det(piece, a)
nsubj:pass(flung, piece)
case(poncho, of)
nmod(piece, poncho)
aux(flung, have)
aux:pass(flung, be)
acl:relcl(hamper, flung)
punct(wrap, .)
det(face, the)
amod(face, gray)
nsubj(stare, face)
root(ROOT, stare)
advmod(ahead, straight)
advmod(stare, ahead)
case(drizzle, in)
det(drizzle, the)
obl(stare, drizzle)
punct(stare, . )
nsubj(run, Moisture)
root(ROOT, run)
case(cheek, down)
det(cheek, the)
obl(run, cheek)
punct(gather, ,)
conj(run, gather)
case(tip, at)
det(tip, the)
obl(gather, tip)
case(nose, of)
det(nose, the)
nmod(tip, nose)
punct(chin, ,)
cc(chin, and)
case(chin, at)
det(chin, the)
conj(tip, chin)
punct(run, .)
det(figure, the)
nsubj(close, figure)
cop(close, be)
root(ROOT, close)
advmod(close, enough)
advmod(close, now)
mark(see, for)
nsubj(see, he)
mark(see, to)
advcl(close, see)
det(nose, the)
obj(see, nose)
acl(nose, twitch)
mark(dislodge, to)
advcl(twitch, dislodge)
det(drop, the)
obj(dislodge, drop)
acl(drop, cling)
advmod(cling, there)
punct(close, .)
det(figure, the)
nsubj(stop, figure)
root(ROOT, stop)
cc(freed, and)
nummod(hand, one)
nsubj:pass(freed, hand)
aux:pass(freed, be)
advmod(freed, perilously)
conj(stop, freed)
case(hamper, from)
det(hamper, the)
obl(freed, hamper)
mark(scratch, to)
advcl(freed, scratch)
det(nose, the)
obj(scratch, nose)
punct(stop, .)
advmod(move, then)
det(figure, the)
nsubj(move, figure)
root(ROOT, move)
advmod(move, on)
punct(move, .)
nsubj(one, this)
cop(one, be)
parataxis(move, one)
case(woman, of)
det(woman, the)
amod(woman, irish)
nmod(one, woman)
nsubj(build, who)
aux(build, have)
acl:relcl(woman, build)
nmod:poss(hut, they)
amod(hut, own)
obj(build, hut)
advmod(build, down)
case(river, near)
det(river, the)
obl(build, river)
punct(one, .)
nsubj(wash, they)
aux(wash, do)
root(ROOT, wash)
punct(wash, .)
nsubj(recognize, Adam)
parataxis(wash, recognize)
det(one, this)
obj(recognize, one)
punct(wash, .)
nsubj(recognize, he)
root(ROOT, recognize)
obj(recognize, she)
mark(one, because)
nsubj(one, she)
cop(one, be)
det(one, the)
advcl(recognize, one)
nsubj(stop, who)
punct(stop, ,)
case(twilight, in)
det(twilight, a)
compound(twilight, winter)
obl(stop, twilight)
punct(stop, ,)
case(edge, on)
det(edge, the)
obl(stop, edge)
case(camp, of)
nmod(edge, camp)
punct(stop, ,)
aux(stop, have)
advmod(stop, once)
conj(one, stop)
obj(stop, he)
cc(reach, and)
conj(stop, reach)
compound:prt(reach, down)
nmod:poss(hand, she)
obj(reach, hand)
mark(touch, to)
advcl(reach, touch)
nmod:poss(fly, he)
obj(touch, fly)
punct(recognize, .)
punct(recognize, ``)
compound(mutton, slice)
compound(mutton, o')
root(ROOT, mutton)
punct(mutton, ,)
list(mutton, bhoy)
punct(mutton, '')
punct(mutton, ?)
punct(mutton, ?)
nsubj(query, she)
aux(query, have)
root(ROOT, query)
case(guttural, in)
nmod:poss(guttural, she)
amod(guttural, soft)
obl(query, guttural)
punct(query, .)
punct(query, ``)
compound(mutton, slice)
compound(mutton, o')
root(ROOT, mutton)
punct(mutton, '')
punct(mutton, ?)
punct(mutton, ?)
nmod:poss(name, she)
nsubj(Mollie, name)
cop(Mollie, be)
root(ROOT, Mollie)
punct(Mollie, .)
nsubj(call, they)
root(ROOT, call)
obj(call, she)
obj(call, Mollie)
det(Mutton, the)
obj(call, Mutton)
punct(laugh, ,)
cc(laugh, and)
conj(call, laugh)
punct(call, .)
advcl(see, look)
case(street, down)
det(street, the)
obl(look, street)
case(she, after)
obl(look, she)
punct(see, ,)
nsubj(see, Adam)
root(ROOT, see)
mark(stop, that)
nsubj(stop, she)
aux(stop, have)
advmod(stop, again)
ccomp(see, stop)
cc(remove, and)
advmod(remove, again)
conj(stop, remove)
nummod(hand, one)
obj(remove, hand)
case(basket, from)
det(basket, the)
obl(remove, basket)
punct(see, .)
nsubj(make, he)
aux(make, could)
advmod(make, not)
root(ROOT, make)
compound:prt(make, out)
punct(know, ,)
cc(know, but)
nsubj(know, he)
conj(make, know)
mark(scratch, that)
advmod(scratch, again)
nsubj(scratch, she)
aux(scratch, be)
ccomp(know, scratch)
nmod:poss(nose, she)
obj(scratch, nose)
punct(make, .)
nsubj(scratch, Mollie)
det(Mutton, the)
nsubj(scratch, Mutton)
aux(scratch, be)
root(ROOT, scratch)
nmod:poss(nose, she)
obj(scratch, nose)
punct(scratch, .)
det(word, the)
nsubj(run, word)
root(ROOT, run)
advmod(run, crazily)
case(head, in)
nmod:poss(head, he)
obl(run, head)
punct(run, :)
nsubj(scratch, Mollie)
det(Mutton, the)
nsubj(scratch, Mutton)
aux(scratch, be)
root(ROOT, scratch)
nmod:poss(nose, she)
obj(scratch, nose)
case(rain, in)
det(rain, the)
obl(scratch, rain)
punct(scratch, .)
advmod(fall, then)
det(word, the)
nsubj(fall, word)
parataxis(scratch, fall)
case(pattern, into)
det(pattern, a)
obl(fall, pattern)
punct(scratch, :)
punct(scratch, ``)
nsubj(scratch, Mollie)
det(Mutton, the)
nsubj(scratch, Mutton)
aux(scratch, be)
root(ROOT, scratch)
nmod:poss(nose, she)
obj(scratch, nose)
punct(scratch, ,)
conj(scratch, scratch)
nmod:poss(nose, she)
obj(scratch, nose)
case(rain, in)
det(rain, the)
obl(scratch, rain)
punct(scratch, .)
nsubj(scratch, Mollie)
det(Mutton, the)
nsubj(scratch, Mutton)
aux(scratch, be)
parataxis(scratch, scratch)
nmod:poss(nose, she)
obj(scratch, nose)
case(rain, in)
det(rain, the)
obl(scratch, rain)
punct(scratch, '')
punct(stop, .)
det(pattern, the)
nsubj(stop, pattern)
aux(stop, would)
advmod(stop, not)
parataxis(scratch, stop)
punct(stop, .)
nsubj(come, it)
root(ROOT, come)
advmod(come, again)
cc(again, and)
conj(again, again)
punct(come, .)
nsubj(feel, he)
root(ROOT, feel)
xcomp(feel, trap)
case(pattern, in)
det(pattern, that)
obl(trap, pattern)
punct(feel, ,)
case(repetition, in)
det(repetition, the)
obl(trap, repetition)
punct(feel, .)
advmod(think, suddenly)
nsubj(think, he)
parataxis(feel, think)
nsubj(weep, he)
aux(weep, might)
ccomp(think, weep)
punct(feel, .)
punct(feel, ``)
root(ROOT, what)
cop(what, be)
det(matter, the)
nsubj(what, matter)
case(I, with)
nmod(matter, I)
punct(what, '')
punct(what, ?)
punct(what, ?)
nsubj(demand, he)
root(ROOT, demand)
compound:prt(demand, out)
xcomp(demand, loud)
punct(demand, .)
nsubj(look, he)
root(ROOT, look)
advmod(around, wildly)
advmod(look, around)
punct(look, ,)
case(street, at)
det(street, the)
advmod(empty, now)
amod(street, empty)
obl(look, street)
punct(look, ,)
case(mud, at)
det(mud, the)
obl(look, mud)
punct(look, ,)
case(rain, at)
det(rain, the)
obl(look, rain)
punct(look, .)
punct(look, ``)
discourse(what, oh)
punct(what, ,)
root(ROOT, what)
cop(what, be)
det(matter, the)
nsubj(what, matter)
case(I, with)
nmod(matter, I)
punct(what, '')
punct(what, ?)
punct(what, ?)
nsubj(demand, he)
root(ROOT, demand)
punct(demand, .)
mark(store, when)
nsubj(store, he)
aux(store, have)
advcl(demand, store)
nmod:poss(stock, he)
obj(store, stock)
case(chest, in)
det(chest, the)
amod(chest, great)
compound(chest, oak)
obl(store, chest)
punct(lock, ,)
conj(store, lock)
det(hasp, the)
nummod(hasp, two)
amod(hasp, big)
obj(lock, hasp)
cc(secure, and)
conj(lock, secure)
det(chain, the)
amod(chain, additional)
obj(secure, chain)
punct(tie, ,)
conj(secure, tie)
det(fly, the)
obj(tie, fly)
case(tent, of)
det(tent, the)
nmod(fly, tent)
punct(pick, ,)
cc(pick, and)
conj(store, pick)
compound:prt(pick, up)
det(box, the)
compound(box, cash)
obj(pick, box)
punct(move, ,)
nsubj(move, he)
conj(pick, move)
compound:prt(move, up)
det(street, the)
compound(street, darkening)
obj(move, street)
punct(demand, .)
nsubj(consign, he)
aux(consign, would)
root(ROOT, consign)
det(box, the)
compound(box, cash)
obj(consign, box)
case(hand, into)
det(hand, the)
obl(consign, hand)
case(Jed, of)
nmod(hand, Jed)
flat(Jed, Hawksworth)
punct(consign, ,)
advmod(stand, then)
conj(consign, stand)
mark(check, by)
mark(check, while)
nmod:poss(employer, he)
nsubj(check, employer)
advcl(stand, check)
det(contents, the)
obj(check, contents)
cc(list, and)
det(list, the)
conj(contents, list)
case(item, of)
nmod(list, item)
acl(item, sell)
punct(consign, .)
advmod(what, then)
vocative(what, he)
punct(he, --)
advmod(what, then)
root(ROOT, what)
punct(what, ?)
punct(what, ?)
nsubj(know, he)
aux(know, do)
advmod(know, not)
root(ROOT, know)
punct(know, .)
nmod:poss(mind, he)
nsubj(close, mind)
root(ROOT, close)
case(prospect, on)
det(prospect, that)
obl(close, prospect)
punct(close, ,)
mark(descend, as)
mark(descend, though)
nsubj(descend, fog)
aux(descend, have)
advcl(close, descend)
mark(blot, to)
xcomp(descend, blot)
compound:prt(blot, out)
det(valley, a)
obj(blot, valley)
punct(close, .)
advmod(off, far)
advmod(hear, off)
punct(hear, ,)
case(dusk, in)
det(dusk, the)
obl(hear, dusk)
punct(hear, ,)
nsubj(hear, he)
root(ROOT, hear)
obj(hear, voice)
acl(voice, sing)
punct(muffle, ,)
conj(sing, muffle)
cc(strong, but)
conj(sing, strong)
punct(hear, .)
case(one, in)
obl(huddled, one)
case(hut, of)
det(hut, the)
nmod(one, hut)
det(group, a)
nsubj:pass(huddled, group)
case(man, of)
nmod(group, man)
aux:pass(huddled, be)
root(ROOT, huddled)
advmod(huddled, together)
punct(huddled, ,)
advcl(huddled, sing)
punct(huddled, .)
nsubj(stop, he)
root(ROOT, stop)
punct(stop, .)
nsubj(strain, he)
root(ROOT, strain)
mark(hear, to)
xcomp(strain, hear)
punct(strain, .)
nsubj(hear, he)
root(ROOT, hear)
det(word, the)
obj(hear, word)
punct(hear, :)
punct(hear, ``)
nsubj(let, rock)
case(Ages, of)
nmod(rock, Ages)
punct(cleft, ,)
conj(rock, cleft)
case(I, for)
obl(cleft, I)
punct(let, ,)
root(ROOT, let)
obj(let, I)
xcomp(let, hide)
obj(hide, myself)
case(thee, in)
obl(hide, thee)
punct(let, !)
punct(let, !)
root(ROOT, let)
det(water, the)
obj(let, water)
cc(blood, and)
det(blood, the)
conj(water, blood)
case(flow, from)
nmod:poss(flow, thy)
amod(flow, rive)
compound(flow, side)
obl(let, flow)
punct(let, !)
punct(let, !)
punct(let, '')
nsubj(think, he)
root(ROOT, think)
punct(think, :)
nsubj(Jew, I)
cop(Jew, be)
det(Jew, a)
ccomp(think, Jew)
case(Bavaria, from)
nmod(Jew, Bavaria)
punct(think, .)
nsubj(stand, he)
aux(stand, be)
root(ROOT, stand)
advmod(stand, there)
punct(stand, ,)
nsubj(think, he)
parataxis(stand, think)
punct(think, ,)
case(Virginia, in)
obl(think, Virginia)
punct(think, ,)
case(dusk, in)
det(dusk, the)
compound(dusk, thickening)
obl(think, dusk)
punct(greatcoat, ,)
case(greatcoat, in)
det(greatcoat, a)
amod(greatcoat, costly)
obl(think, greatcoat)
nsubj(belong, that)
aux(belong, have)
acl:relcl(greatcoat, belong)
case(Jew, to)
det(Jew, another)
obl(belong, Jew)
punct(stand, .)
det(Jew, that)
amod(Jew, other)
nsubj(leave, Jew)
punct(Jew, ,)
det(man, a)
amod(man, young)
appos(Jew, man)
advmod(man, too)
punct(leave, ,)
aux(leave, have)
root(ROOT, leave)
det(greatcoat, that)
obj(leave, greatcoat)
advmod(leave, behind)
punct(leave, ,)
case(house, in)
det(house, a)
amod(house, rich)
obl(leave, house)
punct(march, ,)
cc(march, and)
conj(leave, march)
advmod(march, away)
punct(leave, .)
nsubj(cross, he)
aux(cross, have)
root(ROOT, cross)
det(river, the)
obj(cross, river)
obj(slide, which)
advmod(slide, now)
punct(river, ,)
case(wood, beyond)
det(wood, the)
compound(yonder, wood)
acl:relcl(river, yonder)
punct(slide, ,)
aux(slide, be)
conj(cross, slide)
advmod(slide, darkly)
case(mist, under)
det(mist, the)
obl(slide, mist)
punct(cross, .)
nsubj(plunge, he)
aux(plunge, have)
root(ROOT, plunge)
case(wood, into)
det(wood, the)
amod(wood, dark)
obl(plunge, wood)
advmod(plunge, beyond)
punct(plunge, .)
nsubj(die, he)
aux(die, have)
root(ROOT, die)
advmod(die, there)
punct(die, .)
nsubj(have, what)
advcl(feel, have)
det(man, that)
obj(have, man)
punct(have, ,)
det(Jew, that)
amod(Jew, other)
amod(Jew, young)
obj(have, Jew)
punct(feel, ,)
root(ROOT, feel)
mark(stand, as)
nsubj(stand, he)
advcl(feel, stand)
case(twilight, in)
det(twilight, the)
obl(stand, twilight)
cc(hear, and)
conj(stand, hear)
amod(man, other)
obj(hear, man)
punct(man, ,)
advmod(away, far)
advmod(hear, away)
punct(hear, ,)
advcl(hear, sing)
advmod(sing, together)
punct(feel, ?)
punct(feel, ?)
nsubj(think, Adam)
root(ROOT, think)
case(hutment, of)
det(hutment, the)
obl(think, hutment)
punct(hutment, ,)
appos(hutment, regiment)
case(regiment, after)
nmod(hutment, regiment)
punct(hutment, ,)
appos(hutment, row)
case(row, after)
nmod(hutment, row)
punct(think, ,)
det(thousand, the)
appos(hutment, thousand)
case(hut, of)
nmod(thousand, hut)
punct(thousand, ,)
acl(thousand, stretch)
advmod(stretch, away)
case(night, into)
det(night, the)
obl(stretch, night)
punct(think, .)
nsubj(think, he)
root(ROOT, think)
case(man, of)
det(man, the)
obl(think, man)
punct(man, ,)
det(thousand, the)
amod(thousand, nameless)
appos(man, thousand)
punct(man, ,)
acl(man, huddling)
case(they, in)
obl(huddling, they)
punct(think, .)
nsubj(think, he)
root(ROOT, think)
case(simm, of)
obl(think, simm)
flat(simm, Purdew)
advcl(think, snore)
case(bunk, on)
nmod:poss(bunk, he)
obl(snore, bunk)
mark(crouch, while)
nsubj(crouch, Pullen)
flat(Pullen, James)
advcl(snore, crouch)
case(hearth, by)
det(hearth, the)
obl(crouch, hearth)
punct(skirmish, ,)
conj(crouch, skirmish)
det(undershirt, a)
obj(skirmish, undershirt)
case(lice, for)
obl(skirmish, lice)
punct(log, ,)
cc(log, and)
det(log, a)
amod(log, wet)
conj(undershirt, log)
acl(log, sizzle)
punct(think, .)
nsubj(think, he)
root(ROOT, think)
case(simm, of)
obl(think, simm)
flat(simm, Purdew)
punct(simm, ,)
nsubj(risen, who)
advmod(risen, once)
aux(risen, have)
acl:relcl(simm, risen)
case(edge, at)
det(edge, the)
obl(risen, edge)
case(cornfield, of)
det(cornfield, a)
nmod(edge, cornfield)
punct(scream, ,)
det(scream, a)
amod(scream, maniacal)
conj(cornfield, scream)
case(lip, on)
nmod:poss(lip, he)
nmod(scream, lip)
punct(swing, ,)
cc(swing, and)
conj(risen, swing)
det(musket, a)
amod(musket, club)
obj(swing, musket)
case(flail, like)
det(flail, a)
obl(swing, flail)
mark(beat, to)
acl(flail, beat)
compound:prt(beat, down)
det(swirl, the)
obj(beat, swirl)
case(bayonet, of)
compound(bayonet, Rebel)
nmod(swirl, bayonet)
case(he, about)
obl(beat, he)
punct(think, .)
nsubj(think, he)
root(ROOT, think)
case(simm, of)
obl(think, simm)
flat(simm, Purdew)
advcl(think, rise)
compound:prt(rise, up)
punct(fearless, ,)
conj(rise, fearless)
case(glory, in)
obl(rise, glory)
punct(think, .)
nsubj(feel, he)
root(ROOT, feel)
det(sweetness, the)
obj(feel, sweetness)
case(flood, of)
compound(flood, pity)
nmod(sweetness, flood)
case(he, through)
obl(feel, he)
punct(feel, ,)
advcl(feel, vein)
nmod:poss(flesh, he)
amod(flesh, very)
obj(vein, flesh)
punct(feel, .)
det(man, those)
nsubj(know, man)
punct(man, ,)
acl(man, lie)
case(hut, in)
det(hut, the)
obl(lie, hut)
punct(know, ,)
nsubj(know, they)
aux(know, do)
advmod(know, not)
root(ROOT, know)
punct(know, .)
nsubj(know, they)
aux(know, do)
advmod(know, not)
root(ROOT, know)
ccomp(know, who)
nsubj(who, they)
cop(who, be)
cc(know, or)
conj(know, know)
nmod:poss(own, they)
obj(know, own)
xcomp(know, worth)
punct(know, .)
case(pity, in)
det(pity, the)
obl(think, pity)
case(they, for)
nmod(pity, they)
nmod:poss(loneliness, he)
nsubj:pass(go, loneliness)
aux:pass(go, be)
advcl(think, go)
punct(think, .)
advmod(think, then)
nsubj(think, he)
root(ROOT, think)
case(Aaron, of)
obl(think, Aaron)
flat(Aaron, Blaustein)
advcl(think, stand)
case(house, in)
nmod:poss(house, he)
amod(house, rich)
obl(stand, house)
advcl(stand, say)
punct(think, :)
punct(think, ``)
nsubj(tired, God)
cop(tired, be)
root(ROOT, tired)
mark(take, of)
advcl(tired, take)
det(blame, the)
obj(take, blame)
punct(tired, .)
nsubj(go, he)
aux(go, be)
root(ROOT, go)
mark(let, to)
xcomp(go, let)
obj(let, history)
xcomp(let, take)
det(blame, the)
obj(take, blame)
case(while, for)
det(while, a)
obl(take, while)
punct(go, '')
punct(go, .)
nsubj(think, he)
parataxis(go, think)
case(man, of)
det(man, the)
amod(man, old)
obl(think, man)
acl(man, laugh)
case(glitter, under)
det(glitter, the)
obl(laugh, glitter)
case(chandelier, of)
det(chandelier, the)
amod(chandelier, great)
nmod(glitter, chandelier)
punct(go, .)
nsubj(think, he)
root(ROOT, think)
punct(think, :)
advmod(heart, only)
case(heart, in)
nmod:poss(heart, my)
obl(make, heart)
aux(make, can)
nsubj(make, I)
ccomp(think, make)
det(world, the)
obj(make, world)
xcomp(make, hang)
advmod(hang, together)
punct(think, .)
nsubj(rise, Adam)
ccomp(think, rise)
case(crouch, from)
det(crouch, the)
obl(rise, crouch)
amod(crouch, necessary)
mark(enter, to)
advcl(necessary, enter)
det(hut, the)
obj(enter, hut)
punct(think, .)
nsubj(see, he)
root(ROOT, see)
obj(see, mose)
xcomp(see, squat)
case(hearth, by)
det(hearth, the)
obl(squat, hearth)
punct(see, ,)
conj(squat, break)
compound:prt(break, up)
obj(break, hardtack)
case(pan, into)
det(pan, a)
obl(break, pan)
punct(see, . )
det(pot, a)
nsubj(boiling, pot)
aux(boiling, be)
root(ROOT, boiling)
case(coal, on)
det(coal, the)
obl(boiling, coal)
punct(boiling, .)
punct(boiling, ``)
root(ROOT, Gon)
mark(give, to)
xcomp(Gon, give)
iobj(give, ole)
flat(ole, Buckra)
det:predet(money, all)
nmod:poss(money, he)
obj(give, money)
punct(Gon, '')
punct(Gon, ?)
punct(Gon, ?)
nsubj(ask, mose)
root(ROOT, ask)
advmod(ask, softly)
punct(ask, .)
nsubj(nodded, Adam)
root(ROOT, nodded)
punct(nodded, .)
punct(nodded, ``)
discourse(murmure, yeah)
punct(murmure, '')
punct(murmure, ,)
nsubj(murmure, mose)
root(ROOT, murmure)
punct(murmure, ,)
punct(murmure, ``)
discourse(murmure, yeah)
punct(murmure, .)
cc(look, and)
root(ROOT, look)
obj(do, what)
nsubj(do, he)
ccomp(look, do)
xcomp(do, give)
obj(give, we)
punct(look, '')
punct(look, .)
nsubj(look, Adam)
parataxis(look, look)
case(pot, at)
det(pot, the)
obl(look, pot)
punct(look, .)
punct(look, ``)
root(ROOT, what)
cop(what, be)
nsubj(what, it)
punct(what, '')
punct(what, ?)
punct(what, ?)
nsubj(ask, he)
root(ROOT, ask)
punct(ask, .)
punct(ask, ``)
vocative(say, chicken)
punct(chicken, '')
punct(say, ,)
nsubj(say, mose)
root(ROOT, say)
punct(lick, ,)
cc(lick, and)
advmod(lick, theatrically)
conj(say, lick)
nmod:poss(lip, he)
obj(lick, lip)
punct(say, .)
punct(say, ``)
root(ROOT, Gre)
punct(Gre, 't)
amod(chicken, big)
amod(chicken, fat)
appos(Gre, chicken)
punct(Gre, ,)
discourse(Gre, yeah)
punct(Gre, '')
punct(lick, .)
nsubj(lick, he)
parataxis(Gre, lick)
nmod:poss(lip, he)
obj(lick, lip)
advmod(lick, again)
punct(Gre, .)
root(ROOT, then)
punct(then, :)
punct(then, ``)
root(ROOT, yeah)
punct(yeah, . )
det(chicken, a)
root(ROOT, chicken)
case(tit, with)
nummod(tit, six)
nmod(chicken, tit)
cc(tail, and)
det(tail, a)
conj(tit, tail)
case(corkscrew, lak)
det(corkscrew, a)
nmod(tail, corkscrew)
punct(chicken, .)
cc(squeal, and)
nsubj(squeal, it)
root(ROOT, squeal)
case(slop, for)
obl(squeal, slop)
punct(squeal, '')
punct(squeal, .)
nsubj(giggle, mose)
parataxis(squeal, giggle)
punct(squeal, .)
punct(squeal, ``)
root(ROOT, fool)
obj(fool, you)
punct(fool, ,)
discourse(fool, huh)
punct(fool, ?)
punct(fool, ?)
nsubj(same, it)
cop(same, be)
det(same, the)
amod(same, same)
compound(same, ole)
root(ROOT, same)
punct(same, ,)
parataxis(same, tell)
obj(tell, I)
nsubj(name, it)
cop(name, be)
ccomp(tell, name)
punct(same, .)
nsubj(be, it)
root(ROOT, be)
advmod(be, sowbelly)
case(tit, with)
obl(be, tit)
advmod(be, on)
punct(be, .)
nsubj(po'k, it)
cop(po'k, be)
compound(po'k, salt)
root(ROOT, po'k)
punct(po'k, .)
nsubj(po'k, it)
cop(po'k, be)
amod(po'k, salt)
root(ROOT, po'k)
cc(skipper, and)
conj(po'k, skipper)
punct(po'k, .)
det(po'k, that)
nsubj(full, po'k)
punct(full, ,)
nsubj(full, it)
cop(full, be)
advmod(full, so)
root(ROOT, full)
case(skipper, of)
obl(full, skipper)
nsubj(jump, it)
aux(jump, would)
ccomp(full, jump)
cc(run, and)
conj(jump, run)
cc(come, and)
advmod(come, not)
conj(jump, come)
mark(say, when)
nsubj(say, you)
advcl(come, say)
punct(say, ,)
discourse(say, hoo-pig)
punct(full, .)
root(ROOT, have)
mark(put, to)
xcomp(have, put)
nmod:poss(foot, my)
obj(put, foot)
case(it, on)
obl(put, it)
mark(hole, to)
advcl(put, hole)
obj(hole, it)
compound:prt(hole, down)
mark(cut, while)
nsubj(cut, I)
advcl(hole, cut)
obj(cut, it)
compound:prt(cut, up)
case(lob-scuse, fer)
det(lob-scuse, the)
obl(cut, lob-scuse)
punct(cut, '')
punct(have, .)
nsubj(dump, he)
parataxis(have, dump)
det(pan, the)
obj(dump, pan)
case(hardtack, of)
amod(hardtack, crumble)
nmod(pan, hardtack)
case(pot, into)
det(pot, the)
compound(pot, boiling)
obl(dump, pot)
case(lobscouse, of)
nmod(pot, lobscouse)
punct(have, .)
punct(have, ``)
amod(scuse, good)
compound(scuse, ole)
compound(scuse, lob-)
root(ROOT, scuse)
punct(scuse, '')
punct(mumble, ,)
nsubj(mumble, he)
parataxis(scuse, mumble)
punct(stir, ,)
cc(stir, and)
conj(mumble, stir)
det(pot, the)
obj(stir, pot)
punct(scuse, .)
nsubj(stop, he)
root(ROOT, stop)
xcomp(stop, stir)
cc(look, and)
conj(stop, look)
case(shoulder, over)
nmod:poss(shoulder, he)
obl(look, shoulder)
punct(stop, .)
punct(stop, ``)
root(ROOT, know)
obj(know, what)
compound(et, ole)
compound(et, Buckra)
nsubj(what, et)
obl:tmod(know, tonight)
punct(know, '')
punct(know, ?)
punct(know, ?)
nsubj(demand, he)
root(ROOT, demand)
punct(demand, .)
punct(demand, ``)
root(ROOT, know)
obj(have, what)
nsubj(have, I)
ccomp(know, have)
mark(fix, to)
xcomp(have, fix)
case(ole, fer)
obl(fix, ole)
obl(fix, he)
punct(know, '')
punct(know, ?)
punct(know, ?)
nsubj(shook, Adam)
root(ROOT, shook)
nmod:poss(head, he)
obj(shook, head)
punct(shook, .)
punct(shook, ``)
ccomp(say, chicken)
punct(chicken, '')
punct(say, ,)
nsubj(say, mose)
root(ROOT, say)
punct(say, .)
nsubj(child, she)
cop(child, be)
det(child, a)
root(ROOT, child)
advmod(much, too)
advmod(child, much)
det(part, a)
appos(child, part)
case(environment, of)
nmod:poss(environment, she)
nmod(part, environment)
punct(eager, ,)
advmod(eager, too)
conj(part, eager)
mark(grow, to)
xcomp(eager, grow)
cc(learn, and)
conj(grow, learn)
cc(experience, and)
conj(grow, experience)
punct(child, .)
advmod(Easthampton, once)
punct(Easthampton, ,)
nsubj(Easthampton, they)
cop(Easthampton, be)
case(Easthampton, at)
root(ROOT, Easthampton)
case(summer, for)
det(summer, the)
obl(Easthampton, summer)
punct(say, ()
advmod(say, again)
punct(say, ,)
nsubj(say, Fritzie)
parataxis(Easthampton, say)
punct(say, ,)
det(place, a)
amod(place, good)
ccomp(say, place)
punct(place, ,)
advmod(rob, even)
mark(rob, though)
nsubj:pass(rob, they)
aux(rob, be)
aux:pass(rob, be)
advcl(place, rob)
punct(say, ))
punct(say, .)
nummod(evening, one)
amod(evening, soft)
root(ROOT, evening)
punct(evening, --)
det(time, that)
amod(time, marvelous)
amod(time, sea-bless)
obl:tmod(linger, time)
mark(linger, when)
det(sun, the)
nmod:poss(warmth, sun)
case(sun, 's)
amod(warmth, depart)
nsubj(linger, warmth)
advcl(evening, linger)
cc(haunt, and)
det(smell, a)
nsubj(haunt, smell)
case(spume, of)
nmod(smell, spume)
cc(wrack, and)
conj(spume, wrack)
conj(linger, haunt)
obj(haunt, everything)
punct(evening, --)
nsubj(pick, Amy)
aux(pick, have)
parataxis(evening, pick)
obj(pick, herself)
case(floor, off)
det(floor, the)
obl(pick, floor)
cc(begin, and)
conj(pick, begin)
mark(walk, to)
xcomp(begin, walk)
punct(evening, . )
nsubj(reading, Fritzie)
cop(reading, be)
case(reading, on)
det(reading, the)
compound(reading, couch)
root(ROOT, reading)
punct(reading, ;)
punct(reading, ;)
nsubj(sit, Laura)
aux(sit, be)
parataxis(reading, sit)
case(chair, in)
det(chair, a)
amod(chair, easy)
obl(sit, chair)
advmod(eight, about)
nummod(foot, eight)
obl:npmod(away, foot)
advmod(sit, away)
punct(reading, .)
det(infant, the)
nsubj(essay, infant)
punct(infant, ,)
case(bathrobe, in)
amod(bathrobe, white)
compound(cloth, terry)
punct(cloth, -)
compound(bathrobe, cloth)
obl(essay, bathrobe)
punct(bathrobe, ,)
nmod:poss(face, she)
conj(bathrobe, face)
amod(bathrobe, intense)
cc(purposeful, and)
conj(intense, purposeful)
punct(essay, ,)
aux(essay, have)
root(ROOT, essay)
det(step, a)
amod(step, few)
amod(step, wobbly)
obj(essay, step)
case(father, toward)
nmod:poss(father, she)
nmod(step, father)
punct(essay, .)
punct(essay, ``)
punct(say, y')
nsubj(want, all)
ccomp(say, want)
mark(walk, to)
xcomp(want, walk)
punct(say, --)
ccomp(say, walk)
punct(walk, '')
punct(say, ,)
nsubj(say, he)
root(ROOT, say)
punct(say, .)
advmod(shove, then)
punct(shove, ,)
advmod(shove, gently)
punct(shove, ,)
nsubj(shove, he)
root(ROOT, shove)
obj(shove, she)
advmod(shove, behind)
case(Laura, toward)
obl(shove, Laura)
punct(shove, .)
nsubj(walk, Amy)
parataxis(shove, walk)
punct(shove, --)
parataxis(walk, make)
obj(make, it)
advmod(make, halfway)
case(floor, across)
det(floor, the)
compound(floor, cottage)
obl(make, floor)
punct(shove, .)
nsubj(lose, she)
root(ROOT, lose)
advmod(second, not)
det(second, a)
obj(lose, second)
punct(pick, ,)
conj(lose, pick)
obj(pick, herself)
compound:prt(pick, up)
cc(continue, and)
conj(pick, continue)
nmod:poss(pilgrimage, she)
obj(continue, pilgrimage)
case(Laura, to)
obl(continue, Laura)
punct(lose, .)
advmod(take, then)
nsubj(take, Laura)
parataxis(lose, take)
obj(take, she)
advmod(take, gently)
cc(shove, and)
conj(take, shove)
obj(shove, she)
compound:prt(shove, off)
advmod(shove, again)
punct(shove, ,)
case(Fritzie, toward)
obl(shove, Fritzie)
punct(laugh, :)
nsubj(laugh, Amy)
aux(laugh, do)
advmod(laugh, not)
parataxis(Fritzie, laugh)
punct(laugh, --)
nsubj(work, this)
cop(work, be)
parataxis(laugh, work)
punct(concentration, ,)
conj(work, concentration)
punct(achievement, ,)
conj(work, achievement)
punct(lose, .)
case(minute, in)
det(minute, a)
amod(minute, few)
obl(make, minute)
nsubj(make, she)
aux(make, be)
root(ROOT, make)
det(hike, the)
nummod(foot, ten)
punct(foot, -)
compound(hike, foot)
obj(make, hike)
xcomp(make, unaided)
punct(make, ;)
punct(make, ;)
advmod(parad, soon)
nsubj(parad, she)
aux(parad, be)
parataxis(make, parad)
case(house, around)
det(house, the)
obl(parad, house)
punct(parad, ,)
advcl(parad, flaunt)
nmod:poss(skill, she)
amod(skill, new)
obj(flaunt, skill)
punct(make, .)
det(liar, some)
nmod:poss(logic, liar)
case(liar, 's)
nsubj(consol, logic)
punct(logic, ,)
det(wisp, a)
appos(logic, wisp)
case(optimism, of)
nmod(wisp, optimism)
advmod(fragile, as)
amod(wisp, fragile)
case(scent, as)
det(scent, the)
obl(fragile, scent)
case(blossom, of)
amod(blossom, tropical)
nmod(scent, blossom)
nsubj(come, that)
acl:relcl(blossom, come)
case(window, through)
det(window, the)
obl(come, window)
punct(euphoria, ()
det(euphoria, a)
appos(window, euphoria)
advmod(engendered, perhaps)
acl(euphoria, engendered)
case(pill, by)
det(pill, the)
obl(engendered, pill)
nsubj(give, Fritzie)
aux(give, have)
acl:relcl(pill, give)
obj(give, she)
punct(euphoria, ))
punct(consol, ,)
root(ROOT, consol)
obj(consol, she)
case(moment, for)
det(moment, a)
obl(consol, moment)
punct(have, .)
nsubj(have, Amy)
parataxis(consol, have)
mark(safe, to)
cop(safe, be)
xcomp(have, safe)
punct(have, ,)
conj(have, have)
mark(come, to)
xcomp(have, come)
advmod(come, back)
case(they, to)
obl(back, they)
punct(have, --)
mark(reap, if)
advmod(reap, only)
mark(reap, to)
advcl(come, reap)
det(share, that)
obj(reap, share)
case(experience, of)
nmod:poss(experience, life)
case(life, 's)
nmod(share, experience)
nsubj(due, that)
cop(due, be)
nsubj(due, she)
acl:relcl(experience, due)
punct(give, ,)
mark(give, if)
advmod(give, only)
mark(give, to)
advcl(due, give)
iobj(give, she)
iobj(give, parent)
det(chance, another)
obj(give, chance)
mark(do, to)
acl(chance, do)
advmod(do, better)
case(she, by)
obl(do, she)
punct(give, .)
case(swathing, through)
det(swathing, the)
obl(jab, swathing)
case(terror, of)
nmod(swathing, terror)
punct(jab, ,)
nsubj(jab, she)
parataxis(have, jab)
nmod:poss(point, deceit)
case(deceit, 's)
amod(point, sharp)
obj(jab, point)
punct(jab, --)
nsubj(reborn, Amy)
aux(reborn, would)
cop(reborn, be)
parataxis(jab, reborn)
punct(reborn, ,)
det(child, a)
amod(child, new)
obj(reborn, child)
punct(reborn, ,)
case(parent, with)
amod(parent, new)
obl(reborn, parent)
punct(reborn, ,)
advcl(reborn, live)
case(circumstance, under)
amod(circumstance, new)
obl(live, circumstance)
punct(jab, .)
det(comfort, the)
nsubj(live, comfort)
cop(live, be)
advmod(live, short)
punct(live, -)
root(ROOT, live)
punct(find, ,)
cc(find, yet)
nsubj(find, she)
conj(live, find)
obj(find, herself)
xcomp(find, return)
case(assurance, to)
det(assurance, the)
obl(return, assurance)
advmod(force, whenever)
nmod:poss(imagination, she)
nsubj(force, imagination)
advcl(return, force)
obj(force, image)
case(she, on)
nmod(image, she)
advmod(awful, too)
xcomp(force, awful)
mark(contemplate, to)
advcl(awful, contemplate)
case(prop, without)
det(prop, the)
obl(contemplate, prop)
case(illusion, of)
nmod(prop, illusion)
punct(live, .)
advcl(see, gaze)
case(body, at)
nmod:poss(husband, she)
nmod:poss(body, husband)
case(husband, 's)
amod(body, drug)
obl(gaze, body)
punct(see, ,)
nmod:poss(chest, he)
nsubj(rise, chest)
conj(body, rise)
cc(fall, and)
conj(rise, fall)
case(rhythm, in)
amod(rhythm, mindless)
obl(fall, rhythm)
punct(see, ,)
nsubj(see, she)
root(ROOT, see)
det(grandeur, the)
obj(see, grandeur)
case(world, of)
nmod:poss(world, he)
amod(world, fictional)
nmod(grandeur, world)
punct(world, ,)
det(garden, that)
amod(garden, lush)
appos(grandeur, garden)
case(which, from)
obl(pluck, which)
nsubj(pluck, he)
acl:relcl(garden, pluck)
obj(pluck, flower)
cc(herb, and)
conj(flower, herb)
punct(see, .)
nsubj(envy, she)
root(ROOT, envy)
obj(envy, he)
punct(envy, .)
nsubj(admire, she)
root(ROOT, admire)
obj(admire, he)
punct(admire, .)
case(darkness, in)
det(darkness, the)
obl(see, darkness)
punct(see, ,)
nsubj(see, she)
root(ROOT, see)
obj(see, he)
xcomp(see, stir)
punct(see, .)
nsubj(seem, he)
root(ROOT, seem)
mark(mutter, to)
aux(mutter, be)
xcomp(seem, mutter)
punct(mutter, ,)
nmod:poss(voice, he)
obj(mutter, voice)
advmod(clear, surprisingly)
parataxis(mutter, clear)
punct(seem, .)
punct(seem, ``)
punct(say, y')
nsubj(let, all)
aux(let, should)
aux(let, have)
ccomp(say, let)
obj(let, I)
xcomp(let, take)
det(money, that)
obj(take, money)
advmod(take, out)
punct(say, '')
punct(say, ,)
nsubj(say, Andrus)
root(ROOT, say)
punct(say, .)
punct(say, ``)
punct(minute, ')
amod(minute, nother)
nsubj(fine, minute)
nsubj(fine, I)
aux(fine, would)
aux(fine, have)
cop(fine, be)
root(ROOT, fine)
punct(fine, .)
nsubj(let, H'all)
aux(let, should)
aux(let, have)
root(ROOT, let)
obj(let, I)
xcomp(let, do)
obj(do, it)
punct(let, '')
punct(let, .)
nsubj(touch, Laura)
parataxis(let, touch)
nmod:poss(hand, he)
obj(touch, hand)
punct(let, .)
punct(let, ``)
discourse(know, yes)
punct(know, ,)
nsubj(know, I)
root(ROOT, know)
punct(know, ,)
vocative(know, Fritzie)
punct(know, . )
nsubj(have, I)
aux(have, should)
root(ROOT, have)
punct(have, '')
punct(have, .)
obl:tmod(have, Tuesday)
det(heat, the)
obj(have, heat)
acl(heat, intensify)
case(Tuesday, on)
obl(intensify, Tuesday)
punct(have, .)
compound(California, Southern)
nsubj(gasp, California)
ccomp(have, gasp)
cc(blink, and)
conj(gasp, blink)
case(spell, under)
det(spell, a)
compound(spell, autumn)
amod(spell, hot)
obl(blink, spell)
punct(spell, ,)
amod(spell, drier)
punct(enervate, ,)
advmod(enervate, more)
conj(spell, enervate)
punct(lade, ,)
amod(lade, more)
conj(spell, lade)
case(impurity, with)
nmod:poss(impurity, man)
case(man, 's)
amod(impurity, contrive)
nmod(lade, impurity)
case(day, than)
det(day, the)
amod(day, worst)
nmod(impurity, day)
case(past, of)
det(past, the)
compound(past, summer)
nmod(day, past)
punct(have, .)
nsubj(continue, it)
aux(continue, could)
root(ROOT, continue)
det(way, this)
obj(continue, way)
punct(continue, ,)
advcl(continue, hit)
obj(hit, 106)
cc(more, and)
conj(106, more)
case(Valley, in)
det(Valley, the)
obl(hit, Valley)
punct(know, ,)
nsubj(know, Joe)
flat(Joe, McFeeley)
parataxis(continue, know)
punct(know, ,)
case(October, into)
obl(know, October)
punct(continue, .)
nsubj(sipping, he)
cc(Irvin, and)
conj(he, Irvin)
flat(Irvin, moll)
aux(sipping, be)
root(ROOT, sipping)
obj(sipping, coffee)
case(bar, at)
det(bar, the)
compound(bar, breakfast)
obl(sipping, bar)
punct(sipping, .)
nsubj(up, both)
aux(up, have)
cop(up, be)
root(ROOT, up)
case(7:00, since)
obl(up, 7:00)
punct(up, --)
nsubj(unable, Irv)
case(watch, on)
det(watch, the)
amod(morning, early)
punct(morning, -)
compound(watch, morning)
nmod(Irv, watch)
punct(unable, ,)
nsubj(unable, McFeeley)
root(ROOT, unable)
mark(sleep, to)
xcomp(unable, sleep)
case(relief, during)
nmod:poss(relief, he)
nummod(hour, four)
punct(hour, -)
compound(relief, hour)
obl(sleep, relief)
punct(unable, .)
det(night, the)
obl:tmod(telephone, night)
advmod(telephone, before)
punct(telephone, ,)
nsubj(telephone, they)
aux(telephone, have)
root(ROOT, telephone)
det(Andrus, the)
obj(telephone, Andrus)
flat(Andrus, maid)
punct(Selena, ,)
conj(Andrus, Selena)
flat(Selena, Masters)
punct(arrive, ,)
cc(arrive, and)
nsubj(arrive, she)
aux(arrive, have)
conj(telephone, arrive)
advmod(arrive, early)
punct(arrive, ,)
advcl(arrive, burst)
nmod:poss(presence, she)
amod(presence, vigorous)
obj(burst, presence)
case(house, into)
det(house, the)
amod(house, silent)
obl(burst, house)
case(assurance, with)
det(assurance, a)
obl(burst, assurance)
nsubj(amused, that)
acl:relcl(assurance, amused)
obj(amused, McFeeley)
cc(confound, and)
conj(amused, confound)
obj(confound, moll)
punct(telephone, .)
det(latter, the)
nsubj(wink, latter)
punct(latter, ,)
acl(latter, thank)
obj(thank, she)
case(coffee, for)
det(coffee, the)
obl(thank, coffee)
punct(wink, ,)
aux(wink, have)
root(ROOT, wink)
cc(mutter, and)
conj(wink, mutter)
punct(wink, ,)
punct(wink, ``)
discourse(woman, sure)
punct(honey, ')
discourse(honey, nuff)
punct(honey, ,)
nsubj(woman, honey)
punct(honey, '')
punct(woman, .)
nsubj(woman, Selena)
cop(woman, be)
det(woman, the)
amod(woman, wrong)
root(ROOT, woman)
case(crudity, for)
det(crudity, these)
nmod(woman, crudity)
punct(woman, .)
case(eye, with)
det(eye, a)
amod(eye, hard)
obl(inform, eye)
punct(inform, ,)
nsubj(inform, she)
root(ROOT, inform)
obj(inform, moll)
punct(inform, :)
punct(inform, ``)
aux(sure, do)
advmod(sure, not)
root(ROOT, sure)
punct(sure, ')
discourse(sure, nuff)
parataxis(sure, I)
punct(officer, ,)
parataxis(sure, officer)
punct(sure, . )
nsubj(honey, I)
cop(honey, be)
root(ROOT, honey)
advmod(husband, only)
case(husband, to)
nmod:poss(husband, my)
nmod(honey, husband)
punct(understand, ,)
parataxis(honey, understand)
punct(understand, '')
punct(honey, ?)
punct(honey, ?)
nsubj(understand, Sergeant)
flat(Sergeant, moll)
root(ROOT, understand)
punct(understand, .)
det(maid, the)
nsubj(black, maid)
cop(black, be)
advmod(black, very)
root(ROOT, black)
cc(energetic, and)
advmod(energetic, very)
conj(black, energetic)
punct(trim, ,)
conj(black, trim)
case(uniform, in)
det(uniform, a)
amod(uniform, yellow)
compound(uniform, pique)
obl(trim, uniform)
punct(black, .)
nmod:poss(speech, she)
nsubj(barren, speech)
cop(barren, be)
root(ROOT, barren)
case(southernism, of)
obl(barren, southernism)
punct(barren, ;)
punct(barren, ;)
nsubj(one, she)
cop(one, be)
parataxis(barren, one)
case(minority, of)
nmod:poss(minority, Eliot)
flat(Eliot, sparl)
case(Eliot, 's)
amod(minority, neutralize)
nmod(one, minority)
punct(one, ,)
advcl(one, adop)
det(R, the)
compound(R, roll)
nmod:poss(vowel, R)
case(R, 's)
cc(constrict, and)
amod(vowel, constrict)
obj(adop, vowel)
case(Angeles, of)
compound(Angeles, Los)
nmod(vowel, Angeles)
punct(see, .)
advmod(see, not)
conj(adop, see)
nmod:poss(face, she)
amod(face, dark)
amod(face, intelligent)
obj(see, face)
punct(gauge, ,)
nsubj(gauge, one)
aux(gauge, would)
aux(gauge, have)
parataxis(barren, gauge)
det(voice, the)
obj(gauge, voice)
case(that, as)
obl(gauge, that)
case(matron, of)
det(matron, a)
compound(matron, Westwood)
compound(matron, Village)
nmod(that, matron)
punct(matron, ,)
nummod(year, ten)
appos(matron, year)
case(Iowa, out)
case(Iowa, of)
nmod(year, Iowa)
punct(barren, .)
mark(serve, after)
nsubj(serve, she)
aux(serve, have)
advcl(settle, serve)
det(coffee, the)
compound(coffee, detective)
obj(serve, coffee)
cc(toast, and)
conj(coffee, toast)
punct(decline, ()
nsubj(decline, they)
advmod(decline, politely)
parataxis(coffee, decline)
obj(decline, egg)
punct(uncomfortable, ,)
conj(decline, uncomfortable)
case(tenancy, about)
nmod:poss(tenancy, they)
obl(uncomfortable, tenancy)
punct(decline, ))
punct(settle, ,)
nsubj(settle, she)
root(ROOT, settle)
advmod(settle, down)
case(newspaper, with)
det(newspaper, a)
compound(newspaper, morning)
obl(settle, newspaper)
cc(begin, and)
conj(settle, begin)
xcomp(begin, read)
det(quotation, the)
compound(quotation, stock)
compound(quotation, market)
obj(read, quotation)
punct(begin, .)
mark(engage, while)
nsubj:pass(engage, she)
aux:pass(engage, be)
advmod(engage, thus)
advcl(question, engage)
punct(question, ,)
nsubj(question, McFeeley)
conj(settle, question)
obj(question, she)
case(whereabouts, about)
nmod:poss(whereabouts, she)
obl(question, whereabouts)
det(day, the)
amod(day, previous)
obl:tmod(question, day)
punct(recollection, ,)
det(recollection, any)
appos(day, recollection)
nsubj(have, she)
acl:relcl(recollection, have)
case(people, of)
obl(have, people)
acl(people, hang)
advmod(hang, around)
punct(hang, ,)
case(boy, of)
amod(boy, overcurious)
compound(boy, delivery)
obl(hang, boy)
cc(repairmen, or)
conj(boy, repairmen)
punct(boy, ,)
case(car, of)
amod(car, strange)
nmod(boy, car)
acl(car, cruise)
det(neighborhood, the)
obj(cruise, neighborhood)
punct(settle, .)
nsubj(answer, she)
root(ROOT, answer)
obj(answer, he)
advmod(answer, precisely)
punct(answer, ,)
advcl(answer, miss)
advmod(beat, not)
det(beat, a)
obj(miss, beat)
case(scrutiny, in)
nmod:poss(scrutiny, she)
nmod(beat, scrutiny)
case(report, of)
det(report, the)
amod(report, financial)
nmod(scrutiny, report)
punct(answer, .)
root(ROOT, Selena)
flat(Selena, Masters)
punct(Selena, ,)
nsubj(realize, Joe)
root(ROOT, realize)
punct(realize, ,)
cop(woman, be)
nmod:poss(woman, she)
amod(woman, own)
ccomp(realize, woman)
punct(realize, .)
nsubj(kind, she)
cop(kind, be)
det(kind, the)
amod(kind, only)
root(ROOT, kind)
case(Laura, of)
compound(Laura, Negro)
nmod(kind, Laura)
flat(Laura, Andrus)
aux(want, would)
acl:relcl(kind, want)
advmod(want, around)
punct(kind, :)
appos(kind, independent)
punct(unservile, ,)
conj(independent, unservile)
punct(charge, ,)
advmod(charge, probably)
advcl(want, charge)
obj(charge, double)
det(maid, what)
amod(maid, ordinary)
nsubj(do, maid)
aux(housework, do)
case(housework, for)
obl(charge, housework)
punct(efficient, --)
cc(efficient, and)
advmod(efficient, doubly)
conj(housework, efficient)
punct(kind, .)
mark(emerge, when)
det(parent, the)
nsubj(emerge, parent)
advcl(greet, emerge)
case(bedroom, from)
det(bedroom, the)
obl(emerge, bedroom)
det(minute, a)
amod(minute, few)
obl:npmod(later, minute)
advmod(emerge, later)
punct(greet, ,)
det(maid, the)
nsubj(greet, maid)
root(ROOT, greet)
obj(greet, they)
advmod(greet, quietly)
punct(greet, .)
punct(greet, ``)
nsubj(awful, I)
cop(awful, be)
root(ROOT, awful)
xcomp(awful, sorry)
mark(happen, about)
nsubj(happen, what)
aux(happen, be)
advcl(sorry, happen)
punct(sorry, '')
punct(say, ,)
nsubj(say, Selena)
parataxis(awful, say)
punct(say, .)
punct(awful, ``)
advmod(day, maybe)
nsubj(day, today)
aux(day, will)
cop(day, be)
det(day, a)
amod(day, good)
punct(day, -)
compound(day, news)
root(ROOT, day)
punct(day, '')
punct(day, .)
nsubj(charge, she)
root(ROOT, charge)
compound:prt(charge, off)
case(bedroom, to)
det(bedroom, the)
obl(charge, bedroom)
punct(charge, .)
nsubj(take, moll)
root(ROOT, take)
nmod:poss(coffee, he)
obj(take, coffee)
case(nursery, into)
det(nursery, the)
obl(take, nursery)
punct(take, .)
case(night, during)
det(night, the)
obl(deaden, night)
punct(deaden, ,)
det(technician, a)
compound(technician, phone)
compound(technician, company)
nsubj(deaden, technician)
aux(deaden, have)
parataxis(take, deaden)
det(bell, the)
obj(deaden, bell)
cc(install, and)
conj(deaden, install)
amod(blinker, red)
obj(install, blinker)
case(phone, on)
det(phone, the)
obl(install, phone)
punct(take, .)
nsubj(have, someone)
aux(have, would)
root(ROOT, have)
mark(remain, to)
xcomp(have, remain)
case(office, in)
det(office, the)
obl(remain, office)
advmod(remain, continually)
punct(have, .)
nsubj(greet, McFeeley)
parataxis(have, greet)
det(parent, the)
obj(greet, parent)
punct(study, ,)
advmod(study, then)
conj(greet, study)
nmod:poss(notebook, he)
obj(study, notebook)
punct(have, .)
nsubj(want, he)
root(ROOT, want)
mark(take, to)
xcomp(want, take)
det(mother, the)
obj(take, mother)
case(headquarters, to)
obl(take, headquarters)
case(once, at)
obl(take, once)
cc(start, and)
conj(take, start)
obj(start, she)
case(file, on)
det(file, the)
compound(file, mug)
obl(start, file)
punct(want, .)
punct(want, ``)
root(ROOT, sleep)
advmod(sleep, well)
punct(sleep, '')
punct(sleep, ?)
punct(sleep, ?)
nsubj(ask, he)
root(ROOT, ask)
punct(ask, .)
nsubj(answer, Andrus)
aux(answer, do)
advmod(answer, not)
root(ROOT, answer)
obj(answer, he)
punct(answer, .)
nmod:poss(face, he)
nsubj:pass(bloat, face)
aux:pass(bloat, be)
root(ROOT, bloat)
case(drug, with)
obl(bloat, drug)
punct(redder, ,)
conj(bloat, redder)
case(normal, than)
obl(redder, normal)
punct(bloat, .)
det(woman, the)
nsubj(have, woman)
root(ROOT, have)
det(look, the)
amod(look, glassy)
obj(have, look)
case(invalid, of)
det(invalid, a)
nmod(look, invalid)
punct(have, ,)
mark(sleep, as)
mark(sleep, if)
nsubj(sleep, she)
aux(sleep, have)
advmod(sleep, not)
advcl(have, sleep)
case(all, at)
obl(sleep, all)
punct(have, .)
punct(have, ``)
discourse(manage, oh)
punct(manage, --)
nsubj(manage, we)
root(ROOT, manage)
punct(manage, '')
punct(say, ,)
nsubj(say, she)
parataxis(manage, say)
punct(manage, .)
punct(manage, ``)
nsubj(groggy, I)
cop(groggy, be)
det(little, a)
obl:npmod(groggy, little)
root(ROOT, groggy)
punct(groggy, .)
aux(happen, do)
nsubj(happen, anything)
root(ROOT, happen)
case(night, during)
det(night, the)
obl(happen, night)
punct(happen, '')
punct(happen, ?)
punct(happen, ?)
punct(happen, ``)
amod(call, few)
compound(call, crank)
nsubj(say, call)
punct(call, '')
punct(call, ,)
nsubj(say, McFeeley)
root(ROOT, say)
punct(say, .)
punct(call, ``)
det(couple, a)
nsubj(nothing, couple)
case(tip, of)
nmod(couple, tip)
nsubj(run, we)
aux(run, be)
acl:relcl(couple, run)
compound:prt(run, down)
punct(nothing, --)
root(ROOT, nothing)
amod(nothing, promise)
punct(nothing, .)
nsubj(expect, we)
aux(expect, can)
root(ROOT, expect)
obj(expect, more)
case(same, of)
det(same, the)
obl(more, same)
punct(bad, .)
advmod(bad, too)
parataxis(expect, bad)
nmod:poss(number, you)
nsubj(directory, number)
cop(directory, be)
case(directory, in)
det(directory, the)
parataxis(expect, directory)
punct(directory, '')
punct(expect, .)
punct(expect, ``)
aux(occur, do)
advmod(occur, not)
ccomp(mutter, occur)
case(I, to)
obl(occur, I)
nmod:poss(child, my)
nsubj:pass(kidnape, child)
aux(kidnape, would)
aux:pass(kidnape, be)
parataxis(occur, kidnape)
mark(list, when)
nsubj(list, I)
aux(list, have)
nsubj(list, it)
advcl(kidnape, list)
punct(occur, '')
punct(mutter, ,)
nsubj(mutter, Andrus)
root(ROOT, mutter)
punct(mutter, .)
nsubj(settle, he)
root(ROOT, settle)
case(sofa, on)
det(sofa, the)
obl(settle, sofa)
case(coffee, with)
nmod:poss(coffee, he)
obl(settle, coffee)
punct(settle, ,)
advcl(settle, warm)
nmod:poss(hand, he)
obj(warm, hand)
case(cup, on)
det(cup, the)
obl(warm, cup)
punct(settle, ,)
mark(heavy, although)
det(room, the)
nsubj(heavy, room)
cop(heavy, be)
advcl(warm, heavy)
case(heat, with)
obl(heavy, heat)
punct(settle, .)
det(three, the)
nsubj(have, three)
root(ROOT, have)
obj(have, little)
mark(say, to)
acl(little, say)
case(other, to)
det(other, each)
obl(say, other)
punct(have, .)
det(night, the)
amod(night, previous)
nmod:poss(horror, night)
case(night, 's)
nsubj(leave, horror)
punct(horror, --)
det(failure, the)
amod(failure, absolute)
appos(horror, failure)
punct(failure, ,)
amod(failure, overcast)
case(intrusion, with)
det(intrusion, the)
obl(overcast, intrusion)
case(press, of)
det(press, the)
nmod(intrusion, press)
punct(leave, ,)
aux(leave, have)
root(ROOT, leave)
obj(leave, they)
det(they, all)
case(sense, with)
det(sense, a)
compound(sense, want)
obl(leave, sense)
case(uselessness, of)
nmod(sense, uselessness)
punct(sense, ,)
case(act, of)
amod(act, play-)
nmod(sense, act)
punct(leave, .)
advcl(avoid, sip)
nmod:poss(coffee, they)
obj(sip, coffee)
punct(sip, ,)
conj(sip, discuss)
det(weather, the)
obj(discuss, weather)
punct(shopping, ,)
det(day, the)
nmod:poss(shopping, day)
case(day, 's)
nsubj(avoid, shopping)
punct(shopping, ,)
nmod:poss(commitment, Fritzie)
case(Fritzie, 's)
conj(shopping, commitment)
case(network, at)
det(network, the)
nmod(commitment, network)
punct(all, ()
appos(commitment, all)
case(which, of)
obj(cancel, which)
nsubj(cancel, he)
aux(cancel, would)
acl:relcl(all, cancel)
punct(all, ))
punct(avoid, ,)
nsubj(avoid, they)
root(ROOT, avoid)
det(radio, the)
obj(avoid, radio)
punct(radio, ,)
det(show, the)
compound(show, morning)
compound(show, tv)
compound(show, news)
appos(radio, show)
punct(show, ,)
advmod(page, even)
det(page, the)
amod(page, front)
appos(show, page)
case(Register, of)
det(Register, the)
compound(Register, Santa)
compound(Register, Luisa)
nmod(page, Register)
punct(page, ,)
acl(page, rest)
case(bar, on)
det(bar, the)
compound(bar, kitchen)
obl(rest, bar)
punct(avoid, .)
nsubj(spurn, kidnaper)
root(ROOT, spurn)
obj(spurn, ransom)
punct(spurn, ;)
punct(spurn, ;)
nsubj(miss, Amy)
advmod(miss, still)
parataxis(spurn, miss)
punct(spurn, .)
advmod(walk, once)
punct(walk, ,)
nsubj(walk, Andrus)
root(ROOT, walk)
case(it, by)
obl(walk, it)
punct(scan, ,)
advmod(scan, hastily)
conj(walk, scan)
det(headline, the)
amod(headline, bold)
amod(headline, black)
obj(scan, headline)
cc(lead, and)
det(lead, the)
nummod(column, five)
punct(column, -)
compound(lead, column)
conj(headline, lead)
case(article, of)
det(article, the)
nmod(lead, article)
punct(Duane, ()
case(Duane, by)
obl(scan, Duane)
flat(Duane, Bosch)
punct(correspondent, ,)
compound(correspondent, staff)
conj(Duane, correspondent)
punct(Duane, --)
appos(Duane, age)
advmod(give, not)
parataxis(Duane, give)
punct(Duane, ))
punct(mutter, ,)
cc(mutter, and)
conj(Duane, mutter)
punct(scan, :)
punct(scan, ``)
nsubj(celebrity, we)
det(celebrity, a)
amod(celebrity, buncha)
amod(celebrity, national)
ccomp(tell, celebrity)
punct(celebrity, '')
punct(tell, .)
nsubj(tell, McFeeley)
root(ROOT, tell)
det(parent, the)
obj(tell, parent)
nsubj(escort, he)
aux(escort, would)
ccomp(tell, escort)
obj(escort, they)
case(headquarters, to)
compound(headquarters, police)
obl(escort, headquarters)
case(hour, in)
det(hour, a)
amod(hour, half)
obl(escort, hour)
punct(tell, .)
case(that, before)
obl(want, that)
punct(want, ,)
nsubj(want, he)
root(ROOT, want)
mark(talk, to)
xcomp(want, talk)
case(neighbor, to)
det(neighbor, the)
obl(talk, neighbor)
punct(want, .)
nsubj(want, he)
aux(want, do)
advmod(want, not)
root(ROOT, want)
mark(bring, to)
xcomp(want, bring)
det(andruse, the)
obj(bring, andruse)
case(house, to)
det(house, the)
compound(house, station)
obl(bring, house)
advmod(early, too)
advmod(bring, early)
punct(want, --)
nsubj(summon, Rheinholdt)
aux(summon, have)
parataxis(want, summon)
det(conference, a)
compound(conference, press)
obj(summon, conference)
punct(want, ,)
cc(want, and)
nsubj(want, he)
aux(want, do)
advmod(want, not)
conj(summon, want)
obj(want, they)
xcomp(want, subject)
case(reporter, to)
det(reporter, the)
obl(subject, reporter)
advmod(subject, again)
punct(want, .)
nsubj(think, he)
aux(think, could)
root(ROOT, think)
case(nothing, of)
obl(think, nothing)
amod(nothing, else)
mark(tell, to)
acl(nothing, tell)
obj(tell, they)
punct(assurance, :)
det(assurance, no)
parataxis(think, assurance)
punct(assurance, ,)
det(hint, no)
amod(hint, hopeful)
conj(assurance, hint)
case(discovery, at)
amod(discovery, great)
nmod(hint, discovery)
det(day, that)
nmod:tmod(hint, day)
punct(assurance, .)
mark(leave, when)
det(detective, the)
nsubj(leave, detective)
advcl(phone, leave)
punct(phone, ,)
nsubj(phone, Andrus)
parataxis(think, phone)
nmod:poss(secretary, he)
obj(phone, secretary)
mark(cancel, to)
xcomp(phone, cancel)
nmod:poss(work, he)
obj(cancel, work)
cc(advise, and)
mark(advise, to)
conj(cancel, advise)
det(network, the)
obj(advise, network)
mark(get, to)
xcomp(advise, get)
det(director, a)
compound(director, substitute)
obj(get, director)
case(project, for)
nmod:poss(project, he)
amod(project, current)
nmod(director, project)
punct(talk, .)
nsubj(talk, Mrs.)
flat(Mrs., Andrus)
aux(talk, be)
parataxis(think, talk)
case(maid, to)
det(maid, the)
obl(talk, maid)
punct(talk, ,)
advcl(talk, arrange)
case(she, for)
obl(arrange, she)
mark(come, to)
xcomp(arrange, come)
advmod(come, in)
det(day, every)
obl:tmod(come, day)
punct(come, ,)
case(day, instead)
fixed(instead, of)
det(day, the)
nummod(day, four)
obl(come, day)
nsubj(work, she)
advmod(work, now)
acl:relcl(day, work)
punct(think, .)
advmod(remain, outside)
punct(remain, ,)
advmod(handful, only)
det(handful, a)
nsubj(remain, handful)
case(reporter, of)
nmod(handful, reporter)
root(ROOT, remain)
punct(remain, .)
det(bulk, the)
nsubj(cover, bulk)
case(corps, of)
det(corps, the)
compound(corps, press)
nmod(bulk, corps)
aux(cover, be)
root(ROOT, cover)
nmod:poss(conference, Rheinholdt)
case(Rheinholdt, 's)
obj(cover, conference)
punct(cover, .)
case(contrast, in)
obl(be, contrast)
case(caravan, to)
det(caravan, the)
nmod(contrast, caravan)
case(night, of)
det(night, the)
amod(night, previous)
nmod(caravan, night)
punct(be, ,)
expl(be, there)
root(ROOT, be)
advmod(four, only)
nummod(car, four)
nsubj(be, car)
acl(car, park)
case(street, across)
det(street, the)
obl(park, street)
punct(be, .)
nummod(man, two)
nsubj(sipping, man)
nsubj(recognize, he)
aux(recognize, do)
advmod(recognize, not)
acl:relcl(man, recognize)
aux(sipping, be)
root(ROOT, sipping)
obj(sipping, coffee)
cc(munch, and)
conj(sipping, munch)
amod(roll, sweet)
obj(munch, roll)
punct(sipping, .)
nsubj(see, he)
aux(see, do)
advmod(see, not)
root(ROOT, see)
obj(see, sparl)
punct(DeGroot, ,)
cc(DeGroot, or)
conj(sparl, DeGroot)
punct(Ringel, ,)
cc(Ringel, or)
conj(sparl, Ringel)
punct(any, ,)
cc(any, or)
conj(sparl, any)
case(crew, of)
det(crew, the)
amod(crew, feverish)
nmod(any, crew)
nsubj(harass, that)
aux(harass, have)
advmod(harass, so)
acl:relcl(crew, harass)
obj(harass, he)
nummod(hour, twelve)
obl:npmod(ago, hour)
advmod(harass, ago)
punct(see, .)
advmod(remain, however)
punct(remain, ,)
det(litter, the)
nsubj(remain, litter)
root(ROOT, remain)
punct(remain, ,)
advcl(remain, augment)
case(supper, by)
amod(supper, several)
compound(supper, dozen)
compound(supper, lunchroom)
obl(augment, supper)
punct(remain, .)
det(cleaner, the)
compound(cleaner, street)
nsubj(around, cleaner)
aux(around, have)
advmod(around, not)
advmod(around, yet)
cop(around, be)
root(ROOT, around)
punct(around, .)
nsubj(call, one)
case(reporter, of)
det(reporter, the)
nmod(one, reporter)
root(ROOT, call)
case(he, to)
obl(call, he)
punct(call, :)
punct(call, ``)
root(ROOT, anything)
amod(anything, new)
punct(anything, ,)
appos(anything, Lieutenant)
punct(anything, '')
punct(anything, ?)
punct(anything, ?)
cc(ignore, and)
nsubj(ignore, he)
root(ROOT, ignore)
obj(ignore, he)
punct(ignore, ,)
advcl(ignore, skirt)
det(car, the)
amod(car, park)
obj(skirt, car)
cc(walk, and)
conj(skirt, walk)
compound:prt(walk, up)
det(path, the)
obj(walk, path)
case(house, to)
det(house, the)
compound(house, Skopas)
nmod(path, house)
punct(ignore, .)
mark(door, when)
nsubj(door, McFeeley)
cop(door, be)
advmod(door, halfway)
case(door, to)
det(door, the)
advcl(emerge, door)
punct(emerge, ,)
det(proprietor, the)
nsubj(emerge, proprietor)
conj(ignore, emerge)
punct(emerge, --)
det(man, a)
amod(man, mountainous)
punct(man, ,)
amod(man, dark)
obj(emerge, man)
punct(man, ,)
nmod:poss(head, he)
appos(man, head)
amod(man, thick)
case(hair, with)
amod(hair, resiny)
amod(hair, black)
obl(thick, hair)
punct(eye, ,)
nmod:poss(eye, he)
conj(hair, eye)
case(two, like)
nmod(eye, two)
case(olife, of)
det(olife, the)
amod(olife, black)
nmod(two, olife)
nsubj(import, he)
acl:relcl(olife, import)
case(boatload, in)
obl(import, boatload)
punct(identify, .)
nsubj(identify, McFeeley)
advcl(import, identify)
obj(identify, himself)
punct(ignore, .)
det(master, the)
nsubj(consent, master)
case(house, of)
det(house, the)
nmod(master, house)
punct(house, ,)
nmod:poss(unrevealing, he)
amod(unrevealing, nourish)
compound(unrevealing, face)
appos(house, unrevealing)
punct(consent, ,)
root(ROOT, consent)
mark(postpone, to)
xcomp(consent, postpone)
nmod:poss(departure, he)
obj(postpone, departure)
det(minute, a)
amod(minute, few)
obl:tmod(postpone, minute)
mark(talk, to)
advcl(postpone, talk)
case(detective, to)
det(detective, the)
obl(talk, detective)
punct(consent, .)
advmod(seem, inside)
punct(seem, ,)
advmod(soon, as)
advmod(seem, soon)
mark(disclose, as)
nsubj(disclose, Mr.)
flat(Mr., Skopas)
aux(disclose, have)
advcl(soon, disclose)
punct(disclose, --)
case(whisper, in)
det(whisper, a)
amod(whisper, hoarse)
obl(disclose, whisper)
punct(whisper, --)
det(detective, the)
nmod:poss(errand, detective)
case(detective, 's)
nsubj(gather, errand)
punct(gather, ,)
nmod:poss(family, he)
nsubj(gather, family)
acl:relcl(whisper, gather)
case(huddle, in)
det(huddle, a)
obl(gather, huddle)
punct(gather, ,)
advcl(gather, form)
det(mass, a)
obj(form, mass)
case(flesh, of)
amod(flesh, dark)
nmod(mass, flesh)
nmod(flesh, on)
cc(sofa, and)
case(sofa, around)
det(sofa, a)
amod(sofa, brocaded)
nmod(mass, sofa)
nsubj(stand, which)
acl:relcl(sofa, stand)
case(side, at)
nummod(side, one)
obl(stand, side)
case(fireplace, of)
det(fireplace, a)
amod(fireplace, baroque)
nmod(side, fireplace)
punct(stand, .)
acl(fireplace, Flanked)
case(urn, by)
amod(urn, marble)
obl(Flanked, urn)
cc(lamp, and)
compound(lamp, alabaster)
conj(urn, lamp)
punct(seem, ,)
nsubj(seem, they)
root(ROOT, seem)
mark(pose, to)
aux(pose, be)
xcomp(seem, pose)
case(portrait, for)
det(portrait, a)
amod(portrait, tribal)
obl(pose, portrait)
punct(seem, .)
expl(amazing, it)
cop(amazing, be)
root(ROOT, amazing)
advmod(herd, how)
nsubj(herd, they)
aux(herd, have)
csubj(amazing, herd)
advmod(herd, together)
case(protection, for)
obl(herd, protection)
punct(herd, :)
det(matriarch, a)
amod(matriarch, enormous)
parataxis(herd, matriarch)
case(wrapper, in)
det(wrapper, a)
amod(wrapper, quilt)
compound(wrapper, silk)
nmod(matriarch, wrapper)
punct(matriarch, ,)
acl(matriarch, rise)
case(table, from)
det(table, the)
compound(table, breakfast)
obl(rise, table)
punct(matriarch, ;)
punct(boy, ;)
det(boy, a)
amod(boy, gross)
conj(matriarch, boy)
case(teens, in)
nmod:poss(teens, he)
nmod(boy, teens)
punct(shuffle, ,)
acl(boy, shuffle)
advmod(shuffle, in)
case(kitchen, from)
det(kitchen, the)
obl(shuffle, kitchen)
case(sandwich, with)
det(sandwich, a)
obl(shuffle, sandwich)
case(hand, in)
nmod:poss(hand, he)
nmod(sandwich, hand)
punct(girl, ;)
punct(girl, ;)
det(girl, a)
conj(matriarch, girl)
case(twenty, in)
nmod:poss(twenty, she)
nmod(girl, twenty)
punct(fat, ,)
conj(girl, fat)
cc(sull, and)
conj(fat, sull)
punct(descend, ,)
list(fat, descend)
det(staircase, the)
amod(staircase, marble)
obj(descend, staircase)
punct(descend, ;)
punct(gather, ;)
advmod(gather, then)
det(gather, all)
nummod(gather, four)
conj(girl, gather)
case(sofa, on)
det(sofa, the)
nmod(gather, sofa)
mark(face, to)
advcl(gather, face)
det(inquisitor, the)
obj(face, inquisitor)
punct(amazing, .)
nsubj(answer, they)
root(ROOT, answer)
obj(answer, he)
case(monosyllable, in)
obl(answer, monosyllable)
punct(monosyllable, ,)
appos(monosyllable, nod)
punct(answer, ,)
advmod(mutter, occasionally)
advcl(answer, mutter)
case(Greek, in)
obl(mutter, Greek)
case(another, to)
nummod(another, one)
obl(mutter, another)
punct(mutter, ,)
conj(mutter, await)
det(word, the)
obj(await, word)
case(Papa, from)
nmod(word, Papa)
punct(Papa, ,)
nsubj(crack, who)
advmod(crack, restlessly)
acl:relcl(Papa, crack)
nmod:poss(knuckle, he)
obj(crack, knuckle)
punct(anxious, ,)
conj(crack, anxious)
case(stuff, to)
obl(anxious, stuff)
nmod:npmod(stuff, himself)
case(cadillac, into)
nmod:poss(cadillac, he)
amod(cadillac, white)
obl(anxious, cadillac)
cc(burst, and)
conj(crack, burst)
compound:prt(burst, off)
case(freeway, to)
det(freeway, the)
obl(burst, freeway)
punct(answer, .)
discourse(see, no)
punct(see, ,)
nsubj(see, they)
aux(see, have)
advmod(see, not)
root(ROOT, see)
obj(see, anyone)
advmod(see, around)
punct(see, ;)
punct(see, ;)
discourse(know, no)
punct(know, ,)
nsubj(know, they)
aux(know, do)
advmod(know, not)
parataxis(see, know)
det(family, the)
compound(family, Andrus)
obj(know, family)
punct(see, ;)
punct(see, ;)
discourse(read, yes)
punct(read, ,)
nsubj(read, they)
aux(read, have)
parataxis(see, read)
case(case, about)
det(case, the)
obl(read, case)
punct(see, ;)
punct(see, ;)
discourse(let, yes)
punct(let, ,)
nsubj(let, they)
aux(let, have)
parataxis(read, let)
det(reporter, some)
obj(let, reporter)
xcomp(let, use)
nmod:poss(phone, they)
obj(use, phone)
punct(longer, ,)
cc(longer, but)
nsubj(longer, they)
aux(longer, would)
advmod(longer, no)
conj(let, longer)
punct(see, .)
nsubj(offer, they)
root(ROOT, offer)
det(opinion, no)
obj(offer, opinion)
punct(volunteer, ,)
conj(offer, volunteer)
obj(volunteer, nothing)
punct(betrayed, ,)
conj(offer, betrayed)
det(emotion, no)
obj(betrayed, emotion)
punct(offer, .)
advcl(help, study)
obj(study, they)
punct(help, ,)
nsubj(help, McFeeley)
aux(help, could)
advmod(help, not)
root(ROOT, help)
xcomp(help, make)
obj(make, comparison)
case(couple, with)
det(couple, the)
compound(couple, Andrus)
nmod(comparison, couple)
punct(help, .)
det(people, the)
compound(people, Skopas)
nsubj(seem, people)
root(ROOT, seem)
case(he, to)
obl(seem, he)
case(breed, of)
det(breed, that)
obl(seem, breed)
case(being, of)
amod(being, human)
nmod(breed, being)
nmod:poss(insularity, whose)
nsubj(free, insularity)
acl:relcl(being, free)
obj(free, they)
case(tragedy, from)
obl(free, tragedy)
punct(seem, .)
nsubj(imagine, he)
root(ROOT, imagine)
nsubj(kind, they)
cop(kind, be)
det(kind, the)
ccomp(imagine, kind)
nmod:poss(return, whose)
compound(return, tax)
nsubj:pass(examine, return)
aux:pass(examine, be)
advmod(examine, never)
acl:relcl(kind, examine)
punct(be, ()
mark(be, if)
nsubj(be, they)
advcl(examine, be)
punct(penalize, ,)
nsubj(penalize, they)
cop(penalize, be)
advmod(penalize, never)
ccomp(be, penalize)
punct(penalize, ))
punct(penalize, ,)
nmod:poss(child, whose)
nsubj(have, child)
parataxis(penalize, have)
det(romance, no)
amod(romance, unhappy)
obj(have, romance)
punct(romance, ,)
nmod:poss(name, whose)
nsubj(know, name)
advmod(know, never)
acl:relcl(romance, know)
obj(know, scandal)
punct(imagine, .)
det(equation, the)
nsubj(simple, equation)
cop(simple, be)
root(ROOT, simple)
punct(simple, :)
nsubj(bring, wealth)
parataxis(simple, bring)
iobj(bring, they)
obj(bring, happiness)
punct(warning, ,)
cc(warning, and)
nmod:poss(front, they)
amod(front, united)
nsubj(warning, front)
case(world, to)
det(world, the)
nmod(front, world)
cop(warning, be)
nmod:poss(warning, they)
conj(simple, warning)
mark(mean, that)
nsubj(mean, they)
acl:relcl(warning, mean)
mark(keep, to)
xcomp(mean, keep)
obj(keep, everything)
nsubj(have, they)
acl:relcl(everything, have)
punct(let, ,)
conj(keep, let)
det(one, no)
obj(let, one)
advmod(let, in)
case(secret, on)
det(secret, the)
obl(let, secret)
punct(simple, .)
case(comparison, by)
obl(quiver, comparison)
punct(quiver, ,)
nsubj(quiver, Fritzie)
cc(Laura, and)
conj(Fritzie, Laura)
flat(Laura, Andrus)
aux(quiver, be)
root(ROOT, quiver)
obj(quiver, fledgling)
punct(quiver, .)
nsubj(possess, they)
root(ROOT, possess)
det(fortification, no)
amod(fortification, outer)
obj(possess, fortification)
punct(fortification, ,)
det(shell, no)
amod(shell, hard)
appos(fortification, shell)
case(confidence, of)
nmod(shell, confidence)
punct(possess, ;)
punct(possess, ;)
nsubj(have, they)
parataxis(possess, have)
amod(difficulty, enough)
obj(have, difficulty)
acl(difficulty, get)
case(day, from)
obl(get, day)
case(day, to)
nmod(day, day)
punct(have, ,)
conj(have, let)
advmod(have, alone)
xcomp(let, have)
det(thrust, a)
amod(thrust, awful)
compound(thrust, crime)
obj(have, thrust)
case(they, upon)
obl(have, they)
punct(possess, .)
nsubj(express, Skopas)
root(ROOT, express)
det(curiosity, no)
obj(express, curiosity)
case(case, over)
det(case, the)
obl(express, case)
punct(offer, ,)
conj(express, offer)
det(expression, no)
obj(offer, expression)
case(sympathy, of)
nmod(expression, sympathy)
punct(make, ,)
conj(express, make)
det(move, no)
obj(make, move)
mark(escort, to)
acl(move, escort)
obj(escort, McFeely)
case(door, to)
det(door, the)
obl(escort, door)
punct(express, .)
det(four, all)
nsubj(remain, four)
root(ROOT, remain)
xcomp(remain, impact)
case(sofa, on)
det(sofa, the)
obl(impact, sofa)
mark(leave, until)
nsubj(leave, he)
aux(leave, have)
advcl(impact, leave)
punct(remain, .)
nsubj(speak, he)
aux(speak, have)
root(ROOT, speak)
case(Mrs, to)
obl(speak, Mrs)
punct(speak, .)
punct(speak, .)
root(ROOT, Emerson)
det(day, the)
amod(day, previous)
nmod:tmod(Emerson, day)
punct(Emerson, .)
expl(remain, there)
root(ROOT, remain)
det(family, a)
nsubj(remain, family)
acl(family, name)
xcomp(name, Kahler)
punct(Kahler, ,)
appos(Kahler, owner)
case(house, of)
det(house, a)
nummod(story, two)
punct(story, -)
compound(house, story)
compound(style, Tudor)
punct(style, -)
compound(house, style)
nmod(owner, house)
case(side, on)
det(side, the)
amod(side, south)
nmod(house, side)
case(Andrus, of)
det(Andrus, the)
nmod(side, Andrus)
flat(Andrus, home)
punct(come, .)
nmod:poss(name, they)
nsubj(come, name)
aux(come, have)
advmod(come, not)
parataxis(remain, come)
compound:prt(come, up)
case(discussion, in)
det(discussion, any)
obl(come, discussion)
case(Laura, with)
nmod(discussion, Laura)
punct(have, ,)
cc(have, and)
nsubj(have, he)
conj(come, have)
det(idea, no)
obj(have, idea)
obj(be, what)
nsubj(be, they)
aux(be, would)
acl:relcl(idea, be)
mark(be, like)
punct(note, .)
nsubj(note, McFeeley)
advcl(have, note)
det(lawn, the)
amod(lawn, immaculate)
obj(note, lawn)
cc(garden, and)
conj(lawn, garden)
punct(blade, :)
det(blade, each)
appos(lawn, blade)
case(grass, of)
nmod(blade, grass)
acl(blade, crop)
punct(bright, ,)
conj(crop, bright)
cc(firm, and)
conj(crop, firm)
punct(blade, ;)
punct(blade, ;)
det(shrub, each)
nsubj(glaze, shrub)
acl(blade, glaze)
case(health, with)
amod(health, good)
obl(glaze, health)
punct(remain, .)
